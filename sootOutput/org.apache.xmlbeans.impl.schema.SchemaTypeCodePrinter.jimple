public final class org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter extends java.lang.Object implements org.apache.xmlbeans.SchemaCodePrinter
{
    java.io.Writer _writer;
    int _indent;
    boolean _useJava15;
    static final java.lang.String LINE_SEPARATOR;
    static final java.lang.String MAX_SPACES;
    static final int INDENT_INCREMENT;
    public static final java.lang.String INDEX_CLASSNAME;
    private static final int NOTHING;
    private static final int ADD_NEW_VALUE;
    private static final int THROW_EXCEPTION;
    static final boolean $assertionsDisabled;
    static java.lang.Class class$org$apache$xmlbeans$impl$schema$SchemaTypeCodePrinter;

    public static void printTypeImpl(java.io.Writer, org.apache.xmlbeans.SchemaType, org.apache.xmlbeans.XmlOptions) throws java.io.IOException
    {
        org.apache.xmlbeans.SchemaCodePrinter $r1;
        org.apache.xmlbeans.XmlOptions r0;
        java.io.Writer r2;
        org.apache.xmlbeans.SchemaType r3;

        r2 := @parameter0: java.io.Writer;

        r3 := @parameter1: org.apache.xmlbeans.SchemaType;

        r0 := @parameter2: org.apache.xmlbeans.XmlOptions;

        $r1 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: org.apache.xmlbeans.SchemaCodePrinter getPrinter(org.apache.xmlbeans.XmlOptions)>(r0);

        interfaceinvoke $r1.<org.apache.xmlbeans.SchemaCodePrinter: void printTypeImpl(java.io.Writer,org.apache.xmlbeans.SchemaType)>(r2, r3);

        return;
    }

    public static void printType(java.io.Writer, org.apache.xmlbeans.SchemaType, org.apache.xmlbeans.XmlOptions) throws java.io.IOException
    {
        org.apache.xmlbeans.SchemaCodePrinter $r1;
        org.apache.xmlbeans.XmlOptions r0;
        java.io.Writer r2;
        org.apache.xmlbeans.SchemaType r3;

        r2 := @parameter0: java.io.Writer;

        r3 := @parameter1: org.apache.xmlbeans.SchemaType;

        r0 := @parameter2: org.apache.xmlbeans.XmlOptions;

        $r1 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: org.apache.xmlbeans.SchemaCodePrinter getPrinter(org.apache.xmlbeans.XmlOptions)>(r0);

        interfaceinvoke $r1.<org.apache.xmlbeans.SchemaCodePrinter: void printType(java.io.Writer,org.apache.xmlbeans.SchemaType)>(r2, r3);

        return;
    }

    public static void printLoader(java.io.Writer, org.apache.xmlbeans.SchemaTypeSystem, org.apache.xmlbeans.XmlOptions) throws java.io.IOException
    {
        org.apache.xmlbeans.SchemaCodePrinter $r1;
        org.apache.xmlbeans.XmlOptions r0;
        org.apache.xmlbeans.SchemaTypeSystem r3;
        java.io.Writer r2;

        r2 := @parameter0: java.io.Writer;

        r3 := @parameter1: org.apache.xmlbeans.SchemaTypeSystem;

        r0 := @parameter2: org.apache.xmlbeans.XmlOptions;

        $r1 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: org.apache.xmlbeans.SchemaCodePrinter getPrinter(org.apache.xmlbeans.XmlOptions)>(r0);

        interfaceinvoke $r1.<org.apache.xmlbeans.SchemaCodePrinter: void printLoader(java.io.Writer,org.apache.xmlbeans.SchemaTypeSystem)>(r2, r3);

        return;
    }

    private static org.apache.xmlbeans.SchemaCodePrinter getPrinter(org.apache.xmlbeans.XmlOptions)
    {
        org.apache.xmlbeans.SchemaCodePrinter $r4;
        org.apache.xmlbeans.XmlOptions r0;
        java.lang.Object $r1, r3;
        org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter $r2;
        boolean $z0;

        r0 := @parameter0: org.apache.xmlbeans.XmlOptions;

        $r1 = staticinvoke <org.apache.xmlbeans.XmlOptions: java.lang.Object safeGet(org.apache.xmlbeans.XmlOptions,java.lang.Object)>(r0, "SCHEMA_CODE_PRINTER");

        r3 = $r1;

        if $r1 == null goto label1;

        $z0 = $r1 instanceof org.apache.xmlbeans.SchemaCodePrinter;

        if $z0 != 0 goto label2;

     label1:
        $r2 = new org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter;

        specialinvoke $r2.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void <init>(org.apache.xmlbeans.XmlOptions)>(r0);

        r3 = $r2;

     label2:
        $r4 = (org.apache.xmlbeans.SchemaCodePrinter) r3;

        return $r4;
    }

    public void <init>(org.apache.xmlbeans.XmlOptions)
    {
        org.apache.xmlbeans.XmlOptions r1;
        java.lang.Object $r3;
        java.lang.String $r2, r4;
        org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter;

        r1 := @parameter0: org.apache.xmlbeans.XmlOptions;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: int _indent> = 0;

        r4 = null;

        if r1 == null goto label1;

        $z1 = staticinvoke <org.apache.xmlbeans.XmlOptions: boolean hasOption(org.apache.xmlbeans.XmlOptions,java.lang.Object)>(r1, "GENERATE_JAVA_VERSION");

        if $z1 == 0 goto label1;

        $r3 = virtualinvoke r1.<org.apache.xmlbeans.XmlOptions: java.lang.Object get(java.lang.Object)>("GENERATE_JAVA_VERSION");

        r4 = (java.lang.String) $r3;

     label1:
        if r4 != null goto label2;

        r4 = "1.4";

     label2:
        $r2 = "1.5";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: boolean _useJava15> = $z0;

        return;
    }

    void indent()
    {
        int $i0, $i1;
        org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter r0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter;

        $i0 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: int _indent>;

        $i1 = $i0 + 4;

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: int _indent> = $i1;

        return;
    }

    void outdent()
    {
        int $i0, $i1;
        org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter r0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter;

        $i0 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: int _indent>;

        $i1 = $i0 - 4;

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: int _indent> = $i1;

        return;
    }

    java.lang.String encodeString(java.lang.String)
    {
        char $c1;
        java.lang.StringBuffer $r4;
        int $i0, i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String r1, $r2;
        org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter r3;

        r3 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter;

        r1 := @parameter0: java.lang.String;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34);

        i2 = 0;

     label1:
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if i2 >= $i0 goto label8;

        $c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i2);

        $i3 = (int) $c1;

        if $i3 != 34 goto label2;

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(92);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34);

        goto label7;

     label2:
        $i4 = (int) $c1;

        if $i4 != 92 goto label3;

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(92);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(92);

        goto label7;

     label3:
        $i5 = (int) $c1;

        if $i5 != 13 goto label4;

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(92);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(114);

        goto label7;

     label4:
        $i6 = (int) $c1;

        if $i6 != 10 goto label5;

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(92);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(110);

        goto label7;

     label5:
        $i7 = (int) $c1;

        if $i7 != 9 goto label6;

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(92);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(116);

        goto label7;

     label6:
        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

     label7:
        i2 = i2 + 1;

        goto label1;

     label8:
        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34);

        $r2 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    void emit(java.lang.String) throws java.io.IOException
    {
        java.nio.charset.CharacterCodingException $r12;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6;
        java.lang.String $r1, $r2, $r3, $r5, r6, $r8, $r10, $r11, $r14;
        java.io.Writer $r4, $r7, $r9, $r13;
        org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter r0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter;

        r6 := @parameter0: java.lang.String;

        i6 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: int _indent>;

        $r1 = "                                        ";

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i1 = $i0 / 2;

        if i6 <= $i1 goto label1;

        $r11 = "                                        ";

        $i3 = virtualinvoke $r11.<java.lang.String: int length()>();

        $i5 = $i3 / 4;

        $i4 = i6 / 2;

        i6 = $i5 + $i4;

     label1:
        $r2 = "                                        ";

        $i2 = virtualinvoke $r2.<java.lang.String: int length()>();

        if i6 <= $i2 goto label2;

        $r10 = "                                        ";

        i6 = virtualinvoke $r10.<java.lang.String: int length()>();

     label2:
        $r4 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: java.io.Writer _writer>;

        $r3 = "                                        ";

        $r5 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(0, i6);

        virtualinvoke $r4.<java.io.Writer: void write(java.lang.String)>($r5);

     label3:
        $r7 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: java.io.Writer _writer>;

        virtualinvoke $r7.<java.io.Writer: void write(java.lang.String)>(r6);

     label4:
        goto label6;

     label5:
        $r12 := @caughtexception;

        $r13 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: java.io.Writer _writer>;

        $r14 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: java.lang.String makeSafe(java.lang.String)>(r6);

        virtualinvoke $r13.<java.io.Writer: void write(java.lang.String)>($r14);

     label6:
        $r9 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: java.io.Writer _writer>;

        $r8 = <org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: java.lang.String LINE_SEPARATOR>;

        virtualinvoke $r9.<java.io.Writer: void write(java.lang.String)>($r8);

        return;

        catch java.nio.charset.CharacterCodingException from label3 to label4 with label5;
    }

    private static java.lang.String makeSafe(java.lang.String)
    {
        java.lang.IllegalStateException $r13, $r15;
        java.nio.charset.Charset $r1;
        java.lang.StringBuffer $r7, $r8, $r9, $r10, $r14;
        int $i0, $i2, i4, $i5, $i6;
        java.lang.String $r0, r4, $r5, $r6;
        boolean $z0, $z1;
        char $c1, $c3;
        java.nio.charset.CharsetEncoder $r2;

        r4 := @parameter0: java.lang.String;

        $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("file.encoding");

        $r1 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>($r0);

        if $r1 != null goto label01;

        $r13 = new java.lang.IllegalStateException;

        specialinvoke $r13.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Default character set is null!");

        throw $r13;

     label01:
        $r2 = virtualinvoke $r1.<java.nio.charset.Charset: java.nio.charset.CharsetEncoder newEncoder()>();

        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        i4 = 0;

     label02:
        $i0 = virtualinvoke r4.<java.lang.String: int length()>();

        if i4 >= $i0 goto label04;

        $c3 = virtualinvoke r4.<java.lang.String: char charAt(int)>(i4);

        $z1 = virtualinvoke $r2.<java.nio.charset.CharsetEncoder: boolean canEncode(char)>($c3);

        if $z1 != 0 goto label03;

        goto label04;

     label03:
        i4 = i4 + 1;

        goto label02;

     label04:
        $i5 = virtualinvoke r4.<java.lang.String: int length()>();

        if i4 >= $i5 goto label12;

        $c1 = virtualinvoke r4.<java.lang.String: char charAt(int)>(i4);

        $z0 = virtualinvoke $r2.<java.nio.charset.CharsetEncoder: boolean canEncode(char)>($c1);

        if $z0 == 0 goto label05;

        virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

        goto label11;

     label05:
        $i6 = (int) $c1;

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i6);

        $i2 = virtualinvoke $r6.<java.lang.String: int length()>();

        tableswitch($i2)
        {
            case 1: goto label06;
            case 2: goto label07;
            case 3: goto label08;
            case 4: goto label09;
            default: goto label10;
        };

     label06:
        $r10 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\u000");

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        goto label11;

     label07:
        $r9 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\u00");

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        goto label11;

     label08:
        $r8 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\u0");

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        goto label11;

     label09:
        $r7 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\u");

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        goto label11;

     label10:
        $r15 = new java.lang.IllegalStateException;

        specialinvoke $r15.<java.lang.IllegalStateException: void <init>()>();

        throw $r15;

     label11:
        i4 = i4 + 1;

        goto label04;

     label12:
        $r5 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }

    public void printType(java.io.Writer, org.apache.xmlbeans.SchemaType) throws java.io.IOException
    {
        org.apache.xmlbeans.SchemaTypeSystem $r3;
        java.io.Writer r1, $r4;
        org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter r0;
        org.apache.xmlbeans.SchemaType r2;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter;

        r1 := @parameter0: java.io.Writer;

        r2 := @parameter1: org.apache.xmlbeans.SchemaType;

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: java.io.Writer _writer> = r1;

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printTopComment(org.apache.xmlbeans.SchemaType)>(r2);

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printPackage(org.apache.xmlbeans.SchemaType,boolean)>(r2, 1);

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("");

        $r3 = interfaceinvoke r2.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaTypeSystem getTypeSystem()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printInnerType(org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.SchemaTypeSystem)>(r2, $r3);

        $r4 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: java.io.Writer _writer>;

        virtualinvoke $r4.<java.io.Writer: void flush()>();

        return;
    }

    public void printTypeImpl(java.io.Writer, org.apache.xmlbeans.SchemaType) throws java.io.IOException
    {
        org.apache.xmlbeans.SchemaTypeSystem $r3;
        java.io.Writer r1;
        org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter r0;
        org.apache.xmlbeans.SchemaType r2;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter;

        r1 := @parameter0: java.io.Writer;

        r2 := @parameter1: org.apache.xmlbeans.SchemaType;

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: java.io.Writer _writer> = r1;

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printTopComment(org.apache.xmlbeans.SchemaType)>(r2);

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printPackage(org.apache.xmlbeans.SchemaType,boolean)>(r2, 0);

        $r3 = interfaceinvoke r2.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaTypeSystem getTypeSystem()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printInnerTypeImpl(org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.SchemaTypeSystem,boolean)>(r2, $r3, 0);

        return;
    }

    java.lang.String findJavaType(org.apache.xmlbeans.SchemaType)
    {
        java.lang.String $r0, $r1;
        org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter r2;
        org.apache.xmlbeans.SchemaType r3;

        r2 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter;

        r3 := @parameter0: org.apache.xmlbeans.SchemaType;

     label1:
        $r0 = interfaceinvoke r3.<org.apache.xmlbeans.SchemaType: java.lang.String getFullJavaName()>();

        if $r0 != null goto label2;

        r3 = interfaceinvoke r3.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType getBaseType()>();

        goto label1;

     label2:
        $r1 = interfaceinvoke r3.<org.apache.xmlbeans.SchemaType: java.lang.String getFullJavaName()>();

        return $r1;
    }

    static java.lang.String prettyQName(javax.xml.namespace.QName)
    {
        java.lang.StringBuffer $r3, $r4, $r5, $r7, $r8;
        javax.xml.namespace.QName r0;
        java.lang.String $r1, $r2, $r6, r9;

        r0 := @parameter0: javax.xml.namespace.QName;

        $r1 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        r9 = $r1;

        $r2 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        if $r2 == null goto label1;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(@");

        $r6 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

     label1:
        return r9;
    }

    void printInnerTypeJavaDoc(org.apache.xmlbeans.SchemaType) throws java.io.IOException
    {
        org.apache.xmlbeans.SchemaType[] $r10;
        org.apache.xmlbeans.SchemaType r0, $r5, $r13;
        boolean $z0, $z1, $z2, $z3;
        javax.xml.namespace.QName $r1, r43;
        org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter r2;
        org.apache.xmlbeans.SchemaField $r41, $r42;
        java.lang.StringBuffer $r3, $r4, $r7, $r8, $r11, $r12, $r15, $r17, $r18, $r20, $r21, $r23, $r24, $r26, $r27, $r29, $r30, $r32, $r33, $r35, $r36, $r38, $r39;
        int $i0, $i1, i2;
        java.lang.String $r6, $r9, $r14, $r16, $r19, $r22, $r25, $r28, $r31, $r34, $r37, $r40;

        r2 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter;

        r0 := @parameter0: org.apache.xmlbeans.SchemaType;

        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        r43 = $r1;

        if $r1 != null goto label03;

        $z1 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: boolean isDocumentType()>();

        if $z1 == 0 goto label01;

        r43 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getDocumentElementName()>();

        goto label03;

     label01:
        $z2 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: boolean isAttributeType()>();

        if $z2 == 0 goto label02;

        r43 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getAttributeTypeAttributeName()>();

        goto label03;

     label02:
        $r41 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaField getContainerField()>();

        if $r41 == null goto label03;

        $r42 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaField getContainerField()>();

        r43 = interfaceinvoke $r42.<org.apache.xmlbeans.SchemaField: javax.xml.namespace.QName getName()>();

     label03:
        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("/**");

        $z3 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: boolean isDocumentType()>();

        if $z3 == 0 goto label04;

        $r35 = new java.lang.StringBuffer;

        specialinvoke $r35.<java.lang.StringBuffer: void <init>()>();

        $r36 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" * A document containing one ");

        $r37 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: java.lang.String prettyQName(javax.xml.namespace.QName)>(r43);

        $r38 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r37);

        $r39 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" element.");

        $r40 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r40);

        goto label07;

     label04:
        $z0 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: boolean isAttributeType()>();

        if $z0 == 0 goto label05;

        $r29 = new java.lang.StringBuffer;

        specialinvoke $r29.<java.lang.StringBuffer: void <init>()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" * A document containing one ");

        $r31 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: java.lang.String prettyQName(javax.xml.namespace.QName)>(r43);

        $r32 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" attribute.");

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r34);

        goto label07;

     label05:
        if r43 == null goto label06;

        $r23 = new java.lang.StringBuffer;

        specialinvoke $r23.<java.lang.StringBuffer: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" * An XML ");

        $r25 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: java.lang.String prettyQName(javax.xml.namespace.QName)>(r43);

        $r26 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r28);

        goto label07;

     label06:
        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>(" * An anonymous inner XML type.");

     label07:
        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>(" *");

        $i1 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: int getSimpleVariety()>();

        tableswitch($i1)
        {
            case 0: goto label08;
            case 1: goto label09;
            case 2: goto label11;
            case 3: goto label10;
            default: goto label13;
        };

     label08:
        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>(" * This is a complex type.");

        goto label13;

     label09:
        $r17 = new java.lang.StringBuffer;

        specialinvoke $r17.<java.lang.StringBuffer: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" * This is an atomic type that is a restriction of ");

        $r19 = specialinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: java.lang.String getFullJavaName(org.apache.xmlbeans.SchemaType)>(r0);

        $r20 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r22);

        goto label13;

     label10:
        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" * This is a list type whose items are ");

        $r5 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType getListItemType()>();

        $r6 = interfaceinvoke $r5.<org.apache.xmlbeans.SchemaType: java.lang.String getFullJavaName()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r9);

        goto label13;

     label11:
        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>(" * This is a union type. Instances are of one of the following types:");

        $r10 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType[] getUnionConstituentTypes()>();

        i2 = 0;

     label12:
        $i0 = lengthof $r10;

        if i2 >= $i0 goto label13;

        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" *     ");

        $r13 = $r10[i2];

        $r14 = interfaceinvoke $r13.<org.apache.xmlbeans.SchemaType: java.lang.String getFullJavaName()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r16);

        i2 = i2 + 1;

        goto label12;

     label13:
        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>(" */");

        return;
    }

    private java.lang.String getFullJavaName(org.apache.xmlbeans.SchemaType)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeImpl r3;
        java.lang.String r4;
        org.apache.xmlbeans.SchemaType r0, $r1;
        org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter r2;
        boolean $z0;

        r2 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter;

        r0 := @parameter0: org.apache.xmlbeans.SchemaType;

        r3 = (org.apache.xmlbeans.impl.schema.SchemaTypeImpl) r0;

        r4 = virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: java.lang.String getFullJavaName()>();

     label1:
        $z0 = virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: boolean isRedefinition()>();

        if $z0 == 0 goto label2;

        r4 = virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: java.lang.String getFullJavaName()>();

        $r1 = virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: org.apache.xmlbeans.SchemaType getBaseType()>();

        r3 = (org.apache.xmlbeans.impl.schema.SchemaTypeImpl) $r1;

        goto label1;

     label2:
        return r4;
    }

    private java.lang.String getUserTypeStaticHandlerMethod(boolean, org.apache.xmlbeans.impl.schema.SchemaTypeImpl)
    {
        java.lang.StringBuffer $r3, $r6, $r8, $r9, $r11, $r12, $r13, $r15, $r17, $r18, $r19;
        int $i0;
        org.apache.xmlbeans.impl.schema.SchemaTypeImpl r0;
        java.lang.String $r2, $r4, $r5, $r7, $r10, $r14, $r16, $r20, r22;
        boolean z0;
        javax.xml.namespace.QName $r1;
        org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter r21;

        r21 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter;

        z0 := @parameter0: boolean;

        r0 := @parameter1: org.apache.xmlbeans.impl.schema.SchemaTypeImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: javax.xml.namespace.QName getName()>();

        $r2 = virtualinvoke $r1.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 >= 2 goto label1;

        r22 = virtualinvoke $r2.<java.lang.String: java.lang.String toUpperCase()>();

        goto label2;

     label1:
        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, 1);

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String toUpperCase()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>(1);

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        r22 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

     label2:
        if z0 == 0 goto label3;

        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r16 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: java.lang.String getUserTypeHandlerName()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".encode");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r22);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r20;

     label3:
        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: java.lang.String getUserTypeHandlerName()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".decode");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r22);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r14;
    }

    public static java.lang.String indexClassForSystem(org.apache.xmlbeans.SchemaTypeSystem)
    {
        org.apache.xmlbeans.SchemaTypeSystem r0;
        java.lang.StringBuffer $r2, $r3, $r4, $r5;
        java.lang.String $r1, $r6;

        r0 := @parameter0: org.apache.xmlbeans.SchemaTypeSystem;

        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaTypeSystem: java.lang.String getName()>();

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("TypeSystemHolder");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r6;
    }

    static java.lang.String shortIndexClassForSystem(org.apache.xmlbeans.SchemaTypeSystem)
    {
        org.apache.xmlbeans.SchemaTypeSystem r0;

        r0 := @parameter0: org.apache.xmlbeans.SchemaTypeSystem;

        return "TypeSystemHolder";
    }

    void printStaticTypeDeclaration(org.apache.xmlbeans.SchemaType, org.apache.xmlbeans.SchemaTypeSystem) throws java.io.IOException
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl $r12;
        java.lang.StringBuffer $r3, $r4, $r5, $r6, $r9, $r10, $r11, $r14, $r15;
        java.lang.String $r1, $r8, $r13, $r16;
        org.apache.xmlbeans.SchemaType r0;
        org.apache.xmlbeans.SchemaTypeSystem r7;
        org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter r2;

        r2 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter;

        r0 := @parameter0: org.apache.xmlbeans.SchemaType;

        r7 := @parameter1: org.apache.xmlbeans.SchemaTypeSystem;

        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: java.lang.String getShortJavaName()>();

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)");

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void indent()>();

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".class.getClassLoader(), \"");

        $r8 = interfaceinvoke r7.<org.apache.xmlbeans.SchemaTypeSystem: java.lang.String getName()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\")");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".resolveHandle(\"");

        $r12 = (org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl) r7;

        $r13 = virtualinvoke $r12.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String handleForType(org.apache.xmlbeans.SchemaType)>(r0);

        $r14 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\");");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r16);

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void outdent()>();

        return;
    }

    public void printLoader(java.io.Writer, org.apache.xmlbeans.SchemaTypeSystem) throws java.io.IOException
    {
        java.io.Writer r1;
        org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter r0;
        org.apache.xmlbeans.SchemaTypeSystem r2;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter;

        r1 := @parameter0: java.io.Writer;

        r2 := @parameter1: org.apache.xmlbeans.SchemaTypeSystem;

        return;
    }

    void printInnerType(org.apache.xmlbeans.SchemaType, org.apache.xmlbeans.SchemaTypeSystem) throws java.io.IOException
    {
        org.apache.xmlbeans.SchemaProperty[] $r12;
        org.apache.xmlbeans.SchemaProperty r3;
        org.apache.xmlbeans.SchemaType r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        org.apache.xmlbeans.SchemaTypeSystem r2;
        javax.xml.namespace.QName $r4, $r8;
        org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter r0;
        int $i0, $i1, $i2, $i3, $i4, i5, $i6;
        java.lang.String $r5, $r6, $r7, $r9, $r10, $r11;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter;

        r1 := @parameter0: org.apache.xmlbeans.SchemaType;

        r2 := @parameter1: org.apache.xmlbeans.SchemaTypeSystem;

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("");

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printInnerTypeJavaDoc(org.apache.xmlbeans.SchemaType)>(r1);

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void startInterface(org.apache.xmlbeans.SchemaType)>(r1);

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printStaticTypeDeclaration(org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.SchemaTypeSystem)>(r1, r2);

        $z0 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: boolean isSimpleType()>();

        if $z0 == 0 goto label1;

        $z11 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: boolean hasStringEnumValues()>();

        if $z11 == 0 goto label9;

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printStringEnumeration(org.apache.xmlbeans.SchemaType)>(r1);

        goto label9;

     label1:
        $i0 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: int getContentType()>();

        if $i0 != 2 goto label2;

        $z10 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: boolean hasStringEnumValues()>();

        if $z10 == 0 goto label2;

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printStringEnumeration(org.apache.xmlbeans.SchemaType)>(r1);

     label2:
        $r12 = specialinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: org.apache.xmlbeans.SchemaProperty[] getDerivedProperties(org.apache.xmlbeans.SchemaType)>(r1);

        i5 = 0;

     label3:
        $i6 = lengthof $r12;

        if i5 >= $i6 goto label9;

        r3 = $r12[i5];

        $r4 = interfaceinvoke r3.<org.apache.xmlbeans.SchemaProperty: javax.xml.namespace.QName getName()>();

        $z1 = interfaceinvoke r3.<org.apache.xmlbeans.SchemaProperty: boolean isAttribute()>();

        $r5 = interfaceinvoke r3.<org.apache.xmlbeans.SchemaProperty: java.lang.String getJavaPropertyName()>();

        $i1 = interfaceinvoke r3.<org.apache.xmlbeans.SchemaProperty: int getJavaTypeCode()>();

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: java.lang.String javaTypeForProperty(org.apache.xmlbeans.SchemaProperty)>(r3);

        $r7 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: java.lang.String xmlTypeForProperty(org.apache.xmlbeans.SchemaProperty)>(r3);

        $i2 = interfaceinvoke r3.<org.apache.xmlbeans.SchemaProperty: int hasNillable()>();

        if $i2 == 0 goto label4;

        $z12 = 1;

        goto label5;

     label4:
        $z12 = 0;

     label5:
        $z2 = interfaceinvoke r3.<org.apache.xmlbeans.SchemaProperty: boolean extendsJavaOption()>();

        $z3 = interfaceinvoke r3.<org.apache.xmlbeans.SchemaProperty: boolean extendsJavaArray()>();

        $z4 = interfaceinvoke r3.<org.apache.xmlbeans.SchemaProperty: boolean extendsJavaSingleton()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printPropertyGetters(javax.xml.namespace.QName,boolean,java.lang.String,int,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r4, $z1, $r5, $i1, $r6, $r7, $z12, $z2, $z3, $z4);

        $z5 = interfaceinvoke r3.<org.apache.xmlbeans.SchemaProperty: boolean isReadOnly()>();

        if $z5 != 0 goto label8;

        $r8 = interfaceinvoke r3.<org.apache.xmlbeans.SchemaProperty: javax.xml.namespace.QName getName()>();

        $z6 = interfaceinvoke r3.<org.apache.xmlbeans.SchemaProperty: boolean isAttribute()>();

        $r9 = interfaceinvoke r3.<org.apache.xmlbeans.SchemaProperty: java.lang.String getJavaPropertyName()>();

        $i3 = interfaceinvoke r3.<org.apache.xmlbeans.SchemaProperty: int getJavaTypeCode()>();

        $r10 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: java.lang.String javaTypeForProperty(org.apache.xmlbeans.SchemaProperty)>(r3);

        $r11 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: java.lang.String xmlTypeForProperty(org.apache.xmlbeans.SchemaProperty)>(r3);

        $i4 = interfaceinvoke r3.<org.apache.xmlbeans.SchemaProperty: int hasNillable()>();

        if $i4 == 0 goto label6;

        $z13 = 1;

        goto label7;

     label6:
        $z13 = 0;

     label7:
        $z7 = interfaceinvoke r3.<org.apache.xmlbeans.SchemaProperty: boolean extendsJavaOption()>();

        $z8 = interfaceinvoke r3.<org.apache.xmlbeans.SchemaProperty: boolean extendsJavaArray()>();

        $z9 = interfaceinvoke r3.<org.apache.xmlbeans.SchemaProperty: boolean extendsJavaSingleton()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printPropertySetters(javax.xml.namespace.QName,boolean,java.lang.String,int,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r8, $z6, $r9, $i3, $r10, $r11, $z13, $z7, $z8, $z9);

     label8:
        i5 = i5 + 1;

        goto label3;

     label9:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printNestedInnerTypes(org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.SchemaTypeSystem)>(r1, r2);

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printFactory(org.apache.xmlbeans.SchemaType)>(r1);

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void endBlock()>();

        return;
    }

    void printFactory(org.apache.xmlbeans.SchemaType) throws java.io.IOException
    {
        org.apache.xmlbeans.SchemaType r0;
        java.lang.StringBuffer $r2, $r3, $r4, $r5, $r7, $r8, $r9, $r10, $r12, $r13, $r14, $r15, $r17, $r18, $r19, $r20, $r22, $r23, $r24, $r25, $r27, $r28, $r29, $r30, $r32, $r33, $r34, $r35, $r37, $r38, $r39, $r40, $r42, $r43, $r44, $r45, $r47, $r48, $r49, $r50, $r52, $r53, $r54, $r55, $r57, $r58, $r59, $r60, $r62, $r63, $r64, $r65, $r67, $r68, $r69, $r70, $r72, $r73, $r74, $r75, $r77, $r78, $r79, $r80, $r82, $r83, $r84, $r85, $r87, $r88, $r89, $r90, $r92, $r93, $r94, $r95, $r97, $r98, $r99, $r100, $r102, $r103, $r104, $r105, $r107, $r108, $r109, $r110, $r112, $r113, $r114, $r115, $r117, $r118, $r119, $r120, $r122, $r123, $r124, $r125, $r127, $r128, $r129, $r130, $r132, $r133, $r134, $r135, $r137, $r138, $r139, $r140, $r142, $r143, $r144, $r145, $r147, $r148, $r149, $r150, $r152, $r153, $r154, $r155, $r157, $r158, $r159, $r160, $r162, $r163, $r164, $r165, $r167, $r168, $r169, $r170, $r174, $r175, $r176, $r177, $r179, $r180, $r181, $r182, $r184, $r185, $r186, $r187, $r189, $r190, $r191, $r192;
        java.lang.String $r6, $r11, $r16, $r21, $r26, $r31, $r36, $r41, $r46, $r51, $r56, $r61, $r66, $r71, $r76, $r81, $r86, $r91, $r96, $r101, $r106, $r111, $r116, $r121, $r126, $r131, $r136, $r141, $r146, $r151, $r156, $r161, $r166, $r171, $r172, $r173, $r178, $r183, $r188, $r193;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, z10, $z11, $z12;
        org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter r1;

        r1 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter;

        r0 := @parameter0: org.apache.xmlbeans.SchemaType;

        z10 = 1;

        $z0 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: boolean isAnonymousType()>();

        if $z0 == 0 goto label1;

        $z8 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: boolean isDocumentType()>();

        if $z8 != 0 goto label1;

        $z9 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: boolean isAttributeType()>();

        if $z9 != 0 goto label1;

        z10 = 0;

     label1:
        $r172 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: java.lang.String getFullJavaName()>();

        $r173 = virtualinvoke $r172.<java.lang.String: java.lang.String replace(char,char)>(36, 46);

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("");

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("/**");

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>(" * A factory class with static methods for creating instances");

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>(" * of this type.");

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>(" */");

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("");

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("public static final class Factory");

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("{");

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void indent()>();

        $z11 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: boolean isSimpleType()>();

        if $z11 == 0 goto label2;

        $r162 = new java.lang.StringBuffer;

        specialinvoke $r162.<java.lang.StringBuffer: void <init>()>();

        $r163 = virtualinvoke $r162.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("public static ");

        $r164 = virtualinvoke $r163.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r173);

        $r165 = virtualinvoke $r164.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" newValue(java.lang.Object obj) {");

        $r166 = virtualinvoke $r165.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r166);

        $r167 = new java.lang.StringBuffer;

        specialinvoke $r167.<java.lang.StringBuffer: void <init>()>();

        $r168 = virtualinvoke $r167.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  return (");

        $r169 = virtualinvoke $r168.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r173);

        $r170 = virtualinvoke $r169.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") type.newValue( obj ); }");

        $r171 = virtualinvoke $r170.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r171);

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("");

     label2:
        $z1 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: boolean isAbstract()>();

        if $z1 == 0 goto label3;

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("/** @deprecated No need to be able to create instances of abstract types */");

        $z7 = r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: boolean _useJava15>;

        if $z7 == 0 goto label3;

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("@Deprecated");

     label3:
        $r174 = new java.lang.StringBuffer;

        specialinvoke $r174.<java.lang.StringBuffer: void <init>()>();

        $r175 = virtualinvoke $r174.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("public static ");

        $r176 = virtualinvoke $r175.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r173);

        $r177 = virtualinvoke $r176.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" newInstance() {");

        $r178 = virtualinvoke $r177.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r178);

        $r179 = new java.lang.StringBuffer;

        specialinvoke $r179.<java.lang.StringBuffer: void <init>()>();

        $r180 = virtualinvoke $r179.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  return (");

        $r181 = virtualinvoke $r180.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r173);

        $r182 = virtualinvoke $r181.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }");

        $r183 = virtualinvoke $r182.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r183);

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("");

        $z12 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: boolean isAbstract()>();

        if $z12 == 0 goto label4;

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("/** @deprecated No need to be able to create instances of abstract types */");

        $z6 = r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: boolean _useJava15>;

        if $z6 == 0 goto label4;

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("@Deprecated");

     label4:
        $r184 = new java.lang.StringBuffer;

        specialinvoke $r184.<java.lang.StringBuffer: void <init>()>();

        $r185 = virtualinvoke $r184.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("public static ");

        $r186 = virtualinvoke $r185.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r173);

        $r187 = virtualinvoke $r186.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" newInstance(org.apache.xmlbeans.XmlOptions options) {");

        $r188 = virtualinvoke $r187.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r188);

        $r189 = new java.lang.StringBuffer;

        specialinvoke $r189.<java.lang.StringBuffer: void <init>()>();

        $r190 = virtualinvoke $r189.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  return (");

        $r191 = virtualinvoke $r190.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r173);

        $r192 = virtualinvoke $r191.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }");

        $r193 = virtualinvoke $r192.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r193);

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("");

        if z10 == 0 goto label9;

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("/** @param xmlAsString the string value to parse */");

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("public static ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r173);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" parse(java.lang.String xmlAsString) throws org.apache.xmlbeans.XmlException {");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r6);

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  return (");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r173);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") org.apache.xmlbeans.XmlBeans.getContextTypeLoader().parse( xmlAsString, type, null ); }");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r11);

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("");

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("public static ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r173);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" parse(java.lang.String xmlAsString, org.apache.xmlbeans.XmlOptions options) throws org.apache.xmlbeans.XmlException {");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r16);

        $r17 = new java.lang.StringBuffer;

        specialinvoke $r17.<java.lang.StringBuffer: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  return (");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r173);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") org.apache.xmlbeans.XmlBeans.getContextTypeLoader().parse( xmlAsString, type, options ); }");

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r21);

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("");

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("/** @param file the file from which to load an xml document */");

        $r22 = new java.lang.StringBuffer;

        specialinvoke $r22.<java.lang.StringBuffer: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("public static ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r173);

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" parse(java.io.File file) throws org.apache.xmlbeans.XmlException, java.io.IOException {");

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r26);

        $r27 = new java.lang.StringBuffer;

        specialinvoke $r27.<java.lang.StringBuffer: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  return (");

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r173);

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") org.apache.xmlbeans.XmlBeans.getContextTypeLoader().parse( file, type, null ); }");

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r31);

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("");

        $r32 = new java.lang.StringBuffer;

        specialinvoke $r32.<java.lang.StringBuffer: void <init>()>();

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("public static ");

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r173);

        $r35 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" parse(java.io.File file, org.apache.xmlbeans.XmlOptions options) throws org.apache.xmlbeans.XmlException, java.io.IOException {");

        $r36 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r36);

        $r37 = new java.lang.StringBuffer;

        specialinvoke $r37.<java.lang.StringBuffer: void <init>()>();

        $r38 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  return (");

        $r39 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r173);

        $r40 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") org.apache.xmlbeans.XmlBeans.getContextTypeLoader().parse( file, type, options ); }");

        $r41 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r41);

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("");

        $r42 = new java.lang.StringBuffer;

        specialinvoke $r42.<java.lang.StringBuffer: void <init>()>();

        $r43 = virtualinvoke $r42.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("public static ");

        $r44 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r173);

        $r45 = virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" parse(java.net.URL u) throws org.apache.xmlbeans.XmlException, java.io.IOException {");

        $r46 = virtualinvoke $r45.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r46);

        $r47 = new java.lang.StringBuffer;

        specialinvoke $r47.<java.lang.StringBuffer: void <init>()>();

        $r48 = virtualinvoke $r47.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  return (");

        $r49 = virtualinvoke $r48.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r173);

        $r50 = virtualinvoke $r49.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") org.apache.xmlbeans.XmlBeans.getContextTypeLoader().parse( u, type, null ); }");

        $r51 = virtualinvoke $r50.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r51);

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("");

        $r52 = new java.lang.StringBuffer;

        specialinvoke $r52.<java.lang.StringBuffer: void <init>()>();

        $r53 = virtualinvoke $r52.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("public static ");

        $r54 = virtualinvoke $r53.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r173);

        $r55 = virtualinvoke $r54.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" parse(java.net.URL u, org.apache.xmlbeans.XmlOptions options) throws org.apache.xmlbeans.XmlException, java.io.IOException {");

        $r56 = virtualinvoke $r55.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r56);

        $r57 = new java.lang.StringBuffer;

        specialinvoke $r57.<java.lang.StringBuffer: void <init>()>();

        $r58 = virtualinvoke $r57.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  return (");

        $r59 = virtualinvoke $r58.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r173);

        $r60 = virtualinvoke $r59.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") org.apache.xmlbeans.XmlBeans.getContextTypeLoader().parse( u, type, options ); }");

        $r61 = virtualinvoke $r60.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r61);

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("");

        $r62 = new java.lang.StringBuffer;

        specialinvoke $r62.<java.lang.StringBuffer: void <init>()>();

        $r63 = virtualinvoke $r62.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("public static ");

        $r64 = virtualinvoke $r63.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r173);

        $r65 = virtualinvoke $r64.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" parse(java.io.InputStream is) throws org.apache.xmlbeans.XmlException, java.io.IOException {");

        $r66 = virtualinvoke $r65.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r66);

        $r67 = new java.lang.StringBuffer;

        specialinvoke $r67.<java.lang.StringBuffer: void <init>()>();

        $r68 = virtualinvoke $r67.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  return (");

        $r69 = virtualinvoke $r68.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r173);

        $r70 = virtualinvoke $r69.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") org.apache.xmlbeans.XmlBeans.getContextTypeLoader().parse( is, type, null ); }");

        $r71 = virtualinvoke $r70.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r71);

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("");

        $r72 = new java.lang.StringBuffer;

        specialinvoke $r72.<java.lang.StringBuffer: void <init>()>();

        $r73 = virtualinvoke $r72.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("public static ");

        $r74 = virtualinvoke $r73.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r173);

        $r75 = virtualinvoke $r74.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" parse(java.io.InputStream is, org.apache.xmlbeans.XmlOptions options) throws org.apache.xmlbeans.XmlException, java.io.IOException {");

        $r76 = virtualinvoke $r75.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r76);

        $r77 = new java.lang.StringBuffer;

        specialinvoke $r77.<java.lang.StringBuffer: void <init>()>();

        $r78 = virtualinvoke $r77.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  return (");

        $r79 = virtualinvoke $r78.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r173);

        $r80 = virtualinvoke $r79.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") org.apache.xmlbeans.XmlBeans.getContextTypeLoader().parse( is, type, options ); }");

        $r81 = virtualinvoke $r80.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r81);

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("");

        $r82 = new java.lang.StringBuffer;

        specialinvoke $r82.<java.lang.StringBuffer: void <init>()>();

        $r83 = virtualinvoke $r82.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("public static ");

        $r84 = virtualinvoke $r83.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r173);

        $r85 = virtualinvoke $r84.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" parse(java.io.Reader r) throws org.apache.xmlbeans.XmlException, java.io.IOException {");

        $r86 = virtualinvoke $r85.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r86);

        $r87 = new java.lang.StringBuffer;

        specialinvoke $r87.<java.lang.StringBuffer: void <init>()>();

        $r88 = virtualinvoke $r87.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  return (");

        $r89 = virtualinvoke $r88.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r173);

        $r90 = virtualinvoke $r89.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") org.apache.xmlbeans.XmlBeans.getContextTypeLoader().parse( r, type, null ); }");

        $r91 = virtualinvoke $r90.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r91);

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("");

        $r92 = new java.lang.StringBuffer;

        specialinvoke $r92.<java.lang.StringBuffer: void <init>()>();

        $r93 = virtualinvoke $r92.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("public static ");

        $r94 = virtualinvoke $r93.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r173);

        $r95 = virtualinvoke $r94.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" parse(java.io.Reader r, org.apache.xmlbeans.XmlOptions options) throws org.apache.xmlbeans.XmlException, java.io.IOException {");

        $r96 = virtualinvoke $r95.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r96);

        $r97 = new java.lang.StringBuffer;

        specialinvoke $r97.<java.lang.StringBuffer: void <init>()>();

        $r98 = virtualinvoke $r97.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  return (");

        $r99 = virtualinvoke $r98.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r173);

        $r100 = virtualinvoke $r99.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") org.apache.xmlbeans.XmlBeans.getContextTypeLoader().parse( r, type, options ); }");

        $r101 = virtualinvoke $r100.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r101);

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("");

        $r102 = new java.lang.StringBuffer;

        specialinvoke $r102.<java.lang.StringBuffer: void <init>()>();

        $r103 = virtualinvoke $r102.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("public static ");

        $r104 = virtualinvoke $r103.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r173);

        $r105 = virtualinvoke $r104.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" parse(javax.xml.stream.XMLStreamReader sr) throws org.apache.xmlbeans.XmlException {");

        $r106 = virtualinvoke $r105.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r106);

        $r107 = new java.lang.StringBuffer;

        specialinvoke $r107.<java.lang.StringBuffer: void <init>()>();

        $r108 = virtualinvoke $r107.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  return (");

        $r109 = virtualinvoke $r108.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r173);

        $r110 = virtualinvoke $r109.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") org.apache.xmlbeans.XmlBeans.getContextTypeLoader().parse( sr, type, null ); }");

        $r111 = virtualinvoke $r110.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r111);

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("");

        $r112 = new java.lang.StringBuffer;

        specialinvoke $r112.<java.lang.StringBuffer: void <init>()>();

        $r113 = virtualinvoke $r112.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("public static ");

        $r114 = virtualinvoke $r113.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r173);

        $r115 = virtualinvoke $r114.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" parse(javax.xml.stream.XMLStreamReader sr, org.apache.xmlbeans.XmlOptions options) throws org.apache.xmlbeans.XmlException {");

        $r116 = virtualinvoke $r115.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r116);

        $r117 = new java.lang.StringBuffer;

        specialinvoke $r117.<java.lang.StringBuffer: void <init>()>();

        $r118 = virtualinvoke $r117.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  return (");

        $r119 = virtualinvoke $r118.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r173);

        $r120 = virtualinvoke $r119.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") org.apache.xmlbeans.XmlBeans.getContextTypeLoader().parse( sr, type, options ); }");

        $r121 = virtualinvoke $r120.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r121);

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("");

        $r122 = new java.lang.StringBuffer;

        specialinvoke $r122.<java.lang.StringBuffer: void <init>()>();

        $r123 = virtualinvoke $r122.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("public static ");

        $r124 = virtualinvoke $r123.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r173);

        $r125 = virtualinvoke $r124.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" parse(org.w3c.dom.Node node) throws org.apache.xmlbeans.XmlException {");

        $r126 = virtualinvoke $r125.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r126);

        $r127 = new java.lang.StringBuffer;

        specialinvoke $r127.<java.lang.StringBuffer: void <init>()>();

        $r128 = virtualinvoke $r127.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  return (");

        $r129 = virtualinvoke $r128.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r173);

        $r130 = virtualinvoke $r129.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") org.apache.xmlbeans.XmlBeans.getContextTypeLoader().parse( node, type, null ); }");

        $r131 = virtualinvoke $r130.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r131);

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("");

        $r132 = new java.lang.StringBuffer;

        specialinvoke $r132.<java.lang.StringBuffer: void <init>()>();

        $r133 = virtualinvoke $r132.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("public static ");

        $r134 = virtualinvoke $r133.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r173);

        $r135 = virtualinvoke $r134.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" parse(org.w3c.dom.Node node, org.apache.xmlbeans.XmlOptions options) throws org.apache.xmlbeans.XmlException {");

        $r136 = virtualinvoke $r135.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r136);

        $r137 = new java.lang.StringBuffer;

        specialinvoke $r137.<java.lang.StringBuffer: void <init>()>();

        $r138 = virtualinvoke $r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  return (");

        $r139 = virtualinvoke $r138.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r173);

        $r140 = virtualinvoke $r139.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") org.apache.xmlbeans.XmlBeans.getContextTypeLoader().parse( node, type, options ); }");

        $r141 = virtualinvoke $r140.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r141);

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("");

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("/** @deprecated {@link org.apache.xmlbeans.xml.stream.XMLInputStream} */");

        $z2 = r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: boolean _useJava15>;

        if $z2 == 0 goto label5;

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("@Deprecated");

     label5:
        $r142 = new java.lang.StringBuffer;

        specialinvoke $r142.<java.lang.StringBuffer: void <init>()>();

        $r143 = virtualinvoke $r142.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("public static ");

        $r144 = virtualinvoke $r143.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r173);

        $r145 = virtualinvoke $r144.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" parse(org.apache.xmlbeans.xml.stream.XMLInputStream xis) throws org.apache.xmlbeans.XmlException, org.apache.xmlbeans.xml.stream.XMLStreamException {");

        $r146 = virtualinvoke $r145.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r146);

        $r147 = new java.lang.StringBuffer;

        specialinvoke $r147.<java.lang.StringBuffer: void <init>()>();

        $r148 = virtualinvoke $r147.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  return (");

        $r149 = virtualinvoke $r148.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r173);

        $r150 = virtualinvoke $r149.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") org.apache.xmlbeans.XmlBeans.getContextTypeLoader().parse( xis, type, null ); }");

        $r151 = virtualinvoke $r150.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r151);

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("");

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("/** @deprecated {@link org.apache.xmlbeans.xml.stream.XMLInputStream} */");

        $z3 = r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: boolean _useJava15>;

        if $z3 == 0 goto label6;

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("@Deprecated");

     label6:
        $r152 = new java.lang.StringBuffer;

        specialinvoke $r152.<java.lang.StringBuffer: void <init>()>();

        $r153 = virtualinvoke $r152.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("public static ");

        $r154 = virtualinvoke $r153.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r173);

        $r155 = virtualinvoke $r154.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" parse(org.apache.xmlbeans.xml.stream.XMLInputStream xis, org.apache.xmlbeans.XmlOptions options) throws org.apache.xmlbeans.XmlException, org.apache.xmlbeans.xml.stream.XMLStreamException {");

        $r156 = virtualinvoke $r155.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r156);

        $r157 = new java.lang.StringBuffer;

        specialinvoke $r157.<java.lang.StringBuffer: void <init>()>();

        $r158 = virtualinvoke $r157.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  return (");

        $r159 = virtualinvoke $r158.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r173);

        $r160 = virtualinvoke $r159.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") org.apache.xmlbeans.XmlBeans.getContextTypeLoader().parse( xis, type, options ); }");

        $r161 = virtualinvoke $r160.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r161);

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("");

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("/** @deprecated {@link org.apache.xmlbeans.xml.stream.XMLInputStream} */");

        $z4 = r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: boolean _useJava15>;

        if $z4 == 0 goto label7;

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("@Deprecated");

     label7:
        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("public static org.apache.xmlbeans.xml.stream.XMLInputStream newValidatingXMLInputStream(org.apache.xmlbeans.xml.stream.XMLInputStream xis) throws org.apache.xmlbeans.XmlException, org.apache.xmlbeans.xml.stream.XMLStreamException {");

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("  return org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newValidatingXMLInputStream( xis, type, null ); }");

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("");

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("/** @deprecated {@link org.apache.xmlbeans.xml.stream.XMLInputStream} */");

        $z5 = r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: boolean _useJava15>;

        if $z5 == 0 goto label8;

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("@Deprecated");

     label8:
        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("public static org.apache.xmlbeans.xml.stream.XMLInputStream newValidatingXMLInputStream(org.apache.xmlbeans.xml.stream.XMLInputStream xis, org.apache.xmlbeans.XmlOptions options) throws org.apache.xmlbeans.XmlException, org.apache.xmlbeans.xml.stream.XMLStreamException {");

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("  return org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newValidatingXMLInputStream( xis, type, options ); }");

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("");

     label9:
        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("private Factory() { } // No instance of this class allowed");

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void outdent()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("}");

        return;
    }

    void printNestedInnerTypes(org.apache.xmlbeans.SchemaType, org.apache.xmlbeans.SchemaTypeSystem) throws java.io.IOException
    {
        org.apache.xmlbeans.SchemaType[] $r1;
        int $i0, $i1, i2;
        org.apache.xmlbeans.SchemaType $r2, $r5, $r6, $r8, r10;
        boolean z0, $z1, $z2, $z3, $z4;
        org.apache.xmlbeans.SchemaTypeSystem r4;
        javax.xml.namespace.QName $r0, $r7, $r9;
        org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter r3;

        r3 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter;

        r10 := @parameter0: org.apache.xmlbeans.SchemaType;

        r4 := @parameter1: org.apache.xmlbeans.SchemaTypeSystem;

        $r0 = interfaceinvoke r10.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        if $r0 == null goto label1;

        $r7 = interfaceinvoke r10.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $r8 = interfaceinvoke r10.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType getBaseType()>();

        $r9 = interfaceinvoke $r8.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $z3 = virtualinvoke $r7.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r9);

        if $z3 == 0 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        z0 = $z4;

     label3:
        if r10 == null goto label9;

        $r1 = interfaceinvoke r10.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType[] getAnonymousTypes()>();

        i2 = 0;

     label4:
        $i0 = lengthof $r1;

        if i2 >= $i0 goto label7;

        $r2 = $r1[i2];

        $z2 = interfaceinvoke $r2.<org.apache.xmlbeans.SchemaType: boolean isSkippedAnonymousType()>();

        if $z2 == 0 goto label5;

        $r6 = $r1[i2];

        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printNestedInnerTypes(org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.SchemaTypeSystem)>($r6, r4);

        goto label6;

     label5:
        $r5 = $r1[i2];

        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printInnerType(org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.SchemaTypeSystem)>($r5, r4);

     label6:
        i2 = i2 + 1;

        goto label4;

     label7:
        if z0 == 0 goto label9;

        $i1 = interfaceinvoke r10.<org.apache.xmlbeans.SchemaType: int getDerivationType()>();

        if $i1 == 2 goto label8;

        $z1 = interfaceinvoke r10.<org.apache.xmlbeans.SchemaType: boolean isSimpleType()>();

        if $z1 != 0 goto label8;

        goto label9;

     label8:
        r10 = interfaceinvoke r10.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType getBaseType()>();

        goto label3;

     label9:
        return;
    }

    void printTopComment(org.apache.xmlbeans.SchemaType) throws java.io.IOException
    {
        org.apache.xmlbeans.SchemaType r1;
        boolean $z0, $z1, $z2, $z3;
        javax.xml.namespace.QName $r2, $r17, $r23, r27;
        org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter r0;
        java.lang.AssertionError $r13, $r14;
        java.lang.StringBuffer $r3, $r4, $r6, $r8, $r9, $r11, $r15, $r16, $r19, $r21, $r22, $r25, $r28, $r29, $r31;
        java.lang.String $r5, $r7, $r10, $r12, $r18, $r20, $r24, $r26, $r30, $r32;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter;

        r1 := @parameter0: org.apache.xmlbeans.SchemaType;

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("/*");

        $r2 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        if $r2 == null goto label1;

        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" * XML Type:  ");

        $r17 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $r18 = virtualinvoke $r17.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r19 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r20);

        $r21 = new java.lang.StringBuffer;

        specialinvoke $r21.<java.lang.StringBuffer: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" * Namespace: ");

        $r23 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $r24 = virtualinvoke $r23.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r25 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r26);

        goto label6;

     label1:
        r27 = null;

        $z0 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: boolean isDocumentType()>();

        if $z0 == 0 goto label2;

        r27 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getDocumentElementName()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>(" * An XML document type.");

        goto label4;

     label2:
        $z1 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: boolean isAttributeType()>();

        if $z1 == 0 goto label3;

        r27 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getAttributeTypeAttributeName()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>(" * An XML attribute type.");

        goto label4;

     label3:
        $z2 = <org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: boolean $assertionsDisabled>;

        if $z2 != 0 goto label4;

        $r14 = new java.lang.AssertionError;

        specialinvoke $r14.<java.lang.AssertionError: void <init>()>();

        throw $r14;

     label4:
        $z3 = <org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: boolean $assertionsDisabled>;

        if $z3 != 0 goto label5;

        if r27 != null goto label5;

        $r13 = new java.lang.AssertionError;

        specialinvoke $r13.<java.lang.AssertionError: void <init>()>();

        throw $r13;

     label5:
        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" * Localname: ");

        $r5 = virtualinvoke r27.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r7);

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" * Namespace: ");

        $r10 = virtualinvoke r27.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r12);

     label6:
        $r28 = new java.lang.StringBuffer;

        specialinvoke $r28.<java.lang.StringBuffer: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" * Java type: ");

        $r30 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: java.lang.String getFullJavaName()>();

        $r31 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r30);

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r32);

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>(" *");

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>(" * Automatically generated - do not modify.");

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>(" */");

        return;
    }

    void printPackage(org.apache.xmlbeans.SchemaType, boolean) throws java.io.IOException
    {
        java.lang.StringBuffer $r3, $r4, $r5, $r6;
        int $i0;
        java.lang.String $r1, $r7, r8;
        org.apache.xmlbeans.SchemaType r0;
        org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter r2;
        boolean z0;

        r2 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter;

        r0 := @parameter0: org.apache.xmlbeans.SchemaType;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        r8 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: java.lang.String getFullJavaName()>();

        goto label2;

     label1:
        r8 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: java.lang.String getFullJavaImplName()>();

     label2:
        $i0 = virtualinvoke r8.<java.lang.String: int lastIndexOf(int)>(46);

        if $i0 >= 0 goto label3;

        return;

     label3:
        $r1 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("package ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r7);

        return;
    }

    void startInterface(org.apache.xmlbeans.SchemaType) throws java.io.IOException
    {
        java.lang.StringBuffer $r5, $r6, $r7, $r8, $r9, $r11;
        java.lang.String $r1, $r4, $r10, $r12;
        org.apache.xmlbeans.SchemaType r0, $r3;
        org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter r2;

        r2 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter;

        r0 := @parameter0: org.apache.xmlbeans.SchemaType;

        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: java.lang.String getShortJavaName()>();

        $r3 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType getBaseType()>();

        $r4 = virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: java.lang.String findJavaType(org.apache.xmlbeans.SchemaType)>($r3);

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("public interface ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" extends ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r10 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: java.lang.String getExtensionInterfaces(org.apache.xmlbeans.SchemaType)>(r0);

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r12);

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("{");

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void indent()>();

        specialinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitSpecializedAccessors(org.apache.xmlbeans.SchemaType)>(r0);

        return;
    }

    private static java.lang.String getExtensionInterfaces(org.apache.xmlbeans.SchemaType)
    {
        org.apache.xmlbeans.InterfaceExtension[] $r3;
        java.lang.StringBuffer $r2, $r5, $r6, $r9;
        int $i0, i1;
        org.apache.xmlbeans.impl.schema.SchemaTypeImpl $r1;
        java.lang.String $r4, $r8, $r10;
        org.apache.xmlbeans.SchemaType r0;
        org.apache.xmlbeans.InterfaceExtension $r7;

        r0 := @parameter0: org.apache.xmlbeans.SchemaType;

        $r1 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: org.apache.xmlbeans.impl.schema.SchemaTypeImpl getImpl(org.apache.xmlbeans.SchemaType)>(r0);

        if $r1 != null goto label1;

        return "";

     label1:
        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r1.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: org.apache.xmlbeans.InterfaceExtension[] getInterfaceExtensions()>();

        if $r3 == null goto label3;

        i1 = 0;

     label2:
        $i0 = lengthof $r3;

        if i1 >= $i0 goto label3;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r7 = $r3[i1];

        $r8 = interfaceinvoke $r7.<org.apache.xmlbeans.InterfaceExtension: java.lang.String getInterface()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        i1 = i1 + 1;

        goto label2;

     label3:
        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }

    private static org.apache.xmlbeans.impl.schema.SchemaTypeImpl getImpl(org.apache.xmlbeans.SchemaType)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeImpl $r1;
        org.apache.xmlbeans.SchemaType r0;
        boolean $z0;

        r0 := @parameter0: org.apache.xmlbeans.SchemaType;

        $z0 = r0 instanceof org.apache.xmlbeans.impl.schema.SchemaTypeImpl;

        if $z0 == 0 goto label1;

        $r1 = (org.apache.xmlbeans.impl.schema.SchemaTypeImpl) r0;

        return $r1;

     label1:
        return null;
    }

    private void emitSpecializedAccessors(org.apache.xmlbeans.SchemaType) throws java.io.IOException
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.String $r6;
        org.apache.xmlbeans.SchemaType r0, $r2, $r3, $r4, $r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14;
        org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter r1;

        r1 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter;

        r0 := @parameter0: org.apache.xmlbeans.SchemaType;

        $i0 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: int getSimpleVariety()>();

        if $i0 != 1 goto label16;

        $r3 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType getPrimitiveType()>();

        $i2 = interfaceinvoke $r3.<org.apache.xmlbeans.SchemaType: int getBuiltinTypeCode()>();

        if $i2 != 11 goto label16;

        $i3 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: int getDecimalSize()>();

        $r4 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType getBaseType()>();

        $i4 = interfaceinvoke $r4.<org.apache.xmlbeans.SchemaType: int getDecimalSize()>();

        if $i3 != $i4 goto label01;

        $r5 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType getBaseType()>();

        $r6 = interfaceinvoke $r5.<org.apache.xmlbeans.SchemaType: java.lang.String getFullJavaName()>();

        if $r6 != null goto label16;

     label01:
        if $i3 != 1000000 goto label04;

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("java.math.BigInteger getBigIntegerValue();");

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("void setBigIntegerValue(java.math.BigInteger bi);");

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("/** @deprecated */");

        $z13 = r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: boolean _useJava15>;

        if $z13 == 0 goto label02;

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("@Deprecated");

     label02:
        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("java.math.BigInteger bigIntegerValue();");

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("/** @deprecated */");

        $z14 = r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: boolean _useJava15>;

        if $z14 == 0 goto label03;

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("@Deprecated");

     label03:
        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("void set(java.math.BigInteger bi);");

        goto label16;

     label04:
        if $i3 != 64 goto label07;

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("long getLongValue();");

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("void setLongValue(long l);");

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("/** @deprecated */");

        $z11 = r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: boolean _useJava15>;

        if $z11 == 0 goto label05;

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("@Deprecated");

     label05:
        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("long longValue();");

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("/** @deprecated */");

        $z12 = r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: boolean _useJava15>;

        if $z12 == 0 goto label06;

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("@Deprecated");

     label06:
        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("void set(long l);");

        goto label16;

     label07:
        if $i3 != 32 goto label10;

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("int getIntValue();");

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("void setIntValue(int i);");

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("/** @deprecated */");

        $z9 = r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: boolean _useJava15>;

        if $z9 == 0 goto label08;

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("@Deprecated");

     label08:
        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("int intValue();");

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("/** @deprecated */");

        $z10 = r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: boolean _useJava15>;

        if $z10 == 0 goto label09;

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("@Deprecated");

     label09:
        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("void set(int i);");

        goto label16;

     label10:
        if $i3 != 16 goto label13;

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("short getShortValue();");

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("void setShortValue(short s);");

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("/** @deprecated */");

        $z7 = r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: boolean _useJava15>;

        if $z7 == 0 goto label11;

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("@Deprecated");

     label11:
        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("short shortValue();");

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("/** @deprecated */");

        $z8 = r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: boolean _useJava15>;

        if $z8 == 0 goto label12;

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("@Deprecated");

     label12:
        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("void set(short s);");

        goto label16;

     label13:
        if $i3 != 8 goto label16;

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("byte getByteValue();");

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("void setByteValue(byte b);");

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("/** @deprecated */");

        $z5 = r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: boolean _useJava15>;

        if $z5 == 0 goto label14;

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("@Deprecated");

     label14:
        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("byte byteValue();");

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("/** @deprecated */");

        $z6 = r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: boolean _useJava15>;

        if $z6 == 0 goto label15;

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("@Deprecated");

     label15:
        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("void set(byte b);");

     label16:
        $i5 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: int getSimpleVariety()>();

        if $i5 != 2 goto label20;

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("java.lang.Object getObjectValue();");

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("void setObjectValue(java.lang.Object val);");

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("/** @deprecated */");

        $z3 = r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: boolean _useJava15>;

        if $z3 == 0 goto label17;

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("@Deprecated");

     label17:
        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("java.lang.Object objectValue();");

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("/** @deprecated */");

        $z4 = r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: boolean _useJava15>;

        if $z4 == 0 goto label18;

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("@Deprecated");

     label18:
        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("void objectSet(java.lang.Object val);");

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("org.apache.xmlbeans.SchemaType instanceType();");

        $r2 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType getUnionCommonBaseType()>();

        if $r2 == null goto label19;

        $i1 = interfaceinvoke $r2.<org.apache.xmlbeans.SchemaType: int getSimpleVariety()>();

        if $i1 == 2 goto label19;

     label19:
        specialinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitSpecializedAccessors(org.apache.xmlbeans.SchemaType)>($r2);

     label20:
        $i6 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: int getSimpleVariety()>();

        if $i6 != 3 goto label24;

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("java.util.List getListValue();");

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("java.util.List xgetListValue();");

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("void setListValue(java.util.List list);");

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("/** @deprecated */");

        $z0 = r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: boolean _useJava15>;

        if $z0 == 0 goto label21;

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("@Deprecated");

     label21:
        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("java.util.List listValue();");

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("/** @deprecated */");

        $z1 = r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: boolean _useJava15>;

        if $z1 == 0 goto label22;

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("@Deprecated");

     label22:
        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("java.util.List xlistValue();");

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("/** @deprecated */");

        $z2 = r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: boolean _useJava15>;

        if $z2 == 0 goto label23;

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("@Deprecated");

     label23:
        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("void set(java.util.List list);");

     label24:
        return;
    }

    void startBlock() throws java.io.IOException
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter r0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter;

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("{");

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void indent()>();

        return;
    }

    void endBlock() throws java.io.IOException
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter r0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter;

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void outdent()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("}");

        return;
    }

    void printJavaDoc(java.lang.String) throws java.io.IOException
    {
        java.lang.StringBuffer $r1, $r2, $r4;
        java.lang.String r3, $r5;
        org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter r0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter;

        r3 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("");

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("/**");

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" * ");

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r5);

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>(" */");

        return;
    }

    void printShortJavaDoc(java.lang.String) throws java.io.IOException
    {
        java.lang.StringBuffer $r1, $r2, $r4, $r5;
        java.lang.String r3, $r6;
        org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter r0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter;

        r3 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/** ");

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" */");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r6);

        return;
    }

    public static java.lang.String javaStringEscape(java.lang.String)
    {
        char $c1, $c3;
        java.lang.StringBuffer $r3;
        int $i0, $i2, i4, i5, $i6, $i7;
        java.lang.String r0, $r2;

        r0 := @parameter0: java.lang.String;

        i4 = 0;

     label01:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i4 >= $i0 goto label04;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i4);

        $i6 = (int) $c1;

        lookupswitch($i6)
        {
            case 10: goto label02;
            case 13: goto label02;
            case 34: goto label02;
            case 92: goto label02;
            default: goto label03;
        };

     label02:
        goto label05;

     label03:
        i4 = i4 + 1;

        goto label01;

     label04:
        return r0;

     label05:
        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        i5 = 0;

     label06:
        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        if i5 >= $i2 goto label13;

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i5);

        $i7 = (int) $c3;

        lookupswitch($i7)
        {
            case 10: goto label08;
            case 13: goto label09;
            case 34: goto label10;
            case 92: goto label11;
            default: goto label07;
        };

     label07:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

        goto label12;

     label08:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\n");

        goto label12;

     label09:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\r");

        goto label12;

     label10:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\\"");

        goto label12;

     label11:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\\\");

     label12:
        i5 = i5 + 1;

        goto label06;

     label13:
        $r2 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    void printStringEnumeration(org.apache.xmlbeans.SchemaType) throws java.io.IOException
    {
        org.apache.xmlbeans.SchemaType r0, $r1;
        java.lang.StringBuffer $r7, $r8, $r9, $r10, $r14, $r15, $r18, $r20, $r21, $r23, $r24, $r25, $r26, $r28, $r29, $r32, $r35, $r36, $r37, $r38, $r39, $r40, $r42, $r43, $r46, $r50, $r51, $r54, $r56, $r57, $r58, $r59, $r60, $r61, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r76, $r77, $r78, $r79, $r81, $r82, $r84, $r85, $r86, $r87, $r88, $r89, $r90, $r91, $r92, $r93;
        java.lang.String $r2, $r11, $r13, $r17, $r19, $r22, $r27, $r31, $r33, $r41, $r45, $r47, $r49, $r53, $r55, $r62, $r71, $r73, $r75, $r80, $r83, $r94;
        org.apache.xmlbeans.SchemaStringEnumEntry $r12, $r16, $r30, $r34, $r44, $r48, $r52, $r72, $r74;
        boolean $z0, $z1, $z2;
        org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter r3;
        java.util.HashSet $r5, $r6;
        int $i0, $i1, $i2, $i3, i4, $i5, i6, i7, $i8, i9;
        org.apache.xmlbeans.SchemaStringEnumEntry[] $r4;

        r3 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter;

        r0 := @parameter0: org.apache.xmlbeans.SchemaType;

        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType getBaseEnumType()>();

        $r2 = interfaceinvoke $r1.<org.apache.xmlbeans.SchemaType: java.lang.String getFullJavaName()>();

        $z0 = specialinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: boolean hasBase(org.apache.xmlbeans.SchemaType)>(r0);

        if $z0 != 0 goto label01;

        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("");

        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("org.apache.xmlbeans.StringEnumAbstractBase enumValue();");

        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("void set(org.apache.xmlbeans.StringEnumAbstractBase e);");

     label01:
        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("");

        $r4 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaStringEnumEntry[] getStringEnumEntries()>();

        $r5 = new java.util.HashSet;

        specialinvoke $r5.<java.util.HashSet: void <init>()>();

        $r6 = new java.util.HashSet;

        specialinvoke $r6.<java.util.HashSet: void <init>()>();

        i4 = 0;

     label02:
        $i5 = lengthof $r4;

        if i4 >= $i5 goto label06;

        $r72 = $r4[i4];

        $r73 = interfaceinvoke $r72.<org.apache.xmlbeans.SchemaStringEnumEntry: java.lang.String getString()>();

        $z2 = virtualinvoke $r5.<java.util.HashSet: boolean contains(java.lang.Object)>($r73);

        if $z2 == 0 goto label03;

        virtualinvoke $r6.<java.util.HashSet: boolean add(java.lang.Object)>($r73);

        goto label05;

     label03:
        virtualinvoke $r5.<java.util.HashSet: boolean add(java.lang.Object)>($r73);

        $r74 = $r4[i4];

        $r75 = interfaceinvoke $r74.<org.apache.xmlbeans.SchemaStringEnumEntry: java.lang.String getEnumName()>();

        if $z0 == 0 goto label04;

        $r84 = new java.lang.StringBuffer;

        specialinvoke $r84.<java.lang.StringBuffer: void <init>()>();

        $r85 = virtualinvoke $r84.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("static final ");

        $r86 = virtualinvoke $r85.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r87 = virtualinvoke $r86.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".Enum ");

        $r88 = virtualinvoke $r87.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r75);

        $r89 = virtualinvoke $r88.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" = ");

        $r90 = virtualinvoke $r89.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r91 = virtualinvoke $r90.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r92 = virtualinvoke $r91.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r75);

        $r93 = virtualinvoke $r92.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";");

        $r94 = virtualinvoke $r93.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r94);

        goto label05;

     label04:
        $r76 = new java.lang.StringBuffer;

        specialinvoke $r76.<java.lang.StringBuffer: void <init>()>();

        $r77 = virtualinvoke $r76.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("static final Enum ");

        $r78 = virtualinvoke $r77.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r75);

        $r79 = virtualinvoke $r78.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" = Enum.forString(\"");

        $r80 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: java.lang.String javaStringEscape(java.lang.String)>($r73);

        $r81 = virtualinvoke $r79.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r80);

        $r82 = virtualinvoke $r81.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\");");

        $r83 = virtualinvoke $r82.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r83);

     label05:
        i4 = i4 + 1;

        goto label02;

     label06:
        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("");

        i6 = 0;

     label07:
        $i0 = lengthof $r4;

        if i6 >= $i0 goto label11;

        $r48 = $r4[i6];

        $r49 = interfaceinvoke $r48.<org.apache.xmlbeans.SchemaStringEnumEntry: java.lang.String getString()>();

        $z1 = virtualinvoke $r6.<java.util.HashSet: boolean contains(java.lang.Object)>($r49);

        if $z1 == 0 goto label08;

        goto label10;

     label08:
        $r50 = new java.lang.StringBuffer;

        specialinvoke $r50.<java.lang.StringBuffer: void <init>()>();

        $r51 = virtualinvoke $r50.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("INT_");

        $r52 = $r4[i6];

        $r53 = interfaceinvoke $r52.<org.apache.xmlbeans.SchemaStringEnumEntry: java.lang.String getEnumName()>();

        $r54 = virtualinvoke $r51.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r53);

        $r55 = virtualinvoke $r54.<java.lang.StringBuffer: java.lang.String toString()>();

        if $z0 == 0 goto label09;

        $r63 = new java.lang.StringBuffer;

        specialinvoke $r63.<java.lang.StringBuffer: void <init>()>();

        $r64 = virtualinvoke $r63.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("static final int ");

        $r65 = virtualinvoke $r64.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r55);

        $r66 = virtualinvoke $r65.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" = ");

        $r67 = virtualinvoke $r66.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r68 = virtualinvoke $r67.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r69 = virtualinvoke $r68.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r55);

        $r70 = virtualinvoke $r69.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";");

        $r71 = virtualinvoke $r70.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r71);

        goto label10;

     label09:
        $r56 = new java.lang.StringBuffer;

        specialinvoke $r56.<java.lang.StringBuffer: void <init>()>();

        $r57 = virtualinvoke $r56.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("static final int ");

        $r58 = virtualinvoke $r57.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r55);

        $r59 = virtualinvoke $r58.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" = Enum.");

        $r60 = virtualinvoke $r59.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r55);

        $r61 = virtualinvoke $r60.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";");

        $r62 = virtualinvoke $r61.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r62);

     label10:
        i6 = i6 + 1;

        goto label07;

     label11:
        if $z0 != 0 goto label17;

        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("");

        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("/**");

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" * Enumeration value class for ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r11);

        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>(" * These enum values can be used as follows:");

        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>(" * <pre>");

        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>(" * enum.toString(); // returns the string value of the enum");

        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>(" * enum.intValue(); // returns an int value, useful for switches");

        $i1 = lengthof $r4;

        if $i1 <= 0 goto label12;

        $r42 = new java.lang.StringBuffer;

        specialinvoke $r42.<java.lang.StringBuffer: void <init>()>();

        $r43 = virtualinvoke $r42.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" * // e.g., case Enum.INT_");

        $r44 = $r4[0];

        $r45 = interfaceinvoke $r44.<org.apache.xmlbeans.SchemaStringEnumEntry: java.lang.String getEnumName()>();

        $r46 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r45);

        $r47 = virtualinvoke $r46.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r47);

     label12:
        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>(" * Enum.forString(s); // returns the enum value for a string");

        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>(" * Enum.forInt(i); // returns the enum value for an int");

        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>(" * </pre>");

        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>(" * Enumeration objects are immutable singleton objects that");

        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>(" * can be compared using == object equality. They have no");

        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>(" * public constructor. See the constants defined within this");

        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>(" * class for all the valid values.");

        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>(" */");

        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase");

        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("{");

        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void indent()>();

        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("/**");

        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>(" * Returns the enum value for a string, or null if none.");

        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>(" */");

        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("public static Enum forString(java.lang.String s)");

        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("    { return (Enum)table.forString(s); }");

        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("/**");

        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>(" * Returns the enum value corresponding to an int, or null if none.");

        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>(" */");

        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("public static Enum forInt(int i)");

        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("    { return (Enum)table.forInt(i); }");

        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("");

        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("private Enum(java.lang.String s, int i)");

        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("    { super(s, i); }");

        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("");

        i7 = 0;

     label13:
        $i8 = lengthof $r4;

        if i7 >= $i8 goto label14;

        $r28 = new java.lang.StringBuffer;

        specialinvoke $r28.<java.lang.StringBuffer: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("INT_");

        $r30 = $r4[i7];

        $r31 = interfaceinvoke $r30.<org.apache.xmlbeans.SchemaStringEnumEntry: java.lang.String getEnumName()>();

        $r32 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.String toString()>();

        $r34 = $r4[i7];

        $i3 = interfaceinvoke $r34.<org.apache.xmlbeans.SchemaStringEnumEntry: int getIntValue()>();

        $r35 = new java.lang.StringBuffer;

        specialinvoke $r35.<java.lang.StringBuffer: void <init>()>();

        $r36 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("static final int ");

        $r37 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r33);

        $r38 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" = ");

        $r39 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i3);

        $r40 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";");

        $r41 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r41);

        i7 = i7 + 1;

        goto label13;

     label14:
        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("");

        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =");

        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("    new org.apache.xmlbeans.StringEnumAbstractBase.Table");

        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("(");

        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void indent()>();

        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("new Enum[]");

        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("{");

        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void indent()>();

        i9 = 0;

     label15:
        $i2 = lengthof $r4;

        if i9 >= $i2 goto label16;

        $r12 = $r4[i9];

        $r13 = interfaceinvoke $r12.<org.apache.xmlbeans.SchemaStringEnumEntry: java.lang.String getString()>();

        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("INT_");

        $r16 = $r4[i9];

        $r17 = interfaceinvoke $r16.<org.apache.xmlbeans.SchemaStringEnumEntry: java.lang.String getEnumName()>();

        $r18 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        $r20 = new java.lang.StringBuffer;

        specialinvoke $r20.<java.lang.StringBuffer: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("new Enum(\"");

        $r22 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: java.lang.String javaStringEscape(java.lang.String)>($r13);

        $r23 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\", ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("),");

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r27);

        i9 = i9 + 1;

        goto label15;

     label16:
        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void outdent()>();

        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("}");

        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void outdent()>();

        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>(");");

        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("private static final long serialVersionUID = 1L;");

        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("private java.lang.Object readResolve() { return forInt(intValue()); } ");

        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void outdent()>();

        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("}");

     label17:
        return;
    }

    private boolean hasBase(org.apache.xmlbeans.SchemaType)
    {
        org.apache.xmlbeans.SchemaType r0, $r1, $r2, $r3, $r4, $r5;
        org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter r6;
        boolean $z0, $z1, $z2, z3, $z4, $z5;

        r6 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter;

        r0 := @parameter0: org.apache.xmlbeans.SchemaType;

        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType getBaseEnumType()>();

        $z0 = interfaceinvoke $r1.<org.apache.xmlbeans.SchemaType: boolean isAnonymousType()>();

        if $z0 == 0 goto label6;

        $z1 = interfaceinvoke $r1.<org.apache.xmlbeans.SchemaType: boolean isSkippedAnonymousType()>();

        if $z1 == 0 goto label6;

        $r2 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType getContentBasedOnType()>();

        if $r2 == null goto label3;

        $r4 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType getContentBasedOnType()>();

        $r5 = interfaceinvoke $r4.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType getBaseType()>();

        if $r5 == $r1 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        z3 = $z2;

        goto label9;

     label3:
        $r3 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType getBaseType()>();

        if $r3 == $r1 goto label4;

        $z4 = 1;

        goto label5;

     label4:
        $z4 = 0;

     label5:
        z3 = $z4;

        goto label9;

     label6:
        if $r1 == r0 goto label7;

        $z5 = 1;

        goto label8;

     label7:
        $z5 = 0;

     label8:
        z3 = $z5;

     label9:
        return z3;
    }

    java.lang.String xmlTypeForProperty(org.apache.xmlbeans.SchemaProperty)
    {
        org.apache.xmlbeans.SchemaProperty r0;
        java.lang.String $r3, $r4;
        org.apache.xmlbeans.SchemaType $r1;
        org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter r2;

        r2 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter;

        r0 := @parameter0: org.apache.xmlbeans.SchemaProperty;

        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaProperty: org.apache.xmlbeans.SchemaType javaBasedOnType()>();

        $r3 = virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: java.lang.String findJavaType(org.apache.xmlbeans.SchemaType)>($r1);

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String replace(char,char)>(36, 46);

        return $r4;
    }

    static boolean xmlTypeForPropertyIsUnion(org.apache.xmlbeans.SchemaProperty)
    {
        org.apache.xmlbeans.SchemaProperty r0;
        int $i0;
        org.apache.xmlbeans.SchemaType $r1;
        boolean $z0, $z1;

        r0 := @parameter0: org.apache.xmlbeans.SchemaProperty;

        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaProperty: org.apache.xmlbeans.SchemaType javaBasedOnType()>();

        $z0 = interfaceinvoke $r1.<org.apache.xmlbeans.SchemaType: boolean isSimpleType()>();

        if $z0 == 0 goto label1;

        $i0 = interfaceinvoke $r1.<org.apache.xmlbeans.SchemaType: int getSimpleVariety()>();

        if $i0 != 2 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    static boolean isJavaPrimitive(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 >= 1 goto label1;

        $z0 = 0;

        goto label3;

     label1:
        if i0 <= 7 goto label2;

        $z0 = 0;

        goto label3;

     label2:
        $z0 = 1;

     label3:
        return $z0;
    }

    static java.lang.String javaWrappedType(int)
    {
        java.lang.IllegalStateException $r0;
        int i0;
        java.lang.AssertionError $r1;
        boolean $z0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            case 5: goto label5;
            case 6: goto label6;
            case 7: goto label7;
            default: goto label8;
        };

     label1:
        return "java.lang.Boolean";

     label2:
        return "java.lang.Float";

     label3:
        return "java.lang.Double";

     label4:
        return "java.lang.Byte";

     label5:
        return "java.lang.Short";

     label6:
        return "java.lang.Integer";

     label7:
        return "java.lang.Long";

     label8:
        $z0 = <org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: boolean $assertionsDisabled>;

        if $z0 != 0 goto label9;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label9:
        $r0 = new java.lang.IllegalStateException;

        specialinvoke $r0.<java.lang.IllegalStateException: void <init>()>();

        throw $r0;
    }

    java.lang.String javaTypeForProperty(org.apache.xmlbeans.SchemaProperty)
    {
        java.lang.IllegalStateException $r18;
        org.apache.xmlbeans.SchemaProperty r0;
        org.apache.xmlbeans.impl.schema.SchemaTypeImpl $r21;
        org.apache.xmlbeans.SchemaType $r1, $r10, $r16, $r20, $r23, r26;
        boolean $z0, $z1, $z2;
        org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter r2;
        java.lang.AssertionError $r17, $r19;
        java.lang.StringBuffer $r3, $r6, $r7, $r9, $r13, $r14;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r4, $r5, $r8, $r11, $r12, $r15, $r22, $r24, $r25;

        r2 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter;

        r0 := @parameter0: org.apache.xmlbeans.SchemaProperty;

        $i0 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaProperty: int getJavaTypeCode()>();

        if $i0 != 0 goto label01;

        $r23 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaProperty: org.apache.xmlbeans.SchemaType javaBasedOnType()>();

        $r24 = virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: java.lang.String findJavaType(org.apache.xmlbeans.SchemaType)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.String: java.lang.String replace(char,char)>(36, 46);

        return $r25;

     label01:
        $i1 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaProperty: int getJavaTypeCode()>();

        if $i1 != 20 goto label02;

        $r20 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaProperty: org.apache.xmlbeans.SchemaType getType()>();

        $r21 = (org.apache.xmlbeans.impl.schema.SchemaTypeImpl) $r20;

        $r22 = virtualinvoke $r21.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: java.lang.String getUserTypeName()>();

        return $r22;

     label02:
        $i2 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaProperty: int getJavaTypeCode()>();

        tableswitch($i2)
        {
            case 1: goto label03;
            case 2: goto label04;
            case 3: goto label05;
            case 4: goto label06;
            case 5: goto label07;
            case 6: goto label08;
            case 7: goto label09;
            case 8: goto label10;
            case 9: goto label11;
            case 10: goto label12;
            case 11: goto label13;
            case 12: goto label14;
            case 13: goto label15;
            case 14: goto label16;
            case 15: goto label17;
            case 16: goto label18;
            case 17: goto label19;
            case 18: goto label20;
            case 19: goto label24;
            default: goto label25;
        };

     label03:
        return "boolean";

     label04:
        return "float";

     label05:
        return "double";

     label06:
        return "byte";

     label07:
        return "short";

     label08:
        return "int";

     label09:
        return "long";

     label10:
        return "java.math.BigDecimal";

     label11:
        return "java.math.BigInteger";

     label12:
        return "java.lang.String";

     label13:
        return "byte[]";

     label14:
        return "org.apache.xmlbeans.GDate";

     label15:
        return "org.apache.xmlbeans.GDuration";

     label16:
        return "java.util.Date";

     label17:
        return "javax.xml.namespace.QName";

     label18:
        return "java.util.List";

     label19:
        return "java.util.Calendar";

     label20:
        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaProperty: org.apache.xmlbeans.SchemaType javaBasedOnType()>();

        r26 = $r1;

        $i3 = interfaceinvoke $r1.<org.apache.xmlbeans.SchemaType: int getSimpleVariety()>();

        if $i3 != 2 goto label21;

        r26 = interfaceinvoke $r1.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType getUnionCommonBaseType()>();

     label21:
        $z0 = <org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: boolean $assertionsDisabled>;

        if $z0 != 0 goto label22;

        $r16 = interfaceinvoke r26.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType getBaseEnumType()>();

        if $r16 != null goto label22;

        $r17 = new java.lang.AssertionError;

        specialinvoke $r17.<java.lang.AssertionError: void <init>()>();

        throw $r17;

     label22:
        $z1 = specialinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: boolean hasBase(org.apache.xmlbeans.SchemaType)>(r26);

        if $z1 == 0 goto label23;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r10 = interfaceinvoke r26.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType getBaseEnumType()>();

        $r11 = virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: java.lang.String findJavaType(org.apache.xmlbeans.SchemaType)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.String: java.lang.String replace(char,char)>(36, 46);

        $r13 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".Enum");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r15;

     label23:
        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: java.lang.String findJavaType(org.apache.xmlbeans.SchemaType)>(r26);

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String replace(char,char)>(36, 46);

        $r6 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".Enum");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r8;

     label24:
        return "java.lang.Object";

     label25:
        $z2 = <org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: boolean $assertionsDisabled>;

        if $z2 != 0 goto label26;

        $r19 = new java.lang.AssertionError;

        specialinvoke $r19.<java.lang.AssertionError: void <init>()>();

        throw $r19;

     label26:
        $r18 = new java.lang.IllegalStateException;

        specialinvoke $r18.<java.lang.IllegalStateException: void <init>()>();

        throw $r18;
    }

    void printPropertyGetters(javax.xml.namespace.QName, boolean, java.lang.String, int, java.lang.String, java.lang.String, boolean, boolean, boolean, boolean) throws java.io.IOException
    {
        java.lang.StringBuffer $r0, $r1, $r4, $r5, $r6, $r8, $r10, $r11, $r14, $r15, $r16, $r17, $r19, $r21, $r22, $r23, $r24, $r26, $r27, $r28, $r30, $r31, $r32, $r33, $r34, $r36, $r37, $r38, $r40, $r41, $r42, $r43, $r45, $r46, $r47, $r49, $r50, $r51, $r52, $r54, $r55, $r56, $r57, $r59, $r61, $r62, $r63, $r64, $r66, $r67, $r68, $r70, $r71, $r72, $r73, $r74, $r76, $r77, $r78, $r79, $r81, $r82, $r83, $r84, $r86, $r87, $r88, $r89, $r90, $r91, $r93, $r94, $r95, $r96, $r98, $r99, $r100, $r101, $r103, $r104, $r105, $r106, $r107, $r108, $r110, $r111, $r112, $r114, $r115, $r116, $r117, $r119, $r120, $r121, $r123, $r124, $r125, $r126, $r127, $r129, $r130, $r131, $r133, $r134, $r135, $r136, $r138, $r139, $r140, $r142, $r143, $r144, $r145, $r146;
        int i0;
        javax.xml.namespace.QName r2;
        java.lang.String $r3, $r7, r9, $r12, $r18, r20, $r25, $r29, $r35, $r39, $r44, $r48, $r53, $r58, r60, $r65, $r69, $r75, $r80, $r85, $r92, $r97, $r102, $r109, $r113, $r118, $r122, $r128, $r132, $r137, $r141, $r147, $r148, $r149, $r150, $r151, $r152, r153;
        boolean z0, z1, z2, z3, z4, $z5, z6, $z7, $z8, $z9, $z10, $z11;
        org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter r13;

        r13 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter;

        r2 := @parameter0: javax.xml.namespace.QName;

        z0 := @parameter1: boolean;

        r9 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        r20 := @parameter4: java.lang.String;

        r60 := @parameter5: java.lang.String;

        z6 := @parameter6: boolean;

        z3 := @parameter7: boolean;

        z4 := @parameter8: boolean;

        z2 := @parameter9: boolean;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r3 = virtualinvoke r2.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        if z0 == 0 goto label01;

        $r148 = " attribute";

        goto label02;

     label01:
        $r148 = " element";

     label02:
        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r148);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        if i0 != 0 goto label03;

        $z10 = 1;

        goto label04;

     label03:
        $z10 = 0;

     label04:
        z1 = $z10;

        if z2 == 0 goto label12;

        $r119 = new java.lang.StringBuffer;

        specialinvoke $r119.<java.lang.StringBuffer: void <init>()>();

        if z4 == 0 goto label05;

        $r149 = "Gets first ";

        goto label06;

     label05:
        $r149 = "Gets the ";

     label06:
        $r120 = virtualinvoke $r119.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r149);

        $r121 = virtualinvoke $r120.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r122 = virtualinvoke $r121.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r13.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printJavaDoc(java.lang.String)>($r122);

        $r123 = new java.lang.StringBuffer;

        specialinvoke $r123.<java.lang.StringBuffer: void <init>()>();

        $r124 = virtualinvoke $r123.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r20);

        $r125 = virtualinvoke $r124.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" get");

        $r126 = virtualinvoke $r125.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r9);

        $r127 = virtualinvoke $r126.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("();");

        $r128 = virtualinvoke $r127.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r13.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r128);

        if z1 != 0 goto label09;

        $r138 = new java.lang.StringBuffer;

        specialinvoke $r138.<java.lang.StringBuffer: void <init>()>();

        if z4 == 0 goto label07;

        $r150 = "Gets (as xml) first ";

        goto label08;

     label07:
        $r150 = "Gets (as xml) the ";

     label08:
        $r139 = virtualinvoke $r138.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r150);

        $r140 = virtualinvoke $r139.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r141 = virtualinvoke $r140.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r13.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printJavaDoc(java.lang.String)>($r141);

        $r142 = new java.lang.StringBuffer;

        specialinvoke $r142.<java.lang.StringBuffer: void <init>()>();

        $r143 = virtualinvoke $r142.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r60);

        $r144 = virtualinvoke $r143.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" xget");

        $r145 = virtualinvoke $r144.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r9);

        $r146 = virtualinvoke $r145.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("();");

        $r147 = virtualinvoke $r146.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r13.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r147);

     label09:
        if z6 == 0 goto label12;

        $r129 = new java.lang.StringBuffer;

        specialinvoke $r129.<java.lang.StringBuffer: void <init>()>();

        if z4 == 0 goto label10;

        $r151 = "Tests for nil first ";

        goto label11;

     label10:
        $r151 = "Tests for nil ";

     label11:
        $r130 = virtualinvoke $r129.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r151);

        $r131 = virtualinvoke $r130.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r132 = virtualinvoke $r131.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r13.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printJavaDoc(java.lang.String)>($r132);

        $r133 = new java.lang.StringBuffer;

        specialinvoke $r133.<java.lang.StringBuffer: void <init>()>();

        $r134 = virtualinvoke $r133.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("boolean isNil");

        $r135 = virtualinvoke $r134.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r9);

        $r136 = virtualinvoke $r135.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("();");

        $r137 = virtualinvoke $r136.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r13.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r137);

     label12:
        if z3 == 0 goto label15;

        $r110 = new java.lang.StringBuffer;

        specialinvoke $r110.<java.lang.StringBuffer: void <init>()>();

        if z4 == 0 goto label13;

        $r152 = "True if has at least one ";

        goto label14;

     label13:
        $r152 = "True if has ";

     label14:
        $r111 = virtualinvoke $r110.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r152);

        $r112 = virtualinvoke $r111.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r113 = virtualinvoke $r112.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r13.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printJavaDoc(java.lang.String)>($r113);

        $r114 = new java.lang.StringBuffer;

        specialinvoke $r114.<java.lang.StringBuffer: void <init>()>();

        $r115 = virtualinvoke $r114.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("boolean isSet");

        $r116 = virtualinvoke $r115.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r9);

        $r117 = virtualinvoke $r116.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("();");

        $r118 = virtualinvoke $r117.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r13.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r118);

     label15:
        if z4 == 0 goto label25;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Array");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        $z5 = r13.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: boolean _useJava15>;

        if $z5 == 0 goto label17;

        r153 = r20;

        $z9 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: boolean isJavaPrimitive(int)>(i0);

        if $z9 == 0 goto label16;

        r153 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: java.lang.String javaWrappedType(int)>(i0);

     label16:
        $r98 = new java.lang.StringBuffer;

        specialinvoke $r98.<java.lang.StringBuffer: void <init>()>();

        $r99 = virtualinvoke $r98.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Gets a List of ");

        $r100 = virtualinvoke $r99.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r101 = virtualinvoke $r100.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("s");

        $r102 = virtualinvoke $r101.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r13.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printJavaDoc(java.lang.String)>($r102);

        $r103 = new java.lang.StringBuffer;

        specialinvoke $r103.<java.lang.StringBuffer: void <init>()>();

        $r104 = virtualinvoke $r103.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("java.util.List<");

        $r105 = virtualinvoke $r104.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r153);

        $r106 = virtualinvoke $r105.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("> get");

        $r107 = virtualinvoke $r106.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r9);

        $r108 = virtualinvoke $r107.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("List();");

        $r109 = virtualinvoke $r108.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r13.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r109);

     label17:
        $z11 = r13.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: boolean _useJava15>;

        if $z11 == 0 goto label18;

        virtualinvoke r13.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("");

        virtualinvoke r13.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("/**");

        $r93 = new java.lang.StringBuffer;

        specialinvoke $r93.<java.lang.StringBuffer: void <init>()>();

        $r94 = virtualinvoke $r93.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" * Gets array of all ");

        $r95 = virtualinvoke $r94.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r96 = virtualinvoke $r95.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("s");

        $r97 = virtualinvoke $r96.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r13.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r97);

        virtualinvoke r13.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>(" * @deprecated");

        virtualinvoke r13.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>(" */");

        virtualinvoke r13.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("@Deprecated");

        goto label19;

     label18:
        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Gets array of all ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("s");

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r13.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printJavaDoc(java.lang.String)>($r18);

     label19:
        $r19 = new java.lang.StringBuffer;

        specialinvoke $r19.<java.lang.StringBuffer: void <init>()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[] get");

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("();");

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r13.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r25);

        $r26 = new java.lang.StringBuffer;

        specialinvoke $r26.<java.lang.StringBuffer: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Gets ith ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r13.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printJavaDoc(java.lang.String)>($r29);

        $r30 = new java.lang.StringBuffer;

        specialinvoke $r30.<java.lang.StringBuffer: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r20);

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" get");

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(int i);");

        $r35 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r13.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r35);

        if z1 != 0 goto label23;

        $z7 = r13.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: boolean _useJava15>;

        if $z7 == 0 goto label20;

        $r81 = new java.lang.StringBuffer;

        specialinvoke $r81.<java.lang.StringBuffer: void <init>()>();

        $r82 = virtualinvoke $r81.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Gets (as xml) a List of ");

        $r83 = virtualinvoke $r82.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r84 = virtualinvoke $r83.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("s");

        $r85 = virtualinvoke $r84.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r13.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printJavaDoc(java.lang.String)>($r85);

        $r86 = new java.lang.StringBuffer;

        specialinvoke $r86.<java.lang.StringBuffer: void <init>()>();

        $r87 = virtualinvoke $r86.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("java.util.List<");

        $r88 = virtualinvoke $r87.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r60);

        $r89 = virtualinvoke $r88.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("> xget");

        $r90 = virtualinvoke $r89.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r9);

        $r91 = virtualinvoke $r90.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("List();");

        $r92 = virtualinvoke $r91.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r13.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r92);

     label20:
        $z8 = r13.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: boolean _useJava15>;

        if $z8 == 0 goto label21;

        virtualinvoke r13.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("");

        virtualinvoke r13.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("/**");

        $r76 = new java.lang.StringBuffer;

        specialinvoke $r76.<java.lang.StringBuffer: void <init>()>();

        $r77 = virtualinvoke $r76.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" * Gets (as xml) array of all ");

        $r78 = virtualinvoke $r77.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r79 = virtualinvoke $r78.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("s");

        $r80 = virtualinvoke $r79.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r13.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r80);

        virtualinvoke r13.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>(" * @deprecated");

        virtualinvoke r13.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>(" */");

        virtualinvoke r13.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("@Deprecated");

        goto label22;

     label21:
        $r54 = new java.lang.StringBuffer;

        specialinvoke $r54.<java.lang.StringBuffer: void <init>()>();

        $r55 = virtualinvoke $r54.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Gets (as xml) array of all ");

        $r56 = virtualinvoke $r55.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r57 = virtualinvoke $r56.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("s");

        $r58 = virtualinvoke $r57.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r13.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printJavaDoc(java.lang.String)>($r58);

     label22:
        $r59 = new java.lang.StringBuffer;

        specialinvoke $r59.<java.lang.StringBuffer: void <init>()>();

        $r61 = virtualinvoke $r59.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r60);

        $r62 = virtualinvoke $r61.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[] xget");

        $r63 = virtualinvoke $r62.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r64 = virtualinvoke $r63.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("();");

        $r65 = virtualinvoke $r64.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r13.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r65);

        $r66 = new java.lang.StringBuffer;

        specialinvoke $r66.<java.lang.StringBuffer: void <init>()>();

        $r67 = virtualinvoke $r66.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Gets (as xml) ith ");

        $r68 = virtualinvoke $r67.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r69 = virtualinvoke $r68.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r13.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printJavaDoc(java.lang.String)>($r69);

        $r70 = new java.lang.StringBuffer;

        specialinvoke $r70.<java.lang.StringBuffer: void <init>()>();

        $r71 = virtualinvoke $r70.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r60);

        $r72 = virtualinvoke $r71.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" xget");

        $r73 = virtualinvoke $r72.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r74 = virtualinvoke $r73.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(int i);");

        $r75 = virtualinvoke $r74.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r13.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r75);

     label23:
        if z6 == 0 goto label24;

        $r45 = new java.lang.StringBuffer;

        specialinvoke $r45.<java.lang.StringBuffer: void <init>()>();

        $r46 = virtualinvoke $r45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Tests for nil ith ");

        $r47 = virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r48 = virtualinvoke $r47.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r13.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printJavaDoc(java.lang.String)>($r48);

        $r49 = new java.lang.StringBuffer;

        specialinvoke $r49.<java.lang.StringBuffer: void <init>()>();

        $r50 = virtualinvoke $r49.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("boolean isNil");

        $r51 = virtualinvoke $r50.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r52 = virtualinvoke $r51.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(int i);");

        $r53 = virtualinvoke $r52.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r13.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r53);

     label24:
        $r36 = new java.lang.StringBuffer;

        specialinvoke $r36.<java.lang.StringBuffer: void <init>()>();

        $r37 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Returns number of ");

        $r38 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r39 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r13.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printJavaDoc(java.lang.String)>($r39);

        $r40 = new java.lang.StringBuffer;

        specialinvoke $r40.<java.lang.StringBuffer: void <init>()>();

        $r41 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("int sizeOf");

        $r42 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r43 = virtualinvoke $r42.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("();");

        $r44 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r13.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r44);

     label25:
        return;
    }

    void printPropertySetters(javax.xml.namespace.QName, boolean, java.lang.String, int, java.lang.String, java.lang.String, boolean, boolean, boolean, boolean) throws java.io.IOException
    {
        java.lang.StringBuffer $r3, $r4, $r7, $r8, $r9, $r11, $r12, $r13, $r16, $r17, $r18, $r20, $r21, $r22, $r23, $r25, $r26, $r27, $r28, $r30, $r31, $r32, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r43, $r44, $r45, $r47, $r49, $r50, $r51, $r52, $r54, $r55, $r56, $r58, $r59, $r60, $r61, $r62, $r64, $r65, $r66, $r68, $r69, $r70, $r71, $r73, $r74, $r75, $r77, $r78, $r79, $r80, $r81, $r82, $r83, $r84, $r86, $r87, $r88, $r90, $r91, $r92, $r93, $r94, $r95, $r96, $r97, $r99, $r100, $r101, $r103, $r104, $r105, $r106, $r108, $r109, $r110, $r112, $r113, $r114, $r115, $r116, $r117, $r118, $r119, $r121, $r122, $r123, $r125, $r126, $r127, $r128, $r129, $r130, $r131, $r132, $r134, $r135, $r136, $r138, $r139, $r140, $r141, $r143, $r144, $r145, $r147, $r148, $r149, $r150, $r151, $r152, $r153, $r154, $r156, $r157, $r158, $r160, $r161, $r162, $r163, $r165, $r166, $r167, $r169, $r170, $r171, $r172, $r173, $r175, $r176, $r177, $r179, $r180, $r181, $r182, $r183, $r184, $r185, $r186;
        int i0;
        javax.xml.namespace.QName r5;
        java.lang.String r0, $r1, $r2, $r6, $r10, $r14, $r19, r24, $r29, $r33, $r42, $r46, r48, $r53, $r57, $r63, $r67, $r72, $r76, $r85, $r89, $r98, $r102, $r107, $r111, $r120, $r124, $r133, $r137, $r142, $r146, $r155, $r159, $r164, $r168, $r174, $r178, $r187, r188, $r189, $r190, $r191, $r192, $r193;
        boolean $z0, z1, z2, z3, z4, z5, z6, $z7;
        org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter r15;

        r15 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter;

        r5 := @parameter0: javax.xml.namespace.QName;

        z2 := @parameter1: boolean;

        r0 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        r24 := @parameter4: java.lang.String;

        r48 := @parameter5: java.lang.String;

        z6 := @parameter6: boolean;

        z4 := @parameter7: boolean;

        z5 := @parameter8: boolean;

        z3 := @parameter9: boolean;

        $r1 = staticinvoke <org.apache.xmlbeans.impl.common.NameUtil: java.lang.String lowerCamelCase(java.lang.String)>(r0);

        $r2 = staticinvoke <org.apache.xmlbeans.impl.common.NameUtil: java.lang.String nonJavaKeyword(java.lang.String)>($r1);

        r188 = $r2;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("i");

        if $z0 == 0 goto label01;

        r188 = "iValue";

     label01:
        if i0 != 0 goto label02;

        $z7 = 1;

        goto label03;

     label02:
        $z7 = 0;

     label03:
        z1 = $z7;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r6 = virtualinvoke r5.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        if z2 == 0 goto label04;

        $r189 = " attribute";

        goto label05;

     label04:
        $r189 = " element";

     label05:
        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r189);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        if z3 == 0 goto label14;

        $r143 = new java.lang.StringBuffer;

        specialinvoke $r143.<java.lang.StringBuffer: void <init>()>();

        if z5 == 0 goto label06;

        $r190 = "Sets first ";

        goto label07;

     label06:
        $r190 = "Sets the ";

     label07:
        $r144 = virtualinvoke $r143.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r190);

        $r145 = virtualinvoke $r144.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r146 = virtualinvoke $r145.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r15.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printJavaDoc(java.lang.String)>($r146);

        $r147 = new java.lang.StringBuffer;

        specialinvoke $r147.<java.lang.StringBuffer: void <init>()>();

        $r148 = virtualinvoke $r147.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("void set");

        $r149 = virtualinvoke $r148.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r150 = virtualinvoke $r149.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        $r151 = virtualinvoke $r150.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r24);

        $r152 = virtualinvoke $r151.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r153 = virtualinvoke $r152.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r188);

        $r154 = virtualinvoke $r153.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");");

        $r155 = virtualinvoke $r154.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r15.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r155);

        if z1 != 0 goto label10;

        $r175 = new java.lang.StringBuffer;

        specialinvoke $r175.<java.lang.StringBuffer: void <init>()>();

        if z5 == 0 goto label08;

        $r191 = "Sets (as xml) first ";

        goto label09;

     label08:
        $r191 = "Sets (as xml) the ";

     label09:
        $r176 = virtualinvoke $r175.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r191);

        $r177 = virtualinvoke $r176.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r178 = virtualinvoke $r177.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r15.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printJavaDoc(java.lang.String)>($r178);

        $r179 = new java.lang.StringBuffer;

        specialinvoke $r179.<java.lang.StringBuffer: void <init>()>();

        $r180 = virtualinvoke $r179.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("void xset");

        $r181 = virtualinvoke $r180.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r182 = virtualinvoke $r181.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        $r183 = virtualinvoke $r182.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r48);

        $r184 = virtualinvoke $r183.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r185 = virtualinvoke $r184.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r188);

        $r186 = virtualinvoke $r185.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");");

        $r187 = virtualinvoke $r186.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r15.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r187);

     label10:
        if z1 == 0 goto label11;

        if z5 != 0 goto label11;

        $r165 = new java.lang.StringBuffer;

        specialinvoke $r165.<java.lang.StringBuffer: void <init>()>();

        $r166 = virtualinvoke $r165.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Appends and returns a new empty ");

        $r167 = virtualinvoke $r166.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r168 = virtualinvoke $r167.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r15.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printJavaDoc(java.lang.String)>($r168);

        $r169 = new java.lang.StringBuffer;

        specialinvoke $r169.<java.lang.StringBuffer: void <init>()>();

        $r170 = virtualinvoke $r169.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r48);

        $r171 = virtualinvoke $r170.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" addNew");

        $r172 = virtualinvoke $r171.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r173 = virtualinvoke $r172.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("();");

        $r174 = virtualinvoke $r173.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r15.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r174);

     label11:
        if z6 == 0 goto label14;

        $r156 = new java.lang.StringBuffer;

        specialinvoke $r156.<java.lang.StringBuffer: void <init>()>();

        if z5 == 0 goto label12;

        $r192 = "Nils the first ";

        goto label13;

     label12:
        $r192 = "Nils the ";

     label13:
        $r157 = virtualinvoke $r156.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r192);

        $r158 = virtualinvoke $r157.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r159 = virtualinvoke $r158.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r15.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printJavaDoc(java.lang.String)>($r159);

        $r160 = new java.lang.StringBuffer;

        specialinvoke $r160.<java.lang.StringBuffer: void <init>()>();

        $r161 = virtualinvoke $r160.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("void setNil");

        $r162 = virtualinvoke $r161.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r163 = virtualinvoke $r162.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("();");

        $r164 = virtualinvoke $r163.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r15.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r164);

     label14:
        if z4 == 0 goto label17;

        $r134 = new java.lang.StringBuffer;

        specialinvoke $r134.<java.lang.StringBuffer: void <init>()>();

        if z5 == 0 goto label15;

        $r193 = "Removes first ";

        goto label16;

     label15:
        $r193 = "Unsets the ";

     label16:
        $r135 = virtualinvoke $r134.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r193);

        $r136 = virtualinvoke $r135.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r137 = virtualinvoke $r136.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r15.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printJavaDoc(java.lang.String)>($r137);

        $r138 = new java.lang.StringBuffer;

        specialinvoke $r138.<java.lang.StringBuffer: void <init>()>();

        $r139 = virtualinvoke $r138.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("void unset");

        $r140 = virtualinvoke $r139.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r141 = virtualinvoke $r140.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("();");

        $r142 = virtualinvoke $r141.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r15.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r142);

     label17:
        if z5 == 0 goto label21;

        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Array");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Sets array of all ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r15.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printJavaDoc(java.lang.String)>($r19);

        $r20 = new java.lang.StringBuffer;

        specialinvoke $r20.<java.lang.StringBuffer: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("void set");

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        $r25 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[] ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r188);

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Array);");

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r15.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r29);

        $r30 = new java.lang.StringBuffer;

        specialinvoke $r30.<java.lang.StringBuffer: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Sets ith ");

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r15.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printJavaDoc(java.lang.String)>($r33);

        $r34 = new java.lang.StringBuffer;

        specialinvoke $r34.<java.lang.StringBuffer: void <init>()>();

        $r35 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("void set");

        $r36 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r37 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(int i, ");

        $r38 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r24);

        $r39 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r40 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r188);

        $r41 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");");

        $r42 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r15.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r42);

        if z1 != 0 goto label18;

        $r108 = new java.lang.StringBuffer;

        specialinvoke $r108.<java.lang.StringBuffer: void <init>()>();

        $r109 = virtualinvoke $r108.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Sets (as xml) array of all ");

        $r110 = virtualinvoke $r109.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r111 = virtualinvoke $r110.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r15.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printJavaDoc(java.lang.String)>($r111);

        $r112 = new java.lang.StringBuffer;

        specialinvoke $r112.<java.lang.StringBuffer: void <init>()>();

        $r113 = virtualinvoke $r112.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("void xset");

        $r114 = virtualinvoke $r113.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r115 = virtualinvoke $r114.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        $r116 = virtualinvoke $r115.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r48);

        $r117 = virtualinvoke $r116.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[] ");

        $r118 = virtualinvoke $r117.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r188);

        $r119 = virtualinvoke $r118.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Array);");

        $r120 = virtualinvoke $r119.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r15.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r120);

        $r121 = new java.lang.StringBuffer;

        specialinvoke $r121.<java.lang.StringBuffer: void <init>()>();

        $r122 = virtualinvoke $r121.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Sets (as xml) ith ");

        $r123 = virtualinvoke $r122.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r124 = virtualinvoke $r123.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r15.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printJavaDoc(java.lang.String)>($r124);

        $r125 = new java.lang.StringBuffer;

        specialinvoke $r125.<java.lang.StringBuffer: void <init>()>();

        $r126 = virtualinvoke $r125.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("void xset");

        $r127 = virtualinvoke $r126.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r128 = virtualinvoke $r127.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(int i, ");

        $r129 = virtualinvoke $r128.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r48);

        $r130 = virtualinvoke $r129.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r131 = virtualinvoke $r130.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r188);

        $r132 = virtualinvoke $r131.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");");

        $r133 = virtualinvoke $r132.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r15.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r133);

     label18:
        if z6 == 0 goto label19;

        $r99 = new java.lang.StringBuffer;

        specialinvoke $r99.<java.lang.StringBuffer: void <init>()>();

        $r100 = virtualinvoke $r99.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Nils the ith ");

        $r101 = virtualinvoke $r100.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r102 = virtualinvoke $r101.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r15.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printJavaDoc(java.lang.String)>($r102);

        $r103 = new java.lang.StringBuffer;

        specialinvoke $r103.<java.lang.StringBuffer: void <init>()>();

        $r104 = virtualinvoke $r103.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("void setNil");

        $r105 = virtualinvoke $r104.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r106 = virtualinvoke $r105.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(int i);");

        $r107 = virtualinvoke $r106.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r15.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r107);

     label19:
        if z1 != 0 goto label20;

        $r73 = new java.lang.StringBuffer;

        specialinvoke $r73.<java.lang.StringBuffer: void <init>()>();

        $r74 = virtualinvoke $r73.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Inserts the value as the ith ");

        $r75 = virtualinvoke $r74.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r76 = virtualinvoke $r75.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r15.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printJavaDoc(java.lang.String)>($r76);

        $r77 = new java.lang.StringBuffer;

        specialinvoke $r77.<java.lang.StringBuffer: void <init>()>();

        $r78 = virtualinvoke $r77.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("void insert");

        $r79 = virtualinvoke $r78.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r80 = virtualinvoke $r79.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(int i, ");

        $r81 = virtualinvoke $r80.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r24);

        $r82 = virtualinvoke $r81.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r83 = virtualinvoke $r82.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r188);

        $r84 = virtualinvoke $r83.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");");

        $r85 = virtualinvoke $r84.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r15.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r85);

        $r86 = new java.lang.StringBuffer;

        specialinvoke $r86.<java.lang.StringBuffer: void <init>()>();

        $r87 = virtualinvoke $r86.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Appends the value as the last ");

        $r88 = virtualinvoke $r87.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r89 = virtualinvoke $r88.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r15.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printJavaDoc(java.lang.String)>($r89);

        $r90 = new java.lang.StringBuffer;

        specialinvoke $r90.<java.lang.StringBuffer: void <init>()>();

        $r91 = virtualinvoke $r90.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("void add");

        $r92 = virtualinvoke $r91.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r93 = virtualinvoke $r92.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        $r94 = virtualinvoke $r93.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r24);

        $r95 = virtualinvoke $r94.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r96 = virtualinvoke $r95.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r188);

        $r97 = virtualinvoke $r96.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");");

        $r98 = virtualinvoke $r97.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r15.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r98);

     label20:
        $r43 = new java.lang.StringBuffer;

        specialinvoke $r43.<java.lang.StringBuffer: void <init>()>();

        $r44 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Inserts and returns a new empty value (as xml) as the ith ");

        $r45 = virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r46 = virtualinvoke $r45.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r15.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printJavaDoc(java.lang.String)>($r46);

        $r47 = new java.lang.StringBuffer;

        specialinvoke $r47.<java.lang.StringBuffer: void <init>()>();

        $r49 = virtualinvoke $r47.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r48);

        $r50 = virtualinvoke $r49.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" insertNew");

        $r51 = virtualinvoke $r50.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r52 = virtualinvoke $r51.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(int i);");

        $r53 = virtualinvoke $r52.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r15.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r53);

        $r54 = new java.lang.StringBuffer;

        specialinvoke $r54.<java.lang.StringBuffer: void <init>()>();

        $r55 = virtualinvoke $r54.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Appends and returns a new empty value (as xml) as the last ");

        $r56 = virtualinvoke $r55.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r57 = virtualinvoke $r56.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r15.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printJavaDoc(java.lang.String)>($r57);

        $r58 = new java.lang.StringBuffer;

        specialinvoke $r58.<java.lang.StringBuffer: void <init>()>();

        $r59 = virtualinvoke $r58.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r48);

        $r60 = virtualinvoke $r59.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" addNew");

        $r61 = virtualinvoke $r60.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r62 = virtualinvoke $r61.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("();");

        $r63 = virtualinvoke $r62.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r15.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r63);

        $r64 = new java.lang.StringBuffer;

        specialinvoke $r64.<java.lang.StringBuffer: void <init>()>();

        $r65 = virtualinvoke $r64.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Removes the ith ");

        $r66 = virtualinvoke $r65.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r67 = virtualinvoke $r66.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r15.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printJavaDoc(java.lang.String)>($r67);

        $r68 = new java.lang.StringBuffer;

        specialinvoke $r68.<java.lang.StringBuffer: void <init>()>();

        $r69 = virtualinvoke $r68.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("void remove");

        $r70 = virtualinvoke $r69.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r71 = virtualinvoke $r70.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(int i);");

        $r72 = virtualinvoke $r71.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r15.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r72);

     label21:
        return;
    }

    java.lang.String getAtomicRestrictionType(org.apache.xmlbeans.SchemaType)
    {
        java.lang.AssertionError $r2, $r3;
        int $i0, $i1;
        org.apache.xmlbeans.SchemaType r0, $r1;
        org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter r4;
        boolean $z0, $z1, $z2;

        r4 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter;

        r0 := @parameter0: org.apache.xmlbeans.SchemaType;

        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType getPrimitiveType()>();

        $i0 = interfaceinvoke $r1.<org.apache.xmlbeans.SchemaType: int getBuiltinTypeCode()>();

        tableswitch($i0)
        {
            case 2: goto label01;
            case 3: goto label02;
            case 4: goto label03;
            case 5: goto label04;
            case 6: goto label05;
            case 7: goto label06;
            case 8: goto label07;
            case 9: goto label08;
            case 10: goto label09;
            case 11: goto label10;
            case 12: goto label16;
            case 13: goto label19;
            case 14: goto label18;
            case 15: goto label18;
            case 16: goto label18;
            case 17: goto label18;
            case 18: goto label18;
            case 19: goto label18;
            case 20: goto label18;
            case 21: goto label18;
            default: goto label20;
        };

     label01:
        return "org.apache.xmlbeans.impl.values.XmlAnySimpleTypeImpl";

     label02:
        return "org.apache.xmlbeans.impl.values.JavaBooleanHolderEx";

     label03:
        return "org.apache.xmlbeans.impl.values.JavaBase64HolderEx";

     label04:
        return "org.apache.xmlbeans.impl.values.JavaHexBinaryHolderEx";

     label05:
        return "org.apache.xmlbeans.impl.values.JavaUriHolderEx";

     label06:
        return "org.apache.xmlbeans.impl.values.JavaQNameHolderEx";

     label07:
        return "org.apache.xmlbeans.impl.values.JavaNotationHolderEx";

     label08:
        return "org.apache.xmlbeans.impl.values.JavaFloatHolderEx";

     label09:
        return "org.apache.xmlbeans.impl.values.JavaDoubleHolderEx";

     label10:
        $i1 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: int getDecimalSize()>();

        lookupswitch($i1)
        {
            case 8: goto label15;
            case 16: goto label15;
            case 32: goto label15;
            case 64: goto label14;
            case 1000000: goto label13;
            case 1000001: goto label12;
            default: goto label11;
        };

     label11:
        $z1 = <org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: boolean $assertionsDisabled>;

        if $z1 != 0 goto label12;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label12:
        return "org.apache.xmlbeans.impl.values.JavaDecimalHolderEx";

     label13:
        return "org.apache.xmlbeans.impl.values.JavaIntegerHolderEx";

     label14:
        return "org.apache.xmlbeans.impl.values.JavaLongHolderEx";

     label15:
        return "org.apache.xmlbeans.impl.values.JavaIntHolderEx";

     label16:
        $z0 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: boolean hasStringEnumValues()>();

        if $z0 == 0 goto label17;

        return "org.apache.xmlbeans.impl.values.JavaStringEnumerationHolderEx";

     label17:
        return "org.apache.xmlbeans.impl.values.JavaStringHolderEx";

     label18:
        return "org.apache.xmlbeans.impl.values.JavaGDateHolderEx";

     label19:
        return "org.apache.xmlbeans.impl.values.JavaGDurationHolderEx";

     label20:
        $z2 = <org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: boolean $assertionsDisabled>;

        if $z2 != 0 goto label21;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>(java.lang.Object)>("unrecognized primitive type");

        throw $r3;

     label21:
        return null;
    }

    static org.apache.xmlbeans.SchemaType findBaseType(org.apache.xmlbeans.SchemaType)
    {
        java.lang.String $r0;
        org.apache.xmlbeans.SchemaType r1;

        r1 := @parameter0: org.apache.xmlbeans.SchemaType;

     label1:
        $r0 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: java.lang.String getFullJavaName()>();

        if $r0 != null goto label2;

        r1 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType getBaseType()>();

        goto label1;

     label2:
        return r1;
    }

    java.lang.String getBaseClass(org.apache.xmlbeans.SchemaType)
    {
        java.lang.IllegalStateException $r8;
        java.lang.AssertionError $r5;
        int $i0;
        java.lang.String $r4, $r7;
        org.apache.xmlbeans.SchemaType r0, $r1, $r2, $r6;
        org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter r3;
        boolean $z0, $z1, $z2;

        r3 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter;

        r0 := @parameter0: org.apache.xmlbeans.SchemaType;

        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType getBaseType()>();

        $r2 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: org.apache.xmlbeans.SchemaType findBaseType(org.apache.xmlbeans.SchemaType)>($r1);

        $i0 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: int getSimpleVariety()>();

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label3;
            case 2: goto label6;
            case 3: goto label5;
            default: goto label7;
        };

     label1:
        $r6 = <org.apache.xmlbeans.XmlObject: org.apache.xmlbeans.SchemaType type>;

        $z2 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>($r2);

        if $z2 != 0 goto label2;

        $r7 = interfaceinvoke $r2.<org.apache.xmlbeans.SchemaType: java.lang.String getFullJavaImplName()>();

        return $r7;

     label2:
        return "org.apache.xmlbeans.impl.values.XmlComplexContentImpl";

     label3:
        $z0 = <org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: boolean $assertionsDisabled>;

        if $z0 != 0 goto label4;

        $z1 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: boolean isBuiltinType()>();

        if $z1 == 0 goto label4;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label4:
        $r4 = virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: java.lang.String getAtomicRestrictionType(org.apache.xmlbeans.SchemaType)>(r0);

        return $r4;

     label5:
        return "org.apache.xmlbeans.impl.values.XmlListImpl";

     label6:
        return "org.apache.xmlbeans.impl.values.XmlUnionImpl";

     label7:
        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>()>();

        throw $r8;
    }

    void printConstructor(org.apache.xmlbeans.SchemaType, java.lang.String) throws java.io.IOException
    {
        java.lang.StringBuffer $r1, $r2, $r4, $r5, $r7, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r17, $r19, $r20;
        int $i0, $i1;
        java.lang.String r3, $r6, $r16, $r18, $r21;
        org.apache.xmlbeans.SchemaType r8;
        boolean $z0, $z1;
        org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter r0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter;

        r8 := @parameter0: org.apache.xmlbeans.SchemaType;

        r3 := @parameter1: java.lang.String;

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("");

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("public ");

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(org.apache.xmlbeans.SchemaType sType)");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r6);

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void startBlock()>();

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r17 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("super(sType");

        $i0 = interfaceinvoke r8.<org.apache.xmlbeans.SchemaType: int getSimpleVariety()>();

        if $i0 != 0 goto label1;

        $r18 = "";

        goto label4;

     label1:
        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $z0 = interfaceinvoke r8.<org.apache.xmlbeans.SchemaType: boolean isSimpleType()>();

        if $z0 != 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z1);

        $r18 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

     label4:
        $r19 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");");

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r21);

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void endBlock()>();

        $i1 = interfaceinvoke r8.<org.apache.xmlbeans.SchemaType: int getSimpleVariety()>();

        if $i1 == 0 goto label5;

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("");

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("protected ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(org.apache.xmlbeans.SchemaType sType, boolean b)");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r16);

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void startBlock()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("super(sType, b);");

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void endBlock()>();

     label5:
        return;
    }

    void startClass(org.apache.xmlbeans.SchemaType, boolean) throws java.io.IOException
    {
        org.apache.xmlbeans.SchemaType[] $r18;
        java.lang.StringBuffer $r4, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r16, $r19, $r20, $r24;
        int $i0, $i1, i2;
        java.lang.String $r1, $r3, $r5, $r6, $r15, $r17, $r22, $r23, $r25, $r26;
        org.apache.xmlbeans.SchemaType r0, $r21;
        boolean z0;
        org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter r2;

        r2 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter;

        r0 := @parameter0: org.apache.xmlbeans.SchemaType;

        z0 := @parameter1: boolean;

        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: java.lang.String getShortJavaImplName()>();

        $r3 = virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: java.lang.String getBaseClass(org.apache.xmlbeans.SchemaType)>(r0);

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: java.lang.String getFullJavaName()>();

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String replace(char,char)>(36, 46);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $i0 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: int getSimpleVariety()>();

        if $i0 != 2 goto label2;

        $r18 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType[] getUnionMemberTypes()>();

        i2 = 0;

     label1:
        $i1 = lengthof $r18;

        if i2 >= $i1 goto label2;

        $r19 = new java.lang.StringBuffer;

        specialinvoke $r19.<java.lang.StringBuffer: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r21 = $r18[i2];

        $r22 = interfaceinvoke $r21.<org.apache.xmlbeans.SchemaType: java.lang.String getFullJavaName()>();

        $r23 = virtualinvoke $r22.<java.lang.String: java.lang.String replace(char,char)>(36, 46);

        $r24 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r25);

        i2 = i2 + 1;

        goto label1;

     label2:
        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("public ");

        if z0 == 0 goto label3;

        $r26 = "static ";

        goto label4;

     label3:
        $r26 = "";

     label4:
        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r26);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("class ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" extends ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" implements ");

        $r15 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r17);

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void startBlock()>();

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("private static final long serialVersionUID = 1L;");

        return;
    }

    void makeAttributeDefaultValue(java.lang.String, org.apache.xmlbeans.SchemaProperty, java.lang.String) throws java.io.IOException
    {
        java.lang.StringBuffer $r2, $r3, $r4, $r5, $r7, $r8;
        org.apache.xmlbeans.SchemaProperty r10;
        java.lang.String r0, r6, $r9, $r12, r13;
        org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter r1;
        org.apache.xmlbeans.SchemaType $r11;

        r1 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter;

        r0 := @parameter0: java.lang.String;

        r10 := @parameter1: org.apache.xmlbeans.SchemaProperty;

        r6 := @parameter2: java.lang.String;

        r13 = r0;

        if r0 != null goto label1;

        $r11 = interfaceinvoke r10.<org.apache.xmlbeans.SchemaProperty: org.apache.xmlbeans.SchemaType javaBasedOnType()>();

        $r12 = interfaceinvoke $r11.<org.apache.xmlbeans.SchemaType: java.lang.String getFullJavaName()>();

        r13 = virtualinvoke $r12.<java.lang.String: java.lang.String replace(char,char)>(36, 46);

     label1:
        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("target = (");

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r13);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")get_default_attribute_value(");

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r9);

        return;
    }

    void makeMissingValue(int) throws java.io.IOException
    {
        int i0;
        org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter r0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label6;
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            case 5: goto label4;
            case 6: goto label4;
            case 7: goto label5;
            case 8: goto label6;
            case 9: goto label6;
            case 10: goto label6;
            case 11: goto label6;
            case 12: goto label6;
            case 13: goto label6;
            case 14: goto label6;
            case 15: goto label6;
            case 16: goto label6;
            case 17: goto label6;
            case 18: goto label6;
            case 19: goto label6;
            default: goto label6;
        };

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("return false;");

        goto label7;

     label2:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("return 0.0f;");

        goto label7;

     label3:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("return 0.0;");

        goto label7;

     label4:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("return 0;");

        goto label7;

     label5:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("return 0L;");

        goto label7;

     label6:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("return null;");

     label7:
        return;
    }

    void printJGetArrayValue(int, java.lang.String, org.apache.xmlbeans.impl.schema.SchemaTypeImpl) throws java.io.IOException
    {
        java.lang.IllegalStateException $r34;
        org.apache.xmlbeans.impl.schema.SchemaTypeImpl r2;
        org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter r0;
        java.lang.StringBuffer $r1, $r4, $r5, $r7, $r8, $r10, $r11, $r13, $r14, $r16, $r18, $r19, $r20, $r21, $r23, $r24, $r25, $r26, $r28, $r29, $r30, $r31, $r32;
        int i0;
        java.lang.String $r3, $r6, $r9, $r12, $r15, r17, $r22, $r27, $r33;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter;

        i0 := @parameter0: int;

        r17 := @parameter1: java.lang.String;

        r2 := @parameter2: org.apache.xmlbeans.impl.schema.SchemaTypeImpl;

        tableswitch(i0)
        {
            case 0: goto label01;
            case 1: goto label03;
            case 2: goto label04;
            case 3: goto label05;
            case 4: goto label06;
            case 5: goto label07;
            case 6: goto label08;
            case 7: goto label09;
            case 8: goto label10;
            case 9: goto label11;
            case 10: goto label12;
            case 11: goto label13;
            case 12: goto label16;
            case 13: goto label17;
            case 14: goto label15;
            case 15: goto label18;
            case 16: goto label19;
            case 17: goto label14;
            case 18: goto label02;
            case 19: goto label20;
            case 20: goto label21;
            default: goto label22;
        };

     label01:
        $r28 = new java.lang.StringBuffer;

        specialinvoke $r28.<java.lang.StringBuffer: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r17);

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[] result = new ");

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r17);

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[targetList.size()];");

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r33);

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("targetList.toArray(result);");

        goto label23;

     label02:
        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[] result = new ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r17);

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[targetList.size()];");

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r22);

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("for (int i = 0, len = targetList.size() ; i < len ; i++)");

        $r23 = new java.lang.StringBuffer;

        specialinvoke $r23.<java.lang.StringBuffer: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    result[i] = (");

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r17);

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")((org.apache.xmlbeans.SimpleValue)targetList.get(i)).getEnumValue();");

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r27);

        goto label23;

     label03:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("boolean[] result = new boolean[targetList.size()];");

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("for (int i = 0, len = targetList.size() ; i < len ; i++)");

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("    result[i] = ((org.apache.xmlbeans.SimpleValue)targetList.get(i)).getBooleanValue();");

        goto label23;

     label04:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("float[] result = new float[targetList.size()];");

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("for (int i = 0, len = targetList.size() ; i < len ; i++)");

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("    result[i] = ((org.apache.xmlbeans.SimpleValue)targetList.get(i)).getFloatValue();");

        goto label23;

     label05:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("double[] result = new double[targetList.size()];");

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("for (int i = 0, len = targetList.size() ; i < len ; i++)");

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("    result[i] = ((org.apache.xmlbeans.SimpleValue)targetList.get(i)).getDoubleValue();");

        goto label23;

     label06:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("byte[] result = new byte[targetList.size()];");

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("for (int i = 0, len = targetList.size() ; i < len ; i++)");

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("    result[i] = ((org.apache.xmlbeans.SimpleValue)targetList.get(i)).getByteValue();");

        goto label23;

     label07:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("short[] result = new short[targetList.size()];");

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("for (int i = 0, len = targetList.size() ; i < len ; i++)");

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("    result[i] = ((org.apache.xmlbeans.SimpleValue)targetList.get(i)).getShortValue();");

        goto label23;

     label08:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("int[] result = new int[targetList.size()];");

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("for (int i = 0, len = targetList.size() ; i < len ; i++)");

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("    result[i] = ((org.apache.xmlbeans.SimpleValue)targetList.get(i)).getIntValue();");

        goto label23;

     label09:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("long[] result = new long[targetList.size()];");

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("for (int i = 0, len = targetList.size() ; i < len ; i++)");

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("    result[i] = ((org.apache.xmlbeans.SimpleValue)targetList.get(i)).getLongValue();");

        goto label23;

     label10:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("java.math.BigDecimal[] result = new java.math.BigDecimal[targetList.size()];");

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("for (int i = 0, len = targetList.size() ; i < len ; i++)");

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("    result[i] = ((org.apache.xmlbeans.SimpleValue)targetList.get(i)).getBigDecimalValue();");

        goto label23;

     label11:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("java.math.BigInteger[] result = new java.math.BigInteger[targetList.size()];");

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("for (int i = 0, len = targetList.size() ; i < len ; i++)");

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("    result[i] = ((org.apache.xmlbeans.SimpleValue)targetList.get(i)).getBigIntegerValue();");

        goto label23;

     label12:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("java.lang.String[] result = new java.lang.String[targetList.size()];");

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("for (int i = 0, len = targetList.size() ; i < len ; i++)");

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("    result[i] = ((org.apache.xmlbeans.SimpleValue)targetList.get(i)).getStringValue();");

        goto label23;

     label13:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("byte[][] result = new byte[targetList.size()][];");

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("for (int i = 0, len = targetList.size() ; i < len ; i++)");

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("    result[i] = ((org.apache.xmlbeans.SimpleValue)targetList.get(i)).getByteArrayValue();");

        goto label23;

     label14:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("java.util.Calendar[] result = new java.util.Calendar[targetList.size()];");

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("for (int i = 0, len = targetList.size() ; i < len ; i++)");

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("    result[i] = ((org.apache.xmlbeans.SimpleValue)targetList.get(i)).getCalendarValue();");

        goto label23;

     label15:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("java.util.Date[] result = new java.util.Date[targetList.size()];");

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("for (int i = 0, len = targetList.size() ; i < len ; i++)");

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("    result[i] = ((org.apache.xmlbeans.SimpleValue)targetList.get(i)).getDateValue();");

        goto label23;

     label16:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("org.apache.xmlbeans.GDate[] result = new org.apache.xmlbeans.GDate[targetList.size()];");

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("for (int i = 0, len = targetList.size() ; i < len ; i++)");

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("    result[i] = ((org.apache.xmlbeans.SimpleValue)targetList.get(i)).getGDateValue();");

        goto label23;

     label17:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("org.apache.xmlbeans.GDuration[] result = new org.apache.xmlbeans.GDuration[targetList.size()];");

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("for (int i = 0, len = targetList.size() ; i < len ; i++)");

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("    result[i] = ((org.apache.xmlbeans.SimpleValue)targetList.get(i)).getGDurationValue();");

        goto label23;

     label18:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("javax.xml.namespace.QName[] result = new javax.xml.namespace.QName[targetList.size()];");

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("for (int i = 0, len = targetList.size() ; i < len ; i++)");

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("    result[i] = ((org.apache.xmlbeans.SimpleValue)targetList.get(i)).getQNameValue();");

        goto label23;

     label19:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("java.util.List[] result = new java.util.List[targetList.size()];");

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("for (int i = 0, len = targetList.size() ; i < len ; i++)");

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("    result[i] = ((org.apache.xmlbeans.SimpleValue)targetList.get(i)).getListValue();");

        goto label23;

     label20:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("java.lang.Object[] result = new java.lang.Object[targetList.size()];");

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("for (int i = 0, len = targetList.size() ; i < len ; i++)");

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("    result[i] = ((org.apache.xmlbeans.SimpleValue)targetList.get(i)).getObjectValue();");

        goto label23;

     label21:
        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: java.lang.String getUserTypeName()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[] result = new ");

        $r6 = virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: java.lang.String getUserTypeName()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[targetList.size()];");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r9);

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("for (int i = 0, len = targetList.size() ; i < len ; i++)");

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    result[i] = ");

        $r12 = specialinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: java.lang.String getUserTypeStaticHandlerMethod(boolean,org.apache.xmlbeans.impl.schema.SchemaTypeImpl)>(0, r2);

        $r13 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("((org.apache.xmlbeans.SimpleValue)targetList.get(i));");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r15);

        goto label23;

     label22:
        $r34 = new java.lang.IllegalStateException;

        specialinvoke $r34.<java.lang.IllegalStateException: void <init>()>();

        throw $r34;

     label23:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("return result;");

        return;
    }

    void printJGetValue(int, java.lang.String, org.apache.xmlbeans.impl.schema.SchemaTypeImpl) throws java.io.IOException
    {
        java.lang.IllegalStateException $r14;
        java.lang.StringBuffer $r1, $r2, $r5, $r6, $r8, $r9, $r11, $r12;
        int i0;
        org.apache.xmlbeans.impl.schema.SchemaTypeImpl r3;
        java.lang.String $r4, $r7, r10, $r13;
        org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter r0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter;

        i0 := @parameter0: int;

        r10 := @parameter1: java.lang.String;

        r3 := @parameter2: org.apache.xmlbeans.impl.schema.SchemaTypeImpl;

        tableswitch(i0)
        {
            case 0: goto label01;
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label04;
            case 4: goto label05;
            case 5: goto label06;
            case 6: goto label07;
            case 7: goto label08;
            case 8: goto label09;
            case 9: goto label10;
            case 10: goto label11;
            case 11: goto label12;
            case 12: goto label13;
            case 13: goto label14;
            case 14: goto label16;
            case 15: goto label17;
            case 16: goto label18;
            case 17: goto label15;
            case 18: goto label19;
            case 19: goto label20;
            case 20: goto label21;
            default: goto label22;
        };

     label01:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("return target;");

        goto label23;

     label02:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("return target.getBooleanValue();");

        goto label23;

     label03:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("return target.getFloatValue();");

        goto label23;

     label04:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("return target.getDoubleValue();");

        goto label23;

     label05:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("return target.getByteValue();");

        goto label23;

     label06:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("return target.getShortValue();");

        goto label23;

     label07:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("return target.getIntValue();");

        goto label23;

     label08:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("return target.getLongValue();");

        goto label23;

     label09:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("return target.getBigDecimalValue();");

        goto label23;

     label10:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("return target.getBigIntegerValue();");

        goto label23;

     label11:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("return target.getStringValue();");

        goto label23;

     label12:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("return target.getByteArrayValue();");

        goto label23;

     label13:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("return target.getGDateValue();");

        goto label23;

     label14:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("return target.getGDurationValue();");

        goto label23;

     label15:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("return target.getCalendarValue();");

        goto label23;

     label16:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("return target.getDateValue();");

        goto label23;

     label17:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("return target.getQNameValue();");

        goto label23;

     label18:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("return target.getListValue();");

        goto label23;

     label19:
        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("return (");

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")target.getEnumValue();");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r13);

        goto label23;

     label20:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("return target.getObjectValue();");

        goto label23;

     label21:
        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("return ");

        $r4 = specialinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: java.lang.String getUserTypeStaticHandlerMethod(boolean,org.apache.xmlbeans.impl.schema.SchemaTypeImpl)>(0, r3);

        $r5 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(target);");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r7);

        goto label23;

     label22:
        $r14 = new java.lang.IllegalStateException;

        specialinvoke $r14.<java.lang.IllegalStateException: void <init>()>();

        throw $r14;

     label23:
        return;
    }

    void printJSetValue(int, java.lang.String, org.apache.xmlbeans.impl.schema.SchemaTypeImpl) throws java.io.IOException
    {
        java.lang.StringBuffer $r1, $r4, $r5, $r7, $r8, $r10, $r11, $r12, $r13, $r15, $r16, $r17, $r18, $r20, $r21, $r22, $r23, $r25, $r26, $r27, $r28, $r30, $r31, $r32, $r33, $r35, $r36, $r37, $r38, $r40, $r41, $r42, $r43, $r45, $r46, $r47, $r48, $r50, $r51, $r52, $r53, $r55, $r56, $r57, $r58, $r60, $r61, $r62, $r63, $r65, $r66, $r67, $r68, $r70, $r71, $r72, $r73, $r75, $r76, $r77, $r78, $r80, $r81, $r82, $r83, $r85, $r86, $r87, $r88, $r90, $r91, $r92, $r93, $r95, $r96, $r97, $r98, $r100, $r101, $r102, $r103, $r105, $r106, $r107, $r108;
        java.lang.String $r3, r6, $r9, $r14, $r19, $r24, $r29, $r34, $r39, $r44, $r49, $r54, $r59, $r64, $r69, $r74, $r79, $r84, $r89, $r94, $r99, $r104, $r109;
        java.lang.IllegalStateException $r110;
        org.apache.xmlbeans.impl.schema.SchemaTypeImpl r2;
        org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter r0;
        int i0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter;

        i0 := @parameter0: int;

        r6 := @parameter1: java.lang.String;

        r2 := @parameter2: org.apache.xmlbeans.impl.schema.SchemaTypeImpl;

        tableswitch(i0)
        {
            case 0: goto label01;
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label04;
            case 4: goto label05;
            case 5: goto label06;
            case 6: goto label07;
            case 7: goto label08;
            case 8: goto label09;
            case 9: goto label10;
            case 10: goto label11;
            case 11: goto label12;
            case 12: goto label13;
            case 13: goto label14;
            case 14: goto label16;
            case 15: goto label17;
            case 16: goto label18;
            case 17: goto label15;
            case 18: goto label19;
            case 19: goto label20;
            case 20: goto label21;
            default: goto label22;
        };

     label01:
        $r105 = new java.lang.StringBuffer;

        specialinvoke $r105.<java.lang.StringBuffer: void <init>()>();

        $r106 = virtualinvoke $r105.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("target.set(");

        $r107 = virtualinvoke $r106.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r6);

        $r108 = virtualinvoke $r107.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");");

        $r109 = virtualinvoke $r108.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r109);

        goto label23;

     label02:
        $r100 = new java.lang.StringBuffer;

        specialinvoke $r100.<java.lang.StringBuffer: void <init>()>();

        $r101 = virtualinvoke $r100.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("target.setBooleanValue(");

        $r102 = virtualinvoke $r101.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r6);

        $r103 = virtualinvoke $r102.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");");

        $r104 = virtualinvoke $r103.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r104);

        goto label23;

     label03:
        $r95 = new java.lang.StringBuffer;

        specialinvoke $r95.<java.lang.StringBuffer: void <init>()>();

        $r96 = virtualinvoke $r95.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("target.setFloatValue(");

        $r97 = virtualinvoke $r96.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r6);

        $r98 = virtualinvoke $r97.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");");

        $r99 = virtualinvoke $r98.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r99);

        goto label23;

     label04:
        $r90 = new java.lang.StringBuffer;

        specialinvoke $r90.<java.lang.StringBuffer: void <init>()>();

        $r91 = virtualinvoke $r90.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("target.setDoubleValue(");

        $r92 = virtualinvoke $r91.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r6);

        $r93 = virtualinvoke $r92.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");");

        $r94 = virtualinvoke $r93.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r94);

        goto label23;

     label05:
        $r85 = new java.lang.StringBuffer;

        specialinvoke $r85.<java.lang.StringBuffer: void <init>()>();

        $r86 = virtualinvoke $r85.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("target.setByteValue(");

        $r87 = virtualinvoke $r86.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r6);

        $r88 = virtualinvoke $r87.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");");

        $r89 = virtualinvoke $r88.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r89);

        goto label23;

     label06:
        $r80 = new java.lang.StringBuffer;

        specialinvoke $r80.<java.lang.StringBuffer: void <init>()>();

        $r81 = virtualinvoke $r80.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("target.setShortValue(");

        $r82 = virtualinvoke $r81.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r6);

        $r83 = virtualinvoke $r82.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");");

        $r84 = virtualinvoke $r83.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r84);

        goto label23;

     label07:
        $r75 = new java.lang.StringBuffer;

        specialinvoke $r75.<java.lang.StringBuffer: void <init>()>();

        $r76 = virtualinvoke $r75.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("target.setIntValue(");

        $r77 = virtualinvoke $r76.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r6);

        $r78 = virtualinvoke $r77.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");");

        $r79 = virtualinvoke $r78.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r79);

        goto label23;

     label08:
        $r70 = new java.lang.StringBuffer;

        specialinvoke $r70.<java.lang.StringBuffer: void <init>()>();

        $r71 = virtualinvoke $r70.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("target.setLongValue(");

        $r72 = virtualinvoke $r71.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r6);

        $r73 = virtualinvoke $r72.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");");

        $r74 = virtualinvoke $r73.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r74);

        goto label23;

     label09:
        $r65 = new java.lang.StringBuffer;

        specialinvoke $r65.<java.lang.StringBuffer: void <init>()>();

        $r66 = virtualinvoke $r65.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("target.setBigDecimalValue(");

        $r67 = virtualinvoke $r66.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r6);

        $r68 = virtualinvoke $r67.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");");

        $r69 = virtualinvoke $r68.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r69);

        goto label23;

     label10:
        $r60 = new java.lang.StringBuffer;

        specialinvoke $r60.<java.lang.StringBuffer: void <init>()>();

        $r61 = virtualinvoke $r60.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("target.setBigIntegerValue(");

        $r62 = virtualinvoke $r61.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r6);

        $r63 = virtualinvoke $r62.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");");

        $r64 = virtualinvoke $r63.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r64);

        goto label23;

     label11:
        $r55 = new java.lang.StringBuffer;

        specialinvoke $r55.<java.lang.StringBuffer: void <init>()>();

        $r56 = virtualinvoke $r55.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("target.setStringValue(");

        $r57 = virtualinvoke $r56.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r6);

        $r58 = virtualinvoke $r57.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");");

        $r59 = virtualinvoke $r58.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r59);

        goto label23;

     label12:
        $r50 = new java.lang.StringBuffer;

        specialinvoke $r50.<java.lang.StringBuffer: void <init>()>();

        $r51 = virtualinvoke $r50.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("target.setByteArrayValue(");

        $r52 = virtualinvoke $r51.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r6);

        $r53 = virtualinvoke $r52.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");");

        $r54 = virtualinvoke $r53.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r54);

        goto label23;

     label13:
        $r45 = new java.lang.StringBuffer;

        specialinvoke $r45.<java.lang.StringBuffer: void <init>()>();

        $r46 = virtualinvoke $r45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("target.setGDateValue(");

        $r47 = virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r6);

        $r48 = virtualinvoke $r47.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");");

        $r49 = virtualinvoke $r48.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r49);

        goto label23;

     label14:
        $r40 = new java.lang.StringBuffer;

        specialinvoke $r40.<java.lang.StringBuffer: void <init>()>();

        $r41 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("target.setGDurationValue(");

        $r42 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r6);

        $r43 = virtualinvoke $r42.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");");

        $r44 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r44);

        goto label23;

     label15:
        $r20 = new java.lang.StringBuffer;

        specialinvoke $r20.<java.lang.StringBuffer: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("target.setCalendarValue(");

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r6);

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");");

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r24);

        goto label23;

     label16:
        $r35 = new java.lang.StringBuffer;

        specialinvoke $r35.<java.lang.StringBuffer: void <init>()>();

        $r36 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("target.setDateValue(");

        $r37 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r6);

        $r38 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");");

        $r39 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r39);

        goto label23;

     label17:
        $r30 = new java.lang.StringBuffer;

        specialinvoke $r30.<java.lang.StringBuffer: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("target.setQNameValue(");

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r6);

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");");

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r34);

        goto label23;

     label18:
        $r25 = new java.lang.StringBuffer;

        specialinvoke $r25.<java.lang.StringBuffer: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("target.setListValue(");

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r6);

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");");

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r29);

        goto label23;

     label19:
        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("target.setEnumValue(");

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r6);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r19);

        goto label23;

     label20:
        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("target.setObjectValue(");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r6);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r14);

        goto label23;

     label21:
        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r3 = specialinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: java.lang.String getUserTypeStaticHandlerMethod(boolean,org.apache.xmlbeans.impl.schema.SchemaTypeImpl)>(1, r2);

        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", target);");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r9);

        goto label23;

     label22:
        $r110 = new java.lang.IllegalStateException;

        specialinvoke $r110.<java.lang.IllegalStateException: void <init>()>();

        throw $r110;

     label23:
        return;
    }

    java.lang.String getIdentifier(java.util.Map, javax.xml.namespace.QName)
    {
        java.util.Map r0;
        java.lang.Object $r2;
        java.lang.String[] $r3, $r4;
        javax.xml.namespace.QName r1;
        java.lang.String $r5;
        org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter r6;

        r6 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter;

        r0 := @parameter0: java.util.Map;

        r1 := @parameter1: javax.xml.namespace.QName;

        $r2 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r3 = (java.lang.String[]) $r2;

        $r4 = (java.lang.String[]) $r3;

        $r5 = $r4[0];

        return $r5;
    }

    java.lang.String getSetIdentifier(java.util.Map, javax.xml.namespace.QName)
    {
        java.lang.String[] $r3, r4;
        java.util.Map r0;
        java.lang.Object $r2;
        javax.xml.namespace.QName r1;
        java.lang.String $r5, $r7;
        org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter r6;

        r6 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter;

        r0 := @parameter0: java.util.Map;

        r1 := @parameter1: javax.xml.namespace.QName;

        $r2 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r3 = (java.lang.String[]) $r2;

        r4 = (java.lang.String[]) $r3;

        $r5 = r4[1];

        if $r5 != null goto label1;

        $r7 = r4[0];

        goto label2;

     label1:
        $r7 = r4[1];

     label2:
        return $r7;
    }

    java.util.Map printStaticFields(org.apache.xmlbeans.SchemaProperty[]) throws java.io.IOException
    {
        org.apache.xmlbeans.SchemaProperty[] r2;
        org.apache.xmlbeans.SchemaProperty r4, $r33, $r35;
        javax.xml.namespace.QName $r5, $r51, $r55;
        java.lang.StringBuffer $r7, $r8, $r9, $r10, $r13, $r14, $r16, $r17, $r19, $r20, $r22, $r23, $r25, $r26, $r27, $r28, $r30, $r31, $r37, $r38, $r39, $r40, $r43, $r44, $r46, $r47, $r49, $r50, $r53, $r54, $r57, $r58;
        java.lang.String $r6, $r11, $r12, $r15, $r18, $r21, $r24, $r29, $r32, $r41, $r42, $r45, $r48, $r52, $r56, $r59;
        org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter r1;
        java.util.HashMap $r0;
        java.lang.String[] r3;
        javax.xml.namespace.QName[] $r34, $r36;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7;

        r1 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter;

        r2 := @parameter0: org.apache.xmlbeans.SchemaProperty[];

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("");

        i6 = 0;

     label1:
        $i0 = lengthof r2;

        if i6 >= $i0 goto label5;

        r3 = newarray (java.lang.String)[2];

        r4 = r2[i6];

        $r5 = interfaceinvoke r4.<org.apache.xmlbeans.SchemaProperty: javax.xml.namespace.QName getName()>();

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, r3);

        $r6 = interfaceinvoke r4.<org.apache.xmlbeans.SchemaProperty: java.lang.String getJavaPropertyName()>();

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("$");

        $i1 = i6 * 2;

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        $r12 = virtualinvoke $r11.<java.lang.String: java.lang.String toUpperCase()>();

        r3[0] = $r12;

        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r15 = virtualinvoke $r5.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

        $r19 = new java.lang.StringBuffer;

        specialinvoke $r19.<java.lang.StringBuffer: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("private static final javax.xml.namespace.QName ");

        $r21 = r3[0];

        $r22 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" = ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r24);

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void indent()>();

        $r25 = new java.lang.StringBuffer;

        specialinvoke $r25.<java.lang.StringBuffer: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("new javax.xml.namespace.QName(");

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", \"");

        $r29 = virtualinvoke $r5.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r30 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\");");

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r32);

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void outdent()>();

        $r33 = r2[i6];

        $r34 = interfaceinvoke $r33.<org.apache.xmlbeans.SchemaProperty: javax.xml.namespace.QName[] acceptedNames()>();

        if $r34 == null goto label4;

        $r35 = r2[i6];

        $r36 = interfaceinvoke $r35.<org.apache.xmlbeans.SchemaProperty: javax.xml.namespace.QName[] acceptedNames()>();

        $i2 = lengthof $r36;

        if $i2 <= 1 goto label4;

        $r37 = new java.lang.StringBuffer;

        specialinvoke $r37.<java.lang.StringBuffer: void <init>()>();

        $r38 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r39 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("$");

        $i3 = i6 * 2;

        $i4 = $i3 + 1;

        $r40 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i4);

        $r41 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.String toString()>();

        $r42 = virtualinvoke $r41.<java.lang.String: java.lang.String toUpperCase()>();

        r3[1] = $r42;

        $r43 = new java.lang.StringBuffer;

        specialinvoke $r43.<java.lang.StringBuffer: void <init>()>();

        $r44 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("private static final org.apache.xmlbeans.QNameSet ");

        $r45 = r3[1];

        $r46 = virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r45);

        $r47 = virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" = org.apache.xmlbeans.QNameSet.forArray( new javax.xml.namespace.QName[] { ");

        $r48 = virtualinvoke $r47.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r48);

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void indent()>();

        i7 = 0;

     label2:
        $i5 = lengthof $r36;

        if i7 >= $i5 goto label3;

        $r49 = new java.lang.StringBuffer;

        specialinvoke $r49.<java.lang.StringBuffer: void <init>()>();

        $r50 = virtualinvoke $r49.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("new javax.xml.namespace.QName(\"");

        $r51 = $r36[i7];

        $r52 = virtualinvoke $r51.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r53 = virtualinvoke $r50.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r52);

        $r54 = virtualinvoke $r53.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\", \"");

        $r55 = $r36[i7];

        $r56 = virtualinvoke $r55.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r57 = virtualinvoke $r54.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r56);

        $r58 = virtualinvoke $r57.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"),");

        $r59 = virtualinvoke $r58.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r59);

        i7 = i7 + 1;

        goto label2;

     label3:
        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void outdent()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("});");

     label4:
        i6 = i6 + 1;

        goto label1;

     label5:
        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("");

        return $r0;
    }

    void emitImplementationPreamble() throws java.io.IOException
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter r0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter;

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("synchronized (monitor())");

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("{");

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void indent()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("check_orphaned();");

        return;
    }

    void emitImplementationPostamble() throws java.io.IOException
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter r0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter;

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void outdent()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("}");

        return;
    }

    void emitDeclareTarget(boolean, java.lang.String) throws java.io.IOException
    {
        java.lang.StringBuffer $r1, $r3, $r4;
        java.lang.String r2, $r5;
        org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter r0;
        boolean z0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter;

        z0 := @parameter0: boolean;

        r2 := @parameter1: java.lang.String;

        if z0 == 0 goto label1;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" target = null;");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r5);

     label1:
        return;
    }

    void emitAddTarget(java.lang.String, boolean, boolean, java.lang.String) throws java.io.IOException
    {
        java.lang.StringBuffer $r1, $r2, $r4, $r5, $r7, $r8, $r10, $r11, $r12, $r13, $r14, $r15;
        java.lang.String r3, r6, $r9, $r16;
        boolean z0, z1;
        org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter r0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter;

        r6 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        r3 := @parameter3: java.lang.String;

        if z0 == 0 goto label1;

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("target = (");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")get_store().add_attribute_user(");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r6);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r16);

        goto label2;

     label1:
        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("target = (");

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")get_store().add_element_user(");

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r9);

     label2:
        return;
    }

    void emitPre(org.apache.xmlbeans.SchemaType, int, java.lang.String, boolean) throws java.io.IOException
    {
        int i0;
        java.lang.String r2;
        org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter r0;
        org.apache.xmlbeans.SchemaType r1;
        boolean z0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter;

        r1 := @parameter0: org.apache.xmlbeans.SchemaType;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitPre(org.apache.xmlbeans.SchemaType,int,java.lang.String,boolean,java.lang.String)>(r1, i0, r2, z0, "-1");

        return;
    }

    void emitPre(org.apache.xmlbeans.SchemaType, int, java.lang.String, boolean, java.lang.String) throws java.io.IOException
    {
        java.lang.StringBuffer $r4, $r5, $r7, $r8, $r10, $r11, $r13, $r14, $r15, $r16, $r18, $r19;
        int i0;
        org.apache.xmlbeans.impl.schema.SchemaTypeImpl $r1;
        java.lang.String $r6, $r9, r12, r17, $r20;
        org.apache.xmlbeans.SchemaType r0;
        boolean $z0, z1;
        org.apache.xmlbeans.PrePostExtension $r2;
        org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter r3;

        r3 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter;

        r0 := @parameter0: org.apache.xmlbeans.SchemaType;

        i0 := @parameter1: int;

        r12 := @parameter2: java.lang.String;

        z1 := @parameter3: boolean;

        r17 := @parameter4: java.lang.String;

        $r1 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: org.apache.xmlbeans.impl.schema.SchemaTypeImpl getImpl(org.apache.xmlbeans.SchemaType)>(r0);

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = virtualinvoke $r1.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: org.apache.xmlbeans.PrePostExtension getPrePostExtension()>();

        if $r2 == null goto label2;

        $z0 = interfaceinvoke $r2.<org.apache.xmlbeans.PrePostExtension: boolean hasPreCall()>();

        if $z0 == 0 goto label2;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("if ( ");

        $r6 = interfaceinvoke $r2.<org.apache.xmlbeans.PrePostExtension: java.lang.String getStaticHandler()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".preSet(");

        $r9 = virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: java.lang.String prePostOpString(int)>(i0);

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", this, ");

        $r13 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>(z1);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r18 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("))");

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r20);

        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void startBlock()>();

     label2:
        return;
    }

    void emitPost(org.apache.xmlbeans.SchemaType, int, java.lang.String, boolean) throws java.io.IOException
    {
        int i0;
        java.lang.String r2;
        org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter r0;
        org.apache.xmlbeans.SchemaType r1;
        boolean z0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter;

        r1 := @parameter0: org.apache.xmlbeans.SchemaType;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitPost(org.apache.xmlbeans.SchemaType,int,java.lang.String,boolean,java.lang.String)>(r1, i0, r2, z0, "-1");

        return;
    }

    void emitPost(org.apache.xmlbeans.SchemaType, int, java.lang.String, boolean, java.lang.String) throws java.io.IOException
    {
        java.lang.StringBuffer $r4, $r6, $r7, $r9, $r10, $r12, $r13, $r14, $r15, $r17, $r18;
        int i0;
        org.apache.xmlbeans.impl.schema.SchemaTypeImpl $r1;
        java.lang.String $r5, $r8, r11, r16, $r19;
        org.apache.xmlbeans.SchemaType r0;
        boolean $z0, $z1, z2;
        org.apache.xmlbeans.PrePostExtension $r2;
        org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter r3;

        r3 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter;

        r0 := @parameter0: org.apache.xmlbeans.SchemaType;

        i0 := @parameter1: int;

        r11 := @parameter2: java.lang.String;

        z2 := @parameter3: boolean;

        r16 := @parameter4: java.lang.String;

        $r1 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: org.apache.xmlbeans.impl.schema.SchemaTypeImpl getImpl(org.apache.xmlbeans.SchemaType)>(r0);

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = virtualinvoke $r1.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: org.apache.xmlbeans.PrePostExtension getPrePostExtension()>();

        if $r2 == null goto label3;

        $z0 = interfaceinvoke $r2.<org.apache.xmlbeans.PrePostExtension: boolean hasPreCall()>();

        if $z0 == 0 goto label2;

        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void endBlock()>();

     label2:
        $z1 = interfaceinvoke $r2.<org.apache.xmlbeans.PrePostExtension: boolean hasPostCall()>();

        if $z1 == 0 goto label3;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = interfaceinvoke $r2.<org.apache.xmlbeans.PrePostExtension: java.lang.String getStaticHandler()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".postSet(");

        $r8 = virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: java.lang.String prePostOpString(int)>(i0);

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", this, ");

        $r12 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>(z2);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r17 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r19);

     label3:
        return;
    }

    java.lang.String prePostOpString(int)
    {
        int i0;
        java.lang.AssertionError $r0;
        org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter r1;
        boolean $z0;

        r1 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            default: goto label1;
        };

     label1:
        $z0 = <org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $r0 = new java.lang.AssertionError;

        specialinvoke $r0.<java.lang.AssertionError: void <init>()>();

        throw $r0;

     label2:
        return "org.apache.xmlbeans.PrePostExtension.OPERATION_SET";

     label3:
        return "org.apache.xmlbeans.PrePostExtension.OPERATION_INSERT";

     label4:
        return "org.apache.xmlbeans.PrePostExtension.OPERATION_REMOVE";
    }

    void emitGetTarget(java.lang.String, java.lang.String, boolean, java.lang.String, int, java.lang.String) throws java.io.IOException
    {
        boolean $z0, z1, $z2;
        org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter r0;
        java.lang.AssertionError $r18, $r30;
        java.lang.StringBuffer $r1, $r3, $r4, $r6, $r7, $r8, $r9, $r11, $r12, $r14, $r15, $r19, $r20, $r21, $r23, $r24, $r25, $r26, $r27, $r28;
        int i0;
        java.lang.String r2, $r5, r10, r13, $r16, r17, $r22, $r29;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter;

        r10 := @parameter0: java.lang.String;

        r17 := @parameter1: java.lang.String;

        z1 := @parameter2: boolean;

        r13 := @parameter3: java.lang.String;

        i0 := @parameter4: int;

        r2 := @parameter5: java.lang.String;

        $z0 = <org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: boolean $assertionsDisabled>;

        if $z0 != 0 goto label02;

        if r10 == null goto label01;

        if r17 != null goto label02;

     label01:
        $r30 = new java.lang.AssertionError;

        specialinvoke $r30.<java.lang.AssertionError: void <init>()>();

        throw $r30;

     label02:
        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" target = null;");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r5);

        if z1 == 0 goto label03;

        $r23 = new java.lang.StringBuffer;

        specialinvoke $r23.<java.lang.StringBuffer: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("target = (");

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")get_store().find_attribute_user(");

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r17);

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");");

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r29);

        goto label04;

     label03:
        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("target = (");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")get_store().find_element_user(");

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r14 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r16);

     label04:
        if i0 != 1 goto label05;

        return;

     label05:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("if (target == null)");

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void startBlock()>();

        tableswitch(i0)
        {
            case 1: goto label08;
            case 2: goto label09;
            case 3: goto label06;
            case 4: goto label07;
            default: goto label09;
        };

     label06:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitAddTarget(java.lang.String,boolean,boolean,java.lang.String)>(r17, z1, 0, r2);

        goto label10;

     label07:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("throw new IndexOutOfBoundsException();");

        goto label10;

     label08:
        goto label10;

     label09:
        $z2 = <org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: boolean $assertionsDisabled>;

        if $z2 != 0 goto label10;

        $r18 = new java.lang.AssertionError;

        $r19 = new java.lang.StringBuffer;

        specialinvoke $r19.<java.lang.StringBuffer: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Bad behaviour type: ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.AssertionError: void <init>(java.lang.Object)>($r22);

        throw $r18;

     label10:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void endBlock()>();

        return;
    }

    void printListGetter15Impl(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean, boolean) throws java.io.IOException
    {
        java.lang.StringBuffer $r0, $r2, $r3, $r5, $r6, $r7, $r9, $r11, $r12, $r14, $r15, $r16, $r18, $r19, $r20, $r23, $r24, $r25, $r26, $r28, $r29, $r31, $r32, $r34, $r35, $r36, $r37, $r38, $r40, $r41, $r42, $r43, $r44, $r45, $r47, $r48, $r49, $r50, $r52, $r53, $r54, $r55, $r56, $r57, $r59, $r60, $r61, $r62, $r63, $r64, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r74, $r75, $r76, $r77, $r78, $r80, $r81, $r82, $r83, $r85, $r86, $r87, $r88, $r89, $r90, $r92, $r93, $r94, $r95, $r97, $r98, $r99, $r100, $r101, $r102, $r103, $r105, $r106, $r107, $r108, $r109, $r111, $r112, $r113, $r114, $r115, $r116, $r118, $r119, $r120, $r121, $r123, $r124, $r125, $r126, $r127, $r128;
        java.lang.String r1, $r4, $r8, r10, $r13, $r17, $r21, r27, $r30, r33, $r39, $r46, $r51, $r58, $r65, $r73, $r79, $r84, $r91, $r96, $r104, $r110, $r117, $r122, $r129, r130, $r131, $r132, $r133;
        boolean z0, $z1, $z2, $z3, z4, $z5, $z6;
        org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter r22;

        r22 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter;

        r10 := @parameter0: java.lang.String;

        r27 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r33 := @parameter3: java.lang.String;

        r130 := @parameter4: java.lang.String;

        z4 := @parameter5: boolean;

        z0 := @parameter6: boolean;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Array");

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("List");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".this.");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        if z0 == 0 goto label01;

        $r131 = "x";

        goto label02;

     label01:
        $r131 = "";

     label02:
        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r131);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("get");

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        $r18 = new java.lang.StringBuffer;

        specialinvoke $r18.<java.lang.StringBuffer: void <init>()>();

        if z0 == 0 goto label03;

        $r132 = "x";

        goto label04;

     label03:
        $r132 = "";

     label04:
        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r132);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("set");

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        $r23 = new java.lang.StringBuffer;

        specialinvoke $r23.<java.lang.StringBuffer: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Gets ");

        if z0 == 0 goto label05;

        $r133 = "(as xml) ";

        goto label06;

     label05:
        $r133 = "";

     label06:
        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r133);

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("a List of ");

        $r28 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("s");

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r22.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printJavaDoc(java.lang.String)>($r30);

        $r31 = new java.lang.StringBuffer;

        specialinvoke $r31.<java.lang.StringBuffer: void <init>()>();

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("public java.util.List<");

        $r34 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r33);

        $r35 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("> ");

        $r36 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        $r37 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r38 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("()");

        $r39 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r22.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r39);

        virtualinvoke r22.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void startBlock()>();

        $r40 = new java.lang.StringBuffer;

        specialinvoke $r40.<java.lang.StringBuffer: void <init>()>();

        $r41 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("final class ");

        $r42 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r43 = virtualinvoke $r42.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" extends java.util.AbstractList<");

        $r44 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r33);

        $r45 = virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(">");

        $r46 = virtualinvoke $r45.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r22.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r46);

        virtualinvoke r22.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void startBlock()>();

        $z1 = r22.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: boolean _useJava15>;

        if $z1 == 0 goto label07;

        virtualinvoke r22.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("@Override");

     label07:
        $r47 = new java.lang.StringBuffer;

        specialinvoke $r47.<java.lang.StringBuffer: void <init>()>();

        $r48 = virtualinvoke $r47.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("public ");

        $r49 = virtualinvoke $r48.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r33);

        $r50 = virtualinvoke $r49.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" get(int i)");

        $r51 = virtualinvoke $r50.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r22.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r51);

        $r52 = new java.lang.StringBuffer;

        specialinvoke $r52.<java.lang.StringBuffer: void <init>()>();

        $r53 = virtualinvoke $r52.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    { return ");

        $r54 = virtualinvoke $r53.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $r55 = virtualinvoke $r54.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        $r56 = virtualinvoke $r55.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r57 = virtualinvoke $r56.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(i); }");

        $r58 = virtualinvoke $r57.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r22.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r58);

        virtualinvoke r22.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("");

        $z2 = r22.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: boolean _useJava15>;

        if $z2 == 0 goto label08;

        virtualinvoke r22.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("@Override");

     label08:
        $r59 = new java.lang.StringBuffer;

        specialinvoke $r59.<java.lang.StringBuffer: void <init>()>();

        $r60 = virtualinvoke $r59.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("public ");

        $r61 = virtualinvoke $r60.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r33);

        $r62 = virtualinvoke $r61.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" set(int i, ");

        $r63 = virtualinvoke $r62.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r33);

        $r64 = virtualinvoke $r63.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" o)");

        $r65 = virtualinvoke $r64.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r22.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r65);

        virtualinvoke r22.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void startBlock()>();

        $r66 = new java.lang.StringBuffer;

        specialinvoke $r66.<java.lang.StringBuffer: void <init>()>();

        $r67 = virtualinvoke $r66.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r33);

        $r68 = virtualinvoke $r67.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" old = ");

        $r69 = virtualinvoke $r68.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $r70 = virtualinvoke $r69.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        $r71 = virtualinvoke $r70.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r72 = virtualinvoke $r71.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(i);");

        $r73 = virtualinvoke $r72.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r22.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r73);

        $r74 = new java.lang.StringBuffer;

        specialinvoke $r74.<java.lang.StringBuffer: void <init>()>();

        $r75 = virtualinvoke $r74.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $r76 = virtualinvoke $r75.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r21);

        $r77 = virtualinvoke $r76.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r78 = virtualinvoke $r77.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(i, o);");

        $r79 = virtualinvoke $r78.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r22.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r79);

        virtualinvoke r22.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("return old;");

        virtualinvoke r22.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void endBlock()>();

        virtualinvoke r22.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("");

        $z3 = r22.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: boolean _useJava15>;

        if $z3 == 0 goto label09;

        virtualinvoke r22.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("@Override");

     label09:
        $r80 = new java.lang.StringBuffer;

        specialinvoke $r80.<java.lang.StringBuffer: void <init>()>();

        $r81 = virtualinvoke $r80.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("public void add(int i, ");

        $r82 = virtualinvoke $r81.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r33);

        $r83 = virtualinvoke $r82.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" o)");

        $r84 = virtualinvoke $r83.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r22.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r84);

        if z4 != 0 goto label10;

        if z0 == 0 goto label11;

     label10:
        $r85 = new java.lang.StringBuffer;

        specialinvoke $r85.<java.lang.StringBuffer: void <init>()>();

        $r86 = virtualinvoke $r85.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    { ");

        $r87 = virtualinvoke $r86.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $r88 = virtualinvoke $r87.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("insertNew");

        $r89 = virtualinvoke $r88.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r90 = virtualinvoke $r89.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(i).set(o); }");

        $r91 = virtualinvoke $r90.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r22.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r91);

        goto label12;

     label11:
        $r123 = new java.lang.StringBuffer;

        specialinvoke $r123.<java.lang.StringBuffer: void <init>()>();

        $r124 = virtualinvoke $r123.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    { ");

        $r125 = virtualinvoke $r124.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $r126 = virtualinvoke $r125.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("insert");

        $r127 = virtualinvoke $r126.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r128 = virtualinvoke $r127.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(i, o); }");

        $r129 = virtualinvoke $r128.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r22.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r129);

     label12:
        virtualinvoke r22.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("");

        $z5 = r22.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: boolean _useJava15>;

        if $z5 == 0 goto label13;

        virtualinvoke r22.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("@Override");

     label13:
        $r92 = new java.lang.StringBuffer;

        specialinvoke $r92.<java.lang.StringBuffer: void <init>()>();

        $r93 = virtualinvoke $r92.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("public ");

        $r94 = virtualinvoke $r93.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r33);

        $r95 = virtualinvoke $r94.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" remove(int i)");

        $r96 = virtualinvoke $r95.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r22.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r96);

        virtualinvoke r22.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void startBlock()>();

        $r97 = new java.lang.StringBuffer;

        specialinvoke $r97.<java.lang.StringBuffer: void <init>()>();

        $r98 = virtualinvoke $r97.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r33);

        $r99 = virtualinvoke $r98.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" old = ");

        $r100 = virtualinvoke $r99.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $r101 = virtualinvoke $r100.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        $r102 = virtualinvoke $r101.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r103 = virtualinvoke $r102.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(i);");

        $r104 = virtualinvoke $r103.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r22.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r104);

        $r105 = new java.lang.StringBuffer;

        specialinvoke $r105.<java.lang.StringBuffer: void <init>()>();

        $r106 = virtualinvoke $r105.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $r107 = virtualinvoke $r106.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("remove");

        $r108 = virtualinvoke $r107.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r109 = virtualinvoke $r108.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(i);");

        $r110 = virtualinvoke $r109.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r22.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r110);

        virtualinvoke r22.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("return old;");

        virtualinvoke r22.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void endBlock()>();

        virtualinvoke r22.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("");

        $z6 = r22.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: boolean _useJava15>;

        if $z6 == 0 goto label14;

        virtualinvoke r22.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("@Override");

     label14:
        virtualinvoke r22.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("public int size()");

        $r111 = new java.lang.StringBuffer;

        specialinvoke $r111.<java.lang.StringBuffer: void <init>()>();

        $r112 = virtualinvoke $r111.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    { return ");

        $r113 = virtualinvoke $r112.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $r114 = virtualinvoke $r113.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("sizeOf");

        $r115 = virtualinvoke $r114.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r116 = virtualinvoke $r115.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(); }");

        $r117 = virtualinvoke $r116.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r22.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r117);

        virtualinvoke r22.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("");

        virtualinvoke r22.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void endBlock()>();

        virtualinvoke r22.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("");

        virtualinvoke r22.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitImplementationPreamble()>();

        $r118 = new java.lang.StringBuffer;

        specialinvoke $r118.<java.lang.StringBuffer: void <init>()>();

        $r119 = virtualinvoke $r118.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("return new ");

        $r120 = virtualinvoke $r119.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r121 = virtualinvoke $r120.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("();");

        $r122 = virtualinvoke $r121.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r22.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r122);

        virtualinvoke r22.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitImplementationPostamble()>();

        virtualinvoke r22.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void endBlock()>();

        return;
    }

    void printGetterImpls(java.lang.String, org.apache.xmlbeans.SchemaProperty, javax.xml.namespace.QName, boolean, java.lang.String, int, java.lang.String, java.lang.String, boolean, boolean, boolean, boolean, boolean, java.lang.String, java.lang.String) throws java.io.IOException
    {
        org.apache.xmlbeans.SchemaType $r35, $r49, $r187;
        java.lang.StringBuffer $r0, $r1, $r4, $r5, $r6, $r9, $r11, $r12, $r15, $r16, $r17, $r18, $r20, $r21, $r23, $r24, $r25, $r26, $r28, $r29, $r31, $r32, $r37, $r38, $r39, $r41, $r42, $r43, $r44, $r45, $r46, $r51, $r52, $r53, $r55, $r56, $r57, $r58, $r60, $r61, $r62, $r63, $r65, $r66, $r67, $r69, $r70, $r71, $r72, $r75, $r76, $r77, $r78, $r80, $r81, $r82, $r83, $r84, $r85, $r87, $r88, $r89, $r90, $r92, $r93, $r94, $r95, $r96, $r98, $r99, $r100, $r102, $r103, $r104, $r105, $r106, $r107, $r109, $r110, $r111, $r112, $r113, $r114, $r116, $r117, $r118, $r119, $r122, $r123, $r124, $r125, $r126, $r127, $r129, $r130, $r131, $r132, $r134, $r135, $r136, $r138, $r139, $r140, $r141, $r143, $r144, $r145, $r146, $r148, $r149, $r150, $r151, $r153, $r154, $r155, $r157, $r158, $r159, $r160, $r161, $r162, $r164, $r165, $r166, $r168, $r169, $r170, $r171, $r173, $r174, $r175, $r177, $r178, $r179, $r180, $r181, $r182;
        org.apache.xmlbeans.impl.schema.SchemaTypeImpl $r36, $r50, $r188;
        int i0, $i1, $i2, $i3, $i4;
        org.apache.xmlbeans.SchemaProperty r34;
        javax.xml.namespace.QName r2;
        java.lang.String $r3, $r7, r8, r10, $r13, $r19, r22, $r27, r30, $r33, $r40, $r47, r48, $r54, $r59, $r64, $r68, $r73, r74, $r79, $r86, $r91, $r97, $r101, $r108, $r115, $r120, r121, $r128, $r133, $r137, $r142, $r147, $r152, $r156, $r163, $r167, $r172, $r176, $r183, $r184, $r185, $r186, $r189, $r190, $r191, r192;
        boolean z0, z1, z2, z3, z4, z5, $z6, $z7, z8, $z9, $z10, $z11, $z12, $z14, $z15, $z16;
        org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter r14;

        r14 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter;

        r121 := @parameter0: java.lang.String;

        r34 := @parameter1: org.apache.xmlbeans.SchemaProperty;

        r2 := @parameter2: javax.xml.namespace.QName;

        z0 := @parameter3: boolean;

        r10 := @parameter4: java.lang.String;

        i0 := @parameter5: int;

        r22 := @parameter6: java.lang.String;

        r74 := @parameter7: java.lang.String;

        z8 := @parameter8: boolean;

        z4 := @parameter9: boolean;

        z5 := @parameter10: boolean;

        z3 := @parameter11: boolean;

        z2 := @parameter12: boolean;

        r48 := @parameter13: java.lang.String;

        r30 := @parameter14: java.lang.String;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r3 = virtualinvoke r2.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        if z0 == 0 goto label01;

        $r184 = " attribute";

        goto label02;

     label01:
        $r184 = " element";

     label02:
        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r184);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        if i0 != 0 goto label03;

        $z16 = 1;

        $z15 = 1;

        goto label04;

     label03:
        $z16 = 0;

        $z15 = 0;

     label04:
        z1 = $z16;

        if z2 != 0 goto label05;

        if $z15 != 0 goto label06;

     label05:
        $r185 = "org.apache.xmlbeans.SimpleValue";

        goto label07;

     label06:
        $r185 = r74;

     label07:
        r8 = $r185;

        if z3 == 0 goto label19;

        $r153 = new java.lang.StringBuffer;

        specialinvoke $r153.<java.lang.StringBuffer: void <init>()>();

        if z5 == 0 goto label08;

        $r186 = "Gets first ";

        goto label09;

     label08:
        $r186 = "Gets the ";

     label09:
        $r154 = virtualinvoke $r153.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r186);

        $r155 = virtualinvoke $r154.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r156 = virtualinvoke $r155.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printJavaDoc(java.lang.String)>($r156);

        $r157 = new java.lang.StringBuffer;

        specialinvoke $r157.<java.lang.StringBuffer: void <init>()>();

        $r158 = virtualinvoke $r157.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("public ");

        $r159 = virtualinvoke $r158.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r22);

        $r160 = virtualinvoke $r159.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" get");

        $r161 = virtualinvoke $r160.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r10);

        $r162 = virtualinvoke $r161.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("()");

        $r163 = virtualinvoke $r162.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r163);

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void startBlock()>();

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitImplementationPreamble()>();

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitGetTarget(java.lang.String,java.lang.String,boolean,java.lang.String,int,java.lang.String)>(r30, r48, z0, "0", 1, r8);

        if z0 == 0 goto label11;

        $i3 = interfaceinvoke r34.<org.apache.xmlbeans.SchemaProperty: int hasDefault()>();

        if $i3 == 2 goto label10;

        $i4 = interfaceinvoke r34.<org.apache.xmlbeans.SchemaProperty: int hasFixed()>();

        if $i4 != 2 goto label11;

     label10:
        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("if (target == null)");

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void startBlock()>();

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void makeAttributeDefaultValue(java.lang.String,org.apache.xmlbeans.SchemaProperty,java.lang.String)>(r8, r34, r48);

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void endBlock()>();

     label11:
        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("if (target == null)");

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void startBlock()>();

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void makeMissingValue(int)>(i0);

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void endBlock()>();

        $r187 = interfaceinvoke r34.<org.apache.xmlbeans.SchemaProperty: org.apache.xmlbeans.SchemaType getType()>();

        $r188 = (org.apache.xmlbeans.impl.schema.SchemaTypeImpl) $r187;

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printJGetValue(int,java.lang.String,org.apache.xmlbeans.impl.schema.SchemaTypeImpl)>(i0, r22, $r188);

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitImplementationPostamble()>();

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void endBlock()>();

        if z1 != 0 goto label16;

        $r173 = new java.lang.StringBuffer;

        specialinvoke $r173.<java.lang.StringBuffer: void <init>()>();

        if z5 == 0 goto label12;

        $r189 = "Gets (as xml) first ";

        goto label13;

     label12:
        $r189 = "Gets (as xml) the ";

     label13:
        $r174 = virtualinvoke $r173.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r189);

        $r175 = virtualinvoke $r174.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r176 = virtualinvoke $r175.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printJavaDoc(java.lang.String)>($r176);

        $r177 = new java.lang.StringBuffer;

        specialinvoke $r177.<java.lang.StringBuffer: void <init>()>();

        $r178 = virtualinvoke $r177.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("public ");

        $r179 = virtualinvoke $r178.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r74);

        $r180 = virtualinvoke $r179.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" xget");

        $r181 = virtualinvoke $r180.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r10);

        $r182 = virtualinvoke $r181.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("()");

        $r183 = virtualinvoke $r182.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r183);

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void startBlock()>();

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitImplementationPreamble()>();

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitGetTarget(java.lang.String,java.lang.String,boolean,java.lang.String,int,java.lang.String)>(r30, r48, z0, "0", 1, r74);

        if z0 == 0 goto label15;

        $i1 = interfaceinvoke r34.<org.apache.xmlbeans.SchemaProperty: int hasDefault()>();

        if $i1 == 2 goto label14;

        $i2 = interfaceinvoke r34.<org.apache.xmlbeans.SchemaProperty: int hasFixed()>();

        if $i2 != 2 goto label15;

     label14:
        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("if (target == null)");

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void startBlock()>();

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void makeAttributeDefaultValue(java.lang.String,org.apache.xmlbeans.SchemaProperty,java.lang.String)>(r74, r34, r48);

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void endBlock()>();

     label15:
        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("return target;");

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitImplementationPostamble()>();

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void endBlock()>();

     label16:
        if z8 == 0 goto label19;

        $r164 = new java.lang.StringBuffer;

        specialinvoke $r164.<java.lang.StringBuffer: void <init>()>();

        if z5 == 0 goto label17;

        $r190 = "Tests for nil first ";

        goto label18;

     label17:
        $r190 = "Tests for nil ";

     label18:
        $r165 = virtualinvoke $r164.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r190);

        $r166 = virtualinvoke $r165.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r167 = virtualinvoke $r166.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printJavaDoc(java.lang.String)>($r167);

        $r168 = new java.lang.StringBuffer;

        specialinvoke $r168.<java.lang.StringBuffer: void <init>()>();

        $r169 = virtualinvoke $r168.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("public boolean isNil");

        $r170 = virtualinvoke $r169.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r10);

        $r171 = virtualinvoke $r170.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("()");

        $r172 = virtualinvoke $r171.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r172);

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void startBlock()>();

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitImplementationPreamble()>();

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitGetTarget(java.lang.String,java.lang.String,boolean,java.lang.String,int,java.lang.String)>(r30, r48, z0, "0", 1, r74);

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("if (target == null) return false;");

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("return target.isNil();");

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitImplementationPostamble()>();

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void endBlock()>();

     label19:
        if z4 == 0 goto label24;

        $r134 = new java.lang.StringBuffer;

        specialinvoke $r134.<java.lang.StringBuffer: void <init>()>();

        if z5 == 0 goto label20;

        $r191 = "True if has at least one ";

        goto label21;

     label20:
        $r191 = "True if has ";

     label21:
        $r135 = virtualinvoke $r134.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r191);

        $r136 = virtualinvoke $r135.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r137 = virtualinvoke $r136.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printJavaDoc(java.lang.String)>($r137);

        $r138 = new java.lang.StringBuffer;

        specialinvoke $r138.<java.lang.StringBuffer: void <init>()>();

        $r139 = virtualinvoke $r138.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("public boolean isSet");

        $r140 = virtualinvoke $r139.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r10);

        $r141 = virtualinvoke $r140.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("()");

        $r142 = virtualinvoke $r141.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r142);

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void startBlock()>();

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitImplementationPreamble()>();

        if z0 == 0 goto label22;

        $r148 = new java.lang.StringBuffer;

        specialinvoke $r148.<java.lang.StringBuffer: void <init>()>();

        $r149 = virtualinvoke $r148.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("return get_store().find_attribute_user(");

        $r150 = virtualinvoke $r149.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r48);

        $r151 = virtualinvoke $r150.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") != null;");

        $r152 = virtualinvoke $r151.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r152);

        goto label23;

     label22:
        $r143 = new java.lang.StringBuffer;

        specialinvoke $r143.<java.lang.StringBuffer: void <init>()>();

        $r144 = virtualinvoke $r143.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("return get_store().count_elements(");

        $r145 = virtualinvoke $r144.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r30);

        $r146 = virtualinvoke $r145.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") != 0;");

        $r147 = virtualinvoke $r146.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r147);

     label23:
        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitImplementationPostamble()>();

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void endBlock()>();

     label24:
        if z5 == 0 goto label38;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Array");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        $z6 = r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: boolean _useJava15>;

        if $z6 == 0 goto label26;

        r192 = r22;

        $z12 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: boolean isJavaPrimitive(int)>(i0);

        if $z12 == 0 goto label25;

        r192 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: java.lang.String javaWrappedType(int)>(i0);

     label25:
        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printListGetter15Impl(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean)>(r121, $r7, r10, r192, r74, z1, 0);

     label26:
        $z14 = r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: boolean _useJava15>;

        if $z14 == 0 goto label27;

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("");

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("/**");

        $r129 = new java.lang.StringBuffer;

        specialinvoke $r129.<java.lang.StringBuffer: void <init>()>();

        $r130 = virtualinvoke $r129.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" * Gets array of all ");

        $r131 = virtualinvoke $r130.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r132 = virtualinvoke $r131.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("s");

        $r133 = virtualinvoke $r132.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r133);

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>(" * @deprecated");

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>(" */");

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("@Deprecated");

        goto label28;

     label27:
        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Gets array of all ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("s");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printJavaDoc(java.lang.String)>($r19);

     label28:
        $r20 = new java.lang.StringBuffer;

        specialinvoke $r20.<java.lang.StringBuffer: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("public ");

        $r23 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[] get");

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("()");

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r27);

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void startBlock()>();

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitImplementationPreamble()>();

        $z7 = r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: boolean _useJava15>;

        if $z7 == 0 goto label29;

        $r122 = new java.lang.StringBuffer;

        specialinvoke $r122.<java.lang.StringBuffer: void <init>()>();

        $r123 = virtualinvoke $r122.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("java.util.List<");

        $r124 = virtualinvoke $r123.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r74);

        $r125 = virtualinvoke $r124.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("> targetList = new java.util.ArrayList<");

        $r126 = virtualinvoke $r125.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r74);

        $r127 = virtualinvoke $r126.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(">();");

        $r128 = virtualinvoke $r127.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r128);

        goto label30;

     label29:
        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("java.util.List targetList = new java.util.ArrayList();");

     label30:
        $r28 = new java.lang.StringBuffer;

        specialinvoke $r28.<java.lang.StringBuffer: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("get_store().find_all_element_users(");

        $r31 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r30);

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", targetList);");

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r33);

        $r35 = interfaceinvoke r34.<org.apache.xmlbeans.SchemaProperty: org.apache.xmlbeans.SchemaType getType()>();

        $r36 = (org.apache.xmlbeans.impl.schema.SchemaTypeImpl) $r35;

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printJGetArrayValue(int,java.lang.String,org.apache.xmlbeans.impl.schema.SchemaTypeImpl)>(i0, r22, $r36);

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitImplementationPostamble()>();

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void endBlock()>();

        $r37 = new java.lang.StringBuffer;

        specialinvoke $r37.<java.lang.StringBuffer: void <init>()>();

        $r38 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Gets ith ");

        $r39 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r40 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printJavaDoc(java.lang.String)>($r40);

        $r41 = new java.lang.StringBuffer;

        specialinvoke $r41.<java.lang.StringBuffer: void <init>()>();

        $r42 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("public ");

        $r43 = virtualinvoke $r42.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r22);

        $r44 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" get");

        $r45 = virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $r46 = virtualinvoke $r45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(int i)");

        $r47 = virtualinvoke $r46.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r47);

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void startBlock()>();

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitImplementationPreamble()>();

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitGetTarget(java.lang.String,java.lang.String,boolean,java.lang.String,int,java.lang.String)>(r30, r48, z0, "i", 4, r8);

        $r49 = interfaceinvoke r34.<org.apache.xmlbeans.SchemaProperty: org.apache.xmlbeans.SchemaType getType()>();

        $r50 = (org.apache.xmlbeans.impl.schema.SchemaTypeImpl) $r49;

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printJGetValue(int,java.lang.String,org.apache.xmlbeans.impl.schema.SchemaTypeImpl)>(i0, r22, $r50);

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitImplementationPostamble()>();

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void endBlock()>();

        if z1 != 0 goto label36;

        $z9 = r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: boolean _useJava15>;

        if $z9 == 0 goto label31;

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printListGetter15Impl(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean)>(r121, $r7, r10, r74, r74, z1, 1);

     label31:
        $z10 = r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: boolean _useJava15>;

        if $z10 == 0 goto label32;

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("");

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("/**");

        $r116 = new java.lang.StringBuffer;

        specialinvoke $r116.<java.lang.StringBuffer: void <init>()>();

        $r117 = virtualinvoke $r116.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" * Gets array of all ");

        $r118 = virtualinvoke $r117.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r119 = virtualinvoke $r118.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("s");

        $r120 = virtualinvoke $r119.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r120);

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>(" * @deprecated");

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>(" */");

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("@Deprecated");

        goto label33;

     label32:
        $r75 = new java.lang.StringBuffer;

        specialinvoke $r75.<java.lang.StringBuffer: void <init>()>();

        $r76 = virtualinvoke $r75.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Gets (as xml) array of all ");

        $r77 = virtualinvoke $r76.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r78 = virtualinvoke $r77.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("s");

        $r79 = virtualinvoke $r78.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printJavaDoc(java.lang.String)>($r79);

     label33:
        $r80 = new java.lang.StringBuffer;

        specialinvoke $r80.<java.lang.StringBuffer: void <init>()>();

        $r81 = virtualinvoke $r80.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("public ");

        $r82 = virtualinvoke $r81.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r74);

        $r83 = virtualinvoke $r82.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[] xget");

        $r84 = virtualinvoke $r83.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $r85 = virtualinvoke $r84.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("()");

        $r86 = virtualinvoke $r85.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r86);

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void startBlock()>();

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitImplementationPreamble()>();

        $z11 = r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: boolean _useJava15>;

        if $z11 == 0 goto label34;

        $r109 = new java.lang.StringBuffer;

        specialinvoke $r109.<java.lang.StringBuffer: void <init>()>();

        $r110 = virtualinvoke $r109.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("java.util.List<");

        $r111 = virtualinvoke $r110.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r74);

        $r112 = virtualinvoke $r111.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("> targetList = new java.util.ArrayList<");

        $r113 = virtualinvoke $r112.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r74);

        $r114 = virtualinvoke $r113.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(">();");

        $r115 = virtualinvoke $r114.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r115);

        goto label35;

     label34:
        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("java.util.List targetList = new java.util.ArrayList();");

     label35:
        $r87 = new java.lang.StringBuffer;

        specialinvoke $r87.<java.lang.StringBuffer: void <init>()>();

        $r88 = virtualinvoke $r87.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("get_store().find_all_element_users(");

        $r89 = virtualinvoke $r88.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r30);

        $r90 = virtualinvoke $r89.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", targetList);");

        $r91 = virtualinvoke $r90.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r91);

        $r92 = new java.lang.StringBuffer;

        specialinvoke $r92.<java.lang.StringBuffer: void <init>()>();

        $r93 = virtualinvoke $r92.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r74);

        $r94 = virtualinvoke $r93.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[] result = new ");

        $r95 = virtualinvoke $r94.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r74);

        $r96 = virtualinvoke $r95.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[targetList.size()];");

        $r97 = virtualinvoke $r96.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r97);

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("targetList.toArray(result);");

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("return result;");

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitImplementationPostamble()>();

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void endBlock()>();

        $r98 = new java.lang.StringBuffer;

        specialinvoke $r98.<java.lang.StringBuffer: void <init>()>();

        $r99 = virtualinvoke $r98.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Gets (as xml) ith ");

        $r100 = virtualinvoke $r99.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r101 = virtualinvoke $r100.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printJavaDoc(java.lang.String)>($r101);

        $r102 = new java.lang.StringBuffer;

        specialinvoke $r102.<java.lang.StringBuffer: void <init>()>();

        $r103 = virtualinvoke $r102.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("public ");

        $r104 = virtualinvoke $r103.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r74);

        $r105 = virtualinvoke $r104.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" xget");

        $r106 = virtualinvoke $r105.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $r107 = virtualinvoke $r106.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(int i)");

        $r108 = virtualinvoke $r107.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r108);

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void startBlock()>();

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitImplementationPreamble()>();

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitGetTarget(java.lang.String,java.lang.String,boolean,java.lang.String,int,java.lang.String)>(r30, r48, z0, "i", 4, r74);

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("return target;");

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitImplementationPostamble()>();

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void endBlock()>();

     label36:
        if z8 == 0 goto label37;

        $r65 = new java.lang.StringBuffer;

        specialinvoke $r65.<java.lang.StringBuffer: void <init>()>();

        $r66 = virtualinvoke $r65.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Tests for nil ith ");

        $r67 = virtualinvoke $r66.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r68 = virtualinvoke $r67.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printJavaDoc(java.lang.String)>($r68);

        $r69 = new java.lang.StringBuffer;

        specialinvoke $r69.<java.lang.StringBuffer: void <init>()>();

        $r70 = virtualinvoke $r69.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("public boolean isNil");

        $r71 = virtualinvoke $r70.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $r72 = virtualinvoke $r71.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(int i)");

        $r73 = virtualinvoke $r72.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r73);

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void startBlock()>();

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitImplementationPreamble()>();

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitGetTarget(java.lang.String,java.lang.String,boolean,java.lang.String,int,java.lang.String)>(r30, r48, z0, "i", 4, r74);

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("return target.isNil();");

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitImplementationPostamble()>();

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void endBlock()>();

     label37:
        $r51 = new java.lang.StringBuffer;

        specialinvoke $r51.<java.lang.StringBuffer: void <init>()>();

        $r52 = virtualinvoke $r51.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Returns number of ");

        $r53 = virtualinvoke $r52.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r54 = virtualinvoke $r53.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printJavaDoc(java.lang.String)>($r54);

        $r55 = new java.lang.StringBuffer;

        specialinvoke $r55.<java.lang.StringBuffer: void <init>()>();

        $r56 = virtualinvoke $r55.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("public int sizeOf");

        $r57 = virtualinvoke $r56.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $r58 = virtualinvoke $r57.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("()");

        $r59 = virtualinvoke $r58.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r59);

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void startBlock()>();

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitImplementationPreamble()>();

        $r60 = new java.lang.StringBuffer;

        specialinvoke $r60.<java.lang.StringBuffer: void <init>()>();

        $r61 = virtualinvoke $r60.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("return get_store().count_elements(");

        $r62 = virtualinvoke $r61.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r30);

        $r63 = virtualinvoke $r62.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");");

        $r64 = virtualinvoke $r63.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r64);

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitImplementationPostamble()>();

        virtualinvoke r14.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void endBlock()>();

     label38:
        return;
    }

    void printSetterImpls(javax.xml.namespace.QName, org.apache.xmlbeans.SchemaProperty, boolean, java.lang.String, int, java.lang.String, java.lang.String, boolean, boolean, boolean, boolean, boolean, java.lang.String, java.lang.String, org.apache.xmlbeans.SchemaType) throws java.io.IOException
    {
        org.apache.xmlbeans.SchemaType r34, $r46, $r116, $r131, $r216, $r234, $r342;
        java.lang.StringBuffer $r7, $r8, $r11, $r12, $r13, $r15, $r16, $r17, $r20, $r21, $r22, $r24, $r25, $r26, $r27, $r29, $r30, $r31, $r32, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r58, $r59, $r60, $r62, $r63, $r64, $r65, $r66, $r67, $r69, $r70, $r71, $r73, $r74, $r75, $r76, $r78, $r79, $r80, $r81, $r83, $r84, $r85, $r86, $r87, $r88, $r90, $r91, $r92, $r94, $r95, $r96, $r97, $r98, $r99, $r100, $r101, $r103, $r104, $r105, $r107, $r108, $r109, $r110, $r111, $r112, $r113, $r114, $r118, $r119, $r120, $r122, $r123, $r124, $r125, $r126, $r127, $r128, $r129, $r133, $r134, $r135, $r136, $r137, $r138, $r140, $r141, $r142, $r144, $r145, $r146, $r147, $r149, $r150, $r151, $r153, $r154, $r155, $r156, $r157, $r158, $r159, $r160, $r162, $r163, $r164, $r165, $r166, $r167, $r168, $r170, $r171, $r172, $r174, $r175, $r176, $r177, $r178, $r179, $r180, $r181, $r183, $r184, $r185, $r186, $r188, $r189, $r190, $r191, $r192, $r193, $r194, $r196, $r197, $r198, $r199, $r200, $r201, $r202, $r204, $r205, $r206, $r207, $r208, $r209, $r210, $r211, $r212, $r214, $r215, $r219, $r220, $r221, $r222, $r224, $r225, $r226, $r227, $r228, $r229, $r230, $r232, $r233, $r237, $r238, $r239, $r240, $r242, $r243, $r244, $r245, $r246, $r247, $r248, $r249, $r250, $r252, $r253, $r254, $r255, $r256, $r257, $r258, $r260, $r261, $r262, $r263, $r265, $r266, $r267, $r268, $r269, $r270, $r271, $r272, $r274, $r275, $r276, $r277, $r278, $r279, $r280, $r281, $r282, $r284, $r285, $r286, $r287, $r288, $r289, $r290, $r292, $r293, $r294, $r295, $r296, $r297, $r298, $r299, $r300, $r302, $r303, $r304, $r305, $r306, $r307, $r308, $r310, $r311, $r312, $r314, $r315, $r316, $r317, $r319, $r320, $r321, $r322, $r324, $r325, $r326, $r327, $r329, $r330, $r331, $r333, $r334, $r335, $r336, $r337, $r338, $r339, $r340, $r344, $r345, $r346, $r348, $r349, $r350, $r351, $r353, $r354, $r355, $r357, $r358, $r359, $r360, $r361, $r362, $r364, $r365, $r366, $r368, $r369, $r370, $r371, $r372, $r373, $r374, $r375, $r377, $r378, $r379, $r380, $r382, $r383, $r384, $r385, $r386, $r387, $r388, $r406, $r407, $r408, $r410, $r411, $r412, $r413, $r414, $r415, $r416, $r417, $r419, $r420, $r421, $r423, $r424, $r425, $r426, $r427, $r428;
        org.apache.xmlbeans.impl.schema.SchemaTypeImpl $r47, $r117, $r132, $r217, $r235, $r343;
        int i0, $i1;
        org.apache.xmlbeans.SchemaProperty r35;
        java.lang.String r0, $r1, $r2, $r3, r4, r5, r6, $r10, $r14, $r18, $r23, r28, $r33, $r45, r48, $r57, $r61, $r68, $r72, $r77, $r82, $r89, $r93, $r102, $r106, $r115, $r121, $r130, $r139, $r143, $r148, $r152, $r161, $r169, $r173, $r182, $r187, $r195, $r203, $r213, $r218, $r223, $r231, $r236, $r241, $r251, $r259, $r264, $r273, $r283, $r291, $r301, $r309, $r313, $r318, $r323, $r328, $r332, $r341, $r347, $r352, $r356, $r363, $r367, $r376, $r381, $r389, $r390, $r391, $r392, $r393, $r394, $r395, $r396, $r397, $r398, $r399, $r400, $r401, $r402, $r403, $r404, $r405, $r409, $r418, $r422, $r429;
        boolean z0, z1, z2, z3, z4, z5, z6, z7, z8, $z9, $z10, $z11;
        javax.xml.namespace.QName r9;
        org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter r19;

        r19 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter;

        r9 := @parameter0: javax.xml.namespace.QName;

        r35 := @parameter1: org.apache.xmlbeans.SchemaProperty;

        z4 := @parameter2: boolean;

        r0 := @parameter3: java.lang.String;

        i0 := @parameter4: int;

        r28 := @parameter5: java.lang.String;

        r48 := @parameter6: java.lang.String;

        z8 := @parameter7: boolean;

        z6 := @parameter8: boolean;

        z7 := @parameter9: boolean;

        z5 := @parameter10: boolean;

        z3 := @parameter11: boolean;

        r4 := @parameter12: java.lang.String;

        r5 := @parameter13: java.lang.String;

        r34 := @parameter14: org.apache.xmlbeans.SchemaType;

        $r1 = staticinvoke <org.apache.xmlbeans.impl.common.NameUtil: java.lang.String lowerCamelCase(java.lang.String)>(r0);

        $r2 = staticinvoke <org.apache.xmlbeans.impl.common.NameUtil: java.lang.String nonJavaKeyword(java.lang.String)>($r1);

        $r3 = staticinvoke <org.apache.xmlbeans.impl.common.NameUtil: java.lang.String nonExtraKeyword(java.lang.String)>($r2);

        if i0 != 0 goto label01;

        $z9 = 1;

        goto label02;

     label01:
        $z9 = 0;

     label02:
        z0 = $z9;

        if i0 != 19 goto label03;

        $z10 = 1;

        goto label04;

     label03:
        $z10 = 0;

     label04:
        z1 = $z10;

        if r4 == r5 goto label05;

        $z11 = 1;

        goto label06;

     label05:
        $z11 = 0;

     label06:
        z2 = $z11;

        if z3 != 0 goto label07;

        if z0 != 0 goto label08;

     label07:
        $r390 = "org.apache.xmlbeans.SimpleValue";

        goto label09;

     label08:
        $r390 = r48;

     label09:
        r6 = $r390;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r10 = virtualinvoke r9.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        if z4 == 0 goto label10;

        $r391 = " attribute";

        goto label11;

     label10:
        $r391 = " element";

     label11:
        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r391);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        if z5 == 0 goto label38;

        $r329 = new java.lang.StringBuffer;

        specialinvoke $r329.<java.lang.StringBuffer: void <init>()>();

        if z7 == 0 goto label12;

        $r392 = "Sets first ";

        goto label13;

     label12:
        $r392 = "Sets the ";

     label13:
        $r330 = virtualinvoke $r329.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r392);

        $r331 = virtualinvoke $r330.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r332 = virtualinvoke $r331.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printJavaDoc(java.lang.String)>($r332);

        $r333 = new java.lang.StringBuffer;

        specialinvoke $r333.<java.lang.StringBuffer: void <init>()>();

        $r334 = virtualinvoke $r333.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("public void set");

        $r335 = virtualinvoke $r334.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r336 = virtualinvoke $r335.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        $r337 = virtualinvoke $r336.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r28);

        $r338 = virtualinvoke $r337.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r339 = virtualinvoke $r338.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r340 = virtualinvoke $r339.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r341 = virtualinvoke $r340.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r341);

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void startBlock()>();

        if z0 == 0 goto label18;

        if z2 != 0 goto label18;

        if z7 == 0 goto label14;

        $r393 = "0";

        goto label15;

     label14:
        $r393 = "-1";

     label15:
        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitPre(org.apache.xmlbeans.SchemaType,int,java.lang.String,boolean,java.lang.String)>(r34, 1, r4, z4, $r393);

        $r382 = new java.lang.StringBuffer;

        specialinvoke $r382.<java.lang.StringBuffer: void <init>()>();

        $r383 = virtualinvoke $r382.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("generatedSetterHelperImpl(");

        $r384 = virtualinvoke $r383.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r385 = virtualinvoke $r384.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r386 = virtualinvoke $r385.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r5);

        $r387 = virtualinvoke $r386.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", 0, ");

        $r388 = virtualinvoke $r387.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("org.apache.xmlbeans.impl.values.XmlObjectBase.KIND_SETTERHELPER_SINGLETON);");

        $r389 = virtualinvoke $r388.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r389);

        if z7 == 0 goto label16;

        $r394 = "0";

        goto label17;

     label16:
        $r394 = "-1";

     label17:
        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitPost(org.apache.xmlbeans.SchemaType,int,java.lang.String,boolean,java.lang.String)>(r34, 1, r4, z4, $r394);

        goto label23;

     label18:
        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitImplementationPreamble()>();

        if z7 == 0 goto label19;

        $r395 = "0";

        goto label20;

     label19:
        $r395 = "-1";

     label20:
        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitPre(org.apache.xmlbeans.SchemaType,int,java.lang.String,boolean,java.lang.String)>(r34, 1, r4, z4, $r395);

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitGetTarget(java.lang.String,java.lang.String,boolean,java.lang.String,int,java.lang.String)>(r5, r4, z4, "0", 3, r6);

        $r342 = interfaceinvoke r35.<org.apache.xmlbeans.SchemaProperty: org.apache.xmlbeans.SchemaType getType()>();

        $r343 = (org.apache.xmlbeans.impl.schema.SchemaTypeImpl) $r342;

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printJSetValue(int,java.lang.String,org.apache.xmlbeans.impl.schema.SchemaTypeImpl)>(i0, $r3, $r343);

        if z7 == 0 goto label21;

        $r396 = "0";

        goto label22;

     label21:
        $r396 = "-1";

     label22:
        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitPost(org.apache.xmlbeans.SchemaType,int,java.lang.String,boolean,java.lang.String)>(r34, 1, r4, z4, $r396);

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitImplementationPostamble()>();

     label23:
        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void endBlock()>();

        if z0 != 0 goto label30;

        $r364 = new java.lang.StringBuffer;

        specialinvoke $r364.<java.lang.StringBuffer: void <init>()>();

        if z7 == 0 goto label24;

        $r397 = "Sets (as xml) first ";

        goto label25;

     label24:
        $r397 = "Sets (as xml) the ";

     label25:
        $r365 = virtualinvoke $r364.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r397);

        $r366 = virtualinvoke $r365.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r367 = virtualinvoke $r366.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printJavaDoc(java.lang.String)>($r367);

        $r368 = new java.lang.StringBuffer;

        specialinvoke $r368.<java.lang.StringBuffer: void <init>()>();

        $r369 = virtualinvoke $r368.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("public void xset");

        $r370 = virtualinvoke $r369.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r371 = virtualinvoke $r370.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        $r372 = virtualinvoke $r371.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r48);

        $r373 = virtualinvoke $r372.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r374 = virtualinvoke $r373.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r375 = virtualinvoke $r374.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r376 = virtualinvoke $r375.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r376);

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void startBlock()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitImplementationPreamble()>();

        if z7 == 0 goto label26;

        $r398 = "0";

        goto label27;

     label26:
        $r398 = "-1";

     label27:
        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitPre(org.apache.xmlbeans.SchemaType,int,java.lang.String,boolean,java.lang.String)>(r34, 1, r4, z4, $r398);

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitGetTarget(java.lang.String,java.lang.String,boolean,java.lang.String,int,java.lang.String)>(r5, r4, z4, "0", 3, r48);

        $r377 = new java.lang.StringBuffer;

        specialinvoke $r377.<java.lang.StringBuffer: void <init>()>();

        $r378 = virtualinvoke $r377.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("target.set(");

        $r379 = virtualinvoke $r378.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r380 = virtualinvoke $r379.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");");

        $r381 = virtualinvoke $r380.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r381);

        if z7 == 0 goto label28;

        $r399 = "0";

        goto label29;

     label28:
        $r399 = "-1";

     label29:
        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitPost(org.apache.xmlbeans.SchemaType,int,java.lang.String,boolean,java.lang.String)>(r34, 1, r4, z4, $r399);

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitImplementationPostamble()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void endBlock()>();

     label30:
        if z0 == 0 goto label31;

        if z7 != 0 goto label31;

        $r353 = new java.lang.StringBuffer;

        specialinvoke $r353.<java.lang.StringBuffer: void <init>()>();

        $r354 = virtualinvoke $r353.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Appends and returns a new empty ");

        $r355 = virtualinvoke $r354.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r356 = virtualinvoke $r355.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printJavaDoc(java.lang.String)>($r356);

        $r357 = new java.lang.StringBuffer;

        specialinvoke $r357.<java.lang.StringBuffer: void <init>()>();

        $r358 = virtualinvoke $r357.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("public ");

        $r359 = virtualinvoke $r358.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r48);

        $r360 = virtualinvoke $r359.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" addNew");

        $r361 = virtualinvoke $r360.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r362 = virtualinvoke $r361.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("()");

        $r363 = virtualinvoke $r362.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r363);

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void startBlock()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitImplementationPreamble()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitDeclareTarget(boolean,java.lang.String)>(1, r48);

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitPre(org.apache.xmlbeans.SchemaType,int,java.lang.String,boolean)>(r34, 2, r4, z4);

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitAddTarget(java.lang.String,boolean,boolean,java.lang.String)>(r4, z4, 1, r48);

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitPost(org.apache.xmlbeans.SchemaType,int,java.lang.String,boolean)>(r34, 2, r4, z4);

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("return target;");

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitImplementationPostamble()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void endBlock()>();

     label31:
        if z8 == 0 goto label38;

        $r344 = new java.lang.StringBuffer;

        specialinvoke $r344.<java.lang.StringBuffer: void <init>()>();

        if z7 == 0 goto label32;

        $r400 = "Nils the first ";

        goto label33;

     label32:
        $r400 = "Nils the ";

     label33:
        $r345 = virtualinvoke $r344.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r400);

        $r346 = virtualinvoke $r345.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r347 = virtualinvoke $r346.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printJavaDoc(java.lang.String)>($r347);

        $r348 = new java.lang.StringBuffer;

        specialinvoke $r348.<java.lang.StringBuffer: void <init>()>();

        $r349 = virtualinvoke $r348.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("public void setNil");

        $r350 = virtualinvoke $r349.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r351 = virtualinvoke $r350.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("()");

        $r352 = virtualinvoke $r351.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r352);

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void startBlock()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitImplementationPreamble()>();

        if z7 == 0 goto label34;

        $r401 = "0";

        goto label35;

     label34:
        $r401 = "-1";

     label35:
        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitPre(org.apache.xmlbeans.SchemaType,int,java.lang.String,boolean,java.lang.String)>(r34, 1, r4, z4, $r401);

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitGetTarget(java.lang.String,java.lang.String,boolean,java.lang.String,int,java.lang.String)>(r5, r4, z4, "0", 3, r48);

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("target.setNil();");

        if z7 == 0 goto label36;

        $r402 = "0";

        goto label37;

     label36:
        $r402 = "-1";

     label37:
        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitPost(org.apache.xmlbeans.SchemaType,int,java.lang.String,boolean,java.lang.String)>(r34, 1, r4, z4, $r402);

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitImplementationPostamble()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void endBlock()>();

     label38:
        if z6 == 0 goto label47;

        $r310 = new java.lang.StringBuffer;

        specialinvoke $r310.<java.lang.StringBuffer: void <init>()>();

        if z7 == 0 goto label39;

        $r403 = "Removes first ";

        goto label40;

     label39:
        $r403 = "Unsets the ";

     label40:
        $r311 = virtualinvoke $r310.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r403);

        $r312 = virtualinvoke $r311.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r313 = virtualinvoke $r312.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printJavaDoc(java.lang.String)>($r313);

        $r314 = new java.lang.StringBuffer;

        specialinvoke $r314.<java.lang.StringBuffer: void <init>()>();

        $r315 = virtualinvoke $r314.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("public void unset");

        $r316 = virtualinvoke $r315.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r317 = virtualinvoke $r316.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("()");

        $r318 = virtualinvoke $r317.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r318);

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void startBlock()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitImplementationPreamble()>();

        if z7 == 0 goto label41;

        $r404 = "0";

        goto label42;

     label41:
        $r404 = "-1";

     label42:
        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitPre(org.apache.xmlbeans.SchemaType,int,java.lang.String,boolean,java.lang.String)>(r34, 3, r4, z4, $r404);

        if z4 == 0 goto label43;

        $r324 = new java.lang.StringBuffer;

        specialinvoke $r324.<java.lang.StringBuffer: void <init>()>();

        $r325 = virtualinvoke $r324.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("get_store().remove_attribute(");

        $r326 = virtualinvoke $r325.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r327 = virtualinvoke $r326.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");");

        $r328 = virtualinvoke $r327.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r328);

        goto label44;

     label43:
        $r319 = new java.lang.StringBuffer;

        specialinvoke $r319.<java.lang.StringBuffer: void <init>()>();

        $r320 = virtualinvoke $r319.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("get_store().remove_element(");

        $r321 = virtualinvoke $r320.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r5);

        $r322 = virtualinvoke $r321.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", 0);");

        $r323 = virtualinvoke $r322.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r323);

     label44:
        if z7 == 0 goto label45;

        $r405 = "0";

        goto label46;

     label45:
        $r405 = "-1";

     label46:
        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitPost(org.apache.xmlbeans.SchemaType,int,java.lang.String,boolean,java.lang.String)>(r34, 3, r4, z4, $r405);

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitImplementationPostamble()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void endBlock()>();

     label47:
        if z7 == 0 goto label69;

        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Array");

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

        if z0 == 0 goto label52;

        $r260 = new java.lang.StringBuffer;

        specialinvoke $r260.<java.lang.StringBuffer: void <init>()>();

        $r261 = virtualinvoke $r260.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Sets array of all ");

        $r262 = virtualinvoke $r261.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r263 = virtualinvoke $r262.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  WARNING: This method is not atomicaly synchronized.");

        $r264 = virtualinvoke $r263.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printJavaDoc(java.lang.String)>($r264);

        $r265 = new java.lang.StringBuffer;

        specialinvoke $r265.<java.lang.StringBuffer: void <init>()>();

        $r266 = virtualinvoke $r265.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("public void set");

        $r267 = virtualinvoke $r266.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        $r268 = virtualinvoke $r267.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        $r269 = virtualinvoke $r268.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r28);

        $r270 = virtualinvoke $r269.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[] ");

        $r271 = virtualinvoke $r270.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r272 = virtualinvoke $r271.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Array)");

        $r273 = virtualinvoke $r272.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r273);

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void startBlock()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("check_orphaned();");

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitPre(org.apache.xmlbeans.SchemaType,int,java.lang.String,boolean)>(r34, 1, r4, z4);

        if z1 == 0 goto label49;

        if z2 != 0 goto label48;

        $r302 = new java.lang.StringBuffer;

        specialinvoke $r302.<java.lang.StringBuffer: void <init>()>();

        $r303 = virtualinvoke $r302.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("unionArraySetterHelper(");

        $r304 = virtualinvoke $r303.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r305 = virtualinvoke $r304.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Array");

        $r306 = virtualinvoke $r305.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r307 = virtualinvoke $r306.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r308 = virtualinvoke $r307.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");");

        $r309 = virtualinvoke $r308.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r309);

        goto label51;

     label48:
        $r292 = new java.lang.StringBuffer;

        specialinvoke $r292.<java.lang.StringBuffer: void <init>()>();

        $r293 = virtualinvoke $r292.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("unionArraySetterHelper(");

        $r294 = virtualinvoke $r293.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r295 = virtualinvoke $r294.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Array");

        $r296 = virtualinvoke $r295.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r297 = virtualinvoke $r296.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r298 = virtualinvoke $r297.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r299 = virtualinvoke $r298.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r5);

        $r300 = virtualinvoke $r299.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");");

        $r301 = virtualinvoke $r300.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r301);

        goto label51;

     label49:
        if z2 != 0 goto label50;

        $r284 = new java.lang.StringBuffer;

        specialinvoke $r284.<java.lang.StringBuffer: void <init>()>();

        $r285 = virtualinvoke $r284.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("arraySetterHelper(");

        $r286 = virtualinvoke $r285.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r287 = virtualinvoke $r286.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Array");

        $r288 = virtualinvoke $r287.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r289 = virtualinvoke $r288.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r290 = virtualinvoke $r289.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");");

        $r291 = virtualinvoke $r290.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r291);

        goto label51;

     label50:
        $r274 = new java.lang.StringBuffer;

        specialinvoke $r274.<java.lang.StringBuffer: void <init>()>();

        $r275 = virtualinvoke $r274.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("arraySetterHelper(");

        $r276 = virtualinvoke $r275.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r277 = virtualinvoke $r276.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Array");

        $r278 = virtualinvoke $r277.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r279 = virtualinvoke $r278.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r280 = virtualinvoke $r279.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r281 = virtualinvoke $r280.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r5);

        $r282 = virtualinvoke $r281.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");");

        $r283 = virtualinvoke $r282.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r283);

     label51:
        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitPost(org.apache.xmlbeans.SchemaType,int,java.lang.String,boolean)>(r34, 1, r4, z4);

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void endBlock()>();

        goto label59;

     label52:
        $r20 = new java.lang.StringBuffer;

        specialinvoke $r20.<java.lang.StringBuffer: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Sets array of all ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printJavaDoc(java.lang.String)>($r23);

        $r24 = new java.lang.StringBuffer;

        specialinvoke $r24.<java.lang.StringBuffer: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("public void set");

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        $r29 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[] ");

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Array)");

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r33);

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void startBlock()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitImplementationPreamble()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitPre(org.apache.xmlbeans.SchemaType,int,java.lang.String,boolean)>(r34, 1, r4, z4);

        if z1 == 0 goto label54;

        if z2 != 0 goto label53;

        $r252 = new java.lang.StringBuffer;

        specialinvoke $r252.<java.lang.StringBuffer: void <init>()>();

        $r253 = virtualinvoke $r252.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("unionArraySetterHelper(");

        $r254 = virtualinvoke $r253.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r255 = virtualinvoke $r254.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Array");

        $r256 = virtualinvoke $r255.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r257 = virtualinvoke $r256.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r258 = virtualinvoke $r257.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");");

        $r259 = virtualinvoke $r258.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r259);

        goto label58;

     label53:
        $r242 = new java.lang.StringBuffer;

        specialinvoke $r242.<java.lang.StringBuffer: void <init>()>();

        $r243 = virtualinvoke $r242.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("unionArraySetterHelper(");

        $r244 = virtualinvoke $r243.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r245 = virtualinvoke $r244.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Array");

        $r246 = virtualinvoke $r245.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r247 = virtualinvoke $r246.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r248 = virtualinvoke $r247.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r249 = virtualinvoke $r248.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r5);

        $r250 = virtualinvoke $r249.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");");

        $r251 = virtualinvoke $r250.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r251);

        goto label58;

     label54:
        $i1 = interfaceinvoke r35.<org.apache.xmlbeans.SchemaProperty: int getJavaTypeCode()>();

        if $i1 != 20 goto label56;

        if z2 != 0 goto label55;

        $r224 = new java.lang.StringBuffer;

        specialinvoke $r224.<java.lang.StringBuffer: void <init>()>();

        $r225 = virtualinvoke $r224.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("org.apache.xmlbeans.SimpleValue[] dests = arraySetterHelper(");

        $r226 = virtualinvoke $r225.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r227 = virtualinvoke $r226.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Array.length");

        $r228 = virtualinvoke $r227.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r229 = virtualinvoke $r228.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r230 = virtualinvoke $r229.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");");

        $r231 = virtualinvoke $r230.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r231);

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("for ( int i = 0 ; i < dests.length ; i++ ) {");

        $r232 = new java.lang.StringBuffer;

        specialinvoke $r232.<java.lang.StringBuffer: void <init>()>();

        $r233 = virtualinvoke $r232.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    ");

        $r234 = interfaceinvoke r35.<org.apache.xmlbeans.SchemaProperty: org.apache.xmlbeans.SchemaType getType()>();

        $r235 = (org.apache.xmlbeans.impl.schema.SchemaTypeImpl) $r234;

        $r236 = specialinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: java.lang.String getUserTypeStaticHandlerMethod(boolean,org.apache.xmlbeans.impl.schema.SchemaTypeImpl)>(1, $r235);

        $r237 = virtualinvoke $r233.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r236);

        $r238 = virtualinvoke $r237.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        $r239 = virtualinvoke $r238.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r240 = virtualinvoke $r239.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Array[i], dests[i]);");

        $r241 = virtualinvoke $r240.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r241);

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("}");

        goto label58;

     label55:
        $r204 = new java.lang.StringBuffer;

        specialinvoke $r204.<java.lang.StringBuffer: void <init>()>();

        $r205 = virtualinvoke $r204.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("org.apache.xmlbeans.SimpleValue[] dests = arraySetterHelper(");

        $r206 = virtualinvoke $r205.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r207 = virtualinvoke $r206.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Array.length");

        $r208 = virtualinvoke $r207.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r209 = virtualinvoke $r208.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r210 = virtualinvoke $r209.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r211 = virtualinvoke $r210.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r5);

        $r212 = virtualinvoke $r211.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");");

        $r213 = virtualinvoke $r212.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r213);

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("for ( int i = 0 ; i < dests.length ; i++ ) {");

        $r214 = new java.lang.StringBuffer;

        specialinvoke $r214.<java.lang.StringBuffer: void <init>()>();

        $r215 = virtualinvoke $r214.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    ");

        $r216 = interfaceinvoke r35.<org.apache.xmlbeans.SchemaProperty: org.apache.xmlbeans.SchemaType getType()>();

        $r217 = (org.apache.xmlbeans.impl.schema.SchemaTypeImpl) $r216;

        $r218 = specialinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: java.lang.String getUserTypeStaticHandlerMethod(boolean,org.apache.xmlbeans.impl.schema.SchemaTypeImpl)>(1, $r217);

        $r219 = virtualinvoke $r215.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r218);

        $r220 = virtualinvoke $r219.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        $r221 = virtualinvoke $r220.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r222 = virtualinvoke $r221.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Array[i], dests[i]);");

        $r223 = virtualinvoke $r222.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r223);

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("}");

        goto label58;

     label56:
        if z2 != 0 goto label57;

        $r196 = new java.lang.StringBuffer;

        specialinvoke $r196.<java.lang.StringBuffer: void <init>()>();

        $r197 = virtualinvoke $r196.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("arraySetterHelper(");

        $r198 = virtualinvoke $r197.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r199 = virtualinvoke $r198.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Array");

        $r200 = virtualinvoke $r199.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r201 = virtualinvoke $r200.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r202 = virtualinvoke $r201.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");");

        $r203 = virtualinvoke $r202.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r203);

        goto label58;

     label57:
        $r36 = new java.lang.StringBuffer;

        specialinvoke $r36.<java.lang.StringBuffer: void <init>()>();

        $r37 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("arraySetterHelper(");

        $r38 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r39 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Array");

        $r40 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r41 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r42 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r43 = virtualinvoke $r42.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r5);

        $r44 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");");

        $r45 = virtualinvoke $r44.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r45);

     label58:
        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitPost(org.apache.xmlbeans.SchemaType,int,java.lang.String,boolean)>(r34, 1, r4, z4);

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitImplementationPostamble()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void endBlock()>();

     label59:
        $r406 = new java.lang.StringBuffer;

        specialinvoke $r406.<java.lang.StringBuffer: void <init>()>();

        $r407 = virtualinvoke $r406.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Sets ith ");

        $r408 = virtualinvoke $r407.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r409 = virtualinvoke $r408.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printJavaDoc(java.lang.String)>($r409);

        $r410 = new java.lang.StringBuffer;

        specialinvoke $r410.<java.lang.StringBuffer: void <init>()>();

        $r411 = virtualinvoke $r410.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("public void set");

        $r412 = virtualinvoke $r411.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        $r413 = virtualinvoke $r412.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(int i, ");

        $r414 = virtualinvoke $r413.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r28);

        $r415 = virtualinvoke $r414.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r416 = virtualinvoke $r415.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r417 = virtualinvoke $r416.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r418 = virtualinvoke $r417.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r418);

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void startBlock()>();

        if z0 == 0 goto label60;

        if z2 != 0 goto label60;

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitPre(org.apache.xmlbeans.SchemaType,int,java.lang.String,boolean,java.lang.String)>(r34, 1, r4, z4, "i");

        $r188 = new java.lang.StringBuffer;

        specialinvoke $r188.<java.lang.StringBuffer: void <init>()>();

        $r189 = virtualinvoke $r188.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("generatedSetterHelperImpl(");

        $r190 = virtualinvoke $r189.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r191 = virtualinvoke $r190.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r192 = virtualinvoke $r191.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r5);

        $r193 = virtualinvoke $r192.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", i, ");

        $r194 = virtualinvoke $r193.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("org.apache.xmlbeans.impl.values.XmlObjectBase.KIND_SETTERHELPER_ARRAYITEM);");

        $r195 = virtualinvoke $r194.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r195);

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitPost(org.apache.xmlbeans.SchemaType,int,java.lang.String,boolean,java.lang.String)>(r34, 1, r4, z4, "i");

        goto label61;

     label60:
        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitImplementationPreamble()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitPre(org.apache.xmlbeans.SchemaType,int,java.lang.String,boolean,java.lang.String)>(r34, 1, r4, z4, "i");

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitGetTarget(java.lang.String,java.lang.String,boolean,java.lang.String,int,java.lang.String)>(r5, r4, z4, "i", 4, r6);

        $r46 = interfaceinvoke r35.<org.apache.xmlbeans.SchemaProperty: org.apache.xmlbeans.SchemaType getType()>();

        $r47 = (org.apache.xmlbeans.impl.schema.SchemaTypeImpl) $r46;

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printJSetValue(int,java.lang.String,org.apache.xmlbeans.impl.schema.SchemaTypeImpl)>(i0, $r3, $r47);

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitPost(org.apache.xmlbeans.SchemaType,int,java.lang.String,boolean,java.lang.String)>(r34, 1, r4, z4, "i");

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitImplementationPostamble()>();

     label61:
        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void endBlock()>();

        if z0 != 0 goto label62;

        $r149 = new java.lang.StringBuffer;

        specialinvoke $r149.<java.lang.StringBuffer: void <init>()>();

        $r150 = virtualinvoke $r149.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Sets (as xml) array of all ");

        $r151 = virtualinvoke $r150.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r152 = virtualinvoke $r151.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printJavaDoc(java.lang.String)>($r152);

        $r153 = new java.lang.StringBuffer;

        specialinvoke $r153.<java.lang.StringBuffer: void <init>()>();

        $r154 = virtualinvoke $r153.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("public void xset");

        $r155 = virtualinvoke $r154.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        $r156 = virtualinvoke $r155.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        $r157 = virtualinvoke $r156.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r48);

        $r158 = virtualinvoke $r157.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[]");

        $r159 = virtualinvoke $r158.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r160 = virtualinvoke $r159.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Array)");

        $r161 = virtualinvoke $r160.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r161);

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void startBlock()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitImplementationPreamble()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitPre(org.apache.xmlbeans.SchemaType,int,java.lang.String,boolean)>(r34, 1, r4, z4);

        $r162 = new java.lang.StringBuffer;

        specialinvoke $r162.<java.lang.StringBuffer: void <init>()>();

        $r163 = virtualinvoke $r162.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("arraySetterHelper(");

        $r164 = virtualinvoke $r163.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r165 = virtualinvoke $r164.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Array");

        $r166 = virtualinvoke $r165.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r167 = virtualinvoke $r166.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r168 = virtualinvoke $r167.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");");

        $r169 = virtualinvoke $r168.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r169);

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitPost(org.apache.xmlbeans.SchemaType,int,java.lang.String,boolean)>(r34, 1, r4, z4);

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitImplementationPostamble()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void endBlock()>();

        $r170 = new java.lang.StringBuffer;

        specialinvoke $r170.<java.lang.StringBuffer: void <init>()>();

        $r171 = virtualinvoke $r170.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Sets (as xml) ith ");

        $r172 = virtualinvoke $r171.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r173 = virtualinvoke $r172.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printJavaDoc(java.lang.String)>($r173);

        $r174 = new java.lang.StringBuffer;

        specialinvoke $r174.<java.lang.StringBuffer: void <init>()>();

        $r175 = virtualinvoke $r174.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("public void xset");

        $r176 = virtualinvoke $r175.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        $r177 = virtualinvoke $r176.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(int i, ");

        $r178 = virtualinvoke $r177.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r48);

        $r179 = virtualinvoke $r178.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r180 = virtualinvoke $r179.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r181 = virtualinvoke $r180.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r182 = virtualinvoke $r181.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r182);

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void startBlock()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitImplementationPreamble()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitPre(org.apache.xmlbeans.SchemaType,int,java.lang.String,boolean,java.lang.String)>(r34, 1, r4, z4, "i");

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitGetTarget(java.lang.String,java.lang.String,boolean,java.lang.String,int,java.lang.String)>(r5, r4, z4, "i", 4, r48);

        $r183 = new java.lang.StringBuffer;

        specialinvoke $r183.<java.lang.StringBuffer: void <init>()>();

        $r184 = virtualinvoke $r183.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("target.set(");

        $r185 = virtualinvoke $r184.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r186 = virtualinvoke $r185.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");");

        $r187 = virtualinvoke $r186.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r187);

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitPost(org.apache.xmlbeans.SchemaType,int,java.lang.String,boolean,java.lang.String)>(r34, 1, r4, z4, "i");

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitImplementationPostamble()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void endBlock()>();

     label62:
        if z8 == 0 goto label63;

        $r140 = new java.lang.StringBuffer;

        specialinvoke $r140.<java.lang.StringBuffer: void <init>()>();

        $r141 = virtualinvoke $r140.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Nils the ith ");

        $r142 = virtualinvoke $r141.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r143 = virtualinvoke $r142.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printJavaDoc(java.lang.String)>($r143);

        $r144 = new java.lang.StringBuffer;

        specialinvoke $r144.<java.lang.StringBuffer: void <init>()>();

        $r145 = virtualinvoke $r144.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("public void setNil");

        $r146 = virtualinvoke $r145.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        $r147 = virtualinvoke $r146.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(int i)");

        $r148 = virtualinvoke $r147.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r148);

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void startBlock()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitImplementationPreamble()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitPre(org.apache.xmlbeans.SchemaType,int,java.lang.String,boolean,java.lang.String)>(r34, 1, r4, z4, "i");

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitGetTarget(java.lang.String,java.lang.String,boolean,java.lang.String,int,java.lang.String)>(r5, r4, z4, "i", 4, r48);

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("target.setNil();");

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitPost(org.apache.xmlbeans.SchemaType,int,java.lang.String,boolean,java.lang.String)>(r34, 1, r4, z4, "i");

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitImplementationPostamble()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void endBlock()>();

     label63:
        if z0 != 0 goto label66;

        $r90 = new java.lang.StringBuffer;

        specialinvoke $r90.<java.lang.StringBuffer: void <init>()>();

        $r91 = virtualinvoke $r90.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Inserts the value as the ith ");

        $r92 = virtualinvoke $r91.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r93 = virtualinvoke $r92.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printJavaDoc(java.lang.String)>($r93);

        $r94 = new java.lang.StringBuffer;

        specialinvoke $r94.<java.lang.StringBuffer: void <init>()>();

        $r95 = virtualinvoke $r94.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("public void insert");

        $r96 = virtualinvoke $r95.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r97 = virtualinvoke $r96.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(int i, ");

        $r98 = virtualinvoke $r97.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r28);

        $r99 = virtualinvoke $r98.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r100 = virtualinvoke $r99.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r101 = virtualinvoke $r100.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r102 = virtualinvoke $r101.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r102);

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void startBlock()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitImplementationPreamble()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitPre(org.apache.xmlbeans.SchemaType,int,java.lang.String,boolean,java.lang.String)>(r34, 2, r4, z4, "i");

        $r103 = new java.lang.StringBuffer;

        specialinvoke $r103.<java.lang.StringBuffer: void <init>()>();

        $r104 = virtualinvoke $r103.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r6);

        $r105 = virtualinvoke $r104.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" target = ");

        $r106 = virtualinvoke $r105.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r106);

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void indent()>();

        if z2 != 0 goto label64;

        $r133 = new java.lang.StringBuffer;

        specialinvoke $r133.<java.lang.StringBuffer: void <init>()>();

        $r134 = virtualinvoke $r133.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        $r135 = virtualinvoke $r134.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r6);

        $r136 = virtualinvoke $r135.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")get_store().insert_element_user(");

        $r137 = virtualinvoke $r136.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r138 = virtualinvoke $r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", i);");

        $r139 = virtualinvoke $r138.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r139);

        goto label65;

     label64:
        $r107 = new java.lang.StringBuffer;

        specialinvoke $r107.<java.lang.StringBuffer: void <init>()>();

        $r108 = virtualinvoke $r107.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        $r109 = virtualinvoke $r108.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r6);

        $r110 = virtualinvoke $r109.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")get_store().insert_element_user(");

        $r111 = virtualinvoke $r110.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r5);

        $r112 = virtualinvoke $r111.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r113 = virtualinvoke $r112.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r114 = virtualinvoke $r113.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", i);");

        $r115 = virtualinvoke $r114.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r115);

     label65:
        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void outdent()>();

        $r116 = interfaceinvoke r35.<org.apache.xmlbeans.SchemaProperty: org.apache.xmlbeans.SchemaType getType()>();

        $r117 = (org.apache.xmlbeans.impl.schema.SchemaTypeImpl) $r116;

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printJSetValue(int,java.lang.String,org.apache.xmlbeans.impl.schema.SchemaTypeImpl)>(i0, $r3, $r117);

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitPost(org.apache.xmlbeans.SchemaType,int,java.lang.String,boolean,java.lang.String)>(r34, 2, r4, z4, "i");

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitImplementationPostamble()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void endBlock()>();

        $r118 = new java.lang.StringBuffer;

        specialinvoke $r118.<java.lang.StringBuffer: void <init>()>();

        $r119 = virtualinvoke $r118.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Appends the value as the last ");

        $r120 = virtualinvoke $r119.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r121 = virtualinvoke $r120.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printJavaDoc(java.lang.String)>($r121);

        $r122 = new java.lang.StringBuffer;

        specialinvoke $r122.<java.lang.StringBuffer: void <init>()>();

        $r123 = virtualinvoke $r122.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("public void add");

        $r124 = virtualinvoke $r123.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r125 = virtualinvoke $r124.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        $r126 = virtualinvoke $r125.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r28);

        $r127 = virtualinvoke $r126.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r128 = virtualinvoke $r127.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r129 = virtualinvoke $r128.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r130 = virtualinvoke $r129.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r130);

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void startBlock()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitImplementationPreamble()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitDeclareTarget(boolean,java.lang.String)>(1, r6);

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitPre(org.apache.xmlbeans.SchemaType,int,java.lang.String,boolean)>(r34, 2, r4, z4);

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitAddTarget(java.lang.String,boolean,boolean,java.lang.String)>(r4, z4, 1, r6);

        $r131 = interfaceinvoke r35.<org.apache.xmlbeans.SchemaProperty: org.apache.xmlbeans.SchemaType getType()>();

        $r132 = (org.apache.xmlbeans.impl.schema.SchemaTypeImpl) $r131;

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printJSetValue(int,java.lang.String,org.apache.xmlbeans.impl.schema.SchemaTypeImpl)>(i0, $r3, $r132);

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitPost(org.apache.xmlbeans.SchemaType,int,java.lang.String,boolean)>(r34, 2, r4, z4);

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitImplementationPostamble()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void endBlock()>();

     label66:
        $r419 = new java.lang.StringBuffer;

        specialinvoke $r419.<java.lang.StringBuffer: void <init>()>();

        $r420 = virtualinvoke $r419.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Inserts and returns a new empty value (as xml) as the ith ");

        $r421 = virtualinvoke $r420.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r422 = virtualinvoke $r421.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printJavaDoc(java.lang.String)>($r422);

        $r423 = new java.lang.StringBuffer;

        specialinvoke $r423.<java.lang.StringBuffer: void <init>()>();

        $r424 = virtualinvoke $r423.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("public ");

        $r425 = virtualinvoke $r424.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r48);

        $r426 = virtualinvoke $r425.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" insertNew");

        $r427 = virtualinvoke $r426.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r428 = virtualinvoke $r427.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(int i)");

        $r429 = virtualinvoke $r428.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r429);

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void startBlock()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitImplementationPreamble()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitDeclareTarget(boolean,java.lang.String)>(1, r48);

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitPre(org.apache.xmlbeans.SchemaType,int,java.lang.String,boolean,java.lang.String)>(r34, 2, r4, z4, "i");

        if z2 != 0 goto label67;

        $r83 = new java.lang.StringBuffer;

        specialinvoke $r83.<java.lang.StringBuffer: void <init>()>();

        $r84 = virtualinvoke $r83.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("target = (");

        $r85 = virtualinvoke $r84.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r48);

        $r86 = virtualinvoke $r85.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")get_store().insert_element_user(");

        $r87 = virtualinvoke $r86.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r88 = virtualinvoke $r87.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", i);");

        $r89 = virtualinvoke $r88.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r89);

        goto label68;

     label67:
        $r49 = new java.lang.StringBuffer;

        specialinvoke $r49.<java.lang.StringBuffer: void <init>()>();

        $r50 = virtualinvoke $r49.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("target = (");

        $r51 = virtualinvoke $r50.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r48);

        $r52 = virtualinvoke $r51.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")get_store().insert_element_user(");

        $r53 = virtualinvoke $r52.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r5);

        $r54 = virtualinvoke $r53.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r55 = virtualinvoke $r54.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r56 = virtualinvoke $r55.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", i);");

        $r57 = virtualinvoke $r56.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r57);

     label68:
        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitPost(org.apache.xmlbeans.SchemaType,int,java.lang.String,boolean,java.lang.String)>(r34, 2, r4, z4, "i");

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("return target;");

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitImplementationPostamble()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void endBlock()>();

        $r58 = new java.lang.StringBuffer;

        specialinvoke $r58.<java.lang.StringBuffer: void <init>()>();

        $r59 = virtualinvoke $r58.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Appends and returns a new empty value (as xml) as the last ");

        $r60 = virtualinvoke $r59.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r61 = virtualinvoke $r60.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printJavaDoc(java.lang.String)>($r61);

        $r62 = new java.lang.StringBuffer;

        specialinvoke $r62.<java.lang.StringBuffer: void <init>()>();

        $r63 = virtualinvoke $r62.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("public ");

        $r64 = virtualinvoke $r63.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r48);

        $r65 = virtualinvoke $r64.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" addNew");

        $r66 = virtualinvoke $r65.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r67 = virtualinvoke $r66.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("()");

        $r68 = virtualinvoke $r67.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r68);

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void startBlock()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitImplementationPreamble()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitDeclareTarget(boolean,java.lang.String)>(1, r48);

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitPre(org.apache.xmlbeans.SchemaType,int,java.lang.String,boolean)>(r34, 2, r4, z4);

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitAddTarget(java.lang.String,boolean,boolean,java.lang.String)>(r4, z4, 1, r48);

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitPost(org.apache.xmlbeans.SchemaType,int,java.lang.String,boolean)>(r34, 2, r4, z4);

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>("return target;");

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitImplementationPostamble()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void endBlock()>();

        $r69 = new java.lang.StringBuffer;

        specialinvoke $r69.<java.lang.StringBuffer: void <init>()>();

        $r70 = virtualinvoke $r69.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Removes the ith ");

        $r71 = virtualinvoke $r70.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r72 = virtualinvoke $r71.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printJavaDoc(java.lang.String)>($r72);

        $r73 = new java.lang.StringBuffer;

        specialinvoke $r73.<java.lang.StringBuffer: void <init>()>();

        $r74 = virtualinvoke $r73.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("public void remove");

        $r75 = virtualinvoke $r74.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r76 = virtualinvoke $r75.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(int i)");

        $r77 = virtualinvoke $r76.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r77);

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void startBlock()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitImplementationPreamble()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitPre(org.apache.xmlbeans.SchemaType,int,java.lang.String,boolean,java.lang.String)>(r34, 3, r4, z4, "i");

        $r78 = new java.lang.StringBuffer;

        specialinvoke $r78.<java.lang.StringBuffer: void <init>()>();

        $r79 = virtualinvoke $r78.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("get_store().remove_element(");

        $r80 = virtualinvoke $r79.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r5);

        $r81 = virtualinvoke $r80.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", i);");

        $r82 = virtualinvoke $r81.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r82);

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitPost(org.apache.xmlbeans.SchemaType,int,java.lang.String,boolean,java.lang.String)>(r34, 3, r4, z4, "i");

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emitImplementationPostamble()>();

        virtualinvoke r19.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void endBlock()>();

     label69:
        return;
    }

    static void getTypeName(java.lang.Class, java.lang.StringBuffer)
    {
        java.lang.StringBuffer r0;
        int i0, i1;
        java.lang.Class r2;
        java.lang.String $r1;
        boolean $z0;

        r2 := @parameter0: java.lang.Class;

        r0 := @parameter1: java.lang.StringBuffer;

        i0 = 0;

     label1:
        $z0 = virtualinvoke r2.<java.lang.Class: boolean isArray()>();

        if $z0 == 0 goto label2;

        r2 = virtualinvoke r2.<java.lang.Class: java.lang.Class getComponentType()>();

        i0 = i0 + 1;

        goto label1;

     label2:
        $r1 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        i1 = 0;

     label3:
        if i1 >= i0 goto label4;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[]");

        i1 = i1 + 1;

        goto label3;

     label4:
        return;
    }

    void printInnerTypeImpl(org.apache.xmlbeans.SchemaType, org.apache.xmlbeans.SchemaTypeSystem, boolean) throws java.io.IOException
    {
        org.apache.xmlbeans.SchemaProperty[] $r15, $r16, $r18, $r20, r29;
        org.apache.xmlbeans.SchemaProperty $r19, $r21, $r22, $r24, $r26, r30;
        java.util.Map $r4;
        org.apache.xmlbeans.SchemaType r0, r27;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17;
        org.apache.xmlbeans.SchemaTypeSystem r3;
        javax.xml.namespace.QName $r5, $r25;
        org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter r2;
        java.lang.Object[] $r17;
        java.util.ArrayList $r23, r28;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10, $i11;
        java.lang.String $r1, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;

        r2 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter;

        r0 := @parameter0: org.apache.xmlbeans.SchemaType;

        r3 := @parameter1: org.apache.xmlbeans.SchemaTypeSystem;

        z0 := @parameter2: boolean;

        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: java.lang.String getShortJavaImplName()>();

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printInnerTypeJavaDoc(org.apache.xmlbeans.SchemaType)>(r0);

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void startClass(org.apache.xmlbeans.SchemaType,boolean)>(r0, z0);

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printConstructor(org.apache.xmlbeans.SchemaType,java.lang.String)>(r0, $r1);

        specialinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printExtensionImplMethods(org.apache.xmlbeans.SchemaType)>(r0);

        $z1 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: boolean isSimpleType()>();

        if $z1 != 0 goto label19;

        $i0 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: int getContentType()>();

        if $i0 != 2 goto label11;

        r27 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType getBaseType()>();

        r28 = null;

     label01:
        $z13 = interfaceinvoke r27.<org.apache.xmlbeans.SchemaType: boolean isSimpleType()>();

        if $z13 != 0 goto label07;

        $z14 = interfaceinvoke r27.<org.apache.xmlbeans.SchemaType: boolean isBuiltinType()>();

        if $z14 != 0 goto label07;

        $r20 = interfaceinvoke r27.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaProperty[] getDerivedProperties()>();

        i8 = 0;

     label02:
        $i7 = lengthof $r20;

        if i8 >= $i7 goto label06;

        $r21 = $r20[i8];

        $z15 = interfaceinvoke $r21.<org.apache.xmlbeans.SchemaProperty: boolean isAttribute()>();

        if $z15 == 0 goto label03;

        $r24 = $r20[i8];

        $r25 = interfaceinvoke $r24.<org.apache.xmlbeans.SchemaProperty: javax.xml.namespace.QName getName()>();

        $r26 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaProperty getAttributeProperty(javax.xml.namespace.QName)>($r25);

        if $r26 != null goto label05;

     label03:
        if r28 != null goto label04;

        $r23 = new java.util.ArrayList;

        specialinvoke $r23.<java.util.ArrayList: void <init>()>();

        r28 = $r23;

     label04:
        $r22 = $r20[i8];

        interfaceinvoke r28.<java.util.List: boolean add(java.lang.Object)>($r22);

     label05:
        i8 = i8 + 1;

        goto label02;

     label06:
        r27 = interfaceinvoke r27.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType getBaseType()>();

        goto label01;

     label07:
        $r15 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaProperty[] getProperties()>();

        r29 = $r15;

        if r28 == null goto label10;

        i9 = 0;

     label08:
        $i5 = lengthof $r15;

        if i9 >= $i5 goto label09;

        $r19 = $r15[i9];

        interfaceinvoke r28.<java.util.List: boolean add(java.lang.Object)>($r19);

        i9 = i9 + 1;

        goto label08;

     label09:
        $i6 = interfaceinvoke r28.<java.util.List: int size()>();

        $r16 = newarray (org.apache.xmlbeans.SchemaProperty)[$i6];

        $r17 = interfaceinvoke r28.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r16);

        $r18 = (org.apache.xmlbeans.SchemaProperty[]) $r17;

        r29 = (org.apache.xmlbeans.SchemaProperty[]) $r18;

     label10:
        goto label12;

     label11:
        r29 = specialinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: org.apache.xmlbeans.SchemaProperty[] getDerivedProperties(org.apache.xmlbeans.SchemaType)>(r0);

     label12:
        $r4 = virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: java.util.Map printStaticFields(org.apache.xmlbeans.SchemaProperty[])>(r29);

        i10 = 0;

     label13:
        $i11 = lengthof r29;

        if i10 >= $i11 goto label19;

        r30 = r29[i10];

        $r5 = interfaceinvoke r30.<org.apache.xmlbeans.SchemaProperty: javax.xml.namespace.QName getName()>();

        $r6 = virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: java.lang.String xmlTypeForProperty(org.apache.xmlbeans.SchemaProperty)>(r30);

        $z2 = interfaceinvoke r30.<org.apache.xmlbeans.SchemaProperty: boolean isAttribute()>();

        $r7 = interfaceinvoke r30.<org.apache.xmlbeans.SchemaProperty: java.lang.String getJavaPropertyName()>();

        $i1 = interfaceinvoke r30.<org.apache.xmlbeans.SchemaProperty: int getJavaTypeCode()>();

        $r8 = virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: java.lang.String javaTypeForProperty(org.apache.xmlbeans.SchemaProperty)>(r30);

        $i2 = interfaceinvoke r30.<org.apache.xmlbeans.SchemaProperty: int hasNillable()>();

        if $i2 == 0 goto label14;

        $z16 = 1;

        goto label15;

     label14:
        $z16 = 0;

     label15:
        $z3 = interfaceinvoke r30.<org.apache.xmlbeans.SchemaProperty: boolean extendsJavaOption()>();

        $z4 = interfaceinvoke r30.<org.apache.xmlbeans.SchemaProperty: boolean extendsJavaArray()>();

        $z5 = interfaceinvoke r30.<org.apache.xmlbeans.SchemaProperty: boolean extendsJavaSingleton()>();

        $z6 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: boolean xmlTypeForPropertyIsUnion(org.apache.xmlbeans.SchemaProperty)>(r30);

        $r9 = virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: java.lang.String getIdentifier(java.util.Map,javax.xml.namespace.QName)>($r4, $r5);

        $r10 = virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: java.lang.String getSetIdentifier(java.util.Map,javax.xml.namespace.QName)>($r4, $r5);

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printGetterImpls(java.lang.String,org.apache.xmlbeans.SchemaProperty,javax.xml.namespace.QName,boolean,java.lang.String,int,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean,boolean,java.lang.String,java.lang.String)>($r1, r30, $r5, $z2, $r7, $i1, $r8, $r6, $z16, $z3, $z4, $z5, $z6, $r9, $r10);

        $z7 = interfaceinvoke r30.<org.apache.xmlbeans.SchemaProperty: boolean isReadOnly()>();

        if $z7 != 0 goto label18;

        $z8 = interfaceinvoke r30.<org.apache.xmlbeans.SchemaProperty: boolean isAttribute()>();

        $r11 = interfaceinvoke r30.<org.apache.xmlbeans.SchemaProperty: java.lang.String getJavaPropertyName()>();

        $i3 = interfaceinvoke r30.<org.apache.xmlbeans.SchemaProperty: int getJavaTypeCode()>();

        $r12 = virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: java.lang.String javaTypeForProperty(org.apache.xmlbeans.SchemaProperty)>(r30);

        $i4 = interfaceinvoke r30.<org.apache.xmlbeans.SchemaProperty: int hasNillable()>();

        if $i4 == 0 goto label16;

        $z17 = 1;

        goto label17;

     label16:
        $z17 = 0;

     label17:
        $z9 = interfaceinvoke r30.<org.apache.xmlbeans.SchemaProperty: boolean extendsJavaOption()>();

        $z10 = interfaceinvoke r30.<org.apache.xmlbeans.SchemaProperty: boolean extendsJavaArray()>();

        $z11 = interfaceinvoke r30.<org.apache.xmlbeans.SchemaProperty: boolean extendsJavaSingleton()>();

        $z12 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: boolean xmlTypeForPropertyIsUnion(org.apache.xmlbeans.SchemaProperty)>(r30);

        $r13 = virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: java.lang.String getIdentifier(java.util.Map,javax.xml.namespace.QName)>($r4, $r5);

        $r14 = virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: java.lang.String getSetIdentifier(java.util.Map,javax.xml.namespace.QName)>($r4, $r5);

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printSetterImpls(javax.xml.namespace.QName,org.apache.xmlbeans.SchemaProperty,boolean,java.lang.String,int,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean,boolean,java.lang.String,java.lang.String,org.apache.xmlbeans.SchemaType)>($r5, r30, $z8, $r11, $i3, $r12, $r6, $z17, $z9, $z10, $z11, $z12, $r13, $r14, r0);

     label18:
        i10 = i10 + 1;

        goto label13;

     label19:
        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printNestedTypeImpls(org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.SchemaTypeSystem)>(r0, r3);

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void endBlock()>();

        return;
    }

    private org.apache.xmlbeans.SchemaProperty[] getDerivedProperties(org.apache.xmlbeans.SchemaType)
    {
        org.apache.xmlbeans.SchemaProperty[] $r2, $r5, $r8, $r10, $r11, $r13;
        java.lang.Object[] $r9;
        java.util.LinkedHashMap $r6;
        org.apache.xmlbeans.SchemaProperty $r14, $r16, $r18, $r19, $r21;
        int $i0, $i1, i2, i3;
        org.apache.xmlbeans.SchemaType r0, $r3, r23;
        boolean $z0, $z1, $z2;
        java.util.Collection $r7;
        javax.xml.namespace.QName $r1, $r4, $r12, $r15, $r17, $r20;
        org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter r22;

        r22 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter;

        r0 := @parameter0: org.apache.xmlbeans.SchemaType;

        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        if $r1 == null goto label7;

        $r3 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType getBaseType()>();

        $r4 = interfaceinvoke $r3.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $z0 = virtualinvoke $r1.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label7;

        r23 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType getBaseType()>();

        $r5 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaProperty[] getDerivedProperties()>();

        $r6 = new java.util.LinkedHashMap;

        specialinvoke $r6.<java.util.LinkedHashMap: void <init>()>();

        i2 = 0;

     label1:
        $i0 = lengthof $r5;

        if i2 >= $i0 goto label2;

        $r19 = $r5[i2];

        $r20 = interfaceinvoke $r19.<org.apache.xmlbeans.SchemaProperty: javax.xml.namespace.QName getName()>();

        $r21 = $r5[i2];

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r20, $r21);

        i2 = i2 + 1;

        goto label1;

     label2:
        if r23 == null goto label6;

        $r12 = interfaceinvoke r23.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $z1 = virtualinvoke $r1.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r12);

        if $z1 == 0 goto label6;

        $r13 = interfaceinvoke r23.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaProperty[] getDerivedProperties()>();

        i3 = 0;

     label3:
        $i1 = lengthof $r13;

        if i3 >= $i1 goto label5;

        $r14 = $r13[i3];

        $r15 = interfaceinvoke $r14.<org.apache.xmlbeans.SchemaProperty: javax.xml.namespace.QName getName()>();

        $z2 = interfaceinvoke $r6.<java.util.Map: boolean containsKey(java.lang.Object)>($r15);

        if $z2 != 0 goto label4;

        $r16 = $r13[i3];

        $r17 = interfaceinvoke $r16.<org.apache.xmlbeans.SchemaProperty: javax.xml.namespace.QName getName()>();

        $r18 = $r13[i3];

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r17, $r18);

     label4:
        i3 = i3 + 1;

        goto label3;

     label5:
        r23 = interfaceinvoke r23.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType getBaseType()>();

        goto label2;

     label6:
        $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Collection values()>();

        $r8 = newarray (org.apache.xmlbeans.SchemaProperty)[0];

        $r9 = interfaceinvoke $r7.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r8);

        $r10 = (org.apache.xmlbeans.SchemaProperty[]) $r9;

        $r11 = (org.apache.xmlbeans.SchemaProperty[]) $r10;

        return $r11;

     label7:
        $r2 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaProperty[] getDerivedProperties()>();

        return $r2;
    }

    private void printExtensionImplMethods(org.apache.xmlbeans.SchemaType) throws java.io.IOException
    {
        org.apache.xmlbeans.InterfaceExtension[] $r2;
        java.lang.StringBuffer $r6, $r7, $r10;
        int $i0, $i1, i2, i3;
        org.apache.xmlbeans.impl.schema.SchemaTypeImpl $r1;
        java.lang.String $r9, $r11, $r14;
        org.apache.xmlbeans.SchemaType r0;
        org.apache.xmlbeans.InterfaceExtension$MethodSignature[] $r4;
        org.apache.xmlbeans.InterfaceExtension$MethodSignature $r12, $r15;
        org.apache.xmlbeans.InterfaceExtension $r3, $r8, $r13;
        org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter r5;

        r5 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter;

        r0 := @parameter0: org.apache.xmlbeans.SchemaType;

        $r1 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: org.apache.xmlbeans.impl.schema.SchemaTypeImpl getImpl(org.apache.xmlbeans.SchemaType)>(r0);

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = virtualinvoke $r1.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: org.apache.xmlbeans.InterfaceExtension[] getInterfaceExtensions()>();

        if $r2 == null goto label5;

        i2 = 0;

     label2:
        $i0 = lengthof $r2;

        if i2 >= $i0 goto label5;

        $r3 = $r2[i2];

        $r4 = interfaceinvoke $r3.<org.apache.xmlbeans.InterfaceExtension: org.apache.xmlbeans.InterfaceExtension$MethodSignature[] getMethods()>();

        if $r4 == null goto label4;

        i3 = 0;

     label3:
        $i1 = lengthof $r4;

        if i3 >= $i1 goto label4;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Implementation method for interface ");

        $r8 = $r2[i2];

        $r9 = interfaceinvoke $r8.<org.apache.xmlbeans.InterfaceExtension: java.lang.String getStaticHandler()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r5.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printJavaDoc(java.lang.String)>($r11);

        $r12 = $r4[i3];

        virtualinvoke r5.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printInterfaceMethodDecl(org.apache.xmlbeans.InterfaceExtension$MethodSignature)>($r12);

        virtualinvoke r5.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void startBlock()>();

        $r13 = $r2[i2];

        $r14 = interfaceinvoke $r13.<org.apache.xmlbeans.InterfaceExtension: java.lang.String getStaticHandler()>();

        $r15 = $r4[i3];

        virtualinvoke r5.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printInterfaceMethodImpl(java.lang.String,org.apache.xmlbeans.InterfaceExtension$MethodSignature)>($r14, $r15);

        virtualinvoke r5.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void endBlock()>();

        i3 = i3 + 1;

        goto label3;

     label4:
        i2 = i2 + 1;

        goto label2;

     label5:
        return;
    }

    void printInterfaceMethodDecl(org.apache.xmlbeans.InterfaceExtension$MethodSignature) throws java.io.IOException
    {
        java.lang.String[] $r7, $r8;
        java.lang.StringBuffer $r0, $r1, $r4, $r6, $r11, $r12, $r14, $r17, $r18;
        int $i0, $i1, i2, i3;
        java.lang.String $r3, $r5, $r10, $r13, $r15, $r16, $r19;
        org.apache.xmlbeans.InterfaceExtension$MethodSignature r2;
        org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter r9;

        r9 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter;

        r2 := @parameter0: org.apache.xmlbeans.InterfaceExtension$MethodSignature;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(int)>(60);

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("public ");

        $r3 = interfaceinvoke r2.<org.apache.xmlbeans.InterfaceExtension$MethodSignature: java.lang.String getReturnType()>();

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r5 = interfaceinvoke r2.<org.apache.xmlbeans.InterfaceExtension$MethodSignature: java.lang.String getName()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        $r7 = interfaceinvoke r2.<org.apache.xmlbeans.InterfaceExtension$MethodSignature: java.lang.String[] getParameterTypes()>();

        i2 = 0;

     label1:
        $i0 = lengthof $r7;

        if i2 >= $i0 goto label3;

        if i2 == 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

     label2:
        $r16 = $r7[i2];

        $r17 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" p");

        virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i2);

        i2 = i2 + 1;

        goto label1;

     label3:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r8 = interfaceinvoke r2.<org.apache.xmlbeans.InterfaceExtension$MethodSignature: java.lang.String[] getExceptionTypes()>();

        i3 = 0;

     label4:
        $i1 = lengthof $r8;

        if i3 >= $i1 goto label7;

        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        if i3 != 0 goto label5;

        $r19 = " throws ";

        goto label6;

     label5:
        $r19 = ", ";

     label6:
        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);

        $r13 = $r8[i3];

        $r14 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        i3 = i3 + 1;

        goto label4;

     label7:
        $r10 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r9.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r10);

        return;
    }

    void printInterfaceMethodImpl(java.lang.String, org.apache.xmlbeans.InterfaceExtension$MethodSignature) throws java.io.IOException
    {
        java.lang.String[] $r8;
        java.lang.StringBuffer $r0, $r4, $r5, $r7, $r11, $r12, $r13;
        int i0, $i1;
        java.lang.String $r2, r3, $r6, $r10, $r14;
        boolean $z0;
        org.apache.xmlbeans.InterfaceExtension$MethodSignature r1;
        org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter r9;

        r9 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter;

        r3 := @parameter0: java.lang.String;

        r1 := @parameter1: org.apache.xmlbeans.InterfaceExtension$MethodSignature;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(int)>(60);

        $r2 = interfaceinvoke r1.<org.apache.xmlbeans.InterfaceExtension$MethodSignature: java.lang.String getReturnType()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("void");

        if $z0 != 0 goto label1;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("return ");

     label1:
        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r6 = interfaceinvoke r1.<org.apache.xmlbeans.InterfaceExtension$MethodSignature: java.lang.String getName()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(this");

        $r8 = interfaceinvoke r1.<org.apache.xmlbeans.InterfaceExtension$MethodSignature: java.lang.String[] getParameterTypes()>();

        i0 = 0;

     label2:
        $i1 = lengthof $r8;

        if i0 >= $i1 goto label3;

        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", p");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        i0 = i0 + 1;

        goto label2;

     label3:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");");

        $r10 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r9.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void emit(java.lang.String)>($r10);

        return;
    }

    void printNestedTypeImpls(org.apache.xmlbeans.SchemaType, org.apache.xmlbeans.SchemaTypeSystem) throws java.io.IOException
    {
        org.apache.xmlbeans.SchemaType[] $r1;
        int $i0, $i1, i2;
        org.apache.xmlbeans.SchemaType $r2, $r5, $r6, $r8, r10;
        boolean z0, $z1, $z2, $z3, $z4;
        org.apache.xmlbeans.SchemaTypeSystem r4;
        javax.xml.namespace.QName $r0, $r7, $r9;
        org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter r3;

        r3 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter;

        r10 := @parameter0: org.apache.xmlbeans.SchemaType;

        r4 := @parameter1: org.apache.xmlbeans.SchemaTypeSystem;

        $r0 = interfaceinvoke r10.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        if $r0 == null goto label1;

        $r7 = interfaceinvoke r10.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $r8 = interfaceinvoke r10.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType getBaseType()>();

        $r9 = interfaceinvoke $r8.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $z3 = virtualinvoke $r7.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r9);

        if $z3 == 0 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        z0 = $z4;

     label3:
        if r10 == null goto label9;

        $r1 = interfaceinvoke r10.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType[] getAnonymousTypes()>();

        i2 = 0;

     label4:
        $i0 = lengthof $r1;

        if i2 >= $i0 goto label7;

        $r2 = $r1[i2];

        $z2 = interfaceinvoke $r2.<org.apache.xmlbeans.SchemaType: boolean isSkippedAnonymousType()>();

        if $z2 == 0 goto label5;

        $r6 = $r1[i2];

        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printNestedTypeImpls(org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.SchemaTypeSystem)>($r6, r4);

        goto label6;

     label5:
        $r5 = $r1[i2];

        virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printInnerTypeImpl(org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.SchemaTypeSystem,boolean)>($r5, r4, 1);

     label6:
        i2 = i2 + 1;

        goto label4;

     label7:
        if z0 == 0 goto label9;

        $i1 = interfaceinvoke r10.<org.apache.xmlbeans.SchemaType: int getDerivationType()>();

        if $i1 == 2 goto label8;

        $z1 = interfaceinvoke r10.<org.apache.xmlbeans.SchemaType: boolean isSimpleType()>();

        if $z1 != 0 goto label8;

        goto label9;

     label8:
        r10 = interfaceinvoke r10.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType getBaseType()>();

        goto label3;

     label9:
        return;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.lang.Class $r0, $r2;
        java.lang.String $r1, $r3;
        boolean $z0, $z1;

        <org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: int THROW_EXCEPTION> = 4;

        <org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: int ADD_NEW_VALUE> = 3;

        <org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: int NOTHING> = 1;

        <org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: java.lang.String INDEX_CLASSNAME> = "TypeSystemHolder";

        <org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: int INDENT_INCREMENT> = 4;

        <org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: java.lang.String MAX_SPACES> = "                                        ";

        $r0 = <org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: java.lang.Class class$org$apache$xmlbeans$impl$schema$SchemaTypeCodePrinter>;

        if $r0 != null goto label1;

        $r2 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter");

        <org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: java.lang.Class class$org$apache$xmlbeans$impl$schema$SchemaTypeCodePrinter> = $r2;

        goto label2;

     label1:
        $r2 = <org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: java.lang.Class class$org$apache$xmlbeans$impl$schema$SchemaTypeCodePrinter>;

     label2:
        $z0 = virtualinvoke $r2.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        <org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: boolean $assertionsDisabled> = $z1;

        $r1 = staticinvoke <org.apache.xmlbeans.SystemProperties: java.lang.String getProperty(java.lang.String)>("line.separator");

        if $r1 != null goto label5;

        $r3 = "\n";

        goto label6;

     label5:
        $r3 = staticinvoke <org.apache.xmlbeans.SystemProperties: java.lang.String getProperty(java.lang.String)>("line.separator");

     label6:
        <org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: java.lang.String LINE_SEPARATOR> = $r3;

        return;
    }
}
