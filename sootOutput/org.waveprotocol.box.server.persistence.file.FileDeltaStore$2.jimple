class org.waveprotocol.box.server.persistence.file.FileDeltaStore$2 extends java.lang.Object implements java.io.FilenameFilter
{
    final org.waveprotocol.box.server.persistence.file.FileDeltaStore this$0;

    void <init>(org.waveprotocol.box.server.persistence.file.FileDeltaStore)
    {
        org.waveprotocol.box.server.persistence.file.FileDeltaStore$2 r0;
        org.waveprotocol.box.server.persistence.file.FileDeltaStore r1;

        r0 := @this: org.waveprotocol.box.server.persistence.file.FileDeltaStore$2;

        r1 := @parameter0: org.waveprotocol.box.server.persistence.file.FileDeltaStore;

        r0.<org.waveprotocol.box.server.persistence.file.FileDeltaStore$2: org.waveprotocol.box.server.persistence.file.FileDeltaStore this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean accept(java.io.File, java.lang.String)
    {
        java.lang.String r0;
        java.lang.IllegalArgumentException $r1;
        org.waveprotocol.box.server.persistence.file.FileDeltaStore$2 r2;
        java.io.File r3;

        r2 := @this: org.waveprotocol.box.server.persistence.file.FileDeltaStore$2;

        r3 := @parameter0: java.io.File;

        r0 := @parameter1: java.lang.String;

     label1:
        staticinvoke <org.waveprotocol.box.server.persistence.file.FileUtils: org.waveprotocol.wave.model.id.WaveId waveIdFromPathSegment(java.lang.String)>(r0);

     label2:
        return 1;

     label3:
        $r1 := @caughtexception;

        return 0;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }
}
