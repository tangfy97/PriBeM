final class org.apache.lucene.index.DocInverterPerField extends org.apache.lucene.index.DocFieldConsumerPerField
{
    final org.apache.lucene.index.FieldInfo fieldInfo;
    final org.apache.lucene.index.InvertedDocConsumerPerField consumer;
    final org.apache.lucene.index.InvertedDocEndConsumerPerField endConsumer;
    final org.apache.lucene.index.DocumentsWriterPerThread$DocState docState;
    final org.apache.lucene.index.FieldInvertState fieldState;

    public void <init>(org.apache.lucene.index.DocInverter, org.apache.lucene.index.FieldInfo)
    {
        org.apache.lucene.index.InvertedDocEndConsumer $r8;
        org.apache.lucene.index.DocInverter r2;
        org.apache.lucene.index.InvertedDocConsumer $r6;
        org.apache.lucene.index.InvertedDocEndConsumerPerField $r9;
        org.apache.lucene.index.DocInverterPerField r0;
        org.apache.lucene.index.FieldInvertState $r4;
        org.apache.lucene.index.DocumentsWriterPerThread$DocState $r3;
        org.apache.lucene.index.FieldInfo r1;
        java.lang.String $r5;
        org.apache.lucene.index.InvertedDocConsumerPerField $r7;

        r0 := @this: org.apache.lucene.index.DocInverterPerField;

        r2 := @parameter0: org.apache.lucene.index.DocInverter;

        r1 := @parameter1: org.apache.lucene.index.FieldInfo;

        specialinvoke r0.<org.apache.lucene.index.DocFieldConsumerPerField: void <init>()>();

        r0.<org.apache.lucene.index.DocInverterPerField: org.apache.lucene.index.FieldInfo fieldInfo> = r1;

        $r3 = r2.<org.apache.lucene.index.DocInverter: org.apache.lucene.index.DocumentsWriterPerThread$DocState docState>;

        r0.<org.apache.lucene.index.DocInverterPerField: org.apache.lucene.index.DocumentsWriterPerThread$DocState docState> = $r3;

        $r4 = new org.apache.lucene.index.FieldInvertState;

        $r5 = r1.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        specialinvoke $r4.<org.apache.lucene.index.FieldInvertState: void <init>(java.lang.String)>($r5);

        r0.<org.apache.lucene.index.DocInverterPerField: org.apache.lucene.index.FieldInvertState fieldState> = $r4;

        $r6 = r2.<org.apache.lucene.index.DocInverter: org.apache.lucene.index.InvertedDocConsumer consumer>;

        $r7 = virtualinvoke $r6.<org.apache.lucene.index.InvertedDocConsumer: org.apache.lucene.index.InvertedDocConsumerPerField addField(org.apache.lucene.index.DocInverterPerField,org.apache.lucene.index.FieldInfo)>(r0, r1);

        r0.<org.apache.lucene.index.DocInverterPerField: org.apache.lucene.index.InvertedDocConsumerPerField consumer> = $r7;

        $r8 = r2.<org.apache.lucene.index.DocInverter: org.apache.lucene.index.InvertedDocEndConsumer endConsumer>;

        $r9 = virtualinvoke $r8.<org.apache.lucene.index.InvertedDocEndConsumer: org.apache.lucene.index.InvertedDocEndConsumerPerField addField(org.apache.lucene.index.DocInverterPerField,org.apache.lucene.index.FieldInfo)>(r0, r1);

        r0.<org.apache.lucene.index.DocInverterPerField: org.apache.lucene.index.InvertedDocEndConsumerPerField endConsumer> = $r9;

        return;
    }

    void abort()
    {
        java.lang.Throwable $r3;
        org.apache.lucene.index.InvertedDocEndConsumerPerField $r2, $r4;
        org.apache.lucene.index.InvertedDocConsumerPerField $r1;
        org.apache.lucene.index.DocInverterPerField r0;

        r0 := @this: org.apache.lucene.index.DocInverterPerField;

     label1:
        $r1 = r0.<org.apache.lucene.index.DocInverterPerField: org.apache.lucene.index.InvertedDocConsumerPerField consumer>;

        virtualinvoke $r1.<org.apache.lucene.index.InvertedDocConsumerPerField: void abort()>();

     label2:
        $r2 = r0.<org.apache.lucene.index.DocInverterPerField: org.apache.lucene.index.InvertedDocEndConsumerPerField endConsumer>;

        virtualinvoke $r2.<org.apache.lucene.index.InvertedDocEndConsumerPerField: void abort()>();

        goto label5;

     label3:
        $r3 := @caughtexception;

     label4:
        $r4 = r0.<org.apache.lucene.index.DocInverterPerField: org.apache.lucene.index.InvertedDocEndConsumerPerField endConsumer>;

        virtualinvoke $r4.<org.apache.lucene.index.InvertedDocEndConsumerPerField: void abort()>();

        throw $r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void processFields(org.apache.lucene.index.IndexableField[], int) throws java.io.IOException
    {
        org.apache.lucene.index.DocInverterPerField r0;
        byte $b23;
        java.lang.StringBuilder $r31, $r32, $r33, $r34, $r38, $r39, $r40, $r41, $r46, $r48, $r49, $r54, $r55, $r56, $r65, $r67, $r68, $r89, $r91, $r94, $r96, $r98;
        org.apache.lucene.util.AttributeSource $r82, $r86;
        org.apache.lucene.analysis.tokenattributes.OffsetAttribute $r84;
        org.apache.lucene.index.IndexableField[] r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17, $i18, $i19, $i20, $i21, $i22, i24, i25, $i26, i27, i28, $i29, $i31;
        org.apache.lucene.index.DocumentsWriterPerThread$DocState $r13, $r25, $r59, $r70, $r75, $r77;
        org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute $r88;
        org.apache.lucene.index.InvertedDocEndConsumerPerField $r5;
        org.apache.lucene.index.FieldInvertState $r1, $r10, $r11, $r12, $r19, $r20, $r21, $r23, $r24, $r27, $r28, $r43, $r58, $r80, $r81, $r85;
        org.apache.lucene.util.Attribute $r83, $r87;
        java.lang.Throwable $r72, $r74;
        java.lang.String $r15, $r35, $r42, $r47, $r50, $r57, $r61, $r66, $r69;
        org.apache.lucene.index.DocumentsWriterPerThread $r26, $r76;
        java.lang.UnsupportedOperationException $r90;
        org.apache.lucene.analysis.TokenStream $r79;
        org.apache.lucene.analysis.Analyzer $r16, $r62, $r71, $r78;
        org.apache.lucene.index.FieldInfo $r14, $r60;
        org.apache.lucene.index.IndexableField r6;
        java.io.Closeable[] $r17, $r73;
        boolean $z0, $z1, $z2, z3, z4, $z5, $z6, $z7, $z8, $z9;
        org.apache.lucene.index.FieldInfo$IndexOptions $r8, $r9;
        float $f0, $f1, $f2, $f3;
        org.apache.lucene.index.IndexableFieldType $r7;
        java.lang.IllegalArgumentException $r92, $r93, $r95, $r97, $r99;
        org.apache.lucene.index.InvertedDocConsumerPerField $r3, $r4, $r18, $r22;

        r0 := @this: org.apache.lucene.index.DocInverterPerField;

        r2 := @parameter0: org.apache.lucene.index.IndexableField[];

        i0 := @parameter1: int;

        $r1 = r0.<org.apache.lucene.index.DocInverterPerField: org.apache.lucene.index.FieldInvertState fieldState>;

        virtualinvoke $r1.<org.apache.lucene.index.FieldInvertState: void reset()>();

        $r3 = r0.<org.apache.lucene.index.DocInverterPerField: org.apache.lucene.index.InvertedDocConsumerPerField consumer>;

        $z0 = virtualinvoke $r3.<org.apache.lucene.index.InvertedDocConsumerPerField: boolean start(org.apache.lucene.index.IndexableField[],int)>(r2, i0);

        i24 = 0;

     label01:
        if i24 >= i0 goto label37;

        r6 = r2[i24];

        $r7 = interfaceinvoke r6.<org.apache.lucene.index.IndexableField: org.apache.lucene.index.IndexableFieldType fieldType()>();

        $z1 = interfaceinvoke $r7.<org.apache.lucene.index.IndexableFieldType: boolean indexed()>();

        if $z1 == 0 goto label36;

        if $z0 == 0 goto label36;

        $z2 = interfaceinvoke $r7.<org.apache.lucene.index.IndexableFieldType: boolean tokenized()>();

        if $z2 == 0 goto label02;

        $r70 = r0.<org.apache.lucene.index.DocInverterPerField: org.apache.lucene.index.DocumentsWriterPerThread$DocState docState>;

        $r71 = $r70.<org.apache.lucene.index.DocumentsWriterPerThread$DocState: org.apache.lucene.analysis.Analyzer analyzer>;

        if $r71 == null goto label02;

        $z6 = 1;

        goto label03;

     label02:
        $z6 = 0;

     label03:
        z3 = $z6;

        $z7 = interfaceinvoke $r7.<org.apache.lucene.index.IndexableFieldType: boolean omitNorms()>();

        if $z7 == 0 goto label04;

        $f3 = interfaceinvoke r6.<org.apache.lucene.index.IndexableField: float boost()>();

        $b23 = $f3 cmpl 1.0F;

        if $b23 == 0 goto label04;

        $r90 = new java.lang.UnsupportedOperationException;

        $r89 = new java.lang.StringBuilder;

        specialinvoke $r89.<java.lang.StringBuilder: void <init>()>();

        $r65 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("You cannot set an index-time boost: norms are omitted for field \'");

        $r66 = interfaceinvoke r6.<org.apache.lucene.index.IndexableField: java.lang.String name()>();

        $r67 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r66);

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r90.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r69);

        throw $r90;

     label04:
        $r8 = interfaceinvoke $r7.<org.apache.lucene.index.IndexableFieldType: org.apache.lucene.index.FieldInfo$IndexOptions indexOptions()>();

        $r9 = <org.apache.lucene.index.FieldInfo$IndexOptions: org.apache.lucene.index.FieldInfo$IndexOptions DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS>;

        if $r8 != $r9 goto label05;

        $z8 = 1;

        goto label06;

     label05:
        $z8 = 0;

     label06:
        z4 = $z8;

        i25 = 0;

        if i24 <= 0 goto label09;

        $r58 = r0.<org.apache.lucene.index.DocInverterPerField: org.apache.lucene.index.FieldInvertState fieldState>;

        $i21 = $r58.<org.apache.lucene.index.FieldInvertState: int position>;

        if z3 == 0 goto label07;

        $r59 = r0.<org.apache.lucene.index.DocInverterPerField: org.apache.lucene.index.DocumentsWriterPerThread$DocState docState>;

        $r62 = $r59.<org.apache.lucene.index.DocumentsWriterPerThread$DocState: org.apache.lucene.analysis.Analyzer analyzer>;

        $r60 = r0.<org.apache.lucene.index.DocInverterPerField: org.apache.lucene.index.FieldInfo fieldInfo>;

        $r61 = $r60.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $i26 = virtualinvoke $r62.<org.apache.lucene.analysis.Analyzer: int getPositionIncrementGap(java.lang.String)>($r61);

        goto label08;

     label07:
        $i26 = 0;

     label08:
        $i22 = $i21 + $i26;

        $r58.<org.apache.lucene.index.FieldInvertState: int position> = $i22;

     label09:
        $r77 = r0.<org.apache.lucene.index.DocInverterPerField: org.apache.lucene.index.DocumentsWriterPerThread$DocState docState>;

        $r78 = $r77.<org.apache.lucene.index.DocumentsWriterPerThread$DocState: org.apache.lucene.analysis.Analyzer analyzer>;

        $r79 = interfaceinvoke r6.<org.apache.lucene.index.IndexableField: org.apache.lucene.analysis.TokenStream tokenStream(org.apache.lucene.analysis.Analyzer)>($r78);

        virtualinvoke $r79.<org.apache.lucene.analysis.TokenStream: void reset()>();

     label10:
        $z9 = virtualinvoke $r79.<org.apache.lucene.analysis.TokenStream: boolean incrementToken()>();

        $r80 = r0.<org.apache.lucene.index.DocInverterPerField: org.apache.lucene.index.FieldInvertState fieldState>;

        $r80.<org.apache.lucene.index.FieldInvertState: org.apache.lucene.util.AttributeSource attributeSource> = $r79;

        $r81 = r0.<org.apache.lucene.index.DocInverterPerField: org.apache.lucene.index.FieldInvertState fieldState>;

        $r82 = $r81.<org.apache.lucene.index.FieldInvertState: org.apache.lucene.util.AttributeSource attributeSource>;

        $r83 = virtualinvoke $r82.<org.apache.lucene.util.AttributeSource: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/OffsetAttribute;");

        $r84 = (org.apache.lucene.analysis.tokenattributes.OffsetAttribute) $r83;

        $r85 = r0.<org.apache.lucene.index.DocInverterPerField: org.apache.lucene.index.FieldInvertState fieldState>;

        $r86 = $r85.<org.apache.lucene.index.FieldInvertState: org.apache.lucene.util.AttributeSource attributeSource>;

        $r87 = virtualinvoke $r86.<org.apache.lucene.util.AttributeSource: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/PositionIncrementAttribute;");

        $r88 = (org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute) $r87;

        if $z9 == 0 goto label26;

        $r18 = r0.<org.apache.lucene.index.DocInverterPerField: org.apache.lucene.index.InvertedDocConsumerPerField consumer>;

        virtualinvoke $r18.<org.apache.lucene.index.InvertedDocConsumerPerField: void start(org.apache.lucene.index.IndexableField)>(r6);

     label11:
        $i6 = interfaceinvoke $r88.<org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute: int getPositionIncrement()>();

        if $i6 >= 0 goto label12;

        $r92 = new java.lang.IllegalArgumentException;

        $r91 = new java.lang.StringBuilder;

        specialinvoke $r91.<java.lang.StringBuilder: void <init>()>();

        $r54 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("position increment must be >=0 (got ");

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r92.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r57);

        throw $r92;

     label12:
        $r19 = r0.<org.apache.lucene.index.DocInverterPerField: org.apache.lucene.index.FieldInvertState fieldState>;

        $i7 = $r19.<org.apache.lucene.index.FieldInvertState: int position>;

        if $i7 != 0 goto label13;

        if $i6 != 0 goto label13;

        $r93 = new java.lang.IllegalArgumentException;

        specialinvoke $r93.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("first position increment must be > 0 (got 0)");

        throw $r93;

     label13:
        $r20 = r0.<org.apache.lucene.index.DocInverterPerField: org.apache.lucene.index.FieldInvertState fieldState>;

        $i8 = $r20.<org.apache.lucene.index.FieldInvertState: int position>;

        $i20 = $i8 + $i6;

        i27 = $i20;

        if $i20 <= 0 goto label14;

        $i31 = (int) -1;

        i27 = $i20 + $i31;

        goto label15;

     label14:
        if $i20 >= 0 goto label15;

        $r95 = new java.lang.IllegalArgumentException;

        $r94 = new java.lang.StringBuilder;

        specialinvoke $r94.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("position overflow for field \'");

        $r47 = interfaceinvoke r6.<org.apache.lucene.index.IndexableField: java.lang.String name()>();

        $r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r95.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r50);

        throw $r95;

     label15:
        $r21 = r0.<org.apache.lucene.index.DocInverterPerField: org.apache.lucene.index.FieldInvertState fieldState>;

        $r21.<org.apache.lucene.index.FieldInvertState: int position> = i27;

        if $i6 != 0 goto label16;

        $r43 = r0.<org.apache.lucene.index.DocInverterPerField: org.apache.lucene.index.FieldInvertState fieldState>;

        $i18 = $r43.<org.apache.lucene.index.FieldInvertState: int numOverlap>;

        $i19 = $i18 + 1;

        $r43.<org.apache.lucene.index.FieldInvertState: int numOverlap> = $i19;

     label16:
        if z4 == 0 goto label20;

        $r27 = r0.<org.apache.lucene.index.DocInverterPerField: org.apache.lucene.index.FieldInvertState fieldState>;

        $i13 = $r27.<org.apache.lucene.index.FieldInvertState: int offset>;

        $i14 = interfaceinvoke $r84.<org.apache.lucene.analysis.tokenattributes.OffsetAttribute: int startOffset()>();

        i28 = $i13 + $i14;

        $r28 = r0.<org.apache.lucene.index.DocInverterPerField: org.apache.lucene.index.FieldInvertState fieldState>;

        $i15 = $r28.<org.apache.lucene.index.FieldInvertState: int offset>;

        $i16 = interfaceinvoke $r84.<org.apache.lucene.analysis.tokenattributes.OffsetAttribute: int endOffset()>();

        i17 = $i15 + $i16;

        if i28 < 0 goto label17;

        if i17 >= i28 goto label18;

     label17:
        $r97 = new java.lang.IllegalArgumentException;

        $r96 = new java.lang.StringBuilder;

        specialinvoke $r96.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("startOffset must be non-negative, and endOffset must be >= startOffset, startOffset=");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i28);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",endOffset=");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i17);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r97.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r35);

        throw $r97;

     label18:
        if i28 >= i25 goto label19;

        $r99 = new java.lang.IllegalArgumentException;

        $r98 = new java.lang.StringBuilder;

        specialinvoke $r98.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("offsets must not go backwards startOffset=");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i28);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is < lastStartOffset=");

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i25);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r99.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r42);

        throw $r99;

     label19:
        i25 = i28;

     label20:
        $r22 = r0.<org.apache.lucene.index.DocInverterPerField: org.apache.lucene.index.InvertedDocConsumerPerField consumer>;

        virtualinvoke $r22.<org.apache.lucene.index.InvertedDocConsumerPerField: void add()>();

     label21:
        if 1 != 0 goto label25;

        $r25 = r0.<org.apache.lucene.index.DocInverterPerField: org.apache.lucene.index.DocumentsWriterPerThread$DocState docState>;

        $r26 = $r25.<org.apache.lucene.index.DocumentsWriterPerThread$DocState: org.apache.lucene.index.DocumentsWriterPerThread docWriter>;

        virtualinvoke $r26.<org.apache.lucene.index.DocumentsWriterPerThread: void setAborting()>();

        goto label25;

     label22:
        $r74 := @caughtexception;

     label23:
        if 0 != 0 goto label24;

        $r75 = r0.<org.apache.lucene.index.DocInverterPerField: org.apache.lucene.index.DocumentsWriterPerThread$DocState docState>;

        $r76 = $r75.<org.apache.lucene.index.DocumentsWriterPerThread$DocState: org.apache.lucene.index.DocumentsWriterPerThread docWriter>;

        virtualinvoke $r76.<org.apache.lucene.index.DocumentsWriterPerThread: void setAborting()>();

     label24:
        throw $r74;

     label25:
        $r23 = r0.<org.apache.lucene.index.DocInverterPerField: org.apache.lucene.index.FieldInvertState fieldState>;

        $i9 = $r23.<org.apache.lucene.index.FieldInvertState: int length>;

        $i10 = $i9 + 1;

        $r23.<org.apache.lucene.index.FieldInvertState: int length> = $i10;

        $r24 = r0.<org.apache.lucene.index.DocInverterPerField: org.apache.lucene.index.FieldInvertState fieldState>;

        $i11 = $r24.<org.apache.lucene.index.FieldInvertState: int position>;

        $i12 = $i11 + 1;

        $r24.<org.apache.lucene.index.FieldInvertState: int position> = $i12;

        $z5 = virtualinvoke $r79.<org.apache.lucene.analysis.TokenStream: boolean incrementToken()>();

        if $z5 != 0 goto label11;

     label26:
        virtualinvoke $r79.<org.apache.lucene.analysis.TokenStream: void end()>();

        $r10 = r0.<org.apache.lucene.index.DocInverterPerField: org.apache.lucene.index.FieldInvertState fieldState>;

        $i1 = $r10.<org.apache.lucene.index.FieldInvertState: int offset>;

        $i2 = interfaceinvoke $r84.<org.apache.lucene.analysis.tokenattributes.OffsetAttribute: int endOffset()>();

        $i3 = $i1 + $i2;

        $r10.<org.apache.lucene.index.FieldInvertState: int offset> = $i3;

     label27:
        if 1 != 0 goto label28;

        $r17 = newarray (java.io.Closeable)[1];

        $r17[0] = $r79;

        staticinvoke <org.apache.lucene.util.IOUtils: void closeWhileHandlingException(java.io.Closeable[])>($r17);

        goto label33;

     label28:
        virtualinvoke $r79.<org.apache.lucene.analysis.TokenStream: void close()>();

        goto label33;

     label29:
        $r72 := @caughtexception;

     label30:
        if 0 != 0 goto label31;

        $r73 = newarray (java.io.Closeable)[1];

        $r73[0] = $r79;

        staticinvoke <org.apache.lucene.util.IOUtils: void closeWhileHandlingException(java.io.Closeable[])>($r73);

        goto label32;

     label31:
        virtualinvoke $r79.<org.apache.lucene.analysis.TokenStream: void close()>();

     label32:
        throw $r72;

     label33:
        $r11 = r0.<org.apache.lucene.index.DocInverterPerField: org.apache.lucene.index.FieldInvertState fieldState>;

        $i4 = $r11.<org.apache.lucene.index.FieldInvertState: int offset>;

        if z3 == 0 goto label34;

        $r13 = r0.<org.apache.lucene.index.DocInverterPerField: org.apache.lucene.index.DocumentsWriterPerThread$DocState docState>;

        $r16 = $r13.<org.apache.lucene.index.DocumentsWriterPerThread$DocState: org.apache.lucene.analysis.Analyzer analyzer>;

        $r14 = r0.<org.apache.lucene.index.DocInverterPerField: org.apache.lucene.index.FieldInfo fieldInfo>;

        $r15 = $r14.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $i29 = virtualinvoke $r16.<org.apache.lucene.analysis.Analyzer: int getOffsetGap(java.lang.String)>($r15);

        goto label35;

     label34:
        $i29 = 0;

     label35:
        $i5 = $i4 + $i29;

        $r11.<org.apache.lucene.index.FieldInvertState: int offset> = $i5;

        $r12 = r0.<org.apache.lucene.index.DocInverterPerField: org.apache.lucene.index.FieldInvertState fieldState>;

        $f0 = $r12.<org.apache.lucene.index.FieldInvertState: float boost>;

        $f1 = interfaceinvoke r6.<org.apache.lucene.index.IndexableField: float boost()>();

        $f2 = $f0 * $f1;

        $r12.<org.apache.lucene.index.FieldInvertState: float boost> = $f2;

     label36:
        r2[i24] = null;

        i24 = i24 + 1;

        goto label01;

     label37:
        $r4 = r0.<org.apache.lucene.index.DocInverterPerField: org.apache.lucene.index.InvertedDocConsumerPerField consumer>;

        virtualinvoke $r4.<org.apache.lucene.index.InvertedDocConsumerPerField: void finish()>();

        $r5 = r0.<org.apache.lucene.index.DocInverterPerField: org.apache.lucene.index.InvertedDocEndConsumerPerField endConsumer>;

        virtualinvoke $r5.<org.apache.lucene.index.InvertedDocEndConsumerPerField: void finish()>();

        return;

        catch java.lang.Throwable from label20 to label21 with label22;
        catch java.lang.Throwable from label22 to label23 with label22;
        catch java.lang.Throwable from label10 to label27 with label29;
        catch java.lang.Throwable from label29 to label30 with label29;
    }

    org.apache.lucene.index.FieldInfo getFieldInfo()
    {
        org.apache.lucene.index.FieldInfo $r1;
        org.apache.lucene.index.DocInverterPerField r0;

        r0 := @this: org.apache.lucene.index.DocInverterPerField;

        $r1 = r0.<org.apache.lucene.index.DocInverterPerField: org.apache.lucene.index.FieldInfo fieldInfo>;

        return $r1;
    }
}
