public class ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$GridInventory extends java.lang.Object implements java.io.Serializable
{
    int[] location;
    int[] invIndex;
    final ucar.nc2.ft.fmrc.FmrcInvLite$Gridset this$1;

    void <init>(ucar.nc2.ft.fmrc.FmrcInvLite$Gridset, ucar.nc2.ft.fmrc.FmrcInv$UberGrid)
    {
        java.lang.StringBuilder $r37, $r40, $r41, $r43, $r44, $r46;
        ucar.nc2.ft.fmrc.TimeCoord $r21, $r24, $r26, $r28, $r33;
        double[] $r11, $r25, $r27, $r29, $r34;
        ucar.nc2.ft.fmrc.GridDatasetInv$Grid r19;
        java.lang.String $r31, $r39, $r42, $r45, $r47;
        ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$GridInventory r0;
        ucar.nc2.ft.fmrc.FmrInv$GridVariable r48;
        java.util.Date $r12, $r13, $r15, $r22, $r23;
        ucar.nc2.ft.fmrc.FmrcInvLite$Gridset r1;
        int[] $r3, $r5, $r30, $r32;
        boolean $z0, $z1;
        java.util.List $r7, $r16;
        ucar.nc2.ft.fmrc.FmrcInv$UberGrid r6;
        ucar.nc2.units.DateFormatter $r35;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17, i18, i19, i20;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;
        org.slf4j.Logger $r36;
        java.util.Iterator $r17;
        ucar.nc2.ft.fmrc.FmrcInvLite $r2, $r4, $r8, $r9, $r10, $r20, $r38;
        java.lang.Object $r14, $r18;

        r0 := @this: ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$GridInventory;

        r1 := @parameter0: ucar.nc2.ft.fmrc.FmrcInvLite$Gridset;

        r6 := @parameter1: ucar.nc2.ft.fmrc.FmrcInv$UberGrid;

        r0.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$GridInventory: ucar.nc2.ft.fmrc.FmrcInvLite$Gridset this$1> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: ucar.nc2.ft.fmrc.FmrcInvLite this$0>;

        $i1 = $r2.<ucar.nc2.ft.fmrc.FmrcInvLite: int nruns>;

        $i0 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: int noffsets>;

        $i2 = $i1 * $i0;

        $r3 = newarray (int)[$i2];

        r0.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$GridInventory: int[] location> = $r3;

        $r4 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: ucar.nc2.ft.fmrc.FmrcInvLite this$0>;

        $i4 = $r4.<ucar.nc2.ft.fmrc.FmrcInvLite: int nruns>;

        $i3 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: int noffsets>;

        $i5 = $i4 * $i3;

        $r5 = newarray (int)[$i5];

        r0.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$GridInventory: int[] invIndex> = $r5;

        i17 = 0;

        $r7 = virtualinvoke r6.<ucar.nc2.ft.fmrc.FmrcInv$UberGrid: java.util.List getRuns()>();

        i18 = 0;

     label01:
        $r8 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: ucar.nc2.ft.fmrc.FmrcInvLite this$0>;

        $i6 = $r8.<ucar.nc2.ft.fmrc.FmrcInvLite: int nruns>;

        if i18 >= $i6 goto label11;

        $r9 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: ucar.nc2.ft.fmrc.FmrcInvLite this$0>;

        $r12 = $r9.<ucar.nc2.ft.fmrc.FmrcInvLite: java.util.Date base>;

        $r10 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: ucar.nc2.ft.fmrc.FmrcInvLite this$0>;

        $r11 = $r10.<ucar.nc2.ft.fmrc.FmrcInvLite: double[] runOffset>;

        $d0 = $r11[i18];

        $r13 = staticinvoke <ucar.nc2.ft.fmrc.FmrcInv: java.util.Date makeOffsetDate(java.util.Date,double)>($r12, $d0);

        $i7 = interfaceinvoke $r7.<java.util.List: int size()>();

        if i17 < $i7 goto label02;

        $r35 = new ucar.nc2.units.DateFormatter;

        specialinvoke $r35.<ucar.nc2.units.DateFormatter: void <init>()>();

        $r36 = staticinvoke <ucar.nc2.ft.fmrc.FmrcInvLite: org.slf4j.Logger access$100()>();

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r38 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: ucar.nc2.ft.fmrc.FmrcInvLite this$0>;

        $r39 = $r38.<ucar.nc2.ft.fmrc.FmrcInvLite: java.lang.String collectionName>;

        $r40 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": cant find ");

        $r42 = virtualinvoke r6.<ucar.nc2.ft.fmrc.FmrcInv$UberGrid: java.lang.String getName()>();

        $r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        $r45 = virtualinvoke $r35.<ucar.nc2.units.DateFormatter: java.lang.String toDateTimeStringISO(java.util.Date)>($r13);

        $r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r36.<org.slf4j.Logger: void debug(java.lang.String)>($r47);

        goto label11;

     label02:
        $r14 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i17);

        r48 = (ucar.nc2.ft.fmrc.FmrInv$GridVariable) $r14;

        $r15 = virtualinvoke r48.<ucar.nc2.ft.fmrc.FmrInv$GridVariable: java.util.Date getRunDate()>();

        $z0 = virtualinvoke $r15.<java.util.Date: boolean equals(java.lang.Object)>($r13);

        if $z0 != 0 goto label03;

        goto label10;

     label03:
        i17 = i17 + 1;

        $r16 = virtualinvoke r48.<ucar.nc2.ft.fmrc.FmrInv$GridVariable: java.util.List getInventory()>();

        $r17 = interfaceinvoke $r16.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z1 = interfaceinvoke $r17.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label10;

        $r18 = interfaceinvoke $r17.<java.util.Iterator: java.lang.Object next()>();

        r19 = (ucar.nc2.ft.fmrc.GridDatasetInv$Grid) $r18;

        $r20 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: ucar.nc2.ft.fmrc.FmrcInvLite this$0>;

        $r22 = $r20.<ucar.nc2.ft.fmrc.FmrcInvLite: java.util.Date base>;

        $r21 = r19.<ucar.nc2.ft.fmrc.GridDatasetInv$Grid: ucar.nc2.ft.fmrc.TimeCoord tc>;

        $r23 = virtualinvoke $r21.<ucar.nc2.ft.fmrc.TimeCoord: java.util.Date getRunDate()>();

        $d1 = staticinvoke <ucar.nc2.ft.fmrc.FmrcInv: double getOffsetInHours(java.util.Date,java.util.Date)>($r22, $r23);

        i19 = 0;

     label05:
        $r24 = r19.<ucar.nc2.ft.fmrc.GridDatasetInv$Grid: ucar.nc2.ft.fmrc.TimeCoord tc>;

        $i8 = virtualinvoke $r24.<ucar.nc2.ft.fmrc.TimeCoord: int getNCoords()>();

        if i19 >= $i8 goto label09;

        $r25 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: double[] timeBounds>;

        if $r25 != null goto label06;

        $r33 = r19.<ucar.nc2.ft.fmrc.GridDatasetInv$Grid: ucar.nc2.ft.fmrc.TimeCoord tc>;

        $r34 = virtualinvoke $r33.<ucar.nc2.ft.fmrc.TimeCoord: double[] getOffsetTimes()>();

        $d6 = $r34[i19];

        $d7 = $d1 + $d6;

        i20 = specialinvoke r0.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$GridInventory: int findIndex(int,double)>(i18, $d7);

        goto label07;

     label06:
        $r26 = r19.<ucar.nc2.ft.fmrc.GridDatasetInv$Grid: ucar.nc2.ft.fmrc.TimeCoord tc>;

        $r27 = virtualinvoke $r26.<ucar.nc2.ft.fmrc.TimeCoord: double[] getBound1()>();

        $d2 = $r27[i19];

        $d3 = $d1 + $d2;

        $r28 = r19.<ucar.nc2.ft.fmrc.GridDatasetInv$Grid: ucar.nc2.ft.fmrc.TimeCoord tc>;

        $r29 = virtualinvoke $r28.<ucar.nc2.ft.fmrc.TimeCoord: double[] getBound2()>();

        $d4 = $r29[i19];

        $d5 = $d1 + $d4;

        i20 = specialinvoke r0.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$GridInventory: int findBounds(int,double,double)>(i18, $d3, $d5);

     label07:
        if i20 < 0 goto label08;

        $r30 = r0.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$GridInventory: int[] location>;

        $i9 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: int noffsets>;

        $i10 = i18 * $i9;

        $i11 = $i10 + i20;

        $r31 = virtualinvoke r19.<ucar.nc2.ft.fmrc.GridDatasetInv$Grid: java.lang.String getLocation()>();

        $i12 = specialinvoke r0.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$GridInventory: int findLocation(java.lang.String)>($r31);

        $i13 = $i12 + 1;

        $r30[$i11] = $i13;

        $r32 = r0.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$GridInventory: int[] invIndex>;

        $i14 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: int noffsets>;

        $i15 = i18 * $i14;

        $i16 = $i15 + i20;

        $r32[$i16] = i19;

     label08:
        i19 = i19 + 1;

        goto label05;

     label09:
        goto label04;

     label10:
        i18 = i18 + 1;

        goto label01;

     label11:
        return;
    }

    private boolean equalData(java.lang.Object)
    {
        int[] $r2, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11;
        ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$GridInventory r1, r3;
        java.lang.Object r0;

        r3 := @this: ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$GridInventory;

        r0 := @parameter0: java.lang.Object;

        r1 = (ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$GridInventory) r0;

        $r2 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$GridInventory: int[] location>;

        $i1 = lengthof $r2;

        $r4 = r3.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$GridInventory: int[] location>;

        $i0 = lengthof $r4;

        if $i1 == $i0 goto label1;

        return 0;

     label1:
        $r5 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$GridInventory: int[] invIndex>;

        $i3 = lengthof $r5;

        $r6 = r3.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$GridInventory: int[] invIndex>;

        $i2 = lengthof $r6;

        if $i3 == $i2 goto label2;

        return 0;

     label2:
        i10 = 0;

     label3:
        $r7 = r3.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$GridInventory: int[] location>;

        $i4 = lengthof $r7;

        if i10 >= $i4 goto label5;

        $r11 = r3.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$GridInventory: int[] location>;

        $i9 = $r11[i10];

        $r12 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$GridInventory: int[] location>;

        $i8 = $r12[i10];

        if $i9 == $i8 goto label4;

        return 0;

     label4:
        i10 = i10 + 1;

        goto label3;

     label5:
        i11 = 0;

     label6:
        $r8 = r3.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$GridInventory: int[] invIndex>;

        $i5 = lengthof $r8;

        if i11 >= $i5 goto label8;

        $r9 = r3.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$GridInventory: int[] invIndex>;

        $i7 = $r9[i11];

        $r10 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$GridInventory: int[] invIndex>;

        $i6 = $r10[i11];

        if $i7 == $i6 goto label7;

        return 0;

     label7:
        i11 = i11 + 1;

        goto label6;

     label8:
        return 1;
    }

    private int findIndex(int, double)
    {
        ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$GridInventory r0;
        double[] $r4;
        ucar.nc2.ft.fmrc.FmrcInvLite$Gridset $r1, $r2, $r3;
        int $i0, i1, $i2, $i3, $i4, i5, $i7;
        double d0, $d1;
        boolean $z0;

        r0 := @this: ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$GridInventory;

        i1 := @parameter0: int;

        d0 := @parameter1: double;

        i5 = 0;

     label1:
        $r1 = r0.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$GridInventory: ucar.nc2.ft.fmrc.FmrcInvLite$Gridset this$1>;

        $i0 = $r1.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: int noffsets>;

        if i5 >= $i0 goto label3;

        $r2 = r0.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$GridInventory: ucar.nc2.ft.fmrc.FmrcInvLite$Gridset this$1>;

        $r4 = $r2.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: double[] timeOffset>;

        $r3 = r0.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$GridInventory: ucar.nc2.ft.fmrc.FmrcInvLite$Gridset this$1>;

        $i2 = $r3.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: int noffsets>;

        $i3 = i1 * $i2;

        $i4 = $i3 + i5;

        $d1 = $r4[$i4];

        $z0 = staticinvoke <ucar.nc2.util.Misc: boolean closeEnough(double,double)>($d1, d0);

        if $z0 == 0 goto label2;

        return i5;

     label2:
        i5 = i5 + 1;

        goto label1;

     label3:
        $i7 = (int) -1;

        return $i7;
    }

    private int findBounds(int, double, double)
    {
        double[] $r4, $r7;
        ucar.nc2.ft.fmrc.FmrcInvLite$Gridset $r1, $r2, $r3, $r5, $r6;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, $i13;
        double d0, $d1, d2, $d3;
        boolean $z0, $z1;
        ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$GridInventory r0;

        r0 := @this: ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$GridInventory;

        i1 := @parameter0: int;

        d0 := @parameter1: double;

        d2 := @parameter2: double;

        i11 = 0;

     label1:
        $r1 = r0.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$GridInventory: ucar.nc2.ft.fmrc.FmrcInvLite$Gridset this$1>;

        $i0 = $r1.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: int noffsets>;

        if i11 >= $i0 goto label3;

        $r2 = r0.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$GridInventory: ucar.nc2.ft.fmrc.FmrcInvLite$Gridset this$1>;

        $r4 = $r2.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: double[] timeBounds>;

        $r3 = r0.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$GridInventory: ucar.nc2.ft.fmrc.FmrcInvLite$Gridset this$1>;

        $i2 = $r3.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: int noffsets>;

        $i3 = i1 * $i2;

        $i4 = $i3 + i11;

        $i5 = 2 * $i4;

        $d1 = $r4[$i5];

        $z0 = staticinvoke <ucar.nc2.util.Misc: boolean closeEnough(double,double)>($d1, d0);

        if $z0 == 0 goto label2;

        $r5 = r0.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$GridInventory: ucar.nc2.ft.fmrc.FmrcInvLite$Gridset this$1>;

        $r7 = $r5.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: double[] timeBounds>;

        $r6 = r0.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$GridInventory: ucar.nc2.ft.fmrc.FmrcInvLite$Gridset this$1>;

        $i6 = $r6.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: int noffsets>;

        $i7 = i1 * $i6;

        $i8 = $i7 + i11;

        $i9 = 2 * $i8;

        $i10 = $i9 + 1;

        $d3 = $r7[$i10];

        $z1 = staticinvoke <ucar.nc2.util.Misc: boolean closeEnough(double,double)>($d3, d2);

        if $z1 == 0 goto label2;

        return i11;

     label2:
        i11 = i11 + 1;

        goto label1;

     label3:
        $i13 = (int) -1;

        return $i13;
    }

    private int findLocation(java.lang.String)
    {
        ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$GridInventory r0;
        java.lang.Integer $r6;
        ucar.nc2.ft.fmrc.FmrcInvLite$Gridset $r1;
        ucar.nc2.ft.fmrc.FmrcInvLite $r2;
        java.util.Map $r4;
        int $i0;
        java.lang.Object $r5;
        java.lang.String r3;

        r0 := @this: ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$GridInventory;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$GridInventory: ucar.nc2.ft.fmrc.FmrcInvLite$Gridset this$1>;

        $r2 = $r1.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: ucar.nc2.ft.fmrc.FmrcInvLite this$0>;

        $r4 = $r2.<ucar.nc2.ft.fmrc.FmrcInvLite: java.util.Map locationMap>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        $r6 = (java.lang.Integer) $r5;

        $i0 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    int getLocation(int, int)
    {
        ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$GridInventory r0;
        ucar.nc2.ft.fmrc.FmrcInvLite$Gridset $r1;
        int[] $r2;
        int i0, $i1, i2, $i3, $i4, $i5;

        r0 := @this: ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$GridInventory;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        $r2 = r0.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$GridInventory: int[] location>;

        $r1 = r0.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$GridInventory: ucar.nc2.ft.fmrc.FmrcInvLite$Gridset this$1>;

        $i1 = $r1.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: int noffsets>;

        $i3 = i0 * $i1;

        $i4 = $i3 + i2;

        $i5 = $r2[$i4];

        return $i5;
    }

    int getInvIndex(int, int)
    {
        ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$GridInventory r0;
        ucar.nc2.ft.fmrc.FmrcInvLite$Gridset $r1;
        int[] $r2;
        int i0, $i1, i2, $i3, $i4, $i5;

        r0 := @this: ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$GridInventory;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        $r2 = r0.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$GridInventory: int[] invIndex>;

        $r1 = r0.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$GridInventory: ucar.nc2.ft.fmrc.FmrcInvLite$Gridset this$1>;

        $i1 = $r1.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: int noffsets>;

        $i3 = i0 * $i1;

        $i4 = $i3 + i2;

        $i5 = $r2[$i4];

        return $i5;
    }

    static boolean access$200(ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$GridInventory, java.lang.Object)
    {
        ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$GridInventory r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @parameter0: ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$GridInventory;

        r1 := @parameter1: java.lang.Object;

        $z0 = specialinvoke r0.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$GridInventory: boolean equalData(java.lang.Object)>(r1);

        return $z0;
    }
}
