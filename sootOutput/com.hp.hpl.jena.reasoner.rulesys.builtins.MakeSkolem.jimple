public class com.hp.hpl.jena.reasoner.rulesys.builtins.MakeSkolem extends com.hp.hpl.jena.reasoner.rulesys.builtins.BaseBuiltin
{

    public void <init>()
    {
        com.hp.hpl.jena.reasoner.rulesys.builtins.MakeSkolem r0;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.builtins.MakeSkolem;

        specialinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.builtins.BaseBuiltin: void <init>()>();

        return;
    }

    public java.lang.String getName()
    {
        com.hp.hpl.jena.reasoner.rulesys.builtins.MakeSkolem r0;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.builtins.MakeSkolem;

        return "makeSkolem";
    }

    public boolean bodyCall(com.hp.hpl.jena.graph.Node[], int, com.hp.hpl.jena.reasoner.rulesys.RuleContext)
    {
        byte[] $r3, $r4;
        com.hp.hpl.jena.graph.Node $r7, $r11, $r13;
        com.hp.hpl.jena.rdf.model.AnonId $r5;
        boolean $z0, $z1, $z2, $z3;
        com.hp.hpl.jena.graph.Node[] r10;
        java.security.NoSuchAlgorithmException $r30;
        java.lang.StringBuilder $r0, $r18, $r19, $r21, $r23, $r24, $r26;
        com.hp.hpl.jena.reasoner.rulesys.RuleContext r8;
        com.hp.hpl.jena.shared.JenaException $r31;
        java.security.MessageDigest $r1;
        com.hp.hpl.jena.reasoner.rulesys.BindingEnvironment $r9;
        int i0, i1;
        java.lang.String $r2, $r6, $r14, $r15, $r16, $r17, $r20, $r22, $r25, $r27, $r28, $r29;
        com.hp.hpl.jena.reasoner.rulesys.builtins.MakeSkolem r12;

        r12 := @this: com.hp.hpl.jena.reasoner.rulesys.builtins.MakeSkolem;

        r10 := @parameter0: com.hp.hpl.jena.graph.Node[];

        i0 := @parameter1: int;

        r8 := @parameter2: com.hp.hpl.jena.reasoner.rulesys.RuleContext;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        i1 = 1;

     label1:
        if i1 >= i0 goto label7;

        $r13 = virtualinvoke r12.<com.hp.hpl.jena.reasoner.rulesys.builtins.MakeSkolem: com.hp.hpl.jena.graph.Node getArg(int,com.hp.hpl.jena.graph.Node[],com.hp.hpl.jena.reasoner.rulesys.RuleContext)>(i1, r10, r8);

        $z1 = virtualinvoke $r13.<com.hp.hpl.jena.graph.Node: boolean isBlank()>();

        if $z1 == 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("B");

        $r29 = virtualinvoke $r13.<com.hp.hpl.jena.graph.Node: java.lang.String getBlankNodeLabel()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        goto label6;

     label2:
        $z2 = virtualinvoke $r13.<com.hp.hpl.jena.graph.Node: boolean isURI()>();

        if $z2 == 0 goto label3;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("U");

        $r28 = virtualinvoke $r13.<com.hp.hpl.jena.graph.Node: java.lang.String getURI()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        goto label6;

     label3:
        $z3 = virtualinvoke $r13.<com.hp.hpl.jena.graph.Node: boolean isLiteral()>();

        if $z3 == 0 goto label5;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("L");

        $r15 = virtualinvoke $r13.<com.hp.hpl.jena.graph.Node: java.lang.String getLiteralLexicalForm()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r16 = virtualinvoke $r13.<com.hp.hpl.jena.graph.Node: java.lang.String getLiteralLanguage()>();

        if $r16 == null goto label4;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@");

        $r25 = virtualinvoke $r13.<com.hp.hpl.jena.graph.Node: java.lang.String getLiteralLanguage()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

     label4:
        $r17 = virtualinvoke $r13.<com.hp.hpl.jena.graph.Node: java.lang.String getLiteralDatatypeURI()>();

        if $r17 == null goto label6;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("^^");

        $r20 = virtualinvoke $r13.<com.hp.hpl.jena.graph.Node: java.lang.String getLiteralDatatypeURI()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        goto label6;

     label5:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("O");

        $r14 = virtualinvoke $r13.<com.hp.hpl.jena.graph.Node: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

     label6:
        i1 = i1 + 1;

        goto label1;

     label7:
        $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5");

        virtualinvoke $r1.<java.security.MessageDigest: void reset()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = virtualinvoke $r2.<java.lang.String: byte[] getBytes()>();

        $r4 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r3);

        $r5 = new com.hp.hpl.jena.rdf.model.AnonId;

        $r6 = staticinvoke <org.apache.xerces.impl.dv.util.Base64: java.lang.String encode(byte[])>($r4);

        specialinvoke $r5.<com.hp.hpl.jena.rdf.model.AnonId: void <init>(java.lang.String)>($r6);

        $r7 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createAnon(com.hp.hpl.jena.rdf.model.AnonId)>($r5);

        $r9 = interfaceinvoke r8.<com.hp.hpl.jena.reasoner.rulesys.RuleContext: com.hp.hpl.jena.reasoner.rulesys.BindingEnvironment getEnv()>();

        $r11 = r10[0];

        $z0 = interfaceinvoke $r9.<com.hp.hpl.jena.reasoner.rulesys.BindingEnvironment: boolean bind(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>($r11, $r7);

     label8:
        return $z0;

     label9:
        $r30 := @caughtexception;

        $r31 = new com.hp.hpl.jena.shared.JenaException;

        specialinvoke $r31.<com.hp.hpl.jena.shared.JenaException: void <init>(java.lang.Throwable)>($r30);

        throw $r31;

        catch java.security.NoSuchAlgorithmException from label7 to label8 with label9;
    }
}
