public class org.apache.batik.ext.awt.image.TableTransfer extends java.lang.Object implements org.apache.batik.ext.awt.image.TransferFunction
{
    public byte[] lutData;
    public int[] tableValues;
    private int n;

    public void <init>(int[])
    {
        int $i0;
        int[] r1;
        org.apache.batik.ext.awt.image.TableTransfer r0;

        r0 := @this: org.apache.batik.ext.awt.image.TableTransfer;

        r1 := @parameter0: int[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.ext.awt.image.TableTransfer: int[] tableValues> = r1;

        $i0 = lengthof r1;

        r0.<org.apache.batik.ext.awt.image.TableTransfer: int n> = $i0;

        return;
    }

    private void buildLutData()
    {
        byte[] $r1, $r5;
        byte $b13;
        int[] $r2, $r3, $r4;
        float $f0, f1, $f2, $f3, $f4, $f5, $f6, $f7;
        int $i0, $i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14, i15, $i16;
        org.apache.batik.ext.awt.image.TableTransfer r0;
        double $d0, $d1;

        r0 := @this: org.apache.batik.ext.awt.image.TableTransfer;

        $r1 = newarray (byte)[256];

        r0.<org.apache.batik.ext.awt.image.TableTransfer: byte[] lutData> = $r1;

        i15 = 0;

        goto label4;

     label1:
        $i0 = r0.<org.apache.batik.ext.awt.image.TableTransfer: int n>;

        $i1 = $i0 - 1;

        $i2 = i15 * $i1;

        $f0 = (float) $i2;

        f1 = $f0 / 255.0F;

        $d0 = (double) f1;

        $d1 = staticinvoke <java.lang.Math: double floor(double)>($d0);

        i3 = (int) $d1;

        $i6 = i3 + 1;

        $i4 = r0.<org.apache.batik.ext.awt.image.TableTransfer: int n>;

        $i5 = $i4 - 1;

        if $i6 <= $i5 goto label2;

        $i14 = r0.<org.apache.batik.ext.awt.image.TableTransfer: int n>;

        $i16 = $i14 - 1;

        goto label3;

     label2:
        $i16 = i3 + 1;

     label3:
        $f2 = (float) i3;

        $f7 = f1 - $f2;

        $r5 = r0.<org.apache.batik.ext.awt.image.TableTransfer: byte[] lutData>;

        $r2 = r0.<org.apache.batik.ext.awt.image.TableTransfer: int[] tableValues>;

        $i7 = $r2[i3];

        $f5 = (float) $i7;

        $r3 = r0.<org.apache.batik.ext.awt.image.TableTransfer: int[] tableValues>;

        $i9 = $r3[$i16];

        $r4 = r0.<org.apache.batik.ext.awt.image.TableTransfer: int[] tableValues>;

        $i8 = $r4[i3];

        $i10 = $i9 - $i8;

        $f3 = (float) $i10;

        $f4 = $f7 * $f3;

        $f6 = $f5 + $f4;

        $i11 = (int) $f6;

        $i12 = $i11 & 255;

        $b13 = (byte) $i12;

        $r5[i15] = $b13;

        i15 = i15 + 1;

     label4:
        if i15 <= 255 goto label1;

        return;
    }

    public byte[] getLookupTable()
    {
        byte[] $r1;
        org.apache.batik.ext.awt.image.TableTransfer r0;

        r0 := @this: org.apache.batik.ext.awt.image.TableTransfer;

        specialinvoke r0.<org.apache.batik.ext.awt.image.TableTransfer: void buildLutData()>();

        $r1 = r0.<org.apache.batik.ext.awt.image.TableTransfer: byte[] lutData>;

        return $r1;
    }
}
