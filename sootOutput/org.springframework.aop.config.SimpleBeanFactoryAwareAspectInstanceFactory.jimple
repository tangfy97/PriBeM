public class org.springframework.aop.config.SimpleBeanFactoryAwareAspectInstanceFactory extends java.lang.Object implements org.springframework.aop.aspectj.AspectInstanceFactory, org.springframework.beans.factory.BeanFactoryAware
{
    private java.lang.String aspectBeanName;
    private org.springframework.beans.factory.BeanFactory beanFactory;

    public void <init>()
    {
        org.springframework.aop.config.SimpleBeanFactoryAwareAspectInstanceFactory r0;

        r0 := @this: org.springframework.aop.config.SimpleBeanFactoryAwareAspectInstanceFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void setAspectBeanName(java.lang.String)
    {
        org.springframework.aop.config.SimpleBeanFactoryAwareAspectInstanceFactory r0;
        java.lang.String r1;

        r0 := @this: org.springframework.aop.config.SimpleBeanFactoryAwareAspectInstanceFactory;

        r1 := @parameter0: java.lang.String;

        r0.<org.springframework.aop.config.SimpleBeanFactoryAwareAspectInstanceFactory: java.lang.String aspectBeanName> = r1;

        return;
    }

    public void setBeanFactory(org.springframework.beans.factory.BeanFactory)
    {
        org.springframework.beans.factory.BeanFactory r1;
        org.springframework.aop.config.SimpleBeanFactoryAwareAspectInstanceFactory r0;
        java.lang.String $r2;
        java.lang.IllegalArgumentException $r3;
        boolean $z0;

        r0 := @this: org.springframework.aop.config.SimpleBeanFactoryAwareAspectInstanceFactory;

        r1 := @parameter0: org.springframework.beans.factory.BeanFactory;

        r0.<org.springframework.aop.config.SimpleBeanFactoryAwareAspectInstanceFactory: org.springframework.beans.factory.BeanFactory beanFactory> = r1;

        $r2 = r0.<org.springframework.aop.config.SimpleBeanFactoryAwareAspectInstanceFactory: java.lang.String aspectBeanName>;

        $z0 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>($r2);

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("\'aspectBeanName\' is required");

        throw $r3;

     label1:
        return;
    }

    public java.lang.Object getAspectInstance()
    {
        org.springframework.beans.factory.BeanFactory $r2;
        java.lang.Object $r3;
        org.springframework.aop.config.SimpleBeanFactoryAwareAspectInstanceFactory r0;
        java.lang.String $r1;

        r0 := @this: org.springframework.aop.config.SimpleBeanFactoryAwareAspectInstanceFactory;

        $r2 = r0.<org.springframework.aop.config.SimpleBeanFactoryAwareAspectInstanceFactory: org.springframework.beans.factory.BeanFactory beanFactory>;

        $r1 = r0.<org.springframework.aop.config.SimpleBeanFactoryAwareAspectInstanceFactory: java.lang.String aspectBeanName>;

        $r3 = interfaceinvoke $r2.<org.springframework.beans.factory.BeanFactory: java.lang.Object getBean(java.lang.String)>($r1);

        return $r3;
    }

    public java.lang.ClassLoader getAspectClassLoader()
    {
        org.springframework.beans.factory.BeanFactory $r1, $r3;
        org.springframework.aop.config.SimpleBeanFactoryAwareAspectInstanceFactory r0;
        java.lang.ClassLoader $r2, $r5;
        org.springframework.beans.factory.config.ConfigurableBeanFactory $r4;
        boolean $z0;

        r0 := @this: org.springframework.aop.config.SimpleBeanFactoryAwareAspectInstanceFactory;

        $r1 = r0.<org.springframework.aop.config.SimpleBeanFactoryAwareAspectInstanceFactory: org.springframework.beans.factory.BeanFactory beanFactory>;

        $z0 = $r1 instanceof org.springframework.beans.factory.config.ConfigurableBeanFactory;

        if $z0 == 0 goto label1;

        $r3 = r0.<org.springframework.aop.config.SimpleBeanFactoryAwareAspectInstanceFactory: org.springframework.beans.factory.BeanFactory beanFactory>;

        $r4 = (org.springframework.beans.factory.config.ConfigurableBeanFactory) $r3;

        $r5 = interfaceinvoke $r4.<org.springframework.beans.factory.config.ConfigurableBeanFactory: java.lang.ClassLoader getBeanClassLoader()>();

        return $r5;

     label1:
        $r2 = staticinvoke <org.springframework.util.ClassUtils: java.lang.ClassLoader getDefaultClassLoader()>();

        return $r2;
    }

    public int getOrder()
    {
        org.springframework.core.Ordered $r8;
        org.springframework.aop.config.SimpleBeanFactoryAwareAspectInstanceFactory r0;
        org.springframework.beans.factory.BeanFactory $r2, $r4, $r6;
        int $i0;
        java.lang.Object $r7;
        java.lang.String $r1, $r3, $r5;
        boolean $z0, $z1;

        r0 := @this: org.springframework.aop.config.SimpleBeanFactoryAwareAspectInstanceFactory;

        $r2 = r0.<org.springframework.aop.config.SimpleBeanFactoryAwareAspectInstanceFactory: org.springframework.beans.factory.BeanFactory beanFactory>;

        $r1 = r0.<org.springframework.aop.config.SimpleBeanFactoryAwareAspectInstanceFactory: java.lang.String aspectBeanName>;

        $z0 = interfaceinvoke $r2.<org.springframework.beans.factory.BeanFactory: boolean isSingleton(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        $r4 = r0.<org.springframework.aop.config.SimpleBeanFactoryAwareAspectInstanceFactory: org.springframework.beans.factory.BeanFactory beanFactory>;

        $r3 = r0.<org.springframework.aop.config.SimpleBeanFactoryAwareAspectInstanceFactory: java.lang.String aspectBeanName>;

        $z1 = interfaceinvoke $r4.<org.springframework.beans.factory.BeanFactory: boolean isTypeMatch(java.lang.String,java.lang.Class)>($r3, class "Lorg/springframework/core/Ordered;");

        if $z1 == 0 goto label1;

        $r6 = r0.<org.springframework.aop.config.SimpleBeanFactoryAwareAspectInstanceFactory: org.springframework.beans.factory.BeanFactory beanFactory>;

        $r5 = r0.<org.springframework.aop.config.SimpleBeanFactoryAwareAspectInstanceFactory: java.lang.String aspectBeanName>;

        $r7 = interfaceinvoke $r6.<org.springframework.beans.factory.BeanFactory: java.lang.Object getBean(java.lang.String)>($r5);

        $r8 = (org.springframework.core.Ordered) $r7;

        $i0 = interfaceinvoke $r8.<org.springframework.core.Ordered: int getOrder()>();

        return $i0;

     label1:
        return 2147483647;
    }
}
