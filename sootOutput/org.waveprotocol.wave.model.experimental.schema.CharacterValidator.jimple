final class org.waveprotocol.wave.model.experimental.schema.CharacterValidator extends java.lang.Object
{
    private final org.waveprotocol.wave.model.experimental.schema.CharacterValidator$Predicate predicate;

    private void <init>(org.waveprotocol.wave.model.experimental.schema.CharacterValidator$Predicate)
    {
        org.waveprotocol.wave.model.experimental.schema.CharacterValidator$Predicate r1;
        org.waveprotocol.wave.model.experimental.schema.CharacterValidator r0;

        r0 := @this: org.waveprotocol.wave.model.experimental.schema.CharacterValidator;

        r1 := @parameter0: org.waveprotocol.wave.model.experimental.schema.CharacterValidator$Predicate;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.model.experimental.schema.CharacterValidator: org.waveprotocol.wave.model.experimental.schema.CharacterValidator$Predicate predicate> = r1;

        return;
    }

    int validate(java.lang.String)
    {
        org.waveprotocol.wave.model.experimental.schema.CharacterValidator$Predicate $r3;
        int $i0;
        org.waveprotocol.wave.model.experimental.schema.CharacterValidator$ValidatingHandler $r1;
        java.lang.Object $r4;
        java.lang.String r0;
        java.lang.Integer $r5;
        org.waveprotocol.wave.model.experimental.schema.CharacterValidator r2;

        r2 := @this: org.waveprotocol.wave.model.experimental.schema.CharacterValidator;

        r0 := @parameter0: java.lang.String;

        $r1 = new org.waveprotocol.wave.model.experimental.schema.CharacterValidator$ValidatingHandler;

        $r3 = r2.<org.waveprotocol.wave.model.experimental.schema.CharacterValidator: org.waveprotocol.wave.model.experimental.schema.CharacterValidator$Predicate predicate>;

        specialinvoke $r1.<org.waveprotocol.wave.model.experimental.schema.CharacterValidator$ValidatingHandler: void <init>(org.waveprotocol.wave.model.experimental.schema.CharacterValidator$Predicate)>($r3);

        $r4 = staticinvoke <org.waveprotocol.wave.model.util.Utf16Util: java.lang.Object traverseUtf16String(java.lang.String,org.waveprotocol.wave.model.util.Utf16Util$CodePointHandler)>(r0, $r1);

        $r5 = (java.lang.Integer) $r4;

        $i0 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    static org.waveprotocol.wave.model.experimental.schema.CharacterValidator disallowedCharacters(java.util.Set)
    {
        java.util.Set r2;
        org.waveprotocol.wave.model.experimental.schema.CharacterValidator $r0;
        org.waveprotocol.wave.model.experimental.schema.CharacterValidator$1 $r1;

        r2 := @parameter0: java.util.Set;

        $r0 = new org.waveprotocol.wave.model.experimental.schema.CharacterValidator;

        $r1 = new org.waveprotocol.wave.model.experimental.schema.CharacterValidator$1;

        specialinvoke $r1.<org.waveprotocol.wave.model.experimental.schema.CharacterValidator$1: void <init>(java.util.Set)>(r2);

        specialinvoke $r0.<org.waveprotocol.wave.model.experimental.schema.CharacterValidator: void <init>(org.waveprotocol.wave.model.experimental.schema.CharacterValidator$Predicate)>($r1);

        return $r0;
    }

    static org.waveprotocol.wave.model.experimental.schema.CharacterValidator allowedCharacters(java.util.Set)
    {
        java.util.Set r2;
        org.waveprotocol.wave.model.experimental.schema.CharacterValidator$2 $r1;
        org.waveprotocol.wave.model.experimental.schema.CharacterValidator $r0;

        r2 := @parameter0: java.util.Set;

        $r0 = new org.waveprotocol.wave.model.experimental.schema.CharacterValidator;

        $r1 = new org.waveprotocol.wave.model.experimental.schema.CharacterValidator$2;

        specialinvoke $r1.<org.waveprotocol.wave.model.experimental.schema.CharacterValidator$2: void <init>(java.util.Set)>(r2);

        specialinvoke $r0.<org.waveprotocol.wave.model.experimental.schema.CharacterValidator: void <init>(org.waveprotocol.wave.model.experimental.schema.CharacterValidator$Predicate)>($r1);

        return $r0;
    }
}
