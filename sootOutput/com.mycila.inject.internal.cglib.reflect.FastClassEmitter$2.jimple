class com.mycila.inject.internal.cglib.reflect.FastClassEmitter$2 extends java.lang.Object implements com.mycila.inject.internal.cglib.core.Transformer
{
    private final com.mycila.inject.internal.cglib.reflect.FastClassEmitter this$0;

    void <init>(com.mycila.inject.internal.cglib.reflect.FastClassEmitter)
    {
        com.mycila.inject.internal.cglib.reflect.FastClassEmitter$2 r0;
        com.mycila.inject.internal.cglib.reflect.FastClassEmitter r1;

        r0 := @this: com.mycila.inject.internal.cglib.reflect.FastClassEmitter$2;

        r1 := @parameter0: com.mycila.inject.internal.cglib.reflect.FastClassEmitter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.mycila.inject.internal.cglib.reflect.FastClassEmitter$2: com.mycila.inject.internal.cglib.reflect.FastClassEmitter this$0> = r1;

        return;
    }

    public java.lang.Object transform(java.lang.Object)
    {
        com.mycila.inject.internal.cglib.core.Signature $r2;
        int $i0, $i1;
        java.lang.Object r0;
        java.lang.String $r3, $r4;
        com.mycila.inject.internal.cglib.reflect.FastClassEmitter$2 r5;
        java.lang.reflect.Method $r1;

        r5 := @this: com.mycila.inject.internal.cglib.reflect.FastClassEmitter$2;

        r0 := @parameter0: java.lang.Object;

        $r1 = (java.lang.reflect.Method) r0;

        $r2 = staticinvoke <com.mycila.inject.internal.cglib.core.ReflectUtils: com.mycila.inject.internal.cglib.core.Signature getSignature(java.lang.reflect.Member)>($r1);

        $r3 = virtualinvoke $r2.<com.mycila.inject.internal.cglib.core.Signature: java.lang.String toString()>();

        $i0 = virtualinvoke $r3.<java.lang.String: int lastIndexOf(int)>(41);

        $i1 = $i0 + 1;

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        return $r4;
    }
}
