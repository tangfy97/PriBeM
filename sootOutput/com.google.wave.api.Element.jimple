public class com.google.wave.api.Element extends com.google.wave.api.BlipContent implements java.io.Serializable
{
    private final com.google.wave.api.ElementType type;
    private final java.util.Map properties;

    public void <init>(com.google.wave.api.ElementType)
    {
        java.util.HashMap $r2;
        com.google.wave.api.Element r0;
        com.google.wave.api.ElementType r1;

        r0 := @this: com.google.wave.api.Element;

        r1 := @parameter0: com.google.wave.api.ElementType;

        specialinvoke r0.<com.google.wave.api.BlipContent: void <init>()>();

        r0.<com.google.wave.api.Element: com.google.wave.api.ElementType type> = r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<com.google.wave.api.Element: java.util.Map properties> = $r2;

        return;
    }

    public void <init>(com.google.wave.api.ElementType, java.util.Map)
    {
        com.google.wave.api.Element r0;
        com.google.wave.api.ElementType r1;
        java.util.Map r2;

        r0 := @this: com.google.wave.api.Element;

        r1 := @parameter0: com.google.wave.api.ElementType;

        r2 := @parameter1: java.util.Map;

        specialinvoke r0.<com.google.wave.api.BlipContent: void <init>()>();

        r0.<com.google.wave.api.Element: com.google.wave.api.ElementType type> = r1;

        r0.<com.google.wave.api.Element: java.util.Map properties> = r2;

        return;
    }

    public com.google.wave.api.ElementType getType()
    {
        com.google.wave.api.Element r0;
        com.google.wave.api.ElementType $r1;

        r0 := @this: com.google.wave.api.Element;

        $r1 = r0.<com.google.wave.api.Element: com.google.wave.api.ElementType type>;

        return $r1;
    }

    public java.util.Map getProperties()
    {
        com.google.wave.api.Element r0;
        java.util.Map $r1;

        r0 := @this: com.google.wave.api.Element;

        $r1 = r0.<com.google.wave.api.Element: java.util.Map properties>;

        return $r1;
    }

    public void setProperty(java.lang.String, java.lang.String)
    {
        com.google.wave.api.Element r0;
        java.util.Map $r3;
        java.lang.String r1, r2;

        r0 := @this: com.google.wave.api.Element;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.google.wave.api.Element: java.util.Map properties>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public java.lang.String getProperty(java.lang.String)
    {
        com.google.wave.api.Element r0;
        java.lang.String r1, $r2;

        r0 := @this: com.google.wave.api.Element;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.google.wave.api.Element: java.lang.String getProperty(java.lang.String,java.lang.String)>(r1, null);

        return $r2;
    }

    public java.lang.String getProperty(java.lang.String, java.lang.String)
    {
        com.google.wave.api.Element r0;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String r1, r4, $r5;

        r0 := @this: com.google.wave.api.Element;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        $r2 = r0.<com.google.wave.api.Element: java.util.Map properties>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        if $r3 == null goto label1;

        $r5 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        return $r5;

     label1:
        return r4;
    }

    public boolean isFormElement()
    {
        com.google.wave.api.Element r1;
        java.util.Collection $r0;
        com.google.wave.api.ElementType $r2;
        boolean $z0;

        r1 := @this: com.google.wave.api.Element;

        $r0 = staticinvoke <com.google.wave.api.FormElement: java.util.Collection getFormElementTypes()>();

        $r2 = r1.<com.google.wave.api.Element: com.google.wave.api.ElementType type>;

        $z0 = interfaceinvoke $r0.<java.util.Collection: boolean contains(java.lang.Object)>($r2);

        return $z0;
    }

    public boolean isGadget()
    {
        com.google.wave.api.Element r0;
        com.google.wave.api.ElementType $r1, $r2;
        boolean $z0;

        r0 := @this: com.google.wave.api.Element;

        $r2 = r0.<com.google.wave.api.Element: com.google.wave.api.ElementType type>;

        $r1 = <com.google.wave.api.ElementType: com.google.wave.api.ElementType GADGET>;

        if $r2 != $r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isInlineBlip()
    {
        com.google.wave.api.Element r0;
        com.google.wave.api.ElementType $r1, $r2;
        boolean $z0;

        r0 := @this: com.google.wave.api.Element;

        $r2 = r0.<com.google.wave.api.Element: com.google.wave.api.ElementType type>;

        $r1 = <com.google.wave.api.ElementType: com.google.wave.api.ElementType INLINE_BLIP>;

        if $r2 != $r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isImage()
    {
        com.google.wave.api.Element r0;
        com.google.wave.api.ElementType $r1, $r2;
        boolean $z0;

        r0 := @this: com.google.wave.api.Element;

        $r2 = r0.<com.google.wave.api.Element: com.google.wave.api.ElementType type>;

        $r1 = <com.google.wave.api.ElementType: com.google.wave.api.ElementType IMAGE>;

        if $r2 != $r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isAttachment()
    {
        com.google.wave.api.Element r0;
        com.google.wave.api.ElementType $r1, $r2;
        boolean $z0;

        r0 := @this: com.google.wave.api.Element;

        $r2 = r0.<com.google.wave.api.Element: com.google.wave.api.ElementType type>;

        $r1 = <com.google.wave.api.ElementType: com.google.wave.api.ElementType ATTACHMENT>;

        if $r2 != $r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.String toString()
    {
        com.google.wave.api.Element r2;
        com.google.wave.api.ElementType $r3;
        java.util.Map $r6;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r7, $r8;
        java.lang.String $r9;

        r2 := @this: com.google.wave.api.Element;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{\'type\':\'");

        $r3 = r2.<com.google.wave.api.Element: com.google.wave.api.ElementType type>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\',\'properties\':");

        $r6 = r2.<com.google.wave.api.Element: java.util.Map properties>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public java.lang.String getText()
    {
        com.google.wave.api.Element r0;
        java.lang.String $r3;
        com.google.wave.api.ElementType $r1, $r2;

        r0 := @this: com.google.wave.api.Element;

        $r2 = r0.<com.google.wave.api.Element: com.google.wave.api.ElementType type>;

        $r1 = <com.google.wave.api.ElementType: com.google.wave.api.ElementType LINE>;

        if $r2 != $r1 goto label1;

        $r3 = "\n";

        goto label2;

     label1:
        $r3 = " ";

     label2:
        return $r3;
    }
}
