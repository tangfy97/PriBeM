public class org.apache.xpath.domapi.XPathExpressionImpl extends java.lang.Object implements org.w3c.dom.xpath.XPathExpression
{
    private org.apache.xml.utils.PrefixResolver m_resolver;
    private org.apache.xpath.XPath m_xpath;
    private org.w3c.dom.Document m_doc;

    void <init>(org.apache.xpath.XPath, org.w3c.dom.Document)
    {
        org.apache.xpath.domapi.XPathExpressionImpl r0;
        org.apache.xpath.XPath r1;
        org.w3c.dom.Document r2;

        r0 := @this: org.apache.xpath.domapi.XPathExpressionImpl;

        r1 := @parameter0: org.apache.xpath.XPath;

        r2 := @parameter1: org.w3c.dom.Document;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xpath.domapi.XPathExpressionImpl: org.w3c.dom.Document m_doc> = null;

        r0.<org.apache.xpath.domapi.XPathExpressionImpl: org.apache.xpath.XPath m_xpath> = r1;

        r0.<org.apache.xpath.domapi.XPathExpressionImpl: org.w3c.dom.Document m_doc> = r2;

        return;
    }

    public java.lang.Object evaluate(org.w3c.dom.Node, short, java.lang.Object) throws org.w3c.dom.xpath.XPathException, org.w3c.dom.DOMException
    {
        java.lang.Integer $r27;
        org.apache.xpath.domapi.XPathResultImpl $r31;
        org.w3c.dom.Document $r1, $r3, $r9, $r14, $r17, $r18;
        boolean $z0, $z1;
        org.apache.xpath.XPath $r6;
        org.apache.xpath.objects.XObject $r7;
        org.apache.xpath.domapi.XPathExpressionImpl r0;
        java.lang.Object[] $r10;
        javax.xml.transform.TransformerException $r21;
        short s0, $s1;
        org.apache.xpath.XPathContext $r29;
        org.w3c.dom.Node r4;
        org.w3c.dom.DOMException $r25, $r26;
        int $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.String $r12, $r15, $r19, $r23;
        org.w3c.dom.xpath.XPathException $r28, $r30;
        java.lang.Object r24;
        org.apache.xml.utils.PrefixResolver $r5;

        r0 := @this: org.apache.xpath.domapi.XPathExpressionImpl;

        r4 := @parameter0: org.w3c.dom.Node;

        s0 := @parameter1: short;

        r24 := @parameter2: java.lang.Object;

        $r1 = r0.<org.apache.xpath.domapi.XPathExpressionImpl: org.w3c.dom.Document m_doc>;

        if $r1 == null goto label2;

        $r14 = r0.<org.apache.xpath.domapi.XPathExpressionImpl: org.w3c.dom.Document m_doc>;

        if r4 == $r14 goto label1;

        $r17 = interfaceinvoke r4.<org.w3c.dom.Node: org.w3c.dom.Document getOwnerDocument()>();

        $r18 = r0.<org.apache.xpath.domapi.XPathExpressionImpl: org.w3c.dom.Document m_doc>;

        $z0 = virtualinvoke $r17.<java.lang.Object: boolean equals(java.lang.Object)>($r18);

        if $z0 != 0 goto label1;

        $r19 = staticinvoke <org.apache.xpath.res.XPATHMessages: java.lang.String createXPATHMessage(java.lang.String,java.lang.Object[])>("ER_WRONG_DOCUMENT", null);

        $r25 = new org.w3c.dom.DOMException;

        specialinvoke $r25.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(4, $r19);

        throw $r25;

     label1:
        $s1 = interfaceinvoke r4.<org.w3c.dom.Node: short getNodeType()>();

        $i2 = (int) $s1;

        if $i2 == 9 goto label2;

        if $s1 == 1 goto label2;

        $i3 = (int) $s1;

        if $i3 == 2 goto label2;

        $i4 = (int) $s1;

        if $i4 == 3 goto label2;

        $i5 = (int) $s1;

        if $i5 == 4 goto label2;

        $i6 = (int) $s1;

        if $i6 == 8 goto label2;

        $i7 = (int) $s1;

        if $i7 == 7 goto label2;

        $i8 = (int) $s1;

        if $i8 == 13 goto label2;

        $r15 = staticinvoke <org.apache.xpath.res.XPATHMessages: java.lang.String createXPATHMessage(java.lang.String,java.lang.Object[])>("ER_WRONG_NODETYPE", null);

        $r26 = new org.w3c.dom.DOMException;

        specialinvoke $r26.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(9, $r15);

        throw $r26;

     label2:
        $z1 = staticinvoke <org.apache.xpath.domapi.XPathResultImpl: boolean isValidType(short)>(s0);

        if $z1 != 0 goto label3;

        $r10 = newarray (java.lang.Object)[1];

        $r27 = new java.lang.Integer;

        $i9 = (int) s0;

        specialinvoke $r27.<java.lang.Integer: void <init>(int)>($i9);

        $r10[0] = $r27;

        $r12 = staticinvoke <org.apache.xpath.res.XPATHMessages: java.lang.String createXPATHMessage(java.lang.String,java.lang.Object[])>("ER_INVALID_XPATH_TYPE", $r10);

        $r28 = new org.w3c.dom.xpath.XPathException;

        specialinvoke $r28.<org.w3c.dom.xpath.XPathException: void <init>(short,java.lang.String)>(2, $r12);

        throw $r28;

     label3:
        $r29 = new org.apache.xpath.XPathContext;

        specialinvoke $r29.<org.apache.xpath.XPathContext: void <init>()>();

        $r3 = r0.<org.apache.xpath.domapi.XPathExpressionImpl: org.w3c.dom.Document m_doc>;

        if null == $r3 goto label4;

        $r9 = r0.<org.apache.xpath.domapi.XPathExpressionImpl: org.w3c.dom.Document m_doc>;

        virtualinvoke $r29.<org.apache.xpath.XPathContext: int getDTMHandleFromNode(org.w3c.dom.Node)>($r9);

     label4:
        $r6 = r0.<org.apache.xpath.domapi.XPathExpressionImpl: org.apache.xpath.XPath m_xpath>;

        $r5 = r0.<org.apache.xpath.domapi.XPathExpressionImpl: org.apache.xml.utils.PrefixResolver m_resolver>;

        $r7 = virtualinvoke $r6.<org.apache.xpath.XPath: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,org.w3c.dom.Node,org.apache.xml.utils.PrefixResolver)>($r29, r4, $r5);

     label5:
        goto label7;

     label6:
        $r21 := @caughtexception;

        $r30 = new org.w3c.dom.xpath.XPathException;

        $r23 = virtualinvoke $r21.<javax.xml.transform.TransformerException: java.lang.String getMessageAndLocation()>();

        specialinvoke $r30.<org.w3c.dom.xpath.XPathException: void <init>(short,java.lang.String)>(1, $r23);

        throw $r30;

     label7:
        $r31 = new org.apache.xpath.domapi.XPathResultImpl;

        specialinvoke $r31.<org.apache.xpath.domapi.XPathResultImpl: void <init>(short,org.apache.xpath.objects.XObject,org.w3c.dom.Node)>(s0, $r7, r4);

        return $r31;

        catch javax.xml.transform.TransformerException from label4 to label5 with label6;
    }
}
