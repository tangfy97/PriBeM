class ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension extends ucar.nc2.ncml.Aggregation$Dataset
{
    protected int ncoord;
    protected java.lang.String coordValue;
    protected java.util.Date coordValueDate;
    protected boolean isStringValued;
    private int aggStart;
    private int aggEnd;
    final ucar.nc2.ncml.AggregationOuterDimension this$0;

    protected void <init>(ucar.nc2.ncml.AggregationOuterDimension, java.lang.String)
    {
        java.lang.String r2;
        ucar.nc2.ncml.AggregationOuterDimension r1;
        ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension r0;

        r0 := @this: ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension;

        r1 := @parameter0: ucar.nc2.ncml.AggregationOuterDimension;

        r2 := @parameter1: java.lang.String;

        r0.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: ucar.nc2.ncml.AggregationOuterDimension this$0> = r1;

        specialinvoke r0.<ucar.nc2.ncml.Aggregation$Dataset: void <init>(ucar.nc2.ncml.Aggregation,java.lang.String)>(r1, r2);

        r0.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: boolean isStringValued> = 0;

        r0.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: int aggStart> = 0;

        r0.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: int aggEnd> = 0;

        return;
    }

    protected void <init>(ucar.nc2.ncml.AggregationOuterDimension, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.util.EnumSet, ucar.nc2.util.cache.FileFactory)
    {
        ucar.nc2.ncml.Aggregation$Type $r8, $r9, $r13, $r14, $r15, $r16, $r17, $r18, $r27, $r28, $r30, $r31;
        java.util.EnumSet r5;
        ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension r0;
        java.lang.StringBuilder $r22, $r24, $r25;
        ucar.nc2.util.cache.FileFactory r6;
        ucar.nc2.ncml.AggregationOuterDimension r1;
        java.util.StringTokenizer $r10;
        int $i0, $i1, $i2, $i3;
        java.lang.String r2, r3, r4, r7, $r11, $r12, r19, $r26, $r29;
        org.slf4j.Logger $r23;
        java.lang.NumberFormatException $r20, $r21;

        r0 := @this: ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension;

        r1 := @parameter0: ucar.nc2.ncml.AggregationOuterDimension;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r19 := @parameter4: java.lang.String;

        r7 := @parameter5: java.lang.String;

        r5 := @parameter6: java.util.EnumSet;

        r6 := @parameter7: ucar.nc2.util.cache.FileFactory;

        r0.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: ucar.nc2.ncml.AggregationOuterDimension this$0> = r1;

        specialinvoke r0.<ucar.nc2.ncml.Aggregation$Dataset: void <init>(ucar.nc2.ncml.Aggregation,java.lang.String,java.lang.String,java.lang.String,java.util.EnumSet,ucar.nc2.util.cache.FileFactory)>(r1, r2, r3, r4, r5, r6);

        r0.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: boolean isStringValued> = 0;

        r0.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: int aggStart> = 0;

        r0.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: int aggEnd> = 0;

        r0.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: java.lang.String coordValue> = r7;

        $r9 = r1.<ucar.nc2.ncml.AggregationOuterDimension: ucar.nc2.ncml.Aggregation$Type type>;

        $r8 = <ucar.nc2.ncml.Aggregation$Type: ucar.nc2.ncml.Aggregation$Type joinNew>;

        if $r9 == $r8 goto label01;

        $r18 = r1.<ucar.nc2.ncml.AggregationOuterDimension: ucar.nc2.ncml.Aggregation$Type type>;

        $r17 = <ucar.nc2.ncml.Aggregation$Type: ucar.nc2.ncml.Aggregation$Type joinExistingOne>;

        if $r18 != $r17 goto label02;

     label01:
        r0.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: int ncoord> = 1;

        goto label06;

     label02:
        if r19 == null goto label06;

     label03:
        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r19);

        r0.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: int ncoord> = $i3;

     label04:
        goto label06;

     label05:
        $r21 := @caughtexception;

        $r23 = <ucar.nc2.ncml.Aggregation: org.slf4j.Logger logger>;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad ncoord attribute on dataset=");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r23.<org.slf4j.Logger: void error(java.lang.String)>($r26);

     label06:
        $r27 = r1.<ucar.nc2.ncml.AggregationOuterDimension: ucar.nc2.ncml.Aggregation$Type type>;

        $r28 = <ucar.nc2.ncml.Aggregation$Type: ucar.nc2.ncml.Aggregation$Type joinNew>;

        if $r27 == $r28 goto label07;

        $r14 = r1.<ucar.nc2.ncml.AggregationOuterDimension: ucar.nc2.ncml.Aggregation$Type type>;

        $r13 = <ucar.nc2.ncml.Aggregation$Type: ucar.nc2.ncml.Aggregation$Type joinExistingOne>;

        if $r14 == $r13 goto label07;

        $r16 = r1.<ucar.nc2.ncml.AggregationOuterDimension: ucar.nc2.ncml.Aggregation$Type type>;

        $r15 = <ucar.nc2.ncml.Aggregation$Type: ucar.nc2.ncml.Aggregation$Type forecastModelRunCollection>;

        if $r16 != $r15 goto label13;

     label07:
        if r7 != null goto label10;

        $r11 = r0.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: java.lang.String location>;

        $i1 = virtualinvoke $r11.<java.lang.String: int lastIndexOf(int)>(47);

        if $i1 >= 0 goto label08;

        $r29 = r0.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: java.lang.String location>;

        goto label09;

     label08:
        $r12 = r0.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: java.lang.String location>;

        $i2 = $i1 + 1;

        $r29 = virtualinvoke $r12.<java.lang.String: java.lang.String substring(int)>($i2);

     label09:
        r0.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: java.lang.String coordValue> = $r29;

        r0.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: boolean isStringValued> = 1;

        goto label13;

     label10:
        staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(r7);

     label11:
        goto label13;

     label12:
        $r20 := @caughtexception;

        r0.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: boolean isStringValued> = 1;

     label13:
        $r30 = r1.<ucar.nc2.ncml.AggregationOuterDimension: ucar.nc2.ncml.Aggregation$Type type>;

        $r31 = <ucar.nc2.ncml.Aggregation$Type: ucar.nc2.ncml.Aggregation$Type joinExisting>;

        if $r30 != $r31 goto label14;

        if r7 == null goto label14;

        $r10 = new java.util.StringTokenizer;

        specialinvoke $r10.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r7, " ,");

        $i0 = virtualinvoke $r10.<java.util.StringTokenizer: int countTokens()>();

        r0.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: int ncoord> = $i0;

     label14:
        return;

        catch java.lang.NumberFormatException from label03 to label04 with label05;
        catch java.lang.NumberFormatException from label10 to label11 with label12;
    }

    void <init>(ucar.nc2.ncml.AggregationOuterDimension, thredds.inventory.MFile)
    {
        java.util.Date $r17, $r18;
        ucar.nc2.ncml.Aggregation$Type $r3, $r4, $r6, $r7, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37;
        thredds.inventory.MFile r2;
        boolean $z0, $z1;
        ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension r0;
        java.lang.StringBuilder $r9, $r11, $r13, $r21, $r23, $r25, $r26, $r28;
        ucar.nc2.units.DateFormatter $r19;
        ucar.nc2.ncml.AggregationOuterDimension r1;
        int $i0, $i1;
        java.lang.String $r5, $r8, $r12, $r14, $r15, $r16, $r20, $r24, $r27, $r29, $r38, $r39, $r40, $r41;
        java.io.PrintStream $r10, $r22;

        r0 := @this: ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension;

        r1 := @parameter0: ucar.nc2.ncml.AggregationOuterDimension;

        r2 := @parameter1: thredds.inventory.MFile;

        r0.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: ucar.nc2.ncml.AggregationOuterDimension this$0> = r1;

        specialinvoke r0.<ucar.nc2.ncml.Aggregation$Dataset: void <init>(ucar.nc2.ncml.Aggregation,thredds.inventory.MFile)>(r1, r2);

        r0.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: boolean isStringValued> = 0;

        r0.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: int aggStart> = 0;

        r0.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: int aggEnd> = 0;

        $r4 = r1.<ucar.nc2.ncml.AggregationOuterDimension: ucar.nc2.ncml.Aggregation$Type type>;

        $r3 = <ucar.nc2.ncml.Aggregation$Type: ucar.nc2.ncml.Aggregation$Type joinNew>;

        if $r4 == $r3 goto label01;

        $r35 = r1.<ucar.nc2.ncml.AggregationOuterDimension: ucar.nc2.ncml.Aggregation$Type type>;

        $r34 = <ucar.nc2.ncml.Aggregation$Type: ucar.nc2.ncml.Aggregation$Type joinExistingOne>;

        if $r35 != $r34 goto label02;

     label01:
        r0.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: int ncoord> = 1;

     label02:
        $r36 = r1.<ucar.nc2.ncml.AggregationOuterDimension: ucar.nc2.ncml.Aggregation$Type type>;

        $r37 = <ucar.nc2.ncml.Aggregation$Type: ucar.nc2.ncml.Aggregation$Type joinNew>;

        if $r36 == $r37 goto label03;

        $r31 = r1.<ucar.nc2.ncml.AggregationOuterDimension: ucar.nc2.ncml.Aggregation$Type type>;

        $r30 = <ucar.nc2.ncml.Aggregation$Type: ucar.nc2.ncml.Aggregation$Type joinExistingOne>;

        if $r31 == $r30 goto label03;

        $r33 = r1.<ucar.nc2.ncml.AggregationOuterDimension: ucar.nc2.ncml.Aggregation$Type type>;

        $r32 = <ucar.nc2.ncml.Aggregation$Type: ucar.nc2.ncml.Aggregation$Type forecastModelRunCollection>;

        if $r33 != $r32 goto label06;

     label03:
        $r38 = r0.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: java.lang.String location>;

        $i1 = virtualinvoke $r38.<java.lang.String: int lastIndexOf(int)>(47);

        if $i1 >= 0 goto label04;

        $r39 = r0.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: java.lang.String location>;

        goto label05;

     label04:
        $r5 = r0.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: java.lang.String location>;

        $i0 = $i1 + 1;

        $r39 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int)>($i0);

     label05:
        r0.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: java.lang.String coordValue> = $r39;

        r0.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: boolean isStringValued> = 1;

     label06:
        $r40 = r1.<ucar.nc2.ncml.AggregationOuterDimension: java.lang.String dateFormatMark>;

        if null == $r40 goto label08;

        $r15 = interfaceinvoke r2.<thredds.inventory.MFile: java.lang.String getName()>();

        $r16 = r1.<ucar.nc2.ncml.AggregationOuterDimension: java.lang.String dateFormatMark>;

        $r17 = staticinvoke <ucar.nc2.units.DateFromString: java.util.Date getDateUsingDemarkatedCount(java.lang.String,java.lang.String,char)>($r15, $r16, 35);

        r0.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: java.util.Date coordValueDate> = $r17;

        $r19 = r1.<ucar.nc2.ncml.AggregationOuterDimension: ucar.nc2.units.DateFormatter dateFormatter>;

        $r18 = r0.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: java.util.Date coordValueDate>;

        $r20 = virtualinvoke $r19.<ucar.nc2.units.DateFormatter: java.lang.String toDateTimeStringISO(java.util.Date)>($r18);

        r0.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: java.lang.String coordValue> = $r20;

        $z1 = <ucar.nc2.ncml.Aggregation: boolean debugDateParse>;

        if $z1 == 0 goto label07;

        $r22 = <java.lang.System: java.io.PrintStream out>;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  adding ");

        $r24 = interfaceinvoke r2.<thredds.inventory.MFile: java.lang.String getPath()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" date= ");

        $r27 = r0.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: java.lang.String coordValue>;

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>($r29);

     label07:
        goto label09;

     label08:
        $z0 = <ucar.nc2.ncml.Aggregation: boolean debugDateParse>;

        if $z0 == 0 goto label09;

        $r10 = <java.lang.System: java.io.PrintStream out>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  adding ");

        $r12 = interfaceinvoke r2.<thredds.inventory.MFile: java.lang.String getPath()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r14);

     label09:
        $r41 = r0.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: java.lang.String coordValue>;

        if $r41 != null goto label10;

        $r7 = r1.<ucar.nc2.ncml.AggregationOuterDimension: ucar.nc2.ncml.Aggregation$Type type>;

        $r6 = <ucar.nc2.ncml.Aggregation$Type: ucar.nc2.ncml.Aggregation$Type joinNew>;

        if $r7 != $r6 goto label10;

        $r8 = interfaceinvoke r2.<thredds.inventory.MFile: java.lang.String getName()>();

        r0.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: java.lang.String coordValue> = $r8;

     label10:
        return;
    }

    public java.lang.String getCoordValueString()
    {
        java.lang.String $r1;
        ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension r0;

        r0 := @this: ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension;

        $r1 = r0.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: java.lang.String coordValue>;

        return $r1;
    }

    public java.util.Date getCoordValueDate()
    {
        ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension r0;
        java.util.Date $r1;

        r0 := @this: ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension;

        $r1 = r0.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: java.util.Date coordValueDate>;

        return $r1;
    }

    public void show(java.util.Formatter)
    {
        java.lang.Object[] $r1, $r6, $r10, $r15;
        java.util.Date $r5, $r12;
        java.lang.Integer $r7, $r8, $r9;
        java.util.Formatter r0;
        ucar.nc2.ncml.AggregationOuterDimension $r11;
        int $i0, $i1, $i2;
        java.lang.String $r3, $r4, $r14, $r16;
        ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension r2;
        ucar.nc2.units.DateFormatter $r13;

        r2 := @this: ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension;

        r0 := @parameter0: java.util.Formatter;

        $r1 = newarray (java.lang.Object)[1];

        $r3 = r2.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: java.lang.String location>;

        $r1[0] = $r3;

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("   %s", $r1);

        $r4 = r2.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: java.lang.String coordValue>;

        if $r4 == null goto label1;

        $r15 = newarray (java.lang.Object)[1];

        $r16 = r2.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: java.lang.String coordValue>;

        $r15[0] = $r16;

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>(" coordValue=\'%s\'", $r15);

     label1:
        $r5 = r2.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: java.util.Date coordValueDate>;

        if $r5 == null goto label2;

        $r10 = newarray (java.lang.Object)[1];

        $r11 = r2.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: ucar.nc2.ncml.AggregationOuterDimension this$0>;

        $r13 = $r11.<ucar.nc2.ncml.AggregationOuterDimension: ucar.nc2.units.DateFormatter dateFormatter>;

        $r12 = r2.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: java.util.Date coordValueDate>;

        $r14 = virtualinvoke $r13.<ucar.nc2.units.DateFormatter: java.lang.String toDateTimeString(java.util.Date)>($r12);

        $r10[0] = $r14;

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>(" coordValueDate=\'%s\'", $r10);

     label2:
        $r6 = newarray (java.lang.Object)[3];

        $i0 = r2.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: int aggStart>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r6[0] = $r7;

        $i1 = r2.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: int aggEnd>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r6[1] = $r8;

        $i2 = r2.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: int ncoord>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r6[2] = $r9;

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>(" range=[%d:%d) (%d)%n", $r6);

        return;
    }

    public int getNcoords(ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        java.lang.Throwable $r14;
        ucar.nc2.util.CancelTask r1;
        ucar.nc2.ncml.AggregationOuterDimension $r4, $r10;
        int $i0, $i1, $i2;
        java.lang.String $r5, $r11, $r13;
        boolean $z0;
        ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension r0;
        java.lang.IllegalArgumentException $r7;
        ucar.nc2.Group $r3;
        ucar.nc2.Dimension $r6;
        java.lang.StringBuilder $r8, $r9, $r12;
        ucar.nc2.NetcdfFile $r2, r15;

        r0 := @this: ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension;

        r1 := @parameter0: ucar.nc2.util.CancelTask;

        $i0 = r0.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: int ncoord>;

        if $i0 > 0 goto label8;

        r15 = null;

     label1:
        $r2 = virtualinvoke r0.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: ucar.nc2.NetcdfFile acquireFile(ucar.nc2.util.CancelTask)>(r1);

        r15 = $r2;

        if r1 == null goto label3;

        $z0 = interfaceinvoke r1.<ucar.nc2.util.CancelTask: boolean isCancel()>();

        if $z0 == 0 goto label3;

     label2:
        virtualinvoke r0.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: void close(ucar.nc2.NetcdfFile)>($r2);

        return 0;

     label3:
        $r3 = virtualinvoke $r2.<ucar.nc2.NetcdfFile: ucar.nc2.Group getRootGroup()>();

        $r4 = r0.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: ucar.nc2.ncml.AggregationOuterDimension this$0>;

        $r5 = $r4.<ucar.nc2.ncml.AggregationOuterDimension: java.lang.String dimName>;

        $r6 = virtualinvoke $r3.<ucar.nc2.Group: ucar.nc2.Dimension findDimension(java.lang.String)>($r5);

        if $r6 == null goto label4;

        $i2 = virtualinvoke $r6.<ucar.nc2.Dimension: int getLength()>();

        r0.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: int ncoord> = $i2;

        goto label5;

     label4:
        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dimension not found= ");

        $r10 = r0.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: ucar.nc2.ncml.AggregationOuterDimension this$0>;

        $r11 = $r10.<ucar.nc2.ncml.AggregationOuterDimension: java.lang.String dimName>;

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r7;

     label5:
        virtualinvoke r0.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: void close(ucar.nc2.NetcdfFile)>($r2);

        goto label8;

     label6:
        $r14 := @caughtexception;

     label7:
        virtualinvoke r0.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: void close(ucar.nc2.NetcdfFile)>(r15);

        throw $r14;

     label8:
        $i1 = r0.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: int ncoord>;

        return $i1;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    protected int setStartEnd(int, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        ucar.nc2.util.CancelTask r1;
        ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension r0;
        int i0, $i1, $i2, $i3;

        r0 := @this: ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension;

        i0 := @parameter0: int;

        r1 := @parameter1: ucar.nc2.util.CancelTask;

        r0.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: int aggStart> = i0;

        $i1 = virtualinvoke r0.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: int getNcoords(ucar.nc2.util.CancelTask)>(r1);

        $i2 = i0 + $i1;

        r0.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: int aggEnd> = $i2;

        $i3 = r0.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: int ncoord>;

        return $i3;
    }

    protected ucar.ma2.Range getNestedJoinRange(ucar.ma2.Range) throws ucar.ma2.InvalidRangeException
    {
        int $i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, i8, $i9, $i10, $i11, i12, $i13, $i14;
        boolean $z0;
        ucar.ma2.Range r0, $r2;
        ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension r1;

        r1 := @this: ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension;

        r0 := @parameter0: ucar.ma2.Range;

        $i0 = virtualinvoke r0.<ucar.ma2.Range: int first()>();

        $i1 = virtualinvoke r0.<ucar.ma2.Range: int last()>();

        i2 = $i1 + 1;

        $z0 = specialinvoke r1.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: boolean isNeeded(int,int)>($i0, i2);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $i3 = r1.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: int aggStart>;

        $i4 = virtualinvoke r0.<ucar.ma2.Range: int getFirstInInterval(int)>($i3);

        if $i4 < 0 goto label2;

        $i5 = r1.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: int aggEnd>;

        if $i4 < $i5 goto label3;

     label2:
        return null;

     label3:
        $i6 = staticinvoke <java.lang.Math: int max(int,int)>($i4, $i0);

        $i7 = r1.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: int aggStart>;

        i8 = $i6 - $i7;

        $i9 = r1.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: int aggEnd>;

        $i10 = staticinvoke <java.lang.Math: int min(int,int)>($i9, i2);

        $i11 = r1.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: int aggStart>;

        i12 = $i10 - $i11;

        $r2 = new ucar.ma2.Range;

        $i13 = i12 - 1;

        $i14 = virtualinvoke r0.<ucar.ma2.Range: int stride()>();

        specialinvoke $r2.<ucar.ma2.Range: void <init>(int,int,int)>(i8, $i13, $i14);

        return $r2;
    }

    protected boolean isNeeded(ucar.ma2.Range)
    {
        ucar.ma2.Range r0;
        ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension r1;
        int $i0, $i1, i2;
        boolean $z0;

        r1 := @this: ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension;

        r0 := @parameter0: ucar.ma2.Range;

        $i0 = virtualinvoke r0.<ucar.ma2.Range: int first()>();

        $i1 = virtualinvoke r0.<ucar.ma2.Range: int last()>();

        i2 = $i1 + 1;

        $z0 = specialinvoke r1.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: boolean isNeeded(int,int)>($i0, i2);

        return $z0;
    }

    private boolean isNeeded(int, int)
    {
        ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension r0;
        int i0, i1, $i2, $i3;

        r0 := @this: ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 < i1 goto label1;

        return 0;

     label1:
        $i2 = r0.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: int aggEnd>;

        if i0 >= $i2 goto label2;

        $i3 = r0.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: int aggStart>;

        if i1 > $i3 goto label3;

     label2:
        return 0;

     label3:
        return 1;
    }

    protected void cacheVariables(ucar.nc2.NetcdfFile) throws java.io.IOException
    {
        java.util.Iterator $r3;
        ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension r0;
        java.util.List $r2;
        ucar.nc2.ncml.AggregationOuterDimension$CacheVar r5;
        ucar.nc2.ncml.AggregationOuterDimension $r1;
        java.lang.Object $r4;
        ucar.nc2.NetcdfFile r6;
        boolean $z0;

        r0 := @this: ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension;

        r6 := @parameter0: ucar.nc2.NetcdfFile;

        $r1 = r0.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: ucar.nc2.ncml.AggregationOuterDimension this$0>;

        $r2 = $r1.<ucar.nc2.ncml.AggregationOuterDimension: java.util.List cacheList>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (ucar.nc2.ncml.AggregationOuterDimension$CacheVar) $r4;

        virtualinvoke r5.<ucar.nc2.ncml.AggregationOuterDimension$CacheVar: ucar.ma2.Array read(ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension,ucar.nc2.NetcdfFile)>(r0, r6);

        goto label1;

     label2:
        return;
    }

    protected ucar.ma2.Array read(ucar.nc2.Variable, ucar.nc2.util.CancelTask, java.util.List) throws java.io.IOException, ucar.ma2.InvalidRangeException
    {
        ucar.nc2.util.CancelTask r1;
        int[] $r31;
        boolean $z0, $z1;
        ucar.ma2.Range $r9, $r17, $r18;
        ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension r0;
        ucar.ma2.DataType $r29;
        java.util.List $r5, r34;
        java.lang.StringBuilder $r19, $r21, $r23, $r24, $r26, $r27;
        ucar.nc2.NetcdfFile $r2, r35;
        java.lang.Throwable $r33;
        java.lang.Object[] $r12;
        ucar.ma2.Section $r11, $r30;
        java.util.ArrayList $r10;
        int $i0, $i1, $i2, $i3, $i4;
        ucar.nc2.Variable r3, $r4;
        java.lang.String $r14, $r15, $r16, $r22, $r25, $r28;
        java.io.PrintStream $r13;
        org.slf4j.Logger $r20;
        ucar.ma2.Array $r8, $r32;
        java.lang.Object $r6, $r7;

        r0 := @this: ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension;

        r3 := @parameter0: ucar.nc2.Variable;

        r1 := @parameter1: ucar.nc2.util.CancelTask;

        r34 := @parameter2: java.util.List;

        r35 = null;

     label01:
        $r2 = virtualinvoke r0.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: ucar.nc2.NetcdfFile acquireFile(ucar.nc2.util.CancelTask)>(r1);

        r35 = $r2;

        if r1 == null goto label03;

        $z1 = interfaceinvoke r1.<ucar.nc2.util.CancelTask: boolean isCancel()>();

        if $z1 == 0 goto label03;

     label02:
        virtualinvoke r0.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: void close(ucar.nc2.NetcdfFile)>($r2);

        return null;

     label03:
        $r4 = virtualinvoke r0.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: ucar.nc2.Variable findVariable(ucar.nc2.NetcdfFile,ucar.nc2.Variable)>($r2, r3);

        if $r4 != null goto label05;

        $r20 = <ucar.nc2.ncml.Aggregation: org.slf4j.Logger logger>;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AggOuterDimension cant find ");

        $r22 = virtualinvoke r3.<ucar.nc2.Variable: java.lang.String getName()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r25 = virtualinvoke $r2.<ucar.nc2.NetcdfFile: java.lang.String getLocation()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; return all zeroes!!!");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r20.<org.slf4j.Logger: void error(java.lang.String)>($r28);

        $r29 = virtualinvoke r3.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        $r30 = new ucar.ma2.Section;

        specialinvoke $r30.<ucar.ma2.Section: void <init>(java.util.List)>(r34);

        $r31 = virtualinvoke $r30.<ucar.ma2.Section: int[] getShape()>();

        $r32 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(ucar.ma2.DataType,int[])>($r29, $r31);

     label04:
        virtualinvoke r0.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: void close(ucar.nc2.NetcdfFile)>($r2);

        return $r32;

     label05:
        $z0 = <ucar.nc2.ncml.Aggregation: boolean debugRead>;

        if $z0 == 0 goto label06;

        $r11 = new ucar.ma2.Section;

        specialinvoke $r11.<ucar.ma2.Section: void <init>(java.util.List)>(r34);

        $r13 = <java.lang.System: java.io.PrintStream out>;

        $r12 = newarray (java.lang.Object)[4];

        $r12[0] = $r11;

        $r14 = virtualinvoke r3.<ucar.nc2.Variable: java.lang.String getNameAndDimensions()>();

        $r12[1] = $r14;

        $r15 = virtualinvoke $r4.<ucar.nc2.Variable: java.lang.String getNameAndDimensions()>();

        $r12[2] = $r15;

        $r16 = virtualinvoke r0.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: java.lang.String getLocation()>();

        $r12[3] = $r16;

        virtualinvoke $r13.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("AggOuter.read(%s) %s from %s in %s%n", $r12);

     label06:
        $r5 = virtualinvoke $r4.<ucar.nc2.Variable: java.util.List getRanges()>();

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(0);

        $r17 = (ucar.ma2.Range) $r6;

        $r7 = interfaceinvoke r34.<java.util.List: java.lang.Object get(int)>(0);

        $r18 = (ucar.ma2.Range) $r7;

        $i0 = virtualinvoke $r17.<ucar.ma2.Range: int last()>();

        $i1 = virtualinvoke $r18.<ucar.ma2.Range: int last()>();

        if $i0 >= $i1 goto label07;

        $r9 = new ucar.ma2.Range;

        $i2 = virtualinvoke $r18.<ucar.ma2.Range: int first()>();

        $i3 = virtualinvoke $r17.<ucar.ma2.Range: int last()>();

        $i4 = virtualinvoke $r18.<ucar.ma2.Range: int stride()>();

        specialinvoke $r9.<ucar.ma2.Range: void <init>(int,int,int)>($i2, $i3, $i4);

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>(java.util.Collection)>(r34);

        r34 = $r10;

        interfaceinvoke $r10.<java.util.List: java.lang.Object set(int,java.lang.Object)>(0, $r9);

     label07:
        $r8 = virtualinvoke $r4.<ucar.nc2.Variable: ucar.ma2.Array read(java.util.List)>(r34);

     label08:
        virtualinvoke r0.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: void close(ucar.nc2.NetcdfFile)>($r2);

        return $r8;

     label09:
        $r33 := @caughtexception;

     label10:
        virtualinvoke r0.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: void close(ucar.nc2.NetcdfFile)>(r35);

        throw $r33;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public int compareTo(java.lang.Object)
    {
        ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension r0, r3;
        java.util.Date $r1, $r4, $r5;
        int $i0, $i1;
        java.lang.Object r2;

        r0 := @this: ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension;

        r2 := @parameter0: java.lang.Object;

        $r1 = r0.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: java.util.Date coordValueDate>;

        if $r1 != null goto label1;

        $i1 = specialinvoke r0.<ucar.nc2.ncml.Aggregation$Dataset: int compareTo(java.lang.Object)>(r2);

        return $i1;

     label1:
        r3 = (ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension) r2;

        $r5 = r0.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: java.util.Date coordValueDate>;

        $r4 = r3.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: java.util.Date coordValueDate>;

        $i0 = virtualinvoke $r5.<java.util.Date: int compareTo(java.util.Date)>($r4);

        return $i0;
    }

    static int access$000(ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension)
    {
        int $i0;
        ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension r0;

        r0 := @parameter0: ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension;

        $i0 = r0.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: int aggStart>;

        return $i0;
    }

    static int access$100(ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension)
    {
        int $i0;
        ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension r0;

        r0 := @parameter0: ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension;

        $i0 = r0.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: int aggEnd>;

        return $i0;
    }
}
