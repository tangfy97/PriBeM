public abstract class org.apache.pdfbox.pdmodel.font.PDFontDescriptor extends java.lang.Object
{
    private static final int FLAG_FIXED_PITCH;
    private static final int FLAG_SERIF;
    private static final int FLAG_SYMBOLIC;
    private static final int FLAG_SCRIPT;
    private static final int FLAG_NON_SYMBOLIC;
    private static final int FLAG_ITALIC;
    private static final int FLAG_ALL_CAP;
    private static final int FLAG_SMALL_CAP;
    private static final int FLAG_FORCE_BOLD;

    public void <init>()
    {
        org.apache.pdfbox.pdmodel.font.PDFontDescriptor r0;

        r0 := @this: org.apache.pdfbox.pdmodel.font.PDFontDescriptor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract java.lang.String getFontName();

    public abstract void setFontName(java.lang.String);

    public abstract java.lang.String getFontFamily();

    public abstract void setFontFamily(java.lang.String);

    public abstract java.lang.String getFontStretch();

    public abstract void setFontStretch(java.lang.String);

    public abstract float getFontWeight();

    public abstract void setFontWeight(float);

    public abstract int getFlags();

    public abstract void setFlags(int);

    public boolean isFixedPitch()
    {
        org.apache.pdfbox.pdmodel.font.PDFontDescriptor r0;
        boolean $z0;

        r0 := @this: org.apache.pdfbox.pdmodel.font.PDFontDescriptor;

        $z0 = specialinvoke r0.<org.apache.pdfbox.pdmodel.font.PDFontDescriptor: boolean isFlagBitOn(int)>(1);

        return $z0;
    }

    public void setFixedPitch(boolean)
    {
        org.apache.pdfbox.pdmodel.font.PDFontDescriptor r0;
        boolean z0;

        r0 := @this: org.apache.pdfbox.pdmodel.font.PDFontDescriptor;

        z0 := @parameter0: boolean;

        specialinvoke r0.<org.apache.pdfbox.pdmodel.font.PDFontDescriptor: void setFlagBit(int,boolean)>(1, z0);

        return;
    }

    public boolean isSerif()
    {
        org.apache.pdfbox.pdmodel.font.PDFontDescriptor r0;
        boolean $z0;

        r0 := @this: org.apache.pdfbox.pdmodel.font.PDFontDescriptor;

        $z0 = specialinvoke r0.<org.apache.pdfbox.pdmodel.font.PDFontDescriptor: boolean isFlagBitOn(int)>(2);

        return $z0;
    }

    public void setSerif(boolean)
    {
        org.apache.pdfbox.pdmodel.font.PDFontDescriptor r0;
        boolean z0;

        r0 := @this: org.apache.pdfbox.pdmodel.font.PDFontDescriptor;

        z0 := @parameter0: boolean;

        specialinvoke r0.<org.apache.pdfbox.pdmodel.font.PDFontDescriptor: void setFlagBit(int,boolean)>(2, z0);

        return;
    }

    public boolean isSymbolic()
    {
        org.apache.pdfbox.pdmodel.font.PDFontDescriptor r0;
        boolean $z0;

        r0 := @this: org.apache.pdfbox.pdmodel.font.PDFontDescriptor;

        $z0 = specialinvoke r0.<org.apache.pdfbox.pdmodel.font.PDFontDescriptor: boolean isFlagBitOn(int)>(4);

        return $z0;
    }

    public void setSymbolic(boolean)
    {
        org.apache.pdfbox.pdmodel.font.PDFontDescriptor r0;
        boolean z0;

        r0 := @this: org.apache.pdfbox.pdmodel.font.PDFontDescriptor;

        z0 := @parameter0: boolean;

        specialinvoke r0.<org.apache.pdfbox.pdmodel.font.PDFontDescriptor: void setFlagBit(int,boolean)>(4, z0);

        return;
    }

    public boolean isScript()
    {
        org.apache.pdfbox.pdmodel.font.PDFontDescriptor r0;
        boolean $z0;

        r0 := @this: org.apache.pdfbox.pdmodel.font.PDFontDescriptor;

        $z0 = specialinvoke r0.<org.apache.pdfbox.pdmodel.font.PDFontDescriptor: boolean isFlagBitOn(int)>(8);

        return $z0;
    }

    public void setScript(boolean)
    {
        org.apache.pdfbox.pdmodel.font.PDFontDescriptor r0;
        boolean z0;

        r0 := @this: org.apache.pdfbox.pdmodel.font.PDFontDescriptor;

        z0 := @parameter0: boolean;

        specialinvoke r0.<org.apache.pdfbox.pdmodel.font.PDFontDescriptor: void setFlagBit(int,boolean)>(8, z0);

        return;
    }

    public boolean isNonSymbolic()
    {
        org.apache.pdfbox.pdmodel.font.PDFontDescriptor r0;
        boolean $z0;

        r0 := @this: org.apache.pdfbox.pdmodel.font.PDFontDescriptor;

        $z0 = specialinvoke r0.<org.apache.pdfbox.pdmodel.font.PDFontDescriptor: boolean isFlagBitOn(int)>(32);

        return $z0;
    }

    public void setNonSymbolic(boolean)
    {
        org.apache.pdfbox.pdmodel.font.PDFontDescriptor r0;
        boolean z0;

        r0 := @this: org.apache.pdfbox.pdmodel.font.PDFontDescriptor;

        z0 := @parameter0: boolean;

        specialinvoke r0.<org.apache.pdfbox.pdmodel.font.PDFontDescriptor: void setFlagBit(int,boolean)>(32, z0);

        return;
    }

    public boolean isItalic()
    {
        org.apache.pdfbox.pdmodel.font.PDFontDescriptor r0;
        boolean $z0;

        r0 := @this: org.apache.pdfbox.pdmodel.font.PDFontDescriptor;

        $z0 = specialinvoke r0.<org.apache.pdfbox.pdmodel.font.PDFontDescriptor: boolean isFlagBitOn(int)>(64);

        return $z0;
    }

    public void setItalic(boolean)
    {
        org.apache.pdfbox.pdmodel.font.PDFontDescriptor r0;
        boolean z0;

        r0 := @this: org.apache.pdfbox.pdmodel.font.PDFontDescriptor;

        z0 := @parameter0: boolean;

        specialinvoke r0.<org.apache.pdfbox.pdmodel.font.PDFontDescriptor: void setFlagBit(int,boolean)>(64, z0);

        return;
    }

    public boolean isAllCap()
    {
        org.apache.pdfbox.pdmodel.font.PDFontDescriptor r0;
        boolean $z0;

        r0 := @this: org.apache.pdfbox.pdmodel.font.PDFontDescriptor;

        $z0 = specialinvoke r0.<org.apache.pdfbox.pdmodel.font.PDFontDescriptor: boolean isFlagBitOn(int)>(65536);

        return $z0;
    }

    public void setAllCap(boolean)
    {
        org.apache.pdfbox.pdmodel.font.PDFontDescriptor r0;
        boolean z0;

        r0 := @this: org.apache.pdfbox.pdmodel.font.PDFontDescriptor;

        z0 := @parameter0: boolean;

        specialinvoke r0.<org.apache.pdfbox.pdmodel.font.PDFontDescriptor: void setFlagBit(int,boolean)>(65536, z0);

        return;
    }

    public boolean isSmallCap()
    {
        org.apache.pdfbox.pdmodel.font.PDFontDescriptor r0;
        boolean $z0;

        r0 := @this: org.apache.pdfbox.pdmodel.font.PDFontDescriptor;

        $z0 = specialinvoke r0.<org.apache.pdfbox.pdmodel.font.PDFontDescriptor: boolean isFlagBitOn(int)>(131072);

        return $z0;
    }

    public void setSmallCap(boolean)
    {
        org.apache.pdfbox.pdmodel.font.PDFontDescriptor r0;
        boolean z0;

        r0 := @this: org.apache.pdfbox.pdmodel.font.PDFontDescriptor;

        z0 := @parameter0: boolean;

        specialinvoke r0.<org.apache.pdfbox.pdmodel.font.PDFontDescriptor: void setFlagBit(int,boolean)>(131072, z0);

        return;
    }

    public boolean isForceBold()
    {
        org.apache.pdfbox.pdmodel.font.PDFontDescriptor r0;
        boolean $z0;

        r0 := @this: org.apache.pdfbox.pdmodel.font.PDFontDescriptor;

        $z0 = specialinvoke r0.<org.apache.pdfbox.pdmodel.font.PDFontDescriptor: boolean isFlagBitOn(int)>(262144);

        return $z0;
    }

    public void setForceBold(boolean)
    {
        org.apache.pdfbox.pdmodel.font.PDFontDescriptor r0;
        boolean z0;

        r0 := @this: org.apache.pdfbox.pdmodel.font.PDFontDescriptor;

        z0 := @parameter0: boolean;

        specialinvoke r0.<org.apache.pdfbox.pdmodel.font.PDFontDescriptor: void setFlagBit(int,boolean)>(262144, z0);

        return;
    }

    private boolean isFlagBitOn(int)
    {
        int $i0, i1, $i2;
        org.apache.pdfbox.pdmodel.font.PDFontDescriptor r0;
        boolean $z0;

        r0 := @this: org.apache.pdfbox.pdmodel.font.PDFontDescriptor;

        i1 := @parameter0: int;

        $i0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDFontDescriptor: int getFlags()>();

        $i2 = $i0 & i1;

        if $i2 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private void setFlagBit(int, boolean)
    {
        int $i0, i1, $i2, i3, $i5;
        org.apache.pdfbox.pdmodel.font.PDFontDescriptor r0;
        boolean z0;

        r0 := @this: org.apache.pdfbox.pdmodel.font.PDFontDescriptor;

        i1 := @parameter0: int;

        z0 := @parameter1: boolean;

        $i0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDFontDescriptor: int getFlags()>();

        if z0 == 0 goto label1;

        i3 = $i0 | i1;

        goto label2;

     label1:
        $i5 = (int) -1;

        $i2 = $i5 ^ i1;

        i3 = $i0 & $i2;

     label2:
        virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDFontDescriptor: void setFlags(int)>(i3);

        return;
    }

    public abstract org.apache.pdfbox.pdmodel.common.PDRectangle getFontBoundingBox();

    public abstract void setFontBoundingBox(org.apache.pdfbox.pdmodel.common.PDRectangle);

    public abstract float getItalicAngle();

    public abstract void setItalicAngle(float);

    public abstract float getAscent();

    public abstract void setAscent(float);

    public abstract float getDescent();

    public abstract void setDescent(float);

    public abstract float getLeading();

    public abstract void setLeading(float);

    public abstract float getCapHeight();

    public abstract void setCapHeight(float);

    public abstract float getXHeight();

    public abstract void setXHeight(float);

    public abstract float getStemV();

    public abstract void setStemV(float);

    public abstract float getStemH();

    public abstract void setStemH(float);

    public abstract float getAverageWidth() throws java.io.IOException;

    public abstract void setAverageWidth(float);

    public abstract float getMaxWidth();

    public abstract void setMaxWidth(float);

    public abstract java.lang.String getCharSet();

    public abstract void setCharacterSet(java.lang.String);

    public abstract float getMissingWidth();

    public abstract void setMissingWidth(float);

    public static void <clinit>()
    {
        <org.apache.pdfbox.pdmodel.font.PDFontDescriptor: int FLAG_FORCE_BOLD> = 262144;

        <org.apache.pdfbox.pdmodel.font.PDFontDescriptor: int FLAG_SMALL_CAP> = 131072;

        <org.apache.pdfbox.pdmodel.font.PDFontDescriptor: int FLAG_ALL_CAP> = 65536;

        <org.apache.pdfbox.pdmodel.font.PDFontDescriptor: int FLAG_ITALIC> = 64;

        <org.apache.pdfbox.pdmodel.font.PDFontDescriptor: int FLAG_NON_SYMBOLIC> = 32;

        <org.apache.pdfbox.pdmodel.font.PDFontDescriptor: int FLAG_SCRIPT> = 8;

        <org.apache.pdfbox.pdmodel.font.PDFontDescriptor: int FLAG_SYMBOLIC> = 4;

        <org.apache.pdfbox.pdmodel.font.PDFontDescriptor: int FLAG_SERIF> = 2;

        <org.apache.pdfbox.pdmodel.font.PDFontDescriptor: int FLAG_FIXED_PITCH> = 1;

        return;
    }
}
