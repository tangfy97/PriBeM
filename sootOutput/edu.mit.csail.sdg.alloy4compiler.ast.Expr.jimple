public abstract class edu.mit.csail.sdg.alloy4compiler.ast.Expr extends edu.mit.csail.sdg.alloy4compiler.ast.Browsable
{
    public final edu.mit.csail.sdg.alloy4.Pos pos;
    public final edu.mit.csail.sdg.alloy4.Pos closingBracket;
    final edu.mit.csail.sdg.alloy4compiler.ast.Type type;
    public final edu.mit.csail.sdg.alloy4.JoinableList errors;
    public final int mult;
    public final long weight;
    public final boolean ambiguous;
    static final edu.mit.csail.sdg.alloy4.JoinableList emptyListOfErrors;
    private static final edu.mit.csail.sdg.alloy4compiler.ast.VisitQuery hasCall;

    public final edu.mit.csail.sdg.alloy4compiler.ast.Type type()
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Type $r1;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r1 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        return $r1;
    }

    void <init>(edu.mit.csail.sdg.alloy4.Pos, edu.mit.csail.sdg.alloy4.Pos, boolean, edu.mit.csail.sdg.alloy4compiler.ast.Type, int, long, edu.mit.csail.sdg.alloy4.JoinableList)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Type r3, $r4, $r9;
        edu.mit.csail.sdg.alloy4.ErrorType $r10;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0;
        long l2, $l6;
        edu.mit.csail.sdg.alloy4.JoinableList r6;
        byte $b3;
        int i0, $i1, $i4, $i5, $i7;
        boolean z0;
        edu.mit.csail.sdg.alloy4.Pos r1, r2, $r7, $r8;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r1 := @parameter0: edu.mit.csail.sdg.alloy4.Pos;

        r2 := @parameter1: edu.mit.csail.sdg.alloy4.Pos;

        z0 := @parameter2: boolean;

        r3 := @parameter3: edu.mit.csail.sdg.alloy4compiler.ast.Type;

        i0 := @parameter4: int;

        l2 := @parameter5: long;

        r6 := @parameter6: edu.mit.csail.sdg.alloy4.JoinableList;

        specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Browsable: void <init>()>();

        if r1 != null goto label01;

        $r7 = <edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos UNKNOWN>;

        goto label02;

     label01:
        $r7 = r1;

     label02:
        r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos pos> = $r7;

        if r2 != null goto label03;

        $r8 = <edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos UNKNOWN>;

        goto label04;

     label03:
        $r8 = r2;

     label04:
        r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos closingBracket> = $r8;

        r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: boolean ambiguous> = z0;

        if r6 != null goto label05;

        r6 = <edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.JoinableList emptyListOfErrors>;

     label05:
        $r4 = <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type EMPTY>;

        if r3 != $r4 goto label06;

        $i4 = virtualinvoke r6.<edu.mit.csail.sdg.alloy4.JoinableList: int size()>();

        if $i4 != 0 goto label06;

        $r10 = new edu.mit.csail.sdg.alloy4.ErrorType;

        specialinvoke $r10.<edu.mit.csail.sdg.alloy4.ErrorType: void <init>(edu.mit.csail.sdg.alloy4.Pos,java.lang.String)>(r1, "This expression failed to be typechecked");

        r6 = virtualinvoke r6.<edu.mit.csail.sdg.alloy4.JoinableList: edu.mit.csail.sdg.alloy4.JoinableList make(java.lang.Object)>($r10);

     label06:
        if i0 < 0 goto label07;

        if i0 <= 2 goto label08;

     label07:
        $i5 = 0;

        goto label09;

     label08:
        $i5 = i0;

     label09:
        r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: int mult> = $i5;

        $i1 = virtualinvoke r6.<edu.mit.csail.sdg.alloy4.JoinableList: int size()>();

        if $i1 > 0 goto label10;

        if r3 != null goto label11;

     label10:
        $r9 = <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type EMPTY>;

        goto label12;

     label11:
        $r9 = r3;

     label12:
        r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type> = $r9;

        $b3 = l2 cmp 0L;

        $i7 = (int) $b3;

        if $i7 <= 0 goto label13;

        $l6 = l2;

        goto label14;

     label13:
        $l6 = 0L;

     label14:
        r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: long weight> = $l6;

        r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.JoinableList errors> = r6;

        return;
    }

    void <init>(edu.mit.csail.sdg.alloy4.Pos, edu.mit.csail.sdg.alloy4compiler.ast.Type)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Type r4, $r6, $r8;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0;
        edu.mit.csail.sdg.alloy4.JoinableList $r2;
        edu.mit.csail.sdg.alloy4.Pos $r1, r3, $r7;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig $r5;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r3 := @parameter0: edu.mit.csail.sdg.alloy4.Pos;

        r4 := @parameter1: edu.mit.csail.sdg.alloy4compiler.ast.Type;

        specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Browsable: void <init>()>();

        $r1 = <edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos UNKNOWN>;

        r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos closingBracket> = $r1;

        r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: boolean ambiguous> = 0;

        $r2 = <edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.JoinableList emptyListOfErrors>;

        r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.JoinableList errors> = $r2;

        if r3 != null goto label1;

        $r7 = <edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos UNKNOWN>;

        goto label2;

     label1:
        $r7 = r3;

     label2:
        r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos pos> = $r7;

        if r4 == null goto label3;

        $r6 = <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type EMPTY>;

        if r4 != $r6 goto label4;

     label3:
        $r5 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig) r0;

        $r8 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type make(edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig)>($r5);

        goto label5;

     label4:
        $r8 = r4;

     label5:
        r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type> = $r8;

        r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: int mult> = 0;

        r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: long weight> = 0L;

        return;
    }

    public final edu.mit.csail.sdg.alloy4.Pos pos()
    {
        edu.mit.csail.sdg.alloy4.Pos $r1;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r1 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos pos>;

        return $r1;
    }

    public abstract void toString(java.lang.StringBuilder, int);

    public java.lang.String toString()
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r1;
        int $i1;
        java.lang.StringBuilder $r3;
        java.lang.String $r2;

        r1 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $i1 = (int) -1;

        virtualinvoke r1.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: void toString(java.lang.StringBuilder,int)>($r3, $i1);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public final int hashCode()
    {
        int $i0;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $i0 = specialinvoke r0.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    public final boolean equals(java.lang.Object)
    {
        java.lang.Object r1;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0;
        boolean $z0;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    abstract java.lang.Object accept(edu.mit.csail.sdg.alloy4compiler.ast.VisitReturn) throws edu.mit.csail.sdg.alloy4.Err;

    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr typecheck_as_formula()
    {
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op $r9;
        edu.mit.csail.sdg.alloy4compiler.ast.Type $r2, $r5;
        edu.mit.csail.sdg.alloy4.ErrorType $r8;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, $r11;
        edu.mit.csail.sdg.alloy4.JoinableList $r1;
        edu.mit.csail.sdg.alloy4.Pos $r10;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.String $r7;
        boolean $z0, $z1;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r1 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.JoinableList errors>;

        $z0 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4.JoinableList: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $z1 = $r2.<edu.mit.csail.sdg.alloy4compiler.ast.Type: boolean is_bool>;

        if $z1 == 0 goto label2;

     label1:
        return r0;

     label2:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("This must be a formula expression.\nInstead, it has the following possible type(s):\n");

        $r5 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op NOOP>;

        $r8 = new edu.mit.csail.sdg.alloy4.ErrorType;

        $r10 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        specialinvoke $r8.<edu.mit.csail.sdg.alloy4.ErrorType: void <init>(edu.mit.csail.sdg.alloy4.Pos,java.lang.String)>($r10, $r7);

        $r11 = virtualinvoke $r9.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4.Err,long)>(null, r0, $r8, 0L);

        return $r11;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr typecheck_as_int()
    {
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op $r12;
        edu.mit.csail.sdg.alloy4compiler.ast.Type $r2, $r4, $r5, $r8;
        edu.mit.csail.sdg.alloy4.ErrorType $r11;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, $r14, $r15;
        edu.mit.csail.sdg.alloy4.JoinableList $r1;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig $r3;
        java.lang.String $r10;
        boolean $z0, $z1, $z2;
        edu.mit.csail.sdg.alloy4.Pos $r13;
        java.lang.StringBuilder $r6, $r7, $r9;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r1 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.JoinableList errors>;

        $z0 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4.JoinableList: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $z1 = $r2.<edu.mit.csail.sdg.alloy4compiler.ast.Type: boolean is_int>;

        if $z1 == 0 goto label2;

     label1:
        return r0;

     label2:
        $r5 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $r3 = <edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig SIGINT>;

        $r4 = $r3.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $z2 = virtualinvoke $r5.<edu.mit.csail.sdg.alloy4compiler.ast.Type: boolean intersects(edu.mit.csail.sdg.alloy4compiler.ast.Type)>($r4);

        if $z2 == 0 goto label3;

        $r15 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr cast2int()>();

        return $r15;

     label3:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("This must be an integer expression.\nInstead, it has the following possible type(s):\n");

        $r8 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op NOOP>;

        $r11 = new edu.mit.csail.sdg.alloy4.ErrorType;

        $r13 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        specialinvoke $r11.<edu.mit.csail.sdg.alloy4.ErrorType: void <init>(edu.mit.csail.sdg.alloy4.Pos,java.lang.String)>($r13, $r10);

        $r14 = virtualinvoke $r12.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4.Err,long)>(null, r0, $r11, 0L);

        return $r14;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr typecheck_as_set()
    {
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op $r10;
        edu.mit.csail.sdg.alloy4compiler.ast.Type $r2, $r3, $r6;
        edu.mit.csail.sdg.alloy4.ErrorType $r9;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, $r12, $r13;
        edu.mit.csail.sdg.alloy4.JoinableList $r1;
        int $i0;
        java.lang.String $r8;
        boolean $z0, $z1;
        edu.mit.csail.sdg.alloy4.Pos $r11;
        java.lang.StringBuilder $r4, $r5, $r7;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r1 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.JoinableList errors>;

        $z0 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4.JoinableList: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $i0 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4compiler.ast.Type: int size()>();

        if $i0 <= 0 goto label2;

     label1:
        return r0;

     label2:
        $r3 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $z1 = $r3.<edu.mit.csail.sdg.alloy4compiler.ast.Type: boolean is_int>;

        if $z1 == 0 goto label3;

        $r13 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr cast2sigint()>();

        return $r13;

     label3:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("This must be a set or relation.\nInstead, it has the following possible type(s):\n");

        $r6 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op NOOP>;

        $r9 = new edu.mit.csail.sdg.alloy4.ErrorType;

        $r11 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        specialinvoke $r9.<edu.mit.csail.sdg.alloy4.ErrorType: void <init>(edu.mit.csail.sdg.alloy4.Pos,java.lang.String)>($r11, $r8);

        $r12 = virtualinvoke $r10.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4.Err,long)>(null, r0, $r9, 0L);

        return $r12;
    }

    public abstract edu.mit.csail.sdg.alloy4compiler.ast.Expr resolve(edu.mit.csail.sdg.alloy4compiler.ast.Type, java.util.Collection);

    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr resolve_as_formula(java.util.Collection)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Type $r3;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, $r1, $r4, $r5;
        java.util.Collection r2;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r2 := @parameter0: java.util.Collection;

        $r1 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr typecheck_as_formula()>();

        $r3 = <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type FORMULA>;

        $r4 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr resolve(edu.mit.csail.sdg.alloy4compiler.ast.Type,java.util.Collection)>($r3, r2);

        $r5 = virtualinvoke $r4.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr typecheck_as_formula()>();

        return $r5;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr resolve_as_int(java.util.Collection)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Type $r3;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, $r1, $r4, $r5;
        java.util.Collection r2;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r2 := @parameter0: java.util.Collection;

        $r1 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr typecheck_as_int()>();

        $r3 = <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type INT>;

        $r4 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr resolve(edu.mit.csail.sdg.alloy4compiler.ast.Type,java.util.Collection)>($r3, r2);

        $r5 = virtualinvoke $r4.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr typecheck_as_int()>();

        return $r5;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr resolve_as_set(java.util.Collection)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Type r2, $r3;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, $r1, $r5, $r6;
        java.util.Collection r4;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r4 := @parameter0: java.util.Collection;

        $r1 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr typecheck_as_set()>();

        r2 = $r1.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $r3 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type removesBoolAndInt(edu.mit.csail.sdg.alloy4compiler.ast.Type)>(r2);

        $r5 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr resolve(edu.mit.csail.sdg.alloy4compiler.ast.Type,java.util.Collection)>($r3, r4);

        $r6 = virtualinvoke $r5.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr typecheck_as_set()>();

        return $r6;
    }

    public boolean isSame(edu.mit.csail.sdg.alloy4compiler.ast.Expr)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op $r2, $r3;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, r5;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary $r1, $r4;
        boolean $z0, $z1;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r5 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

     label1:
        $z0 = r5 instanceof edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary;

        if $z0 == 0 goto label2;

        $r1 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary) r5;

        $r3 = $r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op op>;

        $r2 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op NOOP>;

        if $r3 != $r2 goto label2;

        $r4 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary) r5;

        r5 = $r4.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.Expr sub>;

        goto label1;

     label2:
        if r5 != r0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr deNOP()
    {
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op $r2, $r3;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, r5;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary $r1, $r4;
        boolean $z0;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r5 = r0;

     label1:
        $z0 = r5 instanceof edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary;

        if $z0 == 0 goto label2;

        $r1 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary) r5;

        $r3 = $r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op op>;

        $r2 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op NOOP>;

        if $r3 != $r2 goto label2;

        $r4 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary) r5;

        r5 = $r4.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.Expr sub>;

        goto label1;

     label2:
        return r5;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op mult()
    {
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op $r1, r3, $r4, $r5, $r6, $r7, $r8;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, r10;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary $r2, $r9;
        boolean $z0;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r10 = r0;

     label1:
        $z0 = r10 instanceof edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary;

        if $z0 == 0 goto label4;

        $r2 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary) r10;

        r3 = $r2.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op op>;

        $r4 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op NOOP>;

        if r3 != $r4 goto label2;

        $r9 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary) r10;

        r10 = $r9.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.Expr sub>;

        goto label1;

     label2:
        $r5 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op ONEOF>;

        if r3 == $r5 goto label3;

        $r6 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op LONEOF>;

        if r3 == $r6 goto label3;

        $r7 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op SOMEOF>;

        if r3 == $r7 goto label3;

        $r8 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op EXACTLYOF>;

        if r3 != $r8 goto label4;

     label3:
        return r3;

     label4:
        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op SETOF>;

        return $r1;
    }

    final boolean hasCall()
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0;
        edu.mit.csail.sdg.alloy4compiler.ast.VisitQuery $r1;
        edu.mit.csail.sdg.alloy4.JoinableList $r3;
        edu.mit.csail.sdg.alloy4.Err $r4;
        java.lang.Object $r2;
        boolean $z0, $z1, z3, $z4, $z5, $z6;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $z0 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: boolean ambiguous>;

        if $z0 != 0 goto label1;

        $r3 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.JoinableList errors>;

        $z1 = virtualinvoke $r3.<edu.mit.csail.sdg.alloy4.JoinableList: boolean isEmpty()>();

        if $z1 == 0 goto label1;

        $z6 = 1;

        $z5 = 1;

        goto label2;

     label1:
        $z6 = 0;

        $z5 = 0;

     label2:
        z3 = $z6;

        if $z5 == 0 goto label8;

     label3:
        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.VisitQuery hasCall>;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: java.lang.Object accept(edu.mit.csail.sdg.alloy4compiler.ast.VisitReturn)>($r1);

        if $r2 == null goto label4;

        $z4 = 1;

        goto label5;

     label4:
        $z4 = 0;

     label5:
        z3 = $z4;

     label6:
        goto label8;

     label7:
        $r4 := @caughtexception;

        z3 = 0;

     label8:
        return z3;

        catch edu.mit.csail.sdg.alloy4.Err from label3 to label6 with label7;
    }

    public final boolean hasVar(edu.mit.csail.sdg.alloy4compiler.ast.ExprVar)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0;
        edu.mit.csail.sdg.alloy4.JoinableList $r1;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr$2 $r2;
        edu.mit.csail.sdg.alloy4.Err $r5;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprVar r3;
        java.lang.Object $r4;
        boolean $z0, $z1, $z2;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r3 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.ExprVar;

        $z0 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: boolean ambiguous>;

        if $z0 != 0 goto label1;

        $r1 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.JoinableList errors>;

        $z1 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4.JoinableList: boolean isEmpty()>();

        if $z1 != 0 goto label2;

     label1:
        return 0;

     label2:
        $r2 = new edu.mit.csail.sdg.alloy4compiler.ast.Expr$2;

        specialinvoke $r2.<edu.mit.csail.sdg.alloy4compiler.ast.Expr$2: void <init>(edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4compiler.ast.ExprVar)>(r0, r3);

     label3:
        $r4 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: java.lang.Object accept(edu.mit.csail.sdg.alloy4compiler.ast.VisitReturn)>($r2);

        if $r4 == null goto label4;

        $z2 = 1;

        goto label5;

     label4:
        $z2 = 0;

     label5:
        goto label7;

     label6:
        $r5 := @caughtexception;

        return 0;

     label7:
        return $z2;

        catch edu.mit.csail.sdg.alloy4.Err from label3 to label5 with label6;
    }

    public final java.lang.Iterable findAllFunctions()
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r3, $r6;
        java.util.ArrayList $r1;
        edu.mit.csail.sdg.alloy4compiler.ast.Func $r5;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr$3 $r2;
        edu.mit.csail.sdg.alloy4.Err $r7;
        int $i0, $i1;
        java.lang.Object $r4;
        java.util.LinkedHashSet $r0;
        boolean $z0;

        r3 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r0 = new java.util.LinkedHashSet;

        specialinvoke $r0.<java.util.LinkedHashSet: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r2 = new edu.mit.csail.sdg.alloy4compiler.ast.Expr$3;

        specialinvoke $r2.<edu.mit.csail.sdg.alloy4compiler.ast.Expr$3: void <init>(edu.mit.csail.sdg.alloy4compiler.ast.Expr,java.util.LinkedHashSet,java.util.List)>(r3, $r0, $r1);

     label1:
        virtualinvoke $r2.<edu.mit.csail.sdg.alloy4compiler.ast.VisitQuery: java.lang.Object visitThis(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>(r3);

     label2:
        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label3;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i1 = $i0 - 1;

        $r4 = interfaceinvoke $r1.<java.util.List: java.lang.Object remove(int)>($i1);

        $r5 = (edu.mit.csail.sdg.alloy4compiler.ast.Func) $r4;

        $r6 = virtualinvoke $r5.<edu.mit.csail.sdg.alloy4compiler.ast.Func: edu.mit.csail.sdg.alloy4compiler.ast.Expr getBody()>();

        virtualinvoke $r2.<edu.mit.csail.sdg.alloy4compiler.ast.VisitQuery: java.lang.Object visitThis(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r6);

        goto label2;

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

     label5:
        return $r0;

        catch edu.mit.csail.sdg.alloy4.Err from label1 to label3 with label4;
    }

    public abstract int getDepth();

    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr and(edu.mit.csail.sdg.alloy4compiler.ast.Expr)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, r1, $r6;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op $r2;
        edu.mit.csail.sdg.alloy4.Pos $r3, $r4, $r5;

        r1 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r0 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        if r0 != null goto label1;

        $r6 = r1;

        goto label2;

     label1:
        $r2 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op AND>;

        $r3 = virtualinvoke r1.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r4 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r5 = virtualinvoke $r3.<edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos merge(edu.mit.csail.sdg.alloy4.Pos)>($r4);

        $r6 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r5, null, r1, r0);

     label2:
        return $r6;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr or(edu.mit.csail.sdg.alloy4compiler.ast.Expr)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, r1, $r6;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op $r2;
        edu.mit.csail.sdg.alloy4.Pos $r3, $r4, $r5;

        r1 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r0 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        if r0 != null goto label1;

        $r6 = r1;

        goto label2;

     label1:
        $r2 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op OR>;

        $r3 = virtualinvoke r1.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r4 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r5 = virtualinvoke $r3.<edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos merge(edu.mit.csail.sdg.alloy4.Pos)>($r4);

        $r6 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r5, null, r1, r0);

     label2:
        return $r6;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr iff(edu.mit.csail.sdg.alloy4compiler.ast.Expr)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, r3, $r6;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op $r1;
        edu.mit.csail.sdg.alloy4.Pos $r2, $r4, $r5;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r3 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op IFF>;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r4 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r5 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos merge(edu.mit.csail.sdg.alloy4.Pos)>($r4);

        $r6 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r5, null, r0, r3);

        return $r6;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr implies(edu.mit.csail.sdg.alloy4compiler.ast.Expr)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, r3, $r6;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op $r1;
        edu.mit.csail.sdg.alloy4.Pos $r2, $r4, $r5;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r3 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op IMPLIES>;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r4 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r5 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos merge(edu.mit.csail.sdg.alloy4.Pos)>($r4);

        $r6 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r5, null, r0, r3);

        return $r6;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr join(edu.mit.csail.sdg.alloy4compiler.ast.Expr)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, r3, $r6;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op $r1;
        edu.mit.csail.sdg.alloy4.Pos $r2, $r4, $r5;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r3 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op JOIN>;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r4 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r5 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos merge(edu.mit.csail.sdg.alloy4.Pos)>($r4);

        $r6 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r5, null, r0, r3);

        return $r6;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr domain(edu.mit.csail.sdg.alloy4compiler.ast.Expr)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, r3, $r6;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op $r1;
        edu.mit.csail.sdg.alloy4.Pos $r2, $r4, $r5;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r3 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op DOMAIN>;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r4 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r5 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos merge(edu.mit.csail.sdg.alloy4.Pos)>($r4);

        $r6 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r5, null, r0, r3);

        return $r6;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr range(edu.mit.csail.sdg.alloy4compiler.ast.Expr)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, r3, $r6;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op $r1;
        edu.mit.csail.sdg.alloy4.Pos $r2, $r4, $r5;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r3 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op RANGE>;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r4 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r5 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos merge(edu.mit.csail.sdg.alloy4.Pos)>($r4);

        $r6 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r5, null, r0, r3);

        return $r6;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr intersect(edu.mit.csail.sdg.alloy4compiler.ast.Expr)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, r3, $r6;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op $r1;
        edu.mit.csail.sdg.alloy4.Pos $r2, $r4, $r5;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r3 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op INTERSECT>;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r4 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r5 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos merge(edu.mit.csail.sdg.alloy4.Pos)>($r4);

        $r6 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r5, null, r0, r3);

        return $r6;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr override(edu.mit.csail.sdg.alloy4compiler.ast.Expr)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, r3, $r6;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op $r1;
        edu.mit.csail.sdg.alloy4.Pos $r2, $r4, $r5;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r3 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op PLUSPLUS>;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r4 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r5 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos merge(edu.mit.csail.sdg.alloy4.Pos)>($r4);

        $r6 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r5, null, r0, r3);

        return $r6;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr plus(edu.mit.csail.sdg.alloy4compiler.ast.Expr)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, r1, $r6;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op $r2;
        edu.mit.csail.sdg.alloy4.Pos $r3, $r4, $r5;

        r1 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r0 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        if r0 != null goto label1;

        $r6 = r1;

        goto label2;

     label1:
        $r2 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op PLUS>;

        $r3 = virtualinvoke r1.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r4 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r5 = virtualinvoke $r3.<edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos merge(edu.mit.csail.sdg.alloy4.Pos)>($r4);

        $r6 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r5, null, r1, r0);

     label2:
        return $r6;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr minus(edu.mit.csail.sdg.alloy4compiler.ast.Expr)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, r3, $r6;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op $r1;
        edu.mit.csail.sdg.alloy4.Pos $r2, $r4, $r5;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r3 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op MINUS>;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r4 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r5 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos merge(edu.mit.csail.sdg.alloy4.Pos)>($r4);

        $r6 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r5, null, r0, r3);

        return $r6;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr mul(edu.mit.csail.sdg.alloy4compiler.ast.Expr)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, r3, $r6;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op $r1;
        edu.mit.csail.sdg.alloy4.Pos $r2, $r4, $r5;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r3 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op MUL>;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r4 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r5 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos merge(edu.mit.csail.sdg.alloy4.Pos)>($r4);

        $r6 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r5, null, r0, r3);

        return $r6;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr div(edu.mit.csail.sdg.alloy4compiler.ast.Expr)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, r3, $r6;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op $r1;
        edu.mit.csail.sdg.alloy4.Pos $r2, $r4, $r5;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r3 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op DIV>;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r4 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r5 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos merge(edu.mit.csail.sdg.alloy4.Pos)>($r4);

        $r6 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r5, null, r0, r3);

        return $r6;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr rem(edu.mit.csail.sdg.alloy4compiler.ast.Expr)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, r3, $r6;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op $r1;
        edu.mit.csail.sdg.alloy4.Pos $r2, $r4, $r5;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r3 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op REM>;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r4 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r5 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos merge(edu.mit.csail.sdg.alloy4.Pos)>($r4);

        $r6 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r5, null, r0, r3);

        return $r6;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr equal(edu.mit.csail.sdg.alloy4compiler.ast.Expr)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, r3, $r6;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op $r1;
        edu.mit.csail.sdg.alloy4.Pos $r2, $r4, $r5;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r3 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op EQUALS>;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r4 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r5 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos merge(edu.mit.csail.sdg.alloy4.Pos)>($r4);

        $r6 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r5, null, r0, r3);

        return $r6;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr lt(edu.mit.csail.sdg.alloy4compiler.ast.Expr)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, r3, $r6;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op $r1;
        edu.mit.csail.sdg.alloy4.Pos $r2, $r4, $r5;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r3 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op LT>;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r4 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r5 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos merge(edu.mit.csail.sdg.alloy4.Pos)>($r4);

        $r6 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r5, null, r0, r3);

        return $r6;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr lte(edu.mit.csail.sdg.alloy4compiler.ast.Expr)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, r3, $r6;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op $r1;
        edu.mit.csail.sdg.alloy4.Pos $r2, $r4, $r5;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r3 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op LTE>;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r4 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r5 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos merge(edu.mit.csail.sdg.alloy4.Pos)>($r4);

        $r6 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r5, null, r0, r3);

        return $r6;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr gt(edu.mit.csail.sdg.alloy4compiler.ast.Expr)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, r3, $r6;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op $r1;
        edu.mit.csail.sdg.alloy4.Pos $r2, $r4, $r5;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r3 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op GT>;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r4 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r5 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos merge(edu.mit.csail.sdg.alloy4.Pos)>($r4);

        $r6 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r5, null, r0, r3);

        return $r6;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr gte(edu.mit.csail.sdg.alloy4compiler.ast.Expr)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, r3, $r6;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op $r1;
        edu.mit.csail.sdg.alloy4.Pos $r2, $r4, $r5;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r3 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op GTE>;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r4 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r5 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos merge(edu.mit.csail.sdg.alloy4.Pos)>($r4);

        $r6 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r5, null, r0, r3);

        return $r6;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr shl(edu.mit.csail.sdg.alloy4compiler.ast.Expr)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, r3, $r6;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op $r1;
        edu.mit.csail.sdg.alloy4.Pos $r2, $r4, $r5;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r3 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op SHL>;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r4 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r5 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos merge(edu.mit.csail.sdg.alloy4.Pos)>($r4);

        $r6 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r5, null, r0, r3);

        return $r6;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr shr(edu.mit.csail.sdg.alloy4compiler.ast.Expr)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, r3, $r6;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op $r1;
        edu.mit.csail.sdg.alloy4.Pos $r2, $r4, $r5;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r3 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op SHR>;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r4 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r5 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos merge(edu.mit.csail.sdg.alloy4.Pos)>($r4);

        $r6 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r5, null, r0, r3);

        return $r6;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr sha(edu.mit.csail.sdg.alloy4compiler.ast.Expr)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, r3, $r6;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op $r1;
        edu.mit.csail.sdg.alloy4.Pos $r2, $r4, $r5;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r3 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op SHA>;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r4 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r5 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos merge(edu.mit.csail.sdg.alloy4.Pos)>($r4);

        $r6 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r5, null, r0, r3);

        return $r6;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr in(edu.mit.csail.sdg.alloy4compiler.ast.Expr)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, r3, $r6;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op $r1;
        edu.mit.csail.sdg.alloy4.Pos $r2, $r4, $r5;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r3 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op IN>;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r4 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r5 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos merge(edu.mit.csail.sdg.alloy4.Pos)>($r4);

        $r6 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r5, null, r0, r3);

        return $r6;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr product(edu.mit.csail.sdg.alloy4compiler.ast.Expr)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, r3, $r6;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op $r1;
        edu.mit.csail.sdg.alloy4.Pos $r2, $r4, $r5;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r3 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op ARROW>;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r4 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r5 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos merge(edu.mit.csail.sdg.alloy4.Pos)>($r4);

        $r6 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r5, null, r0, r3);

        return $r6;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr any_arrow_some(edu.mit.csail.sdg.alloy4compiler.ast.Expr)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, r3, $r6;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op $r1;
        edu.mit.csail.sdg.alloy4.Pos $r2, $r4, $r5;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r3 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op ANY_ARROW_SOME>;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r4 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r5 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos merge(edu.mit.csail.sdg.alloy4.Pos)>($r4);

        $r6 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r5, null, r0, r3);

        return $r6;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr any_arrow_one(edu.mit.csail.sdg.alloy4compiler.ast.Expr)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, r3, $r6;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op $r1;
        edu.mit.csail.sdg.alloy4.Pos $r2, $r4, $r5;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r3 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op ANY_ARROW_ONE>;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r4 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r5 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos merge(edu.mit.csail.sdg.alloy4.Pos)>($r4);

        $r6 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r5, null, r0, r3);

        return $r6;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr any_arrow_lone(edu.mit.csail.sdg.alloy4compiler.ast.Expr)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, r3, $r6;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op $r1;
        edu.mit.csail.sdg.alloy4.Pos $r2, $r4, $r5;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r3 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op ANY_ARROW_LONE>;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r4 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r5 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos merge(edu.mit.csail.sdg.alloy4.Pos)>($r4);

        $r6 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r5, null, r0, r3);

        return $r6;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr some_arrow_any(edu.mit.csail.sdg.alloy4compiler.ast.Expr)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, r3, $r6;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op $r1;
        edu.mit.csail.sdg.alloy4.Pos $r2, $r4, $r5;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r3 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op SOME_ARROW_ANY>;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r4 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r5 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos merge(edu.mit.csail.sdg.alloy4.Pos)>($r4);

        $r6 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r5, null, r0, r3);

        return $r6;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr some_arrow_some(edu.mit.csail.sdg.alloy4compiler.ast.Expr)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, r3, $r6;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op $r1;
        edu.mit.csail.sdg.alloy4.Pos $r2, $r4, $r5;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r3 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op SOME_ARROW_SOME>;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r4 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r5 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos merge(edu.mit.csail.sdg.alloy4.Pos)>($r4);

        $r6 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r5, null, r0, r3);

        return $r6;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr some_arrow_one(edu.mit.csail.sdg.alloy4compiler.ast.Expr)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, r3, $r6;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op $r1;
        edu.mit.csail.sdg.alloy4.Pos $r2, $r4, $r5;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r3 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op SOME_ARROW_ONE>;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r4 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r5 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos merge(edu.mit.csail.sdg.alloy4.Pos)>($r4);

        $r6 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r5, null, r0, r3);

        return $r6;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr some_arrow_lone(edu.mit.csail.sdg.alloy4compiler.ast.Expr)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, r3, $r6;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op $r1;
        edu.mit.csail.sdg.alloy4.Pos $r2, $r4, $r5;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r3 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op SOME_ARROW_LONE>;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r4 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r5 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos merge(edu.mit.csail.sdg.alloy4.Pos)>($r4);

        $r6 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r5, null, r0, r3);

        return $r6;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr one_arrow_any(edu.mit.csail.sdg.alloy4compiler.ast.Expr)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, r3, $r6;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op $r1;
        edu.mit.csail.sdg.alloy4.Pos $r2, $r4, $r5;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r3 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op ONE_ARROW_ANY>;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r4 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r5 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos merge(edu.mit.csail.sdg.alloy4.Pos)>($r4);

        $r6 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r5, null, r0, r3);

        return $r6;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr one_arrow_some(edu.mit.csail.sdg.alloy4compiler.ast.Expr)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, r3, $r6;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op $r1;
        edu.mit.csail.sdg.alloy4.Pos $r2, $r4, $r5;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r3 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op ONE_ARROW_SOME>;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r4 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r5 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos merge(edu.mit.csail.sdg.alloy4.Pos)>($r4);

        $r6 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r5, null, r0, r3);

        return $r6;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr one_arrow_one(edu.mit.csail.sdg.alloy4compiler.ast.Expr)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, r3, $r6;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op $r1;
        edu.mit.csail.sdg.alloy4.Pos $r2, $r4, $r5;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r3 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op ONE_ARROW_ONE>;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r4 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r5 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos merge(edu.mit.csail.sdg.alloy4.Pos)>($r4);

        $r6 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r5, null, r0, r3);

        return $r6;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr one_arrow_lone(edu.mit.csail.sdg.alloy4compiler.ast.Expr)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, r3, $r6;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op $r1;
        edu.mit.csail.sdg.alloy4.Pos $r2, $r4, $r5;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r3 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op ONE_ARROW_LONE>;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r4 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r5 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos merge(edu.mit.csail.sdg.alloy4.Pos)>($r4);

        $r6 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r5, null, r0, r3);

        return $r6;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr lone_arrow_any(edu.mit.csail.sdg.alloy4compiler.ast.Expr)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, r3, $r6;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op $r1;
        edu.mit.csail.sdg.alloy4.Pos $r2, $r4, $r5;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r3 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op LONE_ARROW_ANY>;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r4 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r5 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos merge(edu.mit.csail.sdg.alloy4.Pos)>($r4);

        $r6 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r5, null, r0, r3);

        return $r6;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr lone_arrow_some(edu.mit.csail.sdg.alloy4compiler.ast.Expr)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, r3, $r6;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op $r1;
        edu.mit.csail.sdg.alloy4.Pos $r2, $r4, $r5;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r3 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op LONE_ARROW_SOME>;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r4 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r5 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos merge(edu.mit.csail.sdg.alloy4.Pos)>($r4);

        $r6 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r5, null, r0, r3);

        return $r6;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr lone_arrow_one(edu.mit.csail.sdg.alloy4compiler.ast.Expr)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, r3, $r6;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op $r1;
        edu.mit.csail.sdg.alloy4.Pos $r2, $r4, $r5;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r3 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op LONE_ARROW_ONE>;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r4 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r5 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos merge(edu.mit.csail.sdg.alloy4.Pos)>($r4);

        $r6 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r5, null, r0, r3);

        return $r6;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr lone_arrow_lone(edu.mit.csail.sdg.alloy4compiler.ast.Expr)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, r3, $r6;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op $r1;
        edu.mit.csail.sdg.alloy4.Pos $r2, $r4, $r5;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r3 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op LONE_ARROW_LONE>;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r4 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r5 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos merge(edu.mit.csail.sdg.alloy4.Pos)>($r4);

        $r6 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r5, null, r0, r3);

        return $r6;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr isSeq_arrow_lone(edu.mit.csail.sdg.alloy4compiler.ast.Expr)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, r3, $r6;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op $r1;
        edu.mit.csail.sdg.alloy4.Pos $r2, $r4, $r5;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r3 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op ISSEQ_ARROW_LONE>;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r4 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r5 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos merge(edu.mit.csail.sdg.alloy4.Pos)>($r4);

        $r6 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r5, null, r0, r3);

        return $r6;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr ite(edu.mit.csail.sdg.alloy4compiler.ast.Expr, edu.mit.csail.sdg.alloy4compiler.ast.Expr)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, r1, r2, $r4;
        edu.mit.csail.sdg.alloy4.Pos $r3;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r1 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r2 := @parameter1: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r3 = <edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos UNKNOWN>;

        $r4 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.ast.ExprITE: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r3, r0, r1, r2);

        return $r4;
    }

    public final transient edu.mit.csail.sdg.alloy4compiler.ast.Expr forAll(edu.mit.csail.sdg.alloy4compiler.ast.Decl, edu.mit.csail.sdg.alloy4compiler.ast.Decl[]) throws edu.mit.csail.sdg.alloy4.Err
    {
        edu.mit.csail.sdg.alloy4compiler.ast.ExprQt$Op $r2;
        edu.mit.csail.sdg.alloy4.ConstList $r3, $r4;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r5, $r6;
        edu.mit.csail.sdg.alloy4compiler.ast.Decl[] r1;
        int i0, i1;
        edu.mit.csail.sdg.alloy4.Pos $r8, r9;
        edu.mit.csail.sdg.alloy4compiler.ast.Decl r0, r7;

        r5 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r0 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Decl;

        r1 := @parameter1: edu.mit.csail.sdg.alloy4compiler.ast.Decl[];

        r9 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Decl: edu.mit.csail.sdg.alloy4.Pos span()>();

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r7 = r1[i1];

        $r8 = virtualinvoke r7.<edu.mit.csail.sdg.alloy4compiler.ast.Decl: edu.mit.csail.sdg.alloy4.Pos span()>();

        r9 = virtualinvoke r9.<edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos merge(edu.mit.csail.sdg.alloy4.Pos)>($r8);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r2 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprQt$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprQt$Op ALL>;

        $r3 = staticinvoke <edu.mit.csail.sdg.alloy4.Util: edu.mit.csail.sdg.alloy4.ConstList asList(java.lang.Object[])>(r1);

        $r4 = staticinvoke <edu.mit.csail.sdg.alloy4.Util: edu.mit.csail.sdg.alloy4.ConstList prepend(java.util.List,java.lang.Object)>($r3, r0);

        $r6 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4compiler.ast.ExprQt$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,java.util.List,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>(r9, null, $r4, r5);

        return $r6;
    }

    public final transient edu.mit.csail.sdg.alloy4compiler.ast.Expr forNo(edu.mit.csail.sdg.alloy4compiler.ast.Decl, edu.mit.csail.sdg.alloy4compiler.ast.Decl[]) throws edu.mit.csail.sdg.alloy4.Err
    {
        edu.mit.csail.sdg.alloy4compiler.ast.ExprQt$Op $r2;
        edu.mit.csail.sdg.alloy4.ConstList $r3, $r4;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r5, $r6;
        edu.mit.csail.sdg.alloy4compiler.ast.Decl[] r1;
        int i0, i1;
        edu.mit.csail.sdg.alloy4.Pos $r8, r9;
        edu.mit.csail.sdg.alloy4compiler.ast.Decl r0, r7;

        r5 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r0 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Decl;

        r1 := @parameter1: edu.mit.csail.sdg.alloy4compiler.ast.Decl[];

        r9 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Decl: edu.mit.csail.sdg.alloy4.Pos span()>();

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r7 = r1[i1];

        $r8 = virtualinvoke r7.<edu.mit.csail.sdg.alloy4compiler.ast.Decl: edu.mit.csail.sdg.alloy4.Pos span()>();

        r9 = virtualinvoke r9.<edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos merge(edu.mit.csail.sdg.alloy4.Pos)>($r8);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r2 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprQt$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprQt$Op NO>;

        $r3 = staticinvoke <edu.mit.csail.sdg.alloy4.Util: edu.mit.csail.sdg.alloy4.ConstList asList(java.lang.Object[])>(r1);

        $r4 = staticinvoke <edu.mit.csail.sdg.alloy4.Util: edu.mit.csail.sdg.alloy4.ConstList prepend(java.util.List,java.lang.Object)>($r3, r0);

        $r6 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4compiler.ast.ExprQt$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,java.util.List,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>(r9, null, $r4, r5);

        return $r6;
    }

    public final transient edu.mit.csail.sdg.alloy4compiler.ast.Expr forLone(edu.mit.csail.sdg.alloy4compiler.ast.Decl, edu.mit.csail.sdg.alloy4compiler.ast.Decl[]) throws edu.mit.csail.sdg.alloy4.Err
    {
        edu.mit.csail.sdg.alloy4compiler.ast.ExprQt$Op $r2;
        edu.mit.csail.sdg.alloy4.ConstList $r3, $r4;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r5, $r6;
        edu.mit.csail.sdg.alloy4compiler.ast.Decl[] r1;
        int i0, i1;
        edu.mit.csail.sdg.alloy4.Pos $r8, r9;
        edu.mit.csail.sdg.alloy4compiler.ast.Decl r0, r7;

        r5 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r0 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Decl;

        r1 := @parameter1: edu.mit.csail.sdg.alloy4compiler.ast.Decl[];

        r9 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Decl: edu.mit.csail.sdg.alloy4.Pos span()>();

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r7 = r1[i1];

        $r8 = virtualinvoke r7.<edu.mit.csail.sdg.alloy4compiler.ast.Decl: edu.mit.csail.sdg.alloy4.Pos span()>();

        r9 = virtualinvoke r9.<edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos merge(edu.mit.csail.sdg.alloy4.Pos)>($r8);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r2 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprQt$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprQt$Op LONE>;

        $r3 = staticinvoke <edu.mit.csail.sdg.alloy4.Util: edu.mit.csail.sdg.alloy4.ConstList asList(java.lang.Object[])>(r1);

        $r4 = staticinvoke <edu.mit.csail.sdg.alloy4.Util: edu.mit.csail.sdg.alloy4.ConstList prepend(java.util.List,java.lang.Object)>($r3, r0);

        $r6 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4compiler.ast.ExprQt$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,java.util.List,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>(r9, null, $r4, r5);

        return $r6;
    }

    public final transient edu.mit.csail.sdg.alloy4compiler.ast.Expr forOne(edu.mit.csail.sdg.alloy4compiler.ast.Decl, edu.mit.csail.sdg.alloy4compiler.ast.Decl[]) throws edu.mit.csail.sdg.alloy4.Err
    {
        edu.mit.csail.sdg.alloy4compiler.ast.ExprQt$Op $r2;
        edu.mit.csail.sdg.alloy4.ConstList $r3, $r4;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r5, $r6;
        edu.mit.csail.sdg.alloy4compiler.ast.Decl[] r1;
        int i0, i1;
        edu.mit.csail.sdg.alloy4.Pos $r8, r9;
        edu.mit.csail.sdg.alloy4compiler.ast.Decl r0, r7;

        r5 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r0 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Decl;

        r1 := @parameter1: edu.mit.csail.sdg.alloy4compiler.ast.Decl[];

        r9 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Decl: edu.mit.csail.sdg.alloy4.Pos span()>();

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r7 = r1[i1];

        $r8 = virtualinvoke r7.<edu.mit.csail.sdg.alloy4compiler.ast.Decl: edu.mit.csail.sdg.alloy4.Pos span()>();

        r9 = virtualinvoke r9.<edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos merge(edu.mit.csail.sdg.alloy4.Pos)>($r8);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r2 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprQt$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprQt$Op ONE>;

        $r3 = staticinvoke <edu.mit.csail.sdg.alloy4.Util: edu.mit.csail.sdg.alloy4.ConstList asList(java.lang.Object[])>(r1);

        $r4 = staticinvoke <edu.mit.csail.sdg.alloy4.Util: edu.mit.csail.sdg.alloy4.ConstList prepend(java.util.List,java.lang.Object)>($r3, r0);

        $r6 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4compiler.ast.ExprQt$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,java.util.List,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>(r9, null, $r4, r5);

        return $r6;
    }

    public final transient edu.mit.csail.sdg.alloy4compiler.ast.Expr forSome(edu.mit.csail.sdg.alloy4compiler.ast.Decl, edu.mit.csail.sdg.alloy4compiler.ast.Decl[]) throws edu.mit.csail.sdg.alloy4.Err
    {
        edu.mit.csail.sdg.alloy4compiler.ast.ExprQt$Op $r2;
        edu.mit.csail.sdg.alloy4.ConstList $r3, $r4;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r5, $r6;
        edu.mit.csail.sdg.alloy4compiler.ast.Decl[] r1;
        int i0, i1;
        edu.mit.csail.sdg.alloy4.Pos $r8, r9;
        edu.mit.csail.sdg.alloy4compiler.ast.Decl r0, r7;

        r5 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r0 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Decl;

        r1 := @parameter1: edu.mit.csail.sdg.alloy4compiler.ast.Decl[];

        r9 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Decl: edu.mit.csail.sdg.alloy4.Pos span()>();

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r7 = r1[i1];

        $r8 = virtualinvoke r7.<edu.mit.csail.sdg.alloy4compiler.ast.Decl: edu.mit.csail.sdg.alloy4.Pos span()>();

        r9 = virtualinvoke r9.<edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos merge(edu.mit.csail.sdg.alloy4.Pos)>($r8);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r2 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprQt$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprQt$Op SOME>;

        $r3 = staticinvoke <edu.mit.csail.sdg.alloy4.Util: edu.mit.csail.sdg.alloy4.ConstList asList(java.lang.Object[])>(r1);

        $r4 = staticinvoke <edu.mit.csail.sdg.alloy4.Util: edu.mit.csail.sdg.alloy4.ConstList prepend(java.util.List,java.lang.Object)>($r3, r0);

        $r6 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4compiler.ast.ExprQt$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,java.util.List,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>(r9, null, $r4, r5);

        return $r6;
    }

    public final transient edu.mit.csail.sdg.alloy4compiler.ast.Expr comprehensionOver(edu.mit.csail.sdg.alloy4compiler.ast.Decl, edu.mit.csail.sdg.alloy4compiler.ast.Decl[]) throws edu.mit.csail.sdg.alloy4.Err
    {
        edu.mit.csail.sdg.alloy4compiler.ast.ExprQt$Op $r2;
        edu.mit.csail.sdg.alloy4.ConstList $r3, $r4;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r5, $r6;
        edu.mit.csail.sdg.alloy4compiler.ast.Decl[] r1;
        int i0, i1;
        edu.mit.csail.sdg.alloy4.Pos $r8, r9;
        edu.mit.csail.sdg.alloy4compiler.ast.Decl r0, r7;

        r5 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r0 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Decl;

        r1 := @parameter1: edu.mit.csail.sdg.alloy4compiler.ast.Decl[];

        r9 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Decl: edu.mit.csail.sdg.alloy4.Pos span()>();

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r7 = r1[i1];

        $r8 = virtualinvoke r7.<edu.mit.csail.sdg.alloy4compiler.ast.Decl: edu.mit.csail.sdg.alloy4.Pos span()>();

        r9 = virtualinvoke r9.<edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos merge(edu.mit.csail.sdg.alloy4.Pos)>($r8);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r2 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprQt$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprQt$Op COMPREHENSION>;

        $r3 = staticinvoke <edu.mit.csail.sdg.alloy4.Util: edu.mit.csail.sdg.alloy4.ConstList asList(java.lang.Object[])>(r1);

        $r4 = staticinvoke <edu.mit.csail.sdg.alloy4.Util: edu.mit.csail.sdg.alloy4.ConstList prepend(java.util.List,java.lang.Object)>($r3, r0);

        $r6 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4compiler.ast.ExprQt$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,java.util.List,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>(r9, null, $r4, r5);

        return $r6;
    }

    public final transient edu.mit.csail.sdg.alloy4compiler.ast.Expr sumOver(edu.mit.csail.sdg.alloy4compiler.ast.Decl, edu.mit.csail.sdg.alloy4compiler.ast.Decl[]) throws edu.mit.csail.sdg.alloy4.Err
    {
        edu.mit.csail.sdg.alloy4compiler.ast.ExprQt$Op $r2;
        edu.mit.csail.sdg.alloy4.ConstList $r3, $r4;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r5, $r6;
        edu.mit.csail.sdg.alloy4compiler.ast.Decl[] r1;
        int i0, i1;
        edu.mit.csail.sdg.alloy4.Pos $r8, r9;
        edu.mit.csail.sdg.alloy4compiler.ast.Decl r0, r7;

        r5 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r0 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Decl;

        r1 := @parameter1: edu.mit.csail.sdg.alloy4compiler.ast.Decl[];

        r9 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Decl: edu.mit.csail.sdg.alloy4.Pos span()>();

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r7 = r1[i1];

        $r8 = virtualinvoke r7.<edu.mit.csail.sdg.alloy4compiler.ast.Decl: edu.mit.csail.sdg.alloy4.Pos span()>();

        r9 = virtualinvoke r9.<edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos merge(edu.mit.csail.sdg.alloy4.Pos)>($r8);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r2 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprQt$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprQt$Op SUM>;

        $r3 = staticinvoke <edu.mit.csail.sdg.alloy4.Util: edu.mit.csail.sdg.alloy4.ConstList asList(java.lang.Object[])>(r1);

        $r4 = staticinvoke <edu.mit.csail.sdg.alloy4.Util: edu.mit.csail.sdg.alloy4.ConstList prepend(java.util.List,java.lang.Object)>($r3, r0);

        $r6 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4compiler.ast.ExprQt$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,java.util.List,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>(r9, null, $r4, r5);

        return $r6;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr someOf()
    {
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op $r1;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, $r3;
        edu.mit.csail.sdg.alloy4.Pos $r2;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op SOMEOF>;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r3 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r2, r0);

        return $r3;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.Decl someOf(java.lang.String) throws edu.mit.csail.sdg.alloy4.Err
    {
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op $r1;
        edu.mit.csail.sdg.alloy4compiler.ast.Type $r6;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, $r3;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprVar[] $r9;
        java.util.List $r10;
        edu.mit.csail.sdg.alloy4.Pos $r2, $r4;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprVar $r7;
        java.lang.String r5;
        edu.mit.csail.sdg.alloy4compiler.ast.Decl $r8;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r5 := @parameter0: java.lang.String;

        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op SOMEOF>;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r3 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r2, r0);

        $r4 = virtualinvoke $r3.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r6 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $r7 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.ast.ExprVar: edu.mit.csail.sdg.alloy4compiler.ast.ExprVar make(edu.mit.csail.sdg.alloy4.Pos,java.lang.String,edu.mit.csail.sdg.alloy4compiler.ast.Type)>($r4, r5, $r6);

        $r8 = new edu.mit.csail.sdg.alloy4compiler.ast.Decl;

        $r9 = newarray (edu.mit.csail.sdg.alloy4compiler.ast.ExprVar)[1];

        $r9[0] = $r7;

        $r10 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r9);

        specialinvoke $r8.<edu.mit.csail.sdg.alloy4compiler.ast.Decl: void <init>(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,java.util.List,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>(null, null, null, $r10, $r3);

        return $r8;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr loneOf()
    {
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op $r1;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, $r3;
        edu.mit.csail.sdg.alloy4.Pos $r2;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op LONEOF>;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r3 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r2, r0);

        return $r3;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.Decl loneOf(java.lang.String) throws edu.mit.csail.sdg.alloy4.Err
    {
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op $r1;
        edu.mit.csail.sdg.alloy4compiler.ast.Type $r6;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, $r3;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprVar[] $r9;
        java.util.List $r10;
        edu.mit.csail.sdg.alloy4.Pos $r2, $r4;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprVar $r7;
        java.lang.String r5;
        edu.mit.csail.sdg.alloy4compiler.ast.Decl $r8;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r5 := @parameter0: java.lang.String;

        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op LONEOF>;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r3 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r2, r0);

        $r4 = virtualinvoke $r3.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r6 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $r7 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.ast.ExprVar: edu.mit.csail.sdg.alloy4compiler.ast.ExprVar make(edu.mit.csail.sdg.alloy4.Pos,java.lang.String,edu.mit.csail.sdg.alloy4compiler.ast.Type)>($r4, r5, $r6);

        $r8 = new edu.mit.csail.sdg.alloy4compiler.ast.Decl;

        $r9 = newarray (edu.mit.csail.sdg.alloy4compiler.ast.ExprVar)[1];

        $r9[0] = $r7;

        $r10 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r9);

        specialinvoke $r8.<edu.mit.csail.sdg.alloy4compiler.ast.Decl: void <init>(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,java.util.List,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>(null, null, null, $r10, $r3);

        return $r8;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr oneOf()
    {
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op $r1;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, $r3;
        edu.mit.csail.sdg.alloy4.Pos $r2;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op ONEOF>;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r3 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r2, r0);

        return $r3;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.Decl oneOf(java.lang.String) throws edu.mit.csail.sdg.alloy4.Err
    {
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op $r1;
        edu.mit.csail.sdg.alloy4compiler.ast.Type $r6;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, $r3;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprVar[] $r9;
        java.util.List $r10;
        edu.mit.csail.sdg.alloy4.Pos $r2, $r4;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprVar $r7;
        java.lang.String r5;
        edu.mit.csail.sdg.alloy4compiler.ast.Decl $r8;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r5 := @parameter0: java.lang.String;

        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op ONEOF>;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r3 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r2, r0);

        $r4 = virtualinvoke $r3.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r6 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $r7 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.ast.ExprVar: edu.mit.csail.sdg.alloy4compiler.ast.ExprVar make(edu.mit.csail.sdg.alloy4.Pos,java.lang.String,edu.mit.csail.sdg.alloy4compiler.ast.Type)>($r4, r5, $r6);

        $r8 = new edu.mit.csail.sdg.alloy4compiler.ast.Decl;

        $r9 = newarray (edu.mit.csail.sdg.alloy4compiler.ast.ExprVar)[1];

        $r9[0] = $r7;

        $r10 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r9);

        specialinvoke $r8.<edu.mit.csail.sdg.alloy4compiler.ast.Decl: void <init>(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,java.util.List,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>(null, null, null, $r10, $r3);

        return $r8;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr setOf()
    {
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op $r1;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, $r3;
        edu.mit.csail.sdg.alloy4.Pos $r2;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op SETOF>;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r3 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r2, r0);

        return $r3;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.Decl setOf(java.lang.String) throws edu.mit.csail.sdg.alloy4.Err
    {
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op $r1;
        edu.mit.csail.sdg.alloy4compiler.ast.Type $r6;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, $r3;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprVar[] $r9;
        java.util.List $r10;
        edu.mit.csail.sdg.alloy4.Pos $r2, $r4;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprVar $r7;
        java.lang.String r5;
        edu.mit.csail.sdg.alloy4compiler.ast.Decl $r8;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r5 := @parameter0: java.lang.String;

        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op SETOF>;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r3 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r2, r0);

        $r4 = virtualinvoke $r3.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r6 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $r7 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.ast.ExprVar: edu.mit.csail.sdg.alloy4compiler.ast.ExprVar make(edu.mit.csail.sdg.alloy4.Pos,java.lang.String,edu.mit.csail.sdg.alloy4compiler.ast.Type)>($r4, r5, $r6);

        $r8 = new edu.mit.csail.sdg.alloy4compiler.ast.Decl;

        $r9 = newarray (edu.mit.csail.sdg.alloy4compiler.ast.ExprVar)[1];

        $r9[0] = $r7;

        $r10 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r9);

        specialinvoke $r8.<edu.mit.csail.sdg.alloy4compiler.ast.Decl: void <init>(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,java.util.List,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>(null, null, null, $r10, $r3);

        return $r8;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr not()
    {
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op $r1;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, $r3;
        edu.mit.csail.sdg.alloy4.Pos $r2;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op NOT>;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r3 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r2, r0);

        return $r3;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr no()
    {
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op $r1;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, $r3;
        edu.mit.csail.sdg.alloy4.Pos $r2;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op NO>;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r3 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r2, r0);

        return $r3;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr some()
    {
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op $r1;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, $r3;
        edu.mit.csail.sdg.alloy4.Pos $r2;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op SOME>;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r3 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r2, r0);

        return $r3;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr lone()
    {
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op $r1;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, $r3;
        edu.mit.csail.sdg.alloy4.Pos $r2;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op LONE>;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r3 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r2, r0);

        return $r3;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr one()
    {
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op $r1;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, $r3;
        edu.mit.csail.sdg.alloy4.Pos $r2;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op ONE>;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r3 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r2, r0);

        return $r3;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr transpose()
    {
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op $r1;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, $r3;
        edu.mit.csail.sdg.alloy4.Pos $r2;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op TRANSPOSE>;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r3 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r2, r0);

        return $r3;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr reflexiveClosure()
    {
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op $r1;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, $r3;
        edu.mit.csail.sdg.alloy4.Pos $r2;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op RCLOSURE>;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r3 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r2, r0);

        return $r3;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr closure()
    {
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op $r1;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, $r3;
        edu.mit.csail.sdg.alloy4.Pos $r2;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op CLOSURE>;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r3 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r2, r0);

        return $r3;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr cardinality()
    {
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op $r1;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, $r3;
        edu.mit.csail.sdg.alloy4.Pos $r2;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op CARDINALITY>;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r3 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r2, r0);

        return $r3;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr cast2int()
    {
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op $r1;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, $r3;
        edu.mit.csail.sdg.alloy4.Pos $r2;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op CAST2INT>;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r3 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r2, r0);

        return $r3;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr cast2sigint()
    {
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op $r1;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, $r3;
        edu.mit.csail.sdg.alloy4.Pos $r2;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op CAST2SIGINT>;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r3 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r2, r0);

        return $r3;
    }

    static void <clinit>()
    {
        edu.mit.csail.sdg.alloy4.JoinableList $r0;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr$1 $r1;

        $r0 = new edu.mit.csail.sdg.alloy4.JoinableList;

        specialinvoke $r0.<edu.mit.csail.sdg.alloy4.JoinableList: void <init>()>();

        <edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.JoinableList emptyListOfErrors> = $r0;

        $r1 = new edu.mit.csail.sdg.alloy4compiler.ast.Expr$1;

        specialinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.Expr$1: void <init>()>();

        <edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.VisitQuery hasCall> = $r1;

        return;
    }
}
