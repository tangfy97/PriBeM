public class org.waveprotocol.wave.federation.impl.ProtocolSignerInfoImpl extends java.lang.Object implements org.waveprotocol.wave.federation.ProtocolSignerInfo
{
    private org.waveprotocol.wave.federation.ProtocolSignerInfo$HashAlgorithm hashAlgorithm;
    private java.lang.String domain;
    private final java.util.List certificate;

    public void <init>()
    {
        org.waveprotocol.wave.federation.impl.ProtocolSignerInfoImpl r0;
        java.util.ArrayList $r1;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolSignerInfoImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.waveprotocol.wave.federation.impl.ProtocolSignerInfoImpl: java.util.List certificate> = $r1;

        return;
    }

    public void <init>(org.waveprotocol.wave.federation.ProtocolSignerInfo)
    {
        org.waveprotocol.wave.federation.ProtocolSignerInfo r2;
        org.waveprotocol.wave.federation.impl.ProtocolSignerInfoImpl r0;
        java.util.ArrayList $r1;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolSignerInfoImpl;

        r2 := @parameter0: org.waveprotocol.wave.federation.ProtocolSignerInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.waveprotocol.wave.federation.impl.ProtocolSignerInfoImpl: java.util.List certificate> = $r1;

        virtualinvoke r0.<org.waveprotocol.wave.federation.impl.ProtocolSignerInfoImpl: void copyFrom(org.waveprotocol.wave.federation.ProtocolSignerInfo)>(r2);

        return;
    }

    public void copyFrom(org.waveprotocol.wave.federation.ProtocolSignerInfo)
    {
        org.waveprotocol.wave.federation.ProtocolSignerInfo$HashAlgorithm $r2;
        java.util.Iterator $r5;
        org.waveprotocol.wave.federation.impl.ProtocolSignerInfoImpl r0;
        org.waveprotocol.wave.federation.ProtocolSignerInfo r1;
        java.util.List $r4;
        org.waveprotocol.wave.communication.Blob r7;
        java.lang.Object $r6;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolSignerInfoImpl;

        r1 := @parameter0: org.waveprotocol.wave.federation.ProtocolSignerInfo;

        $r2 = interfaceinvoke r1.<org.waveprotocol.wave.federation.ProtocolSignerInfo: org.waveprotocol.wave.federation.ProtocolSignerInfo$HashAlgorithm getHashAlgorithm()>();

        virtualinvoke r0.<org.waveprotocol.wave.federation.impl.ProtocolSignerInfoImpl: void setHashAlgorithm(org.waveprotocol.wave.federation.ProtocolSignerInfo$HashAlgorithm)>($r2);

        $r3 = interfaceinvoke r1.<org.waveprotocol.wave.federation.ProtocolSignerInfo: java.lang.String getDomain()>();

        virtualinvoke r0.<org.waveprotocol.wave.federation.impl.ProtocolSignerInfoImpl: void setDomain(java.lang.String)>($r3);

        virtualinvoke r0.<org.waveprotocol.wave.federation.impl.ProtocolSignerInfoImpl: void clearCertificate()>();

        $r4 = interfaceinvoke r1.<org.waveprotocol.wave.federation.ProtocolSignerInfo: java.util.List getCertificate()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.waveprotocol.wave.communication.Blob) $r6;

        virtualinvoke r0.<org.waveprotocol.wave.federation.impl.ProtocolSignerInfoImpl: void addCertificate(org.waveprotocol.wave.communication.Blob)>(r7);

        goto label1;

     label2:
        return;
    }

    public org.waveprotocol.wave.federation.ProtocolSignerInfo$HashAlgorithm getHashAlgorithm()
    {
        org.waveprotocol.wave.federation.ProtocolSignerInfo$HashAlgorithm $r1;
        org.waveprotocol.wave.federation.impl.ProtocolSignerInfoImpl r0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolSignerInfoImpl;

        $r1 = r0.<org.waveprotocol.wave.federation.impl.ProtocolSignerInfoImpl: org.waveprotocol.wave.federation.ProtocolSignerInfo$HashAlgorithm hashAlgorithm>;

        return $r1;
    }

    public void setHashAlgorithm(org.waveprotocol.wave.federation.ProtocolSignerInfo$HashAlgorithm)
    {
        org.waveprotocol.wave.federation.ProtocolSignerInfo$HashAlgorithm r1;
        org.waveprotocol.wave.federation.impl.ProtocolSignerInfoImpl r0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolSignerInfoImpl;

        r1 := @parameter0: org.waveprotocol.wave.federation.ProtocolSignerInfo$HashAlgorithm;

        r0.<org.waveprotocol.wave.federation.impl.ProtocolSignerInfoImpl: org.waveprotocol.wave.federation.ProtocolSignerInfo$HashAlgorithm hashAlgorithm> = r1;

        return;
    }

    public java.lang.String getDomain()
    {
        java.lang.String $r1;
        org.waveprotocol.wave.federation.impl.ProtocolSignerInfoImpl r0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolSignerInfoImpl;

        $r1 = r0.<org.waveprotocol.wave.federation.impl.ProtocolSignerInfoImpl: java.lang.String domain>;

        return $r1;
    }

    public void setDomain(java.lang.String)
    {
        java.lang.String r1;
        org.waveprotocol.wave.federation.impl.ProtocolSignerInfoImpl r0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolSignerInfoImpl;

        r1 := @parameter0: java.lang.String;

        r0.<org.waveprotocol.wave.federation.impl.ProtocolSignerInfoImpl: java.lang.String domain> = r1;

        return;
    }

    public java.util.List getCertificate()
    {
        java.util.List $r1, $r2;
        org.waveprotocol.wave.federation.impl.ProtocolSignerInfoImpl r0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolSignerInfoImpl;

        $r1 = r0.<org.waveprotocol.wave.federation.impl.ProtocolSignerInfoImpl: java.util.List certificate>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    public void addAllCertificate(java.util.List)
    {
        java.util.List r1, $r2;
        org.waveprotocol.wave.federation.impl.ProtocolSignerInfoImpl r0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolSignerInfoImpl;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<org.waveprotocol.wave.federation.impl.ProtocolSignerInfoImpl: java.util.List certificate>;

        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>(r1);

        return;
    }

    public org.waveprotocol.wave.communication.Blob getCertificate(int)
    {
        java.util.List $r1;
        org.waveprotocol.wave.federation.impl.ProtocolSignerInfoImpl r0;
        int i0;
        org.waveprotocol.wave.communication.Blob $r3;
        java.lang.Object $r2;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolSignerInfoImpl;

        i0 := @parameter0: int;

        $r1 = r0.<org.waveprotocol.wave.federation.impl.ProtocolSignerInfoImpl: java.util.List certificate>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = (org.waveprotocol.wave.communication.Blob) $r2;

        return $r3;
    }

    public void setCertificate(int, org.waveprotocol.wave.communication.Blob)
    {
        java.util.List $r2;
        org.waveprotocol.wave.federation.impl.ProtocolSignerInfoImpl r0;
        int i0;
        org.waveprotocol.wave.communication.Blob r1;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolSignerInfoImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: org.waveprotocol.wave.communication.Blob;

        $r2 = r0.<org.waveprotocol.wave.federation.impl.ProtocolSignerInfoImpl: java.util.List certificate>;

        interfaceinvoke $r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, r1);

        return;
    }

    public int getCertificateSize()
    {
        int $i0;
        java.util.List $r1;
        org.waveprotocol.wave.federation.impl.ProtocolSignerInfoImpl r0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolSignerInfoImpl;

        $r1 = r0.<org.waveprotocol.wave.federation.impl.ProtocolSignerInfoImpl: java.util.List certificate>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    public void addCertificate(org.waveprotocol.wave.communication.Blob)
    {
        org.waveprotocol.wave.communication.Blob r1;
        java.util.List $r2;
        org.waveprotocol.wave.federation.impl.ProtocolSignerInfoImpl r0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolSignerInfoImpl;

        r1 := @parameter0: org.waveprotocol.wave.communication.Blob;

        $r2 = r0.<org.waveprotocol.wave.federation.impl.ProtocolSignerInfoImpl: java.util.List certificate>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void clearCertificate()
    {
        java.util.List $r1;
        org.waveprotocol.wave.federation.impl.ProtocolSignerInfoImpl r0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolSignerInfoImpl;

        $r1 = r0.<org.waveprotocol.wave.federation.impl.ProtocolSignerInfoImpl: java.util.List certificate>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        return;
    }

    protected void reset()
    {
        java.util.List $r1;
        org.waveprotocol.wave.federation.impl.ProtocolSignerInfoImpl r0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolSignerInfoImpl;

        r0.<org.waveprotocol.wave.federation.impl.ProtocolSignerInfoImpl: org.waveprotocol.wave.federation.ProtocolSignerInfo$HashAlgorithm hashAlgorithm> = null;

        r0.<org.waveprotocol.wave.federation.impl.ProtocolSignerInfoImpl: java.lang.String domain> = null;

        $r1 = r0.<org.waveprotocol.wave.federation.impl.ProtocolSignerInfoImpl: java.util.List certificate>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        return;
    }

    public boolean equals(java.lang.Object)
    {
        org.waveprotocol.wave.federation.impl.ProtocolSignerInfoImpl r1;
        java.lang.Object r0;
        boolean $z0, $z1, $z2;

        r1 := @this: org.waveprotocol.wave.federation.impl.ProtocolSignerInfoImpl;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.waveprotocol.wave.federation.impl.ProtocolSignerInfoImpl;

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r1.<org.waveprotocol.wave.federation.impl.ProtocolSignerInfoImpl: boolean isEqualTo(java.lang.Object)>(r0);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public boolean isEqualTo(java.lang.Object)
    {
        org.waveprotocol.wave.federation.impl.ProtocolSignerInfoImpl r1;
        org.waveprotocol.wave.federation.ProtocolSignerInfo $r2;
        java.lang.Object r0;
        boolean $z0, $z1;

        r1 := @this: org.waveprotocol.wave.federation.impl.ProtocolSignerInfoImpl;

        r0 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r0 instanceof org.waveprotocol.wave.federation.ProtocolSignerInfo;

        if $z0 == 0 goto label2;

        $r2 = (org.waveprotocol.wave.federation.ProtocolSignerInfo) r0;

        $z1 = staticinvoke <org.waveprotocol.wave.federation.ProtocolSignerInfoUtil: boolean isEqual(org.waveprotocol.wave.federation.ProtocolSignerInfo,org.waveprotocol.wave.federation.ProtocolSignerInfo)>(r1, $r2);

        return $z1;

     label2:
        return 0;
    }

    public int hashCode()
    {
        int $i0;
        org.waveprotocol.wave.federation.impl.ProtocolSignerInfoImpl r0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolSignerInfoImpl;

        $i0 = staticinvoke <org.waveprotocol.wave.federation.ProtocolSignerInfoUtil: int getHashCode(org.waveprotocol.wave.federation.ProtocolSignerInfo)>(r0);

        return $i0;
    }
}
