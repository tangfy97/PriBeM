final class com.jidesoft.swing.JideSwingUtilities$6 extends java.lang.Object implements com.jidesoft.swing.JideSwingUtilities$Handler
{
    final boolean val$opaque;

    void <init>(boolean)
    {
        com.jidesoft.swing.JideSwingUtilities$6 r0;
        boolean z0;

        r0 := @this: com.jidesoft.swing.JideSwingUtilities$6;

        z0 := @parameter0: boolean;

        r0.<com.jidesoft.swing.JideSwingUtilities$6: boolean val$opaque> = z0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean condition(java.awt.Component)
    {
        java.awt.Component r0;
        com.jidesoft.swing.JideSwingUtilities$6 r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;

        r1 := @this: com.jidesoft.swing.JideSwingUtilities$6;

        r0 := @parameter0: java.awt.Component;

        $z0 = r0 instanceof javax.swing.JComboBox;

        if $z0 != 0 goto label1;

        $z1 = r0 instanceof javax.swing.JButton;

        if $z1 != 0 goto label1;

        $z2 = r0 instanceof javax.swing.text.JTextComponent;

        if $z2 != 0 goto label1;

        $z3 = r0 instanceof javax.swing.ListCellRenderer;

        if $z3 != 0 goto label1;

        $z4 = r0 instanceof javax.swing.tree.TreeCellRenderer;

        if $z4 != 0 goto label1;

        $z5 = r0 instanceof javax.swing.table.TableCellRenderer;

        if $z5 != 0 goto label1;

        $z6 = r0 instanceof javax.swing.CellEditor;

        if $z6 != 0 goto label1;

        $z7 = 1;

        goto label2;

     label1:
        $z7 = 0;

     label2:
        return $z7;
    }

    public void action(java.awt.Component)
    {
        com.jidesoft.swing.JideSwingUtilities$6 r5;
        java.lang.Boolean $r2;
        boolean $z0, $z1, $z2, $z3;
        javax.swing.JComponent r1;
        java.awt.Component r0;
        com.jidesoft.swing.JideSwingUtilities$6$2 $r10;
        com.jidesoft.swing.JideSwingUtilities$6$1 $r14;
        java.beans.PropertyChangeListener $r7, $r8, $r9, $r11, $r12, $r13, $r15;
        java.lang.Object $r3, $r4, $r6;

        r5 := @this: com.jidesoft.swing.JideSwingUtilities$6;

        r0 := @parameter0: java.awt.Component;

        $z0 = r0 instanceof javax.swing.JComponent;

        if $z0 == 0 goto label6;

        r1 = (javax.swing.JComponent) r0;

        $r2 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r3 = virtualinvoke r1.<javax.swing.JComponent: java.lang.Object getClientProperty(java.lang.Object)>("setOpaqueRecursively.excluded");

        $z1 = virtualinvoke $r2.<java.lang.Boolean: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label1;

        return;

     label1:
        $r4 = virtualinvoke r1.<javax.swing.JComponent: java.lang.Object getClientProperty(java.lang.Object)>("setOpaqueRecursively.opaqueListener");

        if $r4 == null goto label2;

        $r15 = (java.beans.PropertyChangeListener) $r4;

        virtualinvoke r1.<javax.swing.JComponent: void removePropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)>("opaque", $r15);

        virtualinvoke r1.<javax.swing.JComponent: void putClientProperty(java.lang.Object,java.lang.Object)>("setOpaqueRecursively.opaqueListener", null);

     label2:
        $z2 = r5.<com.jidesoft.swing.JideSwingUtilities$6: boolean val$opaque>;

        virtualinvoke r1.<javax.swing.JComponent: void setOpaque(boolean)>($z2);

        $r6 = virtualinvoke r1.<javax.swing.JComponent: java.lang.Object getClientProperty(java.lang.Object)>("setOpaqueRecursively.opaqueListener");

        if $r6 != null goto label6;

        $z3 = r5.<com.jidesoft.swing.JideSwingUtilities$6: boolean val$opaque>;

        if $z3 == 0 goto label4;

        $r11 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: java.beans.PropertyChangeListener access$000()>();

        if $r11 != null goto label3;

        $r14 = new com.jidesoft.swing.JideSwingUtilities$6$1;

        specialinvoke $r14.<com.jidesoft.swing.JideSwingUtilities$6$1: void <init>(com.jidesoft.swing.JideSwingUtilities$6)>(r5);

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: java.beans.PropertyChangeListener access$002(java.beans.PropertyChangeListener)>($r14);

     label3:
        $r12 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: java.beans.PropertyChangeListener access$000()>();

        virtualinvoke r1.<javax.swing.JComponent: void addPropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)>("opaque", $r12);

        $r13 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: java.beans.PropertyChangeListener access$000()>();

        virtualinvoke r1.<javax.swing.JComponent: void putClientProperty(java.lang.Object,java.lang.Object)>("setOpaqueRecursively.opaqueListener", $r13);

        goto label6;

     label4:
        $r7 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: java.beans.PropertyChangeListener access$100()>();

        if $r7 != null goto label5;

        $r10 = new com.jidesoft.swing.JideSwingUtilities$6$2;

        specialinvoke $r10.<com.jidesoft.swing.JideSwingUtilities$6$2: void <init>(com.jidesoft.swing.JideSwingUtilities$6)>(r5);

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: java.beans.PropertyChangeListener access$102(java.beans.PropertyChangeListener)>($r10);

     label5:
        $r8 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: java.beans.PropertyChangeListener access$100()>();

        virtualinvoke r1.<javax.swing.JComponent: void addPropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)>("opaque", $r8);

        $r9 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: java.beans.PropertyChangeListener access$100()>();

        virtualinvoke r1.<javax.swing.JComponent: void putClientProperty(java.lang.Object,java.lang.Object)>("setOpaqueRecursively.opaqueListener", $r9);

     label6:
        return;
    }

    public void postAction(java.awt.Component)
    {
        com.jidesoft.swing.JideSwingUtilities$6 r0;
        java.awt.Component r1;

        r0 := @this: com.jidesoft.swing.JideSwingUtilities$6;

        r1 := @parameter0: java.awt.Component;

        return;
    }
}
