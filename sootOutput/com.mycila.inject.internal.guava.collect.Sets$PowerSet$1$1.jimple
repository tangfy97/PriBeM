class com.mycila.inject.internal.guava.collect.Sets$PowerSet$1$1 extends java.util.AbstractSet
{
    final int val$setBits;
    final com.mycila.inject.internal.guava.collect.Sets$PowerSet$1 this$1;

    void <init>(com.mycila.inject.internal.guava.collect.Sets$PowerSet$1, int)
    {
        int i0;
        com.mycila.inject.internal.guava.collect.Sets$PowerSet$1 r1;
        com.mycila.inject.internal.guava.collect.Sets$PowerSet$1$1 r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.Sets$PowerSet$1$1;

        r1 := @parameter0: com.mycila.inject.internal.guava.collect.Sets$PowerSet$1;

        i0 := @parameter1: int;

        r0.<com.mycila.inject.internal.guava.collect.Sets$PowerSet$1$1: com.mycila.inject.internal.guava.collect.Sets$PowerSet$1 this$1> = r1;

        r0.<com.mycila.inject.internal.guava.collect.Sets$PowerSet$1$1: int val$setBits> = i0;

        specialinvoke r0.<java.util.AbstractSet: void <init>()>();

        return;
    }

    public int size()
    {
        int $i0, $i1;
        com.mycila.inject.internal.guava.collect.Sets$PowerSet$1$1 r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.Sets$PowerSet$1$1;

        $i0 = r0.<com.mycila.inject.internal.guava.collect.Sets$PowerSet$1$1: int val$setBits>;

        $i1 = staticinvoke <java.lang.Integer: int bitCount(int)>($i0);

        return $i1;
    }

    public java.util.Iterator iterator()
    {
        com.mycila.inject.internal.guava.collect.Sets$PowerSet$1 $r2;
        com.mycila.inject.internal.guava.collect.Sets$PowerSet$BitFilteredSetIterator $r0;
        com.mycila.inject.internal.guava.collect.Sets$PowerSet$1$1 r1;
        int $i0;
        com.mycila.inject.internal.guava.collect.ImmutableList $r4;
        com.mycila.inject.internal.guava.collect.Sets$PowerSet $r3;

        r1 := @this: com.mycila.inject.internal.guava.collect.Sets$PowerSet$1$1;

        $r0 = new com.mycila.inject.internal.guava.collect.Sets$PowerSet$BitFilteredSetIterator;

        $r2 = r1.<com.mycila.inject.internal.guava.collect.Sets$PowerSet$1$1: com.mycila.inject.internal.guava.collect.Sets$PowerSet$1 this$1>;

        $r3 = $r2.<com.mycila.inject.internal.guava.collect.Sets$PowerSet$1: com.mycila.inject.internal.guava.collect.Sets$PowerSet this$0>;

        $r4 = $r3.<com.mycila.inject.internal.guava.collect.Sets$PowerSet: com.mycila.inject.internal.guava.collect.ImmutableList inputList>;

        $i0 = r1.<com.mycila.inject.internal.guava.collect.Sets$PowerSet$1$1: int val$setBits>;

        specialinvoke $r0.<com.mycila.inject.internal.guava.collect.Sets$PowerSet$BitFilteredSetIterator: void <init>(com.mycila.inject.internal.guava.collect.ImmutableList,int)>($r4, $i0);

        return $r0;
    }
}
