public class org.codehaus.jackson.map.deser.std.EnumDeserializer$FactoryBasedDeserializer extends org.codehaus.jackson.map.deser.std.StdScalarDeserializer
{
    protected final java.lang.Class _enumClass;
    protected final java.lang.Class _inputType;
    protected final java.lang.reflect.Method _factory;

    public void <init>(java.lang.Class, org.codehaus.jackson.map.introspect.AnnotatedMethod, java.lang.Class)
    {
        org.codehaus.jackson.map.introspect.AnnotatedMethod r2;
        org.codehaus.jackson.map.deser.std.EnumDeserializer$FactoryBasedDeserializer r0;
        java.lang.Class r1, r4;
        java.lang.reflect.Method $r3;

        r0 := @this: org.codehaus.jackson.map.deser.std.EnumDeserializer$FactoryBasedDeserializer;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        r4 := @parameter2: java.lang.Class;

        specialinvoke r0.<org.codehaus.jackson.map.deser.std.StdScalarDeserializer: void <init>(java.lang.Class)>(class "Ljava/lang/Enum;");

        r0.<org.codehaus.jackson.map.deser.std.EnumDeserializer$FactoryBasedDeserializer: java.lang.Class _enumClass> = r1;

        $r3 = virtualinvoke r2.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.reflect.Method getAnnotated()>();

        r0.<org.codehaus.jackson.map.deser.std.EnumDeserializer$FactoryBasedDeserializer: java.lang.reflect.Method _factory> = $r3;

        r0.<org.codehaus.jackson.map.deser.std.EnumDeserializer$FactoryBasedDeserializer: java.lang.Class _inputType> = r4;

        return;
    }

    public java.lang.Object deserialize(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        java.lang.Object[] $r12;
        org.codehaus.jackson.map.deser.std.EnumDeserializer$FactoryBasedDeserializer r0;
        long $l0;
        org.codehaus.jackson.map.DeserializationContext r4;
        org.codehaus.jackson.map.JsonMappingException $r6;
        int $i1;
        java.lang.reflect.Method $r10;
        org.codehaus.jackson.JsonParser r7;
        java.lang.Exception $r8;
        java.io.Serializable r9;
        java.lang.Class $r1, $r2, $r3, $r5, $r11;
        java.lang.Object $r13;

        r0 := @this: org.codehaus.jackson.map.deser.std.EnumDeserializer$FactoryBasedDeserializer;

        r7 := @parameter0: org.codehaus.jackson.JsonParser;

        r4 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r1 = r0.<org.codehaus.jackson.map.deser.std.EnumDeserializer$FactoryBasedDeserializer: java.lang.Class _inputType>;

        if $r1 != null goto label1;

        r9 = virtualinvoke r7.<org.codehaus.jackson.JsonParser: java.lang.String getText()>();

        goto label4;

     label1:
        $r2 = r0.<org.codehaus.jackson.map.deser.std.EnumDeserializer$FactoryBasedDeserializer: java.lang.Class _inputType>;

        if $r2 != class "Ljava/lang/Integer;" goto label2;

        $i1 = virtualinvoke r7.<org.codehaus.jackson.JsonParser: int getValueAsInt()>();

        r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        goto label4;

     label2:
        $r3 = r0.<org.codehaus.jackson.map.deser.std.EnumDeserializer$FactoryBasedDeserializer: java.lang.Class _inputType>;

        if $r3 != class "Ljava/lang/Long;" goto label3;

        $l0 = virtualinvoke r7.<org.codehaus.jackson.JsonParser: long getValueAsLong()>();

        r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        goto label4;

     label3:
        $r5 = r0.<org.codehaus.jackson.map.deser.std.EnumDeserializer$FactoryBasedDeserializer: java.lang.Class _enumClass>;

        $r6 = virtualinvoke r4.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.JsonMappingException mappingException(java.lang.Class)>($r5);

        throw $r6;

     label4:
        $r10 = r0.<org.codehaus.jackson.map.deser.std.EnumDeserializer$FactoryBasedDeserializer: java.lang.reflect.Method _factory>;

        $r11 = r0.<org.codehaus.jackson.map.deser.std.EnumDeserializer$FactoryBasedDeserializer: java.lang.Class _enumClass>;

        $r12 = newarray (java.lang.Object)[1];

        $r12[0] = r9;

        $r13 = virtualinvoke $r10.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r11, $r12);

     label5:
        return $r13;

     label6:
        $r8 := @caughtexception;

        staticinvoke <org.codehaus.jackson.map.util.ClassUtil: void unwrapAndThrowAsIAE(java.lang.Throwable)>($r8);

        return null;

        catch java.lang.Exception from label4 to label5 with label6;
    }
}
