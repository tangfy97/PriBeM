class ucar.nc2.iosp.hdf4.H4header$SpecialChunked extends java.lang.Object
{
    byte version;
    byte flag;
    short chunk_tbl_tag;
    short chunk_tbl_ref;
    int head_len;
    int elem_tot_length;
    int chunk_size;
    int nt_size;
    int ndims;
    int[] dim_length;
    int[] chunk_length;
    byte[][] dim_flag;
    boolean isCompressed;
    short sp_tag_desc;
    byte[] sp_tag_header;
    java.util.List dataChunks;
    final ucar.nc2.iosp.hdf4.H4header this$0;

    private void <init>(ucar.nc2.iosp.hdf4.H4header)
    {
        ucar.nc2.iosp.hdf4.H4header$SpecialChunked r0;
        ucar.nc2.iosp.hdf4.H4header r1;

        r0 := @this: ucar.nc2.iosp.hdf4.H4header$SpecialChunked;

        r1 := @parameter0: ucar.nc2.iosp.hdf4.H4header;

        r0.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: ucar.nc2.iosp.hdf4.H4header this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: java.util.List dataChunks> = null;

        return;
    }

    void read() throws java.io.IOException
    {
        byte[] r28, $r35, $r38, $r42;
        ucar.nc2.iosp.hdf4.H4header$SpecialChunked r0;
        byte $b1, $b2;
        byte[][] $r23, $r41;
        ucar.nc2.iosp.hdf4.H4header $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r26, $r29, $r31, $r33, $r36, $r39, $r43, $r46;
        short $s6, $s7, $s14;
        ucar.unidata.io.RandomAccessFile $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r27, $r30, $r32, $r34, $r37, $r40, $r45, $r48;
        int[] $r24, $r25, $r44, $r47;
        int $i0, $i3, $i4, $i5, $i8, $i9, $i10, $i11, $i12, $i13, $i15, $i16, $i17, i18;

        r0 := @this: ucar.nc2.iosp.hdf4.H4header$SpecialChunked;

        $r1 = r0.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: ucar.nc2.iosp.hdf4.H4header this$0>;

        $r2 = staticinvoke <ucar.nc2.iosp.hdf4.H4header: ucar.unidata.io.RandomAccessFile access$200(ucar.nc2.iosp.hdf4.H4header)>($r1);

        $i0 = virtualinvoke $r2.<ucar.unidata.io.RandomAccessFile: int readInt()>();

        r0.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: int head_len> = $i0;

        $r3 = r0.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: ucar.nc2.iosp.hdf4.H4header this$0>;

        $r4 = staticinvoke <ucar.nc2.iosp.hdf4.H4header: ucar.unidata.io.RandomAccessFile access$200(ucar.nc2.iosp.hdf4.H4header)>($r3);

        $b1 = virtualinvoke $r4.<ucar.unidata.io.RandomAccessFile: byte readByte()>();

        r0.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: byte version> = $b1;

        $r5 = r0.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: ucar.nc2.iosp.hdf4.H4header this$0>;

        $r6 = staticinvoke <ucar.nc2.iosp.hdf4.H4header: ucar.unidata.io.RandomAccessFile access$200(ucar.nc2.iosp.hdf4.H4header)>($r5);

        virtualinvoke $r6.<ucar.unidata.io.RandomAccessFile: int skipBytes(int)>(3);

        $r7 = r0.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: ucar.nc2.iosp.hdf4.H4header this$0>;

        $r8 = staticinvoke <ucar.nc2.iosp.hdf4.H4header: ucar.unidata.io.RandomAccessFile access$200(ucar.nc2.iosp.hdf4.H4header)>($r7);

        $b2 = virtualinvoke $r8.<ucar.unidata.io.RandomAccessFile: byte readByte()>();

        r0.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: byte flag> = $b2;

        $r9 = r0.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: ucar.nc2.iosp.hdf4.H4header this$0>;

        $r10 = staticinvoke <ucar.nc2.iosp.hdf4.H4header: ucar.unidata.io.RandomAccessFile access$200(ucar.nc2.iosp.hdf4.H4header)>($r9);

        $i3 = virtualinvoke $r10.<ucar.unidata.io.RandomAccessFile: int readInt()>();

        r0.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: int elem_tot_length> = $i3;

        $r11 = r0.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: ucar.nc2.iosp.hdf4.H4header this$0>;

        $r12 = staticinvoke <ucar.nc2.iosp.hdf4.H4header: ucar.unidata.io.RandomAccessFile access$200(ucar.nc2.iosp.hdf4.H4header)>($r11);

        $i4 = virtualinvoke $r12.<ucar.unidata.io.RandomAccessFile: int readInt()>();

        r0.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: int chunk_size> = $i4;

        $r13 = r0.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: ucar.nc2.iosp.hdf4.H4header this$0>;

        $r14 = staticinvoke <ucar.nc2.iosp.hdf4.H4header: ucar.unidata.io.RandomAccessFile access$200(ucar.nc2.iosp.hdf4.H4header)>($r13);

        $i5 = virtualinvoke $r14.<ucar.unidata.io.RandomAccessFile: int readInt()>();

        r0.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: int nt_size> = $i5;

        $r15 = r0.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: ucar.nc2.iosp.hdf4.H4header this$0>;

        $r16 = staticinvoke <ucar.nc2.iosp.hdf4.H4header: ucar.unidata.io.RandomAccessFile access$200(ucar.nc2.iosp.hdf4.H4header)>($r15);

        $s6 = virtualinvoke $r16.<ucar.unidata.io.RandomAccessFile: short readShort()>();

        r0.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: short chunk_tbl_tag> = $s6;

        $r17 = r0.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: ucar.nc2.iosp.hdf4.H4header this$0>;

        $r18 = staticinvoke <ucar.nc2.iosp.hdf4.H4header: ucar.unidata.io.RandomAccessFile access$200(ucar.nc2.iosp.hdf4.H4header)>($r17);

        $s7 = virtualinvoke $r18.<ucar.unidata.io.RandomAccessFile: short readShort()>();

        r0.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: short chunk_tbl_ref> = $s7;

        $r19 = r0.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: ucar.nc2.iosp.hdf4.H4header this$0>;

        $r20 = staticinvoke <ucar.nc2.iosp.hdf4.H4header: ucar.unidata.io.RandomAccessFile access$200(ucar.nc2.iosp.hdf4.H4header)>($r19);

        virtualinvoke $r20.<ucar.unidata.io.RandomAccessFile: int skipBytes(int)>(4);

        $r21 = r0.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: ucar.nc2.iosp.hdf4.H4header this$0>;

        $r22 = staticinvoke <ucar.nc2.iosp.hdf4.H4header: ucar.unidata.io.RandomAccessFile access$200(ucar.nc2.iosp.hdf4.H4header)>($r21);

        $i8 = virtualinvoke $r22.<ucar.unidata.io.RandomAccessFile: int readInt()>();

        r0.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: int ndims> = $i8;

        $i9 = r0.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: int ndims>;

        $r23 = newmultiarray (byte)[$i9][4];

        r0.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: byte[][] dim_flag> = $r23;

        $i10 = r0.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: int ndims>;

        $r24 = newarray (int)[$i10];

        r0.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: int[] dim_length> = $r24;

        $i11 = r0.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: int ndims>;

        $r25 = newarray (int)[$i11];

        r0.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: int[] chunk_length> = $r25;

        i18 = 0;

     label1:
        $i12 = r0.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: int ndims>;

        if i18 >= $i12 goto label2;

        $r39 = r0.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: ucar.nc2.iosp.hdf4.H4header this$0>;

        $r40 = staticinvoke <ucar.nc2.iosp.hdf4.H4header: ucar.unidata.io.RandomAccessFile access$200(ucar.nc2.iosp.hdf4.H4header)>($r39);

        $r41 = r0.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: byte[][] dim_flag>;

        $r42 = $r41[i18];

        virtualinvoke $r40.<ucar.unidata.io.RandomAccessFile: int read(byte[])>($r42);

        $r44 = r0.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: int[] dim_length>;

        $r43 = r0.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: ucar.nc2.iosp.hdf4.H4header this$0>;

        $r45 = staticinvoke <ucar.nc2.iosp.hdf4.H4header: ucar.unidata.io.RandomAccessFile access$200(ucar.nc2.iosp.hdf4.H4header)>($r43);

        $i16 = virtualinvoke $r45.<ucar.unidata.io.RandomAccessFile: int readInt()>();

        $r44[i18] = $i16;

        $r47 = r0.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: int[] chunk_length>;

        $r46 = r0.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: ucar.nc2.iosp.hdf4.H4header this$0>;

        $r48 = staticinvoke <ucar.nc2.iosp.hdf4.H4header: ucar.unidata.io.RandomAccessFile access$200(ucar.nc2.iosp.hdf4.H4header)>($r46);

        $i17 = virtualinvoke $r48.<ucar.unidata.io.RandomAccessFile: int readInt()>();

        $r47[i18] = $i17;

        i18 = i18 + 1;

        goto label1;

     label2:
        $r26 = r0.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: ucar.nc2.iosp.hdf4.H4header this$0>;

        $r27 = staticinvoke <ucar.nc2.iosp.hdf4.H4header: ucar.unidata.io.RandomAccessFile access$200(ucar.nc2.iosp.hdf4.H4header)>($r26);

        $i13 = virtualinvoke $r27.<ucar.unidata.io.RandomAccessFile: int readInt()>();

        r28 = newarray (byte)[$i13];

        $r29 = r0.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: ucar.nc2.iosp.hdf4.H4header this$0>;

        $r30 = staticinvoke <ucar.nc2.iosp.hdf4.H4header: ucar.unidata.io.RandomAccessFile access$200(ucar.nc2.iosp.hdf4.H4header)>($r29);

        virtualinvoke $r30.<ucar.unidata.io.RandomAccessFile: int read(byte[])>(r28);

        $r31 = r0.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: ucar.nc2.iosp.hdf4.H4header this$0>;

        $r32 = staticinvoke <ucar.nc2.iosp.hdf4.H4header: ucar.unidata.io.RandomAccessFile access$200(ucar.nc2.iosp.hdf4.H4header)>($r31);

        $s14 = virtualinvoke $r32.<ucar.unidata.io.RandomAccessFile: short readShort()>();

        r0.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: short sp_tag_desc> = $s14;

        $r33 = r0.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: ucar.nc2.iosp.hdf4.H4header this$0>;

        $r34 = staticinvoke <ucar.nc2.iosp.hdf4.H4header: ucar.unidata.io.RandomAccessFile access$200(ucar.nc2.iosp.hdf4.H4header)>($r33);

        $i15 = virtualinvoke $r34.<ucar.unidata.io.RandomAccessFile: int readInt()>();

        $r35 = newarray (byte)[$i15];

        r0.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: byte[] sp_tag_header> = $r35;

        $r36 = r0.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: ucar.nc2.iosp.hdf4.H4header this$0>;

        $r37 = staticinvoke <ucar.nc2.iosp.hdf4.H4header: ucar.unidata.io.RandomAccessFile access$200(ucar.nc2.iosp.hdf4.H4header)>($r36);

        $r38 = r0.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: byte[] sp_tag_header>;

        virtualinvoke $r37.<ucar.unidata.io.RandomAccessFile: int read(byte[])>($r38);

        return;
    }

    java.util.List getDataChunks() throws java.io.IOException
    {
        ucar.nc2.iosp.hdf4.H4header$DataChunk $r21;
        ucar.ma2.ArrayStructure $r42;
        java.lang.Integer $r6, $r18;
        ucar.ma2.StructureMembers$Member $r12, $r13, $r14;
        ucar.nc2.iosp.hdf4.H4header$TagVH $r40;
        ucar.nc2.iosp.hdf4.H4header$SpecialChunked r0;
        int[] $r15, $r22;
        java.util.Map $r5, $r17;
        ucar.nc2.iosp.hdf4.H4header$TagData r20;
        boolean $z0, $z1, $z2;
        java.util.List $r1, $r2, $r24;
        ucar.ma2.StructureMembers $r11;
        java.lang.StringBuilder $r26, $r28, $r29, $r30, $r34, $r36, $r38;
        ucar.nc2.iosp.hdf4.H4header $r4, $r8, $r16, $r23;
        long $l3;
        ucar.nc2.Structure $r41;
        java.util.ArrayList $r3;
        ucar.nc2.iosp.hdf4.H4header$SpecialComp $r25;
        short $s0, $s1, $s4, $s5;
        int $i2, $i6, $i7, i8;
        ucar.nc2.Variable $r9;
        java.lang.String $r31, $r33, $r37, $r39;
        java.io.PrintStream $r27, $r32, $r35;
        ucar.ma2.Array $r10;
        java.lang.Object $r7, $r19;

        r0 := @this: ucar.nc2.iosp.hdf4.H4header$SpecialChunked;

        $r1 = r0.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: java.util.List dataChunks>;

        if $r1 != null goto label6;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: java.util.List dataChunks> = $r3;

        $z0 = staticinvoke <ucar.nc2.iosp.hdf4.H4header: boolean access$600()>();

        if $z0 == 0 goto label1;

        $r35 = <java.lang.System: java.io.PrintStream out>;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" TagData getChunkedTable ");

        $r37 = virtualinvoke r0.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: java.lang.String detail()>();

        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r35.<java.io.PrintStream: void println(java.lang.String)>($r39);

     label1:
        $r4 = r0.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: ucar.nc2.iosp.hdf4.H4header this$0>;

        $r5 = staticinvoke <ucar.nc2.iosp.hdf4.H4header: java.util.Map access$800(ucar.nc2.iosp.hdf4.H4header)>($r4);

        $s1 = r0.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: short chunk_tbl_ref>;

        $s0 = r0.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: short chunk_tbl_tag>;

        $i2 = staticinvoke <ucar.nc2.iosp.hdf4.H4header: int access$700(short,short)>($s1, $s0);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r7 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        $r40 = (ucar.nc2.iosp.hdf4.H4header$TagVH) $r7;

        $r8 = r0.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: ucar.nc2.iosp.hdf4.H4header this$0>;

        $r9 = staticinvoke <ucar.nc2.iosp.hdf4.H4header: ucar.nc2.Variable access$900(ucar.nc2.iosp.hdf4.H4header,ucar.nc2.iosp.hdf4.H4header$TagVH)>($r8, $r40);

        $r41 = (ucar.nc2.Structure) $r9;

        $r10 = virtualinvoke $r41.<ucar.nc2.Structure: ucar.ma2.Array read()>();

        $r42 = (ucar.ma2.ArrayStructure) $r10;

        $z1 = staticinvoke <ucar.nc2.iosp.hdf4.H4header: boolean access$1000()>();

        if $z1 == 0 goto label2;

        $r32 = <java.lang.System: java.io.PrintStream out>;

        $r33 = staticinvoke <ucar.nc2.NCdumpW: java.lang.String printArray(ucar.ma2.Array,java.lang.String,ucar.nc2.util.CancelTask)>($r42, "getChunkedTable", null);

        virtualinvoke $r32.<java.io.PrintStream: void println(java.lang.String)>($r33);

     label2:
        $r11 = virtualinvoke $r42.<ucar.ma2.ArrayStructure: ucar.ma2.StructureMembers getStructureMembers()>();

        $r12 = virtualinvoke $r11.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>("origin");

        $r13 = virtualinvoke $r11.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>("chk_tag");

        $r14 = virtualinvoke $r11.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>("chk_ref");

        $l3 = virtualinvoke $r42.<ucar.ma2.ArrayStructure: long getSize()>();

        $i7 = (int) $l3;

        $z2 = staticinvoke <ucar.nc2.iosp.hdf4.H4header: boolean access$600()>();

        if $z2 == 0 goto label3;

        $r27 = <java.lang.System: java.io.PrintStream out>;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Reading ");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" DataChunk tags");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r27.<java.io.PrintStream: void println(java.lang.String)>($r31);

     label3:
        i8 = 0;

     label4:
        if i8 >= $i7 goto label6;

        $r15 = virtualinvoke $r42.<ucar.ma2.ArrayStructure: int[] getJavaArrayInt(int,ucar.ma2.StructureMembers$Member)>(i8, $r12);

        $s4 = virtualinvoke $r42.<ucar.ma2.ArrayStructure: short getScalarShort(int,ucar.ma2.StructureMembers$Member)>(i8, $r13);

        $s5 = virtualinvoke $r42.<ucar.ma2.ArrayStructure: short getScalarShort(int,ucar.ma2.StructureMembers$Member)>(i8, $r14);

        $r16 = r0.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: ucar.nc2.iosp.hdf4.H4header this$0>;

        $r17 = staticinvoke <ucar.nc2.iosp.hdf4.H4header: java.util.Map access$800(ucar.nc2.iosp.hdf4.H4header)>($r16);

        $i6 = staticinvoke <ucar.nc2.iosp.hdf4.H4header: int access$700(short,short)>($s5, $s4);

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        $r19 = interfaceinvoke $r17.<java.util.Map: java.lang.Object get(java.lang.Object)>($r18);

        r20 = (ucar.nc2.iosp.hdf4.H4header$TagData) $r19;

        $r24 = r0.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: java.util.List dataChunks>;

        $r21 = new ucar.nc2.iosp.hdf4.H4header$DataChunk;

        $r23 = r0.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: ucar.nc2.iosp.hdf4.H4header this$0>;

        $r22 = r0.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: int[] chunk_length>;

        specialinvoke $r21.<ucar.nc2.iosp.hdf4.H4header$DataChunk: void <init>(ucar.nc2.iosp.hdf4.H4header,int[],int[],ucar.nc2.iosp.hdf4.H4header$TagData)>($r23, $r15, $r22, r20);

        interfaceinvoke $r24.<java.util.List: boolean add(java.lang.Object)>($r21);

        r20.<ucar.nc2.iosp.hdf4.H4header$TagData: boolean used> = 1;

        $r25 = r20.<ucar.nc2.iosp.hdf4.H4header$TagData: ucar.nc2.iosp.hdf4.H4header$SpecialComp compress>;

        if $r25 == null goto label5;

        r0.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: boolean isCompressed> = 1;

     label5:
        i8 = i8 + 1;

        goto label4;

     label6:
        $r2 = r0.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: java.util.List dataChunks>;

        return $r2;
    }

    public java.lang.String detail()
    {
        byte[] $r18, $r21, $r24, $r28;
        ucar.nc2.iosp.hdf4.H4header$SpecialChunked r2;
        byte $b1, $b2, $b11, $b12, $b13;
        int[] $r31, $r34;
        byte[][] $r23, $r27;
        java.lang.StringBuilder $r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r20, $r22, $r25, $r26, $r29, $r30, $r32, $r33, $r35, $r36;
        short $s6, $s7, $s9;
        int $i0, $i3, $i4, $i5, $i8, $i10, $i14, $i15, i16, i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25;
        java.lang.String $r19;

        r2 := @this: ucar.nc2.iosp.hdf4.H4header$SpecialChunked;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>(java.lang.String)>("SPECIAL_CHUNKED ");

        $r1 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" head_len=");

        $i0 = r2.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: int head_len>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" version=");

        $b1 = r2.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: byte version>;

        $i18 = (int) $b1;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i18);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" special =");

        $b2 = r2.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: byte flag>;

        $i19 = (int) $b2;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i19);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" elem_tot_length=");

        $i3 = r2.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: int elem_tot_length>;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r9 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" chunk_size=");

        $i4 = r2.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: int chunk_size>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" nt_size=");

        $i5 = r2.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: int nt_size>;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" chunk_tbl_tag=");

        $s6 = r2.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: short chunk_tbl_tag>;

        $i20 = (int) $s6;

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i20);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" chunk_tbl_ref=");

        $s7 = r2.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: short chunk_tbl_ref>;

        $i21 = (int) $s7;

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i21);

        virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n flag  dim  chunk\n");

        i16 = 0;

     label1:
        $i8 = r2.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: int ndims>;

        if i16 >= $i8 goto label2;

        $r22 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r23 = r2.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: byte[][] dim_flag>;

        $r24 = $r23[i16];

        $b12 = $r24[2];

        $i22 = (int) $b12;

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i22);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r27 = r2.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: byte[][] dim_flag>;

        $r28 = $r27[i16];

        $b13 = $r28[3];

        $i23 = (int) $b13;

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i23);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r31 = r2.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: int[] dim_length>;

        $i14 = $r31[i16];

        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r34 = r2.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: int[] chunk_length>;

        $i15 = $r34[i16];

        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i15);

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        i16 = i16 + 1;

        goto label1;

     label2:
        $r16 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" special=");

        $s9 = r2.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: short sp_tag_desc>;

        $i24 = (int) $s9;

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i24);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" val=");

        i17 = 0;

     label3:
        $r18 = r2.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: byte[] sp_tag_header>;

        $i10 = lengthof $r18;

        if i17 >= $i10 goto label4;

        $r20 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r21 = r2.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: byte[] sp_tag_header>;

        $b11 = $r21[i17];

        $i25 = (int) $b11;

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i25);

        i17 = i17 + 1;

        goto label3;

     label4:
        $r19 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r19;
    }

    void <init>(ucar.nc2.iosp.hdf4.H4header, ucar.nc2.iosp.hdf4.H4header$1)
    {
        ucar.nc2.iosp.hdf4.H4header$SpecialChunked r0;
        ucar.nc2.iosp.hdf4.H4header$1 r2;
        ucar.nc2.iosp.hdf4.H4header r1;

        r0 := @this: ucar.nc2.iosp.hdf4.H4header$SpecialChunked;

        r1 := @parameter0: ucar.nc2.iosp.hdf4.H4header;

        r2 := @parameter1: ucar.nc2.iosp.hdf4.H4header$1;

        specialinvoke r0.<ucar.nc2.iosp.hdf4.H4header$SpecialChunked: void <init>(ucar.nc2.iosp.hdf4.H4header)>(r1);

        return;
    }
}
