public class org.apache.batik.svggen.font.table.CmapTable extends java.lang.Object implements org.apache.batik.svggen.font.table.Table
{
    private int version;
    private int numTables;
    private org.apache.batik.svggen.font.table.CmapIndexEntry[] entries;
    private org.apache.batik.svggen.font.table.CmapFormat[] formats;

    protected void <init>(org.apache.batik.svggen.font.table.DirectoryEntry, java.io.RandomAccessFile) throws java.io.IOException
    {
        java.io.RandomAccessFile r1;
        org.apache.batik.svggen.font.table.CmapIndexEntry $r5, $r8;
        long $l1, $l2, $l10, $l11;
        int $i0, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i12, i13, i14;
        org.apache.batik.svggen.font.table.CmapFormat $r10;
        org.apache.batik.svggen.font.table.CmapIndexEntry[] $r3, $r6, $r7;
        org.apache.batik.svggen.font.table.CmapFormat[] $r4, $r9;
        org.apache.batik.svggen.font.table.DirectoryEntry r2;
        org.apache.batik.svggen.font.table.CmapTable r0;

        r0 := @this: org.apache.batik.svggen.font.table.CmapTable;

        r2 := @parameter0: org.apache.batik.svggen.font.table.DirectoryEntry;

        r1 := @parameter1: java.io.RandomAccessFile;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = virtualinvoke r2.<org.apache.batik.svggen.font.table.DirectoryEntry: int getOffset()>();

        $l1 = (long) $i0;

        virtualinvoke r1.<java.io.RandomAccessFile: void seek(long)>($l1);

        $l2 = virtualinvoke r1.<java.io.RandomAccessFile: long getFilePointer()>();

        $i3 = virtualinvoke r1.<java.io.RandomAccessFile: int readUnsignedShort()>();

        r0.<org.apache.batik.svggen.font.table.CmapTable: int version> = $i3;

        $i4 = virtualinvoke r1.<java.io.RandomAccessFile: int readUnsignedShort()>();

        r0.<org.apache.batik.svggen.font.table.CmapTable: int numTables> = $i4;

        $i5 = r0.<org.apache.batik.svggen.font.table.CmapTable: int numTables>;

        $r3 = newarray (org.apache.batik.svggen.font.table.CmapIndexEntry)[$i5];

        r0.<org.apache.batik.svggen.font.table.CmapTable: org.apache.batik.svggen.font.table.CmapIndexEntry[] entries> = $r3;

        $i6 = r0.<org.apache.batik.svggen.font.table.CmapTable: int numTables>;

        $r4 = newarray (org.apache.batik.svggen.font.table.CmapFormat)[$i6];

        r0.<org.apache.batik.svggen.font.table.CmapTable: org.apache.batik.svggen.font.table.CmapFormat[] formats> = $r4;

        i13 = 0;

        goto label2;

     label1:
        $r6 = r0.<org.apache.batik.svggen.font.table.CmapTable: org.apache.batik.svggen.font.table.CmapIndexEntry[] entries>;

        $r5 = new org.apache.batik.svggen.font.table.CmapIndexEntry;

        specialinvoke $r5.<org.apache.batik.svggen.font.table.CmapIndexEntry: void <init>(java.io.RandomAccessFile)>(r1);

        $r6[i13] = $r5;

        i13 = i13 + 1;

     label2:
        $i7 = r0.<org.apache.batik.svggen.font.table.CmapTable: int numTables>;

        if i13 < $i7 goto label1;

        i14 = 0;

        goto label4;

     label3:
        $r7 = r0.<org.apache.batik.svggen.font.table.CmapTable: org.apache.batik.svggen.font.table.CmapIndexEntry[] entries>;

        $r8 = $r7[i14];

        $i9 = virtualinvoke $r8.<org.apache.batik.svggen.font.table.CmapIndexEntry: int getOffset()>();

        $l10 = (long) $i9;

        $l11 = $l2 + $l10;

        virtualinvoke r1.<java.io.RandomAccessFile: void seek(long)>($l11);

        $i12 = virtualinvoke r1.<java.io.RandomAccessFile: int readUnsignedShort()>();

        $r9 = r0.<org.apache.batik.svggen.font.table.CmapTable: org.apache.batik.svggen.font.table.CmapFormat[] formats>;

        $r10 = staticinvoke <org.apache.batik.svggen.font.table.CmapFormat: org.apache.batik.svggen.font.table.CmapFormat create(int,java.io.RandomAccessFile)>($i12, r1);

        $r9[i14] = $r10;

        i14 = i14 + 1;

     label4:
        $i8 = r0.<org.apache.batik.svggen.font.table.CmapTable: int numTables>;

        if i14 < $i8 goto label3;

        return;
    }

    public org.apache.batik.svggen.font.table.CmapFormat getCmapFormat(short, short)
    {
        org.apache.batik.svggen.font.table.CmapIndexEntry $r2, $r4;
        org.apache.batik.svggen.font.table.CmapIndexEntry[] $r1, $r3;
        short s1, s3;
        org.apache.batik.svggen.font.table.CmapFormat[] $r5;
        int $i0, $i2, i4, $i5, $i6, $i7;
        org.apache.batik.svggen.font.table.CmapFormat $r6;
        org.apache.batik.svggen.font.table.CmapTable r0;

        r0 := @this: org.apache.batik.svggen.font.table.CmapTable;

        s1 := @parameter0: short;

        s3 := @parameter1: short;

        i4 = 0;

        goto label3;

     label1:
        $r1 = r0.<org.apache.batik.svggen.font.table.CmapTable: org.apache.batik.svggen.font.table.CmapIndexEntry[] entries>;

        $r2 = $r1[i4];

        $i0 = virtualinvoke $r2.<org.apache.batik.svggen.font.table.CmapIndexEntry: int getPlatformId()>();

        $i6 = (int) s1;

        if $i0 != $i6 goto label2;

        $r3 = r0.<org.apache.batik.svggen.font.table.CmapTable: org.apache.batik.svggen.font.table.CmapIndexEntry[] entries>;

        $r4 = $r3[i4];

        $i2 = virtualinvoke $r4.<org.apache.batik.svggen.font.table.CmapIndexEntry: int getEncodingId()>();

        $i7 = (int) s3;

        if $i2 != $i7 goto label2;

        $r5 = r0.<org.apache.batik.svggen.font.table.CmapTable: org.apache.batik.svggen.font.table.CmapFormat[] formats>;

        $r6 = $r5[i4];

        return $r6;

     label2:
        i4 = i4 + 1;

     label3:
        $i5 = r0.<org.apache.batik.svggen.font.table.CmapTable: int numTables>;

        if i4 < $i5 goto label1;

        return null;
    }

    public int getType()
    {
        org.apache.batik.svggen.font.table.CmapTable r0;

        r0 := @this: org.apache.batik.svggen.font.table.CmapTable;

        return 1668112752;
    }

    public java.lang.String toString()
    {
        org.apache.batik.svggen.font.table.CmapIndexEntry $r5;
        java.lang.StringBuffer $r0, $r2, $r3, $r7, $r8, $r12;
        int $i0, $i1, $i2, $i3, i4, i5;
        org.apache.batik.svggen.font.table.CmapFormat $r10;
        java.lang.String $r6, $r11, $r13;
        org.apache.batik.svggen.font.table.CmapIndexEntry[] $r4;
        org.apache.batik.svggen.font.table.CmapFormat[] $r9;
        org.apache.batik.svggen.font.table.CmapTable r1;

        r1 := @this: org.apache.batik.svggen.font.table.CmapTable;

        $r0 = new java.lang.StringBuffer;

        $i0 = r1.<org.apache.batik.svggen.font.table.CmapTable: int numTables>;

        $i1 = $i0 * 8;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(int)>($i1);

        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("cmap\n");

        i4 = 0;

        goto label2;

     label1:
        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(9);

        $r4 = r1.<org.apache.batik.svggen.font.table.CmapTable: org.apache.batik.svggen.font.table.CmapIndexEntry[] entries>;

        $r5 = $r4[i4];

        $r6 = virtualinvoke $r5.<org.apache.batik.svggen.font.table.CmapIndexEntry: java.lang.String toString()>();

        $r7 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        i4 = i4 + 1;

     label2:
        $i2 = r1.<org.apache.batik.svggen.font.table.CmapTable: int numTables>;

        if i4 < $i2 goto label1;

        i5 = 0;

        goto label4;

     label3:
        $r8 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(9);

        $r9 = r1.<org.apache.batik.svggen.font.table.CmapTable: org.apache.batik.svggen.font.table.CmapFormat[] formats>;

        $r10 = $r9[i5];

        $r11 = virtualinvoke $r10.<org.apache.batik.svggen.font.table.CmapFormat: java.lang.String toString()>();

        $r12 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        i5 = i5 + 1;

     label4:
        $i3 = r1.<org.apache.batik.svggen.font.table.CmapTable: int numTables>;

        if i5 < $i3 goto label3;

        $r13 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r13;
    }
}
