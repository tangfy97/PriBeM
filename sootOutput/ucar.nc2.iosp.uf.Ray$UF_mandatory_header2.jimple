class ucar.nc2.iosp.uf.Ray$UF_mandatory_header2 extends java.lang.Object
{
    java.lang.String textUF;
    short recordSize;
    short offset2StartOfOptionalHeader;
    short localUseHeaderPosition;
    short dataHeaderPosition;
    short recordNumber;
    short volumeNumber;
    short rayNumber;
    short recordNumber1;
    short sweepNumber;
    java.lang.String radarName;
    java.lang.String siteName;
    short latitudeD;
    short latitudeM;
    short latitudeS;
    short longitudeD;
    short longitudeM;
    short longitudeS;
    short height;
    short year;
    short month;
    short day;
    short hour;
    short minute;
    short second;
    java.lang.String timeZone;
    short azimuth;
    short elevation;
    short sweepMode;
    short fixedAngle;
    short sweepRate;
    short year1;
    short month1;
    short day1;
    java.lang.String nameOfUFGeneratorProgram;
    short missing;
    final ucar.nc2.iosp.uf.Ray this$0;

    void <init>(ucar.nc2.iosp.uf.Ray, byte[])
    {
        byte[] r3;
        boolean $z0;
        ucar.nc2.iosp.uf.Ray$UF_mandatory_header2 r0;
        short $s0, $s1, $s2, $s3, $s4, $s5, $s6, $s7, $s8, $s9, $s10, $s11, $s12, $s13, $s14, $s15, $s16, $s18, $s19, $s20, $s21, $s22, $s23, $s24, $s25, $s26, $s27, $s28, $s29, $s30, $s31, $s32;
        ucar.nc2.iosp.uf.Ray r1;
        int $i17, $i33;
        java.lang.String $r8, $r10, $r11, $r12, $r13, $r14;
        java.io.PrintStream $r9;

        r0 := @this: ucar.nc2.iosp.uf.Ray$UF_mandatory_header2;

        r1 := @parameter0: ucar.nc2.iosp.uf.Ray;

        r3 := @parameter1: byte[];

        r0.<ucar.nc2.iosp.uf.Ray$UF_mandatory_header2: ucar.nc2.iosp.uf.Ray this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r10 = new java.lang.String;

        specialinvoke $r10.<java.lang.String: void <init>(byte[],int,int)>(r3, 0, 2);

        r0.<ucar.nc2.iosp.uf.Ray$UF_mandatory_header2: java.lang.String textUF> = $r10;

        $z0 = r1.<ucar.nc2.iosp.uf.Ray: boolean debug>;

        if $z0 == 0 goto label1;

        $r9 = <java.lang.System: java.io.PrintStream out>;

        $r8 = r0.<ucar.nc2.iosp.uf.Ray$UF_mandatory_header2: java.lang.String textUF>;

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r8);

     label1:
        $s0 = virtualinvoke r1.<ucar.nc2.iosp.uf.Ray: short getShort(byte[],int)>(r3, 2);

        r0.<ucar.nc2.iosp.uf.Ray$UF_mandatory_header2: short recordSize> = $s0;

        $s1 = virtualinvoke r1.<ucar.nc2.iosp.uf.Ray: short getShort(byte[],int)>(r3, 4);

        r0.<ucar.nc2.iosp.uf.Ray$UF_mandatory_header2: short offset2StartOfOptionalHeader> = $s1;

        $s2 = virtualinvoke r1.<ucar.nc2.iosp.uf.Ray: short getShort(byte[],int)>(r3, 6);

        r0.<ucar.nc2.iosp.uf.Ray$UF_mandatory_header2: short localUseHeaderPosition> = $s2;

        $s3 = virtualinvoke r1.<ucar.nc2.iosp.uf.Ray: short getShort(byte[],int)>(r3, 8);

        r0.<ucar.nc2.iosp.uf.Ray$UF_mandatory_header2: short dataHeaderPosition> = $s3;

        $s4 = virtualinvoke r1.<ucar.nc2.iosp.uf.Ray: short getShort(byte[],int)>(r3, 10);

        r0.<ucar.nc2.iosp.uf.Ray$UF_mandatory_header2: short recordNumber> = $s4;

        $s5 = virtualinvoke r1.<ucar.nc2.iosp.uf.Ray: short getShort(byte[],int)>(r3, 12);

        r0.<ucar.nc2.iosp.uf.Ray$UF_mandatory_header2: short volumeNumber> = $s5;

        $s6 = virtualinvoke r1.<ucar.nc2.iosp.uf.Ray: short getShort(byte[],int)>(r3, 14);

        r0.<ucar.nc2.iosp.uf.Ray$UF_mandatory_header2: short rayNumber> = $s6;

        $s7 = virtualinvoke r1.<ucar.nc2.iosp.uf.Ray: short getShort(byte[],int)>(r3, 16);

        r0.<ucar.nc2.iosp.uf.Ray$UF_mandatory_header2: short recordNumber1> = $s7;

        $s8 = virtualinvoke r1.<ucar.nc2.iosp.uf.Ray: short getShort(byte[],int)>(r3, 18);

        r0.<ucar.nc2.iosp.uf.Ray$UF_mandatory_header2: short sweepNumber> = $s8;

        $r11 = new java.lang.String;

        specialinvoke $r11.<java.lang.String: void <init>(byte[],int,int)>(r3, 20, 8);

        r0.<ucar.nc2.iosp.uf.Ray$UF_mandatory_header2: java.lang.String radarName> = $r11;

        $r12 = new java.lang.String;

        specialinvoke $r12.<java.lang.String: void <init>(byte[],int,int)>(r3, 28, 8);

        r0.<ucar.nc2.iosp.uf.Ray$UF_mandatory_header2: java.lang.String siteName> = $r12;

        $s9 = virtualinvoke r1.<ucar.nc2.iosp.uf.Ray: short getShort(byte[],int)>(r3, 36);

        r0.<ucar.nc2.iosp.uf.Ray$UF_mandatory_header2: short latitudeD> = $s9;

        $s10 = virtualinvoke r1.<ucar.nc2.iosp.uf.Ray: short getShort(byte[],int)>(r3, 38);

        r0.<ucar.nc2.iosp.uf.Ray$UF_mandatory_header2: short latitudeM> = $s10;

        $s11 = virtualinvoke r1.<ucar.nc2.iosp.uf.Ray: short getShort(byte[],int)>(r3, 40);

        r0.<ucar.nc2.iosp.uf.Ray$UF_mandatory_header2: short latitudeS> = $s11;

        $s12 = virtualinvoke r1.<ucar.nc2.iosp.uf.Ray: short getShort(byte[],int)>(r3, 42);

        r0.<ucar.nc2.iosp.uf.Ray$UF_mandatory_header2: short longitudeD> = $s12;

        $s13 = virtualinvoke r1.<ucar.nc2.iosp.uf.Ray: short getShort(byte[],int)>(r3, 44);

        r0.<ucar.nc2.iosp.uf.Ray$UF_mandatory_header2: short longitudeM> = $s13;

        $s14 = virtualinvoke r1.<ucar.nc2.iosp.uf.Ray: short getShort(byte[],int)>(r3, 46);

        r0.<ucar.nc2.iosp.uf.Ray$UF_mandatory_header2: short longitudeS> = $s14;

        $s15 = virtualinvoke r1.<ucar.nc2.iosp.uf.Ray: short getShort(byte[],int)>(r3, 48);

        r0.<ucar.nc2.iosp.uf.Ray$UF_mandatory_header2: short height> = $s15;

        $s16 = virtualinvoke r1.<ucar.nc2.iosp.uf.Ray: short getShort(byte[],int)>(r3, 50);

        $i33 = (int) $s16;

        $i17 = virtualinvoke r1.<ucar.nc2.iosp.uf.Ray: int getYear(int)>($i33);

        $s18 = (short) $i17;

        r0.<ucar.nc2.iosp.uf.Ray$UF_mandatory_header2: short year> = $s18;

        $s19 = virtualinvoke r1.<ucar.nc2.iosp.uf.Ray: short getShort(byte[],int)>(r3, 52);

        r0.<ucar.nc2.iosp.uf.Ray$UF_mandatory_header2: short month> = $s19;

        $s20 = virtualinvoke r1.<ucar.nc2.iosp.uf.Ray: short getShort(byte[],int)>(r3, 54);

        r0.<ucar.nc2.iosp.uf.Ray$UF_mandatory_header2: short day> = $s20;

        $s21 = virtualinvoke r1.<ucar.nc2.iosp.uf.Ray: short getShort(byte[],int)>(r3, 56);

        r0.<ucar.nc2.iosp.uf.Ray$UF_mandatory_header2: short hour> = $s21;

        $s22 = virtualinvoke r1.<ucar.nc2.iosp.uf.Ray: short getShort(byte[],int)>(r3, 58);

        r0.<ucar.nc2.iosp.uf.Ray$UF_mandatory_header2: short minute> = $s22;

        $s23 = virtualinvoke r1.<ucar.nc2.iosp.uf.Ray: short getShort(byte[],int)>(r3, 60);

        r0.<ucar.nc2.iosp.uf.Ray$UF_mandatory_header2: short second> = $s23;

        $r13 = new java.lang.String;

        specialinvoke $r13.<java.lang.String: void <init>(byte[],int,int)>(r3, 62, 2);

        r0.<ucar.nc2.iosp.uf.Ray$UF_mandatory_header2: java.lang.String timeZone> = $r13;

        $s24 = virtualinvoke r1.<ucar.nc2.iosp.uf.Ray: short getShort(byte[],int)>(r3, 64);

        r0.<ucar.nc2.iosp.uf.Ray$UF_mandatory_header2: short azimuth> = $s24;

        $s25 = virtualinvoke r1.<ucar.nc2.iosp.uf.Ray: short getShort(byte[],int)>(r3, 66);

        r0.<ucar.nc2.iosp.uf.Ray$UF_mandatory_header2: short elevation> = $s25;

        $s26 = virtualinvoke r1.<ucar.nc2.iosp.uf.Ray: short getShort(byte[],int)>(r3, 68);

        r0.<ucar.nc2.iosp.uf.Ray$UF_mandatory_header2: short sweepMode> = $s26;

        $s27 = virtualinvoke r1.<ucar.nc2.iosp.uf.Ray: short getShort(byte[],int)>(r3, 70);

        r0.<ucar.nc2.iosp.uf.Ray$UF_mandatory_header2: short fixedAngle> = $s27;

        $s28 = virtualinvoke r1.<ucar.nc2.iosp.uf.Ray: short getShort(byte[],int)>(r3, 72);

        r0.<ucar.nc2.iosp.uf.Ray$UF_mandatory_header2: short sweepRate> = $s28;

        $s29 = virtualinvoke r1.<ucar.nc2.iosp.uf.Ray: short getShort(byte[],int)>(r3, 74);

        r0.<ucar.nc2.iosp.uf.Ray$UF_mandatory_header2: short year1> = $s29;

        $s30 = virtualinvoke r1.<ucar.nc2.iosp.uf.Ray: short getShort(byte[],int)>(r3, 76);

        r0.<ucar.nc2.iosp.uf.Ray$UF_mandatory_header2: short month1> = $s30;

        $s31 = virtualinvoke r1.<ucar.nc2.iosp.uf.Ray: short getShort(byte[],int)>(r3, 78);

        r0.<ucar.nc2.iosp.uf.Ray$UF_mandatory_header2: short day1> = $s31;

        $r14 = new java.lang.String;

        specialinvoke $r14.<java.lang.String: void <init>(byte[],int,int)>(r3, 80, 8);

        r0.<ucar.nc2.iosp.uf.Ray$UF_mandatory_header2: java.lang.String nameOfUFGeneratorProgram> = $r14;

        $s32 = virtualinvoke r1.<ucar.nc2.iosp.uf.Ray: short getShort(byte[],int)>(r3, 88);

        r0.<ucar.nc2.iosp.uf.Ray$UF_mandatory_header2: short missing> = $s32;

        return;
    }
}
