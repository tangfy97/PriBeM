public class org.apache.cxf.transport.MultipleEndpointObserver extends java.lang.Object implements org.apache.cxf.transport.MessageObserver
{
    public static final java.lang.String ENDPOINTS;
    protected org.apache.cxf.Bus bus;
    protected java.util.List bindingInterceptors;
    protected java.util.List routingInterceptors;
    private java.util.Set endpoints;
    private java.lang.ClassLoader loader;

    public void <init>(org.apache.cxf.Bus)
    {
        org.apache.cxf.Bus r4;
        org.apache.cxf.transport.MultipleEndpointObserver r0;
        java.lang.Object $r5;
        java.lang.ClassLoader $r6;
        java.util.concurrent.CopyOnWriteArraySet $r3;
        java.util.concurrent.CopyOnWriteArrayList $r1, $r2;

        r0 := @this: org.apache.cxf.transport.MultipleEndpointObserver;

        r4 := @parameter0: org.apache.cxf.Bus;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke $r1.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        r0.<org.apache.cxf.transport.MultipleEndpointObserver: java.util.List bindingInterceptors> = $r1;

        $r2 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        r0.<org.apache.cxf.transport.MultipleEndpointObserver: java.util.List routingInterceptors> = $r2;

        $r3 = new java.util.concurrent.CopyOnWriteArraySet;

        specialinvoke $r3.<java.util.concurrent.CopyOnWriteArraySet: void <init>()>();

        r0.<org.apache.cxf.transport.MultipleEndpointObserver: java.util.Set endpoints> = $r3;

        r0.<org.apache.cxf.transport.MultipleEndpointObserver: org.apache.cxf.Bus bus> = r4;

        $r5 = interfaceinvoke r4.<org.apache.cxf.Bus: java.lang.Object getExtension(java.lang.Class)>(class "Ljava/lang/ClassLoader;");

        $r6 = (java.lang.ClassLoader) $r5;

        r0.<org.apache.cxf.transport.MultipleEndpointObserver: java.lang.ClassLoader loader> = $r6;

        return;
    }

    public void onMessage(org.apache.cxf.message.Message)
    {
        org.apache.cxf.Bus $r1, $r2, $r7, $r12, $r19;
        java.lang.Throwable $r18;
        org.apache.cxf.transport.MultipleEndpointObserver r0;
        org.apache.cxf.message.Message $r5, r20;
        org.apache.cxf.message.ExchangeImpl $r16;
        java.util.Set $r11, $r13;
        org.apache.cxf.common.classloader.ClassLoaderUtils$ClassLoaderHolder r21;
        org.apache.cxf.message.Exchange $r4, r22;
        java.util.List $r8, $r9, $r10, $r14, $r15;
        org.apache.cxf.phase.PhaseInterceptorChain $r6;
        java.lang.ClassLoader $r3, $r17;

        r0 := @this: org.apache.cxf.transport.MultipleEndpointObserver;

        r20 := @parameter0: org.apache.cxf.message.Message;

        $r1 = r0.<org.apache.cxf.transport.MultipleEndpointObserver: org.apache.cxf.Bus bus>;

        $r2 = staticinvoke <org.apache.cxf.BusFactory: org.apache.cxf.Bus getAndSetThreadDefaultBus(org.apache.cxf.Bus)>($r1);

        r21 = null;

     label01:
        $r3 = r0.<org.apache.cxf.transport.MultipleEndpointObserver: java.lang.ClassLoader loader>;

        if $r3 == null goto label02;

        $r17 = r0.<org.apache.cxf.transport.MultipleEndpointObserver: java.lang.ClassLoader loader>;

        r21 = staticinvoke <org.apache.cxf.common.classloader.ClassLoaderUtils: org.apache.cxf.common.classloader.ClassLoaderUtils$ClassLoaderHolder setThreadContextClassloader(java.lang.ClassLoader)>($r17);

     label02:
        $r4 = interfaceinvoke r20.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        r22 = $r4;

        if $r4 != null goto label03;

        $r16 = new org.apache.cxf.message.ExchangeImpl;

        specialinvoke $r16.<org.apache.cxf.message.ExchangeImpl: void <init>()>();

        r22 = $r16;

        interfaceinvoke $r16.<org.apache.cxf.message.Exchange: void setInMessage(org.apache.cxf.message.Message)>(r20);

        interfaceinvoke r20.<org.apache.cxf.message.Message: void setExchange(org.apache.cxf.message.Exchange)>($r16);

     label03:
        $r5 = virtualinvoke r0.<org.apache.cxf.transport.MultipleEndpointObserver: org.apache.cxf.message.Message createMessage(org.apache.cxf.message.Message)>(r20);

        interfaceinvoke $r5.<org.apache.cxf.message.Message: void setExchange(org.apache.cxf.message.Exchange)>(r22);

        interfaceinvoke r22.<org.apache.cxf.message.Exchange: void setInMessage(org.apache.cxf.message.Message)>($r5);

        virtualinvoke r0.<org.apache.cxf.transport.MultipleEndpointObserver: void setExchangeProperties(org.apache.cxf.message.Exchange,org.apache.cxf.message.Message)>(r22, $r5);

        $r6 = virtualinvoke r0.<org.apache.cxf.transport.MultipleEndpointObserver: org.apache.cxf.phase.PhaseInterceptorChain createChain()>();

        interfaceinvoke $r5.<org.apache.cxf.message.Message: void setInterceptorChain(org.apache.cxf.interceptor.InterceptorChain)>($r6);

        $r7 = r0.<org.apache.cxf.transport.MultipleEndpointObserver: org.apache.cxf.Bus bus>;

        $r8 = interfaceinvoke $r7.<org.apache.cxf.Bus: java.util.List getInInterceptors()>();

        virtualinvoke $r6.<org.apache.cxf.phase.PhaseInterceptorChain: void add(java.util.Collection)>($r8);

        $r9 = r0.<org.apache.cxf.transport.MultipleEndpointObserver: java.util.List bindingInterceptors>;

        if $r9 == null goto label04;

        $r15 = r0.<org.apache.cxf.transport.MultipleEndpointObserver: java.util.List bindingInterceptors>;

        virtualinvoke $r6.<org.apache.cxf.phase.PhaseInterceptorChain: void add(java.util.Collection)>($r15);

     label04:
        $r10 = r0.<org.apache.cxf.transport.MultipleEndpointObserver: java.util.List routingInterceptors>;

        if $r10 == null goto label05;

        $r14 = r0.<org.apache.cxf.transport.MultipleEndpointObserver: java.util.List routingInterceptors>;

        virtualinvoke $r6.<org.apache.cxf.phase.PhaseInterceptorChain: void add(java.util.Collection)>($r14);

     label05:
        $r11 = r0.<org.apache.cxf.transport.MultipleEndpointObserver: java.util.Set endpoints>;

        if $r11 == null goto label06;

        $r13 = r0.<org.apache.cxf.transport.MultipleEndpointObserver: java.util.Set endpoints>;

        interfaceinvoke r22.<org.apache.cxf.message.Exchange: java.lang.Object put(java.lang.Object,java.lang.Object)>("multipleEndpointObserver.endpoints", $r13);

     label06:
        virtualinvoke $r6.<org.apache.cxf.phase.PhaseInterceptorChain: boolean doIntercept(org.apache.cxf.message.Message)>($r5);

     label07:
        $r12 = r0.<org.apache.cxf.transport.MultipleEndpointObserver: org.apache.cxf.Bus bus>;

        if $r2 == $r12 goto label08;

        staticinvoke <org.apache.cxf.BusFactory: void setThreadDefaultBus(org.apache.cxf.Bus)>($r2);

     label08:
        if r21 == null goto label13;

        virtualinvoke r21.<org.apache.cxf.common.classloader.ClassLoaderUtils$ClassLoaderHolder: void reset()>();

        goto label13;

     label09:
        $r18 := @caughtexception;

     label10:
        $r19 = r0.<org.apache.cxf.transport.MultipleEndpointObserver: org.apache.cxf.Bus bus>;

        if $r2 == $r19 goto label11;

        staticinvoke <org.apache.cxf.BusFactory: void setThreadDefaultBus(org.apache.cxf.Bus)>($r2);

     label11:
        if r21 == null goto label12;

        virtualinvoke r21.<org.apache.cxf.common.classloader.ClassLoaderUtils$ClassLoaderHolder: void reset()>();

     label12:
        throw $r18;

     label13:
        return;

        catch java.lang.Throwable from label01 to label07 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    protected org.apache.cxf.message.Message createMessage(org.apache.cxf.message.Message)
    {
        org.apache.cxf.message.Message r0;
        org.apache.cxf.transport.MultipleEndpointObserver r1;

        r1 := @this: org.apache.cxf.transport.MultipleEndpointObserver;

        r0 := @parameter0: org.apache.cxf.message.Message;

        return r0;
    }

    protected org.apache.cxf.phase.PhaseInterceptorChain createChain()
    {
        org.apache.cxf.Bus $r2;
        org.apache.cxf.phase.PhaseManager $r4;
        java.util.SortedSet $r5;
        org.apache.cxf.transport.MultipleEndpointObserver r1;
        org.apache.cxf.phase.PhaseInterceptorChain $r0;
        java.lang.Object $r3;

        r1 := @this: org.apache.cxf.transport.MultipleEndpointObserver;

        $r0 = new org.apache.cxf.phase.PhaseInterceptorChain;

        $r2 = r1.<org.apache.cxf.transport.MultipleEndpointObserver: org.apache.cxf.Bus bus>;

        $r3 = interfaceinvoke $r2.<org.apache.cxf.Bus: java.lang.Object getExtension(java.lang.Class)>(class "Lorg/apache/cxf/phase/PhaseManager;");

        $r4 = (org.apache.cxf.phase.PhaseManager) $r3;

        $r5 = interfaceinvoke $r4.<org.apache.cxf.phase.PhaseManager: java.util.SortedSet getInPhases()>();

        specialinvoke $r0.<org.apache.cxf.phase.PhaseInterceptorChain: void <init>(java.util.SortedSet)>($r5);

        return $r0;
    }

    protected void setExchangeProperties(org.apache.cxf.message.Exchange, org.apache.cxf.message.Message)
    {
        org.apache.cxf.Bus $r2;
        org.apache.cxf.transport.Destination $r3, $r5;
        org.apache.cxf.transport.MultipleEndpointObserver r1;
        org.apache.cxf.message.Message r4;
        org.apache.cxf.message.Exchange r0;

        r1 := @this: org.apache.cxf.transport.MultipleEndpointObserver;

        r0 := @parameter0: org.apache.cxf.message.Exchange;

        r4 := @parameter1: org.apache.cxf.message.Message;

        $r2 = r1.<org.apache.cxf.transport.MultipleEndpointObserver: org.apache.cxf.Bus bus>;

        interfaceinvoke r0.<org.apache.cxf.message.Exchange: void put(java.lang.Class,java.lang.Object)>(class "Lorg/apache/cxf/Bus;", $r2);

        $r3 = interfaceinvoke r0.<org.apache.cxf.message.Exchange: org.apache.cxf.transport.Destination getDestination()>();

        if $r3 != null goto label1;

        $r5 = interfaceinvoke r4.<org.apache.cxf.message.Message: org.apache.cxf.transport.Destination getDestination()>();

        interfaceinvoke r0.<org.apache.cxf.message.Exchange: void setDestination(org.apache.cxf.transport.Destination)>($r5);

     label1:
        return;
    }

    public java.util.List getBindingInterceptors()
    {
        java.util.List $r1;
        org.apache.cxf.transport.MultipleEndpointObserver r0;

        r0 := @this: org.apache.cxf.transport.MultipleEndpointObserver;

        $r1 = r0.<org.apache.cxf.transport.MultipleEndpointObserver: java.util.List bindingInterceptors>;

        return $r1;
    }

    public java.util.List getRoutingInterceptors()
    {
        java.util.List $r1;
        org.apache.cxf.transport.MultipleEndpointObserver r0;

        r0 := @this: org.apache.cxf.transport.MultipleEndpointObserver;

        $r1 = r0.<org.apache.cxf.transport.MultipleEndpointObserver: java.util.List routingInterceptors>;

        return $r1;
    }

    public java.util.Set getEndpoints()
    {
        java.util.Set $r1;
        org.apache.cxf.transport.MultipleEndpointObserver r0;

        r0 := @this: org.apache.cxf.transport.MultipleEndpointObserver;

        $r1 = r0.<org.apache.cxf.transport.MultipleEndpointObserver: java.util.Set endpoints>;

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.cxf.transport.MultipleEndpointObserver: java.lang.String ENDPOINTS> = "multipleEndpointObserver.endpoints";

        return;
    }
}
