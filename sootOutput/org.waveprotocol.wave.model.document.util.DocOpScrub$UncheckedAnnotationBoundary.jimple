public class org.waveprotocol.wave.model.document.util.DocOpScrub$UncheckedAnnotationBoundary extends java.lang.Object implements org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap
{
    private final java.lang.String[] ends;
    private final org.waveprotocol.wave.model.document.util.DocOpScrub$UncheckedAnnotationBoundary$Triplet[] changes;

    public void <init>(java.lang.String[], java.lang.String[])
    {
        java.lang.String[] r1, r2, $r3, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, $i8;
        java.lang.String $r8, $r9, $r10;
        boolean $z0;
        org.waveprotocol.wave.model.document.util.DocOpScrub$UncheckedAnnotationBoundary$Triplet[] $r5, $r6, $r11;
        org.waveprotocol.wave.model.document.util.DocOpScrub$UncheckedAnnotationBoundary r0;
        org.waveprotocol.wave.model.document.util.DocOpScrub$UncheckedAnnotationBoundary$Triplet $r7;

        r0 := @this: org.waveprotocol.wave.model.document.util.DocOpScrub$UncheckedAnnotationBoundary;

        r1 := @parameter0: java.lang.String[];

        r2 := @parameter1: java.lang.String[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = lengthof r1;

        $i1 = $i0 % 3;

        if $i1 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.waveprotocol.wave.model.util.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, "triplets.length not a multiple of 3");

        $r3 = specialinvoke r0.<org.waveprotocol.wave.model.document.util.DocOpScrub$UncheckedAnnotationBoundary: java.lang.String[] copy(java.lang.String[])>(r2);

        r0.<org.waveprotocol.wave.model.document.util.DocOpScrub$UncheckedAnnotationBoundary: java.lang.String[] ends> = $r3;

        $r4 = r0.<org.waveprotocol.wave.model.document.util.DocOpScrub$UncheckedAnnotationBoundary: java.lang.String[] ends>;

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[])>($r4);

        $i2 = lengthof r1;

        $i3 = $i2 / 3;

        $r5 = newarray (org.waveprotocol.wave.model.document.util.DocOpScrub$UncheckedAnnotationBoundary$Triplet)[$i3];

        r0.<org.waveprotocol.wave.model.document.util.DocOpScrub$UncheckedAnnotationBoundary: org.waveprotocol.wave.model.document.util.DocOpScrub$UncheckedAnnotationBoundary$Triplet[] changes> = $r5;

        i7 = 0;

     label3:
        $i8 = lengthof r1;

        if i7 >= $i8 goto label4;

        $r11 = r0.<org.waveprotocol.wave.model.document.util.DocOpScrub$UncheckedAnnotationBoundary: org.waveprotocol.wave.model.document.util.DocOpScrub$UncheckedAnnotationBoundary$Triplet[] changes>;

        $i6 = i7 / 3;

        $r7 = new org.waveprotocol.wave.model.document.util.DocOpScrub$UncheckedAnnotationBoundary$Triplet;

        $r10 = r1[i7];

        $i4 = i7 + 1;

        $r9 = r1[$i4];

        $i5 = i7 + 2;

        $r8 = r1[$i5];

        specialinvoke $r7.<org.waveprotocol.wave.model.document.util.DocOpScrub$UncheckedAnnotationBoundary$Triplet: void <init>(java.lang.String,java.lang.String,java.lang.String,org.waveprotocol.wave.model.document.util.DocOpScrub$1)>($r10, $r9, $r8, null);

        $r11[$i6] = $r7;

        i7 = i7 + 3;

        goto label3;

     label4:
        $r6 = r0.<org.waveprotocol.wave.model.document.util.DocOpScrub$UncheckedAnnotationBoundary: org.waveprotocol.wave.model.document.util.DocOpScrub$UncheckedAnnotationBoundary$Triplet[] changes>;

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[])>($r6);

        return;
    }

    private java.lang.String[] copy(java.lang.String[])
    {
        int $i0, $i1, i2;
        java.lang.String[] r0, r1;
        java.lang.String $r2;
        org.waveprotocol.wave.model.document.util.DocOpScrub$UncheckedAnnotationBoundary r3;

        r3 := @this: org.waveprotocol.wave.model.document.util.DocOpScrub$UncheckedAnnotationBoundary;

        r0 := @parameter0: java.lang.String[];

        $i0 = lengthof r0;

        r1 = newarray (java.lang.String)[$i0];

        i2 = 0;

     label1:
        $i1 = lengthof r0;

        if i2 >= $i1 goto label2;

        $r2 = r0[i2];

        r1[i2] = $r2;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r1;
    }

    public int changeSize()
    {
        int $i0;
        org.waveprotocol.wave.model.document.util.DocOpScrub$UncheckedAnnotationBoundary r0;
        org.waveprotocol.wave.model.document.util.DocOpScrub$UncheckedAnnotationBoundary$Triplet[] $r1;

        r0 := @this: org.waveprotocol.wave.model.document.util.DocOpScrub$UncheckedAnnotationBoundary;

        $r1 = r0.<org.waveprotocol.wave.model.document.util.DocOpScrub$UncheckedAnnotationBoundary: org.waveprotocol.wave.model.document.util.DocOpScrub$UncheckedAnnotationBoundary$Triplet[] changes>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public int endSize()
    {
        int $i0;
        java.lang.String[] $r1;
        org.waveprotocol.wave.model.document.util.DocOpScrub$UncheckedAnnotationBoundary r0;

        r0 := @this: org.waveprotocol.wave.model.document.util.DocOpScrub$UncheckedAnnotationBoundary;

        $r1 = r0.<org.waveprotocol.wave.model.document.util.DocOpScrub$UncheckedAnnotationBoundary: java.lang.String[] ends>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public java.lang.String getChangeKey(int)
    {
        int i0;
        java.lang.String $r3;
        org.waveprotocol.wave.model.document.util.DocOpScrub$UncheckedAnnotationBoundary r0;
        org.waveprotocol.wave.model.document.util.DocOpScrub$UncheckedAnnotationBoundary$Triplet $r2;
        org.waveprotocol.wave.model.document.util.DocOpScrub$UncheckedAnnotationBoundary$Triplet[] $r1;

        r0 := @this: org.waveprotocol.wave.model.document.util.DocOpScrub$UncheckedAnnotationBoundary;

        i0 := @parameter0: int;

        $r1 = r0.<org.waveprotocol.wave.model.document.util.DocOpScrub$UncheckedAnnotationBoundary: org.waveprotocol.wave.model.document.util.DocOpScrub$UncheckedAnnotationBoundary$Triplet[] changes>;

        $r2 = $r1[i0];

        $r3 = staticinvoke <org.waveprotocol.wave.model.document.util.DocOpScrub$UncheckedAnnotationBoundary$Triplet: java.lang.String access$100(org.waveprotocol.wave.model.document.util.DocOpScrub$UncheckedAnnotationBoundary$Triplet)>($r2);

        return $r3;
    }

    public java.lang.String getEndKey(int)
    {
        int i0;
        java.lang.String[] $r1;
        java.lang.String $r2;
        org.waveprotocol.wave.model.document.util.DocOpScrub$UncheckedAnnotationBoundary r0;

        r0 := @this: org.waveprotocol.wave.model.document.util.DocOpScrub$UncheckedAnnotationBoundary;

        i0 := @parameter0: int;

        $r1 = r0.<org.waveprotocol.wave.model.document.util.DocOpScrub$UncheckedAnnotationBoundary: java.lang.String[] ends>;

        $r2 = $r1[i0];

        return $r2;
    }

    public java.lang.String getNewValue(int)
    {
        int i0;
        java.lang.String $r3;
        org.waveprotocol.wave.model.document.util.DocOpScrub$UncheckedAnnotationBoundary r0;
        org.waveprotocol.wave.model.document.util.DocOpScrub$UncheckedAnnotationBoundary$Triplet $r2;
        org.waveprotocol.wave.model.document.util.DocOpScrub$UncheckedAnnotationBoundary$Triplet[] $r1;

        r0 := @this: org.waveprotocol.wave.model.document.util.DocOpScrub$UncheckedAnnotationBoundary;

        i0 := @parameter0: int;

        $r1 = r0.<org.waveprotocol.wave.model.document.util.DocOpScrub$UncheckedAnnotationBoundary: org.waveprotocol.wave.model.document.util.DocOpScrub$UncheckedAnnotationBoundary$Triplet[] changes>;

        $r2 = $r1[i0];

        $r3 = staticinvoke <org.waveprotocol.wave.model.document.util.DocOpScrub$UncheckedAnnotationBoundary$Triplet: java.lang.String access$200(org.waveprotocol.wave.model.document.util.DocOpScrub$UncheckedAnnotationBoundary$Triplet)>($r2);

        return $r3;
    }

    public java.lang.String getOldValue(int)
    {
        int i0;
        java.lang.String $r3;
        org.waveprotocol.wave.model.document.util.DocOpScrub$UncheckedAnnotationBoundary r0;
        org.waveprotocol.wave.model.document.util.DocOpScrub$UncheckedAnnotationBoundary$Triplet $r2;
        org.waveprotocol.wave.model.document.util.DocOpScrub$UncheckedAnnotationBoundary$Triplet[] $r1;

        r0 := @this: org.waveprotocol.wave.model.document.util.DocOpScrub$UncheckedAnnotationBoundary;

        i0 := @parameter0: int;

        $r1 = r0.<org.waveprotocol.wave.model.document.util.DocOpScrub$UncheckedAnnotationBoundary: org.waveprotocol.wave.model.document.util.DocOpScrub$UncheckedAnnotationBoundary$Triplet[] changes>;

        $r2 = $r1[i0];

        $r3 = staticinvoke <org.waveprotocol.wave.model.document.util.DocOpScrub$UncheckedAnnotationBoundary$Triplet: java.lang.String access$300(org.waveprotocol.wave.model.document.util.DocOpScrub$UncheckedAnnotationBoundary$Triplet)>($r2);

        return $r3;
    }
}
