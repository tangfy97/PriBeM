public class com.hp.hpl.jena.n3.turtle.TurtleEventDump extends java.lang.Object implements com.hp.hpl.jena.n3.turtle.TurtleEventHandler
{

    public void <init>()
    {
        com.hp.hpl.jena.n3.turtle.TurtleEventDump r0;

        r0 := @this: com.hp.hpl.jena.n3.turtle.TurtleEventDump;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void triple(int, int, com.hp.hpl.jena.graph.Triple)
    {
        java.io.PrintStream $r1, $r3, $r5;
        com.hp.hpl.jena.n3.turtle.TurtleEventDump r0;
        com.hp.hpl.jena.graph.Triple r4;
        int i0, i1;
        java.lang.String $r2, $r6;

        r0 := @this: com.hp.hpl.jena.n3.turtle.TurtleEventDump;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r4 := @parameter2: com.hp.hpl.jena.graph.Triple;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r2 = specialinvoke r0.<com.hp.hpl.jena.n3.turtle.TurtleEventDump: java.lang.String mark(int,int)>(i0, i1);

        virtualinvoke $r1.<java.io.PrintStream: void print(java.lang.String)>($r2);

        $r3 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r3.<java.io.PrintStream: void print(java.lang.String)>(" ");

        $r5 = <java.lang.System: java.io.PrintStream out>;

        $r6 = virtualinvoke r4.<com.hp.hpl.jena.graph.Triple: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r6);

        return;
    }

    public void startFormula(int, int)
    {
        java.io.PrintStream $r1, $r3;
        int i0, i1;
        java.lang.String $r2;
        com.hp.hpl.jena.n3.turtle.TurtleEventDump r0;

        r0 := @this: com.hp.hpl.jena.n3.turtle.TurtleEventDump;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r2 = specialinvoke r0.<com.hp.hpl.jena.n3.turtle.TurtleEventDump: java.lang.String mark(int,int)>(i0, i1);

        virtualinvoke $r1.<java.io.PrintStream: void print(java.lang.String)>($r2);

        $r3 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("{");

        return;
    }

    public void endFormula(int, int)
    {
        java.io.PrintStream $r1, $r3;
        int i0, i1;
        java.lang.String $r2;
        com.hp.hpl.jena.n3.turtle.TurtleEventDump r0;

        r0 := @this: com.hp.hpl.jena.n3.turtle.TurtleEventDump;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r2 = specialinvoke r0.<com.hp.hpl.jena.n3.turtle.TurtleEventDump: java.lang.String mark(int,int)>(i0, i1);

        virtualinvoke $r1.<java.io.PrintStream: void print(java.lang.String)>($r2);

        $r3 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("}");

        return;
    }

    private java.lang.String mark(int, int)
    {
        com.hp.hpl.jena.n3.turtle.TurtleEventDump r7;
        int i0, i1;
        java.lang.StringBuilder $r0, $r1, $r2, $r3, $r4, $r5;
        java.lang.String $r6;

        r7 := @this: com.hp.hpl.jena.n3.turtle.TurtleEventDump;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public void prefix(int, int, java.lang.String, java.lang.String)
    {
        java.io.PrintStream $r1, $r3, $r5;
        com.hp.hpl.jena.n3.turtle.TurtleEventDump r0;
        int i0, i1;
        java.lang.StringBuilder $r4, $r7, $r8, $r10;
        java.lang.String $r2, r6, r9, $r11;

        r0 := @this: com.hp.hpl.jena.n3.turtle.TurtleEventDump;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r6 := @parameter2: java.lang.String;

        r9 := @parameter3: java.lang.String;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r2 = specialinvoke r0.<com.hp.hpl.jena.n3.turtle.TurtleEventDump: java.lang.String mark(int,int)>(i0, i1);

        virtualinvoke $r1.<java.io.PrintStream: void print(java.lang.String)>($r2);

        $r3 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r3.<java.io.PrintStream: void print(java.lang.String)>(" @prefix ");

        $r5 = <java.lang.System: java.io.PrintStream out>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": => ");

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r11);

        return;
    }
}
