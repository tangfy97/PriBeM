public class org.apache.cxf.feature.LoggingFeature extends org.apache.cxf.feature.AbstractFeature
{
    private static final int DEFAULT_LIMIT;
    private static final org.apache.cxf.interceptor.LoggingInInterceptor IN;
    private static final org.apache.cxf.interceptor.LoggingOutInterceptor OUT;
    java.lang.String inLocation;
    java.lang.String outLocation;
    boolean prettyLogging;
    boolean showBinary;
    int limit;

    public void <init>()
    {
        org.apache.cxf.feature.LoggingFeature r0;

        r0 := @this: org.apache.cxf.feature.LoggingFeature;

        specialinvoke r0.<org.apache.cxf.feature.AbstractFeature: void <init>()>();

        r0.<org.apache.cxf.feature.LoggingFeature: int limit> = 65536;

        return;
    }

    public void <init>(int)
    {
        int i0;
        org.apache.cxf.feature.LoggingFeature r0;

        r0 := @this: org.apache.cxf.feature.LoggingFeature;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.cxf.feature.AbstractFeature: void <init>()>();

        r0.<org.apache.cxf.feature.LoggingFeature: int limit> = 65536;

        r0.<org.apache.cxf.feature.LoggingFeature: int limit> = i0;

        return;
    }

    public void <init>(java.lang.String, java.lang.String)
    {
        org.apache.cxf.feature.LoggingFeature r0;
        java.lang.String r1, r2;

        r0 := @this: org.apache.cxf.feature.LoggingFeature;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.cxf.feature.AbstractFeature: void <init>()>();

        r0.<org.apache.cxf.feature.LoggingFeature: int limit> = 65536;

        r0.<org.apache.cxf.feature.LoggingFeature: java.lang.String inLocation> = r1;

        r0.<org.apache.cxf.feature.LoggingFeature: java.lang.String outLocation> = r2;

        return;
    }

    public void <init>(java.lang.String, java.lang.String, int)
    {
        org.apache.cxf.feature.LoggingFeature r0;
        int i0;
        java.lang.String r1, r2;

        r0 := @this: org.apache.cxf.feature.LoggingFeature;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        specialinvoke r0.<org.apache.cxf.feature.AbstractFeature: void <init>()>();

        r0.<org.apache.cxf.feature.LoggingFeature: int limit> = 65536;

        r0.<org.apache.cxf.feature.LoggingFeature: java.lang.String inLocation> = r1;

        r0.<org.apache.cxf.feature.LoggingFeature: java.lang.String outLocation> = r2;

        r0.<org.apache.cxf.feature.LoggingFeature: int limit> = i0;

        return;
    }

    public void <init>(java.lang.String, java.lang.String, int, boolean)
    {
        org.apache.cxf.feature.LoggingFeature r0;
        int i0;
        java.lang.String r1, r2;
        boolean z0;

        r0 := @this: org.apache.cxf.feature.LoggingFeature;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        specialinvoke r0.<org.apache.cxf.feature.AbstractFeature: void <init>()>();

        r0.<org.apache.cxf.feature.LoggingFeature: int limit> = 65536;

        r0.<org.apache.cxf.feature.LoggingFeature: java.lang.String inLocation> = r1;

        r0.<org.apache.cxf.feature.LoggingFeature: java.lang.String outLocation> = r2;

        r0.<org.apache.cxf.feature.LoggingFeature: int limit> = i0;

        r0.<org.apache.cxf.feature.LoggingFeature: boolean prettyLogging> = z0;

        return;
    }

    public void <init>(java.lang.String, java.lang.String, int, boolean, boolean)
    {
        org.apache.cxf.feature.LoggingFeature r0;
        int i0;
        java.lang.String r1, r2;
        boolean z0, z1;

        r0 := @this: org.apache.cxf.feature.LoggingFeature;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        specialinvoke r0.<org.apache.cxf.feature.LoggingFeature: void <init>(java.lang.String,java.lang.String,int,boolean)>(r1, r2, i0, z0);

        r0.<org.apache.cxf.feature.LoggingFeature: boolean showBinary> = z1;

        return;
    }

    public void <init>(org.apache.cxf.annotations.Logging)
    {
        org.apache.cxf.feature.LoggingFeature r0;
        int $i0;
        java.lang.String $r2, $r3;
        org.apache.cxf.annotations.Logging r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.cxf.feature.LoggingFeature;

        r1 := @parameter0: org.apache.cxf.annotations.Logging;

        specialinvoke r0.<org.apache.cxf.feature.AbstractFeature: void <init>()>();

        r0.<org.apache.cxf.feature.LoggingFeature: int limit> = 65536;

        $r2 = interfaceinvoke r1.<org.apache.cxf.annotations.Logging: java.lang.String inLocation()>();

        r0.<org.apache.cxf.feature.LoggingFeature: java.lang.String inLocation> = $r2;

        $r3 = interfaceinvoke r1.<org.apache.cxf.annotations.Logging: java.lang.String outLocation()>();

        r0.<org.apache.cxf.feature.LoggingFeature: java.lang.String outLocation> = $r3;

        $i0 = interfaceinvoke r1.<org.apache.cxf.annotations.Logging: int limit()>();

        r0.<org.apache.cxf.feature.LoggingFeature: int limit> = $i0;

        $z0 = interfaceinvoke r1.<org.apache.cxf.annotations.Logging: boolean pretty()>();

        r0.<org.apache.cxf.feature.LoggingFeature: boolean prettyLogging> = $z0;

        $z1 = interfaceinvoke r1.<org.apache.cxf.annotations.Logging: boolean showBinary()>();

        r0.<org.apache.cxf.feature.LoggingFeature: boolean showBinary> = $z1;

        return;
    }

    protected void initializeProvider(org.apache.cxf.interceptor.InterceptorProvider, org.apache.cxf.Bus)
    {
        org.apache.cxf.Bus r12;
        org.apache.cxf.interceptor.LoggingOutInterceptor $r9, $r11, $r15;
        int $i0, $i1, $i2;
        java.lang.String $r2, $r3, $r14, $r16;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.cxf.feature.LoggingFeature r0;
        java.util.List $r4, $r6, $r8, $r10, $r17, $r18, $r19, $r20;
        org.apache.cxf.interceptor.InterceptorProvider r1;
        org.apache.cxf.interceptor.LoggingInInterceptor $r5, $r7, $r13;

        r0 := @this: org.apache.cxf.feature.LoggingFeature;

        r1 := @parameter0: org.apache.cxf.interceptor.InterceptorProvider;

        r12 := @parameter1: org.apache.cxf.Bus;

        $i0 = r0.<org.apache.cxf.feature.LoggingFeature: int limit>;

        if $i0 != 65536 goto label1;

        $r2 = r0.<org.apache.cxf.feature.LoggingFeature: java.lang.String inLocation>;

        if $r2 != null goto label1;

        $r3 = r0.<org.apache.cxf.feature.LoggingFeature: java.lang.String outLocation>;

        if $r3 != null goto label1;

        $z0 = r0.<org.apache.cxf.feature.LoggingFeature: boolean prettyLogging>;

        if $z0 != 0 goto label1;

        $r4 = interfaceinvoke r1.<org.apache.cxf.interceptor.InterceptorProvider: java.util.List getInInterceptors()>();

        $r5 = <org.apache.cxf.feature.LoggingFeature: org.apache.cxf.interceptor.LoggingInInterceptor IN>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r5);

        $r6 = interfaceinvoke r1.<org.apache.cxf.interceptor.InterceptorProvider: java.util.List getInFaultInterceptors()>();

        $r7 = <org.apache.cxf.feature.LoggingFeature: org.apache.cxf.interceptor.LoggingInInterceptor IN>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r7);

        $r8 = interfaceinvoke r1.<org.apache.cxf.interceptor.InterceptorProvider: java.util.List getOutInterceptors()>();

        $r9 = <org.apache.cxf.feature.LoggingFeature: org.apache.cxf.interceptor.LoggingOutInterceptor OUT>;

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r9);

        $r10 = interfaceinvoke r1.<org.apache.cxf.interceptor.InterceptorProvider: java.util.List getOutFaultInterceptors()>();

        $r11 = <org.apache.cxf.feature.LoggingFeature: org.apache.cxf.interceptor.LoggingOutInterceptor OUT>;

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r11);

        goto label2;

     label1:
        $r13 = new org.apache.cxf.interceptor.LoggingInInterceptor;

        $i1 = r0.<org.apache.cxf.feature.LoggingFeature: int limit>;

        specialinvoke $r13.<org.apache.cxf.interceptor.LoggingInInterceptor: void <init>(int)>($i1);

        $r14 = r0.<org.apache.cxf.feature.LoggingFeature: java.lang.String inLocation>;

        virtualinvoke $r13.<org.apache.cxf.interceptor.LoggingInInterceptor: void setOutputLocation(java.lang.String)>($r14);

        $z1 = r0.<org.apache.cxf.feature.LoggingFeature: boolean prettyLogging>;

        virtualinvoke $r13.<org.apache.cxf.interceptor.LoggingInInterceptor: void setPrettyLogging(boolean)>($z1);

        $z2 = r0.<org.apache.cxf.feature.LoggingFeature: boolean showBinary>;

        virtualinvoke $r13.<org.apache.cxf.interceptor.LoggingInInterceptor: void setShowBinaryContent(boolean)>($z2);

        $r15 = new org.apache.cxf.interceptor.LoggingOutInterceptor;

        $i2 = r0.<org.apache.cxf.feature.LoggingFeature: int limit>;

        specialinvoke $r15.<org.apache.cxf.interceptor.LoggingOutInterceptor: void <init>(int)>($i2);

        $r16 = r0.<org.apache.cxf.feature.LoggingFeature: java.lang.String outLocation>;

        virtualinvoke $r15.<org.apache.cxf.interceptor.LoggingOutInterceptor: void setOutputLocation(java.lang.String)>($r16);

        $z3 = r0.<org.apache.cxf.feature.LoggingFeature: boolean prettyLogging>;

        virtualinvoke $r15.<org.apache.cxf.interceptor.LoggingOutInterceptor: void setPrettyLogging(boolean)>($z3);

        $z4 = r0.<org.apache.cxf.feature.LoggingFeature: boolean showBinary>;

        virtualinvoke $r15.<org.apache.cxf.interceptor.LoggingOutInterceptor: void setShowBinaryContent(boolean)>($z4);

        $r17 = interfaceinvoke r1.<org.apache.cxf.interceptor.InterceptorProvider: java.util.List getInInterceptors()>();

        interfaceinvoke $r17.<java.util.List: boolean add(java.lang.Object)>($r13);

        $r18 = interfaceinvoke r1.<org.apache.cxf.interceptor.InterceptorProvider: java.util.List getInFaultInterceptors()>();

        interfaceinvoke $r18.<java.util.List: boolean add(java.lang.Object)>($r13);

        $r19 = interfaceinvoke r1.<org.apache.cxf.interceptor.InterceptorProvider: java.util.List getOutInterceptors()>();

        interfaceinvoke $r19.<java.util.List: boolean add(java.lang.Object)>($r15);

        $r20 = interfaceinvoke r1.<org.apache.cxf.interceptor.InterceptorProvider: java.util.List getOutFaultInterceptors()>();

        interfaceinvoke $r20.<java.util.List: boolean add(java.lang.Object)>($r15);

     label2:
        return;
    }

    public void setLimit(int)
    {
        int i0;
        org.apache.cxf.feature.LoggingFeature r0;

        r0 := @this: org.apache.cxf.feature.LoggingFeature;

        i0 := @parameter0: int;

        r0.<org.apache.cxf.feature.LoggingFeature: int limit> = i0;

        return;
    }

    public int getLimit()
    {
        int $i0;
        org.apache.cxf.feature.LoggingFeature r0;

        r0 := @this: org.apache.cxf.feature.LoggingFeature;

        $i0 = r0.<org.apache.cxf.feature.LoggingFeature: int limit>;

        return $i0;
    }

    public boolean isPrettyLogging()
    {
        org.apache.cxf.feature.LoggingFeature r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.feature.LoggingFeature;

        $z0 = r0.<org.apache.cxf.feature.LoggingFeature: boolean prettyLogging>;

        return $z0;
    }

    public void setPrettyLogging(boolean)
    {
        org.apache.cxf.feature.LoggingFeature r0;
        boolean z0;

        r0 := @this: org.apache.cxf.feature.LoggingFeature;

        z0 := @parameter0: boolean;

        r0.<org.apache.cxf.feature.LoggingFeature: boolean prettyLogging> = z0;

        return;
    }

    static void <clinit>()
    {
        org.apache.cxf.interceptor.LoggingOutInterceptor $r1;
        org.apache.cxf.interceptor.LoggingInInterceptor $r0;

        <org.apache.cxf.feature.LoggingFeature: int DEFAULT_LIMIT> = 65536;

        $r0 = new org.apache.cxf.interceptor.LoggingInInterceptor;

        specialinvoke $r0.<org.apache.cxf.interceptor.LoggingInInterceptor: void <init>(int)>(65536);

        <org.apache.cxf.feature.LoggingFeature: org.apache.cxf.interceptor.LoggingInInterceptor IN> = $r0;

        $r1 = new org.apache.cxf.interceptor.LoggingOutInterceptor;

        specialinvoke $r1.<org.apache.cxf.interceptor.LoggingOutInterceptor: void <init>(int)>(65536);

        <org.apache.cxf.feature.LoggingFeature: org.apache.cxf.interceptor.LoggingOutInterceptor OUT> = $r1;

        return;
    }
}
