class org.apache.zookeeper.server.PurgeTxnLog$1MyFileFilter extends java.lang.Object implements java.io.FileFilter
{
    private final java.lang.String prefix;
    final java.util.Set val$exclude;

    void <init>(java.lang.String, java.util.Set)
    {
        java.util.Set r1;
        java.lang.String r2;
        org.apache.zookeeper.server.PurgeTxnLog$1MyFileFilter r0;

        r0 := @this: org.apache.zookeeper.server.PurgeTxnLog$1MyFileFilter;

        r2 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.Set;

        r0.<org.apache.zookeeper.server.PurgeTxnLog$1MyFileFilter: java.util.Set val$exclude> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.zookeeper.server.PurgeTxnLog$1MyFileFilter: java.lang.String prefix> = r2;

        return;
    }

    public boolean accept(java.io.File)
    {
        org.apache.zookeeper.server.PurgeTxnLog$1MyFileFilter r2;
        java.util.Set $r4;
        java.lang.String $r1, $r3;
        java.io.File r0;
        boolean $z0, $z1;

        r2 := @this: org.apache.zookeeper.server.PurgeTxnLog$1MyFileFilter;

        r0 := @parameter0: java.io.File;

        $r1 = virtualinvoke r0.<java.io.File: java.lang.String getName()>();

        $r3 = r2.<org.apache.zookeeper.server.PurgeTxnLog$1MyFileFilter: java.lang.String prefix>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>($r3);

        if $z0 == 0 goto label1;

        $r4 = r2.<org.apache.zookeeper.server.PurgeTxnLog$1MyFileFilter: java.util.Set val$exclude>;

        $z1 = interfaceinvoke $r4.<java.util.Set: boolean contains(java.lang.Object)>(r0);

        if $z1 == 0 goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }
}
