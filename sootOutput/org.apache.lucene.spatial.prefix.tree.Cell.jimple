public abstract class org.apache.lucene.spatial.prefix.tree.Cell extends java.lang.Object implements java.lang.Comparable
{
    public static final byte LEAF_BYTE;
    private byte[] bytes;
    private int b_off;
    private int b_len;
    private java.lang.String token;
    protected com.spatial4j.core.shape.SpatialRelation shapeRel;
    protected boolean leaf;
    static final boolean $assertionsDisabled;

    protected void <init>(java.lang.String)
    {
        char $c3;
        org.apache.lucene.spatial.prefix.tree.Cell r0;
        int $i0, $i1, $i2, $i4, $i5, $i6, $i7;
        java.lang.String r1, $r2;

        r0 := @this: org.apache.lucene.spatial.prefix.tree.Cell;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.lucene.spatial.prefix.tree.Cell: java.lang.String token> = r1;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        $i2 = $i1 - 1;

        $c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i2);

        $i7 = (int) $c3;

        if $i7 != 43 goto label1;

        $i4 = virtualinvoke r1.<java.lang.String: int length()>();

        $i5 = $i4 - 1;

        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i5);

        r0.<org.apache.lucene.spatial.prefix.tree.Cell: java.lang.String token> = $r2;

        virtualinvoke r0.<org.apache.lucene.spatial.prefix.tree.Cell: void setLeaf()>();

     label1:
        $i6 = virtualinvoke r0.<org.apache.lucene.spatial.prefix.tree.Cell: int getLevel()>();

        if $i6 != 0 goto label2;

        virtualinvoke r0.<org.apache.lucene.spatial.prefix.tree.Cell: com.spatial4j.core.shape.Shape getShape()>();

     label2:
        return;
    }

    protected void <init>(byte[], int, int)
    {
        byte[] r1;
        int i0, i1;
        org.apache.lucene.spatial.prefix.tree.Cell r0;

        r0 := @this: org.apache.lucene.spatial.prefix.tree.Cell;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.lucene.spatial.prefix.tree.Cell: byte[] bytes> = r1;

        r0.<org.apache.lucene.spatial.prefix.tree.Cell: int b_off> = i0;

        r0.<org.apache.lucene.spatial.prefix.tree.Cell: int b_len> = i1;

        specialinvoke r0.<org.apache.lucene.spatial.prefix.tree.Cell: void b_fixLeaf()>();

        return;
    }

    public void reset(byte[], int, int)
    {
        byte[] r1;
        int i0, i1, $i2;
        java.lang.AssertionError $r2;
        org.apache.lucene.spatial.prefix.tree.Cell r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.spatial.prefix.tree.Cell;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = <org.apache.lucene.spatial.prefix.tree.Cell: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i2 = virtualinvoke r0.<org.apache.lucene.spatial.prefix.tree.Cell: int getLevel()>();

        if $i2 != 0 goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        r0.<org.apache.lucene.spatial.prefix.tree.Cell: java.lang.String token> = null;

        r0.<org.apache.lucene.spatial.prefix.tree.Cell: com.spatial4j.core.shape.SpatialRelation shapeRel> = null;

        r0.<org.apache.lucene.spatial.prefix.tree.Cell: byte[] bytes> = r1;

        r0.<org.apache.lucene.spatial.prefix.tree.Cell: int b_off> = i0;

        r0.<org.apache.lucene.spatial.prefix.tree.Cell: int b_len> = i1;

        specialinvoke r0.<org.apache.lucene.spatial.prefix.tree.Cell: void b_fixLeaf()>();

        return;
    }

    private void b_fixLeaf()
    {
        byte[] $r1;
        org.apache.lucene.spatial.prefix.tree.Cell r0;
        byte $b4;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i7;

        r0 := @this: org.apache.lucene.spatial.prefix.tree.Cell;

        $r1 = r0.<org.apache.lucene.spatial.prefix.tree.Cell: byte[] bytes>;

        $i1 = r0.<org.apache.lucene.spatial.prefix.tree.Cell: int b_off>;

        $i0 = r0.<org.apache.lucene.spatial.prefix.tree.Cell: int b_len>;

        $i2 = $i1 + $i0;

        $i3 = $i2 - 1;

        $b4 = $r1[$i3];

        $i7 = (int) $b4;

        if $i7 != 43 goto label1;

        $i5 = r0.<org.apache.lucene.spatial.prefix.tree.Cell: int b_len>;

        $i6 = $i5 - 1;

        r0.<org.apache.lucene.spatial.prefix.tree.Cell: int b_len> = $i6;

        virtualinvoke r0.<org.apache.lucene.spatial.prefix.tree.Cell: void setLeaf()>();

        goto label2;

     label1:
        r0.<org.apache.lucene.spatial.prefix.tree.Cell: boolean leaf> = 0;

     label2:
        return;
    }

    public com.spatial4j.core.shape.SpatialRelation getShapeRel()
    {
        com.spatial4j.core.shape.SpatialRelation $r1;
        org.apache.lucene.spatial.prefix.tree.Cell r0;

        r0 := @this: org.apache.lucene.spatial.prefix.tree.Cell;

        $r1 = r0.<org.apache.lucene.spatial.prefix.tree.Cell: com.spatial4j.core.shape.SpatialRelation shapeRel>;

        return $r1;
    }

    public boolean isLeaf()
    {
        org.apache.lucene.spatial.prefix.tree.Cell r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.spatial.prefix.tree.Cell;

        $z0 = r0.<org.apache.lucene.spatial.prefix.tree.Cell: boolean leaf>;

        return $z0;
    }

    public void setLeaf()
    {
        int $i0;
        java.lang.AssertionError $r1;
        org.apache.lucene.spatial.prefix.tree.Cell r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.spatial.prefix.tree.Cell;

        $z0 = <org.apache.lucene.spatial.prefix.tree.Cell: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i0 = virtualinvoke r0.<org.apache.lucene.spatial.prefix.tree.Cell: int getLevel()>();

        if $i0 != 0 goto label1;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label1:
        r0.<org.apache.lucene.spatial.prefix.tree.Cell: boolean leaf> = 1;

        return;
    }

    public java.lang.String getTokenString()
    {
        byte[] $r5;
        org.apache.lucene.spatial.prefix.tree.Cell r0;
        java.nio.charset.Charset $r4;
        int $i0, $i1;
        java.lang.String $r1, $r2, $r3;

        r0 := @this: org.apache.lucene.spatial.prefix.tree.Cell;

        $r1 = r0.<org.apache.lucene.spatial.prefix.tree.Cell: java.lang.String token>;

        if $r1 != null goto label1;

        $r3 = new java.lang.String;

        $r5 = r0.<org.apache.lucene.spatial.prefix.tree.Cell: byte[] bytes>;

        $i1 = r0.<org.apache.lucene.spatial.prefix.tree.Cell: int b_off>;

        $i0 = r0.<org.apache.lucene.spatial.prefix.tree.Cell: int b_len>;

        $r4 = <org.apache.lucene.spatial.prefix.tree.SpatialPrefixTree: java.nio.charset.Charset UTF8>;

        specialinvoke $r3.<java.lang.String: void <init>(byte[],int,int,java.nio.charset.Charset)>($r5, $i1, $i0, $r4);

        r0.<org.apache.lucene.spatial.prefix.tree.Cell: java.lang.String token> = $r3;

     label1:
        $r2 = r0.<org.apache.lucene.spatial.prefix.tree.Cell: java.lang.String token>;

        return $r2;
    }

    public byte[] getTokenBytes()
    {
        byte[] $r1, $r4, $r5, $r6, $r8;
        java.lang.IllegalStateException $r7;
        org.apache.lucene.spatial.prefix.tree.Cell r0;
        java.nio.charset.Charset $r2;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r3;

        r0 := @this: org.apache.lucene.spatial.prefix.tree.Cell;

        $r1 = r0.<org.apache.lucene.spatial.prefix.tree.Cell: byte[] bytes>;

        if $r1 == null goto label2;

        $i1 = r0.<org.apache.lucene.spatial.prefix.tree.Cell: int b_off>;

        if $i1 != 0 goto label1;

        $i3 = r0.<org.apache.lucene.spatial.prefix.tree.Cell: int b_len>;

        $r8 = r0.<org.apache.lucene.spatial.prefix.tree.Cell: byte[] bytes>;

        $i2 = lengthof $r8;

        if $i3 == $i2 goto label3;

     label1:
        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not supported if byte[] needs to be recreated.");

        throw $r7;

     label2:
        $r3 = r0.<org.apache.lucene.spatial.prefix.tree.Cell: java.lang.String token>;

        $r2 = <org.apache.lucene.spatial.prefix.tree.SpatialPrefixTree: java.nio.charset.Charset UTF8>;

        $r4 = virtualinvoke $r3.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r2);

        r0.<org.apache.lucene.spatial.prefix.tree.Cell: byte[] bytes> = $r4;

        r0.<org.apache.lucene.spatial.prefix.tree.Cell: int b_off> = 0;

        $r5 = r0.<org.apache.lucene.spatial.prefix.tree.Cell: byte[] bytes>;

        $i0 = lengthof $r5;

        r0.<org.apache.lucene.spatial.prefix.tree.Cell: int b_len> = $i0;

     label3:
        $r6 = r0.<org.apache.lucene.spatial.prefix.tree.Cell: byte[] bytes>;

        return $r6;
    }

    public int getLevel()
    {
        int $i0;
        java.lang.String $r1, $r2;
        org.apache.lucene.spatial.prefix.tree.Cell r0;

        r0 := @this: org.apache.lucene.spatial.prefix.tree.Cell;

        $r1 = r0.<org.apache.lucene.spatial.prefix.tree.Cell: java.lang.String token>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.lucene.spatial.prefix.tree.Cell: java.lang.String token>;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        goto label2;

     label1:
        $i0 = r0.<org.apache.lucene.spatial.prefix.tree.Cell: int b_len>;

     label2:
        return $i0;
    }

    public java.util.Collection getSubCells(com.spatial4j.core.shape.Shape)
    {
        org.apache.lucene.spatial.prefix.tree.Cell r1, r6, $r12;
        java.util.ArrayList $r3;
        com.spatial4j.core.shape.Shape r0, $r7;
        int $i0;
        com.spatial4j.core.shape.Point $r11;
        com.spatial4j.core.shape.SpatialRelation $r8, $r9, $r10, $r13;
        boolean $z0, $z1;
        java.util.Iterator $r4;
        java.util.Collection $r2;
        java.util.List $r14;
        java.lang.Object $r5;

        r1 := @this: org.apache.lucene.spatial.prefix.tree.Cell;

        r0 := @parameter0: com.spatial4j.core.shape.Shape;

        $z0 = r0 instanceof com.spatial4j.core.shape.Point;

        if $z0 == 0 goto label1;

        $r11 = (com.spatial4j.core.shape.Point) r0;

        $r12 = virtualinvoke r1.<org.apache.lucene.spatial.prefix.tree.Cell: org.apache.lucene.spatial.prefix.tree.Cell getSubCell(com.spatial4j.core.shape.Point)>($r11);

        $r13 = <com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation CONTAINS>;

        $r12.<org.apache.lucene.spatial.prefix.tree.Cell: com.spatial4j.core.shape.SpatialRelation shapeRel> = $r13;

        $r14 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r12);

        return $r14;

     label1:
        $r2 = virtualinvoke r1.<org.apache.lucene.spatial.prefix.tree.Cell: java.util.Collection getSubCells()>();

        if r0 != null goto label2;

        return $r2;

     label2:
        $r3 = new java.util.ArrayList;

        $i0 = interfaceinvoke $r2.<java.util.Collection: int size()>();

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>($i0);

        $r4 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.apache.lucene.spatial.prefix.tree.Cell) $r5;

        $r7 = virtualinvoke r6.<org.apache.lucene.spatial.prefix.tree.Cell: com.spatial4j.core.shape.Shape getShape()>();

        $r8 = interfaceinvoke $r7.<com.spatial4j.core.shape.Shape: com.spatial4j.core.shape.SpatialRelation relate(com.spatial4j.core.shape.Shape)>(r0);

        $r9 = <com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation DISJOINT>;

        if $r8 != $r9 goto label4;

        goto label3;

     label4:
        r6.<org.apache.lucene.spatial.prefix.tree.Cell: com.spatial4j.core.shape.SpatialRelation shapeRel> = $r8;

        $r10 = <com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation WITHIN>;

        if $r8 != $r10 goto label5;

        virtualinvoke r6.<org.apache.lucene.spatial.prefix.tree.Cell: void setLeaf()>();

     label5:
        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r6);

        goto label3;

     label6:
        return $r3;
    }

    public abstract org.apache.lucene.spatial.prefix.tree.Cell getSubCell(com.spatial4j.core.shape.Point);

    protected abstract java.util.Collection getSubCells();

    public abstract int getSubCellsSize();

    public abstract com.spatial4j.core.shape.Shape getShape();

    public com.spatial4j.core.shape.Point getCenter()
    {
        com.spatial4j.core.shape.Point $r2;
        com.spatial4j.core.shape.Shape $r1;
        org.apache.lucene.spatial.prefix.tree.Cell r0;

        r0 := @this: org.apache.lucene.spatial.prefix.tree.Cell;

        $r1 = virtualinvoke r0.<org.apache.lucene.spatial.prefix.tree.Cell: com.spatial4j.core.shape.Shape getShape()>();

        $r2 = interfaceinvoke $r1.<com.spatial4j.core.shape.Shape: com.spatial4j.core.shape.Point getCenter()>();

        return $r2;
    }

    public int compareTo(org.apache.lucene.spatial.prefix.tree.Cell)
    {
        int $i0;
        java.lang.String $r1, $r3;
        org.apache.lucene.spatial.prefix.tree.Cell r0, r2;

        r0 := @this: org.apache.lucene.spatial.prefix.tree.Cell;

        r2 := @parameter0: org.apache.lucene.spatial.prefix.tree.Cell;

        $r1 = virtualinvoke r0.<org.apache.lucene.spatial.prefix.tree.Cell: java.lang.String getTokenString()>();

        $r3 = virtualinvoke r2.<org.apache.lucene.spatial.prefix.tree.Cell: java.lang.String getTokenString()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int compareTo(java.lang.String)>($r3);

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.lucene.spatial.prefix.tree.Cell r1, $r3;
        java.lang.Object r0;
        java.lang.String $r2, $r4;
        boolean $z0, $z1, $z2;

        r1 := @this: org.apache.lucene.spatial.prefix.tree.Cell;

        r0 := @parameter0: java.lang.Object;

        if r0 == null goto label1;

        $z0 = r0 instanceof org.apache.lucene.spatial.prefix.tree.Cell;

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r1.<org.apache.lucene.spatial.prefix.tree.Cell: java.lang.String getTokenString()>();

        $r3 = (org.apache.lucene.spatial.prefix.tree.Cell) r0;

        $r4 = virtualinvoke $r3.<org.apache.lucene.spatial.prefix.tree.Cell: java.lang.String getTokenString()>();

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public int hashCode()
    {
        int $i0;
        java.lang.String $r1;
        org.apache.lucene.spatial.prefix.tree.Cell r0;

        r0 := @this: org.apache.lucene.spatial.prefix.tree.Cell;

        $r1 = virtualinvoke r0.<org.apache.lucene.spatial.prefix.tree.Cell: java.lang.String getTokenString()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        org.apache.lucene.spatial.prefix.tree.Cell r1;
        java.io.Serializable $r6;
        java.lang.StringBuilder $r0, $r3, $r4;
        java.lang.String $r2, $r5;
        boolean $z0;

        r1 := @this: org.apache.lucene.spatial.prefix.tree.Cell;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<org.apache.lucene.spatial.prefix.tree.Cell: java.lang.String getTokenString()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $z0 = virtualinvoke r1.<org.apache.lucene.spatial.prefix.tree.Cell: boolean isLeaf()>();

        if $z0 == 0 goto label1;

        $r6 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(43);

        goto label2;

     label1:
        $r6 = "";

     label2:
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public volatile int compareTo(java.lang.Object)
    {
        int $i0;
        java.lang.Object r1;
        org.apache.lucene.spatial.prefix.tree.Cell r0, $r2;

        r0 := @this: org.apache.lucene.spatial.prefix.tree.Cell;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.apache.lucene.spatial.prefix.tree.Cell) r1;

        $i0 = virtualinvoke r0.<org.apache.lucene.spatial.prefix.tree.Cell: int compareTo(org.apache.lucene.spatial.prefix.tree.Cell)>($r2);

        return $i0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        <org.apache.lucene.spatial.prefix.tree.Cell: byte LEAF_BYTE> = 43;

        $r0 = class "Lorg/apache/lucene/spatial/prefix/tree/Cell;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.spatial.prefix.tree.Cell: boolean $assertionsDisabled> = $z1;

        return;
    }
}
