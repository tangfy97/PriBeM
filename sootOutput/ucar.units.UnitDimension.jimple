public final class ucar.units.UnitDimension extends ucar.units.Dimension
{

    public void <init>()
    {
        ucar.units.UnitDimension r0;

        r0 := @this: ucar.units.UnitDimension;

        specialinvoke r0.<ucar.units.Dimension: void <init>()>();

        return;
    }

    public void <init>(ucar.units.BaseUnit)
    {
        ucar.units.UnitDimension r0;
        ucar.units.BaseUnit r2;
        ucar.units.Factor $r1;

        r0 := @this: ucar.units.UnitDimension;

        r2 := @parameter0: ucar.units.BaseUnit;

        $r1 = new ucar.units.Factor;

        specialinvoke $r1.<ucar.units.Factor: void <init>(ucar.units.Base)>(r2);

        specialinvoke r0.<ucar.units.Dimension: void <init>(ucar.units.Factor)>($r1);

        return;
    }

    private void <init>(ucar.units.Factor[])
    {
        ucar.units.UnitDimension r0;
        ucar.units.Factor[] r1;

        r0 := @this: ucar.units.UnitDimension;

        r1 := @parameter0: ucar.units.Factor[];

        specialinvoke r0.<ucar.units.Dimension: void <init>(ucar.units.Factor[])>(r1);

        return;
    }

    public ucar.units.UnitDimension multiplyBy(ucar.units.UnitDimension)
    {
        ucar.units.UnitDimension $r0, r1, r2;
        ucar.units.Factor[] $r3;

        r1 := @this: ucar.units.UnitDimension;

        r2 := @parameter0: ucar.units.UnitDimension;

        $r0 = new ucar.units.UnitDimension;

        $r3 = virtualinvoke r1.<ucar.units.UnitDimension: ucar.units.Factor[] mult(ucar.units.Dimension)>(r2);

        specialinvoke $r0.<ucar.units.UnitDimension: void <init>(ucar.units.Factor[])>($r3);

        return $r0;
    }

    public ucar.units.UnitDimension divideBy(ucar.units.UnitDimension)
    {
        ucar.units.UnitDimension r0, r1, $r2, $r3;
        int $i1;

        r0 := @this: ucar.units.UnitDimension;

        r1 := @parameter0: ucar.units.UnitDimension;

        $i1 = (int) -1;

        $r2 = virtualinvoke r1.<ucar.units.UnitDimension: ucar.units.UnitDimension raiseTo(int)>($i1);

        $r3 = virtualinvoke r0.<ucar.units.UnitDimension: ucar.units.UnitDimension multiplyBy(ucar.units.UnitDimension)>($r2);

        return $r3;
    }

    public ucar.units.UnitDimension raiseTo(int)
    {
        ucar.units.UnitDimension $r0, r1;
        int i0;
        ucar.units.Factor[] $r2;

        r1 := @this: ucar.units.UnitDimension;

        i0 := @parameter0: int;

        $r0 = new ucar.units.UnitDimension;

        $r2 = virtualinvoke r1.<ucar.units.UnitDimension: ucar.units.Factor[] pow(int)>(i0);

        specialinvoke $r0.<ucar.units.UnitDimension: void <init>(ucar.units.Factor[])>($r2);

        return $r0;
    }

    public ucar.units.QuantityDimension getQuantityDimension()
    {
        ucar.units.UnitDimension r0;
        ucar.units.Factor r3, $r8;
        ucar.units.Base $r5;
        int $i0, i1, $i3;
        ucar.units.BaseUnit $r6;
        ucar.units.BaseQuantity $r7;
        ucar.units.Factor[] $r1;
        ucar.units.QuantityDimension $r9;

        r0 := @this: ucar.units.UnitDimension;

        $r1 = virtualinvoke r0.<ucar.units.UnitDimension: ucar.units.Factor[] getFactors()>();

        i1 = lengthof $r1;

     label1:
        $i3 = (int) -1;

        i1 = i1 + $i3;

        if i1 < 0 goto label2;

        r3 = $r1[i1];

        $r8 = new ucar.units.Factor;

        $r5 = virtualinvoke r3.<ucar.units.Factor: ucar.units.Base getBase()>();

        $r6 = (ucar.units.BaseUnit) $r5;

        $r7 = virtualinvoke $r6.<ucar.units.BaseUnit: ucar.units.BaseQuantity getBaseQuantity()>();

        $i0 = virtualinvoke r3.<ucar.units.Factor: int getExponent()>();

        specialinvoke $r8.<ucar.units.Factor: void <init>(ucar.units.Base,int)>($r7, $i0);

        $r1[i1] = $r8;

        goto label1;

     label2:
        $r9 = new ucar.units.QuantityDimension;

        specialinvoke $r9.<ucar.units.QuantityDimension: void <init>(ucar.units.Factor[])>($r1);

        return $r9;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        ucar.units.UnitDimension $r33, $r49, $r56, $r57, $r63, $r64, $r66;
        java.lang.StringBuilder $r2, $r4, $r5, $r13, $r14, $r15, $r23, $r24, $r25, $r29, $r30, $r31, $r36, $r37, $r38, $r42, $r43, $r44, $r48, $r50, $r51, $r55, $r58, $r59, $r62, $r65, $r67, $r68, $r69, $r70, $r71, $r72;
        ucar.units.RegularBaseQuantity $r9, $r19;
        java.lang.String $r6, $r16, $r26, $r32, $r39, $r45, $r52, $r60;
        boolean $z0, $z1;
        ucar.units.UnitName $r8, $r18;
        java.lang.String[] r61;
        int $i1;
        java.io.PrintStream $r1, $r12, $r22, $r28, $r35, $r41, $r47, $r54;
        ucar.units.BaseUnit $r10, $r20;

        r61 := @parameter0: java.lang.String[];

        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r62 = new java.lang.StringBuilder;

        specialinvoke $r62.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("new UnitDimension() = \"");

        $r63 = new ucar.units.UnitDimension;

        specialinvoke $r63.<ucar.units.UnitDimension: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r63);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r6);

        $r64 = new ucar.units.UnitDimension;

        $r8 = staticinvoke <ucar.units.UnitName: ucar.units.UnitName newUnitName(java.lang.String,java.lang.String,java.lang.String)>("second", null, "s");

        $r9 = <ucar.units.BaseQuantity: ucar.units.RegularBaseQuantity TIME>;

        $r10 = staticinvoke <ucar.units.BaseUnit: ucar.units.BaseUnit getOrCreate(ucar.units.UnitName,ucar.units.BaseQuantity)>($r8, $r9);

        specialinvoke $r64.<ucar.units.UnitDimension: void <init>(ucar.units.BaseUnit)>($r10);

        $r12 = <java.lang.System: java.io.PrintStream out>;

        $r65 = new java.lang.StringBuilder;

        specialinvoke $r65.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("timeDimension = \"");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r64);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r16);

        $r66 = new ucar.units.UnitDimension;

        $r18 = staticinvoke <ucar.units.UnitName: ucar.units.UnitName newUnitName(java.lang.String,java.lang.String,java.lang.String)>("meter", null, "m");

        $r19 = <ucar.units.BaseQuantity: ucar.units.RegularBaseQuantity LENGTH>;

        $r20 = staticinvoke <ucar.units.BaseUnit: ucar.units.BaseUnit getOrCreate(ucar.units.UnitName,ucar.units.BaseQuantity)>($r18, $r19);

        specialinvoke $r66.<ucar.units.UnitDimension: void <init>(ucar.units.BaseUnit)>($r20);

        $r22 = <java.lang.System: java.io.PrintStream out>;

        $r67 = new java.lang.StringBuilder;

        specialinvoke $r67.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lengthDimension = \"");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r66);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>($r26);

        $r28 = <java.lang.System: java.io.PrintStream out>;

        $r68 = new java.lang.StringBuilder;

        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lengthDimension.isReciprocalOf(timeDimension) = \"");

        $z0 = virtualinvoke $r66.<ucar.units.UnitDimension: boolean isReciprocalOf(ucar.units.Dimension)>($r64);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r28.<java.io.PrintStream: void println(java.lang.String)>($r32);

        $i1 = (int) -1;

        $r33 = virtualinvoke $r64.<ucar.units.UnitDimension: ucar.units.UnitDimension raiseTo(int)>($i1);

        $r35 = <java.lang.System: java.io.PrintStream out>;

        $r69 = new java.lang.StringBuilder;

        specialinvoke $r69.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("hertzDimension = \"");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r33);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r35.<java.io.PrintStream: void println(java.lang.String)>($r39);

        $r41 = <java.lang.System: java.io.PrintStream out>;

        $r70 = new java.lang.StringBuilder;

        specialinvoke $r70.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("hertzDimension.isReciprocalOf(timeDimension) = \"");

        $z1 = virtualinvoke $r33.<ucar.units.UnitDimension: boolean isReciprocalOf(ucar.units.Dimension)>($r64);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r41.<java.io.PrintStream: void println(java.lang.String)>($r45);

        $r47 = <java.lang.System: java.io.PrintStream out>;

        $r71 = new java.lang.StringBuilder;

        specialinvoke $r71.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lengthDimension.divideBy(timeDimension) = \"");

        $r49 = virtualinvoke $r66.<ucar.units.UnitDimension: ucar.units.UnitDimension divideBy(ucar.units.UnitDimension)>($r64);

        $r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r49);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r47.<java.io.PrintStream: void println(java.lang.String)>($r52);

        $r54 = <java.lang.System: java.io.PrintStream out>;

        $r72 = new java.lang.StringBuilder;

        specialinvoke $r72.<java.lang.StringBuilder: void <init>()>();

        $r55 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lengthDimension.divideBy(timeDimension).raiseTo(2) = \"");

        $r56 = virtualinvoke $r66.<ucar.units.UnitDimension: ucar.units.UnitDimension divideBy(ucar.units.UnitDimension)>($r64);

        $r57 = virtualinvoke $r56.<ucar.units.UnitDimension: ucar.units.UnitDimension raiseTo(int)>(2);

        $r58 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r57);

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r54.<java.io.PrintStream: void println(java.lang.String)>($r60);

        return;
    }
}
