public abstract class org.eclipse.jdt.core.compiler.CategorizedProblem extends java.lang.Object implements org.eclipse.jdt.core.compiler.IProblem
{
    public static final int CAT_UNSPECIFIED;
    public static final int CAT_BUILDPATH;
    public static final int CAT_SYNTAX;
    public static final int CAT_IMPORT;
    public static final int CAT_TYPE;
    public static final int CAT_MEMBER;
    public static final int CAT_INTERNAL;
    public static final int CAT_JAVADOC;
    public static final int CAT_CODE_STYLE;
    public static final int CAT_POTENTIAL_PROGRAMMING_PROBLEM;
    public static final int CAT_NAME_SHADOWING_CONFLICT;
    public static final int CAT_DEPRECATION;
    public static final int CAT_UNNECESSARY_CODE;
    public static final int CAT_UNCHECKED_RAW;
    public static final int CAT_NLS;
    public static final int CAT_RESTRICTION;

    public void <init>()
    {
        org.eclipse.jdt.core.compiler.CategorizedProblem r0;

        r0 := @this: org.eclipse.jdt.core.compiler.CategorizedProblem;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract int getCategoryID();

    public abstract java.lang.String getMarkerType();

    public java.lang.String[] getExtraMarkerAttributeNames()
    {
        org.eclipse.jdt.core.compiler.CategorizedProblem r1;
        java.lang.String[] $r0;

        r1 := @this: org.eclipse.jdt.core.compiler.CategorizedProblem;

        $r0 = <org.eclipse.jdt.core.compiler.CharOperation: java.lang.String[] NO_STRINGS>;

        return $r0;
    }

    public java.lang.Object[] getExtraMarkerAttributeValues()
    {
        org.eclipse.jdt.core.compiler.CategorizedProblem r1;
        java.lang.Object[] $r0;

        r1 := @this: org.eclipse.jdt.core.compiler.CategorizedProblem;

        $r0 = <org.eclipse.jdt.internal.compiler.problem.DefaultProblem: java.lang.Object[] EMPTY_VALUES>;

        return $r0;
    }

    public static void <clinit>()
    {
        <org.eclipse.jdt.core.compiler.CategorizedProblem: int CAT_RESTRICTION> = 150;

        <org.eclipse.jdt.core.compiler.CategorizedProblem: int CAT_NLS> = 140;

        <org.eclipse.jdt.core.compiler.CategorizedProblem: int CAT_UNCHECKED_RAW> = 130;

        <org.eclipse.jdt.core.compiler.CategorizedProblem: int CAT_UNNECESSARY_CODE> = 120;

        <org.eclipse.jdt.core.compiler.CategorizedProblem: int CAT_DEPRECATION> = 110;

        <org.eclipse.jdt.core.compiler.CategorizedProblem: int CAT_NAME_SHADOWING_CONFLICT> = 100;

        <org.eclipse.jdt.core.compiler.CategorizedProblem: int CAT_POTENTIAL_PROGRAMMING_PROBLEM> = 90;

        <org.eclipse.jdt.core.compiler.CategorizedProblem: int CAT_CODE_STYLE> = 80;

        <org.eclipse.jdt.core.compiler.CategorizedProblem: int CAT_JAVADOC> = 70;

        <org.eclipse.jdt.core.compiler.CategorizedProblem: int CAT_INTERNAL> = 60;

        <org.eclipse.jdt.core.compiler.CategorizedProblem: int CAT_MEMBER> = 50;

        <org.eclipse.jdt.core.compiler.CategorizedProblem: int CAT_TYPE> = 40;

        <org.eclipse.jdt.core.compiler.CategorizedProblem: int CAT_IMPORT> = 30;

        <org.eclipse.jdt.core.compiler.CategorizedProblem: int CAT_SYNTAX> = 20;

        <org.eclipse.jdt.core.compiler.CategorizedProblem: int CAT_BUILDPATH> = 10;

        <org.eclipse.jdt.core.compiler.CategorizedProblem: int CAT_UNSPECIFIED> = 0;

        return;
    }
}
