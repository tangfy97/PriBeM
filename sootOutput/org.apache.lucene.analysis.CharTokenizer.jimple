public abstract class org.apache.lucene.analysis.CharTokenizer extends org.apache.lucene.analysis.Tokenizer
{
    private int offset;
    private int bufferIndex;
    private int dataLen;
    private int finalOffset;
    private static final int MAX_WORD_LEN;
    private static final int IO_BUFFER_SIZE;
    private final org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt;
    private final org.apache.lucene.analysis.tokenattributes.OffsetAttribute offsetAtt;
    private final org.apache.lucene.util.CharacterUtils charUtils;
    private final org.apache.lucene.util.CharacterUtils$CharacterBuffer ioBuffer;
    private final boolean useOldAPI;
    private static final org.apache.lucene.util.VirtualMethod isTokenCharMethod;
    private static final org.apache.lucene.util.VirtualMethod normalizeMethod;
    static final boolean $assertionsDisabled;

    public void <init>(org.apache.lucene.util.Version, java.io.Reader)
    {
        org.apache.lucene.analysis.tokenattributes.CharTermAttribute $r3;
        org.apache.lucene.util.CharacterUtils $r8;
        java.io.Reader r1;
        org.apache.lucene.analysis.tokenattributes.OffsetAttribute $r5;
        org.apache.lucene.util.CharacterUtils$CharacterBuffer $r6;
        org.apache.lucene.util.Version r7;
        org.apache.lucene.util.Attribute $r2, $r4;
        org.apache.lucene.analysis.CharTokenizer r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.analysis.CharTokenizer;

        r7 := @parameter0: org.apache.lucene.util.Version;

        r1 := @parameter1: java.io.Reader;

        specialinvoke r0.<org.apache.lucene.analysis.Tokenizer: void <init>(java.io.Reader)>(r1);

        r0.<org.apache.lucene.analysis.CharTokenizer: int offset> = 0;

        r0.<org.apache.lucene.analysis.CharTokenizer: int bufferIndex> = 0;

        r0.<org.apache.lucene.analysis.CharTokenizer: int dataLen> = 0;

        r0.<org.apache.lucene.analysis.CharTokenizer: int finalOffset> = 0;

        $r2 = virtualinvoke r0.<org.apache.lucene.analysis.CharTokenizer: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/CharTermAttribute;");

        $r3 = (org.apache.lucene.analysis.tokenattributes.CharTermAttribute) $r2;

        r0.<org.apache.lucene.analysis.CharTokenizer: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt> = $r3;

        $r4 = virtualinvoke r0.<org.apache.lucene.analysis.CharTokenizer: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/OffsetAttribute;");

        $r5 = (org.apache.lucene.analysis.tokenattributes.OffsetAttribute) $r4;

        r0.<org.apache.lucene.analysis.CharTokenizer: org.apache.lucene.analysis.tokenattributes.OffsetAttribute offsetAtt> = $r5;

        $r6 = staticinvoke <org.apache.lucene.util.CharacterUtils: org.apache.lucene.util.CharacterUtils$CharacterBuffer newCharacterBuffer(int)>(4096);

        r0.<org.apache.lucene.analysis.CharTokenizer: org.apache.lucene.util.CharacterUtils$CharacterBuffer ioBuffer> = $r6;

        $r8 = staticinvoke <org.apache.lucene.util.CharacterUtils: org.apache.lucene.util.CharacterUtils getInstance(org.apache.lucene.util.Version)>(r7);

        r0.<org.apache.lucene.analysis.CharTokenizer: org.apache.lucene.util.CharacterUtils charUtils> = $r8;

        $z0 = specialinvoke r0.<org.apache.lucene.analysis.CharTokenizer: boolean useOldAPI(org.apache.lucene.util.Version)>(r7);

        r0.<org.apache.lucene.analysis.CharTokenizer: boolean useOldAPI> = $z0;

        return;
    }

    public void <init>(org.apache.lucene.util.Version, org.apache.lucene.util.AttributeSource, java.io.Reader)
    {
        org.apache.lucene.analysis.tokenattributes.CharTermAttribute $r4;
        org.apache.lucene.util.CharacterUtils $r9;
        java.io.Reader r2;
        org.apache.lucene.analysis.tokenattributes.OffsetAttribute $r6;
        org.apache.lucene.util.CharacterUtils$CharacterBuffer $r7;
        org.apache.lucene.util.Version r8;
        org.apache.lucene.util.AttributeSource r1;
        org.apache.lucene.util.Attribute $r3, $r5;
        org.apache.lucene.analysis.CharTokenizer r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.analysis.CharTokenizer;

        r8 := @parameter0: org.apache.lucene.util.Version;

        r1 := @parameter1: org.apache.lucene.util.AttributeSource;

        r2 := @parameter2: java.io.Reader;

        specialinvoke r0.<org.apache.lucene.analysis.Tokenizer: void <init>(org.apache.lucene.util.AttributeSource,java.io.Reader)>(r1, r2);

        r0.<org.apache.lucene.analysis.CharTokenizer: int offset> = 0;

        r0.<org.apache.lucene.analysis.CharTokenizer: int bufferIndex> = 0;

        r0.<org.apache.lucene.analysis.CharTokenizer: int dataLen> = 0;

        r0.<org.apache.lucene.analysis.CharTokenizer: int finalOffset> = 0;

        $r3 = virtualinvoke r0.<org.apache.lucene.analysis.CharTokenizer: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/CharTermAttribute;");

        $r4 = (org.apache.lucene.analysis.tokenattributes.CharTermAttribute) $r3;

        r0.<org.apache.lucene.analysis.CharTokenizer: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt> = $r4;

        $r5 = virtualinvoke r0.<org.apache.lucene.analysis.CharTokenizer: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/OffsetAttribute;");

        $r6 = (org.apache.lucene.analysis.tokenattributes.OffsetAttribute) $r5;

        r0.<org.apache.lucene.analysis.CharTokenizer: org.apache.lucene.analysis.tokenattributes.OffsetAttribute offsetAtt> = $r6;

        $r7 = staticinvoke <org.apache.lucene.util.CharacterUtils: org.apache.lucene.util.CharacterUtils$CharacterBuffer newCharacterBuffer(int)>(4096);

        r0.<org.apache.lucene.analysis.CharTokenizer: org.apache.lucene.util.CharacterUtils$CharacterBuffer ioBuffer> = $r7;

        $r9 = staticinvoke <org.apache.lucene.util.CharacterUtils: org.apache.lucene.util.CharacterUtils getInstance(org.apache.lucene.util.Version)>(r8);

        r0.<org.apache.lucene.analysis.CharTokenizer: org.apache.lucene.util.CharacterUtils charUtils> = $r9;

        $z0 = specialinvoke r0.<org.apache.lucene.analysis.CharTokenizer: boolean useOldAPI(org.apache.lucene.util.Version)>(r8);

        r0.<org.apache.lucene.analysis.CharTokenizer: boolean useOldAPI> = $z0;

        return;
    }

    public void <init>(org.apache.lucene.util.Version, org.apache.lucene.util.AttributeSource$AttributeFactory, java.io.Reader)
    {
        org.apache.lucene.analysis.tokenattributes.CharTermAttribute $r4;
        org.apache.lucene.util.AttributeSource$AttributeFactory r1;
        org.apache.lucene.util.CharacterUtils $r9;
        java.io.Reader r2;
        org.apache.lucene.analysis.tokenattributes.OffsetAttribute $r6;
        org.apache.lucene.util.CharacterUtils$CharacterBuffer $r7;
        org.apache.lucene.util.Version r8;
        org.apache.lucene.util.Attribute $r3, $r5;
        org.apache.lucene.analysis.CharTokenizer r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.analysis.CharTokenizer;

        r8 := @parameter0: org.apache.lucene.util.Version;

        r1 := @parameter1: org.apache.lucene.util.AttributeSource$AttributeFactory;

        r2 := @parameter2: java.io.Reader;

        specialinvoke r0.<org.apache.lucene.analysis.Tokenizer: void <init>(org.apache.lucene.util.AttributeSource$AttributeFactory,java.io.Reader)>(r1, r2);

        r0.<org.apache.lucene.analysis.CharTokenizer: int offset> = 0;

        r0.<org.apache.lucene.analysis.CharTokenizer: int bufferIndex> = 0;

        r0.<org.apache.lucene.analysis.CharTokenizer: int dataLen> = 0;

        r0.<org.apache.lucene.analysis.CharTokenizer: int finalOffset> = 0;

        $r3 = virtualinvoke r0.<org.apache.lucene.analysis.CharTokenizer: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/CharTermAttribute;");

        $r4 = (org.apache.lucene.analysis.tokenattributes.CharTermAttribute) $r3;

        r0.<org.apache.lucene.analysis.CharTokenizer: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt> = $r4;

        $r5 = virtualinvoke r0.<org.apache.lucene.analysis.CharTokenizer: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/OffsetAttribute;");

        $r6 = (org.apache.lucene.analysis.tokenattributes.OffsetAttribute) $r5;

        r0.<org.apache.lucene.analysis.CharTokenizer: org.apache.lucene.analysis.tokenattributes.OffsetAttribute offsetAtt> = $r6;

        $r7 = staticinvoke <org.apache.lucene.util.CharacterUtils: org.apache.lucene.util.CharacterUtils$CharacterBuffer newCharacterBuffer(int)>(4096);

        r0.<org.apache.lucene.analysis.CharTokenizer: org.apache.lucene.util.CharacterUtils$CharacterBuffer ioBuffer> = $r7;

        $r9 = staticinvoke <org.apache.lucene.util.CharacterUtils: org.apache.lucene.util.CharacterUtils getInstance(org.apache.lucene.util.Version)>(r8);

        r0.<org.apache.lucene.analysis.CharTokenizer: org.apache.lucene.util.CharacterUtils charUtils> = $r9;

        $z0 = specialinvoke r0.<org.apache.lucene.analysis.CharTokenizer: boolean useOldAPI(org.apache.lucene.util.Version)>(r8);

        r0.<org.apache.lucene.analysis.CharTokenizer: boolean useOldAPI> = $z0;

        return;
    }

    public void <init>(java.io.Reader)
    {
        java.io.Reader r1;
        org.apache.lucene.analysis.CharTokenizer r0;
        org.apache.lucene.util.Version $r2;

        r0 := @this: org.apache.lucene.analysis.CharTokenizer;

        r1 := @parameter0: java.io.Reader;

        $r2 = <org.apache.lucene.util.Version: org.apache.lucene.util.Version LUCENE_30>;

        specialinvoke r0.<org.apache.lucene.analysis.CharTokenizer: void <init>(org.apache.lucene.util.Version,java.io.Reader)>($r2, r1);

        return;
    }

    public void <init>(org.apache.lucene.util.AttributeSource, java.io.Reader)
    {
        org.apache.lucene.util.AttributeSource r1;
        java.io.Reader r2;
        org.apache.lucene.analysis.CharTokenizer r0;
        org.apache.lucene.util.Version $r3;

        r0 := @this: org.apache.lucene.analysis.CharTokenizer;

        r1 := @parameter0: org.apache.lucene.util.AttributeSource;

        r2 := @parameter1: java.io.Reader;

        $r3 = <org.apache.lucene.util.Version: org.apache.lucene.util.Version LUCENE_30>;

        specialinvoke r0.<org.apache.lucene.analysis.CharTokenizer: void <init>(org.apache.lucene.util.Version,org.apache.lucene.util.AttributeSource,java.io.Reader)>($r3, r1, r2);

        return;
    }

    public void <init>(org.apache.lucene.util.AttributeSource$AttributeFactory, java.io.Reader)
    {
        org.apache.lucene.util.AttributeSource$AttributeFactory r1;
        java.io.Reader r2;
        org.apache.lucene.analysis.CharTokenizer r0;
        org.apache.lucene.util.Version $r3;

        r0 := @this: org.apache.lucene.analysis.CharTokenizer;

        r1 := @parameter0: org.apache.lucene.util.AttributeSource$AttributeFactory;

        r2 := @parameter1: java.io.Reader;

        $r3 = <org.apache.lucene.util.Version: org.apache.lucene.util.Version LUCENE_30>;

        specialinvoke r0.<org.apache.lucene.analysis.CharTokenizer: void <init>(org.apache.lucene.util.Version,org.apache.lucene.util.AttributeSource$AttributeFactory,java.io.Reader)>($r3, r1, r2);

        return;
    }

    protected boolean isTokenChar(char)
    {
        int $i1;
        char c0;
        org.apache.lucene.analysis.CharTokenizer r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.analysis.CharTokenizer;

        c0 := @parameter0: char;

        $i1 = (int) c0;

        $z0 = virtualinvoke r0.<org.apache.lucene.analysis.CharTokenizer: boolean isTokenChar(int)>($i1);

        return $z0;
    }

    protected char normalize(char)
    {
        int $i1, $i3;
        char c0, $c2;
        org.apache.lucene.analysis.CharTokenizer r0;

        r0 := @this: org.apache.lucene.analysis.CharTokenizer;

        c0 := @parameter0: char;

        $i3 = (int) c0;

        $i1 = virtualinvoke r0.<org.apache.lucene.analysis.CharTokenizer: int normalize(int)>($i3);

        $c2 = (char) $i1;

        return $c2;
    }

    protected boolean isTokenChar(int)
    {
        int i0;
        java.lang.UnsupportedOperationException $r0;
        org.apache.lucene.analysis.CharTokenizer r1;

        r1 := @this: org.apache.lucene.analysis.CharTokenizer;

        i0 := @parameter0: int;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("since LUCENE_31 subclasses of CharTokenizer must implement isTokenChar(int)");

        throw $r0;
    }

    protected int normalize(int)
    {
        int i0;
        org.apache.lucene.analysis.CharTokenizer r0;

        r0 := @this: org.apache.lucene.analysis.CharTokenizer;

        i0 := @parameter0: int;

        return i0;
    }

    public final boolean incrementToken() throws java.io.IOException
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.io.Reader $r9;
        org.apache.lucene.analysis.tokenattributes.OffsetAttribute $r5;
        org.apache.lucene.util.CharacterUtils $r3, $r11;
        java.lang.AssertionError $r15, $r16;
        org.apache.lucene.util.CharacterUtils$CharacterBuffer $r2, $r10, $r12;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, i22, i23, $i24, $i25, $i26, $i28, $i30, $i32;
        org.apache.lucene.analysis.CharTokenizer r0;
        org.apache.lucene.analysis.tokenattributes.CharTermAttribute $r1, $r7, $r14;
        char[] $r4, r13;

        r0 := @this: org.apache.lucene.analysis.CharTokenizer;

        virtualinvoke r0.<org.apache.lucene.analysis.CharTokenizer: void clearAttributes()>();

        $z0 = r0.<org.apache.lucene.analysis.CharTokenizer: boolean useOldAPI>;

        if $z0 == 0 goto label01;

        $z4 = specialinvoke r0.<org.apache.lucene.analysis.CharTokenizer: boolean incrementTokenOld()>();

        return $z4;

     label01:
        i22 = 0;

        $i28 = (int) -1;

        i23 = $i28;

        $r1 = r0.<org.apache.lucene.analysis.CharTokenizer: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt>;

        r13 = interfaceinvoke $r1.<org.apache.lucene.analysis.tokenattributes.CharTermAttribute: char[] buffer()>();

     label02:
        $i1 = r0.<org.apache.lucene.analysis.CharTokenizer: int bufferIndex>;

        $i0 = r0.<org.apache.lucene.analysis.CharTokenizer: int dataLen>;

        if $i1 < $i0 goto label05;

        $i17 = r0.<org.apache.lucene.analysis.CharTokenizer: int offset>;

        $i16 = r0.<org.apache.lucene.analysis.CharTokenizer: int dataLen>;

        $i18 = $i17 + $i16;

        r0.<org.apache.lucene.analysis.CharTokenizer: int offset> = $i18;

        $r11 = r0.<org.apache.lucene.analysis.CharTokenizer: org.apache.lucene.util.CharacterUtils charUtils>;

        $r10 = r0.<org.apache.lucene.analysis.CharTokenizer: org.apache.lucene.util.CharacterUtils$CharacterBuffer ioBuffer>;

        $r9 = r0.<org.apache.lucene.analysis.CharTokenizer: java.io.Reader input>;

        $z3 = virtualinvoke $r11.<org.apache.lucene.util.CharacterUtils: boolean fill(org.apache.lucene.util.CharacterUtils$CharacterBuffer,java.io.Reader)>($r10, $r9);

        if $z3 != 0 goto label04;

        r0.<org.apache.lucene.analysis.CharTokenizer: int dataLen> = 0;

        if i22 <= 0 goto label03;

        goto label11;

     label03:
        $i20 = r0.<org.apache.lucene.analysis.CharTokenizer: int offset>;

        $i21 = virtualinvoke r0.<org.apache.lucene.analysis.CharTokenizer: int correctOffset(int)>($i20);

        r0.<org.apache.lucene.analysis.CharTokenizer: int finalOffset> = $i21;

        return 0;

     label04:
        $r12 = r0.<org.apache.lucene.analysis.CharTokenizer: org.apache.lucene.util.CharacterUtils$CharacterBuffer ioBuffer>;

        $i19 = virtualinvoke $r12.<org.apache.lucene.util.CharacterUtils$CharacterBuffer: int getLength()>();

        r0.<org.apache.lucene.analysis.CharTokenizer: int dataLen> = $i19;

        r0.<org.apache.lucene.analysis.CharTokenizer: int bufferIndex> = 0;

     label05:
        $r3 = r0.<org.apache.lucene.analysis.CharTokenizer: org.apache.lucene.util.CharacterUtils charUtils>;

        $r2 = r0.<org.apache.lucene.analysis.CharTokenizer: org.apache.lucene.util.CharacterUtils$CharacterBuffer ioBuffer>;

        $r4 = virtualinvoke $r2.<org.apache.lucene.util.CharacterUtils$CharacterBuffer: char[] getBuffer()>();

        $i2 = r0.<org.apache.lucene.analysis.CharTokenizer: int bufferIndex>;

        $i3 = virtualinvoke $r3.<org.apache.lucene.util.CharacterUtils: int codePointAt(char[],int)>($r4, $i2);

        $i4 = r0.<org.apache.lucene.analysis.CharTokenizer: int bufferIndex>;

        $i5 = staticinvoke <java.lang.Character: int charCount(int)>($i3);

        $i6 = $i4 + $i5;

        r0.<org.apache.lucene.analysis.CharTokenizer: int bufferIndex> = $i6;

        $z1 = virtualinvoke r0.<org.apache.lucene.analysis.CharTokenizer: boolean isTokenChar(int)>($i3);

        if $z1 == 0 goto label09;

        if i22 != 0 goto label07;

        $z2 = <org.apache.lucene.analysis.CharTokenizer: boolean $assertionsDisabled>;

        if $z2 != 0 goto label06;

        $i30 = (int) -1;

        if i23 == $i30 goto label06;

        $r15 = new java.lang.AssertionError;

        specialinvoke $r15.<java.lang.AssertionError: void <init>()>();

        throw $r15;

     label06:
        $i14 = r0.<org.apache.lucene.analysis.CharTokenizer: int offset>;

        $i13 = r0.<org.apache.lucene.analysis.CharTokenizer: int bufferIndex>;

        $i15 = $i14 + $i13;

        i23 = $i15 - 1;

        goto label08;

     label07:
        $i10 = lengthof r13;

        $i11 = $i10 - 1;

        if i22 < $i11 goto label08;

        $r7 = r0.<org.apache.lucene.analysis.CharTokenizer: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt>;

        $i12 = 2 + i22;

        r13 = interfaceinvoke $r7.<org.apache.lucene.analysis.tokenattributes.CharTermAttribute: char[] resizeBuffer(int)>($i12);

     label08:
        $i24 = virtualinvoke r0.<org.apache.lucene.analysis.CharTokenizer: int normalize(int)>($i3);

        $i25 = staticinvoke <java.lang.Character: int toChars(int,char[],int)>($i24, r13, i22);

        $i26 = i22 + $i25;

        i22 = $i26;

        if $i26 < 255 goto label10;

        goto label11;

     label09:
        if i22 <= 0 goto label10;

        goto label11;

     label10:
        goto label02;

     label11:
        $r14 = r0.<org.apache.lucene.analysis.CharTokenizer: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt>;

        interfaceinvoke $r14.<org.apache.lucene.analysis.tokenattributes.CharTermAttribute: org.apache.lucene.analysis.tokenattributes.CharTermAttribute setLength(int)>(i22);

        $z5 = <org.apache.lucene.analysis.CharTokenizer: boolean $assertionsDisabled>;

        if $z5 != 0 goto label12;

        $i32 = (int) -1;

        if i23 != $i32 goto label12;

        $r16 = new java.lang.AssertionError;

        specialinvoke $r16.<java.lang.AssertionError: void <init>()>();

        throw $r16;

     label12:
        $r5 = r0.<org.apache.lucene.analysis.CharTokenizer: org.apache.lucene.analysis.tokenattributes.OffsetAttribute offsetAtt>;

        $i7 = virtualinvoke r0.<org.apache.lucene.analysis.CharTokenizer: int correctOffset(int)>(i23);

        $i8 = i23 + i22;

        $i9 = virtualinvoke r0.<org.apache.lucene.analysis.CharTokenizer: int correctOffset(int)>($i8);

        r0.<org.apache.lucene.analysis.CharTokenizer: int finalOffset> = $i9;

        interfaceinvoke $r5.<org.apache.lucene.analysis.tokenattributes.OffsetAttribute: void setOffset(int,int)>($i7, $i9);

        return 1;
    }

    private boolean incrementTokenOld() throws java.io.IOException
    {
        boolean $z0, $z1, $z2;
        java.io.Reader $r8;
        org.apache.lucene.analysis.tokenattributes.OffsetAttribute $r4;
        java.lang.AssertionError $r11, $r12;
        org.apache.lucene.util.CharacterUtils$CharacterBuffer $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i18, $i19, i20, i21, $i22, $i25, $i27, $i29, $i31;
        org.apache.lucene.analysis.CharTokenizer r0;
        org.apache.lucene.analysis.tokenattributes.CharTermAttribute $r1, $r6, $r10;
        char $c17, $c23;
        char[] $r3, r9;

        r0 := @this: org.apache.lucene.analysis.CharTokenizer;

        i20 = 0;

        $i25 = (int) -1;

        i21 = $i25;

        $r1 = r0.<org.apache.lucene.analysis.CharTokenizer: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt>;

        r9 = interfaceinvoke $r1.<org.apache.lucene.analysis.tokenattributes.CharTermAttribute: char[] buffer()>();

        $r2 = r0.<org.apache.lucene.analysis.CharTokenizer: org.apache.lucene.util.CharacterUtils$CharacterBuffer ioBuffer>;

        $r3 = virtualinvoke $r2.<org.apache.lucene.util.CharacterUtils$CharacterBuffer: char[] getBuffer()>();

     label01:
        $i1 = r0.<org.apache.lucene.analysis.CharTokenizer: int bufferIndex>;

        $i0 = r0.<org.apache.lucene.analysis.CharTokenizer: int dataLen>;

        if $i1 < $i0 goto label04;

        $i13 = r0.<org.apache.lucene.analysis.CharTokenizer: int offset>;

        $i12 = r0.<org.apache.lucene.analysis.CharTokenizer: int dataLen>;

        $i14 = $i13 + $i12;

        r0.<org.apache.lucene.analysis.CharTokenizer: int offset> = $i14;

        $r8 = r0.<org.apache.lucene.analysis.CharTokenizer: java.io.Reader input>;

        $i15 = virtualinvoke $r8.<java.io.Reader: int read(char[])>($r3);

        r0.<org.apache.lucene.analysis.CharTokenizer: int dataLen> = $i15;

        $i16 = r0.<org.apache.lucene.analysis.CharTokenizer: int dataLen>;

        $i27 = (int) -1;

        if $i16 != $i27 goto label03;

        r0.<org.apache.lucene.analysis.CharTokenizer: int dataLen> = 0;

        if i20 <= 0 goto label02;

        goto label10;

     label02:
        $i18 = r0.<org.apache.lucene.analysis.CharTokenizer: int offset>;

        $i19 = virtualinvoke r0.<org.apache.lucene.analysis.CharTokenizer: int correctOffset(int)>($i18);

        r0.<org.apache.lucene.analysis.CharTokenizer: int finalOffset> = $i19;

        return 0;

     label03:
        r0.<org.apache.lucene.analysis.CharTokenizer: int bufferIndex> = 0;

     label04:
        $i2 = r0.<org.apache.lucene.analysis.CharTokenizer: int bufferIndex>;

        $i3 = $i2 + 1;

        r0.<org.apache.lucene.analysis.CharTokenizer: int bufferIndex> = $i3;

        $c17 = $r3[$i2];

        $z0 = virtualinvoke r0.<org.apache.lucene.analysis.CharTokenizer: boolean isTokenChar(char)>($c17);

        if $z0 == 0 goto label08;

        if i20 != 0 goto label06;

        $z1 = <org.apache.lucene.analysis.CharTokenizer: boolean $assertionsDisabled>;

        if $z1 != 0 goto label05;

        $i29 = (int) -1;

        if i21 == $i29 goto label05;

        $r11 = new java.lang.AssertionError;

        specialinvoke $r11.<java.lang.AssertionError: void <init>()>();

        throw $r11;

     label05:
        $i10 = r0.<org.apache.lucene.analysis.CharTokenizer: int offset>;

        $i9 = r0.<org.apache.lucene.analysis.CharTokenizer: int bufferIndex>;

        $i11 = $i10 + $i9;

        i21 = $i11 - 1;

        goto label07;

     label06:
        $i7 = lengthof r9;

        if i20 != $i7 goto label07;

        $r6 = r0.<org.apache.lucene.analysis.CharTokenizer: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt>;

        $i8 = 1 + i20;

        r9 = interfaceinvoke $r6.<org.apache.lucene.analysis.tokenattributes.CharTermAttribute: char[] resizeBuffer(int)>($i8);

     label07:
        $i22 = i20;

        i20 = i20 + 1;

        $c23 = virtualinvoke r0.<org.apache.lucene.analysis.CharTokenizer: char normalize(char)>($c17);

        r9[$i22] = $c23;

        if i20 != 255 goto label09;

        goto label10;

     label08:
        if i20 <= 0 goto label09;

        goto label10;

     label09:
        goto label01;

     label10:
        $r10 = r0.<org.apache.lucene.analysis.CharTokenizer: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt>;

        interfaceinvoke $r10.<org.apache.lucene.analysis.tokenattributes.CharTermAttribute: org.apache.lucene.analysis.tokenattributes.CharTermAttribute setLength(int)>(i20);

        $z2 = <org.apache.lucene.analysis.CharTokenizer: boolean $assertionsDisabled>;

        if $z2 != 0 goto label11;

        $i31 = (int) -1;

        if i21 != $i31 goto label11;

        $r12 = new java.lang.AssertionError;

        specialinvoke $r12.<java.lang.AssertionError: void <init>()>();

        throw $r12;

     label11:
        $r4 = r0.<org.apache.lucene.analysis.CharTokenizer: org.apache.lucene.analysis.tokenattributes.OffsetAttribute offsetAtt>;

        $i4 = virtualinvoke r0.<org.apache.lucene.analysis.CharTokenizer: int correctOffset(int)>(i21);

        $i5 = i21 + i20;

        $i6 = virtualinvoke r0.<org.apache.lucene.analysis.CharTokenizer: int correctOffset(int)>($i5);

        interfaceinvoke $r4.<org.apache.lucene.analysis.tokenattributes.OffsetAttribute: void setOffset(int,int)>($i4, $i6);

        return 1;
    }

    public final void end()
    {
        int $i0, $i1;
        org.apache.lucene.analysis.tokenattributes.OffsetAttribute $r1;
        org.apache.lucene.analysis.CharTokenizer r0;

        r0 := @this: org.apache.lucene.analysis.CharTokenizer;

        $r1 = r0.<org.apache.lucene.analysis.CharTokenizer: org.apache.lucene.analysis.tokenattributes.OffsetAttribute offsetAtt>;

        $i1 = r0.<org.apache.lucene.analysis.CharTokenizer: int finalOffset>;

        $i0 = r0.<org.apache.lucene.analysis.CharTokenizer: int finalOffset>;

        interfaceinvoke $r1.<org.apache.lucene.analysis.tokenattributes.OffsetAttribute: void setOffset(int,int)>($i1, $i0);

        return;
    }

    public void reset(java.io.Reader) throws java.io.IOException
    {
        java.io.Reader r1;
        org.apache.lucene.util.CharacterUtils$CharacterBuffer $r2;
        org.apache.lucene.analysis.CharTokenizer r0;

        r0 := @this: org.apache.lucene.analysis.CharTokenizer;

        r1 := @parameter0: java.io.Reader;

        specialinvoke r0.<org.apache.lucene.analysis.Tokenizer: void reset(java.io.Reader)>(r1);

        r0.<org.apache.lucene.analysis.CharTokenizer: int bufferIndex> = 0;

        r0.<org.apache.lucene.analysis.CharTokenizer: int offset> = 0;

        r0.<org.apache.lucene.analysis.CharTokenizer: int dataLen> = 0;

        r0.<org.apache.lucene.analysis.CharTokenizer: int finalOffset> = 0;

        $r2 = r0.<org.apache.lucene.analysis.CharTokenizer: org.apache.lucene.util.CharacterUtils$CharacterBuffer ioBuffer>;

        virtualinvoke $r2.<org.apache.lucene.util.CharacterUtils$CharacterBuffer: void reset()>();

        return;
    }

    private boolean useOldAPI(org.apache.lucene.util.Version)
    {
        java.lang.IllegalArgumentException $r6;
        org.apache.lucene.util.Version r2, $r3, $r4;
        org.apache.lucene.util.VirtualMethod $r5, $r7;
        java.lang.Class $r1;
        org.apache.lucene.analysis.CharTokenizer r0;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: org.apache.lucene.analysis.CharTokenizer;

        r2 := @parameter0: org.apache.lucene.util.Version;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = <org.apache.lucene.util.Version: org.apache.lucene.util.Version LUCENE_31>;

        $z0 = virtualinvoke r2.<org.apache.lucene.util.Version: boolean onOrAfter(org.apache.lucene.util.Version)>($r3);

        if $z0 == 0 goto label2;

        $r5 = <org.apache.lucene.analysis.CharTokenizer: org.apache.lucene.util.VirtualMethod isTokenCharMethod>;

        $z2 = virtualinvoke $r5.<org.apache.lucene.util.VirtualMethod: boolean isOverriddenAsOf(java.lang.Class)>($r1);

        if $z2 != 0 goto label1;

        $r7 = <org.apache.lucene.analysis.CharTokenizer: org.apache.lucene.util.VirtualMethod normalizeMethod>;

        $z3 = virtualinvoke $r7.<org.apache.lucene.util.VirtualMethod: boolean isOverriddenAsOf(java.lang.Class)>($r1);

        if $z3 == 0 goto label2;

     label1:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("For matchVersion >= LUCENE_31, CharTokenizer subclasses must not override isTokenChar(char) or normalize(char).");

        throw $r6;

     label2:
        $r4 = <org.apache.lucene.util.Version: org.apache.lucene.util.Version LUCENE_31>;

        $z1 = virtualinvoke r2.<org.apache.lucene.util.Version: boolean onOrAfter(org.apache.lucene.util.Version)>($r4);

        if $z1 != 0 goto label3;

        $z4 = 1;

        goto label4;

     label3:
        $z4 = 0;

     label4:
        return $z4;
    }

    static void <clinit>()
    {
        java.lang.Class[] $r2, $r5;
        org.apache.lucene.util.VirtualMethod $r1, $r4;
        java.lang.Class $r0, $r3, $r6;
        boolean $z0, $z1;

        <org.apache.lucene.analysis.CharTokenizer: int IO_BUFFER_SIZE> = 4096;

        <org.apache.lucene.analysis.CharTokenizer: int MAX_WORD_LEN> = 255;

        $r0 = class "Lorg/apache/lucene/analysis/CharTokenizer;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.analysis.CharTokenizer: boolean $assertionsDisabled> = $z1;

        $r1 = new org.apache.lucene.util.VirtualMethod;

        $r2 = newarray (java.lang.Class)[1];

        $r3 = <java.lang.Character: java.lang.Class TYPE>;

        $r2[0] = $r3;

        specialinvoke $r1.<org.apache.lucene.util.VirtualMethod: void <init>(java.lang.Class,java.lang.String,java.lang.Class[])>(class "Lorg/apache/lucene/analysis/CharTokenizer;", "isTokenChar", $r2);

        <org.apache.lucene.analysis.CharTokenizer: org.apache.lucene.util.VirtualMethod isTokenCharMethod> = $r1;

        $r4 = new org.apache.lucene.util.VirtualMethod;

        $r5 = newarray (java.lang.Class)[1];

        $r6 = <java.lang.Character: java.lang.Class TYPE>;

        $r5[0] = $r6;

        specialinvoke $r4.<org.apache.lucene.util.VirtualMethod: void <init>(java.lang.Class,java.lang.String,java.lang.Class[])>(class "Lorg/apache/lucene/analysis/CharTokenizer;", "normalize", $r5);

        <org.apache.lucene.analysis.CharTokenizer: org.apache.lucene.util.VirtualMethod normalizeMethod> = $r4;

        return;
    }
}
