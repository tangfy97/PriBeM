class org.waveprotocol.wave.client.gadget.StateMap$5 extends java.lang.Object implements org.waveprotocol.wave.client.gadget.StateMap$CheckKeyValue
{
    final org.waveprotocol.wave.client.gadget.StateMap$Each val$proc;
    final org.waveprotocol.wave.client.gadget.StateMap this$0;

    void <init>(org.waveprotocol.wave.client.gadget.StateMap, org.waveprotocol.wave.client.gadget.StateMap$Each)
    {
        org.waveprotocol.wave.client.gadget.StateMap$5 r0;
        org.waveprotocol.wave.client.gadget.StateMap$Each r2;
        org.waveprotocol.wave.client.gadget.StateMap r1;

        r0 := @this: org.waveprotocol.wave.client.gadget.StateMap$5;

        r1 := @parameter0: org.waveprotocol.wave.client.gadget.StateMap;

        r2 := @parameter1: org.waveprotocol.wave.client.gadget.StateMap$Each;

        r0.<org.waveprotocol.wave.client.gadget.StateMap$5: org.waveprotocol.wave.client.gadget.StateMap this$0> = r1;

        r0.<org.waveprotocol.wave.client.gadget.StateMap$5: org.waveprotocol.wave.client.gadget.StateMap$Each val$proc> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean check(java.lang.String, java.lang.String)
    {
        org.waveprotocol.wave.client.gadget.StateMap$5 r0;
        org.waveprotocol.wave.client.gadget.StateMap$Each $r3;
        java.lang.String r1, r2;

        r0 := @this: org.waveprotocol.wave.client.gadget.StateMap$5;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.waveprotocol.wave.client.gadget.StateMap$5: org.waveprotocol.wave.client.gadget.StateMap$Each val$proc>;

        interfaceinvoke $r3.<org.waveprotocol.wave.client.gadget.StateMap$Each: void apply(java.lang.String,java.lang.String)>(r1, r2);

        return 1;
    }
}
