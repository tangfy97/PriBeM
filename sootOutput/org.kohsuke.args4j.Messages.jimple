class org.kohsuke.args4j.Messages extends java.lang.Object
{
    static java.lang.Class class$org$kohsuke$args4j$Messages;

    void <init>()
    {
        org.kohsuke.args4j.Messages r0;

        r0 := @this: org.kohsuke.args4j.Messages;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static java.lang.String format(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.kohsuke.args4j.Messages: java.lang.String format(java.lang.String,java.lang.Object[])>(r0, null);

        return $r1;
    }

    static java.lang.String format(java.lang.String, java.lang.Object)
    {
        java.lang.Object[] $r1;
        java.lang.Object r2;
        java.lang.String r0, $r3;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r1 = newarray (java.lang.Object)[1];

        $r1[0] = r2;

        $r3 = staticinvoke <org.kohsuke.args4j.Messages: java.lang.String format(java.lang.String,java.lang.Object[])>(r0, $r1);

        return $r3;
    }

    static java.lang.String format(java.lang.String, java.lang.Object, java.lang.Object)
    {
        java.lang.Object[] $r1;
        java.lang.Object r2, r3;
        java.lang.String r0, $r4;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        $r1 = newarray (java.lang.Object)[2];

        $r1[0] = r2;

        $r1[1] = r3;

        $r4 = staticinvoke <org.kohsuke.args4j.Messages: java.lang.String format(java.lang.String,java.lang.Object[])>(r0, $r1);

        return $r4;
    }

    static java.lang.String format(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        java.lang.Object[] $r1;
        java.lang.Object r2, r3, r4;
        java.lang.String r0, $r5;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        $r1 = newarray (java.lang.Object)[3];

        $r1[0] = r2;

        $r1[1] = r3;

        $r1[2] = r4;

        $r5 = staticinvoke <org.kohsuke.args4j.Messages: java.lang.String format(java.lang.String,java.lang.Object[])>(r0, $r1);

        return $r5;
    }

    static java.lang.String format(java.lang.String, java.lang.Object[])
    {
        java.lang.Object[] r5;
        java.util.ResourceBundle $r2;
        java.lang.Class $r0, $r7;
        java.lang.String $r1, r3, $r4, $r6;

        r3 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.Object[];

        $r0 = <org.kohsuke.args4j.Messages: java.lang.Class class$org$kohsuke$args4j$Messages>;

        if $r0 != null goto label1;

        $r7 = staticinvoke <org.kohsuke.args4j.Messages: java.lang.Class class$(java.lang.String)>("org.kohsuke.args4j.Messages");

        <org.kohsuke.args4j.Messages: java.lang.Class class$org$kohsuke$args4j$Messages> = $r7;

        goto label2;

     label1:
        $r7 = <org.kohsuke.args4j.Messages: java.lang.Class class$org$kohsuke$args4j$Messages>;

     label2:
        $r1 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String)>($r1);

        $r4 = virtualinvoke $r2.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(r3);

        $r6 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>($r4, r5);

        return $r6;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }
}
