public class org.apache.neethi.builders.converters.DOMToOMConverter extends org.apache.neethi.builders.converters.AbstractDOMConverter implements org.apache.neethi.builders.converters.Converter
{

    public void <init>()
    {
        org.apache.neethi.builders.converters.DOMToOMConverter r0;

        r0 := @this: org.apache.neethi.builders.converters.DOMToOMConverter;

        specialinvoke r0.<org.apache.neethi.builders.converters.AbstractDOMConverter: void <init>()>();

        return;
    }

    public org.apache.axiom.om.OMElement convert(org.w3c.dom.Element)
    {
        org.apache.axiom.om.OMElement $r3;
        javax.xml.transform.dom.DOMSource $r0;
        org.w3c.dom.Element r1;
        org.apache.axiom.om.OMXMLParserWrapper $r2;
        org.apache.neethi.builders.converters.DOMToOMConverter r4;

        r4 := @this: org.apache.neethi.builders.converters.DOMToOMConverter;

        r1 := @parameter0: org.w3c.dom.Element;

        $r0 = new javax.xml.transform.dom.DOMSource;

        specialinvoke $r0.<javax.xml.transform.dom.DOMSource: void <init>(org.w3c.dom.Node)>(r1);

        $r2 = staticinvoke <org.apache.axiom.om.OMXMLBuilderFactory: org.apache.axiom.om.OMXMLParserWrapper createOMBuilder(javax.xml.transform.Source)>($r0);

        $r3 = interfaceinvoke $r2.<org.apache.axiom.om.OMXMLParserWrapper: org.apache.axiom.om.OMElement getDocumentElement()>();

        return $r3;
    }

    public volatile java.lang.Object convert(java.lang.Object)
    {
        org.apache.axiom.om.OMElement $r3;
        org.w3c.dom.Element $r2;
        java.lang.Object r1;
        org.apache.neethi.builders.converters.DOMToOMConverter r0;

        r0 := @this: org.apache.neethi.builders.converters.DOMToOMConverter;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.w3c.dom.Element) r1;

        $r3 = virtualinvoke r0.<org.apache.neethi.builders.converters.DOMToOMConverter: org.apache.axiom.om.OMElement convert(org.w3c.dom.Element)>($r2);

        return $r3;
    }

    public volatile java.util.Iterator getChildren(java.lang.Object)
    {
        org.w3c.dom.Element $r2;
        java.util.Iterator $r3;
        java.lang.Object r1;
        org.apache.neethi.builders.converters.DOMToOMConverter r0;

        r0 := @this: org.apache.neethi.builders.converters.DOMToOMConverter;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.w3c.dom.Element) r1;

        $r3 = specialinvoke r0.<org.apache.neethi.builders.converters.AbstractDOMConverter: java.util.Iterator getChildren(org.w3c.dom.Element)>($r2);

        return $r3;
    }

    public volatile java.util.Map getAttributes(java.lang.Object)
    {
        org.w3c.dom.Element $r2;
        java.util.Map $r3;
        java.lang.Object r1;
        org.apache.neethi.builders.converters.DOMToOMConverter r0;

        r0 := @this: org.apache.neethi.builders.converters.DOMToOMConverter;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.w3c.dom.Element) r1;

        $r3 = specialinvoke r0.<org.apache.neethi.builders.converters.AbstractDOMConverter: java.util.Map getAttributes(org.w3c.dom.Element)>($r2);

        return $r3;
    }

    public volatile javax.xml.namespace.QName getQName(java.lang.Object)
    {
        org.w3c.dom.Element $r2;
        java.lang.Object r1;
        javax.xml.namespace.QName $r3;
        org.apache.neethi.builders.converters.DOMToOMConverter r0;

        r0 := @this: org.apache.neethi.builders.converters.DOMToOMConverter;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.w3c.dom.Element) r1;

        $r3 = specialinvoke r0.<org.apache.neethi.builders.converters.AbstractDOMConverter: javax.xml.namespace.QName getQName(org.w3c.dom.Element)>($r2);

        return $r3;
    }
}
