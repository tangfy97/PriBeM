public abstract class com.hp.hpl.jena.sparql.path.eval.PathEngine extends java.lang.Object
{
    protected static org.apache.jena.atlas.iterator.Transform selectSubject;
    protected static org.apache.jena.atlas.iterator.Transform selectPredicate;
    protected static org.apache.jena.atlas.iterator.Transform selectObject;

    public void <init>()
    {
        com.hp.hpl.jena.sparql.path.eval.PathEngine r0;

        r0 := @this: com.hp.hpl.jena.sparql.path.eval.PathEngine;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected final org.apache.jena.atlas.iterator.Iter eval(com.hp.hpl.jena.graph.Graph, com.hp.hpl.jena.sparql.path.Path, com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.sparql.path.Path r2;
        com.hp.hpl.jena.sparql.path.eval.PathEngine r3;
        com.hp.hpl.jena.graph.Node r1;
        org.apache.jena.atlas.iterator.Iter $r4;
        com.hp.hpl.jena.graph.Graph r0;

        r3 := @this: com.hp.hpl.jena.sparql.path.eval.PathEngine;

        r0 := @parameter0: com.hp.hpl.jena.graph.Graph;

        r2 := @parameter1: com.hp.hpl.jena.sparql.path.Path;

        r1 := @parameter2: com.hp.hpl.jena.graph.Node;

        $r4 = staticinvoke <com.hp.hpl.jena.sparql.path.eval.PathEval: org.apache.jena.atlas.iterator.Iter eval$(com.hp.hpl.jena.graph.Graph,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.path.Path,com.hp.hpl.jena.sparql.path.eval.PathEngine)>(r0, r1, r2, r3);

        return $r4;
    }

    protected final void eval(com.hp.hpl.jena.graph.Graph, com.hp.hpl.jena.sparql.path.Path, com.hp.hpl.jena.graph.Node, java.util.Collection)
    {
        com.hp.hpl.jena.sparql.path.Path r2;
        com.hp.hpl.jena.sparql.path.eval.PathEngine r3;
        java.util.Collection r4;
        com.hp.hpl.jena.graph.Node r1;
        com.hp.hpl.jena.graph.Graph r0;

        r3 := @this: com.hp.hpl.jena.sparql.path.eval.PathEngine;

        r0 := @parameter0: com.hp.hpl.jena.graph.Graph;

        r2 := @parameter1: com.hp.hpl.jena.sparql.path.Path;

        r1 := @parameter2: com.hp.hpl.jena.graph.Node;

        r4 := @parameter3: java.util.Collection;

        staticinvoke <com.hp.hpl.jena.sparql.path.eval.PathEval: void eval$(com.hp.hpl.jena.graph.Graph,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.path.Path,com.hp.hpl.jena.sparql.path.eval.PathEngine,java.util.Collection)>(r0, r1, r2, r3, r4);

        return;
    }

    protected abstract void flipDirection();

    protected abstract boolean direction();

    protected abstract java.util.Collection collector();

    protected final java.util.Iterator doOne(com.hp.hpl.jena.graph.Graph, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.sparql.path.eval.PathEngine r0;
        com.hp.hpl.jena.graph.Node r2, r3, $r4, $r8;
        org.apache.jena.atlas.iterator.Transform $r7, $r11;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r5, $r9;
        org.apache.jena.atlas.iterator.Iter $r6, $r10, r12;
        com.hp.hpl.jena.graph.Graph r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.path.eval.PathEngine;

        r1 := @parameter0: com.hp.hpl.jena.graph.Graph;

        r3 := @parameter1: com.hp.hpl.jena.graph.Node;

        r2 := @parameter2: com.hp.hpl.jena.graph.Node;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.path.eval.PathEngine: boolean direction()>();

        if $z0 == 0 goto label1;

        $r8 = <com.hp.hpl.jena.graph.Node: com.hp.hpl.jena.graph.Node ANY>;

        $r9 = interfaceinvoke r1.<com.hp.hpl.jena.graph.Graph: com.hp.hpl.jena.util.iterator.ExtendedIterator find(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r3, r2, $r8);

        $r10 = staticinvoke <org.apache.jena.atlas.iterator.Iter: org.apache.jena.atlas.iterator.Iter iter(java.util.Iterator)>($r9);

        $r11 = <com.hp.hpl.jena.sparql.path.eval.PathEngine: org.apache.jena.atlas.iterator.Transform selectObject>;

        r12 = virtualinvoke $r10.<org.apache.jena.atlas.iterator.Iter: org.apache.jena.atlas.iterator.Iter map(org.apache.jena.atlas.iterator.Transform)>($r11);

        goto label2;

     label1:
        $r4 = <com.hp.hpl.jena.graph.Node: com.hp.hpl.jena.graph.Node ANY>;

        $r5 = interfaceinvoke r1.<com.hp.hpl.jena.graph.Graph: com.hp.hpl.jena.util.iterator.ExtendedIterator find(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>($r4, r2, r3);

        $r6 = staticinvoke <org.apache.jena.atlas.iterator.Iter: org.apache.jena.atlas.iterator.Iter iter(java.util.Iterator)>($r5);

        $r7 = <com.hp.hpl.jena.sparql.path.eval.PathEngine: org.apache.jena.atlas.iterator.Transform selectSubject>;

        r12 = virtualinvoke $r6.<org.apache.jena.atlas.iterator.Iter: org.apache.jena.atlas.iterator.Iter map(org.apache.jena.atlas.iterator.Transform)>($r7);

     label2:
        return r12;
    }

    protected abstract void doSeq(com.hp.hpl.jena.sparql.path.Path, com.hp.hpl.jena.sparql.path.Path, com.hp.hpl.jena.graph.Node, java.util.Collection);

    protected abstract void doAlt(com.hp.hpl.jena.sparql.path.Path, com.hp.hpl.jena.sparql.path.Path, com.hp.hpl.jena.graph.Node, java.util.Collection);

    protected abstract void doZeroOrMore(com.hp.hpl.jena.sparql.path.Path, com.hp.hpl.jena.graph.Node, java.util.Collection);

    protected abstract void doOneOrMore(com.hp.hpl.jena.sparql.path.Path, com.hp.hpl.jena.graph.Node, java.util.Collection);

    protected abstract void doZeroOrOne(com.hp.hpl.jena.sparql.path.Path, com.hp.hpl.jena.graph.Node, java.util.Collection);

    protected abstract void doNegatedPropertySet(com.hp.hpl.jena.sparql.path.P_NegPropSet, com.hp.hpl.jena.graph.Node, java.util.Collection);

    protected void doZeroOrMoreN(com.hp.hpl.jena.sparql.path.Path, com.hp.hpl.jena.graph.Node, java.util.Collection)
    {
        com.hp.hpl.jena.sparql.path.Path r1;
        com.hp.hpl.jena.sparql.path.eval.PathEngine r0;
        java.util.Collection r3;
        com.hp.hpl.jena.graph.Node r2;

        r0 := @this: com.hp.hpl.jena.sparql.path.eval.PathEngine;

        r1 := @parameter0: com.hp.hpl.jena.sparql.path.Path;

        r2 := @parameter1: com.hp.hpl.jena.graph.Node;

        r3 := @parameter2: java.util.Collection;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.path.eval.PathEngine: void doZeroOrMore(com.hp.hpl.jena.sparql.path.Path,com.hp.hpl.jena.graph.Node,java.util.Collection)>(r1, r2, r3);

        return;
    }

    protected void doOneOrMoreN(com.hp.hpl.jena.sparql.path.Path, com.hp.hpl.jena.graph.Node, java.util.Collection)
    {
        com.hp.hpl.jena.sparql.path.Path r1;
        com.hp.hpl.jena.sparql.path.eval.PathEngine r0;
        java.util.Collection r3;
        com.hp.hpl.jena.graph.Node r2;

        r0 := @this: com.hp.hpl.jena.sparql.path.eval.PathEngine;

        r1 := @parameter0: com.hp.hpl.jena.sparql.path.Path;

        r2 := @parameter1: com.hp.hpl.jena.graph.Node;

        r3 := @parameter2: java.util.Collection;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.path.eval.PathEngine: void doOneOrMore(com.hp.hpl.jena.sparql.path.Path,com.hp.hpl.jena.graph.Node,java.util.Collection)>(r1, r2, r3);

        return;
    }

    protected abstract void doZero(com.hp.hpl.jena.sparql.path.Path, com.hp.hpl.jena.graph.Node, java.util.Collection);

    protected abstract void doFixedLengthPath(com.hp.hpl.jena.sparql.path.Path, com.hp.hpl.jena.graph.Node, long, java.util.Collection);

    protected abstract void doMultiLengthPath(com.hp.hpl.jena.sparql.path.Path, com.hp.hpl.jena.graph.Node, long, long, java.util.Collection);

    protected final void fill(java.util.Iterator, java.util.Collection)
    {
        java.util.Iterator r0;
        com.hp.hpl.jena.sparql.path.eval.PathEngine r3;
        java.util.Collection r1;
        java.lang.Object $r2;
        boolean $z0;

        r3 := @this: com.hp.hpl.jena.sparql.path.eval.PathEngine;

        r0 := @parameter0: java.util.Iterator;

        r1 := @parameter1: java.util.Collection;

     label1:
        $z0 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r2);

        goto label1;

     label2:
        return;
    }

    protected static long dec(long)
    {
        byte $b1;
        int $i3;
        long l0, $l2;

        l0 := @parameter0: long;

        $b1 = l0 cmp 0L;

        $i3 = (int) $b1;

        if $i3 > 0 goto label1;

        $l2 = l0;

        goto label2;

     label1:
        $l2 = l0 - 1L;

     label2:
        return $l2;
    }

    protected static java.util.Iterator stepExcludeForwards(com.hp.hpl.jena.graph.Graph, com.hp.hpl.jena.graph.Node, java.util.List)
    {
        org.apache.jena.atlas.iterator.Transform $r4;
        java.util.List r2;
        com.hp.hpl.jena.graph.Node r1;
        org.apache.jena.atlas.iterator.Iter $r3, $r5;
        com.hp.hpl.jena.graph.Graph r0;

        r0 := @parameter0: com.hp.hpl.jena.graph.Graph;

        r1 := @parameter1: com.hp.hpl.jena.graph.Node;

        r2 := @parameter2: java.util.List;

        $r3 = staticinvoke <com.hp.hpl.jena.sparql.path.eval.PathEngine: org.apache.jena.atlas.iterator.Iter forwardLinks(com.hp.hpl.jena.graph.Graph,com.hp.hpl.jena.graph.Node,java.util.Collection)>(r0, r1, r2);

        $r4 = <com.hp.hpl.jena.sparql.path.eval.PathEngine: org.apache.jena.atlas.iterator.Transform selectObject>;

        $r5 = virtualinvoke $r3.<org.apache.jena.atlas.iterator.Iter: org.apache.jena.atlas.iterator.Iter map(org.apache.jena.atlas.iterator.Transform)>($r4);

        return $r5;
    }

    protected static java.util.Iterator stepExcludeBackwards(com.hp.hpl.jena.graph.Graph, com.hp.hpl.jena.graph.Node, java.util.List)
    {
        org.apache.jena.atlas.iterator.Transform $r4;
        java.util.List r2;
        com.hp.hpl.jena.graph.Node r1;
        org.apache.jena.atlas.iterator.Iter $r3, $r5;
        com.hp.hpl.jena.graph.Graph r0;

        r0 := @parameter0: com.hp.hpl.jena.graph.Graph;

        r1 := @parameter1: com.hp.hpl.jena.graph.Node;

        r2 := @parameter2: java.util.List;

        $r3 = staticinvoke <com.hp.hpl.jena.sparql.path.eval.PathEngine: org.apache.jena.atlas.iterator.Iter backwardLinks(com.hp.hpl.jena.graph.Graph,com.hp.hpl.jena.graph.Node,java.util.Collection)>(r0, r1, r2);

        $r4 = <com.hp.hpl.jena.sparql.path.eval.PathEngine: org.apache.jena.atlas.iterator.Transform selectSubject>;

        $r5 = virtualinvoke $r3.<org.apache.jena.atlas.iterator.Iter: org.apache.jena.atlas.iterator.Iter map(org.apache.jena.atlas.iterator.Transform)>($r4);

        return $r5;
    }

    protected static org.apache.jena.atlas.iterator.Iter forwardLinks(com.hp.hpl.jena.graph.Graph, com.hp.hpl.jena.graph.Node, java.util.Collection)
    {
        java.util.Collection r6;
        com.hp.hpl.jena.graph.Node r1, $r2, $r3;
        com.hp.hpl.jena.sparql.path.eval.PathEvaluator$FilterExclude $r7;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r4;
        org.apache.jena.atlas.iterator.Iter $r5, r8;
        com.hp.hpl.jena.graph.Graph r0;

        r0 := @parameter0: com.hp.hpl.jena.graph.Graph;

        r1 := @parameter1: com.hp.hpl.jena.graph.Node;

        r6 := @parameter2: java.util.Collection;

        $r3 = <com.hp.hpl.jena.graph.Node: com.hp.hpl.jena.graph.Node ANY>;

        $r2 = <com.hp.hpl.jena.graph.Node: com.hp.hpl.jena.graph.Node ANY>;

        $r4 = interfaceinvoke r0.<com.hp.hpl.jena.graph.Graph: com.hp.hpl.jena.util.iterator.ExtendedIterator find(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r1, $r3, $r2);

        $r5 = staticinvoke <org.apache.jena.atlas.iterator.Iter: org.apache.jena.atlas.iterator.Iter iter(java.util.Iterator)>($r4);

        r8 = $r5;

        if r6 == null goto label1;

        $r7 = new com.hp.hpl.jena.sparql.path.eval.PathEvaluator$FilterExclude;

        specialinvoke $r7.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator$FilterExclude: void <init>(java.util.Collection)>(r6);

        r8 = virtualinvoke $r5.<org.apache.jena.atlas.iterator.Iter: org.apache.jena.atlas.iterator.Iter filter(org.apache.jena.atlas.iterator.Filter)>($r7);

     label1:
        return r8;
    }

    protected static org.apache.jena.atlas.iterator.Iter backwardLinks(com.hp.hpl.jena.graph.Graph, com.hp.hpl.jena.graph.Node, java.util.Collection)
    {
        java.util.Collection r6;
        com.hp.hpl.jena.graph.Node r1, $r2, $r3;
        com.hp.hpl.jena.sparql.path.eval.PathEvaluator$FilterExclude $r7;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r4;
        org.apache.jena.atlas.iterator.Iter $r5, r8;
        com.hp.hpl.jena.graph.Graph r0;

        r0 := @parameter0: com.hp.hpl.jena.graph.Graph;

        r1 := @parameter1: com.hp.hpl.jena.graph.Node;

        r6 := @parameter2: java.util.Collection;

        $r3 = <com.hp.hpl.jena.graph.Node: com.hp.hpl.jena.graph.Node ANY>;

        $r2 = <com.hp.hpl.jena.graph.Node: com.hp.hpl.jena.graph.Node ANY>;

        $r4 = interfaceinvoke r0.<com.hp.hpl.jena.graph.Graph: com.hp.hpl.jena.util.iterator.ExtendedIterator find(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>($r3, $r2, r1);

        $r5 = staticinvoke <org.apache.jena.atlas.iterator.Iter: org.apache.jena.atlas.iterator.Iter iter(java.util.Iterator)>($r4);

        r8 = $r5;

        if r6 == null goto label1;

        $r7 = new com.hp.hpl.jena.sparql.path.eval.PathEvaluator$FilterExclude;

        specialinvoke $r7.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator$FilterExclude: void <init>(java.util.Collection)>(r6);

        r8 = virtualinvoke $r5.<org.apache.jena.atlas.iterator.Iter: org.apache.jena.atlas.iterator.Iter filter(org.apache.jena.atlas.iterator.Filter)>($r7);

     label1:
        return r8;
    }

    static void <clinit>()
    {
        com.hp.hpl.jena.sparql.path.eval.PathEngine$1 $r0;
        com.hp.hpl.jena.sparql.path.eval.PathEngine$2 $r1;
        com.hp.hpl.jena.sparql.path.eval.PathEngine$3 $r2;

        $r0 = new com.hp.hpl.jena.sparql.path.eval.PathEngine$1;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.path.eval.PathEngine$1: void <init>()>();

        <com.hp.hpl.jena.sparql.path.eval.PathEngine: org.apache.jena.atlas.iterator.Transform selectSubject> = $r0;

        $r1 = new com.hp.hpl.jena.sparql.path.eval.PathEngine$2;

        specialinvoke $r1.<com.hp.hpl.jena.sparql.path.eval.PathEngine$2: void <init>()>();

        <com.hp.hpl.jena.sparql.path.eval.PathEngine: org.apache.jena.atlas.iterator.Transform selectPredicate> = $r1;

        $r2 = new com.hp.hpl.jena.sparql.path.eval.PathEngine$3;

        specialinvoke $r2.<com.hp.hpl.jena.sparql.path.eval.PathEngine$3: void <init>()>();

        <com.hp.hpl.jena.sparql.path.eval.PathEngine: org.apache.jena.atlas.iterator.Transform selectObject> = $r2;

        return;
    }
}
