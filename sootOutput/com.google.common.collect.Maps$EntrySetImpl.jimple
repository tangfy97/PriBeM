class com.google.common.collect.Maps$EntrySetImpl extends java.util.AbstractSet
{
    private final java.util.Map map;
    private final com.google.common.base.Supplier entryIteratorSupplier;

    void <init>(java.util.Map, com.google.common.base.Supplier)
    {
        com.google.common.collect.Maps$EntrySetImpl r0;
        java.util.Map r1, $r3;
        com.google.common.base.Supplier r4, $r6;
        java.lang.Object $r2, $r5;

        r0 := @this: com.google.common.collect.Maps$EntrySetImpl;

        r1 := @parameter0: java.util.Map;

        r4 := @parameter1: com.google.common.base.Supplier;

        specialinvoke r0.<java.util.AbstractSet: void <init>()>();

        $r2 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (java.util.Map) $r2;

        r0.<com.google.common.collect.Maps$EntrySetImpl: java.util.Map map> = $r3;

        $r5 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r4);

        $r6 = (com.google.common.base.Supplier) $r5;

        r0.<com.google.common.collect.Maps$EntrySetImpl: com.google.common.base.Supplier entryIteratorSupplier> = $r6;

        return;
    }

    public java.util.Iterator iterator()
    {
        com.google.common.collect.Maps$EntrySetImpl r0;
        java.util.Iterator $r3;
        com.google.common.base.Supplier $r1;
        java.lang.Object $r2;

        r0 := @this: com.google.common.collect.Maps$EntrySetImpl;

        $r1 = r0.<com.google.common.collect.Maps$EntrySetImpl: com.google.common.base.Supplier entryIteratorSupplier>;

        $r2 = interfaceinvoke $r1.<com.google.common.base.Supplier: java.lang.Object get()>();

        $r3 = (java.util.Iterator) $r2;

        return $r3;
    }

    public int size()
    {
        com.google.common.collect.Maps$EntrySetImpl r0;
        int $i0;
        java.util.Map $r1;

        r0 := @this: com.google.common.collect.Maps$EntrySetImpl;

        $r1 = r0.<com.google.common.collect.Maps$EntrySetImpl: java.util.Map map>;

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        return $i0;
    }

    public void clear()
    {
        com.google.common.collect.Maps$EntrySetImpl r0;
        java.util.Map $r1;

        r0 := @this: com.google.common.collect.Maps$EntrySetImpl;

        $r1 = r0.<com.google.common.collect.Maps$EntrySetImpl: java.util.Map map>;

        interfaceinvoke $r1.<java.util.Map: void clear()>();

        return;
    }

    public boolean contains(java.lang.Object)
    {
        com.google.common.collect.Maps$EntrySetImpl r3;
        java.util.Map$Entry r1;
        java.util.Map $r4, $r5;
        java.lang.Object r0, $r2, $r6, $r7, $r8;
        boolean $z0, $z1, $z2;

        r3 := @this: com.google.common.collect.Maps$EntrySetImpl;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.util.Map$Entry;

        if $z0 == 0 goto label1;

        r1 = (java.util.Map$Entry) r0;

        $r2 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r4 = r3.<com.google.common.collect.Maps$EntrySetImpl: java.util.Map map>;

        $z1 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>($r2);

        if $z1 == 0 goto label1;

        $r5 = r3.<com.google.common.collect.Maps$EntrySetImpl: java.util.Map map>;

        $r6 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        $r8 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z2 = staticinvoke <com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r7, $r8);

        return $z2;

     label1:
        return 0;
    }

    public boolean isEmpty()
    {
        com.google.common.collect.Maps$EntrySetImpl r0;
        java.util.Map $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.Maps$EntrySetImpl;

        $r1 = r0.<com.google.common.collect.Maps$EntrySetImpl: java.util.Map map>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>();

        return $z0;
    }

    public boolean remove(java.lang.Object)
    {
        com.google.common.collect.Maps$EntrySetImpl r0;
        java.util.Map$Entry r2;
        java.util.Map $r3;
        java.lang.Object r1, $r4;
        boolean $z0;

        r0 := @this: com.google.common.collect.Maps$EntrySetImpl;

        r1 := @parameter0: java.lang.Object;

        $z0 = virtualinvoke r0.<com.google.common.collect.Maps$EntrySetImpl: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        r2 = (java.util.Map$Entry) r1;

        $r3 = r0.<com.google.common.collect.Maps$EntrySetImpl: java.util.Map map>;

        $r4 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r4);

        return 1;

     label1:
        return 0;
    }

    public int hashCode()
    {
        com.google.common.collect.Maps$EntrySetImpl r0;
        int $i0;
        java.util.Map $r1;

        r0 := @this: com.google.common.collect.Maps$EntrySetImpl;

        $r1 = r0.<com.google.common.collect.Maps$EntrySetImpl: java.util.Map map>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        return $i0;
    }
}
