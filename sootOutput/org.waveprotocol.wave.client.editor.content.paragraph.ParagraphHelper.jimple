public class org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelper extends java.lang.Object
{
    public static final org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelper INSTANCE;
    public static org.waveprotocol.wave.common.logging.LoggerBundle logger;

    public void <init>()
    {
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelper r0;

        r0 := @this: org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelper create()
    {
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelper $r1;
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelperWebkit $r3;
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelperAlwaysBr $r4;
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelperIE $r2;
        boolean $z0, $z1;

        $z0 = staticinvoke <org.waveprotocol.wave.client.common.util.UserAgent: boolean isIE()>();

        if $z0 == 0 goto label1;

        $r2 = new org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelperIE;

        $r1 = $r2;

        specialinvoke $r2.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelperIE: void <init>()>();

        goto label3;

     label1:
        $z1 = staticinvoke <org.waveprotocol.wave.client.common.util.UserAgent: boolean isWebkit()>();

        if $z1 == 0 goto label2;

        $r3 = new org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelperWebkit;

        $r1 = $r3;

        specialinvoke $r3.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelperWebkit: void <init>()>();

        goto label3;

     label2:
        $r4 = new org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelperAlwaysBr;

        $r1 = $r4;

        specialinvoke $r4.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelperAlwaysBr: void <init>()>();

     label3:
        return $r1;
    }

    public com.google.gwt.dom.client.Node getEndingNodelet(com.google.gwt.dom.client.Element)
    {
        com.google.gwt.dom.client.Element r1;
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelper r0;

        r0 := @this: org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelper;

        r1 := @parameter0: com.google.gwt.dom.client.Element;

        return null;
    }

    public void onEmpty(com.google.gwt.dom.client.Element)
    {
        com.google.gwt.dom.client.Element r1;
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelper r0;

        r0 := @this: org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelper;

        r1 := @parameter0: com.google.gwt.dom.client.Element;

        return;
    }

    public void onChildAdded(com.google.gwt.dom.client.Node, com.google.gwt.dom.client.Element)
    {
        com.google.gwt.dom.client.Element r2;
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelper r0;
        com.google.gwt.dom.client.Node r1;

        r0 := @this: org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelper;

        r1 := @parameter0: com.google.gwt.dom.client.Node;

        r2 := @parameter1: com.google.gwt.dom.client.Element;

        return;
    }

    public void onRemovingChild(com.google.gwt.dom.client.Node, com.google.gwt.dom.client.Element)
    {
        com.google.gwt.dom.client.Element r2;
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelper r0;
        com.google.gwt.dom.client.Node r1;

        r0 := @this: org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelper;

        r1 := @parameter0: com.google.gwt.dom.client.Node;

        r2 := @parameter1: com.google.gwt.dom.client.Element;

        return;
    }

    public void onRepair(org.waveprotocol.wave.client.editor.content.ContentElement)
    {
        org.waveprotocol.wave.client.editor.content.ContentElement r1;
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelper r0;

        r0 := @this: org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelper;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentElement;

        return;
    }

    public void assertHealthy(org.waveprotocol.wave.client.editor.content.ContentElement)
    {
        org.waveprotocol.wave.client.editor.content.ContentElement r1;
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelper r0;

        r0 := @this: org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelper;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentElement;

        return;
    }

    static void <clinit>()
    {
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelper $r1;
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelperWebkit $r4;
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelperAlwaysBr $r5;
        org.waveprotocol.wave.common.logging.LoggerBundle $r2;
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelperIE $r3;
        boolean $z0, $z1;

        $z0 = staticinvoke <org.waveprotocol.wave.client.common.util.UserAgent: boolean isIE()>();

        if $z0 == 0 goto label1;

        $r3 = new org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelperIE;

        $r1 = $r3;

        specialinvoke $r3.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelperIE: void <init>()>();

        goto label3;

     label1:
        $z1 = staticinvoke <org.waveprotocol.wave.client.common.util.UserAgent: boolean isWebkit()>();

        if $z1 == 0 goto label2;

        $r4 = new org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelperWebkit;

        $r1 = $r4;

        specialinvoke $r4.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelperWebkit: void <init>()>();

        goto label3;

     label2:
        $r5 = new org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelperAlwaysBr;

        $r1 = $r5;

        specialinvoke $r5.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelperAlwaysBr: void <init>()>();

     label3:
        <org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelper: org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelper INSTANCE> = $r1;

        $r2 = <org.waveprotocol.wave.client.editor.EditorStaticDeps: org.waveprotocol.wave.common.logging.LoggerBundle logger>;

        <org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelper: org.waveprotocol.wave.common.logging.LoggerBundle logger> = $r2;

        return;
    }
}
