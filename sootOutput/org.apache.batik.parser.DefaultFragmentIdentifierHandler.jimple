public class org.apache.batik.parser.DefaultFragmentIdentifierHandler extends org.apache.batik.parser.DefaultPreserveAspectRatioHandler implements org.apache.batik.parser.FragmentIdentifierHandler
{
    public static final org.apache.batik.parser.FragmentIdentifierHandler INSTANCE;

    protected void <init>()
    {
        org.apache.batik.parser.DefaultFragmentIdentifierHandler r0;

        r0 := @this: org.apache.batik.parser.DefaultFragmentIdentifierHandler;

        specialinvoke r0.<org.apache.batik.parser.DefaultPreserveAspectRatioHandler: void <init>()>();

        return;
    }

    public void startFragmentIdentifier() throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.parser.DefaultFragmentIdentifierHandler r0;

        r0 := @this: org.apache.batik.parser.DefaultFragmentIdentifierHandler;

        return;
    }

    public void idReference(java.lang.String) throws org.apache.batik.parser.ParseException
    {
        java.lang.String r1;
        org.apache.batik.parser.DefaultFragmentIdentifierHandler r0;

        r0 := @this: org.apache.batik.parser.DefaultFragmentIdentifierHandler;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void viewBox(float, float, float, float) throws org.apache.batik.parser.ParseException
    {
        float f0, f1, f2, f3;
        org.apache.batik.parser.DefaultFragmentIdentifierHandler r0;

        r0 := @this: org.apache.batik.parser.DefaultFragmentIdentifierHandler;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        return;
    }

    public void startViewTarget() throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.parser.DefaultFragmentIdentifierHandler r0;

        r0 := @this: org.apache.batik.parser.DefaultFragmentIdentifierHandler;

        return;
    }

    public void viewTarget(java.lang.String) throws org.apache.batik.parser.ParseException
    {
        java.lang.String r1;
        org.apache.batik.parser.DefaultFragmentIdentifierHandler r0;

        r0 := @this: org.apache.batik.parser.DefaultFragmentIdentifierHandler;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void endViewTarget() throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.parser.DefaultFragmentIdentifierHandler r0;

        r0 := @this: org.apache.batik.parser.DefaultFragmentIdentifierHandler;

        return;
    }

    public void startTransformList() throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.parser.DefaultFragmentIdentifierHandler r0;

        r0 := @this: org.apache.batik.parser.DefaultFragmentIdentifierHandler;

        return;
    }

    public void matrix(float, float, float, float, float, float) throws org.apache.batik.parser.ParseException
    {
        float f0, f1, f2, f3, f4, f5;
        org.apache.batik.parser.DefaultFragmentIdentifierHandler r0;

        r0 := @this: org.apache.batik.parser.DefaultFragmentIdentifierHandler;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        f4 := @parameter4: float;

        f5 := @parameter5: float;

        return;
    }

    public void rotate(float) throws org.apache.batik.parser.ParseException
    {
        float f0;
        org.apache.batik.parser.DefaultFragmentIdentifierHandler r0;

        r0 := @this: org.apache.batik.parser.DefaultFragmentIdentifierHandler;

        f0 := @parameter0: float;

        return;
    }

    public void rotate(float, float, float) throws org.apache.batik.parser.ParseException
    {
        float f0, f1, f2;
        org.apache.batik.parser.DefaultFragmentIdentifierHandler r0;

        r0 := @this: org.apache.batik.parser.DefaultFragmentIdentifierHandler;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        return;
    }

    public void translate(float) throws org.apache.batik.parser.ParseException
    {
        float f0;
        org.apache.batik.parser.DefaultFragmentIdentifierHandler r0;

        r0 := @this: org.apache.batik.parser.DefaultFragmentIdentifierHandler;

        f0 := @parameter0: float;

        return;
    }

    public void translate(float, float) throws org.apache.batik.parser.ParseException
    {
        float f0, f1;
        org.apache.batik.parser.DefaultFragmentIdentifierHandler r0;

        r0 := @this: org.apache.batik.parser.DefaultFragmentIdentifierHandler;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        return;
    }

    public void scale(float) throws org.apache.batik.parser.ParseException
    {
        float f0;
        org.apache.batik.parser.DefaultFragmentIdentifierHandler r0;

        r0 := @this: org.apache.batik.parser.DefaultFragmentIdentifierHandler;

        f0 := @parameter0: float;

        return;
    }

    public void scale(float, float) throws org.apache.batik.parser.ParseException
    {
        float f0, f1;
        org.apache.batik.parser.DefaultFragmentIdentifierHandler r0;

        r0 := @this: org.apache.batik.parser.DefaultFragmentIdentifierHandler;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        return;
    }

    public void skewX(float) throws org.apache.batik.parser.ParseException
    {
        float f0;
        org.apache.batik.parser.DefaultFragmentIdentifierHandler r0;

        r0 := @this: org.apache.batik.parser.DefaultFragmentIdentifierHandler;

        f0 := @parameter0: float;

        return;
    }

    public void skewY(float) throws org.apache.batik.parser.ParseException
    {
        float f0;
        org.apache.batik.parser.DefaultFragmentIdentifierHandler r0;

        r0 := @this: org.apache.batik.parser.DefaultFragmentIdentifierHandler;

        f0 := @parameter0: float;

        return;
    }

    public void endTransformList() throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.parser.DefaultFragmentIdentifierHandler r0;

        r0 := @this: org.apache.batik.parser.DefaultFragmentIdentifierHandler;

        return;
    }

    public void zoomAndPan(boolean)
    {
        org.apache.batik.parser.DefaultFragmentIdentifierHandler r0;
        boolean z0;

        r0 := @this: org.apache.batik.parser.DefaultFragmentIdentifierHandler;

        z0 := @parameter0: boolean;

        return;
    }

    public void endFragmentIdentifier() throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.parser.DefaultFragmentIdentifierHandler r0;

        r0 := @this: org.apache.batik.parser.DefaultFragmentIdentifierHandler;

        return;
    }

    static void <clinit>()
    {
        org.apache.batik.parser.DefaultFragmentIdentifierHandler $r0;

        $r0 = new org.apache.batik.parser.DefaultFragmentIdentifierHandler;

        specialinvoke $r0.<org.apache.batik.parser.DefaultFragmentIdentifierHandler: void <init>()>();

        <org.apache.batik.parser.DefaultFragmentIdentifierHandler: org.apache.batik.parser.FragmentIdentifierHandler INSTANCE> = $r0;

        return;
    }
}
