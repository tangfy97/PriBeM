public final class org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl extends java.lang.Object implements org.waveprotocol.wave.federation.ProtocolHashedVersion, org.waveprotocol.wave.communication.gson.GsonSerializable, org.waveprotocol.wave.communication.proto.ProtoWrapper
{
    private org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion proto;
    private org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion$Builder protoBuilder;

    public void <init>()
    {
        org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion$Builder $r1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion proto> = null;

        $r1 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion$Builder newBuilder()>();

        r0.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion$Builder protoBuilder> = $r1;

        return;
    }

    public void <init>(org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion)
    {
        org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion r2;
        org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion$Builder $r1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl;

        r2 := @parameter0: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion proto> = null;

        $r1 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion$Builder newBuilder()>();

        r0.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion$Builder protoBuilder> = $r1;

        r0.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion proto> = r2;

        return;
    }

    public void <init>(org.waveprotocol.wave.federation.ProtocolHashedVersion)
    {
        org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl r0;
        org.waveprotocol.wave.federation.ProtocolHashedVersion r2;
        org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion$Builder $r1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl;

        r2 := @parameter0: org.waveprotocol.wave.federation.ProtocolHashedVersion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion proto> = null;

        $r1 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion$Builder newBuilder()>();

        r0.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion$Builder protoBuilder> = $r1;

        virtualinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: void copyFrom(org.waveprotocol.wave.federation.ProtocolHashedVersion)>(r2);

        return;
    }

    public org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion getPB()
    {
        org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion $r1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion proto>;

        return $r1;
    }

    public void setPB(org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion)
    {
        org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion r1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl;

        r1 := @parameter0: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion;

        r0.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion proto> = r1;

        r0.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion$Builder protoBuilder> = null;

        return;
    }

    public void copyFrom(org.waveprotocol.wave.federation.ProtocolHashedVersion)
    {
        org.waveprotocol.wave.communication.Blob $r2;
        org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl r0;
        org.waveprotocol.wave.federation.ProtocolHashedVersion r1;
        double $d0;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl;

        r1 := @parameter0: org.waveprotocol.wave.federation.ProtocolHashedVersion;

        $d0 = interfaceinvoke r1.<org.waveprotocol.wave.federation.ProtocolHashedVersion: double getVersion()>();

        virtualinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: void setVersion(double)>($d0);

        $r2 = interfaceinvoke r1.<org.waveprotocol.wave.federation.ProtocolHashedVersion: org.waveprotocol.wave.communication.Blob getHistoryHash()>();

        virtualinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: void setHistoryHash(org.waveprotocol.wave.communication.Blob)>($r2);

        return;
    }

    public double getVersion()
    {
        org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl r0;
        long $l0;
        org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion $r1;
        double $d0;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion proto>;

        $l0 = virtualinvoke $r1.<org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion: long getVersion()>();

        $d0 = (double) $l0;

        return $d0;
    }

    public void setVersion(double)
    {
        org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl r0;
        long $l0;
        org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion$Builder $r1;
        double d0;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl;

        d0 := @parameter0: double;

        specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: void switchToProtoBuilder()>();

        $r1 = r0.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion$Builder protoBuilder>;

        $l0 = staticinvoke <org.waveprotocol.wave.communication.proto.Int52: long int52to64(double)>(d0);

        virtualinvoke $r1.<org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion$Builder: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion$Builder setVersion(long)>($l0);

        return;
    }

    public org.waveprotocol.wave.communication.Blob getHistoryHash()
    {
        com.google.protobuf.ByteString $r3;
        byte[] $r4;
        org.waveprotocol.wave.communication.Blob $r1;
        org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl r0;
        java.lang.String $r5;
        org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion $r2;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: void switchToProto()>();

        $r1 = new org.waveprotocol.wave.communication.Blob;

        $r2 = r0.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion proto>;

        $r3 = virtualinvoke $r2.<org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion: com.google.protobuf.ByteString getHistoryHash()>();

        $r4 = virtualinvoke $r3.<com.google.protobuf.ByteString: byte[] toByteArray()>();

        $r5 = staticinvoke <org.waveprotocol.wave.communication.Codec: java.lang.String encode(byte[])>($r4);

        specialinvoke $r1.<org.waveprotocol.wave.communication.Blob: void <init>(java.lang.String)>($r5);

        return $r1;
    }

    public void setHistoryHash(org.waveprotocol.wave.communication.Blob)
    {
        com.google.protobuf.ByteString $r5;
        byte[] $r4;
        org.waveprotocol.wave.communication.Blob r1;
        org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl r0;
        java.lang.String $r3;
        org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion$Builder $r2;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl;

        r1 := @parameter0: org.waveprotocol.wave.communication.Blob;

        specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: void switchToProtoBuilder()>();

        $r2 = r0.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion$Builder protoBuilder>;

        $r3 = virtualinvoke r1.<org.waveprotocol.wave.communication.Blob: java.lang.String getData()>();

        $r4 = staticinvoke <org.waveprotocol.wave.communication.Codec: byte[] decode(java.lang.String)>($r3);

        $r5 = staticinvoke <com.google.protobuf.ByteString: com.google.protobuf.ByteString copyFrom(byte[])>($r4);

        virtualinvoke $r2.<org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion$Builder: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion$Builder setHistoryHash(com.google.protobuf.ByteString)>($r5);

        return;
    }

    private void switchToProto()
    {
        org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion $r1, $r3;
        org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion$Builder $r2;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl;

        $r1 = r0.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion proto>;

        if $r1 != null goto label1;

        $r2 = r0.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion$Builder protoBuilder>;

        $r3 = virtualinvoke $r2.<org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion$Builder: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion build()>();

        r0.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion proto> = $r3;

        r0.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion$Builder protoBuilder> = null;

     label1:
        return;
    }

    private void switchToProtoBuilder()
    {
        org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion $r2, $r3;
        org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion$Builder $r1, $r4;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl;

        $r1 = r0.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion$Builder protoBuilder>;

        if $r1 != null goto label3;

        $r2 = r0.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion proto>;

        if $r2 != null goto label1;

        $r4 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion$Builder newBuilder()>();

        goto label2;

     label1:
        $r3 = r0.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion proto>;

        $r4 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion$Builder newBuilder(org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion)>($r3);

     label2:
        r0.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion$Builder protoBuilder> = $r4;

        r0.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion proto> = null;

     label3:
        return;
    }

    private void invalidateAll()
    {
        org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion$Builder $r1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl;

        r0.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion proto> = null;

        $r1 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion$Builder newBuilder()>();

        r0.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion$Builder protoBuilder> = $r1;

        return;
    }

    public com.google.gson.JsonElement toGson(org.waveprotocol.wave.communication.json.RawStringData, com.google.gson.Gson)
    {
        com.google.gson.JsonObject $r0;
        java.lang.Double $r3;
        org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl r2;
        org.waveprotocol.wave.communication.json.RawStringData r7;
        com.google.gson.Gson r8;
        org.waveprotocol.wave.communication.Blob $r5;
        com.google.gson.JsonPrimitive $r1, $r4;
        java.lang.String $r6;
        double $d0;

        r2 := @this: org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl;

        r7 := @parameter0: org.waveprotocol.wave.communication.json.RawStringData;

        r8 := @parameter1: com.google.gson.Gson;

        $r0 = new com.google.gson.JsonObject;

        specialinvoke $r0.<com.google.gson.JsonObject: void <init>()>();

        $r1 = new com.google.gson.JsonPrimitive;

        $d0 = virtualinvoke r2.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: double getVersion()>();

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        specialinvoke $r1.<com.google.gson.JsonPrimitive: void <init>(java.lang.Number)>($r3);

        virtualinvoke $r0.<com.google.gson.JsonObject: void add(java.lang.String,com.google.gson.JsonElement)>("1", $r1);

        $r4 = new com.google.gson.JsonPrimitive;

        $r5 = virtualinvoke r2.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: org.waveprotocol.wave.communication.Blob getHistoryHash()>();

        $r6 = virtualinvoke $r5.<org.waveprotocol.wave.communication.Blob: java.lang.String getData()>();

        specialinvoke $r4.<com.google.gson.JsonPrimitive: void <init>(java.lang.String)>($r6);

        virtualinvoke $r0.<com.google.gson.JsonObject: void add(java.lang.String,com.google.gson.JsonElement)>("2", $r4);

        return $r0;
    }

    public void fromGson(com.google.gson.JsonElement, com.google.gson.Gson, org.waveprotocol.wave.communication.json.RawStringData) throws org.waveprotocol.wave.communication.gson.GsonException
    {
        com.google.gson.JsonObject $r1;
        org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl r2;
        org.waveprotocol.wave.communication.json.RawStringData r8;
        com.google.gson.JsonElement r0, $r3, $r6;
        com.google.gson.Gson r7;
        org.waveprotocol.wave.communication.Blob $r4;
        java.lang.String $r5;
        boolean $z0, $z1;
        double $d0;

        r2 := @this: org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl;

        r0 := @parameter0: com.google.gson.JsonElement;

        r7 := @parameter1: com.google.gson.Gson;

        r8 := @parameter2: org.waveprotocol.wave.communication.json.RawStringData;

        $r1 = virtualinvoke r0.<com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()>();

        specialinvoke r2.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: void invalidateAll()>();

        $z0 = virtualinvoke $r1.<com.google.gson.JsonObject: boolean has(java.lang.String)>("1");

        if $z0 == 0 goto label1;

        $r6 = virtualinvoke $r1.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("1");

        $d0 = virtualinvoke $r6.<com.google.gson.JsonElement: double getAsDouble()>();

        virtualinvoke r2.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: void setVersion(double)>($d0);

     label1:
        $z1 = virtualinvoke $r1.<com.google.gson.JsonObject: boolean has(java.lang.String)>("2");

        if $z1 == 0 goto label2;

        $r3 = virtualinvoke $r1.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("2");

        $r4 = new org.waveprotocol.wave.communication.Blob;

        $r5 = virtualinvoke $r3.<com.google.gson.JsonElement: java.lang.String getAsString()>();

        specialinvoke $r4.<org.waveprotocol.wave.communication.Blob: void <init>(java.lang.String)>($r5);

        virtualinvoke r2.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: void setHistoryHash(org.waveprotocol.wave.communication.Blob)>($r4);

     label2:
        return;
    }

    public boolean equals(java.lang.Object)
    {
        org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl r0, $r3;
        java.lang.Object r1;
        org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion $r2, $r4;
        boolean $z0, $z1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl;

        if $z0 == 0 goto label2;

        $r2 = virtualinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion getPB()>();

        $r3 = (org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl) r1;

        $r4 = virtualinvoke $r3.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion getPB()>();

        $z1 = virtualinvoke $r2.<org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion: boolean equals(java.lang.Object)>($r4);

        return $z1;

     label2:
        return 0;
    }

    public boolean isEqualTo(java.lang.Object)
    {
        org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl r0;
        java.lang.Object r1;
        org.waveprotocol.wave.federation.ProtocolHashedVersion $r2;
        boolean $z0, $z1, $z2;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl;

        r1 := @parameter0: java.lang.Object;

        $z0 = virtualinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = r1 instanceof org.waveprotocol.wave.federation.ProtocolHashedVersion;

        if $z1 == 0 goto label2;

        $r2 = (org.waveprotocol.wave.federation.ProtocolHashedVersion) r1;

        $z2 = staticinvoke <org.waveprotocol.wave.federation.ProtocolHashedVersionUtil: boolean isEqual(org.waveprotocol.wave.federation.ProtocolHashedVersion,org.waveprotocol.wave.federation.ProtocolHashedVersion)>(r0, $r2);

        return $z2;

     label2:
        return 0;
    }

    public int hashCode()
    {
        int $i0;
        org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion $r1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion getPB()>();

        $i0 = virtualinvoke $r1.<org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion: int hashCode()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl r0;
        java.lang.String $r2;
        org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion $r1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion getPB()>();

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion: java.lang.String toString()>();

        return $r2;
    }

    public volatile com.google.protobuf.MessageLite getPB()
    {
        org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion $r1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion getPB()>();

        return $r1;
    }

    public volatile void setPB(com.google.protobuf.MessageLite)
    {
        org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl r0;
        com.google.protobuf.MessageLite r1;
        org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion $r2;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl;

        r1 := @parameter0: com.google.protobuf.MessageLite;

        $r2 = (org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion) r1;

        virtualinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: void setPB(org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion)>($r2);

        return;
    }
}
