public class com.hp.hpl.jena.sparql.algebra.optimize.OpVisitorExprPrepare extends com.hp.hpl.jena.sparql.algebra.OpVisitorBase
{
    private final com.hp.hpl.jena.sparql.util.Context context;

    public void <init>(com.hp.hpl.jena.sparql.util.Context)
    {
        com.hp.hpl.jena.sparql.algebra.optimize.OpVisitorExprPrepare r0;
        com.hp.hpl.jena.sparql.util.Context r1;

        r0 := @this: com.hp.hpl.jena.sparql.algebra.optimize.OpVisitorExprPrepare;

        r1 := @parameter0: com.hp.hpl.jena.sparql.util.Context;

        specialinvoke r0.<com.hp.hpl.jena.sparql.algebra.OpVisitorBase: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.algebra.optimize.OpVisitorExprPrepare: com.hp.hpl.jena.sparql.util.Context context> = r1;

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpFilter)
    {
        com.hp.hpl.jena.sparql.algebra.op.OpFilter r0;
        com.hp.hpl.jena.sparql.expr.ExprList $r1;
        com.hp.hpl.jena.sparql.algebra.optimize.OpVisitorExprPrepare r2;
        com.hp.hpl.jena.sparql.util.Context $r3;

        r2 := @this: com.hp.hpl.jena.sparql.algebra.optimize.OpVisitorExprPrepare;

        r0 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpFilter;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.algebra.op.OpFilter: com.hp.hpl.jena.sparql.expr.ExprList getExprs()>();

        $r3 = r2.<com.hp.hpl.jena.sparql.algebra.optimize.OpVisitorExprPrepare: com.hp.hpl.jena.sparql.util.Context context>;

        virtualinvoke $r1.<com.hp.hpl.jena.sparql.expr.ExprList: void prepareExprs(com.hp.hpl.jena.sparql.util.Context)>($r3);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpLeftJoin)
    {
        com.hp.hpl.jena.sparql.expr.ExprList $r1, $r2;
        com.hp.hpl.jena.sparql.algebra.optimize.OpVisitorExprPrepare r3;
        com.hp.hpl.jena.sparql.algebra.op.OpLeftJoin r0;
        com.hp.hpl.jena.sparql.util.Context $r4;

        r3 := @this: com.hp.hpl.jena.sparql.algebra.optimize.OpVisitorExprPrepare;

        r0 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpLeftJoin;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.algebra.op.OpLeftJoin: com.hp.hpl.jena.sparql.expr.ExprList getExprs()>();

        if $r1 == null goto label1;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.algebra.op.OpLeftJoin: com.hp.hpl.jena.sparql.expr.ExprList getExprs()>();

        $r4 = r3.<com.hp.hpl.jena.sparql.algebra.optimize.OpVisitorExprPrepare: com.hp.hpl.jena.sparql.util.Context context>;

        virtualinvoke $r2.<com.hp.hpl.jena.sparql.expr.ExprList: void prepareExprs(com.hp.hpl.jena.sparql.util.Context)>($r4);

     label1:
        return;
    }
}
