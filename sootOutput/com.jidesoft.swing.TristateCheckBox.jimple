public class com.jidesoft.swing.TristateCheckBox extends javax.swing.JCheckBox implements java.awt.event.ActionListener
{
    public static final int STATE_UNSELECTED;
    public static final int STATE_SELECTED;
    public static final int STATE_MIXED;

    public void <init>(java.lang.String, javax.swing.Icon)
    {
        javax.swing.Icon r2;
        java.lang.String r1;
        com.jidesoft.swing.TristateCheckBox r0;

        r0 := @this: com.jidesoft.swing.TristateCheckBox;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: javax.swing.Icon;

        specialinvoke r0.<javax.swing.JCheckBox: void <init>(java.lang.String,javax.swing.Icon)>(r1, r2);

        return;
    }

    public void <init>(java.lang.String)
    {
        java.lang.String r1;
        com.jidesoft.swing.TristateCheckBox r0;

        r0 := @this: com.jidesoft.swing.TristateCheckBox;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.jidesoft.swing.TristateCheckBox: void <init>(java.lang.String,javax.swing.Icon)>(r1, null);

        return;
    }

    public void <init>()
    {
        com.jidesoft.swing.TristateCheckBox r0;

        r0 := @this: com.jidesoft.swing.TristateCheckBox;

        specialinvoke r0.<com.jidesoft.swing.TristateCheckBox: void <init>(java.lang.String)>(null);

        return;
    }

    protected void init(java.lang.String, javax.swing.Icon)
    {
        com.jidesoft.swing.TristateCheckBox r0;
        javax.swing.Icon r4;
        java.lang.String r3;
        javax.swing.ButtonModel $r1, $r2;

        r0 := @this: com.jidesoft.swing.TristateCheckBox;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: javax.swing.Icon;

        $r1 = virtualinvoke r0.<com.jidesoft.swing.TristateCheckBox: javax.swing.ButtonModel createButtonModel()>();

        r0.<com.jidesoft.swing.TristateCheckBox: javax.swing.ButtonModel model> = $r1;

        $r2 = r0.<com.jidesoft.swing.TristateCheckBox: javax.swing.ButtonModel model>;

        virtualinvoke r0.<com.jidesoft.swing.TristateCheckBox: void setModel(javax.swing.ButtonModel)>($r2);

        virtualinvoke r0.<com.jidesoft.swing.TristateCheckBox: void addActionListener(java.awt.event.ActionListener)>(r0);

        specialinvoke r0.<javax.swing.JCheckBox: void init(java.lang.String,javax.swing.Icon)>(r3, r4);

        return;
    }

    protected javax.swing.ButtonModel createButtonModel()
    {
        com.jidesoft.swing.TristateButtonModel $r0;
        com.jidesoft.swing.TristateCheckBox r1;

        r1 := @this: com.jidesoft.swing.TristateCheckBox;

        $r0 = new com.jidesoft.swing.TristateButtonModel;

        specialinvoke $r0.<com.jidesoft.swing.TristateButtonModel: void <init>()>();

        return $r0;
    }

    public void updateUI()
    {
        com.jidesoft.swing.TristateCheckBox r0;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.TristateCheckBox;

        specialinvoke r0.<javax.swing.JCheckBox: void updateUI()>();

        $z0 = virtualinvoke r0.<com.jidesoft.swing.TristateCheckBox: boolean isMixed()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.jidesoft.swing.TristateCheckBox: void adjustMixedIcon()>();

        goto label2;

     label1:
        virtualinvoke r0.<com.jidesoft.swing.TristateCheckBox: void restoreMixedIcon()>();

     label2:
        return;
    }

    protected void adjustMixedIcon()
    {
        javax.swing.Icon $r1;
        com.jidesoft.swing.TristateCheckBox r0;

        r0 := @this: com.jidesoft.swing.TristateCheckBox;

        $r1 = staticinvoke <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>("TristateCheckBox.icon");

        virtualinvoke r0.<com.jidesoft.swing.TristateCheckBox: void setIcon(javax.swing.Icon)>($r1);

        return;
    }

    protected void restoreMixedIcon()
    {
        com.jidesoft.swing.TristateCheckBox r0;

        r0 := @this: com.jidesoft.swing.TristateCheckBox;

        virtualinvoke r0.<com.jidesoft.swing.TristateCheckBox: void setIcon(javax.swing.Icon)>(null);

        return;
    }

    public boolean isMixed()
    {
        int $i0;
        com.jidesoft.swing.TristateCheckBox r0;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.TristateCheckBox;

        $i0 = virtualinvoke r0.<com.jidesoft.swing.TristateCheckBox: int getState()>();

        if $i0 != 2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void setMixed(boolean)
    {
        boolean z0;
        com.jidesoft.swing.TristateCheckBox r0;

        r0 := @this: com.jidesoft.swing.TristateCheckBox;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        virtualinvoke r0.<com.jidesoft.swing.TristateCheckBox: void setState(int)>(2);

        goto label2;

     label1:
        virtualinvoke r0.<com.jidesoft.swing.TristateCheckBox: void setState(int)>(0);

     label2:
        return;
    }

    public int getState()
    {
        java.lang.IllegalStateException $r2;
        com.jidesoft.swing.TristateButtonModel $r4;
        com.jidesoft.swing.TristateCheckBox r0;
        int $i0;
        javax.swing.ButtonModel $r1, $r3;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.TristateCheckBox;

        $r1 = r0.<com.jidesoft.swing.TristateCheckBox: javax.swing.ButtonModel model>;

        $z0 = $r1 instanceof com.jidesoft.swing.TristateButtonModel;

        if $z0 == 0 goto label1;

        $r3 = r0.<com.jidesoft.swing.TristateCheckBox: javax.swing.ButtonModel model>;

        $r4 = (com.jidesoft.swing.TristateButtonModel) $r3;

        $i0 = virtualinvoke $r4.<com.jidesoft.swing.TristateButtonModel: int getState()>();

        return $i0;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("TristateButtonModel is required for TristateCheckBox");

        throw $r2;
    }

    public void setSelected(boolean)
    {
        boolean z0;
        com.jidesoft.swing.TristateCheckBox r0;

        r0 := @this: com.jidesoft.swing.TristateCheckBox;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        virtualinvoke r0.<com.jidesoft.swing.TristateCheckBox: void setState(int)>(1);

        goto label2;

     label1:
        virtualinvoke r0.<com.jidesoft.swing.TristateCheckBox: void setState(int)>(0);

     label2:
        return;
    }

    public void setState(int)
    {
        java.lang.IllegalStateException $r2;
        com.jidesoft.swing.TristateButtonModel $r4, $r6;
        com.jidesoft.swing.TristateCheckBox r0;
        int $i0, i1;
        javax.swing.ButtonModel $r1, $r3, $r5;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.TristateCheckBox;

        i1 := @parameter0: int;

        $r1 = r0.<com.jidesoft.swing.TristateCheckBox: javax.swing.ButtonModel model>;

        $z0 = $r1 instanceof com.jidesoft.swing.TristateButtonModel;

        if $z0 == 0 goto label2;

        $r3 = r0.<com.jidesoft.swing.TristateCheckBox: javax.swing.ButtonModel model>;

        $r4 = (com.jidesoft.swing.TristateButtonModel) $r3;

        $i0 = virtualinvoke $r4.<com.jidesoft.swing.TristateButtonModel: int getState()>();

        if $i0 == i1 goto label1;

        $r5 = r0.<com.jidesoft.swing.TristateCheckBox: javax.swing.ButtonModel model>;

        $r6 = (com.jidesoft.swing.TristateButtonModel) $r5;

        virtualinvoke $r6.<com.jidesoft.swing.TristateButtonModel: void setState(int)>(i1);

     label1:
        virtualinvoke r0.<com.jidesoft.swing.TristateCheckBox: void stateUpdated(int)>(i1);

        goto label3;

     label2:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("TristateButtonModel is required for TristateCheckBox");

        throw $r2;

     label3:
        return;
    }

    public void actionPerformed(java.awt.event.ActionEvent)
    {
        int $i0;
        java.awt.event.ActionEvent r1;
        com.jidesoft.swing.TristateCheckBox r0;

        r0 := @this: com.jidesoft.swing.TristateCheckBox;

        r1 := @parameter0: java.awt.event.ActionEvent;

        $i0 = virtualinvoke r0.<com.jidesoft.swing.TristateCheckBox: int getState()>();

        virtualinvoke r0.<com.jidesoft.swing.TristateCheckBox: void stateUpdated(int)>($i0);

        return;
    }

    protected void stateUpdated(int)
    {
        java.lang.Object[] $r3, $r4, $r5, $r6, $r11, $r12, $r13, $r14;
        int i0;
        java.lang.String $r2, $r10;
        com.jidesoft.swing.TristateCheckBox r0;
        java.lang.Object $r1, $r7, $r8, $r9, $r15, $r16;

        r0 := @this: com.jidesoft.swing.TristateCheckBox;

        i0 := @parameter0: int;

        if i0 != 2 goto label3;

        virtualinvoke r0.<com.jidesoft.swing.TristateCheckBox: void adjustMixedIcon()>();

        $r9 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("TristateCheckBox.setMixed.clientProperty");

        if $r9 == null goto label1;

        $r11 = (java.lang.Object[]) $r9;

        $r12 = (java.lang.Object[]) $r11;

        $r16 = $r12[0];

        $r13 = (java.lang.Object[]) $r9;

        $r14 = (java.lang.Object[]) $r13;

        $r15 = $r14[1];

        virtualinvoke r0.<com.jidesoft.swing.TristateCheckBox: void putClientProperty(java.lang.Object,java.lang.Object)>($r16, $r15);

     label1:
        $r10 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.String getString(java.lang.Object)>("TristateCheckBox.setMixed.componentName");

        if $r10 == null goto label2;

        virtualinvoke r0.<com.jidesoft.swing.TristateCheckBox: void setName(java.lang.String)>($r10);

     label2:
        goto label5;

     label3:
        virtualinvoke r0.<com.jidesoft.swing.TristateCheckBox: void restoreMixedIcon()>();

        $r1 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("TristateCheckBox.clearMixed.clientProperty");

        if $r1 == null goto label4;

        $r3 = (java.lang.Object[]) $r1;

        $r4 = (java.lang.Object[]) $r3;

        $r8 = $r4[0];

        $r5 = (java.lang.Object[]) $r1;

        $r6 = (java.lang.Object[]) $r5;

        $r7 = $r6[1];

        virtualinvoke r0.<com.jidesoft.swing.TristateCheckBox: void putClientProperty(java.lang.Object,java.lang.Object)>($r8, $r7);

     label4:
        $r2 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.String getString(java.lang.Object)>("TristateCheckBox.clearMixed.componentName");

        if $r2 == null goto label5;

        virtualinvoke r0.<com.jidesoft.swing.TristateCheckBox: void setName(java.lang.String)>($r2);

     label5:
        return;
    }

    public static void <clinit>()
    {
        <com.jidesoft.swing.TristateCheckBox: int STATE_MIXED> = 2;

        <com.jidesoft.swing.TristateCheckBox: int STATE_SELECTED> = 1;

        <com.jidesoft.swing.TristateCheckBox: int STATE_UNSELECTED> = 0;

        return;
    }
}
