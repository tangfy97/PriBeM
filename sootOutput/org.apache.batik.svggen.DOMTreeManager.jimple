public class org.apache.batik.svggen.DOMTreeManager extends java.lang.Object implements org.apache.batik.svggen.SVGSyntax, org.apache.batik.svggen.ErrorConstants
{
    int maxGCOverrides;
    protected final java.util.List groupManagers;
    protected java.util.List genericDefSet;
    org.apache.batik.svggen.SVGGraphicContext defaultGC;
    protected org.w3c.dom.Element topLevelGroup;
    org.apache.batik.svggen.SVGGraphicContextConverter gcConverter;
    protected org.apache.batik.svggen.SVGGeneratorContext generatorContext;
    protected org.apache.batik.svggen.SVGBufferedImageOp filterConverter;
    protected java.util.List otherDefs;

    public void <init>(org.apache.batik.ext.awt.g2d.GraphicContext, org.apache.batik.svggen.SVGGeneratorContext, int)
    {
        org.apache.batik.ext.awt.g2d.GraphicContext r4;
        org.apache.batik.svggen.SVGGraphics2DRuntimeException $r8, $r9, $r10;
        java.util.ArrayList $r1;
        org.apache.batik.svggen.SVGGraphicContextConverter $r6;
        java.util.List $r2;
        org.apache.batik.svggen.SVGGeneratorContext r5;
        int i0;
        org.apache.batik.svggen.DOMTreeManager r0;
        java.util.LinkedList $r3;
        org.apache.batik.svggen.SVGGraphicContext $r7;

        r0 := @this: org.apache.batik.svggen.DOMTreeManager;

        r4 := @parameter0: org.apache.batik.ext.awt.g2d.GraphicContext;

        r5 := @parameter1: org.apache.batik.svggen.SVGGeneratorContext;

        i0 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r2 = staticinvoke <java.util.Collections: java.util.List synchronizedList(java.util.List)>($r1);

        r0.<org.apache.batik.svggen.DOMTreeManager: java.util.List groupManagers> = $r2;

        $r3 = new java.util.LinkedList;

        specialinvoke $r3.<java.util.LinkedList: void <init>()>();

        r0.<org.apache.batik.svggen.DOMTreeManager: java.util.List genericDefSet> = $r3;

        if r4 != null goto label1;

        $r10 = new org.apache.batik.svggen.SVGGraphics2DRuntimeException;

        specialinvoke $r10.<org.apache.batik.svggen.SVGGraphics2DRuntimeException: void <init>(java.lang.String)>("gc should not be null");

        throw $r10;

     label1:
        if i0 > 0 goto label2;

        $r9 = new org.apache.batik.svggen.SVGGraphics2DRuntimeException;

        specialinvoke $r9.<org.apache.batik.svggen.SVGGraphics2DRuntimeException: void <init>(java.lang.String)>("maxGcOverrides should be greater than zero");

        throw $r9;

     label2:
        if r5 != null goto label3;

        $r8 = new org.apache.batik.svggen.SVGGraphics2DRuntimeException;

        specialinvoke $r8.<org.apache.batik.svggen.SVGGraphics2DRuntimeException: void <init>(java.lang.String)>("generatorContext should not be null");

        throw $r8;

     label3:
        r0.<org.apache.batik.svggen.DOMTreeManager: org.apache.batik.svggen.SVGGeneratorContext generatorContext> = r5;

        r0.<org.apache.batik.svggen.DOMTreeManager: int maxGCOverrides> = i0;

        virtualinvoke r0.<org.apache.batik.svggen.DOMTreeManager: void recycleTopLevelGroup()>();

        $r6 = r0.<org.apache.batik.svggen.DOMTreeManager: org.apache.batik.svggen.SVGGraphicContextConverter gcConverter>;

        $r7 = virtualinvoke $r6.<org.apache.batik.svggen.SVGGraphicContextConverter: org.apache.batik.svggen.SVGGraphicContext toSVG(org.apache.batik.ext.awt.g2d.GraphicContext)>(r4);

        r0.<org.apache.batik.svggen.DOMTreeManager: org.apache.batik.svggen.SVGGraphicContext defaultGC> = $r7;

        return;
    }

    public void addGroupManager(org.apache.batik.svggen.DOMGroupManager)
    {
        org.apache.batik.svggen.DOMGroupManager r0;
        java.util.List $r2;
        org.apache.batik.svggen.DOMTreeManager r1;

        r1 := @this: org.apache.batik.svggen.DOMTreeManager;

        r0 := @parameter0: org.apache.batik.svggen.DOMGroupManager;

        if r0 == null goto label1;

        $r2 = r1.<org.apache.batik.svggen.DOMTreeManager: java.util.List groupManagers>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r0);

     label1:
        return;
    }

    public void removeGroupManager(org.apache.batik.svggen.DOMGroupManager)
    {
        org.apache.batik.svggen.DOMGroupManager r0;
        java.util.List $r2;
        org.apache.batik.svggen.DOMTreeManager r1;

        r1 := @this: org.apache.batik.svggen.DOMTreeManager;

        r0 := @parameter0: org.apache.batik.svggen.DOMGroupManager;

        if r0 == null goto label1;

        $r2 = r1.<org.apache.batik.svggen.DOMTreeManager: java.util.List groupManagers>;

        interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>(r0);

     label1:
        return;
    }

    public void appendGroup(org.w3c.dom.Element, org.apache.batik.svggen.DOMGroupManager)
    {
        java.lang.Throwable $r9;
        java.util.List r3, $r4, $r5;
        org.apache.batik.svggen.DOMGroupManager r7, r8;
        org.w3c.dom.Element r1, $r2;
        int $i0, i1;
        java.lang.Object $r6;
        org.apache.batik.svggen.DOMTreeManager r0;

        r0 := @this: org.apache.batik.svggen.DOMTreeManager;

        r1 := @parameter0: org.w3c.dom.Element;

        r8 := @parameter1: org.apache.batik.svggen.DOMGroupManager;

        $r2 = r0.<org.apache.batik.svggen.DOMTreeManager: org.w3c.dom.Element topLevelGroup>;

        interfaceinvoke $r2.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r1);

        r3 = r0.<org.apache.batik.svggen.DOMTreeManager: java.util.List groupManagers>;

        entermonitor r3;

     label1:
        $r4 = r0.<org.apache.batik.svggen.DOMTreeManager: java.util.List groupManagers>;

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        i1 = 0;

        goto label4;

     label2:
        $r5 = r0.<org.apache.batik.svggen.DOMTreeManager: java.util.List groupManagers>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i1);

        r7 = (org.apache.batik.svggen.DOMGroupManager) $r6;

        if r7 == r8 goto label3;

        virtualinvoke r7.<org.apache.batik.svggen.DOMGroupManager: void recycleCurrentGroup()>();

     label3:
        i1 = i1 + 1;

     label4:
        if i1 < $i0 goto label2;

        exitmonitor r3;

        goto label6;

     label5:
        $r9 := @caughtexception;

        exitmonitor r3;

        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label5 with label5;
    }

    protected void recycleTopLevelGroup()
    {
        org.apache.batik.svggen.DOMTreeManager r0;

        r0 := @this: org.apache.batik.svggen.DOMTreeManager;

        virtualinvoke r0.<org.apache.batik.svggen.DOMTreeManager: void recycleTopLevelGroup(boolean)>(1);

        return;
    }

    protected void recycleTopLevelGroup(boolean)
    {
        java.lang.Throwable $r13;
        org.apache.batik.svggen.SVGBufferedImageOp $r9;
        org.apache.batik.svggen.DOMGroupManager r5;
        org.w3c.dom.Document $r7;
        int $i0, i1;
        boolean z0;
        org.apache.batik.svggen.SVGGraphicContextConverter $r11;
        java.util.List r1, $r2, $r3;
        org.w3c.dom.Element $r8;
        org.apache.batik.svggen.SVGGeneratorContext $r6, $r10, $r12;
        java.lang.Object $r4;
        org.apache.batik.svggen.DOMTreeManager r0;

        r0 := @this: org.apache.batik.svggen.DOMTreeManager;

        z0 := @parameter0: boolean;

        r1 = r0.<org.apache.batik.svggen.DOMTreeManager: java.util.List groupManagers>;

        entermonitor r1;

     label1:
        $r2 = r0.<org.apache.batik.svggen.DOMTreeManager: java.util.List groupManagers>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        i1 = 0;

        goto label3;

     label2:
        $r3 = r0.<org.apache.batik.svggen.DOMTreeManager: java.util.List groupManagers>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i1);

        r5 = (org.apache.batik.svggen.DOMGroupManager) $r4;

        virtualinvoke r5.<org.apache.batik.svggen.DOMGroupManager: void recycleCurrentGroup()>();

        i1 = i1 + 1;

     label3:
        if i1 < $i0 goto label2;

        exitmonitor r1;

        goto label5;

     label4:
        $r13 := @caughtexception;

        exitmonitor r1;

        throw $r13;

     label5:
        $r6 = r0.<org.apache.batik.svggen.DOMTreeManager: org.apache.batik.svggen.SVGGeneratorContext generatorContext>;

        $r7 = $r6.<org.apache.batik.svggen.SVGGeneratorContext: org.w3c.dom.Document domFactory>;

        $r8 = interfaceinvoke $r7.<org.w3c.dom.Document: org.w3c.dom.Element createElementNS(java.lang.String,java.lang.String)>("http://www.w3.org/2000/svg", "g");

        r0.<org.apache.batik.svggen.DOMTreeManager: org.w3c.dom.Element topLevelGroup> = $r8;

        if z0 == 0 goto label6;

        $r9 = new org.apache.batik.svggen.SVGBufferedImageOp;

        $r10 = r0.<org.apache.batik.svggen.DOMTreeManager: org.apache.batik.svggen.SVGGeneratorContext generatorContext>;

        specialinvoke $r9.<org.apache.batik.svggen.SVGBufferedImageOp: void <init>(org.apache.batik.svggen.SVGGeneratorContext)>($r10);

        r0.<org.apache.batik.svggen.DOMTreeManager: org.apache.batik.svggen.SVGBufferedImageOp filterConverter> = $r9;

        $r11 = new org.apache.batik.svggen.SVGGraphicContextConverter;

        $r12 = r0.<org.apache.batik.svggen.DOMTreeManager: org.apache.batik.svggen.SVGGeneratorContext generatorContext>;

        specialinvoke $r11.<org.apache.batik.svggen.SVGGraphicContextConverter: void <init>(org.apache.batik.svggen.SVGGeneratorContext)>($r12);

        r0.<org.apache.batik.svggen.DOMTreeManager: org.apache.batik.svggen.SVGGraphicContextConverter gcConverter> = $r11;

     label6:
        return;

        catch java.lang.Throwable from label1 to label4 with label4;
    }

    public void setTopLevelGroup(org.w3c.dom.Element)
    {
        org.w3c.dom.Element r0;
        java.lang.String $r1, $r2;
        org.apache.batik.svggen.DOMTreeManager r3;
        org.apache.batik.svggen.SVGGraphics2DRuntimeException $r4, $r5;
        boolean $z0;

        r3 := @this: org.apache.batik.svggen.DOMTreeManager;

        r0 := @parameter0: org.w3c.dom.Element;

        if r0 != null goto label1;

        $r5 = new org.apache.batik.svggen.SVGGraphics2DRuntimeException;

        specialinvoke $r5.<org.apache.batik.svggen.SVGGraphics2DRuntimeException: void <init>(java.lang.String)>("topLevelGroup should not be null");

        throw $r5;

     label1:
        $r1 = "g";

        $r2 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getTagName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r2);

        if $z0 != 0 goto label2;

        $r4 = new org.apache.batik.svggen.SVGGraphics2DRuntimeException;

        specialinvoke $r4.<org.apache.batik.svggen.SVGGraphics2DRuntimeException: void <init>(java.lang.String)>("topLevelGroup should be a group <g>");

        throw $r4;

     label2:
        virtualinvoke r3.<org.apache.batik.svggen.DOMTreeManager: void recycleTopLevelGroup(boolean)>(0);

        r3.<org.apache.batik.svggen.DOMTreeManager: org.w3c.dom.Element topLevelGroup> = r0;

        return;
    }

    public org.w3c.dom.Element getRoot()
    {
        org.apache.batik.svggen.DOMTreeManager r0;
        org.w3c.dom.Element $r1;

        r0 := @this: org.apache.batik.svggen.DOMTreeManager;

        $r1 = virtualinvoke r0.<org.apache.batik.svggen.DOMTreeManager: org.w3c.dom.Element getRoot(org.w3c.dom.Element)>(null);

        return $r1;
    }

    public org.w3c.dom.Element getRoot(org.w3c.dom.Element)
    {
        org.apache.batik.svggen.SVGComposite $r3;
        org.w3c.dom.Document $r12, $r15;
        java.lang.String $r6, $r11;
        boolean $z0;
        org.apache.batik.svggen.SVGAlphaComposite $r4;
        org.w3c.dom.Comment $r13;
        org.apache.batik.svggen.SVGGraphicContextConverter $r2;
        org.w3c.dom.Element r0, $r7, $r8, r16;
        org.apache.batik.svggen.SVGGeneratorContext $r5, $r9, $r10, $r14;
        org.apache.batik.svggen.DOMTreeManager r1;

        r1 := @this: org.apache.batik.svggen.DOMTreeManager;

        r0 := @parameter0: org.w3c.dom.Element;

        r16 = r0;

        if r0 != null goto label1;

        $r14 = r1.<org.apache.batik.svggen.DOMTreeManager: org.apache.batik.svggen.SVGGeneratorContext generatorContext>;

        $r15 = $r14.<org.apache.batik.svggen.SVGGeneratorContext: org.w3c.dom.Document domFactory>;

        r16 = interfaceinvoke $r15.<org.w3c.dom.Document: org.w3c.dom.Element createElementNS(java.lang.String,java.lang.String)>("http://www.w3.org/2000/svg", "svg");

     label1:
        $r2 = r1.<org.apache.batik.svggen.DOMTreeManager: org.apache.batik.svggen.SVGGraphicContextConverter gcConverter>;

        $r3 = virtualinvoke $r2.<org.apache.batik.svggen.SVGGraphicContextConverter: org.apache.batik.svggen.SVGComposite getCompositeConverter()>();

        $r4 = virtualinvoke $r3.<org.apache.batik.svggen.SVGComposite: org.apache.batik.svggen.SVGAlphaComposite getAlphaCompositeConverter()>();

        $z0 = virtualinvoke $r4.<org.apache.batik.svggen.SVGAlphaComposite: boolean requiresBackgroundAccess()>();

        if $z0 == 0 goto label2;

        interfaceinvoke r16.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(null, "enable-background", "new");

     label2:
        $r5 = r1.<org.apache.batik.svggen.DOMTreeManager: org.apache.batik.svggen.SVGGeneratorContext generatorContext>;

        $r6 = $r5.<org.apache.batik.svggen.SVGGeneratorContext: java.lang.String generatorComment>;

        if $r6 == null goto label3;

        $r9 = r1.<org.apache.batik.svggen.DOMTreeManager: org.apache.batik.svggen.SVGGeneratorContext generatorContext>;

        $r12 = $r9.<org.apache.batik.svggen.SVGGeneratorContext: org.w3c.dom.Document domFactory>;

        $r10 = r1.<org.apache.batik.svggen.DOMTreeManager: org.apache.batik.svggen.SVGGeneratorContext generatorContext>;

        $r11 = $r10.<org.apache.batik.svggen.SVGGeneratorContext: java.lang.String generatorComment>;

        $r13 = interfaceinvoke $r12.<org.w3c.dom.Document: org.w3c.dom.Comment createComment(java.lang.String)>($r11);

        interfaceinvoke r16.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r13);

     label3:
        virtualinvoke r1.<org.apache.batik.svggen.DOMTreeManager: void applyDefaultRenderingStyle(org.w3c.dom.Element)>(r16);

        $r7 = virtualinvoke r1.<org.apache.batik.svggen.DOMTreeManager: org.w3c.dom.Element getGenericDefinitions()>();

        interfaceinvoke r16.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r7);

        $r8 = virtualinvoke r1.<org.apache.batik.svggen.DOMTreeManager: org.w3c.dom.Element getTopLevelGroup()>();

        interfaceinvoke r16.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r8);

        return r16;
    }

    public void applyDefaultRenderingStyle(org.w3c.dom.Element)
    {
        org.apache.batik.svggen.StyleHandler $r6;
        org.w3c.dom.Element r4;
        org.apache.batik.svggen.SVGGeneratorContext $r3, $r5;
        java.util.Map $r2;
        org.apache.batik.svggen.DOMTreeManager r0;
        org.apache.batik.svggen.SVGGraphicContext $r1;

        r0 := @this: org.apache.batik.svggen.DOMTreeManager;

        r4 := @parameter0: org.w3c.dom.Element;

        $r1 = r0.<org.apache.batik.svggen.DOMTreeManager: org.apache.batik.svggen.SVGGraphicContext defaultGC>;

        $r2 = virtualinvoke $r1.<org.apache.batik.svggen.SVGGraphicContext: java.util.Map getGroupContext()>();

        $r3 = r0.<org.apache.batik.svggen.DOMTreeManager: org.apache.batik.svggen.SVGGeneratorContext generatorContext>;

        $r6 = $r3.<org.apache.batik.svggen.SVGGeneratorContext: org.apache.batik.svggen.StyleHandler styleHandler>;

        $r5 = r0.<org.apache.batik.svggen.DOMTreeManager: org.apache.batik.svggen.SVGGeneratorContext generatorContext>;

        interfaceinvoke $r6.<org.apache.batik.svggen.StyleHandler: void setStyle(org.w3c.dom.Element,java.util.Map,org.apache.batik.svggen.SVGGeneratorContext)>(r4, $r2, $r5);

        return;
    }

    public org.w3c.dom.Element getGenericDefinitions()
    {
        java.util.Iterator $r5;
        java.util.List $r4;
        org.w3c.dom.Element $r3, $r7;
        org.apache.batik.svggen.SVGGeneratorContext $r1;
        org.w3c.dom.Document $r2;
        java.lang.Object $r6;
        org.apache.batik.svggen.DOMTreeManager r0;
        boolean $z0;

        r0 := @this: org.apache.batik.svggen.DOMTreeManager;

        $r1 = r0.<org.apache.batik.svggen.DOMTreeManager: org.apache.batik.svggen.SVGGeneratorContext generatorContext>;

        $r2 = $r1.<org.apache.batik.svggen.SVGGeneratorContext: org.w3c.dom.Document domFactory>;

        $r3 = interfaceinvoke $r2.<org.w3c.dom.Document: org.w3c.dom.Element createElementNS(java.lang.String,java.lang.String)>("http://www.w3.org/2000/svg", "defs");

        $r4 = r0.<org.apache.batik.svggen.DOMTreeManager: java.util.List genericDefSet>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (org.w3c.dom.Element) $r6;

        interfaceinvoke $r3.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r7);

     label2:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        interfaceinvoke $r3.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(null, "id", "genericDefs");

        return $r3;
    }

    public org.apache.batik.svggen.ExtensionHandler getExtensionHandler()
    {
        org.apache.batik.svggen.DOMTreeManager r0;
        org.apache.batik.svggen.ExtensionHandler $r2;
        org.apache.batik.svggen.SVGGeneratorContext $r1;

        r0 := @this: org.apache.batik.svggen.DOMTreeManager;

        $r1 = r0.<org.apache.batik.svggen.DOMTreeManager: org.apache.batik.svggen.SVGGeneratorContext generatorContext>;

        $r2 = virtualinvoke $r1.<org.apache.batik.svggen.SVGGeneratorContext: org.apache.batik.svggen.ExtensionHandler getExtensionHandler()>();

        return $r2;
    }

    void setExtensionHandler(org.apache.batik.svggen.ExtensionHandler)
    {
        org.apache.batik.svggen.DOMTreeManager r0;
        org.apache.batik.svggen.ExtensionHandler r1;
        org.apache.batik.svggen.SVGGeneratorContext $r2;

        r0 := @this: org.apache.batik.svggen.DOMTreeManager;

        r1 := @parameter0: org.apache.batik.svggen.ExtensionHandler;

        $r2 = r0.<org.apache.batik.svggen.DOMTreeManager: org.apache.batik.svggen.SVGGeneratorContext generatorContext>;

        virtualinvoke $r2.<org.apache.batik.svggen.SVGGeneratorContext: void setExtensionHandler(org.apache.batik.svggen.ExtensionHandler)>(r1);

        return;
    }

    public java.util.List getDefinitionSet()
    {
        org.apache.batik.svggen.SVGBufferedImageOp $r4, $r7;
        org.apache.batik.svggen.SVGGraphicContextConverter $r1, $r9;
        java.util.List $r2, $r3, $r5, $r6, $r11;
        org.apache.batik.svggen.SVGGeneratorContext $r8, $r10;
        org.apache.batik.svggen.DOMTreeManager r0;

        r0 := @this: org.apache.batik.svggen.DOMTreeManager;

        $r1 = r0.<org.apache.batik.svggen.DOMTreeManager: org.apache.batik.svggen.SVGGraphicContextConverter gcConverter>;

        $r2 = virtualinvoke $r1.<org.apache.batik.svggen.SVGGraphicContextConverter: java.util.List getDefinitionSet()>();

        $r3 = r0.<org.apache.batik.svggen.DOMTreeManager: java.util.List genericDefSet>;

        interfaceinvoke $r2.<java.util.List: boolean removeAll(java.util.Collection)>($r3);

        $r4 = r0.<org.apache.batik.svggen.DOMTreeManager: org.apache.batik.svggen.SVGBufferedImageOp filterConverter>;

        $r5 = virtualinvoke $r4.<org.apache.batik.svggen.SVGBufferedImageOp: java.util.List getDefinitionSet()>();

        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>($r5);

        $r6 = r0.<org.apache.batik.svggen.DOMTreeManager: java.util.List otherDefs>;

        if $r6 == null goto label1;

        $r11 = r0.<org.apache.batik.svggen.DOMTreeManager: java.util.List otherDefs>;

        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>($r11);

        r0.<org.apache.batik.svggen.DOMTreeManager: java.util.List otherDefs> = null;

     label1:
        $r7 = new org.apache.batik.svggen.SVGBufferedImageOp;

        $r8 = r0.<org.apache.batik.svggen.DOMTreeManager: org.apache.batik.svggen.SVGGeneratorContext generatorContext>;

        specialinvoke $r7.<org.apache.batik.svggen.SVGBufferedImageOp: void <init>(org.apache.batik.svggen.SVGGeneratorContext)>($r8);

        r0.<org.apache.batik.svggen.DOMTreeManager: org.apache.batik.svggen.SVGBufferedImageOp filterConverter> = $r7;

        $r9 = new org.apache.batik.svggen.SVGGraphicContextConverter;

        $r10 = r0.<org.apache.batik.svggen.DOMTreeManager: org.apache.batik.svggen.SVGGeneratorContext generatorContext>;

        specialinvoke $r9.<org.apache.batik.svggen.SVGGraphicContextConverter: void <init>(org.apache.batik.svggen.SVGGeneratorContext)>($r10);

        r0.<org.apache.batik.svggen.DOMTreeManager: org.apache.batik.svggen.SVGGraphicContextConverter gcConverter> = $r9;

        return $r2;
    }

    public void addOtherDef(org.w3c.dom.Element)
    {
        java.util.List $r1, $r3;
        org.w3c.dom.Element r2;
        org.apache.batik.svggen.DOMTreeManager r0;
        java.util.LinkedList $r4;

        r0 := @this: org.apache.batik.svggen.DOMTreeManager;

        r2 := @parameter0: org.w3c.dom.Element;

        $r1 = r0.<org.apache.batik.svggen.DOMTreeManager: java.util.List otherDefs>;

        if $r1 != null goto label1;

        $r4 = new java.util.LinkedList;

        specialinvoke $r4.<java.util.LinkedList: void <init>()>();

        r0.<org.apache.batik.svggen.DOMTreeManager: java.util.List otherDefs> = $r4;

     label1:
        $r3 = r0.<org.apache.batik.svggen.DOMTreeManager: java.util.List otherDefs>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r2);

        return;
    }

    public org.w3c.dom.Element getTopLevelGroup()
    {
        org.apache.batik.svggen.DOMTreeManager r0;
        org.w3c.dom.Element $r1;

        r0 := @this: org.apache.batik.svggen.DOMTreeManager;

        $r1 = virtualinvoke r0.<org.apache.batik.svggen.DOMTreeManager: org.w3c.dom.Element getTopLevelGroup(boolean)>(1);

        return $r1;
    }

    public org.w3c.dom.Element getTopLevelGroup(boolean)
    {
        org.w3c.dom.Document $r8;
        org.w3c.dom.Node $r13, $r14;
        int $i0, $i1;
        org.apache.batik.svggen.SVGIDGenerator $r11;
        java.lang.String $r12;
        boolean z0, $z1;
        org.w3c.dom.NodeList $r3;
        java.util.Iterator $r4;
        java.util.List $r2;
        org.w3c.dom.Element r1, $r6, $r9, r15;
        org.apache.batik.svggen.SVGGeneratorContext $r7, $r10;
        java.lang.Object $r5;
        org.apache.batik.svggen.DOMTreeManager r0;

        r0 := @this: org.apache.batik.svggen.DOMTreeManager;

        z0 := @parameter0: boolean;

        r1 = r0.<org.apache.batik.svggen.DOMTreeManager: org.w3c.dom.Element topLevelGroup>;

        if z0 == 0 goto label5;

        $r2 = virtualinvoke r0.<org.apache.batik.svggen.DOMTreeManager: java.util.List getDefinitionSet()>();

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 <= 0 goto label5;

        r15 = null;

        $r3 = interfaceinvoke r1.<org.w3c.dom.Element: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)>("defs");

        $i1 = interfaceinvoke $r3.<org.w3c.dom.NodeList: int getLength()>();

        if $i1 <= 0 goto label1;

        $r14 = interfaceinvoke $r3.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(0);

        r15 = (org.w3c.dom.Element) $r14;

     label1:
        if r15 != null goto label2;

        $r7 = r0.<org.apache.batik.svggen.DOMTreeManager: org.apache.batik.svggen.SVGGeneratorContext generatorContext>;

        $r8 = $r7.<org.apache.batik.svggen.SVGGeneratorContext: org.w3c.dom.Document domFactory>;

        $r9 = interfaceinvoke $r8.<org.w3c.dom.Document: org.w3c.dom.Element createElementNS(java.lang.String,java.lang.String)>("http://www.w3.org/2000/svg", "defs");

        r15 = $r9;

        $r10 = r0.<org.apache.batik.svggen.DOMTreeManager: org.apache.batik.svggen.SVGGeneratorContext generatorContext>;

        $r11 = $r10.<org.apache.batik.svggen.SVGGeneratorContext: org.apache.batik.svggen.SVGIDGenerator idGenerator>;

        $r12 = virtualinvoke $r11.<org.apache.batik.svggen.SVGIDGenerator: java.lang.String generateID(java.lang.String)>("defs");

        interfaceinvoke $r9.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(null, "id", $r12);

        $r13 = interfaceinvoke r1.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

        interfaceinvoke r1.<org.w3c.dom.Node: org.w3c.dom.Node insertBefore(org.w3c.dom.Node,org.w3c.dom.Node)>($r9, $r13);

     label2:
        $r4 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

        goto label4;

     label3:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (org.w3c.dom.Element) $r5;

        interfaceinvoke r15.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r6);

     label4:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label3;

     label5:
        virtualinvoke r0.<org.apache.batik.svggen.DOMTreeManager: void recycleTopLevelGroup(boolean)>(0);

        return r1;
    }

    public org.apache.batik.svggen.SVGBufferedImageOp getFilterConverter()
    {
        org.apache.batik.svggen.DOMTreeManager r0;
        org.apache.batik.svggen.SVGBufferedImageOp $r1;

        r0 := @this: org.apache.batik.svggen.DOMTreeManager;

        $r1 = r0.<org.apache.batik.svggen.DOMTreeManager: org.apache.batik.svggen.SVGBufferedImageOp filterConverter>;

        return $r1;
    }

    public org.apache.batik.svggen.SVGGraphicContextConverter getGraphicContextConverter()
    {
        org.apache.batik.svggen.SVGGraphicContextConverter $r1;
        org.apache.batik.svggen.DOMTreeManager r0;

        r0 := @this: org.apache.batik.svggen.DOMTreeManager;

        $r1 = r0.<org.apache.batik.svggen.DOMTreeManager: org.apache.batik.svggen.SVGGraphicContextConverter gcConverter>;

        return $r1;
    }

    org.apache.batik.svggen.SVGGeneratorContext getGeneratorContext()
    {
        org.apache.batik.svggen.DOMTreeManager r0;
        org.apache.batik.svggen.SVGGeneratorContext $r1;

        r0 := @this: org.apache.batik.svggen.DOMTreeManager;

        $r1 = r0.<org.apache.batik.svggen.DOMTreeManager: org.apache.batik.svggen.SVGGeneratorContext generatorContext>;

        return $r1;
    }

    org.w3c.dom.Document getDOMFactory()
    {
        org.apache.batik.svggen.DOMTreeManager r0;
        org.apache.batik.svggen.SVGGeneratorContext $r1;
        org.w3c.dom.Document $r2;

        r0 := @this: org.apache.batik.svggen.DOMTreeManager;

        $r1 = r0.<org.apache.batik.svggen.DOMTreeManager: org.apache.batik.svggen.SVGGeneratorContext generatorContext>;

        $r2 = $r1.<org.apache.batik.svggen.SVGGeneratorContext: org.w3c.dom.Document domFactory>;

        return $r2;
    }

    org.apache.batik.svggen.StyleHandler getStyleHandler()
    {
        org.apache.batik.svggen.StyleHandler $r2;
        org.apache.batik.svggen.DOMTreeManager r0;
        org.apache.batik.svggen.SVGGeneratorContext $r1;

        r0 := @this: org.apache.batik.svggen.DOMTreeManager;

        $r1 = r0.<org.apache.batik.svggen.DOMTreeManager: org.apache.batik.svggen.SVGGeneratorContext generatorContext>;

        $r2 = $r1.<org.apache.batik.svggen.SVGGeneratorContext: org.apache.batik.svggen.StyleHandler styleHandler>;

        return $r2;
    }
}
