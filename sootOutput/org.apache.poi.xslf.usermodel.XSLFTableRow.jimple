public class org.apache.poi.xslf.usermodel.XSLFTableRow extends java.lang.Object implements java.lang.Iterable
{
    private org.openxmlformats.schemas.drawingml.x2006.main.CTTableRow _row;
    private java.util.List _cells;
    private org.apache.poi.xslf.usermodel.XSLFTable _table;

    void <init>(org.openxmlformats.schemas.drawingml.x2006.main.CTTableRow, org.apache.poi.xslf.usermodel.XSLFTable)
    {
        java.util.Iterator $r7;
        org.apache.poi.xslf.usermodel.XSLFTableCell $r10;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell r9;
        java.util.ArrayList $r3;
        org.apache.poi.xslf.usermodel.XSLFTable r2;
        org.apache.poi.xslf.usermodel.XSLFTableRow r0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableRow r1, $r4, $r5;
        java.util.List $r6, $r11;
        org.apache.poi.xslf.usermodel.XSLFSheet $r12;
        int $i0;
        java.lang.Object $r8;
        boolean $z0;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTableRow;

        r1 := @parameter0: org.openxmlformats.schemas.drawingml.x2006.main.CTTableRow;

        r2 := @parameter1: org.apache.poi.xslf.usermodel.XSLFTable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.poi.xslf.usermodel.XSLFTableRow: org.openxmlformats.schemas.drawingml.x2006.main.CTTableRow _row> = r1;

        r0.<org.apache.poi.xslf.usermodel.XSLFTableRow: org.apache.poi.xslf.usermodel.XSLFTable _table> = r2;

        $r3 = new java.util.ArrayList;

        $r4 = r0.<org.apache.poi.xslf.usermodel.XSLFTableRow: org.openxmlformats.schemas.drawingml.x2006.main.CTTableRow _row>;

        $i0 = interfaceinvoke $r4.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableRow: int sizeOfTcArray()>();

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>($i0);

        r0.<org.apache.poi.xslf.usermodel.XSLFTableRow: java.util.List _cells> = $r3;

        $r5 = r0.<org.apache.poi.xslf.usermodel.XSLFTableRow: org.openxmlformats.schemas.drawingml.x2006.main.CTTableRow _row>;

        $r6 = interfaceinvoke $r5.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableRow: java.util.List getTcList()>();

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell) $r8;

        $r11 = r0.<org.apache.poi.xslf.usermodel.XSLFTableRow: java.util.List _cells>;

        $r10 = new org.apache.poi.xslf.usermodel.XSLFTableCell;

        $r12 = virtualinvoke r2.<org.apache.poi.xslf.usermodel.XSLFTable: org.apache.poi.xslf.usermodel.XSLFSheet getSheet()>();

        specialinvoke $r10.<org.apache.poi.xslf.usermodel.XSLFTableCell: void <init>(org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell,org.apache.poi.xslf.usermodel.XSLFSheet)>(r9, $r12);

        interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r10);

        goto label1;

     label2:
        return;
    }

    public org.openxmlformats.schemas.drawingml.x2006.main.CTTableRow getXmlObject()
    {
        org.apache.poi.xslf.usermodel.XSLFTableRow r0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableRow $r1;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTableRow;

        $r1 = r0.<org.apache.poi.xslf.usermodel.XSLFTableRow: org.openxmlformats.schemas.drawingml.x2006.main.CTTableRow _row>;

        return $r1;
    }

    public java.util.Iterator iterator()
    {
        org.apache.poi.xslf.usermodel.XSLFTableRow r0;
        java.util.List $r1;
        java.util.Iterator $r2;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTableRow;

        $r1 = r0.<org.apache.poi.xslf.usermodel.XSLFTableRow: java.util.List _cells>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        return $r2;
    }

    public java.util.List getCells()
    {
        org.apache.poi.xslf.usermodel.XSLFTableRow r0;
        java.util.List $r1, $r2;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTableRow;

        $r1 = r0.<org.apache.poi.xslf.usermodel.XSLFTableRow: java.util.List _cells>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    public double getHeight()
    {
        org.apache.poi.xslf.usermodel.XSLFTableRow r0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableRow $r1;
        long $l0;
        double $d0;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTableRow;

        $r1 = r0.<org.apache.poi.xslf.usermodel.XSLFTableRow: org.openxmlformats.schemas.drawingml.x2006.main.CTTableRow _row>;

        $l0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableRow: long getH()>();

        $d0 = staticinvoke <org.apache.poi.util.Units: double toPoints(long)>($l0);

        return $d0;
    }

    public void setHeight(double)
    {
        org.apache.poi.xslf.usermodel.XSLFTableRow r0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableRow $r1;
        int $i0;
        long $l1;
        double d0;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTableRow;

        d0 := @parameter0: double;

        $r1 = r0.<org.apache.poi.xslf.usermodel.XSLFTableRow: org.openxmlformats.schemas.drawingml.x2006.main.CTTableRow _row>;

        $i0 = staticinvoke <org.apache.poi.util.Units: int toEMU(double)>(d0);

        $l1 = (long) $i0;

        interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableRow: void setH(long)>($l1);

        return;
    }

    public org.apache.poi.xslf.usermodel.XSLFTableCell addCell()
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell $r2, $r3;
        long $l3;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableCol $r13;
        org.apache.poi.xslf.usermodel.XSLFTable $r5, $r8, $r10;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableRow $r1, $r9;
        org.apache.poi.xslf.usermodel.XSLFSheet $r6;
        int $i0, $i1, $i2;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTable $r11;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableGrid $r12;
        org.apache.poi.xslf.usermodel.XSLFTableCell $r4;
        org.apache.poi.xslf.usermodel.XSLFTableRow r0;
        java.util.List $r7;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTableRow;

        $r1 = r0.<org.apache.poi.xslf.usermodel.XSLFTableRow: org.openxmlformats.schemas.drawingml.x2006.main.CTTableRow _row>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableRow: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell addNewTc()>();

        $r3 = staticinvoke <org.apache.poi.xslf.usermodel.XSLFTableCell: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell prototype()>();

        interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>($r3);

        $r4 = new org.apache.poi.xslf.usermodel.XSLFTableCell;

        $r5 = r0.<org.apache.poi.xslf.usermodel.XSLFTableRow: org.apache.poi.xslf.usermodel.XSLFTable _table>;

        $r6 = virtualinvoke $r5.<org.apache.poi.xslf.usermodel.XSLFTable: org.apache.poi.xslf.usermodel.XSLFSheet getSheet()>();

        specialinvoke $r4.<org.apache.poi.xslf.usermodel.XSLFTableCell: void <init>(org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell,org.apache.poi.xslf.usermodel.XSLFSheet)>($r2, $r6);

        $r7 = r0.<org.apache.poi.xslf.usermodel.XSLFTableRow: java.util.List _cells>;

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r4);

        $r8 = r0.<org.apache.poi.xslf.usermodel.XSLFTableRow: org.apache.poi.xslf.usermodel.XSLFTable _table>;

        $i0 = virtualinvoke $r8.<org.apache.poi.xslf.usermodel.XSLFTable: int getNumberOfColumns()>();

        $r9 = r0.<org.apache.poi.xslf.usermodel.XSLFTableRow: org.openxmlformats.schemas.drawingml.x2006.main.CTTableRow _row>;

        $i1 = interfaceinvoke $r9.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableRow: int sizeOfTcArray()>();

        if $i0 >= $i1 goto label1;

        $r10 = r0.<org.apache.poi.xslf.usermodel.XSLFTableRow: org.apache.poi.xslf.usermodel.XSLFTable _table>;

        $r11 = virtualinvoke $r10.<org.apache.poi.xslf.usermodel.XSLFTable: org.openxmlformats.schemas.drawingml.x2006.main.CTTable getCTTable()>();

        $r12 = interfaceinvoke $r11.<org.openxmlformats.schemas.drawingml.x2006.main.CTTable: org.openxmlformats.schemas.drawingml.x2006.main.CTTableGrid getTblGrid()>();

        $r13 = interfaceinvoke $r12.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableGrid: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCol addNewGridCol()>();

        $i2 = staticinvoke <org.apache.poi.util.Units: int toEMU(double)>(100.0);

        $l3 = (long) $i2;

        interfaceinvoke $r13.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCol: void setW(long)>($l3);

     label1:
        return $r4;
    }
}
