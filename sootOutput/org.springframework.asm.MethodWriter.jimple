class org.springframework.asm.MethodWriter extends java.lang.Object implements org.springframework.asm.MethodVisitor
{
    org.springframework.asm.MethodWriter a;
    org.springframework.asm.ClassWriter b;
    private int c;
    private int d;
    private int e;
    private java.lang.String f;
    int I;
    int J;
    java.lang.String g;
    int h;
    int[] i;
    private org.springframework.asm.ByteVector j;
    private org.springframework.asm.AnnotationWriter k;
    private org.springframework.asm.AnnotationWriter l;
    private org.springframework.asm.AnnotationWriter[] m;
    private org.springframework.asm.AnnotationWriter[] n;
    private org.springframework.asm.Attribute o;
    private org.springframework.asm.ByteVector p;
    private int q;
    private int r;
    private int s;
    private org.springframework.asm.Handler t;
    private org.springframework.asm.Handler K;
    private int u;
    private org.springframework.asm.ByteVector v;
    private int w;
    private org.springframework.asm.ByteVector x;
    private int y;
    private org.springframework.asm.ByteVector z;
    private org.springframework.asm.Attribute A;
    private boolean B;
    private final boolean C;
    private int D;
    private int E;
    private org.springframework.asm.Label F;
    private org.springframework.asm.Label G;
    private static final int[] H;

    void <init>(org.springframework.asm.ClassWriter, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[], boolean)
    {
        org.springframework.asm.ClassWriter r2;
        org.springframework.asm.Label $r10, $r11, $r16;
        java.lang.String[] r8;
        int[] $r12, $r14;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, $i13;
        java.lang.String r5, r6, r7, $r13;
        boolean z0;
        org.springframework.asm.MethodWriter r0, $r3, $r4;
        org.springframework.asm.ByteVector $r15;

        r0 := @this: org.springframework.asm.MethodWriter;

        r2 := @parameter0: org.springframework.asm.ClassWriter;

        i0 := @parameter1: int;

        r5 := @parameter2: java.lang.String;

        r6 := @parameter3: java.lang.String;

        r7 := @parameter4: java.lang.String;

        r8 := @parameter5: java.lang.String[];

        z0 := @parameter6: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r15 = new org.springframework.asm.ByteVector;

        specialinvoke $r15.<org.springframework.asm.ByteVector: void <init>()>();

        r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector p> = $r15;

        $r3 = r2.<org.springframework.asm.ClassWriter: org.springframework.asm.MethodWriter A>;

        if $r3 != null goto label1;

        r2.<org.springframework.asm.ClassWriter: org.springframework.asm.MethodWriter A> = r0;

        goto label2;

     label1:
        $r4 = r2.<org.springframework.asm.ClassWriter: org.springframework.asm.MethodWriter B>;

        $r4.<org.springframework.asm.MethodWriter: org.springframework.asm.MethodWriter a> = r0;

     label2:
        r2.<org.springframework.asm.ClassWriter: org.springframework.asm.MethodWriter B> = r0;

        r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ClassWriter b> = r2;

        r0.<org.springframework.asm.MethodWriter: int c> = i0;

        $i1 = virtualinvoke r2.<org.springframework.asm.ClassWriter: int newUTF8(java.lang.String)>(r5);

        r0.<org.springframework.asm.MethodWriter: int d> = $i1;

        $i2 = virtualinvoke r2.<org.springframework.asm.ClassWriter: int newUTF8(java.lang.String)>(r6);

        r0.<org.springframework.asm.MethodWriter: int e> = $i2;

        r0.<org.springframework.asm.MethodWriter: java.lang.String f> = r6;

        r0.<org.springframework.asm.MethodWriter: java.lang.String g> = r7;

        if r8 == null goto label4;

        $i5 = lengthof r8;

        if $i5 <= 0 goto label4;

        $i6 = lengthof r8;

        r0.<org.springframework.asm.MethodWriter: int h> = $i6;

        $i7 = r0.<org.springframework.asm.MethodWriter: int h>;

        $r12 = newarray (int)[$i7];

        r0.<org.springframework.asm.MethodWriter: int[] i> = $r12;

        i10 = 0;

     label3:
        $i8 = r0.<org.springframework.asm.MethodWriter: int h>;

        if i10 >= $i8 goto label4;

        $r14 = r0.<org.springframework.asm.MethodWriter: int[] i>;

        $r13 = r8[i10];

        $i9 = virtualinvoke r2.<org.springframework.asm.ClassWriter: int newClass(java.lang.String)>($r13);

        $r14[i10] = $i9;

        i10 = i10 + 1;

        goto label3;

     label4:
        r0.<org.springframework.asm.MethodWriter: boolean C> = z0;

        if z0 == 0 goto label6;

        $i3 = staticinvoke <org.springframework.asm.MethodWriter: int a(java.lang.String)>(r6);

        i11 = $i3 >> 2;

        $i4 = i0 & 8;

        if $i4 == 0 goto label5;

        $i13 = (int) -1;

        i11 = i11 + $i13;

     label5:
        r0.<org.springframework.asm.MethodWriter: int r> = i11;

        $r16 = new org.springframework.asm.Label;

        specialinvoke $r16.<org.springframework.asm.Label: void <init>()>();

        r0.<org.springframework.asm.MethodWriter: org.springframework.asm.Label F> = $r16;

        $r10 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.Label F>;

        $r10.<org.springframework.asm.Label: boolean j> = 1;

        $r11 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.Label F>;

        r0.<org.springframework.asm.MethodWriter: org.springframework.asm.Label G> = $r11;

     label6:
        return;
    }

    public org.springframework.asm.AnnotationVisitor visitAnnotationDefault()
    {
        org.springframework.asm.ClassWriter $r4;
        org.springframework.asm.MethodWriter r0;
        org.springframework.asm.AnnotationWriter $r2;
        org.springframework.asm.ByteVector $r1, $r3;

        r0 := @this: org.springframework.asm.MethodWriter;

        $r1 = new org.springframework.asm.ByteVector;

        specialinvoke $r1.<org.springframework.asm.ByteVector: void <init>()>();

        r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector j> = $r1;

        $r2 = new org.springframework.asm.AnnotationWriter;

        $r4 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ClassWriter b>;

        $r3 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector j>;

        specialinvoke $r2.<org.springframework.asm.AnnotationWriter: void <init>(org.springframework.asm.ClassWriter,boolean,org.springframework.asm.ByteVector,org.springframework.asm.ByteVector,int)>($r4, 0, $r3, null, 0);

        return $r2;
    }

    public org.springframework.asm.AnnotationVisitor visitAnnotation(java.lang.String, boolean)
    {
        org.springframework.asm.ClassWriter $r3, $r6;
        org.springframework.asm.MethodWriter r1;
        int $i0;
        org.springframework.asm.AnnotationWriter $r5, $r7, $r8;
        org.springframework.asm.ByteVector $r0, $r4;
        java.lang.String r2;
        boolean z0;

        r1 := @this: org.springframework.asm.MethodWriter;

        r2 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r0 = new org.springframework.asm.ByteVector;

        specialinvoke $r0.<org.springframework.asm.ByteVector: void <init>()>();

        $r3 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ClassWriter b>;

        $i0 = virtualinvoke $r3.<org.springframework.asm.ClassWriter: int newUTF8(java.lang.String)>(r2);

        $r4 = virtualinvoke $r0.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putShort(int)>($i0);

        virtualinvoke $r4.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putShort(int)>(0);

        $r5 = new org.springframework.asm.AnnotationWriter;

        $r6 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ClassWriter b>;

        specialinvoke $r5.<org.springframework.asm.AnnotationWriter: void <init>(org.springframework.asm.ClassWriter,boolean,org.springframework.asm.ByteVector,org.springframework.asm.ByteVector,int)>($r6, 1, $r0, $r0, 2);

        if z0 == 0 goto label1;

        $r8 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.AnnotationWriter k>;

        $r5.<org.springframework.asm.AnnotationWriter: org.springframework.asm.AnnotationWriter g> = $r8;

        r1.<org.springframework.asm.MethodWriter: org.springframework.asm.AnnotationWriter k> = $r5;

        goto label2;

     label1:
        $r7 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.AnnotationWriter l>;

        $r5.<org.springframework.asm.AnnotationWriter: org.springframework.asm.AnnotationWriter g> = $r7;

        r1.<org.springframework.asm.MethodWriter: org.springframework.asm.AnnotationWriter l> = $r5;

     label2:
        return $r5;
    }

    public org.springframework.asm.AnnotationVisitor visitParameterAnnotation(int, java.lang.String, boolean)
    {
        org.springframework.asm.ClassWriter $r3, $r6;
        org.springframework.asm.Type[] $r12, $r19;
        int $i0, i1, $i2, $i3;
        org.springframework.asm.AnnotationWriter $r5, $r9, $r16;
        java.lang.String r2, $r11, $r18;
        boolean z0;
        org.springframework.asm.AnnotationWriter[] $r7, $r8, $r10, $r13, $r14, $r15, $r17, $r20;
        org.springframework.asm.MethodWriter r1;
        org.springframework.asm.ByteVector $r0, $r4;

        r1 := @this: org.springframework.asm.MethodWriter;

        i1 := @parameter0: int;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r0 = new org.springframework.asm.ByteVector;

        specialinvoke $r0.<org.springframework.asm.ByteVector: void <init>()>();

        $r3 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ClassWriter b>;

        $i0 = virtualinvoke $r3.<org.springframework.asm.ClassWriter: int newUTF8(java.lang.String)>(r2);

        $r4 = virtualinvoke $r0.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putShort(int)>($i0);

        virtualinvoke $r4.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putShort(int)>(0);

        $r5 = new org.springframework.asm.AnnotationWriter;

        $r6 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ClassWriter b>;

        specialinvoke $r5.<org.springframework.asm.AnnotationWriter: void <init>(org.springframework.asm.ClassWriter,boolean,org.springframework.asm.ByteVector,org.springframework.asm.ByteVector,int)>($r6, 1, $r0, $r0, 2);

        if z0 == 0 goto label2;

        $r14 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.AnnotationWriter[] m>;

        if $r14 != null goto label1;

        $r18 = r1.<org.springframework.asm.MethodWriter: java.lang.String f>;

        $r19 = staticinvoke <org.springframework.asm.Type: org.springframework.asm.Type[] getArgumentTypes(java.lang.String)>($r18);

        $i3 = lengthof $r19;

        $r20 = newarray (org.springframework.asm.AnnotationWriter)[$i3];

        r1.<org.springframework.asm.MethodWriter: org.springframework.asm.AnnotationWriter[] m> = $r20;

     label1:
        $r15 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.AnnotationWriter[] m>;

        $r16 = $r15[i1];

        $r5.<org.springframework.asm.AnnotationWriter: org.springframework.asm.AnnotationWriter g> = $r16;

        $r17 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.AnnotationWriter[] m>;

        $r17[i1] = $r5;

        goto label4;

     label2:
        $r7 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.AnnotationWriter[] n>;

        if $r7 != null goto label3;

        $r11 = r1.<org.springframework.asm.MethodWriter: java.lang.String f>;

        $r12 = staticinvoke <org.springframework.asm.Type: org.springframework.asm.Type[] getArgumentTypes(java.lang.String)>($r11);

        $i2 = lengthof $r12;

        $r13 = newarray (org.springframework.asm.AnnotationWriter)[$i2];

        r1.<org.springframework.asm.MethodWriter: org.springframework.asm.AnnotationWriter[] n> = $r13;

     label3:
        $r8 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.AnnotationWriter[] n>;

        $r9 = $r8[i1];

        $r5.<org.springframework.asm.AnnotationWriter: org.springframework.asm.AnnotationWriter g> = $r9;

        $r10 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.AnnotationWriter[] n>;

        $r10[i1] = $r5;

     label4:
        return $r5;
    }

    public void visitAttribute(org.springframework.asm.Attribute)
    {
        org.springframework.asm.MethodWriter r1;
        org.springframework.asm.Attribute r0, $r2, $r3;
        boolean $z0;

        r1 := @this: org.springframework.asm.MethodWriter;

        r0 := @parameter0: org.springframework.asm.Attribute;

        $z0 = virtualinvoke r0.<org.springframework.asm.Attribute: boolean isCodeAttribute()>();

        if $z0 == 0 goto label1;

        $r3 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.Attribute A>;

        r0.<org.springframework.asm.Attribute: org.springframework.asm.Attribute a> = $r3;

        r1.<org.springframework.asm.MethodWriter: org.springframework.asm.Attribute A> = r0;

        goto label2;

     label1:
        $r2 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.Attribute o>;

        r0.<org.springframework.asm.Attribute: org.springframework.asm.Attribute a> = $r2;

        r1.<org.springframework.asm.MethodWriter: org.springframework.asm.Attribute o> = r0;

     label2:
        return;
    }

    public void visitCode()
    {
        org.springframework.asm.MethodWriter r0;

        r0 := @this: org.springframework.asm.MethodWriter;

        return;
    }

    public void visitInsn(int)
    {
        org.springframework.asm.Label $r2, $r3;
        int[] $r1;
        org.springframework.asm.MethodWriter r0;
        int i0, $i1, $i2, i3, $i4, $i5;
        org.springframework.asm.ByteVector $r4;
        boolean $z0;

        r0 := @this: org.springframework.asm.MethodWriter;

        i0 := @parameter0: int;

        $z0 = r0.<org.springframework.asm.MethodWriter: boolean C>;

        if $z0 == 0 goto label4;

        $i2 = r0.<org.springframework.asm.MethodWriter: int D>;

        $r1 = <org.springframework.asm.MethodWriter: int[] H>;

        $i1 = $r1[i0];

        i3 = $i2 + $i1;

        $i4 = r0.<org.springframework.asm.MethodWriter: int E>;

        if i3 <= $i4 goto label1;

        r0.<org.springframework.asm.MethodWriter: int E> = i3;

     label1:
        r0.<org.springframework.asm.MethodWriter: int D> = i3;

        if i0 < 172 goto label2;

        if i0 <= 177 goto label3;

     label2:
        if i0 != 191 goto label4;

     label3:
        $r2 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.Label F>;

        if $r2 == null goto label4;

        $r3 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.Label F>;

        $i5 = r0.<org.springframework.asm.MethodWriter: int E>;

        $r3.<org.springframework.asm.Label: int g> = $i5;

        r0.<org.springframework.asm.MethodWriter: org.springframework.asm.Label F> = null;

     label4:
        $r4 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector p>;

        virtualinvoke $r4.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putByte(int)>(i0);

        return;
    }

    public void visitIntInsn(int, int)
    {
        org.springframework.asm.MethodWriter r0;
        int i0, i1, $i2, i3, $i4;
        org.springframework.asm.ByteVector $r1, $r2;
        boolean $z0;

        r0 := @this: org.springframework.asm.MethodWriter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = r0.<org.springframework.asm.MethodWriter: boolean C>;

        if $z0 == 0 goto label2;

        if i0 == 188 goto label2;

        $i2 = r0.<org.springframework.asm.MethodWriter: int D>;

        i3 = $i2 + 1;

        $i4 = r0.<org.springframework.asm.MethodWriter: int E>;

        if i3 <= $i4 goto label1;

        r0.<org.springframework.asm.MethodWriter: int E> = i3;

     label1:
        r0.<org.springframework.asm.MethodWriter: int D> = i3;

     label2:
        if i0 != 17 goto label3;

        $r2 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector p>;

        virtualinvoke $r2.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector b(int,int)>(i0, i1);

        goto label4;

     label3:
        $r1 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector p>;

        virtualinvoke $r1.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector a(int,int)>(i0, i1);

     label4:
        return;
    }

    public void visitVarInsn(int, int)
    {
        org.springframework.asm.Label $r6, $r7;
        int[] $r5;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14, i15;
        boolean $z0;
        org.springframework.asm.MethodWriter r0;
        org.springframework.asm.ByteVector $r1, $r2, $r3, $r4;

        r0 := @this: org.springframework.asm.MethodWriter;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        $z0 = r0.<org.springframework.asm.MethodWriter: boolean C>;

        if $z0 == 0 goto label07;

        if i1 != 169 goto label01;

        $r6 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.Label F>;

        if $r6 == null goto label03;

        $r7 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.Label F>;

        $i12 = r0.<org.springframework.asm.MethodWriter: int E>;

        $r7.<org.springframework.asm.Label: int g> = $i12;

        r0.<org.springframework.asm.MethodWriter: org.springframework.asm.Label F> = null;

        goto label03;

     label01:
        $i9 = r0.<org.springframework.asm.MethodWriter: int D>;

        $r5 = <org.springframework.asm.MethodWriter: int[] H>;

        $i8 = $r5[i1];

        i13 = $i9 + $i8;

        $i10 = r0.<org.springframework.asm.MethodWriter: int E>;

        if i13 <= $i10 goto label02;

        r0.<org.springframework.asm.MethodWriter: int E> = i13;

     label02:
        r0.<org.springframework.asm.MethodWriter: int D> = i13;

     label03:
        if i1 == 22 goto label04;

        if i1 == 24 goto label04;

        if i1 == 55 goto label04;

        if i1 != 57 goto label05;

     label04:
        i14 = i0 + 2;

        goto label06;

     label05:
        i14 = i0 + 1;

     label06:
        $i11 = r0.<org.springframework.asm.MethodWriter: int r>;

        if i14 <= $i11 goto label07;

        r0.<org.springframework.asm.MethodWriter: int r> = i14;

     label07:
        if i0 >= 4 goto label10;

        if i1 == 169 goto label10;

        if i1 >= 54 goto label08;

        $i5 = i1 - 21;

        $i6 = $i5 << 2;

        $i7 = 26 + $i6;

        i15 = $i7 + i0;

        goto label09;

     label08:
        $i2 = i1 - 54;

        $i3 = $i2 << 2;

        $i4 = 59 + $i3;

        i15 = $i4 + i0;

     label09:
        $r4 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector p>;

        virtualinvoke $r4.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putByte(int)>(i15);

        goto label12;

     label10:
        if i0 < 256 goto label11;

        $r2 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector p>;

        $r3 = virtualinvoke $r2.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putByte(int)>(196);

        virtualinvoke $r3.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector b(int,int)>(i1, i0);

        goto label12;

     label11:
        $r1 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector p>;

        virtualinvoke $r1.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector a(int,int)>(i1, i0);

     label12:
        return;
    }

    public void visitTypeInsn(int, java.lang.String)
    {
        org.springframework.asm.ClassWriter $r3;
        org.springframework.asm.MethodWriter r0;
        int i0, $i1, i2, $i3, $i4;
        java.lang.String r1;
        org.springframework.asm.ByteVector $r2;
        boolean $z0;

        r0 := @this: org.springframework.asm.MethodWriter;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $z0 = r0.<org.springframework.asm.MethodWriter: boolean C>;

        if $z0 == 0 goto label2;

        if i0 != 187 goto label2;

        $i1 = r0.<org.springframework.asm.MethodWriter: int D>;

        i2 = $i1 + 1;

        $i3 = r0.<org.springframework.asm.MethodWriter: int E>;

        if i2 <= $i3 goto label1;

        r0.<org.springframework.asm.MethodWriter: int E> = i2;

     label1:
        r0.<org.springframework.asm.MethodWriter: int D> = i2;

     label2:
        $r2 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector p>;

        $r3 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ClassWriter b>;

        $i4 = virtualinvoke $r3.<org.springframework.asm.ClassWriter: int newClass(java.lang.String)>(r1);

        virtualinvoke $r2.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector b(int,int)>(i0, $i4);

        return;
    }

    public void visitFieldInsn(int, java.lang.String, java.lang.String, java.lang.String)
    {
        org.springframework.asm.ClassWriter $r5;
        byte $b6, $b8, $b9;
        int i0, $i2, $i3, $i4, $i5, i7, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21;
        java.lang.String r1, r2, r3;
        boolean $z0, $z1;
        char $c1;
        org.springframework.asm.MethodWriter r0;
        org.springframework.asm.ByteVector $r4;

        r0 := @this: org.springframework.asm.MethodWriter;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        $z0 = r0.<org.springframework.asm.MethodWriter: boolean C>;

        if $z0 == 0 goto label19;

        $c1 = virtualinvoke r3.<java.lang.String: char charAt(int)>(0);

        tableswitch(i0)
        {
            case 178: goto label01;
            case 179: goto label05;
            case 180: goto label09;
            default: goto label13;
        };

     label01:
        $i4 = r0.<org.springframework.asm.MethodWriter: int D>;

        $i12 = (int) $c1;

        if $i12 == 68 goto label02;

        $i13 = (int) $c1;

        if $i13 != 74 goto label03;

     label02:
        $b6 = 2;

        goto label04;

     label03:
        $b6 = 1;

     label04:
        i7 = $i4 + $b6;

        goto label17;

     label05:
        $i3 = r0.<org.springframework.asm.MethodWriter: int D>;

        $i14 = (int) $c1;

        if $i14 == 68 goto label06;

        $i15 = (int) $c1;

        if $i15 != 74 goto label07;

     label06:
        $b8 = -2;

        goto label08;

     label07:
        $b8 = -1;

     label08:
        $i16 = (int) $b8;

        i7 = $i3 + $i16;

        goto label17;

     label09:
        $i2 = r0.<org.springframework.asm.MethodWriter: int D>;

        $i17 = (int) $c1;

        if $i17 == 68 goto label10;

        $i18 = (int) $c1;

        if $i18 != 74 goto label11;

     label10:
        $z1 = 1;

        goto label12;

     label11:
        $z1 = 0;

     label12:
        i7 = $i2 + $z1;

        goto label17;

     label13:
        $i5 = r0.<org.springframework.asm.MethodWriter: int D>;

        $i19 = (int) $c1;

        if $i19 == 68 goto label14;

        $i20 = (int) $c1;

        if $i20 != 74 goto label15;

     label14:
        $b9 = -3;

        goto label16;

     label15:
        $b9 = -2;

     label16:
        $i21 = (int) $b9;

        i7 = $i5 + $i21;

     label17:
        $i10 = r0.<org.springframework.asm.MethodWriter: int E>;

        if i7 <= $i10 goto label18;

        r0.<org.springframework.asm.MethodWriter: int E> = i7;

     label18:
        r0.<org.springframework.asm.MethodWriter: int D> = i7;

     label19:
        $r4 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector p>;

        $r5 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ClassWriter b>;

        $i11 = virtualinvoke $r5.<org.springframework.asm.ClassWriter: int newField(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3);

        virtualinvoke $r4.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector b(int,int)>(i0, $i11);

        return;
    }

    public void visitMethodInsn(int, java.lang.String, java.lang.String, java.lang.String)
    {
        org.springframework.asm.Item $r5;
        boolean z0, $z1, $z2, $z4, $z5;
        org.springframework.asm.MethodWriter r0;
        org.springframework.asm.ClassWriter $r4;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16, $i17, $i18;
        java.lang.String r1, r2, r3;
        org.springframework.asm.ByteVector $r6, $r7, $r8;

        r0 := @this: org.springframework.asm.MethodWriter;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        if i0 != 185 goto label01;

        $z5 = 1;

        $z4 = 1;

        goto label02;

     label01:
        $z5 = 0;

        $z4 = 0;

     label02:
        z0 = $z4;

        $r4 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ClassWriter b>;

        $r5 = virtualinvoke $r4.<org.springframework.asm.ClassWriter: org.springframework.asm.Item a(java.lang.String,java.lang.String,java.lang.String,boolean)>(r1, r2, r3, $z5);

        $i14 = $r5.<org.springframework.asm.Item: int c>;

        i15 = $i14;

        $z1 = r0.<org.springframework.asm.MethodWriter: boolean C>;

        if $z1 == 0 goto label07;

        if $i14 != 0 goto label03;

        $i13 = staticinvoke <org.springframework.asm.MethodWriter: int a(java.lang.String)>(r3);

        i15 = $i13;

        $r5.<org.springframework.asm.Item: int c> = $i13;

     label03:
        if i0 != 184 goto label04;

        $i9 = r0.<org.springframework.asm.MethodWriter: int D>;

        $i8 = i15 >> 2;

        $i11 = $i9 - $i8;

        $i10 = i15 & 3;

        $i12 = $i11 + $i10;

        i16 = $i12 + 1;

        goto label05;

     label04:
        $i4 = r0.<org.springframework.asm.MethodWriter: int D>;

        $i3 = i15 >> 2;

        $i6 = $i4 - $i3;

        $i5 = i15 & 3;

        i16 = $i6 + $i5;

     label05:
        $i7 = r0.<org.springframework.asm.MethodWriter: int E>;

        if i16 <= $i7 goto label06;

        r0.<org.springframework.asm.MethodWriter: int E> = i16;

     label06:
        r0.<org.springframework.asm.MethodWriter: int D> = i16;

     label07:
        if z0 == 0 goto label09;

        $z2 = r0.<org.springframework.asm.MethodWriter: boolean C>;

        if $z2 != 0 goto label08;

        if i15 != 0 goto label08;

        $i2 = staticinvoke <org.springframework.asm.MethodWriter: int a(java.lang.String)>(r3);

        i15 = $i2;

        $r5.<org.springframework.asm.Item: int c> = $i2;

     label08:
        $r7 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector p>;

        $i17 = $r5.<org.springframework.asm.Item: int a>;

        $r8 = virtualinvoke $r7.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector b(int,int)>(185, $i17);

        $i18 = i15 >> 2;

        virtualinvoke $r8.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector a(int,int)>($i18, 0);

        goto label10;

     label09:
        $r6 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector p>;

        $i1 = $r5.<org.springframework.asm.Item: int a>;

        virtualinvoke $r6.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector b(int,int)>(i0, $i1);

     label10:
        return;
    }

    public void visitJumpInsn(int, org.springframework.asm.Label)
    {
        int[] $r11;
        boolean $z0, $z1;
        org.springframework.asm.MethodWriter r0;
        org.springframework.asm.Label r1, $r12, $r13, $r14, $r15;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i20;
        org.springframework.asm.ByteVector $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r16, $r17;

        r0 := @this: org.springframework.asm.MethodWriter;

        i0 := @parameter0: int;

        r1 := @parameter1: org.springframework.asm.Label;

        $z0 = r0.<org.springframework.asm.MethodWriter: boolean C>;

        if $z0 == 0 goto label03;

        if i0 != 167 goto label01;

        $r14 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.Label F>;

        if $r14 == null goto label03;

        $r15 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.Label F>;

        $i14 = r0.<org.springframework.asm.MethodWriter: int E>;

        $r15.<org.springframework.asm.Label: int g> = $i14;

        $i15 = r0.<org.springframework.asm.MethodWriter: int D>;

        specialinvoke r0.<org.springframework.asm.MethodWriter: void a(int,org.springframework.asm.Label)>($i15, r1);

        r0.<org.springframework.asm.MethodWriter: org.springframework.asm.Label F> = null;

        goto label03;

     label01:
        if i0 != 168 goto label02;

        $r13 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.Label F>;

        if $r13 == null goto label03;

        $i12 = r0.<org.springframework.asm.MethodWriter: int D>;

        $i13 = $i12 + 1;

        specialinvoke r0.<org.springframework.asm.MethodWriter: void a(int,org.springframework.asm.Label)>($i13, r1);

        goto label03;

     label02:
        $i9 = r0.<org.springframework.asm.MethodWriter: int D>;

        $r11 = <org.springframework.asm.MethodWriter: int[] H>;

        $i8 = $r11[i0];

        $i10 = $i9 + $i8;

        r0.<org.springframework.asm.MethodWriter: int D> = $i10;

        $r12 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.Label F>;

        if $r12 == null goto label03;

        $i11 = r0.<org.springframework.asm.MethodWriter: int D>;

        specialinvoke r0.<org.springframework.asm.MethodWriter: void a(int,org.springframework.asm.Label)>($i11, r1);

     label03:
        $z1 = r1.<org.springframework.asm.Label: boolean a>;

        if $z1 == 0 goto label09;

        $i4 = r1.<org.springframework.asm.Label: int b>;

        $r5 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector p>;

        $i3 = $r5.<org.springframework.asm.ByteVector: int b>;

        $i5 = $i4 - $i3;

        $i20 = (int) -32768;

        if $i5 >= $i20 goto label09;

        if i0 != 167 goto label04;

        $r10 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector p>;

        virtualinvoke $r10.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putByte(int)>(200);

        goto label08;

     label04:
        if i0 != 168 goto label05;

        $r9 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector p>;

        virtualinvoke $r9.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putByte(int)>(201);

        goto label08;

     label05:
        $r6 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector p>;

        if i0 > 166 goto label06;

        $i6 = i0 + 1;

        $i7 = $i6 ^ 1;

        $i16 = $i7 - 1;

        goto label07;

     label06:
        $i16 = i0 ^ 1;

     label07:
        virtualinvoke $r6.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putByte(int)>($i16);

        $r7 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector p>;

        virtualinvoke $r7.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putShort(int)>(8);

        $r8 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector p>;

        virtualinvoke $r8.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putByte(int)>(200);

     label08:
        $r16 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector p>;

        $r17 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector p>;

        $i17 = $r17.<org.springframework.asm.ByteVector: int b>;

        $i18 = $i17 - 1;

        virtualinvoke r1.<org.springframework.asm.Label: void a(org.springframework.asm.MethodWriter,org.springframework.asm.ByteVector,int,boolean)>(r0, $r16, $i18, 1);

        goto label10;

     label09:
        $r2 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector p>;

        virtualinvoke $r2.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putByte(int)>(i0);

        $r4 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector p>;

        $r3 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector p>;

        $i1 = $r3.<org.springframework.asm.ByteVector: int b>;

        $i2 = $i1 - 1;

        virtualinvoke r1.<org.springframework.asm.Label: void a(org.springframework.asm.MethodWriter,org.springframework.asm.ByteVector,int,boolean)>(r0, $r4, $i2, 0);

     label10:
        return;
    }

    public void visitLabel(org.springframework.asm.Label)
    {
        byte[] $r6;
        org.springframework.asm.Label r1, $r2, $r3;
        org.springframework.asm.MethodWriter r0;
        int $i0, $i1, $i2;
        org.springframework.asm.ByteVector $r4, $r5;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.springframework.asm.MethodWriter;

        r1 := @parameter0: org.springframework.asm.Label;

        $z0 = r0.<org.springframework.asm.MethodWriter: boolean C>;

        if $z0 == 0 goto label2;

        $r2 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.Label F>;

        if $r2 == null goto label1;

        $r3 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.Label F>;

        $i0 = r0.<org.springframework.asm.MethodWriter: int E>;

        $r3.<org.springframework.asm.Label: int g> = $i0;

        $i1 = r0.<org.springframework.asm.MethodWriter: int D>;

        specialinvoke r0.<org.springframework.asm.MethodWriter: void a(int,org.springframework.asm.Label)>($i1, r1);

     label1:
        r0.<org.springframework.asm.MethodWriter: org.springframework.asm.Label F> = r1;

        r0.<org.springframework.asm.MethodWriter: int D> = 0;

        r0.<org.springframework.asm.MethodWriter: int E> = 0;

     label2:
        $z1 = r0.<org.springframework.asm.MethodWriter: boolean B>;

        $r4 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector p>;

        $i2 = $r4.<org.springframework.asm.ByteVector: int b>;

        $r5 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector p>;

        $r6 = $r5.<org.springframework.asm.ByteVector: byte[] a>;

        $z2 = virtualinvoke r1.<org.springframework.asm.Label: boolean a(org.springframework.asm.MethodWriter,int,byte[])>(r0, $i2, $r6);

        $z3 = $z1 | $z2;

        r0.<org.springframework.asm.MethodWriter: boolean B> = $z3;

        return;
    }

    public void visitLdcInsn(java.lang.Object)
    {
        org.springframework.asm.ClassWriter $r2;
        org.springframework.asm.Item $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, $i7, $i8;
        boolean $z0;
        org.springframework.asm.MethodWriter r0;
        java.lang.Object r1;
        org.springframework.asm.ByteVector $r4, $r5, $r6;

        r0 := @this: org.springframework.asm.MethodWriter;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ClassWriter b>;

        $r3 = virtualinvoke $r2.<org.springframework.asm.ClassWriter: org.springframework.asm.Item a(java.lang.Object)>(r1);

        $z0 = r0.<org.springframework.asm.MethodWriter: boolean C>;

        if $z0 == 0 goto label5;

        $i1 = $r3.<org.springframework.asm.Item: int b>;

        if $i1 == 5 goto label1;

        $i4 = $r3.<org.springframework.asm.Item: int b>;

        if $i4 != 6 goto label2;

     label1:
        $i2 = r0.<org.springframework.asm.MethodWriter: int D>;

        i6 = $i2 + 2;

        goto label3;

     label2:
        $i5 = r0.<org.springframework.asm.MethodWriter: int D>;

        i6 = $i5 + 1;

     label3:
        $i3 = r0.<org.springframework.asm.MethodWriter: int E>;

        if i6 <= $i3 goto label4;

        r0.<org.springframework.asm.MethodWriter: int E> = i6;

     label4:
        r0.<org.springframework.asm.MethodWriter: int D> = i6;

     label5:
        $i7 = $r3.<org.springframework.asm.Item: int a>;

        $i8 = $r3.<org.springframework.asm.Item: int b>;

        if $i8 == 5 goto label6;

        $i0 = $r3.<org.springframework.asm.Item: int b>;

        if $i0 != 6 goto label7;

     label6:
        $r4 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector p>;

        virtualinvoke $r4.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector b(int,int)>(20, $i7);

        goto label9;

     label7:
        if $i7 < 256 goto label8;

        $r6 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector p>;

        virtualinvoke $r6.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector b(int,int)>(19, $i7);

        goto label9;

     label8:
        $r5 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector p>;

        virtualinvoke $r5.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector a(int,int)>(18, $i7);

     label9:
        return;
    }

    public void visitIincInsn(int, int)
    {
        org.springframework.asm.MethodWriter r0;
        int i0, i1, i2, $i3, $i5;
        org.springframework.asm.ByteVector $r1, $r2, $r3, $r4, $r5;
        boolean $z0;

        r0 := @this: org.springframework.asm.MethodWriter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = r0.<org.springframework.asm.MethodWriter: boolean C>;

        if $z0 == 0 goto label1;

        i2 = i0 + 1;

        $i3 = r0.<org.springframework.asm.MethodWriter: int r>;

        if i2 <= $i3 goto label1;

        r0.<org.springframework.asm.MethodWriter: int r> = i2;

     label1:
        if i0 > 255 goto label2;

        if i1 > 127 goto label2;

        $i5 = (int) -128;

        if i1 >= $i5 goto label3;

     label2:
        $r3 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector p>;

        $r4 = virtualinvoke $r3.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putByte(int)>(196);

        $r5 = virtualinvoke $r4.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector b(int,int)>(132, i0);

        virtualinvoke $r5.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putShort(int)>(i1);

        goto label4;

     label3:
        $r1 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector p>;

        $r2 = virtualinvoke $r1.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putByte(int)>(132);

        virtualinvoke $r2.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector a(int,int)>(i0, i1);

     label4:
        return;
    }

    public void visitTableSwitchInsn(int, int, org.springframework.asm.Label, org.springframework.asm.Label[])
    {
        org.springframework.asm.Label r1, $r7, $r9, $r10, $r11;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, $i10, $i11, $i12, i13;
        org.springframework.asm.Label[] r5;
        boolean $z0;
        org.springframework.asm.MethodWriter r0;
        org.springframework.asm.ByteVector $r2, $r3, $r4, $r6, $r8, $r12, $r13, $r14;

        r0 := @this: org.springframework.asm.MethodWriter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: org.springframework.asm.Label;

        r5 := @parameter3: org.springframework.asm.Label[];

        $z0 = r0.<org.springframework.asm.MethodWriter: boolean C>;

        if $z0 == 0 goto label3;

        $i3 = r0.<org.springframework.asm.MethodWriter: int D>;

        $i4 = $i3 - 1;

        r0.<org.springframework.asm.MethodWriter: int D> = $i4;

        $r9 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.Label F>;

        if $r9 == null goto label3;

        $r10 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.Label F>;

        $i5 = r0.<org.springframework.asm.MethodWriter: int E>;

        $r10.<org.springframework.asm.Label: int g> = $i5;

        $i6 = r0.<org.springframework.asm.MethodWriter: int D>;

        specialinvoke r0.<org.springframework.asm.MethodWriter: void a(int,org.springframework.asm.Label)>($i6, r1);

        i9 = 0;

     label1:
        $i7 = lengthof r5;

        if i9 >= $i7 goto label2;

        $i8 = r0.<org.springframework.asm.MethodWriter: int D>;

        $r11 = r5[i9];

        specialinvoke r0.<org.springframework.asm.MethodWriter: void a(int,org.springframework.asm.Label)>($i8, $r11);

        i9 = i9 + 1;

        goto label1;

     label2:
        r0.<org.springframework.asm.MethodWriter: org.springframework.asm.Label F> = null;

     label3:
        $r12 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector p>;

        $i10 = $r12.<org.springframework.asm.ByteVector: int b>;

        $r13 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector p>;

        virtualinvoke $r13.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putByte(int)>(170);

     label4:
        $r14 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector p>;

        $i11 = $r14.<org.springframework.asm.ByteVector: int b>;

        $i12 = $i11 % 4;

        if $i12 == 0 goto label5;

        $r8 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector p>;

        virtualinvoke $r8.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putByte(int)>(0);

        goto label4;

     label5:
        $r2 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector p>;

        virtualinvoke r1.<org.springframework.asm.Label: void a(org.springframework.asm.MethodWriter,org.springframework.asm.ByteVector,int,boolean)>(r0, $r2, $i10, 1);

        $r3 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector p>;

        $r4 = virtualinvoke $r3.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putInt(int)>(i0);

        virtualinvoke $r4.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putInt(int)>(i1);

        i13 = 0;

     label6:
        $i2 = lengthof r5;

        if i13 >= $i2 goto label7;

        $r7 = r5[i13];

        $r6 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector p>;

        virtualinvoke $r7.<org.springframework.asm.Label: void a(org.springframework.asm.MethodWriter,org.springframework.asm.ByteVector,int,boolean)>(r0, $r6, $i10, 1);

        i13 = i13 + 1;

        goto label6;

     label7:
        return;
    }

    public void visitLookupSwitchInsn(org.springframework.asm.Label, int[], org.springframework.asm.Label[])
    {
        org.springframework.asm.Label r1, $r8, $r10, $r11, $r12;
        int[] r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, $i10, $i11, $i12, i13;
        org.springframework.asm.Label[] r3;
        boolean $z0;
        org.springframework.asm.MethodWriter r0;
        org.springframework.asm.ByteVector $r2, $r4, $r6, $r7, $r9, $r13, $r14, $r15;

        r0 := @this: org.springframework.asm.MethodWriter;

        r1 := @parameter0: org.springframework.asm.Label;

        r5 := @parameter1: int[];

        r3 := @parameter2: org.springframework.asm.Label[];

        $z0 = r0.<org.springframework.asm.MethodWriter: boolean C>;

        if $z0 == 0 goto label3;

        $i3 = r0.<org.springframework.asm.MethodWriter: int D>;

        $i4 = $i3 - 1;

        r0.<org.springframework.asm.MethodWriter: int D> = $i4;

        $r10 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.Label F>;

        if $r10 == null goto label3;

        $r11 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.Label F>;

        $i5 = r0.<org.springframework.asm.MethodWriter: int E>;

        $r11.<org.springframework.asm.Label: int g> = $i5;

        $i6 = r0.<org.springframework.asm.MethodWriter: int D>;

        specialinvoke r0.<org.springframework.asm.MethodWriter: void a(int,org.springframework.asm.Label)>($i6, r1);

        i9 = 0;

     label1:
        $i7 = lengthof r3;

        if i9 >= $i7 goto label2;

        $i8 = r0.<org.springframework.asm.MethodWriter: int D>;

        $r12 = r3[i9];

        specialinvoke r0.<org.springframework.asm.MethodWriter: void a(int,org.springframework.asm.Label)>($i8, $r12);

        i9 = i9 + 1;

        goto label1;

     label2:
        r0.<org.springframework.asm.MethodWriter: org.springframework.asm.Label F> = null;

     label3:
        $r13 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector p>;

        $i10 = $r13.<org.springframework.asm.ByteVector: int b>;

        $r14 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector p>;

        virtualinvoke $r14.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putByte(int)>(171);

     label4:
        $r15 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector p>;

        $i11 = $r15.<org.springframework.asm.ByteVector: int b>;

        $i12 = $i11 % 4;

        if $i12 == 0 goto label5;

        $r9 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector p>;

        virtualinvoke $r9.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putByte(int)>(0);

        goto label4;

     label5:
        $r2 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector p>;

        virtualinvoke r1.<org.springframework.asm.Label: void a(org.springframework.asm.MethodWriter,org.springframework.asm.ByteVector,int,boolean)>(r0, $r2, $i10, 1);

        $r4 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector p>;

        $i0 = lengthof r3;

        virtualinvoke $r4.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putInt(int)>($i0);

        i13 = 0;

     label6:
        $i1 = lengthof r3;

        if i13 >= $i1 goto label7;

        $r6 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector p>;

        $i2 = r5[i13];

        virtualinvoke $r6.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putInt(int)>($i2);

        $r8 = r3[i13];

        $r7 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector p>;

        virtualinvoke $r8.<org.springframework.asm.Label: void a(org.springframework.asm.MethodWriter,org.springframework.asm.ByteVector,int,boolean)>(r0, $r7, $i10, 1);

        i13 = i13 + 1;

        goto label6;

     label7:
        return;
    }

    public void visitMultiANewArrayInsn(java.lang.String, int)
    {
        org.springframework.asm.ClassWriter $r2;
        org.springframework.asm.MethodWriter r0;
        int $i0, i1, $i2, $i3, $i4;
        java.lang.String r1;
        org.springframework.asm.ByteVector $r3, $r4;
        boolean $z0;

        r0 := @this: org.springframework.asm.MethodWriter;

        r1 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        $z0 = r0.<org.springframework.asm.MethodWriter: boolean C>;

        if $z0 == 0 goto label1;

        $i3 = r0.<org.springframework.asm.MethodWriter: int D>;

        $i2 = 1 - i1;

        $i4 = $i3 + $i2;

        r0.<org.springframework.asm.MethodWriter: int D> = $i4;

     label1:
        $r3 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector p>;

        $r2 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ClassWriter b>;

        $i0 = virtualinvoke $r2.<org.springframework.asm.ClassWriter: int newClass(java.lang.String)>(r1);

        $r4 = virtualinvoke $r3.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector b(int,int)>(197, $i0);

        virtualinvoke $r4.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putByte(int)>(i1);

        return;
    }

    public void visitTryCatchBlock(org.springframework.asm.Label, org.springframework.asm.Label, org.springframework.asm.Label, java.lang.String)
    {
        org.springframework.asm.ClassWriter $r7;
        org.springframework.asm.Label r1, r2, r3, $r8;
        org.springframework.asm.Handler $r5, $r6, $r9;
        org.springframework.asm.MethodWriter r0;
        int $i0, $i1, $i2;
        java.lang.String r4;
        boolean $z0, $z1;

        r0 := @this: org.springframework.asm.MethodWriter;

        r1 := @parameter0: org.springframework.asm.Label;

        r2 := @parameter1: org.springframework.asm.Label;

        r3 := @parameter2: org.springframework.asm.Label;

        r4 := @parameter3: java.lang.String;

        $z0 = r0.<org.springframework.asm.MethodWriter: boolean C>;

        if $z0 == 0 goto label1;

        $z1 = r3.<org.springframework.asm.Label: boolean j>;

        if $z1 != 0 goto label1;

        r3.<org.springframework.asm.Label: int f> = 1;

        r3.<org.springframework.asm.Label: boolean j> = 1;

        $r8 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.Label G>;

        r3.<org.springframework.asm.Label: org.springframework.asm.Label i> = $r8;

        r0.<org.springframework.asm.MethodWriter: org.springframework.asm.Label G> = r3;

     label1:
        $i0 = r0.<org.springframework.asm.MethodWriter: int s>;

        $i1 = $i0 + 1;

        r0.<org.springframework.asm.MethodWriter: int s> = $i1;

        $r9 = new org.springframework.asm.Handler;

        specialinvoke $r9.<org.springframework.asm.Handler: void <init>()>();

        $r9.<org.springframework.asm.Handler: org.springframework.asm.Label a> = r1;

        $r9.<org.springframework.asm.Handler: org.springframework.asm.Label b> = r2;

        $r9.<org.springframework.asm.Handler: org.springframework.asm.Label c> = r3;

        $r9.<org.springframework.asm.Handler: java.lang.String d> = r4;

        if r4 == null goto label2;

        $r7 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ClassWriter b>;

        $i2 = virtualinvoke $r7.<org.springframework.asm.ClassWriter: int newClass(java.lang.String)>(r4);

        goto label3;

     label2:
        $i2 = 0;

     label3:
        $r9.<org.springframework.asm.Handler: int e> = $i2;

        $r5 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.Handler K>;

        if $r5 != null goto label4;

        r0.<org.springframework.asm.MethodWriter: org.springframework.asm.Handler t> = $r9;

        goto label5;

     label4:
        $r6 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.Handler K>;

        $r6.<org.springframework.asm.Handler: org.springframework.asm.Handler f> = $r9;

     label5:
        r0.<org.springframework.asm.MethodWriter: org.springframework.asm.Handler K> = $r9;

        return;
    }

    public void visitLocalVariable(java.lang.String, java.lang.String, java.lang.String, org.springframework.asm.Label, org.springframework.asm.Label, int)
    {
        byte $b20;
        boolean $z0;
        org.springframework.asm.MethodWriter r1;
        org.springframework.asm.ClassWriter $r8, $r11, $r18, $r20;
        org.springframework.asm.Label r2, r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i21, $i22;
        java.lang.String r0, r7, r10;
        char $c9;
        org.springframework.asm.ByteVector $r3, $r4, $r6, $r9, $r12, $r14, $r15, $r16, $r17, $r19, $r21, $r23, $r24, $r25;

        r1 := @this: org.springframework.asm.MethodWriter;

        r7 := @parameter0: java.lang.String;

        r10 := @parameter1: java.lang.String;

        r0 := @parameter2: java.lang.String;

        r2 := @parameter3: org.springframework.asm.Label;

        r5 := @parameter4: org.springframework.asm.Label;

        i8 := @parameter5: int;

        if r0 == null goto label2;

        $r14 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector x>;

        if $r14 != null goto label1;

        $r24 = new org.springframework.asm.ByteVector;

        specialinvoke $r24.<org.springframework.asm.ByteVector: void <init>()>();

        r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector x> = $r24;

     label1:
        $i12 = r1.<org.springframework.asm.MethodWriter: int w>;

        $i13 = $i12 + 1;

        r1.<org.springframework.asm.MethodWriter: int w> = $i13;

        $r15 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector x>;

        $i14 = r2.<org.springframework.asm.Label: int b>;

        $r16 = virtualinvoke $r15.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putShort(int)>($i14);

        $i16 = r5.<org.springframework.asm.Label: int b>;

        $i15 = r2.<org.springframework.asm.Label: int b>;

        $i17 = $i16 - $i15;

        $r17 = virtualinvoke $r16.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putShort(int)>($i17);

        $r18 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ClassWriter b>;

        $i18 = virtualinvoke $r18.<org.springframework.asm.ClassWriter: int newUTF8(java.lang.String)>(r7);

        $r19 = virtualinvoke $r17.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putShort(int)>($i18);

        $r20 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ClassWriter b>;

        $i19 = virtualinvoke $r20.<org.springframework.asm.ClassWriter: int newUTF8(java.lang.String)>(r0);

        $r21 = virtualinvoke $r19.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putShort(int)>($i19);

        virtualinvoke $r21.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putShort(int)>(i8);

     label2:
        $r23 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector v>;

        if $r23 != null goto label3;

        $r25 = new org.springframework.asm.ByteVector;

        specialinvoke $r25.<org.springframework.asm.ByteVector: void <init>()>();

        r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector v> = $r25;

     label3:
        $i0 = r1.<org.springframework.asm.MethodWriter: int u>;

        $i1 = $i0 + 1;

        r1.<org.springframework.asm.MethodWriter: int u> = $i1;

        $r3 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector v>;

        $i2 = r2.<org.springframework.asm.Label: int b>;

        $r4 = virtualinvoke $r3.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putShort(int)>($i2);

        $i4 = r5.<org.springframework.asm.Label: int b>;

        $i3 = r2.<org.springframework.asm.Label: int b>;

        $i5 = $i4 - $i3;

        $r6 = virtualinvoke $r4.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putShort(int)>($i5);

        $r8 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ClassWriter b>;

        $i6 = virtualinvoke $r8.<org.springframework.asm.ClassWriter: int newUTF8(java.lang.String)>(r7);

        $r9 = virtualinvoke $r6.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putShort(int)>($i6);

        $r11 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ClassWriter b>;

        $i7 = virtualinvoke $r11.<org.springframework.asm.ClassWriter: int newUTF8(java.lang.String)>(r10);

        $r12 = virtualinvoke $r9.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putShort(int)>($i7);

        virtualinvoke $r12.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putShort(int)>(i8);

        $z0 = r1.<org.springframework.asm.MethodWriter: boolean C>;

        if $z0 == 0 goto label7;

        $c9 = virtualinvoke r10.<java.lang.String: char charAt(int)>(0);

        $i21 = (int) $c9;

        if $i21 == 76 goto label4;

        $i22 = (int) $c9;

        if $i22 != 68 goto label5;

     label4:
        $b20 = 2;

        goto label6;

     label5:
        $b20 = 1;

     label6:
        $i11 = i8 + $b20;

        $i10 = r1.<org.springframework.asm.MethodWriter: int r>;

        if $i11 <= $i10 goto label7;

        r1.<org.springframework.asm.MethodWriter: int r> = $i11;

     label7:
        return;
    }

    public void visitLineNumber(int, org.springframework.asm.Label)
    {
        org.springframework.asm.Label r2;
        org.springframework.asm.MethodWriter r0;
        int $i0, $i1, $i2, i3;
        org.springframework.asm.ByteVector $r1, $r3, $r4, $r5;

        r0 := @this: org.springframework.asm.MethodWriter;

        i3 := @parameter0: int;

        r2 := @parameter1: org.springframework.asm.Label;

        $r1 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector z>;

        if $r1 != null goto label1;

        $r5 = new org.springframework.asm.ByteVector;

        specialinvoke $r5.<org.springframework.asm.ByteVector: void <init>()>();

        r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector z> = $r5;

     label1:
        $i0 = r0.<org.springframework.asm.MethodWriter: int y>;

        $i1 = $i0 + 1;

        r0.<org.springframework.asm.MethodWriter: int y> = $i1;

        $r3 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector z>;

        $i2 = r2.<org.springframework.asm.Label: int b>;

        virtualinvoke $r3.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putShort(int)>($i2);

        $r4 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector z>;

        virtualinvoke $r4.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putShort(int)>(i3);

        return;
    }

    public void visitMaxs(int, int)
    {
        org.springframework.asm.Label r1, r2, r4;
        org.springframework.asm.Edge r3;
        org.springframework.asm.MethodWriter r0;
        int i0, i1, i2, $i3, i4, $i5, $i6, i7;
        boolean $z0, $z1;

        r0 := @this: org.springframework.asm.MethodWriter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = r0.<org.springframework.asm.MethodWriter: boolean C>;

        if $z0 == 0 goto label7;

        i7 = 0;

        r1 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.Label G>;

     label1:
        if r1 == null goto label6;

        r2 = r1;

        r1 = r1.<org.springframework.asm.Label: org.springframework.asm.Label i>;

        i2 = r2.<org.springframework.asm.Label: int f>;

        $i3 = r2.<org.springframework.asm.Label: int g>;

        i4 = i2 + $i3;

        if i4 <= i7 goto label2;

        i7 = i4;

     label2:
        r3 = r2.<org.springframework.asm.Label: org.springframework.asm.Edge h>;

     label3:
        if r3 == null goto label5;

        r4 = r3.<org.springframework.asm.Edge: org.springframework.asm.Label b>;

        $z1 = r4.<org.springframework.asm.Label: boolean j>;

        if $z1 != 0 goto label4;

        $i5 = r3.<org.springframework.asm.Edge: int a>;

        $i6 = i2 + $i5;

        r4.<org.springframework.asm.Label: int f> = $i6;

        r4.<org.springframework.asm.Label: boolean j> = 1;

        r4.<org.springframework.asm.Label: org.springframework.asm.Label i> = r1;

        r1 = r4;

     label4:
        r3 = r3.<org.springframework.asm.Edge: org.springframework.asm.Edge c>;

        goto label3;

     label5:
        goto label1;

     label6:
        r0.<org.springframework.asm.MethodWriter: int q> = i7;

        goto label8;

     label7:
        r0.<org.springframework.asm.MethodWriter: int q> = i0;

        r0.<org.springframework.asm.MethodWriter: int r> = i1;

     label8:
        return;
    }

    public void visitEnd()
    {
        org.springframework.asm.MethodWriter r0;

        r0 := @this: org.springframework.asm.MethodWriter;

        return;
    }

    private static int a(java.lang.String)
    {
        byte $b9;
        int $i0, $i3, i6, i7, $i8, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i22, $i23, $i24;
        java.lang.String r0;
        char $c1, $c2, $c4, $c5;

        r0 := @parameter0: java.lang.String;

        i6 = 1;

        i7 = 1;

     label01:
        $i0 = i7;

        i7 = i7 + 1;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i0);

        $i11 = (int) $c1;

        if $i11 != 41 goto label06;

        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i7);

        $i8 = i6 << 2;

        $i12 = (int) $c5;

        if $i12 != 86 goto label02;

        $b9 = 0;

        goto label05;

     label02:
        $i13 = (int) $c5;

        if $i13 == 68 goto label03;

        $i14 = (int) $c5;

        if $i14 != 74 goto label04;

     label03:
        $b9 = 2;

        goto label05;

     label04:
        $b9 = 1;

     label05:
        $i10 = $i8 | $b9;

        return $i10;

     label06:
        $i15 = (int) $c1;

        if $i15 != 76 goto label09;

     label07:
        $i3 = i7;

        i7 = i7 + 1;

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i3);

        $i16 = (int) $c4;

        if $i16 == 59 goto label08;

        goto label07;

     label08:
        i6 = i6 + 1;

        goto label16;

     label09:
        $i17 = (int) $c1;

        if $i17 != 91 goto label13;

     label10:
        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i7);

        $i18 = (int) $c2;

        if $i18 != 91 goto label11;

        i7 = i7 + 1;

        goto label10;

     label11:
        $i19 = (int) $c2;

        if $i19 == 68 goto label12;

        $i20 = (int) $c2;

        if $i20 != 74 goto label16;

     label12:
        $i22 = (int) -1;

        i6 = i6 + $i22;

        goto label16;

     label13:
        $i23 = (int) $c1;

        if $i23 == 68 goto label14;

        $i24 = (int) $c1;

        if $i24 != 74 goto label15;

     label14:
        i6 = i6 + 2;

        goto label16;

     label15:
        i6 = i6 + 1;

     label16:
        goto label01;
    }

    private void a(int, org.springframework.asm.Label)
    {
        org.springframework.asm.Edge $r0, $r4;
        org.springframework.asm.MethodWriter r2;
        int i0;
        org.springframework.asm.Label r1, $r3, $r5;

        r2 := @this: org.springframework.asm.MethodWriter;

        i0 := @parameter0: int;

        r1 := @parameter1: org.springframework.asm.Label;

        $r0 = new org.springframework.asm.Edge;

        specialinvoke $r0.<org.springframework.asm.Edge: void <init>()>();

        $r0.<org.springframework.asm.Edge: int a> = i0;

        $r0.<org.springframework.asm.Edge: org.springframework.asm.Label b> = r1;

        $r3 = r2.<org.springframework.asm.MethodWriter: org.springframework.asm.Label F>;

        $r4 = $r3.<org.springframework.asm.Label: org.springframework.asm.Edge h>;

        $r0.<org.springframework.asm.Edge: org.springframework.asm.Edge c> = $r4;

        $r5 = r2.<org.springframework.asm.MethodWriter: org.springframework.asm.Label F>;

        $r5.<org.springframework.asm.Label: org.springframework.asm.Edge h> = $r0;

        return;
    }

    final int a()
    {
        byte[] $r48;
        java.lang.String $r32, $r59;
        org.springframework.asm.AnnotationWriter[] $r6, $r7, $r12, $r13, $r14, $r16, $r19, $r20, $r21, $r23;
        int[] $r57, $r58;
        boolean $z0;
        org.springframework.asm.MethodWriter r0;
        org.springframework.asm.ClassWriter $r2, $r9, $r11, $r18, $r25, $r27, $r29, $r31, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r49, $r51, $r53, $r55;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, i48, $i49, $i50, $i51, i52, $i53, i54, $i55, $i57, $i59, $i61, $i63, $i65;
        org.springframework.asm.AnnotationWriter $r4, $r5, $r15, $r17, $r22, $r24, $r26, $r28;
        org.springframework.asm.Attribute $r8, $r10, $r45, $r50;
        org.springframework.asm.ByteVector $r1, $r3, $r30, $r41, $r42, $r43, $r44, $r46, $r47, $r52, $r54, $r56;

        r0 := @this: org.springframework.asm.MethodWriter;

        $i0 = r0.<org.springframework.asm.MethodWriter: int I>;

        if $i0 == 0 goto label01;

        $i46 = r0.<org.springframework.asm.MethodWriter: int J>;

        $i47 = 6 + $i46;

        return $i47;

     label01:
        $z0 = r0.<org.springframework.asm.MethodWriter: boolean B>;

        if $z0 == 0 goto label02;

        $r58 = newarray (int)[0];

        $r57 = newarray (int)[0];

        specialinvoke r0.<org.springframework.asm.MethodWriter: int[] a(int[],int[],int)>($r58, $r57, 0);

     label02:
        i48 = 8;

        $r1 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector p>;

        $i1 = $r1.<org.springframework.asm.ByteVector: int b>;

        if $i1 <= 0 goto label06;

        $r40 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ClassWriter b>;

        virtualinvoke $r40.<org.springframework.asm.ClassWriter: int newUTF8(java.lang.String)>("Code");

        $r41 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector p>;

        $i31 = $r41.<org.springframework.asm.ByteVector: int b>;

        $i34 = 18 + $i31;

        $i32 = r0.<org.springframework.asm.MethodWriter: int s>;

        $i33 = 8 * $i32;

        $i35 = $i34 + $i33;

        i48 = 8 + $i35;

        $r42 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector v>;

        if $r42 == null goto label03;

        $r55 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ClassWriter b>;

        virtualinvoke $r55.<org.springframework.asm.ClassWriter: int newUTF8(java.lang.String)>("LocalVariableTable");

        $r56 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector v>;

        $i44 = $r56.<org.springframework.asm.ByteVector: int b>;

        $i45 = 8 + $i44;

        i48 = i48 + $i45;

     label03:
        $r43 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector x>;

        if $r43 == null goto label04;

        $r53 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ClassWriter b>;

        virtualinvoke $r53.<org.springframework.asm.ClassWriter: int newUTF8(java.lang.String)>("LocalVariableTypeTable");

        $r54 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector x>;

        $i42 = $r54.<org.springframework.asm.ByteVector: int b>;

        $i43 = 8 + $i42;

        i48 = i48 + $i43;

     label04:
        $r44 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector z>;

        if $r44 == null goto label05;

        $r51 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ClassWriter b>;

        virtualinvoke $r51.<org.springframework.asm.ClassWriter: int newUTF8(java.lang.String)>("LineNumberTable");

        $r52 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector z>;

        $i40 = $r52.<org.springframework.asm.ByteVector: int b>;

        $i41 = 8 + $i40;

        i48 = i48 + $i41;

     label05:
        $r45 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.Attribute A>;

        if $r45 == null goto label06;

        $r50 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.Attribute A>;

        $r49 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ClassWriter b>;

        $r46 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector p>;

        $r48 = $r46.<org.springframework.asm.ByteVector: byte[] a>;

        $r47 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector p>;

        $i38 = $r47.<org.springframework.asm.ByteVector: int b>;

        $i37 = r0.<org.springframework.asm.MethodWriter: int q>;

        $i36 = r0.<org.springframework.asm.MethodWriter: int r>;

        $i39 = virtualinvoke $r50.<org.springframework.asm.Attribute: int a(org.springframework.asm.ClassWriter,byte[],int,int,int)>($r49, $r48, $i38, $i37, $i36);

        i48 = i48 + $i39;

     label06:
        $i49 = r0.<org.springframework.asm.MethodWriter: int h>;

        if $i49 <= 0 goto label07;

        $r39 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ClassWriter b>;

        virtualinvoke $r39.<org.springframework.asm.ClassWriter: int newUTF8(java.lang.String)>("Exceptions");

        $i28 = r0.<org.springframework.asm.MethodWriter: int h>;

        $i29 = 2 * $i28;

        $i30 = 8 + $i29;

        i48 = i48 + $i30;

     label07:
        $i2 = r0.<org.springframework.asm.MethodWriter: int c>;

        $i3 = $i2 & 4096;

        if $i3 == 0 goto label08;

        $r37 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ClassWriter b>;

        $i26 = $r37.<org.springframework.asm.ClassWriter: int b>;

        $i57 = (int) 65535;

        $i27 = $i26 & $i57;

        if $i27 >= 49 goto label08;

        $r38 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ClassWriter b>;

        virtualinvoke $r38.<org.springframework.asm.ClassWriter: int newUTF8(java.lang.String)>("Synthetic");

        i48 = i48 + 6;

     label08:
        $i50 = r0.<org.springframework.asm.MethodWriter: int c>;

        $i51 = $i50 & 131072;

        if $i51 == 0 goto label09;

        $r36 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ClassWriter b>;

        virtualinvoke $r36.<org.springframework.asm.ClassWriter: int newUTF8(java.lang.String)>("Deprecated");

        i48 = i48 + 6;

     label09:
        $r2 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ClassWriter b>;

        $i4 = $r2.<org.springframework.asm.ClassWriter: int b>;

        if $i4 != 48 goto label11;

        $i22 = r0.<org.springframework.asm.MethodWriter: int c>;

        $i23 = $i22 & 128;

        if $i23 == 0 goto label10;

        $r35 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ClassWriter b>;

        virtualinvoke $r35.<org.springframework.asm.ClassWriter: int newUTF8(java.lang.String)>("Varargs");

        i48 = i48 + 6;

     label10:
        $i24 = r0.<org.springframework.asm.MethodWriter: int c>;

        $i25 = $i24 & 64;

        if $i25 == 0 goto label11;

        $r34 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ClassWriter b>;

        virtualinvoke $r34.<org.springframework.asm.ClassWriter: int newUTF8(java.lang.String)>("Bridge");

        i48 = i48 + 6;

     label11:
        $r59 = r0.<org.springframework.asm.MethodWriter: java.lang.String g>;

        if $r59 == null goto label12;

        $r31 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ClassWriter b>;

        virtualinvoke $r31.<org.springframework.asm.ClassWriter: int newUTF8(java.lang.String)>("Signature");

        $r33 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ClassWriter b>;

        $r32 = r0.<org.springframework.asm.MethodWriter: java.lang.String g>;

        virtualinvoke $r33.<org.springframework.asm.ClassWriter: int newUTF8(java.lang.String)>($r32);

        i48 = i48 + 8;

     label12:
        $r3 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector j>;

        if $r3 == null goto label13;

        $r29 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ClassWriter b>;

        virtualinvoke $r29.<org.springframework.asm.ClassWriter: int newUTF8(java.lang.String)>("AnnotationDefault");

        $r30 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector j>;

        $i20 = $r30.<org.springframework.asm.ByteVector: int b>;

        $i21 = 6 + $i20;

        i48 = i48 + $i21;

     label13:
        $r4 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.AnnotationWriter k>;

        if $r4 == null goto label14;

        $r27 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ClassWriter b>;

        virtualinvoke $r27.<org.springframework.asm.ClassWriter: int newUTF8(java.lang.String)>("RuntimeVisibleAnnotations");

        $r28 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.AnnotationWriter k>;

        $i18 = virtualinvoke $r28.<org.springframework.asm.AnnotationWriter: int a()>();

        $i19 = 8 + $i18;

        i48 = i48 + $i19;

     label14:
        $r5 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.AnnotationWriter l>;

        if $r5 == null goto label15;

        $r25 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ClassWriter b>;

        virtualinvoke $r25.<org.springframework.asm.ClassWriter: int newUTF8(java.lang.String)>("RuntimeInvisibleAnnotations");

        $r26 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.AnnotationWriter l>;

        $i16 = virtualinvoke $r26.<org.springframework.asm.AnnotationWriter: int a()>();

        $i17 = 8 + $i16;

        i48 = i48 + $i17;

     label15:
        $r6 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.AnnotationWriter[] m>;

        if $r6 == null goto label19;

        $r18 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ClassWriter b>;

        virtualinvoke $r18.<org.springframework.asm.ClassWriter: int newUTF8(java.lang.String)>("RuntimeVisibleParameterAnnotations");

        $r19 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.AnnotationWriter[] m>;

        $i11 = lengthof $r19;

        $i12 = 2 * $i11;

        $i13 = 7 + $i12;

        i48 = i48 + $i13;

        $r20 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.AnnotationWriter[] m>;

        $i14 = lengthof $r20;

        i52 = $i14 - 1;

     label16:
        if i52 < 0 goto label19;

        $i15 = i48;

        $r21 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.AnnotationWriter[] m>;

        $r22 = $r21[i52];

        if $r22 != null goto label17;

        $i53 = 0;

        goto label18;

     label17:
        $r23 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.AnnotationWriter[] m>;

        $r24 = $r23[i52];

        $i53 = virtualinvoke $r24.<org.springframework.asm.AnnotationWriter: int a()>();

     label18:
        i48 = $i15 + $i53;

        $i59 = (int) -1;

        i52 = i52 + $i59;

        goto label16;

     label19:
        $r7 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.AnnotationWriter[] n>;

        if $r7 == null goto label23;

        $r11 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ClassWriter b>;

        virtualinvoke $r11.<org.springframework.asm.ClassWriter: int newUTF8(java.lang.String)>("RuntimeInvisibleParameterAnnotations");

        $r12 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.AnnotationWriter[] n>;

        $i6 = lengthof $r12;

        $i7 = 2 * $i6;

        $i8 = 7 + $i7;

        i48 = i48 + $i8;

        $r13 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.AnnotationWriter[] n>;

        $i9 = lengthof $r13;

        i54 = $i9 - 1;

     label20:
        if i54 < 0 goto label23;

        $i10 = i48;

        $r14 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.AnnotationWriter[] n>;

        $r15 = $r14[i54];

        if $r15 != null goto label21;

        $i55 = 0;

        goto label22;

     label21:
        $r16 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.AnnotationWriter[] n>;

        $r17 = $r16[i54];

        $i55 = virtualinvoke $r17.<org.springframework.asm.AnnotationWriter: int a()>();

     label22:
        i48 = $i10 + $i55;

        $i61 = (int) -1;

        i54 = i54 + $i61;

        goto label20;

     label23:
        $r8 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.Attribute o>;

        if $r8 == null goto label24;

        $r10 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.Attribute o>;

        $r9 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ClassWriter b>;

        $i63 = (int) -1;

        $i65 = (int) -1;

        $i5 = virtualinvoke $r10.<org.springframework.asm.Attribute: int a(org.springframework.asm.ClassWriter,byte[],int,int,int)>($r9, null, 0, $i63, $i65);

        i48 = i48 + $i5;

     label24:
        return i48;
    }

    final void a(org.springframework.asm.ByteVector)
    {
        byte[] $r34, $r64, $r75, $r83, $r89, $r95, $r105, $r115;
        int[] $r51;
        org.springframework.asm.MethodWriter r1;
        org.springframework.asm.ClassWriter $r5, $r13, $r20, $r22, $r24, $r26, $r28, $r30, $r35, $r39, $r40, $r42, $r44, $r46, $r47, $r49, $r57, $r76, $r78, $r84, $r90, $r106, $r112, $r113;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, i92, $i93, $i94, i95, i96, $i97, i98, $i99, $i100, $i102, $i104, $i106, $i108;
        org.springframework.asm.Attribute $r11, $r19, $r21, $r56, $r68, $r72, $r77, $r96, $r107, $r111;
        org.springframework.asm.Handler r117;
        java.lang.String $r38, $r116, $r118;
        org.springframework.asm.AnnotationWriter[] $r9, $r10, $r17, $r18, $r23, $r25;
        org.springframework.asm.Label $r97, $r99, $r101;
        org.springframework.asm.AnnotationWriter $r7, $r8, $r15, $r16, $r27, $r29;
        org.springframework.asm.ClassReader $r114;
        org.springframework.asm.ByteVector r0, $r2, $r3, $r4, $r6, $r12, $r14, $r31, $r32, $r33, $r36, $r37, $r41, $r43, $r45, $r48, $r50, $r52, $r53, $r54, $r55, $r58, $r59, $r60, $r61, $r62, $r63, $r65, $r66, $r67, $r69, $r70, $r71, $r73, $r74, $r79, $r80, $r81, $r82, $r85, $r86, $r87, $r88, $r91, $r92, $r93, $r94, $r98, $r100, $r102, $r103, $r104, $r108, $r109, $r110;

        r1 := @this: org.springframework.asm.MethodWriter;

        r0 := @parameter0: org.springframework.asm.ByteVector;

        $i0 = r1.<org.springframework.asm.MethodWriter: int c>;

        $r2 = virtualinvoke r0.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putShort(int)>($i0);

        $i1 = r1.<org.springframework.asm.MethodWriter: int d>;

        $r3 = virtualinvoke $r2.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putShort(int)>($i1);

        $i2 = r1.<org.springframework.asm.MethodWriter: int e>;

        virtualinvoke $r3.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putShort(int)>($i2);

        $i3 = r1.<org.springframework.asm.MethodWriter: int I>;

        if $i3 == 0 goto label01;

        $r113 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ClassWriter b>;

        $r114 = $r113.<org.springframework.asm.ClassWriter: org.springframework.asm.ClassReader D>;

        $r115 = $r114.<org.springframework.asm.ClassReader: byte[] b>;

        $i91 = r1.<org.springframework.asm.MethodWriter: int I>;

        $i90 = r1.<org.springframework.asm.MethodWriter: int J>;

        virtualinvoke r0.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putByteArray(byte[],int,int)>($r115, $i91, $i90);

        return;

     label01:
        i92 = 0;

        $r4 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector p>;

        $i4 = $r4.<org.springframework.asm.ByteVector: int b>;

        if $i4 <= 0 goto label02;

        i92 = 1;

     label02:
        $i5 = r1.<org.springframework.asm.MethodWriter: int h>;

        if $i5 <= 0 goto label03;

        i92 = i92 + 1;

     label03:
        $i6 = r1.<org.springframework.asm.MethodWriter: int c>;

        $i7 = $i6 & 4096;

        if $i7 == 0 goto label04;

        $r112 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ClassWriter b>;

        $i88 = $r112.<org.springframework.asm.ClassWriter: int b>;

        $i102 = (int) 65535;

        $i89 = $i88 & $i102;

        if $i89 >= 49 goto label04;

        i92 = i92 + 1;

     label04:
        $i93 = r1.<org.springframework.asm.MethodWriter: int c>;

        $i94 = $i93 & 131072;

        if $i94 == 0 goto label05;

        i92 = i92 + 1;

     label05:
        $r5 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ClassWriter b>;

        $i8 = $r5.<org.springframework.asm.ClassWriter: int b>;

        if $i8 != 48 goto label07;

        $i84 = r1.<org.springframework.asm.MethodWriter: int c>;

        $i85 = $i84 & 128;

        if $i85 == 0 goto label06;

        i92 = i92 + 1;

     label06:
        $i86 = r1.<org.springframework.asm.MethodWriter: int c>;

        $i87 = $i86 & 64;

        if $i87 == 0 goto label07;

        i92 = i92 + 1;

     label07:
        $r116 = r1.<org.springframework.asm.MethodWriter: java.lang.String g>;

        if $r116 == null goto label08;

        i92 = i92 + 1;

     label08:
        $r6 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector j>;

        if $r6 == null goto label09;

        i92 = i92 + 1;

     label09:
        $r7 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.AnnotationWriter k>;

        if $r7 == null goto label10;

        i92 = i92 + 1;

     label10:
        $r8 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.AnnotationWriter l>;

        if $r8 == null goto label11;

        i92 = i92 + 1;

     label11:
        $r9 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.AnnotationWriter[] m>;

        if $r9 == null goto label12;

        i92 = i92 + 1;

     label12:
        $r10 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.AnnotationWriter[] n>;

        if $r10 == null goto label13;

        i92 = i92 + 1;

     label13:
        $r11 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.Attribute o>;

        if $r11 == null goto label14;

        $r111 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.Attribute o>;

        $i83 = virtualinvoke $r111.<org.springframework.asm.Attribute: int a()>();

        i92 = i92 + $i83;

     label14:
        virtualinvoke r0.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putShort(int)>(i92);

        $r12 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector p>;

        $i9 = $r12.<org.springframework.asm.ByteVector: int b>;

        if $i9 <= 0 goto label28;

        $r52 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector p>;

        $i39 = $r52.<org.springframework.asm.ByteVector: int b>;

        $i42 = 12 + $i39;

        $i40 = r1.<org.springframework.asm.MethodWriter: int s>;

        $i41 = 8 * $i40;

        i95 = $i42 + $i41;

        $r53 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector v>;

        if $r53 == null goto label15;

        $r110 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector v>;

        $i81 = $r110.<org.springframework.asm.ByteVector: int b>;

        $i82 = 8 + $i81;

        i95 = i95 + $i82;

     label15:
        $r54 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector x>;

        if $r54 == null goto label16;

        $r109 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector x>;

        $i79 = $r109.<org.springframework.asm.ByteVector: int b>;

        $i80 = 8 + $i79;

        i95 = i95 + $i80;

     label16:
        $r55 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector z>;

        if $r55 == null goto label17;

        $r108 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector z>;

        $i77 = $r108.<org.springframework.asm.ByteVector: int b>;

        $i78 = 8 + $i77;

        i95 = i95 + $i78;

     label17:
        $r56 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.Attribute A>;

        if $r56 == null goto label18;

        $r107 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.Attribute A>;

        $r106 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ClassWriter b>;

        $r103 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector p>;

        $r105 = $r103.<org.springframework.asm.ByteVector: byte[] a>;

        $r104 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector p>;

        $i75 = $r104.<org.springframework.asm.ByteVector: int b>;

        $i74 = r1.<org.springframework.asm.MethodWriter: int q>;

        $i73 = r1.<org.springframework.asm.MethodWriter: int r>;

        $i76 = virtualinvoke $r107.<org.springframework.asm.Attribute: int a(org.springframework.asm.ClassWriter,byte[],int,int,int)>($r106, $r105, $i75, $i74, $i73);

        i95 = i95 + $i76;

     label18:
        $r57 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ClassWriter b>;

        $i43 = virtualinvoke $r57.<org.springframework.asm.ClassWriter: int newUTF8(java.lang.String)>("Code");

        $r58 = virtualinvoke r0.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putShort(int)>($i43);

        virtualinvoke $r58.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putInt(int)>(i95);

        $i44 = r1.<org.springframework.asm.MethodWriter: int q>;

        $r59 = virtualinvoke r0.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putShort(int)>($i44);

        $i45 = r1.<org.springframework.asm.MethodWriter: int r>;

        virtualinvoke $r59.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putShort(int)>($i45);

        $r60 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector p>;

        $i46 = $r60.<org.springframework.asm.ByteVector: int b>;

        $r61 = virtualinvoke r0.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putInt(int)>($i46);

        $r62 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector p>;

        $r64 = $r62.<org.springframework.asm.ByteVector: byte[] a>;

        $r63 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector p>;

        $i47 = $r63.<org.springframework.asm.ByteVector: int b>;

        virtualinvoke $r61.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putByteArray(byte[],int,int)>($r64, 0, $i47);

        $i48 = r1.<org.springframework.asm.MethodWriter: int s>;

        virtualinvoke r0.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putShort(int)>($i48);

        $i49 = r1.<org.springframework.asm.MethodWriter: int s>;

        if $i49 <= 0 goto label20;

        r117 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.Handler t>;

     label19:
        if r117 == null goto label20;

        $r97 = r117.<org.springframework.asm.Handler: org.springframework.asm.Label a>;

        $i69 = $r97.<org.springframework.asm.Label: int b>;

        $r98 = virtualinvoke r0.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putShort(int)>($i69);

        $r99 = r117.<org.springframework.asm.Handler: org.springframework.asm.Label b>;

        $i70 = $r99.<org.springframework.asm.Label: int b>;

        $r100 = virtualinvoke $r98.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putShort(int)>($i70);

        $r101 = r117.<org.springframework.asm.Handler: org.springframework.asm.Label c>;

        $i71 = $r101.<org.springframework.asm.Label: int b>;

        $r102 = virtualinvoke $r100.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putShort(int)>($i71);

        $i72 = r117.<org.springframework.asm.Handler: int e>;

        virtualinvoke $r102.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putShort(int)>($i72);

        r117 = r117.<org.springframework.asm.Handler: org.springframework.asm.Handler f>;

        goto label19;

     label20:
        i96 = 0;

        $r65 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector v>;

        if $r65 == null goto label21;

        i96 = 1;

     label21:
        $r66 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector x>;

        if $r66 == null goto label22;

        i96 = i96 + 1;

     label22:
        $r67 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector z>;

        if $r67 == null goto label23;

        i96 = i96 + 1;

     label23:
        $r68 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.Attribute A>;

        if $r68 == null goto label24;

        $r96 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.Attribute A>;

        $i68 = virtualinvoke $r96.<org.springframework.asm.Attribute: int a()>();

        i96 = i96 + $i68;

     label24:
        virtualinvoke r0.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putShort(int)>(i96);

        $r69 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector v>;

        if $r69 == null goto label25;

        $r90 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ClassWriter b>;

        $i63 = virtualinvoke $r90.<org.springframework.asm.ClassWriter: int newUTF8(java.lang.String)>("LocalVariableTable");

        virtualinvoke r0.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putShort(int)>($i63);

        $r91 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector v>;

        $i64 = $r91.<org.springframework.asm.ByteVector: int b>;

        $i65 = $i64 + 2;

        $r92 = virtualinvoke r0.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putInt(int)>($i65);

        $i66 = r1.<org.springframework.asm.MethodWriter: int u>;

        virtualinvoke $r92.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putShort(int)>($i66);

        $r93 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector v>;

        $r95 = $r93.<org.springframework.asm.ByteVector: byte[] a>;

        $r94 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector v>;

        $i67 = $r94.<org.springframework.asm.ByteVector: int b>;

        virtualinvoke r0.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putByteArray(byte[],int,int)>($r95, 0, $i67);

     label25:
        $r70 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector x>;

        if $r70 == null goto label26;

        $r84 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ClassWriter b>;

        $i58 = virtualinvoke $r84.<org.springframework.asm.ClassWriter: int newUTF8(java.lang.String)>("LocalVariableTypeTable");

        virtualinvoke r0.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putShort(int)>($i58);

        $r85 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector x>;

        $i59 = $r85.<org.springframework.asm.ByteVector: int b>;

        $i60 = $i59 + 2;

        $r86 = virtualinvoke r0.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putInt(int)>($i60);

        $i61 = r1.<org.springframework.asm.MethodWriter: int w>;

        virtualinvoke $r86.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putShort(int)>($i61);

        $r87 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector x>;

        $r89 = $r87.<org.springframework.asm.ByteVector: byte[] a>;

        $r88 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector x>;

        $i62 = $r88.<org.springframework.asm.ByteVector: int b>;

        virtualinvoke r0.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putByteArray(byte[],int,int)>($r89, 0, $i62);

     label26:
        $r71 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector z>;

        if $r71 == null goto label27;

        $r78 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ClassWriter b>;

        $i53 = virtualinvoke $r78.<org.springframework.asm.ClassWriter: int newUTF8(java.lang.String)>("LineNumberTable");

        virtualinvoke r0.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putShort(int)>($i53);

        $r79 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector z>;

        $i54 = $r79.<org.springframework.asm.ByteVector: int b>;

        $i55 = $i54 + 2;

        $r80 = virtualinvoke r0.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putInt(int)>($i55);

        $i56 = r1.<org.springframework.asm.MethodWriter: int y>;

        virtualinvoke $r80.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putShort(int)>($i56);

        $r81 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector z>;

        $r83 = $r81.<org.springframework.asm.ByteVector: byte[] a>;

        $r82 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector z>;

        $i57 = $r82.<org.springframework.asm.ByteVector: int b>;

        virtualinvoke r0.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putByteArray(byte[],int,int)>($r83, 0, $i57);

     label27:
        $r72 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.Attribute A>;

        if $r72 == null goto label28;

        $r77 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.Attribute A>;

        $r76 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ClassWriter b>;

        $r73 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector p>;

        $r75 = $r73.<org.springframework.asm.ByteVector: byte[] a>;

        $r74 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector p>;

        $i52 = $r74.<org.springframework.asm.ByteVector: int b>;

        $i51 = r1.<org.springframework.asm.MethodWriter: int r>;

        $i50 = r1.<org.springframework.asm.MethodWriter: int q>;

        virtualinvoke $r77.<org.springframework.asm.Attribute: void a(org.springframework.asm.ClassWriter,byte[],int,int,int,org.springframework.asm.ByteVector)>($r76, $r75, $i52, $i51, $i50, r0);

     label28:
        $i97 = r1.<org.springframework.asm.MethodWriter: int h>;

        if $i97 <= 0 goto label30;

        $r49 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ClassWriter b>;

        $i32 = virtualinvoke $r49.<org.springframework.asm.ClassWriter: int newUTF8(java.lang.String)>("Exceptions");

        $r50 = virtualinvoke r0.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putShort(int)>($i32);

        $i33 = r1.<org.springframework.asm.MethodWriter: int h>;

        $i34 = 2 * $i33;

        $i35 = $i34 + 2;

        virtualinvoke $r50.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putInt(int)>($i35);

        $i36 = r1.<org.springframework.asm.MethodWriter: int h>;

        virtualinvoke r0.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putShort(int)>($i36);

        i98 = 0;

     label29:
        $i37 = r1.<org.springframework.asm.MethodWriter: int h>;

        if i98 >= $i37 goto label30;

        $r51 = r1.<org.springframework.asm.MethodWriter: int[] i>;

        $i38 = $r51[i98];

        virtualinvoke r0.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putShort(int)>($i38);

        i98 = i98 + 1;

        goto label29;

     label30:
        $i10 = r1.<org.springframework.asm.MethodWriter: int c>;

        $i11 = $i10 & 4096;

        if $i11 == 0 goto label31;

        $r46 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ClassWriter b>;

        $i29 = $r46.<org.springframework.asm.ClassWriter: int b>;

        $i104 = (int) 65535;

        $i30 = $i29 & $i104;

        if $i30 >= 49 goto label31;

        $r47 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ClassWriter b>;

        $i31 = virtualinvoke $r47.<org.springframework.asm.ClassWriter: int newUTF8(java.lang.String)>("Synthetic");

        $r48 = virtualinvoke r0.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putShort(int)>($i31);

        virtualinvoke $r48.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putInt(int)>(0);

     label31:
        $i99 = r1.<org.springframework.asm.MethodWriter: int c>;

        $i100 = $i99 & 131072;

        if $i100 == 0 goto label32;

        $r44 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ClassWriter b>;

        $i28 = virtualinvoke $r44.<org.springframework.asm.ClassWriter: int newUTF8(java.lang.String)>("Deprecated");

        $r45 = virtualinvoke r0.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putShort(int)>($i28);

        virtualinvoke $r45.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putInt(int)>(0);

     label32:
        $r13 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ClassWriter b>;

        $i12 = $r13.<org.springframework.asm.ClassWriter: int b>;

        if $i12 != 48 goto label34;

        $i22 = r1.<org.springframework.asm.MethodWriter: int c>;

        $i23 = $i22 & 128;

        if $i23 == 0 goto label33;

        $r42 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ClassWriter b>;

        $i27 = virtualinvoke $r42.<org.springframework.asm.ClassWriter: int newUTF8(java.lang.String)>("Varargs");

        $r43 = virtualinvoke r0.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putShort(int)>($i27);

        virtualinvoke $r43.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putInt(int)>(0);

     label33:
        $i24 = r1.<org.springframework.asm.MethodWriter: int c>;

        $i25 = $i24 & 64;

        if $i25 == 0 goto label34;

        $r40 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ClassWriter b>;

        $i26 = virtualinvoke $r40.<org.springframework.asm.ClassWriter: int newUTF8(java.lang.String)>("Bridge");

        $r41 = virtualinvoke r0.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putShort(int)>($i26);

        virtualinvoke $r41.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putInt(int)>(0);

     label34:
        $r118 = r1.<org.springframework.asm.MethodWriter: java.lang.String g>;

        if $r118 == null goto label35;

        $r35 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ClassWriter b>;

        $i20 = virtualinvoke $r35.<org.springframework.asm.ClassWriter: int newUTF8(java.lang.String)>("Signature");

        $r36 = virtualinvoke r0.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putShort(int)>($i20);

        $r37 = virtualinvoke $r36.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putInt(int)>(2);

        $r39 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ClassWriter b>;

        $r38 = r1.<org.springframework.asm.MethodWriter: java.lang.String g>;

        $i21 = virtualinvoke $r39.<org.springframework.asm.ClassWriter: int newUTF8(java.lang.String)>($r38);

        virtualinvoke $r37.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putShort(int)>($i21);

     label35:
        $r14 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector j>;

        if $r14 == null goto label36;

        $r30 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ClassWriter b>;

        $i17 = virtualinvoke $r30.<org.springframework.asm.ClassWriter: int newUTF8(java.lang.String)>("AnnotationDefault");

        virtualinvoke r0.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putShort(int)>($i17);

        $r31 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector j>;

        $i18 = $r31.<org.springframework.asm.ByteVector: int b>;

        virtualinvoke r0.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putInt(int)>($i18);

        $r32 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector j>;

        $r34 = $r32.<org.springframework.asm.ByteVector: byte[] a>;

        $r33 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector j>;

        $i19 = $r33.<org.springframework.asm.ByteVector: int b>;

        virtualinvoke r0.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putByteArray(byte[],int,int)>($r34, 0, $i19);

     label36:
        $r15 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.AnnotationWriter k>;

        if $r15 == null goto label37;

        $r28 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ClassWriter b>;

        $i16 = virtualinvoke $r28.<org.springframework.asm.ClassWriter: int newUTF8(java.lang.String)>("RuntimeVisibleAnnotations");

        virtualinvoke r0.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putShort(int)>($i16);

        $r29 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.AnnotationWriter k>;

        virtualinvoke $r29.<org.springframework.asm.AnnotationWriter: void a(org.springframework.asm.ByteVector)>(r0);

     label37:
        $r16 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.AnnotationWriter l>;

        if $r16 == null goto label38;

        $r26 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ClassWriter b>;

        $i15 = virtualinvoke $r26.<org.springframework.asm.ClassWriter: int newUTF8(java.lang.String)>("RuntimeInvisibleAnnotations");

        virtualinvoke r0.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putShort(int)>($i15);

        $r27 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.AnnotationWriter l>;

        virtualinvoke $r27.<org.springframework.asm.AnnotationWriter: void a(org.springframework.asm.ByteVector)>(r0);

     label38:
        $r17 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.AnnotationWriter[] m>;

        if $r17 == null goto label39;

        $r24 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ClassWriter b>;

        $i14 = virtualinvoke $r24.<org.springframework.asm.ClassWriter: int newUTF8(java.lang.String)>("RuntimeVisibleParameterAnnotations");

        virtualinvoke r0.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putShort(int)>($i14);

        $r25 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.AnnotationWriter[] m>;

        staticinvoke <org.springframework.asm.AnnotationWriter: void a(org.springframework.asm.AnnotationWriter[],org.springframework.asm.ByteVector)>($r25, r0);

     label39:
        $r18 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.AnnotationWriter[] n>;

        if $r18 == null goto label40;

        $r22 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ClassWriter b>;

        $i13 = virtualinvoke $r22.<org.springframework.asm.ClassWriter: int newUTF8(java.lang.String)>("RuntimeInvisibleParameterAnnotations");

        virtualinvoke r0.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putShort(int)>($i13);

        $r23 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.AnnotationWriter[] n>;

        staticinvoke <org.springframework.asm.AnnotationWriter: void a(org.springframework.asm.AnnotationWriter[],org.springframework.asm.ByteVector)>($r23, r0);

     label40:
        $r19 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.Attribute o>;

        if $r19 == null goto label41;

        $r21 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.Attribute o>;

        $r20 = r1.<org.springframework.asm.MethodWriter: org.springframework.asm.ClassWriter b>;

        $i106 = (int) -1;

        $i108 = (int) -1;

        virtualinvoke $r21.<org.springframework.asm.Attribute: void a(org.springframework.asm.ClassWriter,byte[],int,int,int,org.springframework.asm.ByteVector)>($r20, null, 0, $i106, $i108, r0);

     label41:
        return;
    }

    private int[] a(int[], int[], int)
    {
        byte[] $r21, $r22, r24, r31, r32;
        byte $b18, $b19, $b21, $b62, $b63, $b65;
        short $s49, $s79, s108, s131, $s143, $s158;
        org.springframework.asm.Label[] $r11;
        boolean[] r5;
        int[] r2, r3, r23, r25, r26, r27;
        org.springframework.asm.MethodWriter r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i20, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i64, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i80, $i81, $i82, i83, i84, $i85, i86, i87, $i88, i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $i105, $i106, $i107, i109, i110, i111, $i112, i113, i114, $i115, i116, i117, i118, i119, i120, i121, i122, i123, i124, i125, i126, i127, i128, i129, i130, i132, i133, i134, i135, i136, i137, $i138, $i139, $i140, $i142, $i144, $i146, $i148, $i149, $i150, $i151, $i153, $i155, $i157, $i159, $i161;
        org.springframework.asm.Attribute $r10, $r33;
        org.springframework.asm.Handler r28;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.springframework.asm.Label $r12, $r13, $r14, $r15, $r18, $r19, $r20;
        org.springframework.asm.ByteVector $r1, $r4, $r7, $r8, $r9, $r16, $r17, $r29, r30, $r34;

        r0 := @this: org.springframework.asm.MethodWriter;

        r2 := @parameter0: int[];

        r3 := @parameter1: int[];

        i0 := @parameter2: int;

        $r1 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector p>;

        r24 = $r1.<org.springframework.asm.ByteVector: byte[] a>;

        r25 = newarray (int)[i0];

        r26 = newarray (int)[i0];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r25, 0, i0);

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, 0, r26, 0, i0);

        $r4 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector p>;

        $i1 = $r4.<org.springframework.asm.ByteVector: int b>;

        r5 = newarray (boolean)[$i1];

        i83 = 3;

     label01:
        if i83 != 3 goto label02;

        i83 = 2;

     label02:
        i84 = 0;

     label03:
        $i85 = lengthof r24;

        if i84 >= $i85 goto label30;

        $b62 = r24[i84];

        $i138 = (int) $b62;

        i86 = $i138 & 255;

        i87 = 0;

        $r22 = <org.springframework.asm.ClassWriter: byte[] a>;

        $b63 = $r22[i86];

        $i139 = (int) $b63;

        tableswitch($i139)
        {
            case 0: goto label04;
            case 1: goto label24;
            case 2: goto label25;
            case 3: goto label24;
            case 4: goto label04;
            case 5: goto label25;
            case 6: goto label25;
            case 7: goto label26;
            case 8: goto label05;
            case 9: goto label15;
            case 10: goto label24;
            case 11: goto label25;
            case 12: goto label25;
            case 13: goto label16;
            case 14: goto label19;
            case 15: goto label27;
            case 16: goto label22;
            default: goto label27;
        };

     label04:
        i84 = i84 + 1;

        goto label28;

     label05:
        if i86 <= 201 goto label08;

        if i86 >= 218 goto label06;

        $i88 = i86 - 49;

        goto label07;

     label06:
        $i88 = i86 - 20;

     label07:
        i86 = $i88;

        $i81 = i84 + 1;

        $i82 = staticinvoke <org.springframework.asm.MethodWriter: int c(byte[],int)>(r24, $i81);

        i89 = i84 + $i82;

        goto label09;

     label08:
        $i78 = i84 + 1;

        $s79 = staticinvoke <org.springframework.asm.MethodWriter: short b(byte[],int)>(r24, $i78);

        $i140 = (int) $s79;

        i89 = i84 + $i140;

     label09:
        $i80 = staticinvoke <org.springframework.asm.MethodWriter: int a(int[],int[],int,int)>(r25, r26, i84, i89);

        $i142 = (int) -32768;

        if $i80 < $i142 goto label10;

        if $i80 <= 32767 goto label14;

     label10:
        $z4 = r5[i84];

        if $z4 != 0 goto label14;

        if i86 == 167 goto label11;

        if i86 != 168 goto label12;

     label11:
        i87 = 2;

        goto label13;

     label12:
        i87 = 5;

     label13:
        r5[i84] = 1;

     label14:
        i84 = i84 + 3;

        goto label28;

     label15:
        i84 = i84 + 5;

        goto label28;

     label16:
        if i83 != 1 goto label17;

        $i76 = staticinvoke <org.springframework.asm.MethodWriter: int a(int[],int[],int,int)>(r25, r26, 0, i84);

        $i77 = $i76 & 3;

        i87 = neg $i77;

        goto label18;

     label17:
        $z3 = r5[i84];

        if $z3 != 0 goto label18;

        i87 = i84 & 3;

        r5[i84] = 1;

     label18:
        $i90 = i84 + 4;

        $i91 = i84 & 3;

        $i92 = $i90 - $i91;

        $i93 = $i92 + 8;

        $i94 = staticinvoke <org.springframework.asm.MethodWriter: int a(byte[],int)>(r24, $i93);

        $i95 = $i92 + 4;

        $i96 = staticinvoke <org.springframework.asm.MethodWriter: int a(byte[],int)>(r24, $i95);

        $i97 = $i94 - $i96;

        $i98 = $i97 + 1;

        $i99 = 4 * $i98;

        $i100 = $i99 + 12;

        i84 = $i92 + $i100;

        goto label28;

     label19:
        if i83 != 1 goto label20;

        $i74 = staticinvoke <org.springframework.asm.MethodWriter: int a(int[],int[],int,int)>(r25, r26, 0, i84);

        $i75 = $i74 & 3;

        i87 = neg $i75;

        goto label21;

     label20:
        $z2 = r5[i84];

        if $z2 != 0 goto label21;

        i87 = i84 & 3;

        r5[i84] = 1;

     label21:
        $i101 = i84 + 4;

        $i102 = i84 & 3;

        $i103 = $i101 - $i102;

        $i104 = $i103 + 4;

        $i105 = staticinvoke <org.springframework.asm.MethodWriter: int a(byte[],int)>(r24, $i104);

        $i106 = 8 * $i105;

        $i107 = $i106 + 8;

        i84 = $i103 + $i107;

        goto label28;

     label22:
        $i64 = i84 + 1;

        $b65 = r24[$i64];

        $s143 = (short) $b65;

        s108 = $s143 & 255;

        $i144 = (int) s108;

        if $i144 != 132 goto label23;

        i84 = i84 + 6;

        goto label28;

     label23:
        i84 = i84 + 4;

        goto label28;

     label24:
        i84 = i84 + 2;

        goto label28;

     label25:
        i84 = i84 + 3;

        goto label28;

     label26:
        i84 = i84 + 5;

        goto label28;

     label27:
        i84 = i84 + 4;

     label28:
        if i87 == 0 goto label29;

        $i66 = lengthof r25;

        $i67 = $i66 + 1;

        r27 = newarray (int)[$i67];

        $i68 = lengthof r26;

        $i69 = $i68 + 1;

        r23 = newarray (int)[$i69];

        $i70 = lengthof r25;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r25, 0, r27, 0, $i70);

        $i71 = lengthof r26;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r26, 0, r23, 0, $i71);

        $i72 = lengthof r25;

        r27[$i72] = i84;

        $i73 = lengthof r26;

        r23[$i73] = i87;

        r25 = r27;

        r26 = r23;

        if i87 <= 0 goto label29;

        i83 = 3;

     label29:
        goto label03;

     label30:
        if i83 >= 3 goto label31;

        $i146 = (int) -1;

        i83 = i83 + $i146;

     label31:
        if i83 != 0 goto label01;

        $r34 = new org.springframework.asm.ByteVector;

        $r7 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector p>;

        $i2 = $r7.<org.springframework.asm.ByteVector: int b>;

        specialinvoke $r34.<org.springframework.asm.ByteVector: void <init>(int)>($i2);

        i109 = 0;

     label32:
        $r8 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector p>;

        $i3 = $r8.<org.springframework.asm.ByteVector: int b>;

        if i109 >= $i3 goto label67;

        $i17 = lengthof r25;

        i110 = $i17 - 1;

     label33:
        if i110 < 0 goto label37;

        $i55 = r25[i110];

        if $i55 != i109 goto label36;

        if i110 >= i0 goto label36;

        $i56 = r3[i110];

        if $i56 <= 0 goto label34;

        $i61 = r3[i110];

        virtualinvoke $r34.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putByteArray(byte[],int,int)>(null, 0, $i61);

        goto label35;

     label34:
        $i58 = $r34.<org.springframework.asm.ByteVector: int b>;

        $i57 = r3[i110];

        $i59 = $i58 + $i57;

        $r34.<org.springframework.asm.ByteVector: int b> = $i59;

     label35:
        $i60 = $r34.<org.springframework.asm.ByteVector: int b>;

        r2[i110] = $i60;

     label36:
        $i148 = (int) -1;

        i110 = i110 + $i148;

        goto label33;

     label37:
        $b18 = r24[i109];

        $i149 = (int) $b18;

        i111 = $i149 & 255;

        $r21 = <org.springframework.asm.ClassWriter: byte[] a>;

        $b19 = $r21[i111];

        $i150 = (int) $b19;

        tableswitch($i150)
        {
            case 0: goto label38;
            case 1: goto label62;
            case 2: goto label63;
            case 3: goto label62;
            case 4: goto label38;
            case 5: goto label63;
            case 6: goto label63;
            case 7: goto label64;
            case 8: goto label39;
            case 9: goto label51;
            case 10: goto label62;
            case 11: goto label63;
            case 12: goto label63;
            case 13: goto label52;
            case 14: goto label56;
            case 15: goto label65;
            case 16: goto label60;
            default: goto label65;
        };

     label38:
        virtualinvoke $r34.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putByte(int)>(i111);

        i109 = i109 + 1;

        goto label66;

     label39:
        if i111 <= 201 goto label42;

        if i111 >= 218 goto label40;

        $i112 = i111 - 49;

        goto label41;

     label40:
        $i112 = i111 - 20;

     label41:
        i111 = $i112;

        $i53 = i109 + 1;

        $i54 = staticinvoke <org.springframework.asm.MethodWriter: int c(byte[],int)>(r24, $i53);

        i113 = i109 + $i54;

        goto label43;

     label42:
        $i48 = i109 + 1;

        $s49 = staticinvoke <org.springframework.asm.MethodWriter: short b(byte[],int)>(r24, $i48);

        $i151 = (int) $s49;

        i113 = i109 + $i151;

     label43:
        $i50 = staticinvoke <org.springframework.asm.MethodWriter: int a(int[],int[],int,int)>(r25, r26, i109, i113);

        i114 = $i50;

        $z1 = r5[i109];

        if $z1 == 0 goto label49;

        if i111 != 167 goto label44;

        virtualinvoke $r34.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putByte(int)>(200);

        goto label48;

     label44:
        if i111 != 168 goto label45;

        virtualinvoke $r34.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putByte(int)>(201);

        goto label48;

     label45:
        if i111 > 166 goto label46;

        $i51 = i111 + 1;

        $i52 = $i51 ^ 1;

        $i115 = $i52 - 1;

        goto label47;

     label46:
        $i115 = i111 ^ 1;

     label47:
        virtualinvoke $r34.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putByte(int)>($i115);

        virtualinvoke $r34.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putShort(int)>(8);

        virtualinvoke $r34.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putByte(int)>(200);

        $i153 = (int) -3;

        i114 = $i50 + $i153;

     label48:
        virtualinvoke $r34.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putInt(int)>(i114);

        goto label50;

     label49:
        virtualinvoke $r34.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putByte(int)>(i111);

        virtualinvoke $r34.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putShort(int)>($i50);

     label50:
        i109 = i109 + 3;

        goto label66;

     label51:
        $i45 = i109 + 1;

        $i46 = staticinvoke <org.springframework.asm.MethodWriter: int a(byte[],int)>(r24, $i45);

        i116 = i109 + $i46;

        $i47 = staticinvoke <org.springframework.asm.MethodWriter: int a(int[],int[],int,int)>(r25, r26, i109, i116);

        virtualinvoke $r34.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putByte(int)>(i111);

        virtualinvoke $r34.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putInt(int)>($i47);

        i109 = i109 + 5;

        goto label66;

     label52:
        i117 = i109;

        $i33 = i109 + 4;

        $i32 = i109 & 3;

        i118 = $i33 - $i32;

        virtualinvoke $r34.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putByte(int)>(170);

     label53:
        $i34 = $r34.<org.springframework.asm.ByteVector: int b>;

        $i35 = $i34 % 4;

        if $i35 == 0 goto label54;

        virtualinvoke $r34.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putByte(int)>(0);

        goto label53;

     label54:
        $i36 = staticinvoke <org.springframework.asm.MethodWriter: int a(byte[],int)>(r24, i118);

        i119 = i117 + $i36;

        i120 = i118 + 4;

        $i37 = staticinvoke <org.springframework.asm.MethodWriter: int a(int[],int[],int,int)>(r25, r26, i117, i119);

        virtualinvoke $r34.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putInt(int)>($i37);

        $i38 = staticinvoke <org.springframework.asm.MethodWriter: int a(byte[],int)>(r24, i120);

        i121 = i120 + 4;

        virtualinvoke $r34.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putInt(int)>($i38);

        $i39 = staticinvoke <org.springframework.asm.MethodWriter: int a(byte[],int)>(r24, i121);

        $i40 = $i39 - $i38;

        i122 = $i40 + 1;

        i109 = i121 + 4;

        $i41 = i109 - 4;

        $i42 = staticinvoke <org.springframework.asm.MethodWriter: int a(byte[],int)>(r24, $i41);

        virtualinvoke $r34.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putInt(int)>($i42);

     label55:
        if i122 <= 0 goto label66;

        $i43 = staticinvoke <org.springframework.asm.MethodWriter: int a(byte[],int)>(r24, i109);

        i123 = i117 + $i43;

        i109 = i109 + 4;

        $i44 = staticinvoke <org.springframework.asm.MethodWriter: int a(int[],int[],int,int)>(r25, r26, i117, i123);

        virtualinvoke $r34.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putInt(int)>($i44);

        $i155 = (int) -1;

        i122 = i122 + $i155;

        goto label55;

     label56:
        i124 = i109;

        $i23 = i109 + 4;

        $i22 = i109 & 3;

        i125 = $i23 - $i22;

        virtualinvoke $r34.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putByte(int)>(171);

     label57:
        $i24 = $r34.<org.springframework.asm.ByteVector: int b>;

        $i25 = $i24 % 4;

        if $i25 == 0 goto label58;

        virtualinvoke $r34.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putByte(int)>(0);

        goto label57;

     label58:
        $i26 = staticinvoke <org.springframework.asm.MethodWriter: int a(byte[],int)>(r24, i125);

        i126 = i124 + $i26;

        i127 = i125 + 4;

        $i27 = staticinvoke <org.springframework.asm.MethodWriter: int a(int[],int[],int,int)>(r25, r26, i124, i126);

        virtualinvoke $r34.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putInt(int)>($i27);

        $i28 = staticinvoke <org.springframework.asm.MethodWriter: int a(byte[],int)>(r24, i127);

        i128 = $i28;

        i109 = i127 + 4;

        virtualinvoke $r34.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putInt(int)>($i28);

     label59:
        if i128 <= 0 goto label66;

        $i29 = staticinvoke <org.springframework.asm.MethodWriter: int a(byte[],int)>(r24, i109);

        virtualinvoke $r34.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putInt(int)>($i29);

        i129 = i109 + 4;

        $i30 = staticinvoke <org.springframework.asm.MethodWriter: int a(byte[],int)>(r24, i129);

        i130 = i124 + $i30;

        i109 = i129 + 4;

        $i31 = staticinvoke <org.springframework.asm.MethodWriter: int a(int[],int[],int,int)>(r25, r26, i124, i130);

        virtualinvoke $r34.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putInt(int)>($i31);

        $i157 = (int) -1;

        i128 = i128 + $i157;

        goto label59;

     label60:
        $i20 = i109 + 1;

        $b21 = r24[$i20];

        $s158 = (short) $b21;

        s131 = $s158 & 255;

        $i159 = (int) s131;

        if $i159 != 132 goto label61;

        virtualinvoke $r34.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putByteArray(byte[],int,int)>(r24, i109, 6);

        i109 = i109 + 6;

        goto label66;

     label61:
        virtualinvoke $r34.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putByteArray(byte[],int,int)>(r24, i109, 4);

        i109 = i109 + 4;

        goto label66;

     label62:
        virtualinvoke $r34.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putByteArray(byte[],int,int)>(r24, i109, 2);

        i109 = i109 + 2;

        goto label66;

     label63:
        virtualinvoke $r34.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putByteArray(byte[],int,int)>(r24, i109, 3);

        i109 = i109 + 3;

        goto label66;

     label64:
        virtualinvoke $r34.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putByteArray(byte[],int,int)>(r24, i109, 5);

        i109 = i109 + 5;

        goto label66;

     label65:
        virtualinvoke $r34.<org.springframework.asm.ByteVector: org.springframework.asm.ByteVector putByteArray(byte[],int,int)>(r24, i109, 4);

        i109 = i109 + 4;

     label66:
        goto label32;

     label67:
        r28 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.Handler t>;

     label68:
        if r28 == null goto label69;

        $r18 = r28.<org.springframework.asm.Handler: org.springframework.asm.Label a>;

        staticinvoke <org.springframework.asm.MethodWriter: void a(int[],int[],org.springframework.asm.Label)>(r25, r26, $r18);

        $r19 = r28.<org.springframework.asm.Handler: org.springframework.asm.Label b>;

        staticinvoke <org.springframework.asm.MethodWriter: void a(int[],int[],org.springframework.asm.Label)>(r25, r26, $r19);

        $r20 = r28.<org.springframework.asm.Handler: org.springframework.asm.Label c>;

        staticinvoke <org.springframework.asm.MethodWriter: void a(int[],int[],org.springframework.asm.Label)>(r25, r26, $r20);

        r28 = r28.<org.springframework.asm.Handler: org.springframework.asm.Handler f>;

        goto label68;

     label69:
        i132 = 0;

     label70:
        if i132 >= 2 goto label75;

        if i132 != 0 goto label71;

        $r29 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector v>;

        goto label72;

     label71:
        $r29 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector x>;

     label72:
        r30 = $r29;

        if $r29 == null goto label74;

        r31 = $r29.<org.springframework.asm.ByteVector: byte[] a>;

        i133 = 0;

     label73:
        $i10 = r30.<org.springframework.asm.ByteVector: int b>;

        if i133 >= $i10 goto label74;

        $i11 = staticinvoke <org.springframework.asm.MethodWriter: int c(byte[],int)>(r31, i133);

        $i12 = staticinvoke <org.springframework.asm.MethodWriter: int a(int[],int[],int,int)>(r25, r26, 0, $i11);

        staticinvoke <org.springframework.asm.MethodWriter: void a(byte[],int,int)>(r31, i133, $i12);

        $i13 = i133 + 2;

        $i14 = staticinvoke <org.springframework.asm.MethodWriter: int c(byte[],int)>(r31, $i13);

        i134 = $i11 + $i14;

        $i15 = staticinvoke <org.springframework.asm.MethodWriter: int a(int[],int[],int,int)>(r25, r26, 0, i134);

        i135 = $i15 - $i12;

        $i16 = i133 + 2;

        staticinvoke <org.springframework.asm.MethodWriter: void a(byte[],int,int)>(r31, $i16, i135);

        i133 = i133 + 10;

        goto label73;

     label74:
        i132 = i132 + 1;

        goto label70;

     label75:
        $r9 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector z>;

        if $r9 == null goto label77;

        $r16 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector z>;

        r32 = $r16.<org.springframework.asm.ByteVector: byte[] a>;

        i136 = 0;

     label76:
        $r17 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector z>;

        $i7 = $r17.<org.springframework.asm.ByteVector: int b>;

        if i136 >= $i7 goto label77;

        $i8 = staticinvoke <org.springframework.asm.MethodWriter: int c(byte[],int)>(r32, i136);

        $i9 = staticinvoke <org.springframework.asm.MethodWriter: int a(int[],int[],int,int)>(r25, r26, 0, $i8);

        staticinvoke <org.springframework.asm.MethodWriter: void a(byte[],int,int)>(r32, i136, $i9);

        i136 = i136 + 4;

        goto label76;

     label77:
        $r33 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.Attribute A>;

        if $r33 == null goto label81;

        $r10 = r0.<org.springframework.asm.MethodWriter: org.springframework.asm.Attribute A>;

        $r11 = virtualinvoke $r10.<org.springframework.asm.Attribute: org.springframework.asm.Label[] getLabels()>();

        if $r11 == null goto label80;

        $i4 = lengthof $r11;

        i137 = $i4 - 1;

     label78:
        if i137 < 0 goto label80;

        $r12 = $r11[i137];

        $z0 = $r12.<org.springframework.asm.Label: boolean c>;

        if $z0 != 0 goto label79;

        $r14 = $r11[i137];

        $r13 = $r11[i137];

        $i5 = $r13.<org.springframework.asm.Label: int b>;

        $i6 = staticinvoke <org.springframework.asm.MethodWriter: int a(int[],int[],int,int)>(r25, r26, 0, $i5);

        $r14.<org.springframework.asm.Label: int b> = $i6;

        $r15 = $r11[i137];

        $r15.<org.springframework.asm.Label: boolean c> = 1;

     label79:
        $i161 = (int) -1;

        i137 = i137 + $i161;

        goto label78;

     label80:
        goto label77;

     label81:
        r0.<org.springframework.asm.MethodWriter: org.springframework.asm.ByteVector p> = $r34;

        return r2;
    }

    static int c(byte[], int)
    {
        byte[] r0;
        short $s2, $s5, $s8, $s10;
        byte $b1, $b4;
        int i0, $i3, $i6, $i7, $i9, $i11;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $b1 = r0[i0];

        $s8 = (short) $b1;

        $s2 = $s8 & 255;

        $i9 = (int) $s2;

        $i6 = $i9 << 8;

        $i3 = i0 + 1;

        $b4 = r0[$i3];

        $s10 = (short) $b4;

        $s5 = $s10 & 255;

        $i11 = (int) $s5;

        $i7 = $i6 | $i11;

        return $i7;
    }

    static short b(byte[], int)
    {
        byte[] r0;
        short $s2, $s5, $s8, $s9, $s11;
        byte $b1, $b4;
        int i0, $i3, $i6, $i7, $i10, $i12;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $b1 = r0[i0];

        $s9 = (short) $b1;

        $s2 = $s9 & 255;

        $i10 = (int) $s2;

        $i6 = $i10 << 8;

        $i3 = i0 + 1;

        $b4 = r0[$i3];

        $s11 = (short) $b4;

        $s5 = $s11 & 255;

        $i12 = (int) $s5;

        $i7 = $i6 | $i12;

        $s8 = (short) $i7;

        return $s8;
    }

    static int a(byte[], int)
    {
        byte[] r0;
        short $s2, $s5, $s10, $s15, $s18, $s20, $s22, $s24;
        byte $b1, $b4, $b9, $b14;
        int i0, $i3, $i6, $i7, $i8, $i11, $i12, $i13, $i16, $i17, $i19, $i21, $i23, $i25;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $b1 = r0[i0];

        $s18 = (short) $b1;

        $s2 = $s18 & 255;

        $i19 = (int) $s2;

        $i7 = $i19 << 24;

        $i3 = i0 + 1;

        $b4 = r0[$i3];

        $s20 = (short) $b4;

        $s5 = $s20 & 255;

        $i21 = (int) $s5;

        $i6 = $i21 << 16;

        $i12 = $i7 | $i6;

        $i8 = i0 + 2;

        $b9 = r0[$i8];

        $s22 = (short) $b9;

        $s10 = $s22 & 255;

        $i23 = (int) $s10;

        $i11 = $i23 << 8;

        $i16 = $i12 | $i11;

        $i13 = i0 + 3;

        $b14 = r0[$i13];

        $s24 = (short) $b14;

        $s15 = $s24 & 255;

        $i25 = (int) $s15;

        $i17 = $i16 | $i25;

        return $i17;
    }

    static void a(byte[], int, int)
    {
        byte[] r0;
        byte $b3, $b4;
        int i0, i1, $i2, $i5;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i2 = i1 >>> 8;

        $b3 = (byte) $i2;

        r0[i0] = $b3;

        $i5 = i0 + 1;

        $b4 = (byte) i1;

        r0[$i5] = $b4;

        return;
    }

    static int a(int[], int[], int, int)
    {
        int[] r0, r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10;

        r0 := @parameter0: int[];

        r1 := @parameter1: int[];

        i1 := @parameter2: int;

        i0 := @parameter3: int;

        i9 = i0 - i1;

        i10 = 0;

     label1:
        $i2 = lengthof r0;

        if i10 >= $i2 goto label4;

        $i3 = r0[i10];

        if i1 >= $i3 goto label2;

        $i7 = r0[i10];

        if $i7 > i0 goto label2;

        $i8 = r1[i10];

        i9 = i9 + $i8;

        goto label3;

     label2:
        $i4 = r0[i10];

        if i0 >= $i4 goto label3;

        $i5 = r0[i10];

        if $i5 > i1 goto label3;

        $i6 = r1[i10];

        i9 = i9 - $i6;

     label3:
        i10 = i10 + 1;

        goto label1;

     label4:
        return i9;
    }

    static void a(int[], int[], org.springframework.asm.Label)
    {
        int[] r1, r2;
        int $i0, $i1;
        org.springframework.asm.Label r0;
        boolean $z0;

        r1 := @parameter0: int[];

        r2 := @parameter1: int[];

        r0 := @parameter2: org.springframework.asm.Label;

        $z0 = r0.<org.springframework.asm.Label: boolean c>;

        if $z0 != 0 goto label1;

        $i0 = r0.<org.springframework.asm.Label: int b>;

        $i1 = staticinvoke <org.springframework.asm.MethodWriter: int a(int[],int[],int,int)>(r1, r2, 0, $i0);

        r0.<org.springframework.asm.Label: int b> = $i1;

        r0.<org.springframework.asm.Label: boolean c> = 1;

     label1:
        return;
    }

    static void <clinit>()
    {
        int[] r0;
        int $i0, $i2, i3, $i4;
        char $c1;
        java.lang.String r1;

        r0 = newarray (int)[202];

        r1 = "EFFFFFFFFGGFFFGGFFFEEFGFGFEEEEEEEEEEEEEEEEEEEEDEDEDDDDDCDCDEEEEEEEEEEEEEEEEEEEEBABABBBBDCFFFGGGEDCDCDCDCDCDCDCDCDCDCEEEEDDDDDDDCDCDCEFEFDDEEFFDEDEEEBDDBBDDDDDDCCCCCCCCEFEDDDCDCDEEEEEEEEEEFEEEEEEDDEEDDEE";

        i3 = 0;

     label1:
        $i0 = lengthof r0;

        if i3 >= $i0 goto label2;

        $c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i3);

        $i4 = (int) $c1;

        $i2 = $i4 - 69;

        r0[i3] = $i2;

        i3 = i3 + 1;

        goto label1;

     label2:
        <org.springframework.asm.MethodWriter: int[] H> = r0;

        return;
    }
}
