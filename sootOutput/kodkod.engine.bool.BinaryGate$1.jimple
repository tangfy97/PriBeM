final class kodkod.engine.bool.BinaryGate$1 extends java.lang.Object implements java.util.Iterator
{
    int next;
    final kodkod.engine.bool.BinaryGate this$0;

    void <init>(kodkod.engine.bool.BinaryGate)
    {
        kodkod.engine.bool.BinaryGate r1;
        kodkod.engine.bool.BinaryGate$1 r0;

        r0 := @this: kodkod.engine.bool.BinaryGate$1;

        r1 := @parameter0: kodkod.engine.bool.BinaryGate;

        r0.<kodkod.engine.bool.BinaryGate$1: kodkod.engine.bool.BinaryGate this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<kodkod.engine.bool.BinaryGate$1: int next> = 0;

        return;
    }

    public boolean hasNext()
    {
        int $i0;
        kodkod.engine.bool.BinaryGate$1 r0;

        r0 := @this: kodkod.engine.bool.BinaryGate$1;

        $i0 = r0.<kodkod.engine.bool.BinaryGate$1: int next>;

        if $i0 >= 2 goto label1;

        return 1;

     label1:
        return 0;
    }

    public kodkod.engine.bool.BooleanFormula next()
    {
        kodkod.engine.bool.BinaryGate $r1, $r2;
        kodkod.engine.bool.BooleanFormula $r4;
        kodkod.engine.bool.BinaryGate$1 r0;
        int $i0, $i1;
        java.util.NoSuchElementException $r3;
        boolean $z0;

        r0 := @this: kodkod.engine.bool.BinaryGate$1;

        $z0 = virtualinvoke r0.<kodkod.engine.bool.BinaryGate$1: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r3 = new java.util.NoSuchElementException;

        specialinvoke $r3.<java.util.NoSuchElementException: void <init>()>();

        throw $r3;

     label1:
        $i0 = r0.<kodkod.engine.bool.BinaryGate$1: int next>;

        $i1 = $i0 + 1;

        r0.<kodkod.engine.bool.BinaryGate$1: int next> = $i1;

        if $i0 != 0 goto label2;

        $r2 = r0.<kodkod.engine.bool.BinaryGate$1: kodkod.engine.bool.BinaryGate this$0>;

        $r4 = staticinvoke <kodkod.engine.bool.BinaryGate: kodkod.engine.bool.BooleanFormula access$0(kodkod.engine.bool.BinaryGate)>($r2);

        goto label3;

     label2:
        $r1 = r0.<kodkod.engine.bool.BinaryGate$1: kodkod.engine.bool.BinaryGate this$0>;

        $r4 = staticinvoke <kodkod.engine.bool.BinaryGate: kodkod.engine.bool.BooleanFormula access$1(kodkod.engine.bool.BinaryGate)>($r1);

     label3:
        return $r4;
    }

    public void remove()
    {
        java.lang.UnsupportedOperationException $r0;
        kodkod.engine.bool.BinaryGate$1 r1;

        r1 := @this: kodkod.engine.bool.BinaryGate$1;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public volatile java.lang.Object next()
    {
        kodkod.engine.bool.BooleanFormula $r1;
        kodkod.engine.bool.BinaryGate$1 r0;

        r0 := @this: kodkod.engine.bool.BinaryGate$1;

        $r1 = virtualinvoke r0.<kodkod.engine.bool.BinaryGate$1: kodkod.engine.bool.BooleanFormula next()>();

        return $r1;
    }
}
