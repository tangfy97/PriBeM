public abstract class org.jdesktop.swingx.sort.RowFilters$GeneralFilter extends javax.swing.RowFilter
{
    private int[] columns;

    protected transient void <init>(int[])
    {
        int[] r1;
        org.jdesktop.swingx.sort.RowFilters$GeneralFilter r0;

        r0 := @this: org.jdesktop.swingx.sort.RowFilters$GeneralFilter;

        r1 := @parameter0: int[];

        specialinvoke r0.<javax.swing.RowFilter: void <init>()>();

        virtualinvoke r0.<org.jdesktop.swingx.sort.RowFilters$GeneralFilter: void checkIndices(int[])>(r1);

        r0.<org.jdesktop.swingx.sort.RowFilters$GeneralFilter: int[] columns> = r1;

        return;
    }

    public boolean include(javax.swing.RowFilter$Entry)
    {
        org.jdesktop.swingx.sort.RowFilters$GeneralFilter r1;
        int[] $r2, $r3, $r4;
        javax.swing.RowFilter$Entry r0;
        int $i0, $i1, $i2, i3, i4, i5, $i7, $i9;
        boolean $z0, $z1;

        r1 := @this: org.jdesktop.swingx.sort.RowFilters$GeneralFilter;

        r0 := @parameter0: javax.swing.RowFilter$Entry;

        $i0 = virtualinvoke r0.<javax.swing.RowFilter$Entry: int getValueCount()>();

        i4 = $i0;

        $r2 = r1.<org.jdesktop.swingx.sort.RowFilters$GeneralFilter: int[] columns>;

        $i1 = lengthof $r2;

        if $i1 <= 0 goto label4;

        $r3 = r1.<org.jdesktop.swingx.sort.RowFilters$GeneralFilter: int[] columns>;

        $i2 = lengthof $r3;

        i5 = $i2 - 1;

     label1:
        if i5 < 0 goto label3;

        $r4 = r1.<org.jdesktop.swingx.sort.RowFilters$GeneralFilter: int[] columns>;

        i3 = $r4[i5];

        if i3 >= $i0 goto label2;

        $z1 = virtualinvoke r1.<org.jdesktop.swingx.sort.RowFilters$GeneralFilter: boolean include(javax.swing.RowFilter$Entry,int)>(r0, i3);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $i7 = (int) -1;

        i5 = i5 + $i7;

        goto label1;

     label3:
        goto label5;

     label4:
        $i9 = (int) -1;

        i4 = i4 + $i9;

        if i4 < 0 goto label5;

        $z0 = virtualinvoke r1.<org.jdesktop.swingx.sort.RowFilters$GeneralFilter: boolean include(javax.swing.RowFilter$Entry,int)>(r0, i4);

        if $z0 == 0 goto label4;

        return 1;

     label5:
        return 0;
    }

    protected abstract boolean include(javax.swing.RowFilter$Entry, int);

    protected void checkIndices(int[])
    {
        int[] r0;
        int $i0, $i1, i2, $i4;
        java.lang.IllegalArgumentException $r3;
        org.jdesktop.swingx.sort.RowFilters$GeneralFilter r2;

        r2 := @this: org.jdesktop.swingx.sort.RowFilters$GeneralFilter;

        r0 := @parameter0: int[];

        $i0 = lengthof r0;

        i2 = $i0 - 1;

     label1:
        if i2 < 0 goto label3;

        $i1 = r0[i2];

        if $i1 >= 0 goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Index must be >= 0");

        throw $r3;

     label2:
        $i4 = (int) -1;

        i2 = i2 + $i4;

        goto label1;

     label3:
        return;
    }
}
