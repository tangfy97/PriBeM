abstract class com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset extends com.mycila.inject.internal.guava.collect.ForwardingMultiset implements com.mycila.inject.internal.guava.collect.SortedMultiset
{
    private transient java.util.Comparator comparator;
    private transient java.util.SortedSet elementSet;
    private transient java.util.Set entrySet;

    void <init>()
    {
        com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset;

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.ForwardingMultiset: void <init>()>();

        return;
    }

    abstract com.mycila.inject.internal.guava.collect.SortedMultiset forwardMultiset();

    public java.util.Comparator comparator()
    {
        com.mycila.inject.internal.guava.collect.SortedMultiset $r2;
        com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset r0;
        java.util.Comparator r1, $r3;
        com.mycila.inject.internal.guava.collect.Ordering $r4, $r5;

        r0 := @this: com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset;

        r1 = r0.<com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset: java.util.Comparator comparator>;

        if r1 != null goto label1;

        $r2 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset: com.mycila.inject.internal.guava.collect.SortedMultiset forwardMultiset()>();

        $r3 = interfaceinvoke $r2.<com.mycila.inject.internal.guava.collect.SortedMultiset: java.util.Comparator comparator()>();

        $r4 = staticinvoke <com.mycila.inject.internal.guava.collect.Ordering: com.mycila.inject.internal.guava.collect.Ordering 'from'(java.util.Comparator)>($r3);

        $r5 = virtualinvoke $r4.<com.mycila.inject.internal.guava.collect.Ordering: com.mycila.inject.internal.guava.collect.Ordering reverse()>();

        r0.<com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset: java.util.Comparator comparator> = $r5;

        return $r5;

     label1:
        return r1;
    }

    public java.util.SortedSet elementSet()
    {
        com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset r0;
        java.util.SortedSet r1;
        com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset$1 $r2;

        r0 := @this: com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset;

        r1 = r0.<com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset: java.util.SortedSet elementSet>;

        if r1 != null goto label1;

        $r2 = new com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset$1;

        specialinvoke $r2.<com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset$1: void <init>(com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset)>(r0);

        r0.<com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset: java.util.SortedSet elementSet> = $r2;

        return $r2;

     label1:
        return r1;
    }

    public com.mycila.inject.internal.guava.collect.Multiset$Entry pollFirstEntry()
    {
        com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset r0;
        com.mycila.inject.internal.guava.collect.SortedMultiset $r1;
        com.mycila.inject.internal.guava.collect.Multiset$Entry $r2;

        r0 := @this: com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset: com.mycila.inject.internal.guava.collect.SortedMultiset forwardMultiset()>();

        $r2 = interfaceinvoke $r1.<com.mycila.inject.internal.guava.collect.SortedMultiset: com.mycila.inject.internal.guava.collect.Multiset$Entry pollLastEntry()>();

        return $r2;
    }

    public com.mycila.inject.internal.guava.collect.Multiset$Entry pollLastEntry()
    {
        com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset r0;
        com.mycila.inject.internal.guava.collect.SortedMultiset $r1;
        com.mycila.inject.internal.guava.collect.Multiset$Entry $r2;

        r0 := @this: com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset: com.mycila.inject.internal.guava.collect.SortedMultiset forwardMultiset()>();

        $r2 = interfaceinvoke $r1.<com.mycila.inject.internal.guava.collect.SortedMultiset: com.mycila.inject.internal.guava.collect.Multiset$Entry pollFirstEntry()>();

        return $r2;
    }

    public com.mycila.inject.internal.guava.collect.SortedMultiset headMultiset(java.lang.Object, com.mycila.inject.internal.guava.collect.BoundType)
    {
        com.mycila.inject.internal.guava.collect.BoundType r3;
        com.mycila.inject.internal.guava.collect.SortedMultiset $r1, $r4, $r5;
        com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset r0;
        java.lang.Object r2;

        r0 := @this: com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset;

        r2 := @parameter0: java.lang.Object;

        r3 := @parameter1: com.mycila.inject.internal.guava.collect.BoundType;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset: com.mycila.inject.internal.guava.collect.SortedMultiset forwardMultiset()>();

        $r4 = interfaceinvoke $r1.<com.mycila.inject.internal.guava.collect.SortedMultiset: com.mycila.inject.internal.guava.collect.SortedMultiset tailMultiset(java.lang.Object,com.mycila.inject.internal.guava.collect.BoundType)>(r2, r3);

        $r5 = interfaceinvoke $r4.<com.mycila.inject.internal.guava.collect.SortedMultiset: com.mycila.inject.internal.guava.collect.SortedMultiset descendingMultiset()>();

        return $r5;
    }

    public com.mycila.inject.internal.guava.collect.SortedMultiset subMultiset(java.lang.Object, com.mycila.inject.internal.guava.collect.BoundType, java.lang.Object, com.mycila.inject.internal.guava.collect.BoundType)
    {
        com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset r0;
        com.mycila.inject.internal.guava.collect.BoundType r3, r5;
        com.mycila.inject.internal.guava.collect.SortedMultiset $r1, $r6, $r7;
        java.lang.Object r2, r4;

        r0 := @this: com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset;

        r4 := @parameter0: java.lang.Object;

        r5 := @parameter1: com.mycila.inject.internal.guava.collect.BoundType;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: com.mycila.inject.internal.guava.collect.BoundType;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset: com.mycila.inject.internal.guava.collect.SortedMultiset forwardMultiset()>();

        $r6 = interfaceinvoke $r1.<com.mycila.inject.internal.guava.collect.SortedMultiset: com.mycila.inject.internal.guava.collect.SortedMultiset subMultiset(java.lang.Object,com.mycila.inject.internal.guava.collect.BoundType,java.lang.Object,com.mycila.inject.internal.guava.collect.BoundType)>(r2, r3, r4, r5);

        $r7 = interfaceinvoke $r6.<com.mycila.inject.internal.guava.collect.SortedMultiset: com.mycila.inject.internal.guava.collect.SortedMultiset descendingMultiset()>();

        return $r7;
    }

    public com.mycila.inject.internal.guava.collect.SortedMultiset tailMultiset(java.lang.Object, com.mycila.inject.internal.guava.collect.BoundType)
    {
        com.mycila.inject.internal.guava.collect.BoundType r3;
        com.mycila.inject.internal.guava.collect.SortedMultiset $r1, $r4, $r5;
        com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset r0;
        java.lang.Object r2;

        r0 := @this: com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset;

        r2 := @parameter0: java.lang.Object;

        r3 := @parameter1: com.mycila.inject.internal.guava.collect.BoundType;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset: com.mycila.inject.internal.guava.collect.SortedMultiset forwardMultiset()>();

        $r4 = interfaceinvoke $r1.<com.mycila.inject.internal.guava.collect.SortedMultiset: com.mycila.inject.internal.guava.collect.SortedMultiset headMultiset(java.lang.Object,com.mycila.inject.internal.guava.collect.BoundType)>(r2, r3);

        $r5 = interfaceinvoke $r4.<com.mycila.inject.internal.guava.collect.SortedMultiset: com.mycila.inject.internal.guava.collect.SortedMultiset descendingMultiset()>();

        return $r5;
    }

    protected com.mycila.inject.internal.guava.collect.Multiset delegate()
    {
        com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset r0;
        com.mycila.inject.internal.guava.collect.SortedMultiset $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset: com.mycila.inject.internal.guava.collect.SortedMultiset forwardMultiset()>();

        return $r1;
    }

    public com.mycila.inject.internal.guava.collect.SortedMultiset descendingMultiset()
    {
        com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset r0;
        com.mycila.inject.internal.guava.collect.SortedMultiset $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset: com.mycila.inject.internal.guava.collect.SortedMultiset forwardMultiset()>();

        return $r1;
    }

    public com.mycila.inject.internal.guava.collect.Multiset$Entry firstEntry()
    {
        com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset r0;
        com.mycila.inject.internal.guava.collect.SortedMultiset $r1;
        com.mycila.inject.internal.guava.collect.Multiset$Entry $r2;

        r0 := @this: com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset: com.mycila.inject.internal.guava.collect.SortedMultiset forwardMultiset()>();

        $r2 = interfaceinvoke $r1.<com.mycila.inject.internal.guava.collect.SortedMultiset: com.mycila.inject.internal.guava.collect.Multiset$Entry lastEntry()>();

        return $r2;
    }

    public com.mycila.inject.internal.guava.collect.Multiset$Entry lastEntry()
    {
        com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset r0;
        com.mycila.inject.internal.guava.collect.SortedMultiset $r1;
        com.mycila.inject.internal.guava.collect.Multiset$Entry $r2;

        r0 := @this: com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset: com.mycila.inject.internal.guava.collect.SortedMultiset forwardMultiset()>();

        $r2 = interfaceinvoke $r1.<com.mycila.inject.internal.guava.collect.SortedMultiset: com.mycila.inject.internal.guava.collect.Multiset$Entry firstEntry()>();

        return $r2;
    }

    abstract java.util.Iterator entryIterator();

    public java.util.Set entrySet()
    {
        com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset r0;
        java.util.Set r1, $r2;

        r0 := @this: com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset;

        r1 = r0.<com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset: java.util.Set entrySet>;

        if r1 != null goto label1;

        $r2 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset: java.util.Set createEntrySet()>();

        r0.<com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset: java.util.Set entrySet> = $r2;

        goto label2;

     label1:
        $r2 = r1;

     label2:
        return $r2;
    }

    java.util.Set createEntrySet()
    {
        com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset$2 $r0;
        com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset r1;

        r1 := @this: com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset;

        $r0 = new com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset$2;

        specialinvoke $r0.<com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset$2: void <init>(com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset)>(r1);

        return $r0;
    }

    public java.util.Iterator iterator()
    {
        com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset r0;
        java.util.Iterator $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset;

        $r1 = staticinvoke <com.mycila.inject.internal.guava.collect.Multisets: java.util.Iterator iteratorImpl(com.mycila.inject.internal.guava.collect.Multiset)>(r0);

        return $r1;
    }

    public java.lang.Object[] toArray()
    {
        com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset r0;
        java.lang.Object[] $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset: java.lang.Object[] standardToArray()>();

        return $r1;
    }

    public java.lang.Object[] toArray(java.lang.Object[])
    {
        com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset r0;
        java.lang.Object[] r1, $r2;

        r0 := @this: com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset;

        r1 := @parameter0: java.lang.Object[];

        $r2 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset: java.lang.Object[] standardToArray(java.lang.Object[])>(r1);

        return $r2;
    }

    public java.lang.String toString()
    {
        com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset r0;
        java.util.Set $r1;
        java.lang.String $r2;

        r0 := @this: com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset: java.util.Set entrySet()>();

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }

    public volatile java.util.Set elementSet()
    {
        com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset r0;
        java.util.SortedSet $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset: java.util.SortedSet elementSet()>();

        return $r1;
    }

    protected volatile java.util.Collection delegate()
    {
        com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset r0;
        com.mycila.inject.internal.guava.collect.Multiset $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset: com.mycila.inject.internal.guava.collect.Multiset delegate()>();

        return $r1;
    }

    protected volatile java.lang.Object delegate()
    {
        com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset r0;
        com.mycila.inject.internal.guava.collect.Multiset $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.SortedMultisets$DescendingMultiset: com.mycila.inject.internal.guava.collect.Multiset delegate()>();

        return $r1;
    }
}
