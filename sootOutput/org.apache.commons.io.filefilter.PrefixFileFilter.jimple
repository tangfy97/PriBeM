public class org.apache.commons.io.filefilter.PrefixFileFilter extends org.apache.commons.io.filefilter.AbstractFileFilter implements java.io.Serializable
{
    private final java.lang.String[] prefixes;
    private final org.apache.commons.io.IOCase caseSensitivity;

    public void <init>(java.lang.String)
    {
        java.lang.String r1;
        org.apache.commons.io.IOCase $r2;
        org.apache.commons.io.filefilter.PrefixFileFilter r0;

        r0 := @this: org.apache.commons.io.filefilter.PrefixFileFilter;

        r1 := @parameter0: java.lang.String;

        $r2 = <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase SENSITIVE>;

        specialinvoke r0.<org.apache.commons.io.filefilter.PrefixFileFilter: void <init>(java.lang.String,org.apache.commons.io.IOCase)>(r1, $r2);

        return;
    }

    public void <init>(java.lang.String, org.apache.commons.io.IOCase)
    {
        org.apache.commons.io.IOCase r3, $r5;
        java.lang.String[] $r2;
        java.lang.String r1;
        java.lang.IllegalArgumentException $r4;
        org.apache.commons.io.filefilter.PrefixFileFilter r0;

        r0 := @this: org.apache.commons.io.filefilter.PrefixFileFilter;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: org.apache.commons.io.IOCase;

        specialinvoke r0.<org.apache.commons.io.filefilter.AbstractFileFilter: void <init>()>();

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The prefix must not be null");

        throw $r4;

     label1:
        $r2 = newarray (java.lang.String)[1];

        $r2[0] = r1;

        r0.<org.apache.commons.io.filefilter.PrefixFileFilter: java.lang.String[] prefixes> = $r2;

        if r3 != null goto label2;

        $r5 = <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase SENSITIVE>;

        goto label3;

     label2:
        $r5 = r3;

     label3:
        r0.<org.apache.commons.io.filefilter.PrefixFileFilter: org.apache.commons.io.IOCase caseSensitivity> = $r5;

        return;
    }

    public void <init>(java.lang.String[])
    {
        java.lang.String[] r1;
        org.apache.commons.io.IOCase $r2;
        org.apache.commons.io.filefilter.PrefixFileFilter r0;

        r0 := @this: org.apache.commons.io.filefilter.PrefixFileFilter;

        r1 := @parameter0: java.lang.String[];

        $r2 = <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase SENSITIVE>;

        specialinvoke r0.<org.apache.commons.io.filefilter.PrefixFileFilter: void <init>(java.lang.String[],org.apache.commons.io.IOCase)>(r1, $r2);

        return;
    }

    public void <init>(java.lang.String[], org.apache.commons.io.IOCase)
    {
        org.apache.commons.io.IOCase r4, $r6;
        java.lang.String[] r1, $r2, $r3;
        java.lang.IllegalArgumentException $r5;
        org.apache.commons.io.filefilter.PrefixFileFilter r0;
        int $i0, $i1;

        r0 := @this: org.apache.commons.io.filefilter.PrefixFileFilter;

        r1 := @parameter0: java.lang.String[];

        r4 := @parameter1: org.apache.commons.io.IOCase;

        specialinvoke r0.<org.apache.commons.io.filefilter.AbstractFileFilter: void <init>()>();

        if r1 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The array of prefixes must not be null");

        throw $r5;

     label1:
        $i0 = lengthof r1;

        $r2 = newarray (java.lang.String)[$i0];

        r0.<org.apache.commons.io.filefilter.PrefixFileFilter: java.lang.String[] prefixes> = $r2;

        $r3 = r0.<org.apache.commons.io.filefilter.PrefixFileFilter: java.lang.String[] prefixes>;

        $i1 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, $r3, 0, $i1);

        if r4 != null goto label2;

        $r6 = <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase SENSITIVE>;

        goto label3;

     label2:
        $r6 = r4;

     label3:
        r0.<org.apache.commons.io.filefilter.PrefixFileFilter: org.apache.commons.io.IOCase caseSensitivity> = $r6;

        return;
    }

    public void <init>(java.util.List)
    {
        java.util.List r1;
        org.apache.commons.io.IOCase $r2;
        org.apache.commons.io.filefilter.PrefixFileFilter r0;

        r0 := @this: org.apache.commons.io.filefilter.PrefixFileFilter;

        r1 := @parameter0: java.util.List;

        $r2 = <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase SENSITIVE>;

        specialinvoke r0.<org.apache.commons.io.filefilter.PrefixFileFilter: void <init>(java.util.List,org.apache.commons.io.IOCase)>(r1, $r2);

        return;
    }

    public void <init>(java.util.List, org.apache.commons.io.IOCase)
    {
        java.lang.Object[] $r3;
        org.apache.commons.io.IOCase r5, $r7;
        java.lang.String[] $r2, $r4;
        java.lang.IllegalArgumentException $r6;
        org.apache.commons.io.filefilter.PrefixFileFilter r0;
        java.util.List r1;
        int $i0;

        r0 := @this: org.apache.commons.io.filefilter.PrefixFileFilter;

        r1 := @parameter0: java.util.List;

        r5 := @parameter1: org.apache.commons.io.IOCase;

        specialinvoke r0.<org.apache.commons.io.filefilter.AbstractFileFilter: void <init>()>();

        if r1 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The list of prefixes must not be null");

        throw $r6;

     label1:
        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        $r2 = newarray (java.lang.String)[$i0];

        $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r2);

        $r4 = (java.lang.String[]) $r3;

        r0.<org.apache.commons.io.filefilter.PrefixFileFilter: java.lang.String[] prefixes> = $r4;

        if r5 != null goto label2;

        $r7 = <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase SENSITIVE>;

        goto label3;

     label2:
        $r7 = r5;

     label3:
        r0.<org.apache.commons.io.filefilter.PrefixFileFilter: org.apache.commons.io.IOCase caseSensitivity> = $r7;

        return;
    }

    public boolean accept(java.io.File)
    {
        org.apache.commons.io.IOCase $r5;
        java.lang.String[] r3;
        java.io.File r0;
        org.apache.commons.io.filefilter.PrefixFileFilter r2;
        int i0, i1;
        java.lang.String $r1, r4;
        boolean $z0;

        r2 := @this: org.apache.commons.io.filefilter.PrefixFileFilter;

        r0 := @parameter0: java.io.File;

        $r1 = virtualinvoke r0.<java.io.File: java.lang.String getName()>();

        r3 = r2.<org.apache.commons.io.filefilter.PrefixFileFilter: java.lang.String[] prefixes>;

        i0 = lengthof r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r4 = r3[i1];

        $r5 = r2.<org.apache.commons.io.filefilter.PrefixFileFilter: org.apache.commons.io.IOCase caseSensitivity>;

        $z0 = virtualinvoke $r5.<org.apache.commons.io.IOCase: boolean checkStartsWith(java.lang.String,java.lang.String)>($r1, r4);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    public boolean accept(java.io.File, java.lang.String)
    {
        org.apache.commons.io.IOCase $r4;
        java.lang.String[] r1;
        java.io.File r5;
        org.apache.commons.io.filefilter.PrefixFileFilter r0;
        int i0, i1;
        java.lang.String r2, r3;
        boolean $z0;

        r0 := @this: org.apache.commons.io.filefilter.PrefixFileFilter;

        r5 := @parameter0: java.io.File;

        r3 := @parameter1: java.lang.String;

        r1 = r0.<org.apache.commons.io.filefilter.PrefixFileFilter: java.lang.String[] prefixes>;

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r2 = r1[i1];

        $r4 = r0.<org.apache.commons.io.filefilter.PrefixFileFilter: org.apache.commons.io.IOCase caseSensitivity>;

        $z0 = virtualinvoke $r4.<org.apache.commons.io.IOCase: boolean checkStartsWith(java.lang.String,java.lang.String)>(r3, r2);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    public java.lang.String toString()
    {
        java.lang.String[] $r3, $r5, $r6;
        org.apache.commons.io.filefilter.PrefixFileFilter r1;
        int $i0, i1;
        java.lang.StringBuilder $r0;
        java.lang.String $r2, $r4, $r7;

        r1 := @this: org.apache.commons.io.filefilter.PrefixFileFilter;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = specialinvoke r1.<org.apache.commons.io.filefilter.AbstractFileFilter: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r3 = r1.<org.apache.commons.io.filefilter.PrefixFileFilter: java.lang.String[] prefixes>;

        if $r3 == null goto label3;

        i1 = 0;

     label1:
        $r5 = r1.<org.apache.commons.io.filefilter.PrefixFileFilter: java.lang.String[] prefixes>;

        $i0 = lengthof $r5;

        if i1 >= $i0 goto label3;

        if i1 <= 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

     label2:
        $r6 = r1.<org.apache.commons.io.filefilter.PrefixFileFilter: java.lang.String[] prefixes>;

        $r7 = $r6[i1];

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        i1 = i1 + 1;

        goto label1;

     label3:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }
}
