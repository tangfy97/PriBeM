public class org.apache.cxf.jaxrs.features.clustering.FailoverFeature extends org.apache.cxf.clustering.FailoverFeature
{
    private org.apache.cxf.clustering.FailoverTargetSelector customSelector;

    public void <init>()
    {
        org.apache.cxf.jaxrs.features.clustering.FailoverFeature r0;

        r0 := @this: org.apache.cxf.jaxrs.features.clustering.FailoverFeature;

        specialinvoke r0.<org.apache.cxf.clustering.FailoverFeature: void <init>()>();

        return;
    }

    public void initialize(org.apache.cxf.interceptor.InterceptorProvider, org.apache.cxf.Bus)
    {
        org.apache.cxf.Bus r2;
        org.apache.cxf.interceptor.InterceptorProvider r1;
        org.apache.cxf.jaxrs.features.clustering.FailoverFeature r0;
        org.apache.cxf.jaxrs.client.ClientConfiguration $r3;

        r0 := @this: org.apache.cxf.jaxrs.features.clustering.FailoverFeature;

        r1 := @parameter0: org.apache.cxf.interceptor.InterceptorProvider;

        r2 := @parameter1: org.apache.cxf.Bus;

        $r3 = (org.apache.cxf.jaxrs.client.ClientConfiguration) r1;

        virtualinvoke r0.<org.apache.cxf.jaxrs.features.clustering.FailoverFeature: void initialize(org.apache.cxf.jaxrs.client.ClientConfiguration,org.apache.cxf.Bus)>($r3, r2);

        return;
    }

    public void initialize(org.apache.cxf.jaxrs.client.ClientConfiguration, org.apache.cxf.Bus)
    {
        org.apache.cxf.Bus r5;
        org.apache.cxf.endpoint.Endpoint $r3;
        org.apache.cxf.jaxrs.features.clustering.FailoverFeature r0;
        org.apache.cxf.endpoint.ConduitSelector $r2, $r4;
        org.apache.cxf.jaxrs.client.ClientConfiguration r1;

        r0 := @this: org.apache.cxf.jaxrs.features.clustering.FailoverFeature;

        r1 := @parameter0: org.apache.cxf.jaxrs.client.ClientConfiguration;

        r5 := @parameter1: org.apache.cxf.Bus;

        $r2 = virtualinvoke r1.<org.apache.cxf.jaxrs.client.ClientConfiguration: org.apache.cxf.endpoint.ConduitSelector getConduitSelector()>();

        $r3 = interfaceinvoke $r2.<org.apache.cxf.endpoint.ConduitSelector: org.apache.cxf.endpoint.Endpoint getEndpoint()>();

        $r4 = virtualinvoke r0.<org.apache.cxf.jaxrs.features.clustering.FailoverFeature: org.apache.cxf.endpoint.ConduitSelector initTargetSelector(org.apache.cxf.endpoint.Endpoint)>($r3);

        virtualinvoke r1.<org.apache.cxf.jaxrs.client.ClientConfiguration: void setConduitSelector(org.apache.cxf.endpoint.ConduitSelector)>($r4);

        return;
    }

    protected org.apache.cxf.clustering.FailoverTargetSelector getTargetSelector()
    {
        org.apache.cxf.jaxrs.features.clustering.FailoverFeature r0;
        org.apache.cxf.clustering.FailoverTargetSelector $r1, $r2, $r3;

        r0 := @this: org.apache.cxf.jaxrs.features.clustering.FailoverFeature;

        $r1 = r0.<org.apache.cxf.jaxrs.features.clustering.FailoverFeature: org.apache.cxf.clustering.FailoverTargetSelector customSelector>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.cxf.jaxrs.features.clustering.FailoverFeature: org.apache.cxf.clustering.FailoverTargetSelector customSelector>;

        return $r3;

     label1:
        $r2 = specialinvoke r0.<org.apache.cxf.clustering.FailoverFeature: org.apache.cxf.clustering.FailoverTargetSelector getTargetSelector()>();

        return $r2;
    }

    public void setTargetSelector(org.apache.cxf.clustering.FailoverTargetSelector)
    {
        org.apache.cxf.clustering.FailoverTargetSelector r1;
        org.apache.cxf.jaxrs.features.clustering.FailoverFeature r0;

        r0 := @this: org.apache.cxf.jaxrs.features.clustering.FailoverFeature;

        r1 := @parameter0: org.apache.cxf.clustering.FailoverTargetSelector;

        r0.<org.apache.cxf.jaxrs.features.clustering.FailoverFeature: org.apache.cxf.clustering.FailoverTargetSelector customSelector> = r1;

        return;
    }

    public org.apache.cxf.clustering.FailoverStrategy getStrategy()
    {
        java.lang.IllegalStateException $r4, $r5;
        org.apache.cxf.jaxrs.features.clustering.FailoverFeature r0;
        java.util.List $r3;
        org.apache.cxf.clustering.AbstractStaticFailoverStrategy $r2;
        org.apache.cxf.clustering.FailoverStrategy $r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.cxf.jaxrs.features.clustering.FailoverFeature;

        $r1 = specialinvoke r0.<org.apache.cxf.clustering.FailoverFeature: org.apache.cxf.clustering.FailoverStrategy getStrategy()>();

        if $r1 != null goto label1;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Default Strategies are not supported");

        throw $r5;

     label1:
        $z0 = $r1 instanceof org.apache.cxf.clustering.AbstractStaticFailoverStrategy;

        if $z0 == 0 goto label3;

        $r2 = (org.apache.cxf.clustering.AbstractStaticFailoverStrategy) $r1;

        $r3 = virtualinvoke $r2.<org.apache.cxf.clustering.AbstractStaticFailoverStrategy: java.util.List getAlternateAddresses(org.apache.cxf.message.Exchange)>(null);

        if $r3 == null goto label2;

        $z1 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z1 == 0 goto label3;

     label2:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Strategy is not initialized");

        throw $r4;

     label3:
        return $r1;
    }
}
