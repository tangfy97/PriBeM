final class com.mycila.inject.internal.guava.collect.BstCountBasedBalancePolicies$3 extends java.lang.Object implements com.mycila.inject.internal.guava.collect.BstBalancePolicy
{
    final com.mycila.inject.internal.guava.collect.BstBalancePolicy val$singleBalancePolicy;
    final com.mycila.inject.internal.guava.collect.BstAggregate val$countAggregate;

    void <init>(com.mycila.inject.internal.guava.collect.BstBalancePolicy, com.mycila.inject.internal.guava.collect.BstAggregate)
    {
        com.mycila.inject.internal.guava.collect.BstBalancePolicy r1;
        com.mycila.inject.internal.guava.collect.BstAggregate r2;
        com.mycila.inject.internal.guava.collect.BstCountBasedBalancePolicies$3 r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.BstCountBasedBalancePolicies$3;

        r1 := @parameter0: com.mycila.inject.internal.guava.collect.BstBalancePolicy;

        r2 := @parameter1: com.mycila.inject.internal.guava.collect.BstAggregate;

        r0.<com.mycila.inject.internal.guava.collect.BstCountBasedBalancePolicies$3: com.mycila.inject.internal.guava.collect.BstBalancePolicy val$singleBalancePolicy> = r1;

        r0.<com.mycila.inject.internal.guava.collect.BstCountBasedBalancePolicies$3: com.mycila.inject.internal.guava.collect.BstAggregate val$countAggregate> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.mycila.inject.internal.guava.collect.BstNode balance(com.mycila.inject.internal.guava.collect.BstNodeFactory, com.mycila.inject.internal.guava.collect.BstNode, com.mycila.inject.internal.guava.collect.BstNode, com.mycila.inject.internal.guava.collect.BstNode)
    {
        com.mycila.inject.internal.guava.collect.BstAggregate $r3, $r4;
        com.mycila.inject.internal.guava.collect.BstNodeFactory r5;
        com.mycila.inject.internal.guava.collect.BstCountBasedBalancePolicies$3 r2;
        int $i0, $i1, $i2, $i3;
        com.mycila.inject.internal.guava.collect.BstBalancePolicy $r12, $r19, $r22, $r24;
        com.mycila.inject.internal.guava.collect.BstNode r0, r1, r6, $r7, $r9, $r10, $r13, $r14, $r16, $r17, $r20, $r21, $r23, $r25;
        com.mycila.inject.internal.guava.collect.BstSide $r8, $r11, $r15, $r18;

        r2 := @this: com.mycila.inject.internal.guava.collect.BstCountBasedBalancePolicies$3;

        r5 := @parameter0: com.mycila.inject.internal.guava.collect.BstNodeFactory;

        r6 := @parameter1: com.mycila.inject.internal.guava.collect.BstNode;

        r0 := @parameter2: com.mycila.inject.internal.guava.collect.BstNode;

        r1 := @parameter3: com.mycila.inject.internal.guava.collect.BstNode;

        if r0 != null goto label1;

        $r24 = r2.<com.mycila.inject.internal.guava.collect.BstCountBasedBalancePolicies$3: com.mycila.inject.internal.guava.collect.BstBalancePolicy val$singleBalancePolicy>;

        $r25 = staticinvoke <com.mycila.inject.internal.guava.collect.BstOperations: com.mycila.inject.internal.guava.collect.BstNode insertMin(com.mycila.inject.internal.guava.collect.BstNode,com.mycila.inject.internal.guava.collect.BstNode,com.mycila.inject.internal.guava.collect.BstNodeFactory,com.mycila.inject.internal.guava.collect.BstBalancePolicy)>(r1, r6, r5, $r24);

        return $r25;

     label1:
        if r1 != null goto label2;

        $r22 = r2.<com.mycila.inject.internal.guava.collect.BstCountBasedBalancePolicies$3: com.mycila.inject.internal.guava.collect.BstBalancePolicy val$singleBalancePolicy>;

        $r23 = staticinvoke <com.mycila.inject.internal.guava.collect.BstOperations: com.mycila.inject.internal.guava.collect.BstNode insertMax(com.mycila.inject.internal.guava.collect.BstNode,com.mycila.inject.internal.guava.collect.BstNode,com.mycila.inject.internal.guava.collect.BstNodeFactory,com.mycila.inject.internal.guava.collect.BstBalancePolicy)>(r0, r6, r5, $r22);

        return $r23;

     label2:
        $r3 = r2.<com.mycila.inject.internal.guava.collect.BstCountBasedBalancePolicies$3: com.mycila.inject.internal.guava.collect.BstAggregate val$countAggregate>;

        $i0 = interfaceinvoke $r3.<com.mycila.inject.internal.guava.collect.BstAggregate: int treeValue(com.mycila.inject.internal.guava.collect.BstNode)>(r0);

        $r4 = r2.<com.mycila.inject.internal.guava.collect.BstCountBasedBalancePolicies$3: com.mycila.inject.internal.guava.collect.BstAggregate val$countAggregate>;

        $i1 = interfaceinvoke $r4.<com.mycila.inject.internal.guava.collect.BstAggregate: int treeValue(com.mycila.inject.internal.guava.collect.BstNode)>(r1);

        $i2 = 4 * $i0;

        if $i2 > $i1 goto label3;

        $r15 = <com.mycila.inject.internal.guava.collect.BstSide: com.mycila.inject.internal.guava.collect.BstSide LEFT>;

        $r16 = virtualinvoke r1.<com.mycila.inject.internal.guava.collect.BstNode: com.mycila.inject.internal.guava.collect.BstNode childOrNull(com.mycila.inject.internal.guava.collect.BstSide)>($r15);

        $r17 = virtualinvoke r2.<com.mycila.inject.internal.guava.collect.BstCountBasedBalancePolicies$3: com.mycila.inject.internal.guava.collect.BstNode balance(com.mycila.inject.internal.guava.collect.BstNodeFactory,com.mycila.inject.internal.guava.collect.BstNode,com.mycila.inject.internal.guava.collect.BstNode,com.mycila.inject.internal.guava.collect.BstNode)>(r5, r6, r0, $r16);

        $r19 = r2.<com.mycila.inject.internal.guava.collect.BstCountBasedBalancePolicies$3: com.mycila.inject.internal.guava.collect.BstBalancePolicy val$singleBalancePolicy>;

        $r18 = <com.mycila.inject.internal.guava.collect.BstSide: com.mycila.inject.internal.guava.collect.BstSide RIGHT>;

        $r20 = virtualinvoke r1.<com.mycila.inject.internal.guava.collect.BstNode: com.mycila.inject.internal.guava.collect.BstNode childOrNull(com.mycila.inject.internal.guava.collect.BstSide)>($r18);

        $r21 = interfaceinvoke $r19.<com.mycila.inject.internal.guava.collect.BstBalancePolicy: com.mycila.inject.internal.guava.collect.BstNode balance(com.mycila.inject.internal.guava.collect.BstNodeFactory,com.mycila.inject.internal.guava.collect.BstNode,com.mycila.inject.internal.guava.collect.BstNode,com.mycila.inject.internal.guava.collect.BstNode)>(r5, r1, $r17, $r20);

        return $r21;

     label3:
        $i3 = 4 * $i1;

        if $i3 > $i0 goto label4;

        $r8 = <com.mycila.inject.internal.guava.collect.BstSide: com.mycila.inject.internal.guava.collect.BstSide RIGHT>;

        $r9 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.BstNode: com.mycila.inject.internal.guava.collect.BstNode childOrNull(com.mycila.inject.internal.guava.collect.BstSide)>($r8);

        $r10 = virtualinvoke r2.<com.mycila.inject.internal.guava.collect.BstCountBasedBalancePolicies$3: com.mycila.inject.internal.guava.collect.BstNode balance(com.mycila.inject.internal.guava.collect.BstNodeFactory,com.mycila.inject.internal.guava.collect.BstNode,com.mycila.inject.internal.guava.collect.BstNode,com.mycila.inject.internal.guava.collect.BstNode)>(r5, r6, $r9, r1);

        $r12 = r2.<com.mycila.inject.internal.guava.collect.BstCountBasedBalancePolicies$3: com.mycila.inject.internal.guava.collect.BstBalancePolicy val$singleBalancePolicy>;

        $r11 = <com.mycila.inject.internal.guava.collect.BstSide: com.mycila.inject.internal.guava.collect.BstSide LEFT>;

        $r13 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.BstNode: com.mycila.inject.internal.guava.collect.BstNode childOrNull(com.mycila.inject.internal.guava.collect.BstSide)>($r11);

        $r14 = interfaceinvoke $r12.<com.mycila.inject.internal.guava.collect.BstBalancePolicy: com.mycila.inject.internal.guava.collect.BstNode balance(com.mycila.inject.internal.guava.collect.BstNodeFactory,com.mycila.inject.internal.guava.collect.BstNode,com.mycila.inject.internal.guava.collect.BstNode,com.mycila.inject.internal.guava.collect.BstNode)>(r5, r0, $r13, $r10);

        return $r14;

     label4:
        $r7 = virtualinvoke r5.<com.mycila.inject.internal.guava.collect.BstNodeFactory: com.mycila.inject.internal.guava.collect.BstNode createNode(com.mycila.inject.internal.guava.collect.BstNode,com.mycila.inject.internal.guava.collect.BstNode,com.mycila.inject.internal.guava.collect.BstNode)>(r6, r0, r1);

        return $r7;
    }

    public com.mycila.inject.internal.guava.collect.BstNode combine(com.mycila.inject.internal.guava.collect.BstNodeFactory, com.mycila.inject.internal.guava.collect.BstNode, com.mycila.inject.internal.guava.collect.BstNode)
    {
        com.mycila.inject.internal.guava.collect.BstAggregate $r3, $r4;
        com.mycila.inject.internal.guava.collect.BstNodeFactory r5;
        com.mycila.inject.internal.guava.collect.BstCountBasedBalancePolicies$3 r2;
        int $i0, $i1, $i2, $i3;
        com.mycila.inject.internal.guava.collect.BstBalancePolicy $r6, $r12, $r19;
        com.mycila.inject.internal.guava.collect.BstNode r0, r1, $r7, $r9, $r10, $r13, $r14, $r16, $r17, $r20, $r21;
        com.mycila.inject.internal.guava.collect.BstSide $r8, $r11, $r15, $r18;

        r2 := @this: com.mycila.inject.internal.guava.collect.BstCountBasedBalancePolicies$3;

        r5 := @parameter0: com.mycila.inject.internal.guava.collect.BstNodeFactory;

        r0 := @parameter1: com.mycila.inject.internal.guava.collect.BstNode;

        r1 := @parameter2: com.mycila.inject.internal.guava.collect.BstNode;

        if r0 != null goto label1;

        return r1;

     label1:
        if r1 != null goto label2;

        return r0;

     label2:
        $r3 = r2.<com.mycila.inject.internal.guava.collect.BstCountBasedBalancePolicies$3: com.mycila.inject.internal.guava.collect.BstAggregate val$countAggregate>;

        $i0 = interfaceinvoke $r3.<com.mycila.inject.internal.guava.collect.BstAggregate: int treeValue(com.mycila.inject.internal.guava.collect.BstNode)>(r0);

        $r4 = r2.<com.mycila.inject.internal.guava.collect.BstCountBasedBalancePolicies$3: com.mycila.inject.internal.guava.collect.BstAggregate val$countAggregate>;

        $i1 = interfaceinvoke $r4.<com.mycila.inject.internal.guava.collect.BstAggregate: int treeValue(com.mycila.inject.internal.guava.collect.BstNode)>(r1);

        $i2 = 4 * $i0;

        if $i2 > $i1 goto label3;

        $r15 = <com.mycila.inject.internal.guava.collect.BstSide: com.mycila.inject.internal.guava.collect.BstSide LEFT>;

        $r16 = virtualinvoke r1.<com.mycila.inject.internal.guava.collect.BstNode: com.mycila.inject.internal.guava.collect.BstNode childOrNull(com.mycila.inject.internal.guava.collect.BstSide)>($r15);

        $r17 = virtualinvoke r2.<com.mycila.inject.internal.guava.collect.BstCountBasedBalancePolicies$3: com.mycila.inject.internal.guava.collect.BstNode combine(com.mycila.inject.internal.guava.collect.BstNodeFactory,com.mycila.inject.internal.guava.collect.BstNode,com.mycila.inject.internal.guava.collect.BstNode)>(r5, r0, $r16);

        $r19 = r2.<com.mycila.inject.internal.guava.collect.BstCountBasedBalancePolicies$3: com.mycila.inject.internal.guava.collect.BstBalancePolicy val$singleBalancePolicy>;

        $r18 = <com.mycila.inject.internal.guava.collect.BstSide: com.mycila.inject.internal.guava.collect.BstSide RIGHT>;

        $r20 = virtualinvoke r1.<com.mycila.inject.internal.guava.collect.BstNode: com.mycila.inject.internal.guava.collect.BstNode childOrNull(com.mycila.inject.internal.guava.collect.BstSide)>($r18);

        $r21 = interfaceinvoke $r19.<com.mycila.inject.internal.guava.collect.BstBalancePolicy: com.mycila.inject.internal.guava.collect.BstNode balance(com.mycila.inject.internal.guava.collect.BstNodeFactory,com.mycila.inject.internal.guava.collect.BstNode,com.mycila.inject.internal.guava.collect.BstNode,com.mycila.inject.internal.guava.collect.BstNode)>(r5, r1, $r17, $r20);

        return $r21;

     label3:
        $i3 = 4 * $i1;

        if $i3 > $i0 goto label4;

        $r8 = <com.mycila.inject.internal.guava.collect.BstSide: com.mycila.inject.internal.guava.collect.BstSide RIGHT>;

        $r9 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.BstNode: com.mycila.inject.internal.guava.collect.BstNode childOrNull(com.mycila.inject.internal.guava.collect.BstSide)>($r8);

        $r10 = virtualinvoke r2.<com.mycila.inject.internal.guava.collect.BstCountBasedBalancePolicies$3: com.mycila.inject.internal.guava.collect.BstNode combine(com.mycila.inject.internal.guava.collect.BstNodeFactory,com.mycila.inject.internal.guava.collect.BstNode,com.mycila.inject.internal.guava.collect.BstNode)>(r5, $r9, r1);

        $r12 = r2.<com.mycila.inject.internal.guava.collect.BstCountBasedBalancePolicies$3: com.mycila.inject.internal.guava.collect.BstBalancePolicy val$singleBalancePolicy>;

        $r11 = <com.mycila.inject.internal.guava.collect.BstSide: com.mycila.inject.internal.guava.collect.BstSide LEFT>;

        $r13 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.BstNode: com.mycila.inject.internal.guava.collect.BstNode childOrNull(com.mycila.inject.internal.guava.collect.BstSide)>($r11);

        $r14 = interfaceinvoke $r12.<com.mycila.inject.internal.guava.collect.BstBalancePolicy: com.mycila.inject.internal.guava.collect.BstNode balance(com.mycila.inject.internal.guava.collect.BstNodeFactory,com.mycila.inject.internal.guava.collect.BstNode,com.mycila.inject.internal.guava.collect.BstNode,com.mycila.inject.internal.guava.collect.BstNode)>(r5, r0, $r13, $r10);

        return $r14;

     label4:
        $r6 = r2.<com.mycila.inject.internal.guava.collect.BstCountBasedBalancePolicies$3: com.mycila.inject.internal.guava.collect.BstBalancePolicy val$singleBalancePolicy>;

        $r7 = interfaceinvoke $r6.<com.mycila.inject.internal.guava.collect.BstBalancePolicy: com.mycila.inject.internal.guava.collect.BstNode combine(com.mycila.inject.internal.guava.collect.BstNodeFactory,com.mycila.inject.internal.guava.collect.BstNode,com.mycila.inject.internal.guava.collect.BstNode)>(r5, r0, r1);

        return $r7;
    }
}
