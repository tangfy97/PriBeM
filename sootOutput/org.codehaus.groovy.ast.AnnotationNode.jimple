public class org.codehaus.groovy.ast.AnnotationNode extends org.codehaus.groovy.ast.ASTNode
{
    public static final int TYPE_TARGET;
    public static final int CONSTRUCTOR_TARGET;
    public static final int METHOD_TARGET;
    public static final int FIELD_TARGET;
    public static final int PARAMETER_TARGET;
    public static final int LOCAL_VARIABLE_TARGET;
    public static final int ANNOTATION_TARGET;
    private static final int ALL_TARGETS;
    private final org.codehaus.groovy.ast.ClassNode classNode;
    private java.util.Map members;
    private boolean runtimeRetention;
    private boolean sourceRetention;
    private int allowedTargets;
    private boolean valid;

    public void <init>(org.codehaus.groovy.ast.ClassNode)
    {
        java.util.HashMap $r1;
        org.codehaus.groovy.ast.AnnotationNode r0;
        org.codehaus.groovy.ast.ClassNode r2;

        r0 := @this: org.codehaus.groovy.ast.AnnotationNode;

        r2 := @parameter0: org.codehaus.groovy.ast.ClassNode;

        specialinvoke r0.<org.codehaus.groovy.ast.ASTNode: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.codehaus.groovy.ast.AnnotationNode: java.util.Map members> = $r1;

        r0.<org.codehaus.groovy.ast.AnnotationNode: boolean runtimeRetention> = 0;

        r0.<org.codehaus.groovy.ast.AnnotationNode: boolean sourceRetention> = 0;

        r0.<org.codehaus.groovy.ast.AnnotationNode: int allowedTargets> = 127;

        r0.<org.codehaus.groovy.ast.AnnotationNode: org.codehaus.groovy.ast.ClassNode classNode> = r2;

        return;
    }

    public org.codehaus.groovy.ast.ClassNode getClassNode()
    {
        org.codehaus.groovy.ast.AnnotationNode r0;
        org.codehaus.groovy.ast.ClassNode $r1;

        r0 := @this: org.codehaus.groovy.ast.AnnotationNode;

        $r1 = r0.<org.codehaus.groovy.ast.AnnotationNode: org.codehaus.groovy.ast.ClassNode classNode>;

        return $r1;
    }

    public java.util.Map getMembers()
    {
        org.codehaus.groovy.ast.AnnotationNode r0;
        java.util.Map $r1;

        r0 := @this: org.codehaus.groovy.ast.AnnotationNode;

        $r1 = r0.<org.codehaus.groovy.ast.AnnotationNode: java.util.Map members>;

        return $r1;
    }

    public org.codehaus.groovy.ast.expr.Expression getMember(java.lang.String)
    {
        org.codehaus.groovy.ast.AnnotationNode r0;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String r1;
        org.codehaus.groovy.ast.expr.Expression $r4;

        r0 := @this: org.codehaus.groovy.ast.AnnotationNode;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.codehaus.groovy.ast.AnnotationNode: java.util.Map members>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (org.codehaus.groovy.ast.expr.Expression) $r3;

        return $r4;
    }

    public void addMember(java.lang.String, org.codehaus.groovy.ast.expr.Expression)
    {
        org.codehaus.groovy.ast.AnnotationNode r0;
        java.util.ArrayList $r5;
        java.util.List r9;
        java.util.Map $r2, $r6, $r8;
        java.lang.Object $r3;
        java.lang.String r1;
        org.codehaus.groovy.ast.expr.Expression r4, r7;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.ast.AnnotationNode;

        r1 := @parameter0: java.lang.String;

        r7 := @parameter1: org.codehaus.groovy.ast.expr.Expression;

        $r2 = r0.<org.codehaus.groovy.ast.AnnotationNode: java.util.Map members>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (org.codehaus.groovy.ast.expr.Expression) $r3;

        if r4 != null goto label1;

        $r8 = r0.<org.codehaus.groovy.ast.AnnotationNode: java.util.Map members>;

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r7);

        goto label4;

     label1:
        $z0 = r4 instanceof java.util.List;

        if $z0 == 0 goto label2;

        r9 = (java.util.List) r4;

        goto label3;

     label2:
        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r9 = $r5;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r4);

        $r6 = r0.<org.codehaus.groovy.ast.AnnotationNode: java.util.Map members>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r5);

     label3:
        interfaceinvoke r9.<java.util.List: boolean add(java.lang.Object)>(r7);

     label4:
        return;
    }

    public void setMember(java.lang.String, org.codehaus.groovy.ast.expr.Expression)
    {
        org.codehaus.groovy.ast.AnnotationNode r0;
        java.util.Map $r3;
        java.lang.String r1;
        org.codehaus.groovy.ast.expr.Expression r2;

        r0 := @this: org.codehaus.groovy.ast.AnnotationNode;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.codehaus.groovy.ast.expr.Expression;

        $r3 = r0.<org.codehaus.groovy.ast.AnnotationNode: java.util.Map members>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public boolean isBuiltIn()
    {
        org.codehaus.groovy.ast.AnnotationNode r0;

        r0 := @this: org.codehaus.groovy.ast.AnnotationNode;

        return 0;
    }

    public boolean hasRuntimeRetention()
    {
        org.codehaus.groovy.ast.AnnotationNode r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.ast.AnnotationNode;

        $z0 = r0.<org.codehaus.groovy.ast.AnnotationNode: boolean runtimeRetention>;

        return $z0;
    }

    public void setRuntimeRetention(boolean)
    {
        org.codehaus.groovy.ast.AnnotationNode r0;
        boolean z0;

        r0 := @this: org.codehaus.groovy.ast.AnnotationNode;

        z0 := @parameter0: boolean;

        r0.<org.codehaus.groovy.ast.AnnotationNode: boolean runtimeRetention> = z0;

        return;
    }

    public boolean hasSourceRetention()
    {
        org.codehaus.groovy.ast.AnnotationNode r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.ast.AnnotationNode;

        $z0 = r0.<org.codehaus.groovy.ast.AnnotationNode: boolean sourceRetention>;

        return $z0;
    }

    public void setSourceRetention(boolean)
    {
        org.codehaus.groovy.ast.AnnotationNode r0;
        boolean z0;

        r0 := @this: org.codehaus.groovy.ast.AnnotationNode;

        z0 := @parameter0: boolean;

        r0.<org.codehaus.groovy.ast.AnnotationNode: boolean sourceRetention> = z0;

        return;
    }

    public void setAllowedTargets(int)
    {
        int i0;
        org.codehaus.groovy.ast.AnnotationNode r0;

        r0 := @this: org.codehaus.groovy.ast.AnnotationNode;

        i0 := @parameter0: int;

        r0.<org.codehaus.groovy.ast.AnnotationNode: int allowedTargets> = i0;

        return;
    }

    public boolean isTargetAllowed(int)
    {
        org.codehaus.groovy.ast.AnnotationNode r0;
        int i0, $i1, $i2;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.ast.AnnotationNode;

        i0 := @parameter0: int;

        $i1 = r0.<org.codehaus.groovy.ast.AnnotationNode: int allowedTargets>;

        $i2 = $i1 & i0;

        if $i2 != i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void setValid(boolean)
    {
        org.codehaus.groovy.ast.AnnotationNode r0;
        boolean z0;

        r0 := @this: org.codehaus.groovy.ast.AnnotationNode;

        z0 := @parameter0: boolean;

        r0.<org.codehaus.groovy.ast.AnnotationNode: boolean valid> = z0;

        return;
    }

    public boolean isValid()
    {
        org.codehaus.groovy.ast.AnnotationNode r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.ast.AnnotationNode;

        $z0 = r0.<org.codehaus.groovy.ast.AnnotationNode: boolean valid>;

        return $z0;
    }

    public static final java.lang.String targetToName(int)
    {
        int i0;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 4: goto label3;
            case 8: goto label4;
            case 16: goto label5;
            case 32: goto label6;
            case 64: goto label7;
            default: goto label8;
        };

     label1:
        return "TYPE";

     label2:
        return "CONSTRUCTOR";

     label3:
        return "METHOD";

     label4:
        return "FIELD";

     label5:
        return "PARAMETER";

     label6:
        return "LOCAL_VARIABLE";

     label7:
        return "ANNOTATION";

     label8:
        return "unknown target";
    }

    public static void <clinit>()
    {
        <org.codehaus.groovy.ast.AnnotationNode: int ALL_TARGETS> = 127;

        <org.codehaus.groovy.ast.AnnotationNode: int ANNOTATION_TARGET> = 64;

        <org.codehaus.groovy.ast.AnnotationNode: int LOCAL_VARIABLE_TARGET> = 32;

        <org.codehaus.groovy.ast.AnnotationNode: int PARAMETER_TARGET> = 16;

        <org.codehaus.groovy.ast.AnnotationNode: int FIELD_TARGET> = 8;

        <org.codehaus.groovy.ast.AnnotationNode: int METHOD_TARGET> = 4;

        <org.codehaus.groovy.ast.AnnotationNode: int CONSTRUCTOR_TARGET> = 2;

        <org.codehaus.groovy.ast.AnnotationNode: int TYPE_TARGET> = 1;

        return;
    }
}
