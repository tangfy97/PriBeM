public class org.apache.tika.parser.code.SourceCodeParser extends java.lang.Object implements org.apache.tika.parser.Parser
{
    private static final long serialVersionUID;
    private static final java.util.regex.Pattern authorPattern;
    private static final java.util.Map TYPES_TO_RENDERER;
    private static final org.apache.tika.config.ServiceLoader LOADER;
    private static final org.ccil.cowan.tagsoup.Schema HTML_SCHEMA;

    public void <init>()
    {
        org.apache.tika.parser.code.SourceCodeParser r0;

        r0 := @this: org.apache.tika.parser.code.SourceCodeParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.util.Set getSupportedTypes(org.apache.tika.parser.ParseContext)
    {
        java.util.Map $r0;
        org.apache.tika.parser.ParseContext r3;
        java.util.Set $r1;
        org.apache.tika.parser.code.SourceCodeParser r2;

        r2 := @this: org.apache.tika.parser.code.SourceCodeParser;

        r3 := @parameter0: org.apache.tika.parser.ParseContext;

        $r0 = <org.apache.tika.parser.code.SourceCodeParser: java.util.Map TYPES_TO_RENDERER>;

        $r1 = interfaceinvoke $r0.<java.util.Map: java.util.Set keySet()>();

        return $r1;
    }

    public void parse(java.io.InputStream, org.xml.sax.ContentHandler, org.apache.tika.metadata.Metadata, org.apache.tika.parser.ParseContext) throws java.io.IOException, org.xml.sax.SAXException, org.apache.tika.exception.TikaException
    {
        org.apache.tika.metadata.Metadata r3;
        org.apache.tika.metadata.Property $r36;
        org.apache.tika.io.CloseShieldInputStream $r1;
        org.apache.tika.parser.ParseContext r4;
        java.lang.StringBuilder $r14, $r30, $r31, $r33;
        org.ccil.cowan.tagsoup.Schema $r23, r25;
        java.lang.Throwable $r37;
        org.apache.tika.config.ServiceLoader $r5, $r7;
        org.apache.tika.mime.MediaType $r11;
        org.apache.tika.parser.code.SourceCodeParser r17;
        java.nio.charset.Charset $r8;
        int i0;
        java.lang.String $r9, $r10, $r12, $r13, $r15, $r16, $r18, $r20, $r21, $r22, $r32, $r34, $r35;
        org.xml.sax.ContentHandler r27;
        org.xml.sax.InputSource $r28;
        com.uwyn.jhighlight.renderer.Renderer $r19;
        org.ccil.cowan.tagsoup.Parser $r26;
        java.io.StringReader $r29;
        org.apache.tika.detect.AutoDetectReader $r0;
        java.lang.Object $r6, $r24;
        java.io.InputStream r2;

        r17 := @this: org.apache.tika.parser.code.SourceCodeParser;

        r2 := @parameter0: java.io.InputStream;

        r27 := @parameter1: org.xml.sax.ContentHandler;

        r3 := @parameter2: org.apache.tika.metadata.Metadata;

        r4 := @parameter3: org.apache.tika.parser.ParseContext;

        $r0 = new org.apache.tika.detect.AutoDetectReader;

        $r1 = new org.apache.tika.io.CloseShieldInputStream;

        specialinvoke $r1.<org.apache.tika.io.CloseShieldInputStream: void <init>(java.io.InputStream)>(r2);

        $r5 = <org.apache.tika.parser.code.SourceCodeParser: org.apache.tika.config.ServiceLoader LOADER>;

        $r6 = virtualinvoke r4.<org.apache.tika.parser.ParseContext: java.lang.Object get(java.lang.Class,java.lang.Object)>(class "Lorg/apache/tika/config/ServiceLoader;", $r5);

        $r7 = (org.apache.tika.config.ServiceLoader) $r6;

        specialinvoke $r0.<org.apache.tika.detect.AutoDetectReader: void <init>(java.io.InputStream,org.apache.tika.metadata.Metadata,org.apache.tika.config.ServiceLoader)>($r1, r3, $r7);

     label1:
        $r8 = virtualinvoke $r0.<org.apache.tika.detect.AutoDetectReader: java.nio.charset.Charset getCharset()>();

        $r9 = virtualinvoke r3.<org.apache.tika.metadata.Metadata: java.lang.String get(java.lang.String)>("Content-Type");

        $r10 = virtualinvoke r3.<org.apache.tika.metadata.Metadata: java.lang.String get(java.lang.String)>("resourceName");

        if $r9 == null goto label5;

        if $r10 == null goto label5;

        $r11 = staticinvoke <org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType parse(java.lang.String)>($r9);

        $r12 = virtualinvoke $r11.<org.apache.tika.mime.MediaType: java.lang.String toString()>();

        virtualinvoke r3.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("Content-Type", $r12);

        $r13 = virtualinvoke $r8.<java.nio.charset.Charset: java.lang.String name()>();

        virtualinvoke r3.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("Content-Encoding", $r13);

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        i0 = 0;

     label2:
        $r15 = virtualinvoke $r0.<org.apache.tika.detect.AutoDetectReader: java.lang.String readLine()>();

        if $r15 == null goto label4;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r32 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");

        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r35 = specialinvoke r17.<org.apache.tika.parser.code.SourceCodeParser: java.lang.String parserAuthor(java.lang.String)>($r15);

        if $r35 == null goto label3;

        $r36 = <org.apache.tika.metadata.TikaCoreProperties: org.apache.tika.metadata.Property CREATOR>;

        virtualinvoke r3.<org.apache.tika.metadata.Metadata: void add(org.apache.tika.metadata.Property,java.lang.String)>($r36, $r35);

     label3:
        i0 = i0 + 1;

        goto label2;

     label4:
        $r16 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        virtualinvoke r3.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("LoC", $r16);

        $r18 = virtualinvoke $r11.<org.apache.tika.mime.MediaType: java.lang.String toString()>();

        $r19 = specialinvoke r17.<org.apache.tika.parser.code.SourceCodeParser: com.uwyn.jhighlight.renderer.Renderer getRenderer(java.lang.String)>($r18);

        $r20 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r21 = virtualinvoke $r8.<java.nio.charset.Charset: java.lang.String name()>();

        $r22 = interfaceinvoke $r19.<com.uwyn.jhighlight.renderer.Renderer: java.lang.String highlight(java.lang.String,java.lang.String,java.lang.String,boolean)>($r10, $r20, $r21, 0);

        $r23 = <org.apache.tika.parser.code.SourceCodeParser: org.ccil.cowan.tagsoup.Schema HTML_SCHEMA>;

        $r24 = virtualinvoke r4.<org.apache.tika.parser.ParseContext: java.lang.Object get(java.lang.Class,java.lang.Object)>(class "Lorg/ccil/cowan/tagsoup/Schema;", $r23);

        r25 = (org.ccil.cowan.tagsoup.Schema) $r24;

        $r26 = new org.ccil.cowan.tagsoup.Parser;

        specialinvoke $r26.<org.ccil.cowan.tagsoup.Parser: void <init>()>();

        virtualinvoke $r26.<org.ccil.cowan.tagsoup.Parser: void setProperty(java.lang.String,java.lang.Object)>("http://www.ccil.org/~cowan/tagsoup/properties/schema", r25);

        virtualinvoke $r26.<org.ccil.cowan.tagsoup.Parser: void setContentHandler(org.xml.sax.ContentHandler)>(r27);

        $r28 = new org.xml.sax.InputSource;

        $r29 = new java.io.StringReader;

        specialinvoke $r29.<java.io.StringReader: void <init>(java.lang.String)>($r22);

        specialinvoke $r28.<org.xml.sax.InputSource: void <init>(java.io.Reader)>($r29);

        virtualinvoke $r26.<org.ccil.cowan.tagsoup.Parser: void parse(org.xml.sax.InputSource)>($r28);

     label5:
        virtualinvoke $r0.<org.apache.tika.detect.AutoDetectReader: void close()>();

        goto label8;

     label6:
        $r37 := @caughtexception;

     label7:
        virtualinvoke $r0.<org.apache.tika.detect.AutoDetectReader: void close()>();

        throw $r37;

     label8:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    private com.uwyn.jhighlight.renderer.Renderer getRenderer(java.lang.String)
    {
        com.uwyn.jhighlight.renderer.Renderer $r5;
        java.lang.RuntimeException $r6;
        org.apache.tika.mime.MediaType $r1;
        org.apache.tika.parser.code.SourceCodeParser r11;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String r0, r4, $r10;

        r11 := @this: org.apache.tika.parser.code.SourceCodeParser;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType parse(java.lang.String)>(r0);

        $r2 = <org.apache.tika.parser.code.SourceCodeParser: java.util.Map TYPES_TO_RENDERER>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        r4 = (java.lang.String) $r3;

        if r4 != null goto label1;

        $r6 = new java.lang.RuntimeException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unparseable content type ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>($r10);

        throw $r6;

     label1:
        $r5 = staticinvoke <com.uwyn.jhighlight.renderer.XhtmlRendererFactory: com.uwyn.jhighlight.renderer.Renderer getRenderer(java.lang.String)>(r4);

        return $r5;
    }

    private java.lang.String parserAuthor(java.lang.String)
    {
        java.util.regex.Matcher $r2;
        java.lang.String r0, $r3, $r4;
        java.util.regex.Pattern $r1;
        org.apache.tika.parser.code.SourceCodeParser r5;
        boolean $z0;

        r5 := @this: org.apache.tika.parser.code.SourceCodeParser;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.apache.tika.parser.code.SourceCodeParser: java.util.regex.Pattern authorPattern>;

        $r2 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

        $z0 = virtualinvoke $r2.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke $r2.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        return $r4;

     label1:
        return null;
    }

    static void <clinit>()
    {
        org.apache.tika.config.ServiceLoader $r2;
        org.apache.tika.parser.code.SourceCodeParser$1 $r1;
        java.lang.Class $r3;
        java.util.regex.Pattern $r0;
        java.lang.ClassLoader $r4;
        org.ccil.cowan.tagsoup.HTMLSchema $r5;

        <org.apache.tika.parser.code.SourceCodeParser: long serialVersionUID> = -4543476498190054160L;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(?im)@author (.*) *$");

        <org.apache.tika.parser.code.SourceCodeParser: java.util.regex.Pattern authorPattern> = $r0;

        $r1 = new org.apache.tika.parser.code.SourceCodeParser$1;

        specialinvoke $r1.<org.apache.tika.parser.code.SourceCodeParser$1: void <init>()>();

        <org.apache.tika.parser.code.SourceCodeParser: java.util.Map TYPES_TO_RENDERER> = $r1;

        $r2 = new org.apache.tika.config.ServiceLoader;

        $r3 = class "Lorg/apache/tika/parser/code/SourceCodeParser;";

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        specialinvoke $r2.<org.apache.tika.config.ServiceLoader: void <init>(java.lang.ClassLoader)>($r4);

        <org.apache.tika.parser.code.SourceCodeParser: org.apache.tika.config.ServiceLoader LOADER> = $r2;

        $r5 = new org.ccil.cowan.tagsoup.HTMLSchema;

        specialinvoke $r5.<org.ccil.cowan.tagsoup.HTMLSchema: void <init>()>();

        <org.apache.tika.parser.code.SourceCodeParser: org.ccil.cowan.tagsoup.Schema HTML_SCHEMA> = $r5;

        return;
    }
}
