public class org.springframework.jmx.access.MBeanProxyFactoryBean extends org.springframework.jmx.access.MBeanClientInterceptor implements org.springframework.beans.factory.FactoryBean, org.springframework.beans.factory.BeanClassLoaderAware, org.springframework.beans.factory.InitializingBean
{
    private java.lang.Class proxyInterface;
    private java.lang.ClassLoader beanClassLoader;
    private java.lang.Object mbeanProxy;

    public void <init>()
    {
        org.springframework.jmx.access.MBeanProxyFactoryBean r0;
        java.lang.ClassLoader $r1;

        r0 := @this: org.springframework.jmx.access.MBeanProxyFactoryBean;

        specialinvoke r0.<org.springframework.jmx.access.MBeanClientInterceptor: void <init>()>();

        $r1 = staticinvoke <org.springframework.util.ClassUtils: java.lang.ClassLoader getDefaultClassLoader()>();

        r0.<org.springframework.jmx.access.MBeanProxyFactoryBean: java.lang.ClassLoader beanClassLoader> = $r1;

        return;
    }

    public void setProxyInterface(java.lang.Class)
    {
        org.springframework.jmx.access.MBeanProxyFactoryBean r0;
        java.lang.Class r1;

        r0 := @this: org.springframework.jmx.access.MBeanProxyFactoryBean;

        r1 := @parameter0: java.lang.Class;

        r0.<org.springframework.jmx.access.MBeanProxyFactoryBean: java.lang.Class proxyInterface> = r1;

        return;
    }

    public void setBeanClassLoader(java.lang.ClassLoader)
    {
        org.springframework.jmx.access.MBeanProxyFactoryBean r0;
        java.lang.ClassLoader r1;

        r0 := @this: org.springframework.jmx.access.MBeanProxyFactoryBean;

        r1 := @parameter0: java.lang.ClassLoader;

        r0.<org.springframework.jmx.access.MBeanProxyFactoryBean: java.lang.ClassLoader beanClassLoader> = r1;

        return;
    }

    public void afterPropertiesSet() throws org.springframework.jmx.MBeanServerNotFoundException, org.springframework.jmx.access.MBeanInfoRetrievalException
    {
        org.springframework.jmx.access.MBeanProxyFactoryBean r0;
        java.lang.IllegalArgumentException $r6;
        org.springframework.aop.framework.ProxyFactory $r7;
        java.lang.Class $r1, $r2, $r3, $r4, $r5, $r8;
        java.lang.Object $r10;
        java.lang.ClassLoader $r9;

        r0 := @this: org.springframework.jmx.access.MBeanProxyFactoryBean;

        specialinvoke r0.<org.springframework.jmx.access.MBeanClientInterceptor: void afterPropertiesSet()>();

        $r1 = r0.<org.springframework.jmx.access.MBeanProxyFactoryBean: java.lang.Class proxyInterface>;

        if $r1 != null goto label1;

        $r4 = virtualinvoke r0.<org.springframework.jmx.access.MBeanProxyFactoryBean: java.lang.Class getManagementInterface()>();

        r0.<org.springframework.jmx.access.MBeanProxyFactoryBean: java.lang.Class proxyInterface> = $r4;

        $r5 = r0.<org.springframework.jmx.access.MBeanProxyFactoryBean: java.lang.Class proxyInterface>;

        if $r5 != null goto label2;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Property \'proxyInterface\' or \'managementInterface\' is required");

        throw $r6;

     label1:
        $r2 = virtualinvoke r0.<org.springframework.jmx.access.MBeanProxyFactoryBean: java.lang.Class getManagementInterface()>();

        if $r2 != null goto label2;

        $r3 = r0.<org.springframework.jmx.access.MBeanProxyFactoryBean: java.lang.Class proxyInterface>;

        virtualinvoke r0.<org.springframework.jmx.access.MBeanProxyFactoryBean: void setManagementInterface(java.lang.Class)>($r3);

     label2:
        $r7 = new org.springframework.aop.framework.ProxyFactory;

        $r8 = r0.<org.springframework.jmx.access.MBeanProxyFactoryBean: java.lang.Class proxyInterface>;

        specialinvoke $r7.<org.springframework.aop.framework.ProxyFactory: void <init>(java.lang.Class,org.aopalliance.intercept.Interceptor)>($r8, r0);

        $r9 = r0.<org.springframework.jmx.access.MBeanProxyFactoryBean: java.lang.ClassLoader beanClassLoader>;

        $r10 = virtualinvoke $r7.<org.springframework.aop.framework.ProxyFactory: java.lang.Object getProxy(java.lang.ClassLoader)>($r9);

        r0.<org.springframework.jmx.access.MBeanProxyFactoryBean: java.lang.Object mbeanProxy> = $r10;

        return;
    }

    public java.lang.Object getObject()
    {
        org.springframework.jmx.access.MBeanProxyFactoryBean r0;
        java.lang.Object $r1;

        r0 := @this: org.springframework.jmx.access.MBeanProxyFactoryBean;

        $r1 = r0.<org.springframework.jmx.access.MBeanProxyFactoryBean: java.lang.Object mbeanProxy>;

        return $r1;
    }

    public java.lang.Class getObjectType()
    {
        org.springframework.jmx.access.MBeanProxyFactoryBean r0;
        java.lang.Class $r1;

        r0 := @this: org.springframework.jmx.access.MBeanProxyFactoryBean;

        $r1 = r0.<org.springframework.jmx.access.MBeanProxyFactoryBean: java.lang.Class proxyInterface>;

        return $r1;
    }

    public boolean isSingleton()
    {
        org.springframework.jmx.access.MBeanProxyFactoryBean r0;

        r0 := @this: org.springframework.jmx.access.MBeanProxyFactoryBean;

        return 1;
    }
}
