public class ucar.nc2.iosp.adde.AddeImage extends java.lang.Object
{
    private static int initialCapacity;
    private static java.util.LinkedHashMap hash;
    private static double memUsed;
    private static int maxCacheSize;
    private static boolean debugCache;
    private java.lang.String urlName;
    private int nelems;
    private int nlines;
    private java.awt.image.BufferedImage image;
    private ucar.ma2.Array ma;
    private boolean debug;

    public static ucar.nc2.iosp.adde.AddeImage factory(java.lang.String) throws java.io.IOException, java.net.MalformedURLException
    {
        long $l0;
        java.util.LinkedHashMap $r1, $r15;
        java.lang.String r0, $r8, $r13, $r20;
        boolean $z0, $z1, $z2;
        double $d0, $d1, $d2, $d3, $d4;
        java.io.PrintStream $r4, $r10, $r17;
        ucar.nc2.iosp.adde.AddeImage $r14, r21;
        java.lang.Object $r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r7, $r9, $r11, $r12, $r16, $r18, $r19;

        r0 := @parameter0: java.lang.String;

        $r1 = <ucar.nc2.iosp.adde.AddeImage: java.util.LinkedHashMap hash>;

        $r2 = virtualinvoke $r1.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>(r0);

        r21 = (ucar.nc2.iosp.adde.AddeImage) $r2;

        if r21 != null goto label2;

        $z1 = <ucar.nc2.iosp.adde.AddeImage: boolean debugCache>;

        if $z1 == 0 goto label1;

        $r17 = <java.lang.System: java.io.PrintStream out>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ADDE/AddeImage/ShowCache: cache miss ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r20);

     label1:
        $r14 = new ucar.nc2.iosp.adde.AddeImage;

        specialinvoke $r14.<ucar.nc2.iosp.adde.AddeImage: void <init>(java.lang.String)>(r0);

        r21 = $r14;

        $r15 = <ucar.nc2.iosp.adde.AddeImage: java.util.LinkedHashMap hash>;

        virtualinvoke $r15.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r14);

        $d2 = <ucar.nc2.iosp.adde.AddeImage: double memUsed>;

        $l0 = specialinvoke $r14.<ucar.nc2.iosp.adde.AddeImage: long getSize()>();

        $d3 = (double) $l0;

        $d4 = $d2 + $d3;

        <ucar.nc2.iosp.adde.AddeImage: double memUsed> = $d4;

        staticinvoke <ucar.nc2.iosp.adde.AddeImage: void adjustCache()>();

        goto label3;

     label2:
        $z0 = <ucar.nc2.iosp.adde.AddeImage: boolean debugCache>;

        if $z0 == 0 goto label3;

        $r10 = <java.lang.System: java.io.PrintStream out>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ADDE/AddeImage/ShowCache: cache hit ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r13);

     label3:
        $z2 = <ucar.nc2.iosp.adde.AddeImage: boolean debugCache>;

        if $z2 == 0 goto label4;

        $r4 = <java.lang.System: java.io.PrintStream out>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  memUsed = ");

        $d0 = <ucar.nc2.iosp.adde.AddeImage: double memUsed>;

        $d1 = $d0 * 1.0E-6;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Mb");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r8);

     label4:
        return r21;
    }

    public static int getMaxCacheSize()
    {
        int $i0;

        $i0 = <ucar.nc2.iosp.adde.AddeImage: int maxCacheSize>;

        return $i0;
    }

    public static void setMaxCacheSize(int)
    {
        int i0;

        i0 := @parameter0: int;

        <ucar.nc2.iosp.adde.AddeImage: int maxCacheSize> = i0;

        return;
    }

    public static int getCacheSize()
    {
        int $i0;
        double $d0, $d1;

        $d0 = <ucar.nc2.iosp.adde.AddeImage: double memUsed>;

        $d1 = $d0 * 1.0E-6;

        $i0 = (int) $d1;

        return $i0;
    }

    private static void adjustCache()
    {
        byte $b1, $b2;
        boolean $z0, $z1;
        java.util.Collection $r1;
        java.lang.StringBuilder $r7, $r9, $r10, $r11, $r12, $r13, $r15;
        long $l3, $l4;
        java.util.LinkedHashMap $r0;
        int $i0, $i5, $i6;
        java.lang.String $r8, $r14;
        double $d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10;
        java.io.PrintStream $r6;
        java.util.Iterator $r2;
        ucar.nc2.iosp.adde.AddeImage r4;
        java.lang.Object $r3;

        $i0 = <ucar.nc2.iosp.adde.AddeImage: int maxCacheSize>;

        $d0 = (double) $i0;

        d1 = $d0 * 1000000.0;

        $d2 = <ucar.nc2.iosp.adde.AddeImage: double memUsed>;

        $b1 = $d2 cmpg d1;

        $i5 = (int) $b1;

        if $i5 > 0 goto label1;

        return;

     label1:
        $r0 = <ucar.nc2.iosp.adde.AddeImage: java.util.LinkedHashMap hash>;

        $r1 = virtualinvoke $r0.<java.util.LinkedHashMap: java.util.Collection values()>();

        $r2 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $d3 = <ucar.nc2.iosp.adde.AddeImage: double memUsed>;

        $b2 = $d3 cmpl d1;

        $i6 = (int) $b2;

        if $i6 <= 0 goto label4;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (ucar.nc2.iosp.adde.AddeImage) $r3;

        $d4 = <ucar.nc2.iosp.adde.AddeImage: double memUsed>;

        $l3 = specialinvoke r4.<ucar.nc2.iosp.adde.AddeImage: long getSize()>();

        $d5 = (double) $l3;

        $d6 = $d4 - $d5;

        <ucar.nc2.iosp.adde.AddeImage: double memUsed> = $d6;

        $z1 = <ucar.nc2.iosp.adde.AddeImage: boolean debugCache>;

        if $z1 == 0 goto label3;

        $r6 = <java.lang.System: java.io.PrintStream out>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  remove = ");

        $r8 = virtualinvoke r4.<ucar.nc2.iosp.adde.AddeImage: java.lang.String getName()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" size= ");

        $l4 = specialinvoke r4.<ucar.nc2.iosp.adde.AddeImage: long getSize()>();

        $d7 = (double) $l4;

        $d8 = $d7 * 1.0E-6;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d8);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  memUsed = ");

        $d9 = <ucar.nc2.iosp.adde.AddeImage: double memUsed>;

        $d10 = $d9 * 1.0E-6;

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d10);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r14);

     label3:
        interfaceinvoke $r2.<java.util.Iterator: void remove()>();

        goto label2;

     label4:
        return;
    }

    public void <init>(java.lang.String) throws java.io.IOException, java.net.MalformedURLException
    {
        ucar.nc2.iosp.adde.AreaFile3 $r2;
        ucar.ma2.Array $r3, $r4, $r5, $r7, $r9, $r10;
        int[] $r6, $r8;
        ucar.nc2.iosp.adde.AddeImage r0;
        int $i0, $i1, $i2;
        java.lang.String r1;

        r0 := @this: ucar.nc2.iosp.adde.AddeImage;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.iosp.adde.AddeImage: int nelems> = 0;

        r0.<ucar.nc2.iosp.adde.AddeImage: int nlines> = 0;

        r0.<ucar.nc2.iosp.adde.AddeImage: java.awt.image.BufferedImage image> = null;

        r0.<ucar.nc2.iosp.adde.AddeImage: boolean debug> = 0;

        r0.<ucar.nc2.iosp.adde.AddeImage: java.lang.String urlName> = r1;

        staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<ucar.nc2.iosp.adde.AddeImage: boolean debug> = 0;

        $r2 = new ucar.nc2.iosp.adde.AreaFile3;

        specialinvoke $r2.<ucar.nc2.iosp.adde.AreaFile3: void <init>(java.lang.String)>(r1);

        $r3 = virtualinvoke $r2.<ucar.nc2.iosp.adde.AreaFile3: ucar.ma2.Array getData()>();

        r0.<ucar.nc2.iosp.adde.AddeImage: ucar.ma2.Array ma> = $r3;

        $r4 = r0.<ucar.nc2.iosp.adde.AddeImage: ucar.ma2.Array ma>;

        $i0 = virtualinvoke $r4.<ucar.ma2.Array: int getRank()>();

        if $i0 != 3 goto label1;

        $r9 = r0.<ucar.nc2.iosp.adde.AddeImage: ucar.ma2.Array ma>;

        $r10 = virtualinvoke $r9.<ucar.ma2.Array: ucar.ma2.Array slice(int,int)>(0, 0);

        r0.<ucar.nc2.iosp.adde.AddeImage: ucar.ma2.Array ma> = $r10;

     label1:
        $r5 = r0.<ucar.nc2.iosp.adde.AddeImage: ucar.ma2.Array ma>;

        $r6 = virtualinvoke $r5.<ucar.ma2.Array: int[] getShape()>();

        $i1 = $r6[0];

        r0.<ucar.nc2.iosp.adde.AddeImage: int nlines> = $i1;

        $r7 = r0.<ucar.nc2.iosp.adde.AddeImage: ucar.ma2.Array ma>;

        $r8 = virtualinvoke $r7.<ucar.ma2.Array: int[] getShape()>();

        $i2 = $r8[1];

        r0.<ucar.nc2.iosp.adde.AddeImage: int nelems> = $i2;

        staticinvoke <java.lang.System: long currentTimeMillis()>();

        return;
    }

    private long getSize()
    {
        long $l0;
        ucar.ma2.Array $r1;
        ucar.nc2.iosp.adde.AddeImage r0;

        r0 := @this: ucar.nc2.iosp.adde.AddeImage;

        $r1 = r0.<ucar.nc2.iosp.adde.AddeImage: ucar.ma2.Array ma>;

        $l0 = specialinvoke r0.<ucar.nc2.iosp.adde.AddeImage: long getSize(ucar.ma2.Array)>($r1);

        return $l0;
    }

    private long getSize(ucar.ma2.Array)
    {
        long $l0, $l1, $l2, $l3, $l4;
        java.lang.String $r10, $r12;
        java.lang.IllegalArgumentException $r7;
        ucar.ma2.Array r0;
        ucar.nc2.iosp.adde.AddeImage r13;
        java.lang.Class $r1, $r2, $r3, $r4, $r5, $r6;
        java.lang.StringBuilder $r8, $r9, $r11;

        r13 := @this: ucar.nc2.iosp.adde.AddeImage;

        r0 := @parameter0: ucar.ma2.Array;

        $l0 = virtualinvoke r0.<ucar.ma2.Array: long getSize()>();

        $r1 = virtualinvoke r0.<ucar.ma2.Array: java.lang.Class getElementType()>();

        $r2 = <java.lang.Byte: java.lang.Class TYPE>;

        if $r1 != $r2 goto label1;

        return $l0;

     label1:
        $r3 = <java.lang.Short: java.lang.Class TYPE>;

        if $r1 != $r3 goto label2;

        $l4 = 2L * $l0;

        return $l4;

     label2:
        $r4 = <java.lang.Integer: java.lang.Class TYPE>;

        if $r1 != $r4 goto label3;

        $l3 = 4L * $l0;

        return $l3;

     label3:
        $r5 = <java.lang.Float: java.lang.Class TYPE>;

        if $r1 != $r5 goto label4;

        $l2 = 4L * $l0;

        return $l2;

     label4:
        $r6 = <java.lang.Double: java.lang.Class TYPE>;

        if $r1 != $r6 goto label5;

        $l1 = 8L * $l0;

        return $l1;

     label5:
        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DataBufferMultiArray ma has illegal data type = ");

        $r10 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r7;
    }

    public java.awt.Dimension getPreferredSize()
    {
        java.awt.Dimension $r0;
        ucar.nc2.iosp.adde.AddeImage r1;
        int $i0, $i1;

        r1 := @this: ucar.nc2.iosp.adde.AddeImage;

        $r0 = new java.awt.Dimension;

        $i1 = r1.<ucar.nc2.iosp.adde.AddeImage: int nelems>;

        $i0 = r1.<ucar.nc2.iosp.adde.AddeImage: int nlines>;

        specialinvoke $r0.<java.awt.Dimension: void <init>(int,int)>($i1, $i0);

        return $r0;
    }

    public java.awt.image.BufferedImage getImage()
    {
        java.awt.image.BufferedImage $r1, $r2, $r4;
        ucar.nc2.iosp.adde.AddeImage r0;
        ucar.ma2.Array $r3;

        r0 := @this: ucar.nc2.iosp.adde.AddeImage;

        $r1 = r0.<ucar.nc2.iosp.adde.AddeImage: java.awt.image.BufferedImage image>;

        if $r1 != null goto label1;

        $r3 = r0.<ucar.nc2.iosp.adde.AddeImage: ucar.ma2.Array ma>;

        $r4 = staticinvoke <ucar.nc2.dt.image.ImageArrayAdapter: java.awt.image.BufferedImage makeGrayscaleImage(ucar.ma2.Array)>($r3);

        r0.<ucar.nc2.iosp.adde.AddeImage: java.awt.image.BufferedImage image> = $r4;

     label1:
        $r2 = r0.<ucar.nc2.iosp.adde.AddeImage: java.awt.image.BufferedImage image>;

        return $r2;
    }

    public java.lang.String getName()
    {
        java.lang.String $r1;
        ucar.nc2.iosp.adde.AddeImage r0;

        r0 := @this: ucar.nc2.iosp.adde.AddeImage;

        $r1 = r0.<ucar.nc2.iosp.adde.AddeImage: java.lang.String urlName>;

        return $r1;
    }

    static void <clinit>()
    {
        java.util.LinkedHashMap $r0;
        int $i0;

        <ucar.nc2.iosp.adde.AddeImage: int initialCapacity> = 100;

        $r0 = new java.util.LinkedHashMap;

        $i0 = <ucar.nc2.iosp.adde.AddeImage: int initialCapacity>;

        specialinvoke $r0.<java.util.LinkedHashMap: void <init>(int,float,boolean)>($i0, 0.75F, 1);

        <ucar.nc2.iosp.adde.AddeImage: java.util.LinkedHashMap hash> = $r0;

        <ucar.nc2.iosp.adde.AddeImage: double memUsed> = 0.0;

        <ucar.nc2.iosp.adde.AddeImage: int maxCacheSize> = 30;

        <ucar.nc2.iosp.adde.AddeImage: boolean debugCache> = 0;

        return;
    }
}
