public class org.springframework.core.serializer.support.SerializingConverter extends java.lang.Object implements org.springframework.core.convert.converter.Converter
{
    private final org.springframework.core.serializer.Serializer serializer;

    public void <init>()
    {
        org.springframework.core.serializer.support.SerializingConverter r0;
        org.springframework.core.serializer.DefaultSerializer $r1;

        r0 := @this: org.springframework.core.serializer.support.SerializingConverter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.springframework.core.serializer.DefaultSerializer;

        specialinvoke $r1.<org.springframework.core.serializer.DefaultSerializer: void <init>()>();

        r0.<org.springframework.core.serializer.support.SerializingConverter: org.springframework.core.serializer.Serializer serializer> = $r1;

        return;
    }

    public void <init>(org.springframework.core.serializer.Serializer)
    {
        org.springframework.core.serializer.support.SerializingConverter r0;
        org.springframework.core.serializer.Serializer r1;

        r0 := @this: org.springframework.core.serializer.support.SerializingConverter;

        r1 := @parameter0: org.springframework.core.serializer.Serializer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r1, "Serializer must not be null");

        r0.<org.springframework.core.serializer.support.SerializingConverter: org.springframework.core.serializer.Serializer serializer> = r1;

        return;
    }

    public byte[] convert(java.lang.Object)
    {
        java.lang.Throwable $r5;
        org.springframework.core.serializer.Serializer $r3, $r8;
        byte[] $r4;
        java.io.ByteArrayOutputStream $r0;
        org.springframework.core.serializer.support.SerializingConverter r1;
        org.springframework.core.serializer.support.SerializationFailedException $r6;
        java.lang.Object r2;
        java.lang.StringBuilder $r7, $r11;
        java.lang.Class $r9;
        java.lang.String $r10, $r12;

        r1 := @this: org.springframework.core.serializer.support.SerializingConverter;

        r2 := @parameter0: java.lang.Object;

        $r0 = new java.io.ByteArrayOutputStream;

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>(int)>(128);

     label1:
        $r3 = r1.<org.springframework.core.serializer.support.SerializingConverter: org.springframework.core.serializer.Serializer serializer>;

        interfaceinvoke $r3.<org.springframework.core.serializer.Serializer: void serialize(java.lang.Object,java.io.OutputStream)>(r2, $r0);

        $r4 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        $r6 = new org.springframework.core.serializer.support.SerializationFailedException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("Failed to serialize object using ");

        $r8 = r1.<org.springframework.core.serializer.support.SerializingConverter: org.springframework.core.serializer.Serializer serializer>;

        $r9 = virtualinvoke $r8.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getSimpleName()>();

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<org.springframework.core.serializer.support.SerializationFailedException: void <init>(java.lang.String,java.lang.Throwable)>($r12, $r5);

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public volatile java.lang.Object convert(java.lang.Object)
    {
        org.springframework.core.serializer.support.SerializingConverter r0;
        byte[] $r3;
        java.lang.Object r1, $r2;

        r0 := @this: org.springframework.core.serializer.support.SerializingConverter;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Object) r1;

        $r3 = virtualinvoke r0.<org.springframework.core.serializer.support.SerializingConverter: byte[] convert(java.lang.Object)>($r2);

        return $r3;
    }
}
