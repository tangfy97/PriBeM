public class javax.activation.MimetypesFileTypeMap extends javax.activation.FileTypeMap
{
    private static final java.lang.String DEFAULT_TYPE;
    private final java.util.Map types;

    public void <init>()
    {
        java.lang.Throwable $r13, $r17, $r21, $r23;
        java.util.Enumeration $r6;
        java.net.URL r8;
        java.util.HashMap $r1;
        javax.activation.MimetypesFileTypeMap r0;
        java.lang.SecurityException $r12, $r16, $r19;
        java.lang.String $r25, $r28;
        boolean $z0;
        java.io.IOException $r10, $r14, $r18, $r20, $r22;
        java.io.FileInputStream $r26, $r29;
        java.io.FileNotFoundException $r11, $r15;
        java.io.File $r24, $r27;
        java.lang.Class $r2, $r4;
        java.lang.Object $r7;
        java.lang.ClassLoader $r5;
        java.io.InputStream $r3, $r9;

        r0 := @this: javax.activation.MimetypesFileTypeMap;

        specialinvoke r0.<javax.activation.FileTypeMap: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<javax.activation.MimetypesFileTypeMap: java.util.Map types> = $r1;

     label01:
        $r2 = class "Ljavax/activation/MimetypesFileTypeMap;";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>("/META-INF/mimetypes.default");

        if $r3 == null goto label06;

     label02:
        specialinvoke r0.<javax.activation.MimetypesFileTypeMap: void loadStream(java.io.InputStream)>($r3);

     label03:
        virtualinvoke $r3.<java.io.InputStream: void close()>();

        goto label06;

     label04:
        $r23 := @caughtexception;

     label05:
        virtualinvoke $r3.<java.io.InputStream: void close()>();

        throw $r23;

     label06:
        goto label08;

     label07:
        $r22 := @caughtexception;

     label08:
        $r4 = class "Ljavax/activation/MimetypesFileTypeMap;";

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r6 = virtualinvoke $r5.<java.lang.ClassLoader: java.util.Enumeration getResources(java.lang.String)>("/META-INF/mime.types");

     label09:
        $z0 = interfaceinvoke $r6.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label18;

        $r7 = interfaceinvoke $r6.<java.util.Enumeration: java.lang.Object nextElement()>();

        r8 = (java.net.URL) $r7;

     label10:
        $r9 = virtualinvoke r8.<java.net.URL: java.io.InputStream openStream()>();

     label11:
        specialinvoke r0.<javax.activation.MimetypesFileTypeMap: void loadStream(java.io.InputStream)>($r9);

     label12:
        virtualinvoke $r9.<java.io.InputStream: void close()>();

        goto label15;

     label13:
        $r21 := @caughtexception;

     label14:
        virtualinvoke $r9.<java.io.InputStream: void close()>();

        throw $r21;

     label15:
        goto label17;

     label16:
        $r20 := @caughtexception;

        goto label09;

     label17:
        goto label09;

     label18:
        goto label21;

     label19:
        $r19 := @caughtexception;

        goto label21;

     label20:
        $r18 := @caughtexception;

     label21:
        $r24 = new java.io.File;

        $r25 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.home");

        specialinvoke $r24.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r25, "lib/mime.types");

        $r26 = new java.io.FileInputStream;

        specialinvoke $r26.<java.io.FileInputStream: void <init>(java.io.File)>($r24);

     label22:
        specialinvoke r0.<javax.activation.MimetypesFileTypeMap: void loadStream(java.io.InputStream)>($r26);

     label23:
        virtualinvoke $r26.<java.io.InputStream: void close()>();

        goto label26;

     label24:
        $r17 := @caughtexception;

     label25:
        virtualinvoke $r26.<java.io.InputStream: void close()>();

        throw $r17;

     label26:
        goto label30;

     label27:
        $r16 := @caughtexception;

        goto label30;

     label28:
        $r15 := @caughtexception;

        goto label30;

     label29:
        $r14 := @caughtexception;

     label30:
        $r27 = new java.io.File;

        $r28 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("user.home");

        specialinvoke $r27.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r28, ".mime.types");

        $r29 = new java.io.FileInputStream;

        specialinvoke $r29.<java.io.FileInputStream: void <init>(java.io.File)>($r27);

     label31:
        specialinvoke r0.<javax.activation.MimetypesFileTypeMap: void loadStream(java.io.InputStream)>($r29);

     label32:
        virtualinvoke $r29.<java.io.InputStream: void close()>();

        goto label35;

     label33:
        $r13 := @caughtexception;

     label34:
        virtualinvoke $r29.<java.io.InputStream: void close()>();

        throw $r13;

     label35:
        goto label39;

     label36:
        $r12 := @caughtexception;

        goto label39;

     label37:
        $r11 := @caughtexception;

        goto label39;

     label38:
        $r10 := @caughtexception;

     label39:
        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.io.IOException from label01 to label06 with label07;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
        catch java.io.IOException from label10 to label15 with label16;
        catch java.lang.SecurityException from label08 to label18 with label19;
        catch java.io.IOException from label08 to label18 with label20;
        catch java.lang.Throwable from label22 to label23 with label24;
        catch java.lang.Throwable from label24 to label25 with label24;
        catch java.lang.SecurityException from label21 to label26 with label27;
        catch java.io.FileNotFoundException from label21 to label26 with label28;
        catch java.io.IOException from label21 to label26 with label29;
        catch java.lang.Throwable from label31 to label32 with label33;
        catch java.lang.Throwable from label33 to label34 with label33;
        catch java.lang.SecurityException from label30 to label35 with label36;
        catch java.io.FileNotFoundException from label30 to label35 with label37;
        catch java.io.IOException from label30 to label35 with label38;
    }

    public void <init>(java.lang.String) throws java.io.IOException
    {
        java.io.IOException $r5, $r6;
        java.io.BufferedReader $r1;
        java.io.FileReader $r2;
        java.lang.String r3, $r4;
        javax.activation.MimetypesFileTypeMap r0;

        r0 := @this: javax.activation.MimetypesFileTypeMap;

        r3 := @parameter0: java.lang.String;

        specialinvoke r0.<javax.activation.MimetypesFileTypeMap: void <init>()>();

        $r1 = new java.io.BufferedReader;

        $r2 = new java.io.FileReader;

        specialinvoke $r2.<java.io.FileReader: void <init>(java.lang.String)>(r3);

        specialinvoke $r1.<java.io.BufferedReader: void <init>(java.io.Reader)>($r2);

     label1:
        $r4 = virtualinvoke $r1.<java.io.BufferedReader: java.lang.String readLine()>();

        if $r4 == null goto label2;

        virtualinvoke r0.<javax.activation.MimetypesFileTypeMap: void addMimeTypes(java.lang.String)>($r4);

        goto label1;

     label2:
        virtualinvoke $r1.<java.io.BufferedReader: void close()>();

     label3:
        goto label9;

     label4:
        $r6 := @caughtexception;

     label5:
        virtualinvoke $r1.<java.io.BufferedReader: void close()>();

     label6:
        goto label8;

     label7:
        $r5 := @caughtexception;

     label8:
        throw $r6;

     label9:
        return;

        catch java.io.IOException from label1 to label3 with label4;
        catch java.io.IOException from label5 to label6 with label7;
    }

    public void <init>(java.io.InputStream)
    {
        java.io.IOException $r2;
        javax.activation.MimetypesFileTypeMap r0;
        java.io.InputStream r1;

        r0 := @this: javax.activation.MimetypesFileTypeMap;

        r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<javax.activation.MimetypesFileTypeMap: void <init>()>();

     label1:
        specialinvoke r0.<javax.activation.MimetypesFileTypeMap: void loadStream(java.io.InputStream)>(r1);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private void loadStream(java.io.InputStream) throws java.io.IOException
    {
        java.io.BufferedReader $r0;
        java.lang.String $r3;
        java.io.InputStreamReader $r1;
        javax.activation.MimetypesFileTypeMap r4;
        java.io.InputStream r2;

        r4 := @this: javax.activation.MimetypesFileTypeMap;

        r2 := @parameter0: java.io.InputStream;

        $r0 = new java.io.BufferedReader;

        $r1 = new java.io.InputStreamReader;

        specialinvoke $r1.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(r2);

        specialinvoke $r0.<java.io.BufferedReader: void <init>(java.io.Reader)>($r1);

     label1:
        $r3 = virtualinvoke $r0.<java.io.BufferedReader: java.lang.String readLine()>();

        if $r3 == null goto label2;

        virtualinvoke r4.<javax.activation.MimetypesFileTypeMap: void addMimeTypes(java.lang.String)>($r3);

        goto label1;

     label2:
        return;
    }

    public synchronized void addMimeTypes(java.lang.String)
    {
        javax.activation.MimetypesFileTypeMap r3;
        java.util.StringTokenizer $r6;
        java.util.Map $r4;
        int $i0, $i2;
        java.lang.String $r1, $r2, r5;
        boolean $z0, $z1;

        r3 := @this: javax.activation.MimetypesFileTypeMap;

        r5 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r5.<java.lang.String: int indexOf(int)>(35);

        $i2 = (int) -1;

        if $i0 == $i2 goto label1;

        r5 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

     label1:
        $r6 = new java.util.StringTokenizer;

        specialinvoke $r6.<java.util.StringTokenizer: void <init>(java.lang.String)>(r5);

        $z0 = virtualinvoke $r6.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 != 0 goto label2;

        return;

     label2:
        $r1 = virtualinvoke $r6.<java.util.StringTokenizer: java.lang.String nextToken()>();

     label3:
        $z1 = virtualinvoke $r6.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z1 == 0 goto label4;

        $r2 = virtualinvoke $r6.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r4 = r3.<javax.activation.MimetypesFileTypeMap: java.util.Map types>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r1);

        goto label3;

     label4:
        return;
    }

    public java.lang.String getContentType(java.io.File)
    {
        java.lang.String $r2, $r3;
        javax.activation.MimetypesFileTypeMap r0;
        java.io.File r1;

        r0 := @this: javax.activation.MimetypesFileTypeMap;

        r1 := @parameter0: java.io.File;

        $r2 = virtualinvoke r1.<java.io.File: java.lang.String getName()>();

        $r3 = virtualinvoke r0.<javax.activation.MimetypesFileTypeMap: java.lang.String getContentType(java.lang.String)>($r2);

        return $r3;
    }

    public synchronized java.lang.String getContentType(java.lang.String)
    {
        javax.activation.MimetypesFileTypeMap r2;
        java.util.Map $r3;
        int $i0, $i1, $i2, $i3, $i5;
        java.lang.Object $r4;
        java.lang.String r0, $r1, r5, $r6;

        r2 := @this: javax.activation.MimetypesFileTypeMap;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(46);

        $i5 = (int) -1;

        if $i0 == $i5 goto label1;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        $i2 = $i1 - 1;

        if $i0 != $i2 goto label2;

     label1:
        return "application/octet-stream";

     label2:
        $i3 = $i0 + 1;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i3);

        $r3 = r2.<javax.activation.MimetypesFileTypeMap: java.util.Map types>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        r5 = (java.lang.String) $r4;

        if r5 != null goto label3;

        $r6 = "application/octet-stream";

        goto label4;

     label3:
        $r6 = r5;

     label4:
        return $r6;
    }

    public static void <clinit>()
    {
        <javax.activation.MimetypesFileTypeMap: java.lang.String DEFAULT_TYPE> = "application/octet-stream";

        return;
    }
}
