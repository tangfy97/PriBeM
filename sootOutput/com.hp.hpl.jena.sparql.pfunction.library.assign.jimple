public class com.hp.hpl.jena.sparql.pfunction.library.assign extends com.hp.hpl.jena.sparql.pfunction.PFuncSimple
{

    public void <init>()
    {
        com.hp.hpl.jena.sparql.pfunction.library.assign r0;

        r0 := @this: com.hp.hpl.jena.sparql.pfunction.library.assign;

        specialinvoke r0.<com.hp.hpl.jena.sparql.pfunction.PFuncSimple: void <init>()>();

        return;
    }

    public com.hp.hpl.jena.sparql.engine.QueryIterator execEvaluated(com.hp.hpl.jena.sparql.engine.binding.Binding, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.sparql.engine.ExecutionContext)
    {
        com.hp.hpl.jena.sparql.pfunction.library.assign r17;
        com.hp.hpl.jena.graph.Node r0, r1, r13;
        com.hp.hpl.jena.query.QueryExecException $r10;
        com.hp.hpl.jena.sparql.engine.ExecutionContext r2;
        java.lang.String $r14, $r16;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.hp.hpl.jena.sparql.core.Var $r6, $r8;
        com.hp.hpl.jena.sparql.engine.binding.Binding r4;
        java.lang.StringBuilder $r11, $r12, $r15;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r3, $r5, $r7, $r9;

        r17 := @this: com.hp.hpl.jena.sparql.pfunction.library.assign;

        r4 := @parameter0: com.hp.hpl.jena.sparql.engine.binding.Binding;

        r0 := @parameter1: com.hp.hpl.jena.graph.Node;

        r13 := @parameter2: com.hp.hpl.jena.graph.Node;

        r1 := @parameter3: com.hp.hpl.jena.graph.Node;

        r2 := @parameter4: com.hp.hpl.jena.sparql.engine.ExecutionContext;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.graph.Node: boolean isVariable()>();

        if $z0 == 0 goto label1;

        $z4 = virtualinvoke r1.<com.hp.hpl.jena.graph.Node: boolean isVariable()>();

        if $z4 == 0 goto label1;

        $r10 = new com.hp.hpl.jena.query.QueryExecException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Both subject and object are unbound variables: ");

        $r14 = staticinvoke <com.hp.hpl.jena.sparql.util.FmtUtils: java.lang.String stringForNode(com.hp.hpl.jena.graph.Node)>(r13);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<com.hp.hpl.jena.query.QueryExecException: void <init>(java.lang.String)>($r16);

        throw $r10;

     label1:
        $z1 = virtualinvoke r0.<com.hp.hpl.jena.graph.Node: boolean isVariable()>();

        if $z1 == 0 goto label2;

        $r8 = staticinvoke <com.hp.hpl.jena.sparql.core.Var: com.hp.hpl.jena.sparql.core.Var alloc(com.hp.hpl.jena.graph.Node)>(r0);

        $r9 = staticinvoke <com.hp.hpl.jena.sparql.util.IterLib: com.hp.hpl.jena.sparql.engine.QueryIterator oneResult(com.hp.hpl.jena.sparql.engine.binding.Binding,com.hp.hpl.jena.sparql.core.Var,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.engine.ExecutionContext)>(r4, $r8, r1, r2);

        return $r9;

     label2:
        $z2 = virtualinvoke r1.<com.hp.hpl.jena.graph.Node: boolean isVariable()>();

        if $z2 == 0 goto label3;

        $r6 = staticinvoke <com.hp.hpl.jena.sparql.core.Var: com.hp.hpl.jena.sparql.core.Var alloc(com.hp.hpl.jena.graph.Node)>(r1);

        $r7 = staticinvoke <com.hp.hpl.jena.sparql.util.IterLib: com.hp.hpl.jena.sparql.engine.QueryIterator oneResult(com.hp.hpl.jena.sparql.engine.binding.Binding,com.hp.hpl.jena.sparql.core.Var,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.engine.ExecutionContext)>(r4, $r6, r0, r2);

        return $r7;

     label3:
        $z3 = virtualinvoke r0.<com.hp.hpl.jena.graph.Node: boolean sameValueAs(java.lang.Object)>(r1);

        if $z3 == 0 goto label4;

        $r5 = staticinvoke <com.hp.hpl.jena.sparql.util.IterLib: com.hp.hpl.jena.sparql.engine.QueryIterator result(com.hp.hpl.jena.sparql.engine.binding.Binding,com.hp.hpl.jena.sparql.engine.ExecutionContext)>(r4, r2);

        return $r5;

     label4:
        $r3 = staticinvoke <com.hp.hpl.jena.sparql.util.IterLib: com.hp.hpl.jena.sparql.engine.QueryIterator noResults(com.hp.hpl.jena.sparql.engine.ExecutionContext)>(r2);

        return $r3;
    }
}
