public class org.apache.poi.util.IntList extends java.lang.Object
{
    private int[] _array;
    private int _limit;
    private int fillval;
    private static final int _default_size;

    public void <init>()
    {
        org.apache.poi.util.IntList r0;

        r0 := @this: org.apache.poi.util.IntList;

        specialinvoke r0.<org.apache.poi.util.IntList: void <init>(int)>(128);

        return;
    }

    public void <init>(int)
    {
        int i0;
        org.apache.poi.util.IntList r0;

        r0 := @this: org.apache.poi.util.IntList;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.poi.util.IntList: void <init>(int,int)>(i0, 0);

        return;
    }

    public void <init>(org.apache.poi.util.IntList)
    {
        int[] $r2, $r3, $r4, $r5;
        int $i0, $i1, $i2;
        org.apache.poi.util.IntList r0, r1;

        r0 := @this: org.apache.poi.util.IntList;

        r1 := @parameter0: org.apache.poi.util.IntList;

        $r2 = r1.<org.apache.poi.util.IntList: int[] _array>;

        $i0 = lengthof $r2;

        specialinvoke r0.<org.apache.poi.util.IntList: void <init>(int)>($i0);

        $r5 = r1.<org.apache.poi.util.IntList: int[] _array>;

        $r4 = r0.<org.apache.poi.util.IntList: int[] _array>;

        $r3 = r0.<org.apache.poi.util.IntList: int[] _array>;

        $i1 = lengthof $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, $r4, 0, $i1);

        $i2 = r1.<org.apache.poi.util.IntList: int _limit>;

        r0.<org.apache.poi.util.IntList: int _limit> = $i2;

        return;
    }

    public void <init>(int, int)
    {
        int[] $r1, $r2;
        int i0, $i1, i2, $i3;
        org.apache.poi.util.IntList r0;

        r0 := @this: org.apache.poi.util.IntList;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.poi.util.IntList: int fillval> = 0;

        $r1 = newarray (int)[i0];

        r0.<org.apache.poi.util.IntList: int[] _array> = $r1;

        $i1 = r0.<org.apache.poi.util.IntList: int fillval>;

        if $i1 == 0 goto label1;

        r0.<org.apache.poi.util.IntList: int fillval> = i2;

        $i3 = r0.<org.apache.poi.util.IntList: int fillval>;

        $r2 = r0.<org.apache.poi.util.IntList: int[] _array>;

        specialinvoke r0.<org.apache.poi.util.IntList: void fillArray(int,int[],int)>($i3, $r2, 0);

     label1:
        r0.<org.apache.poi.util.IntList: int _limit> = 0;

        return;
    }

    private void fillArray(int, int[], int)
    {
        int[] r0;
        int i0, $i1, i2, i3;
        org.apache.poi.util.IntList r1;

        r1 := @this: org.apache.poi.util.IntList;

        i2 := @parameter0: int;

        r0 := @parameter1: int[];

        i0 := @parameter2: int;

        i3 = i0;

     label1:
        $i1 = lengthof r0;

        if i3 >= $i1 goto label2;

        r0[i3] = i2;

        i3 = i3 + 1;

        goto label1;

     label2:
        return;
    }

    public void add(int, int)
    {
        java.lang.IndexOutOfBoundsException $r5;
        int[] $r1, $r2, $r3, $r4;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i9, $i10, $i11, $i12;
        org.apache.poi.util.IntList r0;

        r0 := @this: org.apache.poi.util.IntList;

        i0 := @parameter0: int;

        i8 := @parameter1: int;

        $i1 = r0.<org.apache.poi.util.IntList: int _limit>;

        if i0 <= $i1 goto label1;

        $r5 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r5.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r5;

     label1:
        $i2 = r0.<org.apache.poi.util.IntList: int _limit>;

        if i0 != $i2 goto label2;

        virtualinvoke r0.<org.apache.poi.util.IntList: boolean add(int)>(i8);

        goto label4;

     label2:
        $i4 = r0.<org.apache.poi.util.IntList: int _limit>;

        $r1 = r0.<org.apache.poi.util.IntList: int[] _array>;

        $i3 = lengthof $r1;

        if $i4 != $i3 goto label3;

        $i11 = r0.<org.apache.poi.util.IntList: int _limit>;

        $i12 = $i11 * 2;

        specialinvoke r0.<org.apache.poi.util.IntList: void growArray(int)>($i12);

     label3:
        $r3 = r0.<org.apache.poi.util.IntList: int[] _array>;

        $r2 = r0.<org.apache.poi.util.IntList: int[] _array>;

        $i7 = i0 + 1;

        $i5 = r0.<org.apache.poi.util.IntList: int _limit>;

        $i6 = $i5 - i0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, i0, $r2, $i7, $i6);

        $r4 = r0.<org.apache.poi.util.IntList: int[] _array>;

        $r4[i0] = i8;

        $i9 = r0.<org.apache.poi.util.IntList: int _limit>;

        $i10 = $i9 + 1;

        r0.<org.apache.poi.util.IntList: int _limit> = $i10;

     label4:
        return;
    }

    public boolean add(int)
    {
        int[] $r1, $r2;
        int $i0, $i1, $i2, $i3, i4, $i5, $i6;
        org.apache.poi.util.IntList r0;

        r0 := @this: org.apache.poi.util.IntList;

        i4 := @parameter0: int;

        $i1 = r0.<org.apache.poi.util.IntList: int _limit>;

        $r1 = r0.<org.apache.poi.util.IntList: int[] _array>;

        $i0 = lengthof $r1;

        if $i1 != $i0 goto label1;

        $i5 = r0.<org.apache.poi.util.IntList: int _limit>;

        $i6 = $i5 * 2;

        specialinvoke r0.<org.apache.poi.util.IntList: void growArray(int)>($i6);

     label1:
        $r2 = r0.<org.apache.poi.util.IntList: int[] _array>;

        $i2 = r0.<org.apache.poi.util.IntList: int _limit>;

        $i3 = $i2 + 1;

        r0.<org.apache.poi.util.IntList: int _limit> = $i3;

        $r2[$i2] = i4;

        return 1;
    }

    public boolean addAll(org.apache.poi.util.IntList)
    {
        int[] $r2, $r3, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        org.apache.poi.util.IntList r0, r1;

        r1 := @this: org.apache.poi.util.IntList;

        r0 := @parameter0: org.apache.poi.util.IntList;

        $i0 = r0.<org.apache.poi.util.IntList: int _limit>;

        if $i0 == 0 goto label2;

        $i2 = r1.<org.apache.poi.util.IntList: int _limit>;

        $i1 = r0.<org.apache.poi.util.IntList: int _limit>;

        $i4 = $i2 + $i1;

        $r2 = r1.<org.apache.poi.util.IntList: int[] _array>;

        $i3 = lengthof $r2;

        if $i4 <= $i3 goto label1;

        $i11 = r1.<org.apache.poi.util.IntList: int _limit>;

        $i10 = r0.<org.apache.poi.util.IntList: int _limit>;

        $i12 = $i11 + $i10;

        specialinvoke r1.<org.apache.poi.util.IntList: void growArray(int)>($i12);

     label1:
        $r4 = r0.<org.apache.poi.util.IntList: int[] _array>;

        $r3 = r1.<org.apache.poi.util.IntList: int[] _array>;

        $i6 = r1.<org.apache.poi.util.IntList: int _limit>;

        $i5 = r0.<org.apache.poi.util.IntList: int _limit>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, $r3, $i6, $i5);

        $i8 = r1.<org.apache.poi.util.IntList: int _limit>;

        $i7 = r0.<org.apache.poi.util.IntList: int _limit>;

        $i9 = $i8 + $i7;

        r1.<org.apache.poi.util.IntList: int _limit> = $i9;

     label2:
        return 1;
    }

    public boolean addAll(int, org.apache.poi.util.IntList)
    {
        java.lang.IndexOutOfBoundsException $r7;
        int[] $r2, $r3, $r4, $r5, $r6;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        org.apache.poi.util.IntList r0, r1;

        r0 := @this: org.apache.poi.util.IntList;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.poi.util.IntList;

        $i1 = r0.<org.apache.poi.util.IntList: int _limit>;

        if i0 <= $i1 goto label1;

        $r7 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r7.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r7;

     label1:
        $i2 = r1.<org.apache.poi.util.IntList: int _limit>;

        if $i2 == 0 goto label3;

        $i4 = r0.<org.apache.poi.util.IntList: int _limit>;

        $i3 = r1.<org.apache.poi.util.IntList: int _limit>;

        $i6 = $i4 + $i3;

        $r2 = r0.<org.apache.poi.util.IntList: int[] _array>;

        $i5 = lengthof $r2;

        if $i6 <= $i5 goto label2;

        $i16 = r0.<org.apache.poi.util.IntList: int _limit>;

        $i15 = r1.<org.apache.poi.util.IntList: int _limit>;

        $i17 = $i16 + $i15;

        specialinvoke r0.<org.apache.poi.util.IntList: void growArray(int)>($i17);

     label2:
        $r4 = r0.<org.apache.poi.util.IntList: int[] _array>;

        $r3 = r0.<org.apache.poi.util.IntList: int[] _array>;

        $i7 = r1.<org.apache.poi.util.IntList: int _limit>;

        $i10 = i0 + $i7;

        $i8 = r0.<org.apache.poi.util.IntList: int _limit>;

        $i9 = $i8 - i0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, i0, $r3, $i10, $i9);

        $r6 = r1.<org.apache.poi.util.IntList: int[] _array>;

        $r5 = r0.<org.apache.poi.util.IntList: int[] _array>;

        $i11 = r1.<org.apache.poi.util.IntList: int _limit>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, $r5, i0, $i11);

        $i13 = r0.<org.apache.poi.util.IntList: int _limit>;

        $i12 = r1.<org.apache.poi.util.IntList: int _limit>;

        $i14 = $i13 + $i12;

        r0.<org.apache.poi.util.IntList: int _limit> = $i14;

     label3:
        return 1;
    }

    public void clear()
    {
        org.apache.poi.util.IntList r0;

        r0 := @this: org.apache.poi.util.IntList;

        r0.<org.apache.poi.util.IntList: int _limit> = 0;

        return;
    }

    public boolean contains(int)
    {
        int[] $r1;
        int $i0, i1, $i2, i3;
        org.apache.poi.util.IntList r0;
        boolean z0, z1, z2;

        r0 := @this: org.apache.poi.util.IntList;

        i1 := @parameter0: int;

        z0 = 0;

        z2 = 0;

        z1 = 0;

        i3 = 0;

     label1:
        if z1 != 0 goto label3;

        $i0 = r0.<org.apache.poi.util.IntList: int _limit>;

        if i3 >= $i0 goto label3;

        $r1 = r0.<org.apache.poi.util.IntList: int[] _array>;

        $i2 = $r1[i3];

        if $i2 != i1 goto label2;

        z0 = 1;

        z2 = 1;

        z1 = 1;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return z2;
    }

    public boolean containsAll(org.apache.poi.util.IntList)
    {
        int[] $r2;
        int $i0, $i1, i2;
        org.apache.poi.util.IntList r0, r1;
        boolean $z0, z1, z2, z3;

        r0 := @this: org.apache.poi.util.IntList;

        r1 := @parameter0: org.apache.poi.util.IntList;

        z1 = 1;

        z3 = 1;

        z2 = 1;

        if r0 == r1 goto label3;

        i2 = 0;

     label1:
        if z2 == 0 goto label3;

        $i0 = r1.<org.apache.poi.util.IntList: int _limit>;

        if i2 >= $i0 goto label3;

        $r2 = r1.<org.apache.poi.util.IntList: int[] _array>;

        $i1 = $r2[i2];

        $z0 = virtualinvoke r0.<org.apache.poi.util.IntList: boolean contains(int)>($i1);

        if $z0 != 0 goto label2;

        z1 = 0;

        z3 = 0;

        z2 = 0;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return z3;
    }

    public boolean equals(java.lang.Object)
    {
        int[] $r5, $r6;
        int $i0, $i1, $i2, $i3, $i4, i5;
        boolean z1, $z2, $z3, $z4;
        java.lang.Object r1;
        java.lang.Class $r2, $r3;
        org.apache.poi.util.IntList r0, r4;

        r0 := @this: org.apache.poi.util.IntList;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        $z4 = 1;

        $z3 = 1;

        goto label2;

     label1:
        $z4 = 0;

        $z3 = 0;

     label2:
        z1 = $z3;

        if $z4 != 0 goto label6;

        if r1 == null goto label6;

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 != $r3 goto label6;

        r4 = (org.apache.poi.util.IntList) r1;

        $i1 = r4.<org.apache.poi.util.IntList: int _limit>;

        $i0 = r0.<org.apache.poi.util.IntList: int _limit>;

        if $i1 != $i0 goto label6;

        z1 = 1;

        i5 = 0;

     label3:
        if z1 == 0 goto label6;

        $i2 = r0.<org.apache.poi.util.IntList: int _limit>;

        if i5 >= $i2 goto label6;

        $r5 = r0.<org.apache.poi.util.IntList: int[] _array>;

        $i4 = $r5[i5];

        $r6 = r4.<org.apache.poi.util.IntList: int[] _array>;

        $i3 = $r6[i5];

        if $i4 != $i3 goto label4;

        $z2 = 1;

        goto label5;

     label4:
        $z2 = 0;

     label5:
        z1 = $z2;

        i5 = i5 + 1;

        goto label3;

     label6:
        return z1;
    }

    public int get(int)
    {
        java.lang.IndexOutOfBoundsException $r2;
        int[] $r1;
        int i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;
        java.lang.String $r7;
        org.apache.poi.util.IntList r0;

        r0 := @this: org.apache.poi.util.IntList;

        i0 := @parameter0: int;

        $i1 = r0.<org.apache.poi.util.IntList: int _limit>;

        if i0 < $i1 goto label1;

        $r2 = new java.lang.IndexOutOfBoundsException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not accessible in a list of length ");

        $i3 = r0.<org.apache.poi.util.IntList: int _limit>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label1:
        $r1 = r0.<org.apache.poi.util.IntList: int[] _array>;

        $i2 = $r1[i0];

        return $i2;
    }

    public int hashCode()
    {
        int[] $r1;
        int $i0, $i1, $i2, i3, i4;
        org.apache.poi.util.IntList r0;

        r0 := @this: org.apache.poi.util.IntList;

        i3 = 0;

        i4 = 0;

     label1:
        $i0 = r0.<org.apache.poi.util.IntList: int _limit>;

        if i4 >= $i0 goto label2;

        $i2 = 31 * i3;

        $r1 = r0.<org.apache.poi.util.IntList: int[] _array>;

        $i1 = $r1[i4];

        i3 = $i2 + $i1;

        i4 = i4 + 1;

        goto label1;

     label2:
        return i3;
    }

    public int indexOf(int)
    {
        int[] $r1;
        int $i0, $i1, i2, $i3, i4, $i6;
        org.apache.poi.util.IntList r0;

        r0 := @this: org.apache.poi.util.IntList;

        i2 := @parameter0: int;

        i4 = 0;

     label1:
        $i0 = r0.<org.apache.poi.util.IntList: int _limit>;

        if i4 >= $i0 goto label3;

        $r1 = r0.<org.apache.poi.util.IntList: int[] _array>;

        $i3 = $r1[i4];

        if i2 != $i3 goto label2;

        goto label3;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        $i1 = r0.<org.apache.poi.util.IntList: int _limit>;

        if i4 != $i1 goto label4;

        $i6 = (int) -1;

        i4 = $i6;

     label4:
        return i4;
    }

    public boolean isEmpty()
    {
        int $i0;
        org.apache.poi.util.IntList r0;
        boolean $z0;

        r0 := @this: org.apache.poi.util.IntList;

        $i0 = r0.<org.apache.poi.util.IntList: int _limit>;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int lastIndexOf(int)
    {
        int[] $r1;
        int $i0, i1, $i2, i3, $i5;
        org.apache.poi.util.IntList r0;

        r0 := @this: org.apache.poi.util.IntList;

        i1 := @parameter0: int;

        $i0 = r0.<org.apache.poi.util.IntList: int _limit>;

        i3 = $i0 - 1;

     label1:
        if i3 < 0 goto label3;

        $r1 = r0.<org.apache.poi.util.IntList: int[] _array>;

        $i2 = $r1[i3];

        if i1 != $i2 goto label2;

        goto label3;

     label2:
        $i5 = (int) -1;

        i3 = i3 + $i5;

        goto label1;

     label3:
        return i3;
    }

    public int remove(int)
    {
        java.lang.IndexOutOfBoundsException $r4;
        int[] $r1, $r2, $r3;
        int i0, $i1, i2, $i3, $i4, $i5, $i6, $i7;
        org.apache.poi.util.IntList r0;

        r0 := @this: org.apache.poi.util.IntList;

        i0 := @parameter0: int;

        $i1 = r0.<org.apache.poi.util.IntList: int _limit>;

        if i0 < $i1 goto label1;

        $r4 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r4.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r4;

     label1:
        $r1 = r0.<org.apache.poi.util.IntList: int[] _array>;

        i2 = $r1[i0];

        $r3 = r0.<org.apache.poi.util.IntList: int[] _array>;

        $i5 = i0 + 1;

        $r2 = r0.<org.apache.poi.util.IntList: int[] _array>;

        $i3 = r0.<org.apache.poi.util.IntList: int _limit>;

        $i4 = $i3 - i0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, $i5, $r2, i0, $i4);

        $i6 = r0.<org.apache.poi.util.IntList: int _limit>;

        $i7 = $i6 - 1;

        r0.<org.apache.poi.util.IntList: int _limit> = $i7;

        return i2;
    }

    public boolean removeValue(int)
    {
        int[] $r1, $r2, $r3;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10;
        boolean z0, z1, z2;
        org.apache.poi.util.IntList r0;

        r0 := @this: org.apache.poi.util.IntList;

        i1 := @parameter0: int;

        z0 = 0;

        z2 = 0;

        z1 = 0;

        i10 = 0;

     label1:
        if z1 != 0 goto label4;

        $i0 = r0.<org.apache.poi.util.IntList: int _limit>;

        if i10 >= $i0 goto label4;

        $r1 = r0.<org.apache.poi.util.IntList: int[] _array>;

        $i2 = $r1[i10];

        if i1 != $i2 goto label3;

        $i4 = i10 + 1;

        $i3 = r0.<org.apache.poi.util.IntList: int _limit>;

        if $i4 >= $i3 goto label2;

        $r3 = r0.<org.apache.poi.util.IntList: int[] _array>;

        $i9 = i10 + 1;

        $r2 = r0.<org.apache.poi.util.IntList: int[] _array>;

        $i7 = r0.<org.apache.poi.util.IntList: int _limit>;

        $i8 = $i7 - i10;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, $i9, $r2, i10, $i8);

     label2:
        $i5 = r0.<org.apache.poi.util.IntList: int _limit>;

        $i6 = $i5 - 1;

        r0.<org.apache.poi.util.IntList: int _limit> = $i6;

        z0 = 1;

        z2 = 1;

        z1 = 1;

     label3:
        i10 = i10 + 1;

        goto label1;

     label4:
        return z2;
    }

    public boolean removeAll(org.apache.poi.util.IntList)
    {
        int[] $r2;
        int $i0, $i1, i2;
        org.apache.poi.util.IntList r0, r1;
        boolean $z0, z1;

        r1 := @this: org.apache.poi.util.IntList;

        r0 := @parameter0: org.apache.poi.util.IntList;

        z1 = 0;

        i2 = 0;

     label1:
        $i0 = r0.<org.apache.poi.util.IntList: int _limit>;

        if i2 >= $i0 goto label3;

        $r2 = r0.<org.apache.poi.util.IntList: int[] _array>;

        $i1 = $r2[i2];

        $z0 = virtualinvoke r1.<org.apache.poi.util.IntList: boolean removeValue(int)>($i1);

        if $z0 == 0 goto label2;

        z1 = 1;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return z1;
    }

    public boolean retainAll(org.apache.poi.util.IntList)
    {
        int[] $r2;
        int $i0, i1, $i2;
        org.apache.poi.util.IntList r0, r1;
        boolean $z0, z1;

        r0 := @this: org.apache.poi.util.IntList;

        r1 := @parameter0: org.apache.poi.util.IntList;

        z1 = 0;

        i1 = 0;

     label1:
        $i2 = r0.<org.apache.poi.util.IntList: int _limit>;

        if i1 >= $i2 goto label3;

        $r2 = r0.<org.apache.poi.util.IntList: int[] _array>;

        $i0 = $r2[i1];

        $z0 = virtualinvoke r1.<org.apache.poi.util.IntList: boolean contains(int)>($i0);

        if $z0 != 0 goto label2;

        virtualinvoke r0.<org.apache.poi.util.IntList: int remove(int)>(i1);

        z1 = 1;

        goto label1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return z1;
    }

    public int set(int, int)
    {
        java.lang.IndexOutOfBoundsException $r3;
        int[] $r1, $r2;
        int i0, $i1, i2, i3;
        org.apache.poi.util.IntList r0;

        r0 := @this: org.apache.poi.util.IntList;

        i0 := @parameter0: int;

        i3 := @parameter1: int;

        $i1 = r0.<org.apache.poi.util.IntList: int _limit>;

        if i0 < $i1 goto label1;

        $r3 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r3.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r3;

     label1:
        $r1 = r0.<org.apache.poi.util.IntList: int[] _array>;

        i2 = $r1[i0];

        $r2 = r0.<org.apache.poi.util.IntList: int[] _array>;

        $r2[i0] = i3;

        return i2;
    }

    public int size()
    {
        int $i0;
        org.apache.poi.util.IntList r0;

        r0 := @this: org.apache.poi.util.IntList;

        $i0 = r0.<org.apache.poi.util.IntList: int _limit>;

        return $i0;
    }

    public int[] toArray()
    {
        int[] r1, $r2;
        int $i0, $i1;
        org.apache.poi.util.IntList r0;

        r0 := @this: org.apache.poi.util.IntList;

        $i0 = r0.<org.apache.poi.util.IntList: int _limit>;

        r1 = newarray (int)[$i0];

        $r2 = r0.<org.apache.poi.util.IntList: int[] _array>;

        $i1 = r0.<org.apache.poi.util.IntList: int _limit>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, r1, 0, $i1);

        return r1;
    }

    public int[] toArray(int[])
    {
        int[] r0, $r2, r3;
        int $i0, $i1, $i2;
        org.apache.poi.util.IntList r1;

        r1 := @this: org.apache.poi.util.IntList;

        r0 := @parameter0: int[];

        $i1 = lengthof r0;

        $i0 = r1.<org.apache.poi.util.IntList: int _limit>;

        if $i1 != $i0 goto label1;

        $r2 = r1.<org.apache.poi.util.IntList: int[] _array>;

        $i2 = r1.<org.apache.poi.util.IntList: int _limit>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, r0, 0, $i2);

        r3 = r0;

        goto label2;

     label1:
        r3 = virtualinvoke r1.<org.apache.poi.util.IntList: int[] toArray()>();

     label2:
        return r3;
    }

    private void growArray(int)
    {
        int[] $r1, $r2, $r3, $r4;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        org.apache.poi.util.IntList r0;

        r0 := @this: org.apache.poi.util.IntList;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.util.IntList: int[] _array>;

        $i1 = lengthof $r1;

        if i0 != $i1 goto label1;

        $i6 = i0 + 1;

        goto label2;

     label1:
        $i6 = i0;

     label2:
        $r4 = newarray (int)[$i6];

        $i2 = r0.<org.apache.poi.util.IntList: int fillval>;

        if $i2 == 0 goto label3;

        $i5 = r0.<org.apache.poi.util.IntList: int fillval>;

        $r3 = r0.<org.apache.poi.util.IntList: int[] _array>;

        $i4 = lengthof $r3;

        specialinvoke r0.<org.apache.poi.util.IntList: void fillArray(int,int[],int)>($i5, $r4, $i4);

     label3:
        $r2 = r0.<org.apache.poi.util.IntList: int[] _array>;

        $i3 = r0.<org.apache.poi.util.IntList: int _limit>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r4, 0, $i3);

        r0.<org.apache.poi.util.IntList: int[] _array> = $r4;

        return;
    }

    public static void <clinit>()
    {
        <org.apache.poi.util.IntList: int _default_size> = 128;

        return;
    }
}
