class com.jidesoft.utils.SwingWorker$SwingWorkerPropertyChangeSupport extends java.beans.PropertyChangeSupport
{
    final com.jidesoft.utils.SwingWorker this$0;

    void <init>(com.jidesoft.utils.SwingWorker, java.lang.Object)
    {
        com.jidesoft.utils.SwingWorker r1;
        java.lang.Object r2;
        com.jidesoft.utils.SwingWorker$SwingWorkerPropertyChangeSupport r0;

        r0 := @this: com.jidesoft.utils.SwingWorker$SwingWorkerPropertyChangeSupport;

        r1 := @parameter0: com.jidesoft.utils.SwingWorker;

        r2 := @parameter1: java.lang.Object;

        r0.<com.jidesoft.utils.SwingWorker$SwingWorkerPropertyChangeSupport: com.jidesoft.utils.SwingWorker this$0> = r1;

        specialinvoke r0.<java.beans.PropertyChangeSupport: void <init>(java.lang.Object)>(r2);

        return;
    }

    public void firePropertyChange(java.beans.PropertyChangeEvent)
    {
        com.jidesoft.utils.SwingWorker$SwingWorkerPropertyChangeSupport r3;
        com.jidesoft.utils.SwingWorker$SwingWorkerPropertyChangeSupport$1 $r2;
        java.lang.Runnable[] $r1;
        com.jidesoft.utils.AccumulativeRunnable $r0;
        java.beans.PropertyChangeEvent r4;
        boolean $z0;

        r3 := @this: com.jidesoft.utils.SwingWorker$SwingWorkerPropertyChangeSupport;

        r4 := @parameter0: java.beans.PropertyChangeEvent;

        $z0 = staticinvoke <javax.swing.SwingUtilities: boolean isEventDispatchThread()>();

        if $z0 == 0 goto label1;

        specialinvoke r3.<java.beans.PropertyChangeSupport: void firePropertyChange(java.beans.PropertyChangeEvent)>(r4);

        goto label2;

     label1:
        $r0 = staticinvoke <com.jidesoft.utils.SwingWorker: com.jidesoft.utils.AccumulativeRunnable access$300()>();

        $r1 = newarray (java.lang.Runnable)[1];

        $r2 = new com.jidesoft.utils.SwingWorker$SwingWorkerPropertyChangeSupport$1;

        specialinvoke $r2.<com.jidesoft.utils.SwingWorker$SwingWorkerPropertyChangeSupport$1: void <init>(com.jidesoft.utils.SwingWorker$SwingWorkerPropertyChangeSupport,java.beans.PropertyChangeEvent)>(r3, r4);

        $r1[0] = $r2;

        virtualinvoke $r0.<com.jidesoft.utils.AccumulativeRunnable: void add(java.lang.Object[])>($r1);

     label2:
        return;
    }
}
