public class com.hp.hpl.jena.reasoner.rulesys.impl.BBRuleContext extends java.lang.Object implements com.hp.hpl.jena.reasoner.rulesys.RuleContext
{
    protected com.hp.hpl.jena.reasoner.rulesys.BindingEnvironment env;
    protected com.hp.hpl.jena.reasoner.rulesys.Rule rule;
    protected com.hp.hpl.jena.reasoner.rulesys.BackwardRuleInfGraphI graph;

    public void <init>(com.hp.hpl.jena.reasoner.rulesys.BackwardRuleInfGraphI)
    {
        com.hp.hpl.jena.reasoner.rulesys.BackwardRuleInfGraphI r1;
        com.hp.hpl.jena.reasoner.rulesys.impl.BBRuleContext r0;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.impl.BBRuleContext;

        r1 := @parameter0: com.hp.hpl.jena.reasoner.rulesys.BackwardRuleInfGraphI;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.reasoner.rulesys.impl.BBRuleContext: com.hp.hpl.jena.reasoner.rulesys.BackwardRuleInfGraphI graph> = r1;

        return;
    }

    public boolean contains(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.reasoner.rulesys.impl.BBRuleContext r0;
        com.hp.hpl.jena.graph.Node r1, r2, r3;
        com.hp.hpl.jena.util.iterator.ClosableIterator $r4;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.impl.BBRuleContext;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        r2 := @parameter1: com.hp.hpl.jena.graph.Node;

        r3 := @parameter2: com.hp.hpl.jena.graph.Node;

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.impl.BBRuleContext: com.hp.hpl.jena.util.iterator.ClosableIterator find(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r1, r2, r3);

        $z0 = interfaceinvoke $r4.<com.hp.hpl.jena.util.iterator.ClosableIterator: boolean hasNext()>();

        interfaceinvoke $r4.<com.hp.hpl.jena.util.iterator.ClosableIterator: void close()>();

        return $z0;
    }

    public boolean contains(com.hp.hpl.jena.graph.Triple)
    {
        com.hp.hpl.jena.reasoner.rulesys.impl.BBRuleContext r0;
        com.hp.hpl.jena.graph.Node $r2, $r3, $r4;
        com.hp.hpl.jena.graph.Triple r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.impl.BBRuleContext;

        r1 := @parameter0: com.hp.hpl.jena.graph.Triple;

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.graph.Triple: com.hp.hpl.jena.graph.Node getSubject()>();

        $r3 = virtualinvoke r1.<com.hp.hpl.jena.graph.Triple: com.hp.hpl.jena.graph.Node getPredicate()>();

        $r4 = virtualinvoke r1.<com.hp.hpl.jena.graph.Triple: com.hp.hpl.jena.graph.Node getObject()>();

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.impl.BBRuleContext: boolean contains(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>($r2, $r3, $r4);

        return $z0;
    }

    public com.hp.hpl.jena.util.iterator.ClosableIterator find(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r6;
        com.hp.hpl.jena.reasoner.TriplePattern $r1;
        com.hp.hpl.jena.reasoner.rulesys.impl.BBRuleContext r0;
        com.hp.hpl.jena.reasoner.rulesys.BackwardRuleInfGraphI $r5;
        com.hp.hpl.jena.graph.Node r2, r3, r4;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.impl.BBRuleContext;

        r2 := @parameter0: com.hp.hpl.jena.graph.Node;

        r3 := @parameter1: com.hp.hpl.jena.graph.Node;

        r4 := @parameter2: com.hp.hpl.jena.graph.Node;

        $r5 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.BBRuleContext: com.hp.hpl.jena.reasoner.rulesys.BackwardRuleInfGraphI graph>;

        $r1 = new com.hp.hpl.jena.reasoner.TriplePattern;

        specialinvoke $r1.<com.hp.hpl.jena.reasoner.TriplePattern: void <init>(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r2, r3, r4);

        $r6 = interfaceinvoke $r5.<com.hp.hpl.jena.reasoner.rulesys.BackwardRuleInfGraphI: com.hp.hpl.jena.util.iterator.ExtendedIterator findDataMatches(com.hp.hpl.jena.reasoner.TriplePattern)>($r1);

        return $r6;
    }

    public com.hp.hpl.jena.reasoner.rulesys.BindingEnvironment getEnv()
    {
        com.hp.hpl.jena.reasoner.rulesys.BindingEnvironment $r1;
        com.hp.hpl.jena.reasoner.rulesys.impl.BBRuleContext r0;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.impl.BBRuleContext;

        $r1 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.BBRuleContext: com.hp.hpl.jena.reasoner.rulesys.BindingEnvironment env>;

        return $r1;
    }

    public void setEnv(com.hp.hpl.jena.reasoner.rulesys.BindingEnvironment)
    {
        com.hp.hpl.jena.reasoner.rulesys.BindingEnvironment r1;
        com.hp.hpl.jena.reasoner.rulesys.impl.BBRuleContext r0;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.impl.BBRuleContext;

        r1 := @parameter0: com.hp.hpl.jena.reasoner.rulesys.BindingEnvironment;

        r0.<com.hp.hpl.jena.reasoner.rulesys.impl.BBRuleContext: com.hp.hpl.jena.reasoner.rulesys.BindingEnvironment env> = r1;

        return;
    }

    public com.hp.hpl.jena.reasoner.InfGraph getGraph()
    {
        com.hp.hpl.jena.reasoner.rulesys.BackwardRuleInfGraphI $r1;
        com.hp.hpl.jena.reasoner.rulesys.impl.BBRuleContext r0;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.impl.BBRuleContext;

        $r1 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.BBRuleContext: com.hp.hpl.jena.reasoner.rulesys.BackwardRuleInfGraphI graph>;

        return $r1;
    }

    public com.hp.hpl.jena.reasoner.rulesys.Rule getRule()
    {
        com.hp.hpl.jena.reasoner.rulesys.Rule $r1;
        com.hp.hpl.jena.reasoner.rulesys.impl.BBRuleContext r0;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.impl.BBRuleContext;

        $r1 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.BBRuleContext: com.hp.hpl.jena.reasoner.rulesys.Rule rule>;

        return $r1;
    }

    public void setRule(com.hp.hpl.jena.reasoner.rulesys.Rule)
    {
        com.hp.hpl.jena.reasoner.rulesys.Rule r1;
        com.hp.hpl.jena.reasoner.rulesys.impl.BBRuleContext r0;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.impl.BBRuleContext;

        r1 := @parameter0: com.hp.hpl.jena.reasoner.rulesys.Rule;

        r0.<com.hp.hpl.jena.reasoner.rulesys.impl.BBRuleContext: com.hp.hpl.jena.reasoner.rulesys.Rule rule> = r1;

        return;
    }

    public void silentAdd(com.hp.hpl.jena.graph.Triple)
    {
        com.hp.hpl.jena.reasoner.rulesys.BackwardRuleInfGraphI $r2;
        com.hp.hpl.jena.reasoner.rulesys.impl.BBRuleContext r0;
        com.hp.hpl.jena.graph.Triple r1;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.impl.BBRuleContext;

        r1 := @parameter0: com.hp.hpl.jena.graph.Triple;

        $r2 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.BBRuleContext: com.hp.hpl.jena.reasoner.rulesys.BackwardRuleInfGraphI graph>;

        interfaceinvoke $r2.<com.hp.hpl.jena.reasoner.rulesys.SilentAddI: void silentAdd(com.hp.hpl.jena.graph.Triple)>(r1);

        return;
    }

    public void add(com.hp.hpl.jena.graph.Triple)
    {
        com.hp.hpl.jena.reasoner.rulesys.BackwardRuleInfGraphI $r2;
        com.hp.hpl.jena.reasoner.rulesys.impl.BBRuleContext r0;
        com.hp.hpl.jena.graph.Triple r1;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.impl.BBRuleContext;

        r1 := @parameter0: com.hp.hpl.jena.graph.Triple;

        $r2 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.BBRuleContext: com.hp.hpl.jena.reasoner.rulesys.BackwardRuleInfGraphI graph>;

        interfaceinvoke $r2.<com.hp.hpl.jena.reasoner.rulesys.SilentAddI: void silentAdd(com.hp.hpl.jena.graph.Triple)>(r1);

        return;
    }

    public void remove(com.hp.hpl.jena.graph.Triple)
    {
        com.hp.hpl.jena.reasoner.rulesys.BackwardRuleInfGraphI $r2;
        com.hp.hpl.jena.reasoner.rulesys.impl.BBRuleContext r0;
        com.hp.hpl.jena.graph.Triple r1;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.impl.BBRuleContext;

        r1 := @parameter0: com.hp.hpl.jena.graph.Triple;

        $r2 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.BBRuleContext: com.hp.hpl.jena.reasoner.rulesys.BackwardRuleInfGraphI graph>;

        interfaceinvoke $r2.<com.hp.hpl.jena.reasoner.rulesys.BackwardRuleInfGraphI: void delete(com.hp.hpl.jena.graph.Triple)>(r1);

        return;
    }

    public com.hp.hpl.jena.graph.Node getTemp(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.reasoner.rulesys.impl.BBRuleContext r0;
        com.hp.hpl.jena.reasoner.rulesys.BackwardRuleInfGraphI $r4;
        com.hp.hpl.jena.graph.Node r1, r2, r3, $r5;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.impl.BBRuleContext;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        r2 := @parameter1: com.hp.hpl.jena.graph.Node;

        r3 := @parameter2: com.hp.hpl.jena.graph.Node;

        $r4 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.BBRuleContext: com.hp.hpl.jena.reasoner.rulesys.BackwardRuleInfGraphI graph>;

        $r5 = interfaceinvoke $r4.<com.hp.hpl.jena.reasoner.rulesys.BackwardRuleInfGraphI: com.hp.hpl.jena.graph.Node getTemp(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r1, r2, r3);

        return $r5;
    }
}
