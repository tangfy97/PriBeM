public abstract class org.mozilla.javascript.RhinoException extends java.lang.RuntimeException
{
    private java.lang.String sourceName;
    private int lineNumber;
    private java.lang.String lineSource;
    private int columnNumber;
    java.lang.Object interpreterStackInfo;
    int[] interpreterLineData;

    void <init>()
    {
        org.mozilla.javascript.RhinoException r0;

        r0 := @this: org.mozilla.javascript.RhinoException;

        specialinvoke r0.<java.lang.RuntimeException: void <init>()>();

        staticinvoke <org.mozilla.javascript.Interpreter: void captureInterpreterStackInfo(org.mozilla.javascript.RhinoException)>(r0);

        return;
    }

    void <init>(java.lang.String)
    {
        org.mozilla.javascript.RhinoException r0;
        java.lang.String r1;

        r0 := @this: org.mozilla.javascript.RhinoException;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.RuntimeException: void <init>(java.lang.String)>(r1);

        staticinvoke <org.mozilla.javascript.Interpreter: void captureInterpreterStackInfo(org.mozilla.javascript.RhinoException)>(r0);

        return;
    }

    public final java.lang.String getMessage()
    {
        org.mozilla.javascript.RhinoException r0;
        java.lang.StringBuffer $r3;
        int $i0, $i1, $i2;
        java.lang.String $r1, $r2, $r4, $r5, $r6;

        r0 := @this: org.mozilla.javascript.RhinoException;

        $r1 = virtualinvoke r0.<org.mozilla.javascript.RhinoException: java.lang.String details()>();

        $r2 = r0.<org.mozilla.javascript.RhinoException: java.lang.String sourceName>;

        if $r2 == null goto label1;

        $i0 = r0.<org.mozilla.javascript.RhinoException: int lineNumber>;

        if $i0 > 0 goto label2;

     label1:
        return $r1;

     label2:
        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>(java.lang.String)>($r1);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" (");

        $r4 = r0.<org.mozilla.javascript.RhinoException: java.lang.String sourceName>;

        if $r4 == null goto label3;

        $r6 = r0.<org.mozilla.javascript.RhinoException: java.lang.String sourceName>;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

     label3:
        $i1 = r0.<org.mozilla.javascript.RhinoException: int lineNumber>;

        if $i1 <= 0 goto label4;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(35);

        $i2 = r0.<org.mozilla.javascript.RhinoException: int lineNumber>;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

     label4:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(41);

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }

    public java.lang.String details()
    {
        org.mozilla.javascript.RhinoException r0;
        java.lang.String $r1;

        r0 := @this: org.mozilla.javascript.RhinoException;

        $r1 = specialinvoke r0.<java.lang.RuntimeException: java.lang.String getMessage()>();

        return $r1;
    }

    public final java.lang.String sourceName()
    {
        org.mozilla.javascript.RhinoException r0;
        java.lang.String $r1;

        r0 := @this: org.mozilla.javascript.RhinoException;

        $r1 = r0.<org.mozilla.javascript.RhinoException: java.lang.String sourceName>;

        return $r1;
    }

    public final void initSourceName(java.lang.String)
    {
        java.lang.IllegalStateException $r3;
        org.mozilla.javascript.RhinoException r1;
        java.lang.String r0, $r2;
        java.lang.IllegalArgumentException $r4;

        r1 := @this: org.mozilla.javascript.RhinoException;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r4;

     label1:
        $r2 = r1.<org.mozilla.javascript.RhinoException: java.lang.String sourceName>;

        if $r2 == null goto label2;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>()>();

        throw $r3;

     label2:
        r1.<org.mozilla.javascript.RhinoException: java.lang.String sourceName> = r0;

        return;
    }

    public final int lineNumber()
    {
        int $i0;
        org.mozilla.javascript.RhinoException r0;

        r0 := @this: org.mozilla.javascript.RhinoException;

        $i0 = r0.<org.mozilla.javascript.RhinoException: int lineNumber>;

        return $i0;
    }

    public final void initLineNumber(int)
    {
        java.lang.IllegalStateException $r1;
        int i0, $i1;
        org.mozilla.javascript.RhinoException r0;
        java.lang.String $r3;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.mozilla.javascript.RhinoException;

        i0 := @parameter0: int;

        if i0 > 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label1:
        $i1 = r0.<org.mozilla.javascript.RhinoException: int lineNumber>;

        if $i1 <= 0 goto label2;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>()>();

        throw $r1;

     label2:
        r0.<org.mozilla.javascript.RhinoException: int lineNumber> = i0;

        return;
    }

    public final int columnNumber()
    {
        int $i0;
        org.mozilla.javascript.RhinoException r0;

        r0 := @this: org.mozilla.javascript.RhinoException;

        $i0 = r0.<org.mozilla.javascript.RhinoException: int columnNumber>;

        return $i0;
    }

    public final void initColumnNumber(int)
    {
        java.lang.IllegalStateException $r1;
        int i0, $i1;
        org.mozilla.javascript.RhinoException r0;
        java.lang.String $r3;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.mozilla.javascript.RhinoException;

        i0 := @parameter0: int;

        if i0 > 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label1:
        $i1 = r0.<org.mozilla.javascript.RhinoException: int columnNumber>;

        if $i1 <= 0 goto label2;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>()>();

        throw $r1;

     label2:
        r0.<org.mozilla.javascript.RhinoException: int columnNumber> = i0;

        return;
    }

    public final java.lang.String lineSource()
    {
        org.mozilla.javascript.RhinoException r0;
        java.lang.String $r1;

        r0 := @this: org.mozilla.javascript.RhinoException;

        $r1 = r0.<org.mozilla.javascript.RhinoException: java.lang.String lineSource>;

        return $r1;
    }

    public final void initLineSource(java.lang.String)
    {
        java.lang.IllegalStateException $r3;
        org.mozilla.javascript.RhinoException r1;
        java.lang.String r0, $r2;
        java.lang.IllegalArgumentException $r4;

        r1 := @this: org.mozilla.javascript.RhinoException;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r4;

     label1:
        $r2 = r1.<org.mozilla.javascript.RhinoException: java.lang.String lineSource>;

        if $r2 == null goto label2;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>()>();

        throw $r3;

     label2:
        r1.<org.mozilla.javascript.RhinoException: java.lang.String lineSource> = r0;

        return;
    }

    final void recordErrorOrigin(java.lang.String, int, java.lang.String, int)
    {
        int i0, i1, $i3;
        org.mozilla.javascript.RhinoException r2;
        java.lang.String r0, r1;

        r2 := @this: org.mozilla.javascript.RhinoException;

        r0 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        $i3 = (int) -1;

        if i1 != $i3 goto label1;

        i1 = 0;

     label1:
        if r0 == null goto label2;

        virtualinvoke r2.<org.mozilla.javascript.RhinoException: void initSourceName(java.lang.String)>(r0);

     label2:
        if i1 == 0 goto label3;

        virtualinvoke r2.<org.mozilla.javascript.RhinoException: void initLineNumber(int)>(i1);

     label3:
        if r1 == null goto label4;

        virtualinvoke r2.<org.mozilla.javascript.RhinoException: void initLineSource(java.lang.String)>(r1);

     label4:
        if i0 == 0 goto label5;

        virtualinvoke r2.<org.mozilla.javascript.RhinoException: void initColumnNumber(int)>(i0);

     label5:
        return;
    }

    private java.lang.String generateStackTrace()
    {
        java.io.PrintWriter $r2;
        org.mozilla.javascript.RhinoException r1;
        java.io.CharArrayWriter $r0;
        java.lang.String $r3, $r4;

        r1 := @this: org.mozilla.javascript.RhinoException;

        $r0 = new java.io.CharArrayWriter;

        specialinvoke $r0.<java.io.CharArrayWriter: void <init>()>();

        $r2 = new java.io.PrintWriter;

        specialinvoke $r2.<java.io.PrintWriter: void <init>(java.io.Writer)>($r0);

        specialinvoke r1.<java.lang.RuntimeException: void printStackTrace(java.io.PrintWriter)>($r2);

        $r3 = virtualinvoke $r0.<java.io.CharArrayWriter: java.lang.String toString()>();

        $r4 = staticinvoke <org.mozilla.javascript.Interpreter: java.lang.String getPatchedStack(org.mozilla.javascript.RhinoException,java.lang.String)>(r1, $r3);

        return $r4;
    }

    public void printStackTrace(java.io.PrintWriter)
    {
        java.io.PrintWriter r2;
        org.mozilla.javascript.RhinoException r0;
        java.lang.Object $r1;
        java.lang.String $r3;

        r0 := @this: org.mozilla.javascript.RhinoException;

        r2 := @parameter0: java.io.PrintWriter;

        $r1 = r0.<org.mozilla.javascript.RhinoException: java.lang.Object interpreterStackInfo>;

        if $r1 != null goto label1;

        specialinvoke r0.<java.lang.RuntimeException: void printStackTrace(java.io.PrintWriter)>(r2);

        goto label2;

     label1:
        $r3 = specialinvoke r0.<org.mozilla.javascript.RhinoException: java.lang.String generateStackTrace()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r3);

     label2:
        return;
    }

    public void printStackTrace(java.io.PrintStream)
    {
        java.io.PrintStream r2;
        org.mozilla.javascript.RhinoException r0;
        java.lang.Object $r1;
        java.lang.String $r3;

        r0 := @this: org.mozilla.javascript.RhinoException;

        r2 := @parameter0: java.io.PrintStream;

        $r1 = r0.<org.mozilla.javascript.RhinoException: java.lang.Object interpreterStackInfo>;

        if $r1 != null goto label1;

        specialinvoke r0.<java.lang.RuntimeException: void printStackTrace(java.io.PrintStream)>(r2);

        goto label2;

     label1:
        $r3 = specialinvoke r0.<org.mozilla.javascript.RhinoException: java.lang.String generateStackTrace()>();

        virtualinvoke r2.<java.io.PrintStream: void print(java.lang.String)>($r3);

     label2:
        return;
    }
}
