public class org.xmlpull.mxp1_serializer.MXSerializer extends java.lang.Object implements org.xmlpull.v1.XmlSerializer
{
    protected static final java.lang.String XML_URI;
    protected static final java.lang.String XMLNS_URI;
    private static final boolean TRACE_SIZING;
    private static final boolean TRACE_ESCAPING;
    protected final java.lang.String FEATURE_SERIALIZER_ATTVALUE_USE_APOSTROPHE;
    protected final java.lang.String FEATURE_NAMES_INTERNED;
    protected final java.lang.String PROPERTY_SERIALIZER_INDENTATION;
    protected final java.lang.String PROPERTY_SERIALIZER_LINE_SEPARATOR;
    protected static final java.lang.String PROPERTY_LOCATION;
    protected boolean namesInterned;
    protected boolean attributeUseApostrophe;
    protected java.lang.String indentationString;
    protected java.lang.String lineSeparator;
    protected java.lang.String location;
    protected java.io.Writer out;
    protected int autoDeclaredPrefixes;
    protected int depth;
    protected java.lang.String[] elNamespace;
    protected java.lang.String[] elName;
    protected java.lang.String[] elPrefix;
    protected int[] elNamespaceCount;
    protected int namespaceEnd;
    protected java.lang.String[] namespacePrefix;
    protected java.lang.String[] namespaceUri;
    protected boolean finished;
    protected boolean pastRoot;
    protected boolean setPrefixCalled;
    protected boolean startTagIncomplete;
    protected boolean doIndent;
    protected boolean seenTag;
    protected boolean seenBracket;
    protected boolean seenBracketBracket;
    private static final int BUF_LEN;
    protected char[] buf;
    protected static final java.lang.String[] precomputedPrefixes;
    private boolean checkNamesInterned;
    protected int offsetNewLine;
    protected int indentationJump;
    protected char[] indentationBuf;
    protected int maxIndentLevel;
    protected boolean writeLineSepartor;
    protected boolean writeIndentation;

    public void <init>()
    {
        java.lang.String[] $r1, $r2, $r3, $r4, $r5, $r6, $r8, $r9, $r10;
        org.xmlpull.mxp1_serializer.MXSerializer r0;
        int[] $r7;
        int $i0, $i1, $i2, $i3, $i4;
        char[] $r11;

        r0 := @this: org.xmlpull.mxp1_serializer.MXSerializer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String PROPERTY_SERIALIZER_LINE_SEPARATOR> = "http://xmlpull.org/v1/doc/properties.html#serializer-line-separator";

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String PROPERTY_SERIALIZER_INDENTATION> = "http://xmlpull.org/v1/doc/properties.html#serializer-indentation";

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String FEATURE_NAMES_INTERNED> = "http://xmlpull.org/v1/doc/features.html#names-interned";

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String FEATURE_SERIALIZER_ATTVALUE_USE_APOSTROPHE> = "http://xmlpull.org/v1/doc/features.html#serializer-attvalue-use-apostrophe";

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String FEATURE_SERIALIZER_ATTVALUE_USE_APOSTROPHE> = "http://xmlpull.org/v1/doc/features.html#serializer-attvalue-use-apostrophe";

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String FEATURE_NAMES_INTERNED> = "http://xmlpull.org/v1/doc/features.html#names-interned";

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String PROPERTY_SERIALIZER_INDENTATION> = "http://xmlpull.org/v1/doc/properties.html#serializer-indentation";

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String PROPERTY_SERIALIZER_LINE_SEPARATOR> = "http://xmlpull.org/v1/doc/properties.html#serializer-line-separator";

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String indentationString> = null;

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String lineSeparator> = "\n";

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: int depth> = 0;

        $r1 = newarray (java.lang.String)[2];

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] elNamespace> = $r1;

        $r2 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] elNamespace>;

        $i0 = lengthof $r2;

        $r3 = newarray (java.lang.String)[$i0];

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] elName> = $r3;

        $r4 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] elNamespace>;

        $i1 = lengthof $r4;

        $r5 = newarray (java.lang.String)[$i1];

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] elPrefix> = $r5;

        $r6 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] elNamespace>;

        $i2 = lengthof $r6;

        $r7 = newarray (int)[$i2];

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: int[] elNamespaceCount> = $r7;

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: int namespaceEnd> = 0;

        $r8 = newarray (java.lang.String)[8];

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] namespacePrefix> = $r8;

        $r9 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] namespacePrefix>;

        $i3 = lengthof $r9;

        $r10 = newarray (java.lang.String)[$i3];

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] namespaceUri> = $r10;

        $i4 = <org.xmlpull.mxp1_serializer.MXSerializer: int BUF_LEN>;

        $r11 = newarray (char)[$i4];

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: char[] buf> = $r11;

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean checkNamesInterned> = 0;

        return;
    }

    private void checkInterning(java.lang.String)
    {
        java.lang.String r1, $r2;
        java.lang.IllegalArgumentException $r3;
        org.xmlpull.mxp1_serializer.MXSerializer r0;
        boolean $z0;

        r0 := @this: org.xmlpull.mxp1_serializer.MXSerializer;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean namesInterned>;

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String intern()>();

        if r1 == $r2 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("all names passed as arguments must be internedwhen NAMES INTERNED feature is enabled");

        throw $r3;

     label1:
        return;
    }

    protected void reset()
    {
        java.lang.String[] $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        org.xmlpull.mxp1_serializer.MXSerializer r0;
        int[] $r1, $r9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9;

        r0 := @this: org.xmlpull.mxp1_serializer.MXSerializer;

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String location> = null;

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.io.Writer out> = null;

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: int autoDeclaredPrefixes> = 0;

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: int depth> = 0;

        i9 = 0;

     label1:
        $r1 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int[] elNamespaceCount>;

        $i0 = lengthof $r1;

        if i9 >= $i0 goto label2;

        $r6 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] elName>;

        $r6[i9] = null;

        $r7 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] elPrefix>;

        $r7[i9] = null;

        $r8 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] elNamespace>;

        $r8[i9] = null;

        $r9 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int[] elNamespaceCount>;

        $r9[i9] = 2;

        i9 = i9 + 1;

        goto label1;

     label2:
        r0.<org.xmlpull.mxp1_serializer.MXSerializer: int namespaceEnd> = 0;

        $r2 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] namespacePrefix>;

        $i1 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int namespaceEnd>;

        $r2[$i1] = "xmlns";

        $r3 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] namespaceUri>;

        $i2 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int namespaceEnd>;

        $r3[$i2] = "http://www.w3.org/2000/xmlns/";

        $i3 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int namespaceEnd>;

        $i4 = $i3 + 1;

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: int namespaceEnd> = $i4;

        $r4 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] namespacePrefix>;

        $i5 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int namespaceEnd>;

        $r4[$i5] = "xml";

        $r5 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] namespaceUri>;

        $i6 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int namespaceEnd>;

        $r5[$i6] = "http://www.w3.org/XML/1998/namespace";

        $i7 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int namespaceEnd>;

        $i8 = $i7 + 1;

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: int namespaceEnd> = $i8;

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean finished> = 0;

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean pastRoot> = 0;

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean setPrefixCalled> = 0;

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean startTagIncomplete> = 0;

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean seenTag> = 0;

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean seenBracket> = 0;

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean seenBracketBracket> = 0;

        return;
    }

    protected void ensureElementsCapacity()
    {
        java.lang.String[] $r1, $r3, $r5, $r6, $r7, $r8, $r9;
        org.xmlpull.mxp1_serializer.MXSerializer r0;
        int[] $r2, $r4;
        int i0, $i1, $i2, $i3, $i4;
        boolean z0, $z2, $z3;

        r0 := @this: org.xmlpull.mxp1_serializer.MXSerializer;

        $r1 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] elName>;

        i0 = lengthof $r1;

        $i1 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int depth>;

        if $i1 < 7 goto label1;

        $i2 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int depth>;

        $i4 = 2 * $i2;

        goto label2;

     label1:
        $i4 = 8;

     label2:
        $i3 = $i4 + 2;

        if i0 <= 0 goto label3;

        $z3 = 1;

        $z2 = 1;

        goto label4;

     label3:
        $z3 = 0;

        $z2 = 0;

     label4:
        z0 = $z2;

        $r9 = newarray (java.lang.String)[$i3];

        if $z3 == 0 goto label5;

        $r7 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] elName>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, 0, $r9, 0, i0);

     label5:
        r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] elName> = $r9;

        $r8 = newarray (java.lang.String)[$i3];

        if z0 == 0 goto label6;

        $r5 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] elPrefix>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, $r8, 0, i0);

     label6:
        r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] elPrefix> = $r8;

        $r6 = newarray (java.lang.String)[$i3];

        if z0 == 0 goto label7;

        $r3 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] elNamespace>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r6, 0, i0);

     label7:
        r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] elNamespace> = $r6;

        $r4 = newarray (int)[$i3];

        if z0 == 0 goto label8;

        $r2 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int[] elNamespaceCount>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r4, 0, i0);

        goto label9;

     label8:
        $r4[0] = 0;

     label9:
        r0.<org.xmlpull.mxp1_serializer.MXSerializer: int[] elNamespaceCount> = $r4;

        return;
    }

    protected void ensureNamespacesCapacity()
    {
        java.lang.String[] $r1, $r2, $r3, $r4, $r5;
        org.xmlpull.mxp1_serializer.MXSerializer r0;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: org.xmlpull.mxp1_serializer.MXSerializer;

        $i0 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int namespaceEnd>;

        if $i0 <= 7 goto label1;

        $i3 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int namespaceEnd>;

        $i4 = 2 * $i3;

        goto label2;

     label1:
        $i4 = 8;

     label2:
        $r4 = newarray (java.lang.String)[$i4];

        $r5 = newarray (java.lang.String)[$i4];

        $r1 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] namespacePrefix>;

        if $r1 == null goto label3;

        $r2 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] namespacePrefix>;

        $i1 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int namespaceEnd>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r4, 0, $i1);

        $r3 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] namespaceUri>;

        $i2 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int namespaceEnd>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r5, 0, $i2);

     label3:
        r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] namespacePrefix> = $r4;

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] namespaceUri> = $r5;

        return;
    }

    public void setFeature(java.lang.String, boolean) throws java.lang.IllegalArgumentException, java.lang.IllegalStateException
    {
        java.lang.IllegalStateException $r3;
        java.lang.IllegalArgumentException $r9;
        org.xmlpull.mxp1_serializer.MXSerializer r8;
        java.lang.StringBuffer $r4, $r5, $r6;
        java.lang.String r0, $r1, $r2, $r7;
        boolean $z0, $z1, z2;

        r8 := @this: org.xmlpull.mxp1_serializer.MXSerializer;

        r0 := @parameter0: java.lang.String;

        z2 := @parameter1: boolean;

        if r0 != null goto label1;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("feature name can not be null");

        throw $r9;

     label1:
        $r1 = "http://xmlpull.org/v1/doc/features.html#names-interned";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label2;

        r8.<org.xmlpull.mxp1_serializer.MXSerializer: boolean namesInterned> = z2;

        goto label4;

     label2:
        $r2 = "http://xmlpull.org/v1/doc/features.html#serializer-attvalue-use-apostrophe";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label3;

        r8.<org.xmlpull.mxp1_serializer.MXSerializer: boolean attributeUseApostrophe> = z2;

        goto label4;

     label3:
        $r3 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("unsupported feature ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label4:
        return;
    }

    public boolean getFeature(java.lang.String) throws java.lang.IllegalArgumentException
    {
        java.lang.IllegalArgumentException $r4;
        org.xmlpull.mxp1_serializer.MXSerializer r3;
        java.lang.String r0, $r1, $r2;
        boolean $z0, $z1, $z2, $z3;

        r3 := @this: org.xmlpull.mxp1_serializer.MXSerializer;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("feature name can not be null");

        throw $r4;

     label1:
        $r1 = "http://xmlpull.org/v1/doc/features.html#names-interned";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label2;

        $z3 = r3.<org.xmlpull.mxp1_serializer.MXSerializer: boolean namesInterned>;

        return $z3;

     label2:
        $r2 = "http://xmlpull.org/v1/doc/features.html#serializer-attvalue-use-apostrophe";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label3;

        $z2 = r3.<org.xmlpull.mxp1_serializer.MXSerializer: boolean attributeUseApostrophe>;

        return $z2;

     label3:
        return 0;
    }

    protected void rebuildIndentationBuf()
    {
        boolean $z0, $z1, $z2, $z3, $z4;
        org.xmlpull.mxp1_serializer.MXSerializer r0;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17, i18, i19, i20, i21;
        java.lang.String $r3, $r4, $r6, $r7, $r10, $r11;
        char $c4, $c7;
        char[] $r1, $r2, $r5, $r8, $r9;

        r0 := @this: org.xmlpull.mxp1_serializer.MXSerializer;

        $z0 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean doIndent>;

        if $z0 != 0 goto label01;

        return;

     label01:
        i17 = 0;

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: int offsetNewLine> = 0;

        $z1 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean writeLineSepartor>;

        if $z1 == 0 goto label02;

        $r11 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String lineSeparator>;

        $i15 = virtualinvoke $r11.<java.lang.String: int length()>();

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: int offsetNewLine> = $i15;

        $i16 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int offsetNewLine>;

        i17 = 0 + $i16;

     label02:
        r0.<org.xmlpull.mxp1_serializer.MXSerializer: int maxIndentLevel> = 0;

        $z2 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean writeIndentation>;

        if $z2 == 0 goto label03;

        $r10 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String indentationString>;

        $i9 = virtualinvoke $r10.<java.lang.String: int length()>();

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: int indentationJump> = $i9;

        $i10 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int indentationJump>;

        $i11 = 65 / $i10;

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: int maxIndentLevel> = $i11;

        $i13 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int maxIndentLevel>;

        $i12 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int indentationJump>;

        $i14 = $i13 * $i12;

        i17 = i17 + $i14;

     label03:
        $r1 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: char[] indentationBuf>;

        if $r1 == null goto label04;

        $r9 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: char[] indentationBuf>;

        $i8 = lengthof $r9;

        if $i8 >= i17 goto label05;

     label04:
        $i0 = i17 + 8;

        $r2 = newarray (char)[$i0];

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: char[] indentationBuf> = $r2;

     label05:
        i18 = 0;

        $z4 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean writeLineSepartor>;

        if $z4 == 0 goto label07;

        i19 = 0;

     label06:
        $r6 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String lineSeparator>;

        $i5 = virtualinvoke $r6.<java.lang.String: int length()>();

        if i19 >= $i5 goto label07;

        $r8 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: char[] indentationBuf>;

        $i6 = i18;

        i18 = i18 + 1;

        $r7 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String lineSeparator>;

        $c7 = virtualinvoke $r7.<java.lang.String: char charAt(int)>(i19);

        $r8[$i6] = $c7;

        i19 = i19 + 1;

        goto label06;

     label07:
        $z3 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean writeIndentation>;

        if $z3 == 0 goto label11;

        i20 = 0;

     label08:
        $i1 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int maxIndentLevel>;

        if i20 >= $i1 goto label11;

        i21 = 0;

     label09:
        $r3 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String indentationString>;

        $i2 = virtualinvoke $r3.<java.lang.String: int length()>();

        if i21 >= $i2 goto label10;

        $r5 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: char[] indentationBuf>;

        $i3 = i18;

        i18 = i18 + 1;

        $r4 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String indentationString>;

        $c4 = virtualinvoke $r4.<java.lang.String: char charAt(int)>(i21);

        $r5[$i3] = $c4;

        i21 = i21 + 1;

        goto label09;

     label10:
        i20 = i20 + 1;

        goto label08;

     label11:
        return;
    }

    protected void writeIndent() throws java.io.IOException
    {
        org.xmlpull.mxp1_serializer.MXSerializer r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.io.Writer $r2;
        char[] $r1;
        boolean $z0;

        r0 := @this: org.xmlpull.mxp1_serializer.MXSerializer;

        $z0 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean writeLineSepartor>;

        if $z0 == 0 goto label1;

        $i8 = 0;

        goto label2;

     label1:
        $i8 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int offsetNewLine>;

     label2:
        i0 = $i8;

        $i2 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int depth>;

        $i1 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int maxIndentLevel>;

        if $i2 <= $i1 goto label3;

        $i9 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int maxIndentLevel>;

        goto label4;

     label3:
        $i9 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int depth>;

     label4:
        $r2 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.io.Writer out>;

        $r1 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: char[] indentationBuf>;

        $i4 = $i9 - 1;

        $i3 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int indentationJump>;

        $i6 = $i4 * $i3;

        $i5 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int offsetNewLine>;

        $i7 = $i6 + $i5;

        virtualinvoke $r2.<java.io.Writer: void write(char[],int,int)>($r1, i0, $i7);

        return;
    }

    public void setProperty(java.lang.String, java.lang.Object) throws java.lang.IllegalArgumentException, java.lang.IllegalStateException
    {
        java.lang.IllegalStateException $r4;
        org.xmlpull.mxp1_serializer.MXSerializer r9;
        java.lang.StringBuffer $r5, $r6, $r7;
        int $i0, $i1;
        java.lang.String r0, $r1, $r2, $r3, $r8, $r11, $r12, $r13, $r14, $r15, $r17, $r18, $r19;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.IllegalArgumentException $r16;
        java.lang.Object r10;

        r9 := @this: org.xmlpull.mxp1_serializer.MXSerializer;

        r0 := @parameter0: java.lang.String;

        r10 := @parameter1: java.lang.Object;

        if r0 != null goto label01;

        $r16 = new java.lang.IllegalArgumentException;

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("property name can not be null");

        throw $r16;

     label01:
        $r1 = "http://xmlpull.org/v1/doc/properties.html#serializer-indentation";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label02;

        $r15 = (java.lang.String) r10;

        r9.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String indentationString> = $r15;

        goto label05;

     label02:
        $r2 = "http://xmlpull.org/v1/doc/properties.html#serializer-line-separator";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label03;

        $r14 = (java.lang.String) r10;

        r9.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String lineSeparator> = $r14;

        goto label05;

     label03:
        $r3 = "http://xmlpull.org/v1/doc/properties.html#location";

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z2 == 0 goto label04;

        $r11 = (java.lang.String) r10;

        r9.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String location> = $r11;

        goto label05;

     label04:
        $r4 = new java.lang.IllegalStateException;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("unsupported property ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label05:
        $r17 = r9.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String lineSeparator>;

        if $r17 == null goto label06;

        $r13 = r9.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String lineSeparator>;

        $i1 = virtualinvoke $r13.<java.lang.String: int length()>();

        if $i1 <= 0 goto label06;

        $z5 = 1;

        goto label07;

     label06:
        $z5 = 0;

     label07:
        r9.<org.xmlpull.mxp1_serializer.MXSerializer: boolean writeLineSepartor> = $z5;

        $r18 = r9.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String indentationString>;

        if $r18 == null goto label08;

        $r12 = r9.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String indentationString>;

        $i0 = virtualinvoke $r12.<java.lang.String: int length()>();

        if $i0 <= 0 goto label08;

        $z6 = 1;

        goto label09;

     label08:
        $z6 = 0;

     label09:
        r9.<org.xmlpull.mxp1_serializer.MXSerializer: boolean writeIndentation> = $z6;

        $r19 = r9.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String indentationString>;

        if $r19 == null goto label11;

        $z3 = r9.<org.xmlpull.mxp1_serializer.MXSerializer: boolean writeLineSepartor>;

        if $z3 != 0 goto label10;

        $z4 = r9.<org.xmlpull.mxp1_serializer.MXSerializer: boolean writeIndentation>;

        if $z4 == 0 goto label11;

     label10:
        $z7 = 1;

        goto label12;

     label11:
        $z7 = 0;

     label12:
        r9.<org.xmlpull.mxp1_serializer.MXSerializer: boolean doIndent> = $z7;

        virtualinvoke r9.<org.xmlpull.mxp1_serializer.MXSerializer: void rebuildIndentationBuf()>();

        r9.<org.xmlpull.mxp1_serializer.MXSerializer: boolean seenTag> = 0;

        return;
    }

    public java.lang.Object getProperty(java.lang.String) throws java.lang.IllegalArgumentException
    {
        java.lang.IllegalArgumentException $r8;
        org.xmlpull.mxp1_serializer.MXSerializer r4;
        java.lang.String r0, $r1, $r2, $r3, $r5, $r6, $r7;
        boolean $z0, $z1, $z2;

        r4 := @this: org.xmlpull.mxp1_serializer.MXSerializer;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("property name can not be null");

        throw $r8;

     label1:
        $r1 = "http://xmlpull.org/v1/doc/properties.html#serializer-indentation";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label2;

        $r7 = r4.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String indentationString>;

        return $r7;

     label2:
        $r2 = "http://xmlpull.org/v1/doc/properties.html#serializer-line-separator";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label3;

        $r6 = r4.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String lineSeparator>;

        return $r6;

     label3:
        $r3 = "http://xmlpull.org/v1/doc/properties.html#location";

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z2 == 0 goto label4;

        $r5 = r4.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String location>;

        return $r5;

     label4:
        return null;
    }

    private java.lang.String getLocation()
    {
        java.lang.StringBuffer $r2, $r3, $r5;
        java.lang.String $r1, $r4, $r6;
        org.xmlpull.mxp1_serializer.MXSerializer r0;

        r0 := @this: org.xmlpull.mxp1_serializer.MXSerializer;

        $r1 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String location>;

        if $r1 == null goto label1;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" @");

        $r4 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String location>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label2;

     label1:
        $r6 = "";

     label2:
        return $r6;
    }

    public java.io.Writer getWriter()
    {
        java.io.Writer $r1;
        org.xmlpull.mxp1_serializer.MXSerializer r0;

        r0 := @this: org.xmlpull.mxp1_serializer.MXSerializer;

        $r1 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.io.Writer out>;

        return $r1;
    }

    public void setOutput(java.io.Writer)
    {
        java.io.Writer r1;
        org.xmlpull.mxp1_serializer.MXSerializer r0;

        r0 := @this: org.xmlpull.mxp1_serializer.MXSerializer;

        r1 := @parameter0: java.io.Writer;

        virtualinvoke r0.<org.xmlpull.mxp1_serializer.MXSerializer: void reset()>();

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.io.Writer out> = r1;

        return;
    }

    public void setOutput(java.io.OutputStream, java.lang.String) throws java.io.IOException
    {
        java.io.OutputStream r0;
        java.io.OutputStreamWriter $r3, $r4;
        java.lang.String r2;
        java.lang.IllegalArgumentException $r5;
        org.xmlpull.mxp1_serializer.MXSerializer r1;

        r1 := @this: org.xmlpull.mxp1_serializer.MXSerializer;

        r0 := @parameter0: java.io.OutputStream;

        r2 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("output stream can not be null");

        throw $r5;

     label1:
        virtualinvoke r1.<org.xmlpull.mxp1_serializer.MXSerializer: void reset()>();

        if r2 == null goto label2;

        $r4 = new java.io.OutputStreamWriter;

        specialinvoke $r4.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>(r0, r2);

        r1.<org.xmlpull.mxp1_serializer.MXSerializer: java.io.Writer out> = $r4;

        goto label3;

     label2:
        $r3 = new java.io.OutputStreamWriter;

        specialinvoke $r3.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>(r0);

        r1.<org.xmlpull.mxp1_serializer.MXSerializer: java.io.Writer out> = $r3;

     label3:
        return;
    }

    public void startDocument(java.lang.String, java.lang.Boolean) throws java.io.IOException
    {
        org.xmlpull.mxp1_serializer.MXSerializer r0;
        byte $b0, $b1, $b2, $b3;
        java.lang.Boolean r3;
        java.lang.String r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.io.Writer $r1, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;

        r0 := @this: org.xmlpull.mxp1_serializer.MXSerializer;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Boolean;

        $z0 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean attributeUseApostrophe>;

        if $z0 == 0 goto label01;

        goto label01;

     label01:
        $z1 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean attributeUseApostrophe>;

        if $z1 == 0 goto label02;

        $r13 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.io.Writer out>;

        virtualinvoke $r13.<java.io.Writer: void write(java.lang.String)>("<?xml version=\'1.0\'");

        goto label03;

     label02:
        $r1 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.io.Writer out>;

        virtualinvoke $r1.<java.io.Writer: void write(java.lang.String)>("<?xml version=\"1.0\"");

     label03:
        if r2 == null goto label08;

        $r9 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.io.Writer out>;

        virtualinvoke $r9.<java.io.Writer: void write(java.lang.String)>(" encoding=");

        $r10 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.io.Writer out>;

        $z5 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean attributeUseApostrophe>;

        if $z5 == 0 goto label04;

        $b0 = 39;

        goto label05;

     label04:
        $b0 = 34;

     label05:
        virtualinvoke $r10.<java.io.Writer: void write(int)>($b0);

        $r11 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.io.Writer out>;

        virtualinvoke $r11.<java.io.Writer: void write(java.lang.String)>(r2);

        $r12 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.io.Writer out>;

        $z6 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean attributeUseApostrophe>;

        if $z6 == 0 goto label06;

        $b1 = 39;

        goto label07;

     label06:
        $b1 = 34;

     label07:
        virtualinvoke $r12.<java.io.Writer: void write(int)>($b1);

     label08:
        if r3 == null goto label15;

        $r4 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.io.Writer out>;

        virtualinvoke $r4.<java.io.Writer: void write(java.lang.String)>(" standalone=");

        $r5 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.io.Writer out>;

        $z2 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean attributeUseApostrophe>;

        if $z2 == 0 goto label09;

        $b2 = 39;

        goto label10;

     label09:
        $b2 = 34;

     label10:
        virtualinvoke $r5.<java.io.Writer: void write(int)>($b2);

        $z3 = virtualinvoke r3.<java.lang.Boolean: boolean booleanValue()>();

        if $z3 == 0 goto label11;

        $r8 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.io.Writer out>;

        virtualinvoke $r8.<java.io.Writer: void write(java.lang.String)>("yes");

        goto label12;

     label11:
        $r6 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.io.Writer out>;

        virtualinvoke $r6.<java.io.Writer: void write(java.lang.String)>("no");

     label12:
        $r7 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.io.Writer out>;

        $z4 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean attributeUseApostrophe>;

        if $z4 == 0 goto label13;

        $b3 = 39;

        goto label14;

     label13:
        $b3 = 34;

     label14:
        virtualinvoke $r7.<java.io.Writer: void write(int)>($b3);

     label15:
        $r14 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.io.Writer out>;

        virtualinvoke $r14.<java.io.Writer: void write(java.lang.String)>("?>");

        return;
    }

    public void endDocument() throws java.io.IOException
    {
        java.lang.String[] $r2, $r3;
        org.xmlpull.mxp1_serializer.MXSerializer r0;
        int $i0, $i1, $i2;
        java.io.Writer $r1;
        java.lang.String $r4, $r5;

        r0 := @this: org.xmlpull.mxp1_serializer.MXSerializer;

     label1:
        $i0 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int depth>;

        if $i0 <= 0 goto label2;

        $r2 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] elNamespace>;

        $i1 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int depth>;

        $r5 = $r2[$i1];

        $r3 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] elName>;

        $i2 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int depth>;

        $r4 = $r3[$i2];

        virtualinvoke r0.<org.xmlpull.mxp1_serializer.MXSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>($r5, $r4);

        goto label1;

     label2:
        r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean startTagIncomplete> = 1;

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean pastRoot> = 1;

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean finished> = 1;

        $r1 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.io.Writer out>;

        virtualinvoke $r1.<java.io.Writer: void flush()>();

        return;
    }

    public void setPrefix(java.lang.String, java.lang.String) throws java.io.IOException
    {
        java.lang.IllegalStateException $r11;
        int[] $r27;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.String[] $r1, $r2, $r9, $r28;
        org.xmlpull.mxp1_serializer.MXSerializer r0;
        java.lang.StringBuffer $r4, $r5, $r7, $r12, $r13, $r15, $r17, $r20, $r21, $r23;
        int $i0, $i1, $i2, $i3, $i4, i5, $i6, $i7, $i8;
        java.lang.String $r6, $r8, $r10, $r14, $r16, $r18, $r22, $r24, r25, r26;
        java.lang.IllegalArgumentException $r3, $r19;

        r0 := @this: org.xmlpull.mxp1_serializer.MXSerializer;

        r25 := @parameter0: java.lang.String;

        r26 := @parameter1: java.lang.String;

        $z0 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean startTagIncomplete>;

        if $z0 == 0 goto label01;

        virtualinvoke r0.<org.xmlpull.mxp1_serializer.MXSerializer: void closeStartTag()>();

     label01:
        if r25 != null goto label02;

        r25 = "";

     label02:
        $z1 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean namesInterned>;

        if $z1 != 0 goto label03;

        r25 = virtualinvoke r25.<java.lang.String: java.lang.String intern()>();

        goto label05;

     label03:
        $z2 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean checkNamesInterned>;

        if $z2 == 0 goto label04;

        specialinvoke r0.<org.xmlpull.mxp1_serializer.MXSerializer: void checkInterning(java.lang.String)>(r25);

        goto label05;

     label04:
        if r25 != null goto label05;

        $r19 = new java.lang.IllegalArgumentException;

        $r20 = new java.lang.StringBuffer;

        specialinvoke $r20.<java.lang.StringBuffer: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("prefix must be not null");

        $r22 = specialinvoke r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String getLocation()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r24);

        throw $r19;

     label05:
        $r27 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int[] elNamespaceCount>;

        $i4 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int depth>;

        i5 = $r27[$i4];

     label06:
        $i6 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int namespaceEnd>;

        if i5 >= $i6 goto label08;

        $r9 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] namespacePrefix>;

        $r10 = $r9[i5];

        if r25 != $r10 goto label07;

        $r11 = new java.lang.IllegalStateException;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("duplicated prefix ");

        $r14 = staticinvoke <org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String printable(java.lang.String)>(r25);

        $r15 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r16 = specialinvoke r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String getLocation()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r18);

        throw $r11;

     label07:
        i5 = i5 + 1;

        goto label06;

     label08:
        $z3 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean namesInterned>;

        if $z3 != 0 goto label09;

        r26 = virtualinvoke r26.<java.lang.String: java.lang.String intern()>();

        goto label11;

     label09:
        $z4 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean checkNamesInterned>;

        if $z4 == 0 goto label10;

        specialinvoke r0.<org.xmlpull.mxp1_serializer.MXSerializer: void checkInterning(java.lang.String)>(r26);

        goto label11;

     label10:
        if r26 != null goto label11;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("namespace must be not null");

        $r6 = specialinvoke r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String getLocation()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r3;

     label11:
        $i7 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int namespaceEnd>;

        $r28 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] namespacePrefix>;

        $i8 = lengthof $r28;

        if $i7 < $i8 goto label12;

        virtualinvoke r0.<org.xmlpull.mxp1_serializer.MXSerializer: void ensureNamespacesCapacity()>();

     label12:
        $r1 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] namespacePrefix>;

        $i0 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int namespaceEnd>;

        $r1[$i0] = r25;

        $r2 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] namespaceUri>;

        $i1 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int namespaceEnd>;

        $r2[$i1] = r26;

        $i2 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int namespaceEnd>;

        $i3 = $i2 + 1;

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: int namespaceEnd> = $i3;

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean setPrefixCalled> = 1;

        return;
    }

    protected java.lang.String lookupOrDeclarePrefix(java.lang.String)
    {
        java.lang.String r1, $r2;
        org.xmlpull.mxp1_serializer.MXSerializer r0;

        r0 := @this: org.xmlpull.mxp1_serializer.MXSerializer;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String getPrefix(java.lang.String,boolean)>(r1, 1);

        return $r2;
    }

    public java.lang.String getPrefix(java.lang.String, boolean)
    {
        java.lang.String r1, $r2;
        org.xmlpull.mxp1_serializer.MXSerializer r0;
        boolean z0;

        r0 := @this: org.xmlpull.mxp1_serializer.MXSerializer;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = virtualinvoke r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String getPrefix(java.lang.String,boolean,boolean)>(r1, z0, 0);

        return $r2;
    }

    protected java.lang.String getPrefix(java.lang.String, boolean, boolean)
    {
        boolean $z0, $z1, z2, z3;
        java.lang.String[] $r2, $r4, $r6;
        org.xmlpull.mxp1_serializer.MXSerializer r0;
        java.lang.StringBuffer $r10, $r12, $r16, $r18, $r21, $r23;
        int $i0, $i1, $i2, $i3, i4, i5, $i7, $i9;
        java.lang.String $r1, $r3, r5, $r7, $r11, $r13, $r17, $r19, r20;
        java.lang.IllegalArgumentException $r22, $r24;

        r0 := @this: org.xmlpull.mxp1_serializer.MXSerializer;

        r20 := @parameter0: java.lang.String;

        z2 := @parameter1: boolean;

        z3 := @parameter2: boolean;

        $z0 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean namesInterned>;

        if $z0 != 0 goto label01;

        r20 = virtualinvoke r20.<java.lang.String: java.lang.String intern()>();

        goto label02;

     label01:
        $z1 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean checkNamesInterned>;

        if $z1 == 0 goto label02;

        specialinvoke r0.<org.xmlpull.mxp1_serializer.MXSerializer: void checkInterning(java.lang.String)>(r20);

     label02:
        if r20 != null goto label03;

        $r22 = new java.lang.IllegalArgumentException;

        $r21 = new java.lang.StringBuffer;

        specialinvoke $r21.<java.lang.StringBuffer: void <init>()>();

        $r16 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("namespace must be not null");

        $r17 = specialinvoke r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String getLocation()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r19);

        throw $r22;

     label03:
        $i0 = virtualinvoke r20.<java.lang.String: int length()>();

        if $i0 != 0 goto label04;

        $r24 = new java.lang.IllegalArgumentException;

        $r23 = new java.lang.StringBuffer;

        specialinvoke $r23.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("default namespace cannot have prefix");

        $r11 = specialinvoke r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String getLocation()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r24.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r24;

     label04:
        $i1 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int namespaceEnd>;

        i4 = $i1 - 1;

     label05:
        if i4 < 0 goto label11;

        $r2 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] namespaceUri>;

        $r3 = $r2[i4];

        if r20 != $r3 goto label10;

        $r4 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] namespacePrefix>;

        r5 = $r4[i4];

        if z3 == 0 goto label06;

        $i3 = virtualinvoke r5.<java.lang.String: int length()>();

        if $i3 != 0 goto label06;

        goto label10;

     label06:
        $i2 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int namespaceEnd>;

        i5 = $i2 - 1;

     label07:
        if i5 <= i4 goto label09;

        $r6 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] namespacePrefix>;

        $r7 = $r6[i5];

        if r5 != $r7 goto label08;

     label08:
        $i7 = (int) -1;

        i5 = i5 + $i7;

        goto label07;

     label09:
        return r5;

     label10:
        $i9 = (int) -1;

        i4 = i4 + $i9;

        goto label05;

     label11:
        if z2 != 0 goto label12;

        return null;

     label12:
        $r1 = specialinvoke r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String generatePrefix(java.lang.String)>(r20);

        return $r1;
    }

    private java.lang.String generatePrefix(java.lang.String)
    {
        java.lang.String[] $r1, $r7, $r8, $r10, $r11, $r13;
        org.xmlpull.mxp1_serializer.MXSerializer r0;
        java.lang.StringBuffer $r3, $r4, $r15;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, $i15;
        java.lang.String $r5, r6, r9, $r12, $r14;

        r0 := @this: org.xmlpull.mxp1_serializer.MXSerializer;

        r9 := @parameter0: java.lang.String;

        $i0 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int autoDeclaredPrefixes>;

        $i1 = $i0 + 1;

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: int autoDeclaredPrefixes> = $i1;

        $i3 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int autoDeclaredPrefixes>;

        $r1 = <org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] precomputedPrefixes>;

        $i2 = lengthof $r1;

        if $i3 >= $i2 goto label1;

        $r13 = <org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] precomputedPrefixes>;

        $i12 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int autoDeclaredPrefixes>;

        $r14 = $r13[$i12];

        goto label2;

     label1:
        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("n");

        $i4 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int autoDeclaredPrefixes>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i4);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $r14 = virtualinvoke $r5.<java.lang.String: java.lang.String intern()>();

     label2:
        r6 = $r14;

        $i5 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int namespaceEnd>;

        i13 = $i5 - 1;

     label3:
        if i13 < 0 goto label5;

        $r11 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] namespacePrefix>;

        $r12 = $r11[i13];

        if r6 != $r12 goto label4;

     label4:
        $i15 = (int) -1;

        i13 = i13 + $i15;

        goto label3;

     label5:
        $i7 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int namespaceEnd>;

        $r7 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] namespacePrefix>;

        $i6 = lengthof $r7;

        if $i7 < $i6 goto label6;

        virtualinvoke r0.<org.xmlpull.mxp1_serializer.MXSerializer: void ensureNamespacesCapacity()>();

     label6:
        $r8 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] namespacePrefix>;

        $i8 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int namespaceEnd>;

        $r8[$i8] = r6;

        $r10 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] namespaceUri>;

        $i9 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int namespaceEnd>;

        $r10[$i9] = r9;

        $i10 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int namespaceEnd>;

        $i11 = $i10 + 1;

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: int namespaceEnd> = $i11;

        return r6;
    }

    public int getDepth()
    {
        int $i0;
        org.xmlpull.mxp1_serializer.MXSerializer r0;

        r0 := @this: org.xmlpull.mxp1_serializer.MXSerializer;

        $i0 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int depth>;

        return $i0;
    }

    public java.lang.String getNamespace()
    {
        int $i0;
        java.lang.String[] $r1;
        java.lang.String $r2;
        org.xmlpull.mxp1_serializer.MXSerializer r0;

        r0 := @this: org.xmlpull.mxp1_serializer.MXSerializer;

        $r1 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] elNamespace>;

        $i0 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int depth>;

        $r2 = $r1[$i0];

        return $r2;
    }

    public java.lang.String getName()
    {
        int $i0;
        java.lang.String[] $r1;
        java.lang.String $r2;
        org.xmlpull.mxp1_serializer.MXSerializer r0;

        r0 := @this: org.xmlpull.mxp1_serializer.MXSerializer;

        $r1 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] elName>;

        $i0 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int depth>;

        $r2 = $r1[$i0];

        return $r2;
    }

    public org.xmlpull.v1.XmlSerializer startTag(java.lang.String, java.lang.String) throws java.io.IOException
    {
        org.xmlpull.mxp1_serializer.MXSerializer r0;
        java.lang.StringBuffer $r13, $r14, $r15, $r17, $r42;
        java.lang.String r1, r3, $r9, $r16, $r18, r28, $r30, $r31, $r34, $r35, r36, r37, r38;
        java.lang.IllegalStateException $r41, $r43;
        int[] $r23, $r26;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        java.io.Writer $r5, $r6, $r21, $r22, $r40;
        java.lang.String[] $r2, $r4, $r7, $r8, $r10, $r19, $r20, $r24, $r25, $r27, $r29, $r33, $r39;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, i30, i31, $i32, $i34, $i36;

        r0 := @this: org.xmlpull.mxp1_serializer.MXSerializer;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $z0 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean startTagIncomplete>;

        if $z0 == 0 goto label01;

        virtualinvoke r0.<org.xmlpull.mxp1_serializer.MXSerializer: void closeStartTag()>();

     label01:
        r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean seenBracketBracket> = 0;

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean seenBracket> = 0;

        $i0 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int depth>;

        $i1 = $i0 + 1;

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: int depth> = $i1;

        $z1 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean doIndent>;

        if $z1 == 0 goto label02;

        $i26 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int depth>;

        if $i26 <= 0 goto label02;

        $z9 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean seenTag>;

        if $z9 == 0 goto label02;

        virtualinvoke r0.<org.xmlpull.mxp1_serializer.MXSerializer: void writeIndent()>();

     label02:
        r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean seenTag> = 1;

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean setPrefixCalled> = 0;

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean startTagIncomplete> = 1;

        $i27 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int depth>;

        $i28 = $i27 + 1;

        $r33 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] elName>;

        $i29 = lengthof $r33;

        if $i28 < $i29 goto label03;

        virtualinvoke r0.<org.xmlpull.mxp1_serializer.MXSerializer: void ensureElementsCapacity()>();

     label03:
        $z2 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean checkNamesInterned>;

        if $z2 == 0 goto label04;

        $z8 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean namesInterned>;

        if $z8 == 0 goto label04;

        specialinvoke r0.<org.xmlpull.mxp1_serializer.MXSerializer: void checkInterning(java.lang.String)>(r1);

     label04:
        $r2 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] elNamespace>;

        $i2 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int depth>;

        $z10 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean namesInterned>;

        if $z10 != 0 goto label05;

        if r1 != null goto label06;

     label05:
        $r34 = r1;

        goto label07;

     label06:
        $r34 = virtualinvoke r1.<java.lang.String: java.lang.String intern()>();

     label07:
        $r2[$i2] = $r34;

        $z3 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean checkNamesInterned>;

        if $z3 == 0 goto label08;

        $z7 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean namesInterned>;

        if $z7 == 0 goto label08;

        specialinvoke r0.<org.xmlpull.mxp1_serializer.MXSerializer: void checkInterning(java.lang.String)>(r3);

     label08:
        $r4 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] elName>;

        $i3 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int depth>;

        $z11 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean namesInterned>;

        if $z11 != 0 goto label09;

        if r3 != null goto label10;

     label09:
        $r35 = r3;

        goto label11;

     label10:
        $r35 = virtualinvoke r3.<java.lang.String: java.lang.String intern()>();

     label11:
        $r4[$i3] = $r35;

        $r5 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.io.Writer out>;

        if $r5 != null goto label12;

        $r41 = new java.lang.IllegalStateException;

        specialinvoke $r41.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setOutput() must called set before serialization can start");

        throw $r41;

     label12:
        $r6 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.io.Writer out>;

        virtualinvoke $r6.<java.io.Writer: void write(int)>(60);

        if r1 == null goto label27;

        $i5 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i5 <= 0 goto label22;

        r36 = null;

        $i8 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int depth>;

        if $i8 <= 0 goto label18;

        $i15 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int namespaceEnd>;

        $r23 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int[] elNamespaceCount>;

        $i12 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int depth>;

        $i13 = $i12 - 1;

        $i14 = $r23[$i13];

        $i16 = $i15 - $i14;

        if $i16 != 1 goto label18;

        $r24 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] namespaceUri>;

        $i17 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int namespaceEnd>;

        $i18 = $i17 - 1;

        r37 = $r24[$i18];

        if r37 == r1 goto label13;

        $z6 = virtualinvoke r37.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z6 == 0 goto label18;

     label13:
        $r25 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] namespacePrefix>;

        $i19 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int namespaceEnd>;

        $i20 = $i19 - 1;

        $r31 = $r25[$i20];

        $r26 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int[] elNamespaceCount>;

        $i21 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int depth>;

        $i22 = $i21 - 1;

        $i23 = $r26[$i22];

        i30 = $i23 - 1;

     label14:
        if i30 < 2 goto label18;

        $r27 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] namespacePrefix>;

        r28 = $r27[i30];

        if r28 == $r31 goto label15;

        $z5 = virtualinvoke r28.<java.lang.String: boolean equals(java.lang.Object)>($r31);

        if $z5 == 0 goto label17;

     label15:
        $r29 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] namespaceUri>;

        $r30 = $r29[i30];

        if $r30 == r37 goto label16;

        $z4 = virtualinvoke $r30.<java.lang.String: boolean equals(java.lang.Object)>(r37);

        if $z4 == 0 goto label18;

     label16:
        $i24 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int namespaceEnd>;

        $i25 = $i24 - 1;

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: int namespaceEnd> = $i25;

        r36 = $r31;

        goto label18;

     label17:
        $i34 = (int) -1;

        i30 = i30 + $i34;

        goto label14;

     label18:
        if r36 != null goto label19;

        r36 = virtualinvoke r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String lookupOrDeclarePrefix(java.lang.String)>(r1);

     label19:
        $i9 = virtualinvoke r36.<java.lang.String: int length()>();

        if $i9 <= 0 goto label20;

        $r20 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] elPrefix>;

        $i11 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int depth>;

        $r20[$i11] = r36;

        $r21 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.io.Writer out>;

        virtualinvoke $r21.<java.io.Writer: void write(java.lang.String)>(r36);

        $r22 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.io.Writer out>;

        virtualinvoke $r22.<java.io.Writer: void write(int)>(58);

        goto label21;

     label20:
        $r19 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] elPrefix>;

        $i10 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int depth>;

        $r19[$i10] = "";

     label21:
        goto label28;

     label22:
        $i6 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int namespaceEnd>;

        i31 = $i6 - 1;

     label23:
        if i31 < 0 goto label26;

        $r8 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] namespacePrefix>;

        $r9 = $r8[i31];

        if $r9 != "" goto label25;

        $r10 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] namespaceUri>;

        r38 = $r10[i31];

        if r38 != null goto label24;

        virtualinvoke r0.<org.xmlpull.mxp1_serializer.MXSerializer: void setPrefix(java.lang.String,java.lang.String)>("", "");

        goto label26;

     label24:
        $i7 = virtualinvoke r38.<java.lang.String: int length()>();

        if $i7 <= 0 goto label26;

        $r43 = new java.lang.IllegalStateException;

        $r42 = new java.lang.StringBuffer;

        specialinvoke $r42.<java.lang.StringBuffer: void <init>()>();

        $r13 = virtualinvoke $r42.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("start tag can not be written in empty default namespace as default namespace is currently bound to \'");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r38);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r16 = specialinvoke r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String getLocation()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r43.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r18);

        throw $r43;

     label25:
        $i36 = (int) -1;

        i31 = i31 + $i36;

        goto label23;

     label26:
        $r39 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] elPrefix>;

        $i32 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int depth>;

        $r39[$i32] = "";

        goto label28;

     label27:
        $r7 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] elPrefix>;

        $i4 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int depth>;

        $r7[$i4] = "";

     label28:
        $r40 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.io.Writer out>;

        virtualinvoke $r40.<java.io.Writer: void write(java.lang.String)>(r3);

        return r0;
    }

    public org.xmlpull.v1.XmlSerializer attribute(java.lang.String, java.lang.String, java.lang.String) throws java.io.IOException
    {
        org.xmlpull.mxp1_serializer.MXSerializer r0;
        byte $b1, $b2;
        java.lang.StringBuffer $r10, $r11, $r13;
        int $i0;
        java.lang.String r2, r4, $r12, $r14, r15, $r16, r17;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.IllegalArgumentException $r9;
        java.io.Writer $r1, $r3, $r5, $r6, $r7, $r8, $r18, $r19;

        r0 := @this: org.xmlpull.mxp1_serializer.MXSerializer;

        r15 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        $z0 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean startTagIncomplete>;

        if $z0 != 0 goto label1;

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("startTag() must be called before attribute()");

        $r12 = specialinvoke r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String getLocation()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        throw $r9;

     label1:
        $r1 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.io.Writer out>;

        virtualinvoke $r1.<java.io.Writer: void write(int)>(32);

        if r15 == null goto label5;

        $i0 = virtualinvoke r15.<java.lang.String: int length()>();

        if $i0 <= 0 goto label5;

        $z2 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean namesInterned>;

        if $z2 != 0 goto label2;

        r15 = virtualinvoke r15.<java.lang.String: java.lang.String intern()>();

        goto label3;

     label2:
        $z3 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean checkNamesInterned>;

        if $z3 == 0 goto label3;

        specialinvoke r0.<org.xmlpull.mxp1_serializer.MXSerializer: void checkInterning(java.lang.String)>(r15);

     label3:
        $r16 = virtualinvoke r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String getPrefix(java.lang.String,boolean,boolean)>(r15, 0, 1);

        r17 = $r16;

        if $r16 != null goto label4;

        r17 = specialinvoke r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String generatePrefix(java.lang.String)>(r15);

     label4:
        $r7 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.io.Writer out>;

        virtualinvoke $r7.<java.io.Writer: void write(java.lang.String)>(r17);

        $r8 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.io.Writer out>;

        virtualinvoke $r8.<java.io.Writer: void write(int)>(58);

     label5:
        $r18 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.io.Writer out>;

        virtualinvoke $r18.<java.io.Writer: void write(java.lang.String)>(r2);

        $r19 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.io.Writer out>;

        virtualinvoke $r19.<java.io.Writer: void write(int)>(61);

        $r3 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.io.Writer out>;

        $z4 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean attributeUseApostrophe>;

        if $z4 == 0 goto label6;

        $b1 = 39;

        goto label7;

     label6:
        $b1 = 34;

     label7:
        virtualinvoke $r3.<java.io.Writer: void write(int)>($b1);

        $r5 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.io.Writer out>;

        virtualinvoke r0.<org.xmlpull.mxp1_serializer.MXSerializer: void writeAttributeValue(java.lang.String,java.io.Writer)>(r4, $r5);

        $r6 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.io.Writer out>;

        $z1 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean attributeUseApostrophe>;

        if $z1 == 0 goto label8;

        $b2 = 39;

        goto label9;

     label8:
        $b2 = 34;

     label9:
        virtualinvoke $r6.<java.io.Writer: void write(int)>($b2);

        return r0;
    }

    protected void closeStartTag() throws java.io.IOException
    {
        org.xmlpull.mxp1_serializer.MXSerializer r0;
        int[] $r2;
        java.lang.StringBuffer $r4, $r5, $r7, $r10, $r11, $r13, $r16, $r17, $r19;
        int $i0, $i1;
        java.lang.String $r6, $r8, $r12, $r14, $r18, $r20;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.IllegalArgumentException $r3, $r9, $r15;
        java.io.Writer $r1;

        r0 := @this: org.xmlpull.mxp1_serializer.MXSerializer;

        $z0 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean finished>;

        if $z0 == 0 goto label1;

        $r15 = new java.lang.IllegalArgumentException;

        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("trying to write past already finished output");

        $r18 = specialinvoke r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String getLocation()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r20);

        throw $r15;

     label1:
        $z1 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean seenBracket>;

        if $z1 == 0 goto label2;

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean seenBracketBracket> = 0;

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean seenBracket> = 0;

     label2:
        $z2 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean startTagIncomplete>;

        if $z2 != 0 goto label3;

        $z5 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean setPrefixCalled>;

        if $z5 == 0 goto label6;

     label3:
        $z3 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean setPrefixCalled>;

        if $z3 == 0 goto label4;

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("startTag() must be called immediately after setPrefix()");

        $r12 = specialinvoke r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String getLocation()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        throw $r9;

     label4:
        $z4 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean startTagIncomplete>;

        if $z4 != 0 goto label5;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("trying to close start tag that is not opened");

        $r6 = specialinvoke r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String getLocation()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r3;

     label5:
        specialinvoke r0.<org.xmlpull.mxp1_serializer.MXSerializer: void writeNamespaceDeclarations()>();

        $r1 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.io.Writer out>;

        virtualinvoke $r1.<java.io.Writer: void write(int)>(62);

        $r2 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int[] elNamespaceCount>;

        $i1 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int depth>;

        $i0 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int namespaceEnd>;

        $r2[$i1] = $i0;

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean startTagIncomplete> = 0;

     label6:
        return;
    }

    private void writeNamespaceDeclarations() throws java.io.IOException
    {
        java.lang.String[] $r4, $r9, $r13, $r16;
        org.xmlpull.mxp1_serializer.MXSerializer r0;
        byte $b5, $b6;
        int[] $r1;
        int $i0, $i1, $i2, $i3, i4;
        java.lang.String $r6, $r10, $r14, $r17;
        boolean $z0, $z1, $z2;
        java.io.Writer $r2, $r3, $r5, $r7, $r8, $r11, $r12, $r15;

        r0 := @this: org.xmlpull.mxp1_serializer.MXSerializer;

        $r1 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int[] elNamespaceCount>;

        $i0 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int depth>;

        $i1 = $i0 - 1;

        i4 = $r1[$i1];

     label1:
        $i2 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int namespaceEnd>;

        if i4 >= $i2 goto label9;

        $z0 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean doIndent>;

        if $z0 == 0 goto label2;

        $r13 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] namespaceUri>;

        $r14 = $r13[i4];

        $i3 = virtualinvoke $r14.<java.lang.String: int length()>();

        if $i3 <= 40 goto label2;

        virtualinvoke r0.<org.xmlpull.mxp1_serializer.MXSerializer: void writeIndent()>();

        $r15 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.io.Writer out>;

        virtualinvoke $r15.<java.io.Writer: void write(java.lang.String)>(" ");

     label2:
        $r16 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] namespacePrefix>;

        $r17 = $r16[i4];

        if $r17 == "" goto label3;

        $r8 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.io.Writer out>;

        virtualinvoke $r8.<java.io.Writer: void write(java.lang.String)>(" xmlns:");

        $r11 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.io.Writer out>;

        $r9 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] namespacePrefix>;

        $r10 = $r9[i4];

        virtualinvoke $r11.<java.io.Writer: void write(java.lang.String)>($r10);

        $r12 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.io.Writer out>;

        virtualinvoke $r12.<java.io.Writer: void write(int)>(61);

        goto label4;

     label3:
        $r2 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.io.Writer out>;

        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>(" xmlns=");

     label4:
        $r3 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.io.Writer out>;

        $z1 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean attributeUseApostrophe>;

        if $z1 == 0 goto label5;

        $b5 = 39;

        goto label6;

     label5:
        $b5 = 34;

     label6:
        virtualinvoke $r3.<java.io.Writer: void write(int)>($b5);

        $r4 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] namespaceUri>;

        $r6 = $r4[i4];

        $r5 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.io.Writer out>;

        virtualinvoke r0.<org.xmlpull.mxp1_serializer.MXSerializer: void writeAttributeValue(java.lang.String,java.io.Writer)>($r6, $r5);

        $r7 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.io.Writer out>;

        $z2 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean attributeUseApostrophe>;

        if $z2 == 0 goto label7;

        $b6 = 39;

        goto label8;

     label7:
        $b6 = 34;

     label8:
        virtualinvoke $r7.<java.io.Writer: void write(int)>($b6);

        i4 = i4 + 1;

        goto label1;

     label9:
        return;
    }

    public org.xmlpull.v1.XmlSerializer endTag(java.lang.String, java.lang.String) throws java.io.IOException
    {
        org.xmlpull.mxp1_serializer.MXSerializer r0;
        java.lang.StringBuffer $r8, $r9, $r13, $r14, $r16, $r18, $r21, $r22, $r24, $r27, $r28, $r32, $r33, $r35, $r37;
        java.lang.String r1, $r11, $r12, $r15, $r17, $r19, $r23, $r25, $r30, $r31, $r34, $r36, $r38, r39, $r41, $r43, $r46;
        int[] $r47;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        java.io.Writer $r2, $r3, $r4, $r5, $r6, $r44;
        java.lang.String[] $r10, $r29, $r40, $r42, $r45;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        java.lang.IllegalArgumentException $r7, $r20, $r26;

        r0 := @this: org.xmlpull.mxp1_serializer.MXSerializer;

        r39 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean seenBracketBracket> = 0;

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean seenBracket> = 0;

        if r39 == null goto label02;

        $z7 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean namesInterned>;

        if $z7 != 0 goto label01;

        r39 = virtualinvoke r39.<java.lang.String: java.lang.String intern()>();

        goto label02;

     label01:
        $z8 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean checkNamesInterned>;

        if $z8 == 0 goto label02;

        specialinvoke r0.<org.xmlpull.mxp1_serializer.MXSerializer: void checkInterning(java.lang.String)>(r39);

     label02:
        $r40 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] elNamespace>;

        $i6 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int depth>;

        $r41 = $r40[$i6];

        if r39 == $r41 goto label03;

        $r26 = new java.lang.IllegalArgumentException;

        $r27 = new java.lang.StringBuffer;

        specialinvoke $r27.<java.lang.StringBuffer: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("expected namespace ");

        $r29 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] elNamespace>;

        $i5 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int depth>;

        $r30 = $r29[$i5];

        $r31 = staticinvoke <org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String printable(java.lang.String)>($r30);

        $r32 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" and not ");

        $r34 = staticinvoke <org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String printable(java.lang.String)>(r39);

        $r35 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r34);

        $r36 = specialinvoke r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String getLocation()>();

        $r37 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r36);

        $r38 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r26.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r38);

        throw $r26;

     label03:
        if r1 != null goto label04;

        $r20 = new java.lang.IllegalArgumentException;

        $r21 = new java.lang.StringBuffer;

        specialinvoke $r21.<java.lang.StringBuffer: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("end tag name can not be null");

        $r23 = specialinvoke r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String getLocation()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r20.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r25);

        throw $r20;

     label04:
        $z0 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean checkNamesInterned>;

        if $z0 == 0 goto label05;

        $z6 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean namesInterned>;

        if $z6 == 0 goto label05;

        specialinvoke r0.<org.xmlpull.mxp1_serializer.MXSerializer: void checkInterning(java.lang.String)>(r1);

     label05:
        $r42 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] elName>;

        $i7 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int depth>;

        $r43 = $r42[$i7];

        $z9 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean namesInterned>;

        if $z9 != 0 goto label06;

        $z5 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r43);

        if $z5 == 0 goto label07;

     label06:
        $z1 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean namesInterned>;

        if $z1 == 0 goto label08;

        if r1 == $r43 goto label08;

     label07:
        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("expected element name ");

        $r10 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] elName>;

        $i4 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int depth>;

        $r11 = $r10[$i4];

        $r12 = staticinvoke <org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String printable(java.lang.String)>($r11);

        $r13 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" and not ");

        $r15 = staticinvoke <org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String printable(java.lang.String)>(r1);

        $r16 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        $r17 = specialinvoke r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String getLocation()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r19);

        throw $r7;

     label08:
        $z2 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean startTagIncomplete>;

        if $z2 == 0 goto label09;

        specialinvoke r0.<org.xmlpull.mxp1_serializer.MXSerializer: void writeNamespaceDeclarations()>();

        $r6 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.io.Writer out>;

        virtualinvoke $r6.<java.io.Writer: void write(java.lang.String)>(" />");

        $i2 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int depth>;

        $i3 = $i2 - 1;

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: int depth> = $i3;

        goto label12;

     label09:
        $z3 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean doIndent>;

        if $z3 == 0 goto label10;

        $z4 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean seenTag>;

        if $z4 == 0 goto label10;

        virtualinvoke r0.<org.xmlpull.mxp1_serializer.MXSerializer: void writeIndent()>();

     label10:
        $r44 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.io.Writer out>;

        virtualinvoke $r44.<java.io.Writer: void write(java.lang.String)>("</");

        $r45 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] elPrefix>;

        $i8 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int depth>;

        $r46 = $r45[$i8];

        $i9 = virtualinvoke $r46.<java.lang.String: int length()>();

        if $i9 <= 0 goto label11;

        $r4 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.io.Writer out>;

        virtualinvoke $r4.<java.io.Writer: void write(java.lang.String)>($r46);

        $r5 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.io.Writer out>;

        virtualinvoke $r5.<java.io.Writer: void write(int)>(58);

     label11:
        $r2 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.io.Writer out>;

        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>(r1);

        $r3 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.io.Writer out>;

        virtualinvoke $r3.<java.io.Writer: void write(int)>(62);

        $i0 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int depth>;

        $i1 = $i0 - 1;

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: int depth> = $i1;

     label12:
        $r47 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int[] elNamespaceCount>;

        $i10 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: int depth>;

        $i11 = $r47[$i10];

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: int namespaceEnd> = $i11;

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean startTagIncomplete> = 0;

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean seenTag> = 1;

        return r0;
    }

    public org.xmlpull.v1.XmlSerializer text(java.lang.String) throws java.io.IOException
    {
        java.io.Writer $r2;
        java.lang.String r1;
        org.xmlpull.mxp1_serializer.MXSerializer r0;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.xmlpull.mxp1_serializer.MXSerializer;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean startTagIncomplete>;

        if $z0 != 0 goto label1;

        $z2 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean setPrefixCalled>;

        if $z2 == 0 goto label2;

     label1:
        virtualinvoke r0.<org.xmlpull.mxp1_serializer.MXSerializer: void closeStartTag()>();

     label2:
        $z3 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean doIndent>;

        if $z3 == 0 goto label3;

        $z1 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean seenTag>;

        if $z1 == 0 goto label3;

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean seenTag> = 0;

     label3:
        $r2 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.io.Writer out>;

        virtualinvoke r0.<org.xmlpull.mxp1_serializer.MXSerializer: void writeElementContent(java.lang.String,java.io.Writer)>(r1, $r2);

        return r0;
    }

    public org.xmlpull.v1.XmlSerializer text(char[], int, int) throws java.io.IOException
    {
        org.xmlpull.mxp1_serializer.MXSerializer r0;
        int i0, i1;
        java.io.Writer $r2;
        char[] r1;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.xmlpull.mxp1_serializer.MXSerializer;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean startTagIncomplete>;

        if $z0 != 0 goto label1;

        $z2 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean setPrefixCalled>;

        if $z2 == 0 goto label2;

     label1:
        virtualinvoke r0.<org.xmlpull.mxp1_serializer.MXSerializer: void closeStartTag()>();

     label2:
        $z3 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean doIndent>;

        if $z3 == 0 goto label3;

        $z1 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean seenTag>;

        if $z1 == 0 goto label3;

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean seenTag> = 0;

     label3:
        $r2 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.io.Writer out>;

        virtualinvoke r0.<org.xmlpull.mxp1_serializer.MXSerializer: void writeElementContent(char[],int,int,java.io.Writer)>(r1, i0, i1, $r2);

        return r0;
    }

    public void cdsect(java.lang.String) throws java.io.IOException
    {
        org.xmlpull.mxp1_serializer.MXSerializer r0;
        java.io.Writer $r2, $r3, $r4;
        java.lang.String r1;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: org.xmlpull.mxp1_serializer.MXSerializer;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean startTagIncomplete>;

        if $z0 != 0 goto label1;

        $z2 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean setPrefixCalled>;

        if $z2 != 0 goto label1;

        $z3 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean seenBracket>;

        if $z3 == 0 goto label2;

     label1:
        virtualinvoke r0.<org.xmlpull.mxp1_serializer.MXSerializer: void closeStartTag()>();

     label2:
        $z4 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean doIndent>;

        if $z4 == 0 goto label3;

        $z1 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean seenTag>;

        if $z1 == 0 goto label3;

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean seenTag> = 0;

     label3:
        $r2 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.io.Writer out>;

        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>("<![CDATA[");

        $r3 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.io.Writer out>;

        virtualinvoke $r3.<java.io.Writer: void write(java.lang.String)>(r1);

        $r4 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.io.Writer out>;

        virtualinvoke $r4.<java.io.Writer: void write(java.lang.String)>("]]>");

        return;
    }

    public void entityRef(java.lang.String) throws java.io.IOException
    {
        org.xmlpull.mxp1_serializer.MXSerializer r0;
        java.io.Writer $r2, $r3, $r4;
        java.lang.String r1;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: org.xmlpull.mxp1_serializer.MXSerializer;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean startTagIncomplete>;

        if $z0 != 0 goto label1;

        $z2 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean setPrefixCalled>;

        if $z2 != 0 goto label1;

        $z3 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean seenBracket>;

        if $z3 == 0 goto label2;

     label1:
        virtualinvoke r0.<org.xmlpull.mxp1_serializer.MXSerializer: void closeStartTag()>();

     label2:
        $z4 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean doIndent>;

        if $z4 == 0 goto label3;

        $z1 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean seenTag>;

        if $z1 == 0 goto label3;

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean seenTag> = 0;

     label3:
        $r2 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.io.Writer out>;

        virtualinvoke $r2.<java.io.Writer: void write(int)>(38);

        $r3 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.io.Writer out>;

        virtualinvoke $r3.<java.io.Writer: void write(java.lang.String)>(r1);

        $r4 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.io.Writer out>;

        virtualinvoke $r4.<java.io.Writer: void write(int)>(59);

        return;
    }

    public void processingInstruction(java.lang.String) throws java.io.IOException
    {
        org.xmlpull.mxp1_serializer.MXSerializer r0;
        java.io.Writer $r2, $r3, $r4;
        java.lang.String r1;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: org.xmlpull.mxp1_serializer.MXSerializer;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean startTagIncomplete>;

        if $z0 != 0 goto label1;

        $z2 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean setPrefixCalled>;

        if $z2 != 0 goto label1;

        $z3 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean seenBracket>;

        if $z3 == 0 goto label2;

     label1:
        virtualinvoke r0.<org.xmlpull.mxp1_serializer.MXSerializer: void closeStartTag()>();

     label2:
        $z4 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean doIndent>;

        if $z4 == 0 goto label3;

        $z1 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean seenTag>;

        if $z1 == 0 goto label3;

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean seenTag> = 0;

     label3:
        $r2 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.io.Writer out>;

        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>("<?");

        $r3 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.io.Writer out>;

        virtualinvoke $r3.<java.io.Writer: void write(java.lang.String)>(r1);

        $r4 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.io.Writer out>;

        virtualinvoke $r4.<java.io.Writer: void write(java.lang.String)>("?>");

        return;
    }

    public void comment(java.lang.String) throws java.io.IOException
    {
        org.xmlpull.mxp1_serializer.MXSerializer r0;
        java.io.Writer $r2, $r3, $r4;
        java.lang.String r1;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: org.xmlpull.mxp1_serializer.MXSerializer;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean startTagIncomplete>;

        if $z0 != 0 goto label1;

        $z2 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean setPrefixCalled>;

        if $z2 != 0 goto label1;

        $z3 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean seenBracket>;

        if $z3 == 0 goto label2;

     label1:
        virtualinvoke r0.<org.xmlpull.mxp1_serializer.MXSerializer: void closeStartTag()>();

     label2:
        $z4 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean doIndent>;

        if $z4 == 0 goto label3;

        $z1 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean seenTag>;

        if $z1 == 0 goto label3;

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean seenTag> = 0;

     label3:
        $r2 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.io.Writer out>;

        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>("<!--");

        $r3 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.io.Writer out>;

        virtualinvoke $r3.<java.io.Writer: void write(java.lang.String)>(r1);

        $r4 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.io.Writer out>;

        virtualinvoke $r4.<java.io.Writer: void write(java.lang.String)>("-->");

        return;
    }

    public void docdecl(java.lang.String) throws java.io.IOException
    {
        org.xmlpull.mxp1_serializer.MXSerializer r0;
        java.io.Writer $r2, $r3, $r4;
        java.lang.String r1;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: org.xmlpull.mxp1_serializer.MXSerializer;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean startTagIncomplete>;

        if $z0 != 0 goto label1;

        $z2 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean setPrefixCalled>;

        if $z2 != 0 goto label1;

        $z3 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean seenBracket>;

        if $z3 == 0 goto label2;

     label1:
        virtualinvoke r0.<org.xmlpull.mxp1_serializer.MXSerializer: void closeStartTag()>();

     label2:
        $z4 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean doIndent>;

        if $z4 == 0 goto label3;

        $z1 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean seenTag>;

        if $z1 == 0 goto label3;

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean seenTag> = 0;

     label3:
        $r2 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.io.Writer out>;

        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>("<!DOCTYPE");

        $r3 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.io.Writer out>;

        virtualinvoke $r3.<java.io.Writer: void write(java.lang.String)>(r1);

        $r4 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.io.Writer out>;

        virtualinvoke $r4.<java.io.Writer: void write(java.lang.String)>(">");

        return;
    }

    public void ignorableWhitespace(java.lang.String) throws java.io.IOException
    {
        java.lang.IllegalArgumentException $r3;
        org.xmlpull.mxp1_serializer.MXSerializer r0;
        java.lang.StringBuffer $r4, $r5, $r7;
        java.io.Writer $r2;
        int $i0;
        java.lang.String r1, $r6, $r8;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: org.xmlpull.mxp1_serializer.MXSerializer;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean startTagIncomplete>;

        if $z0 != 0 goto label1;

        $z2 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean setPrefixCalled>;

        if $z2 != 0 goto label1;

        $z3 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean seenBracket>;

        if $z3 == 0 goto label2;

     label1:
        virtualinvoke r0.<org.xmlpull.mxp1_serializer.MXSerializer: void closeStartTag()>();

     label2:
        $z4 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean doIndent>;

        if $z4 == 0 goto label3;

        $z1 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean seenTag>;

        if $z1 == 0 goto label3;

        r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean seenTag> = 0;

     label3:
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label4;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("empty string is not allowed for ignorable whitespace");

        $r6 = specialinvoke r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String getLocation()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r3;

     label4:
        $r2 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.io.Writer out>;

        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>(r1);

        return;
    }

    public void flush() throws java.io.IOException
    {
        java.io.Writer $r1;
        org.xmlpull.mxp1_serializer.MXSerializer r0;
        boolean $z0, $z1;

        r0 := @this: org.xmlpull.mxp1_serializer.MXSerializer;

        $z0 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean finished>;

        if $z0 != 0 goto label1;

        $z1 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean startTagIncomplete>;

        if $z1 == 0 goto label1;

        virtualinvoke r0.<org.xmlpull.mxp1_serializer.MXSerializer: void closeStartTag()>();

     label1:
        $r1 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.io.Writer out>;

        virtualinvoke $r1.<java.io.Writer: void flush()>();

        return;
    }

    protected void writeAttributeValue(java.lang.String, java.io.Writer) throws java.io.IOException
    {
        java.lang.IllegalStateException $r28;
        byte b0, $b2;
        boolean $z0, $z1;
        java.io.Writer r3;
        org.xmlpull.mxp1_serializer.MXSerializer r0;
        java.lang.StringBuffer $r9, $r11, $r12, $r14, $r15, $r17, $r18, $r20, $r21, $r27;
        int i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        java.lang.String r1, r2, $r4, $r5, $r6, $r10, $r13, $r16, $r19, $r22, $r23, $r24, $r25, $r26;
        char $c1;

        r0 := @this: org.xmlpull.mxp1_serializer.MXSerializer;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.io.Writer;

        $z0 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean attributeUseApostrophe>;

        if $z0 == 0 goto label01;

        $b2 = 39;

        goto label02;

     label01:
        $b2 = 34;

     label02:
        b0 = $b2;

        $z1 = r0.<org.xmlpull.mxp1_serializer.MXSerializer: boolean attributeUseApostrophe>;

        if $z1 == 0 goto label03;

        $r26 = "&apos;";

        goto label04;

     label03:
        $r26 = "&quot;";

     label04:
        r1 = $r26;

        i3 = 0;

        i4 = 0;

     label05:
        $i5 = virtualinvoke r2.<java.lang.String: int length()>();

        if i4 >= $i5 goto label16;

        $c1 = virtualinvoke r2.<java.lang.String: char charAt(int)>(i4);

        $i6 = (int) $c1;

        if $i6 != 38 goto label07;

        if i4 <= i3 goto label06;

        $r25 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(i3, i4);

        virtualinvoke r3.<java.io.Writer: void write(java.lang.String)>($r25);

     label06:
        virtualinvoke r3.<java.io.Writer: void write(java.lang.String)>("&amp;");

        i3 = i4 + 1;

     label07:
        $i7 = (int) $c1;

        if $i7 != 60 goto label09;

        if i4 <= i3 goto label08;

        $r24 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(i3, i4);

        virtualinvoke r3.<java.io.Writer: void write(java.lang.String)>($r24);

     label08:
        virtualinvoke r3.<java.io.Writer: void write(java.lang.String)>("&lt;");

        i3 = i4 + 1;

        goto label15;

     label09:
        $i8 = (int) $c1;

        if $i8 != b0 goto label11;

        if i4 <= i3 goto label10;

        $r23 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(i3, i4);

        virtualinvoke r3.<java.io.Writer: void write(java.lang.String)>($r23);

     label10:
        virtualinvoke r3.<java.io.Writer: void write(java.lang.String)>(r1);

        i3 = i4 + 1;

        goto label15;

     label11:
        $i9 = (int) $c1;

        if $i9 >= 32 goto label15;

        $i10 = (int) $c1;

        if $i10 == 13 goto label12;

        $i11 = (int) $c1;

        if $i11 == 10 goto label12;

        $i12 = (int) $c1;

        if $i12 != 9 goto label14;

     label12:
        if i4 <= i3 goto label13;

        $r6 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(i3, i4);

        virtualinvoke r3.<java.io.Writer: void write(java.lang.String)>($r6);

     label13:
        virtualinvoke r3.<java.io.Writer: void write(java.lang.String)>("&#");

        $i13 = (int) $c1;

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i13);

        virtualinvoke r3.<java.io.Writer: void write(java.lang.String)>($r5);

        virtualinvoke r3.<java.io.Writer: void write(int)>(59);

        i3 = i4 + 1;

        goto label15;

     label14:
        $r28 = new java.lang.IllegalStateException;

        $r27 = new java.lang.StringBuffer;

        specialinvoke $r27.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("character ");

        $r10 = staticinvoke <org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String printable(char)>($c1);

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" (");

        $i14 = (int) $c1;

        $r13 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i14);

        $r14 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") is not allowed in output");

        $r16 = specialinvoke r0.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String getLocation()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" (attr value=");

        $r19 = staticinvoke <org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String printable(java.lang.String)>(r2);

        $r20 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r28.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r22);

        throw $r28;

     label15:
        i4 = i4 + 1;

        goto label05;

     label16:
        if i3 <= 0 goto label17;

        $r4 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>(i3);

        virtualinvoke r3.<java.io.Writer: void write(java.lang.String)>($r4);

        goto label18;

     label17:
        virtualinvoke r3.<java.io.Writer: void write(java.lang.String)>(r2);

     label18:
        return;
    }

    protected void writeElementContent(java.lang.String, java.io.Writer) throws java.io.IOException
    {
        java.lang.IllegalStateException $r21;
        boolean $z0, $z1, $z2;
        java.io.Writer r1;
        org.xmlpull.mxp1_serializer.MXSerializer r3;
        java.lang.StringBuffer $r6, $r8, $r9, $r11, $r12, $r14, $r15, $r20;
        int $i0, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        java.lang.String r0, $r2, $r7, $r10, $r13, $r16, $r17, $r18, $r19;
        char $c1;

        r3 := @this: org.xmlpull.mxp1_serializer.MXSerializer;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.io.Writer;

        i2 = 0;

        i3 = 0;

     label01:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i3 >= $i0 goto label13;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);

        $i4 = (int) $c1;

        if $i4 != 93 goto label03;

        $z1 = r3.<org.xmlpull.mxp1_serializer.MXSerializer: boolean seenBracket>;

        if $z1 == 0 goto label02;

        r3.<org.xmlpull.mxp1_serializer.MXSerializer: boolean seenBracketBracket> = 1;

        goto label12;

     label02:
        r3.<org.xmlpull.mxp1_serializer.MXSerializer: boolean seenBracket> = 1;

        goto label12;

     label03:
        $i5 = (int) $c1;

        if $i5 != 38 goto label05;

        if i3 <= i2 goto label04;

        $r19 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i2, i3);

        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>($r19);

     label04:
        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>("&amp;");

        i2 = i3 + 1;

        goto label11;

     label05:
        $i6 = (int) $c1;

        if $i6 != 60 goto label07;

        if i3 <= i2 goto label06;

        $r18 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i2, i3);

        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>($r18);

     label06:
        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>("&lt;");

        i2 = i3 + 1;

        goto label11;

     label07:
        $z0 = r3.<org.xmlpull.mxp1_serializer.MXSerializer: boolean seenBracketBracket>;

        if $z0 == 0 goto label09;

        $i7 = (int) $c1;

        if $i7 != 62 goto label09;

        if i3 <= i2 goto label08;

        $r17 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i2, i3);

        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>($r17);

     label08:
        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>("&gt;");

        i2 = i3 + 1;

        goto label11;

     label09:
        $i8 = (int) $c1;

        if $i8 >= 32 goto label11;

        $i9 = (int) $c1;

        if $i9 == 9 goto label11;

        $i10 = (int) $c1;

        if $i10 == 10 goto label11;

        $i11 = (int) $c1;

        if $i11 != 13 goto label10;

        goto label11;

     label10:
        $r21 = new java.lang.IllegalStateException;

        $r20 = new java.lang.StringBuffer;

        specialinvoke $r20.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("character ");

        $i12 = (int) $c1;

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i12);

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" is not allowed in output");

        $r10 = specialinvoke r3.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String getLocation()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" (text value=");

        $r13 = staticinvoke <org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String printable(java.lang.String)>(r0);

        $r14 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r21.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r16);

        throw $r21;

     label11:
        $z2 = r3.<org.xmlpull.mxp1_serializer.MXSerializer: boolean seenBracket>;

        if $z2 == 0 goto label12;

        r3.<org.xmlpull.mxp1_serializer.MXSerializer: boolean seenBracket> = 0;

        r3.<org.xmlpull.mxp1_serializer.MXSerializer: boolean seenBracketBracket> = 0;

     label12:
        i3 = i3 + 1;

        goto label01;

     label13:
        if i2 <= 0 goto label14;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(i2);

        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>($r2);

        goto label15;

     label14:
        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>(r0);

     label15:
        return;
    }

    protected void writeElementContent(char[], int, int, java.io.Writer) throws java.io.IOException
    {
        java.lang.IllegalStateException $r16;
        boolean $z0, $z1, $z2;
        java.io.Writer r0;
        org.xmlpull.mxp1_serializer.MXSerializer r2;
        java.lang.StringBuffer $r5, $r7, $r8, $r10, $r11, $r13, $r15;
        int i0, i1, i2, $i3, $i5, $i6, $i7, i8, i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        java.lang.String $r6, $r9, $r12, $r14;
        char c4;
        char[] r1;

        r2 := @this: org.xmlpull.mxp1_serializer.MXSerializer;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r0 := @parameter3: java.io.Writer;

        i2 = i0 + i1;

        i8 = i0;

        i9 = i0;

     label01:
        if i9 >= i2 goto label13;

        c4 = r1[i9];

        $i10 = (int) c4;

        if $i10 != 93 goto label03;

        $z1 = r2.<org.xmlpull.mxp1_serializer.MXSerializer: boolean seenBracket>;

        if $z1 == 0 goto label02;

        r2.<org.xmlpull.mxp1_serializer.MXSerializer: boolean seenBracketBracket> = 1;

        goto label12;

     label02:
        r2.<org.xmlpull.mxp1_serializer.MXSerializer: boolean seenBracket> = 1;

        goto label12;

     label03:
        $i11 = (int) c4;

        if $i11 != 38 goto label05;

        if i9 <= i8 goto label04;

        $i7 = i9 - i8;

        virtualinvoke r0.<java.io.Writer: void write(char[],int,int)>(r1, i8, $i7);

     label04:
        virtualinvoke r0.<java.io.Writer: void write(java.lang.String)>("&amp;");

        i8 = i9 + 1;

        goto label11;

     label05:
        $i12 = (int) c4;

        if $i12 != 60 goto label07;

        if i9 <= i8 goto label06;

        $i6 = i9 - i8;

        virtualinvoke r0.<java.io.Writer: void write(char[],int,int)>(r1, i8, $i6);

     label06:
        virtualinvoke r0.<java.io.Writer: void write(java.lang.String)>("&lt;");

        i8 = i9 + 1;

        goto label11;

     label07:
        $z0 = r2.<org.xmlpull.mxp1_serializer.MXSerializer: boolean seenBracketBracket>;

        if $z0 == 0 goto label09;

        $i13 = (int) c4;

        if $i13 != 62 goto label09;

        if i9 <= i8 goto label08;

        $i5 = i9 - i8;

        virtualinvoke r0.<java.io.Writer: void write(char[],int,int)>(r1, i8, $i5);

     label08:
        virtualinvoke r0.<java.io.Writer: void write(java.lang.String)>("&gt;");

        i8 = i9 + 1;

        goto label11;

     label09:
        $i14 = (int) c4;

        if $i14 >= 32 goto label11;

        $i15 = (int) c4;

        if $i15 == 9 goto label11;

        $i16 = (int) c4;

        if $i16 == 10 goto label11;

        $i17 = (int) c4;

        if $i17 != 13 goto label10;

        goto label11;

     label10:
        $r16 = new java.lang.IllegalStateException;

        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("character ");

        $r6 = staticinvoke <org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String printable(char)>(c4);

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" (");

        $i18 = (int) c4;

        $r9 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i18);

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") is not allowed in output");

        $r12 = specialinvoke r2.<org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String getLocation()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r14);

        throw $r16;

     label11:
        $z2 = r2.<org.xmlpull.mxp1_serializer.MXSerializer: boolean seenBracket>;

        if $z2 == 0 goto label12;

        r2.<org.xmlpull.mxp1_serializer.MXSerializer: boolean seenBracket> = 0;

        r2.<org.xmlpull.mxp1_serializer.MXSerializer: boolean seenBracketBracket> = 0;

     label12:
        i9 = i9 + 1;

        goto label01;

     label13:
        if i2 <= i8 goto label14;

        $i3 = i2 - i8;

        virtualinvoke r0.<java.io.Writer: void write(char[],int,int)>(r1, i8, $i3);

     label14:
        return;
    }

    protected static final java.lang.String printable(java.lang.String)
    {
        char $c3;
        java.lang.StringBuffer $r1;
        int $i0, $i1, $i2, i4;
        java.lang.String r0, $r2;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return "null";

     label1:
        $r1 = new java.lang.StringBuffer;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $i1 = $i0 + 16;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>(int)>($i1);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        i4 = 0;

     label2:
        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        if i4 >= $i2 goto label3;

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i4);

        staticinvoke <org.xmlpull.mxp1_serializer.MXSerializer: void addPrintable(java.lang.StringBuffer,char)>($r1, $c3);

        i4 = i4 + 1;

        goto label2;

     label3:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    protected static final java.lang.String printable(char)
    {
        char c0;
        java.lang.String $r1;
        java.lang.StringBuffer $r0;

        c0 := @parameter0: char;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        staticinvoke <org.xmlpull.mxp1_serializer.MXSerializer: void addPrintable(java.lang.StringBuffer,char)>($r0, c0);

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r1;
    }

    private static void addPrintable(java.lang.StringBuffer, char)
    {
        java.lang.StringBuffer r0, $r2, $r4, $r7, $r9, $r11, $r12;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String $r3, $r5, $r8, $r10;
        char c0;

        r0 := @parameter0: java.lang.StringBuffer;

        c0 := @parameter1: char;

        $i4 = (int) c0;

        lookupswitch($i4)
        {
            case 8: goto label01;
            case 9: goto label02;
            case 10: goto label03;
            case 12: goto label04;
            case 13: goto label05;
            case 34: goto label06;
            case 39: goto label07;
            case 92: goto label08;
            default: goto label09;
        };

     label01:
        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\b");

        goto label12;

     label02:
        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\t");

        goto label12;

     label03:
        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\n");

        goto label12;

     label04:
        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\f");

        goto label12;

     label05:
        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\r");

        goto label12;

     label06:
        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\\"");

        goto label12;

     label07:
        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\\'");

        goto label12;

     label08:
        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\\\");

        goto label12;

     label09:
        $i5 = (int) c0;

        if $i5 < 32 goto label10;

        $i6 = (int) c0;

        if $i6 <= 126 goto label11;

     label10:
        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("0000");

        $i7 = (int) c0;

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int,int)>($i7, 16);

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\u");

        $i1 = virtualinvoke $r5.<java.lang.String: int length()>();

        $i2 = $i1 - 4;

        $i3 = virtualinvoke $r5.<java.lang.String: int length()>();

        $r8 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int,int)>($i2, $i3);

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        goto label12;

     label11:
        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c0);

     label12:
        return;
    }

    static void <clinit>()
    {
        java.lang.Runtime $r0;
        long $l0;
        java.lang.String[] $r1, $r3, $r8;
        short $s2;
        byte $b1;
        java.lang.StringBuffer $r4, $r5, $r9;
        int i3, $i4, $i5;
        java.lang.String $r6, $r7;

        <org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String PROPERTY_LOCATION> = "http://xmlpull.org/v1/doc/properties.html#location";

        <org.xmlpull.mxp1_serializer.MXSerializer: boolean TRACE_ESCAPING> = 0;

        <org.xmlpull.mxp1_serializer.MXSerializer: boolean TRACE_SIZING> = 0;

        <org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String XMLNS_URI> = "http://www.w3.org/2000/xmlns/";

        <org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String XML_URI> = "http://www.w3.org/XML/1998/namespace";

        $r0 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        $l0 = virtualinvoke $r0.<java.lang.Runtime: long freeMemory()>();

        $b1 = $l0 cmp 1000000L;

        $i5 = (int) $b1;

        if $i5 <= 0 goto label1;

        $s2 = 8192;

        goto label2;

     label1:
        $s2 = 256;

     label2:
        <org.xmlpull.mxp1_serializer.MXSerializer: int BUF_LEN> = $s2;

        $r1 = newarray (java.lang.String)[32];

        <org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] precomputedPrefixes> = $r1;

        i3 = 0;

     label3:
        $r8 = <org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] precomputedPrefixes>;

        $i4 = lengthof $r8;

        if i3 >= $i4 goto label4;

        $r3 = <org.xmlpull.mxp1_serializer.MXSerializer: java.lang.String[] precomputedPrefixes>;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("n");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i3);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String intern()>();

        $r3[i3] = $r7;

        i3 = i3 + 1;

        goto label3;

     label4:
        return;
    }
}
