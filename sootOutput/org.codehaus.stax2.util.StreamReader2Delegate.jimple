public class org.codehaus.stax2.util.StreamReader2Delegate extends javax.xml.stream.util.StreamReaderDelegate implements org.codehaus.stax2.XMLStreamReader2
{
    protected org.codehaus.stax2.XMLStreamReader2 mDelegate2;

    public void <init>(org.codehaus.stax2.XMLStreamReader2)
    {
        org.codehaus.stax2.util.StreamReader2Delegate r0;
        org.codehaus.stax2.XMLStreamReader2 r1;

        r0 := @this: org.codehaus.stax2.util.StreamReader2Delegate;

        r1 := @parameter0: org.codehaus.stax2.XMLStreamReader2;

        specialinvoke r0.<javax.xml.stream.util.StreamReaderDelegate: void <init>(javax.xml.stream.XMLStreamReader)>(r1);

        r0.<org.codehaus.stax2.util.StreamReader2Delegate: org.codehaus.stax2.XMLStreamReader2 mDelegate2> = r1;

        return;
    }

    public void setParent(javax.xml.stream.XMLStreamReader)
    {
        org.codehaus.stax2.util.StreamReader2Delegate r0;
        javax.xml.stream.XMLStreamReader r1;
        org.codehaus.stax2.XMLStreamReader2 $r2;

        r0 := @this: org.codehaus.stax2.util.StreamReader2Delegate;

        r1 := @parameter0: javax.xml.stream.XMLStreamReader;

        specialinvoke r0.<javax.xml.stream.util.StreamReaderDelegate: void setParent(javax.xml.stream.XMLStreamReader)>(r1);

        $r2 = (org.codehaus.stax2.XMLStreamReader2) r1;

        r0.<org.codehaus.stax2.util.StreamReader2Delegate: org.codehaus.stax2.XMLStreamReader2 mDelegate2> = $r2;

        return;
    }

    public void closeCompletely() throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.util.StreamReader2Delegate r0;
        org.codehaus.stax2.XMLStreamReader2 $r1;

        r0 := @this: org.codehaus.stax2.util.StreamReader2Delegate;

        $r1 = r0.<org.codehaus.stax2.util.StreamReader2Delegate: org.codehaus.stax2.XMLStreamReader2 mDelegate2>;

        interfaceinvoke $r1.<org.codehaus.stax2.XMLStreamReader2: void closeCompletely()>();

        return;
    }

    public org.codehaus.stax2.AttributeInfo getAttributeInfo() throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.AttributeInfo $r2;
        org.codehaus.stax2.util.StreamReader2Delegate r0;
        org.codehaus.stax2.XMLStreamReader2 $r1;

        r0 := @this: org.codehaus.stax2.util.StreamReader2Delegate;

        $r1 = r0.<org.codehaus.stax2.util.StreamReader2Delegate: org.codehaus.stax2.XMLStreamReader2 mDelegate2>;

        $r2 = interfaceinvoke $r1.<org.codehaus.stax2.XMLStreamReader2: org.codehaus.stax2.AttributeInfo getAttributeInfo()>();

        return $r2;
    }

    public org.codehaus.stax2.DTDInfo getDTDInfo() throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.DTDInfo $r2;
        org.codehaus.stax2.util.StreamReader2Delegate r0;
        org.codehaus.stax2.XMLStreamReader2 $r1;

        r0 := @this: org.codehaus.stax2.util.StreamReader2Delegate;

        $r1 = r0.<org.codehaus.stax2.util.StreamReader2Delegate: org.codehaus.stax2.XMLStreamReader2 mDelegate2>;

        $r2 = interfaceinvoke $r1.<org.codehaus.stax2.XMLStreamReader2: org.codehaus.stax2.DTDInfo getDTDInfo()>();

        return $r2;
    }

    public int getDepth()
    {
        int $i0;
        org.codehaus.stax2.util.StreamReader2Delegate r0;
        org.codehaus.stax2.XMLStreamReader2 $r1;

        r0 := @this: org.codehaus.stax2.util.StreamReader2Delegate;

        $r1 = r0.<org.codehaus.stax2.util.StreamReader2Delegate: org.codehaus.stax2.XMLStreamReader2 mDelegate2>;

        $i0 = interfaceinvoke $r1.<org.codehaus.stax2.XMLStreamReader2: int getDepth()>();

        return $i0;
    }

    public java.lang.Object getFeature(java.lang.String)
    {
        org.codehaus.stax2.util.StreamReader2Delegate r0;
        org.codehaus.stax2.XMLStreamReader2 $r2;
        java.lang.Object $r3;
        java.lang.String r1;

        r0 := @this: org.codehaus.stax2.util.StreamReader2Delegate;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.codehaus.stax2.util.StreamReader2Delegate: org.codehaus.stax2.XMLStreamReader2 mDelegate2>;

        $r3 = interfaceinvoke $r2.<org.codehaus.stax2.XMLStreamReader2: java.lang.Object getFeature(java.lang.String)>(r1);

        return $r3;
    }

    public org.codehaus.stax2.LocationInfo getLocationInfo()
    {
        org.codehaus.stax2.LocationInfo $r2;
        org.codehaus.stax2.util.StreamReader2Delegate r0;
        org.codehaus.stax2.XMLStreamReader2 $r1;

        r0 := @this: org.codehaus.stax2.util.StreamReader2Delegate;

        $r1 = r0.<org.codehaus.stax2.util.StreamReader2Delegate: org.codehaus.stax2.XMLStreamReader2 mDelegate2>;

        $r2 = interfaceinvoke $r1.<org.codehaus.stax2.XMLStreamReader2: org.codehaus.stax2.LocationInfo getLocationInfo()>();

        return $r2;
    }

    public javax.xml.namespace.NamespaceContext getNonTransientNamespaceContext()
    {
        javax.xml.namespace.NamespaceContext $r2;
        org.codehaus.stax2.util.StreamReader2Delegate r0;
        org.codehaus.stax2.XMLStreamReader2 $r1;

        r0 := @this: org.codehaus.stax2.util.StreamReader2Delegate;

        $r1 = r0.<org.codehaus.stax2.util.StreamReader2Delegate: org.codehaus.stax2.XMLStreamReader2 mDelegate2>;

        $r2 = interfaceinvoke $r1.<org.codehaus.stax2.XMLStreamReader2: javax.xml.namespace.NamespaceContext getNonTransientNamespaceContext()>();

        return $r2;
    }

    public java.lang.String getPrefixedName()
    {
        java.lang.String $r2;
        org.codehaus.stax2.util.StreamReader2Delegate r0;
        org.codehaus.stax2.XMLStreamReader2 $r1;

        r0 := @this: org.codehaus.stax2.util.StreamReader2Delegate;

        $r1 = r0.<org.codehaus.stax2.util.StreamReader2Delegate: org.codehaus.stax2.XMLStreamReader2 mDelegate2>;

        $r2 = interfaceinvoke $r1.<org.codehaus.stax2.XMLStreamReader2: java.lang.String getPrefixedName()>();

        return $r2;
    }

    public int getText(java.io.Writer, boolean) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.util.StreamReader2Delegate r0;
        org.codehaus.stax2.XMLStreamReader2 $r2;
        java.io.Writer r1;
        int $i0;
        boolean z0;

        r0 := @this: org.codehaus.stax2.util.StreamReader2Delegate;

        r1 := @parameter0: java.io.Writer;

        z0 := @parameter1: boolean;

        $r2 = r0.<org.codehaus.stax2.util.StreamReader2Delegate: org.codehaus.stax2.XMLStreamReader2 mDelegate2>;

        $i0 = interfaceinvoke $r2.<org.codehaus.stax2.XMLStreamReader2: int getText(java.io.Writer,boolean)>(r1, z0);

        return $i0;
    }

    public boolean isEmptyElement() throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.util.StreamReader2Delegate r0;
        org.codehaus.stax2.XMLStreamReader2 $r1;
        boolean $z0;

        r0 := @this: org.codehaus.stax2.util.StreamReader2Delegate;

        $r1 = r0.<org.codehaus.stax2.util.StreamReader2Delegate: org.codehaus.stax2.XMLStreamReader2 mDelegate2>;

        $z0 = interfaceinvoke $r1.<org.codehaus.stax2.XMLStreamReader2: boolean isEmptyElement()>();

        return $z0;
    }

    public boolean isPropertySupported(java.lang.String)
    {
        org.codehaus.stax2.util.StreamReader2Delegate r0;
        org.codehaus.stax2.XMLStreamReader2 $r2;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.codehaus.stax2.util.StreamReader2Delegate;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.codehaus.stax2.util.StreamReader2Delegate: org.codehaus.stax2.XMLStreamReader2 mDelegate2>;

        $z0 = interfaceinvoke $r2.<org.codehaus.stax2.XMLStreamReader2: boolean isPropertySupported(java.lang.String)>(r1);

        return $z0;
    }

    public void setFeature(java.lang.String, java.lang.Object)
    {
        org.codehaus.stax2.util.StreamReader2Delegate r0;
        org.codehaus.stax2.XMLStreamReader2 $r3;
        java.lang.Object r2;
        java.lang.String r1;

        r0 := @this: org.codehaus.stax2.util.StreamReader2Delegate;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<org.codehaus.stax2.util.StreamReader2Delegate: org.codehaus.stax2.XMLStreamReader2 mDelegate2>;

        interfaceinvoke $r3.<org.codehaus.stax2.XMLStreamReader2: void setFeature(java.lang.String,java.lang.Object)>(r1, r2);

        return;
    }

    public boolean setProperty(java.lang.String, java.lang.Object)
    {
        org.codehaus.stax2.util.StreamReader2Delegate r0;
        org.codehaus.stax2.XMLStreamReader2 $r3;
        java.lang.Object r2;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.codehaus.stax2.util.StreamReader2Delegate;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<org.codehaus.stax2.util.StreamReader2Delegate: org.codehaus.stax2.XMLStreamReader2 mDelegate2>;

        $z0 = interfaceinvoke $r3.<org.codehaus.stax2.XMLStreamReader2: boolean setProperty(java.lang.String,java.lang.Object)>(r1, r2);

        return $z0;
    }

    public void skipElement() throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.util.StreamReader2Delegate r0;
        org.codehaus.stax2.XMLStreamReader2 $r1;

        r0 := @this: org.codehaus.stax2.util.StreamReader2Delegate;

        $r1 = r0.<org.codehaus.stax2.util.StreamReader2Delegate: org.codehaus.stax2.XMLStreamReader2 mDelegate2>;

        interfaceinvoke $r1.<org.codehaus.stax2.XMLStreamReader2: void skipElement()>();

        return;
    }

    public org.codehaus.stax2.validation.ValidationProblemHandler setValidationProblemHandler(org.codehaus.stax2.validation.ValidationProblemHandler)
    {
        org.codehaus.stax2.util.StreamReader2Delegate r0;
        org.codehaus.stax2.XMLStreamReader2 $r2;
        org.codehaus.stax2.validation.ValidationProblemHandler r1, $r3;

        r0 := @this: org.codehaus.stax2.util.StreamReader2Delegate;

        r1 := @parameter0: org.codehaus.stax2.validation.ValidationProblemHandler;

        $r2 = r0.<org.codehaus.stax2.util.StreamReader2Delegate: org.codehaus.stax2.XMLStreamReader2 mDelegate2>;

        $r3 = interfaceinvoke $r2.<org.codehaus.stax2.XMLStreamReader2: org.codehaus.stax2.validation.ValidationProblemHandler setValidationProblemHandler(org.codehaus.stax2.validation.ValidationProblemHandler)>(r1);

        return $r3;
    }

    public org.codehaus.stax2.validation.XMLValidator stopValidatingAgainst(org.codehaus.stax2.validation.XMLValidationSchema) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.validation.XMLValidator $r3;
        org.codehaus.stax2.util.StreamReader2Delegate r0;
        org.codehaus.stax2.XMLStreamReader2 $r2;
        org.codehaus.stax2.validation.XMLValidationSchema r1;

        r0 := @this: org.codehaus.stax2.util.StreamReader2Delegate;

        r1 := @parameter0: org.codehaus.stax2.validation.XMLValidationSchema;

        $r2 = r0.<org.codehaus.stax2.util.StreamReader2Delegate: org.codehaus.stax2.XMLStreamReader2 mDelegate2>;

        $r3 = interfaceinvoke $r2.<org.codehaus.stax2.XMLStreamReader2: org.codehaus.stax2.validation.XMLValidator stopValidatingAgainst(org.codehaus.stax2.validation.XMLValidationSchema)>(r1);

        return $r3;
    }

    public org.codehaus.stax2.validation.XMLValidator stopValidatingAgainst(org.codehaus.stax2.validation.XMLValidator) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.validation.XMLValidator r1, $r3;
        org.codehaus.stax2.util.StreamReader2Delegate r0;
        org.codehaus.stax2.XMLStreamReader2 $r2;

        r0 := @this: org.codehaus.stax2.util.StreamReader2Delegate;

        r1 := @parameter0: org.codehaus.stax2.validation.XMLValidator;

        $r2 = r0.<org.codehaus.stax2.util.StreamReader2Delegate: org.codehaus.stax2.XMLStreamReader2 mDelegate2>;

        $r3 = interfaceinvoke $r2.<org.codehaus.stax2.XMLStreamReader2: org.codehaus.stax2.validation.XMLValidator stopValidatingAgainst(org.codehaus.stax2.validation.XMLValidator)>(r1);

        return $r3;
    }

    public org.codehaus.stax2.validation.XMLValidator validateAgainst(org.codehaus.stax2.validation.XMLValidationSchema) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.validation.XMLValidator $r3;
        org.codehaus.stax2.util.StreamReader2Delegate r0;
        org.codehaus.stax2.XMLStreamReader2 $r2;
        org.codehaus.stax2.validation.XMLValidationSchema r1;

        r0 := @this: org.codehaus.stax2.util.StreamReader2Delegate;

        r1 := @parameter0: org.codehaus.stax2.validation.XMLValidationSchema;

        $r2 = r0.<org.codehaus.stax2.util.StreamReader2Delegate: org.codehaus.stax2.XMLStreamReader2 mDelegate2>;

        $r3 = interfaceinvoke $r2.<org.codehaus.stax2.XMLStreamReader2: org.codehaus.stax2.validation.XMLValidator validateAgainst(org.codehaus.stax2.validation.XMLValidationSchema)>(r1);

        return $r3;
    }

    public int getAttributeIndex(java.lang.String, java.lang.String)
    {
        org.codehaus.stax2.util.StreamReader2Delegate r0;
        org.codehaus.stax2.XMLStreamReader2 $r3;
        int $i0;
        java.lang.String r1, r2;

        r0 := @this: org.codehaus.stax2.util.StreamReader2Delegate;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.codehaus.stax2.util.StreamReader2Delegate: org.codehaus.stax2.XMLStreamReader2 mDelegate2>;

        $i0 = interfaceinvoke $r3.<org.codehaus.stax2.XMLStreamReader2: int getAttributeIndex(java.lang.String,java.lang.String)>(r1, r2);

        return $i0;
    }

    public boolean getAttributeAsBoolean(int) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.util.StreamReader2Delegate r0;
        org.codehaus.stax2.XMLStreamReader2 $r1;
        int i0;
        boolean $z0;

        r0 := @this: org.codehaus.stax2.util.StreamReader2Delegate;

        i0 := @parameter0: int;

        $r1 = r0.<org.codehaus.stax2.util.StreamReader2Delegate: org.codehaus.stax2.XMLStreamReader2 mDelegate2>;

        $z0 = interfaceinvoke $r1.<org.codehaus.stax2.XMLStreamReader2: boolean getAttributeAsBoolean(int)>(i0);

        return $z0;
    }

    public java.math.BigDecimal getAttributeAsDecimal(int) throws javax.xml.stream.XMLStreamException
    {
        java.math.BigDecimal $r2;
        org.codehaus.stax2.util.StreamReader2Delegate r0;
        org.codehaus.stax2.XMLStreamReader2 $r1;
        int i0;

        r0 := @this: org.codehaus.stax2.util.StreamReader2Delegate;

        i0 := @parameter0: int;

        $r1 = r0.<org.codehaus.stax2.util.StreamReader2Delegate: org.codehaus.stax2.XMLStreamReader2 mDelegate2>;

        $r2 = interfaceinvoke $r1.<org.codehaus.stax2.XMLStreamReader2: java.math.BigDecimal getAttributeAsDecimal(int)>(i0);

        return $r2;
    }

    public double getAttributeAsDouble(int) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.util.StreamReader2Delegate r0;
        org.codehaus.stax2.XMLStreamReader2 $r1;
        int i0;
        double $d0;

        r0 := @this: org.codehaus.stax2.util.StreamReader2Delegate;

        i0 := @parameter0: int;

        $r1 = r0.<org.codehaus.stax2.util.StreamReader2Delegate: org.codehaus.stax2.XMLStreamReader2 mDelegate2>;

        $d0 = interfaceinvoke $r1.<org.codehaus.stax2.XMLStreamReader2: double getAttributeAsDouble(int)>(i0);

        return $d0;
    }

    public float getAttributeAsFloat(int) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.util.StreamReader2Delegate r0;
        org.codehaus.stax2.XMLStreamReader2 $r1;
        int i0;
        float $f0;

        r0 := @this: org.codehaus.stax2.util.StreamReader2Delegate;

        i0 := @parameter0: int;

        $r1 = r0.<org.codehaus.stax2.util.StreamReader2Delegate: org.codehaus.stax2.XMLStreamReader2 mDelegate2>;

        $f0 = interfaceinvoke $r1.<org.codehaus.stax2.XMLStreamReader2: float getAttributeAsFloat(int)>(i0);

        return $f0;
    }

    public int getAttributeAsInt(int) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.util.StreamReader2Delegate r0;
        org.codehaus.stax2.XMLStreamReader2 $r1;
        int i0, $i1;

        r0 := @this: org.codehaus.stax2.util.StreamReader2Delegate;

        i0 := @parameter0: int;

        $r1 = r0.<org.codehaus.stax2.util.StreamReader2Delegate: org.codehaus.stax2.XMLStreamReader2 mDelegate2>;

        $i1 = interfaceinvoke $r1.<org.codehaus.stax2.XMLStreamReader2: int getAttributeAsInt(int)>(i0);

        return $i1;
    }

    public java.math.BigInteger getAttributeAsInteger(int) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.util.StreamReader2Delegate r0;
        org.codehaus.stax2.XMLStreamReader2 $r1;
        int i0;
        java.math.BigInteger $r2;

        r0 := @this: org.codehaus.stax2.util.StreamReader2Delegate;

        i0 := @parameter0: int;

        $r1 = r0.<org.codehaus.stax2.util.StreamReader2Delegate: org.codehaus.stax2.XMLStreamReader2 mDelegate2>;

        $r2 = interfaceinvoke $r1.<org.codehaus.stax2.XMLStreamReader2: java.math.BigInteger getAttributeAsInteger(int)>(i0);

        return $r2;
    }

    public long getAttributeAsLong(int) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.util.StreamReader2Delegate r0;
        org.codehaus.stax2.XMLStreamReader2 $r1;
        int i0;
        long $l1;

        r0 := @this: org.codehaus.stax2.util.StreamReader2Delegate;

        i0 := @parameter0: int;

        $r1 = r0.<org.codehaus.stax2.util.StreamReader2Delegate: org.codehaus.stax2.XMLStreamReader2 mDelegate2>;

        $l1 = interfaceinvoke $r1.<org.codehaus.stax2.XMLStreamReader2: long getAttributeAsLong(int)>(i0);

        return $l1;
    }

    public javax.xml.namespace.QName getAttributeAsQName(int) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.util.StreamReader2Delegate r0;
        org.codehaus.stax2.XMLStreamReader2 $r1;
        int i0;
        javax.xml.namespace.QName $r2;

        r0 := @this: org.codehaus.stax2.util.StreamReader2Delegate;

        i0 := @parameter0: int;

        $r1 = r0.<org.codehaus.stax2.util.StreamReader2Delegate: org.codehaus.stax2.XMLStreamReader2 mDelegate2>;

        $r2 = interfaceinvoke $r1.<org.codehaus.stax2.XMLStreamReader2: javax.xml.namespace.QName getAttributeAsQName(int)>(i0);

        return $r2;
    }

    public int[] getAttributeAsIntArray(int) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.util.StreamReader2Delegate r0;
        org.codehaus.stax2.XMLStreamReader2 $r1;
        int[] $r2;
        int i0;

        r0 := @this: org.codehaus.stax2.util.StreamReader2Delegate;

        i0 := @parameter0: int;

        $r1 = r0.<org.codehaus.stax2.util.StreamReader2Delegate: org.codehaus.stax2.XMLStreamReader2 mDelegate2>;

        $r2 = interfaceinvoke $r1.<org.codehaus.stax2.XMLStreamReader2: int[] getAttributeAsIntArray(int)>(i0);

        return $r2;
    }

    public long[] getAttributeAsLongArray(int) throws javax.xml.stream.XMLStreamException
    {
        long[] $r2;
        org.codehaus.stax2.util.StreamReader2Delegate r0;
        org.codehaus.stax2.XMLStreamReader2 $r1;
        int i0;

        r0 := @this: org.codehaus.stax2.util.StreamReader2Delegate;

        i0 := @parameter0: int;

        $r1 = r0.<org.codehaus.stax2.util.StreamReader2Delegate: org.codehaus.stax2.XMLStreamReader2 mDelegate2>;

        $r2 = interfaceinvoke $r1.<org.codehaus.stax2.XMLStreamReader2: long[] getAttributeAsLongArray(int)>(i0);

        return $r2;
    }

    public float[] getAttributeAsFloatArray(int) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.util.StreamReader2Delegate r0;
        org.codehaus.stax2.XMLStreamReader2 $r1;
        int i0;
        float[] $r2;

        r0 := @this: org.codehaus.stax2.util.StreamReader2Delegate;

        i0 := @parameter0: int;

        $r1 = r0.<org.codehaus.stax2.util.StreamReader2Delegate: org.codehaus.stax2.XMLStreamReader2 mDelegate2>;

        $r2 = interfaceinvoke $r1.<org.codehaus.stax2.XMLStreamReader2: float[] getAttributeAsFloatArray(int)>(i0);

        return $r2;
    }

    public double[] getAttributeAsDoubleArray(int) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.util.StreamReader2Delegate r0;
        org.codehaus.stax2.XMLStreamReader2 $r1;
        int i0;
        double[] $r2;

        r0 := @this: org.codehaus.stax2.util.StreamReader2Delegate;

        i0 := @parameter0: int;

        $r1 = r0.<org.codehaus.stax2.util.StreamReader2Delegate: org.codehaus.stax2.XMLStreamReader2 mDelegate2>;

        $r2 = interfaceinvoke $r1.<org.codehaus.stax2.XMLStreamReader2: double[] getAttributeAsDoubleArray(int)>(i0);

        return $r2;
    }

    public void getElementAs(org.codehaus.stax2.typed.TypedValueDecoder) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.typed.TypedValueDecoder r1;
        org.codehaus.stax2.util.StreamReader2Delegate r0;
        org.codehaus.stax2.XMLStreamReader2 $r2;

        r0 := @this: org.codehaus.stax2.util.StreamReader2Delegate;

        r1 := @parameter0: org.codehaus.stax2.typed.TypedValueDecoder;

        $r2 = r0.<org.codehaus.stax2.util.StreamReader2Delegate: org.codehaus.stax2.XMLStreamReader2 mDelegate2>;

        interfaceinvoke $r2.<org.codehaus.stax2.XMLStreamReader2: void getElementAs(org.codehaus.stax2.typed.TypedValueDecoder)>(r1);

        return;
    }

    public boolean getElementAsBoolean() throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.util.StreamReader2Delegate r0;
        org.codehaus.stax2.XMLStreamReader2 $r1;
        boolean $z0;

        r0 := @this: org.codehaus.stax2.util.StreamReader2Delegate;

        $r1 = r0.<org.codehaus.stax2.util.StreamReader2Delegate: org.codehaus.stax2.XMLStreamReader2 mDelegate2>;

        $z0 = interfaceinvoke $r1.<org.codehaus.stax2.XMLStreamReader2: boolean getElementAsBoolean()>();

        return $z0;
    }

    public java.math.BigDecimal getElementAsDecimal() throws javax.xml.stream.XMLStreamException
    {
        java.math.BigDecimal $r2;
        org.codehaus.stax2.util.StreamReader2Delegate r0;
        org.codehaus.stax2.XMLStreamReader2 $r1;

        r0 := @this: org.codehaus.stax2.util.StreamReader2Delegate;

        $r1 = r0.<org.codehaus.stax2.util.StreamReader2Delegate: org.codehaus.stax2.XMLStreamReader2 mDelegate2>;

        $r2 = interfaceinvoke $r1.<org.codehaus.stax2.XMLStreamReader2: java.math.BigDecimal getElementAsDecimal()>();

        return $r2;
    }

    public double getElementAsDouble() throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.util.StreamReader2Delegate r0;
        org.codehaus.stax2.XMLStreamReader2 $r1;
        double $d0;

        r0 := @this: org.codehaus.stax2.util.StreamReader2Delegate;

        $r1 = r0.<org.codehaus.stax2.util.StreamReader2Delegate: org.codehaus.stax2.XMLStreamReader2 mDelegate2>;

        $d0 = interfaceinvoke $r1.<org.codehaus.stax2.XMLStreamReader2: double getElementAsDouble()>();

        return $d0;
    }

    public float getElementAsFloat() throws javax.xml.stream.XMLStreamException
    {
        float $f0;
        org.codehaus.stax2.util.StreamReader2Delegate r0;
        org.codehaus.stax2.XMLStreamReader2 $r1;

        r0 := @this: org.codehaus.stax2.util.StreamReader2Delegate;

        $r1 = r0.<org.codehaus.stax2.util.StreamReader2Delegate: org.codehaus.stax2.XMLStreamReader2 mDelegate2>;

        $f0 = interfaceinvoke $r1.<org.codehaus.stax2.XMLStreamReader2: float getElementAsFloat()>();

        return $f0;
    }

    public int getElementAsInt() throws javax.xml.stream.XMLStreamException
    {
        int $i0;
        org.codehaus.stax2.util.StreamReader2Delegate r0;
        org.codehaus.stax2.XMLStreamReader2 $r1;

        r0 := @this: org.codehaus.stax2.util.StreamReader2Delegate;

        $r1 = r0.<org.codehaus.stax2.util.StreamReader2Delegate: org.codehaus.stax2.XMLStreamReader2 mDelegate2>;

        $i0 = interfaceinvoke $r1.<org.codehaus.stax2.XMLStreamReader2: int getElementAsInt()>();

        return $i0;
    }

    public java.math.BigInteger getElementAsInteger() throws javax.xml.stream.XMLStreamException
    {
        java.math.BigInteger $r2;
        org.codehaus.stax2.util.StreamReader2Delegate r0;
        org.codehaus.stax2.XMLStreamReader2 $r1;

        r0 := @this: org.codehaus.stax2.util.StreamReader2Delegate;

        $r1 = r0.<org.codehaus.stax2.util.StreamReader2Delegate: org.codehaus.stax2.XMLStreamReader2 mDelegate2>;

        $r2 = interfaceinvoke $r1.<org.codehaus.stax2.XMLStreamReader2: java.math.BigInteger getElementAsInteger()>();

        return $r2;
    }

    public long getElementAsLong() throws javax.xml.stream.XMLStreamException
    {
        long $l0;
        org.codehaus.stax2.util.StreamReader2Delegate r0;
        org.codehaus.stax2.XMLStreamReader2 $r1;

        r0 := @this: org.codehaus.stax2.util.StreamReader2Delegate;

        $r1 = r0.<org.codehaus.stax2.util.StreamReader2Delegate: org.codehaus.stax2.XMLStreamReader2 mDelegate2>;

        $l0 = interfaceinvoke $r1.<org.codehaus.stax2.XMLStreamReader2: long getElementAsLong()>();

        return $l0;
    }

    public javax.xml.namespace.QName getElementAsQName() throws javax.xml.stream.XMLStreamException
    {
        javax.xml.namespace.QName $r2;
        org.codehaus.stax2.util.StreamReader2Delegate r0;
        org.codehaus.stax2.XMLStreamReader2 $r1;

        r0 := @this: org.codehaus.stax2.util.StreamReader2Delegate;

        $r1 = r0.<org.codehaus.stax2.util.StreamReader2Delegate: org.codehaus.stax2.XMLStreamReader2 mDelegate2>;

        $r2 = interfaceinvoke $r1.<org.codehaus.stax2.XMLStreamReader2: javax.xml.namespace.QName getElementAsQName()>();

        return $r2;
    }

    public byte[] getElementAsBinary() throws javax.xml.stream.XMLStreamException
    {
        byte[] $r2;
        org.codehaus.stax2.util.StreamReader2Delegate r0;
        org.codehaus.stax2.XMLStreamReader2 $r1;

        r0 := @this: org.codehaus.stax2.util.StreamReader2Delegate;

        $r1 = r0.<org.codehaus.stax2.util.StreamReader2Delegate: org.codehaus.stax2.XMLStreamReader2 mDelegate2>;

        $r2 = interfaceinvoke $r1.<org.codehaus.stax2.XMLStreamReader2: byte[] getElementAsBinary()>();

        return $r2;
    }

    public byte[] getElementAsBinary(org.codehaus.stax2.typed.Base64Variant) throws javax.xml.stream.XMLStreamException
    {
        byte[] $r3;
        org.codehaus.stax2.typed.Base64Variant r1;
        org.codehaus.stax2.util.StreamReader2Delegate r0;
        org.codehaus.stax2.XMLStreamReader2 $r2;

        r0 := @this: org.codehaus.stax2.util.StreamReader2Delegate;

        r1 := @parameter0: org.codehaus.stax2.typed.Base64Variant;

        $r2 = r0.<org.codehaus.stax2.util.StreamReader2Delegate: org.codehaus.stax2.XMLStreamReader2 mDelegate2>;

        $r3 = interfaceinvoke $r2.<org.codehaus.stax2.XMLStreamReader2: byte[] getElementAsBinary(org.codehaus.stax2.typed.Base64Variant)>(r1);

        return $r3;
    }

    public void getAttributeAs(int, org.codehaus.stax2.typed.TypedValueDecoder) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.util.StreamReader2Delegate r0;
        org.codehaus.stax2.XMLStreamReader2 $r2;
        int i0;
        org.codehaus.stax2.typed.TypedValueDecoder r1;

        r0 := @this: org.codehaus.stax2.util.StreamReader2Delegate;

        i0 := @parameter0: int;

        r1 := @parameter1: org.codehaus.stax2.typed.TypedValueDecoder;

        $r2 = r0.<org.codehaus.stax2.util.StreamReader2Delegate: org.codehaus.stax2.XMLStreamReader2 mDelegate2>;

        interfaceinvoke $r2.<org.codehaus.stax2.XMLStreamReader2: void getAttributeAs(int,org.codehaus.stax2.typed.TypedValueDecoder)>(i0, r1);

        return;
    }

    public int getAttributeAsArray(int, org.codehaus.stax2.typed.TypedArrayDecoder) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.typed.TypedArrayDecoder r1;
        org.codehaus.stax2.util.StreamReader2Delegate r0;
        org.codehaus.stax2.XMLStreamReader2 $r2;
        int i0, $i1;

        r0 := @this: org.codehaus.stax2.util.StreamReader2Delegate;

        i0 := @parameter0: int;

        r1 := @parameter1: org.codehaus.stax2.typed.TypedArrayDecoder;

        $r2 = r0.<org.codehaus.stax2.util.StreamReader2Delegate: org.codehaus.stax2.XMLStreamReader2 mDelegate2>;

        $i1 = interfaceinvoke $r2.<org.codehaus.stax2.XMLStreamReader2: int getAttributeAsArray(int,org.codehaus.stax2.typed.TypedArrayDecoder)>(i0, r1);

        return $i1;
    }

    public byte[] getAttributeAsBinary(int) throws javax.xml.stream.XMLStreamException
    {
        byte[] $r2;
        org.codehaus.stax2.util.StreamReader2Delegate r0;
        org.codehaus.stax2.XMLStreamReader2 $r1;
        int i0;

        r0 := @this: org.codehaus.stax2.util.StreamReader2Delegate;

        i0 := @parameter0: int;

        $r1 = r0.<org.codehaus.stax2.util.StreamReader2Delegate: org.codehaus.stax2.XMLStreamReader2 mDelegate2>;

        $r2 = interfaceinvoke $r1.<org.codehaus.stax2.XMLStreamReader2: byte[] getAttributeAsBinary(int)>(i0);

        return $r2;
    }

    public byte[] getAttributeAsBinary(int, org.codehaus.stax2.typed.Base64Variant) throws javax.xml.stream.XMLStreamException
    {
        byte[] $r3;
        org.codehaus.stax2.typed.Base64Variant r1;
        org.codehaus.stax2.util.StreamReader2Delegate r0;
        org.codehaus.stax2.XMLStreamReader2 $r2;
        int i0;

        r0 := @this: org.codehaus.stax2.util.StreamReader2Delegate;

        i0 := @parameter0: int;

        r1 := @parameter1: org.codehaus.stax2.typed.Base64Variant;

        $r2 = r0.<org.codehaus.stax2.util.StreamReader2Delegate: org.codehaus.stax2.XMLStreamReader2 mDelegate2>;

        $r3 = interfaceinvoke $r2.<org.codehaus.stax2.XMLStreamReader2: byte[] getAttributeAsBinary(int,org.codehaus.stax2.typed.Base64Variant)>(i0, r1);

        return $r3;
    }

    public int readElementAsDoubleArray(double[], int, int) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.util.StreamReader2Delegate r0;
        org.codehaus.stax2.XMLStreamReader2 $r2;
        double[] r1;
        int i0, i1, $i2;

        r0 := @this: org.codehaus.stax2.util.StreamReader2Delegate;

        r1 := @parameter0: double[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.codehaus.stax2.util.StreamReader2Delegate: org.codehaus.stax2.XMLStreamReader2 mDelegate2>;

        $i2 = interfaceinvoke $r2.<org.codehaus.stax2.XMLStreamReader2: int readElementAsDoubleArray(double[],int,int)>(r1, i0, i1);

        return $i2;
    }

    public int readElementAsFloatArray(float[], int, int) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.util.StreamReader2Delegate r0;
        org.codehaus.stax2.XMLStreamReader2 $r2;
        int i0, i1, $i2;
        float[] r1;

        r0 := @this: org.codehaus.stax2.util.StreamReader2Delegate;

        r1 := @parameter0: float[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.codehaus.stax2.util.StreamReader2Delegate: org.codehaus.stax2.XMLStreamReader2 mDelegate2>;

        $i2 = interfaceinvoke $r2.<org.codehaus.stax2.XMLStreamReader2: int readElementAsFloatArray(float[],int,int)>(r1, i0, i1);

        return $i2;
    }

    public int readElementAsIntArray(int[], int, int) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.util.StreamReader2Delegate r0;
        int[] r1;
        org.codehaus.stax2.XMLStreamReader2 $r2;
        int i0, i1, $i2;

        r0 := @this: org.codehaus.stax2.util.StreamReader2Delegate;

        r1 := @parameter0: int[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.codehaus.stax2.util.StreamReader2Delegate: org.codehaus.stax2.XMLStreamReader2 mDelegate2>;

        $i2 = interfaceinvoke $r2.<org.codehaus.stax2.XMLStreamReader2: int readElementAsIntArray(int[],int,int)>(r1, i0, i1);

        return $i2;
    }

    public int readElementAsLongArray(long[], int, int) throws javax.xml.stream.XMLStreamException
    {
        long[] r1;
        org.codehaus.stax2.util.StreamReader2Delegate r0;
        org.codehaus.stax2.XMLStreamReader2 $r2;
        int i0, i1, $i2;

        r0 := @this: org.codehaus.stax2.util.StreamReader2Delegate;

        r1 := @parameter0: long[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.codehaus.stax2.util.StreamReader2Delegate: org.codehaus.stax2.XMLStreamReader2 mDelegate2>;

        $i2 = interfaceinvoke $r2.<org.codehaus.stax2.XMLStreamReader2: int readElementAsLongArray(long[],int,int)>(r1, i0, i1);

        return $i2;
    }

    public int readElementAsArray(org.codehaus.stax2.typed.TypedArrayDecoder) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.typed.TypedArrayDecoder r1;
        org.codehaus.stax2.util.StreamReader2Delegate r0;
        org.codehaus.stax2.XMLStreamReader2 $r2;
        int $i0;

        r0 := @this: org.codehaus.stax2.util.StreamReader2Delegate;

        r1 := @parameter0: org.codehaus.stax2.typed.TypedArrayDecoder;

        $r2 = r0.<org.codehaus.stax2.util.StreamReader2Delegate: org.codehaus.stax2.XMLStreamReader2 mDelegate2>;

        $i0 = interfaceinvoke $r2.<org.codehaus.stax2.XMLStreamReader2: int readElementAsArray(org.codehaus.stax2.typed.TypedArrayDecoder)>(r1);

        return $i0;
    }

    public int readElementAsBinary(byte[], int, int) throws javax.xml.stream.XMLStreamException
    {
        byte[] r1;
        org.codehaus.stax2.util.StreamReader2Delegate r0;
        org.codehaus.stax2.XMLStreamReader2 $r2;
        int i0, i1, $i2;

        r0 := @this: org.codehaus.stax2.util.StreamReader2Delegate;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.codehaus.stax2.util.StreamReader2Delegate: org.codehaus.stax2.XMLStreamReader2 mDelegate2>;

        $i2 = interfaceinvoke $r2.<org.codehaus.stax2.XMLStreamReader2: int readElementAsBinary(byte[],int,int)>(r1, i0, i1);

        return $i2;
    }

    public int readElementAsBinary(byte[], int, int, org.codehaus.stax2.typed.Base64Variant) throws javax.xml.stream.XMLStreamException
    {
        byte[] r1;
        org.codehaus.stax2.typed.Base64Variant r2;
        org.codehaus.stax2.util.StreamReader2Delegate r0;
        org.codehaus.stax2.XMLStreamReader2 $r3;
        int i0, i1, $i2;

        r0 := @this: org.codehaus.stax2.util.StreamReader2Delegate;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: org.codehaus.stax2.typed.Base64Variant;

        $r3 = r0.<org.codehaus.stax2.util.StreamReader2Delegate: org.codehaus.stax2.XMLStreamReader2 mDelegate2>;

        $i2 = interfaceinvoke $r3.<org.codehaus.stax2.XMLStreamReader2: int readElementAsBinary(byte[],int,int,org.codehaus.stax2.typed.Base64Variant)>(r1, i0, i1, r2);

        return $i2;
    }
}
