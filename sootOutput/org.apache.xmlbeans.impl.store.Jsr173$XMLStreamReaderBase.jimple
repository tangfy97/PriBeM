abstract class org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase extends java.lang.Object implements javax.xml.stream.XMLStreamReader, javax.xml.namespace.NamespaceContext, javax.xml.stream.Location
{
    private org.apache.xmlbeans.impl.store.Locale _locale;
    private long _version;
    java.lang.String _uri;
    int _line;
    int _column;
    int _offset;

    void <init>(org.apache.xmlbeans.impl.store.Cur)
    {
        long $l0;
        org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase r0;
        org.apache.xmlbeans.impl.store.Locale $r2, $r3;
        int $i2, $i4, $i6;
        org.apache.xmlbeans.impl.store.Cur r1;

        r0 := @this: org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase;

        r1 := @parameter0: org.apache.xmlbeans.impl.store.Cur;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i2 = (int) -1;

        r0.<org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase: int _line> = $i2;

        $i4 = (int) -1;

        r0.<org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase: int _column> = $i4;

        $i6 = (int) -1;

        r0.<org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase: int _offset> = $i6;

        $r2 = r1.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        r0.<org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase: org.apache.xmlbeans.impl.store.Locale _locale> = $r2;

        $r3 = r0.<org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase: org.apache.xmlbeans.impl.store.Locale _locale>;

        $l0 = virtualinvoke $r3.<org.apache.xmlbeans.impl.store.Locale: long version()>();

        r0.<org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase: long _version> = $l0;

        return;
    }

    protected final void checkChanged()
    {
        byte $b2;
        org.apache.xmlbeans.impl.store.Locale $r1;
        long $l0, $l1;
        org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase r0;
        java.util.ConcurrentModificationException $r2;

        r0 := @this: org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase;

        $l0 = r0.<org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase: long _version>;

        $r1 = r0.<org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase: org.apache.xmlbeans.impl.store.Locale _locale>;

        $l1 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Locale: long version()>();

        $b2 = $l0 cmp $l1;

        if $b2 == 0 goto label1;

        $r2 = new java.util.ConcurrentModificationException;

        specialinvoke $r2.<java.util.ConcurrentModificationException: void <init>(java.lang.String)>("Document changed while streaming");

        throw $r2;

     label1:
        return;
    }

    public void close() throws javax.xml.stream.XMLStreamException
    {
        org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase: void checkChanged()>();

        return;
    }

    public boolean isWhiteSpace()
    {
        org.apache.xmlbeans.impl.store.Locale $r2;
        int $i0;
        org.apache.xmlbeans.impl.store.CharUtil $r3;
        java.lang.String $r1;
        org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase: void checkChanged()>();

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase: java.lang.String getText()>();

        $r2 = r0.<org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase: org.apache.xmlbeans.impl.store.Locale _locale>;

        $r3 = virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.CharUtil getCharUtil()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $z0 = virtualinvoke $r3.<org.apache.xmlbeans.impl.store.CharUtil: boolean isWhiteSpace(java.lang.Object,int,int)>($r1, 0, $i0);

        return $z0;
    }

    public javax.xml.stream.Location getLocation()
    {
        org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase r0;
        org.apache.xmlbeans.XmlLineNumber $r4;
        int $i0, $i1, $i2, $i4, $i6, $i8;
        java.lang.Class $r2, $r5;
        java.lang.Object $r3;
        org.apache.xmlbeans.impl.store.Cur $r1;

        r0 := @this: org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase: void checkChanged()>();

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase: org.apache.xmlbeans.impl.store.Cur getStreamCur()>();

        $r2 = <org.apache.xmlbeans.impl.store.Jsr173: java.lang.Class class$org$apache$xmlbeans$XmlLineNumber>;

        if $r2 != null goto label1;

        $r5 = staticinvoke <org.apache.xmlbeans.impl.store.Jsr173: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.XmlLineNumber");

        <org.apache.xmlbeans.impl.store.Jsr173: java.lang.Class class$org$apache$xmlbeans$XmlLineNumber> = $r5;

        goto label2;

     label1:
        $r5 = <org.apache.xmlbeans.impl.store.Jsr173: java.lang.Class class$org$apache$xmlbeans$XmlLineNumber>;

     label2:
        $r3 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Cur: java.lang.Object getBookmark(java.lang.Object)>($r5);

        $r4 = (org.apache.xmlbeans.XmlLineNumber) $r3;

        r0.<org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase: java.lang.String _uri> = null;

        if $r4 == null goto label3;

        $i0 = virtualinvoke $r4.<org.apache.xmlbeans.XmlLineNumber: int getLine()>();

        r0.<org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase: int _line> = $i0;

        $i1 = virtualinvoke $r4.<org.apache.xmlbeans.XmlLineNumber: int getColumn()>();

        r0.<org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase: int _column> = $i1;

        $i2 = virtualinvoke $r4.<org.apache.xmlbeans.XmlLineNumber: int getOffset()>();

        r0.<org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase: int _offset> = $i2;

        goto label4;

     label3:
        $i4 = (int) -1;

        r0.<org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase: int _line> = $i4;

        $i6 = (int) -1;

        r0.<org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase: int _column> = $i6;

        $i8 = (int) -1;

        r0.<org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase: int _offset> = $i8;

     label4:
        return r0;
    }

    public java.lang.Object getProperty(java.lang.String)
    {
        java.lang.String r1;
        org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase r0;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase: void checkChanged()>();

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Property name is null");

        throw $r2;

     label1:
        return null;
    }

    public java.lang.String getCharacterEncodingScheme()
    {
        org.apache.xmlbeans.XmlDocumentProperties $r2;
        java.lang.String $r3;
        org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase r0;
        org.apache.xmlbeans.impl.store.Cur $r1;

        r0 := @this: org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase: void checkChanged()>();

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase: org.apache.xmlbeans.impl.store.Cur getStreamCur()>();

        $r2 = staticinvoke <org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.XmlDocumentProperties getDocProps(org.apache.xmlbeans.impl.store.Cur,boolean)>($r1, 0);

        if $r2 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r3 = virtualinvoke $r2.<org.apache.xmlbeans.XmlDocumentProperties: java.lang.String getEncoding()>();

     label2:
        return $r3;
    }

    public java.lang.String getEncoding()
    {
        org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase;

        return null;
    }

    public java.lang.String getVersion()
    {
        org.apache.xmlbeans.XmlDocumentProperties $r2;
        java.lang.String $r3;
        org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase r0;
        org.apache.xmlbeans.impl.store.Cur $r1;

        r0 := @this: org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase: void checkChanged()>();

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase: org.apache.xmlbeans.impl.store.Cur getStreamCur()>();

        $r2 = staticinvoke <org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.XmlDocumentProperties getDocProps(org.apache.xmlbeans.impl.store.Cur,boolean)>($r1, 0);

        if $r2 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r3 = virtualinvoke $r2.<org.apache.xmlbeans.XmlDocumentProperties: java.lang.String getVersion()>();

     label2:
        return $r3;
    }

    public boolean isStandalone()
    {
        org.apache.xmlbeans.XmlDocumentProperties $r2;
        org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase r0;
        org.apache.xmlbeans.impl.store.Cur $r1;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase: void checkChanged()>();

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase: org.apache.xmlbeans.impl.store.Cur getStreamCur()>();

        $r2 = staticinvoke <org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.XmlDocumentProperties getDocProps(org.apache.xmlbeans.impl.store.Cur,boolean)>($r1, 0);

        if $r2 != null goto label1;

        $z0 = 0;

        goto label2;

     label1:
        $z0 = virtualinvoke $r2.<org.apache.xmlbeans.XmlDocumentProperties: boolean getStandalone()>();

     label2:
        return $z0;
    }

    public boolean standaloneSet()
    {
        org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase: void checkChanged()>();

        return 0;
    }

    public void require(int, java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase r0;
        javax.xml.stream.XMLStreamException $r4, $r6, $r7;
        int i0, $i1;
        java.lang.String r1, r2, $r3, $r5;
        boolean $z0, $z1;

        r0 := @this: org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase: void checkChanged()>();

        $i1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase: int getEventType()>();

        if i0 == $i1 goto label1;

        $r7 = new javax.xml.stream.XMLStreamException;

        specialinvoke $r7.<javax.xml.stream.XMLStreamException: void <init>()>();

        throw $r7;

     label1:
        if r1 == null goto label2;

        $r5 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase: java.lang.String getNamespaceURI()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 != 0 goto label2;

        $r6 = new javax.xml.stream.XMLStreamException;

        specialinvoke $r6.<javax.xml.stream.XMLStreamException: void <init>()>();

        throw $r6;

     label2:
        if r2 == null goto label3;

        $r3 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase: java.lang.String getLocalName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 != 0 goto label3;

        $r4 = new javax.xml.stream.XMLStreamException;

        specialinvoke $r4.<javax.xml.stream.XMLStreamException: void <init>()>();

        throw $r4;

     label3:
        return;
    }

    public int getCharacterOffset()
    {
        int $i0;
        org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase;

        $i0 = r0.<org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase: int _offset>;

        return $i0;
    }

    public int getColumnNumber()
    {
        int $i0;
        org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase;

        $i0 = r0.<org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase: int _column>;

        return $i0;
    }

    public int getLineNumber()
    {
        int $i0;
        org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase;

        $i0 = r0.<org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase: int _line>;

        return $i0;
    }

    public java.lang.String getLocationURI()
    {
        java.lang.String $r1;
        org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase;

        $r1 = r0.<org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase: java.lang.String _uri>;

        return $r1;
    }

    public java.lang.String getPublicId()
    {
        org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase;

        return null;
    }

    public java.lang.String getSystemId()
    {
        org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase;

        return null;
    }

    public javax.xml.namespace.NamespaceContext getNamespaceContext()
    {
        java.lang.RuntimeException $r0;
        org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase r1;

        r1 := @this: org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("This version of getNamespaceContext should not be called");

        throw $r0;
    }

    public java.lang.String getNamespaceURI(java.lang.String)
    {
        java.lang.String r2, $r3;
        org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase r0;
        org.apache.xmlbeans.impl.store.Cur $r1;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase;

        r2 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase: void checkChanged()>();

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase: org.apache.xmlbeans.impl.store.Cur getStreamCur()>();

        virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Cur: void push()>();

        $z0 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Cur: boolean isContainer()>();

        if $z0 != 0 goto label1;

        virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Cur: boolean toParent()>();

     label1:
        $r3 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Cur: java.lang.String namespaceForPrefix(java.lang.String,boolean)>(r2, 1);

        virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Cur: boolean pop()>();

        return $r3;
    }

    public java.lang.String getPrefix(java.lang.String)
    {
        java.lang.String r2, $r3;
        org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase r0;
        org.apache.xmlbeans.impl.store.Cur $r1;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase;

        r2 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase: void checkChanged()>();

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase: org.apache.xmlbeans.impl.store.Cur getStreamCur()>();

        virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Cur: void push()>();

        $z0 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Cur: boolean isContainer()>();

        if $z0 != 0 goto label1;

        virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Cur: boolean toParent()>();

     label1:
        $r3 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Cur: java.lang.String prefixForNamespace(java.lang.String,java.lang.String,boolean)>(r2, null, 0);

        virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Cur: boolean pop()>();

        return $r3;
    }

    public java.util.Iterator getPrefixes(java.lang.String)
    {
        java.util.Iterator $r5;
        java.util.Collection $r4;
        java.util.HashMap $r1;
        java.lang.String r2, $r3;
        org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase;

        r2 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase: void checkChanged()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        $r3 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Jsr173$XMLStreamReaderBase: java.lang.String getPrefix(java.lang.String)>(r2);

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r3);

        $r4 = virtualinvoke $r1.<java.util.HashMap: java.util.Collection values()>();

        $r5 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

        return $r5;
    }

    protected abstract org.apache.xmlbeans.impl.store.Cur getStreamCur();
}
