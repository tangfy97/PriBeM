public class nu.xom.jaxen.XPathFunctionContext extends nu.xom.jaxen.SimpleFunctionContext
{
    private static nu.xom.jaxen.XPathFunctionContext instance;

    public static nu.xom.jaxen.FunctionContext getInstance()
    {
        nu.xom.jaxen.XPathFunctionContext $r0;

        $r0 = <nu.xom.jaxen.XPathFunctionContext: nu.xom.jaxen.XPathFunctionContext instance>;

        return $r0;
    }

    public void <init>()
    {
        nu.xom.jaxen.XPathFunctionContext r0;

        r0 := @this: nu.xom.jaxen.XPathFunctionContext;

        specialinvoke r0.<nu.xom.jaxen.XPathFunctionContext: void <init>(boolean)>(1);

        return;
    }

    public void <init>(boolean)
    {
        nu.xom.jaxen.XPathFunctionContext r0;
        boolean z0;

        r0 := @this: nu.xom.jaxen.XPathFunctionContext;

        z0 := @parameter0: boolean;

        specialinvoke r0.<nu.xom.jaxen.SimpleFunctionContext: void <init>()>();

        specialinvoke r0.<nu.xom.jaxen.XPathFunctionContext: void registerXPathFunctions()>();

        if z0 == 0 goto label1;

        specialinvoke r0.<nu.xom.jaxen.XPathFunctionContext: void registerXSLTFunctions()>();

        specialinvoke r0.<nu.xom.jaxen.XPathFunctionContext: void registerExtensionFunctions()>();

     label1:
        return;
    }

    private void registerXPathFunctions()
    {
        nu.xom.jaxen.XPathFunctionContext r0;
        nu.xom.jaxen.function.FalseFunction $r6;
        nu.xom.jaxen.function.IdFunction $r8;
        nu.xom.jaxen.function.StartsWithFunction $r19;
        nu.xom.jaxen.function.StringFunction $r20;
        nu.xom.jaxen.function.CeilingFunction $r2;
        nu.xom.jaxen.function.ContainsFunction $r4;
        nu.xom.jaxen.function.LangFunction $r9;
        nu.xom.jaxen.function.SubstringFunction $r24;
        nu.xom.jaxen.function.RoundFunction $r18;
        nu.xom.jaxen.function.BooleanFunction $r1;
        nu.xom.jaxen.function.NameFunction $r12;
        nu.xom.jaxen.function.ConcatFunction $r3;
        nu.xom.jaxen.function.NamespaceUriFunction $r13;
        nu.xom.jaxen.function.PositionFunction $r17;
        nu.xom.jaxen.function.LocalNameFunction $r11;
        nu.xom.jaxen.function.SubstringAfterFunction $r22;
        nu.xom.jaxen.function.NormalizeSpaceFunction $r14;
        nu.xom.jaxen.function.SubstringBeforeFunction $r23;
        nu.xom.jaxen.function.FloorFunction $r7;
        nu.xom.jaxen.function.CountFunction $r5;
        nu.xom.jaxen.function.StringLengthFunction $r21;
        nu.xom.jaxen.function.TranslateFunction $r27;
        nu.xom.jaxen.function.SumFunction $r25;
        nu.xom.jaxen.function.NotFunction $r15;
        nu.xom.jaxen.function.TrueFunction $r26;
        nu.xom.jaxen.function.NumberFunction $r16;
        nu.xom.jaxen.function.LastFunction $r10;

        r0 := @this: nu.xom.jaxen.XPathFunctionContext;

        $r1 = new nu.xom.jaxen.function.BooleanFunction;

        specialinvoke $r1.<nu.xom.jaxen.function.BooleanFunction: void <init>()>();

        virtualinvoke r0.<nu.xom.jaxen.XPathFunctionContext: void registerFunction(java.lang.String,java.lang.String,nu.xom.jaxen.Function)>(null, "boolean", $r1);

        $r2 = new nu.xom.jaxen.function.CeilingFunction;

        specialinvoke $r2.<nu.xom.jaxen.function.CeilingFunction: void <init>()>();

        virtualinvoke r0.<nu.xom.jaxen.XPathFunctionContext: void registerFunction(java.lang.String,java.lang.String,nu.xom.jaxen.Function)>(null, "ceiling", $r2);

        $r3 = new nu.xom.jaxen.function.ConcatFunction;

        specialinvoke $r3.<nu.xom.jaxen.function.ConcatFunction: void <init>()>();

        virtualinvoke r0.<nu.xom.jaxen.XPathFunctionContext: void registerFunction(java.lang.String,java.lang.String,nu.xom.jaxen.Function)>(null, "concat", $r3);

        $r4 = new nu.xom.jaxen.function.ContainsFunction;

        specialinvoke $r4.<nu.xom.jaxen.function.ContainsFunction: void <init>()>();

        virtualinvoke r0.<nu.xom.jaxen.XPathFunctionContext: void registerFunction(java.lang.String,java.lang.String,nu.xom.jaxen.Function)>(null, "contains", $r4);

        $r5 = new nu.xom.jaxen.function.CountFunction;

        specialinvoke $r5.<nu.xom.jaxen.function.CountFunction: void <init>()>();

        virtualinvoke r0.<nu.xom.jaxen.XPathFunctionContext: void registerFunction(java.lang.String,java.lang.String,nu.xom.jaxen.Function)>(null, "count", $r5);

        $r6 = new nu.xom.jaxen.function.FalseFunction;

        specialinvoke $r6.<nu.xom.jaxen.function.FalseFunction: void <init>()>();

        virtualinvoke r0.<nu.xom.jaxen.XPathFunctionContext: void registerFunction(java.lang.String,java.lang.String,nu.xom.jaxen.Function)>(null, "false", $r6);

        $r7 = new nu.xom.jaxen.function.FloorFunction;

        specialinvoke $r7.<nu.xom.jaxen.function.FloorFunction: void <init>()>();

        virtualinvoke r0.<nu.xom.jaxen.XPathFunctionContext: void registerFunction(java.lang.String,java.lang.String,nu.xom.jaxen.Function)>(null, "floor", $r7);

        $r8 = new nu.xom.jaxen.function.IdFunction;

        specialinvoke $r8.<nu.xom.jaxen.function.IdFunction: void <init>()>();

        virtualinvoke r0.<nu.xom.jaxen.XPathFunctionContext: void registerFunction(java.lang.String,java.lang.String,nu.xom.jaxen.Function)>(null, "id", $r8);

        $r9 = new nu.xom.jaxen.function.LangFunction;

        specialinvoke $r9.<nu.xom.jaxen.function.LangFunction: void <init>()>();

        virtualinvoke r0.<nu.xom.jaxen.XPathFunctionContext: void registerFunction(java.lang.String,java.lang.String,nu.xom.jaxen.Function)>(null, "lang", $r9);

        $r10 = new nu.xom.jaxen.function.LastFunction;

        specialinvoke $r10.<nu.xom.jaxen.function.LastFunction: void <init>()>();

        virtualinvoke r0.<nu.xom.jaxen.XPathFunctionContext: void registerFunction(java.lang.String,java.lang.String,nu.xom.jaxen.Function)>(null, "last", $r10);

        $r11 = new nu.xom.jaxen.function.LocalNameFunction;

        specialinvoke $r11.<nu.xom.jaxen.function.LocalNameFunction: void <init>()>();

        virtualinvoke r0.<nu.xom.jaxen.XPathFunctionContext: void registerFunction(java.lang.String,java.lang.String,nu.xom.jaxen.Function)>(null, "local-name", $r11);

        $r12 = new nu.xom.jaxen.function.NameFunction;

        specialinvoke $r12.<nu.xom.jaxen.function.NameFunction: void <init>()>();

        virtualinvoke r0.<nu.xom.jaxen.XPathFunctionContext: void registerFunction(java.lang.String,java.lang.String,nu.xom.jaxen.Function)>(null, "name", $r12);

        $r13 = new nu.xom.jaxen.function.NamespaceUriFunction;

        specialinvoke $r13.<nu.xom.jaxen.function.NamespaceUriFunction: void <init>()>();

        virtualinvoke r0.<nu.xom.jaxen.XPathFunctionContext: void registerFunction(java.lang.String,java.lang.String,nu.xom.jaxen.Function)>(null, "namespace-uri", $r13);

        $r14 = new nu.xom.jaxen.function.NormalizeSpaceFunction;

        specialinvoke $r14.<nu.xom.jaxen.function.NormalizeSpaceFunction: void <init>()>();

        virtualinvoke r0.<nu.xom.jaxen.XPathFunctionContext: void registerFunction(java.lang.String,java.lang.String,nu.xom.jaxen.Function)>(null, "normalize-space", $r14);

        $r15 = new nu.xom.jaxen.function.NotFunction;

        specialinvoke $r15.<nu.xom.jaxen.function.NotFunction: void <init>()>();

        virtualinvoke r0.<nu.xom.jaxen.XPathFunctionContext: void registerFunction(java.lang.String,java.lang.String,nu.xom.jaxen.Function)>(null, "not", $r15);

        $r16 = new nu.xom.jaxen.function.NumberFunction;

        specialinvoke $r16.<nu.xom.jaxen.function.NumberFunction: void <init>()>();

        virtualinvoke r0.<nu.xom.jaxen.XPathFunctionContext: void registerFunction(java.lang.String,java.lang.String,nu.xom.jaxen.Function)>(null, "number", $r16);

        $r17 = new nu.xom.jaxen.function.PositionFunction;

        specialinvoke $r17.<nu.xom.jaxen.function.PositionFunction: void <init>()>();

        virtualinvoke r0.<nu.xom.jaxen.XPathFunctionContext: void registerFunction(java.lang.String,java.lang.String,nu.xom.jaxen.Function)>(null, "position", $r17);

        $r18 = new nu.xom.jaxen.function.RoundFunction;

        specialinvoke $r18.<nu.xom.jaxen.function.RoundFunction: void <init>()>();

        virtualinvoke r0.<nu.xom.jaxen.XPathFunctionContext: void registerFunction(java.lang.String,java.lang.String,nu.xom.jaxen.Function)>(null, "round", $r18);

        $r19 = new nu.xom.jaxen.function.StartsWithFunction;

        specialinvoke $r19.<nu.xom.jaxen.function.StartsWithFunction: void <init>()>();

        virtualinvoke r0.<nu.xom.jaxen.XPathFunctionContext: void registerFunction(java.lang.String,java.lang.String,nu.xom.jaxen.Function)>(null, "starts-with", $r19);

        $r20 = new nu.xom.jaxen.function.StringFunction;

        specialinvoke $r20.<nu.xom.jaxen.function.StringFunction: void <init>()>();

        virtualinvoke r0.<nu.xom.jaxen.XPathFunctionContext: void registerFunction(java.lang.String,java.lang.String,nu.xom.jaxen.Function)>(null, "string", $r20);

        $r21 = new nu.xom.jaxen.function.StringLengthFunction;

        specialinvoke $r21.<nu.xom.jaxen.function.StringLengthFunction: void <init>()>();

        virtualinvoke r0.<nu.xom.jaxen.XPathFunctionContext: void registerFunction(java.lang.String,java.lang.String,nu.xom.jaxen.Function)>(null, "string-length", $r21);

        $r22 = new nu.xom.jaxen.function.SubstringAfterFunction;

        specialinvoke $r22.<nu.xom.jaxen.function.SubstringAfterFunction: void <init>()>();

        virtualinvoke r0.<nu.xom.jaxen.XPathFunctionContext: void registerFunction(java.lang.String,java.lang.String,nu.xom.jaxen.Function)>(null, "substring-after", $r22);

        $r23 = new nu.xom.jaxen.function.SubstringBeforeFunction;

        specialinvoke $r23.<nu.xom.jaxen.function.SubstringBeforeFunction: void <init>()>();

        virtualinvoke r0.<nu.xom.jaxen.XPathFunctionContext: void registerFunction(java.lang.String,java.lang.String,nu.xom.jaxen.Function)>(null, "substring-before", $r23);

        $r24 = new nu.xom.jaxen.function.SubstringFunction;

        specialinvoke $r24.<nu.xom.jaxen.function.SubstringFunction: void <init>()>();

        virtualinvoke r0.<nu.xom.jaxen.XPathFunctionContext: void registerFunction(java.lang.String,java.lang.String,nu.xom.jaxen.Function)>(null, "substring", $r24);

        $r25 = new nu.xom.jaxen.function.SumFunction;

        specialinvoke $r25.<nu.xom.jaxen.function.SumFunction: void <init>()>();

        virtualinvoke r0.<nu.xom.jaxen.XPathFunctionContext: void registerFunction(java.lang.String,java.lang.String,nu.xom.jaxen.Function)>(null, "sum", $r25);

        $r26 = new nu.xom.jaxen.function.TrueFunction;

        specialinvoke $r26.<nu.xom.jaxen.function.TrueFunction: void <init>()>();

        virtualinvoke r0.<nu.xom.jaxen.XPathFunctionContext: void registerFunction(java.lang.String,java.lang.String,nu.xom.jaxen.Function)>(null, "true", $r26);

        $r27 = new nu.xom.jaxen.function.TranslateFunction;

        specialinvoke $r27.<nu.xom.jaxen.function.TranslateFunction: void <init>()>();

        virtualinvoke r0.<nu.xom.jaxen.XPathFunctionContext: void registerFunction(java.lang.String,java.lang.String,nu.xom.jaxen.Function)>(null, "translate", $r27);

        return;
    }

    private void registerXSLTFunctions()
    {
        nu.xom.jaxen.XPathFunctionContext r0;
        nu.xom.jaxen.function.xslt.DocumentFunction $r1;

        r0 := @this: nu.xom.jaxen.XPathFunctionContext;

        $r1 = new nu.xom.jaxen.function.xslt.DocumentFunction;

        specialinvoke $r1.<nu.xom.jaxen.function.xslt.DocumentFunction: void <init>()>();

        virtualinvoke r0.<nu.xom.jaxen.XPathFunctionContext: void registerFunction(java.lang.String,java.lang.String,nu.xom.jaxen.Function)>(null, "document", $r1);

        return;
    }

    private void registerExtensionFunctions()
    {
        nu.xom.jaxen.XPathFunctionContext r0;
        nu.xom.jaxen.function.ext.EvaluateFunction $r1;
        nu.xom.jaxen.function.ext.UpperFunction $r3;
        nu.xom.jaxen.function.ext.LowerFunction $r2;
        nu.xom.jaxen.function.ext.EndsWithFunction $r4;

        r0 := @this: nu.xom.jaxen.XPathFunctionContext;

        $r1 = new nu.xom.jaxen.function.ext.EvaluateFunction;

        specialinvoke $r1.<nu.xom.jaxen.function.ext.EvaluateFunction: void <init>()>();

        virtualinvoke r0.<nu.xom.jaxen.XPathFunctionContext: void registerFunction(java.lang.String,java.lang.String,nu.xom.jaxen.Function)>(null, "evaluate", $r1);

        $r2 = new nu.xom.jaxen.function.ext.LowerFunction;

        specialinvoke $r2.<nu.xom.jaxen.function.ext.LowerFunction: void <init>()>();

        virtualinvoke r0.<nu.xom.jaxen.XPathFunctionContext: void registerFunction(java.lang.String,java.lang.String,nu.xom.jaxen.Function)>(null, "lower-case", $r2);

        $r3 = new nu.xom.jaxen.function.ext.UpperFunction;

        specialinvoke $r3.<nu.xom.jaxen.function.ext.UpperFunction: void <init>()>();

        virtualinvoke r0.<nu.xom.jaxen.XPathFunctionContext: void registerFunction(java.lang.String,java.lang.String,nu.xom.jaxen.Function)>(null, "upper-case", $r3);

        $r4 = new nu.xom.jaxen.function.ext.EndsWithFunction;

        specialinvoke $r4.<nu.xom.jaxen.function.ext.EndsWithFunction: void <init>()>();

        virtualinvoke r0.<nu.xom.jaxen.XPathFunctionContext: void registerFunction(java.lang.String,java.lang.String,nu.xom.jaxen.Function)>(null, "ends-with", $r4);

        return;
    }

    static void <clinit>()
    {
        nu.xom.jaxen.XPathFunctionContext $r0;

        $r0 = new nu.xom.jaxen.XPathFunctionContext;

        specialinvoke $r0.<nu.xom.jaxen.XPathFunctionContext: void <init>()>();

        <nu.xom.jaxen.XPathFunctionContext: nu.xom.jaxen.XPathFunctionContext instance> = $r0;

        return;
    }
}
