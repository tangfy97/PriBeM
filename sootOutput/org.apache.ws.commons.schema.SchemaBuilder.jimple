public class org.apache.ws.commons.schema.SchemaBuilder extends java.lang.Object
{
    static java.lang.ThreadLocal resolvedSchemas;
    private static final java.util.Set RESERVED_ATTRIBUTES;
    private static final java.lang.String[] RESERVED_ATTRIBUTES_LIST;
    org.apache.ws.commons.schema.XmlSchemaCollection collection;
    org.w3c.dom.Document currentDocument;
    org.apache.ws.commons.schema.XmlSchema currentSchema;
    javax.xml.parsers.DocumentBuilderFactory docFac;
    private final org.apache.ws.commons.schema.utils.TargetNamespaceValidator currentValidator;
    private org.apache.ws.commons.schema.extensions.ExtensionRegistry extReg;

    void <init>(org.apache.ws.commons.schema.XmlSchemaCollection, org.apache.ws.commons.schema.utils.TargetNamespaceValidator)
    {
        org.apache.ws.commons.schema.XmlSchemaCollection r1;
        org.apache.ws.commons.schema.utils.TargetNamespaceValidator r2;
        org.apache.ws.commons.schema.SchemaBuilder r0;
        org.apache.ws.commons.schema.extensions.ExtensionRegistry $r3, $r5;
        org.apache.ws.commons.schema.XmlSchema $r4;

        r0 := @this: org.apache.ws.commons.schema.SchemaBuilder;

        r1 := @parameter0: org.apache.ws.commons.schema.XmlSchemaCollection;

        r2 := @parameter1: org.apache.ws.commons.schema.utils.TargetNamespaceValidator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaCollection collection> = r1;

        r0.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.utils.TargetNamespaceValidator currentValidator> = r2;

        $r3 = virtualinvoke r1.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.extensions.ExtensionRegistry getExtReg()>();

        if $r3 == null goto label1;

        $r5 = virtualinvoke r1.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.extensions.ExtensionRegistry getExtReg()>();

        r0.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.extensions.ExtensionRegistry extReg> = $r5;

     label1:
        $r4 = new org.apache.ws.commons.schema.XmlSchema;

        specialinvoke $r4.<org.apache.ws.commons.schema.XmlSchema: void <init>()>();

        r0.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchema currentSchema> = $r4;

        return;
    }

    public static void clearCache()
    {
        java.lang.ThreadLocal $r0, $r3;
        java.util.Map r2;
        java.lang.Object $r1;

        $r0 = <org.apache.ws.commons.schema.SchemaBuilder: java.lang.ThreadLocal resolvedSchemas>;

        $r1 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>();

        r2 = (java.util.Map) $r1;

        if r2 == null goto label1;

        interfaceinvoke r2.<java.util.Map: void clear()>();

        $r3 = <org.apache.ws.commons.schema.SchemaBuilder: java.lang.ThreadLocal resolvedSchemas>;

        virtualinvoke $r3.<java.lang.ThreadLocal: void remove()>();

     label1:
        return;
    }

    public static void initCache()
    {
        java.lang.ThreadLocal $r0, $r4;
        java.util.Map $r3, r5;
        java.lang.Object $r1;
        java.util.HashMap $r2;

        $r0 = <org.apache.ws.commons.schema.SchemaBuilder: java.lang.ThreadLocal resolvedSchemas>;

        $r1 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>();

        r5 = (java.util.Map) $r1;

        if r5 != null goto label1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        $r3 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r2);

        $r4 = <org.apache.ws.commons.schema.SchemaBuilder: java.lang.ThreadLocal resolvedSchemas>;

        virtualinvoke $r4.<java.lang.ThreadLocal: void set(java.lang.Object)>($r3);

     label1:
        return;
    }

    public org.apache.ws.commons.schema.extensions.ExtensionRegistry getExtReg()
    {
        org.apache.ws.commons.schema.extensions.ExtensionRegistry $r1;
        org.apache.ws.commons.schema.SchemaBuilder r0;

        r0 := @this: org.apache.ws.commons.schema.SchemaBuilder;

        $r1 = r0.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.extensions.ExtensionRegistry extReg>;

        return $r1;
    }

    public void setExtReg(org.apache.ws.commons.schema.extensions.ExtensionRegistry)
    {
        org.apache.ws.commons.schema.extensions.ExtensionRegistry r1;
        org.apache.ws.commons.schema.SchemaBuilder r0;

        r0 := @this: org.apache.ws.commons.schema.SchemaBuilder;

        r1 := @parameter0: org.apache.ws.commons.schema.extensions.ExtensionRegistry;

        r0.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.extensions.ExtensionRegistry extReg> = r1;

        return;
    }

    org.apache.ws.commons.schema.XmlSchema build(org.w3c.dom.Document, java.lang.String)
    {
        org.w3c.dom.Element $r1;
        org.apache.ws.commons.schema.SchemaBuilder r2;
        org.w3c.dom.Document r0;
        org.apache.ws.commons.schema.XmlSchema $r4;
        java.lang.String r3, $r5;

        r2 := @this: org.apache.ws.commons.schema.SchemaBuilder;

        r0 := @parameter0: org.w3c.dom.Document;

        r3 := @parameter1: java.lang.String;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Document: org.w3c.dom.Element getDocumentElement()>();

        $r4 = virtualinvoke r2.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchema handleXmlSchemaElement(org.w3c.dom.Element,java.lang.String)>($r1, r3);

        $r5 = staticinvoke <org.apache.ws.commons.schema.utils.DOMUtil: java.lang.String getInputEncoding(org.w3c.dom.Document)>(r0);

        virtualinvoke $r4.<org.apache.ws.commons.schema.XmlSchema: void setInputEncoding(java.lang.String)>($r5);

        return $r4;
    }

    org.apache.ws.commons.schema.XmlSchemaDerivationMethod getDerivation(org.w3c.dom.Element, java.lang.String)
    {
        org.apache.ws.commons.schema.XmlSchemaDerivationMethod $r2, $r6;
        org.w3c.dom.Element r0;
        org.apache.ws.commons.schema.SchemaBuilder r7;
        java.lang.String r1, $r3, $r4, $r5;
        boolean $z0, $z1;

        r7 := @this: org.apache.ws.commons.schema.SchemaBuilder;

        r0 := @parameter0: org.w3c.dom.Element;

        r1 := @parameter1: java.lang.String;

        $z0 = interfaceinvoke r0.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>(r1);

        if $z0 == 0 goto label1;

        $r3 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>(r1);

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z1 != 0 goto label1;

        $r4 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String trim()>();

        $r6 = staticinvoke <org.apache.ws.commons.schema.XmlSchemaDerivationMethod: org.apache.ws.commons.schema.XmlSchemaDerivationMethod schemaValueOf(java.lang.String)>($r5);

        return $r6;

     label1:
        $r2 = <org.apache.ws.commons.schema.XmlSchemaDerivationMethod: org.apache.ws.commons.schema.XmlSchemaDerivationMethod NONE>;

        return $r2;
    }

    java.lang.String getEnumString(org.w3c.dom.Element, java.lang.String)
    {
        org.w3c.dom.Element r0;
        org.apache.ws.commons.schema.SchemaBuilder r4;
        java.lang.String r1, $r2, $r3;
        boolean $z0;

        r4 := @this: org.apache.ws.commons.schema.SchemaBuilder;

        r0 := @parameter0: org.w3c.dom.Element;

        r1 := @parameter1: java.lang.String;

        $z0 = interfaceinvoke r0.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>(r1);

        if $z0 == 0 goto label1;

        $r2 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>(r1);

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        return $r3;

     label1:
        return "none";
    }

    org.apache.ws.commons.schema.XmlSchemaForm getFormDefault(org.w3c.dom.Element, java.lang.String)
    {
        org.apache.ws.commons.schema.XmlSchemaForm $r3, $r5;
        org.w3c.dom.Element r0;
        org.apache.ws.commons.schema.SchemaBuilder r6;
        java.lang.String r1, $r4;
        org.w3c.dom.Attr $r2;

        r6 := @this: org.apache.ws.commons.schema.SchemaBuilder;

        r0 := @parameter0: org.w3c.dom.Element;

        r1 := @parameter1: java.lang.String;

        $r2 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.Attr getAttributeNode(java.lang.String)>(r1);

        if $r2 == null goto label1;

        $r4 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>(r1);

        $r5 = staticinvoke <org.apache.ws.commons.schema.XmlSchemaForm: org.apache.ws.commons.schema.XmlSchemaForm schemaValueOf(java.lang.String)>($r4);

        return $r5;

     label1:
        $r3 = <org.apache.ws.commons.schema.XmlSchemaForm: org.apache.ws.commons.schema.XmlSchemaForm UNQUALIFIED>;

        return $r3;
    }

    long getMaxOccurs(org.w3c.dom.Element)
    {
        long $l0;
        java.lang.NumberFormatException $r4;
        org.w3c.dom.Attr $r1;
        org.w3c.dom.Element r0;
        org.apache.ws.commons.schema.SchemaBuilder r5;
        java.lang.String $r2, $r3;
        boolean $z0;

        r5 := @this: org.apache.ws.commons.schema.SchemaBuilder;

        r0 := @parameter0: org.w3c.dom.Element;

     label1:
        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.Attr getAttributeNode(java.lang.String)>("maxOccurs");

        if $r1 == null goto label5;

        $r2 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("maxOccurs");

        $r3 = "unbounded";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label3;

     label2:
        return 9223372036854775807L;

     label3:
        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r2);

     label4:
        return $l0;

     label5:
        return 1L;

     label6:
        $r4 := @caughtexception;

        return 1L;

        catch java.lang.NumberFormatException from label1 to label2 with label6;
        catch java.lang.NumberFormatException from label3 to label4 with label6;
    }

    long getMinOccurs(org.w3c.dom.Element)
    {
        long $l0;
        java.lang.NumberFormatException $r4;
        org.w3c.dom.Attr $r1;
        org.w3c.dom.Element r0;
        org.apache.ws.commons.schema.SchemaBuilder r5;
        java.lang.String $r2, $r3;
        boolean $z0;

        r5 := @this: org.apache.ws.commons.schema.SchemaBuilder;

        r0 := @parameter0: org.w3c.dom.Element;

     label1:
        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.Attr getAttributeNode(java.lang.String)>("minOccurs");

        if $r1 == null goto label5;

        $r2 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("minOccurs");

        $r3 = "unbounded";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label3;

     label2:
        return 9223372036854775807L;

     label3:
        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r2);

     label4:
        return $l0;

     label5:
        return 1L;

     label6:
        $r4 := @caughtexception;

        return 1L;

        catch java.lang.NumberFormatException from label1 to label2 with label6;
        catch java.lang.NumberFormatException from label3 to label4 with label6;
    }

    org.apache.ws.commons.schema.XmlSchemaAnnotation handleAnnotation(org.w3c.dom.Element)
    {
        org.apache.ws.commons.schema.XmlSchemaDocumentation $r4;
        org.apache.ws.commons.schema.XmlSchemaAppInfo $r5;
        org.apache.ws.commons.schema.XmlSchemaAnnotation $r0;
        java.util.List $r1;
        org.w3c.dom.Element r2, r6, r7;
        org.apache.ws.commons.schema.SchemaBuilder r3;

        r3 := @this: org.apache.ws.commons.schema.SchemaBuilder;

        r2 := @parameter0: org.w3c.dom.Element;

        $r0 = new org.apache.ws.commons.schema.XmlSchemaAnnotation;

        specialinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaAnnotation: void <init>()>();

        $r1 = virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaAnnotation: java.util.List getItems()>();

        r6 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getFirstChildElementNS(org.w3c.dom.Node,java.lang.String,java.lang.String)>(r2, "http://www.w3.org/2001/XMLSchema", "appinfo");

     label1:
        if r6 == null goto label3;

        $r5 = virtualinvoke r3.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaAppInfo handleAppInfo(org.w3c.dom.Element)>(r6);

        if $r5 == null goto label2;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r5);

     label2:
        r6 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getNextSiblingElementNS(org.w3c.dom.Node,java.lang.String,java.lang.String)>(r6, "http://www.w3.org/2001/XMLSchema", "appinfo");

        goto label1;

     label3:
        r7 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getFirstChildElementNS(org.w3c.dom.Node,java.lang.String,java.lang.String)>(r2, "http://www.w3.org/2001/XMLSchema", "documentation");

     label4:
        if r7 == null goto label6;

        $r4 = virtualinvoke r3.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaDocumentation handleDocumentation(org.w3c.dom.Element)>(r7);

        if $r4 == null goto label5;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r4);

     label5:
        r7 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getNextSiblingElementNS(org.w3c.dom.Node,java.lang.String,java.lang.String)>(r7, "http://www.w3.org/2001/XMLSchema", "documentation");

        goto label4;

     label6:
        specialinvoke r3.<org.apache.ws.commons.schema.SchemaBuilder: void processExtensibilityComponents(org.apache.ws.commons.schema.XmlSchemaObject,org.w3c.dom.Element,boolean)>($r0, r2, 1);

        return $r0;
    }

    org.apache.ws.commons.schema.XmlSchemaAppInfo handleAppInfo(org.w3c.dom.Element)
    {
        org.w3c.dom.Element r2;
        org.apache.ws.commons.schema.SchemaBuilder r3;
        org.apache.ws.commons.schema.XmlSchemaAppInfo $r0;
        int $i0;
        java.lang.String $r4;
        org.apache.ws.commons.schema.DocumentFragmentNodeList $r1;
        boolean $z0;

        r3 := @this: org.apache.ws.commons.schema.SchemaBuilder;

        r2 := @parameter0: org.w3c.dom.Element;

        $r0 = new org.apache.ws.commons.schema.XmlSchemaAppInfo;

        specialinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaAppInfo: void <init>()>();

        $r1 = new org.apache.ws.commons.schema.DocumentFragmentNodeList;

        specialinvoke $r1.<org.apache.ws.commons.schema.DocumentFragmentNodeList: void <init>(org.w3c.dom.Node)>(r2);

        $z0 = interfaceinvoke r2.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("source");

        if $z0 != 0 goto label1;

        $i0 = interfaceinvoke $r1.<org.w3c.dom.NodeList: int getLength()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $r4 = specialinvoke r3.<org.apache.ws.commons.schema.SchemaBuilder: java.lang.String getAttribute(org.w3c.dom.Element,java.lang.String)>(r2, "source");

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaAppInfo: void setSource(java.lang.String)>($r4);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaAppInfo: void setMarkup(org.w3c.dom.NodeList)>($r1);

        return $r0;
    }

    org.apache.ws.commons.schema.XmlSchemaComplexType handleComplexType(org.apache.ws.commons.schema.XmlSchema, org.w3c.dom.Element, org.w3c.dom.Element, boolean)
    {
        org.apache.ws.commons.schema.XmlSchemaDerivationMethod $r7, $r9;
        org.apache.ws.commons.schema.XmlSchemaSequence $r34;
        org.apache.ws.commons.schema.XmlSchemaComplexType $r0;
        org.apache.ws.commons.schema.XmlSchemaAll $r32;
        org.apache.ws.commons.schema.SchemaBuilder r3;
        org.apache.ws.commons.schema.XmlSchemaGroupParticle $r26, $r27;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17;
        org.apache.ws.commons.schema.XmlSchemaGroupRef $r25;
        org.apache.ws.commons.schema.XmlSchemaAttributeGroupRef $r29;
        java.util.List $r28, $r30;
        org.apache.ws.commons.schema.XmlSchemaSimpleContent $r24;
        org.apache.ws.commons.schema.XmlSchemaChoice $r33;
        org.apache.ws.commons.schema.XmlSchemaComplexContent $r23;
        org.apache.ws.commons.schema.XmlSchemaAttribute $r31;
        org.apache.ws.commons.schema.XmlSchemaAnyAttribute $r21;
        org.apache.ws.commons.schema.XmlSchema r1;
        java.lang.String $r4, $r5, $r6, $r8, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r35;
        org.apache.ws.commons.schema.XmlSchemaAnnotation $r22;
        org.w3c.dom.Element r2, r20, r36;

        r3 := @this: org.apache.ws.commons.schema.SchemaBuilder;

        r1 := @parameter0: org.apache.ws.commons.schema.XmlSchema;

        r2 := @parameter1: org.w3c.dom.Element;

        r20 := @parameter2: org.w3c.dom.Element;

        z0 := @parameter3: boolean;

        $r0 = new org.apache.ws.commons.schema.XmlSchemaComplexType;

        specialinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaComplexType: void <init>(org.apache.ws.commons.schema.XmlSchema,boolean)>(r1, z0);

        $z1 = interfaceinvoke r2.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("name");

        if $z1 == 0 goto label01;

        $r35 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("name");

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaComplexType: void setName(java.lang.String)>($r35);

     label01:
        r36 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getFirstChildElementNS(org.w3c.dom.Node,java.lang.String)>(r2, "http://www.w3.org/2001/XMLSchema");

     label02:
        if r36 == null goto label15;

        $r10 = interfaceinvoke r36.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z7 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("sequence");

        if $z7 == 0 goto label03;

        $r34 = specialinvoke r3.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaSequence handleSequence(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element)>(r1, r36, r20);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaComplexType: void setParticle(org.apache.ws.commons.schema.XmlSchemaParticle)>($r34);

        goto label14;

     label03:
        $r11 = interfaceinvoke r36.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z8 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("choice");

        if $z8 == 0 goto label04;

        $r33 = specialinvoke r3.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaChoice handleChoice(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element)>(r1, r36, r20);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaComplexType: void setParticle(org.apache.ws.commons.schema.XmlSchemaParticle)>($r33);

        goto label14;

     label04:
        $r12 = interfaceinvoke r36.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z9 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>("all");

        if $z9 == 0 goto label05;

        $r32 = specialinvoke r3.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaAll handleAll(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element)>(r1, r36, r20);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaComplexType: void setParticle(org.apache.ws.commons.schema.XmlSchemaParticle)>($r32);

        goto label14;

     label05:
        $r13 = interfaceinvoke r36.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z10 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>("attribute");

        if $z10 == 0 goto label06;

        $r30 = virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaComplexType: java.util.List getAttributes()>();

        $r31 = specialinvoke r3.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaAttribute handleAttribute(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element)>(r1, r36, r20);

        interfaceinvoke $r30.<java.util.List: boolean add(java.lang.Object)>($r31);

        goto label14;

     label06:
        $r14 = interfaceinvoke r36.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z11 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>("attributeGroup");

        if $z11 == 0 goto label07;

        $r28 = virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaComplexType: java.util.List getAttributes()>();

        $r29 = specialinvoke r3.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaAttributeGroupRef handleAttributeGroupRef(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element)>(r1, r36);

        interfaceinvoke $r28.<java.util.List: boolean add(java.lang.Object)>($r29);

        goto label14;

     label07:
        $r15 = interfaceinvoke r36.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z12 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>("group");

        if $z12 == 0 goto label10;

        $r25 = specialinvoke r3.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaGroupRef handleGroupRef(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element)>(r1, r36, r20);

        $r26 = virtualinvoke $r25.<org.apache.ws.commons.schema.XmlSchemaGroupRef: org.apache.ws.commons.schema.XmlSchemaGroupParticle getParticle()>();

        if $r26 != null goto label08;

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaComplexType: void setParticle(org.apache.ws.commons.schema.XmlSchemaParticle)>($r25);

        goto label09;

     label08:
        $r27 = virtualinvoke $r25.<org.apache.ws.commons.schema.XmlSchemaGroupRef: org.apache.ws.commons.schema.XmlSchemaGroupParticle getParticle()>();

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaComplexType: void setParticle(org.apache.ws.commons.schema.XmlSchemaParticle)>($r27);

     label09:
        goto label14;

     label10:
        $r16 = interfaceinvoke r36.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z13 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>("simpleContent");

        if $z13 == 0 goto label11;

        $r24 = specialinvoke r3.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaSimpleContent handleSimpleContent(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element)>(r1, r36, r20);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaComplexType: void setContentModel(org.apache.ws.commons.schema.XmlSchemaContentModel)>($r24);

        goto label14;

     label11:
        $r17 = interfaceinvoke r36.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z14 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>("complexContent");

        if $z14 == 0 goto label12;

        $r23 = specialinvoke r3.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaComplexContent handleComplexContent(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element)>(r1, r36, r20);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaComplexType: void setContentModel(org.apache.ws.commons.schema.XmlSchemaContentModel)>($r23);

        goto label14;

     label12:
        $r18 = interfaceinvoke r36.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z15 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>("annotation");

        if $z15 == 0 goto label13;

        $r22 = virtualinvoke r3.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaAnnotation handleAnnotation(org.w3c.dom.Element)>(r36);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaComplexType: void setAnnotation(org.apache.ws.commons.schema.XmlSchemaAnnotation)>($r22);

        goto label14;

     label13:
        $r19 = interfaceinvoke r36.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z16 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>("anyAttribute");

        if $z16 == 0 goto label14;

        $r21 = specialinvoke r3.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaAnyAttribute handleAnyAttribute(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element)>(r1, r36, r20);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaComplexType: void setAnyAttribute(org.apache.ws.commons.schema.XmlSchemaAnyAttribute)>($r21);

     label14:
        r36 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getNextSiblingElementNS(org.w3c.dom.Node,java.lang.String)>(r36, "http://www.w3.org/2001/XMLSchema");

        goto label02;

     label15:
        $z2 = interfaceinvoke r2.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("block");

        if $z2 == 0 goto label16;

        $r8 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("block");

        $r9 = staticinvoke <org.apache.ws.commons.schema.XmlSchemaDerivationMethod: org.apache.ws.commons.schema.XmlSchemaDerivationMethod schemaValueOf(java.lang.String)>($r8);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaComplexType: void setBlock(org.apache.ws.commons.schema.XmlSchemaDerivationMethod)>($r9);

     label16:
        $z3 = interfaceinvoke r2.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("final");

        if $z3 == 0 goto label17;

        $r6 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("final");

        $r7 = staticinvoke <org.apache.ws.commons.schema.XmlSchemaDerivationMethod: org.apache.ws.commons.schema.XmlSchemaDerivationMethod schemaValueOf(java.lang.String)>($r6);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaComplexType: void setFinal(org.apache.ws.commons.schema.XmlSchemaDerivationMethod)>($r7);

     label17:
        $z4 = interfaceinvoke r2.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("abstract");

        if $z4 == 0 goto label19;

        $r5 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("abstract");

        $z6 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("true");

        if $z6 == 0 goto label18;

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaComplexType: void setAbstract(boolean)>(1);

        goto label19;

     label18:
        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaComplexType: void setAbstract(boolean)>(0);

     label19:
        $z17 = interfaceinvoke r2.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("mixed");

        if $z17 == 0 goto label21;

        $r4 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("mixed");

        $z5 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("true");

        if $z5 == 0 goto label20;

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaComplexType: void setMixed(boolean)>(1);

        goto label21;

     label20:
        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaComplexType: void setMixed(boolean)>(0);

     label21:
        specialinvoke r3.<org.apache.ws.commons.schema.SchemaBuilder: void processExtensibilityComponents(org.apache.ws.commons.schema.XmlSchemaObject,org.w3c.dom.Element,boolean)>($r0, r2, 1);

        return $r0;
    }

    org.apache.ws.commons.schema.XmlSchemaDocumentation handleDocumentation(org.w3c.dom.Element)
    {
        org.apache.ws.commons.schema.XmlSchemaDocumentation $r0;
        org.apache.ws.commons.schema.DocumentFragmentNodeList $r6;
        java.util.List $r3;
        org.w3c.dom.Element r2;
        org.apache.ws.commons.schema.SchemaBuilder r1;
        java.lang.String $r4, $r5;
        boolean $z0, $z1;

        r1 := @this: org.apache.ws.commons.schema.SchemaBuilder;

        r2 := @parameter0: org.w3c.dom.Element;

        $r0 = new org.apache.ws.commons.schema.XmlSchemaDocumentation;

        specialinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaDocumentation: void <init>()>();

        $r3 = specialinvoke r1.<org.apache.ws.commons.schema.SchemaBuilder: java.util.List getChildren(org.w3c.dom.Element)>(r2);

        $z0 = interfaceinvoke r2.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("source");

        if $z0 != 0 goto label1;

        $z1 = interfaceinvoke r2.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("xml:lang");

        if $z1 != 0 goto label1;

        if $r3 != null goto label1;

        return null;

     label1:
        $r4 = specialinvoke r1.<org.apache.ws.commons.schema.SchemaBuilder: java.lang.String getAttribute(org.w3c.dom.Element,java.lang.String)>(r2, "source");

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaDocumentation: void setSource(java.lang.String)>($r4);

        $r5 = specialinvoke r1.<org.apache.ws.commons.schema.SchemaBuilder: java.lang.String getAttribute(org.w3c.dom.Element,java.lang.String)>(r2, "xml:lang");

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaDocumentation: void setLanguage(java.lang.String)>($r5);

        $r6 = new org.apache.ws.commons.schema.DocumentFragmentNodeList;

        specialinvoke $r6.<org.apache.ws.commons.schema.DocumentFragmentNodeList: void <init>(org.w3c.dom.Node)>(r2);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaDocumentation: void setMarkup(org.w3c.dom.NodeList)>($r6);

        return $r0;
    }

    org.apache.ws.commons.schema.XmlSchemaElement handleElement(org.apache.ws.commons.schema.XmlSchema, org.w3c.dom.Element, org.w3c.dom.Element, boolean)
    {
        org.apache.ws.commons.schema.XmlSchemaForm $r4, $r5;
        org.apache.ws.commons.schema.XmlSchemaDerivationMethod $r17, $r19;
        org.apache.ws.commons.schema.XmlSchemaComplexType $r31;
        org.apache.ws.commons.schema.XmlSchemaElement $r0;
        org.apache.ws.commons.schema.SchemaBuilder r6;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        java.util.List $r22, $r25, $r28;
        org.apache.ws.commons.schema.XmlSchemaSimpleType $r32;
        javax.xml.namespace.QName $r12, $r27, $r33;
        org.apache.ws.commons.schema.XmlSchemaIdentityConstraint $r23, $r24, $r29;
        long $l0, $l1;
        org.w3c.dom.Attr $r3;
        org.apache.ws.commons.schema.XmlSchema r1;
        java.lang.Boolean $r14, $r21;
        java.lang.String $r11, $r13, $r15, $r16, $r18, $r20, $r26, $r34;
        org.w3c.dom.Element r2, $r7, $r8, $r9, $r10, r30, $r35, r36, r37, r39;
        org.apache.ws.commons.schema.XmlSchemaKeyref r38;

        r6 := @this: org.apache.ws.commons.schema.SchemaBuilder;

        r1 := @parameter0: org.apache.ws.commons.schema.XmlSchema;

        r2 := @parameter1: org.w3c.dom.Element;

        r30 := @parameter2: org.w3c.dom.Element;

        z0 := @parameter3: boolean;

        $r0 = new org.apache.ws.commons.schema.XmlSchemaElement;

        specialinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaElement: void <init>(org.apache.ws.commons.schema.XmlSchema,boolean)>(r1, z0);

        $r3 = interfaceinvoke r2.<org.w3c.dom.Element: org.w3c.dom.Attr getAttributeNode(java.lang.String)>("name");

        if $r3 == null goto label01;

        $r34 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("name");

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaElement: void setName(java.lang.String)>($r34);

     label01:
        $r4 = virtualinvoke r1.<org.apache.ws.commons.schema.XmlSchema: org.apache.ws.commons.schema.XmlSchemaForm getElementFormDefault()>();

        $r5 = <org.apache.ws.commons.schema.XmlSchemaForm: org.apache.ws.commons.schema.XmlSchemaForm QUALIFIED>;

        if $r4 != $r5 goto label02;

        $z13 = 1;

        goto label03;

     label02:
        $z13 = 0;

     label03:
        $z1 = specialinvoke r6.<org.apache.ws.commons.schema.SchemaBuilder: boolean handleElementForm(org.w3c.dom.Element,org.apache.ws.commons.schema.XmlSchemaElement,boolean)>(r2, $r0, $z13);

        specialinvoke r6.<org.apache.ws.commons.schema.SchemaBuilder: void handleElementName(boolean,org.apache.ws.commons.schema.XmlSchemaElement,boolean)>(z0, $r0, $z1);

        specialinvoke r6.<org.apache.ws.commons.schema.SchemaBuilder: void handleElementAnnotation(org.w3c.dom.Element,org.apache.ws.commons.schema.XmlSchemaElement)>(r2, $r0);

        specialinvoke r6.<org.apache.ws.commons.schema.SchemaBuilder: void handleElementGlobalType(org.w3c.dom.Element,org.apache.ws.commons.schema.XmlSchemaElement)>(r2, $r0);

        $r7 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getFirstChildElementNS(org.w3c.dom.Node,java.lang.String,java.lang.String)>(r2, "http://www.w3.org/2001/XMLSchema", "simpleType");

        if $r7 == null goto label04;

        $r32 = virtualinvoke r6.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaSimpleType handleSimpleType(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element,boolean)>(r1, $r7, r30, 0);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaElement: void setSchemaType(org.apache.ws.commons.schema.XmlSchemaType)>($r32);

        $r33 = virtualinvoke $r32.<org.apache.ws.commons.schema.XmlSchemaSimpleType: javax.xml.namespace.QName getQName()>();

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaElement: void setSchemaTypeName(javax.xml.namespace.QName)>($r33);

        goto label05;

     label04:
        $r8 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getFirstChildElementNS(org.w3c.dom.Node,java.lang.String,java.lang.String)>(r2, "http://www.w3.org/2001/XMLSchema", "complexType");

        if $r8 == null goto label05;

        $r31 = virtualinvoke r6.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaComplexType handleComplexType(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element,boolean)>(r1, $r8, r30, 0);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaElement: void setSchemaType(org.apache.ws.commons.schema.XmlSchemaType)>($r31);

     label05:
        $r35 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getFirstChildElementNS(org.w3c.dom.Node,java.lang.String,java.lang.String)>(r2, "http://www.w3.org/2001/XMLSchema", "key");

        r36 = $r35;

        if $r35 == null goto label07;

     label06:
        if r36 == null goto label07;

        $r28 = virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaElement: java.util.List getConstraints()>();

        $r29 = specialinvoke r6.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaIdentityConstraint handleConstraint(org.w3c.dom.Element,java.lang.Class)>(r36, class "Lorg/apache/ws/commons/schema/XmlSchemaKey;");

        interfaceinvoke $r28.<java.util.List: boolean add(java.lang.Object)>($r29);

        r36 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getNextSiblingElementNS(org.w3c.dom.Node,java.lang.String,java.lang.String)>(r36, "http://www.w3.org/2001/XMLSchema", "key");

        goto label06;

     label07:
        $r9 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getFirstChildElementNS(org.w3c.dom.Node,java.lang.String,java.lang.String)>(r2, "http://www.w3.org/2001/XMLSchema", "keyref");

        r37 = $r9;

        if $r9 == null goto label10;

     label08:
        if r37 == null goto label10;

        $r24 = specialinvoke r6.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaIdentityConstraint handleConstraint(org.w3c.dom.Element,java.lang.Class)>(r37, class "Lorg/apache/ws/commons/schema/XmlSchemaKeyref;");

        r38 = (org.apache.ws.commons.schema.XmlSchemaKeyref) $r24;

        $z12 = interfaceinvoke r37.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("refer");

        if $z12 == 0 goto label09;

        $r26 = interfaceinvoke r37.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("refer");

        $r27 = specialinvoke r6.<org.apache.ws.commons.schema.SchemaBuilder: javax.xml.namespace.QName getRefQName(java.lang.String,org.w3c.dom.Node)>($r26, r2);

        r38.<org.apache.ws.commons.schema.XmlSchemaKeyref: javax.xml.namespace.QName refer> = $r27;

     label09:
        $r25 = virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaElement: java.util.List getConstraints()>();

        interfaceinvoke $r25.<java.util.List: boolean add(java.lang.Object)>(r38);

        r37 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getNextSiblingElementNS(org.w3c.dom.Node,java.lang.String,java.lang.String)>(r37, "http://www.w3.org/2001/XMLSchema", "keyref");

        goto label08;

     label10:
        $r10 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getFirstChildElementNS(org.w3c.dom.Node,java.lang.String,java.lang.String)>(r2, "http://www.w3.org/2001/XMLSchema", "unique");

        r39 = $r10;

        if $r10 == null goto label12;

     label11:
        if r39 == null goto label12;

        $r22 = virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaElement: java.util.List getConstraints()>();

        $r23 = specialinvoke r6.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaIdentityConstraint handleConstraint(org.w3c.dom.Element,java.lang.Class)>(r39, class "Lorg/apache/ws/commons/schema/XmlSchemaUnique;");

        interfaceinvoke $r22.<java.util.List: boolean add(java.lang.Object)>($r23);

        r39 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getNextSiblingElementNS(org.w3c.dom.Node,java.lang.String,java.lang.String)>(r39, "http://www.w3.org/2001/XMLSchema", "unique");

        goto label11;

     label12:
        $z2 = interfaceinvoke r2.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("abstract");

        if $z2 == 0 goto label13;

        $r20 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("abstract");

        $r21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r20);

        $z11 = virtualinvoke $r21.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaElement: void setAbstractElement(boolean)>($z11);

     label13:
        $z3 = interfaceinvoke r2.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("block");

        if $z3 == 0 goto label14;

        $r19 = virtualinvoke r6.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaDerivationMethod getDerivation(org.w3c.dom.Element,java.lang.String)>(r2, "block");

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaElement: void setBlock(org.apache.ws.commons.schema.XmlSchemaDerivationMethod)>($r19);

     label14:
        $z4 = interfaceinvoke r2.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("default");

        if $z4 == 0 goto label15;

        $r18 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("default");

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaElement: void setDefaultValue(java.lang.String)>($r18);

     label15:
        $z5 = interfaceinvoke r2.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("final");

        if $z5 == 0 goto label16;

        $r17 = virtualinvoke r6.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaDerivationMethod getDerivation(org.w3c.dom.Element,java.lang.String)>(r2, "final");

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaElement: void setFinalDerivation(org.apache.ws.commons.schema.XmlSchemaDerivationMethod)>($r17);

     label16:
        $z6 = interfaceinvoke r2.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("fixed");

        if $z6 == 0 goto label17;

        $r16 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("fixed");

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaElement: void setFixedValue(java.lang.String)>($r16);

     label17:
        $z7 = interfaceinvoke r2.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("id");

        if $z7 == 0 goto label18;

        $r15 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("id");

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaElement: void setId(java.lang.String)>($r15);

     label18:
        $z8 = interfaceinvoke r2.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("nillable");

        if $z8 == 0 goto label19;

        $r13 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("nillable");

        $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r13);

        $z10 = virtualinvoke $r14.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaElement: void setNillable(boolean)>($z10);

     label19:
        $z9 = interfaceinvoke r2.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("substitutionGroup");

        if $z9 == 0 goto label20;

        $r11 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("substitutionGroup");

        $r12 = specialinvoke r6.<org.apache.ws.commons.schema.SchemaBuilder: javax.xml.namespace.QName getRefQName(java.lang.String,org.w3c.dom.Node)>($r11, r2);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaElement: void setSubstitutionGroup(javax.xml.namespace.QName)>($r12);

     label20:
        $l0 = virtualinvoke r6.<org.apache.ws.commons.schema.SchemaBuilder: long getMinOccurs(org.w3c.dom.Element)>(r2);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaElement: void setMinOccurs(long)>($l0);

        $l1 = virtualinvoke r6.<org.apache.ws.commons.schema.SchemaBuilder: long getMaxOccurs(org.w3c.dom.Element)>(r2);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaElement: void setMaxOccurs(long)>($l1);

        specialinvoke r6.<org.apache.ws.commons.schema.SchemaBuilder: void processExtensibilityComponents(org.apache.ws.commons.schema.XmlSchemaObject,org.w3c.dom.Element,boolean)>($r0, r2, 1);

        return $r0;
    }

    org.apache.ws.commons.schema.XmlSchemaImport handleImport(org.apache.ws.commons.schema.XmlSchema, org.w3c.dom.Element, org.w3c.dom.Element)
    {
        org.apache.ws.commons.schema.SchemaBuilder$1 $r6;
        org.apache.ws.commons.schema.SchemaBuilder r7;
        org.apache.ws.commons.schema.XmlSchema r1, $r11, $r14;
        java.lang.String $r4, $r5, $r8, $r9, $r10, $r12, $r13, $r16;
        org.apache.ws.commons.schema.XmlSchemaImport $r0;
        org.apache.ws.commons.schema.XmlSchemaAnnotation $r15;
        org.w3c.dom.Element r2, $r3, r17;

        r7 := @this: org.apache.ws.commons.schema.SchemaBuilder;

        r1 := @parameter0: org.apache.ws.commons.schema.XmlSchema;

        r2 := @parameter1: org.w3c.dom.Element;

        r17 := @parameter2: org.w3c.dom.Element;

        $r0 = new org.apache.ws.commons.schema.XmlSchemaImport;

        specialinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaImport: void <init>(org.apache.ws.commons.schema.XmlSchema)>(r1);

        $r3 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getFirstChildElementNS(org.w3c.dom.Node,java.lang.String,java.lang.String)>(r2, "http://www.w3.org/2001/XMLSchema", "annotation");

        if $r3 == null goto label1;

        $r15 = virtualinvoke r7.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaAnnotation handleAnnotation(org.w3c.dom.Element)>($r3);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaImport: void setAnnotation(org.apache.ws.commons.schema.XmlSchemaAnnotation)>($r15);

     label1:
        $r4 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("namespace");

        $r0.<org.apache.ws.commons.schema.XmlSchemaImport: java.lang.String namespace> = $r4;

        $r16 = $r0.<org.apache.ws.commons.schema.XmlSchemaImport: java.lang.String namespace>;

        $r5 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("schemaLocation");

        $r0.<org.apache.ws.commons.schema.XmlSchemaImport: java.lang.String schemaLocation> = $r5;

        $r6 = new org.apache.ws.commons.schema.SchemaBuilder$1;

        specialinvoke $r6.<org.apache.ws.commons.schema.SchemaBuilder$1: void <init>(org.apache.ws.commons.schema.SchemaBuilder,java.lang.String)>(r7, $r16);

        $r8 = virtualinvoke r1.<org.apache.ws.commons.schema.XmlSchema: java.lang.String getSourceURI()>();

        if $r8 == null goto label2;

        $r12 = $r0.<org.apache.ws.commons.schema.XmlSchemaImport: java.lang.String schemaLocation>;

        $r13 = virtualinvoke r1.<org.apache.ws.commons.schema.XmlSchema: java.lang.String getSourceURI()>();

        $r14 = virtualinvoke r7.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchema resolveXmlSchema(java.lang.String,java.lang.String,java.lang.String,org.apache.ws.commons.schema.utils.TargetNamespaceValidator)>($r16, $r12, $r13, $r6);

        $r0.<org.apache.ws.commons.schema.XmlSchemaImport: org.apache.ws.commons.schema.XmlSchema schema> = $r14;

        goto label3;

     label2:
        $r10 = $r0.<org.apache.ws.commons.schema.XmlSchemaImport: java.lang.String namespace>;

        $r9 = $r0.<org.apache.ws.commons.schema.XmlSchemaImport: java.lang.String schemaLocation>;

        $r11 = virtualinvoke r7.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchema resolveXmlSchema(java.lang.String,java.lang.String,org.apache.ws.commons.schema.utils.TargetNamespaceValidator)>($r10, $r9, $r6);

        $r0.<org.apache.ws.commons.schema.XmlSchemaImport: org.apache.ws.commons.schema.XmlSchema schema> = $r11;

     label3:
        return $r0;
    }

    org.apache.ws.commons.schema.XmlSchemaInclude handleInclude(org.apache.ws.commons.schema.XmlSchema, org.w3c.dom.Element, org.w3c.dom.Element)
    {
        org.apache.ws.commons.schema.utils.TargetNamespaceValidator $r6;
        org.apache.ws.commons.schema.XmlSchemaInclude $r0;
        org.apache.ws.commons.schema.SchemaBuilder r5;
        org.apache.ws.commons.schema.XmlSchema r1, $r10, $r14;
        java.lang.String $r4, $r7, $r8, $r9, $r11, $r12, $r13;
        org.apache.ws.commons.schema.XmlSchemaAnnotation $r15;
        org.w3c.dom.Element r2, $r3, r16;

        r5 := @this: org.apache.ws.commons.schema.SchemaBuilder;

        r1 := @parameter0: org.apache.ws.commons.schema.XmlSchema;

        r2 := @parameter1: org.w3c.dom.Element;

        r16 := @parameter2: org.w3c.dom.Element;

        $r0 = new org.apache.ws.commons.schema.XmlSchemaInclude;

        specialinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaInclude: void <init>(org.apache.ws.commons.schema.XmlSchema)>(r1);

        $r3 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getFirstChildElementNS(org.w3c.dom.Node,java.lang.String,java.lang.String)>(r2, "http://www.w3.org/2001/XMLSchema", "annotation");

        if $r3 == null goto label1;

        $r15 = virtualinvoke r5.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaAnnotation handleAnnotation(org.w3c.dom.Element)>($r3);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaInclude: void setAnnotation(org.apache.ws.commons.schema.XmlSchemaAnnotation)>($r15);

     label1:
        $r4 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("schemaLocation");

        $r0.<org.apache.ws.commons.schema.XmlSchemaInclude: java.lang.String schemaLocation> = $r4;

        $r6 = specialinvoke r5.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.utils.TargetNamespaceValidator newIncludeValidator(org.apache.ws.commons.schema.XmlSchema)>(r1);

        $r7 = virtualinvoke r1.<org.apache.ws.commons.schema.XmlSchema: java.lang.String getSourceURI()>();

        if $r7 == null goto label2;

        $r11 = virtualinvoke r1.<org.apache.ws.commons.schema.XmlSchema: java.lang.String getLogicalTargetNamespace()>();

        $r12 = $r0.<org.apache.ws.commons.schema.XmlSchemaInclude: java.lang.String schemaLocation>;

        $r13 = virtualinvoke r1.<org.apache.ws.commons.schema.XmlSchema: java.lang.String getSourceURI()>();

        $r14 = virtualinvoke r5.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchema resolveXmlSchema(java.lang.String,java.lang.String,java.lang.String,org.apache.ws.commons.schema.utils.TargetNamespaceValidator)>($r11, $r12, $r13, $r6);

        $r0.<org.apache.ws.commons.schema.XmlSchemaInclude: org.apache.ws.commons.schema.XmlSchema schema> = $r14;

        goto label3;

     label2:
        $r8 = virtualinvoke r1.<org.apache.ws.commons.schema.XmlSchema: java.lang.String getLogicalTargetNamespace()>();

        $r9 = $r0.<org.apache.ws.commons.schema.XmlSchemaInclude: java.lang.String schemaLocation>;

        $r10 = virtualinvoke r5.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchema resolveXmlSchema(java.lang.String,java.lang.String,org.apache.ws.commons.schema.utils.TargetNamespaceValidator)>($r8, $r9, $r6);

        $r0.<org.apache.ws.commons.schema.XmlSchemaInclude: org.apache.ws.commons.schema.XmlSchema schema> = $r10;

     label3:
        specialinvoke r5.<org.apache.ws.commons.schema.SchemaBuilder: void processExtensibilityComponents(org.apache.ws.commons.schema.XmlSchemaObject,org.w3c.dom.Element,boolean)>($r0, r2, 1);

        return $r0;
    }

    org.apache.ws.commons.schema.XmlSchemaSimpleType handleSimpleType(org.apache.ws.commons.schema.XmlSchema, org.w3c.dom.Element, org.w3c.dom.Element, boolean)
    {
        org.apache.ws.commons.schema.XmlSchemaAnnotation $r9;
        org.w3c.dom.Element r2, $r4, $r5, $r6, $r7, r8;
        org.apache.ws.commons.schema.SchemaBuilder r3;
        org.apache.ws.commons.schema.XmlSchemaSimpleType $r0;
        org.apache.ws.commons.schema.XmlSchema r1;
        java.lang.String $r10;
        boolean z0, $z1;

        r3 := @this: org.apache.ws.commons.schema.SchemaBuilder;

        r1 := @parameter0: org.apache.ws.commons.schema.XmlSchema;

        r2 := @parameter1: org.w3c.dom.Element;

        r8 := @parameter2: org.w3c.dom.Element;

        z0 := @parameter3: boolean;

        $r0 = new org.apache.ws.commons.schema.XmlSchemaSimpleType;

        specialinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaSimpleType: void <init>(org.apache.ws.commons.schema.XmlSchema,boolean)>(r1, z0);

        $z1 = interfaceinvoke r2.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("name");

        if $z1 == 0 goto label1;

        $r10 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("name");

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaSimpleType: void setName(java.lang.String)>($r10);

     label1:
        specialinvoke r3.<org.apache.ws.commons.schema.SchemaBuilder: void handleSimpleTypeFinal(org.w3c.dom.Element,org.apache.ws.commons.schema.XmlSchemaSimpleType)>(r2, $r0);

        $r4 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getFirstChildElementNS(org.w3c.dom.Node,java.lang.String,java.lang.String)>(r2, "http://www.w3.org/2001/XMLSchema", "annotation");

        if $r4 == null goto label2;

        $r9 = virtualinvoke r3.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaAnnotation handleAnnotation(org.w3c.dom.Element)>($r4);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaSimpleType: void setAnnotation(org.apache.ws.commons.schema.XmlSchemaAnnotation)>($r9);

     label2:
        $r5 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getFirstChildElementNS(org.w3c.dom.Node,java.lang.String,java.lang.String)>(r2, "http://www.w3.org/2001/XMLSchema", "restriction");

        $r6 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getFirstChildElementNS(org.w3c.dom.Node,java.lang.String,java.lang.String)>(r2, "http://www.w3.org/2001/XMLSchema", "list");

        $r7 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getFirstChildElementNS(org.w3c.dom.Node,java.lang.String,java.lang.String)>(r2, "http://www.w3.org/2001/XMLSchema", "union");

        if $r5 == null goto label3;

        specialinvoke r3.<org.apache.ws.commons.schema.SchemaBuilder: void handleSimpleTypeRestriction(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.apache.ws.commons.schema.XmlSchemaSimpleType,org.w3c.dom.Element)>(r1, r8, $r0, $r5);

        goto label5;

     label3:
        if $r6 == null goto label4;

        specialinvoke r3.<org.apache.ws.commons.schema.SchemaBuilder: void handleSimpleTypeList(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.apache.ws.commons.schema.XmlSchemaSimpleType,org.w3c.dom.Element)>(r1, r8, $r0, $r6);

        goto label5;

     label4:
        if $r7 == null goto label5;

        specialinvoke r3.<org.apache.ws.commons.schema.SchemaBuilder: void handleSimpleTypeUnion(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.apache.ws.commons.schema.XmlSchemaSimpleType,org.w3c.dom.Element)>(r1, r8, $r0, $r7);

     label5:
        specialinvoke r3.<org.apache.ws.commons.schema.SchemaBuilder: void processExtensibilityComponents(org.apache.ws.commons.schema.XmlSchemaObject,org.w3c.dom.Element,boolean)>($r0, r2, 1);

        return $r0;
    }

    org.apache.ws.commons.schema.XmlSchema handleXmlSchemaElement(org.w3c.dom.Element, java.lang.String)
    {
        org.apache.ws.commons.schema.XmlSchemaCollection$SchemaKey $r5;
        org.apache.ws.commons.schema.XmlSchemaException $r13;
        org.w3c.dom.Element r1, $r9, $r12, r14;
        org.apache.ws.commons.schema.SchemaBuilder r0;
        org.apache.ws.commons.schema.utils.NodeNamespaceContext $r3;
        org.apache.ws.commons.schema.XmlSchema $r2, $r4, $r6, $r10, $r11;
        java.lang.String $r7, r8;

        r0 := @this: org.apache.ws.commons.schema.SchemaBuilder;

        r1 := @parameter0: org.w3c.dom.Element;

        r8 := @parameter1: java.lang.String;

        $r2 = r0.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchema currentSchema>;

        $r3 = staticinvoke <org.apache.ws.commons.schema.utils.NodeNamespaceContext: org.apache.ws.commons.schema.utils.NodeNamespaceContext getNamespaceContext(org.w3c.dom.Node)>(r1);

        virtualinvoke $r2.<org.apache.ws.commons.schema.XmlSchema: void setNamespaceContext(org.apache.ws.commons.schema.utils.NamespacePrefixList)>($r3);

        $r4 = r0.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchema currentSchema>;

        virtualinvoke r0.<org.apache.ws.commons.schema.SchemaBuilder: void setNamespaceAttributes(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element)>($r4, r1);

        $r5 = new org.apache.ws.commons.schema.XmlSchemaCollection$SchemaKey;

        $r6 = r0.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchema currentSchema>;

        $r7 = virtualinvoke $r6.<org.apache.ws.commons.schema.XmlSchema: java.lang.String getLogicalTargetNamespace()>();

        specialinvoke $r5.<org.apache.ws.commons.schema.XmlSchemaCollection$SchemaKey: void <init>(java.lang.String,java.lang.String)>($r7, r8);

        specialinvoke r0.<org.apache.ws.commons.schema.SchemaBuilder: void handleSchemaElementBasics(org.w3c.dom.Element,java.lang.String,org.apache.ws.commons.schema.XmlSchemaCollection$SchemaKey)>(r1, r8, $r5);

        $r9 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getFirstChildElementNS(org.w3c.dom.Node,java.lang.String)>(r1, "http://www.w3.org/2001/XMLSchema");

        r14 = $r9;

        if $r9 != null goto label1;

        $r12 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getFirstChildElementNS(org.w3c.dom.Node,java.lang.String)>(r1, "http://www.w3.org/1999/XMLSchema");

        if $r12 == null goto label1;

        $r13 = new org.apache.ws.commons.schema.XmlSchemaException;

        specialinvoke $r13.<org.apache.ws.commons.schema.XmlSchemaException: void <init>(java.lang.String)>("Schema defined using \"http://www.w3.org/1999/XMLSchema\" is not supported. Please update the schema to the \"http://www.w3.org/2001/XMLSchema\" namespace");

        throw $r13;

     label1:
        if r14 == null goto label2;

        specialinvoke r0.<org.apache.ws.commons.schema.SchemaBuilder: void handleSchemaElementChild(org.w3c.dom.Element,org.w3c.dom.Element)>(r1, r14);

        r14 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getNextSiblingElementNS(org.w3c.dom.Node,java.lang.String)>(r14, "http://www.w3.org/2001/XMLSchema");

        goto label1;

     label2:
        $r10 = r0.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchema currentSchema>;

        specialinvoke r0.<org.apache.ws.commons.schema.SchemaBuilder: void processExtensibilityComponents(org.apache.ws.commons.schema.XmlSchemaObject,org.w3c.dom.Element,boolean)>($r10, r1, 0);

        $r11 = r0.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchema currentSchema>;

        return $r11;
    }

    org.apache.ws.commons.schema.XmlSchema resolveXmlSchema(java.lang.String, java.lang.String, java.lang.String, org.apache.ws.commons.schema.utils.TargetNamespaceValidator)
    {
        java.lang.Throwable $r24;
        org.apache.ws.commons.schema.utils.TargetNamespaceValidator r17;
        org.apache.ws.commons.schema.XmlSchemaCollection$SchemaKey $r12;
        org.apache.ws.commons.schema.resolver.URIResolver $r9;
        org.apache.ws.commons.schema.XmlSchemaCollection $r5, $r8, $r13, $r15, $r16, $r18, $r20, $r21, $r25;
        org.apache.ws.commons.schema.SchemaBuilder r0;
        org.apache.ws.commons.schema.XmlSchema $r4, $r6, $r14, $r19, $r22, $r23;
        java.lang.String r1, r2, r3, $r7, $r11, $r26;
        boolean $z0, $z1;
        org.xml.sax.InputSource $r10;

        r0 := @this: org.apache.ws.commons.schema.SchemaBuilder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r17 := @parameter3: org.apache.ws.commons.schema.utils.TargetNamespaceValidator;

        $r4 = specialinvoke r0.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchema getCachedSchema(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3);

        if $r4 == null goto label01;

        $r23 = specialinvoke r0.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchema getCachedSchema(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3);

        return $r23;

     label01:
        if r2 == null goto label11;

        $r7 = "";

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 != 0 goto label11;

        $r8 = r0.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaCollection collection>;

        $r9 = virtualinvoke $r8.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.resolver.URIResolver getSchemaResolver()>();

        $r10 = interfaceinvoke $r9.<org.apache.ws.commons.schema.resolver.URIResolver: org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3);

        if $r10 != null goto label02;

        $r21 = r0.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaCollection collection>;

        $r22 = virtualinvoke $r21.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.XmlSchema getKnownSchema(java.lang.String)>(r1);

        return $r22;

     label02:
        $r11 = virtualinvoke $r10.<org.xml.sax.InputSource: java.lang.String getSystemId()>();

        if $r11 != null goto label03;

        $r26 = r2;

        goto label04;

     label03:
        $r26 = virtualinvoke $r10.<org.xml.sax.InputSource: java.lang.String getSystemId()>();

     label04:
        virtualinvoke $r10.<org.xml.sax.InputSource: void setSystemId(java.lang.String)>($r26);

        $r12 = new org.apache.ws.commons.schema.XmlSchemaCollection$SchemaKey;

        specialinvoke $r12.<org.apache.ws.commons.schema.XmlSchemaCollection$SchemaKey: void <init>(java.lang.String,java.lang.String)>(r1, $r26);

        $r13 = r0.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaCollection collection>;

        $r14 = virtualinvoke $r13.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.XmlSchema getSchema(org.apache.ws.commons.schema.XmlSchemaCollection$SchemaKey)>($r12);

        if $r14 == null goto label05;

        return $r14;

     label05:
        $r15 = r0.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaCollection collection>;

        $z1 = virtualinvoke $r15.<org.apache.ws.commons.schema.XmlSchemaCollection: boolean check(org.apache.ws.commons.schema.XmlSchemaCollection$SchemaKey)>($r12);

        if $z1 == 0 goto label10;

        $r16 = r0.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaCollection collection>;

        virtualinvoke $r16.<org.apache.ws.commons.schema.XmlSchemaCollection: void push(org.apache.ws.commons.schema.XmlSchemaCollection$SchemaKey)>($r12);

     label06:
        $r18 = r0.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaCollection collection>;

        $r19 = virtualinvoke $r18.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.XmlSchema read(org.xml.sax.InputSource,org.apache.ws.commons.schema.utils.TargetNamespaceValidator)>($r10, r17);

        specialinvoke r0.<org.apache.ws.commons.schema.SchemaBuilder: void putCachedSchema(java.lang.String,java.lang.String,java.lang.String,org.apache.ws.commons.schema.XmlSchema)>(r1, r2, r3, $r19);

     label07:
        $r20 = r0.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaCollection collection>;

        virtualinvoke $r20.<org.apache.ws.commons.schema.XmlSchemaCollection: void pop()>();

        return $r19;

     label08:
        $r24 := @caughtexception;

     label09:
        $r25 = r0.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaCollection collection>;

        virtualinvoke $r25.<org.apache.ws.commons.schema.XmlSchemaCollection: void pop()>();

        throw $r24;

     label10:
        goto label12;

     label11:
        $r5 = r0.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaCollection collection>;

        $r6 = virtualinvoke $r5.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.XmlSchema getKnownSchema(java.lang.String)>(r1);

        if $r6 == null goto label12;

        return $r6;

     label12:
        return null;

        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    org.apache.ws.commons.schema.XmlSchema resolveXmlSchema(java.lang.String, java.lang.String, org.apache.ws.commons.schema.utils.TargetNamespaceValidator)
    {
        org.apache.ws.commons.schema.XmlSchemaCollection $r3;
        org.apache.ws.commons.schema.utils.TargetNamespaceValidator r4;
        org.apache.ws.commons.schema.SchemaBuilder r0;
        org.apache.ws.commons.schema.XmlSchema $r6;
        java.lang.String r1, r2, $r5;

        r0 := @this: org.apache.ws.commons.schema.SchemaBuilder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r4 := @parameter2: org.apache.ws.commons.schema.utils.TargetNamespaceValidator;

        $r3 = r0.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaCollection collection>;

        $r5 = $r3.<org.apache.ws.commons.schema.XmlSchemaCollection: java.lang.String baseUri>;

        $r6 = virtualinvoke r0.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchema resolveXmlSchema(java.lang.String,java.lang.String,java.lang.String,org.apache.ws.commons.schema.utils.TargetNamespaceValidator)>(r1, r2, $r5, r4);

        return $r6;
    }

    void setNamespaceAttributes(org.apache.ws.commons.schema.XmlSchema, org.w3c.dom.Element)
    {
        org.apache.ws.commons.schema.utils.TargetNamespaceValidator $r3, $r5;
        org.w3c.dom.Element r0;
        org.apache.ws.commons.schema.SchemaBuilder r2;
        org.apache.ws.commons.schema.XmlSchema r4;
        java.lang.String $r6;
        org.w3c.dom.Attr $r1;

        r2 := @this: org.apache.ws.commons.schema.SchemaBuilder;

        r4 := @parameter0: org.apache.ws.commons.schema.XmlSchema;

        r0 := @parameter1: org.w3c.dom.Element;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.Attr getAttributeNode(java.lang.String)>("targetNamespace");

        if $r1 == null goto label1;

        $r6 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("targetNamespace");

        virtualinvoke r4.<org.apache.ws.commons.schema.XmlSchema: void setTargetNamespace(java.lang.String)>($r6);

     label1:
        $r3 = r2.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.utils.TargetNamespaceValidator currentValidator>;

        if $r3 == null goto label2;

        $r5 = r2.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.utils.TargetNamespaceValidator currentValidator>;

        interfaceinvoke $r5.<org.apache.ws.commons.schema.utils.TargetNamespaceValidator: void validate(org.apache.ws.commons.schema.XmlSchema)>(r4);

     label2:
        return;
    }

    private java.lang.String getAttribute(org.w3c.dom.Element, java.lang.String)
    {
        org.w3c.dom.Element r0;
        org.apache.ws.commons.schema.SchemaBuilder r3;
        java.lang.String r1, $r2;
        boolean $z0;

        r3 := @this: org.apache.ws.commons.schema.SchemaBuilder;

        r0 := @parameter0: org.w3c.dom.Element;

        r1 := @parameter1: java.lang.String;

        $z0 = interfaceinvoke r0.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>(r1);

        if $z0 == 0 goto label1;

        $r2 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>(r1);

        return $r2;

     label1:
        return null;
    }

    private org.apache.ws.commons.schema.XmlSchema getCachedSchema(java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.ws.commons.schema.SchemaBuilder r15;
        java.util.Map r3;
        org.apache.ws.commons.schema.XmlSchema r16;
        java.lang.String r5, r7, r9, $r11;
        java.lang.ref.SoftReference r13;
        java.lang.ThreadLocal $r0, $r1;
        java.lang.Object $r2, $r12, $r14;
        java.lang.StringBuilder $r4, $r6, $r8, $r10;

        r15 := @this: org.apache.ws.commons.schema.SchemaBuilder;

        r5 := @parameter0: java.lang.String;

        r7 := @parameter1: java.lang.String;

        r9 := @parameter2: java.lang.String;

        r16 = null;

        $r0 = <org.apache.ws.commons.schema.SchemaBuilder: java.lang.ThreadLocal resolvedSchemas>;

        if $r0 == null goto label1;

        $r1 = <org.apache.ws.commons.schema.SchemaBuilder: java.lang.ThreadLocal resolvedSchemas>;

        $r2 = virtualinvoke $r1.<java.lang.ThreadLocal: java.lang.Object get()>();

        r3 = (java.util.Map) $r2;

        if r3 == null goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r11);

        r13 = (java.lang.ref.SoftReference) $r12;

        if r13 == null goto label1;

        $r14 = virtualinvoke r13.<java.lang.ref.SoftReference: java.lang.Object get()>();

        r16 = (org.apache.ws.commons.schema.XmlSchema) $r14;

     label1:
        return r16;
    }

    private java.util.List getChildren(org.w3c.dom.Element)
    {
        org.w3c.dom.Element r1;
        org.apache.ws.commons.schema.SchemaBuilder r2;
        org.w3c.dom.Node r3;
        int $i0;
        java.util.ArrayList $r0;

        r2 := @this: org.apache.ws.commons.schema.SchemaBuilder;

        r1 := @parameter0: org.w3c.dom.Element;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        r3 = interfaceinvoke r1.<org.w3c.dom.Element: org.w3c.dom.Node getFirstChild()>();

     label1:
        if r3 == null goto label2;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r3);

        r3 = interfaceinvoke r3.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        goto label1;

     label2:
        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        if $i0 != 0 goto label3;

        return null;

     label3:
        return $r0;
    }

    private javax.xml.namespace.QName getRefQName(java.lang.String, javax.xml.namespace.NamespaceContext)
    {
        java.lang.IllegalStateException $r30;
        org.apache.ws.commons.schema.XmlSchemaCollection $r6, $r18, $r20;
        org.apache.ws.commons.schema.SchemaBuilder r4;
        javax.xml.namespace.NamespaceContext r2;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r10, $r11, $r12, $r29;
        javax.xml.namespace.QName $r28, $r31;
        org.apache.ws.commons.schema.utils.NamespacePrefixList $r7, $r21;
        int $i0, $i1, $i3;
        org.apache.ws.commons.schema.XmlSchema $r5, $r17, $r19;
        java.lang.String r0, $r1, $r3, $r13, $r14, $r16, $r22, $r23, r25, r26, r27;

        r4 := @this: org.apache.ws.commons.schema.SchemaBuilder;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: javax.xml.namespace.NamespaceContext;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(58);

        $i3 = (int) -1;

        if $i0 != $i3 goto label2;

        $r22 = interfaceinvoke r2.<javax.xml.namespace.NamespaceContext: java.lang.String getNamespaceURI(java.lang.String)>("");

        r25 = $r22;

        $r23 = "";

        $z2 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>($r22);

        if $z2 == 0 goto label1;

        $r28 = new javax.xml.namespace.QName;

        specialinvoke $r28.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("", r0);

        return $r28;

     label1:
        r26 = r0;

        r27 = "";

        goto label7;

     label2:
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        r27 = $r1;

        $r3 = interfaceinvoke r2.<javax.xml.namespace.NamespaceContext: java.lang.String getNamespaceURI(java.lang.String)>($r1);

        r25 = $r3;

        if $r3 == null goto label3;

        $r16 = "";

        $z1 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label4;

        $r17 = r4.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchema currentSchema>;

        $r18 = virtualinvoke $r17.<org.apache.ws.commons.schema.XmlSchema: org.apache.ws.commons.schema.XmlSchemaCollection getParent()>();

        if $r18 == null goto label4;

        $r19 = r4.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchema currentSchema>;

        $r20 = virtualinvoke $r19.<org.apache.ws.commons.schema.XmlSchema: org.apache.ws.commons.schema.XmlSchemaCollection getParent()>();

        $r21 = virtualinvoke $r20.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.utils.NamespacePrefixList getNamespaceContext()>();

        if $r21 == null goto label4;

     label3:
        $r5 = r4.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchema currentSchema>;

        $r6 = virtualinvoke $r5.<org.apache.ws.commons.schema.XmlSchema: org.apache.ws.commons.schema.XmlSchemaCollection getParent()>();

        $r7 = virtualinvoke $r6.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.utils.NamespacePrefixList getNamespaceContext()>();

        r25 = interfaceinvoke $r7.<org.apache.ws.commons.schema.utils.NamespacePrefixList: java.lang.String getNamespaceURI(java.lang.String)>($r1);

     label4:
        if r25 == null goto label5;

        $r14 = "";

        $z0 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r25);

        if $z0 == 0 goto label6;

     label5:
        $r30 = new java.lang.IllegalStateException;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The prefix ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not bound.");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r30.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r13);

        throw $r30;

     label6:
        $i1 = $i0 + 1;

        r26 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i1);

     label7:
        $r31 = new javax.xml.namespace.QName;

        specialinvoke $r31.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String,java.lang.String)>(r25, r26, r27);

        return $r31;
    }

    private javax.xml.namespace.QName getRefQName(java.lang.String, org.w3c.dom.Node)
    {
        org.apache.ws.commons.schema.SchemaBuilder r0;
        org.w3c.dom.Node r2;
        org.apache.ws.commons.schema.utils.NodeNamespaceContext $r3;
        java.lang.String r1;
        javax.xml.namespace.QName $r4;

        r0 := @this: org.apache.ws.commons.schema.SchemaBuilder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.w3c.dom.Node;

        $r3 = staticinvoke <org.apache.ws.commons.schema.utils.NodeNamespaceContext: org.apache.ws.commons.schema.utils.NodeNamespaceContext getNamespaceContext(org.w3c.dom.Node)>(r2);

        $r4 = specialinvoke r0.<org.apache.ws.commons.schema.SchemaBuilder: javax.xml.namespace.QName getRefQName(java.lang.String,javax.xml.namespace.NamespaceContext)>(r1, $r3);

        return $r4;
    }

    private org.apache.ws.commons.schema.XmlSchemaAll handleAll(org.apache.ws.commons.schema.XmlSchema, org.w3c.dom.Element, org.w3c.dom.Element)
    {
        long $l0, $l1;
        org.apache.ws.commons.schema.XmlSchemaElement $r8;
        org.apache.ws.commons.schema.XmlSchemaAll $r0;
        org.apache.ws.commons.schema.XmlSchemaAnnotation $r5;
        java.util.List $r9;
        org.w3c.dom.Element r2, r7, r10;
        org.apache.ws.commons.schema.SchemaBuilder r1;
        org.apache.ws.commons.schema.XmlSchema r6;
        java.lang.String $r3, $r4;
        boolean $z0, $z1;

        r1 := @this: org.apache.ws.commons.schema.SchemaBuilder;

        r6 := @parameter0: org.apache.ws.commons.schema.XmlSchema;

        r2 := @parameter1: org.w3c.dom.Element;

        r7 := @parameter2: org.w3c.dom.Element;

        $r0 = new org.apache.ws.commons.schema.XmlSchemaAll;

        specialinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaAll: void <init>()>();

        $l0 = virtualinvoke r1.<org.apache.ws.commons.schema.SchemaBuilder: long getMinOccurs(org.w3c.dom.Element)>(r2);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaAll: void setMinOccurs(long)>($l0);

        $l1 = virtualinvoke r1.<org.apache.ws.commons.schema.SchemaBuilder: long getMaxOccurs(org.w3c.dom.Element)>(r2);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaAll: void setMaxOccurs(long)>($l1);

        r10 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getFirstChildElementNS(org.w3c.dom.Node,java.lang.String)>(r2, "http://www.w3.org/2001/XMLSchema");

     label1:
        if r10 == null goto label4;

        $r3 = interfaceinvoke r10.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("element");

        if $z0 == 0 goto label2;

        $r8 = virtualinvoke r1.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaElement handleElement(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element,boolean)>(r6, r10, r7, 0);

        $r9 = virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaAll: java.util.List getItems()>();

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r8);

        goto label3;

     label2:
        $r4 = interfaceinvoke r10.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("annotation");

        if $z1 == 0 goto label3;

        $r5 = virtualinvoke r1.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaAnnotation handleAnnotation(org.w3c.dom.Element)>(r10);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaAll: void setAnnotation(org.apache.ws.commons.schema.XmlSchemaAnnotation)>($r5);

     label3:
        r10 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getNextSiblingElementNS(org.w3c.dom.Node,java.lang.String)>(r10, "http://www.w3.org/2001/XMLSchema");

        goto label1;

     label4:
        return $r0;
    }

    private org.apache.ws.commons.schema.XmlSchemaAny handleAny(org.apache.ws.commons.schema.XmlSchema, org.w3c.dom.Element, org.w3c.dom.Element)
    {
        org.apache.ws.commons.schema.XmlSchemaAny $r0;
        long $l0, $l1;
        org.apache.ws.commons.schema.XmlSchemaAnnotation $r4;
        org.w3c.dom.Element r1, $r2, r9;
        org.apache.ws.commons.schema.SchemaBuilder r3;
        org.apache.ws.commons.schema.XmlSchemaContentProcessing $r6;
        org.apache.ws.commons.schema.XmlSchema r8;
        java.lang.String $r5, $r7;
        boolean $z0, $z1;

        r3 := @this: org.apache.ws.commons.schema.SchemaBuilder;

        r8 := @parameter0: org.apache.ws.commons.schema.XmlSchema;

        r1 := @parameter1: org.w3c.dom.Element;

        r9 := @parameter2: org.w3c.dom.Element;

        $r0 = new org.apache.ws.commons.schema.XmlSchemaAny;

        specialinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaAny: void <init>()>();

        $z0 = interfaceinvoke r1.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("namespace");

        if $z0 == 0 goto label1;

        $r7 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("namespace");

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaAny: void setNamespace(java.lang.String)>($r7);

     label1:
        $z1 = interfaceinvoke r1.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("processContents");

        if $z1 == 0 goto label2;

        $r5 = virtualinvoke r3.<org.apache.ws.commons.schema.SchemaBuilder: java.lang.String getEnumString(org.w3c.dom.Element,java.lang.String)>(r1, "processContents");

        $r6 = staticinvoke <org.apache.ws.commons.schema.XmlSchemaContentProcessing: org.apache.ws.commons.schema.XmlSchemaContentProcessing schemaValueOf(java.lang.String)>($r5);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaAny: void setProcessContent(org.apache.ws.commons.schema.XmlSchemaContentProcessing)>($r6);

     label2:
        $r2 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getFirstChildElementNS(org.w3c.dom.Node,java.lang.String,java.lang.String)>(r1, "http://www.w3.org/2001/XMLSchema", "annotation");

        if $r2 == null goto label3;

        $r4 = virtualinvoke r3.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaAnnotation handleAnnotation(org.w3c.dom.Element)>($r2);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaAny: void setAnnotation(org.apache.ws.commons.schema.XmlSchemaAnnotation)>($r4);

     label3:
        $l0 = virtualinvoke r3.<org.apache.ws.commons.schema.SchemaBuilder: long getMinOccurs(org.w3c.dom.Element)>(r1);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaAny: void setMinOccurs(long)>($l0);

        $l1 = virtualinvoke r3.<org.apache.ws.commons.schema.SchemaBuilder: long getMaxOccurs(org.w3c.dom.Element)>(r1);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaAny: void setMaxOccurs(long)>($l1);

        return $r0;
    }

    private org.apache.ws.commons.schema.XmlSchemaAnyAttribute handleAnyAttribute(org.apache.ws.commons.schema.XmlSchema, org.w3c.dom.Element, org.w3c.dom.Element)
    {
        org.apache.ws.commons.schema.XmlSchemaAnnotation $r4;
        org.apache.ws.commons.schema.XmlSchemaAnyAttribute $r0;
        org.w3c.dom.Element r1, $r2, r10;
        org.apache.ws.commons.schema.SchemaBuilder r3;
        org.apache.ws.commons.schema.XmlSchemaContentProcessing $r7;
        org.apache.ws.commons.schema.XmlSchema r9;
        java.lang.String $r5, $r6, $r8;
        boolean $z0, $z1, $z2;

        r3 := @this: org.apache.ws.commons.schema.SchemaBuilder;

        r9 := @parameter0: org.apache.ws.commons.schema.XmlSchema;

        r1 := @parameter1: org.w3c.dom.Element;

        r10 := @parameter2: org.w3c.dom.Element;

        $r0 = new org.apache.ws.commons.schema.XmlSchemaAnyAttribute;

        specialinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaAnyAttribute: void <init>()>();

        $z0 = interfaceinvoke r1.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("namespace");

        if $z0 == 0 goto label1;

        $r8 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("namespace");

        $r0.<org.apache.ws.commons.schema.XmlSchemaAnyAttribute: java.lang.String namespace> = $r8;

     label1:
        $z1 = interfaceinvoke r1.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("processContents");

        if $z1 == 0 goto label2;

        $r6 = virtualinvoke r3.<org.apache.ws.commons.schema.SchemaBuilder: java.lang.String getEnumString(org.w3c.dom.Element,java.lang.String)>(r1, "processContents");

        $r7 = staticinvoke <org.apache.ws.commons.schema.XmlSchemaContentProcessing: org.apache.ws.commons.schema.XmlSchemaContentProcessing schemaValueOf(java.lang.String)>($r6);

        $r0.<org.apache.ws.commons.schema.XmlSchemaAnyAttribute: org.apache.ws.commons.schema.XmlSchemaContentProcessing processContent> = $r7;

     label2:
        $z2 = interfaceinvoke r1.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("id");

        if $z2 == 0 goto label3;

        $r5 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("id");

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaAnyAttribute: void setId(java.lang.String)>($r5);

     label3:
        $r2 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getFirstChildElementNS(org.w3c.dom.Node,java.lang.String,java.lang.String)>(r1, "http://www.w3.org/2001/XMLSchema", "annotation");

        if $r2 == null goto label4;

        $r4 = virtualinvoke r3.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaAnnotation handleAnnotation(org.w3c.dom.Element)>($r2);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaAnyAttribute: void setAnnotation(org.apache.ws.commons.schema.XmlSchemaAnnotation)>($r4);

     label4:
        return $r0;
    }

    private org.apache.ws.commons.schema.XmlSchemaAttribute handleAttribute(org.apache.ws.commons.schema.XmlSchema, org.w3c.dom.Element, org.w3c.dom.Element)
    {
        org.w3c.dom.Element r2, r3;
        org.apache.ws.commons.schema.SchemaBuilder r0;
        org.apache.ws.commons.schema.XmlSchema r1;
        org.apache.ws.commons.schema.XmlSchemaAttribute $r4;

        r0 := @this: org.apache.ws.commons.schema.SchemaBuilder;

        r1 := @parameter0: org.apache.ws.commons.schema.XmlSchema;

        r2 := @parameter1: org.w3c.dom.Element;

        r3 := @parameter2: org.w3c.dom.Element;

        $r4 = specialinvoke r0.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaAttribute handleAttribute(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element,boolean)>(r1, r2, r3, 0);

        return $r4;
    }

    private org.apache.ws.commons.schema.XmlSchemaAttribute handleAttribute(org.apache.ws.commons.schema.XmlSchema, org.w3c.dom.Element, org.w3c.dom.Element, boolean)
    {
        org.apache.ws.commons.schema.XmlSchemaForm $r35;
        java.util.Vector $r43;
        org.apache.ws.commons.schema.SchemaBuilder r7;
        org.w3c.dom.Document $r19;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        org.apache.ws.commons.schema.XmlSchemaUse $r32;
        java.util.Set $r14;
        org.apache.ws.commons.schema.XmlSchemaSimpleType $r27;
        org.apache.ws.commons.schema.utils.NodeNamespaceContext r41;
        java.lang.StringBuilder $r21, $r22, $r44;
        javax.xml.namespace.QName $r30, $r39;
        org.w3c.dom.Attr[] $r8, $r10;
        java.lang.Object[] $r9;
        org.apache.ws.commons.schema.XmlSchemaAttribute $r42;
        org.w3c.dom.Attr r12, $r24;
        org.w3c.dom.Node $r11;
        int $i0, $i1, $i2, $i3, i4, $i5, $i7;
        org.apache.ws.commons.schema.XmlSchema r1;
        org.w3c.dom.NamedNodeMap $r5;
        java.lang.String $r13, $r15, $r16, $r17, $r18, $r23, $r28, $r31, $r33, $r34, $r36, $r37, $r38, $r40;
        org.apache.ws.commons.schema.XmlSchemaAnnotation $r25;
        org.apache.ws.commons.schema.utils.XmlSchemaRef $r29;
        org.w3c.dom.Element r2, $r3, $r4, r26;

        r7 := @this: org.apache.ws.commons.schema.SchemaBuilder;

        r1 := @parameter0: org.apache.ws.commons.schema.XmlSchema;

        r2 := @parameter1: org.w3c.dom.Element;

        r26 := @parameter2: org.w3c.dom.Element;

        z0 := @parameter3: boolean;

        $r42 = new org.apache.ws.commons.schema.XmlSchemaAttribute;

        specialinvoke $r42.<org.apache.ws.commons.schema.XmlSchemaAttribute: void <init>(org.apache.ws.commons.schema.XmlSchema,boolean)>(r1, z0);

        $z1 = interfaceinvoke r2.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("name");

        if $z1 == 0 goto label01;

        $r40 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("name");

        virtualinvoke $r42.<org.apache.ws.commons.schema.XmlSchemaAttribute: void setName(java.lang.String)>($r40);

     label01:
        $z2 = interfaceinvoke r2.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("type");

        if $z2 == 0 goto label02;

        $r38 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("type");

        $r39 = specialinvoke r7.<org.apache.ws.commons.schema.SchemaBuilder: javax.xml.namespace.QName getRefQName(java.lang.String,org.w3c.dom.Node)>($r38, r2);

        virtualinvoke $r42.<org.apache.ws.commons.schema.XmlSchemaAttribute: void setSchemaTypeName(javax.xml.namespace.QName)>($r39);

     label02:
        $z3 = interfaceinvoke r2.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("default");

        if $z3 == 0 goto label03;

        $r37 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("default");

        virtualinvoke $r42.<org.apache.ws.commons.schema.XmlSchemaAttribute: void setDefaultValue(java.lang.String)>($r37);

     label03:
        $z4 = interfaceinvoke r2.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("fixed");

        if $z4 == 0 goto label04;

        $r36 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("fixed");

        virtualinvoke $r42.<org.apache.ws.commons.schema.XmlSchemaAttribute: void setFixedValue(java.lang.String)>($r36);

     label04:
        $z5 = interfaceinvoke r2.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("form");

        if $z5 == 0 goto label05;

        $r34 = virtualinvoke r7.<org.apache.ws.commons.schema.SchemaBuilder: java.lang.String getEnumString(org.w3c.dom.Element,java.lang.String)>(r2, "form");

        $r35 = staticinvoke <org.apache.ws.commons.schema.XmlSchemaForm: org.apache.ws.commons.schema.XmlSchemaForm schemaValueOf(java.lang.String)>($r34);

        virtualinvoke $r42.<org.apache.ws.commons.schema.XmlSchemaAttribute: void setForm(org.apache.ws.commons.schema.XmlSchemaForm)>($r35);

     label05:
        $z6 = interfaceinvoke r2.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("id");

        if $z6 == 0 goto label06;

        $r33 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("id");

        virtualinvoke $r42.<org.apache.ws.commons.schema.XmlSchemaAttribute: void setId(java.lang.String)>($r33);

     label06:
        $z7 = interfaceinvoke r2.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("use");

        if $z7 == 0 goto label07;

        $r31 = virtualinvoke r7.<org.apache.ws.commons.schema.SchemaBuilder: java.lang.String getEnumString(org.w3c.dom.Element,java.lang.String)>(r2, "use");

        $r32 = staticinvoke <org.apache.ws.commons.schema.XmlSchemaUse: org.apache.ws.commons.schema.XmlSchemaUse schemaValueOf(java.lang.String)>($r31);

        virtualinvoke $r42.<org.apache.ws.commons.schema.XmlSchemaAttribute: void setUse(org.apache.ws.commons.schema.XmlSchemaUse)>($r32);

     label07:
        $z8 = interfaceinvoke r2.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("ref");

        if $z8 == 0 goto label08;

        $r28 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("ref");

        $r29 = virtualinvoke $r42.<org.apache.ws.commons.schema.XmlSchemaAttribute: org.apache.ws.commons.schema.utils.XmlSchemaRef getRef()>();

        $r30 = specialinvoke r7.<org.apache.ws.commons.schema.SchemaBuilder: javax.xml.namespace.QName getRefQName(java.lang.String,org.w3c.dom.Node)>($r28, r2);

        virtualinvoke $r29.<org.apache.ws.commons.schema.utils.XmlSchemaRef: void setTargetQName(javax.xml.namespace.QName)>($r30);

     label08:
        $r3 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getFirstChildElementNS(org.w3c.dom.Node,java.lang.String,java.lang.String)>(r2, "http://www.w3.org/2001/XMLSchema", "simpleType");

        if $r3 == null goto label09;

        $r27 = virtualinvoke r7.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaSimpleType handleSimpleType(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element,boolean)>(r1, $r3, r26, 0);

        virtualinvoke $r42.<org.apache.ws.commons.schema.XmlSchemaAttribute: void setSchemaType(org.apache.ws.commons.schema.XmlSchemaSimpleType)>($r27);

     label09:
        $r4 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getFirstChildElementNS(org.w3c.dom.Node,java.lang.String,java.lang.String)>(r2, "http://www.w3.org/2001/XMLSchema", "annotation");

        if $r4 == null goto label10;

        $r25 = virtualinvoke r7.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaAnnotation handleAnnotation(org.w3c.dom.Element)>($r4);

        virtualinvoke $r42.<org.apache.ws.commons.schema.XmlSchemaAttribute: void setAnnotation(org.apache.ws.commons.schema.XmlSchemaAnnotation)>($r25);

     label10:
        $r5 = interfaceinvoke r2.<org.w3c.dom.Element: org.w3c.dom.NamedNodeMap getAttributes()>();

        $r43 = new java.util.Vector;

        specialinvoke $r43.<java.util.Vector: void <init>()>();

        r41 = null;

        i4 = 0;

     label11:
        $i5 = interfaceinvoke $r5.<org.w3c.dom.NamedNodeMap: int getLength()>();

        if i4 >= $i5 goto label14;

        $r11 = interfaceinvoke $r5.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node item(int)>(i4);

        r12 = (org.w3c.dom.Attr) $r11;

        $r13 = interfaceinvoke r12.<org.w3c.dom.Attr: java.lang.String getName()>();

        $r14 = <org.apache.ws.commons.schema.SchemaBuilder: java.util.Set RESERVED_ATTRIBUTES>;

        $z9 = interfaceinvoke $r14.<java.util.Set: boolean contains(java.lang.Object)>($r13);

        if $z9 != 0 goto label13;

        virtualinvoke $r43.<java.util.Vector: boolean add(java.lang.Object)>(r12);

        $r15 = interfaceinvoke r12.<org.w3c.dom.Attr: java.lang.String getValue()>();

        $i2 = virtualinvoke $r15.<java.lang.String: int indexOf(java.lang.String)>(":");

        $i7 = (int) -1;

        if $i2 <= $i7 goto label13;

        $i3 = virtualinvoke $r15.<java.lang.String: int indexOf(java.lang.String)>(":");

        $r16 = virtualinvoke $r15.<java.lang.String: java.lang.String substring(int,int)>(0, $i3);

        if r41 != null goto label12;

        r41 = staticinvoke <org.apache.ws.commons.schema.utils.NodeNamespaceContext: org.apache.ws.commons.schema.utils.NodeNamespaceContext getNamespaceContext(org.w3c.dom.Node)>(r2);

     label12:
        $r17 = virtualinvoke r41.<org.apache.ws.commons.schema.utils.NodeNamespaceContext: java.lang.String getNamespaceURI(java.lang.String)>($r16);

        $r18 = "";

        $z10 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>($r17);

        if $z10 != 0 goto label13;

        $r19 = interfaceinvoke r2.<org.w3c.dom.Element: org.w3c.dom.Document getOwnerDocument()>();

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("xmlns:");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        $r24 = interfaceinvoke $r19.<org.w3c.dom.Document: org.w3c.dom.Attr createAttribute(java.lang.String)>($r23);

        interfaceinvoke $r24.<org.w3c.dom.Attr: void setValue(java.lang.String)>($r17);

        virtualinvoke $r43.<java.util.Vector: boolean add(java.lang.Object)>($r24);

     label13:
        i4 = i4 + 1;

        goto label11;

     label14:
        $i0 = virtualinvoke $r43.<java.util.Vector: int size()>();

        if $i0 <= 0 goto label15;

        $i1 = virtualinvoke $r43.<java.util.Vector: int size()>();

        $r8 = newarray (org.w3c.dom.Attr)[$i1];

        $r9 = virtualinvoke $r43.<java.util.Vector: java.lang.Object[] toArray(java.lang.Object[])>($r8);

        $r10 = (org.w3c.dom.Attr[]) $r9;

        virtualinvoke $r42.<org.apache.ws.commons.schema.XmlSchemaAttribute: void setUnhandledAttributes(org.w3c.dom.Attr[])>($r10);

     label15:
        specialinvoke r7.<org.apache.ws.commons.schema.SchemaBuilder: void processExtensibilityComponents(org.apache.ws.commons.schema.XmlSchemaObject,org.w3c.dom.Element,boolean)>($r42, r2, 1);

        return $r42;
    }

    private org.apache.ws.commons.schema.XmlSchemaAttributeGroup handleAttributeGroup(org.apache.ws.commons.schema.XmlSchema, org.w3c.dom.Element, org.w3c.dom.Element)
    {
        org.apache.ws.commons.schema.XmlSchemaAttribute $r13;
        org.apache.ws.commons.schema.XmlSchemaAnyAttribute $r10;
        org.apache.ws.commons.schema.SchemaBuilder r7;
        org.apache.ws.commons.schema.XmlSchema r1;
        java.lang.String $r3, $r4, $r5, $r6, $r15, $r16;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.ws.commons.schema.XmlSchemaAttributeGroupRef $r11;
        org.apache.ws.commons.schema.XmlSchemaAttributeGroup $r0;
        org.apache.ws.commons.schema.XmlSchemaAnnotation $r8;
        java.util.List $r12, $r14;
        org.w3c.dom.Element r2, r9, r17;

        r7 := @this: org.apache.ws.commons.schema.SchemaBuilder;

        r1 := @parameter0: org.apache.ws.commons.schema.XmlSchema;

        r2 := @parameter1: org.w3c.dom.Element;

        r9 := @parameter2: org.w3c.dom.Element;

        $r0 = new org.apache.ws.commons.schema.XmlSchemaAttributeGroup;

        specialinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaAttributeGroup: void <init>(org.apache.ws.commons.schema.XmlSchema)>(r1);

        $z0 = interfaceinvoke r2.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("name");

        if $z0 == 0 goto label1;

        $r16 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("name");

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaAttributeGroup: void setName(java.lang.String)>($r16);

     label1:
        $z1 = interfaceinvoke r2.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("id");

        if $z1 == 0 goto label2;

        $r15 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("id");

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaAttributeGroup: void setId(java.lang.String)>($r15);

     label2:
        r17 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getFirstChildElementNS(org.w3c.dom.Node,java.lang.String)>(r2, "http://www.w3.org/2001/XMLSchema");

     label3:
        if r17 == null goto label8;

        $r3 = interfaceinvoke r17.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("attribute");

        if $z2 == 0 goto label4;

        $r13 = specialinvoke r7.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaAttribute handleAttribute(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element)>(r1, r17, r9);

        $r14 = virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaAttributeGroup: java.util.List getAttributes()>();

        interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>($r13);

        goto label7;

     label4:
        $r4 = interfaceinvoke r17.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z3 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("attributeGroup");

        if $z3 == 0 goto label5;

        $r11 = specialinvoke r7.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaAttributeGroupRef handleAttributeGroupRef(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element)>(r1, r17);

        $r12 = virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaAttributeGroup: java.util.List getAttributes()>();

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r11);

        goto label7;

     label5:
        $r5 = interfaceinvoke r17.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z4 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("anyAttribute");

        if $z4 == 0 goto label6;

        $r10 = specialinvoke r7.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaAnyAttribute handleAnyAttribute(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element)>(r1, r17, r9);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaAttributeGroup: void setAnyAttribute(org.apache.ws.commons.schema.XmlSchemaAnyAttribute)>($r10);

        goto label7;

     label6:
        $r6 = interfaceinvoke r17.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z5 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("annotation");

        if $z5 == 0 goto label7;

        $r8 = virtualinvoke r7.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaAnnotation handleAnnotation(org.w3c.dom.Element)>(r17);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaAttributeGroup: void setAnnotation(org.apache.ws.commons.schema.XmlSchemaAnnotation)>($r8);

     label7:
        r17 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getNextSiblingElementNS(org.w3c.dom.Node,java.lang.String)>(r17, "http://www.w3.org/2001/XMLSchema");

        goto label3;

     label8:
        return $r0;
    }

    private org.apache.ws.commons.schema.XmlSchemaAttributeGroupRef handleAttributeGroupRef(org.apache.ws.commons.schema.XmlSchema, org.w3c.dom.Element)
    {
        org.apache.ws.commons.schema.XmlSchemaAttributeGroupRef $r0;
        org.apache.ws.commons.schema.XmlSchemaAnnotation $r5;
        org.apache.ws.commons.schema.utils.XmlSchemaRef $r8;
        org.w3c.dom.Element r2, $r3;
        org.apache.ws.commons.schema.SchemaBuilder r4;
        org.apache.ws.commons.schema.XmlSchema r1;
        java.lang.String $r6, $r7;
        javax.xml.namespace.QName $r9;
        boolean $z0, $z1;

        r4 := @this: org.apache.ws.commons.schema.SchemaBuilder;

        r1 := @parameter0: org.apache.ws.commons.schema.XmlSchema;

        r2 := @parameter1: org.w3c.dom.Element;

        $r0 = new org.apache.ws.commons.schema.XmlSchemaAttributeGroupRef;

        specialinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaAttributeGroupRef: void <init>(org.apache.ws.commons.schema.XmlSchema)>(r1);

        $z0 = interfaceinvoke r2.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("ref");

        if $z0 == 0 goto label1;

        $r7 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("ref");

        $r8 = virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaAttributeGroupRef: org.apache.ws.commons.schema.utils.XmlSchemaRef getRef()>();

        $r9 = specialinvoke r4.<org.apache.ws.commons.schema.SchemaBuilder: javax.xml.namespace.QName getRefQName(java.lang.String,org.w3c.dom.Node)>($r7, r2);

        virtualinvoke $r8.<org.apache.ws.commons.schema.utils.XmlSchemaRef: void setTargetQName(javax.xml.namespace.QName)>($r9);

     label1:
        $z1 = interfaceinvoke r2.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("id");

        if $z1 == 0 goto label2;

        $r6 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("id");

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaAttributeGroupRef: void setId(java.lang.String)>($r6);

     label2:
        $r3 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getFirstChildElementNS(org.w3c.dom.Node,java.lang.String,java.lang.String)>(r2, "http://www.w3.org/2001/XMLSchema", "annotation");

        if $r3 == null goto label3;

        $r5 = virtualinvoke r4.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaAnnotation handleAnnotation(org.w3c.dom.Element)>($r3);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaAttributeGroupRef: void setAnnotation(org.apache.ws.commons.schema.XmlSchemaAnnotation)>($r5);

     label3:
        return $r0;
    }

    private org.apache.ws.commons.schema.XmlSchemaChoice handleChoice(org.apache.ws.commons.schema.XmlSchema, org.w3c.dom.Element, org.w3c.dom.Element)
    {
        org.apache.ws.commons.schema.XmlSchemaSequence $r20;
        org.apache.ws.commons.schema.XmlSchemaElement $r18;
        org.apache.ws.commons.schema.SchemaBuilder r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.apache.ws.commons.schema.XmlSchemaGroupRef $r16;
        java.util.List $r13, $r15, $r17, $r19, $r21;
        org.apache.ws.commons.schema.XmlSchemaChoice $r0, $r14;
        org.apache.ws.commons.schema.XmlSchemaAny $r12;
        long $l0, $l1;
        org.apache.ws.commons.schema.XmlSchema r10;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r8, $r22;
        org.apache.ws.commons.schema.XmlSchemaAnnotation $r9;
        org.w3c.dom.Element r1, r11, r23;

        r2 := @this: org.apache.ws.commons.schema.SchemaBuilder;

        r10 := @parameter0: org.apache.ws.commons.schema.XmlSchema;

        r1 := @parameter1: org.w3c.dom.Element;

        r11 := @parameter2: org.w3c.dom.Element;

        $r0 = new org.apache.ws.commons.schema.XmlSchemaChoice;

        specialinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaChoice: void <init>()>();

        $z0 = interfaceinvoke r1.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("id");

        if $z0 == 0 goto label1;

        $r22 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("id");

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaChoice: void setId(java.lang.String)>($r22);

     label1:
        $l0 = virtualinvoke r2.<org.apache.ws.commons.schema.SchemaBuilder: long getMinOccurs(org.w3c.dom.Element)>(r1);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaChoice: void setMinOccurs(long)>($l0);

        $l1 = virtualinvoke r2.<org.apache.ws.commons.schema.SchemaBuilder: long getMaxOccurs(org.w3c.dom.Element)>(r1);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaChoice: void setMaxOccurs(long)>($l1);

        r23 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getFirstChildElementNS(org.w3c.dom.Node,java.lang.String)>(r1, "http://www.w3.org/2001/XMLSchema");

     label2:
        if r23 == null goto label9;

        $r3 = interfaceinvoke r23.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("sequence");

        if $z1 == 0 goto label3;

        $r20 = specialinvoke r2.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaSequence handleSequence(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element)>(r10, r23, r11);

        $r21 = virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaChoice: java.util.List getItems()>();

        interfaceinvoke $r21.<java.util.List: boolean add(java.lang.Object)>($r20);

        goto label8;

     label3:
        $r4 = interfaceinvoke r23.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("element");

        if $z2 == 0 goto label4;

        $r18 = virtualinvoke r2.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaElement handleElement(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element,boolean)>(r10, r23, r11, 0);

        $r19 = virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaChoice: java.util.List getItems()>();

        interfaceinvoke $r19.<java.util.List: boolean add(java.lang.Object)>($r18);

        goto label8;

     label4:
        $r5 = interfaceinvoke r23.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z3 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("group");

        if $z3 == 0 goto label5;

        $r16 = specialinvoke r2.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaGroupRef handleGroupRef(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element)>(r10, r23, r11);

        $r17 = virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaChoice: java.util.List getItems()>();

        interfaceinvoke $r17.<java.util.List: boolean add(java.lang.Object)>($r16);

        goto label8;

     label5:
        $r6 = interfaceinvoke r23.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z4 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("choice");

        if $z4 == 0 goto label6;

        $r14 = specialinvoke r2.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaChoice handleChoice(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element)>(r10, r23, r11);

        $r15 = virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaChoice: java.util.List getItems()>();

        interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>($r14);

        goto label8;

     label6:
        $r7 = interfaceinvoke r23.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z5 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("any");

        if $z5 == 0 goto label7;

        $r12 = specialinvoke r2.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaAny handleAny(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element)>(r10, r23, r11);

        $r13 = virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaChoice: java.util.List getItems()>();

        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>($r12);

        goto label8;

     label7:
        $r8 = interfaceinvoke r23.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z6 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("annotation");

        if $z6 == 0 goto label8;

        $r9 = virtualinvoke r2.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaAnnotation handleAnnotation(org.w3c.dom.Element)>(r23);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaChoice: void setAnnotation(org.apache.ws.commons.schema.XmlSchemaAnnotation)>($r9);

     label8:
        r23 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getNextSiblingElementNS(org.w3c.dom.Node,java.lang.String)>(r23, "http://www.w3.org/2001/XMLSchema");

        goto label2;

     label9:
        return $r0;
    }

    private org.apache.ws.commons.schema.XmlSchemaComplexContent handleComplexContent(org.apache.ws.commons.schema.XmlSchema, org.w3c.dom.Element, org.w3c.dom.Element)
    {
        org.apache.ws.commons.schema.XmlSchemaComplexContent $r0;
        org.apache.ws.commons.schema.XmlSchemaComplexContentRestriction $r11;
        org.apache.ws.commons.schema.SchemaBuilder r6;
        org.apache.ws.commons.schema.XmlSchema r8;
        java.lang.String $r2, $r3, $r4, $r5;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.ws.commons.schema.XmlSchemaAnnotation $r7;
        org.w3c.dom.Element r1, r9, r12;
        org.apache.ws.commons.schema.XmlSchemaComplexContentExtension $r10;

        r6 := @this: org.apache.ws.commons.schema.SchemaBuilder;

        r8 := @parameter0: org.apache.ws.commons.schema.XmlSchema;

        r1 := @parameter1: org.w3c.dom.Element;

        r9 := @parameter2: org.w3c.dom.Element;

        $r0 = new org.apache.ws.commons.schema.XmlSchemaComplexContent;

        specialinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaComplexContent: void <init>()>();

        r12 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getFirstChildElementNS(org.w3c.dom.Node,java.lang.String)>(r1, "http://www.w3.org/2001/XMLSchema");

     label1:
        if r12 == null goto label5;

        $r3 = interfaceinvoke r12.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("restriction");

        if $z2 == 0 goto label2;

        $r11 = specialinvoke r6.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaComplexContentRestriction handleComplexContentRestriction(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element)>(r8, r12, r9);

        $r0.<org.apache.ws.commons.schema.XmlSchemaComplexContent: org.apache.ws.commons.schema.XmlSchemaContent content> = $r11;

        goto label4;

     label2:
        $r4 = interfaceinvoke r12.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z3 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("extension");

        if $z3 == 0 goto label3;

        $r10 = specialinvoke r6.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaComplexContentExtension handleComplexContentExtension(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element)>(r8, r12, r9);

        $r0.<org.apache.ws.commons.schema.XmlSchemaComplexContent: org.apache.ws.commons.schema.XmlSchemaContent content> = $r10;

        goto label4;

     label3:
        $r5 = interfaceinvoke r12.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z4 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("annotation");

        if $z4 == 0 goto label4;

        $r7 = virtualinvoke r6.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaAnnotation handleAnnotation(org.w3c.dom.Element)>(r12);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaComplexContent: void setAnnotation(org.apache.ws.commons.schema.XmlSchemaAnnotation)>($r7);

     label4:
        r12 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getNextSiblingElementNS(org.w3c.dom.Node,java.lang.String)>(r12, "http://www.w3.org/2001/XMLSchema");

        goto label1;

     label5:
        $z0 = interfaceinvoke r1.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("mixed");

        if $z0 == 0 goto label7;

        $r2 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("mixed");

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("true");

        if $z1 == 0 goto label6;

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaComplexContent: void setMixed(boolean)>(1);

        goto label7;

     label6:
        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaComplexContent: void setMixed(boolean)>(0);

     label7:
        return $r0;
    }

    private org.apache.ws.commons.schema.XmlSchemaComplexContentExtension handleComplexContentExtension(org.apache.ws.commons.schema.XmlSchema, org.w3c.dom.Element, org.w3c.dom.Element)
    {
        org.apache.ws.commons.schema.XmlSchemaSequence $r22;
        org.apache.ws.commons.schema.XmlSchemaAll $r20;
        org.apache.ws.commons.schema.SchemaBuilder r10;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        org.apache.ws.commons.schema.XmlSchemaGroupRef $r15;
        org.apache.ws.commons.schema.XmlSchemaAttributeGroupRef $r17;
        java.util.List $r16, $r18;
        org.apache.ws.commons.schema.XmlSchemaChoice $r21;
        javax.xml.namespace.QName $r24;
        org.apache.ws.commons.schema.XmlSchemaAttribute $r19;
        org.apache.ws.commons.schema.XmlSchemaAnyAttribute $r14;
        org.apache.ws.commons.schema.XmlSchema r12;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r23;
        org.apache.ws.commons.schema.XmlSchemaAnnotation $r11;
        org.apache.ws.commons.schema.XmlSchemaComplexContentExtension $r0;
        org.w3c.dom.Element r1, r13, r25;

        r10 := @this: org.apache.ws.commons.schema.SchemaBuilder;

        r12 := @parameter0: org.apache.ws.commons.schema.XmlSchema;

        r1 := @parameter1: org.w3c.dom.Element;

        r13 := @parameter2: org.w3c.dom.Element;

        $r0 = new org.apache.ws.commons.schema.XmlSchemaComplexContentExtension;

        specialinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaComplexContentExtension: void <init>()>();

        $z0 = interfaceinvoke r1.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("base");

        if $z0 == 0 goto label01;

        $r23 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("base");

        $r24 = specialinvoke r10.<org.apache.ws.commons.schema.SchemaBuilder: javax.xml.namespace.QName getRefQName(java.lang.String,org.w3c.dom.Node)>($r23, r1);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaComplexContentExtension: void setBaseTypeName(javax.xml.namespace.QName)>($r24);

     label01:
        r25 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getFirstChildElementNS(org.w3c.dom.Node,java.lang.String)>(r1, "http://www.w3.org/2001/XMLSchema");

     label02:
        if r25 == null goto label11;

        $r2 = interfaceinvoke r25.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("sequence");

        if $z1 == 0 goto label03;

        $r22 = specialinvoke r10.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaSequence handleSequence(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element)>(r12, r25, r13);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaComplexContentExtension: void setParticle(org.apache.ws.commons.schema.XmlSchemaParticle)>($r22);

        goto label10;

     label03:
        $r3 = interfaceinvoke r25.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("choice");

        if $z2 == 0 goto label04;

        $r21 = specialinvoke r10.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaChoice handleChoice(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element)>(r12, r25, r13);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaComplexContentExtension: void setParticle(org.apache.ws.commons.schema.XmlSchemaParticle)>($r21);

        goto label10;

     label04:
        $r4 = interfaceinvoke r25.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z3 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("all");

        if $z3 == 0 goto label05;

        $r20 = specialinvoke r10.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaAll handleAll(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element)>(r12, r25, r13);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaComplexContentExtension: void setParticle(org.apache.ws.commons.schema.XmlSchemaParticle)>($r20);

        goto label10;

     label05:
        $r5 = interfaceinvoke r25.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z4 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("attribute");

        if $z4 == 0 goto label06;

        $r18 = virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaComplexContentExtension: java.util.List getAttributes()>();

        $r19 = specialinvoke r10.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaAttribute handleAttribute(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element)>(r12, r25, r13);

        interfaceinvoke $r18.<java.util.List: boolean add(java.lang.Object)>($r19);

        goto label10;

     label06:
        $r6 = interfaceinvoke r25.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z5 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("attributeGroup");

        if $z5 == 0 goto label07;

        $r16 = virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaComplexContentExtension: java.util.List getAttributes()>();

        $r17 = specialinvoke r10.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaAttributeGroupRef handleAttributeGroupRef(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element)>(r12, r25);

        interfaceinvoke $r16.<java.util.List: boolean add(java.lang.Object)>($r17);

        goto label10;

     label07:
        $r7 = interfaceinvoke r25.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z6 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("group");

        if $z6 == 0 goto label08;

        $r15 = specialinvoke r10.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaGroupRef handleGroupRef(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element)>(r12, r25, r13);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaComplexContentExtension: void setParticle(org.apache.ws.commons.schema.XmlSchemaParticle)>($r15);

        goto label10;

     label08:
        $r8 = interfaceinvoke r25.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z7 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("anyAttribute");

        if $z7 == 0 goto label09;

        $r14 = specialinvoke r10.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaAnyAttribute handleAnyAttribute(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element)>(r12, r25, r13);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaComplexContentExtension: void setAnyAttribute(org.apache.ws.commons.schema.XmlSchemaAnyAttribute)>($r14);

        goto label10;

     label09:
        $r9 = interfaceinvoke r25.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z8 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("annotation");

        if $z8 == 0 goto label10;

        $r11 = virtualinvoke r10.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaAnnotation handleAnnotation(org.w3c.dom.Element)>(r25);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaComplexContentExtension: void setAnnotation(org.apache.ws.commons.schema.XmlSchemaAnnotation)>($r11);

     label10:
        r25 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getNextSiblingElementNS(org.w3c.dom.Node,java.lang.String)>(r25, "http://www.w3.org/2001/XMLSchema");

        goto label02;

     label11:
        return $r0;
    }

    private org.apache.ws.commons.schema.XmlSchemaComplexContentRestriction handleComplexContentRestriction(org.apache.ws.commons.schema.XmlSchema, org.w3c.dom.Element, org.w3c.dom.Element)
    {
        org.apache.ws.commons.schema.XmlSchemaSequence $r22;
        org.apache.ws.commons.schema.XmlSchemaComplexContentRestriction $r0;
        org.apache.ws.commons.schema.XmlSchemaAll $r20;
        org.apache.ws.commons.schema.SchemaBuilder r10;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        org.apache.ws.commons.schema.XmlSchemaGroupRef $r15;
        org.apache.ws.commons.schema.XmlSchemaAttributeGroupRef $r17;
        java.util.List $r16, $r18;
        org.apache.ws.commons.schema.XmlSchemaChoice $r21;
        javax.xml.namespace.QName $r24;
        org.apache.ws.commons.schema.XmlSchemaAttribute $r19;
        org.apache.ws.commons.schema.XmlSchemaAnyAttribute $r14;
        org.apache.ws.commons.schema.XmlSchema r12;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r23;
        org.apache.ws.commons.schema.XmlSchemaAnnotation $r11;
        org.w3c.dom.Element r1, r13, r25;

        r10 := @this: org.apache.ws.commons.schema.SchemaBuilder;

        r12 := @parameter0: org.apache.ws.commons.schema.XmlSchema;

        r1 := @parameter1: org.w3c.dom.Element;

        r13 := @parameter2: org.w3c.dom.Element;

        $r0 = new org.apache.ws.commons.schema.XmlSchemaComplexContentRestriction;

        specialinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaComplexContentRestriction: void <init>()>();

        $z0 = interfaceinvoke r1.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("base");

        if $z0 == 0 goto label01;

        $r23 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("base");

        $r24 = specialinvoke r10.<org.apache.ws.commons.schema.SchemaBuilder: javax.xml.namespace.QName getRefQName(java.lang.String,org.w3c.dom.Node)>($r23, r1);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaComplexContentRestriction: void setBaseTypeName(javax.xml.namespace.QName)>($r24);

     label01:
        r25 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getFirstChildElementNS(org.w3c.dom.Node,java.lang.String)>(r1, "http://www.w3.org/2001/XMLSchema");

     label02:
        if r25 == null goto label11;

        $r2 = interfaceinvoke r25.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("sequence");

        if $z1 == 0 goto label03;

        $r22 = specialinvoke r10.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaSequence handleSequence(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element)>(r12, r25, r13);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaComplexContentRestriction: void setParticle(org.apache.ws.commons.schema.XmlSchemaParticle)>($r22);

        goto label10;

     label03:
        $r3 = interfaceinvoke r25.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("choice");

        if $z2 == 0 goto label04;

        $r21 = specialinvoke r10.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaChoice handleChoice(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element)>(r12, r25, r13);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaComplexContentRestriction: void setParticle(org.apache.ws.commons.schema.XmlSchemaParticle)>($r21);

        goto label10;

     label04:
        $r4 = interfaceinvoke r25.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z3 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("all");

        if $z3 == 0 goto label05;

        $r20 = specialinvoke r10.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaAll handleAll(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element)>(r12, r25, r13);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaComplexContentRestriction: void setParticle(org.apache.ws.commons.schema.XmlSchemaParticle)>($r20);

        goto label10;

     label05:
        $r5 = interfaceinvoke r25.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z4 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("attribute");

        if $z4 == 0 goto label06;

        $r18 = virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaComplexContentRestriction: java.util.List getAttributes()>();

        $r19 = specialinvoke r10.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaAttribute handleAttribute(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element)>(r12, r25, r13);

        interfaceinvoke $r18.<java.util.List: boolean add(java.lang.Object)>($r19);

        goto label10;

     label06:
        $r6 = interfaceinvoke r25.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z5 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("attributeGroup");

        if $z5 == 0 goto label07;

        $r16 = virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaComplexContentRestriction: java.util.List getAttributes()>();

        $r17 = specialinvoke r10.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaAttributeGroupRef handleAttributeGroupRef(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element)>(r12, r25);

        interfaceinvoke $r16.<java.util.List: boolean add(java.lang.Object)>($r17);

        goto label10;

     label07:
        $r7 = interfaceinvoke r25.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z6 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("group");

        if $z6 == 0 goto label08;

        $r15 = specialinvoke r10.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaGroupRef handleGroupRef(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element)>(r12, r25, r13);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaComplexContentRestriction: void setParticle(org.apache.ws.commons.schema.XmlSchemaParticle)>($r15);

        goto label10;

     label08:
        $r8 = interfaceinvoke r25.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z7 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("anyAttribute");

        if $z7 == 0 goto label09;

        $r14 = specialinvoke r10.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaAnyAttribute handleAnyAttribute(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element)>(r12, r25, r13);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaComplexContentRestriction: void setAnyAttribute(org.apache.ws.commons.schema.XmlSchemaAnyAttribute)>($r14);

        goto label10;

     label09:
        $r9 = interfaceinvoke r25.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z8 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("annotation");

        if $z8 == 0 goto label10;

        $r11 = virtualinvoke r10.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaAnnotation handleAnnotation(org.w3c.dom.Element)>(r25);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaComplexContentRestriction: void setAnnotation(org.apache.ws.commons.schema.XmlSchemaAnnotation)>($r11);

     label10:
        r25 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getNextSiblingElementNS(org.w3c.dom.Node,java.lang.String)>(r25, "http://www.w3.org/2001/XMLSchema");

        goto label02;

     label11:
        return $r0;
    }

    private org.apache.ws.commons.schema.XmlSchemaIdentityConstraint handleConstraint(org.w3c.dom.Element, java.lang.Class)
    {
        org.apache.ws.commons.schema.XmlSchemaException $r22, $r25;
        org.apache.ws.commons.schema.SchemaBuilder r6;
        java.lang.InstantiationException $r24;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.IllegalAccessException $r21;
        java.util.List $r10;
        javax.xml.namespace.QName $r19;
        org.apache.ws.commons.schema.XmlSchemaIdentityConstraint r27;
        java.lang.String $r3, $r4, $r5, $r9, $r14, $r17, $r20, $r23, $r26;
        org.apache.ws.commons.schema.XmlSchemaXPath $r8, $r13;
        org.apache.ws.commons.schema.XmlSchemaAnnotation $r7, $r12, $r16;
        org.w3c.dom.Element r2, $r11, $r15, r28;
        org.apache.ws.commons.schema.XmlSchemaKeyref $r18;
        java.lang.Class r0;
        java.lang.Object $r1;

        r6 := @this: org.apache.ws.commons.schema.SchemaBuilder;

        r2 := @parameter0: org.w3c.dom.Element;

        r0 := @parameter1: java.lang.Class;

     label01:
        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.Object newInstance()>();

        r27 = (org.apache.ws.commons.schema.XmlSchemaIdentityConstraint) $r1;

        $z0 = interfaceinvoke r2.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("name");

        if $z0 == 0 goto label02;

        $r20 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("name");

        virtualinvoke r27.<org.apache.ws.commons.schema.XmlSchemaIdentityConstraint: void setName(java.lang.String)>($r20);

     label02:
        $z1 = interfaceinvoke r2.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("refer");

        if $z1 == 0 goto label03;

        $r17 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("refer");

        $r18 = (org.apache.ws.commons.schema.XmlSchemaKeyref) r27;

        $r19 = specialinvoke r6.<org.apache.ws.commons.schema.SchemaBuilder: javax.xml.namespace.QName getRefQName(java.lang.String,org.w3c.dom.Node)>($r17, r2);

        $r18.<org.apache.ws.commons.schema.XmlSchemaKeyref: javax.xml.namespace.QName refer> = $r19;

     label03:
        r28 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getFirstChildElementNS(org.w3c.dom.Node,java.lang.String)>(r2, "http://www.w3.org/2001/XMLSchema");

     label04:
        if r28 == null goto label10;

        $r3 = interfaceinvoke r28.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("selector");

        if $z2 == 0 goto label06;

        $r13 = new org.apache.ws.commons.schema.XmlSchemaXPath;

        specialinvoke $r13.<org.apache.ws.commons.schema.XmlSchemaXPath: void <init>()>();

        $r14 = interfaceinvoke r28.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("xpath");

        $r13.<org.apache.ws.commons.schema.XmlSchemaXPath: java.lang.String xpath> = $r14;

        $r15 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getFirstChildElementNS(org.w3c.dom.Node,java.lang.String,java.lang.String)>(r28, "http://www.w3.org/2001/XMLSchema", "annotation");

        if $r15 == null goto label05;

        $r16 = virtualinvoke r6.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaAnnotation handleAnnotation(org.w3c.dom.Element)>($r15);

        virtualinvoke $r13.<org.apache.ws.commons.schema.XmlSchemaXPath: void setAnnotation(org.apache.ws.commons.schema.XmlSchemaAnnotation)>($r16);

     label05:
        virtualinvoke r27.<org.apache.ws.commons.schema.XmlSchemaIdentityConstraint: void setSelector(org.apache.ws.commons.schema.XmlSchemaXPath)>($r13);

        goto label09;

     label06:
        $r4 = interfaceinvoke r28.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z3 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("field");

        if $z3 == 0 goto label08;

        $r8 = new org.apache.ws.commons.schema.XmlSchemaXPath;

        specialinvoke $r8.<org.apache.ws.commons.schema.XmlSchemaXPath: void <init>()>();

        $r9 = interfaceinvoke r28.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("xpath");

        $r8.<org.apache.ws.commons.schema.XmlSchemaXPath: java.lang.String xpath> = $r9;

        $r10 = virtualinvoke r27.<org.apache.ws.commons.schema.XmlSchemaIdentityConstraint: java.util.List getFields()>();

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r8);

        $r11 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getFirstChildElementNS(org.w3c.dom.Node,java.lang.String,java.lang.String)>(r28, "http://www.w3.org/2001/XMLSchema", "annotation");

        if $r11 == null goto label07;

        $r12 = virtualinvoke r6.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaAnnotation handleAnnotation(org.w3c.dom.Element)>($r11);

        virtualinvoke $r8.<org.apache.ws.commons.schema.XmlSchemaXPath: void setAnnotation(org.apache.ws.commons.schema.XmlSchemaAnnotation)>($r12);

     label07:
        goto label09;

     label08:
        $r5 = interfaceinvoke r28.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z4 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("annotation");

        if $z4 == 0 goto label09;

        $r7 = virtualinvoke r6.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaAnnotation handleAnnotation(org.w3c.dom.Element)>(r28);

        virtualinvoke r27.<org.apache.ws.commons.schema.XmlSchemaIdentityConstraint: void setAnnotation(org.apache.ws.commons.schema.XmlSchemaAnnotation)>($r7);

     label09:
        r28 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getNextSiblingElementNS(org.w3c.dom.Node,java.lang.String)>(r28, "http://www.w3.org/2001/XMLSchema");

        goto label04;

     label10:
        return r27;

     label11:
        $r24 := @caughtexception;

        $r25 = new org.apache.ws.commons.schema.XmlSchemaException;

        $r26 = virtualinvoke $r24.<java.lang.InstantiationException: java.lang.String getMessage()>();

        specialinvoke $r25.<org.apache.ws.commons.schema.XmlSchemaException: void <init>(java.lang.String)>($r26);

        throw $r25;

     label12:
        $r21 := @caughtexception;

        $r22 = new org.apache.ws.commons.schema.XmlSchemaException;

        $r23 = virtualinvoke $r21.<java.lang.IllegalAccessException: java.lang.String getMessage()>();

        specialinvoke $r22.<org.apache.ws.commons.schema.XmlSchemaException: void <init>(java.lang.String)>($r23);

        throw $r22;

        catch java.lang.InstantiationException from label01 to label10 with label11;
        catch java.lang.IllegalAccessException from label01 to label10 with label12;
    }

    private void handleElementAnnotation(org.w3c.dom.Element, org.apache.ws.commons.schema.XmlSchemaElement)
    {
        org.w3c.dom.Element r0, $r1;
        org.apache.ws.commons.schema.SchemaBuilder r2;
        org.apache.ws.commons.schema.XmlSchemaElement r4;
        org.apache.ws.commons.schema.XmlSchemaAnnotation $r3;

        r2 := @this: org.apache.ws.commons.schema.SchemaBuilder;

        r0 := @parameter0: org.w3c.dom.Element;

        r4 := @parameter1: org.apache.ws.commons.schema.XmlSchemaElement;

        $r1 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getFirstChildElementNS(org.w3c.dom.Node,java.lang.String,java.lang.String)>(r0, "http://www.w3.org/2001/XMLSchema", "annotation");

        if $r1 == null goto label1;

        $r3 = virtualinvoke r2.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaAnnotation handleAnnotation(org.w3c.dom.Element)>($r1);

        virtualinvoke r4.<org.apache.ws.commons.schema.XmlSchemaElement: void setAnnotation(org.apache.ws.commons.schema.XmlSchemaAnnotation)>($r3);

     label1:
        return;
    }

    private boolean handleElementForm(org.w3c.dom.Element, org.apache.ws.commons.schema.XmlSchemaElement, boolean)
    {
        org.apache.ws.commons.schema.XmlSchemaForm $r2, $r3, $r5;
        org.apache.ws.commons.schema.XmlSchemaElement r1;
        org.w3c.dom.Element r0;
        org.apache.ws.commons.schema.SchemaBuilder r6;
        java.lang.String $r4;
        boolean $z0, z1, $z2;

        r6 := @this: org.apache.ws.commons.schema.SchemaBuilder;

        r0 := @parameter0: org.w3c.dom.Element;

        r1 := @parameter1: org.apache.ws.commons.schema.XmlSchemaElement;

        z1 := @parameter2: boolean;

        $z0 = interfaceinvoke r0.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("form");

        if $z0 == 0 goto label1;

        $r4 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("form");

        $r5 = staticinvoke <org.apache.ws.commons.schema.XmlSchemaForm: org.apache.ws.commons.schema.XmlSchemaForm schemaValueOf(java.lang.String)>($r4);

        virtualinvoke r1.<org.apache.ws.commons.schema.XmlSchemaElement: void setForm(org.apache.ws.commons.schema.XmlSchemaForm)>($r5);

     label1:
        $r2 = virtualinvoke r1.<org.apache.ws.commons.schema.XmlSchemaElement: org.apache.ws.commons.schema.XmlSchemaForm getForm()>();

        $r3 = <org.apache.ws.commons.schema.XmlSchemaForm: org.apache.ws.commons.schema.XmlSchemaForm QUALIFIED>;

        if $r2 != $r3 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    private void handleElementGlobalType(org.w3c.dom.Element, org.apache.ws.commons.schema.XmlSchemaElement)
    {
        org.apache.ws.commons.schema.XmlSchemaElement r6;
        org.w3c.dom.Attr $r1, $r2;
        org.apache.ws.commons.schema.utils.XmlSchemaRef $r7;
        org.apache.ws.commons.schema.XmlSchemaType $r12;
        org.apache.ws.commons.schema.XmlSchemaCollection $r11, $r13;
        org.w3c.dom.Element r0;
        org.apache.ws.commons.schema.SchemaBuilder r4;
        java.lang.String $r3, $r8;
        javax.xml.namespace.QName $r5, $r9, $r10;

        r4 := @this: org.apache.ws.commons.schema.SchemaBuilder;

        r0 := @parameter0: org.w3c.dom.Element;

        r6 := @parameter1: org.apache.ws.commons.schema.XmlSchemaElement;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.Attr getAttributeNode(java.lang.String)>("type");

        if $r1 == null goto label2;

        $r8 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("type");

        $r9 = specialinvoke r4.<org.apache.ws.commons.schema.SchemaBuilder: javax.xml.namespace.QName getRefQName(java.lang.String,org.w3c.dom.Node)>($r8, r0);

        virtualinvoke r6.<org.apache.ws.commons.schema.XmlSchemaElement: void setSchemaTypeName(javax.xml.namespace.QName)>($r9);

        $r10 = virtualinvoke r6.<org.apache.ws.commons.schema.XmlSchemaElement: javax.xml.namespace.QName getSchemaTypeName()>();

        $r11 = r4.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaCollection collection>;

        $r12 = virtualinvoke $r11.<org.apache.ws.commons.schema.XmlSchemaCollection: org.apache.ws.commons.schema.XmlSchemaType getTypeByQName(javax.xml.namespace.QName)>($r10);

        if $r12 != null goto label1;

        $r13 = r4.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaCollection collection>;

        virtualinvoke $r13.<org.apache.ws.commons.schema.XmlSchemaCollection: void addUnresolvedType(javax.xml.namespace.QName,org.apache.ws.commons.schema.TypeReceiver)>($r10, r6);

     label1:
        virtualinvoke r6.<org.apache.ws.commons.schema.XmlSchemaElement: void setSchemaType(org.apache.ws.commons.schema.XmlSchemaType)>($r12);

        goto label3;

     label2:
        $r2 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.Attr getAttributeNode(java.lang.String)>("ref");

        if $r2 == null goto label3;

        $r3 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("ref");

        $r5 = specialinvoke r4.<org.apache.ws.commons.schema.SchemaBuilder: javax.xml.namespace.QName getRefQName(java.lang.String,org.w3c.dom.Node)>($r3, r0);

        $r7 = virtualinvoke r6.<org.apache.ws.commons.schema.XmlSchemaElement: org.apache.ws.commons.schema.utils.XmlSchemaRef getRef()>();

        virtualinvoke $r7.<org.apache.ws.commons.schema.utils.XmlSchemaRef: void setTargetQName(javax.xml.namespace.QName)>($r5);

     label3:
        return;
    }

    private void handleElementName(boolean, org.apache.ws.commons.schema.XmlSchemaElement, boolean)
    {
        org.apache.ws.commons.schema.SchemaBuilder r0;
        org.apache.ws.commons.schema.XmlSchemaElement r1;
        boolean z0, z1;

        r0 := @this: org.apache.ws.commons.schema.SchemaBuilder;

        z0 := @parameter0: boolean;

        r1 := @parameter1: org.apache.ws.commons.schema.XmlSchemaElement;

        z1 := @parameter2: boolean;

        return;
    }

    private org.apache.ws.commons.schema.XmlSchemaGroup handleGroup(org.apache.ws.commons.schema.XmlSchema, org.w3c.dom.Element, org.w3c.dom.Element)
    {
        org.apache.ws.commons.schema.XmlSchemaSequence $r12;
        org.apache.ws.commons.schema.XmlSchemaGroup $r0;
        org.apache.ws.commons.schema.XmlSchemaAll $r13;
        org.apache.ws.commons.schema.SchemaBuilder r8;
        org.apache.ws.commons.schema.XmlSchema r1;
        java.lang.String $r3, $r4, $r5, $r6, $r7;
        boolean $z0, $z1, $z2, $z3;
        org.apache.ws.commons.schema.XmlSchemaAnnotation $r9;
        org.w3c.dom.Element r2, r10, r14;
        org.apache.ws.commons.schema.XmlSchemaChoice $r11;

        r8 := @this: org.apache.ws.commons.schema.SchemaBuilder;

        r1 := @parameter0: org.apache.ws.commons.schema.XmlSchema;

        r2 := @parameter1: org.w3c.dom.Element;

        r10 := @parameter2: org.w3c.dom.Element;

        $r0 = new org.apache.ws.commons.schema.XmlSchemaGroup;

        specialinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaGroup: void <init>(org.apache.ws.commons.schema.XmlSchema)>(r1);

        $r3 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("name");

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaGroup: void setName(java.lang.String)>($r3);

        r14 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getFirstChildElementNS(org.w3c.dom.Node,java.lang.String)>(r2, "http://www.w3.org/2001/XMLSchema");

     label1:
        if r14 == null goto label6;

        $r4 = interfaceinvoke r14.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("all");

        if $z0 == 0 goto label2;

        $r13 = specialinvoke r8.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaAll handleAll(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element)>(r1, r14, r10);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaGroup: void setParticle(org.apache.ws.commons.schema.XmlSchemaGroupParticle)>($r13);

        goto label5;

     label2:
        $r5 = interfaceinvoke r14.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("sequence");

        if $z1 == 0 goto label3;

        $r12 = specialinvoke r8.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaSequence handleSequence(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element)>(r1, r14, r10);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaGroup: void setParticle(org.apache.ws.commons.schema.XmlSchemaGroupParticle)>($r12);

        goto label5;

     label3:
        $r6 = interfaceinvoke r14.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("choice");

        if $z2 == 0 goto label4;

        $r11 = specialinvoke r8.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaChoice handleChoice(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element)>(r1, r14, r10);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaGroup: void setParticle(org.apache.ws.commons.schema.XmlSchemaGroupParticle)>($r11);

        goto label5;

     label4:
        $r7 = interfaceinvoke r14.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z3 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("annotation");

        if $z3 == 0 goto label5;

        $r9 = virtualinvoke r8.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaAnnotation handleAnnotation(org.w3c.dom.Element)>(r14);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaGroup: void setAnnotation(org.apache.ws.commons.schema.XmlSchemaAnnotation)>($r9);

     label5:
        r14 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getNextSiblingElementNS(org.w3c.dom.Node,java.lang.String)>(r14, "http://www.w3.org/2001/XMLSchema");

        goto label1;

     label6:
        return $r0;
    }

    private org.apache.ws.commons.schema.XmlSchemaGroupRef handleGroupRef(org.apache.ws.commons.schema.XmlSchema, org.w3c.dom.Element, org.w3c.dom.Element)
    {
        org.apache.ws.commons.schema.XmlSchemaSequence $r11;
        long $l0, $l1;
        org.apache.ws.commons.schema.XmlSchemaAll $r10;
        org.apache.ws.commons.schema.SchemaBuilder r1;
        org.apache.ws.commons.schema.XmlSchema r7;
        java.lang.String $r4, $r5, $r6, $r12;
        boolean $z0, $z1, $z2, $z3;
        org.apache.ws.commons.schema.XmlSchemaGroupRef $r0;
        org.apache.ws.commons.schema.XmlSchemaAnnotation $r14;
        org.w3c.dom.Element r2, $r3, r8, r15;
        org.apache.ws.commons.schema.XmlSchemaChoice $r9;
        javax.xml.namespace.QName $r13;

        r1 := @this: org.apache.ws.commons.schema.SchemaBuilder;

        r7 := @parameter0: org.apache.ws.commons.schema.XmlSchema;

        r2 := @parameter1: org.w3c.dom.Element;

        r8 := @parameter2: org.w3c.dom.Element;

        $r0 = new org.apache.ws.commons.schema.XmlSchemaGroupRef;

        specialinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaGroupRef: void <init>()>();

        $l0 = virtualinvoke r1.<org.apache.ws.commons.schema.SchemaBuilder: long getMaxOccurs(org.w3c.dom.Element)>(r2);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaGroupRef: void setMaxOccurs(long)>($l0);

        $l1 = virtualinvoke r1.<org.apache.ws.commons.schema.SchemaBuilder: long getMinOccurs(org.w3c.dom.Element)>(r2);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaGroupRef: void setMinOccurs(long)>($l1);

        $r3 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getFirstChildElementNS(org.w3c.dom.Node,java.lang.String,java.lang.String)>(r2, "http://www.w3.org/2001/XMLSchema", "annotation");

        if $r3 == null goto label1;

        $r14 = virtualinvoke r1.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaAnnotation handleAnnotation(org.w3c.dom.Element)>($r3);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaGroupRef: void setAnnotation(org.apache.ws.commons.schema.XmlSchemaAnnotation)>($r14);

     label1:
        $z0 = interfaceinvoke r2.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("ref");

        if $z0 == 0 goto label2;

        $r12 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("ref");

        $r13 = specialinvoke r1.<org.apache.ws.commons.schema.SchemaBuilder: javax.xml.namespace.QName getRefQName(java.lang.String,org.w3c.dom.Node)>($r12, r2);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaGroupRef: void setRefName(javax.xml.namespace.QName)>($r13);

        return $r0;

     label2:
        r15 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getFirstChildElementNS(org.w3c.dom.Node,java.lang.String)>(r2, "http://www.w3.org/2001/XMLSchema");

     label3:
        if r15 == null goto label7;

        $r4 = interfaceinvoke r15.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("sequence");

        if $z1 == 0 goto label4;

        $r11 = specialinvoke r1.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaSequence handleSequence(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element)>(r7, r15, r8);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaGroupRef: void setParticle(org.apache.ws.commons.schema.XmlSchemaGroupParticle)>($r11);

        goto label6;

     label4:
        $r5 = interfaceinvoke r15.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("all");

        if $z2 == 0 goto label5;

        $r10 = specialinvoke r1.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaAll handleAll(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element)>(r7, r15, r8);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaGroupRef: void setParticle(org.apache.ws.commons.schema.XmlSchemaGroupParticle)>($r10);

        goto label6;

     label5:
        $r6 = interfaceinvoke r15.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z3 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("choice");

        if $z3 == 0 goto label6;

        $r9 = specialinvoke r1.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaChoice handleChoice(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element)>(r7, r15, r8);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaGroupRef: void setParticle(org.apache.ws.commons.schema.XmlSchemaGroupParticle)>($r9);

     label6:
        r15 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getNextSiblingElement(org.w3c.dom.Node)>(r15);

        goto label3;

     label7:
        return $r0;
    }

    private org.apache.ws.commons.schema.XmlSchemaNotation handleNotation(org.apache.ws.commons.schema.XmlSchema, org.w3c.dom.Element)
    {
        org.apache.ws.commons.schema.XmlSchemaNotation $r0;
        org.apache.ws.commons.schema.XmlSchemaAnnotation $r5;
        org.w3c.dom.Element r2, $r3;
        org.apache.ws.commons.schema.SchemaBuilder r4;
        org.apache.ws.commons.schema.XmlSchema r1;
        java.lang.String $r6, $r7, $r8, $r9;
        boolean $z0, $z1, $z2, $z3;

        r4 := @this: org.apache.ws.commons.schema.SchemaBuilder;

        r1 := @parameter0: org.apache.ws.commons.schema.XmlSchema;

        r2 := @parameter1: org.w3c.dom.Element;

        $r0 = new org.apache.ws.commons.schema.XmlSchemaNotation;

        specialinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaNotation: void <init>(org.apache.ws.commons.schema.XmlSchema)>(r1);

        $z0 = interfaceinvoke r2.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("id");

        if $z0 == 0 goto label1;

        $r9 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("id");

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaNotation: void setId(java.lang.String)>($r9);

     label1:
        $z1 = interfaceinvoke r2.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("name");

        if $z1 == 0 goto label2;

        $r8 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("name");

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaNotation: void setName(java.lang.String)>($r8);

     label2:
        $z2 = interfaceinvoke r2.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("public");

        if $z2 == 0 goto label3;

        $r7 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("public");

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaNotation: void setPublicNotation(java.lang.String)>($r7);

     label3:
        $z3 = interfaceinvoke r2.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("system");

        if $z3 == 0 goto label4;

        $r6 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("system");

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaNotation: void setSystem(java.lang.String)>($r6);

     label4:
        $r3 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getFirstChildElementNS(org.w3c.dom.Node,java.lang.String,java.lang.String)>(r2, "http://www.w3.org/2001/XMLSchema", "annotation");

        if $r3 == null goto label5;

        $r5 = virtualinvoke r4.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaAnnotation handleAnnotation(org.w3c.dom.Element)>($r3);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaNotation: void setAnnotation(org.apache.ws.commons.schema.XmlSchemaAnnotation)>($r5);

     label5:
        return $r0;
    }

    private org.apache.ws.commons.schema.XmlSchemaRedefine handleRedefine(org.apache.ws.commons.schema.XmlSchema, org.w3c.dom.Element, org.w3c.dom.Element)
    {
        org.apache.ws.commons.schema.utils.TargetNamespaceValidator $r5;
        org.apache.ws.commons.schema.XmlSchemaComplexType $r25;
        org.apache.ws.commons.schema.SchemaBuilder r4;
        java.util.Map $r18, $r22, $r26, $r30;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.ws.commons.schema.XmlSchemaAttributeGroup $r17;
        java.util.List $r20, $r24, $r28, $r32;
        org.apache.ws.commons.schema.XmlSchemaSimpleType $r29;
        javax.xml.namespace.QName $r19, $r23, $r27, $r31;
        org.apache.ws.commons.schema.XmlSchemaGroup $r21;
        org.apache.ws.commons.schema.XmlSchema r1, $r9, $r36;
        java.lang.String $r3, $r6, $r7, $r8, $r10, $r11, $r12, $r13, $r14, $r33, $r34, $r35;
        org.apache.ws.commons.schema.XmlSchemaRedefine $r0;
        org.apache.ws.commons.schema.XmlSchemaAnnotation $r15;
        org.w3c.dom.Element r2, r16, r37;

        r4 := @this: org.apache.ws.commons.schema.SchemaBuilder;

        r1 := @parameter0: org.apache.ws.commons.schema.XmlSchema;

        r2 := @parameter1: org.w3c.dom.Element;

        r16 := @parameter2: org.w3c.dom.Element;

        $r0 = new org.apache.ws.commons.schema.XmlSchemaRedefine;

        specialinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaRedefine: void <init>(org.apache.ws.commons.schema.XmlSchema)>(r1);

        $r3 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("schemaLocation");

        $r0.<org.apache.ws.commons.schema.XmlSchemaRedefine: java.lang.String schemaLocation> = $r3;

        $r5 = specialinvoke r4.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.utils.TargetNamespaceValidator newIncludeValidator(org.apache.ws.commons.schema.XmlSchema)>(r1);

        $r6 = virtualinvoke r1.<org.apache.ws.commons.schema.XmlSchema: java.lang.String getSourceURI()>();

        if $r6 == null goto label1;

        $r33 = virtualinvoke r1.<org.apache.ws.commons.schema.XmlSchema: java.lang.String getLogicalTargetNamespace()>();

        $r34 = $r0.<org.apache.ws.commons.schema.XmlSchemaRedefine: java.lang.String schemaLocation>;

        $r35 = virtualinvoke r1.<org.apache.ws.commons.schema.XmlSchema: java.lang.String getSourceURI()>();

        $r36 = virtualinvoke r4.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchema resolveXmlSchema(java.lang.String,java.lang.String,java.lang.String,org.apache.ws.commons.schema.utils.TargetNamespaceValidator)>($r33, $r34, $r35, $r5);

        $r0.<org.apache.ws.commons.schema.XmlSchemaRedefine: org.apache.ws.commons.schema.XmlSchema schema> = $r36;

        goto label2;

     label1:
        $r7 = virtualinvoke r1.<org.apache.ws.commons.schema.XmlSchema: java.lang.String getLogicalTargetNamespace()>();

        $r8 = $r0.<org.apache.ws.commons.schema.XmlSchemaRedefine: java.lang.String schemaLocation>;

        $r9 = virtualinvoke r4.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchema resolveXmlSchema(java.lang.String,java.lang.String,org.apache.ws.commons.schema.utils.TargetNamespaceValidator)>($r7, $r8, $r5);

        $r0.<org.apache.ws.commons.schema.XmlSchemaRedefine: org.apache.ws.commons.schema.XmlSchema schema> = $r9;

     label2:
        r37 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getFirstChildElementNS(org.w3c.dom.Node,java.lang.String)>(r2, "http://www.w3.org/2001/XMLSchema");

     label3:
        if r37 == null goto label9;

        $r10 = interfaceinvoke r37.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("simpleType");

        if $z0 == 0 goto label4;

        $r29 = virtualinvoke r4.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaSimpleType handleSimpleType(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element,boolean)>(r1, r37, r16, 0);

        $r30 = virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaRedefine: java.util.Map getSchemaTypes()>();

        $r31 = virtualinvoke $r29.<org.apache.ws.commons.schema.XmlSchemaType: javax.xml.namespace.QName getQName()>();

        interfaceinvoke $r30.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r31, $r29);

        $r32 = virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaRedefine: java.util.List getItems()>();

        interfaceinvoke $r32.<java.util.List: boolean add(java.lang.Object)>($r29);

        goto label8;

     label4:
        $r11 = interfaceinvoke r37.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z1 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("complexType");

        if $z1 == 0 goto label5;

        $r25 = virtualinvoke r4.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaComplexType handleComplexType(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element,boolean)>(r1, r37, r16, 1);

        $r26 = virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaRedefine: java.util.Map getSchemaTypes()>();

        $r27 = virtualinvoke $r25.<org.apache.ws.commons.schema.XmlSchemaType: javax.xml.namespace.QName getQName()>();

        interfaceinvoke $r26.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r27, $r25);

        $r28 = virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaRedefine: java.util.List getItems()>();

        interfaceinvoke $r28.<java.util.List: boolean add(java.lang.Object)>($r25);

        goto label8;

     label5:
        $r12 = interfaceinvoke r37.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z2 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>("group");

        if $z2 == 0 goto label6;

        $r21 = specialinvoke r4.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaGroup handleGroup(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element)>(r1, r37, r16);

        $r22 = virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaRedefine: java.util.Map getGroups()>();

        $r23 = virtualinvoke $r21.<org.apache.ws.commons.schema.XmlSchemaGroup: javax.xml.namespace.QName getQName()>();

        interfaceinvoke $r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r23, $r21);

        $r24 = virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaRedefine: java.util.List getItems()>();

        interfaceinvoke $r24.<java.util.List: boolean add(java.lang.Object)>($r21);

        goto label8;

     label6:
        $r13 = interfaceinvoke r37.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z3 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>("attributeGroup");

        if $z3 == 0 goto label7;

        $r17 = specialinvoke r4.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaAttributeGroup handleAttributeGroup(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element)>(r1, r37, r16);

        $r18 = virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaRedefine: java.util.Map getAttributeGroups()>();

        $r19 = virtualinvoke $r17.<org.apache.ws.commons.schema.XmlSchemaAttributeGroup: javax.xml.namespace.QName getQName()>();

        interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r19, $r17);

        $r20 = virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaRedefine: java.util.List getItems()>();

        interfaceinvoke $r20.<java.util.List: boolean add(java.lang.Object)>($r17);

        goto label8;

     label7:
        $r14 = interfaceinvoke r37.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z4 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>("annotation");

        if $z4 == 0 goto label8;

        $r15 = virtualinvoke r4.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaAnnotation handleAnnotation(org.w3c.dom.Element)>(r37);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaRedefine: void setAnnotation(org.apache.ws.commons.schema.XmlSchemaAnnotation)>($r15);

     label8:
        r37 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getNextSiblingElementNS(org.w3c.dom.Node,java.lang.String)>(r37, "http://www.w3.org/2001/XMLSchema");

        goto label3;

     label9:
        return $r0;
    }

    private void handleSchemaElementBasics(org.w3c.dom.Element, java.lang.String, org.apache.ws.commons.schema.XmlSchemaCollection$SchemaKey)
    {
        org.apache.ws.commons.schema.XmlSchemaForm $r16, $r18;
        org.apache.ws.commons.schema.XmlSchemaCollection$SchemaKey r1;
        org.apache.ws.commons.schema.XmlSchemaDerivationMethod $r20, $r22;
        org.apache.ws.commons.schema.XmlSchemaException $r3;
        org.apache.ws.commons.schema.XmlSchemaCollection $r2, $r11, $r12;
        org.apache.ws.commons.schema.SchemaBuilder r0;
        org.apache.ws.commons.schema.XmlSchema $r6, $r10, $r13, $r15, $r17, $r19, $r21, $r24, $r25;
        java.lang.String $r7, $r9, r23, $r26;
        boolean $z0, $z1;
        org.w3c.dom.Element r14;
        java.lang.StringBuilder $r4, $r5, $r8;

        r0 := @this: org.apache.ws.commons.schema.SchemaBuilder;

        r14 := @parameter0: org.w3c.dom.Element;

        r23 := @parameter1: java.lang.String;

        r1 := @parameter2: org.apache.ws.commons.schema.XmlSchemaCollection$SchemaKey;

        $r2 = r0.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaCollection collection>;

        $z0 = virtualinvoke $r2.<org.apache.ws.commons.schema.XmlSchemaCollection: boolean containsSchema(org.apache.ws.commons.schema.XmlSchemaCollection$SchemaKey)>(r1);

        if $z0 != 0 goto label1;

        $r11 = r0.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaCollection collection>;

        $r10 = r0.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchema currentSchema>;

        virtualinvoke $r11.<org.apache.ws.commons.schema.XmlSchemaCollection: void addSchema(org.apache.ws.commons.schema.XmlSchemaCollection$SchemaKey,org.apache.ws.commons.schema.XmlSchema)>(r1, $r10);

        $r13 = r0.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchema currentSchema>;

        $r12 = r0.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaCollection collection>;

        virtualinvoke $r13.<org.apache.ws.commons.schema.XmlSchema: void setParent(org.apache.ws.commons.schema.XmlSchemaCollection)>($r12);

        goto label2;

     label1:
        $r3 = new org.apache.ws.commons.schema.XmlSchemaException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Schema name conflict in collection. Namespace: ");

        $r6 = r0.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchema currentSchema>;

        $r7 = virtualinvoke $r6.<org.apache.ws.commons.schema.XmlSchema: java.lang.String getLogicalTargetNamespace()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<org.apache.ws.commons.schema.XmlSchemaException: void <init>(java.lang.String)>($r9);

        throw $r3;

     label2:
        $r15 = r0.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchema currentSchema>;

        $r16 = virtualinvoke r0.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaForm getFormDefault(org.w3c.dom.Element,java.lang.String)>(r14, "elementFormDefault");

        virtualinvoke $r15.<org.apache.ws.commons.schema.XmlSchema: void setElementFormDefault(org.apache.ws.commons.schema.XmlSchemaForm)>($r16);

        $r17 = r0.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchema currentSchema>;

        $r18 = virtualinvoke r0.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaForm getFormDefault(org.w3c.dom.Element,java.lang.String)>(r14, "attributeFormDefault");

        virtualinvoke $r17.<org.apache.ws.commons.schema.XmlSchema: void setAttributeFormDefault(org.apache.ws.commons.schema.XmlSchemaForm)>($r18);

        $r19 = r0.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchema currentSchema>;

        $r20 = virtualinvoke r0.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaDerivationMethod getDerivation(org.w3c.dom.Element,java.lang.String)>(r14, "blockDefault");

        virtualinvoke $r19.<org.apache.ws.commons.schema.XmlSchema: void setBlockDefault(org.apache.ws.commons.schema.XmlSchemaDerivationMethod)>($r20);

        $r21 = r0.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchema currentSchema>;

        $r22 = virtualinvoke r0.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaDerivationMethod getDerivation(org.w3c.dom.Element,java.lang.String)>(r14, "finalDefault");

        virtualinvoke $r21.<org.apache.ws.commons.schema.XmlSchema: void setFinalDefault(org.apache.ws.commons.schema.XmlSchemaDerivationMethod)>($r22);

        $z1 = interfaceinvoke r14.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("id");

        if $z1 == 0 goto label3;

        $r25 = r0.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchema currentSchema>;

        $r26 = interfaceinvoke r14.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("id");

        virtualinvoke $r25.<org.apache.ws.commons.schema.XmlSchema: void setId(java.lang.String)>($r26);

     label3:
        $r24 = r0.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchema currentSchema>;

        virtualinvoke $r24.<org.apache.ws.commons.schema.XmlSchema: void setSourceURI(java.lang.String)>(r23);

        return;
    }

    private void handleSchemaElementChild(org.w3c.dom.Element, org.w3c.dom.Element)
    {
        org.apache.ws.commons.schema.XmlSchemaComplexType $r25;
        org.apache.ws.commons.schema.XmlSchemaCollection $r26, $r30;
        org.apache.ws.commons.schema.SchemaBuilder r12;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        org.apache.ws.commons.schema.XmlSchemaSimpleType $r29;
        javax.xml.namespace.QName $r27, $r31;
        org.apache.ws.commons.schema.XmlSchema $r14, $r15, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r28;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        org.apache.ws.commons.schema.XmlSchemaAnnotation $r13;
        org.w3c.dom.Element r0, r16;

        r12 := @this: org.apache.ws.commons.schema.SchemaBuilder;

        r16 := @parameter0: org.w3c.dom.Element;

        r0 := @parameter1: org.w3c.dom.Element;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("simpleType");

        if $z0 == 0 goto label01;

        $r28 = r12.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchema currentSchema>;

        $r29 = virtualinvoke r12.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaSimpleType handleSimpleType(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element,boolean)>($r28, r0, r16, 1);

        $r30 = r12.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaCollection collection>;

        $r31 = virtualinvoke $r29.<org.apache.ws.commons.schema.XmlSchemaType: javax.xml.namespace.QName getQName()>();

        virtualinvoke $r30.<org.apache.ws.commons.schema.XmlSchemaCollection: void resolveType(javax.xml.namespace.QName,org.apache.ws.commons.schema.XmlSchemaType)>($r31, $r29);

        goto label11;

     label01:
        $r2 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("complexType");

        if $z1 == 0 goto label02;

        $r24 = r12.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchema currentSchema>;

        $r25 = virtualinvoke r12.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaComplexType handleComplexType(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element,boolean)>($r24, r0, r16, 1);

        $r26 = r12.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaCollection collection>;

        $r27 = virtualinvoke $r25.<org.apache.ws.commons.schema.XmlSchemaType: javax.xml.namespace.QName getQName()>();

        virtualinvoke $r26.<org.apache.ws.commons.schema.XmlSchemaCollection: void resolveType(javax.xml.namespace.QName,org.apache.ws.commons.schema.XmlSchemaType)>($r27, $r25);

        goto label11;

     label02:
        $r3 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("element");

        if $z2 == 0 goto label03;

        $r23 = r12.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchema currentSchema>;

        virtualinvoke r12.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaElement handleElement(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element,boolean)>($r23, r0, r16, 1);

        goto label11;

     label03:
        $r4 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z3 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("include");

        if $z3 == 0 goto label04;

        $r22 = r12.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchema currentSchema>;

        virtualinvoke r12.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaInclude handleInclude(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element)>($r22, r0, r16);

        goto label11;

     label04:
        $r5 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z4 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("import");

        if $z4 == 0 goto label05;

        $r21 = r12.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchema currentSchema>;

        virtualinvoke r12.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaImport handleImport(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element)>($r21, r0, r16);

        goto label11;

     label05:
        $r6 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z5 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("group");

        if $z5 == 0 goto label06;

        $r20 = r12.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchema currentSchema>;

        specialinvoke r12.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaGroup handleGroup(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element)>($r20, r0, r16);

        goto label11;

     label06:
        $r7 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z6 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("attributeGroup");

        if $z6 == 0 goto label07;

        $r19 = r12.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchema currentSchema>;

        specialinvoke r12.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaAttributeGroup handleAttributeGroup(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element)>($r19, r0, r16);

        goto label11;

     label07:
        $r8 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z7 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("attribute");

        if $z7 == 0 goto label08;

        $r18 = r12.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchema currentSchema>;

        specialinvoke r12.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaAttribute handleAttribute(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element,boolean)>($r18, r0, r16, 1);

        goto label11;

     label08:
        $r9 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z8 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("redefine");

        if $z8 == 0 goto label09;

        $r17 = r12.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchema currentSchema>;

        specialinvoke r12.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaRedefine handleRedefine(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element)>($r17, r0, r16);

        goto label11;

     label09:
        $r10 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z9 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("notation");

        if $z9 == 0 goto label10;

        $r15 = r12.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchema currentSchema>;

        specialinvoke r12.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaNotation handleNotation(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element)>($r15, r0);

        goto label11;

     label10:
        $r11 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z10 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("annotation");

        if $z10 == 0 goto label11;

        $r13 = virtualinvoke r12.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaAnnotation handleAnnotation(org.w3c.dom.Element)>(r0);

        $r14 = r12.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchema currentSchema>;

        virtualinvoke $r14.<org.apache.ws.commons.schema.XmlSchema: void setAnnotation(org.apache.ws.commons.schema.XmlSchemaAnnotation)>($r13);

     label11:
        return;
    }

    private org.apache.ws.commons.schema.XmlSchemaSequence handleSequence(org.apache.ws.commons.schema.XmlSchema, org.w3c.dom.Element, org.w3c.dom.Element)
    {
        org.apache.ws.commons.schema.XmlSchemaAny $r12;
        org.apache.ws.commons.schema.XmlSchemaSequence $r0, $r20;
        long $l0, $l1;
        org.apache.ws.commons.schema.XmlSchemaElement $r18;
        org.apache.ws.commons.schema.SchemaBuilder r1;
        org.apache.ws.commons.schema.XmlSchema r10;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.ws.commons.schema.XmlSchemaGroupRef $r16;
        org.apache.ws.commons.schema.XmlSchemaAnnotation $r9;
        java.util.List $r13, $r15, $r17, $r19, $r21;
        org.w3c.dom.Element r2, r11, r22;
        org.apache.ws.commons.schema.XmlSchemaChoice $r14;

        r1 := @this: org.apache.ws.commons.schema.SchemaBuilder;

        r10 := @parameter0: org.apache.ws.commons.schema.XmlSchema;

        r2 := @parameter1: org.w3c.dom.Element;

        r11 := @parameter2: org.w3c.dom.Element;

        $r0 = new org.apache.ws.commons.schema.XmlSchemaSequence;

        specialinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaSequence: void <init>()>();

        $l0 = virtualinvoke r1.<org.apache.ws.commons.schema.SchemaBuilder: long getMinOccurs(org.w3c.dom.Element)>(r2);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaSequence: void setMinOccurs(long)>($l0);

        $l1 = virtualinvoke r1.<org.apache.ws.commons.schema.SchemaBuilder: long getMaxOccurs(org.w3c.dom.Element)>(r2);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaSequence: void setMaxOccurs(long)>($l1);

        r22 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getFirstChildElementNS(org.w3c.dom.Node,java.lang.String)>(r2, "http://www.w3.org/2001/XMLSchema");

     label1:
        if r22 == null goto label8;

        $r3 = interfaceinvoke r22.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("sequence");

        if $z0 == 0 goto label2;

        $r20 = specialinvoke r1.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaSequence handleSequence(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element)>(r10, r22, r11);

        $r21 = virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaSequence: java.util.List getItems()>();

        interfaceinvoke $r21.<java.util.List: boolean add(java.lang.Object)>($r20);

        goto label7;

     label2:
        $r4 = interfaceinvoke r22.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("element");

        if $z1 == 0 goto label3;

        $r18 = virtualinvoke r1.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaElement handleElement(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element,boolean)>(r10, r22, r11, 0);

        $r19 = virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaSequence: java.util.List getItems()>();

        interfaceinvoke $r19.<java.util.List: boolean add(java.lang.Object)>($r18);

        goto label7;

     label3:
        $r5 = interfaceinvoke r22.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("group");

        if $z2 == 0 goto label4;

        $r16 = specialinvoke r1.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaGroupRef handleGroupRef(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element)>(r10, r22, r11);

        $r17 = virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaSequence: java.util.List getItems()>();

        interfaceinvoke $r17.<java.util.List: boolean add(java.lang.Object)>($r16);

        goto label7;

     label4:
        $r6 = interfaceinvoke r22.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z3 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("choice");

        if $z3 == 0 goto label5;

        $r14 = specialinvoke r1.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaChoice handleChoice(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element)>(r10, r22, r11);

        $r15 = virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaSequence: java.util.List getItems()>();

        interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>($r14);

        goto label7;

     label5:
        $r7 = interfaceinvoke r22.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z4 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("any");

        if $z4 == 0 goto label6;

        $r12 = specialinvoke r1.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaAny handleAny(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element)>(r10, r22, r11);

        $r13 = virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaSequence: java.util.List getItems()>();

        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>($r12);

        goto label7;

     label6:
        $r8 = interfaceinvoke r22.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z5 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("annotation");

        if $z5 == 0 goto label7;

        $r9 = virtualinvoke r1.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaAnnotation handleAnnotation(org.w3c.dom.Element)>(r22);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaSequence: void setAnnotation(org.apache.ws.commons.schema.XmlSchemaAnnotation)>($r9);

     label7:
        r22 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getNextSiblingElementNS(org.w3c.dom.Node,java.lang.String)>(r22, "http://www.w3.org/2001/XMLSchema");

        goto label1;

     label8:
        return $r0;
    }

    private org.apache.ws.commons.schema.XmlSchemaSimpleContent handleSimpleContent(org.apache.ws.commons.schema.XmlSchema, org.w3c.dom.Element, org.w3c.dom.Element)
    {
        org.apache.ws.commons.schema.XmlSchemaAnnotation $r6;
        org.apache.ws.commons.schema.XmlSchemaSimpleContentRestriction $r10;
        org.w3c.dom.Element r1, r8, r11;
        org.apache.ws.commons.schema.XmlSchemaSimpleContent $r0;
        org.apache.ws.commons.schema.SchemaBuilder r5;
        org.apache.ws.commons.schema.XmlSchema r7;
        org.apache.ws.commons.schema.XmlSchemaSimpleContentExtension $r9;
        java.lang.String $r2, $r3, $r4;
        boolean $z0, $z1, $z2;

        r5 := @this: org.apache.ws.commons.schema.SchemaBuilder;

        r7 := @parameter0: org.apache.ws.commons.schema.XmlSchema;

        r1 := @parameter1: org.w3c.dom.Element;

        r8 := @parameter2: org.w3c.dom.Element;

        $r0 = new org.apache.ws.commons.schema.XmlSchemaSimpleContent;

        specialinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaSimpleContent: void <init>()>();

        r11 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getFirstChildElementNS(org.w3c.dom.Node,java.lang.String)>(r1, "http://www.w3.org/2001/XMLSchema");

     label1:
        if r11 == null goto label5;

        $r2 = interfaceinvoke r11.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("restriction");

        if $z0 == 0 goto label2;

        $r10 = specialinvoke r5.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaSimpleContentRestriction handleSimpleContentRestriction(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element)>(r7, r11, r8);

        $r0.<org.apache.ws.commons.schema.XmlSchemaSimpleContent: org.apache.ws.commons.schema.XmlSchemaContent content> = $r10;

        goto label4;

     label2:
        $r3 = interfaceinvoke r11.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("extension");

        if $z1 == 0 goto label3;

        $r9 = specialinvoke r5.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaSimpleContentExtension handleSimpleContentExtension(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element)>(r7, r11, r8);

        $r0.<org.apache.ws.commons.schema.XmlSchemaSimpleContent: org.apache.ws.commons.schema.XmlSchemaContent content> = $r9;

        goto label4;

     label3:
        $r4 = interfaceinvoke r11.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("annotation");

        if $z2 == 0 goto label4;

        $r6 = virtualinvoke r5.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaAnnotation handleAnnotation(org.w3c.dom.Element)>(r11);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaSimpleContent: void setAnnotation(org.apache.ws.commons.schema.XmlSchemaAnnotation)>($r6);

     label4:
        r11 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getNextSiblingElementNS(org.w3c.dom.Node,java.lang.String)>(r11, "http://www.w3.org/2001/XMLSchema");

        goto label1;

     label5:
        return $r0;
    }

    private org.apache.ws.commons.schema.XmlSchemaSimpleContentExtension handleSimpleContentExtension(org.apache.ws.commons.schema.XmlSchema, org.w3c.dom.Element, org.w3c.dom.Element)
    {
        org.apache.ws.commons.schema.XmlSchemaAttribute $r13;
        org.apache.ws.commons.schema.XmlSchemaAnyAttribute $r10;
        org.apache.ws.commons.schema.SchemaBuilder r6;
        org.apache.ws.commons.schema.XmlSchema r8;
        org.apache.ws.commons.schema.XmlSchemaSimpleContentExtension $r0;
        java.lang.String $r2, $r3, $r4, $r5, $r15;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.ws.commons.schema.XmlSchemaAttributeGroupRef $r11;
        org.apache.ws.commons.schema.XmlSchemaAnnotation $r7;
        java.util.List $r12, $r14;
        org.w3c.dom.Element r1, r9, r17;
        javax.xml.namespace.QName $r16;

        r6 := @this: org.apache.ws.commons.schema.SchemaBuilder;

        r8 := @parameter0: org.apache.ws.commons.schema.XmlSchema;

        r1 := @parameter1: org.w3c.dom.Element;

        r9 := @parameter2: org.w3c.dom.Element;

        $r0 = new org.apache.ws.commons.schema.XmlSchemaSimpleContentExtension;

        specialinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaSimpleContentExtension: void <init>()>();

        $z0 = interfaceinvoke r1.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("base");

        if $z0 == 0 goto label1;

        $r15 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("base");

        $r16 = specialinvoke r6.<org.apache.ws.commons.schema.SchemaBuilder: javax.xml.namespace.QName getRefQName(java.lang.String,org.w3c.dom.Node)>($r15, r1);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaSimpleContentExtension: void setBaseTypeName(javax.xml.namespace.QName)>($r16);

     label1:
        r17 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getFirstChildElementNS(org.w3c.dom.Node,java.lang.String)>(r1, "http://www.w3.org/2001/XMLSchema");

     label2:
        if r17 == null goto label7;

        $r2 = interfaceinvoke r17.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("attribute");

        if $z1 == 0 goto label3;

        $r13 = specialinvoke r6.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaAttribute handleAttribute(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element)>(r8, r17, r9);

        $r14 = virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaSimpleContentExtension: java.util.List getAttributes()>();

        interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>($r13);

        goto label6;

     label3:
        $r3 = interfaceinvoke r17.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("attributeGroup");

        if $z2 == 0 goto label4;

        $r11 = specialinvoke r6.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaAttributeGroupRef handleAttributeGroupRef(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element)>(r8, r17);

        $r12 = virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaSimpleContentExtension: java.util.List getAttributes()>();

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r11);

        goto label6;

     label4:
        $r4 = interfaceinvoke r17.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z3 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("anyAttribute");

        if $z3 == 0 goto label5;

        $r10 = specialinvoke r6.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaAnyAttribute handleAnyAttribute(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element)>(r8, r17, r9);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaSimpleContentExtension: void setAnyAttribute(org.apache.ws.commons.schema.XmlSchemaAnyAttribute)>($r10);

        goto label6;

     label5:
        $r5 = interfaceinvoke r17.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z4 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("annotation");

        if $z4 == 0 goto label6;

        $r7 = virtualinvoke r6.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaAnnotation handleAnnotation(org.w3c.dom.Element)>(r17);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaSimpleContentExtension: void setAnnotation(org.apache.ws.commons.schema.XmlSchemaAnnotation)>($r7);

     label6:
        r17 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getNextSiblingElementNS(org.w3c.dom.Node,java.lang.String)>(r17, "http://www.w3.org/2001/XMLSchema");

        goto label2;

     label7:
        return $r0;
    }

    private org.apache.ws.commons.schema.XmlSchemaSimpleContentRestriction handleSimpleContentRestriction(org.apache.ws.commons.schema.XmlSchema, org.w3c.dom.Element, org.w3c.dom.Element)
    {
        org.apache.ws.commons.schema.XmlSchemaFacet $r7;
        org.apache.ws.commons.schema.SchemaBuilder r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        org.apache.ws.commons.schema.XmlSchemaAttributeGroupRef $r16;
        org.apache.ws.commons.schema.XmlSchemaSimpleContentRestriction $r0;
        java.util.List $r8, $r17, $r19;
        org.apache.ws.commons.schema.XmlSchemaSimpleType $r15;
        javax.xml.namespace.QName $r22;
        org.apache.ws.commons.schema.XmlSchemaAttribute $r18;
        org.apache.ws.commons.schema.XmlSchemaAnyAttribute $r14;
        org.apache.ws.commons.schema.XmlSchema r12;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r20, $r21;
        org.apache.ws.commons.schema.XmlSchemaAnnotation $r10, $r11;
        org.w3c.dom.Element r1, r13, r23;

        r9 := @this: org.apache.ws.commons.schema.SchemaBuilder;

        r12 := @parameter0: org.apache.ws.commons.schema.XmlSchema;

        r1 := @parameter1: org.w3c.dom.Element;

        r13 := @parameter2: org.w3c.dom.Element;

        $r0 = new org.apache.ws.commons.schema.XmlSchemaSimpleContentRestriction;

        specialinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaSimpleContentRestriction: void <init>()>();

        $z0 = interfaceinvoke r1.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("base");

        if $z0 == 0 goto label01;

        $r21 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("base");

        $r22 = specialinvoke r9.<org.apache.ws.commons.schema.SchemaBuilder: javax.xml.namespace.QName getRefQName(java.lang.String,org.w3c.dom.Node)>($r21, r1);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaSimpleContentRestriction: void setBaseTypeName(javax.xml.namespace.QName)>($r22);

     label01:
        $z1 = interfaceinvoke r1.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("id");

        if $z1 == 0 goto label02;

        $r20 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("id");

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaSimpleContentRestriction: void setId(java.lang.String)>($r20);

     label02:
        r23 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getFirstChildElementNS(org.w3c.dom.Node,java.lang.String)>(r1, "http://www.w3.org/2001/XMLSchema");

     label03:
        if r23 == null goto label11;

        $r2 = interfaceinvoke r23.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z2 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("attribute");

        if $z2 == 0 goto label04;

        $r18 = specialinvoke r9.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaAttribute handleAttribute(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element)>(r12, r23, r13);

        $r19 = virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaSimpleContentRestriction: java.util.List getAttributes()>();

        interfaceinvoke $r19.<java.util.List: boolean add(java.lang.Object)>($r18);

        goto label10;

     label04:
        $r3 = interfaceinvoke r23.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z3 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("attributeGroup");

        if $z3 == 0 goto label05;

        $r16 = specialinvoke r9.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaAttributeGroupRef handleAttributeGroupRef(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element)>(r12, r23);

        $r17 = virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaSimpleContentRestriction: java.util.List getAttributes()>();

        interfaceinvoke $r17.<java.util.List: boolean add(java.lang.Object)>($r16);

        goto label10;

     label05:
        $r4 = interfaceinvoke r23.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z4 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("simpleType");

        if $z4 == 0 goto label06;

        $r15 = virtualinvoke r9.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaSimpleType handleSimpleType(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element,boolean)>(r12, r23, r13, 0);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaSimpleContentRestriction: void setBaseType(org.apache.ws.commons.schema.XmlSchemaSimpleType)>($r15);

        goto label10;

     label06:
        $r5 = interfaceinvoke r23.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z5 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("anyAttribute");

        if $z5 == 0 goto label07;

        $r14 = specialinvoke r9.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaAnyAttribute handleAnyAttribute(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element)>(r12, r23, r13);

        $r0.<org.apache.ws.commons.schema.XmlSchemaSimpleContentRestriction: org.apache.ws.commons.schema.XmlSchemaAnyAttribute anyAttribute> = $r14;

        goto label10;

     label07:
        $r6 = interfaceinvoke r23.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z6 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("annotation");

        if $z6 == 0 goto label08;

        $r11 = virtualinvoke r9.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaAnnotation handleAnnotation(org.w3c.dom.Element)>(r23);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaSimpleContentRestriction: void setAnnotation(org.apache.ws.commons.schema.XmlSchemaAnnotation)>($r11);

        goto label10;

     label08:
        $r7 = staticinvoke <org.apache.ws.commons.schema.XmlSchemaFacet: org.apache.ws.commons.schema.XmlSchemaFacet construct(org.w3c.dom.Element)>(r23);

        $z7 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: boolean anyElementsWithNameNS(org.w3c.dom.Element,java.lang.String,java.lang.String)>(r23, "http://www.w3.org/2001/XMLSchema", "annotation");

        if $z7 == 0 goto label09;

        $r10 = virtualinvoke r9.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaAnnotation handleAnnotation(org.w3c.dom.Element)>(r23);

        virtualinvoke $r7.<org.apache.ws.commons.schema.XmlSchemaFacet: void setAnnotation(org.apache.ws.commons.schema.XmlSchemaAnnotation)>($r10);

     label09:
        $r8 = virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaSimpleContentRestriction: java.util.List getFacets()>();

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r7);

        specialinvoke r9.<org.apache.ws.commons.schema.SchemaBuilder: void processExtensibilityComponents(org.apache.ws.commons.schema.XmlSchemaObject,org.w3c.dom.Element,boolean)>($r7, r23, 1);

     label10:
        r23 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getNextSiblingElementNS(org.w3c.dom.Node,java.lang.String)>(r23, "http://www.w3.org/2001/XMLSchema");

        goto label03;

     label11:
        return $r0;
    }

    private void handleSimpleTypeFinal(org.w3c.dom.Element, org.apache.ws.commons.schema.XmlSchemaSimpleType)
    {
        org.w3c.dom.Element r0;
        org.apache.ws.commons.schema.XmlSchemaDerivationMethod $r3;
        org.apache.ws.commons.schema.SchemaBuilder r4;
        org.apache.ws.commons.schema.XmlSchemaSimpleType r2;
        java.lang.String $r1;
        boolean $z0;

        r4 := @this: org.apache.ws.commons.schema.SchemaBuilder;

        r0 := @parameter0: org.w3c.dom.Element;

        r2 := @parameter1: org.apache.ws.commons.schema.XmlSchemaSimpleType;

        $z0 = interfaceinvoke r0.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("final");

        if $z0 == 0 goto label1;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("final");

        $r3 = staticinvoke <org.apache.ws.commons.schema.XmlSchemaDerivationMethod: org.apache.ws.commons.schema.XmlSchemaDerivationMethod schemaValueOf(java.lang.String)>($r1);

        virtualinvoke r2.<org.apache.ws.commons.schema.XmlSchemaSimpleType: void setFinal(org.apache.ws.commons.schema.XmlSchemaDerivationMethod)>($r3);

     label1:
        return;
    }

    private void handleSimpleTypeList(org.apache.ws.commons.schema.XmlSchema, org.w3c.dom.Element, org.apache.ws.commons.schema.XmlSchemaSimpleType, org.w3c.dom.Element)
    {
        org.apache.ws.commons.schema.XmlSchemaAnnotation $r5;
        org.w3c.dom.Element r1, $r2, r7, $r11;
        org.apache.ws.commons.schema.SchemaBuilder r4;
        org.apache.ws.commons.schema.XmlSchemaSimpleType r3, $r8;
        org.apache.ws.commons.schema.XmlSchema r6;
        java.lang.String $r9;
        javax.xml.namespace.QName $r10;
        org.apache.ws.commons.schema.XmlSchemaSimpleTypeList $r0;
        boolean $z0;

        r4 := @this: org.apache.ws.commons.schema.SchemaBuilder;

        r6 := @parameter0: org.apache.ws.commons.schema.XmlSchema;

        r7 := @parameter1: org.w3c.dom.Element;

        r3 := @parameter2: org.apache.ws.commons.schema.XmlSchemaSimpleType;

        r1 := @parameter3: org.w3c.dom.Element;

        $r0 = new org.apache.ws.commons.schema.XmlSchemaSimpleTypeList;

        specialinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaSimpleTypeList: void <init>()>();

        $r2 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getFirstChildElementNS(org.w3c.dom.Node,java.lang.String,java.lang.String)>(r1, "http://www.w3.org/2001/XMLSchema", "simpleType");

        $z0 = interfaceinvoke r1.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("itemType");

        if $z0 == 0 goto label1;

        $r9 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("itemType");

        $r10 = specialinvoke r4.<org.apache.ws.commons.schema.SchemaBuilder: javax.xml.namespace.QName getRefQName(java.lang.String,org.w3c.dom.Node)>($r9, r1);

        $r0.<org.apache.ws.commons.schema.XmlSchemaSimpleTypeList: javax.xml.namespace.QName itemTypeName> = $r10;

        goto label2;

     label1:
        if $r2 == null goto label2;

        $r8 = virtualinvoke r4.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaSimpleType handleSimpleType(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element,boolean)>(r6, $r2, r7, 0);

        $r0.<org.apache.ws.commons.schema.XmlSchemaSimpleTypeList: org.apache.ws.commons.schema.XmlSchemaSimpleType itemType> = $r8;

     label2:
        $r11 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getFirstChildElementNS(org.w3c.dom.Node,java.lang.String,java.lang.String)>(r1, "http://www.w3.org/2001/XMLSchema", "annotation");

        if $r11 == null goto label3;

        $r5 = virtualinvoke r4.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaAnnotation handleAnnotation(org.w3c.dom.Element)>($r11);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaSimpleTypeList: void setAnnotation(org.apache.ws.commons.schema.XmlSchemaAnnotation)>($r5);

     label3:
        r3.<org.apache.ws.commons.schema.XmlSchemaSimpleType: org.apache.ws.commons.schema.XmlSchemaSimpleTypeContent content> = $r0;

        return;
    }

    private void handleSimpleTypeRestriction(org.apache.ws.commons.schema.XmlSchema, org.w3c.dom.Element, org.apache.ws.commons.schema.XmlSchemaSimpleType, org.w3c.dom.Element)
    {
        org.apache.ws.commons.schema.XmlSchemaFacet $r7;
        org.apache.ws.commons.schema.SchemaBuilder r9;
        org.apache.ws.commons.schema.XmlSchema r12;
        java.lang.String $r5, $r6, $r16;
        boolean $z0, $z1, $z2;
        org.apache.ws.commons.schema.XmlSchemaSimpleTypeRestriction $r0;
        org.apache.ws.commons.schema.XmlSchemaAnnotation $r11, $r18;
        java.util.List $r10;
        org.w3c.dom.Element r1, $r2, $r3, $r8, r13, r19;
        org.apache.ws.commons.schema.XmlSchemaSimpleType r4, $r14;
        org.apache.ws.commons.schema.utils.NodeNamespaceContext $r15;
        javax.xml.namespace.QName $r17;

        r9 := @this: org.apache.ws.commons.schema.SchemaBuilder;

        r12 := @parameter0: org.apache.ws.commons.schema.XmlSchema;

        r13 := @parameter1: org.w3c.dom.Element;

        r4 := @parameter2: org.apache.ws.commons.schema.XmlSchemaSimpleType;

        r1 := @parameter3: org.w3c.dom.Element;

        $r0 = new org.apache.ws.commons.schema.XmlSchemaSimpleTypeRestriction;

        specialinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaSimpleTypeRestriction: void <init>()>();

        $r2 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getFirstChildElementNS(org.w3c.dom.Node,java.lang.String,java.lang.String)>(r1, "http://www.w3.org/2001/XMLSchema", "annotation");

        if $r2 == null goto label1;

        $r18 = virtualinvoke r9.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaAnnotation handleAnnotation(org.w3c.dom.Element)>($r2);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaSimpleTypeRestriction: void setAnnotation(org.apache.ws.commons.schema.XmlSchemaAnnotation)>($r18);

     label1:
        $r3 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getFirstChildElementNS(org.w3c.dom.Node,java.lang.String,java.lang.String)>(r1, "http://www.w3.org/2001/XMLSchema", "simpleType");

        $z0 = interfaceinvoke r1.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("base");

        if $z0 == 0 goto label2;

        $r15 = staticinvoke <org.apache.ws.commons.schema.utils.NodeNamespaceContext: org.apache.ws.commons.schema.utils.NodeNamespaceContext getNamespaceContext(org.w3c.dom.Node)>(r1);

        $r16 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("base");

        $r17 = specialinvoke r9.<org.apache.ws.commons.schema.SchemaBuilder: javax.xml.namespace.QName getRefQName(java.lang.String,javax.xml.namespace.NamespaceContext)>($r16, $r15);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaSimpleTypeRestriction: void setBaseTypeName(javax.xml.namespace.QName)>($r17);

        goto label3;

     label2:
        if $r3 == null goto label3;

        $r14 = virtualinvoke r9.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaSimpleType handleSimpleType(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element,boolean)>(r12, $r3, r13, 0);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaSimpleTypeRestriction: void setBaseType(org.apache.ws.commons.schema.XmlSchemaSimpleType)>($r14);

     label3:
        r19 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getFirstChildElementNS(org.w3c.dom.Node,java.lang.String)>(r1, "http://www.w3.org/2001/XMLSchema");

     label4:
        if r19 == null goto label7;

        $r5 = interfaceinvoke r19.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("annotation");

        if $z1 != 0 goto label6;

        $r6 = interfaceinvoke r19.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("simpleType");

        if $z2 != 0 goto label6;

        $r7 = staticinvoke <org.apache.ws.commons.schema.XmlSchemaFacet: org.apache.ws.commons.schema.XmlSchemaFacet construct(org.w3c.dom.Element)>(r19);

        $r8 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getFirstChildElementNS(org.w3c.dom.Node,java.lang.String,java.lang.String)>(r19, "http://www.w3.org/2001/XMLSchema", "annotation");

        if $r8 == null goto label5;

        $r11 = virtualinvoke r9.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaAnnotation handleAnnotation(org.w3c.dom.Element)>($r8);

        virtualinvoke $r7.<org.apache.ws.commons.schema.XmlSchemaFacet: void setAnnotation(org.apache.ws.commons.schema.XmlSchemaAnnotation)>($r11);

     label5:
        specialinvoke r9.<org.apache.ws.commons.schema.SchemaBuilder: void processExtensibilityComponents(org.apache.ws.commons.schema.XmlSchemaObject,org.w3c.dom.Element,boolean)>($r7, r19, 1);

        $r10 = virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaSimpleTypeRestriction: java.util.List getFacets()>();

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r7);

     label6:
        r19 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getNextSiblingElementNS(org.w3c.dom.Node,java.lang.String)>(r19, "http://www.w3.org/2001/XMLSchema");

        goto label4;

     label7:
        r4.<org.apache.ws.commons.schema.XmlSchemaSimpleType: org.apache.ws.commons.schema.XmlSchemaSimpleTypeContent content> = $r0;

        return;
    }

    private void handleSimpleTypeUnion(org.apache.ws.commons.schema.XmlSchema, org.w3c.dom.Element, org.apache.ws.commons.schema.XmlSchemaSimpleType, org.w3c.dom.Element)
    {
        java.util.Vector $r18;
        org.apache.ws.commons.schema.SchemaBuilder r4;
        javax.xml.namespace.QName[] $r20, $r21;
        java.util.StringTokenizer $r19;
        int $i0;
        org.apache.ws.commons.schema.XmlSchema r6;
        java.lang.String $r11, $r14, $r16, $r17, $r22;
        boolean $z0, $z1, $z2;
        org.apache.ws.commons.schema.XmlSchemaAnnotation $r5;
        java.util.List $r9;
        org.w3c.dom.Element r1, $r2, r7, r24;
        org.apache.ws.commons.schema.XmlSchemaSimpleType r3, $r8;
        org.apache.ws.commons.schema.XmlSchemaSimpleTypeUnion $r0;
        java.lang.StringBuilder $r10, $r12, $r13, $r15;
        javax.xml.namespace.QName $r23;

        r4 := @this: org.apache.ws.commons.schema.SchemaBuilder;

        r6 := @parameter0: org.apache.ws.commons.schema.XmlSchema;

        r7 := @parameter1: org.w3c.dom.Element;

        r3 := @parameter2: org.apache.ws.commons.schema.XmlSchemaSimpleType;

        r1 := @parameter3: org.w3c.dom.Element;

        $r0 = new org.apache.ws.commons.schema.XmlSchemaSimpleTypeUnion;

        specialinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaSimpleTypeUnion: void <init>()>();

        $z0 = interfaceinvoke r1.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("memberTypes");

        if $z0 == 0 goto label3;

        $r17 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("memberTypes");

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaSimpleTypeUnion: void setMemberTypesSource(java.lang.String)>($r17);

        $r18 = new java.util.Vector;

        specialinvoke $r18.<java.util.Vector: void <init>()>();

        $r19 = new java.util.StringTokenizer;

        specialinvoke $r19.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r17, " ");

     label1:
        $z2 = virtualinvoke $r19.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z2 == 0 goto label2;

        $r22 = virtualinvoke $r19.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r23 = specialinvoke r4.<org.apache.ws.commons.schema.SchemaBuilder: javax.xml.namespace.QName getRefQName(java.lang.String,org.w3c.dom.Node)>($r22, r1);

        virtualinvoke $r18.<java.util.Vector: boolean add(java.lang.Object)>($r23);

        goto label1;

     label2:
        $i0 = virtualinvoke $r18.<java.util.Vector: int size()>();

        $r20 = newarray (javax.xml.namespace.QName)[$i0];

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaSimpleTypeUnion: void setMemberTypesQNames(javax.xml.namespace.QName[])>($r20);

        $r21 = virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaSimpleTypeUnion: javax.xml.namespace.QName[] getMemberTypesQNames()>();

        virtualinvoke $r18.<java.util.Vector: void copyInto(java.lang.Object[])>($r21);

     label3:
        r24 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getFirstChildElementNS(org.w3c.dom.Node,java.lang.String,java.lang.String)>(r1, "http://www.w3.org/2001/XMLSchema", "simpleType");

     label4:
        if r24 == null goto label6;

        $r8 = virtualinvoke r4.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaSimpleType handleSimpleType(org.apache.ws.commons.schema.XmlSchema,org.w3c.dom.Element,org.w3c.dom.Element,boolean)>(r6, r24, r7, 0);

        $r9 = virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaSimpleTypeUnion: java.util.List getBaseTypes()>();

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r8);

        $z1 = virtualinvoke $r8.<org.apache.ws.commons.schema.XmlSchemaSimpleType: boolean isAnonymous()>();

        if $z1 != 0 goto label5;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaSimpleTypeUnion: java.lang.String getMemberTypesSource()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r14 = virtualinvoke $r8.<org.apache.ws.commons.schema.XmlSchemaSimpleType: java.lang.String getName()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaSimpleTypeUnion: void setMemberTypesSource(java.lang.String)>($r16);

     label5:
        r24 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getNextSiblingElementNS(org.w3c.dom.Node,java.lang.String,java.lang.String)>(r24, "http://www.w3.org/2001/XMLSchema", "simpleType");

        goto label4;

     label6:
        $r2 = staticinvoke <org.apache.ws.commons.schema.utils.XDOMUtil: org.w3c.dom.Element getFirstChildElementNS(org.w3c.dom.Node,java.lang.String,java.lang.String)>(r1, "http://www.w3.org/2001/XMLSchema", "annotation");

        if $r2 == null goto label7;

        $r5 = virtualinvoke r4.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.XmlSchemaAnnotation handleAnnotation(org.w3c.dom.Element)>($r2);

        virtualinvoke $r0.<org.apache.ws.commons.schema.XmlSchemaSimpleTypeUnion: void setAnnotation(org.apache.ws.commons.schema.XmlSchemaAnnotation)>($r5);

     label7:
        r3.<org.apache.ws.commons.schema.XmlSchemaSimpleType: org.apache.ws.commons.schema.XmlSchemaSimpleTypeContent content> = $r0;

        return;
    }

    private org.apache.ws.commons.schema.utils.TargetNamespaceValidator newIncludeValidator(org.apache.ws.commons.schema.XmlSchema)
    {
        org.apache.ws.commons.schema.SchemaBuilder$2 $r0;
        org.apache.ws.commons.schema.XmlSchema r2;
        org.apache.ws.commons.schema.SchemaBuilder r1;

        r1 := @this: org.apache.ws.commons.schema.SchemaBuilder;

        r2 := @parameter0: org.apache.ws.commons.schema.XmlSchema;

        $r0 = new org.apache.ws.commons.schema.SchemaBuilder$2;

        specialinvoke $r0.<org.apache.ws.commons.schema.SchemaBuilder$2: void <init>(org.apache.ws.commons.schema.SchemaBuilder,org.apache.ws.commons.schema.XmlSchema)>(r1, r2);

        return $r0;
    }

    private void processExtensibilityComponents(org.apache.ws.commons.schema.XmlSchemaObject, org.w3c.dom.Element, boolean)
    {
        org.apache.ws.commons.schema.extensions.ExtensionRegistry $r1, $r9, $r16;
        org.w3c.dom.Attr r17;
        short $s1;
        org.apache.ws.commons.schema.SchemaBuilder r0;
        org.w3c.dom.Node $r10, r18;
        int $i0, i2;
        org.w3c.dom.NamedNodeMap $r3;
        java.lang.String $r4, $r5, $r6, $r11, $r12, $r13, $r14;
        boolean $z0, $z1, z2, $z3, $z4;
        org.w3c.dom.Element r2, r19;
        org.apache.ws.commons.schema.XmlSchemaObject r8;
        javax.xml.namespace.QName $r7, $r15;

        r0 := @this: org.apache.ws.commons.schema.SchemaBuilder;

        r8 := @parameter0: org.apache.ws.commons.schema.XmlSchemaObject;

        r2 := @parameter1: org.w3c.dom.Element;

        z2 := @parameter2: boolean;

        $r1 = r0.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.extensions.ExtensionRegistry extReg>;

        if $r1 == null goto label7;

        $r3 = interfaceinvoke r2.<org.w3c.dom.Element: org.w3c.dom.NamedNodeMap getAttributes()>();

        i2 = 0;

     label1:
        $i0 = interfaceinvoke $r3.<org.w3c.dom.NamedNodeMap: int getLength()>();

        if i2 >= $i0 goto label4;

        $r10 = interfaceinvoke $r3.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node item(int)>(i2);

        r17 = (org.w3c.dom.Attr) $r10;

        $r11 = interfaceinvoke r17.<org.w3c.dom.Attr: java.lang.String getNamespaceURI()>();

        $r12 = interfaceinvoke r17.<org.w3c.dom.Attr: java.lang.String getLocalName()>();

        if $r11 == null goto label3;

        $r13 = "";

        $z1 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z1 != 0 goto label3;

        if z2 != 0 goto label2;

        $z4 = virtualinvoke $r11.<java.lang.String: boolean startsWith(java.lang.String)>("http://www.w3.org/2000/xmlns/");

        if $z4 != 0 goto label3;

     label2:
        $r14 = "http://www.w3.org/2001/XMLSchema";

        $z3 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z3 != 0 goto label3;

        $r15 = new javax.xml.namespace.QName;

        specialinvoke $r15.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>($r11, $r12);

        $r16 = r0.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.extensions.ExtensionRegistry extReg>;

        virtualinvoke $r16.<org.apache.ws.commons.schema.extensions.ExtensionRegistry: void deserializeExtension(org.apache.ws.commons.schema.XmlSchemaObject,javax.xml.namespace.QName,org.w3c.dom.Node)>(r8, $r15, r17);

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        r18 = interfaceinvoke r2.<org.w3c.dom.Element: org.w3c.dom.Node getFirstChild()>();

     label5:
        if r18 == null goto label7;

        $s1 = interfaceinvoke r18.<org.w3c.dom.Node: short getNodeType()>();

        if $s1 != 1 goto label6;

        r19 = (org.w3c.dom.Element) r18;

        $r4 = interfaceinvoke r19.<org.w3c.dom.Element: java.lang.String getNamespaceURI()>();

        $r5 = interfaceinvoke r19.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        if $r4 == null goto label6;

        $r6 = "http://www.w3.org/2001/XMLSchema";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label6;

        $r7 = new javax.xml.namespace.QName;

        specialinvoke $r7.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>($r4, $r5);

        $r9 = r0.<org.apache.ws.commons.schema.SchemaBuilder: org.apache.ws.commons.schema.extensions.ExtensionRegistry extReg>;

        virtualinvoke $r9.<org.apache.ws.commons.schema.extensions.ExtensionRegistry: void deserializeExtension(org.apache.ws.commons.schema.XmlSchemaObject,javax.xml.namespace.QName,org.w3c.dom.Node)>(r8, $r7, r19);

     label6:
        r18 = interfaceinvoke r18.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        goto label5;

     label7:
        return;
    }

    private void putCachedSchema(java.lang.String, java.lang.String, java.lang.String, org.apache.ws.commons.schema.XmlSchema)
    {
        java.lang.ThreadLocal $r0, $r1;
        org.apache.ws.commons.schema.SchemaBuilder r14;
        java.util.Map r3;
        org.apache.ws.commons.schema.XmlSchema r13;
        java.lang.Object $r2;
        java.lang.StringBuilder $r4, $r6, $r8, $r10;
        java.lang.String r5, r7, r9, $r11;
        java.lang.ref.SoftReference $r12;

        r14 := @this: org.apache.ws.commons.schema.SchemaBuilder;

        r5 := @parameter0: java.lang.String;

        r7 := @parameter1: java.lang.String;

        r9 := @parameter2: java.lang.String;

        r13 := @parameter3: org.apache.ws.commons.schema.XmlSchema;

        $r0 = <org.apache.ws.commons.schema.SchemaBuilder: java.lang.ThreadLocal resolvedSchemas>;

        if $r0 == null goto label1;

        $r1 = <org.apache.ws.commons.schema.SchemaBuilder: java.lang.ThreadLocal resolvedSchemas>;

        $r2 = virtualinvoke $r1.<java.lang.ThreadLocal: java.lang.Object get()>();

        r3 = (java.util.Map) $r2;

        if r3 == null goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = new java.lang.ref.SoftReference;

        specialinvoke $r12.<java.lang.ref.SoftReference: void <init>(java.lang.Object)>(r13);

        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r12);

     label1:
        return;
    }

    static void <clinit>()
    {
        java.lang.ThreadLocal $r0;
        java.util.Set $r5;
        java.lang.String[] $r2, r3;
        java.util.HashSet $r1;
        int i0, i1;
        java.lang.String r4;

        $r0 = new java.lang.ThreadLocal;

        specialinvoke $r0.<java.lang.ThreadLocal: void <init>()>();

        <org.apache.ws.commons.schema.SchemaBuilder: java.lang.ThreadLocal resolvedSchemas> = $r0;

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        <org.apache.ws.commons.schema.SchemaBuilder: java.util.Set RESERVED_ATTRIBUTES> = $r1;

        $r2 = newarray (java.lang.String)[8];

        $r2[0] = "name";

        $r2[1] = "type";

        $r2[2] = "default";

        $r2[3] = "fixed";

        $r2[4] = "form";

        $r2[5] = "id";

        $r2[6] = "use";

        $r2[7] = "ref";

        <org.apache.ws.commons.schema.SchemaBuilder: java.lang.String[] RESERVED_ATTRIBUTES_LIST> = $r2;

        r3 = <org.apache.ws.commons.schema.SchemaBuilder: java.lang.String[] RESERVED_ATTRIBUTES_LIST>;

        i0 = lengthof r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r4 = r3[i1];

        $r5 = <org.apache.ws.commons.schema.SchemaBuilder: java.util.Set RESERVED_ATTRIBUTES>;

        interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>(r4);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }
}
