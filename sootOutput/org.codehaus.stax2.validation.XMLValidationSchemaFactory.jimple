public abstract class org.codehaus.stax2.validation.XMLValidationSchemaFactory extends java.lang.Object
{
    public static final java.lang.String INTERNAL_ID_SCHEMA_DTD;
    public static final java.lang.String INTERNAL_ID_SCHEMA_RELAXNG;
    public static final java.lang.String INTERNAL_ID_SCHEMA_W3C;
    public static final java.lang.String INTERNAL_ID_SCHEMA_TREX;
    static final java.util.HashMap sSchemaIds;
    static final java.lang.String JAXP_PROP_FILENAME;
    public static final java.lang.String SYSTEM_PROPERTY_FOR_IMPL;
    public static final java.lang.String SERVICE_DEFINITION_PATH;
    public static final java.lang.String P_IS_NAMESPACE_AWARE;
    public static final java.lang.String P_ENABLE_CACHING;

    protected void <init>()
    {
        org.codehaus.stax2.validation.XMLValidationSchemaFactory r0;

        r0 := @this: org.codehaus.stax2.validation.XMLValidationSchemaFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.codehaus.stax2.validation.XMLValidationSchemaFactory newInstance(java.lang.String) throws javax.xml.stream.FactoryConfigurationError
    {
        java.lang.Thread $r1;
        org.codehaus.stax2.validation.XMLValidationSchemaFactory $r3;
        java.lang.String r0;
        java.lang.ClassLoader $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r2 = virtualinvoke $r1.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

        $r3 = staticinvoke <org.codehaus.stax2.validation.XMLValidationSchemaFactory: org.codehaus.stax2.validation.XMLValidationSchemaFactory newInstance(java.lang.String,java.lang.ClassLoader)>(r0, $r2);

        return $r3;
    }

    public static org.codehaus.stax2.validation.XMLValidationSchemaFactory newInstance(java.lang.String, java.lang.ClassLoader) throws javax.xml.stream.FactoryConfigurationError
    {
        java.util.Enumeration r50;
        java.lang.ClassLoader r17;
        java.lang.Throwable $r45;
        java.lang.StringBuffer $r5, $r6, $r14, $r15, $r21, $r22, $r23, $r24, $r39, $r40, $r41, $r55, $r56, $r57, $r58, $r59, $r61, $r63, $r69, $r72, $r73;
        java.lang.String r0, r3, $r7, $r8, $r9, $r16, $r25, $r31, $r34, $r42, r52, $r53, $r60;
        java.util.Properties $r67;
        java.io.IOException $r43, $r47;
        java.io.InputStreamReader $r70;
        java.io.File $r64, $r65, $r66;
        javax.xml.stream.FactoryConfigurationError $r62, $r74, $r75;
        java.io.BufferedReader $r71;
        java.net.URL r51;
        java.lang.SecurityException $r44, $r46, $r48, r49;
        boolean $z0, $z1;
        java.util.HashMap $r1;
        int $i0, $i1, $i3, $i4, $i5;
        char $c2;
        java.io.FileInputStream $r68;
        org.codehaus.stax2.validation.XMLValidationSchemaFactory $r30, $r35, $r36;
        java.lang.Object $r2, $r26;
        java.io.InputStream $r27;

        r0 := @parameter0: java.lang.String;

        r17 := @parameter1: java.lang.ClassLoader;

        $r1 = <org.codehaus.stax2.validation.XMLValidationSchemaFactory: java.util.HashMap sSchemaIds>;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r0);

        r3 = (java.lang.String) $r2;

        if r3 != null goto label01;

        $r62 = new javax.xml.stream.FactoryConfigurationError;

        $r61 = new java.lang.StringBuffer;

        specialinvoke $r61.<java.lang.StringBuffer: void <init>()>();

        $r39 = virtualinvoke $r61.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unrecognized schema type (id \'");

        $r40 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r41 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\')");

        $r42 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r62.<javax.xml.stream.FactoryConfigurationError: void <init>(java.lang.String)>($r42);

        throw $r62;

     label01:
        $r63 = new java.lang.StringBuffer;

        specialinvoke $r63.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r63.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("org.codehaus.stax2.validation.XMLValidationSchemaFactory.");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        r49 = null;

     label02:
        $r8 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>($r7);

        if $r8 == null goto label04;

        $i4 = virtualinvoke $r8.<java.lang.String: int length()>();

        if $i4 <= 0 goto label04;

        $r36 = staticinvoke <org.codehaus.stax2.validation.XMLValidationSchemaFactory: org.codehaus.stax2.validation.XMLValidationSchemaFactory createNewInstance(java.lang.ClassLoader,java.lang.String)>(r17, $r8);

     label03:
        return $r36;

     label04:
        goto label06;

     label05:
        $r48 := @caughtexception;

        r49 = $r48;

     label06:
        $r9 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.home");

        $r64 = new java.io.File;

        specialinvoke $r64.<java.io.File: void <init>(java.lang.String)>($r9);

        $r65 = new java.io.File;

        specialinvoke $r65.<java.io.File: void <init>(java.io.File,java.lang.String)>($r64, "lib");

        $r66 = new java.io.File;

        specialinvoke $r66.<java.io.File: void <init>(java.io.File,java.lang.String)>($r65, "jaxp.properties");

        $z0 = virtualinvoke $r66.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label11;

     label07:
        $r67 = new java.util.Properties;

        specialinvoke $r67.<java.util.Properties: void <init>()>();

        $r68 = new java.io.FileInputStream;

        specialinvoke $r68.<java.io.FileInputStream: void <init>(java.io.File)>($r66);

        virtualinvoke $r67.<java.util.Properties: void load(java.io.InputStream)>($r68);

        $r34 = virtualinvoke $r67.<java.util.Properties: java.lang.String getProperty(java.lang.String)>($r7);

        if $r34 == null goto label09;

        $i3 = virtualinvoke $r34.<java.lang.String: int length()>();

        if $i3 <= 0 goto label09;

        $r35 = staticinvoke <org.codehaus.stax2.validation.XMLValidationSchemaFactory: org.codehaus.stax2.validation.XMLValidationSchemaFactory createNewInstance(java.lang.ClassLoader,java.lang.String)>(r17, $r34);

     label08:
        return $r35;

     label09:
        goto label11;

     label10:
        $r47 := @caughtexception;

     label11:
        goto label13;

     label12:
        $r46 := @caughtexception;

        r49 = $r46;

     label13:
        $r69 = new java.lang.StringBuffer;

        specialinvoke $r69.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r69.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("META-INF/services/org.codehaus.stax2.validation.XMLValidationSchemaFactory.");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

     label14:
        if r17 != null goto label15;

        r50 = staticinvoke <java.lang.ClassLoader: java.util.Enumeration getSystemResources(java.lang.String)>($r16);

        goto label16;

     label15:
        r50 = virtualinvoke r17.<java.lang.ClassLoader: java.util.Enumeration getResources(java.lang.String)>($r16);

     label16:
        if r50 == null goto label25;

     label17:
        $z1 = interfaceinvoke r50.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z1 == 0 goto label25;

        $r26 = interfaceinvoke r50.<java.util.Enumeration: java.lang.Object nextElement()>();

        r51 = (java.net.URL) $r26;

        $r27 = virtualinvoke r51.<java.net.URL: java.io.InputStream openStream()>();

        $r71 = new java.io.BufferedReader;

        $r70 = new java.io.InputStreamReader;

        specialinvoke $r70.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>($r27, "ISO-8859-1");

        specialinvoke $r71.<java.io.BufferedReader: void <init>(java.io.Reader)>($r70);

        r52 = null;

     label18:
        $r53 = virtualinvoke $r71.<java.io.BufferedReader: java.lang.String readLine()>();

        if $r53 == null goto label19;

        $r31 = virtualinvoke $r53.<java.lang.String: java.lang.String trim()>();

        $i1 = virtualinvoke $r31.<java.lang.String: int length()>();

        if $i1 <= 0 goto label18;

        $c2 = virtualinvoke $r31.<java.lang.String: char charAt(int)>(0);

        $i5 = (int) $c2;

        if $i5 == 35 goto label18;

        r52 = $r31;

        goto label19;

     label19:
        virtualinvoke $r71.<java.io.BufferedReader: void close()>();

        goto label22;

     label20:
        $r45 := @caughtexception;

     label21:
        virtualinvoke $r71.<java.io.BufferedReader: void close()>();

        throw $r45;

     label22:
        if r52 == null goto label24;

        $i0 = virtualinvoke r52.<java.lang.String: int length()>();

        if $i0 <= 0 goto label24;

        $r30 = staticinvoke <org.codehaus.stax2.validation.XMLValidationSchemaFactory: org.codehaus.stax2.validation.XMLValidationSchemaFactory createNewInstance(java.lang.ClassLoader,java.lang.String)>(r17, r52);

     label23:
        return $r30;

     label24:
        goto label17;

     label25:
        goto label28;

     label26:
        $r44 := @caughtexception;

        r49 = $r44;

        goto label28;

     label27:
        $r43 := @caughtexception;

     label28:
        $r72 = new java.lang.StringBuffer;

        specialinvoke $r72.<java.lang.StringBuffer: void <init>()>();

        $r55 = virtualinvoke $r72.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("No XMLValidationSchemaFactory implementation class specified or accessible (via system property \'");

        $r56 = virtualinvoke $r55.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r57 = virtualinvoke $r56.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\', or service definition under \'");

        $r58 = virtualinvoke $r57.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        $r59 = virtualinvoke $r58.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\')");

        $r60 = virtualinvoke $r59.<java.lang.StringBuffer: java.lang.String toString()>();

        if r49 == null goto label29;

        $r74 = new javax.xml.stream.FactoryConfigurationError;

        $r73 = new java.lang.StringBuffer;

        specialinvoke $r73.<java.lang.StringBuffer: void <init>()>();

        $r21 = virtualinvoke $r73.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r60);

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" (possibly caused by: ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r49);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r74.<javax.xml.stream.FactoryConfigurationError: void <init>(java.lang.String,java.lang.Exception)>($r25, r49);

        throw $r74;

     label29:
        $r75 = new javax.xml.stream.FactoryConfigurationError;

        specialinvoke $r75.<javax.xml.stream.FactoryConfigurationError: void <init>(java.lang.String)>($r60);

        throw $r75;

        catch java.lang.SecurityException from label02 to label03 with label05;
        catch java.io.IOException from label07 to label08 with label10;
        catch java.lang.SecurityException from label06 to label08 with label12;
        catch java.lang.SecurityException from label09 to label11 with label12;
        catch java.lang.Throwable from label18 to label19 with label20;
        catch java.lang.Throwable from label20 to label21 with label20;
        catch java.lang.SecurityException from label14 to label23 with label26;
        catch java.lang.SecurityException from label24 to label25 with label26;
        catch java.io.IOException from label14 to label23 with label27;
        catch java.io.IOException from label24 to label25 with label27;
    }

    public org.codehaus.stax2.validation.XMLValidationSchema createSchema(java.io.InputStream) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.validation.XMLValidationSchemaFactory r0;
        org.codehaus.stax2.validation.XMLValidationSchema $r2;
        java.io.InputStream r1;

        r0 := @this: org.codehaus.stax2.validation.XMLValidationSchemaFactory;

        r1 := @parameter0: java.io.InputStream;

        $r2 = virtualinvoke r0.<org.codehaus.stax2.validation.XMLValidationSchemaFactory: org.codehaus.stax2.validation.XMLValidationSchema createSchema(java.io.InputStream,java.lang.String)>(r1, null);

        return $r2;
    }

    public org.codehaus.stax2.validation.XMLValidationSchema createSchema(java.io.InputStream, java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.validation.XMLValidationSchemaFactory r0;
        org.codehaus.stax2.validation.XMLValidationSchema $r3;
        java.lang.String r2;
        java.io.InputStream r1;

        r0 := @this: org.codehaus.stax2.validation.XMLValidationSchemaFactory;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<org.codehaus.stax2.validation.XMLValidationSchemaFactory: org.codehaus.stax2.validation.XMLValidationSchema createSchema(java.io.InputStream,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, null, null);

        return $r3;
    }

    public abstract org.codehaus.stax2.validation.XMLValidationSchema createSchema(java.io.InputStream, java.lang.String, java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException;

    public org.codehaus.stax2.validation.XMLValidationSchema createSchema(java.io.Reader) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.validation.XMLValidationSchemaFactory r0;
        org.codehaus.stax2.validation.XMLValidationSchema $r2;
        java.io.Reader r1;

        r0 := @this: org.codehaus.stax2.validation.XMLValidationSchemaFactory;

        r1 := @parameter0: java.io.Reader;

        $r2 = virtualinvoke r0.<org.codehaus.stax2.validation.XMLValidationSchemaFactory: org.codehaus.stax2.validation.XMLValidationSchema createSchema(java.io.Reader,java.lang.String,java.lang.String)>(r1, null, null);

        return $r2;
    }

    public abstract org.codehaus.stax2.validation.XMLValidationSchema createSchema(java.io.Reader, java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException;

    public abstract org.codehaus.stax2.validation.XMLValidationSchema createSchema(java.net.URL) throws javax.xml.stream.XMLStreamException;

    public abstract org.codehaus.stax2.validation.XMLValidationSchema createSchema(java.io.File) throws javax.xml.stream.XMLStreamException;

    public abstract boolean isPropertySupported(java.lang.String);

    public abstract boolean setProperty(java.lang.String, java.lang.Object);

    public abstract java.lang.Object getProperty(java.lang.String);

    private static org.codehaus.stax2.validation.XMLValidationSchemaFactory createNewInstance(java.lang.ClassLoader, java.lang.String) throws javax.xml.stream.FactoryConfigurationError
    {
        java.lang.StringBuffer $r6, $r7, $r8, $r9, $r10, $r14, $r15, $r16, $r17;
        java.lang.String r1, $r11, $r18;
        java.lang.Exception $r4;
        javax.xml.stream.FactoryConfigurationError $r5, $r13;
        org.codehaus.stax2.validation.XMLValidationSchemaFactory $r3;
        java.lang.Object $r2;
        java.lang.ClassNotFoundException $r12;
        java.lang.Class r19;
        java.lang.ClassLoader r0;

        r0 := @parameter0: java.lang.ClassLoader;

        r1 := @parameter1: java.lang.String;

     label1:
        if r0 != null goto label2;

        r19 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r1);

        goto label3;

     label2:
        r19 = virtualinvoke r0.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r1);

     label3:
        $r2 = virtualinvoke r19.<java.lang.Class: java.lang.Object newInstance()>();

        $r3 = (org.codehaus.stax2.validation.XMLValidationSchemaFactory) $r2;

     label4:
        return $r3;

     label5:
        $r12 := @caughtexception;

        $r13 = new javax.xml.stream.FactoryConfigurationError;

        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("XMLValidationSchemaFactory implementation \'");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' not found (missing jar in classpath?)");

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r13.<javax.xml.stream.FactoryConfigurationError: void <init>(java.lang.String,java.lang.Exception)>($r18, $r12);

        throw $r13;

     label6:
        $r4 := @caughtexception;

        $r5 = new javax.xml.stream.FactoryConfigurationError;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("XMLValidationSchemaFactory implementation \'");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' could not be instantiated: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r4);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r5.<javax.xml.stream.FactoryConfigurationError: void <init>(java.lang.String,java.lang.Exception)>($r11, $r4);

        throw $r5;

        catch java.lang.ClassNotFoundException from label1 to label4 with label5;
        catch java.lang.Exception from label1 to label4 with label6;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0, $r1, $r2, $r3, $r4;

        <org.codehaus.stax2.validation.XMLValidationSchemaFactory: java.lang.String P_ENABLE_CACHING> = "org.codehaus2.stax2.validation.enableCaching";

        <org.codehaus.stax2.validation.XMLValidationSchemaFactory: java.lang.String P_IS_NAMESPACE_AWARE> = "org.codehaus2.stax2.validation.isNamespaceAware";

        <org.codehaus.stax2.validation.XMLValidationSchemaFactory: java.lang.String SERVICE_DEFINITION_PATH> = "META-INF/services/org.codehaus.stax2.validation.XMLValidationSchemaFactory.";

        <org.codehaus.stax2.validation.XMLValidationSchemaFactory: java.lang.String SYSTEM_PROPERTY_FOR_IMPL> = "org.codehaus.stax2.validation.XMLValidationSchemaFactory.";

        <org.codehaus.stax2.validation.XMLValidationSchemaFactory: java.lang.String JAXP_PROP_FILENAME> = "jaxp.properties";

        <org.codehaus.stax2.validation.XMLValidationSchemaFactory: java.lang.String INTERNAL_ID_SCHEMA_TREX> = "trex";

        <org.codehaus.stax2.validation.XMLValidationSchemaFactory: java.lang.String INTERNAL_ID_SCHEMA_W3C> = "w3c";

        <org.codehaus.stax2.validation.XMLValidationSchemaFactory: java.lang.String INTERNAL_ID_SCHEMA_RELAXNG> = "relaxng";

        <org.codehaus.stax2.validation.XMLValidationSchemaFactory: java.lang.String INTERNAL_ID_SCHEMA_DTD> = "dtd";

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <org.codehaus.stax2.validation.XMLValidationSchemaFactory: java.util.HashMap sSchemaIds> = $r0;

        $r1 = <org.codehaus.stax2.validation.XMLValidationSchemaFactory: java.util.HashMap sSchemaIds>;

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://www.w3.org/XML/1998/namespace", "dtd");

        $r2 = <org.codehaus.stax2.validation.XMLValidationSchemaFactory: java.util.HashMap sSchemaIds>;

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://relaxng.org/ns/structure/0.9", "relaxng");

        $r3 = <org.codehaus.stax2.validation.XMLValidationSchemaFactory: java.util.HashMap sSchemaIds>;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://www.w3.org/2001/XMLSchema", "w3c");

        $r4 = <org.codehaus.stax2.validation.XMLValidationSchemaFactory: java.util.HashMap sSchemaIds>;

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://www.thaiopensource.com/trex", "trex");

        return;
    }
}
