final class org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target$DeleteCharactersCache extends org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$RangeCache
{
    private java.lang.String characters;
    final org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target this$1;

    void <init>(org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target, java.lang.String)
    {
        org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target r1;
        org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target$DeleteCharactersCache r0;
        java.lang.String r2;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target$DeleteCharactersCache;

        r1 := @parameter0: org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target;

        r2 := @parameter1: java.lang.String;

        r0.<org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target$DeleteCharactersCache: org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target this$1> = r1;

        specialinvoke r0.<org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$RangeCache: void <init>(org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$1)>(null);

        r0.<org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target$DeleteCharactersCache: java.lang.String characters> = r2;

        return;
    }

    void resolveRetain(int)
    {
        org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target$DeleteCharactersCache r0;
        int i0;
        org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target $r2;
        java.lang.String $r1, $r3, $r4, $r5;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target$DeleteCharactersCache;

        i0 := @parameter0: int;

        $r2 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target$DeleteCharactersCache: org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target this$1>;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target$DeleteCharactersCache: java.lang.String characters>;

        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        staticinvoke <org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target: void access$100(org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target,java.lang.String)>($r2, $r3);

        $r4 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target$DeleteCharactersCache: java.lang.String characters>;

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int)>(i0);

        r0.<org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target$DeleteCharactersCache: java.lang.String characters> = $r5;

        return;
    }

    void resolveDeleteCharacters(java.lang.String)
    {
        org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target$DeleteCharactersCache r0;
        int $i0;
        java.lang.String r1, $r2, $r3;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target$DeleteCharactersCache;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target$DeleteCharactersCache: java.lang.String characters>;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>($i0);

        r0.<org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target$DeleteCharactersCache: java.lang.String characters> = $r3;

        return;
    }
}
