public abstract class org.apache.xmlbeans.impl.store.Path extends java.lang.Object
{
    public static final java.lang.String PATH_DELEGATE_INTERFACE;
    public static java.lang.String _useDelegateForXpath;
    public static java.lang.String _useXdkForXpath;
    public static java.lang.String _useXqrlForXpath;
    public static java.lang.String _useXbeanForXpath;
    public static java.lang.String _forceXqrl2002ForXpathXQuery;
    private static final int USE_XBEAN;
    private static final int USE_XQRL;
    private static final int USE_DELEGATE;
    private static final int USE_XQRL2002;
    private static final int USE_XDK;
    private static java.util.Map _xbeanPathCache;
    private static java.util.Map _xdkPathCache;
    private static java.util.Map _xqrlPathCache;
    private static java.util.Map _xqrl2002PathCache;
    private static java.lang.reflect.Method _xdkCompilePath;
    private static java.lang.reflect.Method _xqrlCompilePath;
    private static java.lang.reflect.Method _xqrl2002CompilePath;
    private static boolean _xdkAvailable;
    private static boolean _xqrlAvailable;
    private static boolean _xqrl2002Available;
    private static java.lang.String _delIntfName;
    protected final java.lang.String _pathKey;
    static java.lang.Class class$org$apache$xmlbeans$impl$store$Path;
    static java.lang.Class class$java$lang$String;
    static java.lang.Class class$java$lang$Boolean;

    void <init>(java.lang.String)
    {
        org.apache.xmlbeans.impl.store.Path r0;
        java.lang.String r1;

        r0 := @this: org.apache.xmlbeans.impl.store.Path;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xmlbeans.impl.store.Path: java.lang.String _pathKey> = r1;

        return;
    }

    abstract org.apache.xmlbeans.impl.store.Path$PathEngine execute(org.apache.xmlbeans.impl.store.Cur, org.apache.xmlbeans.XmlOptions);

    static java.lang.String getCurrentNodeVar(org.apache.xmlbeans.XmlOptions)
    {
        org.apache.xmlbeans.XmlOptions $r0, r3;
        java.lang.Object $r1;
        java.lang.String r4;
        java.lang.IllegalArgumentException $r2;
        boolean $z0, $z1;

        r3 := @parameter0: org.apache.xmlbeans.XmlOptions;

        r4 = "this";

        $r0 = staticinvoke <org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions maskNull(org.apache.xmlbeans.XmlOptions)>(r3);

        $z0 = virtualinvoke $r0.<org.apache.xmlbeans.XmlOptions: boolean hasOption(java.lang.Object)>("XQUERY_CURRENT_NODE_VAR");

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke $r0.<org.apache.xmlbeans.XmlOptions: java.lang.Object get(java.lang.Object)>("XQUERY_CURRENT_NODE_VAR");

        r4 = (java.lang.String) $r1;

        $z1 = virtualinvoke r4.<java.lang.String: boolean startsWith(java.lang.String)>("$");

        if $z1 == 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Omit the \'$\' prefix for the current node variable");

        throw $r2;

     label1:
        return r4;
    }

    public static org.apache.xmlbeans.impl.store.Path getCompiledPath(java.lang.String, org.apache.xmlbeans.XmlOptions)
    {
        org.apache.xmlbeans.impl.store.Path $r8;
        byte b0, $b1;
        java.lang.String $r1, $r2, $r3, $r4, $r5, r6, $r7, $r11;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.xmlbeans.XmlOptions $r0, r10;
        java.lang.Object $r9;

        r6 := @parameter0: java.lang.String;

        r10 := @parameter1: org.apache.xmlbeans.XmlOptions;

        $r0 = staticinvoke <org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions maskNull(org.apache.xmlbeans.XmlOptions)>(r10);

        $r1 = <org.apache.xmlbeans.impl.store.Path: java.lang.String _useDelegateForXpath>;

        $z0 = virtualinvoke $r0.<org.apache.xmlbeans.XmlOptions: boolean hasOption(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $b1 = 4;

        goto label6;

     label1:
        $r2 = <org.apache.xmlbeans.impl.store.Path: java.lang.String _useXqrlForXpath>;

        $z1 = virtualinvoke $r0.<org.apache.xmlbeans.XmlOptions: boolean hasOption(java.lang.Object)>($r2);

        if $z1 == 0 goto label2;

        $b1 = 2;

        goto label6;

     label2:
        $r3 = <org.apache.xmlbeans.impl.store.Path: java.lang.String _useXdkForXpath>;

        $z2 = virtualinvoke $r0.<org.apache.xmlbeans.XmlOptions: boolean hasOption(java.lang.Object)>($r3);

        if $z2 == 0 goto label3;

        $b1 = 16;

        goto label6;

     label3:
        $r4 = <org.apache.xmlbeans.impl.store.Path: java.lang.String _useXbeanForXpath>;

        $z3 = virtualinvoke $r0.<org.apache.xmlbeans.XmlOptions: boolean hasOption(java.lang.Object)>($r4);

        if $z3 == 0 goto label4;

        $b1 = 1;

        goto label6;

     label4:
        $r5 = <org.apache.xmlbeans.impl.store.Path: java.lang.String _forceXqrl2002ForXpathXQuery>;

        $z4 = virtualinvoke $r0.<org.apache.xmlbeans.XmlOptions: boolean hasOption(java.lang.Object)>($r5);

        if $z4 == 0 goto label5;

        $b1 = 8;

        goto label6;

     label5:
        $b1 = 23;

     label6:
        b0 = $b1;

        $z5 = virtualinvoke $r0.<org.apache.xmlbeans.XmlOptions: boolean hasOption(java.lang.Object)>("PATH_DELEGATE_INTERFACE");

        if $z5 == 0 goto label7;

        $r9 = virtualinvoke $r0.<org.apache.xmlbeans.XmlOptions: java.lang.Object get(java.lang.Object)>("PATH_DELEGATE_INTERFACE");

        $r11 = (java.lang.String) $r9;

        goto label8;

     label7:
        $r11 = <org.apache.xmlbeans.impl.store.Path: java.lang.String _delIntfName>;

     label8:
        $r7 = staticinvoke <org.apache.xmlbeans.impl.store.Path: java.lang.String getCurrentNodeVar(org.apache.xmlbeans.XmlOptions)>($r0);

        $r8 = staticinvoke <org.apache.xmlbeans.impl.store.Path: org.apache.xmlbeans.impl.store.Path getCompiledPath(java.lang.String,int,java.lang.String,java.lang.String)>(r6, b0, $r7, $r11);

        return $r8;
    }

    static synchronized org.apache.xmlbeans.impl.store.Path getCompiledPath(java.lang.String, int, java.lang.String, java.lang.String)
    {
        java.util.Map $r13, $r15, $r17, $r19;
        org.apache.xmlbeans.impl.store.Path r21;
        java.util.HashMap r0, $r23;
        java.lang.StringBuffer $r1, $r3, $r5, $r6, $r8;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        java.lang.String $r4, r7, $r9, r10, r11;
        java.lang.ref.WeakReference r22;
        java.lang.RuntimeException $r2;
        java.lang.Object $r12, $r14, $r16, $r18, $r20;

        r7 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r10 := @parameter2: java.lang.String;

        r11 := @parameter3: java.lang.String;

        r21 = null;

        r22 = null;

        $i1 = i0 & 4;

        if $i1 == 0 goto label01;

        $r23 = new java.util.HashMap;

        specialinvoke $r23.<java.util.HashMap: void <init>()>();

        goto label02;

     label01:
        $r23 = null;

     label02:
        r0 = $r23;

        $i2 = i0 & 1;

        if $i2 == 0 goto label03;

        $r19 = <org.apache.xmlbeans.impl.store.Path: java.util.Map _xbeanPathCache>;

        $r20 = interfaceinvoke $r19.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7);

        r22 = (java.lang.ref.WeakReference) $r20;

     label03:
        if r22 != null goto label04;

        $i15 = i0 & 2;

        if $i15 == 0 goto label04;

        $r17 = <org.apache.xmlbeans.impl.store.Path: java.util.Map _xqrlPathCache>;

        $r18 = interfaceinvoke $r17.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7);

        r22 = (java.lang.ref.WeakReference) $r18;

     label04:
        if r22 != null goto label05;

        $i14 = i0 & 16;

        if $i14 == 0 goto label05;

        $r15 = <org.apache.xmlbeans.impl.store.Path: java.util.Map _xdkPathCache>;

        $r16 = interfaceinvoke $r15.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7);

        r22 = (java.lang.ref.WeakReference) $r16;

     label05:
        if r22 != null goto label06;

        $i13 = i0 & 8;

        if $i13 == 0 goto label06;

        $r13 = <org.apache.xmlbeans.impl.store.Path: java.util.Map _xqrl2002PathCache>;

        $r14 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7);

        r22 = (java.lang.ref.WeakReference) $r14;

     label06:
        if r22 == null goto label07;

        $r12 = virtualinvoke r22.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r21 = (org.apache.xmlbeans.impl.store.Path) $r12;

     label07:
        if r21 == null goto label08;

        return r21;

     label08:
        $i3 = i0 & 1;

        if $i3 == 0 goto label09;

        r21 = staticinvoke <org.apache.xmlbeans.impl.store.Path: org.apache.xmlbeans.impl.store.Path getCompiledPathXbean(java.lang.String,java.lang.String,java.util.Map)>(r7, r10, r0);

     label09:
        if r21 != null goto label10;

        $i12 = i0 & 2;

        if $i12 == 0 goto label10;

        r21 = staticinvoke <org.apache.xmlbeans.impl.store.Path: org.apache.xmlbeans.impl.store.Path getCompiledPathXqrl(java.lang.String,java.lang.String)>(r7, r10);

     label10:
        if r21 != null goto label11;

        $i11 = i0 & 16;

        if $i11 == 0 goto label11;

        r21 = staticinvoke <org.apache.xmlbeans.impl.store.Path: org.apache.xmlbeans.impl.store.Path getCompiledPathXdk(java.lang.String,java.lang.String)>(r7, r10);

     label11:
        if r21 != null goto label12;

        $i10 = i0 & 4;

        if $i10 == 0 goto label12;

        r21 = staticinvoke <org.apache.xmlbeans.impl.store.Path: org.apache.xmlbeans.impl.store.Path getCompiledPathDelegate(java.lang.String,java.lang.String,java.util.Map,java.lang.String)>(r7, r10, r0, r11);

     label12:
        if r21 != null goto label13;

        $i9 = i0 & 8;

        if $i9 == 0 goto label13;

        r21 = staticinvoke <org.apache.xmlbeans.impl.store.Path: org.apache.xmlbeans.impl.store.Path getCompiledPathXqrl2002(java.lang.String,java.lang.String)>(r7, r10);

     label13:
        if r21 != null goto label19;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $i4 = i0 & 1;

        if $i4 == 0 goto label14;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" Trying XBeans path engine...");

     label14:
        $i5 = i0 & 2;

        if $i5 == 0 goto label15;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" Trying XQRL...");

     label15:
        $i6 = i0 & 16;

        if $i6 == 0 goto label16;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" Trying XDK...");

     label16:
        $i7 = i0 & 4;

        if $i7 == 0 goto label17;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" Trying delegated path engine...");

     label17:
        $i8 = i0 & 8;

        if $i8 == 0 goto label18;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" Trying XQRL2002...");

     label18:
        $r2 = new java.lang.RuntimeException;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" FAILED on ");

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>($r9);

        throw $r2;

     label19:
        return r21;
    }

    private static synchronized org.apache.xmlbeans.impl.store.Path getCompiledPathXdk(java.lang.String, java.lang.String)
    {
        org.apache.xmlbeans.impl.store.Path $r2;
        java.util.Map $r4;
        java.lang.String r0, r1, $r5;
        java.lang.ref.WeakReference $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <org.apache.xmlbeans.impl.store.Path: org.apache.xmlbeans.impl.store.Path createXdkCompiledPath(java.lang.String,java.lang.String)>(r0, r1);

        if $r2 == null goto label1;

        $r4 = <org.apache.xmlbeans.impl.store.Path: java.util.Map _xdkPathCache>;

        $r5 = $r2.<org.apache.xmlbeans.impl.store.Path: java.lang.String _pathKey>;

        $r3 = new java.lang.ref.WeakReference;

        specialinvoke $r3.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r2);

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r3);

     label1:
        return $r2;
    }

    private static synchronized org.apache.xmlbeans.impl.store.Path getCompiledPathXqrl(java.lang.String, java.lang.String)
    {
        org.apache.xmlbeans.impl.store.Path $r2;
        java.util.Map $r4;
        java.lang.String r0, r1, $r5;
        java.lang.ref.WeakReference $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <org.apache.xmlbeans.impl.store.Path: org.apache.xmlbeans.impl.store.Path createXqrlCompiledPath(java.lang.String,java.lang.String)>(r0, r1);

        if $r2 == null goto label1;

        $r4 = <org.apache.xmlbeans.impl.store.Path: java.util.Map _xqrlPathCache>;

        $r5 = $r2.<org.apache.xmlbeans.impl.store.Path: java.lang.String _pathKey>;

        $r3 = new java.lang.ref.WeakReference;

        specialinvoke $r3.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r2);

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r3);

     label1:
        return $r2;
    }

    private static synchronized org.apache.xmlbeans.impl.store.Path getCompiledPathXqrl2002(java.lang.String, java.lang.String)
    {
        org.apache.xmlbeans.impl.store.Path $r2;
        java.util.Map $r4;
        java.lang.String r0, r1, $r5;
        java.lang.ref.WeakReference $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <org.apache.xmlbeans.impl.store.Path: org.apache.xmlbeans.impl.store.Path createXqrl2002CompiledPath(java.lang.String,java.lang.String)>(r0, r1);

        if $r2 == null goto label1;

        $r4 = <org.apache.xmlbeans.impl.store.Path: java.util.Map _xqrl2002PathCache>;

        $r5 = $r2.<org.apache.xmlbeans.impl.store.Path: java.lang.String _pathKey>;

        $r3 = new java.lang.ref.WeakReference;

        specialinvoke $r3.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r2);

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r3);

     label1:
        return $r2;
    }

    private static synchronized org.apache.xmlbeans.impl.store.Path getCompiledPathXbean(java.lang.String, java.lang.String, java.util.Map)
    {
        org.apache.xmlbeans.impl.store.Path $r3;
        java.util.Map r2, $r5;
        java.lang.String r0, r1, $r6;
        java.lang.ref.WeakReference $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.util.Map;

        $r3 = staticinvoke <org.apache.xmlbeans.impl.store.Path$XbeanPath: org.apache.xmlbeans.impl.store.Path create(java.lang.String,java.lang.String,java.util.Map)>(r0, r1, r2);

        if $r3 == null goto label1;

        $r5 = <org.apache.xmlbeans.impl.store.Path: java.util.Map _xbeanPathCache>;

        $r6 = $r3.<org.apache.xmlbeans.impl.store.Path: java.lang.String _pathKey>;

        $r4 = new java.lang.ref.WeakReference;

        specialinvoke $r4.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r3);

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r4);

     label1:
        return $r3;
    }

    private static synchronized org.apache.xmlbeans.impl.store.Path getCompiledPathDelegate(java.lang.String, java.lang.String, java.util.Map, java.lang.String)
    {
        org.apache.xmlbeans.impl.store.Path $r7;
        java.util.HashMap $r8;
        java.lang.Integer $r4;
        java.util.Map r10;
        int $i0;
        java.lang.Object $r2, $r3;
        java.lang.String r0, r1, r5, $r6;
        org.apache.xmlbeans.impl.common.XPath$XPathCompileException $r9;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r10 := @parameter2: java.util.Map;

        r5 := @parameter3: java.lang.String;

        if r10 != null goto label1;

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        r10 = $r8;

     label1:
        staticinvoke <org.apache.xmlbeans.impl.common.XPath: org.apache.xmlbeans.impl.common.XPath compileXPath(java.lang.String,java.lang.String,java.util.Map)>(r0, r1, r10);

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

     label4:
        $r2 = interfaceinvoke r10.<java.util.Map: java.lang.Object get(java.lang.Object)>("$xmlbeans!ns_boundary");

        if $r2 != null goto label5;

        $i0 = 0;

        goto label6;

     label5:
        $r3 = interfaceinvoke r10.<java.util.Map: java.lang.Object get(java.lang.Object)>("$xmlbeans!ns_boundary");

        $r4 = (java.lang.Integer) $r3;

        $i0 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

     label6:
        interfaceinvoke r10.<java.util.Map: java.lang.Object remove(java.lang.Object)>("$xmlbeans!ns_boundary");

        $r6 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i0);

        $r7 = staticinvoke <org.apache.xmlbeans.impl.store.Path$DelegatePathImpl: org.apache.xmlbeans.impl.store.Path create(java.lang.String,java.lang.String,java.lang.String,java.util.Map)>(r5, $r6, r1, r10);

        return $r7;

        catch org.apache.xmlbeans.impl.common.XPath$XPathCompileException from label1 to label2 with label3;
    }

    public static synchronized java.lang.String compilePath(java.lang.String, org.apache.xmlbeans.XmlOptions)
    {
        org.apache.xmlbeans.impl.store.Path $r2;
        org.apache.xmlbeans.XmlOptions r1;
        java.lang.String r0, $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: org.apache.xmlbeans.XmlOptions;

        $r2 = staticinvoke <org.apache.xmlbeans.impl.store.Path: org.apache.xmlbeans.impl.store.Path getCompiledPath(java.lang.String,org.apache.xmlbeans.XmlOptions)>(r0, r1);

        $r3 = $r2.<org.apache.xmlbeans.impl.store.Path: java.lang.String _pathKey>;

        return $r3;
    }

    private static org.apache.xmlbeans.impl.store.Path createXdkCompiledPath(java.lang.String, java.lang.String)
    {
        java.lang.Throwable $r18;
        org.apache.xmlbeans.impl.store.Path $r7;
        java.lang.Object[] $r1;
        java.lang.Boolean $r4;
        java.lang.String r2, r3, $r16, $r20, $r23;
        java.lang.reflect.Method $r0, $r5, $r13;
        boolean $z0;
        java.lang.IllegalAccessException $r14;
        java.lang.Class[] $r9;
        java.lang.RuntimeException $r15, $r19, $r22;
        java.lang.Exception $r21;
        java.lang.reflect.InvocationTargetException $r17;
        java.lang.Object $r6;
        java.lang.Class $r8, $r10, $r11, $r12, $r25, $r26, $r27;
        java.lang.ClassNotFoundException $r24;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $z0 = <org.apache.xmlbeans.impl.store.Path: boolean _xdkAvailable>;

        if $z0 != 0 goto label01;

        return null;

     label01:
        $r0 = <org.apache.xmlbeans.impl.store.Path: java.lang.reflect.Method _xdkCompilePath>;

        if $r0 != null goto label12;

     label02:
        $r8 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("org.apache.xmlbeans.impl.store.OXQXBXqrlImpl");

        $r9 = newarray (java.lang.Class)[3];

        $r10 = <org.apache.xmlbeans.impl.store.Path: java.lang.Class class$java$lang$String>;

        if $r10 != null goto label03;

        $r25 = staticinvoke <org.apache.xmlbeans.impl.store.Path: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.apache.xmlbeans.impl.store.Path: java.lang.Class class$java$lang$String> = $r25;

        goto label04;

     label03:
        $r25 = <org.apache.xmlbeans.impl.store.Path: java.lang.Class class$java$lang$String>;

     label04:
        $r9[0] = $r25;

        $r11 = <org.apache.xmlbeans.impl.store.Path: java.lang.Class class$java$lang$String>;

        if $r11 != null goto label05;

        $r26 = staticinvoke <org.apache.xmlbeans.impl.store.Path: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.apache.xmlbeans.impl.store.Path: java.lang.Class class$java$lang$String> = $r26;

        goto label06;

     label05:
        $r26 = <org.apache.xmlbeans.impl.store.Path: java.lang.Class class$java$lang$String>;

     label06:
        $r9[1] = $r26;

        $r12 = <org.apache.xmlbeans.impl.store.Path: java.lang.Class class$java$lang$Boolean>;

        if $r12 != null goto label07;

        $r27 = staticinvoke <org.apache.xmlbeans.impl.store.Path: java.lang.Class class$(java.lang.String)>("java.lang.Boolean");

        <org.apache.xmlbeans.impl.store.Path: java.lang.Class class$java$lang$Boolean> = $r27;

        goto label08;

     label07:
        $r27 = <org.apache.xmlbeans.impl.store.Path: java.lang.Class class$java$lang$Boolean>;

     label08:
        $r9[2] = $r27;

        $r13 = virtualinvoke $r8.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("compilePath", $r9);

        <org.apache.xmlbeans.impl.store.Path: java.lang.reflect.Method _xdkCompilePath> = $r13;

     label09:
        goto label12;

     label10:
        $r24 := @caughtexception;

        <org.apache.xmlbeans.impl.store.Path: boolean _xdkAvailable> = 0;

        return null;

     label11:
        $r21 := @caughtexception;

        <org.apache.xmlbeans.impl.store.Path: boolean _xdkAvailable> = 0;

        $r22 = new java.lang.RuntimeException;

        $r23 = virtualinvoke $r21.<java.lang.Exception: java.lang.String getMessage()>();

        specialinvoke $r22.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r23, $r21);

        throw $r22;

     label12:
        $r1 = newarray (java.lang.Object)[3];

        $r1[0] = r2;

        $r1[1] = r3;

        $r4 = new java.lang.Boolean;

        specialinvoke $r4.<java.lang.Boolean: void <init>(boolean)>(1);

        $r1[2] = $r4;

     label13:
        $r5 = <org.apache.xmlbeans.impl.store.Path: java.lang.reflect.Method _xdkCompilePath>;

        $r6 = virtualinvoke $r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r1);

        $r7 = (org.apache.xmlbeans.impl.store.Path) $r6;

     label14:
        return $r7;

     label15:
        $r17 := @caughtexception;

        $r18 = virtualinvoke $r17.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();

        $r19 = new java.lang.RuntimeException;

        $r20 = virtualinvoke $r18.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r19.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r20, $r18);

        throw $r19;

     label16:
        $r14 := @caughtexception;

        $r15 = new java.lang.RuntimeException;

        $r16 = virtualinvoke $r14.<java.lang.IllegalAccessException: java.lang.String getMessage()>();

        specialinvoke $r15.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r16, $r14);

        throw $r15;

        catch java.lang.ClassNotFoundException from label02 to label09 with label10;
        catch java.lang.Exception from label02 to label09 with label11;
        catch java.lang.reflect.InvocationTargetException from label13 to label14 with label15;
        catch java.lang.IllegalAccessException from label13 to label14 with label16;
    }

    private static org.apache.xmlbeans.impl.store.Path createXqrlCompiledPath(java.lang.String, java.lang.String)
    {
        java.lang.Throwable $r18;
        org.apache.xmlbeans.impl.store.Path $r7;
        java.lang.Object[] $r1;
        java.lang.Boolean $r4;
        java.lang.String r2, r3, $r16, $r20, $r23;
        java.lang.reflect.Method $r0, $r5, $r13;
        boolean $z0;
        java.lang.IllegalAccessException $r14;
        java.lang.Class[] $r9;
        java.lang.RuntimeException $r15, $r19, $r22;
        java.lang.Exception $r21;
        java.lang.reflect.InvocationTargetException $r17;
        java.lang.Object $r6;
        java.lang.Class $r8, $r10, $r11, $r12, $r25, $r26, $r27;
        java.lang.ClassNotFoundException $r24;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $z0 = <org.apache.xmlbeans.impl.store.Path: boolean _xqrlAvailable>;

        if $z0 != 0 goto label01;

        return null;

     label01:
        $r0 = <org.apache.xmlbeans.impl.store.Path: java.lang.reflect.Method _xqrlCompilePath>;

        if $r0 != null goto label12;

     label02:
        $r8 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("org.apache.xmlbeans.impl.store.XqrlImpl");

        $r9 = newarray (java.lang.Class)[3];

        $r10 = <org.apache.xmlbeans.impl.store.Path: java.lang.Class class$java$lang$String>;

        if $r10 != null goto label03;

        $r25 = staticinvoke <org.apache.xmlbeans.impl.store.Path: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.apache.xmlbeans.impl.store.Path: java.lang.Class class$java$lang$String> = $r25;

        goto label04;

     label03:
        $r25 = <org.apache.xmlbeans.impl.store.Path: java.lang.Class class$java$lang$String>;

     label04:
        $r9[0] = $r25;

        $r11 = <org.apache.xmlbeans.impl.store.Path: java.lang.Class class$java$lang$String>;

        if $r11 != null goto label05;

        $r26 = staticinvoke <org.apache.xmlbeans.impl.store.Path: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.apache.xmlbeans.impl.store.Path: java.lang.Class class$java$lang$String> = $r26;

        goto label06;

     label05:
        $r26 = <org.apache.xmlbeans.impl.store.Path: java.lang.Class class$java$lang$String>;

     label06:
        $r9[1] = $r26;

        $r12 = <org.apache.xmlbeans.impl.store.Path: java.lang.Class class$java$lang$Boolean>;

        if $r12 != null goto label07;

        $r27 = staticinvoke <org.apache.xmlbeans.impl.store.Path: java.lang.Class class$(java.lang.String)>("java.lang.Boolean");

        <org.apache.xmlbeans.impl.store.Path: java.lang.Class class$java$lang$Boolean> = $r27;

        goto label08;

     label07:
        $r27 = <org.apache.xmlbeans.impl.store.Path: java.lang.Class class$java$lang$Boolean>;

     label08:
        $r9[2] = $r27;

        $r13 = virtualinvoke $r8.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("compilePath", $r9);

        <org.apache.xmlbeans.impl.store.Path: java.lang.reflect.Method _xqrlCompilePath> = $r13;

     label09:
        goto label12;

     label10:
        $r24 := @caughtexception;

        <org.apache.xmlbeans.impl.store.Path: boolean _xqrlAvailable> = 0;

        return null;

     label11:
        $r21 := @caughtexception;

        <org.apache.xmlbeans.impl.store.Path: boolean _xqrlAvailable> = 0;

        $r22 = new java.lang.RuntimeException;

        $r23 = virtualinvoke $r21.<java.lang.Exception: java.lang.String getMessage()>();

        specialinvoke $r22.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r23, $r21);

        throw $r22;

     label12:
        $r1 = newarray (java.lang.Object)[3];

        $r1[0] = r2;

        $r1[1] = r3;

        $r4 = new java.lang.Boolean;

        specialinvoke $r4.<java.lang.Boolean: void <init>(boolean)>(1);

        $r1[2] = $r4;

     label13:
        $r5 = <org.apache.xmlbeans.impl.store.Path: java.lang.reflect.Method _xqrlCompilePath>;

        $r6 = virtualinvoke $r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r1);

        $r7 = (org.apache.xmlbeans.impl.store.Path) $r6;

     label14:
        return $r7;

     label15:
        $r17 := @caughtexception;

        $r18 = virtualinvoke $r17.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();

        $r19 = new java.lang.RuntimeException;

        $r20 = virtualinvoke $r18.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r19.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r20, $r18);

        throw $r19;

     label16:
        $r14 := @caughtexception;

        $r15 = new java.lang.RuntimeException;

        $r16 = virtualinvoke $r14.<java.lang.IllegalAccessException: java.lang.String getMessage()>();

        specialinvoke $r15.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r16, $r14);

        throw $r15;

        catch java.lang.ClassNotFoundException from label02 to label09 with label10;
        catch java.lang.Exception from label02 to label09 with label11;
        catch java.lang.reflect.InvocationTargetException from label13 to label14 with label15;
        catch java.lang.IllegalAccessException from label13 to label14 with label16;
    }

    private static org.apache.xmlbeans.impl.store.Path createXqrl2002CompiledPath(java.lang.String, java.lang.String)
    {
        java.lang.Throwable $r18;
        org.apache.xmlbeans.impl.store.Path $r7;
        java.lang.Object[] $r1;
        java.lang.Boolean $r4;
        java.lang.String r2, r3, $r16, $r20, $r23;
        java.lang.reflect.Method $r0, $r5, $r13;
        boolean $z0;
        java.lang.IllegalAccessException $r14;
        java.lang.Class[] $r9;
        java.lang.RuntimeException $r15, $r19, $r22;
        java.lang.Exception $r21;
        java.lang.reflect.InvocationTargetException $r17;
        java.lang.Object $r6;
        java.lang.Class $r8, $r10, $r11, $r12, $r25, $r26, $r27;
        java.lang.ClassNotFoundException $r24;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $z0 = <org.apache.xmlbeans.impl.store.Path: boolean _xqrl2002Available>;

        if $z0 != 0 goto label01;

        return null;

     label01:
        $r0 = <org.apache.xmlbeans.impl.store.Path: java.lang.reflect.Method _xqrl2002CompilePath>;

        if $r0 != null goto label12;

     label02:
        $r8 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("org.apache.xmlbeans.impl.store.Xqrl2002Impl");

        $r9 = newarray (java.lang.Class)[3];

        $r10 = <org.apache.xmlbeans.impl.store.Path: java.lang.Class class$java$lang$String>;

        if $r10 != null goto label03;

        $r25 = staticinvoke <org.apache.xmlbeans.impl.store.Path: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.apache.xmlbeans.impl.store.Path: java.lang.Class class$java$lang$String> = $r25;

        goto label04;

     label03:
        $r25 = <org.apache.xmlbeans.impl.store.Path: java.lang.Class class$java$lang$String>;

     label04:
        $r9[0] = $r25;

        $r11 = <org.apache.xmlbeans.impl.store.Path: java.lang.Class class$java$lang$String>;

        if $r11 != null goto label05;

        $r26 = staticinvoke <org.apache.xmlbeans.impl.store.Path: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.apache.xmlbeans.impl.store.Path: java.lang.Class class$java$lang$String> = $r26;

        goto label06;

     label05:
        $r26 = <org.apache.xmlbeans.impl.store.Path: java.lang.Class class$java$lang$String>;

     label06:
        $r9[1] = $r26;

        $r12 = <org.apache.xmlbeans.impl.store.Path: java.lang.Class class$java$lang$Boolean>;

        if $r12 != null goto label07;

        $r27 = staticinvoke <org.apache.xmlbeans.impl.store.Path: java.lang.Class class$(java.lang.String)>("java.lang.Boolean");

        <org.apache.xmlbeans.impl.store.Path: java.lang.Class class$java$lang$Boolean> = $r27;

        goto label08;

     label07:
        $r27 = <org.apache.xmlbeans.impl.store.Path: java.lang.Class class$java$lang$Boolean>;

     label08:
        $r9[2] = $r27;

        $r13 = virtualinvoke $r8.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("compilePath", $r9);

        <org.apache.xmlbeans.impl.store.Path: java.lang.reflect.Method _xqrl2002CompilePath> = $r13;

     label09:
        goto label12;

     label10:
        $r24 := @caughtexception;

        <org.apache.xmlbeans.impl.store.Path: boolean _xqrl2002Available> = 0;

        return null;

     label11:
        $r21 := @caughtexception;

        <org.apache.xmlbeans.impl.store.Path: boolean _xqrl2002Available> = 0;

        $r22 = new java.lang.RuntimeException;

        $r23 = virtualinvoke $r21.<java.lang.Exception: java.lang.String getMessage()>();

        specialinvoke $r22.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r23, $r21);

        throw $r22;

     label12:
        $r1 = newarray (java.lang.Object)[3];

        $r1[0] = r2;

        $r1[1] = r3;

        $r4 = new java.lang.Boolean;

        specialinvoke $r4.<java.lang.Boolean: void <init>(boolean)>(1);

        $r1[2] = $r4;

     label13:
        $r5 = <org.apache.xmlbeans.impl.store.Path: java.lang.reflect.Method _xqrl2002CompilePath>;

        $r6 = virtualinvoke $r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r1);

        $r7 = (org.apache.xmlbeans.impl.store.Path) $r6;

     label14:
        return $r7;

     label15:
        $r17 := @caughtexception;

        $r18 = virtualinvoke $r17.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();

        $r19 = new java.lang.RuntimeException;

        $r20 = virtualinvoke $r18.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r19.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r20, $r18);

        throw $r19;

     label16:
        $r14 := @caughtexception;

        $r15 = new java.lang.RuntimeException;

        $r16 = virtualinvoke $r14.<java.lang.IllegalAccessException: java.lang.String getMessage()>();

        specialinvoke $r15.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r16, $r14);

        throw $r15;

        catch java.lang.ClassNotFoundException from label02 to label09 with label10;
        catch java.lang.Exception from label02 to label09 with label11;
        catch java.lang.reflect.InvocationTargetException from label13 to label14 with label15;
        catch java.lang.IllegalAccessException from label13 to label14 with label16;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static java.lang.String access$000()
    {
        java.lang.String $r0;

        $r0 = <org.apache.xmlbeans.impl.store.Path: java.lang.String _delIntfName>;

        return $r0;
    }

    static void <clinit>()
    {
        java.io.InputStreamReader $r8;
        java.lang.Exception $r11;
        java.lang.Class $r4, $r12;
        java.lang.ClassLoader $r5;
        java.io.BufferedReader $r7;
        java.lang.String $r9, $r10;
        java.util.WeakHashMap $r0, $r1, $r2, $r3;
        java.io.InputStream $r6;

        <org.apache.xmlbeans.impl.store.Path: int USE_XDK> = 16;

        <org.apache.xmlbeans.impl.store.Path: int USE_XQRL2002> = 8;

        <org.apache.xmlbeans.impl.store.Path: int USE_DELEGATE> = 4;

        <org.apache.xmlbeans.impl.store.Path: int USE_XQRL> = 2;

        <org.apache.xmlbeans.impl.store.Path: int USE_XBEAN> = 1;

        <org.apache.xmlbeans.impl.store.Path: java.lang.String PATH_DELEGATE_INTERFACE> = "PATH_DELEGATE_INTERFACE";

        <org.apache.xmlbeans.impl.store.Path: java.lang.String _useDelegateForXpath> = "use delegate for xpath";

        <org.apache.xmlbeans.impl.store.Path: java.lang.String _useXdkForXpath> = "use xdk for xpath";

        <org.apache.xmlbeans.impl.store.Path: java.lang.String _useXqrlForXpath> = "use xqrl for xpath";

        <org.apache.xmlbeans.impl.store.Path: java.lang.String _useXbeanForXpath> = "use xbean for xpath";

        <org.apache.xmlbeans.impl.store.Path: java.lang.String _forceXqrl2002ForXpathXQuery> = "use xqrl-2002 for xpath";

        $r0 = new java.util.WeakHashMap;

        specialinvoke $r0.<java.util.WeakHashMap: void <init>()>();

        <org.apache.xmlbeans.impl.store.Path: java.util.Map _xbeanPathCache> = $r0;

        $r1 = new java.util.WeakHashMap;

        specialinvoke $r1.<java.util.WeakHashMap: void <init>()>();

        <org.apache.xmlbeans.impl.store.Path: java.util.Map _xdkPathCache> = $r1;

        $r2 = new java.util.WeakHashMap;

        specialinvoke $r2.<java.util.WeakHashMap: void <init>()>();

        <org.apache.xmlbeans.impl.store.Path: java.util.Map _xqrlPathCache> = $r2;

        $r3 = new java.util.WeakHashMap;

        specialinvoke $r3.<java.util.WeakHashMap: void <init>()>();

        <org.apache.xmlbeans.impl.store.Path: java.util.Map _xqrl2002PathCache> = $r3;

        <org.apache.xmlbeans.impl.store.Path: boolean _xdkAvailable> = 1;

        <org.apache.xmlbeans.impl.store.Path: boolean _xqrlAvailable> = 1;

        <org.apache.xmlbeans.impl.store.Path: boolean _xqrl2002Available> = 1;

        $r4 = <org.apache.xmlbeans.impl.store.Path: java.lang.Class class$org$apache$xmlbeans$impl$store$Path>;

        if $r4 != null goto label1;

        $r12 = staticinvoke <org.apache.xmlbeans.impl.store.Path: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.impl.store.Path");

        <org.apache.xmlbeans.impl.store.Path: java.lang.Class class$org$apache$xmlbeans$impl$store$Path> = $r12;

        goto label2;

     label1:
        $r12 = <org.apache.xmlbeans.impl.store.Path: java.lang.Class class$org$apache$xmlbeans$impl$store$Path>;

     label2:
        $r5 = virtualinvoke $r12.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r6 = virtualinvoke $r5.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>("META-INF/services/org.apache.xmlbeans.impl.store.PathDelegate.SelectPathInterface");

     label3:
        $r7 = new java.io.BufferedReader;

        $r8 = new java.io.InputStreamReader;

        specialinvoke $r8.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r6);

        specialinvoke $r7.<java.io.BufferedReader: void <init>(java.io.Reader)>($r8);

        $r9 = virtualinvoke $r7.<java.io.BufferedReader: java.lang.String readLine()>();

        $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String trim()>();

        <org.apache.xmlbeans.impl.store.Path: java.lang.String _delIntfName> = $r10;

        virtualinvoke $r7.<java.io.BufferedReader: void close()>();

     label4:
        goto label6;

     label5:
        $r11 := @caughtexception;

        <org.apache.xmlbeans.impl.store.Path: java.lang.String _delIntfName> = null;

     label6:
        return;

        catch java.lang.Exception from label3 to label4 with label5;
    }
}
