class org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$ReplaceAttributesGenerator extends org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomOperationComponentGenerator
{
    final org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator this$0;

    void <init>(org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator)
    {
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator r1;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$ReplaceAttributesGenerator r0;

        r0 := @this: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$ReplaceAttributesGenerator;

        r1 := @parameter0: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator;

        r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$ReplaceAttributesGenerator: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator this$0> = r1;

        specialinvoke r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomOperationComponentGenerator: void <init>(org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator)>(r1);

        return;
    }

    org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomizerOperationComponent generate(org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton, boolean, org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$Stage)
    {
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton r2;
        java.lang.RuntimeException $r10;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator $r6;
        org.waveprotocol.wave.model.document.operation.Attributes $r3, $r8;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$ReplaceAttributesGenerator r4;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$ReplaceAttributesGenerator$2 $r9;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$Stage r0, $r1;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$ReplaceAttributesGenerator$1 $r5;
        org.waveprotocol.wave.model.document.operation.AttributesUpdate $r7;
        boolean z0;

        r4 := @this: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$ReplaceAttributesGenerator;

        r2 := @parameter0: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton;

        z0 := @parameter1: boolean;

        r0 := @parameter2: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$Stage;

        $r1 = <org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$Stage: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$Stage S1_UNRESTRICTED>;

        if r0 == $r1 goto label1;

        return null;

     label1:
        $r3 = virtualinvoke r2.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton: org.waveprotocol.wave.model.document.operation.Attributes currentElementStartAttributes()>();

        if $r3 != null goto label2;

        if z0 == 0 goto label2;

        return null;

     label2:
        if z0 != 0 goto label3;

        $r10 = new java.lang.RuntimeException;

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not implemented");

        throw $r10;

     label3:
        $r6 = r4.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$ReplaceAttributesGenerator: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator this$0>;

        $r5 = new org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$ReplaceAttributesGenerator$1;

        specialinvoke $r5.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$ReplaceAttributesGenerator$1: void <init>(org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$ReplaceAttributesGenerator,org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton,org.waveprotocol.wave.model.document.operation.Attributes)>(r4, r2, $r3);

        $r7 = virtualinvoke $r6.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator: org.waveprotocol.wave.model.document.operation.AttributesUpdate generateRandomAttributesUpdate(boolean,org.waveprotocol.wave.model.document.operation.Attributes,org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$AttributesUpdateChecker)>(z0, $r3, $r5);

        if $r7 != null goto label4;

        return null;

     label4:
        $r8 = interfaceinvoke $r3.<org.waveprotocol.wave.model.document.operation.Attributes: org.waveprotocol.wave.model.document.operation.Attributes updateWith(org.waveprotocol.wave.model.document.operation.AttributesUpdate)>($r7);

        $r9 = new org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$ReplaceAttributesGenerator$2;

        specialinvoke $r9.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$ReplaceAttributesGenerator$2: void <init>(org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$ReplaceAttributesGenerator,org.waveprotocol.wave.model.document.operation.Attributes,org.waveprotocol.wave.model.document.operation.Attributes)>(r4, $r3, $r8);

        return $r9;
    }
}
