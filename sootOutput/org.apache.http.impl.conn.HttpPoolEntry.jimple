class org.apache.http.impl.conn.HttpPoolEntry extends org.apache.http.pool.PoolEntry
{
    private final org.apache.commons.logging.Log log;
    private final org.apache.http.conn.routing.RouteTracker tracker;

    public void <init>(org.apache.commons.logging.Log, java.lang.String, org.apache.http.conn.routing.HttpRoute, org.apache.http.conn.OperatedClientConnection, long, java.util.concurrent.TimeUnit)
    {
        org.apache.http.conn.routing.RouteTracker $r6;
        long l0;
        org.apache.http.conn.routing.HttpRoute r2;
        org.apache.http.conn.OperatedClientConnection r3;
        java.util.concurrent.TimeUnit r4;
        org.apache.http.impl.conn.HttpPoolEntry r0;
        org.apache.commons.logging.Log r5;
        java.lang.String r1;

        r0 := @this: org.apache.http.impl.conn.HttpPoolEntry;

        r5 := @parameter0: org.apache.commons.logging.Log;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: org.apache.http.conn.routing.HttpRoute;

        r3 := @parameter3: org.apache.http.conn.OperatedClientConnection;

        l0 := @parameter4: long;

        r4 := @parameter5: java.util.concurrent.TimeUnit;

        specialinvoke r0.<org.apache.http.pool.PoolEntry: void <init>(java.lang.String,java.lang.Object,java.lang.Object,long,java.util.concurrent.TimeUnit)>(r1, r2, r3, l0, r4);

        r0.<org.apache.http.impl.conn.HttpPoolEntry: org.apache.commons.logging.Log log> = r5;

        $r6 = new org.apache.http.conn.routing.RouteTracker;

        specialinvoke $r6.<org.apache.http.conn.routing.RouteTracker: void <init>(org.apache.http.conn.routing.HttpRoute)>(r2);

        r0.<org.apache.http.impl.conn.HttpPoolEntry: org.apache.http.conn.routing.RouteTracker tracker> = $r6;

        return;
    }

    public boolean isExpired(long)
    {
        java.util.Date $r7;
        long l0, $l1;
        org.apache.http.impl.conn.HttpPoolEntry r0;
        org.apache.commons.logging.Log $r1, $r3;
        java.lang.StringBuilder $r2, $r4, $r5, $r6, $r8;
        java.lang.String $r9;
        boolean $z0, $z1;

        r0 := @this: org.apache.http.impl.conn.HttpPoolEntry;

        l0 := @parameter0: long;

        $z0 = specialinvoke r0.<org.apache.http.pool.PoolEntry: boolean isExpired(long)>(l0);

        if $z0 == 0 goto label1;

        $r1 = r0.<org.apache.http.impl.conn.HttpPoolEntry: org.apache.commons.logging.Log log>;

        $z1 = interfaceinvoke $r1.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z1 == 0 goto label1;

        $r3 = r0.<org.apache.http.impl.conn.HttpPoolEntry: org.apache.commons.logging.Log log>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Connection ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" expired @ ");

        $r7 = new java.util.Date;

        $l1 = virtualinvoke r0.<org.apache.http.impl.conn.HttpPoolEntry: long getExpiry()>();

        specialinvoke $r7.<java.util.Date: void <init>(long)>($l1);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r9);

     label1:
        return $z0;
    }

    org.apache.http.conn.routing.RouteTracker getTracker()
    {
        org.apache.http.impl.conn.HttpPoolEntry r0;
        org.apache.http.conn.routing.RouteTracker $r1;

        r0 := @this: org.apache.http.impl.conn.HttpPoolEntry;

        $r1 = r0.<org.apache.http.impl.conn.HttpPoolEntry: org.apache.http.conn.routing.RouteTracker tracker>;

        return $r1;
    }

    org.apache.http.conn.routing.HttpRoute getPlannedRoute()
    {
        org.apache.http.impl.conn.HttpPoolEntry r0;
        java.lang.Object $r1;
        org.apache.http.conn.routing.HttpRoute $r2;

        r0 := @this: org.apache.http.impl.conn.HttpPoolEntry;

        $r1 = virtualinvoke r0.<org.apache.http.impl.conn.HttpPoolEntry: java.lang.Object getRoute()>();

        $r2 = (org.apache.http.conn.routing.HttpRoute) $r1;

        return $r2;
    }

    org.apache.http.conn.routing.HttpRoute getEffectiveRoute()
    {
        org.apache.http.impl.conn.HttpPoolEntry r0;
        org.apache.http.conn.routing.HttpRoute $r2;
        org.apache.http.conn.routing.RouteTracker $r1;

        r0 := @this: org.apache.http.impl.conn.HttpPoolEntry;

        $r1 = r0.<org.apache.http.impl.conn.HttpPoolEntry: org.apache.http.conn.routing.RouteTracker tracker>;

        $r2 = virtualinvoke $r1.<org.apache.http.conn.routing.RouteTracker: org.apache.http.conn.routing.HttpRoute toRoute()>();

        return $r2;
    }

    public boolean isClosed()
    {
        org.apache.http.conn.OperatedClientConnection r2;
        org.apache.http.impl.conn.HttpPoolEntry r0;
        java.lang.Object $r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.http.impl.conn.HttpPoolEntry;

        $r1 = virtualinvoke r0.<org.apache.http.impl.conn.HttpPoolEntry: java.lang.Object getConnection()>();

        r2 = (org.apache.http.conn.OperatedClientConnection) $r1;

        $z0 = interfaceinvoke r2.<org.apache.http.conn.OperatedClientConnection: boolean isOpen()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public void close()
    {
        org.apache.http.conn.OperatedClientConnection r2;
        org.apache.http.impl.conn.HttpPoolEntry r0;
        java.lang.Object $r1;
        java.io.IOException $r3;
        org.apache.commons.logging.Log $r4;

        r0 := @this: org.apache.http.impl.conn.HttpPoolEntry;

        $r1 = virtualinvoke r0.<org.apache.http.impl.conn.HttpPoolEntry: java.lang.Object getConnection()>();

        r2 = (org.apache.http.conn.OperatedClientConnection) $r1;

     label1:
        interfaceinvoke r2.<org.apache.http.conn.OperatedClientConnection: void close()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = r0.<org.apache.http.impl.conn.HttpPoolEntry: org.apache.commons.logging.Log log>;

        interfaceinvoke $r4.<org.apache.commons.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>("I/O error closing connection", $r3);

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }
}
