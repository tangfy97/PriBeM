public class com.mycila.inject.legacy.LegacyProvider$ConstructBuilder extends java.lang.Object
{
    private final java.lang.Class type;

    private void <init>(java.lang.Class)
    {
        java.lang.Class r1;
        com.mycila.inject.legacy.LegacyProvider$ConstructBuilder r0;

        r0 := @this: com.mycila.inject.legacy.LegacyProvider$ConstructBuilder;

        r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.mycila.inject.legacy.LegacyProvider$ConstructBuilder: java.lang.Class type> = r1;

        return;
    }

    public com.mycila.inject.legacy.LegacyProvider withDefaultConstructor()
    {
        com.mycila.inject.legacy.LegacyProvider$ConstructBuilder r0;
        com.google.inject.Key[] $r1;
        com.mycila.inject.legacy.LegacyProvider $r2;

        r0 := @this: com.mycila.inject.legacy.LegacyProvider$ConstructBuilder;

        $r1 = newarray (com.google.inject.Key)[0];

        $r2 = virtualinvoke r0.<com.mycila.inject.legacy.LegacyProvider$ConstructBuilder: com.mycila.inject.legacy.LegacyProvider withConstructor(com.google.inject.Key[])>($r1);

        return $r2;
    }

    public transient com.mycila.inject.legacy.LegacyProvider withConstructor(java.lang.Class[])
    {
        com.mycila.inject.legacy.LegacyProvider $r3;
        java.lang.Class[] r1;
        com.mycila.inject.legacy.LegacyProvider$ConstructBuilder r0;
        com.google.inject.Key[] $r2;

        r0 := @this: com.mycila.inject.legacy.LegacyProvider$ConstructBuilder;

        r1 := @parameter0: java.lang.Class[];

        $r2 = staticinvoke <com.mycila.inject.legacy.LegacyProvider: com.google.inject.Key[] access$100(java.lang.Class[])>(r1);

        $r3 = virtualinvoke r0.<com.mycila.inject.legacy.LegacyProvider$ConstructBuilder: com.mycila.inject.legacy.LegacyProvider withConstructor(com.google.inject.Key[])>($r2);

        return $r3;
    }

    public transient com.mycila.inject.legacy.LegacyProvider withConstructor(com.google.inject.Key[])
    {
        com.mycila.inject.legacy.LegacyProvider$ConstructorLegacyProvider $r0;
        java.lang.Class $r3;
        com.mycila.inject.legacy.LegacyProvider$ConstructBuilder r1;
        com.google.inject.Key[] r2;

        r1 := @this: com.mycila.inject.legacy.LegacyProvider$ConstructBuilder;

        r2 := @parameter0: com.google.inject.Key[];

        $r0 = new com.mycila.inject.legacy.LegacyProvider$ConstructorLegacyProvider;

        $r3 = r1.<com.mycila.inject.legacy.LegacyProvider$ConstructBuilder: java.lang.Class type>;

        specialinvoke $r0.<com.mycila.inject.legacy.LegacyProvider$ConstructorLegacyProvider: void <init>(java.lang.Class,com.google.inject.Key[])>($r3, r2);

        return $r0;
    }

    public transient com.mycila.inject.legacy.LegacyProvider withFactory(java.lang.Class, java.lang.String, java.lang.Class[])
    {
        com.mycila.inject.legacy.LegacyProvider $r6;
        com.google.inject.Key $r2;
        java.lang.Class[] r4;
        java.lang.Class r1;
        com.mycila.inject.legacy.LegacyProvider$ConstructBuilder r0;
        java.lang.String r3;
        com.google.inject.Key[] $r5;

        r0 := @this: com.mycila.inject.legacy.LegacyProvider$ConstructBuilder;

        r1 := @parameter0: java.lang.Class;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.Class[];

        $r2 = staticinvoke <com.google.inject.Key: com.google.inject.Key get(java.lang.Class)>(r1);

        $r5 = staticinvoke <com.mycila.inject.legacy.LegacyProvider: com.google.inject.Key[] access$100(java.lang.Class[])>(r4);

        $r6 = virtualinvoke r0.<com.mycila.inject.legacy.LegacyProvider$ConstructBuilder: com.mycila.inject.legacy.LegacyProvider withFactory(com.google.inject.Key,java.lang.String,com.google.inject.Key[])>($r2, r3, $r5);

        return $r6;
    }

    public transient com.mycila.inject.legacy.LegacyProvider withFactory(com.google.inject.Key, java.lang.String, com.google.inject.Key[])
    {
        com.mycila.inject.legacy.LegacyProvider$FactoryLegacyProvider $r0;
        com.google.inject.Key r2;
        java.lang.Class $r5;
        com.mycila.inject.legacy.LegacyProvider$ConstructBuilder r1;
        java.lang.String r3;
        com.google.inject.Key[] r4;

        r1 := @this: com.mycila.inject.legacy.LegacyProvider$ConstructBuilder;

        r2 := @parameter0: com.google.inject.Key;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: com.google.inject.Key[];

        $r0 = new com.mycila.inject.legacy.LegacyProvider$FactoryLegacyProvider;

        $r5 = r1.<com.mycila.inject.legacy.LegacyProvider$ConstructBuilder: java.lang.Class type>;

        specialinvoke $r0.<com.mycila.inject.legacy.LegacyProvider$FactoryLegacyProvider: void <init>(java.lang.Class,com.google.inject.Key,java.lang.String,com.google.inject.Key[])>($r5, r2, r3, r4);

        return $r0;
    }

    void <init>(java.lang.Class, com.mycila.inject.legacy.LegacyProvider$1)
    {
        java.lang.Class r1;
        com.mycila.inject.legacy.LegacyProvider$ConstructBuilder r0;
        com.mycila.inject.legacy.LegacyProvider$1 r2;

        r0 := @this: com.mycila.inject.legacy.LegacyProvider$ConstructBuilder;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: com.mycila.inject.legacy.LegacyProvider$1;

        specialinvoke r0.<com.mycila.inject.legacy.LegacyProvider$ConstructBuilder: void <init>(java.lang.Class)>(r1);

        return;
    }
}
