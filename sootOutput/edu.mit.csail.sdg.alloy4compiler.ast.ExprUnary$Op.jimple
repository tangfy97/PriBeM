public final enum class edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op extends java.lang.Enum
{
    public static final enum edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op SOMEOF;
    public static final enum edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op LONEOF;
    public static final enum edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op ONEOF;
    public static final enum edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op SETOF;
    public static final enum edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op EXACTLYOF;
    public static final enum edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op NOT;
    public static final enum edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op NO;
    public static final enum edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op SOME;
    public static final enum edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op LONE;
    public static final enum edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op ONE;
    public static final enum edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op TRANSPOSE;
    public static final enum edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op RCLOSURE;
    public static final enum edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op CLOSURE;
    public static final enum edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op CARDINALITY;
    public static final enum edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op CAST2INT;
    public static final enum edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op CAST2SIGINT;
    public static final enum edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op NOOP;
    private final java.lang.String label;
    private static final edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op[] $VALUES;

    public static final edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op[] values()
    {
        java.lang.Object $r1;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op[] $r0, $r2;

        $r0 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op[]) $r1;

        return $r2;
    }

    public static edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op valueOf(java.lang.String)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op $r2;
        java.lang.String r0;
        java.lang.Enum $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Ledu/mit/csail/sdg/alloy4compiler/ast/ExprUnary$Op;", r0);

        $r2 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int, java.lang.String)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op r0;
        int i0;
        java.lang.String r1, r2;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: java.lang.String label> = r2;

        return;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos, edu.mit.csail.sdg.alloy4compiler.ast.Expr)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op r0;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r2, $r3;
        edu.mit.csail.sdg.alloy4.Pos r1;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op;

        r1 := @parameter0: edu.mit.csail.sdg.alloy4.Pos;

        r2 := @parameter1: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r3 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4.Err,long)>(r1, r2, null, 0L);

        return $r3;
    }

    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos, edu.mit.csail.sdg.alloy4compiler.ast.Expr, edu.mit.csail.sdg.alloy4.Err, long)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op r0, $r1, $r6, $r37, $r47, $r51, $r52;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary $r66;
        java.lang.StringBuilder $r10, $r12, $r13, $r14, $r16, $r23, $r24, $r26, $r32, $r33, $r35, $r42, $r43, $r45;
        long l0, $l6, $l7;
        java.lang.String $r11, $r17, $r27, $r36, $r46;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r57;
        int[] $r2, $r63;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig $r7, $r28;
        edu.mit.csail.sdg.alloy4.ErrorSyntax $r53;
        boolean $z0, $z1;
        edu.mit.csail.sdg.alloy4.Pos $r9, $r22, $r31, $r41, $r54, $r55, r56;
        edu.mit.csail.sdg.alloy4compiler.ast.Type $r3, $r4, $r5, $r15, $r18, $r19, $r20, $r25, $r29, $r34, $r38, $r39, $r44, $r48, $r49, $r50, r64;
        edu.mit.csail.sdg.alloy4.ErrorType $r8, $r21, $r30, $r40, r62;
        edu.mit.csail.sdg.alloy4.JoinableList $r59, $r60, r61, $r65, $r67;
        edu.mit.csail.sdg.alloy4.Err r58;
        int $i1, $i2, $i3, $i4, $i5;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op;

        r56 := @parameter0: edu.mit.csail.sdg.alloy4.Pos;

        r57 := @parameter1: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r58 := @parameter2: edu.mit.csail.sdg.alloy4.Err;

        l0 := @parameter3: long;

        if r56 == null goto label01;

        $r55 = <edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos UNKNOWN>;

        if r56 != $r55 goto label03;

     label01:
        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op NOOP>;

        if r0 != $r1 goto label02;

        r56 = r57.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos pos>;

        goto label03;

     label02:
        r56 = virtualinvoke r57.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

     label03:
        $r59 = r57.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.JoinableList errors>;

        $r60 = virtualinvoke $r59.<edu.mit.csail.sdg.alloy4.JoinableList: edu.mit.csail.sdg.alloy4.JoinableList make(java.lang.Object)>(r58);

        r61 = $r60;

        $i3 = r57.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: int mult>;

        if $i3 == 0 goto label05;

        $r51 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op SETOF>;

        if r0 != $r51 goto label04;

        return r57;

     label04:
        $r52 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op NOOP>;

        if r0 == $r52 goto label05;

        if r58 != null goto label05;

        $r53 = new edu.mit.csail.sdg.alloy4.ErrorSyntax;

        $r54 = virtualinvoke r57.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        specialinvoke $r53.<edu.mit.csail.sdg.alloy4.ErrorSyntax: void <init>(edu.mit.csail.sdg.alloy4.Pos,java.lang.String)>($r54, "Multiplicity expression not allowed here.");

        r61 = virtualinvoke $r60.<edu.mit.csail.sdg.alloy4.JoinableList: edu.mit.csail.sdg.alloy4.JoinableList make(java.lang.Object)>($r53);

     label05:
        r62 = null;

        $r63 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$1: int[] $SwitchMap$edu$mit$csail$sdg$alloy4compiler$ast$ExprUnary$Op>;

        $i4 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: int ordinal()>();

        $i5 = $r63[$i4];

        tableswitch($i5)
        {
            case 6: goto label09;
            case 7: goto label08;
            case 8: goto label06;
            case 9: goto label07;
            default: goto label11;
        };

     label06:
        goto label12;

     label07:
        r57 = virtualinvoke r57.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr typecheck_as_formula()>();

        goto label12;

     label08:
        r57 = virtualinvoke r57.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr typecheck_as_int()>();

        goto label12;

     label09:
        $r50 = r57.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $r49 = <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type INT>;

        if $r50 != $r49 goto label10;

        return r57;

     label10:
        r57 = virtualinvoke r57.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr typecheck_as_set()>();

        goto label12;

     label11:
        r57 = virtualinvoke r57.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr typecheck_as_set()>();

     label12:
        r64 = r57.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $r65 = r57.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.JoinableList errors>;

        $z1 = virtualinvoke $r65.<edu.mit.csail.sdg.alloy4.JoinableList: boolean isEmpty()>();

        if $z1 == 0 goto label25;

        $r2 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$1: int[] $SwitchMap$edu$mit$csail$sdg$alloy4compiler$ast$ExprUnary$Op>;

        $i1 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: int ordinal()>();

        $i2 = $r2[$i1];

        tableswitch($i2)
        {
            case 1: goto label13;
            case 2: goto label13;
            case 3: goto label13;
            case 4: goto label13;
            case 5: goto label13;
            case 6: goto label22;
            case 7: goto label24;
            case 8: goto label25;
            case 9: goto label17;
            case 10: goto label17;
            case 11: goto label17;
            case 12: goto label17;
            case 13: goto label17;
            case 14: goto label18;
            case 15: goto label19;
            case 16: goto label19;
            case 17: goto label21;
            default: goto label25;
        };

     label13:
        $r37 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op SETOF>;

        if r0 == $r37 goto label14;

        $r47 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op EXACTLYOF>;

        if r0 != $r47 goto label15;

     label14:
        $r38 = r57.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        r64 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type removesBoolAndInt(edu.mit.csail.sdg.alloy4compiler.ast.Type)>($r38);

        goto label16;

     label15:
        $r48 = r57.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        r64 = virtualinvoke $r48.<edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type extract(int)>(1);

     label16:
        $r39 = <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type EMPTY>;

        if r64 != $r39 goto label25;

        $r40 = new edu.mit.csail.sdg.alloy4.ErrorType;

        $r41 = virtualinvoke r57.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("After the some/lone/one multiplicity symbol, this expression must be a unary set.\nInstead, its possible type(s) are:\n");

        $r44 = r57.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r44);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r40.<edu.mit.csail.sdg.alloy4.ErrorType: void <init>(edu.mit.csail.sdg.alloy4.Pos,java.lang.String)>($r41, $r46);

        r62 = $r40;

        goto label25;

     label17:
        r64 = <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type FORMULA>;

        goto label25;

     label18:
        $r18 = r57.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $r19 = virtualinvoke $r18.<edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type transpose()>();

        r64 = $r19;

        $r20 = <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type EMPTY>;

        if $r19 != $r20 goto label25;

        $r21 = new edu.mit.csail.sdg.alloy4.ErrorType;

        $r22 = virtualinvoke r57.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("~ can be used only with a binary relation.\nInstead, its possible type(s) are:\n");

        $r25 = r57.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<edu.mit.csail.sdg.alloy4.ErrorType: void <init>(edu.mit.csail.sdg.alloy4.Pos,java.lang.String)>($r22, $r27);

        r62 = $r21;

        goto label25;

     label19:
        $r3 = r57.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $r4 = virtualinvoke $r3.<edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type closure()>();

        r64 = $r4;

        $r5 = <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type EMPTY>;

        if $r4 != $r5 goto label20;

        $r8 = new edu.mit.csail.sdg.alloy4.ErrorType;

        $r9 = virtualinvoke r57.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: java.lang.String label>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" can be used only with a binary relation.\n");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Instead, its possible type(s) are:\n");

        $r15 = r57.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<edu.mit.csail.sdg.alloy4.ErrorType: void <init>(edu.mit.csail.sdg.alloy4.Pos,java.lang.String)>($r9, $r17);

        r62 = $r8;

     label20:
        $r6 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op RCLOSURE>;

        if r0 != $r6 goto label25;

        $r7 = <edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig UNIV>;

        r64 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type make2(edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig)>($r7);

        goto label25;

     label21:
        r64 = <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type INT>;

        goto label25;

     label22:
        $r29 = r57.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $z0 = virtualinvoke $r29.<edu.mit.csail.sdg.alloy4compiler.ast.Type: boolean hasArity(int)>(1);

        if $z0 != 0 goto label23;

        $r30 = new edu.mit.csail.sdg.alloy4.ErrorType;

        $r31 = virtualinvoke r57.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("int[] can be used only with a unary set.\nInstead, its possible type(s) are:\n");

        $r34 = r57.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r34);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r30.<edu.mit.csail.sdg.alloy4.ErrorType: void <init>(edu.mit.csail.sdg.alloy4.Pos,java.lang.String)>($r31, $r36);

        r62 = $r30;

     label23:
        r64 = <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type INT>;

        goto label25;

     label24:
        $r28 = <edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig SIGINT>;

        r64 = $r28.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

     label25:
        $r66 = new edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary;

        $l6 = r57.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: long weight>;

        $l7 = l0 + $l6;

        $r67 = virtualinvoke r61.<edu.mit.csail.sdg.alloy4.JoinableList: edu.mit.csail.sdg.alloy4.JoinableList make(java.lang.Object)>(r62);

        specialinvoke $r66.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: void <init>(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op,edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4compiler.ast.Type,long,edu.mit.csail.sdg.alloy4.JoinableList,edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$1)>(r56, r0, r57, r64, $l7, $r67, null);

        return $r66;
    }

    public final java.lang.String toString()
    {
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op r0;
        java.lang.String $r1;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op;

        $r1 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: java.lang.String label>;

        return $r1;
    }

    public final java.lang.String toHTML()
    {
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op r0, $r1, $r2;
        java.lang.String $r3;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op;

        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op CAST2INT>;

        if r0 != $r1 goto label1;

        return "Int-&gt;int";

     label1:
        $r2 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op CAST2SIGINT>;

        if r0 != $r2 goto label2;

        return "int-&gt;Int";

     label2:
        $r3 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: java.lang.String label>;

        return $r3;
    }

    static void <clinit>()
    {
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op[] $r17;

        $r0 = new edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op;

        specialinvoke $r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: void <init>(java.lang.String,int,java.lang.String)>("SOMEOF", 0, "some of");

        <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op SOMEOF> = $r0;

        $r1 = new edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op;

        specialinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: void <init>(java.lang.String,int,java.lang.String)>("LONEOF", 1, "lone of");

        <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op LONEOF> = $r1;

        $r2 = new edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op;

        specialinvoke $r2.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: void <init>(java.lang.String,int,java.lang.String)>("ONEOF", 2, "one of");

        <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op ONEOF> = $r2;

        $r3 = new edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op;

        specialinvoke $r3.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: void <init>(java.lang.String,int,java.lang.String)>("SETOF", 3, "set of");

        <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op SETOF> = $r3;

        $r4 = new edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op;

        specialinvoke $r4.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: void <init>(java.lang.String,int,java.lang.String)>("EXACTLYOF", 4, "exactly of");

        <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op EXACTLYOF> = $r4;

        $r5 = new edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op;

        specialinvoke $r5.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: void <init>(java.lang.String,int,java.lang.String)>("NOT", 5, "!");

        <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op NOT> = $r5;

        $r6 = new edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op;

        specialinvoke $r6.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: void <init>(java.lang.String,int,java.lang.String)>("NO", 6, "no");

        <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op NO> = $r6;

        $r7 = new edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op;

        specialinvoke $r7.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: void <init>(java.lang.String,int,java.lang.String)>("SOME", 7, "some");

        <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op SOME> = $r7;

        $r8 = new edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op;

        specialinvoke $r8.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: void <init>(java.lang.String,int,java.lang.String)>("LONE", 8, "lone");

        <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op LONE> = $r8;

        $r9 = new edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op;

        specialinvoke $r9.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: void <init>(java.lang.String,int,java.lang.String)>("ONE", 9, "one");

        <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op ONE> = $r9;

        $r10 = new edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op;

        specialinvoke $r10.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: void <init>(java.lang.String,int,java.lang.String)>("TRANSPOSE", 10, "~");

        <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op TRANSPOSE> = $r10;

        $r11 = new edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op;

        specialinvoke $r11.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: void <init>(java.lang.String,int,java.lang.String)>("RCLOSURE", 11, "*");

        <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op RCLOSURE> = $r11;

        $r12 = new edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op;

        specialinvoke $r12.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: void <init>(java.lang.String,int,java.lang.String)>("CLOSURE", 12, "^");

        <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op CLOSURE> = $r12;

        $r13 = new edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op;

        specialinvoke $r13.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: void <init>(java.lang.String,int,java.lang.String)>("CARDINALITY", 13, "#");

        <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op CARDINALITY> = $r13;

        $r14 = new edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op;

        specialinvoke $r14.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: void <init>(java.lang.String,int,java.lang.String)>("CAST2INT", 14, "Int->int");

        <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op CAST2INT> = $r14;

        $r15 = new edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op;

        specialinvoke $r15.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: void <init>(java.lang.String,int,java.lang.String)>("CAST2SIGINT", 15, "int->Int");

        <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op CAST2SIGINT> = $r15;

        $r16 = new edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op;

        specialinvoke $r16.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: void <init>(java.lang.String,int,java.lang.String)>("NOOP", 16, "NOOP");

        <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op NOOP> = $r16;

        $r17 = newarray (edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op)[17];

        $r18 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op SOMEOF>;

        $r17[0] = $r18;

        $r19 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op LONEOF>;

        $r17[1] = $r19;

        $r20 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op ONEOF>;

        $r17[2] = $r20;

        $r21 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op SETOF>;

        $r17[3] = $r21;

        $r22 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op EXACTLYOF>;

        $r17[4] = $r22;

        $r23 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op NOT>;

        $r17[5] = $r23;

        $r24 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op NO>;

        $r17[6] = $r24;

        $r25 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op SOME>;

        $r17[7] = $r25;

        $r26 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op LONE>;

        $r17[8] = $r26;

        $r27 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op ONE>;

        $r17[9] = $r27;

        $r28 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op TRANSPOSE>;

        $r17[10] = $r28;

        $r29 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op RCLOSURE>;

        $r17[11] = $r29;

        $r30 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op CLOSURE>;

        $r17[12] = $r30;

        $r31 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op CARDINALITY>;

        $r17[13] = $r31;

        $r32 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op CAST2INT>;

        $r17[14] = $r32;

        $r33 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op CAST2SIGINT>;

        $r17[15] = $r33;

        $r34 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op NOOP>;

        $r17[16] = $r34;

        <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op[] $VALUES> = $r17;

        return;
    }
}
