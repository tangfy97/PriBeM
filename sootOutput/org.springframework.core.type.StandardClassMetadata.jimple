public class org.springframework.core.type.StandardClassMetadata extends java.lang.Object implements org.springframework.core.type.ClassMetadata
{
    private final java.lang.Class introspectedClass;

    public void <init>(java.lang.Class)
    {
        org.springframework.core.type.StandardClassMetadata r0;
        java.lang.Class r1;

        r0 := @this: org.springframework.core.type.StandardClassMetadata;

        r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r1, "Class must not be null");

        r0.<org.springframework.core.type.StandardClassMetadata: java.lang.Class introspectedClass> = r1;

        return;
    }

    public final java.lang.Class getIntrospectedClass()
    {
        org.springframework.core.type.StandardClassMetadata r0;
        java.lang.Class $r1;

        r0 := @this: org.springframework.core.type.StandardClassMetadata;

        $r1 = r0.<org.springframework.core.type.StandardClassMetadata: java.lang.Class introspectedClass>;

        return $r1;
    }

    public java.lang.String getClassName()
    {
        org.springframework.core.type.StandardClassMetadata r0;
        java.lang.Class $r1;
        java.lang.String $r2;

        r0 := @this: org.springframework.core.type.StandardClassMetadata;

        $r1 = r0.<org.springframework.core.type.StandardClassMetadata: java.lang.Class introspectedClass>;

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        return $r2;
    }

    public boolean isInterface()
    {
        org.springframework.core.type.StandardClassMetadata r0;
        java.lang.Class $r1;
        boolean $z0;

        r0 := @this: org.springframework.core.type.StandardClassMetadata;

        $r1 = r0.<org.springframework.core.type.StandardClassMetadata: java.lang.Class introspectedClass>;

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isInterface()>();

        return $z0;
    }

    public boolean isAbstract()
    {
        int $i0;
        org.springframework.core.type.StandardClassMetadata r0;
        java.lang.Class $r1;
        boolean $z0;

        r0 := @this: org.springframework.core.type.StandardClassMetadata;

        $r1 = r0.<org.springframework.core.type.StandardClassMetadata: java.lang.Class introspectedClass>;

        $i0 = virtualinvoke $r1.<java.lang.Class: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isAbstract(int)>($i0);

        return $z0;
    }

    public boolean isConcrete()
    {
        org.springframework.core.type.StandardClassMetadata r0;
        boolean $z0, $z1, $z2;

        r0 := @this: org.springframework.core.type.StandardClassMetadata;

        $z0 = virtualinvoke r0.<org.springframework.core.type.StandardClassMetadata: boolean isInterface()>();

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<org.springframework.core.type.StandardClassMetadata: boolean isAbstract()>();

        if $z1 == 0 goto label2;

     label1:
        $z2 = 0;

        goto label3;

     label2:
        $z2 = 1;

     label3:
        return $z2;
    }

    public boolean isFinal()
    {
        int $i0;
        org.springframework.core.type.StandardClassMetadata r0;
        java.lang.Class $r1;
        boolean $z0;

        r0 := @this: org.springframework.core.type.StandardClassMetadata;

        $r1 = r0.<org.springframework.core.type.StandardClassMetadata: java.lang.Class introspectedClass>;

        $i0 = virtualinvoke $r1.<java.lang.Class: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isFinal(int)>($i0);

        return $z0;
    }

    public boolean isIndependent()
    {
        int $i0;
        org.springframework.core.type.StandardClassMetadata r0;
        java.lang.Class $r1, $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: org.springframework.core.type.StandardClassMetadata;

        $z0 = virtualinvoke r0.<org.springframework.core.type.StandardClassMetadata: boolean hasEnclosingClass()>();

        if $z0 == 0 goto label2;

        $r1 = r0.<org.springframework.core.type.StandardClassMetadata: java.lang.Class introspectedClass>;

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.Class getDeclaringClass()>();

        if $r2 == null goto label1;

        $r3 = r0.<org.springframework.core.type.StandardClassMetadata: java.lang.Class introspectedClass>;

        $i0 = virtualinvoke $r3.<java.lang.Class: int getModifiers()>();

        $z1 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>($i0);

        if $z1 != 0 goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    public boolean hasEnclosingClass()
    {
        org.springframework.core.type.StandardClassMetadata r0;
        java.lang.Class $r1, $r2;

        r0 := @this: org.springframework.core.type.StandardClassMetadata;

        $r1 = r0.<org.springframework.core.type.StandardClassMetadata: java.lang.Class introspectedClass>;

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.Class getEnclosingClass()>();

        if $r2 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.String getEnclosingClassName()
    {
        org.springframework.core.type.StandardClassMetadata r0;
        java.lang.Class $r1, $r2;
        java.lang.String $r3;

        r0 := @this: org.springframework.core.type.StandardClassMetadata;

        $r1 = r0.<org.springframework.core.type.StandardClassMetadata: java.lang.Class introspectedClass>;

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.Class getEnclosingClass()>();

        if $r2 == null goto label1;

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    public boolean hasSuperClass()
    {
        org.springframework.core.type.StandardClassMetadata r0;
        java.lang.Class $r1, $r2;

        r0 := @this: org.springframework.core.type.StandardClassMetadata;

        $r1 = r0.<org.springframework.core.type.StandardClassMetadata: java.lang.Class introspectedClass>;

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.Class getSuperclass()>();

        if $r2 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.String getSuperClassName()
    {
        org.springframework.core.type.StandardClassMetadata r0;
        java.lang.Class $r1, $r2;
        java.lang.String $r3;

        r0 := @this: org.springframework.core.type.StandardClassMetadata;

        $r1 = r0.<org.springframework.core.type.StandardClassMetadata: java.lang.Class introspectedClass>;

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.Class getSuperclass()>();

        if $r2 == null goto label1;

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    public java.lang.String[] getInterfaceNames()
    {
        org.springframework.core.type.StandardClassMetadata r0;
        java.lang.Class[] $r2;
        java.lang.String[] r3;
        int $i0, $i1, i2;
        java.lang.Class $r1, $r4;
        java.lang.String $r5;

        r0 := @this: org.springframework.core.type.StandardClassMetadata;

        $r1 = r0.<org.springframework.core.type.StandardClassMetadata: java.lang.Class introspectedClass>;

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.Class[] getInterfaces()>();

        $i0 = lengthof $r2;

        r3 = newarray (java.lang.String)[$i0];

        i2 = 0;

        goto label2;

     label1:
        $r4 = $r2[i2];

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        r3[i2] = $r5;

        i2 = i2 + 1;

     label2:
        $i1 = lengthof $r2;

        if i2 < $i1 goto label1;

        return r3;
    }
}
