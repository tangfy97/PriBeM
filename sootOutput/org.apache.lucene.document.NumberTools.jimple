public class org.apache.lucene.document.NumberTools extends java.lang.Object
{
    private static final int RADIX;
    private static final char NEGATIVE_PREFIX;
    private static final char POSITIVE_PREFIX;
    public static final java.lang.String MIN_STRING_VALUE;
    public static final java.lang.String MAX_STRING_VALUE;
    public static final int STR_SIZE;

    public void <init>()
    {
        org.apache.lucene.document.NumberTools r0;

        r0 := @this: org.apache.lucene.document.NumberTools;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String longToString(long)
    {
        long $l7, l8;
        byte $b0, $b2;
        int $i1, $i3, $i4, $i5, $i6, i9, $i10, $i11, $i13;
        java.lang.String $r1, $r2;
        java.lang.StringBuilder $r3;

        l8 := @parameter0: long;

        $b0 = l8 cmp -9223372036854775808L;

        if $b0 != 0 goto label1;

        return "-0000000000000";

     label1:
        $r3 = new java.lang.StringBuilder;

        $i1 = <org.apache.lucene.document.NumberTools: int STR_SIZE>;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>($i1);

        $b2 = l8 cmp 0L;

        $i11 = (int) $b2;

        if $i11 >= 0 goto label2;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);

        $l7 = 9223372036854775807L + l8;

        l8 = $l7 + 1L;

        goto label3;

     label2:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48);

     label3:
        $r1 = staticinvoke <java.lang.Long: java.lang.String toString(long,int)>(l8, 36);

        $i3 = <org.apache.lucene.document.NumberTools: int STR_SIZE>;

        $i4 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i5 = $i3 - $i4;

        $i6 = virtualinvoke $r3.<java.lang.StringBuilder: int length()>();

        i9 = $i5 - $i6;

     label4:
        $i10 = i9;

        $i13 = (int) -1;

        i9 = i9 + $i13;

        if $i10 <= 0 goto label5;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48);

        goto label4;

     label5:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static long stringToLong(java.lang.String)
    {
        char $c2;
        long $l3, $l4, l5;
        java.lang.NumberFormatException $r6, $r7;
        java.lang.NullPointerException $r5;
        int $i0, $i1, $i6, $i7;
        java.lang.String r0, $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("string cannot be null");

        throw $r5;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $i1 = <org.apache.lucene.document.NumberTools: int STR_SIZE>;

        if $i0 == $i1 goto label2;

        $r6 = new java.lang.NumberFormatException;

        specialinvoke $r6.<java.lang.NumberFormatException: void <init>(java.lang.String)>("string is the wrong size");

        throw $r6;

     label2:
        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("-0000000000000");

        if $z0 == 0 goto label3;

        return -9223372036854775808L;

     label3:
        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(1);

        $l3 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>($r1, 36);

        l5 = $l3;

        $i6 = (int) $c2;

        if $i6 != 48 goto label4;

        goto label6;

     label4:
        $i7 = (int) $c2;

        if $i7 != 45 goto label5;

        $l4 = $l3 - 9223372036854775807L;

        l5 = $l4 - 1L;

        goto label6;

     label5:
        $r7 = new java.lang.NumberFormatException;

        specialinvoke $r7.<java.lang.NumberFormatException: void <init>(java.lang.String)>("string does not begin with the correct prefix");

        throw $r7;

     label6:
        return l5;
    }

    static void <clinit>()
    {
        int $i0;
        java.lang.String $r0;

        <org.apache.lucene.document.NumberTools: java.lang.String MAX_STRING_VALUE> = "01y2p0ij32e8e7";

        <org.apache.lucene.document.NumberTools: java.lang.String MIN_STRING_VALUE> = "-0000000000000";

        <org.apache.lucene.document.NumberTools: char POSITIVE_PREFIX> = 48;

        <org.apache.lucene.document.NumberTools: char NEGATIVE_PREFIX> = 45;

        <org.apache.lucene.document.NumberTools: int RADIX> = 36;

        $r0 = "-0000000000000";

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        <org.apache.lucene.document.NumberTools: int STR_SIZE> = $i0;

        return;
    }
}
