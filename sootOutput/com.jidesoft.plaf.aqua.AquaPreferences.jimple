class com.jidesoft.plaf.aqua.AquaPreferences extends java.lang.Object
{
    private static final java.util.logging.Logger LOGGER;
    private static java.util.HashMap prefs;

    public void <init>()
    {
        com.jidesoft.plaf.aqua.AquaPreferences r0;

        r0 := @this: com.jidesoft.plaf.aqua.AquaPreferences;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String getString(java.lang.String)
    {
        java.lang.Object $r1;
        java.lang.String r0, $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.jidesoft.plaf.aqua.AquaPreferences: java.lang.Object get(java.lang.String)>(r0);

        $r2 = (java.lang.String) $r1;

        return $r2;
    }

    public static java.lang.Object get(java.lang.String)
    {
        java.util.HashMap $r0, $r2, $r4;
        java.lang.Object $r3;
        java.lang.String r1;

        r1 := @parameter0: java.lang.String;

        $r0 = <com.jidesoft.plaf.aqua.AquaPreferences: java.util.HashMap prefs>;

        if $r0 != null goto label1;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        <com.jidesoft.plaf.aqua.AquaPreferences: java.util.HashMap prefs> = $r4;

        staticinvoke <com.jidesoft.plaf.aqua.AquaPreferences: void loadGlobalPreferences()>();

     label1:
        $r2 = <com.jidesoft.plaf.aqua.AquaPreferences: java.util.HashMap prefs>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        return $r3;
    }

    private static void loadGlobalPreferences()
    {
        boolean $z0, $z1, $z2;
        com.jidesoft.plaf.aqua.XMLElement $r11, r14, r17;
        java.util.logging.Logger $r23, $r30;
        java.lang.Exception $r21;
        java.lang.StringBuilder $r6, $r8, $r9, $r22, $r24, $r26, $r29, $r31, $r33;
        java.util.HashMap $r0, $r1, $r2, $r3, $r4, $r19;
        java.lang.String $r7, $r10, $r18, $r20, $r25, $r27, $r32, $r34, r35;
        java.util.Iterator $r12, $r15;
        java.io.IOException $r28;
        java.io.File $r5;
        java.lang.Object $r13, $r16;

        $r0 = <com.jidesoft.plaf.aqua.AquaPreferences: java.util.HashMap prefs>;

        virtualinvoke $r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("AppleAquaColorVariant", "1");

        $r1 = <com.jidesoft.plaf.aqua.AquaPreferences: java.util.HashMap prefs>;

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("AppleHighlightColor", "0.709800 0.835300 1.000000");

        $r2 = <com.jidesoft.plaf.aqua.AquaPreferences: java.util.HashMap prefs>;

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("AppleCollationOrder", "en");

        $r3 = <com.jidesoft.plaf.aqua.AquaPreferences: java.util.HashMap prefs>;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("AppleScrollBarVariant", "DoubleMax");

        $r4 = <com.jidesoft.plaf.aqua.AquaPreferences: java.util.HashMap prefs>;

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("AppleScrollerPagingBehavior", "false");

        $r5 = new java.io.File;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = staticinvoke <com.jidesoft.utils.SecurityUtils: java.lang.String getProperty(java.lang.String,java.lang.String)>("user.home", "");

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/Library/Preferences/.GlobalPreferences.plist");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.io.File: void <init>(java.lang.String)>($r10);

     label01:
        $r11 = staticinvoke <com.jidesoft.plaf.aqua.AquaPreferences: com.jidesoft.plaf.aqua.XMLElement readPList(java.io.File)>($r5);

        $r12 = virtualinvoke $r11.<com.jidesoft.plaf.aqua.XMLElement: java.util.Iterator iterateChildren()>();

     label02:
        $z0 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label08;

        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r14 = (com.jidesoft.plaf.aqua.XMLElement) $r13;

        r35 = null;

        $r15 = virtualinvoke r14.<com.jidesoft.plaf.aqua.XMLElement: java.util.Iterator iterateChildren()>();

     label03:
        $z1 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label07;

        $r16 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        r17 = (com.jidesoft.plaf.aqua.XMLElement) $r16;

        $r18 = virtualinvoke r17.<com.jidesoft.plaf.aqua.XMLElement: java.lang.String getName()>();

        $z2 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>("key");

        if $z2 == 0 goto label04;

        r35 = virtualinvoke r17.<com.jidesoft.plaf.aqua.XMLElement: java.lang.String getContent()>();

        goto label06;

     label04:
        if r35 == null goto label05;

        $r19 = <com.jidesoft.plaf.aqua.AquaPreferences: java.util.HashMap prefs>;

        $r20 = virtualinvoke r17.<com.jidesoft.plaf.aqua.XMLElement: java.lang.String getContent()>();

        virtualinvoke $r19.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r35, $r20);

     label05:
        r35 = null;

     label06:
        goto label03;

     label07:
        goto label02;

     label08:
        goto label11;

     label09:
        $r28 := @caughtexception;

        $r30 = <com.jidesoft.plaf.aqua.AquaPreferences: java.util.logging.Logger LOGGER>;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AquaPreferences failed to load Mac OS X global system preferences - ");

        $r32 = virtualinvoke $r28.<java.io.IOException: java.lang.String getLocalizedMessage()>();

        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r30.<java.util.logging.Logger: void warning(java.lang.String)>($r34);

        goto label11;

     label10:
        $r21 := @caughtexception;

        $r23 = <com.jidesoft.plaf.aqua.AquaPreferences: java.util.logging.Logger LOGGER>;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AquaPreferences failed to load Mac OS X global system preferences - ");

        $r25 = virtualinvoke $r21.<java.lang.Exception: java.lang.String getLocalizedMessage()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r23.<java.util.logging.Logger: void warning(java.lang.String)>($r27);

     label11:
        return;

        catch java.io.IOException from label01 to label08 with label09;
        catch java.lang.Exception from label01 to label08 with label10;
    }

    private static com.jidesoft.plaf.aqua.XMLElement readPList(java.io.File) throws java.io.IOException
    {
        java.lang.Throwable $r4;
        com.jidesoft.plaf.aqua.XMLElement $r2, r8;
        com.jidesoft.plaf.aqua.XMLParseException $r5;
        java.util.HashMap $r3;
        java.io.File r1;
        com.jidesoft.plaf.aqua.BinaryPListParser $r6;
        java.io.FileReader $r0, r7;

        r1 := @parameter0: java.io.File;

        r7 = null;

     label1:
        $r0 = new java.io.FileReader;

        specialinvoke $r0.<java.io.FileReader: void <init>(java.io.File)>(r1);

        r7 = $r0;

        $r2 = new com.jidesoft.plaf.aqua.XMLElement;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        specialinvoke $r2.<com.jidesoft.plaf.aqua.XMLElement: void <init>(java.util.HashMap,boolean,boolean)>($r3, 0, 0);

        r8 = $r2;

     label2:
        virtualinvoke $r2.<com.jidesoft.plaf.aqua.XMLElement: void parseFromReader(java.io.Reader)>($r0);

     label3:
        goto label5;

     label4:
        $r5 := @caughtexception;

        $r6 = new com.jidesoft.plaf.aqua.BinaryPListParser;

        specialinvoke $r6.<com.jidesoft.plaf.aqua.BinaryPListParser: void <init>()>();

        r8 = virtualinvoke $r6.<com.jidesoft.plaf.aqua.BinaryPListParser: com.jidesoft.plaf.aqua.XMLElement parse(java.io.File)>(r1);

     label5:
        if $r0 == null goto label9;

        virtualinvoke $r0.<java.io.FileReader: void close()>();

        goto label9;

     label6:
        $r4 := @caughtexception;

     label7:
        if r7 == null goto label8;

        virtualinvoke r7.<java.io.FileReader: void close()>();

     label8:
        throw $r4;

     label9:
        return r8;

        catch com.jidesoft.plaf.aqua.XMLParseException from label2 to label3 with label4;
        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;

        $r0 = class "Lcom/jidesoft/plaf/aqua/AquaPreferences;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <com.jidesoft.plaf.aqua.AquaPreferences: java.util.logging.Logger LOGGER> = $r2;

        return;
    }
}
