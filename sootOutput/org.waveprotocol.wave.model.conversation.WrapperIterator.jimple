public class org.waveprotocol.wave.model.conversation.WrapperIterator extends java.lang.Object implements java.util.Iterator
{
    private final java.util.Iterator manifestIterator;
    private final org.waveprotocol.wave.model.util.StringMap wrapperMap;
    private java.lang.Object next;

    private void <init>(java.util.Iterator, org.waveprotocol.wave.model.util.StringMap)
    {
        org.waveprotocol.wave.model.util.StringMap r2;
        java.util.Iterator r1;
        org.waveprotocol.wave.model.conversation.WrapperIterator r0;

        r0 := @this: org.waveprotocol.wave.model.conversation.WrapperIterator;

        r1 := @parameter0: java.util.Iterator;

        r2 := @parameter1: org.waveprotocol.wave.model.util.StringMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.model.conversation.WrapperIterator: java.util.Iterator manifestIterator> = r1;

        r0.<org.waveprotocol.wave.model.conversation.WrapperIterator: org.waveprotocol.wave.model.util.StringMap wrapperMap> = r2;

        specialinvoke r0.<org.waveprotocol.wave.model.conversation.WrapperIterator: void advance()>();

        return;
    }

    public static org.waveprotocol.wave.model.conversation.WrapperIterator create(java.util.Iterator, org.waveprotocol.wave.model.util.StringMap)
    {
        org.waveprotocol.wave.model.util.StringMap r2;
        java.util.Iterator r1;
        org.waveprotocol.wave.model.conversation.WrapperIterator $r0;

        r1 := @parameter0: java.util.Iterator;

        r2 := @parameter1: org.waveprotocol.wave.model.util.StringMap;

        $r0 = new org.waveprotocol.wave.model.conversation.WrapperIterator;

        specialinvoke $r0.<org.waveprotocol.wave.model.conversation.WrapperIterator: void <init>(java.util.Iterator,org.waveprotocol.wave.model.util.StringMap)>(r1, r2);

        return $r0;
    }

    private void advance()
    {
        java.util.Iterator $r1, $r2;
        org.waveprotocol.wave.model.conversation.HasId r4;
        org.waveprotocol.wave.model.util.StringMap $r5;
        java.lang.Object $r3, $r7;
        java.lang.String $r6;
        org.waveprotocol.wave.model.conversation.WrapperIterator r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.conversation.WrapperIterator;

     label1:
        $r1 = r0.<org.waveprotocol.wave.model.conversation.WrapperIterator: java.util.Iterator manifestIterator>;

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = r0.<org.waveprotocol.wave.model.conversation.WrapperIterator: java.util.Iterator manifestIterator>;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.waveprotocol.wave.model.conversation.HasId) $r3;

        $r5 = r0.<org.waveprotocol.wave.model.conversation.WrapperIterator: org.waveprotocol.wave.model.util.StringMap wrapperMap>;

        $r6 = interfaceinvoke r4.<org.waveprotocol.wave.model.conversation.HasId: java.lang.String getId()>();

        $r7 = interfaceinvoke $r5.<org.waveprotocol.wave.model.util.StringMap: java.lang.Object get(java.lang.String)>($r6);

        if $r7 == null goto label2;

        r0.<org.waveprotocol.wave.model.conversation.WrapperIterator: java.lang.Object next> = $r7;

        return;

     label2:
        goto label1;

     label3:
        r0.<org.waveprotocol.wave.model.conversation.WrapperIterator: java.lang.Object next> = null;

        return;
    }

    public boolean hasNext()
    {
        java.lang.Object $r1;
        org.waveprotocol.wave.model.conversation.WrapperIterator r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.conversation.WrapperIterator;

        $r1 = r0.<org.waveprotocol.wave.model.conversation.WrapperIterator: java.lang.Object next>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.Object next()
    {
        java.lang.Object r1;
        org.waveprotocol.wave.model.conversation.WrapperIterator r0;

        r0 := @this: org.waveprotocol.wave.model.conversation.WrapperIterator;

        r1 = r0.<org.waveprotocol.wave.model.conversation.WrapperIterator: java.lang.Object next>;

        specialinvoke r0.<org.waveprotocol.wave.model.conversation.WrapperIterator: void advance()>();

        return r1;
    }

    public void remove()
    {
        java.lang.UnsupportedOperationException $r0;
        org.waveprotocol.wave.model.conversation.WrapperIterator r1;

        r1 := @this: org.waveprotocol.wave.model.conversation.WrapperIterator;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }
}
