public class org.aspectj.internal.lang.reflect.PointcutImpl extends java.lang.Object implements org.aspectj.lang.reflect.Pointcut
{
    private final java.lang.String name;
    private final org.aspectj.lang.reflect.PointcutExpression pc;
    private final java.lang.reflect.Method baseMethod;
    private final org.aspectj.lang.reflect.AjType declaringType;
    private java.lang.String[] parameterNames;

    protected void <init>(java.lang.String, java.lang.String, java.lang.reflect.Method, org.aspectj.lang.reflect.AjType, java.lang.String)
    {
        org.aspectj.lang.reflect.AjType r6;
        org.aspectj.internal.lang.reflect.PointcutExpressionImpl $r3;
        java.lang.String[] $r1, $r8;
        org.aspectj.internal.lang.reflect.PointcutImpl r0;
        java.lang.String r2, r4, r7;
        java.lang.reflect.Method r5;

        r0 := @this: org.aspectj.internal.lang.reflect.PointcutImpl;

        r2 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.reflect.Method;

        r6 := @parameter3: org.aspectj.lang.reflect.AjType;

        r7 := @parameter4: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (java.lang.String)[0];

        r0.<org.aspectj.internal.lang.reflect.PointcutImpl: java.lang.String[] parameterNames> = $r1;

        r0.<org.aspectj.internal.lang.reflect.PointcutImpl: java.lang.String name> = r2;

        $r3 = new org.aspectj.internal.lang.reflect.PointcutExpressionImpl;

        specialinvoke $r3.<org.aspectj.internal.lang.reflect.PointcutExpressionImpl: void <init>(java.lang.String)>(r4);

        r0.<org.aspectj.internal.lang.reflect.PointcutImpl: org.aspectj.lang.reflect.PointcutExpression pc> = $r3;

        r0.<org.aspectj.internal.lang.reflect.PointcutImpl: java.lang.reflect.Method baseMethod> = r5;

        r0.<org.aspectj.internal.lang.reflect.PointcutImpl: org.aspectj.lang.reflect.AjType declaringType> = r6;

        $r8 = specialinvoke r0.<org.aspectj.internal.lang.reflect.PointcutImpl: java.lang.String[] splitOnComma(java.lang.String)>(r7);

        r0.<org.aspectj.internal.lang.reflect.PointcutImpl: java.lang.String[] parameterNames> = $r8;

        return;
    }

    public org.aspectj.lang.reflect.PointcutExpression getPointcutExpression()
    {
        org.aspectj.internal.lang.reflect.PointcutImpl r0;
        org.aspectj.lang.reflect.PointcutExpression $r1;

        r0 := @this: org.aspectj.internal.lang.reflect.PointcutImpl;

        $r1 = r0.<org.aspectj.internal.lang.reflect.PointcutImpl: org.aspectj.lang.reflect.PointcutExpression pc>;

        return $r1;
    }

    public java.lang.String getName()
    {
        java.lang.String $r1;
        org.aspectj.internal.lang.reflect.PointcutImpl r0;

        r0 := @this: org.aspectj.internal.lang.reflect.PointcutImpl;

        $r1 = r0.<org.aspectj.internal.lang.reflect.PointcutImpl: java.lang.String name>;

        return $r1;
    }

    public int getModifiers()
    {
        int $i0;
        java.lang.reflect.Method $r1;
        org.aspectj.internal.lang.reflect.PointcutImpl r0;

        r0 := @this: org.aspectj.internal.lang.reflect.PointcutImpl;

        $r1 = r0.<org.aspectj.internal.lang.reflect.PointcutImpl: java.lang.reflect.Method baseMethod>;

        $i0 = virtualinvoke $r1.<java.lang.reflect.Method: int getModifiers()>();

        return $i0;
    }

    public org.aspectj.lang.reflect.AjType[] getParameterTypes()
    {
        org.aspectj.lang.reflect.AjType $r5;
        java.lang.Class[] $r2;
        org.aspectj.internal.lang.reflect.PointcutImpl r0;
        org.aspectj.lang.reflect.AjType[] r3;
        int $i0, $i1, i2;
        java.lang.Class $r4;
        java.lang.reflect.Method $r1;

        r0 := @this: org.aspectj.internal.lang.reflect.PointcutImpl;

        $r1 = r0.<org.aspectj.internal.lang.reflect.PointcutImpl: java.lang.reflect.Method baseMethod>;

        $r2 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $i0 = lengthof $r2;

        r3 = newarray (org.aspectj.lang.reflect.AjType)[$i0];

        i2 = 0;

     label1:
        $i1 = lengthof r3;

        if i2 >= $i1 goto label2;

        $r4 = $r2[i2];

        $r5 = staticinvoke <org.aspectj.lang.reflect.AjTypeSystem: org.aspectj.lang.reflect.AjType getAjType(java.lang.Class)>($r4);

        r3[i2] = $r5;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r3;
    }

    public org.aspectj.lang.reflect.AjType getDeclaringType()
    {
        org.aspectj.lang.reflect.AjType $r1;
        org.aspectj.internal.lang.reflect.PointcutImpl r0;

        r0 := @this: org.aspectj.internal.lang.reflect.PointcutImpl;

        $r1 = r0.<org.aspectj.internal.lang.reflect.PointcutImpl: org.aspectj.lang.reflect.AjType declaringType>;

        return $r1;
    }

    public java.lang.String[] getParameterNames()
    {
        java.lang.String[] $r1;
        org.aspectj.internal.lang.reflect.PointcutImpl r0;

        r0 := @this: org.aspectj.internal.lang.reflect.PointcutImpl;

        $r1 = r0.<org.aspectj.internal.lang.reflect.PointcutImpl: java.lang.String[] parameterNames>;

        return $r1;
    }

    private java.lang.String[] splitOnComma(java.lang.String)
    {
        java.lang.String[] r2;
        org.aspectj.internal.lang.reflect.PointcutImpl r5;
        java.util.StringTokenizer $r0;
        int $i0, $i1, i2;
        java.lang.String r1, $r3, $r4;

        r5 := @this: org.aspectj.internal.lang.reflect.PointcutImpl;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.util.StringTokenizer;

        specialinvoke $r0.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r1, ",");

        $i0 = virtualinvoke $r0.<java.util.StringTokenizer: int countTokens()>();

        r2 = newarray (java.lang.String)[$i0];

        i2 = 0;

     label1:
        $i1 = lengthof r2;

        if i2 >= $i1 goto label2;

        $r3 = virtualinvoke $r0.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        r2[i2] = $r4;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r2;
    }

    public java.lang.String toString()
    {
        org.aspectj.lang.reflect.AjType $r7;
        java.lang.String[] $r9, $r10, $r12;
        org.aspectj.internal.lang.reflect.PointcutImpl r1;
        java.lang.StringBuffer $r0;
        int $i0, i1, $i2, $i3;
        java.lang.String $r2, $r5, $r6, $r8, $r11, $r13;
        org.aspectj.lang.reflect.PointcutExpression $r4;
        org.aspectj.lang.reflect.AjType[] $r3;

        r1 := @this: org.aspectj.internal.lang.reflect.PointcutImpl;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke r1.<org.aspectj.internal.lang.reflect.PointcutImpl: java.lang.String getName()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        $r3 = virtualinvoke r1.<org.aspectj.internal.lang.reflect.PointcutImpl: org.aspectj.lang.reflect.AjType[] getParameterTypes()>();

        i1 = 0;

     label1:
        $i0 = lengthof $r3;

        if i1 >= $i0 goto label4;

        $r7 = $r3[i1];

        $r8 = interfaceinvoke $r7.<org.aspectj.lang.reflect.AjType: java.lang.String getName()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r9 = r1.<org.aspectj.internal.lang.reflect.PointcutImpl: java.lang.String[] parameterNames>;

        if $r9 == null goto label2;

        $r10 = r1.<org.aspectj.internal.lang.reflect.PointcutImpl: java.lang.String[] parameterNames>;

        $r11 = $r10[i1];

        if $r11 == null goto label2;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r12 = r1.<org.aspectj.internal.lang.reflect.PointcutImpl: java.lang.String[] parameterNames>;

        $r13 = $r12[i1];

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

     label2:
        $i2 = i1 + 1;

        $i3 = lengthof $r3;

        if $i2 >= $i3 goto label3;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") : ");

        $r4 = virtualinvoke r1.<org.aspectj.internal.lang.reflect.PointcutImpl: org.aspectj.lang.reflect.PointcutExpression getPointcutExpression()>();

        $r5 = interfaceinvoke $r4.<org.aspectj.lang.reflect.PointcutExpression: java.lang.String asString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r6 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r6;
    }
}
