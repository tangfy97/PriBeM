public class org.springframework.core.io.DefaultResourceLoader extends java.lang.Object implements org.springframework.core.io.ResourceLoader
{
    private java.lang.ClassLoader classLoader;

    public void <init>()
    {
        java.lang.ClassLoader $r1;
        org.springframework.core.io.DefaultResourceLoader r0;

        r0 := @this: org.springframework.core.io.DefaultResourceLoader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <org.springframework.util.ClassUtils: java.lang.ClassLoader getDefaultClassLoader()>();

        r0.<org.springframework.core.io.DefaultResourceLoader: java.lang.ClassLoader classLoader> = $r1;

        return;
    }

    public void <init>(java.lang.ClassLoader)
    {
        java.lang.ClassLoader r1;
        org.springframework.core.io.DefaultResourceLoader r0;

        r0 := @this: org.springframework.core.io.DefaultResourceLoader;

        r1 := @parameter0: java.lang.ClassLoader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.springframework.core.io.DefaultResourceLoader: java.lang.ClassLoader classLoader> = r1;

        return;
    }

    public void setClassLoader(java.lang.ClassLoader)
    {
        java.lang.ClassLoader r1;
        org.springframework.core.io.DefaultResourceLoader r0;

        r0 := @this: org.springframework.core.io.DefaultResourceLoader;

        r1 := @parameter0: java.lang.ClassLoader;

        r0.<org.springframework.core.io.DefaultResourceLoader: java.lang.ClassLoader classLoader> = r1;

        return;
    }

    public java.lang.ClassLoader getClassLoader()
    {
        java.lang.ClassLoader $r1, $r2;
        org.springframework.core.io.DefaultResourceLoader r0;

        r0 := @this: org.springframework.core.io.DefaultResourceLoader;

        $r1 = r0.<org.springframework.core.io.DefaultResourceLoader: java.lang.ClassLoader classLoader>;

        if $r1 == null goto label1;

        $r2 = r0.<org.springframework.core.io.DefaultResourceLoader: java.lang.ClassLoader classLoader>;

        goto label2;

     label1:
        $r2 = staticinvoke <org.springframework.util.ClassUtils: java.lang.ClassLoader getDefaultClassLoader()>();

     label2:
        return $r2;
    }

    public org.springframework.core.io.Resource getResource(java.lang.String)
    {
        org.springframework.core.io.UrlResource $r2;
        java.net.MalformedURLException $r8;
        java.net.URL $r1;
        org.springframework.core.io.ClassPathResource $r3;
        org.springframework.core.io.DefaultResourceLoader r6;
        int $i0;
        java.lang.String r0, $r4, $r5;
        java.lang.ClassLoader $r7;
        boolean $z0;
        org.springframework.core.io.Resource $r9;

        r6 := @this: org.springframework.core.io.DefaultResourceLoader;

        r0 := @parameter0: java.lang.String;

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r0, "Location must not be null");

        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("classpath:");

        if $z0 == 0 goto label1;

        $r3 = new org.springframework.core.io.ClassPathResource;

        $r4 = "classpath:";

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        $r5 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i0);

        $r7 = virtualinvoke r6.<org.springframework.core.io.DefaultResourceLoader: java.lang.ClassLoader getClassLoader()>();

        specialinvoke $r3.<org.springframework.core.io.ClassPathResource: void <init>(java.lang.String,java.lang.ClassLoader)>($r5, $r7);

        return $r3;

     label1:
        $r1 = new java.net.URL;

        specialinvoke $r1.<java.net.URL: void <init>(java.lang.String)>(r0);

        $r2 = new org.springframework.core.io.UrlResource;

        specialinvoke $r2.<org.springframework.core.io.UrlResource: void <init>(java.net.URL)>($r1);

     label2:
        return $r2;

     label3:
        $r8 := @caughtexception;

        $r9 = virtualinvoke r6.<org.springframework.core.io.DefaultResourceLoader: org.springframework.core.io.Resource getResourceByPath(java.lang.String)>(r0);

        return $r9;

        catch java.net.MalformedURLException from label1 to label2 with label3;
    }

    protected org.springframework.core.io.Resource getResourceByPath(java.lang.String)
    {
        org.springframework.core.io.DefaultResourceLoader r2;
        org.springframework.core.io.DefaultResourceLoader$ClassPathContextResource $r0;
        java.lang.String r1;
        java.lang.ClassLoader $r3;

        r2 := @this: org.springframework.core.io.DefaultResourceLoader;

        r1 := @parameter0: java.lang.String;

        $r0 = new org.springframework.core.io.DefaultResourceLoader$ClassPathContextResource;

        $r3 = virtualinvoke r2.<org.springframework.core.io.DefaultResourceLoader: java.lang.ClassLoader getClassLoader()>();

        specialinvoke $r0.<org.springframework.core.io.DefaultResourceLoader$ClassPathContextResource: void <init>(java.lang.String,java.lang.ClassLoader)>(r1, $r3);

        return $r0;
    }
}
