final class org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$ReplaceAttributesResolver extends java.lang.Object implements org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$RangeResolver
{
    private final org.waveprotocol.wave.model.document.operation.Attributes oldAttributes;
    private final org.waveprotocol.wave.model.document.operation.Attributes newAttributes;

    void <init>(org.waveprotocol.wave.model.document.operation.Attributes, org.waveprotocol.wave.model.document.operation.Attributes)
    {
        org.waveprotocol.wave.model.document.operation.Attributes r1, r2;
        org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$ReplaceAttributesResolver r0;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$ReplaceAttributesResolver;

        r1 := @parameter0: org.waveprotocol.wave.model.document.operation.Attributes;

        r2 := @parameter1: org.waveprotocol.wave.model.document.operation.Attributes;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$ReplaceAttributesResolver: org.waveprotocol.wave.model.document.operation.Attributes oldAttributes> = r1;

        r0.<org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$ReplaceAttributesResolver: org.waveprotocol.wave.model.document.operation.Attributes newAttributes> = r2;

        return;
    }

    public void resolve(int, org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$RangeCache)
    {
        org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$ReplaceAttributesResolver r1;
        int i0;
        org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$RangeCache r0;
        org.waveprotocol.wave.model.document.operation.Attributes $r2, $r3;

        r1 := @this: org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$ReplaceAttributesResolver;

        i0 := @parameter0: int;

        r0 := @parameter1: org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$RangeCache;

        $r3 = r1.<org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$ReplaceAttributesResolver: org.waveprotocol.wave.model.document.operation.Attributes oldAttributes>;

        $r2 = r1.<org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$ReplaceAttributesResolver: org.waveprotocol.wave.model.document.operation.Attributes newAttributes>;

        virtualinvoke r0.<org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$RangeCache: void resolveReplaceAttributes(org.waveprotocol.wave.model.document.operation.Attributes,org.waveprotocol.wave.model.document.operation.Attributes)>($r3, $r2);

        return;
    }
}
