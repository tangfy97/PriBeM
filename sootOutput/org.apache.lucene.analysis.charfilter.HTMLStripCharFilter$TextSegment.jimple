class org.apache.lucene.analysis.charfilter.HTMLStripCharFilter$TextSegment extends org.apache.lucene.analysis.util.OpenStringBuilder
{
    int pos;
    static final boolean $assertionsDisabled;
    final org.apache.lucene.analysis.charfilter.HTMLStripCharFilter this$0;

    void <init>(org.apache.lucene.analysis.charfilter.HTMLStripCharFilter, char[], int)
    {
        int i0;
        org.apache.lucene.analysis.charfilter.HTMLStripCharFilter$TextSegment r0;
        org.apache.lucene.analysis.charfilter.HTMLStripCharFilter r1;
        char[] r2;

        r0 := @this: org.apache.lucene.analysis.charfilter.HTMLStripCharFilter$TextSegment;

        r1 := @parameter0: org.apache.lucene.analysis.charfilter.HTMLStripCharFilter;

        r2 := @parameter1: char[];

        i0 := @parameter2: int;

        r0.<org.apache.lucene.analysis.charfilter.HTMLStripCharFilter$TextSegment: org.apache.lucene.analysis.charfilter.HTMLStripCharFilter this$0> = r1;

        specialinvoke r0.<org.apache.lucene.analysis.util.OpenStringBuilder: void <init>(char[],int)>(r2, i0);

        r0.<org.apache.lucene.analysis.charfilter.HTMLStripCharFilter$TextSegment: int pos> = 0;

        return;
    }

    void <init>(org.apache.lucene.analysis.charfilter.HTMLStripCharFilter, int)
    {
        int i0;
        org.apache.lucene.analysis.charfilter.HTMLStripCharFilter$TextSegment r0;
        org.apache.lucene.analysis.charfilter.HTMLStripCharFilter r1;

        r0 := @this: org.apache.lucene.analysis.charfilter.HTMLStripCharFilter$TextSegment;

        r1 := @parameter0: org.apache.lucene.analysis.charfilter.HTMLStripCharFilter;

        i0 := @parameter1: int;

        r0.<org.apache.lucene.analysis.charfilter.HTMLStripCharFilter$TextSegment: org.apache.lucene.analysis.charfilter.HTMLStripCharFilter this$0> = r1;

        specialinvoke r0.<org.apache.lucene.analysis.util.OpenStringBuilder: void <init>(int)>(i0);

        r0.<org.apache.lucene.analysis.charfilter.HTMLStripCharFilter$TextSegment: int pos> = 0;

        return;
    }

    void clear()
    {
        org.apache.lucene.analysis.charfilter.HTMLStripCharFilter$TextSegment r0;

        r0 := @this: org.apache.lucene.analysis.charfilter.HTMLStripCharFilter$TextSegment;

        virtualinvoke r0.<org.apache.lucene.analysis.charfilter.HTMLStripCharFilter$TextSegment: void reset()>();

        virtualinvoke r0.<org.apache.lucene.analysis.charfilter.HTMLStripCharFilter$TextSegment: void restart()>();

        return;
    }

    void restart()
    {
        org.apache.lucene.analysis.charfilter.HTMLStripCharFilter$TextSegment r0;

        r0 := @this: org.apache.lucene.analysis.charfilter.HTMLStripCharFilter$TextSegment;

        r0.<org.apache.lucene.analysis.charfilter.HTMLStripCharFilter$TextSegment: int pos> = 0;

        return;
    }

    int nextChar()
    {
        char $c2;
        java.lang.AssertionError $r3;
        int $i0, $i1, $i3;
        org.apache.lucene.analysis.charfilter.HTMLStripCharFilter$TextSegment r0;
        char[] $r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.analysis.charfilter.HTMLStripCharFilter$TextSegment;

        $z0 = <org.apache.lucene.analysis.charfilter.HTMLStripCharFilter$TextSegment: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<org.apache.lucene.analysis.charfilter.HTMLStripCharFilter$TextSegment: boolean isRead()>();

        if $z1 == 0 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>(java.lang.Object)>("Attempting to read past the end of a segment.");

        throw $r3;

     label1:
        $r1 = r0.<org.apache.lucene.analysis.charfilter.HTMLStripCharFilter$TextSegment: char[] buf>;

        $i0 = r0.<org.apache.lucene.analysis.charfilter.HTMLStripCharFilter$TextSegment: int pos>;

        $i1 = $i0 + 1;

        r0.<org.apache.lucene.analysis.charfilter.HTMLStripCharFilter$TextSegment: int pos> = $i1;

        $c2 = $r1[$i0];

        $i3 = (int) $c2;

        return $i3;
    }

    boolean isRead()
    {
        int $i0, $i1;
        org.apache.lucene.analysis.charfilter.HTMLStripCharFilter$TextSegment r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.analysis.charfilter.HTMLStripCharFilter$TextSegment;

        $i1 = r0.<org.apache.lucene.analysis.charfilter.HTMLStripCharFilter$TextSegment: int pos>;

        $i0 = r0.<org.apache.lucene.analysis.charfilter.HTMLStripCharFilter$TextSegment: int len>;

        if $i1 < $i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/analysis/charfilter/HTMLStripCharFilter;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.analysis.charfilter.HTMLStripCharFilter$TextSegment: boolean $assertionsDisabled> = $z1;

        return;
    }
}
