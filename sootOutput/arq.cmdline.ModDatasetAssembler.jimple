public class arq.cmdline.ModDatasetAssembler extends arq.cmdline.ModDataset
{
    private arq.cmdline.ModAssembler modAssembler;

    public void <init>()
    {
        arq.cmdline.ModDatasetAssembler r0;
        arq.cmdline.ModAssembler $r1;

        r0 := @this: arq.cmdline.ModDatasetAssembler;

        specialinvoke r0.<arq.cmdline.ModDataset: void <init>()>();

        $r1 = new arq.cmdline.ModAssembler;

        specialinvoke $r1.<arq.cmdline.ModAssembler: void <init>()>();

        r0.<arq.cmdline.ModDatasetAssembler: arq.cmdline.ModAssembler modAssembler> = $r1;

        return;
    }

    public com.hp.hpl.jena.query.Dataset createDataset()
    {
        arq.cmdline.ModDatasetAssembler r0;
        com.hp.hpl.jena.shared.JenaException $r18;
        arq.cmdline.ModAssembler $r1, $r4, $r12;
        java.lang.String $r2, $r13, $r15, $r23, $r25;
        com.hp.hpl.jena.sparql.ARQException $r26;
        com.hp.hpl.jena.rdf.model.Resource $r3;
        java.lang.Exception $r16;
        com.hp.hpl.jena.shared.NotFoundException $r19;
        arq.cmd.CmdException $r9, $r17, $r20, $r27;
        com.hp.hpl.jena.query.Dataset $r6, $r7, $r8;
        java.lang.Object $r5;
        java.lang.StringBuilder $r10, $r11, $r14, $r21, $r22, $r24;

        r0 := @this: arq.cmdline.ModDatasetAssembler;

        $r1 = r0.<arq.cmdline.ModDatasetAssembler: arq.cmdline.ModAssembler modAssembler>;

        $r2 = virtualinvoke $r1.<arq.cmdline.ModAssembler: java.lang.String getAssemblerFile()>();

        if $r2 != null goto label1;

        return null;

     label1:
        $r4 = r0.<arq.cmdline.ModDatasetAssembler: arq.cmdline.ModAssembler modAssembler>;

        $r3 = <com.hp.hpl.jena.sparql.core.assembler.DatasetAssemblerVocab: com.hp.hpl.jena.rdf.model.Resource tDataset>;

        $r5 = virtualinvoke $r4.<arq.cmdline.ModAssembler: java.lang.Object create(com.hp.hpl.jena.rdf.model.Resource)>($r3);

        $r6 = (com.hp.hpl.jena.query.Dataset) $r5;

        r0.<arq.cmdline.ModDatasetAssembler: com.hp.hpl.jena.query.Dataset dataset> = $r6;

        $r7 = r0.<arq.cmdline.ModDatasetAssembler: com.hp.hpl.jena.query.Dataset dataset>;

        if $r7 != null goto label2;

        $r9 = new arq.cmd.CmdException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No dataset description found in: ");

        $r12 = r0.<arq.cmdline.ModDatasetAssembler: arq.cmdline.ModAssembler modAssembler>;

        $r13 = virtualinvoke $r12.<arq.cmdline.ModAssembler: java.lang.String getAssemblerFile()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<arq.cmd.CmdException: void <init>(java.lang.String)>($r15);

        throw $r9;

     label2:
        goto label8;

     label3:
        $r27 := @caughtexception;

        throw $r27;

     label4:
        $r26 := @caughtexception;

        throw $r26;

     label5:
        $r19 := @caughtexception;

        $r20 = new arq.cmd.CmdException;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not found: ");

        $r23 = virtualinvoke $r19.<com.hp.hpl.jena.shared.NotFoundException: java.lang.String getMessage()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<arq.cmd.CmdException: void <init>(java.lang.String)>($r25);

        throw $r20;

     label6:
        $r18 := @caughtexception;

        throw $r18;

     label7:
        $r16 := @caughtexception;

        $r17 = new arq.cmd.CmdException;

        specialinvoke $r17.<arq.cmd.CmdException: void <init>(java.lang.String,java.lang.Throwable)>("Error creating dataset", $r16);

        throw $r17;

     label8:
        $r8 = r0.<arq.cmdline.ModDatasetAssembler: com.hp.hpl.jena.query.Dataset dataset>;

        return $r8;

        catch arq.cmd.CmdException from label1 to label2 with label3;
        catch com.hp.hpl.jena.sparql.ARQException from label1 to label2 with label4;
        catch com.hp.hpl.jena.shared.NotFoundException from label1 to label2 with label5;
        catch com.hp.hpl.jena.shared.JenaException from label1 to label2 with label6;
        catch java.lang.Exception from label1 to label2 with label7;
    }

    public void registerWith(arq.cmdline.CmdGeneral)
    {
        arq.cmdline.ModDatasetAssembler r0;
        arq.cmdline.CmdGeneral r1;
        arq.cmdline.ModAssembler $r2;

        r0 := @this: arq.cmdline.ModDatasetAssembler;

        r1 := @parameter0: arq.cmdline.CmdGeneral;

        $r2 = r0.<arq.cmdline.ModDatasetAssembler: arq.cmdline.ModAssembler modAssembler>;

        virtualinvoke $r2.<arq.cmdline.ModAssembler: void registerWith(arq.cmdline.CmdGeneral)>(r1);

        return;
    }

    public void processArgs(arq.cmdline.CmdArgModule)
    {
        arq.cmdline.ModDatasetAssembler r0;
        arq.cmdline.CmdArgModule r1;
        arq.cmdline.ModAssembler $r2;

        r0 := @this: arq.cmdline.ModDatasetAssembler;

        r1 := @parameter0: arq.cmdline.CmdArgModule;

        $r2 = r0.<arq.cmdline.ModDatasetAssembler: arq.cmdline.ModAssembler modAssembler>;

        virtualinvoke $r2.<arq.cmdline.ModAssembler: void processArgs(arq.cmdline.CmdArgModule)>(r1);

        return;
    }
}
