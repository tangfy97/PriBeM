public abstract class org.apache.commons.collections.map.AbstractMapDecorator extends java.lang.Object implements java.util.Map
{
    protected transient java.util.Map map;

    protected void <init>()
    {
        org.apache.commons.collections.map.AbstractMapDecorator r0;

        r0 := @this: org.apache.commons.collections.map.AbstractMapDecorator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(java.util.Map)
    {
        java.lang.IllegalArgumentException $r2;
        org.apache.commons.collections.map.AbstractMapDecorator r0;
        java.util.Map r1;

        r0 := @this: org.apache.commons.collections.map.AbstractMapDecorator;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Map must not be null");

        throw $r2;

     label1:
        r0.<org.apache.commons.collections.map.AbstractMapDecorator: java.util.Map map> = r1;

        return;
    }

    protected java.util.Map getMap()
    {
        org.apache.commons.collections.map.AbstractMapDecorator r0;
        java.util.Map $r1;

        r0 := @this: org.apache.commons.collections.map.AbstractMapDecorator;

        $r1 = r0.<org.apache.commons.collections.map.AbstractMapDecorator: java.util.Map map>;

        return $r1;
    }

    public void clear()
    {
        org.apache.commons.collections.map.AbstractMapDecorator r0;
        java.util.Map $r1;

        r0 := @this: org.apache.commons.collections.map.AbstractMapDecorator;

        $r1 = r0.<org.apache.commons.collections.map.AbstractMapDecorator: java.util.Map map>;

        interfaceinvoke $r1.<java.util.Map: void clear()>();

        return;
    }

    public boolean containsKey(java.lang.Object)
    {
        java.util.Map $r2;
        java.lang.Object r1;
        org.apache.commons.collections.map.AbstractMapDecorator r0;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.map.AbstractMapDecorator;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections.map.AbstractMapDecorator: java.util.Map map>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean containsValue(java.lang.Object)
    {
        java.util.Map $r2;
        java.lang.Object r1;
        org.apache.commons.collections.map.AbstractMapDecorator r0;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.map.AbstractMapDecorator;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections.map.AbstractMapDecorator: java.util.Map map>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsValue(java.lang.Object)>(r1);

        return $z0;
    }

    public java.util.Set entrySet()
    {
        java.util.Set $r2;
        org.apache.commons.collections.map.AbstractMapDecorator r0;
        java.util.Map $r1;

        r0 := @this: org.apache.commons.collections.map.AbstractMapDecorator;

        $r1 = r0.<org.apache.commons.collections.map.AbstractMapDecorator: java.util.Map map>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        return $r2;
    }

    public java.lang.Object get(java.lang.Object)
    {
        java.util.Map $r2;
        java.lang.Object r1, $r3;
        org.apache.commons.collections.map.AbstractMapDecorator r0;

        r0 := @this: org.apache.commons.collections.map.AbstractMapDecorator;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections.map.AbstractMapDecorator: java.util.Map map>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        return $r3;
    }

    public boolean isEmpty()
    {
        org.apache.commons.collections.map.AbstractMapDecorator r0;
        java.util.Map $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.map.AbstractMapDecorator;

        $r1 = r0.<org.apache.commons.collections.map.AbstractMapDecorator: java.util.Map map>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>();

        return $z0;
    }

    public java.util.Set keySet()
    {
        java.util.Set $r2;
        org.apache.commons.collections.map.AbstractMapDecorator r0;
        java.util.Map $r1;

        r0 := @this: org.apache.commons.collections.map.AbstractMapDecorator;

        $r1 = r0.<org.apache.commons.collections.map.AbstractMapDecorator: java.util.Map map>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        return $r2;
    }

    public java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        java.util.Map $r3;
        java.lang.Object r1, r2, $r4;
        org.apache.commons.collections.map.AbstractMapDecorator r0;

        r0 := @this: org.apache.commons.collections.map.AbstractMapDecorator;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<org.apache.commons.collections.map.AbstractMapDecorator: java.util.Map map>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return $r4;
    }

    public void putAll(java.util.Map)
    {
        org.apache.commons.collections.map.AbstractMapDecorator r0;
        java.util.Map r1, $r2;

        r0 := @this: org.apache.commons.collections.map.AbstractMapDecorator;

        r1 := @parameter0: java.util.Map;

        $r2 = r0.<org.apache.commons.collections.map.AbstractMapDecorator: java.util.Map map>;

        interfaceinvoke $r2.<java.util.Map: void putAll(java.util.Map)>(r1);

        return;
    }

    public java.lang.Object remove(java.lang.Object)
    {
        java.util.Map $r2;
        java.lang.Object r1, $r3;
        org.apache.commons.collections.map.AbstractMapDecorator r0;

        r0 := @this: org.apache.commons.collections.map.AbstractMapDecorator;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections.map.AbstractMapDecorator: java.util.Map map>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        return $r3;
    }

    public int size()
    {
        int $i0;
        org.apache.commons.collections.map.AbstractMapDecorator r0;
        java.util.Map $r1;

        r0 := @this: org.apache.commons.collections.map.AbstractMapDecorator;

        $r1 = r0.<org.apache.commons.collections.map.AbstractMapDecorator: java.util.Map map>;

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        return $i0;
    }

    public java.util.Collection values()
    {
        org.apache.commons.collections.map.AbstractMapDecorator r0;
        java.util.Map $r1;
        java.util.Collection $r2;

        r0 := @this: org.apache.commons.collections.map.AbstractMapDecorator;

        $r1 = r0.<org.apache.commons.collections.map.AbstractMapDecorator: java.util.Map map>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        return $r2;
    }

    public boolean equals(java.lang.Object)
    {
        java.util.Map $r2;
        java.lang.Object r0;
        org.apache.commons.collections.map.AbstractMapDecorator r1;
        boolean $z0;

        r1 := @this: org.apache.commons.collections.map.AbstractMapDecorator;

        r0 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $r2 = r1.<org.apache.commons.collections.map.AbstractMapDecorator: java.util.Map map>;

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>(r0);

        return $z0;
    }

    public int hashCode()
    {
        int $i0;
        org.apache.commons.collections.map.AbstractMapDecorator r0;
        java.util.Map $r1;

        r0 := @this: org.apache.commons.collections.map.AbstractMapDecorator;

        $r1 = r0.<org.apache.commons.collections.map.AbstractMapDecorator: java.util.Map map>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        java.lang.String $r2;
        org.apache.commons.collections.map.AbstractMapDecorator r0;
        java.util.Map $r1;

        r0 := @this: org.apache.commons.collections.map.AbstractMapDecorator;

        $r1 = r0.<org.apache.commons.collections.map.AbstractMapDecorator: java.util.Map map>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }
}
