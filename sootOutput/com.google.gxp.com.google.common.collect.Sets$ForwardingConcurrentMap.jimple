class com.google.gxp.com.google.common.collect.Sets$ForwardingConcurrentMap extends com.google.gxp.com.google.common.collect.ForwardingMap implements java.io.Serializable
{
    final java.util.Map delegate;
    transient java.util.Set keySet;
    static final long serialVersionUID;

    void <init>()
    {
        java.util.concurrent.ConcurrentHashMap $r1;
        com.google.gxp.com.google.common.collect.Sets$ForwardingConcurrentMap r0;

        r0 := @this: com.google.gxp.com.google.common.collect.Sets$ForwardingConcurrentMap;

        specialinvoke r0.<com.google.gxp.com.google.common.collect.ForwardingMap: void <init>()>();

        $r1 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r1.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        r0.<com.google.gxp.com.google.common.collect.Sets$ForwardingConcurrentMap: java.util.Map delegate> = $r1;

        return;
    }

    void <init>(int)
    {
        java.util.concurrent.ConcurrentHashMap $r1;
        int i0;
        com.google.gxp.com.google.common.collect.Sets$ForwardingConcurrentMap r0;

        r0 := @this: com.google.gxp.com.google.common.collect.Sets$ForwardingConcurrentMap;

        i0 := @parameter0: int;

        specialinvoke r0.<com.google.gxp.com.google.common.collect.ForwardingMap: void <init>()>();

        $r1 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r1.<java.util.concurrent.ConcurrentHashMap: void <init>(int)>(i0);

        r0.<com.google.gxp.com.google.common.collect.Sets$ForwardingConcurrentMap: java.util.Map delegate> = $r1;

        return;
    }

    protected java.util.Map delegate()
    {
        com.google.gxp.com.google.common.collect.Sets$ForwardingConcurrentMap r0;
        java.util.Map $r1;

        r0 := @this: com.google.gxp.com.google.common.collect.Sets$ForwardingConcurrentMap;

        $r1 = r0.<com.google.gxp.com.google.common.collect.Sets$ForwardingConcurrentMap: java.util.Map delegate>;

        return $r1;
    }

    public java.util.Set keySet()
    {
        com.google.gxp.com.google.common.collect.Sets$ForwardingConcurrentMap r0;
        java.util.Map $r2;
        java.util.Set r1, $r3, $r4;

        r0 := @this: com.google.gxp.com.google.common.collect.Sets$ForwardingConcurrentMap;

        r1 = r0.<com.google.gxp.com.google.common.collect.Sets$ForwardingConcurrentMap: java.util.Set keySet>;

        if r1 != null goto label1;

        $r2 = virtualinvoke r0.<com.google.gxp.com.google.common.collect.Sets$ForwardingConcurrentMap: java.util.Map delegate()>();

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set keySet()>();

        $r4 = staticinvoke <com.google.gxp.com.google.common.collect.Sets: java.util.Set access$000(java.util.Set)>($r3);

        r0.<com.google.gxp.com.google.common.collect.Sets$ForwardingConcurrentMap: java.util.Set keySet> = $r4;

        goto label2;

     label1:
        $r4 = r1;

     label2:
        return $r4;
    }

    protected volatile java.lang.Object delegate()
    {
        com.google.gxp.com.google.common.collect.Sets$ForwardingConcurrentMap r0;
        java.util.Map $r1;

        r0 := @this: com.google.gxp.com.google.common.collect.Sets$ForwardingConcurrentMap;

        $r1 = virtualinvoke r0.<com.google.gxp.com.google.common.collect.Sets$ForwardingConcurrentMap: java.util.Map delegate()>();

        return $r1;
    }

    public static void <clinit>()
    {
        <com.google.gxp.com.google.common.collect.Sets$ForwardingConcurrentMap: long serialVersionUID> = 0L;

        return;
    }
}
