public class org.apache.cxf.interceptor.OutgoingChainInterceptor extends org.apache.cxf.phase.AbstractPhaseInterceptor
{
    private static final java.util.logging.Logger LOG;
    private org.apache.cxf.phase.PhaseChainCache chainCache;

    public void <init>()
    {
        org.apache.cxf.interceptor.OutgoingChainInterceptor r0;
        org.apache.cxf.phase.PhaseChainCache $r1;

        r0 := @this: org.apache.cxf.interceptor.OutgoingChainInterceptor;

        specialinvoke r0.<org.apache.cxf.phase.AbstractPhaseInterceptor: void <init>(java.lang.String)>("post-invoke");

        $r1 = new org.apache.cxf.phase.PhaseChainCache;

        specialinvoke $r1.<org.apache.cxf.phase.PhaseChainCache: void <init>()>();

        r0.<org.apache.cxf.interceptor.OutgoingChainInterceptor: org.apache.cxf.phase.PhaseChainCache chainCache> = $r1;

        return;
    }

    public void handleMessage(org.apache.cxf.message.Message)
    {
        org.apache.cxf.interceptor.InterceptorChain $r4, r14;
        org.apache.cxf.service.model.BindingOperationInfo r3;
        org.apache.cxf.phase.PhaseChainCache $r6;
        org.apache.cxf.interceptor.OutgoingChainInterceptor r5;
        boolean $z0;
        org.apache.cxf.service.model.MessageInfo $r9;
        org.apache.cxf.message.Message r0, $r13;
        org.apache.cxf.service.model.OperationInfo $r8, $r11, $r12;
        org.apache.cxf.message.Exchange $r1;
        org.apache.cxf.service.model.BindingMessageInfo $r10;
        org.apache.cxf.phase.PhaseInterceptorChain $r7;
        java.lang.Object $r2;

        r5 := @this: org.apache.cxf.interceptor.OutgoingChainInterceptor;

        r0 := @parameter0: org.apache.cxf.message.Message;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r2 = interfaceinvoke $r1.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Class)>(class "Lorg/apache/cxf/service/model/BindingOperationInfo;");

        r3 = (org.apache.cxf.service.model.BindingOperationInfo) $r2;

        if null == r3 goto label1;

        $r11 = virtualinvoke r3.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.OperationInfo getOperationInfo()>();

        if null == $r11 goto label1;

        $r12 = virtualinvoke r3.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.OperationInfo getOperationInfo()>();

        $z0 = virtualinvoke $r12.<org.apache.cxf.service.model.OperationInfo: boolean isOneWay()>();

        if $z0 == 0 goto label1;

        specialinvoke r5.<org.apache.cxf.interceptor.OutgoingChainInterceptor: void closeInput(org.apache.cxf.message.Message)>(r0);

        return;

     label1:
        $r13 = interfaceinvoke $r1.<org.apache.cxf.message.Exchange: org.apache.cxf.message.Message getOutMessage()>();

        if $r13 == null goto label4;

        staticinvoke <org.apache.cxf.interceptor.OutgoingChainInterceptor: org.apache.cxf.transport.Conduit getBackChannelConduit(org.apache.cxf.message.Message)>(r0);

        if r3 == null goto label2;

        $r8 = virtualinvoke r3.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.OperationInfo getOperationInfo()>();

        $r9 = virtualinvoke $r8.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getOutput()>();

        interfaceinvoke $r13.<org.apache.cxf.message.Message: void put(java.lang.Class,java.lang.Object)>(class "Lorg/apache/cxf/service/model/MessageInfo;", $r9);

        $r10 = virtualinvoke r3.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.BindingMessageInfo getOutput()>();

        interfaceinvoke $r13.<org.apache.cxf.message.Message: void put(java.lang.Class,java.lang.Object)>(class "Lorg/apache/cxf/service/model/BindingMessageInfo;", $r10);

     label2:
        $r4 = interfaceinvoke $r13.<org.apache.cxf.message.Message: org.apache.cxf.interceptor.InterceptorChain getInterceptorChain()>();

        r14 = $r4;

        if $r4 != null goto label3;

        $r6 = r5.<org.apache.cxf.interceptor.OutgoingChainInterceptor: org.apache.cxf.phase.PhaseChainCache chainCache>;

        $r7 = staticinvoke <org.apache.cxf.interceptor.OutgoingChainInterceptor: org.apache.cxf.phase.PhaseInterceptorChain getChain(org.apache.cxf.message.Exchange,org.apache.cxf.phase.PhaseChainCache)>($r1, $r6);

        r14 = $r7;

        interfaceinvoke $r13.<org.apache.cxf.message.Message: void setInterceptorChain(org.apache.cxf.interceptor.InterceptorChain)>($r7);

     label3:
        interfaceinvoke r14.<org.apache.cxf.interceptor.InterceptorChain: boolean doIntercept(org.apache.cxf.message.Message)>($r13);

     label4:
        return;
    }

    private void closeInput(org.apache.cxf.message.Message)
    {
        org.apache.cxf.message.Message r0;
        org.apache.cxf.interceptor.OutgoingChainInterceptor r4;
        java.lang.Object $r1;
        java.io.IOException $r3;
        java.io.InputStream r2;

        r4 := @this: org.apache.cxf.interceptor.OutgoingChainInterceptor;

        r0 := @parameter0: org.apache.cxf.message.Message;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object getContent(java.lang.Class)>(class "Ljava/io/InputStream;");

        r2 = (java.io.InputStream) $r1;

        if r2 == null goto label4;

     label1:
        virtualinvoke r2.<java.io.InputStream: void close()>();

        interfaceinvoke r0.<org.apache.cxf.message.Message: void removeContent(java.lang.Class)>(class "Ljava/io/InputStream;");

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    protected static org.apache.cxf.transport.Conduit getBackChannelConduit(org.apache.cxf.message.Message)
    {
        org.apache.cxf.transport.Conduit $r2, $r6, r11;
        org.apache.cxf.transport.Destination $r3, $r4;
        org.apache.cxf.message.Message r0, $r5;
        java.io.IOException $r10;
        org.apache.cxf.message.Exchange $r1;
        org.apache.cxf.endpoint.Endpoint $r9;
        org.apache.cxf.endpoint.PreexistingConduitSelector $r7;
        java.lang.Object $r8;

        r0 := @parameter0: org.apache.cxf.message.Message;

        r11 = null;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r2 = interfaceinvoke $r1.<org.apache.cxf.message.Exchange: org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.message.Message)>(r0);

        if $r2 != null goto label4;

        $r3 = interfaceinvoke $r1.<org.apache.cxf.message.Exchange: org.apache.cxf.transport.Destination getDestination()>();

        if $r3 == null goto label4;

     label1:
        $r4 = interfaceinvoke $r1.<org.apache.cxf.message.Exchange: org.apache.cxf.transport.Destination getDestination()>();

        $r5 = interfaceinvoke $r1.<org.apache.cxf.message.Exchange: org.apache.cxf.message.Message getInMessage()>();

        $r6 = interfaceinvoke $r4.<org.apache.cxf.transport.Destination: org.apache.cxf.transport.Conduit getBackChannel(org.apache.cxf.message.Message,org.apache.cxf.message.Message,org.apache.cxf.ws.addressing.EndpointReferenceType)>($r5, null, null);

        r11 = $r6;

        $r7 = new org.apache.cxf.endpoint.PreexistingConduitSelector;

        $r8 = interfaceinvoke $r1.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Class)>(class "Lorg/apache/cxf/endpoint/Endpoint;");

        $r9 = (org.apache.cxf.endpoint.Endpoint) $r8;

        specialinvoke $r7.<org.apache.cxf.endpoint.PreexistingConduitSelector: void <init>(org.apache.cxf.transport.Conduit,org.apache.cxf.endpoint.Endpoint)>($r6, $r9);

        interfaceinvoke $r1.<org.apache.cxf.message.Exchange: void put(java.lang.Class,java.lang.Object)>(class "Lorg/apache/cxf/endpoint/ConduitSelector;", $r7);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        virtualinvoke $r10.<java.io.IOException: void printStackTrace()>();

     label4:
        return r11;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static org.apache.cxf.interceptor.InterceptorChain getOutInterceptorChain(org.apache.cxf.message.Exchange)
    {
        java.util.SortedSet $r8;
        org.apache.cxf.phase.PhaseManager r6;
        org.apache.cxf.service.Service $r14;
        boolean $z0, $z1, $z2, $z3;
        java.util.logging.Logger $r13, $r17, $r20, $r23, $r25, $r30, $r35, $r40;
        java.util.List $r11, $r15, $r18, $r21;
        org.apache.cxf.transport.MessageObserver $r44;
        java.lang.StringBuilder $r24, $r26, $r27, $r29, $r31, $r32, $r34, $r36, $r37, $r39, $r41, $r42;
        org.apache.cxf.Bus r2;
        org.apache.cxf.binding.Binding r4;
        java.util.logging.Level $r12, $r16, $r19, $r22;
        java.lang.String $r28, $r33, $r38, $r43;
        org.apache.cxf.message.Exchange r0;
        org.apache.cxf.endpoint.Endpoint r10;
        org.apache.cxf.phase.PhaseInterceptorChain $r7;
        java.lang.Object $r1, $r3, $r5, $r9;

        r0 := @parameter0: org.apache.cxf.message.Exchange;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Class)>(class "Lorg/apache/cxf/Bus;");

        r2 = (org.apache.cxf.Bus) $r1;

        $r3 = interfaceinvoke r0.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Class)>(class "Lorg/apache/cxf/binding/Binding;");

        r4 = (org.apache.cxf.binding.Binding) $r3;

        $r5 = interfaceinvoke r2.<org.apache.cxf.Bus: java.lang.Object getExtension(java.lang.Class)>(class "Lorg/apache/cxf/phase/PhaseManager;");

        r6 = (org.apache.cxf.phase.PhaseManager) $r5;

        $r7 = new org.apache.cxf.phase.PhaseInterceptorChain;

        $r8 = interfaceinvoke r6.<org.apache.cxf.phase.PhaseManager: java.util.SortedSet getOutPhases()>();

        specialinvoke $r7.<org.apache.cxf.phase.PhaseInterceptorChain: void <init>(java.util.SortedSet)>($r8);

        $r9 = interfaceinvoke r0.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Class)>(class "Lorg/apache/cxf/endpoint/Endpoint;");

        r10 = (org.apache.cxf.endpoint.Endpoint) $r9;

        $r11 = interfaceinvoke r10.<org.apache.cxf.endpoint.Endpoint: java.util.List getOutInterceptors()>();

        $r13 = <org.apache.cxf.interceptor.OutgoingChainInterceptor: java.util.logging.Logger LOG>;

        $r12 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z0 = virtualinvoke $r13.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r12);

        if $z0 == 0 goto label1;

        $r40 = <org.apache.cxf.interceptor.OutgoingChainInterceptor: java.util.logging.Logger LOG>;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Interceptors contributed by endpoint: ");

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r40.<java.util.logging.Logger: void fine(java.lang.String)>($r43);

     label1:
        virtualinvoke $r7.<org.apache.cxf.phase.PhaseInterceptorChain: void add(java.util.Collection)>($r11);

        $r14 = interfaceinvoke r10.<org.apache.cxf.endpoint.Endpoint: org.apache.cxf.service.Service getService()>();

        $r15 = interfaceinvoke $r14.<org.apache.cxf.service.Service: java.util.List getOutInterceptors()>();

        $r17 = <org.apache.cxf.interceptor.OutgoingChainInterceptor: java.util.logging.Logger LOG>;

        $r16 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z1 = virtualinvoke $r17.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r16);

        if $z1 == 0 goto label2;

        $r35 = <org.apache.cxf.interceptor.OutgoingChainInterceptor: java.util.logging.Logger LOG>;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Interceptors contributed by service: ");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r35.<java.util.logging.Logger: void fine(java.lang.String)>($r38);

     label2:
        virtualinvoke $r7.<org.apache.cxf.phase.PhaseInterceptorChain: void add(java.util.Collection)>($r15);

        $r18 = interfaceinvoke r2.<org.apache.cxf.Bus: java.util.List getOutInterceptors()>();

        $r20 = <org.apache.cxf.interceptor.OutgoingChainInterceptor: java.util.logging.Logger LOG>;

        $r19 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z2 = virtualinvoke $r20.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r19);

        if $z2 == 0 goto label3;

        $r30 = <org.apache.cxf.interceptor.OutgoingChainInterceptor: java.util.logging.Logger LOG>;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Interceptors contributed by bus: ");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r30.<java.util.logging.Logger: void fine(java.lang.String)>($r33);

     label3:
        virtualinvoke $r7.<org.apache.cxf.phase.PhaseInterceptorChain: void add(java.util.Collection)>($r18);

        if r4 == null goto label5;

        $r21 = interfaceinvoke r4.<org.apache.cxf.binding.Binding: java.util.List getOutInterceptors()>();

        $r23 = <org.apache.cxf.interceptor.OutgoingChainInterceptor: java.util.logging.Logger LOG>;

        $r22 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z3 = virtualinvoke $r23.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r22);

        if $z3 == 0 goto label4;

        $r25 = <org.apache.cxf.interceptor.OutgoingChainInterceptor: java.util.logging.Logger LOG>;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Interceptors contributed by binding: ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r25.<java.util.logging.Logger: void fine(java.lang.String)>($r28);

     label4:
        virtualinvoke $r7.<org.apache.cxf.phase.PhaseInterceptorChain: void add(java.util.Collection)>($r21);

     label5:
        staticinvoke <org.apache.cxf.interceptor.OutgoingChainInterceptor: void modifyChain(org.apache.cxf.phase.PhaseInterceptorChain,org.apache.cxf.message.Exchange)>($r7, r0);

        $r44 = interfaceinvoke r10.<org.apache.cxf.endpoint.Endpoint: org.apache.cxf.transport.MessageObserver getOutFaultObserver()>();

        virtualinvoke $r7.<org.apache.cxf.phase.PhaseInterceptorChain: void setFaultObserver(org.apache.cxf.transport.MessageObserver)>($r44);

        return $r7;
    }

    private static void modifyChain(org.apache.cxf.phase.PhaseInterceptorChain, org.apache.cxf.message.Exchange)
    {
        org.apache.cxf.message.Message $r2, $r3;
        org.apache.cxf.phase.PhaseInterceptorChain r0;
        org.apache.cxf.message.Exchange r1;

        r0 := @parameter0: org.apache.cxf.phase.PhaseInterceptorChain;

        r1 := @parameter1: org.apache.cxf.message.Exchange;

        $r2 = interfaceinvoke r1.<org.apache.cxf.message.Exchange: org.apache.cxf.message.Message getInMessage()>();

        staticinvoke <org.apache.cxf.interceptor.OutgoingChainInterceptor: void modifyChain(org.apache.cxf.phase.PhaseInterceptorChain,org.apache.cxf.message.Message)>(r0, $r2);

        $r3 = interfaceinvoke r1.<org.apache.cxf.message.Exchange: org.apache.cxf.message.Message getOutMessage()>();

        staticinvoke <org.apache.cxf.interceptor.OutgoingChainInterceptor: void modifyChain(org.apache.cxf.phase.PhaseInterceptorChain,org.apache.cxf.message.Message)>(r0, $r3);

        return;
    }

    private static void modifyChain(org.apache.cxf.phase.PhaseInterceptorChain, org.apache.cxf.message.Message)
    {
        org.apache.cxf.transport.Destination $r9, $r11;
        java.lang.String $r1, $r5;
        boolean $z0, $z1;
        java.util.Iterator $r14;
        org.apache.cxf.message.Message r0;
        java.util.Collection $r3, $r4, $r7, $r8;
        java.util.List $r13, $r17;
        org.apache.cxf.interceptor.InterceptorProvider $r12, r16;
        org.apache.cxf.phase.PhaseInterceptorChain r10;
        java.lang.Object $r2, $r6, $r15;

        r10 := @parameter0: org.apache.cxf.phase.PhaseInterceptorChain;

        r0 := @parameter1: org.apache.cxf.message.Message;

        if r0 != null goto label1;

        return;

     label1:
        $r1 = <org.apache.cxf.message.Message: java.lang.String INTERCEPTOR_PROVIDERS>;

        $r2 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>($r1);

        $r3 = (java.util.Collection) $r2;

        $r4 = staticinvoke <org.apache.cxf.helpers.CastUtils: java.util.Collection cast(java.util.Collection)>($r3);

        if $r4 == null goto label3;

        $r14 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r15 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        r16 = (org.apache.cxf.interceptor.InterceptorProvider) $r15;

        $r17 = interfaceinvoke r16.<org.apache.cxf.interceptor.InterceptorProvider: java.util.List getOutInterceptors()>();

        virtualinvoke r10.<org.apache.cxf.phase.PhaseInterceptorChain: void add(java.util.Collection)>($r17);

        goto label2;

     label3:
        $r5 = <org.apache.cxf.message.Message: java.lang.String OUT_INTERCEPTORS>;

        $r6 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>($r5);

        $r7 = (java.util.Collection) $r6;

        $r8 = staticinvoke <org.apache.cxf.helpers.CastUtils: java.util.Collection cast(java.util.Collection)>($r7);

        if $r8 == null goto label4;

        virtualinvoke r10.<org.apache.cxf.phase.PhaseInterceptorChain: void add(java.util.Collection)>($r8);

     label4:
        $r9 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.transport.Destination getDestination()>();

        $z0 = $r9 instanceof org.apache.cxf.interceptor.InterceptorProvider;

        if $z0 == 0 goto label5;

        $r11 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.transport.Destination getDestination()>();

        $r12 = (org.apache.cxf.interceptor.InterceptorProvider) $r11;

        $r13 = interfaceinvoke $r12.<org.apache.cxf.interceptor.InterceptorProvider: java.util.List getOutInterceptors()>();

        virtualinvoke r10.<org.apache.cxf.phase.PhaseInterceptorChain: void add(java.util.Collection)>($r13);

     label5:
        return;
    }

    private static org.apache.cxf.phase.PhaseInterceptorChain getChain(org.apache.cxf.message.Exchange, org.apache.cxf.phase.PhaseChainCache)
    {
        org.apache.cxf.service.Service $r10, $r27, $r63;
        org.apache.cxf.databinding.DataBinding $r28, $r64;
        org.apache.cxf.transport.MessageObserver $r66;
        java.lang.StringBuilder $r33, $r35, $r36, $r41, $r43, $r44, $r46, $r48, $r49, $r51, $r53, $r54, $r56, $r58, $r59;
        org.apache.cxf.binding.Binding r4;
        java.lang.String $r37, $r45, $r50, $r55, $r60;
        org.apache.cxf.message.Exchange r0;
        org.apache.cxf.interceptor.InterceptorProvider $r29;
        org.apache.cxf.phase.PhaseInterceptorChain r65;
        java.util.SortedSet $r20, $r23, $r26;
        org.apache.cxf.phase.PhaseManager $r19, $r22, $r25;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.util.logging.Logger $r9, $r13, $r16, $r32, $r34, $r40, $r42, $r47, $r52, $r57;
        java.util.List $r7, $r11, $r14, $r30, $r38, r61, r62;
        org.apache.cxf.Bus r2;
        java.util.logging.Level $r8, $r12, $r15, $r31, $r39;
        org.apache.cxf.phase.PhaseChainCache r17;
        org.apache.cxf.endpoint.Endpoint r6;
        java.lang.Object $r1, $r3, $r5, $r18, $r21, $r24;

        r0 := @parameter0: org.apache.cxf.message.Exchange;

        r17 := @parameter1: org.apache.cxf.phase.PhaseChainCache;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Class)>(class "Lorg/apache/cxf/Bus;");

        r2 = (org.apache.cxf.Bus) $r1;

        $r3 = interfaceinvoke r0.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Class)>(class "Lorg/apache/cxf/binding/Binding;");

        r4 = (org.apache.cxf.binding.Binding) $r3;

        $r5 = interfaceinvoke r0.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Class)>(class "Lorg/apache/cxf/endpoint/Endpoint;");

        r6 = (org.apache.cxf.endpoint.Endpoint) $r5;

        $r7 = interfaceinvoke r2.<org.apache.cxf.Bus: java.util.List getOutInterceptors()>();

        $r9 = <org.apache.cxf.interceptor.OutgoingChainInterceptor: java.util.logging.Logger LOG>;

        $r8 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z0 = virtualinvoke $r9.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r8);

        if $z0 == 0 goto label1;

        $r57 = <org.apache.cxf.interceptor.OutgoingChainInterceptor: java.util.logging.Logger LOG>;

        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        $r58 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Interceptors contributed by bus: ");

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r57.<java.util.logging.Logger: void fine(java.lang.String)>($r60);

     label1:
        $r10 = interfaceinvoke r6.<org.apache.cxf.endpoint.Endpoint: org.apache.cxf.service.Service getService()>();

        $r11 = interfaceinvoke $r10.<org.apache.cxf.service.Service: java.util.List getOutInterceptors()>();

        $r13 = <org.apache.cxf.interceptor.OutgoingChainInterceptor: java.util.logging.Logger LOG>;

        $r12 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z1 = virtualinvoke $r13.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r12);

        if $z1 == 0 goto label2;

        $r52 = <org.apache.cxf.interceptor.OutgoingChainInterceptor: java.util.logging.Logger LOG>;

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        $r53 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Interceptors contributed by service: ");

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r52.<java.util.logging.Logger: void fine(java.lang.String)>($r55);

     label2:
        $r14 = interfaceinvoke r6.<org.apache.cxf.endpoint.Endpoint: java.util.List getOutInterceptors()>();

        $r16 = <org.apache.cxf.interceptor.OutgoingChainInterceptor: java.util.logging.Logger LOG>;

        $r15 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z2 = virtualinvoke $r16.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r15);

        if $z2 == 0 goto label3;

        $r47 = <org.apache.cxf.interceptor.OutgoingChainInterceptor: java.util.logging.Logger LOG>;

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Interceptors contributed by endpoint: ");

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r47.<java.util.logging.Logger: void fine(java.lang.String)>($r50);

     label3:
        r61 = null;

        if r4 == null goto label4;

        $r38 = interfaceinvoke r4.<org.apache.cxf.binding.Binding: java.util.List getOutInterceptors()>();

        r61 = $r38;

        $r40 = <org.apache.cxf.interceptor.OutgoingChainInterceptor: java.util.logging.Logger LOG>;

        $r39 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z4 = virtualinvoke $r40.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r39);

        if $z4 == 0 goto label4;

        $r42 = <org.apache.cxf.interceptor.OutgoingChainInterceptor: java.util.logging.Logger LOG>;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Interceptors contributed by binding: ");

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r38);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r42.<java.util.logging.Logger: void fine(java.lang.String)>($r45);

     label4:
        r62 = null;

        $r63 = interfaceinvoke r6.<org.apache.cxf.endpoint.Endpoint: org.apache.cxf.service.Service getService()>();

        $r64 = interfaceinvoke $r63.<org.apache.cxf.service.Service: org.apache.cxf.databinding.DataBinding getDataBinding()>();

        $z5 = $r64 instanceof org.apache.cxf.interceptor.InterceptorProvider;

        if $z5 == 0 goto label6;

        $r27 = interfaceinvoke r6.<org.apache.cxf.endpoint.Endpoint: org.apache.cxf.service.Service getService()>();

        $r28 = interfaceinvoke $r27.<org.apache.cxf.service.Service: org.apache.cxf.databinding.DataBinding getDataBinding()>();

        $r29 = (org.apache.cxf.interceptor.InterceptorProvider) $r28;

        $r30 = interfaceinvoke $r29.<org.apache.cxf.interceptor.InterceptorProvider: java.util.List getOutInterceptors()>();

        r62 = $r30;

        $r32 = <org.apache.cxf.interceptor.OutgoingChainInterceptor: java.util.logging.Logger LOG>;

        $r31 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z3 = virtualinvoke $r32.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r31);

        if $z3 == 0 goto label5;

        $r34 = <org.apache.cxf.interceptor.OutgoingChainInterceptor: java.util.logging.Logger LOG>;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Interceptors contributed by databinding: ");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r30);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r34.<java.util.logging.Logger: void fine(java.lang.String)>($r37);

     label5:
        if r61 != null goto label6;

        r61 = $r30;

        r62 = null;

     label6:
        if r62 == null goto label7;

        $r24 = interfaceinvoke r2.<org.apache.cxf.Bus: java.lang.Object getExtension(java.lang.Class)>(class "Lorg/apache/cxf/phase/PhaseManager;");

        $r25 = (org.apache.cxf.phase.PhaseManager) $r24;

        $r26 = interfaceinvoke $r25.<org.apache.cxf.phase.PhaseManager: java.util.SortedSet getOutPhases()>();

        r65 = virtualinvoke r17.<org.apache.cxf.phase.PhaseChainCache: org.apache.cxf.phase.PhaseInterceptorChain get(java.util.SortedSet,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List)>($r26, $r7, $r11, $r14, r61, r62);

        goto label9;

     label7:
        if r61 == null goto label8;

        $r21 = interfaceinvoke r2.<org.apache.cxf.Bus: java.lang.Object getExtension(java.lang.Class)>(class "Lorg/apache/cxf/phase/PhaseManager;");

        $r22 = (org.apache.cxf.phase.PhaseManager) $r21;

        $r23 = interfaceinvoke $r22.<org.apache.cxf.phase.PhaseManager: java.util.SortedSet getOutPhases()>();

        r65 = virtualinvoke r17.<org.apache.cxf.phase.PhaseChainCache: org.apache.cxf.phase.PhaseInterceptorChain get(java.util.SortedSet,java.util.List,java.util.List,java.util.List,java.util.List)>($r23, $r7, $r11, $r14, r61);

        goto label9;

     label8:
        $r18 = interfaceinvoke r2.<org.apache.cxf.Bus: java.lang.Object getExtension(java.lang.Class)>(class "Lorg/apache/cxf/phase/PhaseManager;");

        $r19 = (org.apache.cxf.phase.PhaseManager) $r18;

        $r20 = interfaceinvoke $r19.<org.apache.cxf.phase.PhaseManager: java.util.SortedSet getOutPhases()>();

        r65 = virtualinvoke r17.<org.apache.cxf.phase.PhaseChainCache: org.apache.cxf.phase.PhaseInterceptorChain get(java.util.SortedSet,java.util.List,java.util.List,java.util.List)>($r20, $r7, $r11, $r14);

     label9:
        staticinvoke <org.apache.cxf.interceptor.OutgoingChainInterceptor: void modifyChain(org.apache.cxf.phase.PhaseInterceptorChain,org.apache.cxf.message.Exchange)>(r65, r0);

        $r66 = interfaceinvoke r6.<org.apache.cxf.endpoint.Endpoint: org.apache.cxf.transport.MessageObserver getOutFaultObserver()>();

        virtualinvoke r65.<org.apache.cxf.phase.PhaseInterceptorChain: void setFaultObserver(org.apache.cxf.transport.MessageObserver)>($r66);

        return r65;
    }

    static void <clinit>()
    {
        java.util.logging.Logger $r0;

        $r0 = staticinvoke <org.apache.cxf.common.logging.LogUtils: java.util.logging.Logger getL7dLogger(java.lang.Class)>(class "Lorg/apache/cxf/interceptor/OutgoingChainInterceptor;");

        <org.apache.cxf.interceptor.OutgoingChainInterceptor: java.util.logging.Logger LOG> = $r0;

        return;
    }
}
