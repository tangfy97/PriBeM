final class org.waveprotocol.wave.client.editor.event.EditorEventImpl$1 extends java.lang.Object implements org.waveprotocol.wave.client.common.util.SignalEventImpl$SignalEventFactory
{

    void <init>()
    {
        org.waveprotocol.wave.client.editor.event.EditorEventImpl$1 r0;

        r0 := @this: org.waveprotocol.wave.client.editor.event.EditorEventImpl$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.waveprotocol.wave.client.editor.event.EditorEventImpl create()
    {
        org.waveprotocol.wave.client.editor.event.EditorEventImpl$1 r1;
        org.waveprotocol.wave.client.editor.event.EditorEventImpl $r0;

        r1 := @this: org.waveprotocol.wave.client.editor.event.EditorEventImpl$1;

        $r0 = new org.waveprotocol.wave.client.editor.event.EditorEventImpl;

        specialinvoke $r0.<org.waveprotocol.wave.client.editor.event.EditorEventImpl: void <init>(org.waveprotocol.wave.client.editor.event.EditorEventImpl$1)>(null);

        return $r0;
    }

    public volatile org.waveprotocol.wave.client.common.util.SignalEventImpl create()
    {
        org.waveprotocol.wave.client.editor.event.EditorEventImpl$1 r0;
        org.waveprotocol.wave.client.editor.event.EditorEventImpl $r1;

        r0 := @this: org.waveprotocol.wave.client.editor.event.EditorEventImpl$1;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.event.EditorEventImpl$1: org.waveprotocol.wave.client.editor.event.EditorEventImpl create()>();

        return $r1;
    }
}
