public final class org.waveprotocol.wave.model.adt.docbased.DocumentBasedBasicValue extends java.lang.Object implements org.waveprotocol.wave.model.adt.ObservableBasicValue, org.waveprotocol.wave.model.util.AttributeListener
{
    private final org.waveprotocol.wave.model.document.MutableDocument document;
    private final org.waveprotocol.wave.model.util.Serializer serializer;
    private final java.lang.String valueAttrName;
    private final java.lang.Object element;
    private final org.waveprotocol.wave.model.util.CopyOnWriteSet listeners;
    static final boolean $assertionsDisabled;

    public static org.waveprotocol.wave.model.adt.docbased.DocumentBasedBasicValue create(org.waveprotocol.wave.model.document.util.DocumentEventRouter, java.lang.Object, org.waveprotocol.wave.model.util.Serializer, java.lang.String)
    {
        org.waveprotocol.wave.model.adt.docbased.DocumentBasedBasicValue $r0;
        org.waveprotocol.wave.model.util.Serializer r4;
        org.waveprotocol.wave.model.document.ObservableMutableDocument $r2;
        java.lang.Object r3;
        java.lang.String r5;
        org.waveprotocol.wave.model.document.util.DocumentEventRouter r1;

        r1 := @parameter0: org.waveprotocol.wave.model.document.util.DocumentEventRouter;

        r3 := @parameter1: java.lang.Object;

        r4 := @parameter2: org.waveprotocol.wave.model.util.Serializer;

        r5 := @parameter3: java.lang.String;

        $r0 = new org.waveprotocol.wave.model.adt.docbased.DocumentBasedBasicValue;

        $r2 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.util.DocumentEventRouter: org.waveprotocol.wave.model.document.ObservableMutableDocument getDocument()>();

        specialinvoke $r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBasicValue: void <init>(org.waveprotocol.wave.model.document.MutableDocument,java.lang.Object,org.waveprotocol.wave.model.util.Serializer,java.lang.String)>($r2, r3, r4, r5);

        interfaceinvoke r1.<org.waveprotocol.wave.model.document.util.DocumentEventRouter: org.waveprotocol.wave.model.document.util.ListenerRegistration addAttributeListener(java.lang.Object,org.waveprotocol.wave.model.util.AttributeListener)>(r3, $r0);

        return $r0;
    }

    public static org.waveprotocol.wave.model.adt.docbased.Initializer createInitialiser(org.waveprotocol.wave.model.util.Serializer, java.lang.String, java.lang.Object)
    {
        org.waveprotocol.wave.model.util.Serializer r3;
        org.waveprotocol.wave.model.adt.docbased.DocumentBasedBasicValue$1 $r0;
        java.lang.Object r1;
        java.lang.String r2;

        r3 := @parameter0: org.waveprotocol.wave.model.util.Serializer;

        r2 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.Object;

        $r0 = new org.waveprotocol.wave.model.adt.docbased.DocumentBasedBasicValue$1;

        specialinvoke $r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBasicValue$1: void <init>(java.lang.Object,java.lang.String,org.waveprotocol.wave.model.util.Serializer)>(r1, r2, r3);

        return $r0;
    }

    private void <init>(org.waveprotocol.wave.model.document.MutableDocument, java.lang.Object, org.waveprotocol.wave.model.util.Serializer, java.lang.String)
    {
        org.waveprotocol.wave.model.adt.docbased.DocumentBasedBasicValue r0;
        org.waveprotocol.wave.model.util.CopyOnWriteSet $r1;
        org.waveprotocol.wave.model.util.Serializer r4;
        java.lang.Object r3;
        org.waveprotocol.wave.model.document.MutableDocument r2;
        java.lang.String r5;

        r0 := @this: org.waveprotocol.wave.model.adt.docbased.DocumentBasedBasicValue;

        r2 := @parameter0: org.waveprotocol.wave.model.document.MutableDocument;

        r3 := @parameter1: java.lang.Object;

        r4 := @parameter2: org.waveprotocol.wave.model.util.Serializer;

        r5 := @parameter3: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <org.waveprotocol.wave.model.util.CopyOnWriteSet: org.waveprotocol.wave.model.util.CopyOnWriteSet create()>();

        r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBasicValue: org.waveprotocol.wave.model.util.CopyOnWriteSet listeners> = $r1;

        r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBasicValue: org.waveprotocol.wave.model.document.MutableDocument document> = r2;

        r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBasicValue: java.lang.Object element> = r3;

        r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBasicValue: org.waveprotocol.wave.model.util.Serializer serializer> = r4;

        r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBasicValue: java.lang.String valueAttrName> = r5;

        return;
    }

    public java.lang.Object get()
    {
        org.waveprotocol.wave.model.adt.docbased.DocumentBasedBasicValue r0;
        org.waveprotocol.wave.model.util.Serializer $r5;
        java.lang.Object $r2, $r6;
        java.lang.String $r1, $r4;
        org.waveprotocol.wave.model.document.MutableDocument $r3;

        r0 := @this: org.waveprotocol.wave.model.adt.docbased.DocumentBasedBasicValue;

        $r3 = r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBasicValue: org.waveprotocol.wave.model.document.MutableDocument document>;

        $r2 = r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBasicValue: java.lang.Object element>;

        $r1 = r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBasicValue: java.lang.String valueAttrName>;

        $r4 = interfaceinvoke $r3.<org.waveprotocol.wave.model.document.MutableDocument: java.lang.String getAttribute(java.lang.Object,java.lang.String)>($r2, $r1);

        $r5 = r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBasicValue: org.waveprotocol.wave.model.util.Serializer serializer>;

        $r6 = interfaceinvoke $r5.<org.waveprotocol.wave.model.util.Serializer: java.lang.Object fromString(java.lang.String)>($r4);

        return $r6;
    }

    public void set(java.lang.Object)
    {
        org.waveprotocol.wave.model.adt.docbased.DocumentBasedBasicValue r0;
        org.waveprotocol.wave.model.util.Serializer $r2;
        java.lang.Object r1, $r5;
        java.lang.String $r3, $r4;
        org.waveprotocol.wave.model.document.MutableDocument $r6;

        r0 := @this: org.waveprotocol.wave.model.adt.docbased.DocumentBasedBasicValue;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBasicValue: org.waveprotocol.wave.model.util.Serializer serializer>;

        $r3 = interfaceinvoke $r2.<org.waveprotocol.wave.model.util.Serializer: java.lang.String toString(java.lang.Object)>(r1);

        $r6 = r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBasicValue: org.waveprotocol.wave.model.document.MutableDocument document>;

        $r5 = r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBasicValue: java.lang.Object element>;

        $r4 = r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBasicValue: java.lang.String valueAttrName>;

        interfaceinvoke $r6.<org.waveprotocol.wave.model.document.MutableDocument: void setElementAttribute(java.lang.Object,java.lang.String,java.lang.String)>($r5, $r4, $r3);

        return;
    }

    public void onAttributesChanged(java.lang.Object, java.util.Map, java.util.Map)
    {
        org.waveprotocol.wave.model.adt.docbased.DocumentBasedBasicValue r1;
        java.lang.AssertionError $r15;
        java.util.Map r0, r4;
        java.lang.String $r2, $r5, $r13, $r14;
        boolean $z0, $z1, $z2;
        org.waveprotocol.wave.model.util.Serializer $r7, $r9;
        java.lang.Object $r3, $r6, $r8, $r10, r11, $r12;

        r1 := @this: org.waveprotocol.wave.model.adt.docbased.DocumentBasedBasicValue;

        r11 := @parameter0: java.lang.Object;

        r0 := @parameter1: java.util.Map;

        r4 := @parameter2: java.util.Map;

        $z0 = <org.waveprotocol.wave.model.adt.docbased.DocumentBasedBasicValue: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r12 = r1.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBasicValue: java.lang.Object element>;

        $z2 = virtualinvoke r11.<java.lang.Object: boolean equals(java.lang.Object)>($r12);

        if $z2 != 0 goto label1;

        $r15 = new java.lang.AssertionError;

        specialinvoke $r15.<java.lang.AssertionError: void <init>(java.lang.Object)>("Received event for unrelated element");

        throw $r15;

     label1:
        $r2 = r1.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBasicValue: java.lang.String valueAttrName>;

        $r3 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        $r13 = (java.lang.String) $r3;

        $r5 = r1.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBasicValue: java.lang.String valueAttrName>;

        $r6 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $r14 = (java.lang.String) $r6;

        $r7 = r1.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBasicValue: org.waveprotocol.wave.model.util.Serializer serializer>;

        $r8 = interfaceinvoke $r7.<org.waveprotocol.wave.model.util.Serializer: java.lang.Object fromString(java.lang.String)>($r13);

        $r9 = r1.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBasicValue: org.waveprotocol.wave.model.util.Serializer serializer>;

        $r10 = interfaceinvoke $r9.<org.waveprotocol.wave.model.util.Serializer: java.lang.Object fromString(java.lang.String)>($r14);

        $z1 = staticinvoke <org.waveprotocol.wave.model.util.ValueUtils: boolean notEqual(java.lang.Object,java.lang.Object)>($r8, $r10);

        if $z1 == 0 goto label2;

        specialinvoke r1.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBasicValue: void triggerOnValueChanged(java.lang.Object,java.lang.Object)>($r8, $r10);

     label2:
        return;
    }

    private void triggerOnValueChanged(java.lang.Object, java.lang.Object)
    {
        org.waveprotocol.wave.model.adt.docbased.DocumentBasedBasicValue r0;
        java.util.Iterator $r2;
        org.waveprotocol.wave.model.adt.ObservableBasicValue$Listener r4;
        org.waveprotocol.wave.model.util.CopyOnWriteSet $r1;
        java.lang.Object $r3, r5, r6;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.adt.docbased.DocumentBasedBasicValue;

        r5 := @parameter0: java.lang.Object;

        r6 := @parameter1: java.lang.Object;

        $r1 = r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBasicValue: org.waveprotocol.wave.model.util.CopyOnWriteSet listeners>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.model.util.CopyOnWriteSet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.waveprotocol.wave.model.adt.ObservableBasicValue$Listener) $r3;

        interfaceinvoke r4.<org.waveprotocol.wave.model.adt.ObservableBasicValue$Listener: void onValueChanged(java.lang.Object,java.lang.Object)>(r5, r6);

        goto label1;

     label2:
        return;
    }

    public void addListener(org.waveprotocol.wave.model.adt.ObservableBasicValue$Listener)
    {
        org.waveprotocol.wave.model.adt.docbased.DocumentBasedBasicValue r0;
        org.waveprotocol.wave.model.util.CopyOnWriteSet $r2;
        org.waveprotocol.wave.model.adt.ObservableBasicValue$Listener r1;

        r0 := @this: org.waveprotocol.wave.model.adt.docbased.DocumentBasedBasicValue;

        r1 := @parameter0: org.waveprotocol.wave.model.adt.ObservableBasicValue$Listener;

        $r2 = r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBasicValue: org.waveprotocol.wave.model.util.CopyOnWriteSet listeners>;

        virtualinvoke $r2.<org.waveprotocol.wave.model.util.CopyOnWriteSet: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void removeListener(org.waveprotocol.wave.model.adt.ObservableBasicValue$Listener)
    {
        org.waveprotocol.wave.model.adt.docbased.DocumentBasedBasicValue r0;
        org.waveprotocol.wave.model.util.CopyOnWriteSet $r2;
        org.waveprotocol.wave.model.adt.ObservableBasicValue$Listener r1;

        r0 := @this: org.waveprotocol.wave.model.adt.docbased.DocumentBasedBasicValue;

        r1 := @parameter0: org.waveprotocol.wave.model.adt.ObservableBasicValue$Listener;

        $r2 = r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBasicValue: org.waveprotocol.wave.model.util.CopyOnWriteSet listeners>;

        virtualinvoke $r2.<org.waveprotocol.wave.model.util.CopyOnWriteSet: boolean remove(java.lang.Object)>(r1);

        return;
    }

    public volatile void removeListener(java.lang.Object)
    {
        org.waveprotocol.wave.model.adt.docbased.DocumentBasedBasicValue r0;
        java.lang.Object r1;
        org.waveprotocol.wave.model.adt.ObservableBasicValue$Listener $r2;

        r0 := @this: org.waveprotocol.wave.model.adt.docbased.DocumentBasedBasicValue;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.model.adt.ObservableBasicValue$Listener) r1;

        virtualinvoke r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBasicValue: void removeListener(org.waveprotocol.wave.model.adt.ObservableBasicValue$Listener)>($r2);

        return;
    }

    public volatile void addListener(java.lang.Object)
    {
        org.waveprotocol.wave.model.adt.docbased.DocumentBasedBasicValue r0;
        java.lang.Object r1;
        org.waveprotocol.wave.model.adt.ObservableBasicValue$Listener $r2;

        r0 := @this: org.waveprotocol.wave.model.adt.docbased.DocumentBasedBasicValue;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.model.adt.ObservableBasicValue$Listener) r1;

        virtualinvoke r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBasicValue: void addListener(org.waveprotocol.wave.model.adt.ObservableBasicValue$Listener)>($r2);

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/waveprotocol/wave/model/adt/docbased/DocumentBasedBasicValue;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.waveprotocol.wave.model.adt.docbased.DocumentBasedBasicValue: boolean $assertionsDisabled> = $z1;

        return;
    }
}
