class org.apache.jena.riot.out.NodeToLabel$AllocatorInternalRaw extends org.apache.jena.riot.out.NodeToLabel$AllocatorBase
{

    private void <init>()
    {
        org.apache.jena.riot.out.NodeToLabel$AllocatorInternalRaw r0;

        r0 := @this: org.apache.jena.riot.out.NodeToLabel$AllocatorInternalRaw;

        specialinvoke r0.<org.apache.jena.riot.out.NodeToLabel$AllocatorBase: void <init>(org.apache.jena.riot.out.NodeToLabel$1)>(null);

        return;
    }

    protected java.lang.String labelForBlank(com.hp.hpl.jena.graph.Node)
    {
        java.lang.StringBuilder $r0, $r1, $r4;
        org.apache.jena.riot.out.NodeToLabel$AllocatorInternalRaw r6;
        com.hp.hpl.jena.graph.Node r2;
        java.lang.String $r3, $r5;

        r6 := @this: org.apache.jena.riot.out.NodeToLabel$AllocatorInternalRaw;

        r2 := @parameter0: com.hp.hpl.jena.graph.Node;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_:");

        $r3 = virtualinvoke r2.<com.hp.hpl.jena.graph.Node: java.lang.String getBlankNodeLabel()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    void <init>(org.apache.jena.riot.out.NodeToLabel$1)
    {
        org.apache.jena.riot.out.NodeToLabel$AllocatorInternalRaw r0;
        org.apache.jena.riot.out.NodeToLabel$1 r1;

        r0 := @this: org.apache.jena.riot.out.NodeToLabel$AllocatorInternalRaw;

        r1 := @parameter0: org.apache.jena.riot.out.NodeToLabel$1;

        specialinvoke r0.<org.apache.jena.riot.out.NodeToLabel$AllocatorInternalRaw: void <init>()>();

        return;
    }
}
