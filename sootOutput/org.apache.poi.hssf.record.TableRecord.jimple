public final class org.apache.poi.hssf.record.TableRecord extends org.apache.poi.hssf.record.SharedValueRecordBase
{
    public static final short sid;
    private static final org.apache.poi.util.BitField alwaysCalc;
    private static final org.apache.poi.util.BitField calcOnOpen;
    private static final org.apache.poi.util.BitField rowOrColInpCell;
    private static final org.apache.poi.util.BitField oneOrTwoVar;
    private static final org.apache.poi.util.BitField rowDeleted;
    private static final org.apache.poi.util.BitField colDeleted;
    private int field_5_flags;
    private int field_6_res;
    private int field_7_rowInputRow;
    private int field_8_colInputRow;
    private int field_9_rowInputCol;
    private int field_10_colInputCol;

    public void <init>(org.apache.poi.hssf.record.RecordInputStream)
    {
        short $s2, $s3, $s4, $s5;
        org.apache.poi.hssf.record.TableRecord r0;
        org.apache.poi.hssf.record.RecordInputStream r1;
        byte $b0, $b1;
        int $i6, $i7, $i8, $i9, $i10, $i11;

        r0 := @this: org.apache.poi.hssf.record.TableRecord;

        r1 := @parameter0: org.apache.poi.hssf.record.RecordInputStream;

        specialinvoke r0.<org.apache.poi.hssf.record.SharedValueRecordBase: void <init>(org.apache.poi.util.LittleEndianInput)>(r1);

        $b0 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: byte readByte()>();

        $i6 = (int) $b0;

        r0.<org.apache.poi.hssf.record.TableRecord: int field_5_flags> = $i6;

        $b1 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: byte readByte()>();

        $i7 = (int) $b1;

        r0.<org.apache.poi.hssf.record.TableRecord: int field_6_res> = $i7;

        $s2 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: short readShort()>();

        $i8 = (int) $s2;

        r0.<org.apache.poi.hssf.record.TableRecord: int field_7_rowInputRow> = $i8;

        $s3 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: short readShort()>();

        $i9 = (int) $s3;

        r0.<org.apache.poi.hssf.record.TableRecord: int field_8_colInputRow> = $i9;

        $s4 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: short readShort()>();

        $i10 = (int) $s4;

        r0.<org.apache.poi.hssf.record.TableRecord: int field_9_rowInputCol> = $i10;

        $s5 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: short readShort()>();

        $i11 = (int) $s5;

        r0.<org.apache.poi.hssf.record.TableRecord: int field_10_colInputCol> = $i11;

        return;
    }

    public void <init>(org.apache.poi.hssf.util.CellRangeAddress8Bit)
    {
        org.apache.poi.hssf.util.CellRangeAddress8Bit r1;
        org.apache.poi.hssf.record.TableRecord r0;

        r0 := @this: org.apache.poi.hssf.record.TableRecord;

        r1 := @parameter0: org.apache.poi.hssf.util.CellRangeAddress8Bit;

        specialinvoke r0.<org.apache.poi.hssf.record.SharedValueRecordBase: void <init>(org.apache.poi.hssf.util.CellRangeAddress8Bit)>(r1);

        r0.<org.apache.poi.hssf.record.TableRecord: int field_6_res> = 0;

        return;
    }

    public int getFlags()
    {
        int $i0;
        org.apache.poi.hssf.record.TableRecord r0;

        r0 := @this: org.apache.poi.hssf.record.TableRecord;

        $i0 = r0.<org.apache.poi.hssf.record.TableRecord: int field_5_flags>;

        return $i0;
    }

    public void setFlags(int)
    {
        int i0;
        org.apache.poi.hssf.record.TableRecord r0;

        r0 := @this: org.apache.poi.hssf.record.TableRecord;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hssf.record.TableRecord: int field_5_flags> = i0;

        return;
    }

    public int getRowInputRow()
    {
        int $i0;
        org.apache.poi.hssf.record.TableRecord r0;

        r0 := @this: org.apache.poi.hssf.record.TableRecord;

        $i0 = r0.<org.apache.poi.hssf.record.TableRecord: int field_7_rowInputRow>;

        return $i0;
    }

    public void setRowInputRow(int)
    {
        int i0;
        org.apache.poi.hssf.record.TableRecord r0;

        r0 := @this: org.apache.poi.hssf.record.TableRecord;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hssf.record.TableRecord: int field_7_rowInputRow> = i0;

        return;
    }

    public int getColInputRow()
    {
        int $i0;
        org.apache.poi.hssf.record.TableRecord r0;

        r0 := @this: org.apache.poi.hssf.record.TableRecord;

        $i0 = r0.<org.apache.poi.hssf.record.TableRecord: int field_8_colInputRow>;

        return $i0;
    }

    public void setColInputRow(int)
    {
        int i0;
        org.apache.poi.hssf.record.TableRecord r0;

        r0 := @this: org.apache.poi.hssf.record.TableRecord;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hssf.record.TableRecord: int field_8_colInputRow> = i0;

        return;
    }

    public int getRowInputCol()
    {
        int $i0;
        org.apache.poi.hssf.record.TableRecord r0;

        r0 := @this: org.apache.poi.hssf.record.TableRecord;

        $i0 = r0.<org.apache.poi.hssf.record.TableRecord: int field_9_rowInputCol>;

        return $i0;
    }

    public void setRowInputCol(int)
    {
        int i0;
        org.apache.poi.hssf.record.TableRecord r0;

        r0 := @this: org.apache.poi.hssf.record.TableRecord;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hssf.record.TableRecord: int field_9_rowInputCol> = i0;

        return;
    }

    public int getColInputCol()
    {
        int $i0;
        org.apache.poi.hssf.record.TableRecord r0;

        r0 := @this: org.apache.poi.hssf.record.TableRecord;

        $i0 = r0.<org.apache.poi.hssf.record.TableRecord: int field_10_colInputCol>;

        return $i0;
    }

    public void setColInputCol(int)
    {
        int i0;
        org.apache.poi.hssf.record.TableRecord r0;

        r0 := @this: org.apache.poi.hssf.record.TableRecord;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hssf.record.TableRecord: int field_10_colInputCol> = i0;

        return;
    }

    public boolean isAlwaysCalc()
    {
        org.apache.poi.util.BitField $r1;
        org.apache.poi.hssf.record.TableRecord r0;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.poi.hssf.record.TableRecord;

        $r1 = <org.apache.poi.hssf.record.TableRecord: org.apache.poi.util.BitField alwaysCalc>;

        $i0 = r0.<org.apache.poi.hssf.record.TableRecord: int field_5_flags>;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i0);

        return $z0;
    }

    public void setAlwaysCalc(boolean)
    {
        org.apache.poi.util.BitField $r1;
        org.apache.poi.hssf.record.TableRecord r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: org.apache.poi.hssf.record.TableRecord;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hssf.record.TableRecord: org.apache.poi.util.BitField alwaysCalc>;

        $i0 = r0.<org.apache.poi.hssf.record.TableRecord: int field_5_flags>;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i0, z0);

        r0.<org.apache.poi.hssf.record.TableRecord: int field_5_flags> = $i1;

        return;
    }

    public boolean isRowOrColInpCell()
    {
        org.apache.poi.util.BitField $r1;
        org.apache.poi.hssf.record.TableRecord r0;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.poi.hssf.record.TableRecord;

        $r1 = <org.apache.poi.hssf.record.TableRecord: org.apache.poi.util.BitField rowOrColInpCell>;

        $i0 = r0.<org.apache.poi.hssf.record.TableRecord: int field_5_flags>;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i0);

        return $z0;
    }

    public void setRowOrColInpCell(boolean)
    {
        org.apache.poi.util.BitField $r1;
        org.apache.poi.hssf.record.TableRecord r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: org.apache.poi.hssf.record.TableRecord;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hssf.record.TableRecord: org.apache.poi.util.BitField rowOrColInpCell>;

        $i0 = r0.<org.apache.poi.hssf.record.TableRecord: int field_5_flags>;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i0, z0);

        r0.<org.apache.poi.hssf.record.TableRecord: int field_5_flags> = $i1;

        return;
    }

    public boolean isOneNotTwoVar()
    {
        org.apache.poi.util.BitField $r1;
        org.apache.poi.hssf.record.TableRecord r0;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.poi.hssf.record.TableRecord;

        $r1 = <org.apache.poi.hssf.record.TableRecord: org.apache.poi.util.BitField oneOrTwoVar>;

        $i0 = r0.<org.apache.poi.hssf.record.TableRecord: int field_5_flags>;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i0);

        return $z0;
    }

    public void setOneNotTwoVar(boolean)
    {
        org.apache.poi.util.BitField $r1;
        org.apache.poi.hssf.record.TableRecord r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: org.apache.poi.hssf.record.TableRecord;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hssf.record.TableRecord: org.apache.poi.util.BitField oneOrTwoVar>;

        $i0 = r0.<org.apache.poi.hssf.record.TableRecord: int field_5_flags>;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i0, z0);

        r0.<org.apache.poi.hssf.record.TableRecord: int field_5_flags> = $i1;

        return;
    }

    public boolean isColDeleted()
    {
        org.apache.poi.util.BitField $r1;
        org.apache.poi.hssf.record.TableRecord r0;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.poi.hssf.record.TableRecord;

        $r1 = <org.apache.poi.hssf.record.TableRecord: org.apache.poi.util.BitField colDeleted>;

        $i0 = r0.<org.apache.poi.hssf.record.TableRecord: int field_5_flags>;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i0);

        return $z0;
    }

    public void setColDeleted(boolean)
    {
        org.apache.poi.util.BitField $r1;
        org.apache.poi.hssf.record.TableRecord r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: org.apache.poi.hssf.record.TableRecord;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hssf.record.TableRecord: org.apache.poi.util.BitField colDeleted>;

        $i0 = r0.<org.apache.poi.hssf.record.TableRecord: int field_5_flags>;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i0, z0);

        r0.<org.apache.poi.hssf.record.TableRecord: int field_5_flags> = $i1;

        return;
    }

    public boolean isRowDeleted()
    {
        org.apache.poi.util.BitField $r1;
        org.apache.poi.hssf.record.TableRecord r0;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.poi.hssf.record.TableRecord;

        $r1 = <org.apache.poi.hssf.record.TableRecord: org.apache.poi.util.BitField rowDeleted>;

        $i0 = r0.<org.apache.poi.hssf.record.TableRecord: int field_5_flags>;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i0);

        return $z0;
    }

    public void setRowDeleted(boolean)
    {
        org.apache.poi.util.BitField $r1;
        org.apache.poi.hssf.record.TableRecord r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: org.apache.poi.hssf.record.TableRecord;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hssf.record.TableRecord: org.apache.poi.util.BitField rowDeleted>;

        $i0 = r0.<org.apache.poi.hssf.record.TableRecord: int field_5_flags>;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i0, z0);

        r0.<org.apache.poi.hssf.record.TableRecord: int field_5_flags> = $i1;

        return;
    }

    public short getSid()
    {
        org.apache.poi.hssf.record.TableRecord r0;

        r0 := @this: org.apache.poi.hssf.record.TableRecord;

        return 566;
    }

    protected int getExtraDataSize()
    {
        org.apache.poi.hssf.record.TableRecord r0;

        r0 := @this: org.apache.poi.hssf.record.TableRecord;

        return 10;
    }

    protected void serializeExtraData(org.apache.poi.util.LittleEndianOutput)
    {
        org.apache.poi.hssf.record.TableRecord r1;
        org.apache.poi.util.LittleEndianOutput r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r1 := @this: org.apache.poi.hssf.record.TableRecord;

        r0 := @parameter0: org.apache.poi.util.LittleEndianOutput;

        $i0 = r1.<org.apache.poi.hssf.record.TableRecord: int field_5_flags>;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeByte(int)>($i0);

        $i1 = r1.<org.apache.poi.hssf.record.TableRecord: int field_6_res>;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeByte(int)>($i1);

        $i2 = r1.<org.apache.poi.hssf.record.TableRecord: int field_7_rowInputRow>;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeShort(int)>($i2);

        $i3 = r1.<org.apache.poi.hssf.record.TableRecord: int field_8_colInputRow>;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeShort(int)>($i3);

        $i4 = r1.<org.apache.poi.hssf.record.TableRecord: int field_9_rowInputCol>;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeShort(int)>($i4);

        $i5 = r1.<org.apache.poi.hssf.record.TableRecord: int field_10_colInputCol>;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeShort(int)>($i5);

        return;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuffer $r0, $r1, $r5, $r6, $r8, $r9, $r10, $r11, $r13, $r16, $r18, $r19, $r21;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r4, $r17, $r20, $r22;
        boolean $z0;
        org.apache.poi.hssf.util.CellRangeAddress8Bit $r3;
        org.apache.poi.hssf.util.CellReference $r14, $r15;
        org.apache.poi.hssf.record.TableRecord r2;
        char[] $r7, $r12;

        r2 := @this: org.apache.poi.hssf.record.TableRecord;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[TABLE]\n");

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    .range    = ");

        $r3 = virtualinvoke r2.<org.apache.poi.hssf.record.TableRecord: org.apache.poi.hssf.util.CellRangeAddress8Bit getRange()>();

        $r4 = virtualinvoke $r3.<org.apache.poi.hssf.util.CellRangeAddress8Bit: java.lang.String toString()>();

        $r5 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r6 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    .flags    = ");

        $i0 = r2.<org.apache.poi.hssf.record.TableRecord: int field_5_flags>;

        $r7 = staticinvoke <org.apache.poi.util.HexDump: char[] byteToHex(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r7);

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r9 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    .alwaysClc= ");

        $z0 = virtualinvoke r2.<org.apache.poi.hssf.record.TableRecord: boolean isAlwaysCalc()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z0);

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r11 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    .reserved = ");

        $i1 = r2.<org.apache.poi.hssf.record.TableRecord: int field_6_res>;

        $r12 = staticinvoke <org.apache.poi.util.HexDump: char[] intToHex(int)>($i1);

        $r13 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r12);

        virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $i3 = r2.<org.apache.poi.hssf.record.TableRecord: int field_7_rowInputRow>;

        $i2 = r2.<org.apache.poi.hssf.record.TableRecord: int field_8_colInputRow>;

        $r14 = staticinvoke <org.apache.poi.hssf.record.TableRecord: org.apache.poi.hssf.util.CellReference cr(int,int)>($i3, $i2);

        $i5 = r2.<org.apache.poi.hssf.record.TableRecord: int field_9_rowInputCol>;

        $i4 = r2.<org.apache.poi.hssf.record.TableRecord: int field_10_colInputCol>;

        $r15 = staticinvoke <org.apache.poi.hssf.record.TableRecord: org.apache.poi.hssf.util.CellReference cr(int,int)>($i5, $i4);

        $r16 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    .rowInput = ");

        $r17 = virtualinvoke $r14.<org.apache.poi.hssf.util.CellReference: java.lang.String formatAsString()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r19 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    .colInput = ");

        $r20 = virtualinvoke $r15.<org.apache.poi.hssf.util.CellReference: java.lang.String formatAsString()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r20);

        virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[/TABLE]\n");

        $r22 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r22;
    }

    private static org.apache.poi.hssf.util.CellReference cr(int, int)
    {
        org.apache.poi.hssf.util.CellReference $r1;
        int i0, i1, $i2, $i3, i4, $i6;
        boolean z0, $z1, $z2;

        i4 := @parameter0: int;

        i0 := @parameter1: int;

        i1 = i0 & 255;

        $i6 = (int) 32768;

        $i2 = i0 & $i6;

        if $i2 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

        $i3 = i0 & 16384;

        if $i3 != 0 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        $r1 = new org.apache.poi.hssf.util.CellReference;

        specialinvoke $r1.<org.apache.poi.hssf.util.CellReference: void <init>(int,int,boolean,boolean)>(i4, i1, z0, $z2);

        return $r1;
    }

    static void <clinit>()
    {
        org.apache.poi.util.BitField $r0, $r1, $r2, $r3, $r4, $r5;

        <org.apache.poi.hssf.record.TableRecord: short sid> = 566;

        $r0 = staticinvoke <org.apache.poi.util.BitFieldFactory: org.apache.poi.util.BitField getInstance(int)>(1);

        <org.apache.poi.hssf.record.TableRecord: org.apache.poi.util.BitField alwaysCalc> = $r0;

        $r1 = staticinvoke <org.apache.poi.util.BitFieldFactory: org.apache.poi.util.BitField getInstance(int)>(2);

        <org.apache.poi.hssf.record.TableRecord: org.apache.poi.util.BitField calcOnOpen> = $r1;

        $r2 = staticinvoke <org.apache.poi.util.BitFieldFactory: org.apache.poi.util.BitField getInstance(int)>(4);

        <org.apache.poi.hssf.record.TableRecord: org.apache.poi.util.BitField rowOrColInpCell> = $r2;

        $r3 = staticinvoke <org.apache.poi.util.BitFieldFactory: org.apache.poi.util.BitField getInstance(int)>(8);

        <org.apache.poi.hssf.record.TableRecord: org.apache.poi.util.BitField oneOrTwoVar> = $r3;

        $r4 = staticinvoke <org.apache.poi.util.BitFieldFactory: org.apache.poi.util.BitField getInstance(int)>(16);

        <org.apache.poi.hssf.record.TableRecord: org.apache.poi.util.BitField rowDeleted> = $r4;

        $r5 = staticinvoke <org.apache.poi.util.BitFieldFactory: org.apache.poi.util.BitField getInstance(int)>(32);

        <org.apache.poi.hssf.record.TableRecord: org.apache.poi.util.BitField colDeleted> = $r5;

        return;
    }
}
