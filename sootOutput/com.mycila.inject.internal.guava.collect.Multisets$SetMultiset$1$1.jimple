class com.mycila.inject.internal.guava.collect.Multisets$SetMultiset$1$1 extends java.lang.Object implements com.mycila.inject.internal.guava.base.Function
{
    final com.mycila.inject.internal.guava.collect.Multisets$SetMultiset$1 this$1;

    void <init>(com.mycila.inject.internal.guava.collect.Multisets$SetMultiset$1)
    {
        com.mycila.inject.internal.guava.collect.Multisets$SetMultiset$1$1 r0;
        com.mycila.inject.internal.guava.collect.Multisets$SetMultiset$1 r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.Multisets$SetMultiset$1$1;

        r1 := @parameter0: com.mycila.inject.internal.guava.collect.Multisets$SetMultiset$1;

        r0.<com.mycila.inject.internal.guava.collect.Multisets$SetMultiset$1$1: com.mycila.inject.internal.guava.collect.Multisets$SetMultiset$1 this$1> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.mycila.inject.internal.guava.collect.Multiset$Entry apply(java.lang.Object)
    {
        java.lang.Object r0;
        com.mycila.inject.internal.guava.collect.Multisets$SetMultiset$1$1 r2;
        com.mycila.inject.internal.guava.collect.Multiset$Entry $r1;

        r2 := @this: com.mycila.inject.internal.guava.collect.Multisets$SetMultiset$1$1;

        r0 := @parameter0: java.lang.Object;

        $r1 = staticinvoke <com.mycila.inject.internal.guava.collect.Multisets: com.mycila.inject.internal.guava.collect.Multiset$Entry immutableEntry(java.lang.Object,int)>(r0, 1);

        return $r1;
    }

    public volatile java.lang.Object apply(java.lang.Object)
    {
        java.lang.Object r1;
        com.mycila.inject.internal.guava.collect.Multisets$SetMultiset$1$1 r0;
        com.mycila.inject.internal.guava.collect.Multiset$Entry $r2;

        r0 := @this: com.mycila.inject.internal.guava.collect.Multisets$SetMultiset$1$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.Multisets$SetMultiset$1$1: com.mycila.inject.internal.guava.collect.Multiset$Entry apply(java.lang.Object)>(r1);

        return $r2;
    }
}
