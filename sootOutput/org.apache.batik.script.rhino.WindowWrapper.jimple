public class org.apache.batik.script.rhino.WindowWrapper extends org.mozilla.javascript.ImporterTopLevel
{
    private static final java.lang.Object[] EMPTY_ARGUMENTS;
    protected org.apache.batik.script.rhino.RhinoInterpreter interpreter;
    protected org.apache.batik.script.Window window;
    static java.lang.Class class$org$apache$batik$script$rhino$WindowWrapper;
    static java.lang.Class class$java$lang$String;
    static java.lang.Class class$java$lang$Object;

    public void <init>(org.mozilla.javascript.Context)
    {
        org.apache.batik.script.rhino.WindowWrapper r0;
        org.mozilla.javascript.Context r1;
        java.lang.String[] $r2;
        java.lang.Class $r3, $r4;

        r0 := @this: org.apache.batik.script.rhino.WindowWrapper;

        r1 := @parameter0: org.mozilla.javascript.Context;

        specialinvoke r0.<org.mozilla.javascript.ImporterTopLevel: void <init>(org.mozilla.javascript.Context)>(r1);

        $r2 = newarray (java.lang.String)[10];

        $r2[0] = "setInterval";

        $r2[1] = "setTimeout";

        $r2[2] = "clearInterval";

        $r2[3] = "clearTimeout";

        $r2[4] = "parseXML";

        $r2[5] = "getURL";

        $r2[6] = "postURL";

        $r2[7] = "alert";

        $r2[8] = "confirm";

        $r2[9] = "prompt";

        $r3 = <org.apache.batik.script.rhino.WindowWrapper: java.lang.Class class$org$apache$batik$script$rhino$WindowWrapper>;

        if $r3 != null goto label1;

        $r4 = staticinvoke <org.apache.batik.script.rhino.WindowWrapper: java.lang.Class class$(java.lang.String)>("org.apache.batik.script.rhino.WindowWrapper");

        <org.apache.batik.script.rhino.WindowWrapper: java.lang.Class class$org$apache$batik$script$rhino$WindowWrapper> = $r4;

        goto label2;

     label1:
        $r4 = <org.apache.batik.script.rhino.WindowWrapper: java.lang.Class class$org$apache$batik$script$rhino$WindowWrapper>;

     label2:
        virtualinvoke r0.<org.mozilla.javascript.ScriptableObject: void defineFunctionProperties(java.lang.String[],java.lang.Class,int)>($r2, $r4, 2);

        return;
    }

    public java.lang.String getClassName()
    {
        org.apache.batik.script.rhino.WindowWrapper r0;

        r0 := @this: org.apache.batik.script.rhino.WindowWrapper;

        return "Window";
    }

    public java.lang.String toString()
    {
        org.apache.batik.script.rhino.WindowWrapper r0;

        r0 := @this: org.apache.batik.script.rhino.WindowWrapper;

        return "[object Window]";
    }

    public static java.lang.Object setInterval(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, java.lang.Object[], org.mozilla.javascript.Function)
    {
        java.lang.Object[] r0, $r18;
        org.apache.batik.script.rhino.WindowWrapper$FunctionWrapper $r16;
        long $l1;
        org.apache.batik.script.Window r3;
        java.lang.Long $r7;
        int i0;
        org.mozilla.javascript.Function $r19, r24;
        java.lang.String $r14;
        boolean $z0;
        org.mozilla.javascript.Context r23;
        org.mozilla.javascript.EvaluatorException $r22;
        org.apache.batik.script.Interpreter $r15;
        org.apache.batik.script.rhino.RhinoInterpreter r25;
        org.apache.batik.script.rhino.WindowWrapper r2;
        org.mozilla.javascript.Scriptable r1, $r13, $r21;
        java.lang.Class $r4, $r9, $r26;
        java.lang.Object $r5, $r6, $r8, $r10, $r11, $r12, $r17, $r20;

        r23 := @parameter0: org.mozilla.javascript.Context;

        r1 := @parameter1: org.mozilla.javascript.Scriptable;

        r0 := @parameter2: java.lang.Object[];

        r24 := @parameter3: org.mozilla.javascript.Function;

        i0 = lengthof r0;

        r2 = (org.apache.batik.script.rhino.WindowWrapper) r1;

        r3 = r2.<org.apache.batik.script.rhino.WindowWrapper: org.apache.batik.script.Window window>;

        if i0 >= 2 goto label1;

        $r22 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.EvaluatorException reportRuntimeError(java.lang.String)>("invalid argument count");

        throw $r22;

     label1:
        $r5 = r0[1];

        $r4 = <java.lang.Long: java.lang.Class TYPE>;

        $r6 = staticinvoke <org.mozilla.javascript.Context: java.lang.Object jsToJava(java.lang.Object,java.lang.Class)>($r5, $r4);

        $r7 = (java.lang.Long) $r6;

        $l1 = virtualinvoke $r7.<java.lang.Long: long longValue()>();

        $r8 = r0[0];

        $z0 = $r8 instanceof org.mozilla.javascript.Function;

        if $z0 == 0 goto label2;

        $r15 = interfaceinvoke r3.<org.apache.batik.script.Window: org.apache.batik.script.Interpreter getInterpreter()>();

        r25 = (org.apache.batik.script.rhino.RhinoInterpreter) $r15;

        $r16 = new org.apache.batik.script.rhino.WindowWrapper$FunctionWrapper;

        $r17 = r0[0];

        $r19 = (org.mozilla.javascript.Function) $r17;

        $r18 = <org.apache.batik.script.rhino.WindowWrapper: java.lang.Object[] EMPTY_ARGUMENTS>;

        specialinvoke $r16.<org.apache.batik.script.rhino.WindowWrapper$FunctionWrapper: void <init>(org.apache.batik.script.rhino.RhinoInterpreter,org.mozilla.javascript.Function,java.lang.Object[])>(r25, $r19, $r18);

        $r20 = interfaceinvoke r3.<org.apache.batik.script.Window: java.lang.Object setInterval(java.lang.Runnable,long)>($r16, $l1);

        $r21 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.Scriptable toObject(java.lang.Object,org.mozilla.javascript.Scriptable)>($r20, r1);

        return $r21;

     label2:
        $r10 = r0[0];

        $r9 = <org.apache.batik.script.rhino.WindowWrapper: java.lang.Class class$java$lang$String>;

        if $r9 != null goto label3;

        $r26 = staticinvoke <org.apache.batik.script.rhino.WindowWrapper: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.apache.batik.script.rhino.WindowWrapper: java.lang.Class class$java$lang$String> = $r26;

        goto label4;

     label3:
        $r26 = <org.apache.batik.script.rhino.WindowWrapper: java.lang.Class class$java$lang$String>;

     label4:
        $r11 = staticinvoke <org.mozilla.javascript.Context: java.lang.Object jsToJava(java.lang.Object,java.lang.Class)>($r10, $r26);

        $r14 = (java.lang.String) $r11;

        $r12 = interfaceinvoke r3.<org.apache.batik.script.Window: java.lang.Object setInterval(java.lang.String,long)>($r14, $l1);

        $r13 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.Scriptable toObject(java.lang.Object,org.mozilla.javascript.Scriptable)>($r12, r1);

        return $r13;
    }

    public static java.lang.Object setTimeout(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, java.lang.Object[], org.mozilla.javascript.Function)
    {
        java.lang.Object[] r0, $r18;
        org.apache.batik.script.rhino.WindowWrapper$FunctionWrapper $r16;
        long $l1;
        org.apache.batik.script.Window r3;
        java.lang.Long $r7;
        int i0;
        org.mozilla.javascript.Function $r19, r24;
        java.lang.String $r14;
        boolean $z0;
        org.mozilla.javascript.Context r23;
        org.mozilla.javascript.EvaluatorException $r22;
        org.apache.batik.script.Interpreter $r15;
        org.apache.batik.script.rhino.RhinoInterpreter r25;
        org.apache.batik.script.rhino.WindowWrapper r2;
        org.mozilla.javascript.Scriptable r1, $r13, $r21;
        java.lang.Class $r4, $r9, $r26;
        java.lang.Object $r5, $r6, $r8, $r10, $r11, $r12, $r17, $r20;

        r23 := @parameter0: org.mozilla.javascript.Context;

        r1 := @parameter1: org.mozilla.javascript.Scriptable;

        r0 := @parameter2: java.lang.Object[];

        r24 := @parameter3: org.mozilla.javascript.Function;

        i0 = lengthof r0;

        r2 = (org.apache.batik.script.rhino.WindowWrapper) r1;

        r3 = r2.<org.apache.batik.script.rhino.WindowWrapper: org.apache.batik.script.Window window>;

        if i0 >= 2 goto label1;

        $r22 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.EvaluatorException reportRuntimeError(java.lang.String)>("invalid argument count");

        throw $r22;

     label1:
        $r5 = r0[1];

        $r4 = <java.lang.Long: java.lang.Class TYPE>;

        $r6 = staticinvoke <org.mozilla.javascript.Context: java.lang.Object jsToJava(java.lang.Object,java.lang.Class)>($r5, $r4);

        $r7 = (java.lang.Long) $r6;

        $l1 = virtualinvoke $r7.<java.lang.Long: long longValue()>();

        $r8 = r0[0];

        $z0 = $r8 instanceof org.mozilla.javascript.Function;

        if $z0 == 0 goto label2;

        $r15 = interfaceinvoke r3.<org.apache.batik.script.Window: org.apache.batik.script.Interpreter getInterpreter()>();

        r25 = (org.apache.batik.script.rhino.RhinoInterpreter) $r15;

        $r16 = new org.apache.batik.script.rhino.WindowWrapper$FunctionWrapper;

        $r17 = r0[0];

        $r19 = (org.mozilla.javascript.Function) $r17;

        $r18 = <org.apache.batik.script.rhino.WindowWrapper: java.lang.Object[] EMPTY_ARGUMENTS>;

        specialinvoke $r16.<org.apache.batik.script.rhino.WindowWrapper$FunctionWrapper: void <init>(org.apache.batik.script.rhino.RhinoInterpreter,org.mozilla.javascript.Function,java.lang.Object[])>(r25, $r19, $r18);

        $r20 = interfaceinvoke r3.<org.apache.batik.script.Window: java.lang.Object setTimeout(java.lang.Runnable,long)>($r16, $l1);

        $r21 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.Scriptable toObject(java.lang.Object,org.mozilla.javascript.Scriptable)>($r20, r1);

        return $r21;

     label2:
        $r10 = r0[0];

        $r9 = <org.apache.batik.script.rhino.WindowWrapper: java.lang.Class class$java$lang$String>;

        if $r9 != null goto label3;

        $r26 = staticinvoke <org.apache.batik.script.rhino.WindowWrapper: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.apache.batik.script.rhino.WindowWrapper: java.lang.Class class$java$lang$String> = $r26;

        goto label4;

     label3:
        $r26 = <org.apache.batik.script.rhino.WindowWrapper: java.lang.Class class$java$lang$String>;

     label4:
        $r11 = staticinvoke <org.mozilla.javascript.Context: java.lang.Object jsToJava(java.lang.Object,java.lang.Class)>($r10, $r26);

        $r14 = (java.lang.String) $r11;

        $r12 = interfaceinvoke r3.<org.apache.batik.script.Window: java.lang.Object setTimeout(java.lang.String,long)>($r14, $l1);

        $r13 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.Scriptable toObject(java.lang.Object,org.mozilla.javascript.Scriptable)>($r12, r1);

        return $r13;
    }

    public static void clearInterval(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, java.lang.Object[], org.mozilla.javascript.Function)
    {
        java.lang.Object[] r0;
        org.mozilla.javascript.Context r7;
        org.apache.batik.script.Window r3;
        org.apache.batik.script.rhino.WindowWrapper r2;
        org.mozilla.javascript.Scriptable r1;
        int i0;
        java.lang.Class $r4, $r9;
        java.lang.Object $r5, $r6;
        org.mozilla.javascript.Function r8;

        r7 := @parameter0: org.mozilla.javascript.Context;

        r1 := @parameter1: org.mozilla.javascript.Scriptable;

        r0 := @parameter2: java.lang.Object[];

        r8 := @parameter3: org.mozilla.javascript.Function;

        i0 = lengthof r0;

        r2 = (org.apache.batik.script.rhino.WindowWrapper) r1;

        r3 = r2.<org.apache.batik.script.rhino.WindowWrapper: org.apache.batik.script.Window window>;

        if i0 < 1 goto label3;

        $r5 = r0[0];

        $r4 = <org.apache.batik.script.rhino.WindowWrapper: java.lang.Class class$java$lang$Object>;

        if $r4 != null goto label1;

        $r9 = staticinvoke <org.apache.batik.script.rhino.WindowWrapper: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        <org.apache.batik.script.rhino.WindowWrapper: java.lang.Class class$java$lang$Object> = $r9;

        goto label2;

     label1:
        $r9 = <org.apache.batik.script.rhino.WindowWrapper: java.lang.Class class$java$lang$Object>;

     label2:
        $r6 = staticinvoke <org.mozilla.javascript.Context: java.lang.Object jsToJava(java.lang.Object,java.lang.Class)>($r5, $r9);

        interfaceinvoke r3.<org.apache.batik.script.Window: void clearInterval(java.lang.Object)>($r6);

     label3:
        return;
    }

    public static void clearTimeout(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, java.lang.Object[], org.mozilla.javascript.Function)
    {
        java.lang.Object[] r0;
        org.mozilla.javascript.Context r7;
        org.apache.batik.script.Window r3;
        org.apache.batik.script.rhino.WindowWrapper r2;
        org.mozilla.javascript.Scriptable r1;
        int i0;
        java.lang.Class $r4, $r9;
        java.lang.Object $r5, $r6;
        org.mozilla.javascript.Function r8;

        r7 := @parameter0: org.mozilla.javascript.Context;

        r1 := @parameter1: org.mozilla.javascript.Scriptable;

        r0 := @parameter2: java.lang.Object[];

        r8 := @parameter3: org.mozilla.javascript.Function;

        i0 = lengthof r0;

        r2 = (org.apache.batik.script.rhino.WindowWrapper) r1;

        r3 = r2.<org.apache.batik.script.rhino.WindowWrapper: org.apache.batik.script.Window window>;

        if i0 < 1 goto label3;

        $r5 = r0[0];

        $r4 = <org.apache.batik.script.rhino.WindowWrapper: java.lang.Class class$java$lang$Object>;

        if $r4 != null goto label1;

        $r9 = staticinvoke <org.apache.batik.script.rhino.WindowWrapper: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        <org.apache.batik.script.rhino.WindowWrapper: java.lang.Class class$java$lang$Object> = $r9;

        goto label2;

     label1:
        $r9 = <org.apache.batik.script.rhino.WindowWrapper: java.lang.Class class$java$lang$Object>;

     label2:
        $r6 = staticinvoke <org.mozilla.javascript.Context: java.lang.Object jsToJava(java.lang.Object,java.lang.Class)>($r5, $r9);

        interfaceinvoke r3.<org.apache.batik.script.Window: void clearTimeout(java.lang.Object)>($r6);

     label3:
        return;
    }

    public static java.lang.Object parseXML(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, java.lang.Object[], org.mozilla.javascript.Function)
    {
        java.security.AccessControlContext $r6;
        java.lang.Object[] r0;
        org.apache.batik.script.rhino.WindowWrapper$1 $r7;
        org.mozilla.javascript.Context r11;
        org.mozilla.javascript.EvaluatorException $r10;
        org.apache.batik.script.Interpreter $r4;
        org.apache.batik.script.rhino.RhinoInterpreter $r5;
        org.apache.batik.script.Window r3;
        org.apache.batik.script.rhino.WindowWrapper r2;
        org.mozilla.javascript.Scriptable r1, $r9;
        int i0;
        java.lang.Object $r8;
        org.mozilla.javascript.Function r12;

        r11 := @parameter0: org.mozilla.javascript.Context;

        r1 := @parameter1: org.mozilla.javascript.Scriptable;

        r0 := @parameter2: java.lang.Object[];

        r12 := @parameter3: org.mozilla.javascript.Function;

        i0 = lengthof r0;

        r2 = (org.apache.batik.script.rhino.WindowWrapper) r1;

        r3 = r2.<org.apache.batik.script.rhino.WindowWrapper: org.apache.batik.script.Window window>;

        if i0 >= 2 goto label1;

        $r10 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.EvaluatorException reportRuntimeError(java.lang.String)>("invalid argument count");

        throw $r10;

     label1:
        $r4 = interfaceinvoke r3.<org.apache.batik.script.Window: org.apache.batik.script.Interpreter getInterpreter()>();

        $r5 = (org.apache.batik.script.rhino.RhinoInterpreter) $r4;

        $r6 = virtualinvoke $r5.<org.apache.batik.script.rhino.RhinoInterpreter: java.security.AccessControlContext getAccessControlContext()>();

        $r7 = new org.apache.batik.script.rhino.WindowWrapper$1;

        specialinvoke $r7.<org.apache.batik.script.rhino.WindowWrapper$1: void <init>(org.apache.batik.script.Window,java.lang.Object[])>(r3, r0);

        $r8 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction,java.security.AccessControlContext)>($r7, $r6);

        $r9 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.Scriptable toObject(java.lang.Object,org.mozilla.javascript.Scriptable)>($r8, r1);

        return $r9;
    }

    public static void getURL(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, java.lang.Object[], org.mozilla.javascript.Function)
    {
        java.security.AccessControlContext $r15;
        org.apache.batik.script.rhino.WindowWrapper$3 $r16;
        org.apache.batik.script.rhino.WindowWrapper$2 $r17;
        java.lang.Object[] r0;
        org.apache.batik.script.Window r3;
        org.apache.batik.script.rhino.WindowWrapper$GetURLFunctionWrapper $r18;
        org.mozilla.javascript.NativeObject $r12;
        int i0;
        org.mozilla.javascript.Function $r20, r24;
        java.lang.String $r21;
        boolean $z0;
        org.mozilla.javascript.Context r23;
        org.apache.batik.script.rhino.WindowWrapper$GetURLObjectWrapper $r10;
        org.mozilla.javascript.EvaluatorException $r22;
        org.apache.batik.script.Interpreter $r4, $r13;
        org.apache.batik.script.Window$URLResponseHandler r26;
        org.apache.batik.script.rhino.RhinoInterpreter r5, $r14;
        org.apache.batik.script.rhino.WindowWrapper r2;
        org.mozilla.javascript.Scriptable r1;
        java.lang.Class $r6, $r25;
        java.lang.Object $r7, $r8, $r9, $r11, $r19;

        r23 := @parameter0: org.mozilla.javascript.Context;

        r1 := @parameter1: org.mozilla.javascript.Scriptable;

        r0 := @parameter2: java.lang.Object[];

        r24 := @parameter3: org.mozilla.javascript.Function;

        i0 = lengthof r0;

        r2 = (org.apache.batik.script.rhino.WindowWrapper) r1;

        r3 = r2.<org.apache.batik.script.rhino.WindowWrapper: org.apache.batik.script.Window window>;

        if i0 >= 2 goto label1;

        $r22 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.EvaluatorException reportRuntimeError(java.lang.String)>("invalid argument count");

        throw $r22;

     label1:
        $r4 = interfaceinvoke r3.<org.apache.batik.script.Window: org.apache.batik.script.Interpreter getInterpreter()>();

        r5 = (org.apache.batik.script.rhino.RhinoInterpreter) $r4;

        $r7 = r0[0];

        $r6 = <org.apache.batik.script.rhino.WindowWrapper: java.lang.Class class$java$lang$String>;

        if $r6 != null goto label2;

        $r25 = staticinvoke <org.apache.batik.script.rhino.WindowWrapper: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.apache.batik.script.rhino.WindowWrapper: java.lang.Class class$java$lang$String> = $r25;

        goto label3;

     label2:
        $r25 = <org.apache.batik.script.rhino.WindowWrapper: java.lang.Class class$java$lang$String>;

     label3:
        $r8 = staticinvoke <org.mozilla.javascript.Context: java.lang.Object jsToJava(java.lang.Object,java.lang.Class)>($r7, $r25);

        $r21 = (java.lang.String) $r8;

        $r9 = r0[1];

        $z0 = $r9 instanceof org.mozilla.javascript.Function;

        if $z0 == 0 goto label4;

        $r18 = new org.apache.batik.script.rhino.WindowWrapper$GetURLFunctionWrapper;

        $r19 = r0[1];

        $r20 = (org.mozilla.javascript.Function) $r19;

        specialinvoke $r18.<org.apache.batik.script.rhino.WindowWrapper$GetURLFunctionWrapper: void <init>(org.apache.batik.script.rhino.RhinoInterpreter,org.mozilla.javascript.Function,org.apache.batik.script.rhino.WindowWrapper)>(r5, $r20, r2);

        r26 = $r18;

        goto label5;

     label4:
        $r10 = new org.apache.batik.script.rhino.WindowWrapper$GetURLObjectWrapper;

        $r11 = r0[1];

        $r12 = (org.mozilla.javascript.NativeObject) $r11;

        specialinvoke $r10.<org.apache.batik.script.rhino.WindowWrapper$GetURLObjectWrapper: void <init>(org.apache.batik.script.rhino.RhinoInterpreter,org.mozilla.javascript.ScriptableObject,org.apache.batik.script.rhino.WindowWrapper)>(r5, $r12, r2);

        r26 = $r10;

     label5:
        $r13 = interfaceinvoke r3.<org.apache.batik.script.Window: org.apache.batik.script.Interpreter getInterpreter()>();

        $r14 = (org.apache.batik.script.rhino.RhinoInterpreter) $r13;

        $r15 = virtualinvoke $r14.<org.apache.batik.script.rhino.RhinoInterpreter: java.security.AccessControlContext getAccessControlContext()>();

        if i0 != 2 goto label6;

        $r17 = new org.apache.batik.script.rhino.WindowWrapper$2;

        specialinvoke $r17.<org.apache.batik.script.rhino.WindowWrapper$2: void <init>(org.apache.batik.script.Window,java.lang.String,org.apache.batik.script.Window$URLResponseHandler)>(r3, $r21, r26);

        staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction,java.security.AccessControlContext)>($r17, $r15);

        goto label7;

     label6:
        $r16 = new org.apache.batik.script.rhino.WindowWrapper$3;

        specialinvoke $r16.<org.apache.batik.script.rhino.WindowWrapper$3: void <init>(org.apache.batik.script.Window,java.lang.String,org.apache.batik.script.Window$URLResponseHandler,java.lang.Object[])>(r3, $r21, r26, r0);

        staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction,java.security.AccessControlContext)>($r16, $r15);

     label7:
        return;
    }

    public static void postURL(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, java.lang.Object[], org.mozilla.javascript.Function)
    {
        java.security.AccessControlContext $r16;
        org.apache.batik.script.rhino.WindowWrapper$4 $r18;
        org.apache.batik.script.rhino.WindowWrapper$6 $r19;
        org.apache.batik.script.rhino.WindowWrapper$5 $r17;
        boolean $z0;
        org.apache.batik.script.rhino.WindowWrapper$GetURLObjectWrapper $r13;
        org.apache.batik.script.Interpreter $r4;
        org.apache.batik.script.rhino.RhinoInterpreter r5;
        org.apache.batik.script.rhino.WindowWrapper r2;
        org.mozilla.javascript.Scriptable r1;
        java.lang.Object[] r0;
        org.apache.batik.script.Window r3;
        org.apache.batik.script.rhino.WindowWrapper$GetURLFunctionWrapper $r20;
        org.mozilla.javascript.NativeObject $r15;
        int i0;
        org.mozilla.javascript.Function $r22, r27;
        java.lang.String $r23, $r24;
        org.mozilla.javascript.Context r26;
        org.mozilla.javascript.EvaluatorException $r25;
        org.apache.batik.script.Window$URLResponseHandler r30;
        java.lang.Class $r6, $r9, $r28, $r29;
        java.lang.Object $r7, $r8, $r10, $r11, $r12, $r14, $r21;

        r26 := @parameter0: org.mozilla.javascript.Context;

        r1 := @parameter1: org.mozilla.javascript.Scriptable;

        r0 := @parameter2: java.lang.Object[];

        r27 := @parameter3: org.mozilla.javascript.Function;

        i0 = lengthof r0;

        r2 = (org.apache.batik.script.rhino.WindowWrapper) r1;

        r3 = r2.<org.apache.batik.script.rhino.WindowWrapper: org.apache.batik.script.Window window>;

        if i0 >= 3 goto label01;

        $r25 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.EvaluatorException reportRuntimeError(java.lang.String)>("invalid argument count");

        throw $r25;

     label01:
        $r4 = interfaceinvoke r3.<org.apache.batik.script.Window: org.apache.batik.script.Interpreter getInterpreter()>();

        r5 = (org.apache.batik.script.rhino.RhinoInterpreter) $r4;

        $r7 = r0[0];

        $r6 = <org.apache.batik.script.rhino.WindowWrapper: java.lang.Class class$java$lang$String>;

        if $r6 != null goto label02;

        $r28 = staticinvoke <org.apache.batik.script.rhino.WindowWrapper: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.apache.batik.script.rhino.WindowWrapper: java.lang.Class class$java$lang$String> = $r28;

        goto label03;

     label02:
        $r28 = <org.apache.batik.script.rhino.WindowWrapper: java.lang.Class class$java$lang$String>;

     label03:
        $r8 = staticinvoke <org.mozilla.javascript.Context: java.lang.Object jsToJava(java.lang.Object,java.lang.Class)>($r7, $r28);

        $r24 = (java.lang.String) $r8;

        $r10 = r0[1];

        $r9 = <org.apache.batik.script.rhino.WindowWrapper: java.lang.Class class$java$lang$String>;

        if $r9 != null goto label04;

        $r29 = staticinvoke <org.apache.batik.script.rhino.WindowWrapper: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.apache.batik.script.rhino.WindowWrapper: java.lang.Class class$java$lang$String> = $r29;

        goto label05;

     label04:
        $r29 = <org.apache.batik.script.rhino.WindowWrapper: java.lang.Class class$java$lang$String>;

     label05:
        $r11 = staticinvoke <org.mozilla.javascript.Context: java.lang.Object jsToJava(java.lang.Object,java.lang.Class)>($r10, $r29);

        $r23 = (java.lang.String) $r11;

        $r12 = r0[2];

        $z0 = $r12 instanceof org.mozilla.javascript.Function;

        if $z0 == 0 goto label06;

        $r20 = new org.apache.batik.script.rhino.WindowWrapper$GetURLFunctionWrapper;

        $r21 = r0[2];

        $r22 = (org.mozilla.javascript.Function) $r21;

        specialinvoke $r20.<org.apache.batik.script.rhino.WindowWrapper$GetURLFunctionWrapper: void <init>(org.apache.batik.script.rhino.RhinoInterpreter,org.mozilla.javascript.Function,org.apache.batik.script.rhino.WindowWrapper)>(r5, $r22, r2);

        r30 = $r20;

        goto label07;

     label06:
        $r13 = new org.apache.batik.script.rhino.WindowWrapper$GetURLObjectWrapper;

        $r14 = r0[2];

        $r15 = (org.mozilla.javascript.NativeObject) $r14;

        specialinvoke $r13.<org.apache.batik.script.rhino.WindowWrapper$GetURLObjectWrapper: void <init>(org.apache.batik.script.rhino.RhinoInterpreter,org.mozilla.javascript.ScriptableObject,org.apache.batik.script.rhino.WindowWrapper)>(r5, $r15, r2);

        r30 = $r13;

     label07:
        $r16 = virtualinvoke r5.<org.apache.batik.script.rhino.RhinoInterpreter: java.security.AccessControlContext getAccessControlContext()>();

        lookupswitch(i0)
        {
            case 3: goto label08;
            case 4: goto label09;
            default: goto label10;
        };

     label08:
        $r18 = new org.apache.batik.script.rhino.WindowWrapper$4;

        specialinvoke $r18.<org.apache.batik.script.rhino.WindowWrapper$4: void <init>(org.apache.batik.script.Window,java.lang.String,java.lang.String,org.apache.batik.script.Window$URLResponseHandler)>(r3, $r24, $r23, r30);

        staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction,java.security.AccessControlContext)>($r18, $r16);

        goto label11;

     label09:
        $r17 = new org.apache.batik.script.rhino.WindowWrapper$5;

        specialinvoke $r17.<org.apache.batik.script.rhino.WindowWrapper$5: void <init>(org.apache.batik.script.Window,java.lang.String,java.lang.String,org.apache.batik.script.Window$URLResponseHandler,java.lang.Object[])>(r3, $r24, $r23, r30, r0);

        staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction,java.security.AccessControlContext)>($r17, $r16);

        goto label11;

     label10:
        $r19 = new org.apache.batik.script.rhino.WindowWrapper$6;

        specialinvoke $r19.<org.apache.batik.script.rhino.WindowWrapper$6: void <init>(org.apache.batik.script.Window,java.lang.String,java.lang.String,org.apache.batik.script.Window$URLResponseHandler,java.lang.Object[])>(r3, $r24, $r23, r30, r0);

        staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction,java.security.AccessControlContext)>($r19, $r16);

     label11:
        return;
    }

    public static void alert(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, java.lang.Object[], org.mozilla.javascript.Function)
    {
        java.lang.Object[] r0;
        org.mozilla.javascript.Context r8;
        org.apache.batik.script.Window r3;
        org.apache.batik.script.rhino.WindowWrapper r2;
        org.mozilla.javascript.Scriptable r1;
        int i0;
        java.lang.Class $r4, $r10;
        java.lang.Object $r5, $r6;
        org.mozilla.javascript.Function r9;
        java.lang.String $r7;

        r8 := @parameter0: org.mozilla.javascript.Context;

        r1 := @parameter1: org.mozilla.javascript.Scriptable;

        r0 := @parameter2: java.lang.Object[];

        r9 := @parameter3: org.mozilla.javascript.Function;

        i0 = lengthof r0;

        r2 = (org.apache.batik.script.rhino.WindowWrapper) r1;

        r3 = r2.<org.apache.batik.script.rhino.WindowWrapper: org.apache.batik.script.Window window>;

        if i0 < 1 goto label3;

        $r5 = r0[0];

        $r4 = <org.apache.batik.script.rhino.WindowWrapper: java.lang.Class class$java$lang$String>;

        if $r4 != null goto label1;

        $r10 = staticinvoke <org.apache.batik.script.rhino.WindowWrapper: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.apache.batik.script.rhino.WindowWrapper: java.lang.Class class$java$lang$String> = $r10;

        goto label2;

     label1:
        $r10 = <org.apache.batik.script.rhino.WindowWrapper: java.lang.Class class$java$lang$String>;

     label2:
        $r6 = staticinvoke <org.mozilla.javascript.Context: java.lang.Object jsToJava(java.lang.Object,java.lang.Class)>($r5, $r10);

        $r7 = (java.lang.String) $r6;

        interfaceinvoke r3.<org.apache.batik.script.Window: void alert(java.lang.String)>($r7);

     label3:
        return;
    }

    public static java.lang.Object confirm(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, java.lang.Object[], org.mozilla.javascript.Function)
    {
        java.lang.Object[] r0;
        org.apache.batik.script.Window r3;
        int i0;
        java.lang.Boolean $r4, $r9, $r11;
        org.mozilla.javascript.Function r15;
        java.lang.String $r13;
        boolean $z0;
        org.mozilla.javascript.Context r14;
        org.apache.batik.script.rhino.WindowWrapper r2;
        org.mozilla.javascript.Scriptable r1, $r5, $r10, $r12;
        java.lang.Class $r6, $r16;
        java.lang.Object $r7, $r8;

        r14 := @parameter0: org.mozilla.javascript.Context;

        r1 := @parameter1: org.mozilla.javascript.Scriptable;

        r0 := @parameter2: java.lang.Object[];

        r15 := @parameter3: org.mozilla.javascript.Function;

        i0 = lengthof r0;

        r2 = (org.apache.batik.script.rhino.WindowWrapper) r1;

        r3 = r2.<org.apache.batik.script.rhino.WindowWrapper: org.apache.batik.script.Window window>;

        if i0 < 1 goto label4;

        $r7 = r0[0];

        $r6 = <org.apache.batik.script.rhino.WindowWrapper: java.lang.Class class$java$lang$String>;

        if $r6 != null goto label1;

        $r16 = staticinvoke <org.apache.batik.script.rhino.WindowWrapper: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.apache.batik.script.rhino.WindowWrapper: java.lang.Class class$java$lang$String> = $r16;

        goto label2;

     label1:
        $r16 = <org.apache.batik.script.rhino.WindowWrapper: java.lang.Class class$java$lang$String>;

     label2:
        $r8 = staticinvoke <org.mozilla.javascript.Context: java.lang.Object jsToJava(java.lang.Object,java.lang.Class)>($r7, $r16);

        $r13 = (java.lang.String) $r8;

        $z0 = interfaceinvoke r3.<org.apache.batik.script.Window: boolean confirm(java.lang.String)>($r13);

        if $z0 == 0 goto label3;

        $r11 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r12 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.Scriptable toObject(java.lang.Object,org.mozilla.javascript.Scriptable)>($r11, r1);

        return $r12;

     label3:
        $r9 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r10 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.Scriptable toObject(java.lang.Object,org.mozilla.javascript.Scriptable)>($r9, r1);

        return $r10;

     label4:
        $r4 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r5 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.Scriptable toObject(java.lang.Object,org.mozilla.javascript.Scriptable)>($r4, r1);

        return $r5;
    }

    public static java.lang.Object prompt(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, java.lang.Object[], org.mozilla.javascript.Function)
    {
        java.lang.Object[] r3;
        org.apache.batik.script.Window r2;
        int $i0;
        org.mozilla.javascript.Function r18;
        java.lang.String $r8, $r15, $r16, r19;
        org.mozilla.javascript.Context r17;
        org.apache.batik.script.rhino.WindowWrapper r1;
        org.mozilla.javascript.Scriptable r0, $r7;
        java.lang.Class $r4, $r9, $r12, $r20, $r21, $r22;
        java.lang.Object $r5, $r6, $r10, $r11, $r13, $r14;

        r17 := @parameter0: org.mozilla.javascript.Context;

        r0 := @parameter1: org.mozilla.javascript.Scriptable;

        r3 := @parameter2: java.lang.Object[];

        r18 := @parameter3: org.mozilla.javascript.Function;

        r1 = (org.apache.batik.script.rhino.WindowWrapper) r0;

        r2 = r1.<org.apache.batik.script.rhino.WindowWrapper: org.apache.batik.script.Window window>;

        $i0 = lengthof r3;

        lookupswitch($i0)
        {
            case 0: goto label01;
            case 1: goto label02;
            default: goto label05;
        };

     label01:
        r19 = "";

        goto label10;

     label02:
        $r5 = r3[0];

        $r4 = <org.apache.batik.script.rhino.WindowWrapper: java.lang.Class class$java$lang$String>;

        if $r4 != null goto label03;

        $r20 = staticinvoke <org.apache.batik.script.rhino.WindowWrapper: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.apache.batik.script.rhino.WindowWrapper: java.lang.Class class$java$lang$String> = $r20;

        goto label04;

     label03:
        $r20 = <org.apache.batik.script.rhino.WindowWrapper: java.lang.Class class$java$lang$String>;

     label04:
        $r6 = staticinvoke <org.mozilla.javascript.Context: java.lang.Object jsToJava(java.lang.Object,java.lang.Class)>($r5, $r20);

        $r8 = (java.lang.String) $r6;

        r19 = interfaceinvoke r2.<org.apache.batik.script.Window: java.lang.String prompt(java.lang.String)>($r8);

        goto label10;

     label05:
        $r10 = r3[0];

        $r9 = <org.apache.batik.script.rhino.WindowWrapper: java.lang.Class class$java$lang$String>;

        if $r9 != null goto label06;

        $r21 = staticinvoke <org.apache.batik.script.rhino.WindowWrapper: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.apache.batik.script.rhino.WindowWrapper: java.lang.Class class$java$lang$String> = $r21;

        goto label07;

     label06:
        $r21 = <org.apache.batik.script.rhino.WindowWrapper: java.lang.Class class$java$lang$String>;

     label07:
        $r11 = staticinvoke <org.mozilla.javascript.Context: java.lang.Object jsToJava(java.lang.Object,java.lang.Class)>($r10, $r21);

        $r16 = (java.lang.String) $r11;

        $r13 = r3[1];

        $r12 = <org.apache.batik.script.rhino.WindowWrapper: java.lang.Class class$java$lang$String>;

        if $r12 != null goto label08;

        $r22 = staticinvoke <org.apache.batik.script.rhino.WindowWrapper: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.apache.batik.script.rhino.WindowWrapper: java.lang.Class class$java$lang$String> = $r22;

        goto label09;

     label08:
        $r22 = <org.apache.batik.script.rhino.WindowWrapper: java.lang.Class class$java$lang$String>;

     label09:
        $r14 = staticinvoke <org.mozilla.javascript.Context: java.lang.Object jsToJava(java.lang.Object,java.lang.Class)>($r13, $r22);

        $r15 = (java.lang.String) $r14;

        r19 = interfaceinvoke r2.<org.apache.batik.script.Window: java.lang.String prompt(java.lang.String,java.lang.String)>($r16, $r15);

     label10:
        if r19 != null goto label11;

        return null;

     label11:
        $r7 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.Scriptable toObject(java.lang.Object,org.mozilla.javascript.Scriptable)>(r19, r0);

        return $r7;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }

    static void <clinit>()
    {
        java.lang.Object[] $r0;

        $r0 = newarray (java.lang.Object)[0];

        <org.apache.batik.script.rhino.WindowWrapper: java.lang.Object[] EMPTY_ARGUMENTS> = $r0;

        return;
    }
}
