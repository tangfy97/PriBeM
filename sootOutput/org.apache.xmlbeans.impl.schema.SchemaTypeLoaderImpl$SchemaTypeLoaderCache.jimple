class org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$SchemaTypeLoaderCache extends org.apache.xmlbeans.impl.common.SystemCache
{
    private java.lang.ThreadLocal _cachedTypeSystems;
    static final boolean $assertionsDisabled;

    private void <init>()
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$SchemaTypeLoaderCache r0;
        org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$SchemaTypeLoaderCache$1 $r1;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$SchemaTypeLoaderCache;

        specialinvoke r0.<org.apache.xmlbeans.impl.common.SystemCache: void <init>()>();

        $r1 = new org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$SchemaTypeLoaderCache$1;

        specialinvoke $r1.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$SchemaTypeLoaderCache$1: void <init>(org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$SchemaTypeLoaderCache)>(r0);

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$SchemaTypeLoaderCache: java.lang.ThreadLocal _cachedTypeSystems> = $r1;

        return;
    }

    public org.apache.xmlbeans.SchemaTypeLoader getFromTypeLoaderCache(java.lang.ClassLoader)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl r9, r14;
        java.lang.AssertionError $r15, $r16;
        java.util.ArrayList r3;
        int $i0, $i1, i2, i3, $i5, $i7, $i9, $i11, $i13;
        java.lang.ref.SoftReference $r7;
        boolean $z0, $z1;
        java.lang.ThreadLocal $r1;
        org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$SchemaTypeLoaderCache r0;
        java.lang.Object $r2, $r4, $r5, $r6, $r8;
        java.lang.ClassLoader $r10, r11;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$SchemaTypeLoaderCache;

        r11 := @parameter0: java.lang.ClassLoader;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$SchemaTypeLoaderCache: java.lang.ThreadLocal _cachedTypeSystems>;

        $r2 = virtualinvoke $r1.<java.lang.ThreadLocal: java.lang.Object get()>();

        r3 = (java.util.ArrayList) $r2;

        $i5 = (int) -1;

        i2 = $i5;

        r14 = null;

        i3 = 0;

     label1:
        $i0 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        if i3 >= $i0 goto label7;

        $r6 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r7 = (java.lang.ref.SoftReference) $r6;

        $r8 = virtualinvoke $r7.<java.lang.ref.SoftReference: java.lang.Object get()>();

        r9 = (org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl) $r8;

        if r9 != null goto label3;

        $z1 = <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$SchemaTypeLoaderCache: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $i7 = (int) -1;

        if i3 > $i7 goto label2;

        $r15 = new java.lang.AssertionError;

        specialinvoke $r15.<java.lang.AssertionError: void <init>()>();

        throw $r15;

     label2:
        $i1 = i3;

        $i9 = (int) -1;

        i3 = i3 + $i9;

        virtualinvoke r3.<java.util.ArrayList: java.lang.Object remove(int)>($i1);

        goto label6;

     label3:
        $r10 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.lang.ClassLoader access$000(org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl)>(r9);

        if $r10 != r11 goto label6;

        $z0 = <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$SchemaTypeLoaderCache: boolean $assertionsDisabled>;

        if $z0 != 0 goto label5;

        $i11 = (int) -1;

        $i13 = (int) -1;

        if $i11 != $i13 goto label4;

        if null == null goto label5;

     label4:
        $r16 = new java.lang.AssertionError;

        specialinvoke $r16.<java.lang.AssertionError: void <init>()>();

        throw $r16;

     label5:
        i2 = i3;

        r14 = r9;

        goto label7;

     label6:
        i3 = i3 + 1;

        goto label1;

     label7:
        if i2 <= 0 goto label8;

        $r4 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r5 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        virtualinvoke r3.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(0, $r5);

        virtualinvoke r3.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(i2, $r4);

     label8:
        return r14;
    }

    public void addToTypeLoaderCache(org.apache.xmlbeans.SchemaTypeLoader, java.lang.ClassLoader)
    {
        java.lang.ThreadLocal $r1;
        org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl $r8;
        org.apache.xmlbeans.SchemaTypeLoader r4;
        java.lang.AssertionError $r7;
        java.util.ArrayList $r11;
        org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$SchemaTypeLoaderCache r0;
        int $i0;
        java.lang.Object $r2, $r5;
        java.lang.ref.SoftReference $r3, $r6;
        java.lang.ClassLoader $r9, r10;
        boolean $z0, $z1;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$SchemaTypeLoaderCache;

        r4 := @parameter0: org.apache.xmlbeans.SchemaTypeLoader;

        r10 := @parameter1: java.lang.ClassLoader;

        $z0 = <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$SchemaTypeLoaderCache: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $z1 = r4 instanceof org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl;

        if $z1 == 0 goto label1;

        $r8 = (org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl) r4;

        $r9 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.lang.ClassLoader access$000(org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl)>($r8);

        if $r9 == r10 goto label2;

     label1:
        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

     label2:
        $r1 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$SchemaTypeLoaderCache: java.lang.ThreadLocal _cachedTypeSystems>;

        $r2 = virtualinvoke $r1.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r11 = (java.util.ArrayList) $r2;

        $i0 = virtualinvoke $r11.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label3;

        $r5 = virtualinvoke $r11.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r6 = new java.lang.ref.SoftReference;

        specialinvoke $r6.<java.lang.ref.SoftReference: void <init>(java.lang.Object)>(r4);

        virtualinvoke $r11.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(0, $r6);

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        goto label4;

     label3:
        $r3 = new java.lang.ref.SoftReference;

        specialinvoke $r3.<java.lang.ref.SoftReference: void <init>(java.lang.Object)>(r4);

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

     label4:
        return;
    }

    void <init>(org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$1)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$SchemaTypeLoaderCache r0;
        org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$1 r1;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$SchemaTypeLoaderCache;

        r1 := @parameter0: org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$1;

        specialinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$SchemaTypeLoaderCache: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0, $r1;
        boolean $z0, $z1;

        $r0 = <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.lang.Class class$org$apache$xmlbeans$impl$schema$SchemaTypeLoaderImpl>;

        if $r0 != null goto label1;

        $r1 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl");

        <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.lang.Class class$org$apache$xmlbeans$impl$schema$SchemaTypeLoaderImpl> = $r1;

        goto label2;

     label1:
        $r1 = <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.lang.Class class$org$apache$xmlbeans$impl$schema$SchemaTypeLoaderImpl>;

     label2:
        $z0 = virtualinvoke $r1.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$SchemaTypeLoaderCache: boolean $assertionsDisabled> = $z1;

        return;
    }
}
