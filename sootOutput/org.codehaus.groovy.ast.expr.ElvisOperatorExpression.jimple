public class org.codehaus.groovy.ast.expr.ElvisOperatorExpression extends org.codehaus.groovy.ast.expr.TernaryExpression
{

    public void <init>(org.codehaus.groovy.ast.expr.Expression, org.codehaus.groovy.ast.expr.Expression)
    {
        org.codehaus.groovy.ast.expr.BooleanExpression $r2;
        org.codehaus.groovy.ast.expr.ElvisOperatorExpression r0;
        org.codehaus.groovy.ast.expr.Expression r1, r3;

        r0 := @this: org.codehaus.groovy.ast.expr.ElvisOperatorExpression;

        r1 := @parameter0: org.codehaus.groovy.ast.expr.Expression;

        r3 := @parameter1: org.codehaus.groovy.ast.expr.Expression;

        $r2 = staticinvoke <org.codehaus.groovy.ast.expr.ElvisOperatorExpression: org.codehaus.groovy.ast.expr.BooleanExpression getBool(org.codehaus.groovy.ast.expr.Expression)>(r1);

        specialinvoke r0.<org.codehaus.groovy.ast.expr.TernaryExpression: void <init>(org.codehaus.groovy.ast.expr.BooleanExpression,org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>($r2, r1, r3);

        return;
    }

    private static org.codehaus.groovy.ast.expr.BooleanExpression getBool(org.codehaus.groovy.ast.expr.Expression)
    {
        org.codehaus.groovy.ast.expr.BooleanExpression $r0;
        org.codehaus.groovy.ast.expr.Expression r1;

        r1 := @parameter0: org.codehaus.groovy.ast.expr.Expression;

        $r0 = new org.codehaus.groovy.ast.expr.BooleanExpression;

        specialinvoke $r0.<org.codehaus.groovy.ast.expr.BooleanExpression: void <init>(org.codehaus.groovy.ast.expr.Expression)>(r1);

        virtualinvoke $r0.<org.codehaus.groovy.ast.expr.BooleanExpression: void setSourcePosition(org.codehaus.groovy.ast.ASTNode)>(r1);

        return $r0;
    }

    public void visit(org.codehaus.groovy.ast.GroovyCodeVisitor)
    {
        org.codehaus.groovy.ast.expr.ElvisOperatorExpression r1;
        org.codehaus.groovy.ast.GroovyCodeVisitor r0;

        r1 := @this: org.codehaus.groovy.ast.expr.ElvisOperatorExpression;

        r0 := @parameter0: org.codehaus.groovy.ast.GroovyCodeVisitor;

        interfaceinvoke r0.<org.codehaus.groovy.ast.GroovyCodeVisitor: void visitShortTernaryExpression(org.codehaus.groovy.ast.expr.ElvisOperatorExpression)>(r1);

        return;
    }

    public org.codehaus.groovy.ast.expr.Expression transformExpression(org.codehaus.groovy.ast.expr.ExpressionTransformer)
    {
        org.codehaus.groovy.ast.expr.ElvisOperatorExpression $r0, r2;
        org.codehaus.groovy.ast.expr.ExpressionTransformer r1;
        org.codehaus.groovy.ast.expr.Expression $r3, $r4, $r5, $r6;

        r2 := @this: org.codehaus.groovy.ast.expr.ElvisOperatorExpression;

        r1 := @parameter0: org.codehaus.groovy.ast.expr.ExpressionTransformer;

        $r0 = new org.codehaus.groovy.ast.expr.ElvisOperatorExpression;

        $r3 = virtualinvoke r2.<org.codehaus.groovy.ast.expr.ElvisOperatorExpression: org.codehaus.groovy.ast.expr.Expression getTrueExpression()>();

        $r4 = interfaceinvoke r1.<org.codehaus.groovy.ast.expr.ExpressionTransformer: org.codehaus.groovy.ast.expr.Expression transform(org.codehaus.groovy.ast.expr.Expression)>($r3);

        $r5 = virtualinvoke r2.<org.codehaus.groovy.ast.expr.ElvisOperatorExpression: org.codehaus.groovy.ast.expr.Expression getFalseExpression()>();

        $r6 = interfaceinvoke r1.<org.codehaus.groovy.ast.expr.ExpressionTransformer: org.codehaus.groovy.ast.expr.Expression transform(org.codehaus.groovy.ast.expr.Expression)>($r5);

        specialinvoke $r0.<org.codehaus.groovy.ast.expr.ElvisOperatorExpression: void <init>(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>($r4, $r6);

        virtualinvoke $r0.<org.codehaus.groovy.ast.expr.Expression: void setSourcePosition(org.codehaus.groovy.ast.ASTNode)>(r2);

        return $r0;
    }
}
