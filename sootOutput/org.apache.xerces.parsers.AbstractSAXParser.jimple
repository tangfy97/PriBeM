public abstract class org.apache.xerces.parsers.AbstractSAXParser extends org.apache.xerces.parsers.AbstractXMLDocumentParser implements org.apache.xerces.xs.PSVIProvider, org.xml.sax.Parser, org.xml.sax.XMLReader
{
    protected static final java.lang.String NAMESPACES;
    protected static final java.lang.String STRING_INTERNING;
    protected static final java.lang.String ALLOW_UE_AND_NOTATION_EVENTS;
    private static final java.lang.String[] RECOGNIZED_FEATURES;
    protected static final java.lang.String LEXICAL_HANDLER;
    protected static final java.lang.String DECLARATION_HANDLER;
    protected static final java.lang.String DOM_NODE;
    private static final java.lang.String[] RECOGNIZED_PROPERTIES;
    protected boolean fNamespaces;
    protected boolean fNamespacePrefixes;
    protected boolean fLexicalHandlerParameterEntities;
    protected boolean fStandalone;
    protected boolean fResolveDTDURIs;
    protected boolean fUseEntityResolver2;
    protected boolean fXMLNSURIs;
    protected org.xml.sax.ContentHandler fContentHandler;
    protected org.xml.sax.DocumentHandler fDocumentHandler;
    protected org.apache.xerces.xni.NamespaceContext fNamespaceContext;
    protected org.xml.sax.DTDHandler fDTDHandler;
    protected org.xml.sax.ext.DeclHandler fDeclHandler;
    protected org.xml.sax.ext.LexicalHandler fLexicalHandler;
    protected final org.apache.xerces.xni.QName fQName;
    protected boolean fParseInProgress;
    protected java.lang.String fVersion;
    private final org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy fAttributesProxy;
    private org.apache.xerces.xni.Augmentations fAugmentations;
    protected org.apache.xerces.util.SymbolHash fDeclaredAttrs;

    protected void <init>(org.apache.xerces.xni.parser.XMLParserConfiguration)
    {
        org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy $r3;
        org.apache.xerces.xni.parser.XMLParserConfiguration r1;
        java.lang.String[] $r4, $r5;
        org.apache.xerces.xni.parser.XMLConfigurationException $r6;
        org.apache.xerces.xni.QName $r2;
        org.apache.xerces.parsers.AbstractSAXParser r0;

        r0 := @this: org.apache.xerces.parsers.AbstractSAXParser;

        r1 := @parameter0: org.apache.xerces.xni.parser.XMLParserConfiguration;

        specialinvoke r0.<org.apache.xerces.parsers.AbstractXMLDocumentParser: void <init>(org.apache.xerces.xni.parser.XMLParserConfiguration)>(r1);

        r0.<org.apache.xerces.parsers.AbstractSAXParser: boolean fNamespacePrefixes> = 0;

        r0.<org.apache.xerces.parsers.AbstractSAXParser: boolean fLexicalHandlerParameterEntities> = 1;

        r0.<org.apache.xerces.parsers.AbstractSAXParser: boolean fResolveDTDURIs> = 1;

        r0.<org.apache.xerces.parsers.AbstractSAXParser: boolean fUseEntityResolver2> = 1;

        r0.<org.apache.xerces.parsers.AbstractSAXParser: boolean fXMLNSURIs> = 0;

        $r2 = new org.apache.xerces.xni.QName;

        specialinvoke $r2.<org.apache.xerces.xni.QName: void <init>()>();

        r0.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.xni.QName fQName> = $r2;

        r0.<org.apache.xerces.parsers.AbstractSAXParser: boolean fParseInProgress> = 0;

        $r3 = new org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy;

        specialinvoke $r3.<org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy: void <init>()>();

        r0.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy fAttributesProxy> = $r3;

        r0.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.xni.Augmentations fAugmentations> = null;

        r0.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.util.SymbolHash fDeclaredAttrs> = null;

        $r4 = <org.apache.xerces.parsers.AbstractSAXParser: java.lang.String[] RECOGNIZED_FEATURES>;

        interfaceinvoke r1.<org.apache.xerces.xni.parser.XMLParserConfiguration: void addRecognizedFeatures(java.lang.String[])>($r4);

        $r5 = <org.apache.xerces.parsers.AbstractSAXParser: java.lang.String[] RECOGNIZED_PROPERTIES>;

        interfaceinvoke r1.<org.apache.xerces.xni.parser.XMLParserConfiguration: void addRecognizedProperties(java.lang.String[])>($r5);

     label1:
        interfaceinvoke r1.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setFeature(java.lang.String,boolean)>("http://xml.org/sax/features/allow-dtd-events-after-endDTD", 0);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

     label4:
        return;

        catch org.apache.xerces.xni.parser.XMLConfigurationException from label1 to label2 with label3;
    }

    public void startDocument(org.apache.xerces.xni.XMLLocator, java.lang.String, org.apache.xerces.xni.NamespaceContext, org.apache.xerces.xni.Augmentations) throws org.apache.xerces.xni.XNIException
    {
        org.xml.sax.DocumentHandler $r2, $r8, $r9, $r11;
        org.xml.sax.ContentHandler $r4, $r5, $r7, $r16;
        java.lang.String r14;
        org.apache.xerces.xni.XNIException $r13;
        org.apache.xerces.parsers.AbstractSAXParser r0;
        org.apache.xerces.xni.XMLLocator r3;
        org.apache.xerces.parsers.AbstractSAXParser$LocatorProxy $r6, $r10;
        org.apache.xerces.xni.Augmentations r15;
        org.apache.xerces.xni.NamespaceContext r1;
        org.xml.sax.SAXException $r12;

        r0 := @this: org.apache.xerces.parsers.AbstractSAXParser;

        r3 := @parameter0: org.apache.xerces.xni.XMLLocator;

        r14 := @parameter1: java.lang.String;

        r1 := @parameter2: org.apache.xerces.xni.NamespaceContext;

        r15 := @parameter3: org.apache.xerces.xni.Augmentations;

        r0.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.xni.NamespaceContext fNamespaceContext> = r1;

     label1:
        $r2 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.DocumentHandler fDocumentHandler>;

        if $r2 == null goto label3;

        if r3 == null goto label2;

        $r11 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.DocumentHandler fDocumentHandler>;

        $r10 = new org.apache.xerces.parsers.AbstractSAXParser$LocatorProxy;

        specialinvoke $r10.<org.apache.xerces.parsers.AbstractSAXParser$LocatorProxy: void <init>(org.apache.xerces.xni.XMLLocator)>(r3);

        interfaceinvoke $r11.<org.xml.sax.DocumentHandler: void setDocumentLocator(org.xml.sax.Locator)>($r10);

     label2:
        $r8 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.DocumentHandler fDocumentHandler>;

        if $r8 == null goto label3;

        $r9 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.DocumentHandler fDocumentHandler>;

        interfaceinvoke $r9.<org.xml.sax.DocumentHandler: void startDocument()>();

     label3:
        $r16 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.ContentHandler fContentHandler>;

        if $r16 == null goto label5;

        if r3 == null goto label4;

        $r7 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.ContentHandler fContentHandler>;

        $r6 = new org.apache.xerces.parsers.AbstractSAXParser$LocatorProxy;

        specialinvoke $r6.<org.apache.xerces.parsers.AbstractSAXParser$LocatorProxy: void <init>(org.apache.xerces.xni.XMLLocator)>(r3);

        interfaceinvoke $r7.<org.xml.sax.ContentHandler: void setDocumentLocator(org.xml.sax.Locator)>($r6);

     label4:
        $r4 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.ContentHandler fContentHandler>;

        if $r4 == null goto label5;

        $r5 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.ContentHandler fContentHandler>;

        interfaceinvoke $r5.<org.xml.sax.ContentHandler: void startDocument()>();

     label5:
        goto label7;

     label6:
        $r12 := @caughtexception;

        $r13 = new org.apache.xerces.xni.XNIException;

        specialinvoke $r13.<org.apache.xerces.xni.XNIException: void <init>(java.lang.Exception)>($r12);

        throw $r13;

     label7:
        return;

        catch org.xml.sax.SAXException from label1 to label5 with label6;
    }

    public void xmlDecl(java.lang.String, java.lang.String, java.lang.String, org.apache.xerces.xni.Augmentations) throws org.apache.xerces.xni.XNIException
    {
        org.apache.xerces.xni.Augmentations r5;
        java.lang.String r1, r2, $r3, r4;
        org.apache.xerces.parsers.AbstractSAXParser r0;
        boolean $z0;

        r0 := @this: org.apache.xerces.parsers.AbstractSAXParser;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r5 := @parameter3: org.apache.xerces.xni.Augmentations;

        r0.<org.apache.xerces.parsers.AbstractSAXParser: java.lang.String fVersion> = r1;

        $r3 = "yes";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        r0.<org.apache.xerces.parsers.AbstractSAXParser: boolean fStandalone> = $z0;

        return;
    }

    public void doctypeDecl(java.lang.String, java.lang.String, java.lang.String, org.apache.xerces.xni.Augmentations) throws org.apache.xerces.xni.XNIException
    {
        org.xml.sax.ext.LexicalHandler $r1, $r7;
        org.apache.xerces.xni.Augmentations r10;
        org.xml.sax.ext.DeclHandler $r2;
        org.xml.sax.SAXException $r8;
        org.apache.xerces.util.SymbolHash $r3;
        java.lang.String r4, r5, r6;
        org.apache.xerces.xni.XNIException $r9;
        org.apache.xerces.parsers.AbstractSAXParser r0;

        r0 := @this: org.apache.xerces.parsers.AbstractSAXParser;

        r4 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.String;

        r6 := @parameter2: java.lang.String;

        r10 := @parameter3: org.apache.xerces.xni.Augmentations;

        r0.<org.apache.xerces.parsers.AbstractSAXParser: boolean fInDTD> = 1;

     label1:
        $r1 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.ext.LexicalHandler fLexicalHandler>;

        if $r1 == null goto label2;

        $r7 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.ext.LexicalHandler fLexicalHandler>;

        interfaceinvoke $r7.<org.xml.sax.ext.LexicalHandler: void startDTD(java.lang.String,java.lang.String,java.lang.String)>(r4, r5, r6);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        $r9 = new org.apache.xerces.xni.XNIException;

        specialinvoke $r9.<org.apache.xerces.xni.XNIException: void <init>(java.lang.Exception)>($r8);

        throw $r9;

     label4:
        $r2 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.ext.DeclHandler fDeclHandler>;

        if $r2 == null goto label5;

        $r3 = new org.apache.xerces.util.SymbolHash;

        specialinvoke $r3.<org.apache.xerces.util.SymbolHash: void <init>()>();

        r0.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.util.SymbolHash fDeclaredAttrs> = $r3;

     label5:
        return;

        catch org.xml.sax.SAXException from label1 to label2 with label3;
    }

    public void startGeneralEntity(java.lang.String, org.apache.xerces.xni.XMLResourceIdentifier, java.lang.String, org.apache.xerces.xni.Augmentations) throws org.apache.xerces.xni.XNIException
    {
        org.apache.xerces.xni.XMLResourceIdentifier r11;
        org.xml.sax.ext.LexicalHandler $r2, $r4;
        org.apache.xerces.xni.Augmentations r0;
        org.xml.sax.SAXException $r9;
        java.lang.Boolean $r5;
        java.lang.Object $r6;
        java.lang.String r3, r12;
        org.xml.sax.ContentHandler $r7, $r8;
        org.apache.xerces.xni.XNIException $r10;
        org.apache.xerces.parsers.AbstractSAXParser r1;
        boolean $z0;

        r1 := @this: org.apache.xerces.parsers.AbstractSAXParser;

        r3 := @parameter0: java.lang.String;

        r11 := @parameter1: org.apache.xerces.xni.XMLResourceIdentifier;

        r12 := @parameter2: java.lang.String;

        r0 := @parameter3: org.apache.xerces.xni.Augmentations;

     label1:
        if r0 == null goto label2;

        $r5 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r6 = interfaceinvoke r0.<org.apache.xerces.xni.Augmentations: java.lang.Object getItem(java.lang.String)>("ENTITY_SKIPPED");

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label2;

        $r7 = r1.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.ContentHandler fContentHandler>;

        if $r7 == null goto label3;

        $r8 = r1.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.ContentHandler fContentHandler>;

        interfaceinvoke $r8.<org.xml.sax.ContentHandler: void skippedEntity(java.lang.String)>(r3);

        goto label3;

     label2:
        $r2 = r1.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.ext.LexicalHandler fLexicalHandler>;

        if $r2 == null goto label3;

        $r4 = r1.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.ext.LexicalHandler fLexicalHandler>;

        interfaceinvoke $r4.<org.xml.sax.ext.LexicalHandler: void startEntity(java.lang.String)>(r3);

     label3:
        goto label5;

     label4:
        $r9 := @caughtexception;

        $r10 = new org.apache.xerces.xni.XNIException;

        specialinvoke $r10.<org.apache.xerces.xni.XNIException: void <init>(java.lang.Exception)>($r9);

        throw $r10;

     label5:
        return;

        catch org.xml.sax.SAXException from label1 to label3 with label4;
    }

    public void endGeneralEntity(java.lang.String, org.apache.xerces.xni.Augmentations) throws org.apache.xerces.xni.XNIException
    {
        org.xml.sax.ext.LexicalHandler $r2, $r4;
        org.apache.xerces.xni.Augmentations r0;
        org.xml.sax.SAXException $r7;
        java.lang.Boolean $r5;
        java.lang.Object $r6;
        java.lang.String r3;
        org.apache.xerces.xni.XNIException $r8;
        org.apache.xerces.parsers.AbstractSAXParser r1;
        boolean $z0;

        r1 := @this: org.apache.xerces.parsers.AbstractSAXParser;

        r3 := @parameter0: java.lang.String;

        r0 := @parameter1: org.apache.xerces.xni.Augmentations;

     label1:
        if r0 == null goto label2;

        $r5 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r6 = interfaceinvoke r0.<org.apache.xerces.xni.Augmentations: java.lang.Object getItem(java.lang.String)>("ENTITY_SKIPPED");

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label3;

     label2:
        $r2 = r1.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.ext.LexicalHandler fLexicalHandler>;

        if $r2 == null goto label3;

        $r4 = r1.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.ext.LexicalHandler fLexicalHandler>;

        interfaceinvoke $r4.<org.xml.sax.ext.LexicalHandler: void endEntity(java.lang.String)>(r3);

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

        $r8 = new org.apache.xerces.xni.XNIException;

        specialinvoke $r8.<org.apache.xerces.xni.XNIException: void <init>(java.lang.Exception)>($r7);

        throw $r8;

     label5:
        return;

        catch org.xml.sax.SAXException from label1 to label3 with label4;
    }

    public void startElement(org.apache.xerces.xni.QName, org.apache.xerces.xni.XMLAttributes, org.apache.xerces.xni.Augmentations) throws org.apache.xerces.xni.XNIException
    {
        org.apache.xerces.xni.XMLAttributes r5;
        org.xml.sax.DocumentHandler $r1, $r31;
        org.apache.xerces.xni.XNIException $r38;
        boolean $z0, $z1, $z2, $z3;
        org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy $r6, $r7, $r28, $r29;
        org.xml.sax.SAXException $r32;
        org.apache.xerces.xni.QName r4, $r10, $r11, $r14, $r15, $r16, $r17, $r18, $r21, $r22, $r25;
        int $i0, i1, i2, $i4, $i6;
        org.xml.sax.ContentHandler $r2, $r9;
        java.lang.String $r8, $r12, $r13, $r19, $r20, $r23, $r24, $r26, $r27, $r30, $r34, $r35, r36, $r37;
        org.apache.xerces.parsers.AbstractSAXParser r0;
        org.apache.xerces.xni.Augmentations r3;

        r0 := @this: org.apache.xerces.parsers.AbstractSAXParser;

        r4 := @parameter0: org.apache.xerces.xni.QName;

        r5 := @parameter1: org.apache.xerces.xni.XMLAttributes;

        r3 := @parameter2: org.apache.xerces.xni.Augmentations;

     label01:
        $r1 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.DocumentHandler fDocumentHandler>;

        if $r1 == null goto label02;

        $r28 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy fAttributesProxy>;

        virtualinvoke $r28.<org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy: void setAttributes(org.apache.xerces.xni.XMLAttributes)>(r5);

        $r31 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.DocumentHandler fDocumentHandler>;

        $r30 = r4.<org.apache.xerces.xni.QName: java.lang.String rawname>;

        $r29 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy fAttributesProxy>;

        interfaceinvoke $r31.<org.xml.sax.DocumentHandler: void startElement(java.lang.String,org.xml.sax.AttributeList)>($r30, $r29);

     label02:
        $r2 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.ContentHandler fContentHandler>;

        if $r2 == null goto label17;

        $z0 = r0.<org.apache.xerces.parsers.AbstractSAXParser: boolean fNamespaces>;

        if $z0 == 0 goto label12;

        virtualinvoke r0.<org.apache.xerces.parsers.AbstractSAXParser: void startNamespaceMapping()>();

        $i0 = interfaceinvoke r5.<org.apache.xerces.xni.XMLAttributes: int getLength()>();

        $z2 = r0.<org.apache.xerces.parsers.AbstractSAXParser: boolean fNamespacePrefixes>;

        if $z2 != 0 goto label07;

        i1 = $i0 - 1;

        goto label06;

     label03:
        $r21 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.xni.QName fQName>;

        interfaceinvoke r5.<org.apache.xerces.xni.XMLAttributes: void getName(int,org.apache.xerces.xni.QName)>(i1, $r21);

        $r22 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.xni.QName fQName>;

        $r24 = $r22.<org.apache.xerces.xni.QName: java.lang.String prefix>;

        $r23 = <org.apache.xerces.util.XMLSymbols: java.lang.String PREFIX_XMLNS>;

        if $r24 == $r23 goto label04;

        $r25 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.xni.QName fQName>;

        $r27 = $r25.<org.apache.xerces.xni.QName: java.lang.String rawname>;

        $r26 = <org.apache.xerces.util.XMLSymbols: java.lang.String PREFIX_XMLNS>;

        if $r27 != $r26 goto label05;

     label04:
        interfaceinvoke r5.<org.apache.xerces.xni.XMLAttributes: void removeAttributeAt(int)>(i1);

     label05:
        $i4 = (int) -1;

        i1 = i1 + $i4;

     label06:
        if i1 >= 0 goto label03;

        goto label12;

     label07:
        $z3 = r0.<org.apache.xerces.parsers.AbstractSAXParser: boolean fXMLNSURIs>;

        if $z3 != 0 goto label12;

        i2 = $i0 - 1;

        goto label11;

     label08:
        $r10 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.xni.QName fQName>;

        interfaceinvoke r5.<org.apache.xerces.xni.XMLAttributes: void getName(int,org.apache.xerces.xni.QName)>(i2, $r10);

        $r11 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.xni.QName fQName>;

        $r13 = $r11.<org.apache.xerces.xni.QName: java.lang.String prefix>;

        $r12 = <org.apache.xerces.util.XMLSymbols: java.lang.String PREFIX_XMLNS>;

        if $r13 == $r12 goto label09;

        $r18 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.xni.QName fQName>;

        $r20 = $r18.<org.apache.xerces.xni.QName: java.lang.String rawname>;

        $r19 = <org.apache.xerces.util.XMLSymbols: java.lang.String PREFIX_XMLNS>;

        if $r20 != $r19 goto label10;

     label09:
        $r14 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.xni.QName fQName>;

        $r14.<org.apache.xerces.xni.QName: java.lang.String prefix> = "";

        $r15 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.xni.QName fQName>;

        $r15.<org.apache.xerces.xni.QName: java.lang.String uri> = "";

        $r16 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.xni.QName fQName>;

        $r16.<org.apache.xerces.xni.QName: java.lang.String localpart> = "";

        $r17 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.xni.QName fQName>;

        interfaceinvoke r5.<org.apache.xerces.xni.XMLAttributes: void setName(int,org.apache.xerces.xni.QName)>(i2, $r17);

     label10:
        $i6 = (int) -1;

        i2 = i2 + $i6;

     label11:
        if i2 >= 0 goto label08;

     label12:
        r0.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.xni.Augmentations fAugmentations> = r3;

        $r34 = r4.<org.apache.xerces.xni.QName: java.lang.String uri>;

        if $r34 == null goto label13;

        $r35 = r4.<org.apache.xerces.xni.QName: java.lang.String uri>;

        goto label14;

     label13:
        $r35 = "";

     label14:
        r36 = $r35;

        $z1 = r0.<org.apache.xerces.parsers.AbstractSAXParser: boolean fNamespaces>;

        if $z1 == 0 goto label15;

        $r37 = r4.<org.apache.xerces.xni.QName: java.lang.String localpart>;

        goto label16;

     label15:
        $r37 = "";

     label16:
        $r6 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy fAttributesProxy>;

        virtualinvoke $r6.<org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy: void setAttributes(org.apache.xerces.xni.XMLAttributes)>(r5);

        $r9 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.ContentHandler fContentHandler>;

        $r8 = r4.<org.apache.xerces.xni.QName: java.lang.String rawname>;

        $r7 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy fAttributesProxy>;

        interfaceinvoke $r9.<org.xml.sax.ContentHandler: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>(r36, $r37, $r8, $r7);

     label17:
        goto label19;

     label18:
        $r32 := @caughtexception;

        $r38 = new org.apache.xerces.xni.XNIException;

        specialinvoke $r38.<org.apache.xerces.xni.XNIException: void <init>(java.lang.Exception)>($r32);

        throw $r38;

     label19:
        return;

        catch org.xml.sax.SAXException from label01 to label17 with label18;
    }

    public void characters(org.apache.xerces.xni.XMLString, org.apache.xerces.xni.Augmentations) throws org.apache.xerces.xni.XNIException
    {
        org.apache.xerces.xni.XMLString r0;
        int $i0, $i1, $i2, $i3, $i4;
        org.xml.sax.DocumentHandler $r2, $r7;
        org.xml.sax.ContentHandler $r3, $r5;
        org.apache.xerces.xni.XNIException $r9;
        org.apache.xerces.parsers.AbstractSAXParser r1;
        org.apache.xerces.xni.Augmentations r10;
        org.xml.sax.SAXException $r8;
        char[] $r4, $r6;

        r1 := @this: org.apache.xerces.parsers.AbstractSAXParser;

        r0 := @parameter0: org.apache.xerces.xni.XMLString;

        r10 := @parameter1: org.apache.xerces.xni.Augmentations;

        $i0 = r0.<org.apache.xerces.xni.XMLString: int length>;

        if $i0 != 0 goto label1;

        return;

     label1:
        $r2 = r1.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.DocumentHandler fDocumentHandler>;

        if $r2 == null goto label2;

        $r7 = r1.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.DocumentHandler fDocumentHandler>;

        $r6 = r0.<org.apache.xerces.xni.XMLString: char[] ch>;

        $i4 = r0.<org.apache.xerces.xni.XMLString: int offset>;

        $i3 = r0.<org.apache.xerces.xni.XMLString: int length>;

        interfaceinvoke $r7.<org.xml.sax.DocumentHandler: void characters(char[],int,int)>($r6, $i4, $i3);

     label2:
        $r3 = r1.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.ContentHandler fContentHandler>;

        if $r3 == null goto label3;

        $r5 = r1.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.ContentHandler fContentHandler>;

        $r4 = r0.<org.apache.xerces.xni.XMLString: char[] ch>;

        $i2 = r0.<org.apache.xerces.xni.XMLString: int offset>;

        $i1 = r0.<org.apache.xerces.xni.XMLString: int length>;

        interfaceinvoke $r5.<org.xml.sax.ContentHandler: void characters(char[],int,int)>($r4, $i2, $i1);

     label3:
        goto label5;

     label4:
        $r8 := @caughtexception;

        $r9 = new org.apache.xerces.xni.XNIException;

        specialinvoke $r9.<org.apache.xerces.xni.XNIException: void <init>(java.lang.Exception)>($r8);

        throw $r9;

     label5:
        return;

        catch org.xml.sax.SAXException from label1 to label3 with label4;
    }

    public void ignorableWhitespace(org.apache.xerces.xni.XMLString, org.apache.xerces.xni.Augmentations) throws org.apache.xerces.xni.XNIException
    {
        org.apache.xerces.xni.XMLString r3;
        org.apache.xerces.xni.Augmentations r10;
        org.xml.sax.SAXException $r8;
        int $i0, $i1, $i2, $i3;
        org.xml.sax.DocumentHandler $r1, $r7;
        char[] $r4, $r6;
        org.xml.sax.ContentHandler $r2, $r5;
        org.apache.xerces.xni.XNIException $r9;
        org.apache.xerces.parsers.AbstractSAXParser r0;

        r0 := @this: org.apache.xerces.parsers.AbstractSAXParser;

        r3 := @parameter0: org.apache.xerces.xni.XMLString;

        r10 := @parameter1: org.apache.xerces.xni.Augmentations;

     label1:
        $r1 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.DocumentHandler fDocumentHandler>;

        if $r1 == null goto label2;

        $r7 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.DocumentHandler fDocumentHandler>;

        $r6 = r3.<org.apache.xerces.xni.XMLString: char[] ch>;

        $i3 = r3.<org.apache.xerces.xni.XMLString: int offset>;

        $i2 = r3.<org.apache.xerces.xni.XMLString: int length>;

        interfaceinvoke $r7.<org.xml.sax.DocumentHandler: void ignorableWhitespace(char[],int,int)>($r6, $i3, $i2);

     label2:
        $r2 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.ContentHandler fContentHandler>;

        if $r2 == null goto label3;

        $r5 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.ContentHandler fContentHandler>;

        $r4 = r3.<org.apache.xerces.xni.XMLString: char[] ch>;

        $i1 = r3.<org.apache.xerces.xni.XMLString: int offset>;

        $i0 = r3.<org.apache.xerces.xni.XMLString: int length>;

        interfaceinvoke $r5.<org.xml.sax.ContentHandler: void ignorableWhitespace(char[],int,int)>($r4, $i1, $i0);

     label3:
        goto label5;

     label4:
        $r8 := @caughtexception;

        $r9 = new org.apache.xerces.xni.XNIException;

        specialinvoke $r9.<org.apache.xerces.xni.XNIException: void <init>(java.lang.Exception)>($r8);

        throw $r9;

     label5:
        return;

        catch org.xml.sax.SAXException from label1 to label3 with label4;
    }

    public void endElement(org.apache.xerces.xni.QName, org.apache.xerces.xni.Augmentations) throws org.apache.xerces.xni.XNIException
    {
        org.xml.sax.DocumentHandler $r1, $r9;
        org.xml.sax.ContentHandler $r2, $r7;
        java.lang.String $r5, $r6, $r8, $r12, r13, $r14;
        org.apache.xerces.xni.XNIException $r11;
        org.apache.xerces.parsers.AbstractSAXParser r0;
        boolean $z0, $z1;
        org.apache.xerces.xni.Augmentations r3;
        org.xml.sax.SAXException $r10;
        org.apache.xerces.xni.QName r4;

        r0 := @this: org.apache.xerces.parsers.AbstractSAXParser;

        r4 := @parameter0: org.apache.xerces.xni.QName;

        r3 := @parameter1: org.apache.xerces.xni.Augmentations;

     label1:
        $r1 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.DocumentHandler fDocumentHandler>;

        if $r1 == null goto label2;

        $r9 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.DocumentHandler fDocumentHandler>;

        $r8 = r4.<org.apache.xerces.xni.QName: java.lang.String rawname>;

        interfaceinvoke $r9.<org.xml.sax.DocumentHandler: void endElement(java.lang.String)>($r8);

     label2:
        $r2 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.ContentHandler fContentHandler>;

        if $r2 == null goto label7;

        r0.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.xni.Augmentations fAugmentations> = r3;

        $r5 = r4.<org.apache.xerces.xni.QName: java.lang.String uri>;

        if $r5 == null goto label3;

        $r12 = r4.<org.apache.xerces.xni.QName: java.lang.String uri>;

        goto label4;

     label3:
        $r12 = "";

     label4:
        r13 = $r12;

        $z0 = r0.<org.apache.xerces.parsers.AbstractSAXParser: boolean fNamespaces>;

        if $z0 == 0 goto label5;

        $r14 = r4.<org.apache.xerces.xni.QName: java.lang.String localpart>;

        goto label6;

     label5:
        $r14 = "";

     label6:
        $r7 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.ContentHandler fContentHandler>;

        $r6 = r4.<org.apache.xerces.xni.QName: java.lang.String rawname>;

        interfaceinvoke $r7.<org.xml.sax.ContentHandler: void endElement(java.lang.String,java.lang.String,java.lang.String)>(r13, $r14, $r6);

        $z1 = r0.<org.apache.xerces.parsers.AbstractSAXParser: boolean fNamespaces>;

        if $z1 == 0 goto label7;

        virtualinvoke r0.<org.apache.xerces.parsers.AbstractSAXParser: void endNamespaceMapping()>();

     label7:
        goto label9;

     label8:
        $r10 := @caughtexception;

        $r11 = new org.apache.xerces.xni.XNIException;

        specialinvoke $r11.<org.apache.xerces.xni.XNIException: void <init>(java.lang.Exception)>($r10);

        throw $r11;

     label9:
        return;

        catch org.xml.sax.SAXException from label1 to label7 with label8;
    }

    public void startCDATA(org.apache.xerces.xni.Augmentations) throws org.apache.xerces.xni.XNIException
    {
        org.xml.sax.ext.LexicalHandler $r1, $r2;
        org.apache.xerces.xni.Augmentations r5;
        org.xml.sax.SAXException $r3;
        org.apache.xerces.xni.XNIException $r4;
        org.apache.xerces.parsers.AbstractSAXParser r0;

        r0 := @this: org.apache.xerces.parsers.AbstractSAXParser;

        r5 := @parameter0: org.apache.xerces.xni.Augmentations;

     label1:
        $r1 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.ext.LexicalHandler fLexicalHandler>;

        if $r1 == null goto label2;

        $r2 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.ext.LexicalHandler fLexicalHandler>;

        interfaceinvoke $r2.<org.xml.sax.ext.LexicalHandler: void startCDATA()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new org.apache.xerces.xni.XNIException;

        specialinvoke $r4.<org.apache.xerces.xni.XNIException: void <init>(java.lang.Exception)>($r3);

        throw $r4;

     label4:
        return;

        catch org.xml.sax.SAXException from label1 to label2 with label3;
    }

    public void endCDATA(org.apache.xerces.xni.Augmentations) throws org.apache.xerces.xni.XNIException
    {
        org.xml.sax.ext.LexicalHandler $r1, $r2;
        org.apache.xerces.xni.Augmentations r5;
        org.xml.sax.SAXException $r3;
        org.apache.xerces.xni.XNIException $r4;
        org.apache.xerces.parsers.AbstractSAXParser r0;

        r0 := @this: org.apache.xerces.parsers.AbstractSAXParser;

        r5 := @parameter0: org.apache.xerces.xni.Augmentations;

     label1:
        $r1 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.ext.LexicalHandler fLexicalHandler>;

        if $r1 == null goto label2;

        $r2 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.ext.LexicalHandler fLexicalHandler>;

        interfaceinvoke $r2.<org.xml.sax.ext.LexicalHandler: void endCDATA()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new org.apache.xerces.xni.XNIException;

        specialinvoke $r4.<org.apache.xerces.xni.XNIException: void <init>(java.lang.Exception)>($r3);

        throw $r4;

     label4:
        return;

        catch org.xml.sax.SAXException from label1 to label2 with label3;
    }

    public void comment(org.apache.xerces.xni.XMLString, org.apache.xerces.xni.Augmentations) throws org.apache.xerces.xni.XNIException
    {
        org.apache.xerces.xni.XMLString r2;
        org.xml.sax.ext.LexicalHandler $r1, $r4;
        org.apache.xerces.xni.Augmentations r7;
        org.xml.sax.SAXException $r5;
        int $i0;
        char[] $r3;
        org.apache.xerces.xni.XNIException $r6;
        org.apache.xerces.parsers.AbstractSAXParser r0;

        r0 := @this: org.apache.xerces.parsers.AbstractSAXParser;

        r2 := @parameter0: org.apache.xerces.xni.XMLString;

        r7 := @parameter1: org.apache.xerces.xni.Augmentations;

     label1:
        $r1 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.ext.LexicalHandler fLexicalHandler>;

        if $r1 == null goto label2;

        $r4 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.ext.LexicalHandler fLexicalHandler>;

        $r3 = r2.<org.apache.xerces.xni.XMLString: char[] ch>;

        $i0 = r2.<org.apache.xerces.xni.XMLString: int length>;

        interfaceinvoke $r4.<org.xml.sax.ext.LexicalHandler: void comment(char[],int,int)>($r3, 0, $i0);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = new org.apache.xerces.xni.XNIException;

        specialinvoke $r6.<org.apache.xerces.xni.XNIException: void <init>(java.lang.Exception)>($r5);

        throw $r6;

     label4:
        return;

        catch org.xml.sax.SAXException from label1 to label2 with label3;
    }

    public void processingInstruction(java.lang.String, org.apache.xerces.xni.XMLString, org.apache.xerces.xni.Augmentations) throws org.apache.xerces.xni.XNIException
    {
        org.apache.xerces.xni.XMLString r4;
        org.apache.xerces.xni.Augmentations r11;
        org.xml.sax.SAXException $r9;
        org.xml.sax.DocumentHandler $r1, $r7;
        org.xml.sax.ContentHandler $r2, $r5;
        java.lang.String r3, $r6, $r8;
        org.apache.xerces.xni.XNIException $r10;
        org.apache.xerces.parsers.AbstractSAXParser r0;

        r0 := @this: org.apache.xerces.parsers.AbstractSAXParser;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: org.apache.xerces.xni.XMLString;

        r11 := @parameter2: org.apache.xerces.xni.Augmentations;

     label1:
        $r1 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.DocumentHandler fDocumentHandler>;

        if $r1 == null goto label2;

        $r7 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.DocumentHandler fDocumentHandler>;

        $r8 = virtualinvoke r4.<org.apache.xerces.xni.XMLString: java.lang.String toString()>();

        interfaceinvoke $r7.<org.xml.sax.DocumentHandler: void processingInstruction(java.lang.String,java.lang.String)>(r3, $r8);

     label2:
        $r2 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.ContentHandler fContentHandler>;

        if $r2 == null goto label3;

        $r5 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.ContentHandler fContentHandler>;

        $r6 = virtualinvoke r4.<org.apache.xerces.xni.XMLString: java.lang.String toString()>();

        interfaceinvoke $r5.<org.xml.sax.ContentHandler: void processingInstruction(java.lang.String,java.lang.String)>(r3, $r6);

     label3:
        goto label5;

     label4:
        $r9 := @caughtexception;

        $r10 = new org.apache.xerces.xni.XNIException;

        specialinvoke $r10.<org.apache.xerces.xni.XNIException: void <init>(java.lang.Exception)>($r9);

        throw $r10;

     label5:
        return;

        catch org.xml.sax.SAXException from label1 to label3 with label4;
    }

    public void endDocument(org.apache.xerces.xni.Augmentations) throws org.apache.xerces.xni.XNIException
    {
        org.apache.xerces.xni.Augmentations r7;
        org.xml.sax.SAXException $r5;
        org.xml.sax.DocumentHandler $r1, $r4;
        org.xml.sax.ContentHandler $r2, $r3;
        org.apache.xerces.xni.XNIException $r6;
        org.apache.xerces.parsers.AbstractSAXParser r0;

        r0 := @this: org.apache.xerces.parsers.AbstractSAXParser;

        r7 := @parameter0: org.apache.xerces.xni.Augmentations;

     label1:
        $r1 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.DocumentHandler fDocumentHandler>;

        if $r1 == null goto label2;

        $r4 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.DocumentHandler fDocumentHandler>;

        interfaceinvoke $r4.<org.xml.sax.DocumentHandler: void endDocument()>();

     label2:
        $r2 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.ContentHandler fContentHandler>;

        if $r2 == null goto label3;

        $r3 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.ContentHandler fContentHandler>;

        interfaceinvoke $r3.<org.xml.sax.ContentHandler: void endDocument()>();

     label3:
        goto label5;

     label4:
        $r5 := @caughtexception;

        $r6 = new org.apache.xerces.xni.XNIException;

        specialinvoke $r6.<org.apache.xerces.xni.XNIException: void <init>(java.lang.Exception)>($r5);

        throw $r6;

     label5:
        return;

        catch org.xml.sax.SAXException from label1 to label3 with label4;
    }

    public void startExternalSubset(org.apache.xerces.xni.XMLResourceIdentifier, org.apache.xerces.xni.Augmentations) throws org.apache.xerces.xni.XNIException
    {
        org.apache.xerces.xni.Augmentations r1;
        org.apache.xerces.xni.XMLResourceIdentifier r2;
        org.apache.xerces.parsers.AbstractSAXParser r0;

        r0 := @this: org.apache.xerces.parsers.AbstractSAXParser;

        r2 := @parameter0: org.apache.xerces.xni.XMLResourceIdentifier;

        r1 := @parameter1: org.apache.xerces.xni.Augmentations;

        virtualinvoke r0.<org.apache.xerces.parsers.AbstractSAXParser: void startParameterEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)>("[dtd]", null, null, r1);

        return;
    }

    public void endExternalSubset(org.apache.xerces.xni.Augmentations) throws org.apache.xerces.xni.XNIException
    {
        org.apache.xerces.xni.Augmentations r1;
        org.apache.xerces.parsers.AbstractSAXParser r0;

        r0 := @this: org.apache.xerces.parsers.AbstractSAXParser;

        r1 := @parameter0: org.apache.xerces.xni.Augmentations;

        virtualinvoke r0.<org.apache.xerces.parsers.AbstractSAXParser: void endParameterEntity(java.lang.String,org.apache.xerces.xni.Augmentations)>("[dtd]", r1);

        return;
    }

    public void startParameterEntity(java.lang.String, org.apache.xerces.xni.XMLResourceIdentifier, java.lang.String, org.apache.xerces.xni.Augmentations) throws org.apache.xerces.xni.XNIException
    {
        org.apache.xerces.xni.XMLResourceIdentifier r11;
        org.xml.sax.ext.LexicalHandler $r2, $r4;
        org.apache.xerces.xni.Augmentations r0;
        org.xml.sax.SAXException $r9;
        java.lang.Boolean $r5;
        java.lang.Object $r6;
        java.lang.String r3, r12;
        org.xml.sax.ContentHandler $r7, $r8;
        org.apache.xerces.xni.XNIException $r10;
        org.apache.xerces.parsers.AbstractSAXParser r1;
        boolean $z0, $z1;

        r1 := @this: org.apache.xerces.parsers.AbstractSAXParser;

        r3 := @parameter0: java.lang.String;

        r11 := @parameter1: org.apache.xerces.xni.XMLResourceIdentifier;

        r12 := @parameter2: java.lang.String;

        r0 := @parameter3: org.apache.xerces.xni.Augmentations;

     label1:
        if r0 == null goto label2;

        $r5 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r6 = interfaceinvoke r0.<org.apache.xerces.xni.Augmentations: java.lang.Object getItem(java.lang.String)>("ENTITY_SKIPPED");

        $z1 = virtualinvoke $r5.<java.lang.Boolean: boolean equals(java.lang.Object)>($r6);

        if $z1 == 0 goto label2;

        $r7 = r1.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.ContentHandler fContentHandler>;

        if $r7 == null goto label3;

        $r8 = r1.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.ContentHandler fContentHandler>;

        interfaceinvoke $r8.<org.xml.sax.ContentHandler: void skippedEntity(java.lang.String)>(r3);

        goto label3;

     label2:
        $r2 = r1.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.ext.LexicalHandler fLexicalHandler>;

        if $r2 == null goto label3;

        $z0 = r1.<org.apache.xerces.parsers.AbstractSAXParser: boolean fLexicalHandlerParameterEntities>;

        if $z0 == 0 goto label3;

        $r4 = r1.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.ext.LexicalHandler fLexicalHandler>;

        interfaceinvoke $r4.<org.xml.sax.ext.LexicalHandler: void startEntity(java.lang.String)>(r3);

     label3:
        goto label5;

     label4:
        $r9 := @caughtexception;

        $r10 = new org.apache.xerces.xni.XNIException;

        specialinvoke $r10.<org.apache.xerces.xni.XNIException: void <init>(java.lang.Exception)>($r9);

        throw $r10;

     label5:
        return;

        catch org.xml.sax.SAXException from label1 to label3 with label4;
    }

    public void endParameterEntity(java.lang.String, org.apache.xerces.xni.Augmentations) throws org.apache.xerces.xni.XNIException
    {
        org.xml.sax.ext.LexicalHandler $r2, $r4;
        org.apache.xerces.xni.Augmentations r0;
        org.xml.sax.SAXException $r7;
        java.lang.Boolean $r5;
        java.lang.Object $r6;
        java.lang.String r3;
        org.apache.xerces.xni.XNIException $r8;
        org.apache.xerces.parsers.AbstractSAXParser r1;
        boolean $z0, $z1;

        r1 := @this: org.apache.xerces.parsers.AbstractSAXParser;

        r3 := @parameter0: java.lang.String;

        r0 := @parameter1: org.apache.xerces.xni.Augmentations;

     label1:
        if r0 == null goto label2;

        $r5 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r6 = interfaceinvoke r0.<org.apache.xerces.xni.Augmentations: java.lang.Object getItem(java.lang.String)>("ENTITY_SKIPPED");

        $z1 = virtualinvoke $r5.<java.lang.Boolean: boolean equals(java.lang.Object)>($r6);

        if $z1 != 0 goto label3;

     label2:
        $r2 = r1.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.ext.LexicalHandler fLexicalHandler>;

        if $r2 == null goto label3;

        $z0 = r1.<org.apache.xerces.parsers.AbstractSAXParser: boolean fLexicalHandlerParameterEntities>;

        if $z0 == 0 goto label3;

        $r4 = r1.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.ext.LexicalHandler fLexicalHandler>;

        interfaceinvoke $r4.<org.xml.sax.ext.LexicalHandler: void endEntity(java.lang.String)>(r3);

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

        $r8 = new org.apache.xerces.xni.XNIException;

        specialinvoke $r8.<org.apache.xerces.xni.XNIException: void <init>(java.lang.Exception)>($r7);

        throw $r8;

     label5:
        return;

        catch org.xml.sax.SAXException from label1 to label3 with label4;
    }

    public void elementDecl(java.lang.String, java.lang.String, org.apache.xerces.xni.Augmentations) throws org.apache.xerces.xni.XNIException
    {
        org.apache.xerces.xni.Augmentations r7;
        org.xml.sax.ext.DeclHandler $r1, $r4;
        org.xml.sax.SAXException $r5;
        java.lang.String r2, r3;
        org.apache.xerces.xni.XNIException $r6;
        org.apache.xerces.parsers.AbstractSAXParser r0;

        r0 := @this: org.apache.xerces.parsers.AbstractSAXParser;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r7 := @parameter2: org.apache.xerces.xni.Augmentations;

     label1:
        $r1 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.ext.DeclHandler fDeclHandler>;

        if $r1 == null goto label2;

        $r4 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.ext.DeclHandler fDeclHandler>;

        interfaceinvoke $r4.<org.xml.sax.ext.DeclHandler: void elementDecl(java.lang.String,java.lang.String)>(r2, r3);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = new org.apache.xerces.xni.XNIException;

        specialinvoke $r6.<org.apache.xerces.xni.XNIException: void <init>(java.lang.Exception)>($r5);

        throw $r6;

     label4:
        return;

        catch org.xml.sax.SAXException from label1 to label2 with label3;
    }

    public void attributeDecl(java.lang.String, java.lang.String, java.lang.String, java.lang.String[], java.lang.String, org.apache.xerces.xni.XMLString, org.apache.xerces.xni.XMLString, org.apache.xerces.xni.Augmentations) throws org.apache.xerces.xni.XNIException
    {
        org.apache.xerces.xni.XMLString r15, r20;
        java.lang.String[] r13;
        java.lang.StringBuffer $r2, $r4, $r6, $r12;
        int $i0, $i1, i2, $i3;
        org.apache.xerces.util.SymbolHash $r8, $r11;
        java.lang.Boolean $r10;
        java.lang.String r3, r5, $r7, $r14, r16, r22, $r23;
        org.apache.xerces.xni.XNIException $r19;
        org.apache.xerces.parsers.AbstractSAXParser r0;
        boolean $z0, $z1, $z2;
        org.apache.xerces.xni.Augmentations r21;
        org.xml.sax.ext.DeclHandler $r1, $r17;
        org.xml.sax.SAXException $r18;
        java.lang.Object $r9;

        r0 := @this: org.apache.xerces.parsers.AbstractSAXParser;

        r3 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.String;

        r22 := @parameter2: java.lang.String;

        r13 := @parameter3: java.lang.String[];

        r16 := @parameter4: java.lang.String;

        r15 := @parameter5: org.apache.xerces.xni.XMLString;

        r20 := @parameter6: org.apache.xerces.xni.XMLString;

        r21 := @parameter7: org.apache.xerces.xni.Augmentations;

     label01:
        $r1 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.ext.DeclHandler fDeclHandler>;

        if $r1 == null goto label12;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>(java.lang.String)>(r3);

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(60);

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        $r8 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.util.SymbolHash fDeclaredAttrs>;

        $r9 = virtualinvoke $r8.<org.apache.xerces.util.SymbolHash: java.lang.Object get(java.lang.Object)>($r7);

        if $r9 == null goto label02;

        return;

     label02:
        $r11 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.util.SymbolHash fDeclaredAttrs>;

        $r10 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r11.<org.apache.xerces.util.SymbolHash: void put(java.lang.Object,java.lang.Object)>($r7, $r10);

        $z0 = virtualinvoke r22.<java.lang.String: boolean equals(java.lang.Object)>("NOTATION");

        if $z0 != 0 goto label03;

        $z2 = virtualinvoke r22.<java.lang.String: boolean equals(java.lang.Object)>("ENUMERATION");

        if $z2 == 0 goto label09;

     label03:
        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $z1 = virtualinvoke r22.<java.lang.String: boolean equals(java.lang.Object)>("NOTATION");

        if $z1 == 0 goto label04;

        virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r22);

        virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" (");

        goto label05;

     label04:
        virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(40);

     label05:
        i2 = 0;

        goto label08;

     label06:
        $r14 = r13[i2];

        virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $i0 = lengthof r13;

        $i1 = $i0 - 1;

        if i2 >= $i1 goto label07;

        virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(124);

     label07:
        i2 = i2 + 1;

     label08:
        $i3 = lengthof r13;

        if i2 < $i3 goto label06;

        virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(41);

        r22 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

     label09:
        if r15 != null goto label10;

        $r23 = null;

        goto label11;

     label10:
        $r23 = virtualinvoke r15.<org.apache.xerces.xni.XMLString: java.lang.String toString()>();

     label11:
        $r17 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.ext.DeclHandler fDeclHandler>;

        interfaceinvoke $r17.<org.xml.sax.ext.DeclHandler: void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r3, r5, r22, r16, $r23);

     label12:
        goto label14;

     label13:
        $r18 := @caughtexception;

        $r19 = new org.apache.xerces.xni.XNIException;

        specialinvoke $r19.<org.apache.xerces.xni.XNIException: void <init>(java.lang.Exception)>($r18);

        throw $r19;

     label14:
        return;

        catch org.xml.sax.SAXException from label01 to label12 with label13;
    }

    public void internalEntityDecl(java.lang.String, org.apache.xerces.xni.XMLString, org.apache.xerces.xni.XMLString, org.apache.xerces.xni.Augmentations) throws org.apache.xerces.xni.XNIException
    {
        org.apache.xerces.xni.XMLString r3, r8;
        org.apache.xerces.xni.Augmentations r9;
        org.xml.sax.ext.DeclHandler $r1, $r4;
        org.xml.sax.SAXException $r6;
        java.lang.String r2, $r5;
        org.apache.xerces.xni.XNIException $r7;
        org.apache.xerces.parsers.AbstractSAXParser r0;

        r0 := @this: org.apache.xerces.parsers.AbstractSAXParser;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: org.apache.xerces.xni.XMLString;

        r8 := @parameter2: org.apache.xerces.xni.XMLString;

        r9 := @parameter3: org.apache.xerces.xni.Augmentations;

     label1:
        $r1 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.ext.DeclHandler fDeclHandler>;

        if $r1 == null goto label2;

        $r4 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.ext.DeclHandler fDeclHandler>;

        $r5 = virtualinvoke r3.<org.apache.xerces.xni.XMLString: java.lang.String toString()>();

        interfaceinvoke $r4.<org.xml.sax.ext.DeclHandler: void internalEntityDecl(java.lang.String,java.lang.String)>(r2, $r5);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        $r7 = new org.apache.xerces.xni.XNIException;

        specialinvoke $r7.<org.apache.xerces.xni.XNIException: void <init>(java.lang.Exception)>($r6);

        throw $r7;

     label4:
        return;

        catch org.xml.sax.SAXException from label1 to label2 with label3;
    }

    public void externalEntityDecl(java.lang.String, org.apache.xerces.xni.XMLResourceIdentifier, org.apache.xerces.xni.Augmentations) throws org.apache.xerces.xni.XNIException
    {
        org.apache.xerces.xni.XMLResourceIdentifier r2;
        org.apache.xerces.xni.Augmentations r8;
        org.xml.sax.ext.DeclHandler $r1, $r5;
        org.xml.sax.SAXException $r6;
        java.lang.String $r3, r4, $r9;
        org.apache.xerces.xni.XNIException $r7;
        org.apache.xerces.parsers.AbstractSAXParser r0;
        boolean $z0;

        r0 := @this: org.apache.xerces.parsers.AbstractSAXParser;

        r4 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.xerces.xni.XMLResourceIdentifier;

        r8 := @parameter2: org.apache.xerces.xni.Augmentations;

     label1:
        $r1 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.ext.DeclHandler fDeclHandler>;

        if $r1 == null goto label4;

        $r3 = interfaceinvoke r2.<org.apache.xerces.xni.XMLResourceIdentifier: java.lang.String getPublicId()>();

        $z0 = r0.<org.apache.xerces.parsers.AbstractSAXParser: boolean fResolveDTDURIs>;

        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke r2.<org.apache.xerces.xni.XMLResourceIdentifier: java.lang.String getExpandedSystemId()>();

        goto label3;

     label2:
        $r9 = interfaceinvoke r2.<org.apache.xerces.xni.XMLResourceIdentifier: java.lang.String getLiteralSystemId()>();

     label3:
        $r5 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.ext.DeclHandler fDeclHandler>;

        interfaceinvoke $r5.<org.xml.sax.ext.DeclHandler: void externalEntityDecl(java.lang.String,java.lang.String,java.lang.String)>(r4, $r3, $r9);

     label4:
        goto label6;

     label5:
        $r6 := @caughtexception;

        $r7 = new org.apache.xerces.xni.XNIException;

        specialinvoke $r7.<org.apache.xerces.xni.XNIException: void <init>(java.lang.Exception)>($r6);

        throw $r7;

     label6:
        return;

        catch org.xml.sax.SAXException from label1 to label4 with label5;
    }

    public void unparsedEntityDecl(java.lang.String, org.apache.xerces.xni.XMLResourceIdentifier, java.lang.String, org.apache.xerces.xni.Augmentations) throws org.apache.xerces.xni.XNIException
    {
        org.apache.xerces.xni.XMLResourceIdentifier r2;
        org.apache.xerces.xni.Augmentations r9;
        org.xml.sax.DTDHandler $r1, $r6;
        org.xml.sax.SAXException $r7;
        java.lang.String $r3, r4, r5, $r10;
        org.apache.xerces.xni.XNIException $r8;
        org.apache.xerces.parsers.AbstractSAXParser r0;
        boolean $z0;

        r0 := @this: org.apache.xerces.parsers.AbstractSAXParser;

        r4 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.xerces.xni.XMLResourceIdentifier;

        r5 := @parameter2: java.lang.String;

        r9 := @parameter3: org.apache.xerces.xni.Augmentations;

     label1:
        $r1 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.DTDHandler fDTDHandler>;

        if $r1 == null goto label4;

        $r3 = interfaceinvoke r2.<org.apache.xerces.xni.XMLResourceIdentifier: java.lang.String getPublicId()>();

        $z0 = r0.<org.apache.xerces.parsers.AbstractSAXParser: boolean fResolveDTDURIs>;

        if $z0 == 0 goto label2;

        $r10 = interfaceinvoke r2.<org.apache.xerces.xni.XMLResourceIdentifier: java.lang.String getExpandedSystemId()>();

        goto label3;

     label2:
        $r10 = interfaceinvoke r2.<org.apache.xerces.xni.XMLResourceIdentifier: java.lang.String getLiteralSystemId()>();

     label3:
        $r6 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.DTDHandler fDTDHandler>;

        interfaceinvoke $r6.<org.xml.sax.DTDHandler: void unparsedEntityDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r4, $r3, $r10, r5);

     label4:
        goto label6;

     label5:
        $r7 := @caughtexception;

        $r8 = new org.apache.xerces.xni.XNIException;

        specialinvoke $r8.<org.apache.xerces.xni.XNIException: void <init>(java.lang.Exception)>($r7);

        throw $r8;

     label6:
        return;

        catch org.xml.sax.SAXException from label1 to label4 with label5;
    }

    public void notationDecl(java.lang.String, org.apache.xerces.xni.XMLResourceIdentifier, org.apache.xerces.xni.Augmentations) throws org.apache.xerces.xni.XNIException
    {
        org.apache.xerces.xni.XMLResourceIdentifier r2;
        org.apache.xerces.xni.Augmentations r8;
        org.xml.sax.DTDHandler $r1, $r5;
        org.xml.sax.SAXException $r6;
        java.lang.String $r3, r4, $r9;
        org.apache.xerces.xni.XNIException $r7;
        org.apache.xerces.parsers.AbstractSAXParser r0;
        boolean $z0;

        r0 := @this: org.apache.xerces.parsers.AbstractSAXParser;

        r4 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.xerces.xni.XMLResourceIdentifier;

        r8 := @parameter2: org.apache.xerces.xni.Augmentations;

     label1:
        $r1 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.DTDHandler fDTDHandler>;

        if $r1 == null goto label4;

        $r3 = interfaceinvoke r2.<org.apache.xerces.xni.XMLResourceIdentifier: java.lang.String getPublicId()>();

        $z0 = r0.<org.apache.xerces.parsers.AbstractSAXParser: boolean fResolveDTDURIs>;

        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke r2.<org.apache.xerces.xni.XMLResourceIdentifier: java.lang.String getExpandedSystemId()>();

        goto label3;

     label2:
        $r9 = interfaceinvoke r2.<org.apache.xerces.xni.XMLResourceIdentifier: java.lang.String getLiteralSystemId()>();

     label3:
        $r5 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.DTDHandler fDTDHandler>;

        interfaceinvoke $r5.<org.xml.sax.DTDHandler: void notationDecl(java.lang.String,java.lang.String,java.lang.String)>(r4, $r3, $r9);

     label4:
        goto label6;

     label5:
        $r6 := @caughtexception;

        $r7 = new org.apache.xerces.xni.XNIException;

        specialinvoke $r7.<org.apache.xerces.xni.XNIException: void <init>(java.lang.Exception)>($r6);

        throw $r7;

     label6:
        return;

        catch org.xml.sax.SAXException from label1 to label4 with label5;
    }

    public void endDTD(org.apache.xerces.xni.Augmentations) throws org.apache.xerces.xni.XNIException
    {
        org.xml.sax.ext.LexicalHandler $r1, $r4;
        org.apache.xerces.xni.Augmentations r7;
        org.xml.sax.SAXException $r5;
        org.apache.xerces.util.SymbolHash $r2, $r3;
        org.apache.xerces.xni.XNIException $r6;
        org.apache.xerces.parsers.AbstractSAXParser r0;

        r0 := @this: org.apache.xerces.parsers.AbstractSAXParser;

        r7 := @parameter0: org.apache.xerces.xni.Augmentations;

        r0.<org.apache.xerces.parsers.AbstractSAXParser: boolean fInDTD> = 0;

     label1:
        $r1 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.ext.LexicalHandler fLexicalHandler>;

        if $r1 == null goto label2;

        $r4 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.ext.LexicalHandler fLexicalHandler>;

        interfaceinvoke $r4.<org.xml.sax.ext.LexicalHandler: void endDTD()>();

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = new org.apache.xerces.xni.XNIException;

        specialinvoke $r6.<org.apache.xerces.xni.XNIException: void <init>(java.lang.Exception)>($r5);

        throw $r6;

     label4:
        $r2 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.util.SymbolHash fDeclaredAttrs>;

        if $r2 == null goto label5;

        $r3 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.util.SymbolHash fDeclaredAttrs>;

        virtualinvoke $r3.<org.apache.xerces.util.SymbolHash: void clear()>();

     label5:
        return;

        catch org.xml.sax.SAXException from label1 to label2 with label3;
    }

    public void parse(java.lang.String) throws org.xml.sax.SAXException, java.io.IOException
    {
        org.xml.sax.ext.Locator2Impl $r12;
        int $i0, $i1;
        java.lang.String r1, $r9, $r13, $r14, $r15, $r16, $r17;
        org.apache.xerces.xni.XNIException $r3;
        org.apache.xerces.parsers.AbstractSAXParser r2;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.io.IOException $r6, $r19;
        org.apache.xerces.xni.parser.XMLInputSource $r0;
        java.lang.Exception $r4, $r11;
        org.xml.sax.SAXParseException $r21;
        org.xml.sax.SAXException $r5, $r7, $r8, $r18, $r20;
        org.apache.xerces.xni.parser.XMLParseException $r10;

        r2 := @this: org.apache.xerces.parsers.AbstractSAXParser;

        r1 := @parameter0: java.lang.String;

        $r0 = new org.apache.xerces.xni.parser.XMLInputSource;

        specialinvoke $r0.<org.apache.xerces.xni.parser.XMLInputSource: void <init>(java.lang.String,java.lang.String,java.lang.String)>(null, r1, null);

     label01:
        virtualinvoke r2.<org.apache.xerces.parsers.AbstractSAXParser: void parse(org.apache.xerces.xni.parser.XMLInputSource)>($r0);

     label02:
        goto label14;

     label03:
        $r10 := @caughtexception;

        $r11 = virtualinvoke $r10.<org.apache.xerces.xni.parser.XMLParseException: java.lang.Exception getException()>();

        if $r11 == null goto label04;

        $z2 = $r11 instanceof java.io.CharConversionException;

        if $z2 == 0 goto label07;

     label04:
        $r12 = new org.xml.sax.ext.Locator2Impl;

        specialinvoke $r12.<org.xml.sax.ext.Locator2Impl: void <init>()>();

        $r13 = r2.<org.apache.xerces.parsers.AbstractSAXParser: java.lang.String fVersion>;

        virtualinvoke $r12.<org.xml.sax.ext.Locator2Impl: void setXMLVersion(java.lang.String)>($r13);

        $r14 = virtualinvoke $r10.<org.apache.xerces.xni.parser.XMLParseException: java.lang.String getPublicId()>();

        virtualinvoke $r12.<org.xml.sax.ext.Locator2Impl: void setPublicId(java.lang.String)>($r14);

        $r15 = virtualinvoke $r10.<org.apache.xerces.xni.parser.XMLParseException: java.lang.String getExpandedSystemId()>();

        virtualinvoke $r12.<org.xml.sax.ext.Locator2Impl: void setSystemId(java.lang.String)>($r15);

        $i0 = virtualinvoke $r10.<org.apache.xerces.xni.parser.XMLParseException: int getLineNumber()>();

        virtualinvoke $r12.<org.xml.sax.ext.Locator2Impl: void setLineNumber(int)>($i0);

        $i1 = virtualinvoke $r10.<org.apache.xerces.xni.parser.XMLParseException: int getColumnNumber()>();

        virtualinvoke $r12.<org.xml.sax.ext.Locator2Impl: void setColumnNumber(int)>($i1);

        if $r11 != null goto label05;

        $r21 = new org.xml.sax.SAXParseException;

        $r17 = virtualinvoke $r10.<org.apache.xerces.xni.parser.XMLParseException: java.lang.String getMessage()>();

        specialinvoke $r21.<org.xml.sax.SAXParseException: void <init>(java.lang.String,org.xml.sax.Locator)>($r17, $r12);

        goto label06;

     label05:
        $r21 = new org.xml.sax.SAXParseException;

        $r16 = virtualinvoke $r10.<org.apache.xerces.xni.parser.XMLParseException: java.lang.String getMessage()>();

        specialinvoke $r21.<org.xml.sax.SAXParseException: void <init>(java.lang.String,org.xml.sax.Locator,java.lang.Exception)>($r16, $r12, $r11);

     label06:
        throw $r21;

     label07:
        $z3 = $r11 instanceof org.xml.sax.SAXException;

        if $z3 == 0 goto label08;

        $r20 = (org.xml.sax.SAXException) $r11;

        throw $r20;

     label08:
        $z4 = $r11 instanceof java.io.IOException;

        if $z4 == 0 goto label09;

        $r19 = (java.io.IOException) $r11;

        throw $r19;

     label09:
        $r18 = new org.xml.sax.SAXException;

        specialinvoke $r18.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r11);

        throw $r18;

     label10:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<org.apache.xerces.xni.XNIException: java.lang.Exception getException()>();

        if $r4 != null goto label11;

        $r8 = new org.xml.sax.SAXException;

        $r9 = virtualinvoke $r3.<org.apache.xerces.xni.XNIException: java.lang.String getMessage()>();

        specialinvoke $r8.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r9);

        throw $r8;

     label11:
        $z0 = $r4 instanceof org.xml.sax.SAXException;

        if $z0 == 0 goto label12;

        $r7 = (org.xml.sax.SAXException) $r4;

        throw $r7;

     label12:
        $z1 = $r4 instanceof java.io.IOException;

        if $z1 == 0 goto label13;

        $r6 = (java.io.IOException) $r4;

        throw $r6;

     label13:
        $r5 = new org.xml.sax.SAXException;

        specialinvoke $r5.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r4);

        throw $r5;

     label14:
        return;

        catch org.apache.xerces.xni.parser.XMLParseException from label01 to label02 with label03;
        catch org.apache.xerces.xni.XNIException from label01 to label02 with label10;
    }

    public void parse(org.xml.sax.InputSource) throws org.xml.sax.SAXException, java.io.IOException
    {
        org.xml.sax.ext.Locator2Impl $r17;
        org.apache.xerces.xni.XNIException $r8;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.xerces.xni.parser.XMLInputSource $r0;
        java.io.Reader $r5;
        java.lang.Exception $r9, $r16;
        org.xml.sax.SAXException $r10, $r12, $r13, $r23, $r25;
        org.apache.xerces.xni.parser.XMLParseException $r15;
        int $i0, $i1;
        java.lang.String $r2, $r3, $r6, $r14, $r18, $r19, $r20, $r21, $r22;
        org.apache.xerces.parsers.AbstractSAXParser r7;
        org.xml.sax.InputSource r1;
        java.io.IOException $r11, $r24;
        org.xml.sax.SAXParseException $r26;
        java.io.InputStream $r4;

        r7 := @this: org.apache.xerces.parsers.AbstractSAXParser;

        r1 := @parameter0: org.xml.sax.InputSource;

     label01:
        $r0 = new org.apache.xerces.xni.parser.XMLInputSource;

        $r2 = virtualinvoke r1.<org.xml.sax.InputSource: java.lang.String getPublicId()>();

        $r3 = virtualinvoke r1.<org.xml.sax.InputSource: java.lang.String getSystemId()>();

        specialinvoke $r0.<org.apache.xerces.xni.parser.XMLInputSource: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r2, $r3, null);

        $r4 = virtualinvoke r1.<org.xml.sax.InputSource: java.io.InputStream getByteStream()>();

        virtualinvoke $r0.<org.apache.xerces.xni.parser.XMLInputSource: void setByteStream(java.io.InputStream)>($r4);

        $r5 = virtualinvoke r1.<org.xml.sax.InputSource: java.io.Reader getCharacterStream()>();

        virtualinvoke $r0.<org.apache.xerces.xni.parser.XMLInputSource: void setCharacterStream(java.io.Reader)>($r5);

        $r6 = virtualinvoke r1.<org.xml.sax.InputSource: java.lang.String getEncoding()>();

        virtualinvoke $r0.<org.apache.xerces.xni.parser.XMLInputSource: void setEncoding(java.lang.String)>($r6);

        virtualinvoke r7.<org.apache.xerces.parsers.AbstractSAXParser: void parse(org.apache.xerces.xni.parser.XMLInputSource)>($r0);

     label02:
        goto label14;

     label03:
        $r15 := @caughtexception;

        $r16 = virtualinvoke $r15.<org.apache.xerces.xni.parser.XMLParseException: java.lang.Exception getException()>();

        if $r16 == null goto label04;

        $z2 = $r16 instanceof java.io.CharConversionException;

        if $z2 == 0 goto label07;

     label04:
        $r17 = new org.xml.sax.ext.Locator2Impl;

        specialinvoke $r17.<org.xml.sax.ext.Locator2Impl: void <init>()>();

        $r18 = r7.<org.apache.xerces.parsers.AbstractSAXParser: java.lang.String fVersion>;

        virtualinvoke $r17.<org.xml.sax.ext.Locator2Impl: void setXMLVersion(java.lang.String)>($r18);

        $r19 = virtualinvoke $r15.<org.apache.xerces.xni.parser.XMLParseException: java.lang.String getPublicId()>();

        virtualinvoke $r17.<org.xml.sax.ext.Locator2Impl: void setPublicId(java.lang.String)>($r19);

        $r20 = virtualinvoke $r15.<org.apache.xerces.xni.parser.XMLParseException: java.lang.String getExpandedSystemId()>();

        virtualinvoke $r17.<org.xml.sax.ext.Locator2Impl: void setSystemId(java.lang.String)>($r20);

        $i0 = virtualinvoke $r15.<org.apache.xerces.xni.parser.XMLParseException: int getLineNumber()>();

        virtualinvoke $r17.<org.xml.sax.ext.Locator2Impl: void setLineNumber(int)>($i0);

        $i1 = virtualinvoke $r15.<org.apache.xerces.xni.parser.XMLParseException: int getColumnNumber()>();

        virtualinvoke $r17.<org.xml.sax.ext.Locator2Impl: void setColumnNumber(int)>($i1);

        if $r16 != null goto label05;

        $r26 = new org.xml.sax.SAXParseException;

        $r22 = virtualinvoke $r15.<org.apache.xerces.xni.parser.XMLParseException: java.lang.String getMessage()>();

        specialinvoke $r26.<org.xml.sax.SAXParseException: void <init>(java.lang.String,org.xml.sax.Locator)>($r22, $r17);

        goto label06;

     label05:
        $r26 = new org.xml.sax.SAXParseException;

        $r21 = virtualinvoke $r15.<org.apache.xerces.xni.parser.XMLParseException: java.lang.String getMessage()>();

        specialinvoke $r26.<org.xml.sax.SAXParseException: void <init>(java.lang.String,org.xml.sax.Locator,java.lang.Exception)>($r21, $r17, $r16);

     label06:
        throw $r26;

     label07:
        $z3 = $r16 instanceof org.xml.sax.SAXException;

        if $z3 == 0 goto label08;

        $r25 = (org.xml.sax.SAXException) $r16;

        throw $r25;

     label08:
        $z4 = $r16 instanceof java.io.IOException;

        if $z4 == 0 goto label09;

        $r24 = (java.io.IOException) $r16;

        throw $r24;

     label09:
        $r23 = new org.xml.sax.SAXException;

        specialinvoke $r23.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r16);

        throw $r23;

     label10:
        $r8 := @caughtexception;

        $r9 = virtualinvoke $r8.<org.apache.xerces.xni.XNIException: java.lang.Exception getException()>();

        if $r9 != null goto label11;

        $r13 = new org.xml.sax.SAXException;

        $r14 = virtualinvoke $r8.<org.apache.xerces.xni.XNIException: java.lang.String getMessage()>();

        specialinvoke $r13.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r14);

        throw $r13;

     label11:
        $z0 = $r9 instanceof org.xml.sax.SAXException;

        if $z0 == 0 goto label12;

        $r12 = (org.xml.sax.SAXException) $r9;

        throw $r12;

     label12:
        $z1 = $r9 instanceof java.io.IOException;

        if $z1 == 0 goto label13;

        $r11 = (java.io.IOException) $r9;

        throw $r11;

     label13:
        $r10 = new org.xml.sax.SAXException;

        specialinvoke $r10.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r9);

        throw $r10;

     label14:
        return;

        catch org.apache.xerces.xni.parser.XMLParseException from label01 to label02 with label03;
        catch org.apache.xerces.xni.XNIException from label01 to label02 with label10;
    }

    public void setEntityResolver(org.xml.sax.EntityResolver)
    {
        org.apache.xerces.xni.parser.XMLParserConfiguration $r1, $r5, $r8;
        org.apache.xerces.xni.parser.XMLEntityResolver r11;
        org.apache.xerces.util.EntityResolver2Wrapper $r6, r12;
        org.apache.xerces.xni.parser.XMLConfigurationException $r10;
        org.xml.sax.EntityResolver r4;
        org.apache.xerces.parsers.AbstractSAXParser r0;
        boolean $z0, $z1, $z2, $z3;
        org.apache.xerces.util.EntityResolverWrapper $r3, r13;
        org.xml.sax.ext.EntityResolver2 $r7, $r9;
        java.lang.Object $r2;

        r0 := @this: org.apache.xerces.parsers.AbstractSAXParser;

        r4 := @parameter0: org.xml.sax.EntityResolver;

     label1:
        $r1 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        $r2 = interfaceinvoke $r1.<org.apache.xerces.xni.parser.XMLParserConfiguration: java.lang.Object getProperty(java.lang.String)>("http://apache.org/xml/properties/internal/entity-resolver");

        r11 = (org.apache.xerces.xni.parser.XMLEntityResolver) $r2;

        $z0 = r0.<org.apache.xerces.parsers.AbstractSAXParser: boolean fUseEntityResolver2>;

        if $z0 == 0 goto label3;

        $z2 = r4 instanceof org.xml.sax.ext.EntityResolver2;

        if $z2 == 0 goto label3;

        $z3 = r11 instanceof org.apache.xerces.util.EntityResolver2Wrapper;

        if $z3 == 0 goto label2;

        r12 = (org.apache.xerces.util.EntityResolver2Wrapper) r11;

        $r9 = (org.xml.sax.ext.EntityResolver2) r4;

        virtualinvoke r12.<org.apache.xerces.util.EntityResolver2Wrapper: void setEntityResolver(org.xml.sax.ext.EntityResolver2)>($r9);

        goto label5;

     label2:
        $r8 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        $r6 = new org.apache.xerces.util.EntityResolver2Wrapper;

        $r7 = (org.xml.sax.ext.EntityResolver2) r4;

        specialinvoke $r6.<org.apache.xerces.util.EntityResolver2Wrapper: void <init>(org.xml.sax.ext.EntityResolver2)>($r7);

        interfaceinvoke $r8.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setProperty(java.lang.String,java.lang.Object)>("http://apache.org/xml/properties/internal/entity-resolver", $r6);

        goto label5;

     label3:
        $z1 = r11 instanceof org.apache.xerces.util.EntityResolverWrapper;

        if $z1 == 0 goto label4;

        r13 = (org.apache.xerces.util.EntityResolverWrapper) r11;

        virtualinvoke r13.<org.apache.xerces.util.EntityResolverWrapper: void setEntityResolver(org.xml.sax.EntityResolver)>(r4);

        goto label5;

     label4:
        $r5 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        $r3 = new org.apache.xerces.util.EntityResolverWrapper;

        specialinvoke $r3.<org.apache.xerces.util.EntityResolverWrapper: void <init>(org.xml.sax.EntityResolver)>(r4);

        interfaceinvoke $r5.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setProperty(java.lang.String,java.lang.Object)>("http://apache.org/xml/properties/internal/entity-resolver", $r3);

     label5:
        goto label7;

     label6:
        $r10 := @caughtexception;

     label7:
        return;

        catch org.apache.xerces.xni.parser.XMLConfigurationException from label1 to label5 with label6;
    }

    public org.xml.sax.EntityResolver getEntityResolver()
    {
        org.apache.xerces.xni.parser.XMLParserConfiguration $r1;
        org.apache.xerces.util.EntityResolverWrapper $r4;
        org.apache.xerces.xni.parser.XMLEntityResolver r7;
        org.apache.xerces.util.EntityResolver2Wrapper $r3;
        java.lang.Object $r2;
        org.apache.xerces.xni.parser.XMLConfigurationException $r5;
        org.xml.sax.EntityResolver r6;
        org.apache.xerces.parsers.AbstractSAXParser r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.xerces.parsers.AbstractSAXParser;

        r6 = null;

     label1:
        $r1 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        $r2 = interfaceinvoke $r1.<org.apache.xerces.xni.parser.XMLParserConfiguration: java.lang.Object getProperty(java.lang.String)>("http://apache.org/xml/properties/internal/entity-resolver");

        r7 = (org.apache.xerces.xni.parser.XMLEntityResolver) $r2;

        if r7 == null goto label3;

        $z0 = r7 instanceof org.apache.xerces.util.EntityResolverWrapper;

        if $z0 == 0 goto label2;

        $r4 = (org.apache.xerces.util.EntityResolverWrapper) r7;

        r6 = virtualinvoke $r4.<org.apache.xerces.util.EntityResolverWrapper: org.xml.sax.EntityResolver getEntityResolver()>();

        goto label3;

     label2:
        $z1 = r7 instanceof org.apache.xerces.util.EntityResolver2Wrapper;

        if $z1 == 0 goto label3;

        $r3 = (org.apache.xerces.util.EntityResolver2Wrapper) r7;

        r6 = virtualinvoke $r3.<org.apache.xerces.util.EntityResolver2Wrapper: org.xml.sax.ext.EntityResolver2 getEntityResolver()>();

     label3:
        goto label5;

     label4:
        $r5 := @caughtexception;

     label5:
        return r6;

        catch org.apache.xerces.xni.parser.XMLConfigurationException from label1 to label3 with label4;
    }

    public void setErrorHandler(org.xml.sax.ErrorHandler)
    {
        org.apache.xerces.util.ErrorHandlerWrapper $r3, r6;
        org.apache.xerces.xni.parser.XMLParserConfiguration $r1, $r5;
        org.xml.sax.ErrorHandler r4;
        java.lang.Object $r2;
        org.apache.xerces.xni.parser.XMLConfigurationException $r7;
        org.apache.xerces.parsers.AbstractSAXParser r0;
        boolean $z0;
        org.apache.xerces.xni.parser.XMLErrorHandler r8;

        r0 := @this: org.apache.xerces.parsers.AbstractSAXParser;

        r4 := @parameter0: org.xml.sax.ErrorHandler;

     label1:
        $r1 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        $r2 = interfaceinvoke $r1.<org.apache.xerces.xni.parser.XMLParserConfiguration: java.lang.Object getProperty(java.lang.String)>("http://apache.org/xml/properties/internal/error-handler");

        r8 = (org.apache.xerces.xni.parser.XMLErrorHandler) $r2;

        $z0 = r8 instanceof org.apache.xerces.util.ErrorHandlerWrapper;

        if $z0 == 0 goto label2;

        r6 = (org.apache.xerces.util.ErrorHandlerWrapper) r8;

        virtualinvoke r6.<org.apache.xerces.util.ErrorHandlerWrapper: void setErrorHandler(org.xml.sax.ErrorHandler)>(r4);

        goto label3;

     label2:
        $r5 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        $r3 = new org.apache.xerces.util.ErrorHandlerWrapper;

        specialinvoke $r3.<org.apache.xerces.util.ErrorHandlerWrapper: void <init>(org.xml.sax.ErrorHandler)>(r4);

        interfaceinvoke $r5.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setProperty(java.lang.String,java.lang.Object)>("http://apache.org/xml/properties/internal/error-handler", $r3);

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

     label5:
        return;

        catch org.apache.xerces.xni.parser.XMLConfigurationException from label1 to label3 with label4;
    }

    public org.xml.sax.ErrorHandler getErrorHandler()
    {
        org.apache.xerces.util.ErrorHandlerWrapper $r3;
        org.apache.xerces.xni.parser.XMLParserConfiguration $r1;
        org.xml.sax.ErrorHandler r5;
        java.lang.Object $r2;
        org.apache.xerces.xni.parser.XMLConfigurationException $r4;
        org.apache.xerces.parsers.AbstractSAXParser r0;
        boolean $z0;
        org.apache.xerces.xni.parser.XMLErrorHandler r6;

        r0 := @this: org.apache.xerces.parsers.AbstractSAXParser;

        r5 = null;

     label1:
        $r1 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        $r2 = interfaceinvoke $r1.<org.apache.xerces.xni.parser.XMLParserConfiguration: java.lang.Object getProperty(java.lang.String)>("http://apache.org/xml/properties/internal/error-handler");

        r6 = (org.apache.xerces.xni.parser.XMLErrorHandler) $r2;

        if r6 == null goto label2;

        $z0 = r6 instanceof org.apache.xerces.util.ErrorHandlerWrapper;

        if $z0 == 0 goto label2;

        $r3 = (org.apache.xerces.util.ErrorHandlerWrapper) r6;

        r5 = virtualinvoke $r3.<org.apache.xerces.util.ErrorHandlerWrapper: org.xml.sax.ErrorHandler getErrorHandler()>();

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return r5;

        catch org.apache.xerces.xni.parser.XMLConfigurationException from label1 to label2 with label3;
    }

    public void setLocale(java.util.Locale) throws org.xml.sax.SAXException
    {
        org.apache.xerces.xni.parser.XMLParserConfiguration $r2;
        java.util.Locale r1;
        org.apache.xerces.parsers.AbstractSAXParser r0;

        r0 := @this: org.apache.xerces.parsers.AbstractSAXParser;

        r1 := @parameter0: java.util.Locale;

        $r2 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        interfaceinvoke $r2.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setLocale(java.util.Locale)>(r1);

        return;
    }

    public void setDTDHandler(org.xml.sax.DTDHandler)
    {
        org.xml.sax.DTDHandler r1;
        org.apache.xerces.parsers.AbstractSAXParser r0;

        r0 := @this: org.apache.xerces.parsers.AbstractSAXParser;

        r1 := @parameter0: org.xml.sax.DTDHandler;

        r0.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.DTDHandler fDTDHandler> = r1;

        return;
    }

    public void setDocumentHandler(org.xml.sax.DocumentHandler)
    {
        org.xml.sax.DocumentHandler r1;
        org.apache.xerces.parsers.AbstractSAXParser r0;

        r0 := @this: org.apache.xerces.parsers.AbstractSAXParser;

        r1 := @parameter0: org.xml.sax.DocumentHandler;

        r0.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.DocumentHandler fDocumentHandler> = r1;

        return;
    }

    public void setContentHandler(org.xml.sax.ContentHandler)
    {
        org.xml.sax.ContentHandler r1;
        org.apache.xerces.parsers.AbstractSAXParser r0;

        r0 := @this: org.apache.xerces.parsers.AbstractSAXParser;

        r1 := @parameter0: org.xml.sax.ContentHandler;

        r0.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.ContentHandler fContentHandler> = r1;

        return;
    }

    public org.xml.sax.ContentHandler getContentHandler()
    {
        org.xml.sax.ContentHandler $r1;
        org.apache.xerces.parsers.AbstractSAXParser r0;

        r0 := @this: org.apache.xerces.parsers.AbstractSAXParser;

        $r1 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.ContentHandler fContentHandler>;

        return $r1;
    }

    public org.xml.sax.DTDHandler getDTDHandler()
    {
        org.xml.sax.DTDHandler $r1;
        org.apache.xerces.parsers.AbstractSAXParser r0;

        r0 := @this: org.apache.xerces.parsers.AbstractSAXParser;

        $r1 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.DTDHandler fDTDHandler>;

        return $r1;
    }

    public void setFeature(java.lang.String, boolean) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        org.apache.xerces.xni.parser.XMLConfigurationException $r27;
        org.xml.sax.EntityResolver $r15;
        java.lang.Object[] $r19, $r24, $r32, $r37, $r42;
        short $s14;
        java.lang.String r0, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r20, $r25, $r28, $r33, $r38, $r43;
        org.xml.sax.SAXNotSupportedException $r16, $r21, $r29, $r39;
        java.util.Locale $r18, $r23, $r31, $r36, $r41;
        boolean $z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14;
        org.apache.xerces.xni.parser.XMLParserConfiguration $r17, $r22, $r26, $r30, $r35, $r40, $r44;
        org.xml.sax.SAXNotRecognizedException $r34;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i15;
        org.apache.xerces.parsers.AbstractSAXParser r1;

        r1 := @this: org.apache.xerces.parsers.AbstractSAXParser;

        r0 := @parameter0: java.lang.String;

        z1 := @parameter1: boolean;

     label01:
        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("http://xml.org/sax/features/");

        if $z0 == 0 goto label17;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $r2 = "http://xml.org/sax/features/";

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        i15 = $i0 - $i1;

        $r3 = "namespaces";

        $i2 = virtualinvoke $r3.<java.lang.String: int length()>();

        if i15 != $i2 goto label02;

        $z14 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("namespaces");

        if $z14 == 0 goto label02;

        $r26 = r1.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        interfaceinvoke $r26.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setFeature(java.lang.String,boolean)>(r0, z1);

        r1.<org.apache.xerces.parsers.AbstractSAXParser: boolean fNamespaces> = z1;

        return;

     label02:
        $r4 = "namespace-prefixes";

        $i3 = virtualinvoke $r4.<java.lang.String: int length()>();

        if i15 != $i3 goto label03;

        $z13 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("namespace-prefixes");

        if $z13 == 0 goto label03;

        r1.<org.apache.xerces.parsers.AbstractSAXParser: boolean fNamespacePrefixes> = z1;

        return;

     label03:
        $r5 = "string-interning";

        $i4 = virtualinvoke $r5.<java.lang.String: int length()>();

        if i15 != $i4 goto label05;

        $z12 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("string-interning");

        if $z12 == 0 goto label05;

        if z1 != 0 goto label04;

        $r21 = new org.xml.sax.SAXNotSupportedException;

        $r22 = r1.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        $r23 = interfaceinvoke $r22.<org.apache.xerces.xni.parser.XMLParserConfiguration: java.util.Locale getLocale()>();

        $r24 = newarray (java.lang.Object)[1];

        $r24[0] = r0;

        $r25 = staticinvoke <org.apache.xerces.util.SAXMessageFormatter: java.lang.String formatMessage(java.util.Locale,java.lang.String,java.lang.Object[])>($r23, "false-not-supported", $r24);

        specialinvoke $r21.<org.xml.sax.SAXNotSupportedException: void <init>(java.lang.String)>($r25);

        throw $r21;

     label04:
        return;

     label05:
        $r6 = "lexical-handler/parameter-entities";

        $i5 = virtualinvoke $r6.<java.lang.String: int length()>();

        if i15 != $i5 goto label06;

        $z11 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("lexical-handler/parameter-entities");

        if $z11 == 0 goto label06;

        r1.<org.apache.xerces.parsers.AbstractSAXParser: boolean fLexicalHandlerParameterEntities> = z1;

        return;

     label06:
        $r7 = "resolve-dtd-uris";

        $i6 = virtualinvoke $r7.<java.lang.String: int length()>();

        if i15 != $i6 goto label07;

        $z10 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("resolve-dtd-uris");

        if $z10 == 0 goto label07;

        r1.<org.apache.xerces.parsers.AbstractSAXParser: boolean fResolveDTDURIs> = z1;

        return;

     label07:
        $r8 = "unicode-normalization-checking";

        $i7 = virtualinvoke $r8.<java.lang.String: int length()>();

        if i15 != $i7 goto label09;

        $z9 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("unicode-normalization-checking");

        if $z9 == 0 goto label09;

        if z1 == 0 goto label08;

        $r16 = new org.xml.sax.SAXNotSupportedException;

        $r17 = r1.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        $r18 = interfaceinvoke $r17.<org.apache.xerces.xni.parser.XMLParserConfiguration: java.util.Locale getLocale()>();

        $r19 = newarray (java.lang.Object)[1];

        $r19[0] = r0;

        $r20 = staticinvoke <org.apache.xerces.util.SAXMessageFormatter: java.lang.String formatMessage(java.util.Locale,java.lang.String,java.lang.Object[])>($r18, "true-not-supported", $r19);

        specialinvoke $r16.<org.xml.sax.SAXNotSupportedException: void <init>(java.lang.String)>($r20);

        throw $r16;

     label08:
        return;

     label09:
        $r9 = "xmlns-uris";

        $i8 = virtualinvoke $r9.<java.lang.String: int length()>();

        if i15 != $i8 goto label10;

        $z8 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("xmlns-uris");

        if $z8 == 0 goto label10;

        r1.<org.apache.xerces.parsers.AbstractSAXParser: boolean fXMLNSURIs> = z1;

        return;

     label10:
        $r10 = "use-entity-resolver2";

        $i9 = virtualinvoke $r10.<java.lang.String: int length()>();

        if i15 != $i9 goto label12;

        $z6 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("use-entity-resolver2");

        if $z6 == 0 goto label12;

        $z7 = r1.<org.apache.xerces.parsers.AbstractSAXParser: boolean fUseEntityResolver2>;

        if z1 == $z7 goto label11;

        r1.<org.apache.xerces.parsers.AbstractSAXParser: boolean fUseEntityResolver2> = z1;

        $r15 = virtualinvoke r1.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.EntityResolver getEntityResolver()>();

        virtualinvoke r1.<org.apache.xerces.parsers.AbstractSAXParser: void setEntityResolver(org.xml.sax.EntityResolver)>($r15);

     label11:
        return;

     label12:
        $r11 = "is-standalone";

        $i10 = virtualinvoke $r11.<java.lang.String: int length()>();

        if i15 != $i10 goto label13;

        $z5 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("is-standalone");

        if $z5 != 0 goto label16;

     label13:
        $r12 = "use-attributes2";

        $i11 = virtualinvoke $r12.<java.lang.String: int length()>();

        if i15 != $i11 goto label14;

        $z4 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("use-attributes2");

        if $z4 != 0 goto label16;

     label14:
        $r13 = "use-locator2";

        $i12 = virtualinvoke $r13.<java.lang.String: int length()>();

        if i15 != $i12 goto label15;

        $z3 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("use-locator2");

        if $z3 != 0 goto label16;

     label15:
        $r14 = "xml-1.1";

        $i13 = virtualinvoke $r14.<java.lang.String: int length()>();

        if i15 != $i13 goto label17;

        $z2 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("xml-1.1");

        if $z2 == 0 goto label17;

     label16:
        $r39 = new org.xml.sax.SAXNotSupportedException;

        $r40 = r1.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        $r41 = interfaceinvoke $r40.<org.apache.xerces.xni.parser.XMLParserConfiguration: java.util.Locale getLocale()>();

        $r42 = newarray (java.lang.Object)[1];

        $r42[0] = r0;

        $r43 = staticinvoke <org.apache.xerces.util.SAXMessageFormatter: java.lang.String formatMessage(java.util.Locale,java.lang.String,java.lang.Object[])>($r41, "feature-read-only", $r42);

        specialinvoke $r39.<org.xml.sax.SAXNotSupportedException: void <init>(java.lang.String)>($r43);

        throw $r39;

     label17:
        $r44 = r1.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        interfaceinvoke $r44.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setFeature(java.lang.String,boolean)>(r0, z1);

     label18:
        goto label21;

     label19:
        $r27 := @caughtexception;

        $r28 = virtualinvoke $r27.<org.apache.xerces.xni.parser.XMLConfigurationException: java.lang.String getIdentifier()>();

        $s14 = virtualinvoke $r27.<org.apache.xerces.xni.parser.XMLConfigurationException: short getType()>();

        if $s14 != 0 goto label20;

        $r34 = new org.xml.sax.SAXNotRecognizedException;

        $r35 = r1.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        $r36 = interfaceinvoke $r35.<org.apache.xerces.xni.parser.XMLParserConfiguration: java.util.Locale getLocale()>();

        $r37 = newarray (java.lang.Object)[1];

        $r37[0] = $r28;

        $r38 = staticinvoke <org.apache.xerces.util.SAXMessageFormatter: java.lang.String formatMessage(java.util.Locale,java.lang.String,java.lang.Object[])>($r36, "feature-not-recognized", $r37);

        specialinvoke $r34.<org.xml.sax.SAXNotRecognizedException: void <init>(java.lang.String)>($r38);

        throw $r34;

     label20:
        $r29 = new org.xml.sax.SAXNotSupportedException;

        $r30 = r1.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        $r31 = interfaceinvoke $r30.<org.apache.xerces.xni.parser.XMLParserConfiguration: java.util.Locale getLocale()>();

        $r32 = newarray (java.lang.Object)[1];

        $r32[0] = $r28;

        $r33 = staticinvoke <org.apache.xerces.util.SAXMessageFormatter: java.lang.String formatMessage(java.util.Locale,java.lang.String,java.lang.Object[])>($r31, "feature-not-supported", $r32);

        specialinvoke $r29.<org.xml.sax.SAXNotSupportedException: void <init>(java.lang.String)>($r33);

        throw $r29;

     label21:
        return;

        catch org.apache.xerces.xni.parser.XMLConfigurationException from label01 to label18 with label19;
    }

    public boolean getFeature(java.lang.String) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        org.xml.sax.SAXNotSupportedException $r17;
        java.util.Locale $r19, $r24;
        org.apache.xerces.xni.parser.XMLConfigurationException $r15;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19;
        java.lang.Object[] $r20, $r25;
        org.apache.xerces.xni.parser.XMLParserConfiguration $r14, $r18, $r23, $r27;
        org.xml.sax.SAXNotRecognizedException $r22;
        short $s13;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i14;
        java.lang.String r0, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r16, $r21, $r26;
        org.apache.xerces.parsers.AbstractSAXParser r1;

        r1 := @this: org.apache.xerces.parsers.AbstractSAXParser;

        r0 := @parameter0: java.lang.String;

     label01:
        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("http://xml.org/sax/features/");

        if $z0 == 0 goto label13;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $r2 = "http://xml.org/sax/features/";

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        i14 = $i0 - $i1;

        $r3 = "namespace-prefixes";

        $i2 = virtualinvoke $r3.<java.lang.String: int length()>();

        if i14 != $i2 goto label02;

        $z17 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("namespace-prefixes");

        if $z17 == 0 goto label02;

        $z18 = r1.<org.apache.xerces.parsers.AbstractSAXParser: boolean fNamespacePrefixes>;

        return $z18;

     label02:
        $r4 = "string-interning";

        $i3 = virtualinvoke $r4.<java.lang.String: int length()>();

        if i14 != $i3 goto label03;

        $z16 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("string-interning");

        if $z16 == 0 goto label03;

        return 1;

     label03:
        $r5 = "is-standalone";

        $i4 = virtualinvoke $r5.<java.lang.String: int length()>();

        if i14 != $i4 goto label04;

        $z14 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("is-standalone");

        if $z14 == 0 goto label04;

        $z15 = r1.<org.apache.xerces.parsers.AbstractSAXParser: boolean fStandalone>;

        return $z15;

     label04:
        $r6 = "xml-1.1";

        $i5 = virtualinvoke $r6.<java.lang.String: int length()>();

        if i14 != $i5 goto label05;

        $z12 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("xml-1.1");

        if $z12 == 0 goto label05;

        $r14 = r1.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        $z13 = $r14 instanceof org.apache.xerces.parsers.XML11Configurable;

        return $z13;

     label05:
        $r7 = "lexical-handler/parameter-entities";

        $i6 = virtualinvoke $r7.<java.lang.String: int length()>();

        if i14 != $i6 goto label06;

        $z10 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("lexical-handler/parameter-entities");

        if $z10 == 0 goto label06;

        $z11 = r1.<org.apache.xerces.parsers.AbstractSAXParser: boolean fLexicalHandlerParameterEntities>;

        return $z11;

     label06:
        $r8 = "resolve-dtd-uris";

        $i7 = virtualinvoke $r8.<java.lang.String: int length()>();

        if i14 != $i7 goto label07;

        $z8 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("resolve-dtd-uris");

        if $z8 == 0 goto label07;

        $z9 = r1.<org.apache.xerces.parsers.AbstractSAXParser: boolean fResolveDTDURIs>;

        return $z9;

     label07:
        $r9 = "xmlns-uris";

        $i8 = virtualinvoke $r9.<java.lang.String: int length()>();

        if i14 != $i8 goto label08;

        $z6 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("xmlns-uris");

        if $z6 == 0 goto label08;

        $z7 = r1.<org.apache.xerces.parsers.AbstractSAXParser: boolean fXMLNSURIs>;

        return $z7;

     label08:
        $r10 = "unicode-normalization-checking";

        $i9 = virtualinvoke $r10.<java.lang.String: int length()>();

        if i14 != $i9 goto label09;

        $z5 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("unicode-normalization-checking");

        if $z5 == 0 goto label09;

        return 0;

     label09:
        $r11 = "use-entity-resolver2";

        $i10 = virtualinvoke $r11.<java.lang.String: int length()>();

        if i14 != $i10 goto label10;

        $z3 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("use-entity-resolver2");

        if $z3 == 0 goto label10;

        $z4 = r1.<org.apache.xerces.parsers.AbstractSAXParser: boolean fUseEntityResolver2>;

        return $z4;

     label10:
        $r12 = "use-attributes2";

        $i11 = virtualinvoke $r12.<java.lang.String: int length()>();

        if i14 != $i11 goto label11;

        $z2 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("use-attributes2");

        if $z2 != 0 goto label12;

     label11:
        $r13 = "use-locator2";

        $i12 = virtualinvoke $r13.<java.lang.String: int length()>();

        if i14 != $i12 goto label13;

        $z1 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("use-locator2");

        if $z1 == 0 goto label13;

     label12:
        return 1;

     label13:
        $r27 = r1.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        $z19 = interfaceinvoke $r27.<org.apache.xerces.xni.parser.XMLParserConfiguration: boolean getFeature(java.lang.String)>(r0);

        return $z19;

     label14:
        $r15 := @caughtexception;

        $r16 = virtualinvoke $r15.<org.apache.xerces.xni.parser.XMLConfigurationException: java.lang.String getIdentifier()>();

        $s13 = virtualinvoke $r15.<org.apache.xerces.xni.parser.XMLConfigurationException: short getType()>();

        if $s13 != 0 goto label15;

        $r22 = new org.xml.sax.SAXNotRecognizedException;

        $r23 = r1.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        $r24 = interfaceinvoke $r23.<org.apache.xerces.xni.parser.XMLParserConfiguration: java.util.Locale getLocale()>();

        $r25 = newarray (java.lang.Object)[1];

        $r25[0] = $r16;

        $r26 = staticinvoke <org.apache.xerces.util.SAXMessageFormatter: java.lang.String formatMessage(java.util.Locale,java.lang.String,java.lang.Object[])>($r24, "feature-not-recognized", $r25);

        specialinvoke $r22.<org.xml.sax.SAXNotRecognizedException: void <init>(java.lang.String)>($r26);

        throw $r22;

     label15:
        $r17 = new org.xml.sax.SAXNotSupportedException;

        $r18 = r1.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        $r19 = interfaceinvoke $r18.<org.apache.xerces.xni.parser.XMLParserConfiguration: java.util.Locale getLocale()>();

        $r20 = newarray (java.lang.Object)[1];

        $r20[0] = $r16;

        $r21 = staticinvoke <org.apache.xerces.util.SAXMessageFormatter: java.lang.String formatMessage(java.util.Locale,java.lang.String,java.lang.Object[])>($r19, "feature-not-supported", $r20);

        specialinvoke $r17.<org.xml.sax.SAXNotSupportedException: void <init>(java.lang.String)>($r21);

        throw $r17;

        catch org.apache.xerces.xni.parser.XMLConfigurationException from label01 to label14 with label14;
    }

    public void setProperty(java.lang.String, java.lang.Object) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        org.xml.sax.SAXNotSupportedException $r8, $r17, $r28, $r34;
        org.xml.sax.ext.LexicalHandler $r14;
        java.util.Locale $r10, $r19, $r24, $r30, $r36;
        org.apache.xerces.xni.parser.XMLConfigurationException $r15;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Object[] $r11, $r20, $r25, $r31, $r37;
        org.apache.xerces.xni.parser.XMLParserConfiguration $r9, $r18, $r23, $r29, $r35, $r39;
        java.lang.ClassCastException $r27, $r33;
        org.xml.sax.SAXNotRecognizedException $r22;
        short $s6;
        int $i0, $i1, $i2, $i3, $i4, $i5, i7;
        java.lang.String r0, $r3, $r4, $r5, $r6, $r7, $r12, $r16, $r21, $r26, $r32, $r38;
        org.apache.xerces.parsers.AbstractSAXParser r1;
        org.xml.sax.ext.DeclHandler $r13;
        java.lang.Object r2;

        r1 := @this: org.apache.xerces.parsers.AbstractSAXParser;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

     label01:
        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("http://xml.org/sax/properties/");

        if $z0 == 0 goto label14;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $r3 = "http://xml.org/sax/properties/";

        $i1 = virtualinvoke $r3.<java.lang.String: int length()>();

        i7 = $i0 - $i1;

        $r4 = "lexical-handler";

        $i2 = virtualinvoke $r4.<java.lang.String: int length()>();

        if i7 != $i2 goto label06;

        $z4 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("lexical-handler");

        if $z4 == 0 goto label06;

     label02:
        $r14 = (org.xml.sax.ext.LexicalHandler) r2;

        virtualinvoke r1.<org.apache.xerces.parsers.AbstractSAXParser: void setLexicalHandler(org.xml.sax.ext.LexicalHandler)>($r14);

     label03:
        goto label05;

     label04:
        $r33 := @caughtexception;

        $r34 = new org.xml.sax.SAXNotSupportedException;

        $r35 = r1.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        $r36 = interfaceinvoke $r35.<org.apache.xerces.xni.parser.XMLParserConfiguration: java.util.Locale getLocale()>();

        $r37 = newarray (java.lang.Object)[2];

        $r37[0] = r0;

        $r37[1] = "org.xml.sax.ext.LexicalHandler";

        $r38 = staticinvoke <org.apache.xerces.util.SAXMessageFormatter: java.lang.String formatMessage(java.util.Locale,java.lang.String,java.lang.Object[])>($r36, "incompatible-class", $r37);

        specialinvoke $r34.<org.xml.sax.SAXNotSupportedException: void <init>(java.lang.String)>($r38);

        throw $r34;

     label05:
        return;

     label06:
        $r5 = "declaration-handler";

        $i3 = virtualinvoke $r5.<java.lang.String: int length()>();

        if i7 != $i3 goto label11;

        $z3 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("declaration-handler");

        if $z3 == 0 goto label11;

     label07:
        $r13 = (org.xml.sax.ext.DeclHandler) r2;

        virtualinvoke r1.<org.apache.xerces.parsers.AbstractSAXParser: void setDeclHandler(org.xml.sax.ext.DeclHandler)>($r13);

     label08:
        goto label10;

     label09:
        $r27 := @caughtexception;

        $r28 = new org.xml.sax.SAXNotSupportedException;

        $r29 = r1.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        $r30 = interfaceinvoke $r29.<org.apache.xerces.xni.parser.XMLParserConfiguration: java.util.Locale getLocale()>();

        $r31 = newarray (java.lang.Object)[2];

        $r31[0] = r0;

        $r31[1] = "org.xml.sax.ext.DeclHandler";

        $r32 = staticinvoke <org.apache.xerces.util.SAXMessageFormatter: java.lang.String formatMessage(java.util.Locale,java.lang.String,java.lang.Object[])>($r30, "incompatible-class", $r31);

        specialinvoke $r28.<org.xml.sax.SAXNotSupportedException: void <init>(java.lang.String)>($r32);

        throw $r28;

     label10:
        return;

     label11:
        $r6 = "dom-node";

        $i4 = virtualinvoke $r6.<java.lang.String: int length()>();

        if i7 != $i4 goto label12;

        $z2 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("dom-node");

        if $z2 != 0 goto label13;

     label12:
        $r7 = "document-xml-version";

        $i5 = virtualinvoke $r7.<java.lang.String: int length()>();

        if i7 != $i5 goto label14;

        $z1 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("document-xml-version");

        if $z1 == 0 goto label14;

     label13:
        $r8 = new org.xml.sax.SAXNotSupportedException;

        $r9 = r1.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        $r10 = interfaceinvoke $r9.<org.apache.xerces.xni.parser.XMLParserConfiguration: java.util.Locale getLocale()>();

        $r11 = newarray (java.lang.Object)[1];

        $r11[0] = r0;

        $r12 = staticinvoke <org.apache.xerces.util.SAXMessageFormatter: java.lang.String formatMessage(java.util.Locale,java.lang.String,java.lang.Object[])>($r10, "property-read-only", $r11);

        specialinvoke $r8.<org.xml.sax.SAXNotSupportedException: void <init>(java.lang.String)>($r12);

        throw $r8;

     label14:
        $r39 = r1.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        interfaceinvoke $r39.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setProperty(java.lang.String,java.lang.Object)>(r0, r2);

     label15:
        goto label18;

     label16:
        $r15 := @caughtexception;

        $r16 = virtualinvoke $r15.<org.apache.xerces.xni.parser.XMLConfigurationException: java.lang.String getIdentifier()>();

        $s6 = virtualinvoke $r15.<org.apache.xerces.xni.parser.XMLConfigurationException: short getType()>();

        if $s6 != 0 goto label17;

        $r22 = new org.xml.sax.SAXNotRecognizedException;

        $r23 = r1.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        $r24 = interfaceinvoke $r23.<org.apache.xerces.xni.parser.XMLParserConfiguration: java.util.Locale getLocale()>();

        $r25 = newarray (java.lang.Object)[1];

        $r25[0] = $r16;

        $r26 = staticinvoke <org.apache.xerces.util.SAXMessageFormatter: java.lang.String formatMessage(java.util.Locale,java.lang.String,java.lang.Object[])>($r24, "property-not-recognized", $r25);

        specialinvoke $r22.<org.xml.sax.SAXNotRecognizedException: void <init>(java.lang.String)>($r26);

        throw $r22;

     label17:
        $r17 = new org.xml.sax.SAXNotSupportedException;

        $r18 = r1.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        $r19 = interfaceinvoke $r18.<org.apache.xerces.xni.parser.XMLParserConfiguration: java.util.Locale getLocale()>();

        $r20 = newarray (java.lang.Object)[1];

        $r20[0] = $r16;

        $r21 = staticinvoke <org.apache.xerces.util.SAXMessageFormatter: java.lang.String formatMessage(java.util.Locale,java.lang.String,java.lang.Object[])>($r19, "property-not-supported", $r20);

        specialinvoke $r17.<org.xml.sax.SAXNotSupportedException: void <init>(java.lang.String)>($r21);

        throw $r17;

     label18:
        return;

        catch java.lang.ClassCastException from label02 to label03 with label04;
        catch java.lang.ClassCastException from label07 to label08 with label09;
        catch org.apache.xerces.xni.parser.XMLConfigurationException from label01 to label15 with label16;
    }

    public java.lang.Object getProperty(java.lang.String) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        org.xml.sax.SAXNotSupportedException $r7, $r16;
        org.xml.sax.ext.LexicalHandler $r12;
        java.util.Locale $r9, $r18, $r23;
        org.apache.xerces.xni.parser.XMLConfigurationException $r14;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Object[] $r19, $r24;
        org.apache.xerces.xni.parser.XMLParserConfiguration $r8, $r17, $r22, $r26;
        org.xml.sax.SAXNotRecognizedException $r21;
        short $s6;
        int $i0, $i1, $i2, $i3, $i4, $i5, i7;
        java.lang.String r0, $r2, $r3, $r4, $r5, $r6, $r10, $r13, $r15, $r20, $r25;
        org.apache.xerces.parsers.AbstractSAXParser r1;
        org.xml.sax.ext.DeclHandler $r11;
        java.lang.Object $r27;

        r1 := @this: org.apache.xerces.parsers.AbstractSAXParser;

        r0 := @parameter0: java.lang.String;

     label1:
        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("http://xml.org/sax/properties/");

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $r2 = "http://xml.org/sax/properties/";

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        i7 = $i0 - $i1;

        $r3 = "document-xml-version";

        $i2 = virtualinvoke $r3.<java.lang.String: int length()>();

        if i7 != $i2 goto label2;

        $z4 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("document-xml-version");

        if $z4 == 0 goto label2;

        $r13 = r1.<org.apache.xerces.parsers.AbstractSAXParser: java.lang.String fVersion>;

        return $r13;

     label2:
        $r4 = "lexical-handler";

        $i3 = virtualinvoke $r4.<java.lang.String: int length()>();

        if i7 != $i3 goto label3;

        $z3 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("lexical-handler");

        if $z3 == 0 goto label3;

        $r12 = virtualinvoke r1.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.ext.LexicalHandler getLexicalHandler()>();

        return $r12;

     label3:
        $r5 = "declaration-handler";

        $i4 = virtualinvoke $r5.<java.lang.String: int length()>();

        if i7 != $i4 goto label4;

        $z2 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("declaration-handler");

        if $z2 == 0 goto label4;

        $r11 = virtualinvoke r1.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.ext.DeclHandler getDeclHandler()>();

        return $r11;

     label4:
        $r6 = "dom-node";

        $i5 = virtualinvoke $r6.<java.lang.String: int length()>();

        if i7 != $i5 goto label5;

        $z1 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("dom-node");

        if $z1 == 0 goto label5;

        $r7 = new org.xml.sax.SAXNotSupportedException;

        $r8 = r1.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        $r9 = interfaceinvoke $r8.<org.apache.xerces.xni.parser.XMLParserConfiguration: java.util.Locale getLocale()>();

        $r10 = staticinvoke <org.apache.xerces.util.SAXMessageFormatter: java.lang.String formatMessage(java.util.Locale,java.lang.String,java.lang.Object[])>($r9, "dom-node-read-not-supported", null);

        specialinvoke $r7.<org.xml.sax.SAXNotSupportedException: void <init>(java.lang.String)>($r10);

        throw $r7;

     label5:
        $r26 = r1.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        $r27 = interfaceinvoke $r26.<org.apache.xerces.xni.parser.XMLParserConfiguration: java.lang.Object getProperty(java.lang.String)>(r0);

        return $r27;

     label6:
        $r14 := @caughtexception;

        $r15 = virtualinvoke $r14.<org.apache.xerces.xni.parser.XMLConfigurationException: java.lang.String getIdentifier()>();

        $s6 = virtualinvoke $r14.<org.apache.xerces.xni.parser.XMLConfigurationException: short getType()>();

        if $s6 != 0 goto label7;

        $r21 = new org.xml.sax.SAXNotRecognizedException;

        $r22 = r1.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        $r23 = interfaceinvoke $r22.<org.apache.xerces.xni.parser.XMLParserConfiguration: java.util.Locale getLocale()>();

        $r24 = newarray (java.lang.Object)[1];

        $r24[0] = $r15;

        $r25 = staticinvoke <org.apache.xerces.util.SAXMessageFormatter: java.lang.String formatMessage(java.util.Locale,java.lang.String,java.lang.Object[])>($r23, "property-not-recognized", $r24);

        specialinvoke $r21.<org.xml.sax.SAXNotRecognizedException: void <init>(java.lang.String)>($r25);

        throw $r21;

     label7:
        $r16 = new org.xml.sax.SAXNotSupportedException;

        $r17 = r1.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        $r18 = interfaceinvoke $r17.<org.apache.xerces.xni.parser.XMLParserConfiguration: java.util.Locale getLocale()>();

        $r19 = newarray (java.lang.Object)[1];

        $r19[0] = $r15;

        $r20 = staticinvoke <org.apache.xerces.util.SAXMessageFormatter: java.lang.String formatMessage(java.util.Locale,java.lang.String,java.lang.Object[])>($r18, "property-not-supported", $r19);

        specialinvoke $r16.<org.xml.sax.SAXNotSupportedException: void <init>(java.lang.String)>($r20);

        throw $r16;

        catch org.apache.xerces.xni.parser.XMLConfigurationException from label1 to label6 with label6;
    }

    protected void setDeclHandler(org.xml.sax.ext.DeclHandler) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        org.xml.sax.SAXNotSupportedException $r2;
        java.lang.Object[] $r5;
        org.apache.xerces.xni.parser.XMLParserConfiguration $r3;
        org.xml.sax.ext.DeclHandler r1;
        java.util.Locale $r4;
        java.lang.String $r6;
        org.apache.xerces.parsers.AbstractSAXParser r0;
        boolean $z0;

        r0 := @this: org.apache.xerces.parsers.AbstractSAXParser;

        r1 := @parameter0: org.xml.sax.ext.DeclHandler;

        $z0 = r0.<org.apache.xerces.parsers.AbstractSAXParser: boolean fParseInProgress>;

        if $z0 == 0 goto label1;

        $r2 = new org.xml.sax.SAXNotSupportedException;

        $r3 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        $r4 = interfaceinvoke $r3.<org.apache.xerces.xni.parser.XMLParserConfiguration: java.util.Locale getLocale()>();

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = "http://xml.org/sax/properties/declaration-handler";

        $r6 = staticinvoke <org.apache.xerces.util.SAXMessageFormatter: java.lang.String formatMessage(java.util.Locale,java.lang.String,java.lang.Object[])>($r4, "property-not-parsing-supported", $r5);

        specialinvoke $r2.<org.xml.sax.SAXNotSupportedException: void <init>(java.lang.String)>($r6);

        throw $r2;

     label1:
        r0.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.ext.DeclHandler fDeclHandler> = r1;

        return;
    }

    protected org.xml.sax.ext.DeclHandler getDeclHandler() throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        org.xml.sax.ext.DeclHandler $r1;
        org.apache.xerces.parsers.AbstractSAXParser r0;

        r0 := @this: org.apache.xerces.parsers.AbstractSAXParser;

        $r1 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.ext.DeclHandler fDeclHandler>;

        return $r1;
    }

    protected void setLexicalHandler(org.xml.sax.ext.LexicalHandler) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        org.xml.sax.SAXNotSupportedException $r2;
        java.lang.Object[] $r5;
        org.apache.xerces.xni.parser.XMLParserConfiguration $r3;
        org.xml.sax.ext.LexicalHandler r1;
        java.util.Locale $r4;
        java.lang.String $r6;
        org.apache.xerces.parsers.AbstractSAXParser r0;
        boolean $z0;

        r0 := @this: org.apache.xerces.parsers.AbstractSAXParser;

        r1 := @parameter0: org.xml.sax.ext.LexicalHandler;

        $z0 = r0.<org.apache.xerces.parsers.AbstractSAXParser: boolean fParseInProgress>;

        if $z0 == 0 goto label1;

        $r2 = new org.xml.sax.SAXNotSupportedException;

        $r3 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        $r4 = interfaceinvoke $r3.<org.apache.xerces.xni.parser.XMLParserConfiguration: java.util.Locale getLocale()>();

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = "http://xml.org/sax/properties/lexical-handler";

        $r6 = staticinvoke <org.apache.xerces.util.SAXMessageFormatter: java.lang.String formatMessage(java.util.Locale,java.lang.String,java.lang.Object[])>($r4, "property-not-parsing-supported", $r5);

        specialinvoke $r2.<org.xml.sax.SAXNotSupportedException: void <init>(java.lang.String)>($r6);

        throw $r2;

     label1:
        r0.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.ext.LexicalHandler fLexicalHandler> = r1;

        return;
    }

    protected org.xml.sax.ext.LexicalHandler getLexicalHandler() throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        org.xml.sax.ext.LexicalHandler $r1;
        org.apache.xerces.parsers.AbstractSAXParser r0;

        r0 := @this: org.apache.xerces.parsers.AbstractSAXParser;

        $r1 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.ext.LexicalHandler fLexicalHandler>;

        return $r1;
    }

    protected final void startNamespaceMapping() throws org.xml.sax.SAXException
    {
        org.apache.xerces.xni.NamespaceContext $r1, $r2, $r4;
        int $i0, i1;
        java.lang.String $r3, $r5, $r7;
        org.xml.sax.ContentHandler $r6;
        org.apache.xerces.parsers.AbstractSAXParser r0;

        r0 := @this: org.apache.xerces.parsers.AbstractSAXParser;

        $r1 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.xni.NamespaceContext fNamespaceContext>;

        $i0 = interfaceinvoke $r1.<org.apache.xerces.xni.NamespaceContext: int getDeclaredPrefixCount()>();

        if $i0 <= 0 goto label5;

        i1 = 0;

        goto label4;

     label1:
        $r2 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.xni.NamespaceContext fNamespaceContext>;

        $r3 = interfaceinvoke $r2.<org.apache.xerces.xni.NamespaceContext: java.lang.String getDeclaredPrefixAt(int)>(i1);

        $r4 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.xni.NamespaceContext fNamespaceContext>;

        $r5 = interfaceinvoke $r4.<org.apache.xerces.xni.NamespaceContext: java.lang.String getURI(java.lang.String)>($r3);

        $r6 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.ContentHandler fContentHandler>;

        if $r5 != null goto label2;

        $r7 = "";

        goto label3;

     label2:
        $r7 = $r5;

     label3:
        interfaceinvoke $r6.<org.xml.sax.ContentHandler: void startPrefixMapping(java.lang.String,java.lang.String)>($r3, $r7);

        i1 = i1 + 1;

     label4:
        if i1 < $i0 goto label1;

     label5:
        return;
    }

    protected final void endNamespaceMapping() throws org.xml.sax.SAXException
    {
        org.apache.xerces.xni.NamespaceContext $r1, $r2;
        int $i0, i1;
        org.xml.sax.ContentHandler $r3;
        java.lang.String $r4;
        org.apache.xerces.parsers.AbstractSAXParser r0;

        r0 := @this: org.apache.xerces.parsers.AbstractSAXParser;

        $r1 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.xni.NamespaceContext fNamespaceContext>;

        $i0 = interfaceinvoke $r1.<org.apache.xerces.xni.NamespaceContext: int getDeclaredPrefixCount()>();

        if $i0 <= 0 goto label3;

        i1 = 0;

        goto label2;

     label1:
        $r3 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.xml.sax.ContentHandler fContentHandler>;

        $r2 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.xni.NamespaceContext fNamespaceContext>;

        $r4 = interfaceinvoke $r2.<org.apache.xerces.xni.NamespaceContext: java.lang.String getDeclaredPrefixAt(int)>(i1);

        interfaceinvoke $r3.<org.xml.sax.ContentHandler: void endPrefixMapping(java.lang.String)>($r4);

        i1 = i1 + 1;

     label2:
        if i1 < $i0 goto label1;

     label3:
        return;
    }

    public void reset() throws org.apache.xerces.xni.XNIException
    {
        org.apache.xerces.xni.parser.XMLParserConfiguration $r1;
        org.apache.xerces.parsers.AbstractSAXParser r0;
        boolean $z0;

        r0 := @this: org.apache.xerces.parsers.AbstractSAXParser;

        specialinvoke r0.<org.apache.xerces.parsers.AbstractXMLDocumentParser: void reset()>();

        r0.<org.apache.xerces.parsers.AbstractSAXParser: boolean fInDTD> = 0;

        r0.<org.apache.xerces.parsers.AbstractSAXParser: java.lang.String fVersion> = "1.0";

        r0.<org.apache.xerces.parsers.AbstractSAXParser: boolean fStandalone> = 0;

        $r1 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        $z0 = interfaceinvoke $r1.<org.apache.xerces.xni.parser.XMLParserConfiguration: boolean getFeature(java.lang.String)>("http://xml.org/sax/features/namespaces");

        r0.<org.apache.xerces.parsers.AbstractSAXParser: boolean fNamespaces> = $z0;

        r0.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.xni.Augmentations fAugmentations> = null;

        r0.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.util.SymbolHash fDeclaredAttrs> = null;

        return;
    }

    public org.apache.xerces.xs.ElementPSVI getElementPSVI()
    {
        org.apache.xerces.xni.Augmentations $r1, $r2;
        java.lang.Object $r3;
        org.apache.xerces.xs.ElementPSVI $r4;
        org.apache.xerces.parsers.AbstractSAXParser r0;

        r0 := @this: org.apache.xerces.parsers.AbstractSAXParser;

        $r1 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.xni.Augmentations fAugmentations>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.xni.Augmentations fAugmentations>;

        $r3 = interfaceinvoke $r2.<org.apache.xerces.xni.Augmentations: java.lang.Object getItem(java.lang.String)>("ELEMENT_PSVI");

        $r4 = (org.apache.xerces.xs.ElementPSVI) $r3;

        goto label2;

     label1:
        $r4 = null;

     label2:
        return $r4;
    }

    public org.apache.xerces.xs.AttributePSVI getAttributePSVI(int)
    {
        org.apache.xerces.xni.Augmentations $r3;
        org.apache.xerces.xs.AttributePSVI $r5;
        org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy $r1;
        int i0;
        java.lang.Object $r4;
        org.apache.xerces.xni.XMLAttributes $r2;
        org.apache.xerces.parsers.AbstractSAXParser r0;

        r0 := @this: org.apache.xerces.parsers.AbstractSAXParser;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy fAttributesProxy>;

        $r2 = $r1.<org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy: org.apache.xerces.xni.XMLAttributes fAttributes>;

        $r3 = interfaceinvoke $r2.<org.apache.xerces.xni.XMLAttributes: org.apache.xerces.xni.Augmentations getAugmentations(int)>(i0);

        $r4 = interfaceinvoke $r3.<org.apache.xerces.xni.Augmentations: java.lang.Object getItem(java.lang.String)>("ATTRIBUTE_PSVI");

        $r5 = (org.apache.xerces.xs.AttributePSVI) $r4;

        return $r5;
    }

    public org.apache.xerces.xs.AttributePSVI getAttributePSVIByName(java.lang.String, java.lang.String)
    {
        org.apache.xerces.xs.AttributePSVI $r7;
        org.apache.xerces.xni.XMLAttributes $r4;
        org.apache.xerces.xni.Augmentations $r5;
        org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy $r1;
        java.lang.Object $r6;
        java.lang.String r2, r3;
        org.apache.xerces.parsers.AbstractSAXParser r0;

        r0 := @this: org.apache.xerces.parsers.AbstractSAXParser;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r1 = r0.<org.apache.xerces.parsers.AbstractSAXParser: org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy fAttributesProxy>;

        $r4 = $r1.<org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy: org.apache.xerces.xni.XMLAttributes fAttributes>;

        $r5 = interfaceinvoke $r4.<org.apache.xerces.xni.XMLAttributes: org.apache.xerces.xni.Augmentations getAugmentations(java.lang.String,java.lang.String)>(r2, r3);

        $r6 = interfaceinvoke $r5.<org.apache.xerces.xni.Augmentations: java.lang.Object getItem(java.lang.String)>("ATTRIBUTE_PSVI");

        $r7 = (org.apache.xerces.xs.AttributePSVI) $r6;

        return $r7;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0, $r1;

        <org.apache.xerces.parsers.AbstractSAXParser: java.lang.String DOM_NODE> = "http://xml.org/sax/properties/dom-node";

        <org.apache.xerces.parsers.AbstractSAXParser: java.lang.String DECLARATION_HANDLER> = "http://xml.org/sax/properties/declaration-handler";

        <org.apache.xerces.parsers.AbstractSAXParser: java.lang.String LEXICAL_HANDLER> = "http://xml.org/sax/properties/lexical-handler";

        <org.apache.xerces.parsers.AbstractSAXParser: java.lang.String ALLOW_UE_AND_NOTATION_EVENTS> = "http://xml.org/sax/features/allow-dtd-events-after-endDTD";

        <org.apache.xerces.parsers.AbstractSAXParser: java.lang.String STRING_INTERNING> = "http://xml.org/sax/features/string-interning";

        <org.apache.xerces.parsers.AbstractSAXParser: java.lang.String NAMESPACES> = "http://xml.org/sax/features/namespaces";

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "http://xml.org/sax/features/namespaces";

        $r0[1] = "http://xml.org/sax/features/string-interning";

        <org.apache.xerces.parsers.AbstractSAXParser: java.lang.String[] RECOGNIZED_FEATURES> = $r0;

        $r1 = newarray (java.lang.String)[3];

        $r1[0] = "http://xml.org/sax/properties/lexical-handler";

        $r1[1] = "http://xml.org/sax/properties/declaration-handler";

        $r1[2] = "http://xml.org/sax/properties/dom-node";

        <org.apache.xerces.parsers.AbstractSAXParser: java.lang.String[] RECOGNIZED_PROPERTIES> = $r1;

        return;
    }
}
