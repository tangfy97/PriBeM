class org.springframework.jmx.access.ConnectorDelegate extends java.lang.Object
{
    private static final org.apache.commons.logging.Log logger;
    private javax.management.remote.JMXConnector connector;

    static void <clinit>()
    {
        org.apache.commons.logging.Log $r0;

        $r0 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>(class "Lorg/springframework/jmx/access/ConnectorDelegate;");

        <org.springframework.jmx.access.ConnectorDelegate: org.apache.commons.logging.Log logger> = $r0;

        return;
    }

    void <init>()
    {
        org.springframework.jmx.access.ConnectorDelegate r0;

        r0 := @this: org.springframework.jmx.access.ConnectorDelegate;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public javax.management.MBeanServerConnection connect(javax.management.remote.JMXServiceURL, java.util.Map, java.lang.String) throws org.springframework.jmx.MBeanServerNotFoundException
    {
        org.springframework.jmx.MBeanServerNotFoundException $r16;
        org.springframework.jmx.access.ConnectorDelegate r5;
        javax.management.MBeanServer $r3;
        java.util.Map r6;
        java.lang.String r2, $r14, $r20;
        boolean $z0;
        javax.management.MBeanServerConnection $r9;
        java.io.IOException $r15;
        javax.management.remote.JMXServiceURL r0;
        org.apache.commons.logging.Log $r1, $r4, $r11;
        java.lang.StringBuilder $r10, $r12, $r13, $r17, $r18, $r19;
        javax.management.remote.JMXConnector $r7, $r8;

        r5 := @this: org.springframework.jmx.access.ConnectorDelegate;

        r0 := @parameter0: javax.management.remote.JMXServiceURL;

        r6 := @parameter1: java.util.Map;

        r2 := @parameter2: java.lang.String;

        if r0 == null goto label4;

        $r4 = <org.springframework.jmx.access.ConnectorDelegate: org.apache.commons.logging.Log logger>;

        $z0 = interfaceinvoke $r4.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r11 = <org.springframework.jmx.access.ConnectorDelegate: org.apache.commons.logging.Log logger>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("Connecting to remote MBeanServer at URL [");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r11.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r14);

     label1:
        $r7 = staticinvoke <javax.management.remote.JMXConnectorFactory: javax.management.remote.JMXConnector connect(javax.management.remote.JMXServiceURL,java.util.Map)>(r0, r6);

        r5.<org.springframework.jmx.access.ConnectorDelegate: javax.management.remote.JMXConnector connector> = $r7;

        $r8 = r5.<org.springframework.jmx.access.ConnectorDelegate: javax.management.remote.JMXConnector connector>;

        $r9 = interfaceinvoke $r8.<javax.management.remote.JMXConnector: javax.management.MBeanServerConnection getMBeanServerConnection()>();

     label2:
        return $r9;

     label3:
        $r15 := @caughtexception;

        $r16 = new org.springframework.jmx.MBeanServerNotFoundException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not connect to remote MBeanServer [");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<org.springframework.jmx.MBeanServerNotFoundException: void <init>(java.lang.String,java.lang.Throwable)>($r20, $r15);

        throw $r16;

     label4:
        $r1 = <org.springframework.jmx.access.ConnectorDelegate: org.apache.commons.logging.Log logger>;

        interfaceinvoke $r1.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Attempting to locate local MBeanServer");

        $r3 = staticinvoke <org.springframework.jmx.support.JmxUtils: javax.management.MBeanServer locateMBeanServer(java.lang.String)>(r2);

        return $r3;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void close()
    {
        org.springframework.jmx.access.ConnectorDelegate r0;
        java.io.IOException $r3;
        org.apache.commons.logging.Log $r4;
        javax.management.remote.JMXConnector $r1, $r2;

        r0 := @this: org.springframework.jmx.access.ConnectorDelegate;

        $r1 = r0.<org.springframework.jmx.access.ConnectorDelegate: javax.management.remote.JMXConnector connector>;

        if $r1 == null goto label4;

     label1:
        $r2 = r0.<org.springframework.jmx.access.ConnectorDelegate: javax.management.remote.JMXConnector connector>;

        interfaceinvoke $r2.<javax.management.remote.JMXConnector: void close()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = <org.springframework.jmx.access.ConnectorDelegate: org.apache.commons.logging.Log logger>;

        interfaceinvoke $r4.<org.apache.commons.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>("Could not close JMX connector", $r3);

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }
}
