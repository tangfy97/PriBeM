public class org.apache.tika.parser.crypto.Pkcs7Parser extends org.apache.tika.parser.AbstractParser
{
    private static final long serialVersionUID;
    private static final org.apache.tika.mime.MediaType PKCS7_MIME;
    private static final org.apache.tika.mime.MediaType PKCS7_SIGNATURE;

    public void <init>()
    {
        org.apache.tika.parser.crypto.Pkcs7Parser r0;

        r0 := @this: org.apache.tika.parser.crypto.Pkcs7Parser;

        specialinvoke r0.<org.apache.tika.parser.AbstractParser: void <init>()>();

        return;
    }

    public java.util.Set getSupportedTypes(org.apache.tika.parser.ParseContext)
    {
        org.apache.tika.parser.crypto.Pkcs7Parser r4;
        org.apache.tika.parser.ParseContext r5;
        org.apache.tika.mime.MediaType[] $r0;
        java.util.Set $r3;
        org.apache.tika.mime.MediaType $r1, $r2;

        r4 := @this: org.apache.tika.parser.crypto.Pkcs7Parser;

        r5 := @parameter0: org.apache.tika.parser.ParseContext;

        $r0 = newarray (org.apache.tika.mime.MediaType)[2];

        $r1 = <org.apache.tika.parser.crypto.Pkcs7Parser: org.apache.tika.mime.MediaType PKCS7_MIME>;

        $r0[0] = $r1;

        $r2 = <org.apache.tika.parser.crypto.Pkcs7Parser: org.apache.tika.mime.MediaType PKCS7_SIGNATURE>;

        $r0[1] = $r2;

        $r3 = staticinvoke <org.apache.tika.mime.MediaType: java.util.Set set(org.apache.tika.mime.MediaType[])>($r0);

        return $r3;
    }

    public void parse(java.io.InputStream, org.xml.sax.ContentHandler, org.apache.tika.metadata.Metadata, org.apache.tika.parser.ParseContext) throws java.io.IOException, org.xml.sax.SAXException, org.apache.tika.exception.TikaException
    {
        java.lang.Throwable $r14, $r15;
        org.apache.tika.parser.Parser r8;
        org.apache.tika.parser.crypto.Pkcs7Parser r16;
        org.bouncycastle.cms.CMSException $r12;
        org.apache.tika.metadata.Metadata r10;
        org.apache.tika.exception.TikaException $r11, $r13;
        org.xml.sax.ContentHandler r9;
        org.apache.tika.parser.EmptyParser $r6;
        org.apache.tika.io.CloseShieldInputStream $r1;
        org.bouncycastle.cms.CMSSignedDataParser $r0;
        org.apache.tika.parser.ParseContext r5;
        org.bouncycastle.cms.CMSTypedStream $r3;
        java.lang.Object $r7;
        java.io.InputStream r2, $r4;

        r16 := @this: org.apache.tika.parser.crypto.Pkcs7Parser;

        r2 := @parameter0: java.io.InputStream;

        r9 := @parameter1: org.xml.sax.ContentHandler;

        r10 := @parameter2: org.apache.tika.metadata.Metadata;

        r5 := @parameter3: org.apache.tika.parser.ParseContext;

     label01:
        $r0 = new org.bouncycastle.cms.CMSSignedDataParser;

        $r1 = new org.apache.tika.io.CloseShieldInputStream;

        specialinvoke $r1.<org.apache.tika.io.CloseShieldInputStream: void <init>(java.io.InputStream)>(r2);

        specialinvoke $r0.<org.bouncycastle.cms.CMSSignedDataParser: void <init>(java.io.InputStream)>($r1);

     label02:
        $r3 = virtualinvoke $r0.<org.bouncycastle.cms.CMSSignedDataParser: org.bouncycastle.cms.CMSTypedStream getSignedContent()>();

        if $r3 != null goto label03;

        $r11 = new org.apache.tika.exception.TikaException;

        specialinvoke $r11.<org.apache.tika.exception.TikaException: void <init>(java.lang.String)>("cannot parse detached pkcs7 signature (no signed data to parse)");

        throw $r11;

     label03:
        $r4 = virtualinvoke $r3.<org.bouncycastle.cms.CMSTypedStream: java.io.InputStream getContentStream()>();

     label04:
        $r6 = <org.apache.tika.parser.EmptyParser: org.apache.tika.parser.EmptyParser INSTANCE>;

        $r7 = virtualinvoke r5.<org.apache.tika.parser.ParseContext: java.lang.Object get(java.lang.Class,java.lang.Object)>(class "Lorg/apache/tika/parser/Parser;", $r6);

        r8 = (org.apache.tika.parser.Parser) $r7;

        interfaceinvoke r8.<org.apache.tika.parser.Parser: void parse(java.io.InputStream,org.xml.sax.ContentHandler,org.apache.tika.metadata.Metadata,org.apache.tika.parser.ParseContext)>($r4, r9, r10, r5);

     label05:
        virtualinvoke $r4.<java.io.InputStream: void close()>();

        goto label08;

     label06:
        $r15 := @caughtexception;

     label07:
        virtualinvoke $r4.<java.io.InputStream: void close()>();

        throw $r15;

     label08:
        virtualinvoke $r0.<org.bouncycastle.cms.CMSSignedDataParser: void close()>();

        goto label11;

     label09:
        $r14 := @caughtexception;

     label10:
        virtualinvoke $r0.<org.bouncycastle.cms.CMSSignedDataParser: void close()>();

        throw $r14;

     label11:
        goto label13;

     label12:
        $r12 := @caughtexception;

        $r13 = new org.apache.tika.exception.TikaException;

        specialinvoke $r13.<org.apache.tika.exception.TikaException: void <init>(java.lang.String,java.lang.Throwable)>("Unable to parse pkcs7 signed data", $r12);

        throw $r13;

     label13:
        return;

        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.lang.Throwable from label02 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
        catch org.bouncycastle.cms.CMSException from label01 to label11 with label12;
    }

    static void <clinit>()
    {
        org.apache.tika.mime.MediaType $r0, $r1;

        <org.apache.tika.parser.crypto.Pkcs7Parser: long serialVersionUID> = -7310531559075115044L;

        $r0 = staticinvoke <org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType application(java.lang.String)>("pkcs7-mime");

        <org.apache.tika.parser.crypto.Pkcs7Parser: org.apache.tika.mime.MediaType PKCS7_MIME> = $r0;

        $r1 = staticinvoke <org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType application(java.lang.String)>("pkcs7-signature");

        <org.apache.tika.parser.crypto.Pkcs7Parser: org.apache.tika.mime.MediaType PKCS7_SIGNATURE> = $r1;

        return;
    }
}
