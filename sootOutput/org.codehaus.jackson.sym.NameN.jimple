public final class org.codehaus.jackson.sym.NameN extends org.codehaus.jackson.sym.Name
{
    final int[] mQuads;
    final int mQuadLen;

    void <init>(java.lang.String, int, int[], int)
    {
        org.codehaus.jackson.sym.NameN r0;
        int[] r2;
        int i0, i1;
        java.lang.String r1;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: org.codehaus.jackson.sym.NameN;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: int[];

        i1 := @parameter3: int;

        specialinvoke r0.<org.codehaus.jackson.sym.Name: void <init>(java.lang.String,int)>(r1, i0);

        if i1 >= 3 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Qlen must >= 3");

        throw $r3;

     label1:
        r0.<org.codehaus.jackson.sym.NameN: int[] mQuads> = r2;

        r0.<org.codehaus.jackson.sym.NameN: int mQuadLen> = i1;

        return;
    }

    public boolean equals(int)
    {
        int i0;
        org.codehaus.jackson.sym.NameN r0;

        r0 := @this: org.codehaus.jackson.sym.NameN;

        i0 := @parameter0: int;

        return 0;
    }

    public boolean equals(int, int)
    {
        int i0, i1;
        org.codehaus.jackson.sym.NameN r0;

        r0 := @this: org.codehaus.jackson.sym.NameN;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return 0;
    }

    public boolean equals(int[], int)
    {
        org.codehaus.jackson.sym.NameN r0;
        int[] r1, $r2;
        int i0, $i1, $i2, $i3, i4;

        r0 := @this: org.codehaus.jackson.sym.NameN;

        r1 := @parameter0: int[];

        i0 := @parameter1: int;

        $i1 = r0.<org.codehaus.jackson.sym.NameN: int mQuadLen>;

        if i0 == $i1 goto label1;

        return 0;

     label1:
        i4 = 0;

     label2:
        if i4 >= i0 goto label4;

        $i3 = r1[i4];

        $r2 = r0.<org.codehaus.jackson.sym.NameN: int[] mQuads>;

        $i2 = $r2[i4];

        if $i3 == $i2 goto label3;

        return 0;

     label3:
        i4 = i4 + 1;

        goto label2;

     label4:
        return 1;
    }
}
