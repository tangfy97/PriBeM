public final class org.apache.poi.hssf.record.MulBlankRecord extends org.apache.poi.hssf.record.StandardRecord
{
    public static final short sid;
    private final int _row;
    private final int _firstCol;
    private final short[] _xfs;
    private final int _lastCol;

    public void <init>(int, int, short[])
    {
        org.apache.poi.hssf.record.MulBlankRecord r0;
        int i0, i1, $i2, $i3, $i4;
        short[] r1;

        r0 := @this: org.apache.poi.hssf.record.MulBlankRecord;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: short[];

        specialinvoke r0.<org.apache.poi.hssf.record.StandardRecord: void <init>()>();

        r0.<org.apache.poi.hssf.record.MulBlankRecord: int _row> = i0;

        r0.<org.apache.poi.hssf.record.MulBlankRecord: int _firstCol> = i1;

        r0.<org.apache.poi.hssf.record.MulBlankRecord: short[] _xfs> = r1;

        $i2 = lengthof r1;

        $i3 = i1 + $i2;

        $i4 = $i3 - 1;

        r0.<org.apache.poi.hssf.record.MulBlankRecord: int _lastCol> = $i4;

        return;
    }

    public int getRow()
    {
        int $i0;
        org.apache.poi.hssf.record.MulBlankRecord r0;

        r0 := @this: org.apache.poi.hssf.record.MulBlankRecord;

        $i0 = r0.<org.apache.poi.hssf.record.MulBlankRecord: int _row>;

        return $i0;
    }

    public int getFirstColumn()
    {
        int $i0;
        org.apache.poi.hssf.record.MulBlankRecord r0;

        r0 := @this: org.apache.poi.hssf.record.MulBlankRecord;

        $i0 = r0.<org.apache.poi.hssf.record.MulBlankRecord: int _firstCol>;

        return $i0;
    }

    public int getLastColumn()
    {
        int $i0;
        org.apache.poi.hssf.record.MulBlankRecord r0;

        r0 := @this: org.apache.poi.hssf.record.MulBlankRecord;

        $i0 = r0.<org.apache.poi.hssf.record.MulBlankRecord: int _lastCol>;

        return $i0;
    }

    public int getNumColumns()
    {
        org.apache.poi.hssf.record.MulBlankRecord r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: org.apache.poi.hssf.record.MulBlankRecord;

        $i1 = r0.<org.apache.poi.hssf.record.MulBlankRecord: int _lastCol>;

        $i0 = r0.<org.apache.poi.hssf.record.MulBlankRecord: int _firstCol>;

        $i2 = $i1 - $i0;

        $i3 = $i2 + 1;

        return $i3;
    }

    public short getXFAt(int)
    {
        short $s1;
        org.apache.poi.hssf.record.MulBlankRecord r0;
        int i0;
        short[] $r1;

        r0 := @this: org.apache.poi.hssf.record.MulBlankRecord;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.hssf.record.MulBlankRecord: short[] _xfs>;

        $s1 = $r1[i0];

        return $s1;
    }

    public void <init>(org.apache.poi.hssf.record.RecordInputStream)
    {
        short $s1, $s2;
        org.apache.poi.hssf.record.RecordInputStream r1;
        org.apache.poi.hssf.record.MulBlankRecord r0;
        int $i0, $i3, $i4;
        short[] $r2;

        r0 := @this: org.apache.poi.hssf.record.MulBlankRecord;

        r1 := @parameter0: org.apache.poi.hssf.record.RecordInputStream;

        specialinvoke r0.<org.apache.poi.hssf.record.StandardRecord: void <init>()>();

        $i0 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: int readUShort()>();

        r0.<org.apache.poi.hssf.record.MulBlankRecord: int _row> = $i0;

        $s1 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: short readShort()>();

        $i3 = (int) $s1;

        r0.<org.apache.poi.hssf.record.MulBlankRecord: int _firstCol> = $i3;

        $r2 = staticinvoke <org.apache.poi.hssf.record.MulBlankRecord: short[] parseXFs(org.apache.poi.hssf.record.RecordInputStream)>(r1);

        r0.<org.apache.poi.hssf.record.MulBlankRecord: short[] _xfs> = $r2;

        $s2 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: short readShort()>();

        $i4 = (int) $s2;

        r0.<org.apache.poi.hssf.record.MulBlankRecord: int _lastCol> = $i4;

        return;
    }

    private static short[] parseXFs(org.apache.poi.hssf.record.RecordInputStream)
    {
        short $s4;
        org.apache.poi.hssf.record.RecordInputStream r0;
        int $i0, $i1, $i2, $i3, i5;
        short[] r1;

        r0 := @parameter0: org.apache.poi.hssf.record.RecordInputStream;

        $i0 = virtualinvoke r0.<org.apache.poi.hssf.record.RecordInputStream: int remaining()>();

        $i1 = $i0 - 2;

        $i2 = $i1 / 2;

        r1 = newarray (short)[$i2];

        i5 = 0;

     label1:
        $i3 = lengthof r1;

        if i5 >= $i3 goto label2;

        $s4 = virtualinvoke r0.<org.apache.poi.hssf.record.RecordInputStream: short readShort()>();

        r1[i5] = $s4;

        i5 = i5 + 1;

        goto label1;

     label2:
        return r1;
    }

    public java.lang.String toString()
    {
        short $s4;
        java.lang.StringBuffer $r1, $r4, $r5, $r7, $r8, $r10, $r12, $r13, $r14, $r16, $r17;
        int $i0, $i1, $i2, $i3, i5, $i6;
        java.lang.String $r3, $r6, $r9, $r11, $r15;
        org.apache.poi.hssf.record.MulBlankRecord r2;

        r2 := @this: org.apache.poi.hssf.record.MulBlankRecord;

        $r17 = new java.lang.StringBuffer;

        specialinvoke $r17.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[MULBLANK]\n");

        $r1 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("row  = ");

        $i0 = virtualinvoke r2.<org.apache.poi.hssf.record.MulBlankRecord: int getRow()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r5 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("firstcol  = ");

        $i1 = virtualinvoke r2.<org.apache.poi.hssf.record.MulBlankRecord: int getFirstColumn()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r8 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" lastcol  = ");

        $i2 = r2.<org.apache.poi.hssf.record.MulBlankRecord: int _lastCol>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i2);

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        i5 = 0;

     label1:
        $i3 = virtualinvoke r2.<org.apache.poi.hssf.record.MulBlankRecord: int getNumColumns()>();

        if i5 >= $i3 goto label2;

        $r12 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("xf");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i5);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\t\t= ");

        $s4 = virtualinvoke r2.<org.apache.poi.hssf.record.MulBlankRecord: short getXFAt(int)>(i5);

        $i6 = (int) $s4;

        $r15 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i6);

        $r16 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        i5 = i5 + 1;

        goto label1;

     label2:
        virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[/MULBLANK]\n");

        $r11 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r11;
    }

    public short getSid()
    {
        org.apache.poi.hssf.record.MulBlankRecord r0;

        r0 := @this: org.apache.poi.hssf.record.MulBlankRecord;

        return 190;
    }

    public void serialize(org.apache.poi.util.LittleEndianOutput)
    {
        short $s4;
        org.apache.poi.util.LittleEndianOutput r0;
        org.apache.poi.hssf.record.MulBlankRecord r1;
        int $i0, $i1, i2, $i3, i5, $i6;
        short[] $r2, $r3;

        r1 := @this: org.apache.poi.hssf.record.MulBlankRecord;

        r0 := @parameter0: org.apache.poi.util.LittleEndianOutput;

        $i0 = r1.<org.apache.poi.hssf.record.MulBlankRecord: int _row>;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeShort(int)>($i0);

        $i1 = r1.<org.apache.poi.hssf.record.MulBlankRecord: int _firstCol>;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeShort(int)>($i1);

        $r2 = r1.<org.apache.poi.hssf.record.MulBlankRecord: short[] _xfs>;

        i2 = lengthof $r2;

        i5 = 0;

     label1:
        if i5 >= i2 goto label2;

        $r3 = r1.<org.apache.poi.hssf.record.MulBlankRecord: short[] _xfs>;

        $s4 = $r3[i5];

        $i6 = (int) $s4;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeShort(int)>($i6);

        i5 = i5 + 1;

        goto label1;

     label2:
        $i3 = r1.<org.apache.poi.hssf.record.MulBlankRecord: int _lastCol>;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeShort(int)>($i3);

        return;
    }

    protected int getDataSize()
    {
        org.apache.poi.hssf.record.MulBlankRecord r0;
        int $i0, $i1, $i2;
        short[] $r1;

        r0 := @this: org.apache.poi.hssf.record.MulBlankRecord;

        $r1 = r0.<org.apache.poi.hssf.record.MulBlankRecord: short[] _xfs>;

        $i0 = lengthof $r1;

        $i1 = $i0 * 2;

        $i2 = 6 + $i1;

        return $i2;
    }

    public java.lang.Object clone()
    {
        org.apache.poi.hssf.record.MulBlankRecord r0;

        r0 := @this: org.apache.poi.hssf.record.MulBlankRecord;

        return r0;
    }

    public static void <clinit>()
    {
        <org.apache.poi.hssf.record.MulBlankRecord: short sid> = 190;

        return;
    }
}
