class ucar.nc2.iosp.IndexChunkerTiled$Dim extends java.lang.Object
{
    ucar.ma2.Range data;
    ucar.ma2.Range want;
    ucar.ma2.Range intersect;
    int dataStride;
    int wantStride;
    int wantNelems;
    int ncontigElements;
    final ucar.nc2.iosp.IndexChunkerTiled this$0;

    void <init>(ucar.nc2.iosp.IndexChunkerTiled, ucar.ma2.Range, ucar.ma2.Range, ucar.ma2.Range, int, int)
    {
        ucar.nc2.iosp.IndexChunkerTiled r1;
        int i0, i1, $i2, $i3, $i4;
        java.lang.String $r9;
        boolean $z0;
        java.io.PrintStream $r6;
        ucar.ma2.Range r2, r3, r4;
        ucar.nc2.iosp.IndexChunkerTiled$Dim r0;
        java.lang.StringBuilder $r5, $r7, $r8;

        r0 := @this: ucar.nc2.iosp.IndexChunkerTiled$Dim;

        r1 := @parameter0: ucar.nc2.iosp.IndexChunkerTiled;

        r2 := @parameter1: ucar.ma2.Range;

        r3 := @parameter2: ucar.ma2.Range;

        r4 := @parameter3: ucar.ma2.Range;

        i0 := @parameter4: int;

        i1 := @parameter5: int;

        r0.<ucar.nc2.iosp.IndexChunkerTiled$Dim: ucar.nc2.iosp.IndexChunkerTiled this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.iosp.IndexChunkerTiled$Dim: ucar.ma2.Range data> = r2;

        r0.<ucar.nc2.iosp.IndexChunkerTiled$Dim: ucar.ma2.Range want> = r3;

        r0.<ucar.nc2.iosp.IndexChunkerTiled$Dim: ucar.ma2.Range intersect> = r4;

        r0.<ucar.nc2.iosp.IndexChunkerTiled$Dim: int dataStride> = i0;

        r0.<ucar.nc2.iosp.IndexChunkerTiled$Dim: int wantStride> = i1;

        $i2 = virtualinvoke r4.<ucar.ma2.Range: int stride()>();

        if $i2 != 1 goto label1;

        $i4 = virtualinvoke r4.<ucar.ma2.Range: int length()>();

        goto label2;

     label1:
        $i4 = 1;

     label2:
        r0.<ucar.nc2.iosp.IndexChunkerTiled$Dim: int ncontigElements> = $i4;

        $i3 = virtualinvoke r4.<ucar.ma2.Range: int length()>();

        r0.<ucar.nc2.iosp.IndexChunkerTiled$Dim: int wantNelems> = $i3;

        $z0 = staticinvoke <ucar.nc2.iosp.IndexChunkerTiled: boolean access$000(ucar.nc2.iosp.IndexChunkerTiled)>(r1);

        if $z0 == 0 goto label3;

        $r6 = <java.lang.System: java.io.PrintStream out>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dim=");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r9);

     label3:
        return;
    }

    public java.lang.String toString()
    {
        ucar.ma2.Range $r3, $r6, $r9;
        ucar.nc2.iosp.IndexChunkerTiled$Dim r2;
        int $i0;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r7, $r8, $r10, $r11, $r12;
        java.lang.String $r13;

        r2 := @this: ucar.nc2.iosp.IndexChunkerTiled$Dim;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  data = ");

        $r3 = r2.<ucar.nc2.iosp.IndexChunkerTiled$Dim: ucar.ma2.Range data>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" want = ");

        $r6 = r2.<ucar.nc2.iosp.IndexChunkerTiled$Dim: ucar.ma2.Range want>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" intersect = ");

        $r9 = r2.<ucar.nc2.iosp.IndexChunkerTiled$Dim: ucar.ma2.Range intersect>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ncontigElements = ");

        $i0 = r2.<ucar.nc2.iosp.IndexChunkerTiled$Dim: int ncontigElements>;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;
    }
}
