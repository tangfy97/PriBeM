public class arq.cmdline.ModItem extends java.lang.Object implements arq.cmdline.ArgModuleGeneral
{
    protected final arq.cmdline.ArgDecl queryFileDecl;
    private java.lang.String filename;
    private java.lang.String parseString;
    private com.hp.hpl.jena.sparql.sse.Item item;

    public void <init>()
    {
        arq.cmdline.ModItem r0;
        arq.cmdline.ArgDecl $r1;
        java.lang.String[] $r2;

        r0 := @this: arq.cmdline.ModItem;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new arq.cmdline.ArgDecl;

        $r2 = newarray (java.lang.String)[0];

        specialinvoke $r1.<arq.cmdline.ArgDecl: void <init>(boolean,java.lang.String,java.lang.String[])>(1, "file", $r2);

        r0.<arq.cmdline.ModItem: arq.cmdline.ArgDecl queryFileDecl> = $r1;

        r0.<arq.cmdline.ModItem: java.lang.String filename> = null;

        r0.<arq.cmdline.ModItem: java.lang.String parseString> = null;

        r0.<arq.cmdline.ModItem: com.hp.hpl.jena.sparql.sse.Item item> = null;

        return;
    }

    public void registerWith(arq.cmdline.CmdGeneral)
    {
        arq.cmdline.Usage $r1;
        arq.cmdline.ModItem r2;
        arq.cmdline.CmdGeneral r0;
        arq.cmdline.ArgDecl $r3;

        r2 := @this: arq.cmdline.ModItem;

        r0 := @parameter0: arq.cmdline.CmdGeneral;

        $r1 = virtualinvoke r0.<arq.cmdline.CmdGeneral: arq.cmdline.Usage getUsage()>();

        virtualinvoke $r1.<arq.cmdline.Usage: void startCategory(java.lang.String)>("Item");

        $r3 = r2.<arq.cmdline.ModItem: arq.cmdline.ArgDecl queryFileDecl>;

        virtualinvoke r0.<arq.cmdline.CmdGeneral: void add(arq.cmdline.ArgDecl,java.lang.String,java.lang.String)>($r3, "--file=", "File");

        return;
    }

    public void processArgs(arq.cmdline.CmdArgModule)
    {
        arq.cmdline.ArgDecl $r2, $r7;
        arq.cmdline.CmdArgModule r0;
        int $i0, $i1, $i2;
        com.hp.hpl.jena.util.FileManager $r9;
        java.lang.String $r3, $r4, $r5, $r6, $r8, $r10, $r11, $r12;
        boolean $z0;
        arq.cmdline.ModItem r1;

        r1 := @this: arq.cmdline.ModItem;

        r0 := @parameter0: arq.cmdline.CmdArgModule;

        $r2 = r1.<arq.cmdline.ModItem: arq.cmdline.ArgDecl queryFileDecl>;

        $z0 = virtualinvoke r0.<arq.cmdline.CmdArgModule: boolean contains(arq.cmdline.ArgDecl)>($r2);

        if $z0 == 0 goto label1;

        $r7 = r1.<arq.cmdline.ModItem: arq.cmdline.ArgDecl queryFileDecl>;

        $r8 = virtualinvoke r0.<arq.cmdline.CmdArgModule: java.lang.String getValue(arq.cmdline.ArgDecl)>($r7);

        r1.<arq.cmdline.ModItem: java.lang.String filename> = $r8;

        $r9 = staticinvoke <com.hp.hpl.jena.util.FileManager: com.hp.hpl.jena.util.FileManager get()>();

        $r10 = r1.<arq.cmdline.ModItem: java.lang.String filename>;

        $r11 = virtualinvoke $r9.<com.hp.hpl.jena.util.FileManager: java.lang.String readWholeFileAsUTF8(java.lang.String)>($r10);

        r1.<arq.cmdline.ModItem: java.lang.String parseString> = $r11;

        return;

     label1:
        $i0 = virtualinvoke r0.<arq.cmdline.CmdArgModule: int getNumPositional()>();

        if $i0 != 0 goto label2;

        $r6 = r1.<arq.cmdline.ModItem: java.lang.String filename>;

        if $r6 != null goto label2;

        virtualinvoke r0.<arq.cmdline.CmdArgModule: void cmdError(java.lang.String)>("No query string or query file");

     label2:
        $i2 = virtualinvoke r0.<arq.cmdline.CmdArgModule: int getNumPositional()>();

        if $i2 <= 1 goto label3;

        virtualinvoke r0.<arq.cmdline.CmdArgModule: void cmdError(java.lang.String)>("Only one query string allowed");

     label3:
        $i1 = virtualinvoke r0.<arq.cmdline.CmdArgModule: int getNumPositional()>();

        if $i1 != 1 goto label4;

        $r5 = r1.<arq.cmdline.ModItem: java.lang.String filename>;

        if $r5 == null goto label4;

        virtualinvoke r0.<arq.cmdline.CmdArgModule: void cmdError(java.lang.String)>("Either query string or query file - not both");

     label4:
        $r12 = r1.<arq.cmdline.ModItem: java.lang.String filename>;

        if $r12 != null goto label5;

        $r3 = virtualinvoke r0.<arq.cmdline.CmdArgModule: java.lang.String getPositionalArg(int)>(0);

        $r4 = virtualinvoke r0.<arq.cmdline.CmdArgModule: java.lang.String indirect(java.lang.String)>($r3);

        r1.<arq.cmdline.ModItem: java.lang.String parseString> = $r4;

     label5:
        return;
    }

    public com.hp.hpl.jena.sparql.sse.Item getItem()
    {
        arq.cmdline.ModItem r0;
        com.hp.hpl.jena.sparql.sse.Item $r1, $r3, $r4, $r5;
        java.lang.String $r2;

        r0 := @this: arq.cmdline.ModItem;

        $r1 = r0.<arq.cmdline.ModItem: com.hp.hpl.jena.sparql.sse.Item item>;

        if $r1 == null goto label1;

        $r5 = r0.<arq.cmdline.ModItem: com.hp.hpl.jena.sparql.sse.Item item>;

        return $r5;

     label1:
        $r2 = r0.<arq.cmdline.ModItem: java.lang.String parseString>;

        $r3 = staticinvoke <com.hp.hpl.jena.sparql.sse.SSE: com.hp.hpl.jena.sparql.sse.Item parseItem(java.lang.String)>($r2);

        r0.<arq.cmdline.ModItem: com.hp.hpl.jena.sparql.sse.Item item> = $r3;

        $r4 = r0.<arq.cmdline.ModItem: com.hp.hpl.jena.sparql.sse.Item item>;

        return $r4;
    }
}
