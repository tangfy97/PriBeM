public class org.apache.commons.lang.time.DurationFormatUtils extends java.lang.Object
{
    public static final java.lang.String ISO_EXTENDED_FORMAT_PATTERN;
    static final java.lang.Object y;
    static final java.lang.Object M;
    static final java.lang.Object d;
    static final java.lang.Object H;
    static final java.lang.Object m;
    static final java.lang.Object s;
    static final java.lang.Object S;

    public void <init>()
    {
        org.apache.commons.lang.time.DurationFormatUtils r0;

        r0 := @this: org.apache.commons.lang.time.DurationFormatUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String formatDurationHMS(long)
    {
        long l0;
        java.lang.String $r0;

        l0 := @parameter0: long;

        $r0 = staticinvoke <org.apache.commons.lang.time.DurationFormatUtils: java.lang.String formatDuration(long,java.lang.String)>(l0, "H:mm:ss.SSS");

        return $r0;
    }

    public static java.lang.String formatDurationISO(long)
    {
        long l0;
        java.lang.String $r0;

        l0 := @parameter0: long;

        $r0 = staticinvoke <org.apache.commons.lang.time.DurationFormatUtils: java.lang.String formatDuration(long,java.lang.String,boolean)>(l0, "\'P\'yyyy\'Y\'M\'M\'d\'DT\'H\'H\'m\'M\'s.S\'S\'", 0);

        return $r0;
    }

    public static java.lang.String formatDuration(long, java.lang.String)
    {
        long l0;
        java.lang.String r0, $r1;

        l0 := @parameter0: long;

        r0 := @parameter1: java.lang.String;

        $r1 = staticinvoke <org.apache.commons.lang.time.DurationFormatUtils: java.lang.String formatDuration(long,java.lang.String,boolean)>(l0, r0, 1);

        return $r1;
    }

    public static java.lang.String formatDuration(long, java.lang.String, boolean)
    {
        boolean $z0, $z1, $z2, $z3, $z4, z5;
        org.apache.commons.lang.time.DurationFormatUtils$Token[] $r1;
        long $l0, $l1, $l2, $l3, $l4, $l5, $l6, $l7, $l8, $l9, $l10, $l11, l12;
        int i13, i14, i15, i16, i17;
        java.lang.String r0, $r7;
        java.lang.Object $r2, $r3, $r4, $r5, $r6;

        l12 := @parameter0: long;

        r0 := @parameter1: java.lang.String;

        z5 := @parameter2: boolean;

        $r1 = staticinvoke <org.apache.commons.lang.time.DurationFormatUtils: org.apache.commons.lang.time.DurationFormatUtils$Token[] lexx(java.lang.String)>(r0);

        i13 = 0;

        i14 = 0;

        i15 = 0;

        i16 = 0;

        i17 = 0;

        $r2 = <org.apache.commons.lang.time.DurationFormatUtils: java.lang.Object d>;

        $z0 = staticinvoke <org.apache.commons.lang.time.DurationFormatUtils$Token: boolean containsTokenWithValue(org.apache.commons.lang.time.DurationFormatUtils$Token[],java.lang.Object)>($r1, $r2);

        if $z0 == 0 goto label1;

        $l9 = l12 / 86400000L;

        i13 = (int) $l9;

        $l10 = (long) i13;

        $l11 = $l10 * 86400000L;

        l12 = l12 - $l11;

     label1:
        $r3 = <org.apache.commons.lang.time.DurationFormatUtils: java.lang.Object H>;

        $z1 = staticinvoke <org.apache.commons.lang.time.DurationFormatUtils$Token: boolean containsTokenWithValue(org.apache.commons.lang.time.DurationFormatUtils$Token[],java.lang.Object)>($r1, $r3);

        if $z1 == 0 goto label2;

        $l6 = l12 / 3600000L;

        i14 = (int) $l6;

        $l7 = (long) i14;

        $l8 = $l7 * 3600000L;

        l12 = l12 - $l8;

     label2:
        $r4 = <org.apache.commons.lang.time.DurationFormatUtils: java.lang.Object m>;

        $z2 = staticinvoke <org.apache.commons.lang.time.DurationFormatUtils$Token: boolean containsTokenWithValue(org.apache.commons.lang.time.DurationFormatUtils$Token[],java.lang.Object)>($r1, $r4);

        if $z2 == 0 goto label3;

        $l3 = l12 / 60000L;

        i15 = (int) $l3;

        $l4 = (long) i15;

        $l5 = $l4 * 60000L;

        l12 = l12 - $l5;

     label3:
        $r5 = <org.apache.commons.lang.time.DurationFormatUtils: java.lang.Object s>;

        $z3 = staticinvoke <org.apache.commons.lang.time.DurationFormatUtils$Token: boolean containsTokenWithValue(org.apache.commons.lang.time.DurationFormatUtils$Token[],java.lang.Object)>($r1, $r5);

        if $z3 == 0 goto label4;

        $l0 = l12 / 1000L;

        i16 = (int) $l0;

        $l1 = (long) i16;

        $l2 = $l1 * 1000L;

        l12 = l12 - $l2;

     label4:
        $r6 = <org.apache.commons.lang.time.DurationFormatUtils: java.lang.Object S>;

        $z4 = staticinvoke <org.apache.commons.lang.time.DurationFormatUtils$Token: boolean containsTokenWithValue(org.apache.commons.lang.time.DurationFormatUtils$Token[],java.lang.Object)>($r1, $r6);

        if $z4 == 0 goto label5;

        i17 = (int) l12;

     label5:
        $r7 = staticinvoke <org.apache.commons.lang.time.DurationFormatUtils: java.lang.String format(org.apache.commons.lang.time.DurationFormatUtils$Token[],int,int,int,int,int,int,int,boolean)>($r1, 0, 0, i13, i14, i15, i16, i17, z5);

        return $r7;
    }

    public static java.lang.String formatDurationWords(long, boolean, boolean)
    {
        boolean z0, z1;
        long l0;
        java.lang.StringBuffer $r4, $r5, $r6, $r12, $r13, $r14;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        java.lang.String $r0, $r1, $r2, $r3, $r7, $r8, $r9, $r10, r11, $r15, $r16, $r17, $r18, $r19, $r20;

        l0 := @parameter0: long;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $r0 = staticinvoke <org.apache.commons.lang.time.DurationFormatUtils: java.lang.String formatDuration(long,java.lang.String)>(l0, "d\' days \'H\' hours \'m\' minutes \'s\' seconds\'");

        r11 = $r0;

        if z0 == 0 goto label2;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        r11 = $r7;

        $r8 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String replaceOnce(java.lang.String,java.lang.String,java.lang.String)>($r7, " 0 days", "");

        $i7 = virtualinvoke $r8.<java.lang.String: int length()>();

        $i8 = virtualinvoke $r7.<java.lang.String: int length()>();

        if $i7 == $i8 goto label1;

        r11 = $r8;

        $r9 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String replaceOnce(java.lang.String,java.lang.String,java.lang.String)>($r8, " 0 hours", "");

        $i9 = virtualinvoke $r9.<java.lang.String: int length()>();

        $i10 = virtualinvoke $r8.<java.lang.String: int length()>();

        if $i9 == $i10 goto label1;

        $r10 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String replaceOnce(java.lang.String,java.lang.String,java.lang.String)>($r9, " 0 minutes", "");

        r11 = $r10;

        $i11 = virtualinvoke $r10.<java.lang.String: int length()>();

        $i12 = virtualinvoke $r10.<java.lang.String: int length()>();

        if $i11 == $i12 goto label1;

        r11 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String replaceOnce(java.lang.String,java.lang.String,java.lang.String)>($r10, " 0 seconds", "");

     label1:
        $i13 = virtualinvoke r11.<java.lang.String: int length()>();

        if $i13 == 0 goto label2;

        r11 = virtualinvoke r11.<java.lang.String: java.lang.String substring(int)>(1);

     label2:
        if z1 == 0 goto label3;

        $r1 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String replaceOnce(java.lang.String,java.lang.String,java.lang.String)>(r11, " 0 seconds", "");

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i2 = virtualinvoke r11.<java.lang.String: int length()>();

        if $i1 == $i2 goto label3;

        r11 = $r1;

        $r2 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String replaceOnce(java.lang.String,java.lang.String,java.lang.String)>($r1, " 0 minutes", "");

        $i3 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i4 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i3 == $i4 goto label3;

        r11 = $r2;

        $r3 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String replaceOnce(java.lang.String,java.lang.String,java.lang.String)>($r2, " 0 hours", "");

        $i5 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i6 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i5 == $i6 goto label3;

        r11 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String replaceOnce(java.lang.String,java.lang.String,java.lang.String)>($r3, " 0 days", "");

     label3:
        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r11);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        $r16 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String replaceOnce(java.lang.String,java.lang.String,java.lang.String)>($r15, " 1 seconds", " 1 second");

        $r17 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String replaceOnce(java.lang.String,java.lang.String,java.lang.String)>($r16, " 1 minutes", " 1 minute");

        $r18 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String replaceOnce(java.lang.String,java.lang.String,java.lang.String)>($r17, " 1 hours", " 1 hour");

        $r19 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String replaceOnce(java.lang.String,java.lang.String,java.lang.String)>($r18, " 1 days", " 1 day");

        $r20 = virtualinvoke $r19.<java.lang.String: java.lang.String trim()>();

        return $r20;
    }

    public static java.lang.String formatPeriodISO(long, long)
    {
        java.util.TimeZone $r0;
        long l0, l1;
        java.lang.String $r1;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $r0 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();

        $r1 = staticinvoke <org.apache.commons.lang.time.DurationFormatUtils: java.lang.String formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)>(l0, l1, "\'P\'yyyy\'Y\'M\'M\'d\'DT\'H\'H\'m\'M\'s.S\'S\'", 0, $r0);

        return $r1;
    }

    public static java.lang.String formatPeriod(long, long, java.lang.String)
    {
        java.util.TimeZone $r1;
        long l0, l1;
        java.lang.String r0, $r2;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r0 := @parameter2: java.lang.String;

        $r1 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();

        $r2 = staticinvoke <org.apache.commons.lang.time.DurationFormatUtils: java.lang.String formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)>(l0, l1, r0, 1, $r1);

        return $r2;
    }

    public static java.lang.String formatPeriod(long, long, java.lang.String, boolean, java.util.TimeZone)
    {
        org.apache.commons.lang.time.DurationFormatUtils$Token[] $r1;
        long l0, l1;
        java.util.Calendar $r3, $r5;
        java.lang.String r0, $r12;
        java.util.Date $r15, $r16;
        boolean $z0, $z1, $z2, $z3, $z4, z5, $z6, $z7, $z8;
        java.util.TimeZone r2;
        int $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, i30, i31, i32, i33, i34, i35, i36, i37, $i38, i39, $i40, $i41, $i42, $i44, $i46, $i48, $i50, $i52, $i54, $i56, $i58;
        java.lang.Object $r7, $r8, $r9, $r10, $r11, $r13, $r14;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r0 := @parameter2: java.lang.String;

        z5 := @parameter3: boolean;

        r2 := @parameter4: java.util.TimeZone;

        $r1 = staticinvoke <org.apache.commons.lang.time.DurationFormatUtils: org.apache.commons.lang.time.DurationFormatUtils$Token[] lexx(java.lang.String)>(r0);

        $r3 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>(r2);

        $r15 = new java.util.Date;

        specialinvoke $r15.<java.util.Date: void <init>(long)>(l0);

        virtualinvoke $r3.<java.util.Calendar: void setTime(java.util.Date)>($r15);

        $r5 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>(r2);

        $r16 = new java.util.Date;

        specialinvoke $r16.<java.util.Date: void <init>(long)>(l1);

        virtualinvoke $r5.<java.util.Calendar: void setTime(java.util.Date)>($r16);

        $i2 = virtualinvoke $r5.<java.util.Calendar: int get(int)>(14);

        $i3 = virtualinvoke $r3.<java.util.Calendar: int get(int)>(14);

        i30 = $i2 - $i3;

        $i4 = virtualinvoke $r5.<java.util.Calendar: int get(int)>(13);

        $i5 = virtualinvoke $r3.<java.util.Calendar: int get(int)>(13);

        i31 = $i4 - $i5;

        $i6 = virtualinvoke $r5.<java.util.Calendar: int get(int)>(12);

        $i7 = virtualinvoke $r3.<java.util.Calendar: int get(int)>(12);

        i32 = $i6 - $i7;

        $i8 = virtualinvoke $r5.<java.util.Calendar: int get(int)>(11);

        $i9 = virtualinvoke $r3.<java.util.Calendar: int get(int)>(11);

        i33 = $i8 - $i9;

        $i10 = virtualinvoke $r5.<java.util.Calendar: int get(int)>(5);

        $i11 = virtualinvoke $r3.<java.util.Calendar: int get(int)>(5);

        i34 = $i10 - $i11;

        $i12 = virtualinvoke $r5.<java.util.Calendar: int get(int)>(2);

        $i13 = virtualinvoke $r3.<java.util.Calendar: int get(int)>(2);

        i35 = $i12 - $i13;

        $i14 = virtualinvoke $r5.<java.util.Calendar: int get(int)>(1);

        $i15 = virtualinvoke $r3.<java.util.Calendar: int get(int)>(1);

        i36 = $i14 - $i15;

     label01:
        if i30 >= 0 goto label02;

        i30 = i30 + 1000;

        $i44 = (int) -1;

        i31 = i31 + $i44;

        goto label01;

     label02:
        if i31 >= 0 goto label03;

        i31 = i31 + 60;

        $i46 = (int) -1;

        i32 = i32 + $i46;

        goto label02;

     label03:
        if i32 >= 0 goto label04;

        i32 = i32 + 60;

        $i48 = (int) -1;

        i33 = i33 + $i48;

        goto label03;

     label04:
        if i33 >= 0 goto label05;

        i33 = i33 + 24;

        $i50 = (int) -1;

        i34 = i34 + $i50;

        goto label04;

     label05:
        $r7 = <org.apache.commons.lang.time.DurationFormatUtils: java.lang.Object M>;

        $z0 = staticinvoke <org.apache.commons.lang.time.DurationFormatUtils$Token: boolean containsTokenWithValue(org.apache.commons.lang.time.DurationFormatUtils$Token[],java.lang.Object)>($r1, $r7);

        if $z0 == 0 goto label10;

     label06:
        if i34 >= 0 goto label07;

        $i29 = virtualinvoke $r3.<java.util.Calendar: int getActualMaximum(int)>(5);

        i34 = i34 + $i29;

        $i52 = (int) -1;

        i35 = i35 + $i52;

        virtualinvoke $r3.<java.util.Calendar: void add(int,int)>(2, 1);

        goto label06;

     label07:
        if i35 >= 0 goto label08;

        i35 = i35 + 12;

        $i54 = (int) -1;

        i36 = i36 + $i54;

        goto label07;

     label08:
        $r13 = <org.apache.commons.lang.time.DurationFormatUtils: java.lang.Object y>;

        $z7 = staticinvoke <org.apache.commons.lang.time.DurationFormatUtils$Token: boolean containsTokenWithValue(org.apache.commons.lang.time.DurationFormatUtils$Token[],java.lang.Object)>($r1, $r13);

        if $z7 != 0 goto label17;

        if i36 == 0 goto label17;

     label09:
        if i36 == 0 goto label17;

        $i28 = 12 * i36;

        i35 = i35 + $i28;

        i36 = 0;

        goto label09;

     label10:
        $r8 = <org.apache.commons.lang.time.DurationFormatUtils: java.lang.Object y>;

        $z1 = staticinvoke <org.apache.commons.lang.time.DurationFormatUtils$Token: boolean containsTokenWithValue(org.apache.commons.lang.time.DurationFormatUtils$Token[],java.lang.Object)>($r1, $r8);

        if $z1 != 0 goto label14;

        $i22 = virtualinvoke $r5.<java.util.Calendar: int get(int)>(1);

        i37 = $i22;

        if i35 >= 0 goto label11;

        $i56 = (int) -1;

        i37 = $i22 + $i56;

     label11:
        $i38 = virtualinvoke $r3.<java.util.Calendar: int get(int)>(1);

        if $i38 == i37 goto label13;

        $i23 = virtualinvoke $r3.<java.util.Calendar: int getActualMaximum(int)>(6);

        $i24 = virtualinvoke $r3.<java.util.Calendar: int get(int)>(6);

        $i25 = $i23 - $i24;

        i39 = i34 + $i25;

        $z6 = $r3 instanceof java.util.GregorianCalendar;

        if $z6 == 0 goto label12;

        $i26 = virtualinvoke $r3.<java.util.Calendar: int get(int)>(2);

        if $i26 != 1 goto label12;

        $i27 = virtualinvoke $r3.<java.util.Calendar: int get(int)>(5);

        if $i27 != 29 goto label12;

        i39 = i39 + 1;

     label12:
        virtualinvoke $r3.<java.util.Calendar: void add(int,int)>(1, 1);

        $i40 = virtualinvoke $r3.<java.util.Calendar: int get(int)>(6);

        i34 = i39 + $i40;

        goto label11;

     label13:
        i36 = 0;

     label14:
        $i41 = virtualinvoke $r3.<java.util.Calendar: int get(int)>(2);

        $i42 = virtualinvoke $r5.<java.util.Calendar: int get(int)>(2);

        if $i41 == $i42 goto label15;

        $i21 = virtualinvoke $r3.<java.util.Calendar: int getActualMaximum(int)>(5);

        i34 = i34 + $i21;

        virtualinvoke $r3.<java.util.Calendar: void add(int,int)>(2, 1);

        goto label14;

     label15:
        i35 = 0;

     label16:
        if i34 >= 0 goto label17;

        $i20 = virtualinvoke $r3.<java.util.Calendar: int getActualMaximum(int)>(5);

        i34 = i34 + $i20;

        $i58 = (int) -1;

        i35 = i35 + $i58;

        virtualinvoke $r3.<java.util.Calendar: void add(int,int)>(2, 1);

        goto label16;

     label17:
        $r14 = <org.apache.commons.lang.time.DurationFormatUtils: java.lang.Object d>;

        $z8 = staticinvoke <org.apache.commons.lang.time.DurationFormatUtils$Token: boolean containsTokenWithValue(org.apache.commons.lang.time.DurationFormatUtils$Token[],java.lang.Object)>($r1, $r14);

        if $z8 != 0 goto label18;

        $i19 = 24 * i34;

        i33 = i33 + $i19;

        i34 = 0;

     label18:
        $r9 = <org.apache.commons.lang.time.DurationFormatUtils: java.lang.Object H>;

        $z2 = staticinvoke <org.apache.commons.lang.time.DurationFormatUtils$Token: boolean containsTokenWithValue(org.apache.commons.lang.time.DurationFormatUtils$Token[],java.lang.Object)>($r1, $r9);

        if $z2 != 0 goto label19;

        $i18 = 60 * i33;

        i32 = i32 + $i18;

        i33 = 0;

     label19:
        $r10 = <org.apache.commons.lang.time.DurationFormatUtils: java.lang.Object m>;

        $z3 = staticinvoke <org.apache.commons.lang.time.DurationFormatUtils$Token: boolean containsTokenWithValue(org.apache.commons.lang.time.DurationFormatUtils$Token[],java.lang.Object)>($r1, $r10);

        if $z3 != 0 goto label20;

        $i17 = 60 * i32;

        i31 = i31 + $i17;

        i32 = 0;

     label20:
        $r11 = <org.apache.commons.lang.time.DurationFormatUtils: java.lang.Object s>;

        $z4 = staticinvoke <org.apache.commons.lang.time.DurationFormatUtils$Token: boolean containsTokenWithValue(org.apache.commons.lang.time.DurationFormatUtils$Token[],java.lang.Object)>($r1, $r11);

        if $z4 != 0 goto label21;

        $i16 = 1000 * i31;

        i30 = i30 + $i16;

        i31 = 0;

     label21:
        $r12 = staticinvoke <org.apache.commons.lang.time.DurationFormatUtils: java.lang.String format(org.apache.commons.lang.time.DurationFormatUtils$Token[],int,int,int,int,int,int,int,boolean)>($r1, i36, i35, i34, i33, i32, i31, i30, z5);

        return $r12;
    }

    static java.lang.String format(org.apache.commons.lang.time.DurationFormatUtils$Token[], int, int, int, int, int, int, int, boolean)
    {
        boolean $z0, z1, z2;
        org.apache.commons.lang.time.DurationFormatUtils$Token[] r1;
        java.lang.StringBuffer $r0;
        int i0, $i1, i2, i3, i4, i5, i6, i7, i8, i9;
        java.lang.String $r2, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29;
        org.apache.commons.lang.time.DurationFormatUtils$Token r3;
        java.lang.Object $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;

        r1 := @parameter0: org.apache.commons.lang.time.DurationFormatUtils$Token[];

        i7 := @parameter1: int;

        i6 := @parameter2: int;

        i5 := @parameter3: int;

        i4 := @parameter4: int;

        i3 := @parameter5: int;

        i2 := @parameter6: int;

        i8 := @parameter7: int;

        z1 := @parameter8: boolean;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        z2 = 0;

        i0 = lengthof r1;

        i9 = 0;

     label01:
        if i9 >= i0 goto label28;

        r3 = r1[i9];

        $r4 = virtualinvoke r3.<org.apache.commons.lang.time.DurationFormatUtils$Token: java.lang.Object getValue()>();

        $i1 = virtualinvoke r3.<org.apache.commons.lang.time.DurationFormatUtils$Token: int getCount()>();

        $z0 = $r4 instanceof java.lang.StringBuffer;

        if $z0 == 0 goto label02;

        $r21 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r21);

        goto label27;

     label02:
        $r5 = <org.apache.commons.lang.time.DurationFormatUtils: java.lang.Object y>;

        if $r4 != $r5 goto label05;

        if z1 == 0 goto label03;

        $r20 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i7);

        $r22 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String leftPad(java.lang.String,int,char)>($r20, $i1, 48);

        goto label04;

     label03:
        $r22 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i7);

     label04:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

        z2 = 0;

        goto label27;

     label05:
        $r6 = <org.apache.commons.lang.time.DurationFormatUtils: java.lang.Object M>;

        if $r4 != $r6 goto label08;

        if z1 == 0 goto label06;

        $r19 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i6);

        $r23 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String leftPad(java.lang.String,int,char)>($r19, $i1, 48);

        goto label07;

     label06:
        $r23 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i6);

     label07:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r23);

        z2 = 0;

        goto label27;

     label08:
        $r7 = <org.apache.commons.lang.time.DurationFormatUtils: java.lang.Object d>;

        if $r4 != $r7 goto label11;

        if z1 == 0 goto label09;

        $r18 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i5);

        $r24 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String leftPad(java.lang.String,int,char)>($r18, $i1, 48);

        goto label10;

     label09:
        $r24 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i5);

     label10:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r24);

        z2 = 0;

        goto label27;

     label11:
        $r8 = <org.apache.commons.lang.time.DurationFormatUtils: java.lang.Object H>;

        if $r4 != $r8 goto label14;

        if z1 == 0 goto label12;

        $r17 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i4);

        $r25 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String leftPad(java.lang.String,int,char)>($r17, $i1, 48);

        goto label13;

     label12:
        $r25 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i4);

     label13:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r25);

        z2 = 0;

        goto label27;

     label14:
        $r9 = <org.apache.commons.lang.time.DurationFormatUtils: java.lang.Object m>;

        if $r4 != $r9 goto label17;

        if z1 == 0 goto label15;

        $r16 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i3);

        $r26 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String leftPad(java.lang.String,int,char)>($r16, $i1, 48);

        goto label16;

     label15:
        $r26 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i3);

     label16:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r26);

        z2 = 0;

        goto label27;

     label17:
        $r10 = <org.apache.commons.lang.time.DurationFormatUtils: java.lang.Object s>;

        if $r4 != $r10 goto label20;

        if z1 == 0 goto label18;

        $r15 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i2);

        $r27 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String leftPad(java.lang.String,int,char)>($r15, $i1, 48);

        goto label19;

     label18:
        $r27 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i2);

     label19:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r27);

        z2 = 1;

        goto label27;

     label20:
        $r11 = <org.apache.commons.lang.time.DurationFormatUtils: java.lang.Object S>;

        if $r4 != $r11 goto label27;

        if z2 == 0 goto label23;

        i8 = i8 + 1000;

        if z1 == 0 goto label21;

        $r14 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i8);

        $r28 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String leftPad(java.lang.String,int,char)>($r14, $i1, 48);

        goto label22;

     label21:
        $r28 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i8);

     label22:
        $r13 = virtualinvoke $r28.<java.lang.String: java.lang.String substring(int)>(1);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        goto label26;

     label23:
        if z1 == 0 goto label24;

        $r12 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i8);

        $r29 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String leftPad(java.lang.String,int,char)>($r12, $i1, 48);

        goto label25;

     label24:
        $r29 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i8);

     label25:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r29);

     label26:
        z2 = 0;

     label27:
        i9 = i9 + 1;

        goto label01;

     label28:
        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    static org.apache.commons.lang.time.DurationFormatUtils$Token[] lexx(java.lang.String)
    {
        java.lang.Object[] $r4;
        org.apache.commons.lang.time.DurationFormatUtils$Token[] $r3, $r5;
        java.util.ArrayList $r15;
        java.lang.StringBuffer r12, $r16, $r18;
        int $i0, i1, $i2, i4, $i5, $i6;
        java.lang.String r0;
        boolean z0, z1, z2;
        char c3;
        org.apache.commons.lang.time.DurationFormatUtils$Token r13, $r17, $r19, $r20;
        char[] $r1;
        java.lang.Object $r7, r14;

        r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();

        $r15 = new java.util.ArrayList;

        $i0 = lengthof $r1;

        specialinvoke $r15.<java.util.ArrayList: void <init>(int)>($i0);

        z0 = 0;

        z2 = 0;

        z1 = 0;

        r12 = null;

        r13 = null;

        i1 = lengthof $r1;

        i4 = 0;

     label01:
        if i4 >= i1 goto label18;

        c3 = $r1[i4];

        if z1 == 0 goto label02;

        $i5 = (int) c3;

        if $i5 == 39 goto label02;

        virtualinvoke r12.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c3);

        goto label17;

     label02:
        r14 = null;

        $i6 = (int) c3;

        lookupswitch($i6)
        {
            case 39: goto label03;
            case 72: goto label08;
            case 77: goto label06;
            case 83: goto label11;
            case 100: goto label07;
            case 109: goto label09;
            case 115: goto label10;
            case 121: goto label05;
            default: goto label12;
        };

     label03:
        if z2 == 0 goto label04;

        r12 = null;

        z0 = 0;

        z2 = 0;

        z1 = 0;

        goto label14;

     label04:
        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        r12 = $r16;

        $r17 = new org.apache.commons.lang.time.DurationFormatUtils$Token;

        specialinvoke $r17.<org.apache.commons.lang.time.DurationFormatUtils$Token: void <init>(java.lang.Object)>($r16);

        virtualinvoke $r15.<java.util.ArrayList: boolean add(java.lang.Object)>($r17);

        z0 = 1;

        z2 = 1;

        z1 = 1;

        goto label14;

     label05:
        r14 = <org.apache.commons.lang.time.DurationFormatUtils: java.lang.Object y>;

        goto label14;

     label06:
        r14 = <org.apache.commons.lang.time.DurationFormatUtils: java.lang.Object M>;

        goto label14;

     label07:
        r14 = <org.apache.commons.lang.time.DurationFormatUtils: java.lang.Object d>;

        goto label14;

     label08:
        r14 = <org.apache.commons.lang.time.DurationFormatUtils: java.lang.Object H>;

        goto label14;

     label09:
        r14 = <org.apache.commons.lang.time.DurationFormatUtils: java.lang.Object m>;

        goto label14;

     label10:
        r14 = <org.apache.commons.lang.time.DurationFormatUtils: java.lang.Object s>;

        goto label14;

     label11:
        r14 = <org.apache.commons.lang.time.DurationFormatUtils: java.lang.Object S>;

        goto label14;

     label12:
        if r12 != null goto label13;

        $r18 = new java.lang.StringBuffer;

        specialinvoke $r18.<java.lang.StringBuffer: void <init>()>();

        r12 = $r18;

        $r19 = new org.apache.commons.lang.time.DurationFormatUtils$Token;

        specialinvoke $r19.<org.apache.commons.lang.time.DurationFormatUtils$Token: void <init>(java.lang.Object)>($r18);

        virtualinvoke $r15.<java.util.ArrayList: boolean add(java.lang.Object)>($r19);

     label13:
        virtualinvoke r12.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c3);

     label14:
        if r14 == null goto label17;

        if r13 == null goto label15;

        $r7 = virtualinvoke r13.<org.apache.commons.lang.time.DurationFormatUtils$Token: java.lang.Object getValue()>();

        if $r7 != r14 goto label15;

        virtualinvoke r13.<org.apache.commons.lang.time.DurationFormatUtils$Token: void increment()>();

        goto label16;

     label15:
        $r20 = new org.apache.commons.lang.time.DurationFormatUtils$Token;

        specialinvoke $r20.<org.apache.commons.lang.time.DurationFormatUtils$Token: void <init>(java.lang.Object)>(r14);

        virtualinvoke $r15.<java.util.ArrayList: boolean add(java.lang.Object)>($r20);

        r13 = $r20;

     label16:
        r12 = null;

     label17:
        i4 = i4 + 1;

        goto label01;

     label18:
        $i2 = virtualinvoke $r15.<java.util.ArrayList: int size()>();

        $r3 = newarray (org.apache.commons.lang.time.DurationFormatUtils$Token)[$i2];

        $r4 = virtualinvoke $r15.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r5 = (org.apache.commons.lang.time.DurationFormatUtils$Token[]) $r4;

        return $r5;
    }

    static void <clinit>()
    {
        <org.apache.commons.lang.time.DurationFormatUtils: java.lang.String ISO_EXTENDED_FORMAT_PATTERN> = "\'P\'yyyy\'Y\'M\'M\'d\'DT\'H\'H\'m\'M\'s.S\'S\'";

        <org.apache.commons.lang.time.DurationFormatUtils: java.lang.Object y> = "y";

        <org.apache.commons.lang.time.DurationFormatUtils: java.lang.Object M> = "M";

        <org.apache.commons.lang.time.DurationFormatUtils: java.lang.Object d> = "d";

        <org.apache.commons.lang.time.DurationFormatUtils: java.lang.Object H> = "H";

        <org.apache.commons.lang.time.DurationFormatUtils: java.lang.Object m> = "m";

        <org.apache.commons.lang.time.DurationFormatUtils: java.lang.Object s> = "s";

        <org.apache.commons.lang.time.DurationFormatUtils: java.lang.Object S> = "S";

        return;
    }
}
