public class org.apache.xmlbeans.impl.tool.XMLBean extends org.apache.tools.ant.taskdefs.MatchingTask
{
    private java.util.ArrayList schemas;
    private java.util.Set mdefnamespaces;
    private org.apache.tools.ant.types.Path classpath;
    private java.io.File destfile;
    private java.io.File schema;
    private java.io.File srcgendir;
    private java.io.File classgendir;
    private boolean quiet;
    private boolean verbose;
    private boolean debug;
    private boolean optimize;
    private boolean download;
    private boolean srconly;
    private boolean noupa;
    private boolean nopvr;
    private boolean noann;
    private boolean novdoc;
    private boolean noext;
    private boolean failonerror;
    private boolean fork;
    private boolean includeAntRuntime;
    private boolean noSrcRegen;
    private boolean includeJavaRuntime;
    private java.lang.String typesystemname;
    private java.lang.String forkedExecutable;
    private java.lang.String compiler;
    private java.lang.String debugLevel;
    private java.lang.String memoryInitialSize;
    private java.lang.String memoryMaximumSize;
    private java.lang.String catalog;
    private java.lang.String javasource;
    private java.util.List extensions;
    private java.util.HashMap _extRouter;
    private static final java.lang.String XSD;
    private static final java.lang.String WSDL;
    private static final java.lang.String JAVA;
    private static final java.lang.String XSDCONFIG;
    private java.lang.String source;

    public void <init>()
    {
        java.util.HashMap $r3;
        org.apache.xmlbeans.impl.tool.XMLBean r0;
        java.util.ArrayList $r1, $r2;

        r0 := @this: org.apache.xmlbeans.impl.tool.XMLBean;

        specialinvoke r0.<org.apache.tools.ant.taskdefs.MatchingTask: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.util.ArrayList schemas> = $r1;

        r0.<org.apache.xmlbeans.impl.tool.XMLBean: boolean noext> = 0;

        r0.<org.apache.xmlbeans.impl.tool.XMLBean: boolean failonerror> = 1;

        r0.<org.apache.xmlbeans.impl.tool.XMLBean: boolean fork> = 1;

        r0.<org.apache.xmlbeans.impl.tool.XMLBean: boolean includeAntRuntime> = 1;

        r0.<org.apache.xmlbeans.impl.tool.XMLBean: boolean includeJavaRuntime> = 0;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.util.List extensions> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>(int)>(5);

        r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.util.HashMap _extRouter> = $r3;

        r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.lang.String source> = null;

        return;
    }

    public void execute() throws org.apache.tools.ant.BuildException
    {
        org.apache.xmlbeans.impl.tool.XMLBean$ErrorLogger $r151;
        org.apache.tools.ant.DirectoryScanner $r93, $r105;
        java.lang.Object[] $r14, $r17, $r20, $r23;
        long $l9, $l10, $l11;
        java.lang.StringBuffer $r65, $r66, $r67, $r116, $r118, $r157, $r160;
        org.apache.tools.ant.types.Path$PathElement $r30;
        org.apache.tools.ant.BuildException $r145, $r159, $r163;
        org.apache.xmlbeans.impl.tool.XMLBean r0;
        org.apache.tools.ant.types.Path $r28, $r29, $r32, $r46, $r79, $r152, $r156;
        org.apache.tools.ant.FileScanner $r165, $r166, $r167, $r168;
        java.util.HashSet $r146, $r147, $r148, $r149;
        org.apache.tools.ant.types.FileSet $r96, $r110, $r134, r137;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i12, $i13;
        org.apache.tools.ant.taskdefs.Jar $r158;
        java.lang.Object $r5, $r7, $r9, $r11, $r91;
        java.io.File[] $r13, $r15, $r16, $r18, $r19, $r21, $r22, $r24, $r80, $r84, $r85, $r86, $r87;
        java.io.PrintWriter $r162;
        java.util.Set $r40, r138, r139, r140, r141;
        java.lang.Throwable $r113, $r123, $r164, $r169, $r170;
        java.util.ArrayList $r1, $r2, $r97;
        java.lang.String $r35, $r39, $r41, $r45, $r47, $r48, $r50, $r51, $r55, $r56, $r57, $r61, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r76, $r103, $r117, $r119, $r122;
        java.io.StringWriter $r161;
        java.io.File $r12, $r26, $r27, $r31, $r36, $r37, $r49, $r53, $r58, $r62, $r63, $r81, $r82, $r83, $r88, $r90, $r94, $r98, $r99, $r100, $r102, $r104, $r107, $r108, $r111, r132, $r133, $r136, $r142, r143, $r144, $r150, $r153;
        org.apache.tools.ant.taskdefs.Javac $r155;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, z30;
        java.util.List $r38;
        org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters $r154;
        java.util.HashMap $r4, $r6, $r8, $r10, $r124, $r126, $r128, $r130;
        java.lang.String[] $r33, $r95, $r101, $r106;
        org.apache.tools.ant.Project $r44, $r54, $r60, $r78, $r92, $r109, $r135;
        double $d0, $d1;
        java.util.Iterator $r3;

        r0 := @this: org.apache.xmlbeans.impl.tool.XMLBean;

        $r1 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.util.ArrayList schemas>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i0 != 0 goto label02;

        $r108 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.io.File schema>;

        if $r108 != null goto label02;

        $r110 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: org.apache.tools.ant.types.FileSet fileset>;

        $r109 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: org.apache.tools.ant.Project project>;

        $r111 = virtualinvoke $r110.<org.apache.tools.ant.types.FileSet: java.io.File getDir(org.apache.tools.ant.Project)>($r109);

        if $r111 != null goto label02;

        $z25 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: boolean failonerror>;

        if $z25 == 0 goto label01;

        $r145 = new org.apache.tools.ant.BuildException;

        specialinvoke $r145.<org.apache.tools.ant.BuildException: void <init>(java.lang.String)>("The \'schema\' or \'dir\' attribute or a nested fileset is required.");

        $r164 = (java.lang.Throwable) $r145;

        throw $r164;

     label01:
        virtualinvoke r0.<org.apache.xmlbeans.impl.tool.XMLBean: void log(java.lang.String,int)>("The \'schema\' or \'dir\' attribute or a nested fileset is required.", 0);

        return;

     label02:
        $r124 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.util.HashMap _extRouter>;

        $r146 = new java.util.HashSet;

        specialinvoke $r146.<java.util.HashSet: void <init>()>();

        virtualinvoke $r124.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(".xsd", $r146);

        $r126 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.util.HashMap _extRouter>;

        $r147 = new java.util.HashSet;

        specialinvoke $r147.<java.util.HashSet: void <init>()>();

        virtualinvoke $r126.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(".wsdl", $r147);

        $r128 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.util.HashMap _extRouter>;

        $r148 = new java.util.HashSet;

        specialinvoke $r148.<java.util.HashSet: void <init>()>();

        virtualinvoke $r128.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(".java", $r148);

        $r130 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.util.HashMap _extRouter>;

        $r149 = new java.util.HashSet;

        specialinvoke $r149.<java.util.HashSet: void <init>()>();

        virtualinvoke $r130.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(".xsdconfig", $r149);

        r132 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.io.File schema>;

        $r133 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.io.File schema>;

        if $r133 == null goto label04;

        $r98 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.io.File schema>;

        $z24 = virtualinvoke $r98.<java.io.File: boolean isDirectory()>();

        if $z24 == 0 goto label03;

        $r104 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.io.File schema>;

        $r105 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.XMLBean: org.apache.tools.ant.DirectoryScanner getDirectoryScanner(java.io.File)>($r104);

        $r165 = (org.apache.tools.ant.FileScanner) $r105;

        $r106 = interfaceinvoke $r165.<org.apache.tools.ant.FileScanner: java.lang.String[] getIncludedFiles()>();

        $r166 = (org.apache.tools.ant.FileScanner) $r105;

        $r107 = interfaceinvoke $r166.<org.apache.tools.ant.FileScanner: java.io.File getBasedir()>();

        specialinvoke r0.<org.apache.xmlbeans.impl.tool.XMLBean: void processPaths(java.lang.String[],java.io.File)>($r106, $r107);

        goto label04;

     label03:
        $r99 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.io.File schema>;

        $r100 = virtualinvoke $r99.<java.io.File: java.io.File getParentFile()>();

        r132 = $r100;

        $r101 = newarray (java.lang.String)[1];

        $r102 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.io.File schema>;

        $r103 = virtualinvoke $r102.<java.io.File: java.lang.String getName()>();

        $r101[0] = $r103;

        specialinvoke r0.<org.apache.xmlbeans.impl.tool.XMLBean: void processPaths(java.lang.String[],java.io.File)>($r101, $r100);

     label04:
        $r134 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: org.apache.tools.ant.types.FileSet fileset>;

        $r135 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: org.apache.tools.ant.Project project>;

        $r136 = virtualinvoke $r134.<org.apache.tools.ant.types.FileSet: java.io.File getDir(org.apache.tools.ant.Project)>($r135);

        if $r136 == null goto label05;

        $r97 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.util.ArrayList schemas>;

        $r96 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: org.apache.tools.ant.types.FileSet fileset>;

        virtualinvoke $r97.<java.util.ArrayList: boolean add(java.lang.Object)>($r96);

     label05:
        $r2 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.util.ArrayList schemas>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label06:
        $z28 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z28 == 0 goto label07;

        $r91 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r137 = (org.apache.tools.ant.types.FileSet) $r91;

        $r92 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: org.apache.tools.ant.Project project>;

        $r93 = virtualinvoke r137.<org.apache.tools.ant.types.FileSet: org.apache.tools.ant.DirectoryScanner getDirectoryScanner(org.apache.tools.ant.Project)>($r92);

        $r167 = (org.apache.tools.ant.FileScanner) $r93;

        $r94 = interfaceinvoke $r167.<org.apache.tools.ant.FileScanner: java.io.File getBasedir()>();

        $r168 = (org.apache.tools.ant.FileScanner) $r93;

        $r95 = interfaceinvoke $r168.<org.apache.tools.ant.FileScanner: java.lang.String[] getIncludedFiles()>();

        specialinvoke r0.<org.apache.xmlbeans.impl.tool.XMLBean: void processPaths(java.lang.String[],java.io.File)>($r95, $r94);

        goto label06;

     label07:
        $r4 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.util.HashMap _extRouter>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(".xsd");

        r138 = (java.util.Set) $r5;

        $r6 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.util.HashMap _extRouter>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(".wsdl");

        r139 = (java.util.Set) $r7;

        $i1 = interfaceinvoke r138.<java.util.Set: int size()>();

        $i2 = interfaceinvoke r139.<java.util.Set: int size()>();

        $i3 = $i1 + $i2;

        if $i3 != 0 goto label08;

        virtualinvoke r0.<org.apache.xmlbeans.impl.tool.XMLBean: void log(java.lang.String,int)>("Could not find any xsd or wsdl files to process.", 1);

        return;

     label08:
        $r8 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.util.HashMap _extRouter>;

        $r9 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(".java");

        r140 = (java.util.Set) $r9;

        $r10 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.util.HashMap _extRouter>;

        $r11 = virtualinvoke $r10.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(".xsdconfig");

        r141 = (java.util.Set) $r11;

        $r12 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.io.File srcgendir>;

        if $r12 != null goto label09;

        $z23 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: boolean srconly>;

        if $z23 == 0 goto label09;

        $r90 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.io.File classgendir>;

        r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.io.File srcgendir> = $r90;

     label09:
        $r142 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.io.File destfile>;

        if $r142 != null goto label10;

        $r88 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.io.File classgendir>;

        if $r88 != null goto label10;

        $z22 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: boolean srconly>;

        if $z22 != 0 goto label10;

        $r150 = new java.io.File;

        specialinvoke $r150.<java.io.File: void <init>(java.lang.String)>("xmltypes.jar");

        r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.io.File destfile> = $r150;

     label10:
        $z29 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: boolean verbose>;

        if $z29 == 0 goto label11;

        r0.<org.apache.xmlbeans.impl.tool.XMLBean: boolean quiet> = 0;

     label11:
        $i4 = interfaceinvoke r138.<java.util.Set: int size()>();

        $r13 = newarray (java.io.File)[$i4];

        $r14 = interfaceinvoke r138.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r13);

        $r15 = (java.io.File[]) $r14;

        $r84 = (java.io.File[]) $r15;

        $i5 = interfaceinvoke r139.<java.util.Set: int size()>();

        $r16 = newarray (java.io.File)[$i5];

        $r17 = interfaceinvoke r139.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r16);

        $r18 = (java.io.File[]) $r17;

        $r85 = (java.io.File[]) $r18;

        $i6 = interfaceinvoke r140.<java.util.Set: int size()>();

        $r19 = newarray (java.io.File)[$i6];

        $r20 = interfaceinvoke r140.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r19);

        $r21 = (java.io.File[]) $r20;

        $r86 = (java.io.File[]) $r21;

        $i7 = interfaceinvoke r141.<java.util.Set: int size()>();

        $r22 = newarray (java.io.File)[$i7];

        $r23 = interfaceinvoke r141.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r22);

        $r24 = (java.io.File[]) $r23;

        $r87 = (java.io.File[]) $r24;

        $r151 = new org.apache.xmlbeans.impl.tool.XMLBean$ErrorLogger;

        $z0 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: boolean verbose>;

        specialinvoke $r151.<org.apache.xmlbeans.impl.tool.XMLBean$ErrorLogger: void <init>(org.apache.xmlbeans.impl.tool.XMLBean,boolean)>(r0, $z0);

        z30 = 0;

     label12:
        r143 = null;

        $r26 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.io.File srcgendir>;

        if $r26 == null goto label13;

        $r83 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.io.File classgendir>;

        if $r83 != null goto label14;

     label13:
        r143 = staticinvoke <org.apache.xmlbeans.impl.tool.SchemaCodeGenerator: java.io.File createTempDir()>();

     label14:
        $r144 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.io.File srcgendir>;

        if $r144 != null goto label15;

        $r82 = staticinvoke <org.apache.xmlbeans.impl.common.IOUtil: java.io.File createDir(java.io.File,java.lang.String)>(r143, "src");

        r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.io.File srcgendir> = $r82;

     label15:
        $r27 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.io.File classgendir>;

        if $r27 != null goto label16;

        $r81 = staticinvoke <org.apache.xmlbeans.impl.common.IOUtil: java.io.File createDir(java.io.File,java.lang.String)>(r143, "classes");

        r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.io.File classgendir> = $r81;

     label16:
        $r28 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: org.apache.tools.ant.types.Path classpath>;

        if $r28 != null goto label17;

        $r152 = new org.apache.tools.ant.types.Path;

        $r78 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: org.apache.tools.ant.Project project>;

        specialinvoke $r152.<org.apache.tools.ant.types.Path: void <init>(org.apache.tools.ant.Project)>($r78);

        r0.<org.apache.xmlbeans.impl.tool.XMLBean: org.apache.tools.ant.types.Path classpath> = $r152;

        $r79 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: org.apache.tools.ant.types.Path classpath>;

        virtualinvoke $r79.<org.apache.tools.ant.types.Path: org.apache.tools.ant.types.Path concatSystemClasspath()>();

     label17:
        $r29 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: org.apache.tools.ant.types.Path classpath>;

        $r30 = virtualinvoke $r29.<org.apache.tools.ant.types.Path: org.apache.tools.ant.types.Path$PathElement createPathElement()>();

        $r31 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.io.File classgendir>;

        virtualinvoke $r30.<org.apache.tools.ant.types.Path$PathElement: void setLocation(java.io.File)>($r31);

        $r32 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: org.apache.tools.ant.types.Path classpath>;

        $r33 = virtualinvoke $r32.<org.apache.tools.ant.types.Path: java.lang.String[] list()>();

        $i8 = lengthof $r33;

        $r80 = newarray (java.io.File)[$i8];

        i12 = 0;

     label18:
        $i13 = lengthof $r33;

        if i12 >= $i13 goto label19;

        $r153 = new java.io.File;

        $r76 = $r33[i12];

        specialinvoke $r153.<java.io.File: void <init>(java.lang.String)>($r76);

        $r80[i12] = $r153;

        i12 = i12 + 1;

        goto label18;

     label19:
        $r154 = new org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters;

        specialinvoke $r154.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: void <init>()>();

        virtualinvoke $r154.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: void setBaseDir(java.io.File)>(r132);

        virtualinvoke $r154.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: void setXsdFiles(java.io.File[])>($r84);

        virtualinvoke $r154.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: void setWsdlFiles(java.io.File[])>($r85);

        virtualinvoke $r154.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: void setJavaFiles(java.io.File[])>($r86);

        virtualinvoke $r154.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: void setConfigFiles(java.io.File[])>($r87);

        virtualinvoke $r154.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: void setClasspath(java.io.File[])>($r80);

        $r35 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.lang.String typesystemname>;

        virtualinvoke $r154.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: void setName(java.lang.String)>($r35);

        $r36 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.io.File srcgendir>;

        virtualinvoke $r154.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: void setSrcDir(java.io.File)>($r36);

        $r37 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.io.File classgendir>;

        virtualinvoke $r154.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: void setClassesDir(java.io.File)>($r37);

        virtualinvoke $r154.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: void setNojavac(boolean)>(1);

        $z1 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: boolean debug>;

        virtualinvoke $r154.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: void setDebug(boolean)>($z1);

        $z2 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: boolean verbose>;

        virtualinvoke $r154.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: void setVerbose(boolean)>($z2);

        $z3 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: boolean quiet>;

        virtualinvoke $r154.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: void setQuiet(boolean)>($z3);

        $z4 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: boolean download>;

        virtualinvoke $r154.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: void setDownload(boolean)>($z4);

        $r38 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.util.List extensions>;

        virtualinvoke $r154.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: void setExtensions(java.util.List)>($r38);

        virtualinvoke $r154.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: void setErrorListener(java.util.Collection)>($r151);

        $r39 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.lang.String catalog>;

        virtualinvoke $r154.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: void setCatalogFile(java.lang.String)>($r39);

        $z5 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: boolean noSrcRegen>;

        virtualinvoke $r154.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: void setIncrementalSrcGen(boolean)>($z5);

        $r40 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.util.Set mdefnamespaces>;

        virtualinvoke $r154.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: void setMdefNamespaces(java.util.Set)>($r40);

        $z6 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: boolean noupa>;

        virtualinvoke $r154.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: void setNoUpa(boolean)>($z6);

        $z7 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: boolean nopvr>;

        virtualinvoke $r154.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: void setNoPvr(boolean)>($z7);

        $z8 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: boolean noann>;

        virtualinvoke $r154.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: void setNoAnn(boolean)>($z8);

        $z9 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: boolean novdoc>;

        virtualinvoke $r154.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: void setNoVDoc(boolean)>($z9);

        $z10 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: boolean noext>;

        virtualinvoke $r154.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: void setNoExt(boolean)>($z10);

        $r41 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.lang.String javasource>;

        virtualinvoke $r154.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: void setJavaSource(java.lang.String)>($r41);

        $z11 = staticinvoke <org.apache.xmlbeans.impl.tool.SchemaCompiler: boolean compile(org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters)>($r154);

        z30 = $z11;

        if $z11 == 0 goto label27;

        $z13 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: boolean srconly>;

        if $z13 != 0 goto label27;

        $l9 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r155 = new org.apache.tools.ant.taskdefs.Javac;

        specialinvoke $r155.<org.apache.tools.ant.taskdefs.Javac: void <init>()>();

        $r44 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: org.apache.tools.ant.Project project>;

        virtualinvoke $r155.<org.apache.tools.ant.taskdefs.Javac: void setProject(org.apache.tools.ant.Project)>($r44);

        $r45 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.lang.String getTaskName()>();

        virtualinvoke $r155.<org.apache.tools.ant.taskdefs.Javac: void setTaskName(java.lang.String)>($r45);

        $r46 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: org.apache.tools.ant.types.Path classpath>;

        virtualinvoke $r155.<org.apache.tools.ant.taskdefs.Javac: void setClasspath(org.apache.tools.ant.types.Path)>($r46);

        $r47 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.lang.String compiler>;

        if $r47 == null goto label20;

        $r74 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.lang.String compiler>;

        virtualinvoke $r155.<org.apache.tools.ant.taskdefs.Javac: void setCompiler(java.lang.String)>($r74);

     label20:
        $z14 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: boolean debug>;

        virtualinvoke $r155.<org.apache.tools.ant.taskdefs.Javac: void setDebug(boolean)>($z14);

        $r48 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.lang.String debugLevel>;

        if $r48 == null goto label21;

        $r73 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.lang.String debugLevel>;

        virtualinvoke $r155.<org.apache.tools.ant.taskdefs.Javac: void setDebugLevel(java.lang.String)>($r73);

     label21:
        $r49 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.io.File classgendir>;

        virtualinvoke $r155.<org.apache.tools.ant.taskdefs.Javac: void setDestdir(java.io.File)>($r49);

        $r50 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.lang.String forkedExecutable>;

        virtualinvoke $r155.<org.apache.tools.ant.taskdefs.Javac: void setExecutable(java.lang.String)>($r50);

        $z15 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: boolean failonerror>;

        virtualinvoke $r155.<org.apache.tools.ant.taskdefs.Javac: void setFailonerror(boolean)>($z15);

        $z16 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: boolean fork>;

        virtualinvoke $r155.<org.apache.tools.ant.taskdefs.Javac: void setFork(boolean)>($z16);

        $r51 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.lang.String javasource>;

        if $r51 == null goto label22;

        $r71 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.lang.String javasource>;

        virtualinvoke $r155.<org.apache.tools.ant.taskdefs.Javac: void setSource(java.lang.String)>($r71);

        $r72 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.lang.String javasource>;

        virtualinvoke $r155.<org.apache.tools.ant.taskdefs.Javac: void setTarget(java.lang.String)>($r72);

        goto label23;

     label22:
        virtualinvoke $r155.<org.apache.tools.ant.taskdefs.Javac: void setSource(java.lang.String)>("1.4");

        virtualinvoke $r155.<org.apache.tools.ant.taskdefs.Javac: void setTarget(java.lang.String)>("1.4");

     label23:
        $z17 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: boolean includeAntRuntime>;

        virtualinvoke $r155.<org.apache.tools.ant.taskdefs.Javac: void setIncludeantruntime(boolean)>($z17);

        $z18 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: boolean includeJavaRuntime>;

        virtualinvoke $r155.<org.apache.tools.ant.taskdefs.Javac: void setIncludejavaruntime(boolean)>($z18);

        $r156 = new org.apache.tools.ant.types.Path;

        $r54 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: org.apache.tools.ant.Project project>;

        $r53 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.io.File srcgendir>;

        $r55 = virtualinvoke $r53.<java.io.File: java.lang.String getAbsolutePath()>();

        specialinvoke $r156.<org.apache.tools.ant.types.Path: void <init>(org.apache.tools.ant.Project,java.lang.String)>($r54, $r55);

        virtualinvoke $r155.<org.apache.tools.ant.taskdefs.Javac: void setSrcdir(org.apache.tools.ant.types.Path)>($r156);

        $r56 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.lang.String memoryInitialSize>;

        if $r56 == null goto label24;

        $r70 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.lang.String memoryInitialSize>;

        virtualinvoke $r155.<org.apache.tools.ant.taskdefs.Javac: void setMemoryInitialSize(java.lang.String)>($r70);

     label24:
        $r57 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.lang.String memoryMaximumSize>;

        if $r57 == null goto label25;

        $r69 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.lang.String memoryMaximumSize>;

        virtualinvoke $r155.<org.apache.tools.ant.taskdefs.Javac: void setMemoryMaximumSize(java.lang.String)>($r69);

     label25:
        $z19 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: boolean optimize>;

        virtualinvoke $r155.<org.apache.tools.ant.taskdefs.Javac: void setOptimize(boolean)>($z19);

        $z20 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: boolean verbose>;

        virtualinvoke $r155.<org.apache.tools.ant.taskdefs.Javac: void setVerbose(boolean)>($z20);

        virtualinvoke $r155.<org.apache.tools.ant.taskdefs.Javac: void execute()>();

        $l10 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $z21 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: boolean quiet>;

        if $z21 != 0 goto label26;

        $r157 = new java.lang.StringBuffer;

        specialinvoke $r157.<java.lang.StringBuffer: void <init>()>();

        $r65 = virtualinvoke $r157.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Time to compile code: ");

        $l11 = $l10 - $l9;

        $d0 = (double) $l11;

        $d1 = $d0 / 1000.0;

        $r66 = virtualinvoke $r65.<java.lang.StringBuffer: java.lang.StringBuffer append(double)>($d1);

        $r67 = virtualinvoke $r66.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" seconds");

        $r68 = virtualinvoke $r67.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.tool.XMLBean: void log(java.lang.String)>($r68);

     label26:
        $r58 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.io.File destfile>;

        if $r58 == null goto label27;

        $r158 = new org.apache.tools.ant.taskdefs.Jar;

        specialinvoke $r158.<org.apache.tools.ant.taskdefs.Jar: void <init>()>();

        $r60 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: org.apache.tools.ant.Project project>;

        virtualinvoke $r158.<org.apache.tools.ant.taskdefs.Jar: void setProject(org.apache.tools.ant.Project)>($r60);

        $r61 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.lang.String getTaskName()>();

        virtualinvoke $r158.<org.apache.tools.ant.taskdefs.Jar: void setTaskName(java.lang.String)>($r61);

        $r62 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.io.File classgendir>;

        virtualinvoke $r158.<org.apache.tools.ant.taskdefs.Jar: void setBasedir(java.io.File)>($r62);

        $r63 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.io.File destfile>;

        virtualinvoke $r158.<org.apache.tools.ant.taskdefs.Jar: void setDestFile(java.io.File)>($r63);

        virtualinvoke $r158.<org.apache.tools.ant.taskdefs.Jar: void execute()>();

     label27:
        if r143 == null goto label28;

        staticinvoke <org.apache.xmlbeans.impl.tool.SchemaCodeGenerator: void tryHardToDelete(java.io.File)>(r143);

     label28:
        goto label33;

     label29:
        $r123 := @caughtexception;

        throw $r123;

     label30:
        $r113 := @caughtexception;

        $z26 = $r113 instanceof java.lang.InterruptedException;

        if $z26 != 0 goto label31;

        $z27 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: boolean failonerror>;

        if $z27 == 0 goto label32;

     label31:
        $r159 = new org.apache.tools.ant.BuildException;

        specialinvoke $r159.<org.apache.tools.ant.BuildException: void <init>(java.lang.Throwable)>($r113);

        $r169 = (java.lang.Throwable) $r159;

        throw $r169;

     label32:
        $r160 = new java.lang.StringBuffer;

        specialinvoke $r160.<java.lang.StringBuffer: void <init>()>();

        $r116 = virtualinvoke $r160.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Exception while building schemas: ");

        $r117 = virtualinvoke $r113.<java.lang.Throwable: java.lang.String getMessage()>();

        $r118 = virtualinvoke $r116.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r117);

        $r119 = virtualinvoke $r118.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.tool.XMLBean: void log(java.lang.String,int)>($r119, 0);

        $r161 = new java.io.StringWriter;

        specialinvoke $r161.<java.io.StringWriter: void <init>()>();

        $r162 = new java.io.PrintWriter;

        specialinvoke $r162.<java.io.PrintWriter: void <init>(java.io.Writer)>($r161);

        virtualinvoke $r113.<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>($r162);

        $r122 = virtualinvoke $r161.<java.io.StringWriter: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.tool.XMLBean: void log(java.lang.String,int)>($r122, 3);

     label33:
        if z30 != 0 goto label34;

        $z12 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: boolean failonerror>;

        if $z12 == 0 goto label34;

        $r163 = new org.apache.tools.ant.BuildException;

        specialinvoke $r163.<org.apache.tools.ant.BuildException: void <init>()>();

        $r170 = (java.lang.Throwable) $r163;

        throw $r170;

     label34:
        return;

        catch org.apache.tools.ant.BuildException from label12 to label28 with label29;
        catch java.lang.Throwable from label12 to label28 with label30;
    }

    private void processPaths(java.lang.String[], java.io.File)
    {
        java.util.Set r8;
        java.lang.String[] r0;
        java.util.HashMap $r6;
        java.io.File r10, $r11;
        int $i0, $i1, i2, $i4;
        java.lang.Object $r7;
        java.lang.String $r1, r2, $r3, $r4;
        org.apache.xmlbeans.impl.tool.XMLBean r5;

        r5 := @this: org.apache.xmlbeans.impl.tool.XMLBean;

        r0 := @parameter0: java.lang.String[];

        r10 := @parameter1: java.io.File;

        i2 = 0;

     label1:
        $i0 = lengthof r0;

        if i2 >= $i0 goto label3;

        $r1 = r0[i2];

        $i1 = virtualinvoke $r1.<java.lang.String: int lastIndexOf(int)>(46);

        $i4 = (int) -1;

        if $i1 <= $i4 goto label2;

        r2 = r0[i2];

        $r3 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i1);

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String toLowerCase()>();

        $r6 = r5.<org.apache.xmlbeans.impl.tool.XMLBean: java.util.HashMap _extRouter>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r4);

        r8 = (java.util.Set) $r7;

        if r8 == null goto label2;

        $r11 = new java.io.File;

        specialinvoke $r11.<java.io.File: void <init>(java.io.File,java.lang.String)>(r10, r2);

        interfaceinvoke r8.<java.util.Set: boolean add(java.lang.Object)>($r11);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return;
    }

    public void addFileset(org.apache.tools.ant.types.FileSet)
    {
        org.apache.xmlbeans.impl.tool.XMLBean r0;
        org.apache.tools.ant.types.FileSet r1;
        java.util.ArrayList $r2;

        r0 := @this: org.apache.xmlbeans.impl.tool.XMLBean;

        r1 := @parameter0: org.apache.tools.ant.types.FileSet;

        $r2 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.util.ArrayList schemas>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return;
    }

    public java.io.File getSchema()
    {
        org.apache.xmlbeans.impl.tool.XMLBean r0;
        java.io.File $r1;

        r0 := @this: org.apache.xmlbeans.impl.tool.XMLBean;

        $r1 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.io.File schema>;

        return $r1;
    }

    public void setSchema(java.io.File)
    {
        org.apache.xmlbeans.impl.tool.XMLBean r0;
        java.io.File r1;

        r0 := @this: org.apache.xmlbeans.impl.tool.XMLBean;

        r1 := @parameter0: java.io.File;

        r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.io.File schema> = r1;

        return;
    }

    public void setClasspath(org.apache.tools.ant.types.Path)
    {
        org.apache.xmlbeans.impl.tool.XMLBean r0;
        org.apache.tools.ant.types.Path $r1, r2, $r3;

        r0 := @this: org.apache.xmlbeans.impl.tool.XMLBean;

        r2 := @parameter0: org.apache.tools.ant.types.Path;

        $r1 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: org.apache.tools.ant.types.Path classpath>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: org.apache.tools.ant.types.Path classpath>;

        virtualinvoke $r3.<org.apache.tools.ant.types.Path: void append(org.apache.tools.ant.types.Path)>(r2);

        goto label2;

     label1:
        r0.<org.apache.xmlbeans.impl.tool.XMLBean: org.apache.tools.ant.types.Path classpath> = r2;

     label2:
        return;
    }

    public org.apache.tools.ant.types.Path createClasspath()
    {
        org.apache.tools.ant.Project $r5;
        org.apache.xmlbeans.impl.tool.XMLBean r0;
        org.apache.tools.ant.types.Path $r1, $r2, $r3, $r4;

        r0 := @this: org.apache.xmlbeans.impl.tool.XMLBean;

        $r1 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: org.apache.tools.ant.types.Path classpath>;

        if $r1 != null goto label1;

        $r4 = new org.apache.tools.ant.types.Path;

        $r5 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: org.apache.tools.ant.Project project>;

        specialinvoke $r4.<org.apache.tools.ant.types.Path: void <init>(org.apache.tools.ant.Project)>($r5);

        r0.<org.apache.xmlbeans.impl.tool.XMLBean: org.apache.tools.ant.types.Path classpath> = $r4;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: org.apache.tools.ant.types.Path classpath>;

        $r3 = virtualinvoke $r2.<org.apache.tools.ant.types.Path: org.apache.tools.ant.types.Path createPath()>();

        return $r3;
    }

    public void setClasspathRef(org.apache.tools.ant.types.Reference)
    {
        org.apache.tools.ant.Project $r6;
        org.apache.xmlbeans.impl.tool.XMLBean r0;
        org.apache.tools.ant.types.Path $r1, $r2, $r3, $r5;
        org.apache.tools.ant.types.Reference r4;

        r0 := @this: org.apache.xmlbeans.impl.tool.XMLBean;

        r4 := @parameter0: org.apache.tools.ant.types.Reference;

        $r1 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: org.apache.tools.ant.types.Path classpath>;

        if $r1 != null goto label1;

        $r5 = new org.apache.tools.ant.types.Path;

        $r6 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: org.apache.tools.ant.Project project>;

        specialinvoke $r5.<org.apache.tools.ant.types.Path: void <init>(org.apache.tools.ant.Project)>($r6);

        r0.<org.apache.xmlbeans.impl.tool.XMLBean: org.apache.tools.ant.types.Path classpath> = $r5;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: org.apache.tools.ant.types.Path classpath>;

        $r3 = virtualinvoke $r2.<org.apache.tools.ant.types.Path: org.apache.tools.ant.types.Path createPath()>();

        virtualinvoke $r3.<org.apache.tools.ant.types.Path: void setRefid(org.apache.tools.ant.types.Reference)>(r4);

        return;
    }

    public org.apache.tools.ant.types.Path getClasspath()
    {
        org.apache.xmlbeans.impl.tool.XMLBean r0;
        org.apache.tools.ant.types.Path $r1;

        r0 := @this: org.apache.xmlbeans.impl.tool.XMLBean;

        $r1 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: org.apache.tools.ant.types.Path classpath>;

        return $r1;
    }

    public java.io.File getDestfile()
    {
        org.apache.xmlbeans.impl.tool.XMLBean r0;
        java.io.File $r1;

        r0 := @this: org.apache.xmlbeans.impl.tool.XMLBean;

        $r1 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.io.File destfile>;

        return $r1;
    }

    public void setDestfile(java.io.File)
    {
        org.apache.xmlbeans.impl.tool.XMLBean r0;
        java.io.File r1;

        r0 := @this: org.apache.xmlbeans.impl.tool.XMLBean;

        r1 := @parameter0: java.io.File;

        r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.io.File destfile> = r1;

        return;
    }

    public java.io.File getSrcgendir()
    {
        org.apache.xmlbeans.impl.tool.XMLBean r0;
        java.io.File $r1;

        r0 := @this: org.apache.xmlbeans.impl.tool.XMLBean;

        $r1 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.io.File srcgendir>;

        return $r1;
    }

    public void setSrcgendir(java.io.File)
    {
        org.apache.xmlbeans.impl.tool.XMLBean r0;
        java.io.File r1;

        r0 := @this: org.apache.xmlbeans.impl.tool.XMLBean;

        r1 := @parameter0: java.io.File;

        r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.io.File srcgendir> = r1;

        return;
    }

    public java.io.File getClassgendir()
    {
        org.apache.xmlbeans.impl.tool.XMLBean r0;
        java.io.File $r1;

        r0 := @this: org.apache.xmlbeans.impl.tool.XMLBean;

        $r1 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.io.File classgendir>;

        return $r1;
    }

    public void setClassgendir(java.io.File)
    {
        org.apache.xmlbeans.impl.tool.XMLBean r0;
        java.io.File r1;

        r0 := @this: org.apache.xmlbeans.impl.tool.XMLBean;

        r1 := @parameter0: java.io.File;

        r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.io.File classgendir> = r1;

        return;
    }

    public void setCompiler(java.lang.String)
    {
        java.lang.String r1;
        org.apache.xmlbeans.impl.tool.XMLBean r0;

        r0 := @this: org.apache.xmlbeans.impl.tool.XMLBean;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.lang.String compiler> = r1;

        return;
    }

    public boolean isDownload()
    {
        org.apache.xmlbeans.impl.tool.XMLBean r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.tool.XMLBean;

        $z0 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: boolean download>;

        return $z0;
    }

    public void setDownload(boolean)
    {
        org.apache.xmlbeans.impl.tool.XMLBean r0;
        boolean z0;

        r0 := @this: org.apache.xmlbeans.impl.tool.XMLBean;

        z0 := @parameter0: boolean;

        r0.<org.apache.xmlbeans.impl.tool.XMLBean: boolean download> = z0;

        return;
    }

    public void setOptimize(boolean)
    {
        org.apache.xmlbeans.impl.tool.XMLBean r0;
        boolean z0;

        r0 := @this: org.apache.xmlbeans.impl.tool.XMLBean;

        z0 := @parameter0: boolean;

        r0.<org.apache.xmlbeans.impl.tool.XMLBean: boolean optimize> = z0;

        return;
    }

    public boolean getOptimize()
    {
        org.apache.xmlbeans.impl.tool.XMLBean r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.tool.XMLBean;

        $z0 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: boolean optimize>;

        return $z0;
    }

    public boolean isVerbose()
    {
        org.apache.xmlbeans.impl.tool.XMLBean r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.tool.XMLBean;

        $z0 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: boolean verbose>;

        return $z0;
    }

    public void setVerbose(boolean)
    {
        org.apache.xmlbeans.impl.tool.XMLBean r0;
        boolean z0;

        r0 := @this: org.apache.xmlbeans.impl.tool.XMLBean;

        z0 := @parameter0: boolean;

        r0.<org.apache.xmlbeans.impl.tool.XMLBean: boolean verbose> = z0;

        return;
    }

    public boolean isQuiet()
    {
        org.apache.xmlbeans.impl.tool.XMLBean r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.tool.XMLBean;

        $z0 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: boolean quiet>;

        return $z0;
    }

    public void setQuiet(boolean)
    {
        org.apache.xmlbeans.impl.tool.XMLBean r0;
        boolean z0;

        r0 := @this: org.apache.xmlbeans.impl.tool.XMLBean;

        z0 := @parameter0: boolean;

        r0.<org.apache.xmlbeans.impl.tool.XMLBean: boolean quiet> = z0;

        return;
    }

    public boolean isDebug()
    {
        org.apache.xmlbeans.impl.tool.XMLBean r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.tool.XMLBean;

        $z0 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: boolean debug>;

        return $z0;
    }

    public java.lang.String getDebugLevel()
    {
        java.lang.String $r1;
        org.apache.xmlbeans.impl.tool.XMLBean r0;

        r0 := @this: org.apache.xmlbeans.impl.tool.XMLBean;

        $r1 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.lang.String debugLevel>;

        return $r1;
    }

    public void setDebugLevel(java.lang.String)
    {
        java.lang.String r1;
        org.apache.xmlbeans.impl.tool.XMLBean r0;

        r0 := @this: org.apache.xmlbeans.impl.tool.XMLBean;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.lang.String debugLevel> = r1;

        return;
    }

    public void setDebug(boolean)
    {
        org.apache.xmlbeans.impl.tool.XMLBean r0;
        boolean z0;

        r0 := @this: org.apache.xmlbeans.impl.tool.XMLBean;

        z0 := @parameter0: boolean;

        r0.<org.apache.xmlbeans.impl.tool.XMLBean: boolean debug> = z0;

        return;
    }

    public void setFork(boolean)
    {
        org.apache.xmlbeans.impl.tool.XMLBean r0;
        boolean z0;

        r0 := @this: org.apache.xmlbeans.impl.tool.XMLBean;

        z0 := @parameter0: boolean;

        r0.<org.apache.xmlbeans.impl.tool.XMLBean: boolean fork> = z0;

        return;
    }

    public void setExecutable(java.lang.String)
    {
        java.lang.String r1;
        org.apache.xmlbeans.impl.tool.XMLBean r0;

        r0 := @this: org.apache.xmlbeans.impl.tool.XMLBean;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.lang.String forkedExecutable> = r1;

        return;
    }

    public java.lang.String getExecutable()
    {
        java.lang.String $r1;
        org.apache.xmlbeans.impl.tool.XMLBean r0;

        r0 := @this: org.apache.xmlbeans.impl.tool.XMLBean;

        $r1 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.lang.String forkedExecutable>;

        return $r1;
    }

    public boolean isSrconly()
    {
        org.apache.xmlbeans.impl.tool.XMLBean r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.tool.XMLBean;

        $z0 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: boolean srconly>;

        return $z0;
    }

    public void setSrconly(boolean)
    {
        org.apache.xmlbeans.impl.tool.XMLBean r0;
        boolean z0;

        r0 := @this: org.apache.xmlbeans.impl.tool.XMLBean;

        z0 := @parameter0: boolean;

        r0.<org.apache.xmlbeans.impl.tool.XMLBean: boolean srconly> = z0;

        return;
    }

    public java.lang.String getTypesystemname()
    {
        java.lang.String $r1;
        org.apache.xmlbeans.impl.tool.XMLBean r0;

        r0 := @this: org.apache.xmlbeans.impl.tool.XMLBean;

        $r1 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.lang.String typesystemname>;

        return $r1;
    }

    public org.apache.xmlbeans.impl.tool.Extension createExtension()
    {
        java.util.List $r2;
        org.apache.xmlbeans.impl.tool.Extension $r0;
        org.apache.xmlbeans.impl.tool.XMLBean r1;

        r1 := @this: org.apache.xmlbeans.impl.tool.XMLBean;

        $r0 = new org.apache.xmlbeans.impl.tool.Extension;

        specialinvoke $r0.<org.apache.xmlbeans.impl.tool.Extension: void <init>()>();

        $r2 = r1.<org.apache.xmlbeans.impl.tool.XMLBean: java.util.List extensions>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r0);

        return $r0;
    }

    public void setIgnoreDuplicatesInNamespaces(java.lang.String)
    {
        java.util.Set $r6;
        java.util.HashSet $r1;
        java.util.StringTokenizer $r2;
        java.lang.String r3, $r4, $r5;
        org.apache.xmlbeans.impl.tool.XMLBean r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.tool.XMLBean;

        r3 := @parameter0: java.lang.String;

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.util.Set mdefnamespaces> = $r1;

        $r2 = new java.util.StringTokenizer;

        specialinvoke $r2.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r3, ",");

     label1:
        $z0 = virtualinvoke $r2.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label2;

        $r4 = virtualinvoke $r2.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String trim()>();

        $r6 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.util.Set mdefnamespaces>;

        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>($r5);

        goto label1;

     label2:
        return;
    }

    public java.lang.String getIgnoreDuplicatesInNamespaces()
    {
        java.util.Iterator $r4;
        java.util.Set $r1, $r3;
        java.lang.StringBuffer $r2;
        java.lang.Object $r6;
        java.lang.String $r5, $r7;
        org.apache.xmlbeans.impl.tool.XMLBean r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.xmlbeans.impl.tool.XMLBean;

        $r1 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.util.Set mdefnamespaces>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.util.Set mdefnamespaces>;

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r6 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (java.lang.String) $r6;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

        goto label2;

     label3:
        $r5 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }

    public void setTypesystemname(java.lang.String)
    {
        java.lang.String r1;
        org.apache.xmlbeans.impl.tool.XMLBean r0;

        r0 := @this: org.apache.xmlbeans.impl.tool.XMLBean;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.lang.String typesystemname> = r1;

        return;
    }

    public boolean isFailonerror()
    {
        org.apache.xmlbeans.impl.tool.XMLBean r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.tool.XMLBean;

        $z0 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: boolean failonerror>;

        return $z0;
    }

    public void setFailonerror(boolean)
    {
        org.apache.xmlbeans.impl.tool.XMLBean r0;
        boolean z0;

        r0 := @this: org.apache.xmlbeans.impl.tool.XMLBean;

        z0 := @parameter0: boolean;

        r0.<org.apache.xmlbeans.impl.tool.XMLBean: boolean failonerror> = z0;

        return;
    }

    public boolean isIncludeAntRuntime()
    {
        org.apache.xmlbeans.impl.tool.XMLBean r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.tool.XMLBean;

        $z0 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: boolean includeAntRuntime>;

        return $z0;
    }

    public void setIncludeAntRuntime(boolean)
    {
        org.apache.xmlbeans.impl.tool.XMLBean r0;
        boolean z0;

        r0 := @this: org.apache.xmlbeans.impl.tool.XMLBean;

        z0 := @parameter0: boolean;

        r0.<org.apache.xmlbeans.impl.tool.XMLBean: boolean includeAntRuntime> = z0;

        return;
    }

    public boolean isIncludeJavaRuntime()
    {
        org.apache.xmlbeans.impl.tool.XMLBean r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.tool.XMLBean;

        $z0 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: boolean includeJavaRuntime>;

        return $z0;
    }

    public void setIncludeJavaRuntime(boolean)
    {
        org.apache.xmlbeans.impl.tool.XMLBean r0;
        boolean z0;

        r0 := @this: org.apache.xmlbeans.impl.tool.XMLBean;

        z0 := @parameter0: boolean;

        r0.<org.apache.xmlbeans.impl.tool.XMLBean: boolean includeJavaRuntime> = z0;

        return;
    }

    public boolean isNoSrcRegen()
    {
        org.apache.xmlbeans.impl.tool.XMLBean r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.tool.XMLBean;

        $z0 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: boolean noSrcRegen>;

        return $z0;
    }

    public void setNoSrcRegen(boolean)
    {
        org.apache.xmlbeans.impl.tool.XMLBean r0;
        boolean z0;

        r0 := @this: org.apache.xmlbeans.impl.tool.XMLBean;

        z0 := @parameter0: boolean;

        r0.<org.apache.xmlbeans.impl.tool.XMLBean: boolean noSrcRegen> = z0;

        return;
    }

    public java.lang.String getMemoryInitialSize()
    {
        java.lang.String $r1;
        org.apache.xmlbeans.impl.tool.XMLBean r0;

        r0 := @this: org.apache.xmlbeans.impl.tool.XMLBean;

        $r1 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.lang.String memoryInitialSize>;

        return $r1;
    }

    public void setMemoryInitialSize(java.lang.String)
    {
        java.lang.String r1;
        org.apache.xmlbeans.impl.tool.XMLBean r0;

        r0 := @this: org.apache.xmlbeans.impl.tool.XMLBean;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.lang.String memoryInitialSize> = r1;

        return;
    }

    public java.lang.String getMemoryMaximumSize()
    {
        java.lang.String $r1;
        org.apache.xmlbeans.impl.tool.XMLBean r0;

        r0 := @this: org.apache.xmlbeans.impl.tool.XMLBean;

        $r1 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.lang.String memoryMaximumSize>;

        return $r1;
    }

    public void setMemoryMaximumSize(java.lang.String)
    {
        java.lang.String r1;
        org.apache.xmlbeans.impl.tool.XMLBean r0;

        r0 := @this: org.apache.xmlbeans.impl.tool.XMLBean;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.lang.String memoryMaximumSize> = r1;

        return;
    }

    public void setNoUpa(boolean)
    {
        org.apache.xmlbeans.impl.tool.XMLBean r0;
        boolean z0;

        r0 := @this: org.apache.xmlbeans.impl.tool.XMLBean;

        z0 := @parameter0: boolean;

        r0.<org.apache.xmlbeans.impl.tool.XMLBean: boolean noupa> = z0;

        return;
    }

    public boolean isNoUpa()
    {
        org.apache.xmlbeans.impl.tool.XMLBean r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.tool.XMLBean;

        $z0 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: boolean noupa>;

        return $z0;
    }

    public void setNoPvr(boolean)
    {
        org.apache.xmlbeans.impl.tool.XMLBean r0;
        boolean z0;

        r0 := @this: org.apache.xmlbeans.impl.tool.XMLBean;

        z0 := @parameter0: boolean;

        r0.<org.apache.xmlbeans.impl.tool.XMLBean: boolean nopvr> = z0;

        return;
    }

    public boolean isNoPvr()
    {
        org.apache.xmlbeans.impl.tool.XMLBean r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.tool.XMLBean;

        $z0 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: boolean nopvr>;

        return $z0;
    }

    public void setNoAnnotations(boolean)
    {
        org.apache.xmlbeans.impl.tool.XMLBean r0;
        boolean z0;

        r0 := @this: org.apache.xmlbeans.impl.tool.XMLBean;

        z0 := @parameter0: boolean;

        r0.<org.apache.xmlbeans.impl.tool.XMLBean: boolean noann> = z0;

        return;
    }

    public boolean isNoAnnotations()
    {
        org.apache.xmlbeans.impl.tool.XMLBean r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.tool.XMLBean;

        $z0 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: boolean noann>;

        return $z0;
    }

    public void setNoValidateDoc(boolean)
    {
        org.apache.xmlbeans.impl.tool.XMLBean r0;
        boolean z0;

        r0 := @this: org.apache.xmlbeans.impl.tool.XMLBean;

        z0 := @parameter0: boolean;

        r0.<org.apache.xmlbeans.impl.tool.XMLBean: boolean novdoc> = z0;

        return;
    }

    public boolean isNoValidateDoc()
    {
        org.apache.xmlbeans.impl.tool.XMLBean r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.tool.XMLBean;

        $z0 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: boolean novdoc>;

        return $z0;
    }

    public void setNoExt(boolean)
    {
        org.apache.xmlbeans.impl.tool.XMLBean r0;
        boolean z0;

        r0 := @this: org.apache.xmlbeans.impl.tool.XMLBean;

        z0 := @parameter0: boolean;

        r0.<org.apache.xmlbeans.impl.tool.XMLBean: boolean noext> = z0;

        return;
    }

    public boolean isNoExt()
    {
        org.apache.xmlbeans.impl.tool.XMLBean r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.tool.XMLBean;

        $z0 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: boolean noext>;

        return $z0;
    }

    public void setJavaSource(java.lang.String)
    {
        java.lang.String r1;
        org.apache.xmlbeans.impl.tool.XMLBean r0;

        r0 := @this: org.apache.xmlbeans.impl.tool.XMLBean;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.lang.String javasource> = r1;

        return;
    }

    public java.lang.String getJavaSource()
    {
        java.lang.String $r1;
        org.apache.xmlbeans.impl.tool.XMLBean r0;

        r0 := @this: org.apache.xmlbeans.impl.tool.XMLBean;

        $r1 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.lang.String javasource>;

        return $r1;
    }

    public void setSource(java.lang.String)
    {
        java.lang.String r1;
        org.apache.xmlbeans.impl.tool.XMLBean r0;

        r0 := @this: org.apache.xmlbeans.impl.tool.XMLBean;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.lang.String source> = r1;

        return;
    }

    public java.lang.String getCatalog()
    {
        java.lang.String $r1;
        org.apache.xmlbeans.impl.tool.XMLBean r0;

        r0 := @this: org.apache.xmlbeans.impl.tool.XMLBean;

        $r1 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.lang.String catalog>;

        return $r1;
    }

    public void setCatalog(java.lang.String)
    {
        java.lang.String r1;
        org.apache.xmlbeans.impl.tool.XMLBean r0;

        r0 := @this: org.apache.xmlbeans.impl.tool.XMLBean;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.xmlbeans.impl.tool.XMLBean: java.lang.String catalog> = r1;

        return;
    }

    private static java.net.URI uriFromFile(java.io.File)
    {
        java.io.IOException $r3;
        java.net.URI $r2, $r5;
        java.io.File r0, $r1, $r4;

        r0 := @parameter0: java.io.File;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = virtualinvoke r0.<java.io.File: java.io.File getCanonicalFile()>();

        $r2 = virtualinvoke $r1.<java.io.File: java.net.URI toURI()>();

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke r0.<java.io.File: java.io.File getAbsoluteFile()>();

        $r5 = virtualinvoke $r4.<java.io.File: java.net.URI toURI()>();

        return $r5;

        catch java.io.IOException from label1 to label2 with label3;
    }

    static org.apache.tools.ant.Project access$000(org.apache.xmlbeans.impl.tool.XMLBean)
    {
        org.apache.tools.ant.Project $r1;
        org.apache.xmlbeans.impl.tool.XMLBean r0;

        r0 := @parameter0: org.apache.xmlbeans.impl.tool.XMLBean;

        $r1 = r0.<org.apache.xmlbeans.impl.tool.XMLBean: org.apache.tools.ant.Project project>;

        return $r1;
    }

    static java.net.URI access$100(java.io.File)
    {
        java.net.URI $r1;
        java.io.File r0;

        r0 := @parameter0: java.io.File;

        $r1 = staticinvoke <org.apache.xmlbeans.impl.tool.XMLBean: java.net.URI uriFromFile(java.io.File)>(r0);

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.xmlbeans.impl.tool.XMLBean: java.lang.String XSDCONFIG> = ".xsdconfig";

        <org.apache.xmlbeans.impl.tool.XMLBean: java.lang.String JAVA> = ".java";

        <org.apache.xmlbeans.impl.tool.XMLBean: java.lang.String WSDL> = ".wsdl";

        <org.apache.xmlbeans.impl.tool.XMLBean: java.lang.String XSD> = ".xsd";

        return;
    }
}
