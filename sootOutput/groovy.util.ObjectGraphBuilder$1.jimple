class groovy.util.ObjectGraphBuilder$1 extends groovy.lang.Closure
{
    private final groovy.util.ObjectGraphBuilder this$0;

    void <init>(groovy.util.ObjectGraphBuilder, java.lang.Object, java.lang.Object)
    {
        groovy.util.ObjectGraphBuilder$1 r0;
        groovy.util.ObjectGraphBuilder r1;
        java.lang.Object r2, r3;

        r0 := @this: groovy.util.ObjectGraphBuilder$1;

        r1 := @parameter0: groovy.util.ObjectGraphBuilder;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r0.<groovy.util.ObjectGraphBuilder$1: groovy.util.ObjectGraphBuilder this$0> = r1;

        specialinvoke r0.<groovy.lang.Closure: void <init>(java.lang.Object,java.lang.Object)>(r2, r3);

        return;
    }

    public void doCall(groovy.util.ObjectGraphBuilder, java.lang.Object, java.lang.Object)
    {
        groovy.util.ObjectGraphBuilder$1 r2;
        groovy.util.ObjectGraphBuilder r1;
        java.lang.Object r0, r3;

        r2 := @this: groovy.util.ObjectGraphBuilder$1;

        r1 := @parameter0: groovy.util.ObjectGraphBuilder;

        r0 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        if r0 != null goto label1;

        staticinvoke <groovy.util.ObjectGraphBuilder: void access$200(groovy.util.ObjectGraphBuilder)>(r1);

        virtualinvoke r1.<groovy.util.ObjectGraphBuilder: void dispose()>();

     label1:
        return;
    }
}
