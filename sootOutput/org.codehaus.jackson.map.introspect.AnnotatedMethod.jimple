public final class org.codehaus.jackson.map.introspect.AnnotatedMethod extends org.codehaus.jackson.map.introspect.AnnotatedWithParams
{
    protected final java.lang.reflect.Method _method;
    protected java.lang.Class[] _paramTypes;

    public void <init>(java.lang.reflect.Method, org.codehaus.jackson.map.introspect.AnnotationMap, org.codehaus.jackson.map.introspect.AnnotationMap[])
    {
        org.codehaus.jackson.map.introspect.AnnotatedMethod r0;
        org.codehaus.jackson.map.introspect.AnnotationMap[] r2;
        org.codehaus.jackson.map.introspect.AnnotationMap r1;
        java.lang.reflect.Method r3;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        r3 := @parameter0: java.lang.reflect.Method;

        r1 := @parameter1: org.codehaus.jackson.map.introspect.AnnotationMap;

        r2 := @parameter2: org.codehaus.jackson.map.introspect.AnnotationMap[];

        specialinvoke r0.<org.codehaus.jackson.map.introspect.AnnotatedWithParams: void <init>(org.codehaus.jackson.map.introspect.AnnotationMap,org.codehaus.jackson.map.introspect.AnnotationMap[])>(r1, r2);

        r0.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.reflect.Method _method> = r3;

        return;
    }

    public org.codehaus.jackson.map.introspect.AnnotatedMethod withMethod(java.lang.reflect.Method)
    {
        org.codehaus.jackson.map.introspect.AnnotatedMethod $r0, r2;
        org.codehaus.jackson.map.introspect.AnnotationMap[] $r3;
        java.lang.reflect.Method r1;
        org.codehaus.jackson.map.introspect.AnnotationMap $r4;

        r2 := @this: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        r1 := @parameter0: java.lang.reflect.Method;

        $r0 = new org.codehaus.jackson.map.introspect.AnnotatedMethod;

        $r4 = r2.<org.codehaus.jackson.map.introspect.AnnotatedMethod: org.codehaus.jackson.map.introspect.AnnotationMap _annotations>;

        $r3 = r2.<org.codehaus.jackson.map.introspect.AnnotatedMethod: org.codehaus.jackson.map.introspect.AnnotationMap[] _paramAnnotations>;

        specialinvoke $r0.<org.codehaus.jackson.map.introspect.AnnotatedMethod: void <init>(java.lang.reflect.Method,org.codehaus.jackson.map.introspect.AnnotationMap,org.codehaus.jackson.map.introspect.AnnotationMap[])>(r1, $r4, $r3);

        return $r0;
    }

    public org.codehaus.jackson.map.introspect.AnnotatedMethod withAnnotations(org.codehaus.jackson.map.introspect.AnnotationMap)
    {
        org.codehaus.jackson.map.introspect.AnnotatedMethod $r0, r1;
        org.codehaus.jackson.map.introspect.AnnotationMap[] $r3;
        org.codehaus.jackson.map.introspect.AnnotationMap r2;
        java.lang.reflect.Method $r4;

        r1 := @this: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        r2 := @parameter0: org.codehaus.jackson.map.introspect.AnnotationMap;

        $r0 = new org.codehaus.jackson.map.introspect.AnnotatedMethod;

        $r4 = r1.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.reflect.Method _method>;

        $r3 = r1.<org.codehaus.jackson.map.introspect.AnnotatedMethod: org.codehaus.jackson.map.introspect.AnnotationMap[] _paramAnnotations>;

        specialinvoke $r0.<org.codehaus.jackson.map.introspect.AnnotatedMethod: void <init>(java.lang.reflect.Method,org.codehaus.jackson.map.introspect.AnnotationMap,org.codehaus.jackson.map.introspect.AnnotationMap[])>($r4, r2, $r3);

        return $r0;
    }

    public java.lang.reflect.Method getAnnotated()
    {
        org.codehaus.jackson.map.introspect.AnnotatedMethod r0;
        java.lang.reflect.Method $r1;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        $r1 = r0.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.reflect.Method _method>;

        return $r1;
    }

    public int getModifiers()
    {
        org.codehaus.jackson.map.introspect.AnnotatedMethod r0;
        int $i0;
        java.lang.reflect.Method $r1;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        $r1 = r0.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.reflect.Method _method>;

        $i0 = virtualinvoke $r1.<java.lang.reflect.Method: int getModifiers()>();

        return $i0;
    }

    public java.lang.String getName()
    {
        org.codehaus.jackson.map.introspect.AnnotatedMethod r0;
        java.lang.String $r2;
        java.lang.reflect.Method $r1;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        $r1 = r0.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.reflect.Method _method>;

        $r2 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.String getName()>();

        return $r2;
    }

    public java.lang.reflect.Type getGenericType()
    {
        org.codehaus.jackson.map.introspect.AnnotatedMethod r0;
        java.lang.reflect.Method $r1;
        java.lang.reflect.Type $r2;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        $r1 = r0.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.reflect.Method _method>;

        $r2 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.reflect.Type getGenericReturnType()>();

        return $r2;
    }

    public java.lang.Class getRawType()
    {
        org.codehaus.jackson.map.introspect.AnnotatedMethod r0;
        java.lang.Class $r2;
        java.lang.reflect.Method $r1;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        $r1 = r0.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.reflect.Method _method>;

        $r2 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        return $r2;
    }

    public org.codehaus.jackson.type.JavaType getType(org.codehaus.jackson.map.type.TypeBindings)
    {
        java.lang.reflect.TypeVariable[] $r3;
        org.codehaus.jackson.map.introspect.AnnotatedMethod r0;
        org.codehaus.jackson.type.JavaType $r4;
        org.codehaus.jackson.map.type.TypeBindings r1;
        java.lang.reflect.Method $r2;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        r1 := @parameter0: org.codehaus.jackson.map.type.TypeBindings;

        $r2 = r0.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.reflect.Method _method>;

        $r3 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.reflect.TypeVariable[] getTypeParameters()>();

        $r4 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.AnnotatedMethod: org.codehaus.jackson.type.JavaType getType(org.codehaus.jackson.map.type.TypeBindings,java.lang.reflect.TypeVariable[])>(r1, $r3);

        return $r4;
    }

    public final java.lang.Object call() throws java.lang.Exception
    {
        java.lang.Object[] $r1;
        org.codehaus.jackson.map.introspect.AnnotatedMethod r0;
        java.lang.Object $r3;
        java.lang.reflect.Method $r2;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        $r2 = r0.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.reflect.Method _method>;

        $r1 = newarray (java.lang.Object)[0];

        $r3 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r1);

        return $r3;
    }

    public final java.lang.Object call(java.lang.Object[]) throws java.lang.Exception
    {
        java.lang.Object[] r1;
        org.codehaus.jackson.map.introspect.AnnotatedMethod r0;
        java.lang.Object $r3;
        java.lang.reflect.Method $r2;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        r1 := @parameter0: java.lang.Object[];

        $r2 = r0.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.reflect.Method _method>;

        $r3 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, r1);

        return $r3;
    }

    public final java.lang.Object call1(java.lang.Object) throws java.lang.Exception
    {
        java.lang.Object[] $r1;
        org.codehaus.jackson.map.introspect.AnnotatedMethod r0;
        java.lang.Object r2, $r4;
        java.lang.reflect.Method $r3;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        r2 := @parameter0: java.lang.Object;

        $r3 = r0.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.reflect.Method _method>;

        $r1 = newarray (java.lang.Object)[1];

        $r1[0] = r2;

        $r4 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r1);

        return $r4;
    }

    public java.lang.Class getDeclaringClass()
    {
        org.codehaus.jackson.map.introspect.AnnotatedMethod r0;
        java.lang.Class $r2;
        java.lang.reflect.Method $r1;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        $r1 = r0.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.reflect.Method _method>;

        $r2 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();

        return $r2;
    }

    public java.lang.reflect.Member getMember()
    {
        org.codehaus.jackson.map.introspect.AnnotatedMethod r0;
        java.lang.reflect.Method $r1;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        $r1 = r0.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.reflect.Method _method>;

        return $r1;
    }

    public void setValue(java.lang.Object, java.lang.Object) throws java.lang.IllegalArgumentException
    {
        java.lang.Object[] $r2;
        java.lang.String $r9, $r12, $r14, $r19, $r22, $r24;
        java.lang.reflect.Method $r4;
        java.lang.IllegalAccessException $r15;
        org.codehaus.jackson.map.introspect.AnnotatedMethod r0;
        java.lang.IllegalArgumentException $r6, $r16;
        java.lang.reflect.InvocationTargetException $r5;
        java.lang.Object r1, r3;
        java.lang.StringBuilder $r7, $r8, $r10, $r11, $r13, $r17, $r18, $r20, $r21, $r23;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        r1 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Object;

     label1:
        $r4 = r0.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.reflect.Method _method>;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = r3;

        virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, $r2);

     label2:
        goto label5;

     label3:
        $r15 := @caughtexception;

        $r16 = new java.lang.IllegalArgumentException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to setValue() with method ");

        $r19 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.String getFullName()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r22 = virtualinvoke $r15.<java.lang.IllegalAccessException: java.lang.String getMessage()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r24, $r15);

        throw $r16;

     label4:
        $r5 := @caughtexception;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to setValue() with method ");

        $r9 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.String getFullName()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r12 = virtualinvoke $r5.<java.lang.reflect.InvocationTargetException: java.lang.String getMessage()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r14, $r5);

        throw $r6;

     label5:
        return;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label4;
    }

    public int getParameterCount()
    {
        org.codehaus.jackson.map.introspect.AnnotatedMethod r0;
        java.lang.reflect.Type[] $r1;
        int $i0;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.reflect.Type[] getParameterTypes()>();

        $i0 = lengthof $r1;

        return $i0;
    }

    public java.lang.reflect.Type[] getParameterTypes()
    {
        org.codehaus.jackson.map.introspect.AnnotatedMethod r0;
        java.lang.reflect.Type[] $r2;
        java.lang.reflect.Method $r1;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        $r1 = r0.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.reflect.Method _method>;

        $r2 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()>();

        return $r2;
    }

    public java.lang.Class getParameterClass(int)
    {
        org.codehaus.jackson.map.introspect.AnnotatedMethod r0;
        int i0, $i1;
        java.lang.Class[] $r2;
        java.lang.Class $r3;
        java.lang.reflect.Method $r1;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        i0 := @parameter0: int;

        $r1 = r0.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.reflect.Method _method>;

        $r2 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $i1 = lengthof $r2;

        if i0 < $i1 goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r3 = $r2[i0];

     label2:
        return $r3;
    }

    public java.lang.reflect.Type getParameterType(int)
    {
        java.lang.reflect.Type $r3;
        org.codehaus.jackson.map.introspect.AnnotatedMethod r0;
        java.lang.reflect.Type[] $r2;
        int i0, $i1;
        java.lang.reflect.Method $r1;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        i0 := @parameter0: int;

        $r1 = r0.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.reflect.Method _method>;

        $r2 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()>();

        $i1 = lengthof $r2;

        if i0 < $i1 goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r3 = $r2[i0];

     label2:
        return $r3;
    }

    public java.lang.Class[] getParameterClasses()
    {
        org.codehaus.jackson.map.introspect.AnnotatedMethod r0;
        java.lang.Class[] $r1, $r2, $r4;
        java.lang.reflect.Method $r3;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        $r1 = r0.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.Class[] _paramTypes>;

        if $r1 != null goto label1;

        $r3 = r0.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.reflect.Method _method>;

        $r4 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        r0.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.Class[] _paramTypes> = $r4;

     label1:
        $r2 = r0.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.Class[] _paramTypes>;

        return $r2;
    }

    public java.lang.String getFullName()
    {
        org.codehaus.jackson.map.introspect.AnnotatedMethod r1;
        int $i0;
        java.lang.StringBuilder $r0, $r4, $r5, $r7, $r8, $r9, $r10;
        java.lang.Class $r2;
        java.lang.String $r3, $r6, $r11;

        r1 := @this: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.Class getDeclaringClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#");

        $r6 = virtualinvoke r1.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.String getName()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $i0 = virtualinvoke r1.<org.codehaus.jackson.map.introspect.AnnotatedMethod: int getParameterCount()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" params)");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }

    public java.lang.String toString()
    {
        org.codehaus.jackson.map.introspect.AnnotatedMethod r2;
        org.codehaus.jackson.map.introspect.AnnotationMap $r6;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r7, $r8;
        java.lang.String $r3, $r9;

        r2 := @this: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[method ");

        $r3 = virtualinvoke r2.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.String getName()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", annotations: ");

        $r6 = r2.<org.codehaus.jackson.map.introspect.AnnotatedMethod: org.codehaus.jackson.map.introspect.AnnotationMap _annotations>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public volatile java.lang.reflect.AnnotatedElement getAnnotated()
    {
        org.codehaus.jackson.map.introspect.AnnotatedMethod r0;
        java.lang.reflect.Method $r1;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.reflect.Method getAnnotated()>();

        return $r1;
    }

    public volatile org.codehaus.jackson.map.introspect.Annotated withAnnotations(org.codehaus.jackson.map.introspect.AnnotationMap)
    {
        org.codehaus.jackson.map.introspect.AnnotatedMethod r0, $r2;
        org.codehaus.jackson.map.introspect.AnnotationMap r1;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        r1 := @parameter0: org.codehaus.jackson.map.introspect.AnnotationMap;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.AnnotatedMethod: org.codehaus.jackson.map.introspect.AnnotatedMethod withAnnotations(org.codehaus.jackson.map.introspect.AnnotationMap)>(r1);

        return $r2;
    }
}
