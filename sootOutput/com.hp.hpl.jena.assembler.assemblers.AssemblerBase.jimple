public abstract class com.hp.hpl.jena.assembler.assemblers.AssemblerBase extends java.lang.Object implements com.hp.hpl.jena.assembler.Assembler
{
    protected static final com.hp.hpl.jena.util.iterator.Map1 getObject;

    public void <init>()
    {
        com.hp.hpl.jena.assembler.assemblers.AssemblerBase r0;

        r0 := @this: com.hp.hpl.jena.assembler.assemblers.AssemblerBase;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final java.lang.Object open(com.hp.hpl.jena.rdf.model.Resource)
    {
        java.lang.Object $r2;
        com.hp.hpl.jena.assembler.assemblers.AssemblerBase r0;
        com.hp.hpl.jena.rdf.model.Resource r1;

        r0 := @this: com.hp.hpl.jena.assembler.assemblers.AssemblerBase;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.assembler.assemblers.AssemblerBase: java.lang.Object open(com.hp.hpl.jena.assembler.Assembler,com.hp.hpl.jena.rdf.model.Resource)>(r0, r1);

        return $r2;
    }

    public final java.lang.Object open(com.hp.hpl.jena.assembler.Assembler, com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.assembler.Assembler r1;
        com.hp.hpl.jena.assembler.Mode $r3;
        java.lang.Object $r4;
        com.hp.hpl.jena.assembler.assemblers.AssemblerBase r0;
        com.hp.hpl.jena.rdf.model.Resource r2;

        r0 := @this: com.hp.hpl.jena.assembler.assemblers.AssemblerBase;

        r1 := @parameter0: com.hp.hpl.jena.assembler.Assembler;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Resource;

        $r3 = <com.hp.hpl.jena.assembler.Mode: com.hp.hpl.jena.assembler.Mode DEFAULT>;

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.assembler.assemblers.AssemblerBase: java.lang.Object open(com.hp.hpl.jena.assembler.Assembler,com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.assembler.Mode)>(r1, r2, $r3);

        return $r4;
    }

    public abstract java.lang.Object open(com.hp.hpl.jena.assembler.Assembler, com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.assembler.Mode);

    protected static com.hp.hpl.jena.rdf.model.Resource getUniqueResource(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property)
    {
        com.hp.hpl.jena.rdf.model.RDFNode $r2;
        com.hp.hpl.jena.rdf.model.Property r1;
        com.hp.hpl.jena.rdf.model.Resource r0, $r3;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r1 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        $r2 = staticinvoke <com.hp.hpl.jena.assembler.assemblers.AssemblerBase: com.hp.hpl.jena.rdf.model.RDFNode getUnique(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property)>(r0, r1);

        $r3 = (com.hp.hpl.jena.rdf.model.Resource) $r2;

        return $r3;
    }

    protected static com.hp.hpl.jena.rdf.model.Literal getUniqueLiteral(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property)
    {
        com.hp.hpl.jena.rdf.model.RDFNode $r2;
        com.hp.hpl.jena.rdf.model.Property r1;
        com.hp.hpl.jena.rdf.model.Literal $r3;
        com.hp.hpl.jena.rdf.model.Resource r0;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r1 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        $r2 = staticinvoke <com.hp.hpl.jena.assembler.assemblers.AssemblerBase: com.hp.hpl.jena.rdf.model.RDFNode getUnique(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property)>(r0, r1);

        $r3 = (com.hp.hpl.jena.rdf.model.Literal) $r2;

        return $r3;
    }

    protected static com.hp.hpl.jena.rdf.model.Statement getUniqueStatement(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property)
    {
        com.hp.hpl.jena.assembler.exceptions.NotUniqueException $r4;
        com.hp.hpl.jena.rdf.model.Statement $r6;
        com.hp.hpl.jena.rdf.model.Resource r0;
        java.util.List $r3;
        com.hp.hpl.jena.rdf.model.StmtIterator $r2;
        com.hp.hpl.jena.rdf.model.Property r1;
        int $i0, $i1;
        java.lang.Object $r5;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r1 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        $r2 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.StmtIterator listProperties(com.hp.hpl.jena.rdf.model.Property)>(r1);

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.StmtIterator: java.util.List toList()>();

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i1 != 1 goto label2;

        $r5 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(0);

        $r6 = (com.hp.hpl.jena.rdf.model.Statement) $r5;

        return $r6;

     label2:
        $r4 = new com.hp.hpl.jena.assembler.exceptions.NotUniqueException;

        specialinvoke $r4.<com.hp.hpl.jena.assembler.exceptions.NotUniqueException: void <init>(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property)>(r0, r1);

        throw $r4;
    }

    protected static com.hp.hpl.jena.rdf.model.RDFNode getUnique(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property)
    {
        com.hp.hpl.jena.assembler.exceptions.NotUniqueException $r6;
        com.hp.hpl.jena.rdf.model.RDFNode $r8;
        com.hp.hpl.jena.util.iterator.Map1 $r3;
        com.hp.hpl.jena.rdf.model.Resource r0;
        java.util.List $r5;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r4;
        com.hp.hpl.jena.rdf.model.StmtIterator $r2;
        com.hp.hpl.jena.rdf.model.Property r1;
        int $i0, $i1;
        java.lang.Object $r7;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r1 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        $r2 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.StmtIterator listProperties(com.hp.hpl.jena.rdf.model.Property)>(r1);

        $r3 = <com.hp.hpl.jena.assembler.assemblers.AssemblerBase: com.hp.hpl.jena.util.iterator.Map1 getObject>;

        $r4 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.StmtIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator mapWith(com.hp.hpl.jena.util.iterator.Map1)>($r3);

        $r5 = interfaceinvoke $r4.<com.hp.hpl.jena.util.iterator.ExtendedIterator: java.util.List toList()>();

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();

        if $i1 != 1 goto label2;

        $r7 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(0);

        $r8 = (com.hp.hpl.jena.rdf.model.RDFNode) $r7;

        return $r8;

     label2:
        $r6 = new com.hp.hpl.jena.assembler.exceptions.NotUniqueException;

        specialinvoke $r6.<com.hp.hpl.jena.assembler.exceptions.NotUniqueException: void <init>(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property)>(r0, r1);

        throw $r6;
    }

    protected void checkType(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.rdf.model.Property $r2;
        java.lang.Class $r5;
        com.hp.hpl.jena.assembler.assemblers.AssemblerBase r4;
        com.hp.hpl.jena.rdf.model.Resource r0, r1;
        com.hp.hpl.jena.assembler.exceptions.CannotConstructException $r3;
        boolean $z0;

        r4 := @this: com.hp.hpl.jena.assembler.assemblers.AssemblerBase;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r1 := @parameter1: com.hp.hpl.jena.rdf.model.Resource;

        $r2 = <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property type>;

        $z0 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Resource: boolean hasProperty(com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>($r2, r1);

        if $z0 != 0 goto label1;

        $r3 = new com.hp.hpl.jena.assembler.exceptions.CannotConstructException;

        $r5 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>();

        specialinvoke $r3.<com.hp.hpl.jena.assembler.exceptions.CannotConstructException: void <init>(java.lang.Class,com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Resource)>($r5, r0, r1);

        throw $r3;

     label1:
        return;
    }

    public com.hp.hpl.jena.rdf.model.Model openModel(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.assembler.Mode)
    {
        com.hp.hpl.jena.assembler.Mode r2;
        com.hp.hpl.jena.rdf.model.Model $r4;
        java.lang.Object $r3;
        com.hp.hpl.jena.assembler.assemblers.AssemblerBase r0;
        com.hp.hpl.jena.rdf.model.Resource r1;

        r0 := @this: com.hp.hpl.jena.assembler.assemblers.AssemblerBase;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r2 := @parameter1: com.hp.hpl.jena.assembler.Mode;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.assembler.assemblers.AssemblerBase: java.lang.Object open(com.hp.hpl.jena.assembler.Assembler,com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.assembler.Mode)>(r0, r1, r2);

        $r4 = (com.hp.hpl.jena.rdf.model.Model) $r3;

        return $r4;
    }

    public com.hp.hpl.jena.rdf.model.Model openModel(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.assembler.Mode $r2;
        com.hp.hpl.jena.rdf.model.Model $r3;
        com.hp.hpl.jena.assembler.assemblers.AssemblerBase r0;
        com.hp.hpl.jena.rdf.model.Resource r1;

        r0 := @this: com.hp.hpl.jena.assembler.assemblers.AssemblerBase;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r2 = <com.hp.hpl.jena.assembler.Mode: com.hp.hpl.jena.assembler.Mode DEFAULT>;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.assembler.assemblers.AssemblerBase: com.hp.hpl.jena.rdf.model.Model openModel(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.assembler.Mode)>(r1, $r2);

        return $r3;
    }

    public static com.hp.hpl.jena.rdf.model.Resource getRequiredResource(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property)
    {
        com.hp.hpl.jena.rdf.model.Property r1;
        com.hp.hpl.jena.assembler.exceptions.PropertyRequiredException $r3;
        com.hp.hpl.jena.rdf.model.Resource r0, $r2;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r1 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        $r2 = staticinvoke <com.hp.hpl.jena.assembler.assemblers.AssemblerBase: com.hp.hpl.jena.rdf.model.Resource getUniqueResource(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property)>(r0, r1);

        if $r2 != null goto label1;

        $r3 = new com.hp.hpl.jena.assembler.exceptions.PropertyRequiredException;

        specialinvoke $r3.<com.hp.hpl.jena.assembler.exceptions.PropertyRequiredException: void <init>(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property)>(r0, r1);

        throw $r3;

     label1:
        return $r2;
    }

    protected com.hp.hpl.jena.rdf.model.Literal getRequiredLiteral(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property)
    {
        com.hp.hpl.jena.rdf.model.Property r1;
        com.hp.hpl.jena.rdf.model.Literal $r2;
        com.hp.hpl.jena.assembler.exceptions.PropertyRequiredException $r3;
        com.hp.hpl.jena.assembler.assemblers.AssemblerBase r4;
        com.hp.hpl.jena.rdf.model.Resource r0;

        r4 := @this: com.hp.hpl.jena.assembler.assemblers.AssemblerBase;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r1 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        $r2 = staticinvoke <com.hp.hpl.jena.assembler.assemblers.AssemblerBase: com.hp.hpl.jena.rdf.model.Literal getUniqueLiteral(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property)>(r0, r1);

        if $r2 != null goto label1;

        $r3 = new com.hp.hpl.jena.assembler.exceptions.PropertyRequiredException;

        specialinvoke $r3.<com.hp.hpl.jena.assembler.exceptions.PropertyRequiredException: void <init>(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property)>(r0, r1);

        throw $r3;

     label1:
        return $r2;
    }

    protected static com.hp.hpl.jena.rdf.model.Resource getResource(com.hp.hpl.jena.rdf.model.Statement)
    {
        com.hp.hpl.jena.rdf.model.Statement r0;
        com.hp.hpl.jena.rdf.model.Resource $r1;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Statement;

        $r1 = staticinvoke <com.hp.hpl.jena.assembler.AssemblerHelp: com.hp.hpl.jena.rdf.model.Resource getResource(com.hp.hpl.jena.rdf.model.Statement)>(r0);

        return $r1;
    }

    protected static java.lang.String getString(com.hp.hpl.jena.rdf.model.Statement)
    {
        java.lang.String $r1;
        com.hp.hpl.jena.rdf.model.Statement r0;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Statement;

        $r1 = staticinvoke <com.hp.hpl.jena.assembler.AssemblerHelp: java.lang.String getString(com.hp.hpl.jena.rdf.model.Statement)>(r0);

        return $r1;
    }

    protected static java.lang.String getUniqueString(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property)
    {
        com.hp.hpl.jena.rdf.model.Property r1;
        java.lang.String $r3;
        com.hp.hpl.jena.rdf.model.Statement $r2;
        com.hp.hpl.jena.rdf.model.Resource r0;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r1 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        $r2 = staticinvoke <com.hp.hpl.jena.assembler.assemblers.AssemblerBase: com.hp.hpl.jena.rdf.model.Statement getUniqueStatement(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property)>(r0, r1);

        if $r2 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r3 = staticinvoke <com.hp.hpl.jena.assembler.AssemblerHelp: java.lang.String getString(com.hp.hpl.jena.rdf.model.Statement)>($r2);

     label2:
        return $r3;
    }

    protected static java.lang.Class loadClass(com.hp.hpl.jena.rdf.model.Resource, java.lang.String)
    {
        com.hp.hpl.jena.assembler.exceptions.CannotLoadClassException $r3;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        com.hp.hpl.jena.rdf.model.Resource r4;

        r4 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r0 := @parameter1: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new com.hp.hpl.jena.assembler.exceptions.CannotLoadClassException;

        specialinvoke $r3.<com.hp.hpl.jena.assembler.exceptions.CannotLoadClassException: void <init>(com.hp.hpl.jena.rdf.model.Resource,java.lang.String,java.lang.ClassNotFoundException)>(r4, r0, $r2);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    public static java.lang.String getOptionalClassName(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property)
    {
        com.hp.hpl.jena.rdf.model.RDFNode $r2;
        com.hp.hpl.jena.graph.Node $r3, $r5;
        com.hp.hpl.jena.rdf.model.Resource r0;
        com.hp.hpl.jena.rdf.model.Property r1;
        java.lang.String $r4, $r6;
        boolean $z0, $z1;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r1 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        $r2 = staticinvoke <com.hp.hpl.jena.assembler.assemblers.AssemblerBase: com.hp.hpl.jena.rdf.model.RDFNode getUnique(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property)>(r0, r1);

        if $r2 != null goto label1;

        $r6 = null;

        goto label4;

     label1:
        $z0 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.RDFNode: boolean isLiteral()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.RDFNode: com.hp.hpl.jena.graph.Node asNode()>();

        $r6 = virtualinvoke $r5.<com.hp.hpl.jena.graph.Node: java.lang.String getLiteralLexicalForm()>();

        goto label4;

     label2:
        $z1 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.RDFNode: boolean isResource()>();

        if $z1 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.RDFNode: com.hp.hpl.jena.graph.Node asNode()>();

        $r4 = virtualinvoke $r3.<com.hp.hpl.jena.graph.Node: java.lang.String getURI()>();

        $r6 = staticinvoke <com.hp.hpl.jena.assembler.assemblers.AssemblerBase: java.lang.String mustBeJava(java.lang.String)>($r4);

        goto label4;

     label3:
        $r6 = null;

     label4:
        return $r6;
    }

    private static java.lang.String mustBeJava(java.lang.String)
    {
        com.hp.hpl.jena.shared.JenaException $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String r0, $r5, $r6;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("java:");

        if $z0 == 0 goto label1;

        $r6 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(5);

        return $r6;

     label1:
        $r1 = new com.hp.hpl.jena.shared.JenaException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("class name URI must start with \'java:\': ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<com.hp.hpl.jena.shared.JenaException: void <init>(java.lang.String)>($r5);

        throw $r1;
    }

    static void <clinit>()
    {
        com.hp.hpl.jena.util.iterator.Map1 $r0;

        $r0 = <com.hp.hpl.jena.rdf.model.Statement$Util: com.hp.hpl.jena.util.iterator.Map1 getObject>;

        <com.hp.hpl.jena.assembler.assemblers.AssemblerBase: com.hp.hpl.jena.util.iterator.Map1 getObject> = $r0;

        return;
    }
}
