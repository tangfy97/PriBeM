public class org.jdesktop.swingx.calendar.DateSpan extends java.lang.Object
{
    private long _start;
    private long _end;

    public void <init>(long, long)
    {
        long l0, l1, $l2, $l3;
        java.lang.IllegalArgumentException $r2;
        org.jdesktop.swingx.calendar.DateSpan r0;
        byte $b4;
        int $i5;

        r0 := @this: org.jdesktop.swingx.calendar.DateSpan;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.jdesktop.swingx.calendar.DateSpan: long _start> = l0;

        r0.<org.jdesktop.swingx.calendar.DateSpan: long _end> = l1;

        $l3 = r0.<org.jdesktop.swingx.calendar.DateSpan: long _start>;

        $l2 = r0.<org.jdesktop.swingx.calendar.DateSpan: long _end>;

        $b4 = $l3 cmp $l2;

        $i5 = (int) $b4;

        if $i5 <= 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Start date must be before end date");

        throw $r2;

     label1:
        return;
    }

    public void <init>(java.util.Date, java.util.Date)
    {
        java.util.Date r1, r2;
        long $l0, $l1;
        org.jdesktop.swingx.calendar.DateSpan r0;

        r0 := @this: org.jdesktop.swingx.calendar.DateSpan;

        r1 := @parameter0: java.util.Date;

        r2 := @parameter1: java.util.Date;

        $l0 = virtualinvoke r1.<java.util.Date: long getTime()>();

        $l1 = virtualinvoke r2.<java.util.Date: long getTime()>();

        specialinvoke r0.<org.jdesktop.swingx.calendar.DateSpan: void <init>(long,long)>($l0, $l1);

        return;
    }

    public long getStart()
    {
        long $l0;
        org.jdesktop.swingx.calendar.DateSpan r0;

        r0 := @this: org.jdesktop.swingx.calendar.DateSpan;

        $l0 = r0.<org.jdesktop.swingx.calendar.DateSpan: long _start>;

        return $l0;
    }

    public long getEnd()
    {
        long $l0;
        org.jdesktop.swingx.calendar.DateSpan r0;

        r0 := @this: org.jdesktop.swingx.calendar.DateSpan;

        $l0 = r0.<org.jdesktop.swingx.calendar.DateSpan: long _end>;

        return $l0;
    }

    public java.util.Date getStartAsDate()
    {
        long $l0;
        org.jdesktop.swingx.calendar.DateSpan r1;
        java.util.Date $r0;

        r1 := @this: org.jdesktop.swingx.calendar.DateSpan;

        $r0 = new java.util.Date;

        $l0 = virtualinvoke r1.<org.jdesktop.swingx.calendar.DateSpan: long getStart()>();

        specialinvoke $r0.<java.util.Date: void <init>(long)>($l0);

        return $r0;
    }

    public java.util.Date getEndAsDate()
    {
        long $l0;
        org.jdesktop.swingx.calendar.DateSpan r1;
        java.util.Date $r0;

        r1 := @this: org.jdesktop.swingx.calendar.DateSpan;

        $r0 = new java.util.Date;

        $l0 = virtualinvoke r1.<org.jdesktop.swingx.calendar.DateSpan: long getEnd()>();

        specialinvoke $r0.<java.util.Date: void <init>(long)>($l0);

        return $r0;
    }

    public boolean contains(org.jdesktop.swingx.calendar.DateSpan)
    {
        long $l0, $l1;
        org.jdesktop.swingx.calendar.DateSpan r0, r1;
        boolean $z0, $z1, $z2;

        r0 := @this: org.jdesktop.swingx.calendar.DateSpan;

        r1 := @parameter0: org.jdesktop.swingx.calendar.DateSpan;

        $l0 = virtualinvoke r1.<org.jdesktop.swingx.calendar.DateSpan: long getStart()>();

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.calendar.DateSpan: boolean contains(long)>($l0);

        if $z0 == 0 goto label1;

        $l1 = virtualinvoke r1.<org.jdesktop.swingx.calendar.DateSpan: long getEnd()>();

        $z1 = virtualinvoke r0.<org.jdesktop.swingx.calendar.DateSpan: boolean contains(long)>($l1);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public boolean contains(long)
    {
        long l0, $l1, $l3;
        org.jdesktop.swingx.calendar.DateSpan r0;
        byte $b2, $b4;
        int $i5, $i6;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.calendar.DateSpan;

        l0 := @parameter0: long;

        $l1 = virtualinvoke r0.<org.jdesktop.swingx.calendar.DateSpan: long getStart()>();

        $b2 = l0 cmp $l1;

        $i5 = (int) $b2;

        if $i5 < 0 goto label1;

        $l3 = virtualinvoke r0.<org.jdesktop.swingx.calendar.DateSpan: long getEnd()>();

        $b4 = l0 cmp $l3;

        $i6 = (int) $b4;

        if $i6 > 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean contains(long, long)
    {
        long l0, $l1, l3, $l4;
        org.jdesktop.swingx.calendar.DateSpan r0;
        byte $b2, $b5;
        int $i6, $i7;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.calendar.DateSpan;

        l0 := @parameter0: long;

        l3 := @parameter1: long;

        $l1 = virtualinvoke r0.<org.jdesktop.swingx.calendar.DateSpan: long getStart()>();

        $b2 = l0 cmp $l1;

        $i6 = (int) $b2;

        if $i6 < 0 goto label1;

        $l4 = virtualinvoke r0.<org.jdesktop.swingx.calendar.DateSpan: long getEnd()>();

        $b5 = l3 cmp $l4;

        $i7 = (int) $b5;

        if $i7 > 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean intersects(long, long)
    {
        long l0, $l1, l3, $l4;
        org.jdesktop.swingx.calendar.DateSpan r0;
        byte $b2, $b5;
        int $i6, $i7;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.calendar.DateSpan;

        l0 := @parameter0: long;

        l3 := @parameter1: long;

        $l1 = virtualinvoke r0.<org.jdesktop.swingx.calendar.DateSpan: long getEnd()>();

        $b2 = l0 cmp $l1;

        $i6 = (int) $b2;

        if $i6 > 0 goto label1;

        $l4 = virtualinvoke r0.<org.jdesktop.swingx.calendar.DateSpan: long getStart()>();

        $b5 = l3 cmp $l4;

        $i7 = (int) $b5;

        if $i7 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean intersects(org.jdesktop.swingx.calendar.DateSpan)
    {
        long $l0, $l1;
        org.jdesktop.swingx.calendar.DateSpan r0, r1;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.calendar.DateSpan;

        r1 := @parameter0: org.jdesktop.swingx.calendar.DateSpan;

        $l0 = virtualinvoke r1.<org.jdesktop.swingx.calendar.DateSpan: long getStart()>();

        $l1 = virtualinvoke r1.<org.jdesktop.swingx.calendar.DateSpan: long getEnd()>();

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.calendar.DateSpan: boolean intersects(long,long)>($l0, $l1);

        return $z0;
    }

    public org.jdesktop.swingx.calendar.DateSpan add(org.jdesktop.swingx.calendar.DateSpan)
    {
        long $l0, $l1;
        org.jdesktop.swingx.calendar.DateSpan r0, r1, $r2;

        r0 := @this: org.jdesktop.swingx.calendar.DateSpan;

        r1 := @parameter0: org.jdesktop.swingx.calendar.DateSpan;

        $l0 = virtualinvoke r1.<org.jdesktop.swingx.calendar.DateSpan: long getStart()>();

        $l1 = virtualinvoke r1.<org.jdesktop.swingx.calendar.DateSpan: long getEnd()>();

        $r2 = virtualinvoke r0.<org.jdesktop.swingx.calendar.DateSpan: org.jdesktop.swingx.calendar.DateSpan add(long,long)>($l0, $l1);

        return $r2;
    }

    public org.jdesktop.swingx.calendar.DateSpan add(long, long)
    {
        long l0, $l1, $l2, l3, $l4, $l5;
        org.jdesktop.swingx.calendar.DateSpan $r0, r1;

        r1 := @this: org.jdesktop.swingx.calendar.DateSpan;

        l0 := @parameter0: long;

        l3 := @parameter1: long;

        $r0 = new org.jdesktop.swingx.calendar.DateSpan;

        $l1 = virtualinvoke r1.<org.jdesktop.swingx.calendar.DateSpan: long getStart()>();

        $l2 = staticinvoke <java.lang.Math: long min(long,long)>(l0, $l1);

        $l4 = virtualinvoke r1.<org.jdesktop.swingx.calendar.DateSpan: long getEnd()>();

        $l5 = staticinvoke <java.lang.Math: long max(long,long)>(l3, $l4);

        specialinvoke $r0.<org.jdesktop.swingx.calendar.DateSpan: void <init>(long,long)>($l2, $l5);

        return $r0;
    }

    public boolean equals(java.lang.Object)
    {
        long $l0, $l1, $l3, $l4;
        org.jdesktop.swingx.calendar.DateSpan r1, r2;
        byte $b2, $b5;
        java.lang.Object r0;
        boolean $z0, $z1;

        r1 := @this: org.jdesktop.swingx.calendar.DateSpan;

        r0 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r0 instanceof org.jdesktop.swingx.calendar.DateSpan;

        if $z0 == 0 goto label4;

        r2 = (org.jdesktop.swingx.calendar.DateSpan) r0;

        $l0 = r1.<org.jdesktop.swingx.calendar.DateSpan: long _start>;

        $l1 = virtualinvoke r2.<org.jdesktop.swingx.calendar.DateSpan: long getStart()>();

        $b2 = $l0 cmp $l1;

        if $b2 != 0 goto label2;

        $l3 = r1.<org.jdesktop.swingx.calendar.DateSpan: long _end>;

        $l4 = virtualinvoke r2.<org.jdesktop.swingx.calendar.DateSpan: long getEnd()>();

        $b5 = $l3 cmp $l4;

        if $b5 != 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;

     label4:
        return 0;
    }

    public int hashCode()
    {
        long $l0, $l1, $l2, $l3, $l5, $l6, $l7, $l8;
        org.jdesktop.swingx.calendar.DateSpan r0;
        int $i4, $i9, $i10, i11, i12;

        r0 := @this: org.jdesktop.swingx.calendar.DateSpan;

        $l2 = r0.<org.jdesktop.swingx.calendar.DateSpan: long _start>;

        $l0 = r0.<org.jdesktop.swingx.calendar.DateSpan: long _start>;

        $l1 = $l0 >>> 32;

        $l3 = $l2 ^ $l1;

        $i4 = (int) $l3;

        i11 = 629 + $i4;

        $i10 = 37 * i11;

        $l7 = r0.<org.jdesktop.swingx.calendar.DateSpan: long _end>;

        $l5 = r0.<org.jdesktop.swingx.calendar.DateSpan: long _end>;

        $l6 = $l5 >>> 32;

        $l8 = $l7 ^ $l6;

        $i9 = (int) $l8;

        i12 = $i10 + $i9;

        return i12;
    }

    public java.lang.String toString()
    {
        java.util.Date $r3, $r6;
        org.jdesktop.swingx.calendar.DateSpan r2;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r7, $r8;
        java.lang.String $r9;

        r2 := @this: org.jdesktop.swingx.calendar.DateSpan;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DateSpan [");

        $r3 = virtualinvoke r2.<org.jdesktop.swingx.calendar.DateSpan: java.util.Date getStartAsDate()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r6 = virtualinvoke r2.<org.jdesktop.swingx.calendar.DateSpan: java.util.Date getEndAsDate()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }
}
