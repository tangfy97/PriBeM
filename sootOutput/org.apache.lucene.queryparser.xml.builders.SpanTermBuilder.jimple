public class org.apache.lucene.queryparser.xml.builders.SpanTermBuilder extends org.apache.lucene.queryparser.xml.builders.SpanBuilderBase
{

    public void <init>()
    {
        org.apache.lucene.queryparser.xml.builders.SpanTermBuilder r0;

        r0 := @this: org.apache.lucene.queryparser.xml.builders.SpanTermBuilder;

        specialinvoke r0.<org.apache.lucene.queryparser.xml.builders.SpanBuilderBase: void <init>()>();

        return;
    }

    public org.apache.lucene.search.spans.SpanQuery getSpanQuery(org.w3c.dom.Element) throws org.apache.lucene.queryparser.xml.ParserException
    {
        org.apache.lucene.search.spans.SpanTermQuery $r3;
        org.w3c.dom.Element r0;
        org.apache.lucene.index.Term $r4;
        float $f0;
        java.lang.String $r1, $r2;
        org.apache.lucene.queryparser.xml.builders.SpanTermBuilder r5;

        r5 := @this: org.apache.lucene.queryparser.xml.builders.SpanTermBuilder;

        r0 := @parameter0: org.w3c.dom.Element;

        $r1 = staticinvoke <org.apache.lucene.queryparser.xml.DOMUtils: java.lang.String getAttributeWithInheritanceOrFail(org.w3c.dom.Element,java.lang.String)>(r0, "fieldName");

        $r2 = staticinvoke <org.apache.lucene.queryparser.xml.DOMUtils: java.lang.String getNonBlankTextOrFail(org.w3c.dom.Element)>(r0);

        $r3 = new org.apache.lucene.search.spans.SpanTermQuery;

        $r4 = new org.apache.lucene.index.Term;

        specialinvoke $r4.<org.apache.lucene.index.Term: void <init>(java.lang.String,java.lang.String)>($r1, $r2);

        specialinvoke $r3.<org.apache.lucene.search.spans.SpanTermQuery: void <init>(org.apache.lucene.index.Term)>($r4);

        $f0 = staticinvoke <org.apache.lucene.queryparser.xml.DOMUtils: float getAttribute(org.w3c.dom.Element,java.lang.String,float)>(r0, "boost", 1.0F);

        virtualinvoke $r3.<org.apache.lucene.search.spans.SpanTermQuery: void setBoost(float)>($f0);

        return $r3;
    }
}
