public class org.apache.xpath.compiler.Compiler extends org.apache.xpath.compiler.OpMap
{
    private int locPathDepth;
    private static final boolean DEBUG;
    private static long s_nextMethodId;
    private org.apache.xml.utils.PrefixResolver m_currentPrefixResolver;
    javax.xml.transform.ErrorListener m_errorHandler;
    javax.xml.transform.SourceLocator m_locator;

    public void <init>(javax.xml.transform.ErrorListener, javax.xml.transform.SourceLocator)
    {
        javax.xml.transform.SourceLocator r2;
        int $i1;
        javax.xml.transform.ErrorListener r1;
        org.apache.xpath.compiler.Compiler r0;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        r1 := @parameter0: javax.xml.transform.ErrorListener;

        r2 := @parameter1: javax.xml.transform.SourceLocator;

        specialinvoke r0.<org.apache.xpath.compiler.OpMap: void <init>()>();

        $i1 = (int) -1;

        r0.<org.apache.xpath.compiler.Compiler: int locPathDepth> = $i1;

        r0.<org.apache.xpath.compiler.Compiler: org.apache.xml.utils.PrefixResolver m_currentPrefixResolver> = null;

        r0.<org.apache.xpath.compiler.Compiler: javax.xml.transform.ErrorListener m_errorHandler> = r1;

        r0.<org.apache.xpath.compiler.Compiler: javax.xml.transform.SourceLocator m_locator> = r2;

        return;
    }

    public void <init>()
    {
        int $i1;
        org.apache.xpath.compiler.Compiler r0;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        specialinvoke r0.<org.apache.xpath.compiler.OpMap: void <init>()>();

        $i1 = (int) -1;

        r0.<org.apache.xpath.compiler.Compiler: int locPathDepth> = $i1;

        r0.<org.apache.xpath.compiler.Compiler: org.apache.xml.utils.PrefixResolver m_currentPrefixResolver> = null;

        r0.<org.apache.xpath.compiler.Compiler: javax.xml.transform.ErrorListener m_errorHandler> = null;

        r0.<org.apache.xpath.compiler.Compiler: javax.xml.transform.SourceLocator m_locator> = null;

        return;
    }

    public org.apache.xpath.Expression compile(int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.Expression r4;
        java.lang.Object[] $r1, $r2;
        org.apache.xpath.compiler.Compiler r0;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.String $r3;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<org.apache.xpath.compiler.OpMap: int getOp(int)>(i0);

        r4 = null;

        tableswitch($i1)
        {
            case 1: goto label01;
            case 2: goto label02;
            case 3: goto label03;
            case 4: goto label04;
            case 5: goto label05;
            case 6: goto label06;
            case 7: goto label07;
            case 8: goto label08;
            case 9: goto label09;
            case 10: goto label10;
            case 11: goto label11;
            case 12: goto label12;
            case 13: goto label13;
            case 14: goto label14;
            case 15: goto label31;
            case 16: goto label15;
            case 17: goto label16;
            case 18: goto label17;
            case 19: goto label18;
            case 20: goto label19;
            case 21: goto label20;
            case 22: goto label21;
            case 23: goto label22;
            case 24: goto label25;
            case 25: goto label26;
            case 26: goto label24;
            case 27: goto label23;
            case 28: goto label27;
            case 29: goto label28;
            case 30: goto label29;
            case 31: goto label30;
            default: goto label32;
        };

     label01:
        $i3 = i0 + 2;

        r4 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression compile(int)>($i3);

        goto label33;

     label02:
        r4 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression or(int)>(i0);

        goto label33;

     label03:
        r4 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression and(int)>(i0);

        goto label33;

     label04:
        r4 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression notequals(int)>(i0);

        goto label33;

     label05:
        r4 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression equals(int)>(i0);

        goto label33;

     label06:
        r4 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression lte(int)>(i0);

        goto label33;

     label07:
        r4 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression lt(int)>(i0);

        goto label33;

     label08:
        r4 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression gte(int)>(i0);

        goto label33;

     label09:
        r4 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression gt(int)>(i0);

        goto label33;

     label10:
        r4 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression plus(int)>(i0);

        goto label33;

     label11:
        r4 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression minus(int)>(i0);

        goto label33;

     label12:
        r4 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression mult(int)>(i0);

        goto label33;

     label13:
        r4 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression div(int)>(i0);

        goto label33;

     label14:
        r4 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression mod(int)>(i0);

        goto label33;

     label15:
        r4 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression 'neg'(int)>(i0);

        goto label33;

     label16:
        r4 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression string(int)>(i0);

        goto label33;

     label17:
        r4 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression bool(int)>(i0);

        goto label33;

     label18:
        r4 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression number(int)>(i0);

        goto label33;

     label19:
        r4 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression union(int)>(i0);

        goto label33;

     label20:
        r4 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression literal(int)>(i0);

        goto label33;

     label21:
        r4 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression variable(int)>(i0);

        goto label33;

     label22:
        r4 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression group(int)>(i0);

        goto label33;

     label23:
        r4 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression numberlit(int)>(i0);

        goto label33;

     label24:
        r4 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression arg(int)>(i0);

        goto label33;

     label25:
        r4 = specialinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression compileExtension(int)>(i0);

        goto label33;

     label26:
        r4 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression compileFunction(int)>(i0);

        goto label33;

     label27:
        r4 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression locationPath(int)>(i0);

        goto label33;

     label28:
        r4 = null;

        goto label33;

     label29:
        $i2 = i0 + 2;

        r4 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression matchPattern(int)>($i2);

        goto label33;

     label30:
        r4 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression locationPathPattern(int)>(i0);

        goto label33;

     label31:
        $r1 = newarray (java.lang.Object)[1];

        $r1[0] = "quo";

        virtualinvoke r0.<org.apache.xpath.compiler.Compiler: void error(java.lang.String,java.lang.Object[])>("ER_UNKNOWN_OPCODE", $r1);

        goto label33;

     label32:
        $r2 = newarray (java.lang.Object)[1];

        $i4 = virtualinvoke r0.<org.apache.xpath.compiler.OpMap: int getOp(int)>(i0);

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i4);

        $r2[0] = $r3;

        virtualinvoke r0.<org.apache.xpath.compiler.Compiler: void error(java.lang.String,java.lang.Object[])>("ER_UNKNOWN_OPCODE", $r2);

     label33:
        return r4;
    }

    private org.apache.xpath.Expression compileOperation(org.apache.xpath.operations.Operation, int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.operations.Operation r1;
        org.apache.xpath.Expression $r2, $r3;
        int i0, $i1, $i2;
        org.apache.xpath.compiler.Compiler r0;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        r1 := @parameter0: org.apache.xpath.operations.Operation;

        i0 := @parameter1: int;

        $i1 = staticinvoke <org.apache.xpath.compiler.OpMap: int getFirstChildPos(int)>(i0);

        $i2 = virtualinvoke r0.<org.apache.xpath.compiler.OpMap: int getNextOpPos(int)>($i1);

        $r2 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression compile(int)>($i1);

        $r3 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression compile(int)>($i2);

        virtualinvoke r1.<org.apache.xpath.operations.Operation: void setLeftRight(org.apache.xpath.Expression,org.apache.xpath.Expression)>($r2, $r3);

        return r1;
    }

    private org.apache.xpath.Expression compileUnary(org.apache.xpath.operations.UnaryOperation, int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.Expression $r2;
        int i0, $i1;
        org.apache.xpath.operations.UnaryOperation r0;
        org.apache.xpath.compiler.Compiler r1;

        r1 := @this: org.apache.xpath.compiler.Compiler;

        r0 := @parameter0: org.apache.xpath.operations.UnaryOperation;

        i0 := @parameter1: int;

        $i1 = staticinvoke <org.apache.xpath.compiler.OpMap: int getFirstChildPos(int)>(i0);

        $r2 = virtualinvoke r1.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression compile(int)>($i1);

        virtualinvoke r0.<org.apache.xpath.operations.UnaryOperation: void setRight(org.apache.xpath.Expression)>($r2);

        return r0;
    }

    protected org.apache.xpath.Expression or(int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.Expression $r2;
        org.apache.xpath.operations.Or $r1;
        int i0;
        org.apache.xpath.compiler.Compiler r0;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i0 := @parameter0: int;

        $r1 = new org.apache.xpath.operations.Or;

        specialinvoke $r1.<org.apache.xpath.operations.Or: void <init>()>();

        $r2 = specialinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression compileOperation(org.apache.xpath.operations.Operation,int)>($r1, i0);

        return $r2;
    }

    protected org.apache.xpath.Expression and(int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.Expression $r2;
        int i0;
        org.apache.xpath.operations.And $r1;
        org.apache.xpath.compiler.Compiler r0;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i0 := @parameter0: int;

        $r1 = new org.apache.xpath.operations.And;

        specialinvoke $r1.<org.apache.xpath.operations.And: void <init>()>();

        $r2 = specialinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression compileOperation(org.apache.xpath.operations.Operation,int)>($r1, i0);

        return $r2;
    }

    protected org.apache.xpath.Expression notequals(int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.Expression $r2;
        int i0;
        org.apache.xpath.operations.NotEquals $r1;
        org.apache.xpath.compiler.Compiler r0;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i0 := @parameter0: int;

        $r1 = new org.apache.xpath.operations.NotEquals;

        specialinvoke $r1.<org.apache.xpath.operations.NotEquals: void <init>()>();

        $r2 = specialinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression compileOperation(org.apache.xpath.operations.Operation,int)>($r1, i0);

        return $r2;
    }

    protected org.apache.xpath.Expression equals(int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.Expression $r2;
        org.apache.xpath.operations.Equals $r1;
        int i0;
        org.apache.xpath.compiler.Compiler r0;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i0 := @parameter0: int;

        $r1 = new org.apache.xpath.operations.Equals;

        specialinvoke $r1.<org.apache.xpath.operations.Equals: void <init>()>();

        $r2 = specialinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression compileOperation(org.apache.xpath.operations.Operation,int)>($r1, i0);

        return $r2;
    }

    protected org.apache.xpath.Expression lte(int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.Expression $r2;
        org.apache.xpath.operations.Lte $r1;
        int i0;
        org.apache.xpath.compiler.Compiler r0;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i0 := @parameter0: int;

        $r1 = new org.apache.xpath.operations.Lte;

        specialinvoke $r1.<org.apache.xpath.operations.Lte: void <init>()>();

        $r2 = specialinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression compileOperation(org.apache.xpath.operations.Operation,int)>($r1, i0);

        return $r2;
    }

    protected org.apache.xpath.Expression lt(int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.Expression $r2;
        int i0;
        org.apache.xpath.operations.Lt $r1;
        org.apache.xpath.compiler.Compiler r0;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i0 := @parameter0: int;

        $r1 = new org.apache.xpath.operations.Lt;

        specialinvoke $r1.<org.apache.xpath.operations.Lt: void <init>()>();

        $r2 = specialinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression compileOperation(org.apache.xpath.operations.Operation,int)>($r1, i0);

        return $r2;
    }

    protected org.apache.xpath.Expression gte(int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.Expression $r2;
        org.apache.xpath.operations.Gte $r1;
        int i0;
        org.apache.xpath.compiler.Compiler r0;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i0 := @parameter0: int;

        $r1 = new org.apache.xpath.operations.Gte;

        specialinvoke $r1.<org.apache.xpath.operations.Gte: void <init>()>();

        $r2 = specialinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression compileOperation(org.apache.xpath.operations.Operation,int)>($r1, i0);

        return $r2;
    }

    protected org.apache.xpath.Expression gt(int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.Expression $r2;
        org.apache.xpath.operations.Gt $r1;
        int i0;
        org.apache.xpath.compiler.Compiler r0;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i0 := @parameter0: int;

        $r1 = new org.apache.xpath.operations.Gt;

        specialinvoke $r1.<org.apache.xpath.operations.Gt: void <init>()>();

        $r2 = specialinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression compileOperation(org.apache.xpath.operations.Operation,int)>($r1, i0);

        return $r2;
    }

    protected org.apache.xpath.Expression plus(int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.Expression $r2;
        int i0;
        org.apache.xpath.operations.Plus $r1;
        org.apache.xpath.compiler.Compiler r0;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i0 := @parameter0: int;

        $r1 = new org.apache.xpath.operations.Plus;

        specialinvoke $r1.<org.apache.xpath.operations.Plus: void <init>()>();

        $r2 = specialinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression compileOperation(org.apache.xpath.operations.Operation,int)>($r1, i0);

        return $r2;
    }

    protected org.apache.xpath.Expression minus(int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.Expression $r2;
        org.apache.xpath.operations.Minus $r1;
        int i0;
        org.apache.xpath.compiler.Compiler r0;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i0 := @parameter0: int;

        $r1 = new org.apache.xpath.operations.Minus;

        specialinvoke $r1.<org.apache.xpath.operations.Minus: void <init>()>();

        $r2 = specialinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression compileOperation(org.apache.xpath.operations.Operation,int)>($r1, i0);

        return $r2;
    }

    protected org.apache.xpath.Expression mult(int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.operations.Mult $r1;
        org.apache.xpath.Expression $r2;
        int i0;
        org.apache.xpath.compiler.Compiler r0;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i0 := @parameter0: int;

        $r1 = new org.apache.xpath.operations.Mult;

        specialinvoke $r1.<org.apache.xpath.operations.Mult: void <init>()>();

        $r2 = specialinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression compileOperation(org.apache.xpath.operations.Operation,int)>($r1, i0);

        return $r2;
    }

    protected org.apache.xpath.Expression div(int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.Expression $r2;
        org.apache.xpath.operations.Div $r1;
        int i0;
        org.apache.xpath.compiler.Compiler r0;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i0 := @parameter0: int;

        $r1 = new org.apache.xpath.operations.Div;

        specialinvoke $r1.<org.apache.xpath.operations.Div: void <init>()>();

        $r2 = specialinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression compileOperation(org.apache.xpath.operations.Operation,int)>($r1, i0);

        return $r2;
    }

    protected org.apache.xpath.Expression mod(int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.Expression $r2;
        org.apache.xpath.operations.Mod $r1;
        int i0;
        org.apache.xpath.compiler.Compiler r0;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i0 := @parameter0: int;

        $r1 = new org.apache.xpath.operations.Mod;

        specialinvoke $r1.<org.apache.xpath.operations.Mod: void <init>()>();

        $r2 = specialinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression compileOperation(org.apache.xpath.operations.Operation,int)>($r1, i0);

        return $r2;
    }

    protected org.apache.xpath.Expression 'neg'(int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.operations.Neg $r1;
        org.apache.xpath.Expression $r2;
        int i0;
        org.apache.xpath.compiler.Compiler r0;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i0 := @parameter0: int;

        $r1 = new org.apache.xpath.operations.Neg;

        specialinvoke $r1.<org.apache.xpath.operations.Neg: void <init>()>();

        $r2 = specialinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression compileUnary(org.apache.xpath.operations.UnaryOperation,int)>($r1, i0);

        return $r2;
    }

    protected org.apache.xpath.Expression string(int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.operations.String $r1;
        org.apache.xpath.Expression $r2;
        int i0;
        org.apache.xpath.compiler.Compiler r0;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i0 := @parameter0: int;

        $r1 = new org.apache.xpath.operations.String;

        specialinvoke $r1.<org.apache.xpath.operations.String: void <init>()>();

        $r2 = specialinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression compileUnary(org.apache.xpath.operations.UnaryOperation,int)>($r1, i0);

        return $r2;
    }

    protected org.apache.xpath.Expression bool(int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.operations.Bool $r1;
        org.apache.xpath.Expression $r2;
        int i0;
        org.apache.xpath.compiler.Compiler r0;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i0 := @parameter0: int;

        $r1 = new org.apache.xpath.operations.Bool;

        specialinvoke $r1.<org.apache.xpath.operations.Bool: void <init>()>();

        $r2 = specialinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression compileUnary(org.apache.xpath.operations.UnaryOperation,int)>($r1, i0);

        return $r2;
    }

    protected org.apache.xpath.Expression number(int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.Expression $r2;
        int i0;
        org.apache.xpath.operations.Number $r1;
        org.apache.xpath.compiler.Compiler r0;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i0 := @parameter0: int;

        $r1 = new org.apache.xpath.operations.Number;

        specialinvoke $r1.<org.apache.xpath.operations.Number: void <init>()>();

        $r2 = specialinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression compileUnary(org.apache.xpath.operations.UnaryOperation,int)>($r1, i0);

        return $r2;
    }

    protected org.apache.xpath.Expression literal(int)
    {
        org.apache.xml.utils.ObjectVector $r1;
        int $i0, $i1, i2;
        java.lang.Object $r2;
        org.apache.xpath.objects.XString $r3;
        org.apache.xpath.compiler.Compiler r0;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i2 := @parameter0: int;

        $i0 = staticinvoke <org.apache.xpath.compiler.OpMap: int getFirstChildPos(int)>(i2);

        $r1 = virtualinvoke r0.<org.apache.xpath.compiler.OpMap: org.apache.xml.utils.ObjectVector getTokenQueue()>();

        $i1 = virtualinvoke r0.<org.apache.xpath.compiler.OpMap: int getOp(int)>($i0);

        $r2 = virtualinvoke $r1.<org.apache.xml.utils.ObjectVector: java.lang.Object elementAt(int)>($i1);

        $r3 = (org.apache.xpath.objects.XString) $r2;

        return $r3;
    }

    protected org.apache.xpath.Expression numberlit(int)
    {
        org.apache.xml.utils.ObjectVector $r1;
        org.apache.xpath.objects.XNumber $r3;
        int $i0, $i1, i2;
        java.lang.Object $r2;
        org.apache.xpath.compiler.Compiler r0;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i2 := @parameter0: int;

        $i0 = staticinvoke <org.apache.xpath.compiler.OpMap: int getFirstChildPos(int)>(i2);

        $r1 = virtualinvoke r0.<org.apache.xpath.compiler.OpMap: org.apache.xml.utils.ObjectVector getTokenQueue()>();

        $i1 = virtualinvoke r0.<org.apache.xpath.compiler.OpMap: int getOp(int)>($i0);

        $r2 = virtualinvoke $r1.<org.apache.xml.utils.ObjectVector: java.lang.Object elementAt(int)>($i1);

        $r3 = (org.apache.xpath.objects.XNumber) $r2;

        return $r3;
    }

    protected org.apache.xpath.Expression variable(int) throws javax.xml.transform.TransformerException
    {
        org.apache.xml.utils.ObjectVector $r2, $r4;
        org.apache.xml.utils.QName $r10;
        org.apache.xpath.operations.Variable $r9;
        org.apache.xpath.compiler.Compiler r1;
        int $i0, $i1, $i2, $i3, i4, $i6;
        java.lang.Object $r3, $r5;
        java.lang.String $r7, $r8;

        r1 := @this: org.apache.xpath.compiler.Compiler;

        i4 := @parameter0: int;

        $r9 = new org.apache.xpath.operations.Variable;

        specialinvoke $r9.<org.apache.xpath.operations.Variable: void <init>()>();

        $i0 = staticinvoke <org.apache.xpath.compiler.OpMap: int getFirstChildPos(int)>(i4);

        $i1 = virtualinvoke r1.<org.apache.xpath.compiler.OpMap: int getOp(int)>($i0);

        $i6 = (int) -2;

        if $i6 != $i1 goto label1;

        $r8 = null;

        goto label2;

     label1:
        $r2 = virtualinvoke r1.<org.apache.xpath.compiler.OpMap: org.apache.xml.utils.ObjectVector getTokenQueue()>();

        $r3 = virtualinvoke $r2.<org.apache.xml.utils.ObjectVector: java.lang.Object elementAt(int)>($i1);

        $r8 = (java.lang.String) $r3;

     label2:
        $r4 = virtualinvoke r1.<org.apache.xpath.compiler.OpMap: org.apache.xml.utils.ObjectVector getTokenQueue()>();

        $i2 = $i0 + 1;

        $i3 = virtualinvoke r1.<org.apache.xpath.compiler.OpMap: int getOp(int)>($i2);

        $r5 = virtualinvoke $r4.<org.apache.xml.utils.ObjectVector: java.lang.Object elementAt(int)>($i3);

        $r7 = (java.lang.String) $r5;

        $r10 = new org.apache.xml.utils.QName;

        specialinvoke $r10.<org.apache.xml.utils.QName: void <init>(java.lang.String,java.lang.String)>($r8, $r7);

        virtualinvoke $r9.<org.apache.xpath.operations.Variable: void setQName(org.apache.xml.utils.QName)>($r10);

        return $r9;
    }

    protected org.apache.xpath.Expression group(int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.Expression $r1;
        int i0, $i1;
        org.apache.xpath.compiler.Compiler r0;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i0 := @parameter0: int;

        $i1 = i0 + 2;

        $r1 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression compile(int)>($i1);

        return $r1;
    }

    protected org.apache.xpath.Expression arg(int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.Expression $r1;
        int i0, $i1;
        org.apache.xpath.compiler.Compiler r0;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i0 := @parameter0: int;

        $i1 = i0 + 2;

        $r1 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression compile(int)>($i1);

        return $r1;
    }

    protected org.apache.xpath.Expression union(int) throws javax.xml.transform.TransformerException
    {
        java.lang.Throwable $r2;
        org.apache.xpath.compiler.Compiler r0;
        org.apache.xpath.axes.LocPathIterator $r1;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i2 := @parameter0: int;

        $i0 = r0.<org.apache.xpath.compiler.Compiler: int locPathDepth>;

        $i1 = $i0 + 1;

        r0.<org.apache.xpath.compiler.Compiler: int locPathDepth> = $i1;

     label1:
        $r1 = staticinvoke <org.apache.xpath.axes.UnionPathIterator: org.apache.xpath.axes.LocPathIterator createUnionIterator(org.apache.xpath.compiler.Compiler,int)>(r0, i2);

        goto label5;

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        goto label6;

     label4:
        throw $r2;

     label5:
        $i3 = r0.<org.apache.xpath.compiler.Compiler: int locPathDepth>;

        $i4 = $i3 - 1;

        r0.<org.apache.xpath.compiler.Compiler: int locPathDepth> = $i4;

        goto label2;

     label6:
        $i5 = r0.<org.apache.xpath.compiler.Compiler: int locPathDepth>;

        $i6 = $i5 - 1;

        r0.<org.apache.xpath.compiler.Compiler: int locPathDepth> = $i6;

        goto label4;

        catch java.lang.Throwable from label1 to label3 with label3;
    }

    public int getLocationPathDepth()
    {
        int $i0;
        org.apache.xpath.compiler.Compiler r0;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        $i0 = r0.<org.apache.xpath.compiler.Compiler: int locPathDepth>;

        return $i0;
    }

    public org.apache.xpath.Expression locationPath(int) throws javax.xml.transform.TransformerException
    {
        java.lang.Throwable $r3;
        org.apache.xpath.Expression $r2;
        org.apache.xml.dtm.DTMIterator $r1;
        org.apache.xpath.compiler.Compiler r0;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i2 := @parameter0: int;

        $i0 = r0.<org.apache.xpath.compiler.Compiler: int locPathDepth>;

        $i1 = $i0 + 1;

        r0.<org.apache.xpath.compiler.Compiler: int locPathDepth> = $i1;

     label1:
        $i3 = r0.<org.apache.xpath.compiler.Compiler: int locPathDepth>;

        if $i3 != 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        $r1 = staticinvoke <org.apache.xpath.axes.WalkerFactory: org.apache.xml.dtm.DTMIterator newDTMIterator(org.apache.xpath.compiler.Compiler,int,boolean)>(r0, i2, $z0);

        $r2 = (org.apache.xpath.Expression) $r1;

        goto label7;

     label4:
        return $r2;

     label5:
        $r3 := @caughtexception;

        goto label8;

     label6:
        throw $r3;

     label7:
        $i4 = r0.<org.apache.xpath.compiler.Compiler: int locPathDepth>;

        $i5 = $i4 - 1;

        r0.<org.apache.xpath.compiler.Compiler: int locPathDepth> = $i5;

        goto label4;

     label8:
        $i6 = r0.<org.apache.xpath.compiler.Compiler: int locPathDepth>;

        $i7 = $i6 - 1;

        r0.<org.apache.xpath.compiler.Compiler: int locPathDepth> = $i7;

        goto label6;

        catch java.lang.Throwable from label1 to label5 with label5;
    }

    public org.apache.xpath.Expression predicate(int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.Expression $r1;
        int i0, $i1;
        org.apache.xpath.compiler.Compiler r0;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i0 := @parameter0: int;

        $i1 = i0 + 2;

        $r1 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression compile(int)>($i1);

        return $r1;
    }

    protected org.apache.xpath.Expression matchPattern(int) throws javax.xml.transform.TransformerException
    {
        java.lang.Throwable $r6;
        org.apache.xpath.compiler.Compiler r0;
        org.apache.xpath.patterns.StepPattern $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, i13, i14;
        org.apache.xpath.Expression $r3, $r5;
        org.apache.xpath.patterns.UnionPattern $r1;
        org.apache.xpath.patterns.StepPattern[] r2;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i11 := @parameter0: int;

        $i0 = r0.<org.apache.xpath.compiler.Compiler: int locPathDepth>;

        $i1 = $i0 + 1;

        r0.<org.apache.xpath.compiler.Compiler: int locPathDepth> = $i1;

     label01:
        i12 = i11;

        i13 = 0;

        goto label03;

     label02:
        i12 = virtualinvoke r0.<org.apache.xpath.compiler.OpMap: int getNextOpPos(int)>(i12);

        i13 = i13 + 1;

     label03:
        $i2 = virtualinvoke r0.<org.apache.xpath.compiler.OpMap: int getOp(int)>(i12);

        if $i2 == 31 goto label02;

        if i13 != 1 goto label05;

        $r5 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression compile(int)>(i11);

        goto label11;

     label04:
        return $r5;

     label05:
        $r1 = new org.apache.xpath.patterns.UnionPattern;

        specialinvoke $r1.<org.apache.xpath.patterns.UnionPattern: void <init>()>();

        r2 = newarray (org.apache.xpath.patterns.StepPattern)[i13];

        i14 = 0;

        goto label07;

     label06:
        $i4 = virtualinvoke r0.<org.apache.xpath.compiler.OpMap: int getNextOpPos(int)>(i11);

        $r3 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression compile(int)>(i11);

        $r4 = (org.apache.xpath.patterns.StepPattern) $r3;

        r2[i14] = $r4;

        i11 = $i4;

        i14 = i14 + 1;

     label07:
        $i3 = virtualinvoke r0.<org.apache.xpath.compiler.OpMap: int getOp(int)>(i11);

        if $i3 == 31 goto label06;

        virtualinvoke $r1.<org.apache.xpath.patterns.UnionPattern: void setPatterns(org.apache.xpath.patterns.StepPattern[])>(r2);

        goto label12;

     label08:
        return $r1;

     label09:
        $r6 := @caughtexception;

        goto label13;

     label10:
        throw $r6;

     label11:
        $i7 = r0.<org.apache.xpath.compiler.Compiler: int locPathDepth>;

        $i8 = $i7 - 1;

        r0.<org.apache.xpath.compiler.Compiler: int locPathDepth> = $i8;

        goto label04;

     label12:
        $i5 = r0.<org.apache.xpath.compiler.Compiler: int locPathDepth>;

        $i6 = $i5 - 1;

        r0.<org.apache.xpath.compiler.Compiler: int locPathDepth> = $i6;

        goto label08;

     label13:
        $i9 = r0.<org.apache.xpath.compiler.Compiler: int locPathDepth>;

        $i10 = $i9 - 1;

        r0.<org.apache.xpath.compiler.Compiler: int locPathDepth> = $i10;

        goto label10;

        catch java.lang.Throwable from label01 to label09 with label09;
    }

    public org.apache.xpath.Expression locationPathPattern(int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.patterns.StepPattern $r1;
        int $i0, i1;
        org.apache.xpath.compiler.Compiler r0;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i1 := @parameter0: int;

        $i0 = staticinvoke <org.apache.xpath.compiler.OpMap: int getFirstChildPos(int)>(i1);

        $r1 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.patterns.StepPattern stepPattern(int,int,org.apache.xpath.patterns.StepPattern)>($i0, 0, null);

        return $r1;
    }

    public int getWhatToShow(int)
    {
        org.apache.xpath.compiler.Compiler r0;
        int i0, $i1, $i2, $i3, $i4, $i6, $i8, $i10, $i12;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<org.apache.xpath.compiler.OpMap: int getOp(int)>(i0);

        $i2 = i0 + 3;

        $i3 = virtualinvoke r0.<org.apache.xpath.compiler.OpMap: int getOp(int)>($i2);

        lookupswitch($i3)
        {
            case 34: goto label12;
            case 35: goto label10;
            case 1030: goto label01;
            case 1031: goto label02;
            case 1032: goto label03;
            case 1033: goto label04;
            case 1034: goto label11;
            default: goto label17;
        };

     label01:
        return 128;

     label02:
        return 12;

     label03:
        return 64;

     label04:
        tableswitch($i1)
        {
            case 38: goto label07;
            case 39: goto label06;
            case 40: goto label08;
            case 41: goto label08;
            case 42: goto label07;
            case 43: goto label08;
            case 44: goto label08;
            case 45: goto label08;
            case 46: goto label08;
            case 47: goto label08;
            case 48: goto label07;
            case 49: goto label05;
            case 50: goto label08;
            case 51: goto label06;
            default: goto label08;
        };

     label05:
        return 4096;

     label06:
        return 2;

     label07:
        $i6 = (int) -1;

        return $i6;

     label08:
        $i4 = virtualinvoke r0.<org.apache.xpath.compiler.OpMap: int getOp(int)>(0);

        if $i4 != 30 goto label09;

        $i8 = (int) -1283;

        return $i8;

     label09:
        $i10 = (int) -3;

        return $i10;

     label10:
        return 1280;

     label11:
        return 65536;

     label12:
        tableswitch($i1)
        {
            case 39: goto label14;
            case 40: goto label16;
            case 41: goto label16;
            case 42: goto label16;
            case 43: goto label16;
            case 44: goto label16;
            case 45: goto label16;
            case 46: goto label16;
            case 47: goto label16;
            case 48: goto label16;
            case 49: goto label13;
            case 50: goto label16;
            case 51: goto label14;
            case 52: goto label15;
            case 53: goto label15;
            default: goto label16;
        };

     label13:
        return 4096;

     label14:
        return 2;

     label15:
        return 1;

     label16:
        return 1;

     label17:
        $i12 = (int) -1;

        return $i12;
    }

    protected org.apache.xpath.patterns.StepPattern stepPattern(int, int, org.apache.xpath.patterns.StepPattern) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.Expression[] $r16;
        org.apache.xpath.compiler.Compiler r0;
        org.apache.xpath.patterns.StepPattern r4, $r5, r15, $r17, $r19, $r20, $r21, $r22;
        org.apache.xpath.patterns.FunctionPattern $r18;
        int i0, $i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, i9, i10, $i11, $i13;
        java.lang.String $r2, $r3, $r7, $r8, $r10, $r11;
        org.apache.xpath.Expression $r14;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i9 := @parameter0: int;

        i4 := @parameter1: int;

        r4 := @parameter2: org.apache.xpath.patterns.StepPattern;

        i0 = i9;

        $i1 = virtualinvoke r0.<org.apache.xpath.compiler.OpMap: int getOp(int)>(i9);

        $i13 = (int) -1;

        if $i13 != $i1 goto label01;

        return null;

     label01:
        $i2 = virtualinvoke r0.<org.apache.xpath.compiler.OpMap: int getNextOpPos(int)>(i9);

        lookupswitch($i1)
        {
            case 25: goto label02;
            case 50: goto label03;
            case 51: goto label04;
            case 52: goto label05;
            case 53: goto label07;
            default: goto label08;
        };

     label02:
        $i8 = i9 + 1;

        i10 = virtualinvoke r0.<org.apache.xpath.compiler.OpMap: int getOp(int)>($i8);

        $r18 = new org.apache.xpath.patterns.FunctionPattern;

        $r14 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression compileFunction(int)>(i9);

        specialinvoke $r18.<org.apache.xpath.patterns.FunctionPattern: void <init>(org.apache.xpath.Expression,int,int)>($r14, 10, 3);

        r15 = $r18;

        goto label09;

     label03:
        i10 = virtualinvoke r0.<org.apache.xpath.compiler.OpMap: int getArgLengthOfStep(int)>(i9);

        i9 = staticinvoke <org.apache.xpath.compiler.OpMap: int getFirstChildPosOfStep(int)>(i9);

        $r19 = new org.apache.xpath.patterns.StepPattern;

        specialinvoke $r19.<org.apache.xpath.patterns.StepPattern: void <init>(int,int,int)>(1280, 10, 3);

        r15 = $r19;

        goto label09;

     label04:
        i10 = virtualinvoke r0.<org.apache.xpath.compiler.OpMap: int getArgLengthOfStep(int)>(i9);

        i9 = staticinvoke <org.apache.xpath.compiler.OpMap: int getFirstChildPosOfStep(int)>(i9);

        $r20 = new org.apache.xpath.patterns.StepPattern;

        $r10 = virtualinvoke r0.<org.apache.xpath.compiler.OpMap: java.lang.String getStepNS(int)>(i0);

        $r11 = virtualinvoke r0.<org.apache.xpath.compiler.OpMap: java.lang.String getStepLocalName(int)>(i0);

        specialinvoke $r20.<org.apache.xpath.patterns.StepPattern: void <init>(int,java.lang.String,java.lang.String,int,int)>(2, $r10, $r11, 10, 2);

        r15 = $r20;

        goto label09;

     label05:
        i10 = virtualinvoke r0.<org.apache.xpath.compiler.OpMap: int getArgLengthOfStep(int)>(i9);

        i9 = staticinvoke <org.apache.xpath.compiler.OpMap: int getFirstChildPosOfStep(int)>(i9);

        $i6 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: int getWhatToShow(int)>(i0);

        if 1280 != $i6 goto label06;

     label06:
        $r21 = new org.apache.xpath.patterns.StepPattern;

        $i7 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: int getWhatToShow(int)>(i0);

        $r7 = virtualinvoke r0.<org.apache.xpath.compiler.OpMap: java.lang.String getStepNS(int)>(i0);

        $r8 = virtualinvoke r0.<org.apache.xpath.compiler.OpMap: java.lang.String getStepLocalName(int)>(i0);

        specialinvoke $r21.<org.apache.xpath.patterns.StepPattern: void <init>(int,java.lang.String,java.lang.String,int,int)>($i7, $r7, $r8, 0, 3);

        r15 = $r21;

        goto label09;

     label07:
        i10 = virtualinvoke r0.<org.apache.xpath.compiler.OpMap: int getArgLengthOfStep(int)>(i9);

        i9 = staticinvoke <org.apache.xpath.compiler.OpMap: int getFirstChildPosOfStep(int)>(i9);

        $r22 = new org.apache.xpath.patterns.StepPattern;

        $i3 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: int getWhatToShow(int)>(i0);

        $r2 = virtualinvoke r0.<org.apache.xpath.compiler.OpMap: java.lang.String getStepNS(int)>(i0);

        $r3 = virtualinvoke r0.<org.apache.xpath.compiler.OpMap: java.lang.String getStepLocalName(int)>(i0);

        specialinvoke $r22.<org.apache.xpath.patterns.StepPattern: void <init>(int,java.lang.String,java.lang.String,int,int)>($i3, $r2, $r3, 10, 3);

        r15 = $r22;

        goto label09;

     label08:
        virtualinvoke r0.<org.apache.xpath.compiler.Compiler: void error(java.lang.String,java.lang.Object[])>("ER_UNKNOWN_MATCH_OPERATION", null);

        return null;

     label09:
        $i11 = i9 + i10;

        $r16 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression[] getCompiledPredicates(int)>($i11);

        virtualinvoke r15.<org.apache.xpath.patterns.StepPattern: void setPredicates(org.apache.xpath.Expression[])>($r16);

        if null != r4 goto label10;

        goto label11;

     label10:
        virtualinvoke r15.<org.apache.xpath.patterns.StepPattern: void setRelativePathPattern(org.apache.xpath.patterns.StepPattern)>(r4);

     label11:
        $i5 = i4 + 1;

        $r5 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.patterns.StepPattern stepPattern(int,int,org.apache.xpath.patterns.StepPattern)>($i2, $i5, r15);

        if null == $r5 goto label12;

        $r17 = $r5;

        goto label13;

     label12:
        $r17 = r15;

     label13:
        return $r17;
    }

    public org.apache.xpath.Expression[] getCompiledPredicates(int) throws javax.xml.transform.TransformerException
    {
        int i0, $i1;
        org.apache.xpath.Expression[] r1;
        org.apache.xpath.compiler.Compiler r0;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: int countPredicates(int)>(i0);

        if $i1 <= 0 goto label1;

        r1 = newarray (org.apache.xpath.Expression)[$i1];

        specialinvoke r0.<org.apache.xpath.compiler.Compiler: void compilePredicates(int,org.apache.xpath.Expression[])>(i0, r1);

        return r1;

     label1:
        return null;
    }

    public int countPredicates(int) throws javax.xml.transform.TransformerException
    {
        int $i0, i1, i2;
        org.apache.xpath.compiler.Compiler r0;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i1 := @parameter0: int;

        i2 = 0;

        goto label2;

     label1:
        i2 = i2 + 1;

        i1 = virtualinvoke r0.<org.apache.xpath.compiler.OpMap: int getNextOpPos(int)>(i1);

     label2:
        $i0 = virtualinvoke r0.<org.apache.xpath.compiler.OpMap: int getOp(int)>(i1);

        if 29 == $i0 goto label1;

        return i2;
    }

    private void compilePredicates(int, org.apache.xpath.Expression[]) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.Expression $r2;
        int $i0, i1, i2;
        org.apache.xpath.Expression[] r1;
        org.apache.xpath.compiler.Compiler r0;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i1 := @parameter0: int;

        r1 := @parameter1: org.apache.xpath.Expression[];

        i2 = 0;

        goto label2;

     label1:
        $r2 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression predicate(int)>(i1);

        r1[i2] = $r2;

        i1 = virtualinvoke r0.<org.apache.xpath.compiler.OpMap: int getNextOpPos(int)>(i1);

        i2 = i2 + 1;

     label2:
        $i0 = virtualinvoke r0.<org.apache.xpath.compiler.OpMap: int getOp(int)>(i1);

        if 29 == $i0 goto label1;

        return;
    }

    org.apache.xpath.Expression compileFunction(int) throws javax.xml.transform.TransformerException
    {
        java.lang.Object[] $r8;
        javax.xml.transform.TransformerException $r13;
        javax.xml.transform.ErrorListener $r9;
        org.apache.xpath.compiler.Compiler r0;
        int $i0, $i1, $i2, i3, $i4, $i5, i6, i7, i8, i9, $i11;
        java.lang.String $r6, $r10, $r11;
        org.apache.xpath.Expression $r2;
        javax.xml.transform.SourceLocator $r12;
        org.apache.xpath.functions.WrongNumberArgsException $r3;
        org.apache.xpath.functions.Function $r1;
        org.apache.xpath.compiler.FuncLoader $r5;
        org.apache.xpath.compiler.FuncLoader[] $r4;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i6 := @parameter0: int;

        $i0 = i6 + 1;

        $i1 = virtualinvoke r0.<org.apache.xpath.compiler.OpMap: int getOp(int)>($i0);

        $i2 = i6 + $i1;

        i3 = $i2 - 1;

        $i4 = staticinvoke <org.apache.xpath.compiler.OpMap: int getFirstChildPos(int)>(i6);

        $i5 = virtualinvoke r0.<org.apache.xpath.compiler.OpMap: int getOp(int)>($i4);

        i7 = $i4 + 1;

        $i11 = (int) -1;

        if $i11 == $i5 goto label7;

        $r1 = staticinvoke <org.apache.xpath.compiler.FunctionTable: org.apache.xpath.functions.Function getFunction(int)>($i5);

        virtualinvoke $r1.<org.apache.xpath.functions.Function: void postCompileStep(org.apache.xpath.compiler.Compiler)>(r0);

     label1:
        i8 = 0;

        i9 = i7;

        goto label3;

     label2:
        $r2 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression compile(int)>(i9);

        virtualinvoke $r1.<org.apache.xpath.functions.Function: void setArg(org.apache.xpath.Expression,int)>($r2, i8);

        i9 = virtualinvoke r0.<org.apache.xpath.compiler.OpMap: int getNextOpPos(int)>(i9);

        i8 = i8 + 1;

     label3:
        if i9 < i3 goto label2;

        virtualinvoke $r1.<org.apache.xpath.functions.Function: void checkNumberArgs(int)>(i8);

     label4:
        goto label6;

     label5:
        $r3 := @caughtexception;

        $r4 = <org.apache.xpath.compiler.FunctionTable: org.apache.xpath.compiler.FuncLoader[] m_functions>;

        $r5 = $r4[$i5];

        $r6 = virtualinvoke $r5.<org.apache.xpath.compiler.FuncLoader: java.lang.String getName()>();

        $r9 = r0.<org.apache.xpath.compiler.Compiler: javax.xml.transform.ErrorListener m_errorHandler>;

        $r13 = new javax.xml.transform.TransformerException;

        $r8 = newarray (java.lang.Object)[2];

        $r8[0] = $r6;

        $r10 = virtualinvoke $r3.<java.lang.Throwable: java.lang.String getMessage()>();

        $r8[1] = $r10;

        $r11 = staticinvoke <org.apache.xpath.res.XPATHMessages: java.lang.String createXPATHMessage(java.lang.String,java.lang.Object[])>("ER_ONLY_ALLOWS", $r8);

        $r12 = r0.<org.apache.xpath.compiler.Compiler: javax.xml.transform.SourceLocator m_locator>;

        specialinvoke $r13.<javax.xml.transform.TransformerException: void <init>(java.lang.String,javax.xml.transform.SourceLocator)>($r11, $r12);

        interfaceinvoke $r9.<javax.xml.transform.ErrorListener: void fatalError(javax.xml.transform.TransformerException)>($r13);

     label6:
        return $r1;

     label7:
        virtualinvoke r0.<org.apache.xpath.compiler.Compiler: void error(java.lang.String,java.lang.Object[])>("ER_FUNCTION_TOKEN_NOT_FOUND", null);

        return null;

        catch org.apache.xpath.functions.WrongNumberArgsException from label1 to label4 with label5;
    }

    private synchronized long getNextMethodId()
    {
        byte $b1;
        long $l0, $l2, $l3;
        org.apache.xpath.compiler.Compiler r0;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        $l0 = <org.apache.xpath.compiler.Compiler: long s_nextMethodId>;

        $b1 = $l0 cmp 9223372036854775807L;

        if $b1 != 0 goto label1;

        <org.apache.xpath.compiler.Compiler: long s_nextMethodId> = 0L;

     label1:
        $l2 = <org.apache.xpath.compiler.Compiler: long s_nextMethodId>;

        $l3 = $l2 + 1L;

        <org.apache.xpath.compiler.Compiler: long s_nextMethodId> = $l3;

        return $l2;
    }

    private org.apache.xpath.Expression compileExtension(int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.functions.FuncExtFunction $r7;
        org.apache.xml.utils.ObjectVector $r1, $r4;
        long $l7;
        org.apache.xpath.compiler.Compiler r0;
        int $i0, $i1, $i2, i3, $i4, $i5, $i6, $i8, i9, i10, i11, i12;
        java.lang.String r3, r6, $r8;
        org.apache.xpath.Expression $r9;
        org.apache.xpath.functions.WrongNumberArgsException $r10;
        java.lang.Object $r2, $r5;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i9 := @parameter0: int;

        $i0 = i9 + 1;

        $i1 = virtualinvoke r0.<org.apache.xpath.compiler.OpMap: int getOp(int)>($i0);

        $i2 = i9 + $i1;

        i3 = $i2 - 1;

        $i4 = staticinvoke <org.apache.xpath.compiler.OpMap: int getFirstChildPos(int)>(i9);

        $r1 = virtualinvoke r0.<org.apache.xpath.compiler.OpMap: org.apache.xml.utils.ObjectVector getTokenQueue()>();

        $i5 = virtualinvoke r0.<org.apache.xpath.compiler.OpMap: int getOp(int)>($i4);

        $r2 = virtualinvoke $r1.<org.apache.xml.utils.ObjectVector: java.lang.Object elementAt(int)>($i5);

        r3 = (java.lang.String) $r2;

        i10 = $i4 + 1;

        $r4 = virtualinvoke r0.<org.apache.xpath.compiler.OpMap: org.apache.xml.utils.ObjectVector getTokenQueue()>();

        $i6 = virtualinvoke r0.<org.apache.xpath.compiler.OpMap: int getOp(int)>(i10);

        $r5 = virtualinvoke $r4.<org.apache.xml.utils.ObjectVector: java.lang.Object elementAt(int)>($i6);

        r6 = (java.lang.String) $r5;

        i11 = i10 + 1;

        $r7 = new org.apache.xpath.functions.FuncExtFunction;

        $l7 = specialinvoke r0.<org.apache.xpath.compiler.Compiler: long getNextMethodId()>();

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l7);

        specialinvoke $r7.<org.apache.xpath.functions.FuncExtFunction: void <init>(java.lang.String,java.lang.String,java.lang.Object)>(r3, r6, $r8);

     label1:
        i12 = 0;

        goto label3;

     label2:
        $i8 = virtualinvoke r0.<org.apache.xpath.compiler.OpMap: int getNextOpPos(int)>(i11);

        $r9 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression compile(int)>(i11);

        virtualinvoke $r7.<org.apache.xpath.functions.Function: void setArg(org.apache.xpath.Expression,int)>($r9, i12);

        i11 = $i8;

        i12 = i12 + 1;

     label3:
        if i11 < i3 goto label2;

     label4:
        goto label6;

     label5:
        $r10 := @caughtexception;

     label6:
        return $r7;

        catch org.apache.xpath.functions.WrongNumberArgsException from label1 to label4 with label5;
    }

    public void warn(java.lang.String, java.lang.Object[]) throws javax.xml.transform.TransformerException
    {
        java.lang.Object[] r1;
        javax.xml.transform.TransformerException $r19;
        javax.xml.transform.ErrorListener $r4, $r21;
        org.apache.xpath.compiler.Compiler r3;
        java.lang.StringBuffer $r5, $r7, $r8, $r11, $r12, $r14, $r15, $r17;
        int $i0, $i1;
        java.lang.String r0, $r2, $r10, $r18;
        java.io.PrintStream $r6;
        javax.xml.transform.SourceLocator $r9, $r13, $r16, $r20;

        r3 := @this: org.apache.xpath.compiler.Compiler;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Object[];

        $r2 = staticinvoke <org.apache.xpath.res.XPATHMessages: java.lang.String createXPATHWarning(java.lang.String,java.lang.Object[])>(r0, r1);

        $r4 = r3.<org.apache.xpath.compiler.Compiler: javax.xml.transform.ErrorListener m_errorHandler>;

        if null == $r4 goto label1;

        $r21 = r3.<org.apache.xpath.compiler.Compiler: javax.xml.transform.ErrorListener m_errorHandler>;

        $r19 = new javax.xml.transform.TransformerException;

        $r20 = r3.<org.apache.xpath.compiler.Compiler: javax.xml.transform.SourceLocator m_locator>;

        specialinvoke $r19.<javax.xml.transform.TransformerException: void <init>(java.lang.String,javax.xml.transform.SourceLocator)>($r2, $r20);

        interfaceinvoke $r21.<javax.xml.transform.ErrorListener: void warning(javax.xml.transform.TransformerException)>($r19);

        goto label2;

     label1:
        $r6 = <java.lang.System: java.io.PrintStream out>;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; file ");

        $r9 = r3.<org.apache.xpath.compiler.Compiler: javax.xml.transform.SourceLocator m_locator>;

        $r10 = interfaceinvoke $r9.<javax.xml.transform.SourceLocator: java.lang.String getSystemId()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; line ");

        $r13 = r3.<org.apache.xpath.compiler.Compiler: javax.xml.transform.SourceLocator m_locator>;

        $i0 = interfaceinvoke $r13.<javax.xml.transform.SourceLocator: int getLineNumber()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; column ");

        $r16 = r3.<org.apache.xpath.compiler.Compiler: javax.xml.transform.SourceLocator m_locator>;

        $i1 = interfaceinvoke $r16.<javax.xml.transform.SourceLocator: int getColumnNumber()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r18);

     label2:
        return;
    }

    public void assertion(boolean, java.lang.String)
    {
        java.lang.Object[] $r0;
        java.lang.String r1, $r2;
        java.lang.RuntimeException $r3;
        org.apache.xpath.compiler.Compiler r4;
        boolean z0;

        r4 := @this: org.apache.xpath.compiler.Compiler;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.String;

        if z0 != 0 goto label1;

        $r0 = newarray (java.lang.Object)[1];

        $r0[0] = r1;

        $r2 = staticinvoke <org.apache.xpath.res.XPATHMessages: java.lang.String createXPATHMessage(java.lang.String,java.lang.Object[])>("ER_INCORRECT_PROGRAMMER_ASSERTION", $r0);

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>($r2);

        throw $r3;

     label1:
        return;
    }

    public void error(java.lang.String, java.lang.Object[]) throws javax.xml.transform.TransformerException
    {
        javax.xml.transform.SourceLocator $r6, $r9;
        java.lang.Object[] r1;
        javax.xml.transform.TransformerException $r5, $r8;
        javax.xml.transform.ErrorListener $r4, $r10;
        org.apache.xpath.compiler.Compiler r3;
        org.apache.xml.utils.SAXSourceLocator $r7;
        java.lang.String r0, $r2;

        r3 := @this: org.apache.xpath.compiler.Compiler;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Object[];

        $r2 = staticinvoke <org.apache.xpath.res.XPATHMessages: java.lang.String createXPATHMessage(java.lang.String,java.lang.Object[])>(r0, r1);

        $r4 = r3.<org.apache.xpath.compiler.Compiler: javax.xml.transform.ErrorListener m_errorHandler>;

        if null == $r4 goto label1;

        $r10 = r3.<org.apache.xpath.compiler.Compiler: javax.xml.transform.ErrorListener m_errorHandler>;

        $r8 = new javax.xml.transform.TransformerException;

        $r9 = r3.<org.apache.xpath.compiler.Compiler: javax.xml.transform.SourceLocator m_locator>;

        specialinvoke $r8.<javax.xml.transform.TransformerException: void <init>(java.lang.String,javax.xml.transform.SourceLocator)>($r2, $r9);

        interfaceinvoke $r10.<javax.xml.transform.ErrorListener: void fatalError(javax.xml.transform.TransformerException)>($r8);

        goto label2;

     label1:
        $r5 = new javax.xml.transform.TransformerException;

        $r6 = r3.<org.apache.xpath.compiler.Compiler: javax.xml.transform.SourceLocator m_locator>;

        $r7 = (org.apache.xml.utils.SAXSourceLocator) $r6;

        specialinvoke $r5.<javax.xml.transform.TransformerException: void <init>(java.lang.String,javax.xml.transform.SourceLocator)>($r2, $r7);

        throw $r5;

     label2:
        return;
    }

    public org.apache.xml.utils.PrefixResolver getNamespaceContext()
    {
        org.apache.xml.utils.PrefixResolver $r1;
        org.apache.xpath.compiler.Compiler r0;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        $r1 = r0.<org.apache.xpath.compiler.Compiler: org.apache.xml.utils.PrefixResolver m_currentPrefixResolver>;

        return $r1;
    }

    public void setNamespaceContext(org.apache.xml.utils.PrefixResolver)
    {
        org.apache.xml.utils.PrefixResolver r1;
        org.apache.xpath.compiler.Compiler r0;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        r1 := @parameter0: org.apache.xml.utils.PrefixResolver;

        r0.<org.apache.xpath.compiler.Compiler: org.apache.xml.utils.PrefixResolver m_currentPrefixResolver> = r1;

        return;
    }

    static void <clinit>()
    {
        <org.apache.xpath.compiler.Compiler: boolean DEBUG> = 0;

        <org.apache.xpath.compiler.Compiler: long s_nextMethodId> = 0L;

        return;
    }
}
