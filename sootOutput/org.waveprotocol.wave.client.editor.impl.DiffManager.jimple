public class org.waveprotocol.wave.client.editor.impl.DiffManager extends java.lang.Object implements org.waveprotocol.wave.client.editor.content.TransparentManager
{
    private static final org.waveprotocol.wave.client.editor.impl.DiffManagerResources resources;
    private static final java.lang.String DIFF_KEY;
    private final java.util.List elements;

    public void <init>()
    {
        org.waveprotocol.wave.client.editor.impl.DiffManager r0;
        java.util.ArrayList $r1;

        r0 := @this: org.waveprotocol.wave.client.editor.impl.DiffManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.waveprotocol.wave.client.editor.impl.DiffManager: java.util.List elements> = $r1;

        return;
    }

    public org.waveprotocol.wave.client.editor.impl.DiffManager$DiffType getDiffType(com.google.gwt.dom.client.Element)
    {
        org.waveprotocol.wave.client.editor.impl.DiffManager$DiffType $r5;
        com.google.gwt.dom.client.Element r0;
        java.lang.Object $r4;
        java.lang.String $r3;
        org.waveprotocol.wave.client.editor.content.TransparentManager $r1;
        org.waveprotocol.wave.client.editor.impl.DiffManager r2;

        r2 := @this: org.waveprotocol.wave.client.editor.impl.DiffManager;

        r0 := @parameter0: com.google.gwt.dom.client.Element;

        if r0 == null goto label1;

        $r1 = staticinvoke <org.waveprotocol.wave.client.editor.impl.NodeManager: org.waveprotocol.wave.client.editor.content.TransparentManager getTransparentManager(com.google.gwt.dom.client.Element)>(r0);

        if $r1 == r2 goto label2;

     label1:
        $r5 = null;

        goto label3;

     label2:
        $r3 = <org.waveprotocol.wave.client.editor.impl.DiffManager: java.lang.String DIFF_KEY>;

        $r4 = virtualinvoke r0.<com.google.gwt.dom.client.Element: java.lang.Object getPropertyObject(java.lang.String)>($r3);

        $r5 = (org.waveprotocol.wave.client.editor.impl.DiffManager$DiffType) $r4;

     label3:
        return $r5;
    }

    public com.google.gwt.dom.client.Element createElement(org.waveprotocol.wave.client.editor.impl.DiffManager$DiffType)
    {
        org.waveprotocol.wave.client.editor.impl.DiffManager$DiffType r2;
        int[] $r5;
        int $i0, $i1;
        java.lang.String $r3;
        org.waveprotocol.wave.model.document.util.FilteredView$Skip $r6, $r7;
        org.waveprotocol.wave.client.editor.impl.DiffManager r4;
        com.google.gwt.dom.client.SpanElement $r1;
        java.util.List $r8;
        com.google.gwt.dom.client.Element $r9, $r10, $r11, $r12, $r13;
        com.google.gwt.dom.client.Document $r0;

        r4 := @this: org.waveprotocol.wave.client.editor.impl.DiffManager;

        r2 := @parameter0: org.waveprotocol.wave.client.editor.impl.DiffManager$DiffType;

        $r0 = staticinvoke <com.google.gwt.dom.client.Document: com.google.gwt.dom.client.Document get()>();

        $r1 = virtualinvoke $r0.<com.google.gwt.dom.client.Document: com.google.gwt.dom.client.SpanElement createSpanElement()>();

        $r3 = <org.waveprotocol.wave.client.editor.impl.DiffManager: java.lang.String DIFF_KEY>;

        virtualinvoke $r1.<com.google.gwt.dom.client.SpanElement: void setPropertyObject(java.lang.String,java.lang.Object)>($r3, r2);

        $r9 = (com.google.gwt.dom.client.Element) $r1;

        staticinvoke <org.waveprotocol.wave.client.editor.impl.NodeManager: void setTransparentBackref(com.google.gwt.dom.client.Element,org.waveprotocol.wave.client.editor.content.TransparentManager)>($r9, r4);

        $r5 = <org.waveprotocol.wave.client.editor.impl.DiffManager$1: int[] $SwitchMap$org$waveprotocol$wave$client$editor$impl$DiffManager$DiffType>;

        $i0 = virtualinvoke r2.<org.waveprotocol.wave.client.editor.impl.DiffManager$DiffType: int ordinal()>();

        $i1 = $r5[$i0];

        lookupswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label1:
        $r7 = <org.waveprotocol.wave.model.document.util.FilteredView$Skip: org.waveprotocol.wave.model.document.util.FilteredView$Skip SHALLOW>;

        $r10 = (com.google.gwt.dom.client.Element) $r1;

        staticinvoke <org.waveprotocol.wave.client.editor.impl.NodeManager: void setTransparency(com.google.gwt.dom.client.Element,org.waveprotocol.wave.model.document.util.FilteredView$Skip)>($r10, $r7);

        goto label3;

     label2:
        $r6 = <org.waveprotocol.wave.model.document.util.FilteredView$Skip: org.waveprotocol.wave.model.document.util.FilteredView$Skip DEEP>;

        $r11 = (com.google.gwt.dom.client.Element) $r1;

        staticinvoke <org.waveprotocol.wave.client.editor.impl.NodeManager: void setTransparency(com.google.gwt.dom.client.Element,org.waveprotocol.wave.model.document.util.FilteredView$Skip)>($r11, $r6);

     label3:
        $r12 = (com.google.gwt.dom.client.Element) $r1;

        staticinvoke <org.waveprotocol.wave.client.editor.impl.DiffManager: void styleElement(com.google.gwt.dom.client.Element,org.waveprotocol.wave.client.editor.impl.DiffManager$DiffType)>($r12, r2);

        $r8 = r4.<org.waveprotocol.wave.client.editor.impl.DiffManager: java.util.List elements>;

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r1);

        $r13 = (com.google.gwt.dom.client.Element) $r1;

        return $r13;
    }

    public static void styleElement(com.google.gwt.dom.client.Element, org.waveprotocol.wave.client.editor.impl.DiffManager$DiffType)
    {
        org.waveprotocol.wave.client.editor.impl.DiffManagerResources $r3, $r7;
        org.waveprotocol.wave.client.editor.impl.DiffManagerResources$Css $r4, $r8;
        org.waveprotocol.wave.client.editor.impl.DiffManager$DiffType r0;
        int[] $r1;
        int $i0, $i1;
        com.google.gwt.dom.client.Element r2;
        java.lang.String $r5, $r9;
        org.waveprotocol.wave.model.document.util.FilteredView$Skip $r6;

        r2 := @parameter0: com.google.gwt.dom.client.Element;

        r0 := @parameter1: org.waveprotocol.wave.client.editor.impl.DiffManager$DiffType;

        $r1 = <org.waveprotocol.wave.client.editor.impl.DiffManager$1: int[] $SwitchMap$org$waveprotocol$wave$client$editor$impl$DiffManager$DiffType>;

        $i0 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.impl.DiffManager$DiffType: int ordinal()>();

        $i1 = $r1[$i0];

        lookupswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label1:
        $r7 = <org.waveprotocol.wave.client.editor.impl.DiffManager: org.waveprotocol.wave.client.editor.impl.DiffManagerResources resources>;

        $r8 = interfaceinvoke $r7.<org.waveprotocol.wave.client.editor.impl.DiffManagerResources: org.waveprotocol.wave.client.editor.impl.DiffManagerResources$Css css()>();

        $r9 = interfaceinvoke $r8.<org.waveprotocol.wave.client.editor.impl.DiffManagerResources$Css: java.lang.String insert()>();

        virtualinvoke r2.<com.google.gwt.dom.client.Element: void addClassName(java.lang.String)>($r9);

        goto label3;

     label2:
        $r3 = <org.waveprotocol.wave.client.editor.impl.DiffManager: org.waveprotocol.wave.client.editor.impl.DiffManagerResources resources>;

        $r4 = interfaceinvoke $r3.<org.waveprotocol.wave.client.editor.impl.DiffManagerResources: org.waveprotocol.wave.client.editor.impl.DiffManagerResources$Css css()>();

        $r5 = interfaceinvoke $r4.<org.waveprotocol.wave.client.editor.impl.DiffManagerResources$Css: java.lang.String delete()>();

        virtualinvoke r2.<com.google.gwt.dom.client.Element: void addClassName(java.lang.String)>($r5);

        $r6 = <org.waveprotocol.wave.model.document.util.FilteredView$Skip: org.waveprotocol.wave.model.document.util.FilteredView$Skip DEEP>;

        staticinvoke <org.waveprotocol.wave.client.editor.impl.NodeManager: void setTransparency(com.google.gwt.dom.client.Element,org.waveprotocol.wave.model.document.util.FilteredView$Skip)>(r2, $r6);

        virtualinvoke r2.<com.google.gwt.dom.client.Element: void setAttribute(java.lang.String,java.lang.String)>("contentEditable", "false");

     label3:
        return;
    }

    public void clear()
    {
        java.util.List $r1;
        org.waveprotocol.wave.client.editor.impl.DiffManager r0;

        r0 := @this: org.waveprotocol.wave.client.editor.impl.DiffManager;

        $r1 = r0.<org.waveprotocol.wave.client.editor.impl.DiffManager: java.util.List elements>;

        staticinvoke <org.waveprotocol.wave.client.editor.impl.TransparencyUtil: void clear(java.util.List)>($r1);

        return;
    }

    public void clearFast()
    {
        java.util.Iterator $r2;
        java.util.List $r1, $r3;
        com.google.gwt.dom.client.Element r5;
        java.lang.Object $r4;
        java.lang.String $r6;
        org.waveprotocol.wave.client.editor.impl.DiffManager r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.client.editor.impl.DiffManager;

        $r1 = r0.<org.waveprotocol.wave.client.editor.impl.DiffManager: java.util.List elements>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.google.gwt.dom.client.Element) $r4;

        $r6 = <org.waveprotocol.wave.client.editor.impl.DiffManager: java.lang.String DIFF_KEY>;

        virtualinvoke r5.<com.google.gwt.dom.client.Element: void setPropertyObject(java.lang.String,java.lang.Object)>($r6, null);

        goto label1;

     label2:
        $r3 = r0.<org.waveprotocol.wave.client.editor.impl.DiffManager: java.util.List elements>;

        interfaceinvoke $r3.<java.util.List: void clear()>();

        return;
    }

    public com.google.gwt.dom.client.Element needToSplit(com.google.gwt.dom.client.Element)
    {
        org.waveprotocol.wave.client.editor.impl.DiffManager$DiffType r3;
        com.google.gwt.dom.client.Element r0, $r5;
        java.lang.Object $r2;
        java.lang.String $r1;
        java.lang.IllegalArgumentException $r6;
        org.waveprotocol.wave.client.editor.impl.DiffManager r4;

        r4 := @this: org.waveprotocol.wave.client.editor.impl.DiffManager;

        r0 := @parameter0: com.google.gwt.dom.client.Element;

        $r1 = <org.waveprotocol.wave.client.editor.impl.DiffManager: java.lang.String DIFF_KEY>;

        $r2 = virtualinvoke r0.<com.google.gwt.dom.client.Element: java.lang.Object getPropertyObject(java.lang.String)>($r1);

        r3 = (org.waveprotocol.wave.client.editor.impl.DiffManager$DiffType) $r2;

        if r3 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("No diff type known for given node");

        throw $r6;

     label1:
        $r5 = virtualinvoke r4.<org.waveprotocol.wave.client.editor.impl.DiffManager: com.google.gwt.dom.client.Element createElement(org.waveprotocol.wave.client.editor.impl.DiffManager$DiffType)>(r3);

        return $r5;
    }

    public volatile java.lang.Object needToSplit(java.lang.Object)
    {
        com.google.gwt.dom.client.Element $r2, $r3;
        java.lang.Object r1;
        org.waveprotocol.wave.client.editor.impl.DiffManager r0;

        r0 := @this: org.waveprotocol.wave.client.editor.impl.DiffManager;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.google.gwt.dom.client.Element) r1;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.impl.DiffManager: com.google.gwt.dom.client.Element needToSplit(com.google.gwt.dom.client.Element)>($r2);

        return $r3;
    }

    static void <clinit>()
    {
        org.waveprotocol.wave.client.editor.impl.DiffManagerResources $r1, $r2;
        org.waveprotocol.wave.client.editor.impl.DiffManagerResources$Css $r3;
        java.lang.Object $r0;
        java.lang.String $r4, $r5;

        $r0 = staticinvoke <com.google.gwt.core.client.GWT: java.lang.Object create(java.lang.Class)>(class "Lorg/waveprotocol/wave/client/editor/impl/DiffManagerResources;");

        $r1 = (org.waveprotocol.wave.client.editor.impl.DiffManagerResources) $r0;

        <org.waveprotocol.wave.client.editor.impl.DiffManager: org.waveprotocol.wave.client.editor.impl.DiffManagerResources resources> = $r1;

        $r2 = <org.waveprotocol.wave.client.editor.impl.DiffManager: org.waveprotocol.wave.client.editor.impl.DiffManagerResources resources>;

        $r3 = interfaceinvoke $r2.<org.waveprotocol.wave.client.editor.impl.DiffManagerResources: org.waveprotocol.wave.client.editor.impl.DiffManagerResources$Css css()>();

        $r4 = interfaceinvoke $r3.<org.waveprotocol.wave.client.editor.impl.DiffManagerResources$Css: java.lang.String getText()>();

        staticinvoke <com.google.gwt.dom.client.StyleInjector: void inject(java.lang.String,boolean)>($r4, 1);

        $r5 = staticinvoke <org.waveprotocol.wave.client.editor.impl.NodeManager: java.lang.String getNextMarkerName(java.lang.String)>("dt");

        <org.waveprotocol.wave.client.editor.impl.DiffManager: java.lang.String DIFF_KEY> = $r5;

        return;
    }
}
