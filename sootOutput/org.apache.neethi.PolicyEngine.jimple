public class org.apache.neethi.PolicyEngine extends java.lang.Object
{
    public static final java.lang.String POLICY_NAMESPACE;
    public static final java.lang.String POLICY;
    public static final java.lang.String EXACTLY_ONE;
    public static final java.lang.String ALL;
    public static final java.lang.String POLICY_REF;
    private static org.apache.neethi.PolicyBuilder builder;

    public void <init>()
    {
        org.apache.neethi.PolicyEngine r0;

        r0 := @this: org.apache.neethi.PolicyEngine;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static synchronized org.apache.neethi.PolicyBuilder getBuilder()
    {
        org.apache.neethi.PolicyBuilder $r0, $r1, $r2;

        $r0 = <org.apache.neethi.PolicyEngine: org.apache.neethi.PolicyBuilder builder>;

        if $r0 != null goto label1;

        $r2 = new org.apache.neethi.PolicyBuilder;

        specialinvoke $r2.<org.apache.neethi.PolicyBuilder: void <init>()>();

        <org.apache.neethi.PolicyEngine: org.apache.neethi.PolicyBuilder builder> = $r2;

     label1:
        $r1 = <org.apache.neethi.PolicyEngine: org.apache.neethi.PolicyBuilder builder>;

        return $r1;
    }

    public static void registerBuilder(javax.xml.namespace.QName, org.apache.neethi.builders.AssertionBuilder)
    {
        org.apache.neethi.PolicyBuilder $r0;
        org.apache.neethi.AssertionBuilderFactory $r1;
        org.apache.neethi.builders.AssertionBuilder r3;
        javax.xml.namespace.QName r2;

        r2 := @parameter0: javax.xml.namespace.QName;

        r3 := @parameter1: org.apache.neethi.builders.AssertionBuilder;

        $r0 = staticinvoke <org.apache.neethi.PolicyEngine: org.apache.neethi.PolicyBuilder getBuilder()>();

        $r1 = virtualinvoke $r0.<org.apache.neethi.PolicyBuilder: org.apache.neethi.AssertionBuilderFactory getAssertionBuilderFactory()>();

        interfaceinvoke $r1.<org.apache.neethi.AssertionBuilderFactory: void registerBuilder(javax.xml.namespace.QName,org.apache.neethi.builders.AssertionBuilder)>(r2, r3);

        return;
    }

    public static org.apache.neethi.Policy getPolicy(java.io.InputStream)
    {
        org.apache.neethi.PolicyBuilder $r0;
        org.apache.neethi.Policy $r2;
        java.io.InputStream r1;

        r1 := @parameter0: java.io.InputStream;

        $r0 = staticinvoke <org.apache.neethi.PolicyEngine: org.apache.neethi.PolicyBuilder getBuilder()>();

        $r2 = virtualinvoke $r0.<org.apache.neethi.PolicyBuilder: org.apache.neethi.Policy getPolicy(java.io.InputStream)>(r1);

        return $r2;
    }

    public static org.apache.neethi.PolicyReference getPolicyReferene(java.io.InputStream)
    {
        org.apache.neethi.PolicyBuilder $r0;
        org.apache.neethi.PolicyReference $r2;
        java.io.InputStream r1;

        r1 := @parameter0: java.io.InputStream;

        $r0 = staticinvoke <org.apache.neethi.PolicyEngine: org.apache.neethi.PolicyBuilder getBuilder()>();

        $r2 = virtualinvoke $r0.<org.apache.neethi.PolicyBuilder: org.apache.neethi.PolicyReference getPolicyReference(java.io.InputStream)>(r1);

        return $r2;
    }

    public static org.apache.neethi.Policy getPolicy(org.apache.axiom.om.OMElement)
    {
        org.apache.axiom.om.OMElement r1;
        org.apache.neethi.PolicyBuilder $r0;
        org.apache.neethi.Policy $r2;

        r1 := @parameter0: org.apache.axiom.om.OMElement;

        $r0 = staticinvoke <org.apache.neethi.PolicyEngine: org.apache.neethi.PolicyBuilder getBuilder()>();

        $r2 = virtualinvoke $r0.<org.apache.neethi.PolicyBuilder: org.apache.neethi.Policy getPolicy(java.lang.Object)>(r1);

        return $r2;
    }

    public static org.apache.neethi.Policy getPolicy(java.lang.Object)
    {
        org.apache.neethi.PolicyBuilder $r0;
        java.lang.Object r1;
        org.apache.neethi.Policy $r2;

        r1 := @parameter0: java.lang.Object;

        $r0 = staticinvoke <org.apache.neethi.PolicyEngine: org.apache.neethi.PolicyBuilder getBuilder()>();

        $r2 = virtualinvoke $r0.<org.apache.neethi.PolicyBuilder: org.apache.neethi.Policy getPolicy(java.lang.Object)>(r1);

        return $r2;
    }

    public static org.apache.neethi.PolicyReference getPolicyReference(org.apache.axiom.om.OMElement)
    {
        org.apache.axiom.om.OMElement r1;
        org.apache.neethi.PolicyBuilder $r0;
        org.apache.neethi.PolicyReference $r2;

        r1 := @parameter0: org.apache.axiom.om.OMElement;

        $r0 = staticinvoke <org.apache.neethi.PolicyEngine: org.apache.neethi.PolicyBuilder getBuilder()>();

        $r2 = virtualinvoke $r0.<org.apache.neethi.PolicyBuilder: org.apache.neethi.PolicyReference getPolicyReference(java.lang.Object)>(r1);

        return $r2;
    }

    public static org.apache.neethi.PolicyReference getPolicyReference(java.lang.Object)
    {
        org.apache.neethi.PolicyBuilder $r0;
        java.lang.Object r1;
        org.apache.neethi.PolicyReference $r2;

        r1 := @parameter0: java.lang.Object;

        $r0 = staticinvoke <org.apache.neethi.PolicyEngine: org.apache.neethi.PolicyBuilder getBuilder()>();

        $r2 = virtualinvoke $r0.<org.apache.neethi.PolicyBuilder: org.apache.neethi.PolicyReference getPolicyReference(java.lang.Object)>(r1);

        return $r2;
    }

    public static void <clinit>()
    {
        <org.apache.neethi.PolicyEngine: java.lang.String POLICY_REF> = "PolicyReference";

        <org.apache.neethi.PolicyEngine: java.lang.String ALL> = "All";

        <org.apache.neethi.PolicyEngine: java.lang.String EXACTLY_ONE> = "ExactlyOne";

        <org.apache.neethi.PolicyEngine: java.lang.String POLICY> = "Policy";

        <org.apache.neethi.PolicyEngine: java.lang.String POLICY_NAMESPACE> = "http://schemas.xmlsoap.org/ws/2004/09/policy";

        return;
    }
}
