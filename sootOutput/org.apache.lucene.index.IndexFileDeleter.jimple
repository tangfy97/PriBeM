final class org.apache.lucene.index.IndexFileDeleter extends java.lang.Object implements java.io.Closeable
{
    private java.util.List deletable;
    private java.util.Map refCounts;
    private java.util.List commits;
    private java.util.List lastFiles;
    private java.util.List commitsToDelete;
    private final org.apache.lucene.util.InfoStream infoStream;
    private org.apache.lucene.store.Directory directory;
    private org.apache.lucene.index.IndexDeletionPolicy policy;
    final boolean startingCommitDeleted;
    private org.apache.lucene.index.SegmentInfos lastSegmentInfos;
    public static boolean VERBOSE_REF_COUNTS;
    private final org.apache.lucene.index.IndexWriter writer;
    static final boolean $assertionsDisabled;

    private boolean locked()
    {
        org.apache.lucene.index.IndexWriter $r1, $r2;
        org.apache.lucene.index.IndexFileDeleter r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.index.IndexFileDeleter;

        $r1 = r0.<org.apache.lucene.index.IndexFileDeleter: org.apache.lucene.index.IndexWriter writer>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.lucene.index.IndexFileDeleter: org.apache.lucene.index.IndexWriter writer>;

        $z0 = staticinvoke <java.lang.Thread: boolean holdsLock(java.lang.Object)>($r2);

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public void <init>(org.apache.lucene.store.Directory, org.apache.lucene.index.IndexDeletionPolicy, org.apache.lucene.index.SegmentInfos, org.apache.lucene.util.InfoStream, org.apache.lucene.index.IndexWriter, boolean) throws java.io.IOException
    {
        org.apache.lucene.index.IndexFileDeleter r0;
        java.util.regex.Matcher $r30;
        byte $b4, $b7, $b9, $b11;
        java.util.Map $r69;
        java.util.Set $r70;
        org.apache.lucene.util.InfoStream r5;
        java.lang.StringBuilder $r16, $r17, $r18, $r25, $r27, $r39, $r40, $r41, $r44, $r45, $r46, $r47, $r52, $r53, $r54, $r59, $r60, $r61, $r79, $r80, $r82, $r85, $r87, $r89;
        long $l0, $l2, $l3, $l5, $l6, $l8, $l10;
        java.util.ArrayList $r76, $r77, $r78;
        java.lang.String $r8, $r19, $r26, $r28, r31, $r42, $r48, $r55, $r62, r74;
        java.util.Map$Entry r72;
        java.io.IOException $r49, $r56;
        org.apache.lucene.index.IndexFileDeleter$CommitPoint r64, $r83, $r88;
        org.apache.lucene.store.NoSuchDirectoryException $r63;
        org.apache.lucene.index.CorruptIndexException $r86;
        org.apache.lucene.store.Directory r10;
        boolean $z0, $z1, z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        org.apache.lucene.index.SegmentInfos r7, $r36, $r37, r67, $r81, $r84;
        java.io.FileNotFoundException $r57;
        org.apache.lucene.index.IndexWriter r6;
        java.util.List $r11, $r22, $r23, $r34, $r35, $r68;
        java.util.regex.Pattern $r29;
        java.lang.String[] r65, r66;
        java.util.HashMap $r75;
        int $i1, i12, i13, $i14, $i15, $i16;
        org.apache.lucene.index.IndexDeletionPolicy r9;
        org.apache.lucene.index.IndexFileDeleter$RefCount r73;
        java.util.Iterator $r71;
        java.lang.Object $r12, $r13, $r14;

        r0 := @this: org.apache.lucene.index.IndexFileDeleter;

        r10 := @parameter0: org.apache.lucene.store.Directory;

        r9 := @parameter1: org.apache.lucene.index.IndexDeletionPolicy;

        r7 := @parameter2: org.apache.lucene.index.SegmentInfos;

        r5 := @parameter3: org.apache.lucene.util.InfoStream;

        r6 := @parameter4: org.apache.lucene.index.IndexWriter;

        z2 := @parameter5: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r75 = new java.util.HashMap;

        specialinvoke $r75.<java.util.HashMap: void <init>()>();

        r0.<org.apache.lucene.index.IndexFileDeleter: java.util.Map refCounts> = $r75;

        $r76 = new java.util.ArrayList;

        specialinvoke $r76.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.lucene.index.IndexFileDeleter: java.util.List commits> = $r76;

        $r77 = new java.util.ArrayList;

        specialinvoke $r77.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.lucene.index.IndexFileDeleter: java.util.List lastFiles> = $r77;

        $r78 = new java.util.ArrayList;

        specialinvoke $r78.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.lucene.index.IndexFileDeleter: java.util.List commitsToDelete> = $r78;

        r0.<org.apache.lucene.index.IndexFileDeleter: org.apache.lucene.util.InfoStream infoStream> = r5;

        r0.<org.apache.lucene.index.IndexFileDeleter: org.apache.lucene.index.IndexWriter writer> = r6;

        $r8 = virtualinvoke r7.<org.apache.lucene.index.SegmentInfos: java.lang.String getSegmentsFileName()>();

        $z0 = virtualinvoke r5.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("IFD");

        if $z0 == 0 goto label01;

        $r79 = new java.lang.StringBuilder;

        specialinvoke $r79.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("init: current segments file is \"");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"; deletionPolicy=");

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r9);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r5.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("IFD", $r48);

     label01:
        r0.<org.apache.lucene.index.IndexFileDeleter: org.apache.lucene.index.IndexDeletionPolicy policy> = r9;

        r0.<org.apache.lucene.index.IndexFileDeleter: org.apache.lucene.store.Directory directory> = r10;

        $l0 = virtualinvoke r7.<org.apache.lucene.index.SegmentInfos: long getGeneration()>();

        r64 = null;

     label02:
        r65 = virtualinvoke r10.<org.apache.lucene.store.Directory: java.lang.String[] listAll()>();

     label03:
        goto label05;

     label04:
        $r63 := @caughtexception;

        r65 = newarray (java.lang.String)[0];

     label05:
        if $r8 == null goto label19;

        $r29 = <org.apache.lucene.index.IndexFileNames: java.util.regex.Pattern CODEC_FILE_PATTERN>;

        $r30 = virtualinvoke $r29.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>("");

        r66 = r65;

        i12 = lengthof r65;

        i13 = 0;

     label06:
        if i13 >= i12 goto label19;

        r31 = r66[i13];

        virtualinvoke $r30.<java.util.regex.Matcher: java.util.regex.Matcher reset(java.lang.CharSequence)>(r31);

        $z4 = virtualinvoke r31.<java.lang.String: boolean endsWith(java.lang.String)>("write.lock");

        if $z4 != 0 goto label18;

        $z5 = virtualinvoke r31.<java.lang.String: boolean equals(java.lang.Object)>("segments.gen");

        if $z5 != 0 goto label18;

        $z6 = virtualinvoke $r30.<java.util.regex.Matcher: boolean matches()>();

        if $z6 != 0 goto label07;

        $z9 = virtualinvoke r31.<java.lang.String: boolean startsWith(java.lang.String)>("segments");

        if $z9 == 0 goto label18;

     label07:
        specialinvoke r0.<org.apache.lucene.index.IndexFileDeleter: org.apache.lucene.index.IndexFileDeleter$RefCount getRefCount(java.lang.String)>(r31);

        $z7 = virtualinvoke r31.<java.lang.String: boolean startsWith(java.lang.String)>("segments");

        if $z7 == 0 goto label18;

        $z8 = virtualinvoke r5.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("IFD");

        if $z8 == 0 goto label08;

        $r80 = new java.lang.StringBuilder;

        specialinvoke $r80.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("init: load commit \"");

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r5.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("IFD", $r42);

     label08:
        $r81 = new org.apache.lucene.index.SegmentInfos;

        specialinvoke $r81.<org.apache.lucene.index.SegmentInfos: void <init>()>();

        r67 = $r81;

     label09:
        virtualinvoke $r81.<org.apache.lucene.index.SegmentInfos: void read(org.apache.lucene.store.Directory,java.lang.String)>(r10, r31);

     label10:
        goto label15;

     label11:
        $r57 := @caughtexception;

        $z10 = virtualinvoke r5.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("IFD");

        if $z10 == 0 goto label12;

        $r82 = new java.lang.StringBuilder;

        specialinvoke $r82.<java.lang.StringBuilder: void <init>()>();

        $r59 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("init: hit FileNotFoundException when loading commit \"");

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31);

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"; skipping this commit point");

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r5.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("IFD", $r62);

     label12:
        r67 = null;

        goto label15;

     label13:
        $r56 := @caughtexception;

        $l8 = staticinvoke <org.apache.lucene.index.SegmentInfos: long generationFromSegmentsFileName(java.lang.String)>(r31);

        $b9 = $l8 cmp $l0;

        $i14 = (int) $b9;

        if $i14 > 0 goto label14;

        $l10 = virtualinvoke r10.<org.apache.lucene.store.Directory: long fileLength(java.lang.String)>(r31);

        $b11 = $l10 cmp 0L;

        $i15 = (int) $b11;

        if $i15 <= 0 goto label14;

        throw $r56;

     label14:
        r67 = null;

     label15:
        if r67 == null goto label18;

        $r83 = new org.apache.lucene.index.IndexFileDeleter$CommitPoint;

        $r34 = r0.<org.apache.lucene.index.IndexFileDeleter: java.util.List commitsToDelete>;

        specialinvoke $r83.<org.apache.lucene.index.IndexFileDeleter$CommitPoint: void <init>(java.util.Collection,org.apache.lucene.store.Directory,org.apache.lucene.index.SegmentInfos)>($r34, r10, r67);

        $l2 = virtualinvoke r67.<org.apache.lucene.index.SegmentInfos: long getGeneration()>();

        $l3 = virtualinvoke r7.<org.apache.lucene.index.SegmentInfos: long getGeneration()>();

        $b4 = $l2 cmp $l3;

        if $b4 != 0 goto label16;

        r64 = $r83;

     label16:
        $r35 = r0.<org.apache.lucene.index.IndexFileDeleter: java.util.List commits>;

        interfaceinvoke $r35.<java.util.List: boolean add(java.lang.Object)>($r83);

        virtualinvoke r0.<org.apache.lucene.index.IndexFileDeleter: void incRef(org.apache.lucene.index.SegmentInfos,boolean)>(r67, 1);

        $r36 = r0.<org.apache.lucene.index.IndexFileDeleter: org.apache.lucene.index.SegmentInfos lastSegmentInfos>;

        if $r36 == null goto label17;

        $l5 = virtualinvoke r67.<org.apache.lucene.index.SegmentInfos: long getGeneration()>();

        $r37 = r0.<org.apache.lucene.index.IndexFileDeleter: org.apache.lucene.index.SegmentInfos lastSegmentInfos>;

        $l6 = virtualinvoke $r37.<org.apache.lucene.index.SegmentInfos: long getGeneration()>();

        $b7 = $l5 cmp $l6;

        $i16 = (int) $b7;

        if $i16 <= 0 goto label18;

     label17:
        r0.<org.apache.lucene.index.IndexFileDeleter: org.apache.lucene.index.SegmentInfos lastSegmentInfos> = r67;

     label18:
        i13 = i13 + 1;

        goto label06;

     label19:
        if r64 != null goto label25;

        if $r8 == null goto label25;

        if z2 == 0 goto label25;

        $r84 = new org.apache.lucene.index.SegmentInfos;

        specialinvoke $r84.<org.apache.lucene.index.SegmentInfos: void <init>()>();

     label20:
        virtualinvoke $r84.<org.apache.lucene.index.SegmentInfos: void read(org.apache.lucene.store.Directory,java.lang.String)>(r10, $r8);

     label21:
        goto label23;

     label22:
        $r49 := @caughtexception;

        $r86 = new org.apache.lucene.index.CorruptIndexException;

        $r85 = new java.lang.StringBuilder;

        specialinvoke $r85.<java.lang.StringBuilder: void <init>()>();

        $r52 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to locate current segments_N file \"");

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r86.<org.apache.lucene.index.CorruptIndexException: void <init>(java.lang.String)>($r55);

        throw $r86;

     label23:
        $z3 = virtualinvoke r5.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("IFD");

        if $z3 == 0 goto label24;

        $r87 = new java.lang.StringBuilder;

        specialinvoke $r87.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("forced open of current segments file ");

        $r26 = virtualinvoke r7.<org.apache.lucene.index.SegmentInfos: java.lang.String getSegmentsFileName()>();

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r5.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("IFD", $r28);

     label24:
        $r88 = new org.apache.lucene.index.IndexFileDeleter$CommitPoint;

        $r22 = r0.<org.apache.lucene.index.IndexFileDeleter: java.util.List commitsToDelete>;

        specialinvoke $r88.<org.apache.lucene.index.IndexFileDeleter$CommitPoint: void <init>(java.util.Collection,org.apache.lucene.store.Directory,org.apache.lucene.index.SegmentInfos)>($r22, r10, $r84);

        r64 = $r88;

        $r23 = r0.<org.apache.lucene.index.IndexFileDeleter: java.util.List commits>;

        interfaceinvoke $r23.<java.util.List: boolean add(java.lang.Object)>($r88);

        virtualinvoke r0.<org.apache.lucene.index.IndexFileDeleter: void incRef(org.apache.lucene.index.SegmentInfos,boolean)>($r84, 1);

     label25:
        $r68 = r0.<org.apache.lucene.index.IndexFileDeleter: java.util.List commits>;

        staticinvoke <org.apache.lucene.util.CollectionUtil: void mergeSort(java.util.List)>($r68);

        $r69 = r0.<org.apache.lucene.index.IndexFileDeleter: java.util.Map refCounts>;

        $r70 = interfaceinvoke $r69.<java.util.Map: java.util.Set entrySet()>();

        $r71 = interfaceinvoke $r70.<java.util.Set: java.util.Iterator iterator()>();

     label26:
        $z11 = interfaceinvoke $r71.<java.util.Iterator: boolean hasNext()>();

        if $z11 == 0 goto label29;

        $r12 = interfaceinvoke $r71.<java.util.Iterator: java.lang.Object next()>();

        r72 = (java.util.Map$Entry) $r12;

        $r13 = interfaceinvoke r72.<java.util.Map$Entry: java.lang.Object getValue()>();

        r73 = (org.apache.lucene.index.IndexFileDeleter$RefCount) $r13;

        $r14 = interfaceinvoke r72.<java.util.Map$Entry: java.lang.Object getKey()>();

        r74 = (java.lang.String) $r14;

        $i1 = r73.<org.apache.lucene.index.IndexFileDeleter$RefCount: int count>;

        if 0 != $i1 goto label28;

        $z1 = virtualinvoke r5.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("IFD");

        if $z1 == 0 goto label27;

        $r89 = new java.lang.StringBuilder;

        specialinvoke $r89.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("init: removing unreferenced file \"");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r74);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r5.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("IFD", $r19);

     label27:
        virtualinvoke r0.<org.apache.lucene.index.IndexFileDeleter: void deleteFile(java.lang.String)>(r74);

     label28:
        goto label26;

     label29:
        if $r8 == null goto label30;

        $r11 = r0.<org.apache.lucene.index.IndexFileDeleter: java.util.List commits>;

        virtualinvoke r9.<org.apache.lucene.index.IndexDeletionPolicy: void onInit(java.util.List)>($r11);

     label30:
        virtualinvoke r0.<org.apache.lucene.index.IndexFileDeleter: void checkpoint(org.apache.lucene.index.SegmentInfos,boolean)>(r7, 0);

        if r64 != null goto label31;

        $z12 = 0;

        goto label32;

     label31:
        $z12 = virtualinvoke r64.<org.apache.lucene.index.IndexFileDeleter$CommitPoint: boolean isDeleted()>();

     label32:
        r0.<org.apache.lucene.index.IndexFileDeleter: boolean startingCommitDeleted> = $z12;

        specialinvoke r0.<org.apache.lucene.index.IndexFileDeleter: void deleteCommits()>();

        return;

        catch org.apache.lucene.store.NoSuchDirectoryException from label02 to label03 with label04;
        catch java.io.FileNotFoundException from label09 to label10 with label11;
        catch java.io.IOException from label09 to label10 with label13;
        catch java.io.IOException from label20 to label21 with label22;
    }

    public org.apache.lucene.index.SegmentInfos getLastSegmentInfos()
    {
        org.apache.lucene.index.IndexFileDeleter r0;
        org.apache.lucene.index.SegmentInfos $r1;

        r0 := @this: org.apache.lucene.index.IndexFileDeleter;

        $r1 = r0.<org.apache.lucene.index.IndexFileDeleter: org.apache.lucene.index.SegmentInfos lastSegmentInfos>;

        return $r1;
    }

    private void deleteCommits() throws java.io.IOException
    {
        org.apache.lucene.index.IndexFileDeleter$CommitPoint r24, r25;
        org.apache.lucene.index.IndexFileDeleter r0;
        boolean $z0, $z1, $z2;
        java.util.Collection $r13;
        java.util.List $r1, $r2, $r3, $r4, $r5, $r7, $r8, $r10;
        org.apache.lucene.util.InfoStream $r12, $r18;
        java.lang.StringBuilder $r19, $r21, $r22, $r26;
        int $i0, $i1, $i2, i3, i4, i5, i6, $i8;
        java.lang.String r16, $r20, $r23;
        java.util.Iterator $r14;
        java.lang.Object $r6, $r9, $r11, $r15;

        r0 := @this: org.apache.lucene.index.IndexFileDeleter;

        $r1 = r0.<org.apache.lucene.index.IndexFileDeleter: java.util.List commitsToDelete>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 <= 0 goto label10;

        i3 = 0;

     label01:
        if i3 >= $i0 goto label05;

        $r10 = r0.<org.apache.lucene.index.IndexFileDeleter: java.util.List commitsToDelete>;

        $r11 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(i3);

        r24 = (org.apache.lucene.index.IndexFileDeleter$CommitPoint) $r11;

        $r12 = r0.<org.apache.lucene.index.IndexFileDeleter: org.apache.lucene.util.InfoStream infoStream>;

        $z1 = virtualinvoke $r12.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("IFD");

        if $z1 == 0 goto label02;

        $r18 = r0.<org.apache.lucene.index.IndexFileDeleter: org.apache.lucene.util.InfoStream infoStream>;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("deleteCommits: now decRef commit \"");

        $r20 = virtualinvoke r24.<org.apache.lucene.index.IndexFileDeleter$CommitPoint: java.lang.String getSegmentsFileName()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r18.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("IFD", $r23);

     label02:
        $r13 = r24.<org.apache.lucene.index.IndexFileDeleter$CommitPoint: java.util.Collection files>;

        $r14 = interfaceinvoke $r13.<java.util.Collection: java.util.Iterator iterator()>();

     label03:
        $z2 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label04;

        $r15 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        r16 = (java.lang.String) $r15;

        virtualinvoke r0.<org.apache.lucene.index.IndexFileDeleter: void decRef(java.lang.String)>(r16);

        goto label03;

     label04:
        i3 = i3 + 1;

        goto label01;

     label05:
        $r2 = r0.<org.apache.lucene.index.IndexFileDeleter: java.util.List commitsToDelete>;

        interfaceinvoke $r2.<java.util.List: void clear()>();

        $r3 = r0.<org.apache.lucene.index.IndexFileDeleter: java.util.List commits>;

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        i4 = $i1;

        i5 = 0;

        i6 = 0;

     label06:
        if i5 >= $i1 goto label09;

        $r5 = r0.<org.apache.lucene.index.IndexFileDeleter: java.util.List commits>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i5);

        r25 = (org.apache.lucene.index.IndexFileDeleter$CommitPoint) $r6;

        $z0 = r25.<org.apache.lucene.index.IndexFileDeleter$CommitPoint: boolean deleted>;

        if $z0 != 0 goto label08;

        if i6 == i5 goto label07;

        $r8 = r0.<org.apache.lucene.index.IndexFileDeleter: java.util.List commits>;

        $r7 = r0.<org.apache.lucene.index.IndexFileDeleter: java.util.List commits>;

        $r9 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i5);

        interfaceinvoke $r8.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i6, $r9);

     label07:
        i6 = i6 + 1;

     label08:
        i5 = i5 + 1;

        goto label06;

     label09:
        if i4 <= i6 goto label10;

        $r4 = r0.<org.apache.lucene.index.IndexFileDeleter: java.util.List commits>;

        $i2 = i4 - 1;

        interfaceinvoke $r4.<java.util.List: java.lang.Object remove(int)>($i2);

        $i8 = (int) -1;

        i4 = i4 + $i8;

        goto label09;

     label10:
        return;
    }

    public void refresh(java.lang.String) throws java.io.IOException
    {
        org.apache.lucene.index.IndexFileDeleter r0;
        java.util.regex.Matcher $r5;
        org.apache.lucene.store.Directory $r1;
        java.util.Map $r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        org.apache.lucene.util.InfoStream $r8, $r10;
        java.lang.StringBuilder $r9, $r11, $r12, $r13, $r14, $r15, $r17, $r18, $r19, $r20, $r21, $r22;
        java.util.regex.Pattern $r4;
        java.lang.String[] $r2;
        java.lang.AssertionError $r23;
        int i0, $i1;
        java.lang.String r3, r6, $r16, r24, r25;

        r0 := @this: org.apache.lucene.index.IndexFileDeleter;

        r3 := @parameter0: java.lang.String;

        $z0 = <org.apache.lucene.index.IndexFileDeleter: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z8 = specialinvoke r0.<org.apache.lucene.index.IndexFileDeleter: boolean locked()>();

        if $z8 != 0 goto label1;

        $r23 = new java.lang.AssertionError;

        specialinvoke $r23.<java.lang.AssertionError: void <init>()>();

        throw $r23;

     label1:
        $r1 = r0.<org.apache.lucene.index.IndexFileDeleter: org.apache.lucene.store.Directory directory>;

        $r2 = virtualinvoke $r1.<org.apache.lucene.store.Directory: java.lang.String[] listAll()>();

        if r3 == null goto label2;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        r24 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label3;

     label2:
        r24 = null;

        r25 = null;

     label3:
        $r4 = <org.apache.lucene.index.IndexFileNames: java.util.regex.Pattern CODEC_FILE_PATTERN>;

        $r5 = virtualinvoke $r4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>("");

        i0 = 0;

     label4:
        $i1 = lengthof $r2;

        if i0 >= $i1 goto label9;

        r6 = $r2[i0];

        virtualinvoke $r5.<java.util.regex.Matcher: java.util.regex.Matcher reset(java.lang.CharSequence)>(r6);

        if r3 == null goto label5;

        $z6 = virtualinvoke r6.<java.lang.String: boolean startsWith(java.lang.String)>(r24);

        if $z6 != 0 goto label5;

        $z7 = virtualinvoke r6.<java.lang.String: boolean startsWith(java.lang.String)>(r25);

        if $z7 == 0 goto label8;

     label5:
        $z9 = virtualinvoke r6.<java.lang.String: boolean endsWith(java.lang.String)>("write.lock");

        if $z9 != 0 goto label8;

        $r7 = r0.<org.apache.lucene.index.IndexFileDeleter: java.util.Map refCounts>;

        $z1 = interfaceinvoke $r7.<java.util.Map: boolean containsKey(java.lang.Object)>(r6);

        if $z1 != 0 goto label8;

        $z2 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("segments.gen");

        if $z2 != 0 goto label8;

        $z3 = virtualinvoke $r5.<java.util.regex.Matcher: boolean matches()>();

        if $z3 != 0 goto label6;

        $z5 = virtualinvoke r6.<java.lang.String: boolean startsWith(java.lang.String)>("segments");

        if $z5 == 0 goto label8;

     label6:
        $r8 = r0.<org.apache.lucene.index.IndexFileDeleter: org.apache.lucene.util.InfoStream infoStream>;

        $z4 = virtualinvoke $r8.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("IFD");

        if $z4 == 0 goto label7;

        $r10 = r0.<org.apache.lucene.index.IndexFileDeleter: org.apache.lucene.util.InfoStream infoStream>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("refresh [prefix=");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: removing newly created unreferenced file \"");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("IFD", $r16);

     label7:
        virtualinvoke r0.<org.apache.lucene.index.IndexFileDeleter: void deleteFile(java.lang.String)>(r6);

     label8:
        i0 = i0 + 1;

        goto label4;

     label9:
        return;
    }

    public void refresh() throws java.io.IOException
    {
        java.lang.AssertionError $r1;
        org.apache.lucene.index.IndexFileDeleter r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.index.IndexFileDeleter;

        $z0 = <org.apache.lucene.index.IndexFileDeleter: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = specialinvoke r0.<org.apache.lucene.index.IndexFileDeleter: boolean locked()>();

        if $z1 != 0 goto label1;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label1:
        r0.<org.apache.lucene.index.IndexFileDeleter: java.util.List deletable> = null;

        virtualinvoke r0.<org.apache.lucene.index.IndexFileDeleter: void refresh(java.lang.String)>(null);

        return;
    }

    public void close() throws java.io.IOException
    {
        java.util.Collection $r5;
        java.lang.AssertionError $r6;
        org.apache.lucene.index.IndexFileDeleter r0;
        java.util.List $r1, $r2, $r3;
        int $i0, i1;
        java.lang.Object $r4;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.index.IndexFileDeleter;

        $z0 = <org.apache.lucene.index.IndexFileDeleter: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = specialinvoke r0.<org.apache.lucene.index.IndexFileDeleter: boolean locked()>();

        if $z1 != 0 goto label1;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label1:
        $r1 = r0.<org.apache.lucene.index.IndexFileDeleter: java.util.List lastFiles>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 <= 0 goto label4;

        i1 = 0;

     label2:
        if i1 >= $i0 goto label3;

        $r3 = r0.<org.apache.lucene.index.IndexFileDeleter: java.util.List lastFiles>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i1);

        $r5 = (java.util.Collection) $r4;

        virtualinvoke r0.<org.apache.lucene.index.IndexFileDeleter: void decRef(java.util.Collection)>($r5);

        i1 = i1 + 1;

        goto label2;

     label3:
        $r2 = r0.<org.apache.lucene.index.IndexFileDeleter: java.util.List lastFiles>;

        interfaceinvoke $r2.<java.util.List: void clear()>();

     label4:
        virtualinvoke r0.<org.apache.lucene.index.IndexFileDeleter: void deletePendingFiles()>();

        return;
    }

    void revisitPolicy() throws java.io.IOException
    {
        java.lang.AssertionError $r6;
        org.apache.lucene.index.IndexFileDeleter r0;
        java.util.List $r2, $r3;
        org.apache.lucene.util.InfoStream $r1, $r5;
        int $i0;
        org.apache.lucene.index.IndexDeletionPolicy $r4;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.lucene.index.IndexFileDeleter;

        $z0 = <org.apache.lucene.index.IndexFileDeleter: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z2 = specialinvoke r0.<org.apache.lucene.index.IndexFileDeleter: boolean locked()>();

        if $z2 != 0 goto label1;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label1:
        $r1 = r0.<org.apache.lucene.index.IndexFileDeleter: org.apache.lucene.util.InfoStream infoStream>;

        $z1 = virtualinvoke $r1.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("IFD");

        if $z1 == 0 goto label2;

        $r5 = r0.<org.apache.lucene.index.IndexFileDeleter: org.apache.lucene.util.InfoStream infoStream>;

        virtualinvoke $r5.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("IFD", "now revisitPolicy");

     label2:
        $r2 = r0.<org.apache.lucene.index.IndexFileDeleter: java.util.List commits>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 <= 0 goto label3;

        $r4 = r0.<org.apache.lucene.index.IndexFileDeleter: org.apache.lucene.index.IndexDeletionPolicy policy>;

        $r3 = r0.<org.apache.lucene.index.IndexFileDeleter: java.util.List commits>;

        virtualinvoke $r4.<org.apache.lucene.index.IndexDeletionPolicy: void onCommit(java.util.List)>($r3);

        specialinvoke r0.<org.apache.lucene.index.IndexFileDeleter: void deleteCommits()>();

     label3:
        return;
    }

    public void deletePendingFiles() throws java.io.IOException
    {
        java.lang.AssertionError $r13;
        org.apache.lucene.index.IndexFileDeleter r0;
        int $i0, i1;
        java.lang.String $r5, $r10, $r12;
        boolean $z0, $z1, $z2;
        java.util.List $r1, r2;
        org.apache.lucene.util.InfoStream $r3, $r7;
        java.lang.Object $r4, $r9;
        java.lang.StringBuilder $r6, $r8, $r11;

        r0 := @this: org.apache.lucene.index.IndexFileDeleter;

        $z0 = <org.apache.lucene.index.IndexFileDeleter: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z2 = specialinvoke r0.<org.apache.lucene.index.IndexFileDeleter: boolean locked()>();

        if $z2 != 0 goto label1;

        $r13 = new java.lang.AssertionError;

        specialinvoke $r13.<java.lang.AssertionError: void <init>()>();

        throw $r13;

     label1:
        $r1 = r0.<org.apache.lucene.index.IndexFileDeleter: java.util.List deletable>;

        if $r1 == null goto label4;

        r2 = r0.<org.apache.lucene.index.IndexFileDeleter: java.util.List deletable>;

        r0.<org.apache.lucene.index.IndexFileDeleter: java.util.List deletable> = null;

        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        i1 = 0;

     label2:
        if i1 >= $i0 goto label4;

        $r3 = r0.<org.apache.lucene.index.IndexFileDeleter: org.apache.lucene.util.InfoStream infoStream>;

        $z1 = virtualinvoke $r3.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("IFD");

        if $z1 == 0 goto label3;

        $r7 = r0.<org.apache.lucene.index.IndexFileDeleter: org.apache.lucene.util.InfoStream infoStream>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("delete pending file ");

        $r9 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i1);

        $r10 = (java.lang.String) $r9;

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("IFD", $r12);

     label3:
        $r4 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i1);

        $r5 = (java.lang.String) $r4;

        virtualinvoke r0.<org.apache.lucene.index.IndexFileDeleter: void deleteFile(java.lang.String)>($r5);

        i1 = i1 + 1;

        goto label2;

     label4:
        return;
    }

    public void checkpoint(org.apache.lucene.index.SegmentInfos, boolean) throws java.io.IOException
    {
        org.apache.lucene.index.IndexFileDeleter$CommitPoint $r17;
        org.apache.lucene.index.IndexFileDeleter r0;
        org.apache.lucene.store.Directory $r6, $r18;
        boolean $z0, $z1, $z2, z3, $z4, $z5, $z6, $z7;
        java.util.Collection $r8, r16;
        org.apache.lucene.index.SegmentInfos r2, $r28;
        java.util.List $r3, $r5, $r7, $r19, $r20, $r21;
        org.apache.lucene.index.IndexWriter $r26, $r27, $r38;
        org.apache.lucene.util.InfoStream $r1, $r9, $r11, $r24;
        java.lang.StringBuilder $r10, $r12, $r13, $r23, $r25, $r30, $r31, $r32, $r33, $r34, $r35, $r36;
        long $l0, $l1, $l2, l4;
        java.lang.AssertionError $r39, $r40;
        int $i3;
        java.lang.String $r14, $r29, $r37;
        org.apache.lucene.index.IndexDeletionPolicy $r22;
        java.util.Iterator $r4;
        java.lang.Object $r15;

        r0 := @this: org.apache.lucene.index.IndexFileDeleter;

        r2 := @parameter0: org.apache.lucene.index.SegmentInfos;

        z3 := @parameter1: boolean;

        $z0 = <org.apache.lucene.index.IndexFileDeleter: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z7 = specialinvoke r0.<org.apache.lucene.index.IndexFileDeleter: boolean locked()>();

        if $z7 != 0 goto label1;

        $r40 = new java.lang.AssertionError;

        specialinvoke $r40.<java.lang.AssertionError: void <init>()>();

        throw $r40;

     label1:
        $z1 = <org.apache.lucene.index.IndexFileDeleter: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $r38 = r0.<org.apache.lucene.index.IndexFileDeleter: org.apache.lucene.index.IndexWriter writer>;

        $z6 = staticinvoke <java.lang.Thread: boolean holdsLock(java.lang.Object)>($r38);

        if $z6 != 0 goto label2;

        $r39 = new java.lang.AssertionError;

        specialinvoke $r39.<java.lang.AssertionError: void <init>()>();

        throw $r39;

     label2:
        l4 = 0L;

        $r1 = r0.<org.apache.lucene.index.IndexFileDeleter: org.apache.lucene.util.InfoStream infoStream>;

        $z2 = virtualinvoke $r1.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("IFD");

        if $z2 == 0 goto label3;

        l4 = staticinvoke <java.lang.System: long nanoTime()>();

        $r24 = r0.<org.apache.lucene.index.IndexFileDeleter: org.apache.lucene.util.InfoStream infoStream>;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("now checkpoint \"");

        $r27 = r0.<org.apache.lucene.index.IndexFileDeleter: org.apache.lucene.index.IndexWriter writer>;

        $r26 = r0.<org.apache.lucene.index.IndexFileDeleter: org.apache.lucene.index.IndexWriter writer>;

        $r28 = virtualinvoke $r26.<org.apache.lucene.index.IndexWriter: org.apache.lucene.index.SegmentInfos toLiveInfos(org.apache.lucene.index.SegmentInfos)>(r2);

        $r29 = virtualinvoke $r27.<org.apache.lucene.index.IndexWriter: java.lang.String segString(java.lang.Iterable)>($r28);

        $r30 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" [");

        $i3 = virtualinvoke r2.<org.apache.lucene.index.SegmentInfos: int size()>();

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" segments ");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; isCommit = ");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z3);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r24.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("IFD", $r37);

     label3:
        virtualinvoke r0.<org.apache.lucene.index.IndexFileDeleter: void deletePendingFiles()>();

        virtualinvoke r0.<org.apache.lucene.index.IndexFileDeleter: void incRef(org.apache.lucene.index.SegmentInfos,boolean)>(r2, z3);

        if z3 == 0 goto label4;

        $r20 = r0.<org.apache.lucene.index.IndexFileDeleter: java.util.List commits>;

        $r17 = new org.apache.lucene.index.IndexFileDeleter$CommitPoint;

        $r19 = r0.<org.apache.lucene.index.IndexFileDeleter: java.util.List commitsToDelete>;

        $r18 = r0.<org.apache.lucene.index.IndexFileDeleter: org.apache.lucene.store.Directory directory>;

        specialinvoke $r17.<org.apache.lucene.index.IndexFileDeleter$CommitPoint: void <init>(java.util.Collection,org.apache.lucene.store.Directory,org.apache.lucene.index.SegmentInfos)>($r19, $r18, r2);

        interfaceinvoke $r20.<java.util.List: boolean add(java.lang.Object)>($r17);

        $r22 = r0.<org.apache.lucene.index.IndexFileDeleter: org.apache.lucene.index.IndexDeletionPolicy policy>;

        $r21 = r0.<org.apache.lucene.index.IndexFileDeleter: java.util.List commits>;

        virtualinvoke $r22.<org.apache.lucene.index.IndexDeletionPolicy: void onCommit(java.util.List)>($r21);

        specialinvoke r0.<org.apache.lucene.index.IndexFileDeleter: void deleteCommits()>();

        goto label7;

     label4:
        $r3 = r0.<org.apache.lucene.index.IndexFileDeleter: java.util.List lastFiles>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z4 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label6;

        $r15 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r16 = (java.util.Collection) $r15;

        virtualinvoke r0.<org.apache.lucene.index.IndexFileDeleter: void decRef(java.util.Collection)>(r16);

        goto label5;

     label6:
        $r5 = r0.<org.apache.lucene.index.IndexFileDeleter: java.util.List lastFiles>;

        interfaceinvoke $r5.<java.util.List: void clear()>();

        $r7 = r0.<org.apache.lucene.index.IndexFileDeleter: java.util.List lastFiles>;

        $r6 = r0.<org.apache.lucene.index.IndexFileDeleter: org.apache.lucene.store.Directory directory>;

        $r8 = virtualinvoke r2.<org.apache.lucene.index.SegmentInfos: java.util.Collection files(org.apache.lucene.store.Directory,boolean)>($r6, 0);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r8);

     label7:
        $r9 = r0.<org.apache.lucene.index.IndexFileDeleter: org.apache.lucene.util.InfoStream infoStream>;

        $z5 = virtualinvoke $r9.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("IFD");

        if $z5 == 0 goto label8;

        $l0 = staticinvoke <java.lang.System: long nanoTime()>();

        $r11 = r0.<org.apache.lucene.index.IndexFileDeleter: org.apache.lucene.util.InfoStream infoStream>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $l1 = $l0 - l4;

        $l2 = $l1 / 1000000L;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" msec to checkpoint");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("IFD", $r14);

     label8:
        return;
    }

    void incRef(org.apache.lucene.index.SegmentInfos, boolean) throws java.io.IOException
    {
        java.util.Iterator $r4;
        java.util.Collection $r3;
        java.lang.AssertionError $r7;
        org.apache.lucene.index.IndexFileDeleter r1;
        org.apache.lucene.index.SegmentInfos r0;
        org.apache.lucene.store.Directory $r2;
        java.lang.Object $r5;
        java.lang.String r6;
        boolean $z0, z1, $z2, $z3;

        r1 := @this: org.apache.lucene.index.IndexFileDeleter;

        r0 := @parameter0: org.apache.lucene.index.SegmentInfos;

        z1 := @parameter1: boolean;

        $z0 = <org.apache.lucene.index.IndexFileDeleter: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z2 = specialinvoke r1.<org.apache.lucene.index.IndexFileDeleter: boolean locked()>();

        if $z2 != 0 goto label1;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

     label1:
        $r2 = r1.<org.apache.lucene.index.IndexFileDeleter: org.apache.lucene.store.Directory directory>;

        $r3 = virtualinvoke r0.<org.apache.lucene.index.SegmentInfos: java.util.Collection files(org.apache.lucene.store.Directory,boolean)>($r2, z1);

        $r4 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z3 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.String) $r5;

        virtualinvoke r1.<org.apache.lucene.index.IndexFileDeleter: void incRef(java.lang.String)>(r6);

        goto label2;

     label3:
        return;
    }

    void incRef(java.util.Collection)
    {
        java.util.Iterator $r1;
        java.util.Collection r0;
        java.lang.AssertionError $r5;
        org.apache.lucene.index.IndexFileDeleter r4;
        java.lang.Object $r2;
        java.lang.String r3;
        boolean $z0, $z1, $z2;

        r4 := @this: org.apache.lucene.index.IndexFileDeleter;

        r0 := @parameter0: java.util.Collection;

        $z0 = <org.apache.lucene.index.IndexFileDeleter: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = specialinvoke r4.<org.apache.lucene.index.IndexFileDeleter: boolean locked()>();

        if $z1 != 0 goto label1;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label1:
        $r1 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r2;

        virtualinvoke r4.<org.apache.lucene.index.IndexFileDeleter: void incRef(java.lang.String)>(r3);

        goto label2;

     label3:
        return;
    }

    void incRef(java.lang.String)
    {
        java.lang.AssertionError $r11;
        org.apache.lucene.index.IndexFileDeleter r0;
        int $i0;
        java.lang.String r1, $r10;
        boolean $z0, $z1, $z2, $z3;
        org.apache.lucene.index.IndexFileDeleter$RefCount $r2;
        org.apache.lucene.util.InfoStream $r3, $r5;
        java.lang.StringBuilder $r4, $r6, $r7, $r8, $r9;

        r0 := @this: org.apache.lucene.index.IndexFileDeleter;

        r1 := @parameter0: java.lang.String;

        $z0 = <org.apache.lucene.index.IndexFileDeleter: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z3 = specialinvoke r0.<org.apache.lucene.index.IndexFileDeleter: boolean locked()>();

        if $z3 != 0 goto label1;

        $r11 = new java.lang.AssertionError;

        specialinvoke $r11.<java.lang.AssertionError: void <init>()>();

        throw $r11;

     label1:
        $r2 = specialinvoke r0.<org.apache.lucene.index.IndexFileDeleter: org.apache.lucene.index.IndexFileDeleter$RefCount getRefCount(java.lang.String)>(r1);

        $r3 = r0.<org.apache.lucene.index.IndexFileDeleter: org.apache.lucene.util.InfoStream infoStream>;

        $z1 = virtualinvoke $r3.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("IFD");

        if $z1 == 0 goto label2;

        $z2 = <org.apache.lucene.index.IndexFileDeleter: boolean VERBOSE_REF_COUNTS>;

        if $z2 == 0 goto label2;

        $r5 = r0.<org.apache.lucene.index.IndexFileDeleter: org.apache.lucene.util.InfoStream infoStream>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  IncRef \"");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\": pre-incr count is ");

        $i0 = $r2.<org.apache.lucene.index.IndexFileDeleter$RefCount: int count>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("IFD", $r10);

     label2:
        virtualinvoke $r2.<org.apache.lucene.index.IndexFileDeleter$RefCount: int IncRef()>();

        return;
    }

    void decRef(java.util.Collection) throws java.io.IOException
    {
        java.util.Iterator $r1;
        java.util.Collection r0;
        java.lang.AssertionError $r5;
        org.apache.lucene.index.IndexFileDeleter r4;
        java.lang.Object $r2;
        java.lang.String r3;
        boolean $z0, $z1, $z2;

        r4 := @this: org.apache.lucene.index.IndexFileDeleter;

        r0 := @parameter0: java.util.Collection;

        $z0 = <org.apache.lucene.index.IndexFileDeleter: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = specialinvoke r4.<org.apache.lucene.index.IndexFileDeleter: boolean locked()>();

        if $z1 != 0 goto label1;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label1:
        $r1 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r2;

        virtualinvoke r4.<org.apache.lucene.index.IndexFileDeleter: void decRef(java.lang.String)>(r3);

        goto label2;

     label3:
        return;
    }

    void decRef(java.lang.String) throws java.io.IOException
    {
        java.lang.AssertionError $r12;
        org.apache.lucene.index.IndexFileDeleter r0;
        java.util.Map $r4;
        int $i0, $i1;
        java.lang.String r1, $r11;
        boolean $z0, $z1, $z2, $z3;
        org.apache.lucene.index.IndexFileDeleter$RefCount $r2;
        org.apache.lucene.util.InfoStream $r3, $r6;
        java.lang.StringBuilder $r5, $r7, $r8, $r9, $r10;

        r0 := @this: org.apache.lucene.index.IndexFileDeleter;

        r1 := @parameter0: java.lang.String;

        $z0 = <org.apache.lucene.index.IndexFileDeleter: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z3 = specialinvoke r0.<org.apache.lucene.index.IndexFileDeleter: boolean locked()>();

        if $z3 != 0 goto label1;

        $r12 = new java.lang.AssertionError;

        specialinvoke $r12.<java.lang.AssertionError: void <init>()>();

        throw $r12;

     label1:
        $r2 = specialinvoke r0.<org.apache.lucene.index.IndexFileDeleter: org.apache.lucene.index.IndexFileDeleter$RefCount getRefCount(java.lang.String)>(r1);

        $r3 = r0.<org.apache.lucene.index.IndexFileDeleter: org.apache.lucene.util.InfoStream infoStream>;

        $z1 = virtualinvoke $r3.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("IFD");

        if $z1 == 0 goto label2;

        $z2 = <org.apache.lucene.index.IndexFileDeleter: boolean VERBOSE_REF_COUNTS>;

        if $z2 == 0 goto label2;

        $r6 = r0.<org.apache.lucene.index.IndexFileDeleter: org.apache.lucene.util.InfoStream infoStream>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  DecRef \"");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\": pre-decr count is ");

        $i0 = $r2.<org.apache.lucene.index.IndexFileDeleter$RefCount: int count>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("IFD", $r11);

     label2:
        $i1 = virtualinvoke $r2.<org.apache.lucene.index.IndexFileDeleter$RefCount: int DecRef()>();

        if 0 != $i1 goto label3;

        virtualinvoke r0.<org.apache.lucene.index.IndexFileDeleter: void deleteFile(java.lang.String)>(r1);

        $r4 = r0.<org.apache.lucene.index.IndexFileDeleter: java.util.Map refCounts>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

     label3:
        return;
    }

    void decRef(org.apache.lucene.index.SegmentInfos) throws java.io.IOException
    {
        java.util.Iterator $r4;
        java.util.Collection $r3;
        java.lang.AssertionError $r7;
        org.apache.lucene.index.IndexFileDeleter r1;
        org.apache.lucene.index.SegmentInfos r0;
        org.apache.lucene.store.Directory $r2;
        java.lang.Object $r5;
        java.lang.String r6;
        boolean $z0, $z1, $z2;

        r1 := @this: org.apache.lucene.index.IndexFileDeleter;

        r0 := @parameter0: org.apache.lucene.index.SegmentInfos;

        $z0 = <org.apache.lucene.index.IndexFileDeleter: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = specialinvoke r1.<org.apache.lucene.index.IndexFileDeleter: boolean locked()>();

        if $z1 != 0 goto label1;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

     label1:
        $r2 = r1.<org.apache.lucene.index.IndexFileDeleter: org.apache.lucene.store.Directory directory>;

        $r3 = virtualinvoke r0.<org.apache.lucene.index.SegmentInfos: java.util.Collection files(org.apache.lucene.store.Directory,boolean)>($r2, 0);

        $r4 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.String) $r5;

        virtualinvoke r1.<org.apache.lucene.index.IndexFileDeleter: void decRef(java.lang.String)>(r6);

        goto label2;

     label3:
        return;
    }

    public boolean exists(java.lang.String)
    {
        org.apache.lucene.index.IndexFileDeleter$RefCount $r3;
        java.lang.AssertionError $r4;
        org.apache.lucene.index.IndexFileDeleter r0;
        java.util.Map $r2;
        int $i0;
        java.lang.String r1;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.apache.lucene.index.IndexFileDeleter;

        r1 := @parameter0: java.lang.String;

        $z0 = <org.apache.lucene.index.IndexFileDeleter: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z2 = specialinvoke r0.<org.apache.lucene.index.IndexFileDeleter: boolean locked()>();

        if $z2 != 0 goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label1:
        $r2 = r0.<org.apache.lucene.index.IndexFileDeleter: java.util.Map refCounts>;

        $z1 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z1 != 0 goto label2;

        return 0;

     label2:
        $r3 = specialinvoke r0.<org.apache.lucene.index.IndexFileDeleter: org.apache.lucene.index.IndexFileDeleter$RefCount getRefCount(java.lang.String)>(r1);

        $i0 = $r3.<org.apache.lucene.index.IndexFileDeleter$RefCount: int count>;

        if $i0 <= 0 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        return $z3;
    }

    private org.apache.lucene.index.IndexFileDeleter$RefCount getRefCount(java.lang.String)
    {
        org.apache.lucene.index.IndexFileDeleter$RefCount $r5, r8;
        java.lang.AssertionError $r7;
        org.apache.lucene.index.IndexFileDeleter r0;
        java.util.Map $r2, $r3, $r6;
        java.lang.Object $r4;
        java.lang.String r1;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.lucene.index.IndexFileDeleter;

        r1 := @parameter0: java.lang.String;

        $z0 = <org.apache.lucene.index.IndexFileDeleter: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z2 = specialinvoke r0.<org.apache.lucene.index.IndexFileDeleter: boolean locked()>();

        if $z2 != 0 goto label1;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

     label1:
        $r2 = r0.<org.apache.lucene.index.IndexFileDeleter: java.util.Map refCounts>;

        $z1 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z1 != 0 goto label2;

        $r5 = new org.apache.lucene.index.IndexFileDeleter$RefCount;

        specialinvoke $r5.<org.apache.lucene.index.IndexFileDeleter$RefCount: void <init>(java.lang.String)>(r1);

        r8 = $r5;

        $r6 = r0.<org.apache.lucene.index.IndexFileDeleter: java.util.Map refCounts>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r5);

        goto label3;

     label2:
        $r3 = r0.<org.apache.lucene.index.IndexFileDeleter: java.util.Map refCounts>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r8 = (org.apache.lucene.index.IndexFileDeleter$RefCount) $r4;

     label3:
        return r8;
    }

    void deleteFiles(java.util.List) throws java.io.IOException
    {
        java.util.Iterator $r1;
        java.lang.AssertionError $r5;
        org.apache.lucene.index.IndexFileDeleter r4;
        java.util.List r0;
        java.lang.Object $r2;
        java.lang.String r3;
        boolean $z0, $z1, $z2;

        r4 := @this: org.apache.lucene.index.IndexFileDeleter;

        r0 := @parameter0: java.util.List;

        $z0 = <org.apache.lucene.index.IndexFileDeleter: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = specialinvoke r4.<org.apache.lucene.index.IndexFileDeleter: boolean locked()>();

        if $z1 != 0 goto label1;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label1:
        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r2;

        virtualinvoke r4.<org.apache.lucene.index.IndexFileDeleter: void deleteFile(java.lang.String)>(r3);

        goto label2;

     label3:
        return;
    }

    void deleteNewFiles(java.util.Collection) throws java.io.IOException
    {
        java.lang.AssertionError $r16;
        org.apache.lucene.index.IndexFileDeleter r4;
        java.util.Map $r5, $r13;
        int $i0;
        java.lang.String r3, $r12;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.lucene.index.IndexFileDeleter$RefCount $r15;
        java.util.Iterator $r1;
        java.util.Collection r0;
        org.apache.lucene.util.InfoStream $r6, $r8;
        java.lang.Object $r2, $r14;
        java.lang.StringBuilder $r7, $r9, $r10, $r11;

        r4 := @this: org.apache.lucene.index.IndexFileDeleter;

        r0 := @parameter0: java.util.Collection;

        $z0 = <org.apache.lucene.index.IndexFileDeleter: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z3 = specialinvoke r4.<org.apache.lucene.index.IndexFileDeleter: boolean locked()>();

        if $z3 != 0 goto label1;

        $r16 = new java.lang.AssertionError;

        specialinvoke $r16.<java.lang.AssertionError: void <init>()>();

        throw $r16;

     label1:
        $r1 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z4 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label6;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r2;

        $r5 = r4.<org.apache.lucene.index.IndexFileDeleter: java.util.Map refCounts>;

        $z1 = interfaceinvoke $r5.<java.util.Map: boolean containsKey(java.lang.Object)>(r3);

        if $z1 == 0 goto label3;

        $r13 = r4.<org.apache.lucene.index.IndexFileDeleter: java.util.Map refCounts>;

        $r14 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        $r15 = (org.apache.lucene.index.IndexFileDeleter$RefCount) $r14;

        $i0 = $r15.<org.apache.lucene.index.IndexFileDeleter$RefCount: int count>;

        if $i0 != 0 goto label5;

     label3:
        $r6 = r4.<org.apache.lucene.index.IndexFileDeleter: org.apache.lucene.util.InfoStream infoStream>;

        $z2 = virtualinvoke $r6.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("IFD");

        if $z2 == 0 goto label4;

        $r8 = r4.<org.apache.lucene.index.IndexFileDeleter: org.apache.lucene.util.InfoStream infoStream>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("delete new file \"");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("IFD", $r12);

     label4:
        virtualinvoke r4.<org.apache.lucene.index.IndexFileDeleter: void deleteFile(java.lang.String)>(r3);

     label5:
        goto label2;

     label6:
        return;
    }

    void deleteFile(java.lang.String) throws java.io.IOException
    {
        java.lang.AssertionError $r10;
        org.apache.lucene.index.IndexFileDeleter r0;
        java.util.ArrayList $r16;
        org.apache.lucene.store.Directory $r3, $r12;
        java.lang.String r2, $r9, $r22, $r25;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.io.IOException $r11;
        java.util.List $r14, $r15;
        org.apache.lucene.util.InfoStream $r1, $r5, $r13, $r18;
        java.lang.StringBuilder $r4, $r6, $r7, $r8, $r17, $r19, $r20, $r21, $r23, $r24;

        r0 := @this: org.apache.lucene.index.IndexFileDeleter;

        r2 := @parameter0: java.lang.String;

        $z0 = <org.apache.lucene.index.IndexFileDeleter: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z2 = specialinvoke r0.<org.apache.lucene.index.IndexFileDeleter: boolean locked()>();

        if $z2 != 0 goto label1;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();

        throw $r10;

     label1:
        $r1 = r0.<org.apache.lucene.index.IndexFileDeleter: org.apache.lucene.util.InfoStream infoStream>;

        $z1 = virtualinvoke $r1.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("IFD");

        if $z1 == 0 goto label2;

        $r5 = r0.<org.apache.lucene.index.IndexFileDeleter: org.apache.lucene.util.InfoStream infoStream>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("delete \"");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("IFD", $r9);

     label2:
        $r3 = r0.<org.apache.lucene.index.IndexFileDeleter: org.apache.lucene.store.Directory directory>;

        virtualinvoke $r3.<org.apache.lucene.store.Directory: void deleteFile(java.lang.String)>(r2);

     label3:
        goto label7;

     label4:
        $r11 := @caughtexception;

        $r12 = r0.<org.apache.lucene.index.IndexFileDeleter: org.apache.lucene.store.Directory directory>;

        $z3 = virtualinvoke $r12.<org.apache.lucene.store.Directory: boolean fileExists(java.lang.String)>(r2);

        if $z3 == 0 goto label7;

        $r13 = r0.<org.apache.lucene.index.IndexFileDeleter: org.apache.lucene.util.InfoStream infoStream>;

        $z4 = virtualinvoke $r13.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("IFD");

        if $z4 == 0 goto label5;

        $r18 = r0.<org.apache.lucene.index.IndexFileDeleter: org.apache.lucene.util.InfoStream infoStream>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unable to remove file \"");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\": ");

        $r22 = virtualinvoke $r11.<java.io.IOException: java.lang.String toString()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; Will re-try later.");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r18.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("IFD", $r25);

     label5:
        $r14 = r0.<org.apache.lucene.index.IndexFileDeleter: java.util.List deletable>;

        if $r14 != null goto label6;

        $r16 = new java.util.ArrayList;

        specialinvoke $r16.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.lucene.index.IndexFileDeleter: java.util.List deletable> = $r16;

     label6:
        $r15 = r0.<org.apache.lucene.index.IndexFileDeleter: java.util.List deletable>;

        interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(r2);

     label7:
        return;

        catch java.io.IOException from label1 to label3 with label4;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/index/IndexFileDeleter;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.index.IndexFileDeleter: boolean $assertionsDisabled> = $z1;

        <org.apache.lucene.index.IndexFileDeleter: boolean VERBOSE_REF_COUNTS> = 0;

        return;
    }
}
