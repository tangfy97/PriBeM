public class org.apache.xalan.trace.ExtensionEvent extends java.lang.Object
{
    public static final int DEFAULT_CONSTRUCTOR;
    public static final int METHOD;
    public static final int CONSTRUCTOR;
    public final int m_callType;
    public final org.apache.xalan.transformer.TransformerImpl m_transformer;
    public final java.lang.Object m_method;
    public final java.lang.Object m_instance;
    public final java.lang.Object[] m_arguments;

    public void <init>(org.apache.xalan.transformer.TransformerImpl, java.lang.reflect.Method, java.lang.Object, java.lang.Object[])
    {
        java.lang.Object[] r4;
        org.apache.xalan.trace.ExtensionEvent r0;
        java.lang.Object r3;
        java.lang.reflect.Method r2;
        org.apache.xalan.transformer.TransformerImpl r1;

        r0 := @this: org.apache.xalan.trace.ExtensionEvent;

        r1 := @parameter0: org.apache.xalan.transformer.TransformerImpl;

        r2 := @parameter1: java.lang.reflect.Method;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xalan.trace.ExtensionEvent: org.apache.xalan.transformer.TransformerImpl m_transformer> = r1;

        r0.<org.apache.xalan.trace.ExtensionEvent: java.lang.Object m_method> = r2;

        r0.<org.apache.xalan.trace.ExtensionEvent: java.lang.Object m_instance> = r3;

        r0.<org.apache.xalan.trace.ExtensionEvent: java.lang.Object[] m_arguments> = r4;

        r0.<org.apache.xalan.trace.ExtensionEvent: int m_callType> = 1;

        return;
    }

    public void <init>(org.apache.xalan.transformer.TransformerImpl, java.lang.reflect.Constructor, java.lang.Object[])
    {
        java.lang.Object[] r2;
        org.apache.xalan.trace.ExtensionEvent r0;
        java.lang.reflect.Constructor r3;
        org.apache.xalan.transformer.TransformerImpl r1;

        r0 := @this: org.apache.xalan.trace.ExtensionEvent;

        r1 := @parameter0: org.apache.xalan.transformer.TransformerImpl;

        r3 := @parameter1: java.lang.reflect.Constructor;

        r2 := @parameter2: java.lang.Object[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xalan.trace.ExtensionEvent: org.apache.xalan.transformer.TransformerImpl m_transformer> = r1;

        r0.<org.apache.xalan.trace.ExtensionEvent: java.lang.Object m_instance> = null;

        r0.<org.apache.xalan.trace.ExtensionEvent: java.lang.Object[] m_arguments> = r2;

        r0.<org.apache.xalan.trace.ExtensionEvent: java.lang.Object m_method> = r3;

        r0.<org.apache.xalan.trace.ExtensionEvent: int m_callType> = 2;

        return;
    }

    public void <init>(org.apache.xalan.transformer.TransformerImpl, java.lang.Class)
    {
        java.lang.Class r2;
        org.apache.xalan.trace.ExtensionEvent r0;
        org.apache.xalan.transformer.TransformerImpl r1;

        r0 := @this: org.apache.xalan.trace.ExtensionEvent;

        r1 := @parameter0: org.apache.xalan.transformer.TransformerImpl;

        r2 := @parameter1: java.lang.Class;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xalan.trace.ExtensionEvent: org.apache.xalan.transformer.TransformerImpl m_transformer> = r1;

        r0.<org.apache.xalan.trace.ExtensionEvent: java.lang.Object m_instance> = null;

        r0.<org.apache.xalan.trace.ExtensionEvent: java.lang.Object[] m_arguments> = null;

        r0.<org.apache.xalan.trace.ExtensionEvent: java.lang.Object m_method> = r2;

        r0.<org.apache.xalan.trace.ExtensionEvent: int m_callType> = 0;

        return;
    }

    public static void <clinit>()
    {
        <org.apache.xalan.trace.ExtensionEvent: int CONSTRUCTOR> = 2;

        <org.apache.xalan.trace.ExtensionEvent: int METHOD> = 1;

        <org.apache.xalan.trace.ExtensionEvent: int DEFAULT_CONSTRUCTOR> = 0;

        return;
    }
}
