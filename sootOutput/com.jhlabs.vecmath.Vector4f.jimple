public class com.jhlabs.vecmath.Vector4f extends com.jhlabs.vecmath.Tuple4f
{

    public void <init>()
    {
        com.jhlabs.vecmath.Vector4f r0;

        r0 := @this: com.jhlabs.vecmath.Vector4f;

        specialinvoke r0.<com.jhlabs.vecmath.Vector4f: void <init>(float,float,float,float)>(0.0F, 0.0F, 0.0F, 0.0F);

        return;
    }

    public void <init>(float[])
    {
        float $f0, $f1, $f2, $f3;
        float[] r1;
        com.jhlabs.vecmath.Vector4f r0;

        r0 := @this: com.jhlabs.vecmath.Vector4f;

        r1 := @parameter0: float[];

        specialinvoke r0.<com.jhlabs.vecmath.Tuple4f: void <init>()>();

        $f0 = r1[0];

        r0.<com.jhlabs.vecmath.Tuple4f: float x> = $f0;

        $f1 = r1[1];

        r0.<com.jhlabs.vecmath.Tuple4f: float y> = $f1;

        $f2 = r1[2];

        r0.<com.jhlabs.vecmath.Tuple4f: float z> = $f2;

        $f3 = r1[2];

        r0.<com.jhlabs.vecmath.Tuple4f: float w> = $f3;

        return;
    }

    public void <init>(float, float, float, float)
    {
        float f0, f1, f2, f3;
        com.jhlabs.vecmath.Vector4f r0;

        r0 := @this: com.jhlabs.vecmath.Vector4f;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        specialinvoke r0.<com.jhlabs.vecmath.Tuple4f: void <init>()>();

        r0.<com.jhlabs.vecmath.Tuple4f: float x> = f0;

        r0.<com.jhlabs.vecmath.Tuple4f: float y> = f1;

        r0.<com.jhlabs.vecmath.Tuple4f: float z> = f2;

        r0.<com.jhlabs.vecmath.Tuple4f: float w> = f3;

        return;
    }

    public void <init>(com.jhlabs.vecmath.Vector4f)
    {
        float $f0, $f1, $f2, $f3;
        com.jhlabs.vecmath.Vector4f r0, r1;

        r0 := @this: com.jhlabs.vecmath.Vector4f;

        r1 := @parameter0: com.jhlabs.vecmath.Vector4f;

        specialinvoke r0.<com.jhlabs.vecmath.Tuple4f: void <init>()>();

        $f0 = r1.<com.jhlabs.vecmath.Tuple4f: float x>;

        r0.<com.jhlabs.vecmath.Tuple4f: float x> = $f0;

        $f1 = r1.<com.jhlabs.vecmath.Tuple4f: float y>;

        r0.<com.jhlabs.vecmath.Tuple4f: float y> = $f1;

        $f2 = r1.<com.jhlabs.vecmath.Tuple4f: float z>;

        r0.<com.jhlabs.vecmath.Tuple4f: float z> = $f2;

        $f3 = r1.<com.jhlabs.vecmath.Tuple4f: float w>;

        r0.<com.jhlabs.vecmath.Tuple4f: float w> = $f3;

        return;
    }

    public void <init>(com.jhlabs.vecmath.Tuple4f)
    {
        com.jhlabs.vecmath.Tuple4f r1;
        float $f0, $f1, $f2, $f3;
        com.jhlabs.vecmath.Vector4f r0;

        r0 := @this: com.jhlabs.vecmath.Vector4f;

        r1 := @parameter0: com.jhlabs.vecmath.Tuple4f;

        specialinvoke r0.<com.jhlabs.vecmath.Tuple4f: void <init>()>();

        $f0 = r1.<com.jhlabs.vecmath.Tuple4f: float x>;

        r0.<com.jhlabs.vecmath.Tuple4f: float x> = $f0;

        $f1 = r1.<com.jhlabs.vecmath.Tuple4f: float y>;

        r0.<com.jhlabs.vecmath.Tuple4f: float y> = $f1;

        $f2 = r1.<com.jhlabs.vecmath.Tuple4f: float z>;

        r0.<com.jhlabs.vecmath.Tuple4f: float z> = $f2;

        $f3 = r1.<com.jhlabs.vecmath.Tuple4f: float w>;

        r0.<com.jhlabs.vecmath.Tuple4f: float w> = $f3;

        return;
    }

    public float dot(com.jhlabs.vecmath.Vector4f)
    {
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14;
        com.jhlabs.vecmath.Vector4f r0, r1;

        r1 := @this: com.jhlabs.vecmath.Vector4f;

        r0 := @parameter0: com.jhlabs.vecmath.Vector4f;

        $f1 = r0.<com.jhlabs.vecmath.Tuple4f: float x>;

        $f0 = r1.<com.jhlabs.vecmath.Tuple4f: float x>;

        $f5 = $f1 * $f0;

        $f3 = r0.<com.jhlabs.vecmath.Tuple4f: float y>;

        $f2 = r1.<com.jhlabs.vecmath.Tuple4f: float y>;

        $f4 = $f3 * $f2;

        $f9 = $f5 + $f4;

        $f7 = r0.<com.jhlabs.vecmath.Tuple4f: float z>;

        $f6 = r1.<com.jhlabs.vecmath.Tuple4f: float z>;

        $f8 = $f7 * $f6;

        $f13 = $f9 + $f8;

        $f11 = r0.<com.jhlabs.vecmath.Tuple4f: float w>;

        $f10 = r1.<com.jhlabs.vecmath.Tuple4f: float w>;

        $f12 = $f11 * $f10;

        $f14 = $f13 + $f12;

        return $f14;
    }

    public float length()
    {
        double $d0, $d1;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15;
        com.jhlabs.vecmath.Vector4f r0;

        r0 := @this: com.jhlabs.vecmath.Vector4f;

        $f1 = r0.<com.jhlabs.vecmath.Tuple4f: float x>;

        $f0 = r0.<com.jhlabs.vecmath.Tuple4f: float x>;

        $f5 = $f1 * $f0;

        $f3 = r0.<com.jhlabs.vecmath.Tuple4f: float y>;

        $f2 = r0.<com.jhlabs.vecmath.Tuple4f: float y>;

        $f4 = $f3 * $f2;

        $f9 = $f5 + $f4;

        $f7 = r0.<com.jhlabs.vecmath.Tuple4f: float z>;

        $f6 = r0.<com.jhlabs.vecmath.Tuple4f: float z>;

        $f8 = $f7 * $f6;

        $f13 = $f9 + $f8;

        $f11 = r0.<com.jhlabs.vecmath.Tuple4f: float w>;

        $f10 = r0.<com.jhlabs.vecmath.Tuple4f: float w>;

        $f12 = $f11 * $f10;

        $f14 = $f13 + $f12;

        $d0 = (double) $f14;

        $d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $f15 = (float) $d1;

        return $f15;
    }

    public void normalize()
    {
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23;
        com.jhlabs.vecmath.Vector4f r0;

        r0 := @this: com.jhlabs.vecmath.Vector4f;

        $f1 = r0.<com.jhlabs.vecmath.Tuple4f: float x>;

        $f0 = r0.<com.jhlabs.vecmath.Tuple4f: float x>;

        $f5 = $f1 * $f0;

        $f3 = r0.<com.jhlabs.vecmath.Tuple4f: float y>;

        $f2 = r0.<com.jhlabs.vecmath.Tuple4f: float y>;

        $f4 = $f3 * $f2;

        $f9 = $f5 + $f4;

        $f7 = r0.<com.jhlabs.vecmath.Tuple4f: float z>;

        $f6 = r0.<com.jhlabs.vecmath.Tuple4f: float z>;

        $f8 = $f7 * $f6;

        $f13 = $f9 + $f8;

        $f11 = r0.<com.jhlabs.vecmath.Tuple4f: float w>;

        $f10 = r0.<com.jhlabs.vecmath.Tuple4f: float w>;

        $f12 = $f11 * $f10;

        $f14 = $f13 + $f12;

        f15 = 1.0F / $f14;

        $f16 = r0.<com.jhlabs.vecmath.Tuple4f: float x>;

        $f17 = $f16 * f15;

        r0.<com.jhlabs.vecmath.Tuple4f: float x> = $f17;

        $f18 = r0.<com.jhlabs.vecmath.Tuple4f: float y>;

        $f19 = $f18 * f15;

        r0.<com.jhlabs.vecmath.Tuple4f: float y> = $f19;

        $f20 = r0.<com.jhlabs.vecmath.Tuple4f: float z>;

        $f21 = $f20 * f15;

        r0.<com.jhlabs.vecmath.Tuple4f: float z> = $f21;

        $f22 = r0.<com.jhlabs.vecmath.Tuple4f: float w>;

        $f23 = $f22 * f15;

        r0.<com.jhlabs.vecmath.Tuple4f: float w> = $f23;

        return;
    }
}
