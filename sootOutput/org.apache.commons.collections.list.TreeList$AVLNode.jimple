class org.apache.commons.collections.list.TreeList$AVLNode extends java.lang.Object
{
    private org.apache.commons.collections.list.TreeList$AVLNode left;
    private boolean leftIsPrevious;
    private org.apache.commons.collections.list.TreeList$AVLNode right;
    private boolean rightIsNext;
    private int height;
    private int relativePosition;
    private java.lang.Object value;

    private void <init>(int, java.lang.Object, org.apache.commons.collections.list.TreeList$AVLNode, org.apache.commons.collections.list.TreeList$AVLNode)
    {
        org.apache.commons.collections.list.TreeList$AVLNode r0, r2, r3;
        int i0;
        java.lang.Object r1;

        r0 := @this: org.apache.commons.collections.list.TreeList$AVLNode;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: org.apache.commons.collections.list.TreeList$AVLNode;

        r3 := @parameter3: org.apache.commons.collections.list.TreeList$AVLNode;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.collections.list.TreeList$AVLNode: int relativePosition> = i0;

        r0.<org.apache.commons.collections.list.TreeList$AVLNode: java.lang.Object value> = r1;

        r0.<org.apache.commons.collections.list.TreeList$AVLNode: boolean rightIsNext> = 1;

        r0.<org.apache.commons.collections.list.TreeList$AVLNode: boolean leftIsPrevious> = 1;

        r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode right> = r2;

        r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode left> = r3;

        return;
    }

    java.lang.Object getValue()
    {
        java.lang.Object $r1;
        org.apache.commons.collections.list.TreeList$AVLNode r0;

        r0 := @this: org.apache.commons.collections.list.TreeList$AVLNode;

        $r1 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: java.lang.Object value>;

        return $r1;
    }

    void setValue(java.lang.Object)
    {
        java.lang.Object r1;
        org.apache.commons.collections.list.TreeList$AVLNode r0;

        r0 := @this: org.apache.commons.collections.list.TreeList$AVLNode;

        r1 := @parameter0: java.lang.Object;

        r0.<org.apache.commons.collections.list.TreeList$AVLNode: java.lang.Object value> = r1;

        return;
    }

    org.apache.commons.collections.list.TreeList$AVLNode get(int)
    {
        org.apache.commons.collections.list.TreeList$AVLNode r0, $r1, $r2;
        int i0, $i1, i2;

        r0 := @this: org.apache.commons.collections.list.TreeList$AVLNode;

        i0 := @parameter0: int;

        $i1 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: int relativePosition>;

        i2 = i0 - $i1;

        if i2 != 0 goto label1;

        return r0;

     label1:
        if i2 >= 0 goto label2;

        $r2 = specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode getLeftSubTree()>();

        goto label3;

     label2:
        $r2 = specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode getRightSubTree()>();

     label3:
        if $r2 != null goto label4;

        return null;

     label4:
        $r1 = virtualinvoke $r2.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode get(int)>(i2);

        return $r1;
    }

    int indexOf(java.lang.Object, int)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8, $i10;
        boolean $z0;
        org.apache.commons.collections.list.TreeList$AVLNode r0, $r1, $r5, $r6, $r7, $r9, $r10;
        java.lang.Object $r2, r3, $r4, $r8;

        r0 := @this: org.apache.commons.collections.list.TreeList$AVLNode;

        r3 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        $r1 = specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode getLeftSubTree()>();

        if $r1 == null goto label1;

        $r10 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode left>;

        $r9 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode left>;

        $i4 = $r9.<org.apache.commons.collections.list.TreeList$AVLNode: int relativePosition>;

        $i5 = i0 + $i4;

        $i6 = virtualinvoke $r10.<org.apache.commons.collections.list.TreeList$AVLNode: int indexOf(java.lang.Object,int)>(r3, $i5);

        $i8 = (int) -1;

        if $i6 == $i8 goto label1;

        return $i6;

     label1:
        $r2 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: java.lang.Object value>;

        if $r2 != null goto label2;

        $r8 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: java.lang.Object value>;

        if $r8 != r3 goto label4;

        goto label3;

     label2:
        $r4 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: java.lang.Object value>;

        $z0 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>(r3);

        if $z0 == 0 goto label4;

     label3:
        return i0;

     label4:
        $r5 = specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode getRightSubTree()>();

        if $r5 == null goto label5;

        $r7 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode right>;

        $r6 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode right>;

        $i1 = $r6.<org.apache.commons.collections.list.TreeList$AVLNode: int relativePosition>;

        $i2 = i0 + $i1;

        $i3 = virtualinvoke $r7.<org.apache.commons.collections.list.TreeList$AVLNode: int indexOf(java.lang.Object,int)>(r3, $i2);

        return $i3;

     label5:
        $i10 = (int) -1;

        return $i10;
    }

    void toArray(java.lang.Object[], int)
    {
        java.lang.Object[] r0;
        org.apache.commons.collections.list.TreeList$AVLNode r1, $r3, $r4, $r5, $r6, $r7, $r8;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.Object $r2;

        r1 := @this: org.apache.commons.collections.list.TreeList$AVLNode;

        r0 := @parameter0: java.lang.Object[];

        i0 := @parameter1: int;

        $r2 = r1.<org.apache.commons.collections.list.TreeList$AVLNode: java.lang.Object value>;

        r0[i0] = $r2;

        $r3 = specialinvoke r1.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode getLeftSubTree()>();

        if $r3 == null goto label1;

        $r8 = r1.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode left>;

        $r7 = r1.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode left>;

        $i3 = $r7.<org.apache.commons.collections.list.TreeList$AVLNode: int relativePosition>;

        $i4 = i0 + $i3;

        virtualinvoke $r8.<org.apache.commons.collections.list.TreeList$AVLNode: void toArray(java.lang.Object[],int)>(r0, $i4);

     label1:
        $r4 = specialinvoke r1.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode getRightSubTree()>();

        if $r4 == null goto label2;

        $r6 = r1.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode right>;

        $r5 = r1.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode right>;

        $i1 = $r5.<org.apache.commons.collections.list.TreeList$AVLNode: int relativePosition>;

        $i2 = i0 + $i1;

        virtualinvoke $r6.<org.apache.commons.collections.list.TreeList$AVLNode: void toArray(java.lang.Object[],int)>(r0, $i2);

     label2:
        return;
    }

    org.apache.commons.collections.list.TreeList$AVLNode next()
    {
        org.apache.commons.collections.list.TreeList$AVLNode r0, $r1, $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.list.TreeList$AVLNode;

        $z0 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: boolean rightIsNext>;

        if $z0 != 0 goto label1;

        $r2 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode right>;

        if $r2 != null goto label2;

     label1:
        $r1 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode right>;

        return $r1;

     label2:
        $r3 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode right>;

        $r4 = specialinvoke $r3.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode min()>();

        return $r4;
    }

    org.apache.commons.collections.list.TreeList$AVLNode previous()
    {
        org.apache.commons.collections.list.TreeList$AVLNode r0, $r1, $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.list.TreeList$AVLNode;

        $z0 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: boolean leftIsPrevious>;

        if $z0 != 0 goto label1;

        $r2 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode left>;

        if $r2 != null goto label2;

     label1:
        $r1 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode left>;

        return $r1;

     label2:
        $r3 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode left>;

        $r4 = specialinvoke $r3.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode max()>();

        return $r4;
    }

    org.apache.commons.collections.list.TreeList$AVLNode insert(int, java.lang.Object)
    {
        org.apache.commons.collections.list.TreeList$AVLNode r0, $r2, $r3;
        int i0, $i1, i2;
        java.lang.Object r1;

        r0 := @this: org.apache.commons.collections.list.TreeList$AVLNode;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        $i1 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: int relativePosition>;

        i2 = i0 - $i1;

        if i2 > 0 goto label1;

        $r3 = specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode insertOnLeft(int,java.lang.Object)>(i2, r1);

        return $r3;

     label1:
        $r2 = specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode insertOnRight(int,java.lang.Object)>(i2, r1);

        return $r2;
    }

    private org.apache.commons.collections.list.TreeList$AVLNode insertOnLeft(int, java.lang.Object)
    {
        org.apache.commons.collections.list.TreeList$AVLNode r0, $r1, $r3, $r4, $r5, $r7, $r8;
        int i0, $i1, $i2, $i3, $i5;
        java.lang.Object r2;

        r0 := @this: org.apache.commons.collections.list.TreeList$AVLNode;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.Object;

        $r1 = specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode getLeftSubTree()>();

        if $r1 != null goto label1;

        $r8 = new org.apache.commons.collections.list.TreeList$AVLNode;

        $r7 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode left>;

        $i5 = (int) -1;

        specialinvoke $r8.<org.apache.commons.collections.list.TreeList$AVLNode: void <init>(int,java.lang.Object,org.apache.commons.collections.list.TreeList$AVLNode,org.apache.commons.collections.list.TreeList$AVLNode)>($i5, r2, r0, $r7);

        specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: void setLeft(org.apache.commons.collections.list.TreeList$AVLNode,org.apache.commons.collections.list.TreeList$AVLNode)>($r8, null);

        goto label2;

     label1:
        $r3 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode left>;

        $r4 = virtualinvoke $r3.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode insert(int,java.lang.Object)>(i0, r2);

        specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: void setLeft(org.apache.commons.collections.list.TreeList$AVLNode,org.apache.commons.collections.list.TreeList$AVLNode)>($r4, null);

     label2:
        $i1 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: int relativePosition>;

        if $i1 < 0 goto label3;

        $i2 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: int relativePosition>;

        $i3 = $i2 + 1;

        r0.<org.apache.commons.collections.list.TreeList$AVLNode: int relativePosition> = $i3;

     label3:
        $r5 = specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode balance()>();

        specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: void recalcHeight()>();

        return $r5;
    }

    private org.apache.commons.collections.list.TreeList$AVLNode insertOnRight(int, java.lang.Object)
    {
        org.apache.commons.collections.list.TreeList$AVLNode r0, $r1, $r3, $r4, $r5, $r6, $r7;
        int i0, $i1, $i2, $i3;
        java.lang.Object r2;

        r0 := @this: org.apache.commons.collections.list.TreeList$AVLNode;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.Object;

        $r1 = specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode getRightSubTree()>();

        if $r1 != null goto label1;

        $r6 = new org.apache.commons.collections.list.TreeList$AVLNode;

        $r7 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode right>;

        specialinvoke $r6.<org.apache.commons.collections.list.TreeList$AVLNode: void <init>(int,java.lang.Object,org.apache.commons.collections.list.TreeList$AVLNode,org.apache.commons.collections.list.TreeList$AVLNode)>(1, r2, $r7, r0);

        specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: void setRight(org.apache.commons.collections.list.TreeList$AVLNode,org.apache.commons.collections.list.TreeList$AVLNode)>($r6, null);

        goto label2;

     label1:
        $r3 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode right>;

        $r4 = virtualinvoke $r3.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode insert(int,java.lang.Object)>(i0, r2);

        specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: void setRight(org.apache.commons.collections.list.TreeList$AVLNode,org.apache.commons.collections.list.TreeList$AVLNode)>($r4, null);

     label2:
        $i1 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: int relativePosition>;

        if $i1 >= 0 goto label3;

        $i2 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: int relativePosition>;

        $i3 = $i2 - 1;

        r0.<org.apache.commons.collections.list.TreeList$AVLNode: int relativePosition> = $i3;

     label3:
        $r5 = specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode balance()>();

        specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: void recalcHeight()>();

        return $r5;
    }

    private org.apache.commons.collections.list.TreeList$AVLNode getLeftSubTree()
    {
        org.apache.commons.collections.list.TreeList$AVLNode r0, $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.list.TreeList$AVLNode;

        $z0 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: boolean leftIsPrevious>;

        if $z0 == 0 goto label1;

        $r1 = null;

        goto label2;

     label1:
        $r1 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode left>;

     label2:
        return $r1;
    }

    private org.apache.commons.collections.list.TreeList$AVLNode getRightSubTree()
    {
        org.apache.commons.collections.list.TreeList$AVLNode r0, $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.list.TreeList$AVLNode;

        $z0 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: boolean rightIsNext>;

        if $z0 == 0 goto label1;

        $r1 = null;

        goto label2;

     label1:
        $r1 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode right>;

     label2:
        return $r1;
    }

    private org.apache.commons.collections.list.TreeList$AVLNode max()
    {
        org.apache.commons.collections.list.TreeList$AVLNode r0, $r1, $r2, $r3;

        r0 := @this: org.apache.commons.collections.list.TreeList$AVLNode;

        $r1 = specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode getRightSubTree()>();

        if $r1 != null goto label1;

        $r3 = r0;

        goto label2;

     label1:
        $r2 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode right>;

        $r3 = specialinvoke $r2.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode max()>();

     label2:
        return $r3;
    }

    private org.apache.commons.collections.list.TreeList$AVLNode min()
    {
        org.apache.commons.collections.list.TreeList$AVLNode r0, $r1, $r2, $r3;

        r0 := @this: org.apache.commons.collections.list.TreeList$AVLNode;

        $r1 = specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode getLeftSubTree()>();

        if $r1 != null goto label1;

        $r3 = r0;

        goto label2;

     label1:
        $r2 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode left>;

        $r3 = specialinvoke $r2.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode min()>();

     label2:
        return $r3;
    }

    org.apache.commons.collections.list.TreeList$AVLNode remove(int)
    {
        int i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8;
        org.apache.commons.collections.list.TreeList$AVLNode r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        r0 := @this: org.apache.commons.collections.list.TreeList$AVLNode;

        i0 := @parameter0: int;

        $i1 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: int relativePosition>;

        i2 = i0 - $i1;

        if i2 != 0 goto label1;

        $r9 = specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode removeSelf()>();

        return $r9;

     label1:
        if i2 <= 0 goto label2;

        $r5 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode right>;

        $r6 = virtualinvoke $r5.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode remove(int)>(i2);

        $r7 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode right>;

        $r8 = $r7.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode right>;

        specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: void setRight(org.apache.commons.collections.list.TreeList$AVLNode,org.apache.commons.collections.list.TreeList$AVLNode)>($r6, $r8);

        $i6 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: int relativePosition>;

        if $i6 >= 0 goto label3;

        $i7 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: int relativePosition>;

        $i8 = $i7 + 1;

        r0.<org.apache.commons.collections.list.TreeList$AVLNode: int relativePosition> = $i8;

        goto label3;

     label2:
        $r1 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode left>;

        $r2 = virtualinvoke $r1.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode remove(int)>(i2);

        $r3 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode left>;

        $r4 = $r3.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode left>;

        specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: void setLeft(org.apache.commons.collections.list.TreeList$AVLNode,org.apache.commons.collections.list.TreeList$AVLNode)>($r2, $r4);

        $i3 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: int relativePosition>;

        if $i3 <= 0 goto label3;

        $i4 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: int relativePosition>;

        $i5 = $i4 - 1;

        r0.<org.apache.commons.collections.list.TreeList$AVLNode: int relativePosition> = $i5;

     label3:
        specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: void recalcHeight()>();

        $r10 = specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode balance()>();

        return $r10;
    }

    private org.apache.commons.collections.list.TreeList$AVLNode removeMax()
    {
        org.apache.commons.collections.list.TreeList$AVLNode r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.commons.collections.list.TreeList$AVLNode;

        $r1 = specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode getRightSubTree()>();

        if $r1 != null goto label1;

        $r7 = specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode removeSelf()>();

        return $r7;

     label1:
        $r2 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode right>;

        $r3 = specialinvoke $r2.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode removeMax()>();

        $r4 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode right>;

        $r5 = $r4.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode right>;

        specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: void setRight(org.apache.commons.collections.list.TreeList$AVLNode,org.apache.commons.collections.list.TreeList$AVLNode)>($r3, $r5);

        $i0 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: int relativePosition>;

        if $i0 >= 0 goto label2;

        $i1 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: int relativePosition>;

        $i2 = $i1 + 1;

        r0.<org.apache.commons.collections.list.TreeList$AVLNode: int relativePosition> = $i2;

     label2:
        specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: void recalcHeight()>();

        $r6 = specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode balance()>();

        return $r6;
    }

    private org.apache.commons.collections.list.TreeList$AVLNode removeMin()
    {
        org.apache.commons.collections.list.TreeList$AVLNode r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.commons.collections.list.TreeList$AVLNode;

        $r1 = specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode getLeftSubTree()>();

        if $r1 != null goto label1;

        $r7 = specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode removeSelf()>();

        return $r7;

     label1:
        $r2 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode left>;

        $r3 = specialinvoke $r2.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode removeMin()>();

        $r4 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode left>;

        $r5 = $r4.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode left>;

        specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: void setLeft(org.apache.commons.collections.list.TreeList$AVLNode,org.apache.commons.collections.list.TreeList$AVLNode)>($r3, $r5);

        $i0 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: int relativePosition>;

        if $i0 <= 0 goto label2;

        $i1 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: int relativePosition>;

        $i2 = $i1 - 1;

        r0.<org.apache.commons.collections.list.TreeList$AVLNode: int relativePosition> = $i2;

     label2:
        specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: void recalcHeight()>();

        $r6 = specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode balance()>();

        return $r6;
    }

    private org.apache.commons.collections.list.TreeList$AVLNode removeSelf()
    {
        boolean $z0, $z1, $z2, $z3;
        org.apache.commons.collections.list.TreeList$AVLNode r0, $r1, $r2, $r3, $r4, $r5, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        java.lang.Object $r6, $r15;

        r0 := @this: org.apache.commons.collections.list.TreeList$AVLNode;

        $r1 = specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode getRightSubTree()>();

        if $r1 != null goto label01;

        $r25 = specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode getLeftSubTree()>();

        if $r25 != null goto label01;

        return null;

     label01:
        $r2 = specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode getRightSubTree()>();

        if $r2 != null goto label05;

        $i12 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: int relativePosition>;

        if $i12 <= 0 goto label04;

        $r24 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode left>;

        $i16 = $r24.<org.apache.commons.collections.list.TreeList$AVLNode: int relativePosition>;

        $i14 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: int relativePosition>;

        $i13 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: int relativePosition>;

        if $i13 <= 0 goto label02;

        $z2 = 0;

        goto label03;

     label02:
        $z2 = 1;

     label03:
        $i15 = $i14 + $z2;

        $i17 = $i16 + $i15;

        $r24.<org.apache.commons.collections.list.TreeList$AVLNode: int relativePosition> = $i17;

     label04:
        $r26 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode left>;

        $r27 = specialinvoke $r26.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode max()>();

        $r28 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode right>;

        specialinvoke $r27.<org.apache.commons.collections.list.TreeList$AVLNode: void setRight(org.apache.commons.collections.list.TreeList$AVLNode,org.apache.commons.collections.list.TreeList$AVLNode)>(null, $r28);

        $r29 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode left>;

        return $r29;

     label05:
        $r3 = specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode getLeftSubTree()>();

        if $r3 != null goto label08;

        $r19 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode right>;

        $i10 = $r19.<org.apache.commons.collections.list.TreeList$AVLNode: int relativePosition>;

        $i8 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: int relativePosition>;

        $i7 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: int relativePosition>;

        if $i7 >= 0 goto label06;

        $z3 = 0;

        goto label07;

     label06:
        $z3 = 1;

     label07:
        $i9 = $i8 - $z3;

        $i11 = $i10 + $i9;

        $r19.<org.apache.commons.collections.list.TreeList$AVLNode: int relativePosition> = $i11;

        $r20 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode right>;

        $r21 = specialinvoke $r20.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode min()>();

        $r22 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode left>;

        specialinvoke $r21.<org.apache.commons.collections.list.TreeList$AVLNode: void setLeft(org.apache.commons.collections.list.TreeList$AVLNode,org.apache.commons.collections.list.TreeList$AVLNode)>(null, $r22);

        $r23 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode right>;

        return $r23;

     label08:
        $i0 = specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: int heightRightMinusLeft()>();

        if $i0 <= 0 goto label11;

        $r13 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode right>;

        $r14 = specialinvoke $r13.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode min()>();

        $r15 = $r14.<org.apache.commons.collections.list.TreeList$AVLNode: java.lang.Object value>;

        r0.<org.apache.commons.collections.list.TreeList$AVLNode: java.lang.Object value> = $r15;

        $z1 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: boolean leftIsPrevious>;

        if $z1 == 0 goto label09;

        $r18 = $r14.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode left>;

        r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode left> = $r18;

     label09:
        $r16 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode right>;

        $r17 = specialinvoke $r16.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode removeMin()>();

        r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode right> = $r17;

        $i4 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: int relativePosition>;

        if $i4 >= 0 goto label10;

        $i5 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: int relativePosition>;

        $i6 = $i5 + 1;

        r0.<org.apache.commons.collections.list.TreeList$AVLNode: int relativePosition> = $i6;

     label10:
        goto label14;

     label11:
        $r4 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode left>;

        $r5 = specialinvoke $r4.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode max()>();

        $r6 = $r5.<org.apache.commons.collections.list.TreeList$AVLNode: java.lang.Object value>;

        r0.<org.apache.commons.collections.list.TreeList$AVLNode: java.lang.Object value> = $r6;

        $z0 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: boolean rightIsNext>;

        if $z0 == 0 goto label12;

        $r11 = $r5.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode right>;

        r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode right> = $r11;

     label12:
        $r7 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode left>;

        $r12 = $r7.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode left>;

        $r8 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode left>;

        $r9 = specialinvoke $r8.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode removeMax()>();

        r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode left> = $r9;

        $r10 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode left>;

        if $r10 != null goto label13;

        r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode left> = $r12;

        r0.<org.apache.commons.collections.list.TreeList$AVLNode: boolean leftIsPrevious> = 1;

     label13:
        $i1 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: int relativePosition>;

        if $i1 <= 0 goto label14;

        $i2 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: int relativePosition>;

        $i3 = $i2 - 1;

        r0.<org.apache.commons.collections.list.TreeList$AVLNode: int relativePosition> = $i3;

     label14:
        specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: void recalcHeight()>();

        return r0;
    }

    private org.apache.commons.collections.list.TreeList$AVLNode balance()
    {
        java.lang.RuntimeException $r9;
        org.apache.commons.collections.list.TreeList$AVLNode r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.commons.collections.list.TreeList$AVLNode;

        $i0 = specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: int heightRightMinusLeft()>();

        tableswitch($i0)
        {
            case -2: goto label2;
            case -1: goto label1;
            case 0: goto label1;
            case 1: goto label1;
            case 2: goto label4;
            default: goto label6;
        };

     label1:
        return r0;

     label2:
        $r5 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode left>;

        $i2 = specialinvoke $r5.<org.apache.commons.collections.list.TreeList$AVLNode: int heightRightMinusLeft()>();

        if $i2 <= 0 goto label3;

        $r7 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode left>;

        $r8 = specialinvoke $r7.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode rotateLeft()>();

        specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: void setLeft(org.apache.commons.collections.list.TreeList$AVLNode,org.apache.commons.collections.list.TreeList$AVLNode)>($r8, null);

     label3:
        $r6 = specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode rotateRight()>();

        return $r6;

     label4:
        $r1 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode right>;

        $i1 = specialinvoke $r1.<org.apache.commons.collections.list.TreeList$AVLNode: int heightRightMinusLeft()>();

        if $i1 >= 0 goto label5;

        $r3 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode right>;

        $r4 = specialinvoke $r3.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode rotateRight()>();

        specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: void setRight(org.apache.commons.collections.list.TreeList$AVLNode,org.apache.commons.collections.list.TreeList$AVLNode)>($r4, null);

     label5:
        $r2 = specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode rotateLeft()>();

        return $r2;

     label6:
        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String)>("tree inconsistent!");

        throw $r9;
    }

    private int getOffset(org.apache.commons.collections.list.TreeList$AVLNode)
    {
        int $i0;
        org.apache.commons.collections.list.TreeList$AVLNode r0, r1;

        r1 := @this: org.apache.commons.collections.list.TreeList$AVLNode;

        r0 := @parameter0: org.apache.commons.collections.list.TreeList$AVLNode;

        if r0 != null goto label1;

        return 0;

     label1:
        $i0 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: int relativePosition>;

        return $i0;
    }

    private int setOffset(org.apache.commons.collections.list.TreeList$AVLNode, int)
    {
        org.apache.commons.collections.list.TreeList$AVLNode r0, r1;
        int $i0, i1;

        r1 := @this: org.apache.commons.collections.list.TreeList$AVLNode;

        r0 := @parameter0: org.apache.commons.collections.list.TreeList$AVLNode;

        i1 := @parameter1: int;

        if r0 != null goto label1;

        return 0;

     label1:
        $i0 = specialinvoke r1.<org.apache.commons.collections.list.TreeList$AVLNode: int getOffset(org.apache.commons.collections.list.TreeList$AVLNode)>(r0);

        r0.<org.apache.commons.collections.list.TreeList$AVLNode: int relativePosition> = i1;

        return $i0;
    }

    private void recalcHeight()
    {
        org.apache.commons.collections.list.TreeList$AVLNode r0, $r1, $r2, $r3, $r4;
        int $i0, $i1, $i2, $i3, $i5, $i7;

        r0 := @this: org.apache.commons.collections.list.TreeList$AVLNode;

        $r1 = specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode getLeftSubTree()>();

        if $r1 != null goto label1;

        $i5 = (int) -1;

        $i0 = $i5;

        goto label2;

     label1:
        $r2 = specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode getLeftSubTree()>();

        $i0 = $r2.<org.apache.commons.collections.list.TreeList$AVLNode: int height>;

     label2:
        $r3 = specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode getRightSubTree()>();

        if $r3 != null goto label3;

        $i7 = (int) -1;

        $i1 = $i7;

        goto label4;

     label3:
        $r4 = specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode getRightSubTree()>();

        $i1 = $r4.<org.apache.commons.collections.list.TreeList$AVLNode: int height>;

     label4:
        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i1);

        $i3 = $i2 + 1;

        r0.<org.apache.commons.collections.list.TreeList$AVLNode: int height> = $i3;

        return;
    }

    private int getHeight(org.apache.commons.collections.list.TreeList$AVLNode)
    {
        org.apache.commons.collections.list.TreeList$AVLNode r0, r1;
        int $i0, $i2;

        r1 := @this: org.apache.commons.collections.list.TreeList$AVLNode;

        r0 := @parameter0: org.apache.commons.collections.list.TreeList$AVLNode;

        if r0 != null goto label1;

        $i2 = (int) -1;

        $i0 = $i2;

        goto label2;

     label1:
        $i0 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: int height>;

     label2:
        return $i0;
    }

    private int heightRightMinusLeft()
    {
        org.apache.commons.collections.list.TreeList$AVLNode r0, $r1, $r2;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.commons.collections.list.TreeList$AVLNode;

        $r1 = specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode getRightSubTree()>();

        $i0 = specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: int getHeight(org.apache.commons.collections.list.TreeList$AVLNode)>($r1);

        $r2 = specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode getLeftSubTree()>();

        $i1 = specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: int getHeight(org.apache.commons.collections.list.TreeList$AVLNode)>($r2);

        $i2 = $i0 - $i1;

        return $i2;
    }

    private org.apache.commons.collections.list.TreeList$AVLNode rotateLeft()
    {
        org.apache.commons.collections.list.TreeList$AVLNode r0, r1, $r2, $r3;
        int $i0, $i1, i2, $i3, i4, $i5, $i6, i7;

        r0 := @this: org.apache.commons.collections.list.TreeList$AVLNode;

        r1 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode right>;

        $r2 = specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode getRightSubTree()>();

        $r3 = specialinvoke $r2.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode getLeftSubTree()>();

        $i0 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: int relativePosition>;

        $i1 = specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: int getOffset(org.apache.commons.collections.list.TreeList$AVLNode)>(r1);

        i2 = $i0 + $i1;

        $i3 = r1.<org.apache.commons.collections.list.TreeList$AVLNode: int relativePosition>;

        i4 = neg $i3;

        $i5 = specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: int getOffset(org.apache.commons.collections.list.TreeList$AVLNode)>(r1);

        $i6 = specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: int getOffset(org.apache.commons.collections.list.TreeList$AVLNode)>($r3);

        i7 = $i5 + $i6;

        specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: void setRight(org.apache.commons.collections.list.TreeList$AVLNode,org.apache.commons.collections.list.TreeList$AVLNode)>($r3, r1);

        specialinvoke r1.<org.apache.commons.collections.list.TreeList$AVLNode: void setLeft(org.apache.commons.collections.list.TreeList$AVLNode,org.apache.commons.collections.list.TreeList$AVLNode)>(r0, null);

        specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: int setOffset(org.apache.commons.collections.list.TreeList$AVLNode,int)>(r1, i2);

        specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: int setOffset(org.apache.commons.collections.list.TreeList$AVLNode,int)>(r0, i4);

        specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: int setOffset(org.apache.commons.collections.list.TreeList$AVLNode,int)>($r3, i7);

        return r1;
    }

    private org.apache.commons.collections.list.TreeList$AVLNode rotateRight()
    {
        org.apache.commons.collections.list.TreeList$AVLNode r0, r1, $r2, $r3;
        int $i0, $i1, i2, $i3, i4, $i5, $i6, i7;

        r0 := @this: org.apache.commons.collections.list.TreeList$AVLNode;

        r1 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode left>;

        $r2 = specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode getLeftSubTree()>();

        $r3 = specialinvoke $r2.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode getRightSubTree()>();

        $i0 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: int relativePosition>;

        $i1 = specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: int getOffset(org.apache.commons.collections.list.TreeList$AVLNode)>(r1);

        i2 = $i0 + $i1;

        $i3 = r1.<org.apache.commons.collections.list.TreeList$AVLNode: int relativePosition>;

        i4 = neg $i3;

        $i5 = specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: int getOffset(org.apache.commons.collections.list.TreeList$AVLNode)>(r1);

        $i6 = specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: int getOffset(org.apache.commons.collections.list.TreeList$AVLNode)>($r3);

        i7 = $i5 + $i6;

        specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: void setLeft(org.apache.commons.collections.list.TreeList$AVLNode,org.apache.commons.collections.list.TreeList$AVLNode)>($r3, r1);

        specialinvoke r1.<org.apache.commons.collections.list.TreeList$AVLNode: void setRight(org.apache.commons.collections.list.TreeList$AVLNode,org.apache.commons.collections.list.TreeList$AVLNode)>(r0, null);

        specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: int setOffset(org.apache.commons.collections.list.TreeList$AVLNode,int)>(r1, i2);

        specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: int setOffset(org.apache.commons.collections.list.TreeList$AVLNode,int)>(r0, i4);

        specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: int setOffset(org.apache.commons.collections.list.TreeList$AVLNode,int)>($r3, i7);

        return r1;
    }

    private void setLeft(org.apache.commons.collections.list.TreeList$AVLNode, org.apache.commons.collections.list.TreeList$AVLNode)
    {
        org.apache.commons.collections.list.TreeList$AVLNode r0, r1, r2, $r3;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.collections.list.TreeList$AVLNode;

        r1 := @parameter0: org.apache.commons.collections.list.TreeList$AVLNode;

        r2 := @parameter1: org.apache.commons.collections.list.TreeList$AVLNode;

        if r1 != null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        r0.<org.apache.commons.collections.list.TreeList$AVLNode: boolean leftIsPrevious> = $z1;

        $z0 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: boolean leftIsPrevious>;

        if $z0 == 0 goto label3;

        $r3 = r2;

        goto label4;

     label3:
        $r3 = r1;

     label4:
        r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode left> = $r3;

        specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: void recalcHeight()>();

        return;
    }

    private void setRight(org.apache.commons.collections.list.TreeList$AVLNode, org.apache.commons.collections.list.TreeList$AVLNode)
    {
        org.apache.commons.collections.list.TreeList$AVLNode r0, r1, r2, $r3;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.collections.list.TreeList$AVLNode;

        r1 := @parameter0: org.apache.commons.collections.list.TreeList$AVLNode;

        r2 := @parameter1: org.apache.commons.collections.list.TreeList$AVLNode;

        if r1 != null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        r0.<org.apache.commons.collections.list.TreeList$AVLNode: boolean rightIsNext> = $z1;

        $z0 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: boolean rightIsNext>;

        if $z0 == 0 goto label3;

        $r3 = r2;

        goto label4;

     label3:
        $r3 = r1;

     label4:
        r0.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode right> = $r3;

        specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: void recalcHeight()>();

        return;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuffer $r0, $r1, $r3, $r4, $r6, $r7, $r9, $r10, $r12, $r13, $r14, $r15;
        int $i0;
        java.lang.String $r16;
        boolean $z0, $z1, $z2;
        org.apache.commons.collections.list.TreeList$AVLNode r2, $r5, $r11;
        java.lang.Object $r8;

        r2 := @this: org.apache.commons.collections.list.TreeList$AVLNode;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("AVLNode(");

        $i0 = r2.<org.apache.commons.collections.list.TreeList$AVLNode: int relativePosition>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

        $r5 = r2.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode left>;

        if $r5 == null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

        $r8 = r2.<org.apache.commons.collections.list.TreeList$AVLNode: java.lang.Object value>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

        $r11 = specialinvoke r2.<org.apache.commons.collections.list.TreeList$AVLNode: org.apache.commons.collections.list.TreeList$AVLNode getRightSubTree()>();

        if $r11 == null goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        $r12 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", faedelung ");

        $z0 = r2.<org.apache.commons.collections.list.TreeList$AVLNode: boolean rightIsNext>;

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z0);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" )");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r16;
    }

    static int access$000(org.apache.commons.collections.list.TreeList$AVLNode)
    {
        int $i0;
        org.apache.commons.collections.list.TreeList$AVLNode r0;

        r0 := @parameter0: org.apache.commons.collections.list.TreeList$AVLNode;

        $i0 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: int relativePosition>;

        return $i0;
    }

    void <init>(int, java.lang.Object, org.apache.commons.collections.list.TreeList$AVLNode, org.apache.commons.collections.list.TreeList$AVLNode, org.apache.commons.collections.list.TreeList$1)
    {
        org.apache.commons.collections.list.TreeList$1 r4;
        org.apache.commons.collections.list.TreeList$AVLNode r0, r2, r3;
        int i0;
        java.lang.Object r1;

        r0 := @this: org.apache.commons.collections.list.TreeList$AVLNode;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: org.apache.commons.collections.list.TreeList$AVLNode;

        r3 := @parameter3: org.apache.commons.collections.list.TreeList$AVLNode;

        r4 := @parameter4: org.apache.commons.collections.list.TreeList$1;

        specialinvoke r0.<org.apache.commons.collections.list.TreeList$AVLNode: void <init>(int,java.lang.Object,org.apache.commons.collections.list.TreeList$AVLNode,org.apache.commons.collections.list.TreeList$AVLNode)>(i0, r1, r2, r3);

        return;
    }

    static java.lang.Object access$200(org.apache.commons.collections.list.TreeList$AVLNode)
    {
        java.lang.Object $r1;
        org.apache.commons.collections.list.TreeList$AVLNode r0;

        r0 := @parameter0: org.apache.commons.collections.list.TreeList$AVLNode;

        $r1 = r0.<org.apache.commons.collections.list.TreeList$AVLNode: java.lang.Object value>;

        return $r1;
    }
}
