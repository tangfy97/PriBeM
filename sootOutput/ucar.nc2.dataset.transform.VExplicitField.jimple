public class ucar.nc2.dataset.transform.VExplicitField extends ucar.nc2.dataset.transform.AbstractCoordTransBuilder
{

    public void <init>()
    {
        ucar.nc2.dataset.transform.VExplicitField r0;

        r0 := @this: ucar.nc2.dataset.transform.VExplicitField;

        specialinvoke r0.<ucar.nc2.dataset.transform.AbstractCoordTransBuilder: void <init>()>();

        return;
    }

    public java.lang.String getTransformName()
    {
        ucar.nc2.dataset.transform.VExplicitField r0;

        r0 := @this: ucar.nc2.dataset.transform.VExplicitField;

        return "explicit_field";
    }

    public ucar.nc2.dataset.TransformType getTransformType()
    {
        ucar.nc2.dataset.TransformType $r0;
        ucar.nc2.dataset.transform.VExplicitField r1;

        r1 := @this: ucar.nc2.dataset.transform.VExplicitField;

        $r0 = <ucar.nc2.dataset.TransformType: ucar.nc2.dataset.TransformType Vertical>;

        return $r0;
    }

    public ucar.nc2.dataset.CoordinateTransform makeCoordinateTransform(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.Variable)
    {
        ucar.nc2.dataset.transform.VExplicitField r3;
        java.lang.IllegalArgumentException $r11;
        ucar.unidata.util.Parameter $r8, $r10;
        ucar.nc2.dataset.VerticalCT $r0;
        ucar.nc2.dataset.VerticalCT$Type $r5;
        ucar.nc2.Variable r1;
        java.lang.String $r2, $r4, $r7, $r9;
        ucar.nc2.dataset.NetcdfDataset r6;

        r3 := @this: ucar.nc2.dataset.transform.VExplicitField;

        r6 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r1 := @parameter1: ucar.nc2.Variable;

        $r0 = new ucar.nc2.dataset.VerticalCT;

        $r2 = virtualinvoke r1.<ucar.nc2.Variable: java.lang.String getShortName()>();

        $r4 = virtualinvoke r3.<ucar.nc2.dataset.transform.VExplicitField: java.lang.String getTransformName()>();

        $r5 = <ucar.nc2.dataset.VerticalCT$Type: ucar.nc2.dataset.VerticalCT$Type Existing3DField>;

        specialinvoke $r0.<ucar.nc2.dataset.VerticalCT: void <init>(java.lang.String,java.lang.String,ucar.nc2.dataset.VerticalCT$Type,ucar.nc2.dataset.CoordTransBuilderIF)>($r2, $r4, $r5, r3);

        $r7 = virtualinvoke r6.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(r1, "existingDataField", null);

        if null != $r7 goto label1;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ExplicitField Vertical Transform must have attribute existingDataField");

        throw $r11;

     label1:
        $r8 = new ucar.unidata.util.Parameter;

        $r9 = virtualinvoke r3.<ucar.nc2.dataset.transform.VExplicitField: java.lang.String getTransformName()>();

        specialinvoke $r8.<ucar.unidata.util.Parameter: void <init>(java.lang.String,java.lang.String)>("standard_name", $r9);

        virtualinvoke $r0.<ucar.nc2.dataset.VerticalCT: void addParameter(ucar.unidata.util.Parameter)>($r8);

        $r10 = new ucar.unidata.util.Parameter;

        specialinvoke $r10.<ucar.unidata.util.Parameter: void <init>(java.lang.String,java.lang.String)>("existingDataField", $r7);

        virtualinvoke $r0.<ucar.nc2.dataset.VerticalCT: void addParameter(ucar.unidata.util.Parameter)>($r10);

        return $r0;
    }

    public ucar.unidata.geoloc.vertical.VerticalTransform makeMathTransform(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.Dimension, ucar.nc2.dataset.VerticalCT)
    {
        java.util.List $r4;
        ucar.nc2.dataset.VerticalCT r3;
        ucar.nc2.dataset.transform.VExplicitField r5;
        ucar.unidata.geoloc.vertical.VTfromExistingData $r0;
        ucar.nc2.Dimension r2;
        ucar.nc2.dataset.NetcdfDataset r1;

        r5 := @this: ucar.nc2.dataset.transform.VExplicitField;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r2 := @parameter1: ucar.nc2.Dimension;

        r3 := @parameter2: ucar.nc2.dataset.VerticalCT;

        $r0 = new ucar.unidata.geoloc.vertical.VTfromExistingData;

        $r4 = virtualinvoke r3.<ucar.nc2.dataset.VerticalCT: java.util.List getParameters()>();

        specialinvoke $r0.<ucar.unidata.geoloc.vertical.VTfromExistingData: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Dimension,java.util.List)>(r1, r2, $r4);

        return $r0;
    }
}
