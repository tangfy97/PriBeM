final class org.codehaus.jettison.mapped.MappedXMLStreamWriter$JSONPropertyString extends org.codehaus.jettison.mapped.MappedXMLStreamWriter$JSONProperty
{
    private java.lang.StringBuilder object;
    final org.codehaus.jettison.mapped.MappedXMLStreamWriter this$0;

    public void <init>(org.codehaus.jettison.mapped.MappedXMLStreamWriter, java.lang.String)
    {
        org.codehaus.jettison.mapped.MappedXMLStreamWriter r1;
        java.lang.StringBuilder $r3;
        java.lang.String r2;
        org.codehaus.jettison.mapped.MappedXMLStreamWriter$JSONPropertyString r0;

        r0 := @this: org.codehaus.jettison.mapped.MappedXMLStreamWriter$JSONPropertyString;

        r1 := @parameter0: org.codehaus.jettison.mapped.MappedXMLStreamWriter;

        r2 := @parameter1: java.lang.String;

        r0.<org.codehaus.jettison.mapped.MappedXMLStreamWriter$JSONPropertyString: org.codehaus.jettison.mapped.MappedXMLStreamWriter this$0> = r1;

        specialinvoke r0.<org.codehaus.jettison.mapped.MappedXMLStreamWriter$JSONProperty: void <init>(org.codehaus.jettison.mapped.MappedXMLStreamWriter,java.lang.String)>(r1, r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        r0.<org.codehaus.jettison.mapped.MappedXMLStreamWriter$JSONPropertyString: java.lang.StringBuilder object> = $r3;

        return;
    }

    public java.lang.Object getValue()
    {
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        org.codehaus.jettison.mapped.MappedXMLStreamWriter$JSONPropertyString r0;

        r0 := @this: org.codehaus.jettison.mapped.MappedXMLStreamWriter$JSONPropertyString;

        $r1 = r0.<org.codehaus.jettison.mapped.MappedXMLStreamWriter$JSONPropertyString: java.lang.StringBuilder object>;

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public void addText(java.lang.String)
    {
        java.lang.StringBuilder $r2;
        java.lang.String r1;
        org.codehaus.jettison.mapped.MappedXMLStreamWriter$JSONPropertyString r0;

        r0 := @this: org.codehaus.jettison.mapped.MappedXMLStreamWriter$JSONPropertyString;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.codehaus.jettison.mapped.MappedXMLStreamWriter$JSONPropertyString: java.lang.StringBuilder object>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        return;
    }

    public org.codehaus.jettison.mapped.MappedXMLStreamWriter$JSONPropertyObject withProperty(org.codehaus.jettison.mapped.MappedXMLStreamWriter$JSONProperty, boolean)
    {
        java.lang.AssertionError $r19;
        org.codehaus.jettison.mapped.MappedXMLStreamWriter$JSONPropertyString r1;
        java.util.ArrayList $r23;
        org.codehaus.jettison.mapped.MappedXMLStreamWriter$JSONPropertyObject $r9;
        int $i0;
        java.lang.String $r3, $r5, $r8, $r11, $r15, $r17, r20, $r24;
        org.codehaus.jettison.mapped.MappedXMLStreamWriter$JSONProperty r6;
        boolean z0, $z1, $z2;
        org.codehaus.jettison.mapped.MappedNamespaceConvention $r14;
        org.codehaus.jettison.json.JSONObject $r0;
        org.codehaus.jettison.json.JSONArray $r12;
        org.codehaus.jettison.json.JSONException $r18;
        java.lang.Object $r2, $r7, r21;
        org.codehaus.jettison.mapped.MappedXMLStreamWriter $r4, $r10, $r13, $r16, $r22;

        r1 := @this: org.codehaus.jettison.mapped.MappedXMLStreamWriter$JSONPropertyString;

        r6 := @parameter0: org.codehaus.jettison.mapped.MappedXMLStreamWriter$JSONProperty;

        z0 := @parameter1: boolean;

        $r0 = new org.codehaus.jettison.json.JSONObject;

        specialinvoke $r0.<org.codehaus.jettison.json.JSONObject: void <init>()>();

     label1:
        $r2 = virtualinvoke r1.<org.codehaus.jettison.mapped.MappedXMLStreamWriter$JSONPropertyString: java.lang.Object getValue()>();

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        r20 = $r3;

        $r4 = r1.<org.codehaus.jettison.mapped.MappedXMLStreamWriter$JSONPropertyString: org.codehaus.jettison.mapped.MappedXMLStreamWriter this$0>;

        $r5 = staticinvoke <org.codehaus.jettison.mapped.MappedXMLStreamWriter: java.lang.String access$000(org.codehaus.jettison.mapped.MappedXMLStreamWriter)>($r4);

        if "$" != $r5 goto label2;

        r20 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

     label2:
        $i0 = virtualinvoke r20.<java.lang.String: int length()>();

        if $i0 <= 0 goto label3;

        $r16 = r1.<org.codehaus.jettison.mapped.MappedXMLStreamWriter$JSONPropertyString: org.codehaus.jettison.mapped.MappedXMLStreamWriter this$0>;

        $r17 = staticinvoke <org.codehaus.jettison.mapped.MappedXMLStreamWriter: java.lang.String access$000(org.codehaus.jettison.mapped.MappedXMLStreamWriter)>($r16);

        virtualinvoke $r0.<org.codehaus.jettison.json.JSONObject: org.codehaus.jettison.json.JSONObject put(java.lang.String,java.lang.Object)>($r17, r20);

     label3:
        $r7 = virtualinvoke r6.<org.codehaus.jettison.mapped.MappedXMLStreamWriter$JSONProperty: java.lang.Object getValue()>();

        r21 = $r7;

        if z0 == 0 goto label4;

        $z1 = $r7 instanceof java.lang.String;

        if $z1 == 0 goto label4;

        $r13 = r1.<org.codehaus.jettison.mapped.MappedXMLStreamWriter$JSONPropertyString: org.codehaus.jettison.mapped.MappedXMLStreamWriter this$0>;

        $r14 = staticinvoke <org.codehaus.jettison.mapped.MappedXMLStreamWriter: org.codehaus.jettison.mapped.MappedNamespaceConvention access$100(org.codehaus.jettison.mapped.MappedXMLStreamWriter)>($r13);

        $r15 = (java.lang.String) $r7;

        r21 = virtualinvoke $r14.<org.codehaus.jettison.mapped.MappedNamespaceConvention: java.lang.Object convertToJSONPrimitive(java.lang.String)>($r15);

     label4:
        $r22 = r1.<org.codehaus.jettison.mapped.MappedXMLStreamWriter$JSONPropertyString: org.codehaus.jettison.mapped.MappedXMLStreamWriter this$0>;

        $r23 = virtualinvoke $r22.<org.codehaus.jettison.mapped.MappedXMLStreamWriter: java.util.ArrayList getSerializedAsArrays()>();

        $r24 = virtualinvoke r6.<org.codehaus.jettison.mapped.MappedXMLStreamWriter$JSONProperty: java.lang.String getKey()>();

        $z2 = virtualinvoke $r23.<java.util.ArrayList: boolean contains(java.lang.Object)>($r24);

        if $z2 == 0 goto label5;

        $r12 = new org.codehaus.jettison.json.JSONArray;

        specialinvoke $r12.<org.codehaus.jettison.json.JSONArray: void <init>()>();

        virtualinvoke $r12.<org.codehaus.jettison.json.JSONArray: org.codehaus.jettison.json.JSONArray put(java.lang.Object)>(r21);

        r21 = $r12;

     label5:
        $r8 = virtualinvoke r6.<org.codehaus.jettison.mapped.MappedXMLStreamWriter$JSONProperty: java.lang.String getKey()>();

        virtualinvoke $r0.<org.codehaus.jettison.json.JSONObject: org.codehaus.jettison.json.JSONObject put(java.lang.String,java.lang.Object)>($r8, r21);

     label6:
        goto label8;

     label7:
        $r18 := @caughtexception;

        $r19 = new java.lang.AssertionError;

        specialinvoke $r19.<java.lang.AssertionError: void <init>(java.lang.Object)>($r18);

        throw $r19;

     label8:
        $r9 = new org.codehaus.jettison.mapped.MappedXMLStreamWriter$JSONPropertyObject;

        $r10 = r1.<org.codehaus.jettison.mapped.MappedXMLStreamWriter$JSONPropertyString: org.codehaus.jettison.mapped.MappedXMLStreamWriter this$0>;

        $r11 = virtualinvoke r1.<org.codehaus.jettison.mapped.MappedXMLStreamWriter$JSONPropertyString: java.lang.String getKey()>();

        specialinvoke $r9.<org.codehaus.jettison.mapped.MappedXMLStreamWriter$JSONPropertyObject: void <init>(org.codehaus.jettison.mapped.MappedXMLStreamWriter,java.lang.String,org.codehaus.jettison.json.JSONObject)>($r10, $r11, $r0);

        return $r9;

        catch org.codehaus.jettison.json.JSONException from label1 to label6 with label7;
    }
}
