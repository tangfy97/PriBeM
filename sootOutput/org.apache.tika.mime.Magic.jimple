class org.apache.tika.mime.Magic extends java.lang.Object implements org.apache.tika.mime.Clause, java.lang.Comparable
{
    private final org.apache.tika.mime.MimeType type;
    private final int priority;
    private final org.apache.tika.mime.Clause clause;
    private final java.lang.String string;

    void <init>(org.apache.tika.mime.MimeType, int, org.apache.tika.mime.Clause)
    {
        org.apache.tika.mime.Clause r2;
        org.apache.tika.mime.Magic r0;
        int i0;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r8;
        java.lang.String $r9;
        org.apache.tika.mime.MimeType r1;

        r0 := @this: org.apache.tika.mime.Magic;

        r1 := @parameter0: org.apache.tika.mime.MimeType;

        i0 := @parameter1: int;

        r2 := @parameter2: org.apache.tika.mime.Clause;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.tika.mime.Magic: org.apache.tika.mime.MimeType type> = r1;

        r0.<org.apache.tika.mime.Magic: int priority> = i0;

        r0.<org.apache.tika.mime.Magic: org.apache.tika.mime.Clause clause> = r2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<org.apache.tika.mime.Magic: java.lang.String string> = $r9;

        return;
    }

    org.apache.tika.mime.MimeType getType()
    {
        org.apache.tika.mime.MimeType $r1;
        org.apache.tika.mime.Magic r0;

        r0 := @this: org.apache.tika.mime.Magic;

        $r1 = r0.<org.apache.tika.mime.Magic: org.apache.tika.mime.MimeType type>;

        return $r1;
    }

    int getPriority()
    {
        int $i0;
        org.apache.tika.mime.Magic r0;

        r0 := @this: org.apache.tika.mime.Magic;

        $i0 = r0.<org.apache.tika.mime.Magic: int priority>;

        return $i0;
    }

    public boolean eval(byte[])
    {
        byte[] r1;
        org.apache.tika.mime.Clause $r2;
        org.apache.tika.mime.Magic r0;
        boolean $z0;

        r0 := @this: org.apache.tika.mime.Magic;

        r1 := @parameter0: byte[];

        $r2 = r0.<org.apache.tika.mime.Magic: org.apache.tika.mime.Clause clause>;

        $z0 = interfaceinvoke $r2.<org.apache.tika.mime.Clause: boolean eval(byte[])>(r1);

        return $z0;
    }

    public int size()
    {
        int $i0;
        org.apache.tika.mime.Clause $r1;
        org.apache.tika.mime.Magic r0;

        r0 := @this: org.apache.tika.mime.Magic;

        $r1 = r0.<org.apache.tika.mime.Magic: org.apache.tika.mime.Clause clause>;

        $i0 = interfaceinvoke $r1.<org.apache.tika.mime.Clause: int size()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        java.lang.String $r1;
        org.apache.tika.mime.Magic r0;

        r0 := @this: org.apache.tika.mime.Magic;

        $r1 = r0.<org.apache.tika.mime.Magic: java.lang.String string>;

        return $r1;
    }

    public int compareTo(org.apache.tika.mime.Magic)
    {
        org.apache.tika.mime.Magic r0, r1;
        int $i0, $i1, $i2, $i3, i4;
        java.lang.String $r2, $r3;
        org.apache.tika.mime.MimeType $r4, $r5;

        r1 := @this: org.apache.tika.mime.Magic;

        r0 := @parameter0: org.apache.tika.mime.Magic;

        $i1 = r0.<org.apache.tika.mime.Magic: int priority>;

        $i0 = r1.<org.apache.tika.mime.Magic: int priority>;

        i4 = $i1 - $i0;

        if i4 != 0 goto label1;

        $i2 = virtualinvoke r0.<org.apache.tika.mime.Magic: int size()>();

        $i3 = virtualinvoke r1.<org.apache.tika.mime.Magic: int size()>();

        i4 = $i2 - $i3;

     label1:
        if i4 != 0 goto label2;

        $r5 = r0.<org.apache.tika.mime.Magic: org.apache.tika.mime.MimeType type>;

        $r4 = r1.<org.apache.tika.mime.Magic: org.apache.tika.mime.MimeType type>;

        i4 = virtualinvoke $r5.<org.apache.tika.mime.MimeType: int compareTo(org.apache.tika.mime.MimeType)>($r4);

     label2:
        if i4 != 0 goto label3;

        $r3 = r0.<org.apache.tika.mime.Magic: java.lang.String string>;

        $r2 = r1.<org.apache.tika.mime.Magic: java.lang.String string>;

        i4 = virtualinvoke $r3.<java.lang.String: int compareTo(java.lang.String)>($r2);

     label3:
        return i4;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.tika.mime.Magic r1, r2;
        java.lang.Object r0;
        java.lang.String $r5, $r6;
        org.apache.tika.mime.MimeType $r3, $r4;
        boolean $z0, $z1, $z2, $z3;

        r2 := @this: org.apache.tika.mime.Magic;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.apache.tika.mime.Magic;

        if $z0 == 0 goto label3;

        r1 = (org.apache.tika.mime.Magic) r0;

        $r4 = r2.<org.apache.tika.mime.Magic: org.apache.tika.mime.MimeType type>;

        $r3 = r1.<org.apache.tika.mime.Magic: org.apache.tika.mime.MimeType type>;

        $z1 = virtualinvoke $r4.<org.apache.tika.mime.MimeType: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label1;

        $r6 = r2.<org.apache.tika.mime.Magic: java.lang.String string>;

        $r5 = r1.<org.apache.tika.mime.Magic: java.lang.String string>;

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z2 == 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        return $z3;

     label3:
        return 0;
    }

    public int hashCode()
    {
        org.apache.tika.mime.Magic r0;
        int $i0, $i1, $i2;
        java.lang.String $r2;
        org.apache.tika.mime.MimeType $r1;

        r0 := @this: org.apache.tika.mime.Magic;

        $r1 = r0.<org.apache.tika.mime.Magic: org.apache.tika.mime.MimeType type>;

        $i0 = virtualinvoke $r1.<org.apache.tika.mime.MimeType: int hashCode()>();

        $r2 = r0.<org.apache.tika.mime.Magic: java.lang.String string>;

        $i1 = virtualinvoke $r2.<java.lang.String: int hashCode()>();

        $i2 = $i0 ^ $i1;

        return $i2;
    }

    public volatile int compareTo(java.lang.Object)
    {
        org.apache.tika.mime.Magic r0, $r2;
        int $i0;
        java.lang.Object r1;

        r0 := @this: org.apache.tika.mime.Magic;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.apache.tika.mime.Magic) r1;

        $i0 = virtualinvoke r0.<org.apache.tika.mime.Magic: int compareTo(org.apache.tika.mime.Magic)>($r2);

        return $i0;
    }
}
