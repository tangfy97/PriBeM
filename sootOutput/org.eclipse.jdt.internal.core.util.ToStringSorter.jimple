public class org.eclipse.jdt.internal.core.util.ToStringSorter extends java.lang.Object
{
    java.lang.Object[] sortedObjects;
    java.lang.String[] sortedStrings;

    public void <init>()
    {
        org.eclipse.jdt.internal.core.util.ToStringSorter r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.ToStringSorter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean compare(java.lang.String, java.lang.String)
    {
        org.eclipse.jdt.internal.core.util.ToStringSorter r2;
        int $i0;
        java.lang.String r0, r1;

        r2 := @this: org.eclipse.jdt.internal.core.util.ToStringSorter;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int compareTo(java.lang.String)>(r1);

        if $i0 >= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private void quickSort(int, int)
    {
        org.eclipse.jdt.internal.core.util.ToStringSorter r0;
        java.lang.Object[] $r5, $r7, $r9, $r10;
        java.lang.String[] $r1, $r3, $r11, $r13, $r15, $r16, $r17;
        int i0, i1, $i2, $i3, i4, i5, i6, $i8, $i10;
        java.lang.String r2, $r4, r12, $r14, $r18;
        boolean $z0, $z1;
        java.lang.Object r6, $r8;

        r0 := @this: org.eclipse.jdt.internal.core.util.ToStringSorter;

        i5 := @parameter0: int;

        i6 := @parameter1: int;

        i0 = i5;

        i1 = i6;

        $i2 = i6 - i5;

        $i3 = $i2 / 2;

        i4 = i5 + $i3;

        $r1 = r0.<org.eclipse.jdt.internal.core.util.ToStringSorter: java.lang.String[] sortedStrings>;

        r2 = $r1[i4];

        goto label2;

     label1:
        i5 = i5 + 1;

     label2:
        $r17 = r0.<org.eclipse.jdt.internal.core.util.ToStringSorter: java.lang.String[] sortedStrings>;

        $r18 = $r17[i5];

        $z1 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.ToStringSorter: boolean compare(java.lang.String,java.lang.String)>($r18, r2);

        if $z1 != 0 goto label1;

        goto label4;

     label3:
        $i8 = (int) -1;

        i6 = i6 + $i8;

     label4:
        $r3 = r0.<org.eclipse.jdt.internal.core.util.ToStringSorter: java.lang.String[] sortedStrings>;

        $r4 = $r3[i6];

        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.ToStringSorter: boolean compare(java.lang.String,java.lang.String)>(r2, $r4);

        if $z0 != 0 goto label3;

        if i5 > i6 goto label5;

        $r5 = r0.<org.eclipse.jdt.internal.core.util.ToStringSorter: java.lang.Object[] sortedObjects>;

        r6 = $r5[i5];

        $r9 = r0.<org.eclipse.jdt.internal.core.util.ToStringSorter: java.lang.Object[] sortedObjects>;

        $r7 = r0.<org.eclipse.jdt.internal.core.util.ToStringSorter: java.lang.Object[] sortedObjects>;

        $r8 = $r7[i6];

        $r9[i5] = $r8;

        $r10 = r0.<org.eclipse.jdt.internal.core.util.ToStringSorter: java.lang.Object[] sortedObjects>;

        $r10[i6] = r6;

        $r11 = r0.<org.eclipse.jdt.internal.core.util.ToStringSorter: java.lang.String[] sortedStrings>;

        r12 = $r11[i5];

        $r15 = r0.<org.eclipse.jdt.internal.core.util.ToStringSorter: java.lang.String[] sortedStrings>;

        $r13 = r0.<org.eclipse.jdt.internal.core.util.ToStringSorter: java.lang.String[] sortedStrings>;

        $r14 = $r13[i6];

        $r15[i5] = $r14;

        $r16 = r0.<org.eclipse.jdt.internal.core.util.ToStringSorter: java.lang.String[] sortedStrings>;

        $r16[i6] = r12;

        i5 = i5 + 1;

        $i10 = (int) -1;

        i6 = i6 + $i10;

     label5:
        if i5 <= i6 goto label2;

        if i0 >= i6 goto label6;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.ToStringSorter: void quickSort(int,int)>(i0, i6);

     label6:
        if i5 >= i1 goto label7;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.ToStringSorter: void quickSort(int,int)>(i5, i1);

     label7:
        return;
    }

    public void sort(java.lang.Object[], java.lang.String[])
    {
        org.eclipse.jdt.internal.core.util.ToStringSorter r1;
        java.lang.Object[] r0, $r2, $r4;
        java.lang.String[] $r3, r5, $r6;
        int i0, $i1;

        r1 := @this: org.eclipse.jdt.internal.core.util.ToStringSorter;

        r0 := @parameter0: java.lang.Object[];

        r5 := @parameter1: java.lang.String[];

        i0 = lengthof r0;

        $r2 = newarray (java.lang.Object)[i0];

        r1.<org.eclipse.jdt.internal.core.util.ToStringSorter: java.lang.Object[] sortedObjects> = $r2;

        $r3 = newarray (java.lang.String)[i0];

        r1.<org.eclipse.jdt.internal.core.util.ToStringSorter: java.lang.String[] sortedStrings> = $r3;

        $r4 = r1.<org.eclipse.jdt.internal.core.util.ToStringSorter: java.lang.Object[] sortedObjects>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, $r4, 0, i0);

        $r6 = r1.<org.eclipse.jdt.internal.core.util.ToStringSorter: java.lang.String[] sortedStrings>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r5, 0, $r6, 0, i0);

        if i0 <= 1 goto label1;

        $i1 = i0 - 1;

        specialinvoke r1.<org.eclipse.jdt.internal.core.util.ToStringSorter: void quickSort(int,int)>(0, $i1);

     label1:
        return;
    }
}
