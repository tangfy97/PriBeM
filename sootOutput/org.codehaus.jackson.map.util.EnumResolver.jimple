public class org.codehaus.jackson.map.util.EnumResolver extends java.lang.Object
{
    protected final java.lang.Class _enumClass;
    protected final java.lang.Enum[] _enums;
    protected final java.util.HashMap _enumsById;

    protected void <init>(java.lang.Class, java.lang.Enum[], java.util.HashMap)
    {
        java.lang.Enum[] r2;
        java.lang.Class r1;
        java.util.HashMap r3;
        org.codehaus.jackson.map.util.EnumResolver r0;

        r0 := @this: org.codehaus.jackson.map.util.EnumResolver;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Enum[];

        r3 := @parameter2: java.util.HashMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.codehaus.jackson.map.util.EnumResolver: java.lang.Class _enumClass> = r1;

        r0.<org.codehaus.jackson.map.util.EnumResolver: java.lang.Enum[] _enums> = r2;

        r0.<org.codehaus.jackson.map.util.EnumResolver: java.util.HashMap _enumsById> = r3;

        return;
    }

    public static org.codehaus.jackson.map.util.EnumResolver constructFor(java.lang.Class, org.codehaus.jackson.map.AnnotationIntrospector)
    {
        java.lang.Object[] $r1;
        java.util.HashMap $r3;
        java.lang.Enum r5;
        int i0, i1;
        java.lang.String $r7, $r11, $r13;
        org.codehaus.jackson.map.util.EnumResolver $r4;
        java.lang.IllegalArgumentException $r8;
        org.codehaus.jackson.map.AnnotationIntrospector r6;
        java.lang.Enum[] r2;
        java.lang.Class r0;
        java.lang.StringBuilder $r9, $r10, $r12;

        r0 := @parameter0: java.lang.Class;

        r6 := @parameter1: org.codehaus.jackson.map.AnnotationIntrospector;

        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.Object[] getEnumConstants()>();

        r2 = (java.lang.Enum[]) $r1;

        if r2 != null goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No enum constants for class ");

        $r11 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r8;

     label1:
        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        i0 = lengthof r2;

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        r5 = r2[i1];

        $r7 = virtualinvoke r6.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.String findEnumValue(java.lang.Enum)>(r5);

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, r5);

        i1 = i1 + 1;

        goto label2;

     label3:
        $r4 = new org.codehaus.jackson.map.util.EnumResolver;

        specialinvoke $r4.<org.codehaus.jackson.map.util.EnumResolver: void <init>(java.lang.Class,java.lang.Enum[],java.util.HashMap)>(r0, r2, $r3);

        return $r4;
    }

    public static org.codehaus.jackson.map.util.EnumResolver constructUsingToString(java.lang.Class)
    {
        java.lang.Object[] $r1;
        java.util.HashMap $r7;
        java.lang.Enum r5;
        int i0, $i2;
        java.lang.Enum[] r2;
        java.lang.Class r0;
        java.lang.String $r6;
        org.codehaus.jackson.map.util.EnumResolver $r8;

        r0 := @parameter0: java.lang.Class;

        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.Object[] getEnumConstants()>();

        r2 = (java.lang.Enum[]) $r1;

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        i0 = lengthof r2;

     label1:
        $i2 = (int) -1;

        i0 = i0 + $i2;

        if i0 < 0 goto label2;

        r5 = r2[i0];

        $r6 = virtualinvoke r5.<java.lang.Enum: java.lang.String toString()>();

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, r5);

        goto label1;

     label2:
        $r8 = new org.codehaus.jackson.map.util.EnumResolver;

        specialinvoke $r8.<org.codehaus.jackson.map.util.EnumResolver: void <init>(java.lang.Class,java.lang.Enum[],java.util.HashMap)>(r0, r2, $r7);

        return $r8;
    }

    public static org.codehaus.jackson.map.util.EnumResolver constructUnsafe(java.lang.Class, org.codehaus.jackson.map.AnnotationIntrospector)
    {
        java.lang.Class r0;
        org.codehaus.jackson.map.util.EnumResolver $r2;
        org.codehaus.jackson.map.AnnotationIntrospector r1;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: org.codehaus.jackson.map.AnnotationIntrospector;

        $r2 = staticinvoke <org.codehaus.jackson.map.util.EnumResolver: org.codehaus.jackson.map.util.EnumResolver constructFor(java.lang.Class,org.codehaus.jackson.map.AnnotationIntrospector)>(r0, r1);

        return $r2;
    }

    public static org.codehaus.jackson.map.util.EnumResolver constructUnsafeUsingToString(java.lang.Class)
    {
        java.lang.Class r0;
        org.codehaus.jackson.map.util.EnumResolver $r1;

        r0 := @parameter0: java.lang.Class;

        $r1 = staticinvoke <org.codehaus.jackson.map.util.EnumResolver: org.codehaus.jackson.map.util.EnumResolver constructUsingToString(java.lang.Class)>(r0);

        return $r1;
    }

    public java.lang.Enum findEnum(java.lang.String)
    {
        java.lang.Enum $r4;
        java.util.HashMap $r2;
        java.lang.Object $r3;
        java.lang.String r1;
        org.codehaus.jackson.map.util.EnumResolver r0;

        r0 := @this: org.codehaus.jackson.map.util.EnumResolver;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.codehaus.jackson.map.util.EnumResolver: java.util.HashMap _enumsById>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.lang.Enum) $r3;

        return $r4;
    }

    public java.lang.Enum getEnum(int)
    {
        java.lang.Enum $r3;
        int i0, $i1;
        java.lang.Enum[] $r1, $r2;
        org.codehaus.jackson.map.util.EnumResolver r0;

        r0 := @this: org.codehaus.jackson.map.util.EnumResolver;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $r1 = r0.<org.codehaus.jackson.map.util.EnumResolver: java.lang.Enum[] _enums>;

        $i1 = lengthof $r1;

        if i0 < $i1 goto label2;

     label1:
        return null;

     label2:
        $r2 = r0.<org.codehaus.jackson.map.util.EnumResolver: java.lang.Enum[] _enums>;

        $r3 = $r2[i0];

        return $r3;
    }

    public java.lang.Class getEnumClass()
    {
        java.lang.Class $r1;
        org.codehaus.jackson.map.util.EnumResolver r0;

        r0 := @this: org.codehaus.jackson.map.util.EnumResolver;

        $r1 = r0.<org.codehaus.jackson.map.util.EnumResolver: java.lang.Class _enumClass>;

        return $r1;
    }

    public int lastValidIndex()
    {
        int $i0, $i1;
        java.lang.Enum[] $r1;
        org.codehaus.jackson.map.util.EnumResolver r0;

        r0 := @this: org.codehaus.jackson.map.util.EnumResolver;

        $r1 = r0.<org.codehaus.jackson.map.util.EnumResolver: java.lang.Enum[] _enums>;

        $i0 = lengthof $r1;

        $i1 = $i0 - 1;

        return $i1;
    }
}
