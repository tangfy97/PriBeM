public final class com.coremedia.iso.IsoTypeWriter extends java.lang.Object
{
    static final boolean $assertionsDisabled;

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lcom/coremedia/iso/IsoTypeWriter;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.coremedia.iso.IsoTypeWriter: boolean $assertionsDisabled> = $z1;

        return;
    }

    public void <init>()
    {
        com.coremedia.iso.IsoTypeWriter r0;

        r0 := @this: com.coremedia.iso.IsoTypeWriter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void writeUInt64(java.nio.ByteBuffer, long)
    {
        byte $b1;
        int $i2;
        long l0;
        java.lang.AssertionError $r2;
        java.nio.ByteBuffer r0;
        boolean $z0;

        r0 := @parameter0: java.nio.ByteBuffer;

        l0 := @parameter1: long;

        $z0 = <com.coremedia.iso.IsoTypeWriter: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $b1 = l0 cmp 0L;

        $i2 = (int) $b1;

        if $i2 >= 0 goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>(java.lang.Object)>("The given long is negative");

        throw $r2;

     label1:
        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteBuffer putLong(long)>(l0);

        return;
    }

    public static void writeUInt32(java.nio.ByteBuffer, long)
    {
        long l0;
        java.lang.AssertionError $r7;
        java.nio.ByteBuffer r0;
        byte $b2, $b3;
        int $i1, $i4, $i5;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.String $r5;
        boolean $z0;

        r0 := @parameter0: java.nio.ByteBuffer;

        l0 := @parameter1: long;

        $z0 = <com.coremedia.iso.IsoTypeWriter: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $b2 = l0 cmp 0L;

        $i4 = (int) $b2;

        if $i4 < 0 goto label1;

        $b3 = l0 cmp 4294967296L;

        $i5 = (int) $b3;

        if $i5 <= 0 goto label2;

     label1:
        $r7 = new java.lang.AssertionError;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("The given long is not in the range of uint32 (");

        $r3 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.AssertionError: void <init>(java.lang.Object)>($r5);

        throw $r7;

     label2:
        $i1 = (int) l0;

        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i1);

        return;
    }

    public static void writeUInt32BE(java.nio.ByteBuffer, long)
    {
        long l0, $l3, $l4;
        java.lang.AssertionError $r7;
        java.nio.ByteBuffer r0;
        byte $b6, $b7;
        int $i1, $i2, $i5, $i8, $i9, $i11;
        java.lang.String $r5;
        boolean $z0;
        java.lang.StringBuilder $r3, $r4, $r6;

        r0 := @parameter0: java.nio.ByteBuffer;

        l0 := @parameter1: long;

        $z0 = <com.coremedia.iso.IsoTypeWriter: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $b6 = l0 cmp 0L;

        $i8 = (int) $b6;

        if $i8 < 0 goto label1;

        $b7 = l0 cmp 4294967296L;

        $i9 = (int) $b7;

        if $i9 <= 0 goto label2;

     label1:
        $r7 = new java.lang.AssertionError;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("The given long is not in the range of uint32 (");

        $r3 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.AssertionError: void <init>(java.lang.Object)>($r5);

        throw $r7;

     label2:
        $i1 = (int) l0;

        $i11 = (int) 65535;

        $i2 = $i1 & $i11;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt16BE(java.nio.ByteBuffer,int)>(r0, $i2);

        $l3 = l0 >> 16;

        $l4 = $l3 & 65535L;

        $i5 = (int) $l4;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt16BE(java.nio.ByteBuffer,int)>(r0, $i5);

        return;
    }

    public static void writeUInt24(java.nio.ByteBuffer, int)
    {
        int $i0, i1, i2;
        java.nio.ByteBuffer r0;

        r0 := @parameter0: java.nio.ByteBuffer;

        i1 := @parameter1: int;

        i2 = i1 & 16777215;

        $i0 = i2 >> 8;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt16(java.nio.ByteBuffer,int)>(r0, $i0);

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt8(java.nio.ByteBuffer,int)>(r0, i2);

        return;
    }

    public static void writeUInt16(java.nio.ByteBuffer, int)
    {
        int $i0, $i1, i2, i3, $i5;
        java.nio.ByteBuffer r0;

        r0 := @parameter0: java.nio.ByteBuffer;

        i2 := @parameter1: int;

        $i5 = (int) 65535;

        i3 = i2 & $i5;

        $i0 = i3 >> 8;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt8(java.nio.ByteBuffer,int)>(r0, $i0);

        $i1 = i3 & 255;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt8(java.nio.ByteBuffer,int)>(r0, $i1);

        return;
    }

    public static void writeUInt16BE(java.nio.ByteBuffer, int)
    {
        int $i0, $i1, i2, i3, $i5;
        java.nio.ByteBuffer r0;

        r0 := @parameter0: java.nio.ByteBuffer;

        i2 := @parameter1: int;

        $i5 = (int) 65535;

        i3 = i2 & $i5;

        $i0 = i3 & 255;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt8(java.nio.ByteBuffer,int)>(r0, $i0);

        $i1 = i3 >> 8;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt8(java.nio.ByteBuffer,int)>(r0, $i1);

        return;
    }

    public static void writeUInt8(java.nio.ByteBuffer, int)
    {
        byte $b0;
        int i1, i2;
        java.nio.ByteBuffer r0;

        r0 := @parameter0: java.nio.ByteBuffer;

        i1 := @parameter1: int;

        i2 = i1 & 255;

        $b0 = (byte) i2;

        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b0);

        return;
    }

    public static void writeFixedPoint1616(java.nio.ByteBuffer, double)
    {
        java.nio.ByteBuffer r0;
        byte $b3, $b6, $b9, $b11;
        int i0, $i1, $i2, $i4, $i5, $i7, $i8, $i10, $i13;
        double d0, $d1;

        r0 := @parameter0: java.nio.ByteBuffer;

        d0 := @parameter1: double;

        $d1 = d0 * 65536.0;

        i0 = (int) $d1;

        $i1 = i0 & -16777216;

        $i2 = $i1 >> 24;

        $b3 = (byte) $i2;

        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b3);

        $i4 = i0 & 16711680;

        $i5 = $i4 >> 16;

        $b6 = (byte) $i5;

        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b6);

        $i13 = (int) 65280;

        $i7 = i0 & $i13;

        $i8 = $i7 >> 8;

        $b9 = (byte) $i8;

        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b9);

        $i10 = i0 & 255;

        $b11 = (byte) $i10;

        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b11);

        return;
    }

    public static void writeFixedPoint0230(java.nio.ByteBuffer, double)
    {
        java.nio.ByteBuffer r0;
        byte $b3, $b6, $b9, $b11;
        int i0, $i1, $i2, $i4, $i5, $i7, $i8, $i10, $i13;
        double d0, $d1;

        r0 := @parameter0: java.nio.ByteBuffer;

        d0 := @parameter1: double;

        $d1 = d0 * 1.073741824E9;

        i0 = (int) $d1;

        $i1 = i0 & -16777216;

        $i2 = $i1 >> 24;

        $b3 = (byte) $i2;

        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b3);

        $i4 = i0 & 16711680;

        $i5 = $i4 >> 16;

        $b6 = (byte) $i5;

        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b6);

        $i13 = (int) 65280;

        $i7 = i0 & $i13;

        $i8 = $i7 >> 8;

        $b9 = (byte) $i8;

        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b9);

        $i10 = i0 & 255;

        $b11 = (byte) $i10;

        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b11);

        return;
    }

    public static void writeFixedPoint88(java.nio.ByteBuffer, double)
    {
        java.nio.ByteBuffer r0;
        short s1, $s5;
        byte $b4, $b6;
        int $i0, $i2, $i3, $i7, $i9;
        double d0, $d1;

        r0 := @parameter0: java.nio.ByteBuffer;

        d0 := @parameter1: double;

        $d1 = d0 * 256.0;

        $i0 = (int) $d1;

        s1 = (short) $i0;

        $i7 = (int) s1;

        $i9 = (int) 65280;

        $i2 = $i7 & $i9;

        $i3 = $i2 >> 8;

        $b4 = (byte) $i3;

        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b4);

        $s5 = s1 & 255;

        $b6 = (byte) $s5;

        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b6);

        return;
    }

    public static void writeIso639(java.nio.ByteBuffer, java.lang.String)
    {
        byte[] $r1, $r2;
        java.nio.ByteBuffer r3;
        byte $b1;
        int $i0, $i2, $i3, $i4, $i5, i6, i7, $i8;
        java.lang.String r0, $r8;
        java.lang.IllegalArgumentException $r10;
        java.lang.StringBuilder $r6, $r7, $r9;

        r3 := @parameter0: java.nio.ByteBuffer;

        r0 := @parameter1: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: byte[] getBytes()>();

        $i0 = lengthof $r1;

        if $i0 == 3 goto label1;

        $r10 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("\"");

        $r6 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" language string isn\'t exactly 3 characters long!");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r10;

     label1:
        i6 = 0;

        i7 = 0;

        goto label3;

     label2:
        $r2 = virtualinvoke r0.<java.lang.String: byte[] getBytes()>();

        $b1 = $r2[i7];

        $i8 = (int) $b1;

        $i4 = $i8 - 96;

        $i2 = 2 - i7;

        $i3 = $i2 * 5;

        $i5 = $i4 << $i3;

        i6 = i6 + $i5;

        i7 = i7 + 1;

     label3:
        if i7 < 3 goto label2;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt16(java.nio.ByteBuffer,int)>(r3, i6);

        return;
    }

    public static void writePascalUtfString(java.nio.ByteBuffer, java.lang.String)
    {
        byte[] $r1;
        int $i0, $i1;
        java.lang.String r0;
        java.lang.AssertionError $r3;
        java.nio.ByteBuffer r2;
        boolean $z0;

        r2 := @parameter0: java.nio.ByteBuffer;

        r0 := @parameter1: java.lang.String;

        $r1 = staticinvoke <com.coremedia.iso.Utf8: byte[] convert(java.lang.String)>(r0);

        $z0 = <com.coremedia.iso.IsoTypeWriter: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i1 = lengthof $r1;

        if $i1 < 255 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        $i0 = lengthof $r1;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt8(java.nio.ByteBuffer,int)>(r2, $i0);

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r1);

        return;
    }

    public static void writeZeroTermUtf8String(java.nio.ByteBuffer, java.lang.String)
    {
        byte[] $r1;
        java.lang.String r0;
        java.nio.ByteBuffer r2;

        r2 := @parameter0: java.nio.ByteBuffer;

        r0 := @parameter1: java.lang.String;

        $r1 = staticinvoke <com.coremedia.iso.Utf8: byte[] convert(java.lang.String)>(r0);

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r1);

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt8(java.nio.ByteBuffer,int)>(r2, 0);

        return;
    }

    public static void writeUtf8String(java.nio.ByteBuffer, java.lang.String)
    {
        byte[] $r2;
        java.lang.String r1;
        java.nio.ByteBuffer r0;

        r0 := @parameter0: java.nio.ByteBuffer;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <com.coremedia.iso.Utf8: byte[] convert(java.lang.String)>(r1);

        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r2);

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt8(java.nio.ByteBuffer,int)>(r0, 0);

        return;
    }
}
