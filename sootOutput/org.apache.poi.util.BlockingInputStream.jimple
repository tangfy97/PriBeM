public class org.apache.poi.util.BlockingInputStream extends java.io.InputStream
{
    protected java.io.InputStream is;

    public void <init>(java.io.InputStream)
    {
        org.apache.poi.util.BlockingInputStream r0;
        java.io.InputStream r1;

        r0 := @this: org.apache.poi.util.BlockingInputStream;

        r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<java.io.InputStream: void <init>()>();

        r0.<org.apache.poi.util.BlockingInputStream: java.io.InputStream is> = r1;

        return;
    }

    public int available() throws java.io.IOException
    {
        int $i0;
        org.apache.poi.util.BlockingInputStream r0;
        java.io.InputStream $r1;

        r0 := @this: org.apache.poi.util.BlockingInputStream;

        $r1 = r0.<org.apache.poi.util.BlockingInputStream: java.io.InputStream is>;

        $i0 = virtualinvoke $r1.<java.io.InputStream: int available()>();

        return $i0;
    }

    public void close() throws java.io.IOException
    {
        org.apache.poi.util.BlockingInputStream r0;
        java.io.InputStream $r1;

        r0 := @this: org.apache.poi.util.BlockingInputStream;

        $r1 = r0.<org.apache.poi.util.BlockingInputStream: java.io.InputStream is>;

        virtualinvoke $r1.<java.io.InputStream: void close()>();

        return;
    }

    public void mark(int)
    {
        int i0;
        org.apache.poi.util.BlockingInputStream r0;
        java.io.InputStream $r1;

        r0 := @this: org.apache.poi.util.BlockingInputStream;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.util.BlockingInputStream: java.io.InputStream is>;

        virtualinvoke $r1.<java.io.InputStream: void mark(int)>(i0);

        return;
    }

    public boolean markSupported()
    {
        org.apache.poi.util.BlockingInputStream r0;
        java.io.InputStream $r1;
        boolean $z0;

        r0 := @this: org.apache.poi.util.BlockingInputStream;

        $r1 = r0.<org.apache.poi.util.BlockingInputStream: java.io.InputStream is>;

        $z0 = virtualinvoke $r1.<java.io.InputStream: boolean markSupported()>();

        return $z0;
    }

    public int read() throws java.io.IOException
    {
        int $i0;
        org.apache.poi.util.BlockingInputStream r0;
        java.io.InputStream $r1;

        r0 := @this: org.apache.poi.util.BlockingInputStream;

        $r1 = r0.<org.apache.poi.util.BlockingInputStream: java.io.InputStream is>;

        $i0 = virtualinvoke $r1.<java.io.InputStream: int read()>();

        return $i0;
    }

    public int read(byte[]) throws java.io.IOException
    {
        byte[] r0;
        org.apache.poi.util.BlockingInputStream r1;
        byte $b3;
        int $i0, $i1, $i2, i4, i5, $i7, $i9, $i11;
        java.io.InputStream $r2;

        r1 := @this: org.apache.poi.util.BlockingInputStream;

        r0 := @parameter0: byte[];

        i4 = 0;

        i5 = 4611;

     label1:
        $i0 = lengthof r0;

        if i4 >= $i0 goto label3;

        $r2 = r1.<org.apache.poi.util.BlockingInputStream: java.io.InputStream is>;

        $i1 = virtualinvoke $r2.<java.io.InputStream: int read()>();

        i5 = $i1;

        $i7 = (int) -1;

        if $i1 != $i7 goto label2;

        goto label3;

     label2:
        $i2 = i4;

        i4 = i4 + 1;

        $b3 = (byte) $i1;

        r0[$i2] = $b3;

        goto label1;

     label3:
        if i4 != 0 goto label4;

        $i9 = (int) -1;

        if i5 != $i9 goto label4;

        $i11 = (int) -1;

        return $i11;

     label4:
        return i4;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        byte[] r1;
        int i0, i1, $i2;
        org.apache.poi.util.BlockingInputStream r0;
        java.io.InputStream $r2;

        r0 := @this: org.apache.poi.util.BlockingInputStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.apache.poi.util.BlockingInputStream: java.io.InputStream is>;

        $i2 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>(r1, i0, i1);

        return $i2;
    }

    public void reset() throws java.io.IOException
    {
        org.apache.poi.util.BlockingInputStream r0;
        java.io.InputStream $r1;

        r0 := @this: org.apache.poi.util.BlockingInputStream;

        $r1 = r0.<org.apache.poi.util.BlockingInputStream: java.io.InputStream is>;

        virtualinvoke $r1.<java.io.InputStream: void reset()>();

        return;
    }

    public long skip(long) throws java.io.IOException
    {
        org.apache.poi.util.BlockingInputStream r0;
        long l0, $l1;
        java.io.InputStream $r1;

        r0 := @this: org.apache.poi.util.BlockingInputStream;

        l0 := @parameter0: long;

        $r1 = r0.<org.apache.poi.util.BlockingInputStream: java.io.InputStream is>;

        $l1 = virtualinvoke $r1.<java.io.InputStream: long skip(long)>(l0);

        return $l1;
    }
}
