class org.mozilla.javascript.tools.debugger.JSInternalConsole extends javax.swing.JInternalFrame implements java.awt.event.ActionListener
{
    private static final long serialVersionUID;
    org.mozilla.javascript.tools.shell.ConsoleTextArea consoleTextArea;

    public void <init>(java.lang.String)
    {
        org.mozilla.javascript.tools.debugger.JSInternalConsole$1 $r7;
        org.mozilla.javascript.tools.shell.ConsoleTextArea $r2, $r3, $r4, $r6;
        javax.swing.JScrollPane $r5;
        org.mozilla.javascript.tools.debugger.JSInternalConsole r0;
        java.lang.String r1;

        r0 := @this: org.mozilla.javascript.tools.debugger.JSInternalConsole;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<javax.swing.JInternalFrame: void <init>(java.lang.String,boolean,boolean,boolean,boolean)>(r1, 1, 0, 1, 1);

        $r2 = new org.mozilla.javascript.tools.shell.ConsoleTextArea;

        specialinvoke $r2.<org.mozilla.javascript.tools.shell.ConsoleTextArea: void <init>(java.lang.String[])>(null);

        r0.<org.mozilla.javascript.tools.debugger.JSInternalConsole: org.mozilla.javascript.tools.shell.ConsoleTextArea consoleTextArea> = $r2;

        $r3 = r0.<org.mozilla.javascript.tools.debugger.JSInternalConsole: org.mozilla.javascript.tools.shell.ConsoleTextArea consoleTextArea>;

        virtualinvoke $r3.<org.mozilla.javascript.tools.shell.ConsoleTextArea: void setRows(int)>(24);

        $r4 = r0.<org.mozilla.javascript.tools.debugger.JSInternalConsole: org.mozilla.javascript.tools.shell.ConsoleTextArea consoleTextArea>;

        virtualinvoke $r4.<org.mozilla.javascript.tools.shell.ConsoleTextArea: void setColumns(int)>(80);

        $r5 = new javax.swing.JScrollPane;

        $r6 = r0.<org.mozilla.javascript.tools.debugger.JSInternalConsole: org.mozilla.javascript.tools.shell.ConsoleTextArea consoleTextArea>;

        specialinvoke $r5.<javax.swing.JScrollPane: void <init>(java.awt.Component)>($r6);

        virtualinvoke r0.<org.mozilla.javascript.tools.debugger.JSInternalConsole: void setContentPane(java.awt.Container)>($r5);

        virtualinvoke r0.<org.mozilla.javascript.tools.debugger.JSInternalConsole: void pack()>();

        $r7 = new org.mozilla.javascript.tools.debugger.JSInternalConsole$1;

        specialinvoke $r7.<org.mozilla.javascript.tools.debugger.JSInternalConsole$1: void <init>(org.mozilla.javascript.tools.debugger.JSInternalConsole)>(r0);

        virtualinvoke r0.<org.mozilla.javascript.tools.debugger.JSInternalConsole: void addInternalFrameListener(javax.swing.event.InternalFrameListener)>($r7);

        return;
    }

    public java.io.InputStream getIn()
    {
        org.mozilla.javascript.tools.shell.ConsoleTextArea $r1;
        org.mozilla.javascript.tools.debugger.JSInternalConsole r0;
        java.io.InputStream $r2;

        r0 := @this: org.mozilla.javascript.tools.debugger.JSInternalConsole;

        $r1 = r0.<org.mozilla.javascript.tools.debugger.JSInternalConsole: org.mozilla.javascript.tools.shell.ConsoleTextArea consoleTextArea>;

        $r2 = virtualinvoke $r1.<org.mozilla.javascript.tools.shell.ConsoleTextArea: java.io.InputStream getIn()>();

        return $r2;
    }

    public java.io.PrintStream getOut()
    {
        java.io.PrintStream $r2;
        org.mozilla.javascript.tools.shell.ConsoleTextArea $r1;
        org.mozilla.javascript.tools.debugger.JSInternalConsole r0;

        r0 := @this: org.mozilla.javascript.tools.debugger.JSInternalConsole;

        $r1 = r0.<org.mozilla.javascript.tools.debugger.JSInternalConsole: org.mozilla.javascript.tools.shell.ConsoleTextArea consoleTextArea>;

        $r2 = virtualinvoke $r1.<org.mozilla.javascript.tools.shell.ConsoleTextArea: java.io.PrintStream getOut()>();

        return $r2;
    }

    public java.io.PrintStream getErr()
    {
        java.io.PrintStream $r2;
        org.mozilla.javascript.tools.shell.ConsoleTextArea $r1;
        org.mozilla.javascript.tools.debugger.JSInternalConsole r0;

        r0 := @this: org.mozilla.javascript.tools.debugger.JSInternalConsole;

        $r1 = r0.<org.mozilla.javascript.tools.debugger.JSInternalConsole: org.mozilla.javascript.tools.shell.ConsoleTextArea consoleTextArea>;

        $r2 = virtualinvoke $r1.<org.mozilla.javascript.tools.shell.ConsoleTextArea: java.io.PrintStream getErr()>();

        return $r2;
    }

    public void actionPerformed(java.awt.event.ActionEvent)
    {
        org.mozilla.javascript.tools.shell.ConsoleTextArea $r3, $r4, $r5;
        java.awt.event.ActionEvent r0;
        org.mozilla.javascript.tools.debugger.JSInternalConsole r2;
        java.lang.String $r1;
        boolean $z0, $z1, $z2;

        r2 := @this: org.mozilla.javascript.tools.debugger.JSInternalConsole;

        r0 := @parameter0: java.awt.event.ActionEvent;

        $r1 = virtualinvoke r0.<java.awt.event.ActionEvent: java.lang.String getActionCommand()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("Cut");

        if $z0 == 0 goto label1;

        $r5 = r2.<org.mozilla.javascript.tools.debugger.JSInternalConsole: org.mozilla.javascript.tools.shell.ConsoleTextArea consoleTextArea>;

        virtualinvoke $r5.<org.mozilla.javascript.tools.shell.ConsoleTextArea: void cut()>();

        goto label3;

     label1:
        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("Copy");

        if $z1 == 0 goto label2;

        $r4 = r2.<org.mozilla.javascript.tools.debugger.JSInternalConsole: org.mozilla.javascript.tools.shell.ConsoleTextArea consoleTextArea>;

        virtualinvoke $r4.<org.mozilla.javascript.tools.shell.ConsoleTextArea: void copy()>();

        goto label3;

     label2:
        $z2 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("Paste");

        if $z2 == 0 goto label3;

        $r3 = r2.<org.mozilla.javascript.tools.debugger.JSInternalConsole: org.mozilla.javascript.tools.shell.ConsoleTextArea consoleTextArea>;

        virtualinvoke $r3.<org.mozilla.javascript.tools.shell.ConsoleTextArea: void paste()>();

     label3:
        return;
    }

    public static void <clinit>()
    {
        <org.mozilla.javascript.tools.debugger.JSInternalConsole: long serialVersionUID> = -5523468828771087292L;

        return;
    }
}
