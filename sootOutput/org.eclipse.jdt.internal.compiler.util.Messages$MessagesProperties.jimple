class org.eclipse.jdt.internal.compiler.util.Messages$MessagesProperties extends java.util.Properties
{
    private static final int MOD_EXPECTED;
    private static final int MOD_MASK;
    private static final long serialVersionUID;
    private final java.util.Map fields;

    public void <init>(java.lang.reflect.Field[], java.lang.String)
    {
        java.util.HashMap $r2;
        java.lang.reflect.Field $r3, $r6;
        org.eclipse.jdt.internal.compiler.util.Messages$MessagesProperties r0;
        java.lang.reflect.Field[] r1;
        java.util.Map $r4;
        int i0, $i1, i2;
        java.lang.String $r5, r7;

        r0 := @this: org.eclipse.jdt.internal.compiler.util.Messages$MessagesProperties;

        r1 := @parameter0: java.lang.reflect.Field[];

        r7 := @parameter1: java.lang.String;

        specialinvoke r0.<java.util.Properties: void <init>()>();

        i0 = lengthof r1;

        $r2 = new java.util.HashMap;

        $i1 = i0 * 2;

        specialinvoke $r2.<java.util.HashMap: void <init>(int)>($i1);

        r0.<org.eclipse.jdt.internal.compiler.util.Messages$MessagesProperties: java.util.Map fields> = $r2;

        i2 = 0;

        goto label2;

     label1:
        $r4 = r0.<org.eclipse.jdt.internal.compiler.util.Messages$MessagesProperties: java.util.Map fields>;

        $r3 = r1[i2];

        $r5 = virtualinvoke $r3.<java.lang.reflect.Field: java.lang.String getName()>();

        $r6 = r1[i2];

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r6);

        i2 = i2 + 1;

     label2:
        if i2 < i0 goto label1;

        return;
    }

    public synchronized java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        java.lang.reflect.Field r4;
        java.lang.Exception $r7;
        org.eclipse.jdt.internal.compiler.util.Messages$MessagesProperties r0;
        java.util.Map $r2;
        int $i0, $i1;
        java.lang.Object r1, $r3, r5;
        java.lang.SecurityException $r6;

        r0 := @this: org.eclipse.jdt.internal.compiler.util.Messages$MessagesProperties;

        r1 := @parameter0: java.lang.Object;

        r5 := @parameter1: java.lang.Object;

     label01:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.util.Messages$MessagesProperties: java.util.Map fields>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.lang.reflect.Field) $r3;

        if r4 != null goto label03;

     label02:
        return null;

     label03:
        $i0 = virtualinvoke r4.<java.lang.reflect.Field: int getModifiers()>();

        $i1 = $i0 & 25;

        if $i1 == 9 goto label05;

     label04:
        return null;

     label05:
        virtualinvoke r4.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>(null, r5);

     label06:
        goto label10;

     label07:
        $r7 := @caughtexception;

     label08:
        goto label10;

     label09:
        $r6 := @caughtexception;

     label10:
        return null;

        catch java.lang.Exception from label05 to label06 with label07;
        catch java.lang.SecurityException from label01 to label02 with label09;
        catch java.lang.SecurityException from label03 to label04 with label09;
        catch java.lang.SecurityException from label05 to label08 with label09;
    }

    public static void <clinit>()
    {
        <org.eclipse.jdt.internal.compiler.util.Messages$MessagesProperties: long serialVersionUID> = 1L;

        <org.eclipse.jdt.internal.compiler.util.Messages$MessagesProperties: int MOD_MASK> = 25;

        <org.eclipse.jdt.internal.compiler.util.Messages$MessagesProperties: int MOD_EXPECTED> = 9;

        return;
    }
}
