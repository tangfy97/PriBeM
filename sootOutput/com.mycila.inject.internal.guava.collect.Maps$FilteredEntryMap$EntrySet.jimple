class com.mycila.inject.internal.guava.collect.Maps$FilteredEntryMap$EntrySet extends com.mycila.inject.internal.guava.collect.ForwardingSet
{
    final com.mycila.inject.internal.guava.collect.Maps$FilteredEntryMap this$0;

    private void <init>(com.mycila.inject.internal.guava.collect.Maps$FilteredEntryMap)
    {
        com.mycila.inject.internal.guava.collect.Maps$FilteredEntryMap$EntrySet r0;
        com.mycila.inject.internal.guava.collect.Maps$FilteredEntryMap r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.Maps$FilteredEntryMap$EntrySet;

        r1 := @parameter0: com.mycila.inject.internal.guava.collect.Maps$FilteredEntryMap;

        r0.<com.mycila.inject.internal.guava.collect.Maps$FilteredEntryMap$EntrySet: com.mycila.inject.internal.guava.collect.Maps$FilteredEntryMap this$0> = r1;

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.ForwardingSet: void <init>()>();

        return;
    }

    protected java.util.Set delegate()
    {
        java.util.Set $r2;
        com.mycila.inject.internal.guava.collect.Maps$FilteredEntryMap$EntrySet r0;
        com.mycila.inject.internal.guava.collect.Maps$FilteredEntryMap $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.Maps$FilteredEntryMap$EntrySet;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.Maps$FilteredEntryMap$EntrySet: com.mycila.inject.internal.guava.collect.Maps$FilteredEntryMap this$0>;

        $r2 = $r1.<com.mycila.inject.internal.guava.collect.Maps$FilteredEntryMap: java.util.Set filteredEntrySet>;

        return $r2;
    }

    public java.util.Iterator iterator()
    {
        com.mycila.inject.internal.guava.collect.Maps$FilteredEntryMap$EntrySet r0;
        java.util.Iterator $r3;
        com.mycila.inject.internal.guava.collect.Maps$FilteredEntryMap $r1;
        java.util.Set $r2;
        com.mycila.inject.internal.guava.collect.Maps$FilteredEntryMap$EntrySet$1 $r4;

        r0 := @this: com.mycila.inject.internal.guava.collect.Maps$FilteredEntryMap$EntrySet;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.Maps$FilteredEntryMap$EntrySet: com.mycila.inject.internal.guava.collect.Maps$FilteredEntryMap this$0>;

        $r2 = $r1.<com.mycila.inject.internal.guava.collect.Maps$FilteredEntryMap: java.util.Set filteredEntrySet>;

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        $r4 = new com.mycila.inject.internal.guava.collect.Maps$FilteredEntryMap$EntrySet$1;

        specialinvoke $r4.<com.mycila.inject.internal.guava.collect.Maps$FilteredEntryMap$EntrySet$1: void <init>(com.mycila.inject.internal.guava.collect.Maps$FilteredEntryMap$EntrySet,java.util.Iterator)>(r0, $r3);

        return $r4;
    }

    protected volatile java.util.Collection delegate()
    {
        java.util.Set $r1;
        com.mycila.inject.internal.guava.collect.Maps$FilteredEntryMap$EntrySet r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.Maps$FilteredEntryMap$EntrySet;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.Maps$FilteredEntryMap$EntrySet: java.util.Set delegate()>();

        return $r1;
    }

    protected volatile java.lang.Object delegate()
    {
        java.util.Set $r1;
        com.mycila.inject.internal.guava.collect.Maps$FilteredEntryMap$EntrySet r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.Maps$FilteredEntryMap$EntrySet;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.Maps$FilteredEntryMap$EntrySet: java.util.Set delegate()>();

        return $r1;
    }

    void <init>(com.mycila.inject.internal.guava.collect.Maps$FilteredEntryMap, com.mycila.inject.internal.guava.collect.Maps$1)
    {
        com.mycila.inject.internal.guava.collect.Maps$FilteredEntryMap$EntrySet r0;
        com.mycila.inject.internal.guava.collect.Maps$1 r2;
        com.mycila.inject.internal.guava.collect.Maps$FilteredEntryMap r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.Maps$FilteredEntryMap$EntrySet;

        r1 := @parameter0: com.mycila.inject.internal.guava.collect.Maps$FilteredEntryMap;

        r2 := @parameter1: com.mycila.inject.internal.guava.collect.Maps$1;

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.Maps$FilteredEntryMap$EntrySet: void <init>(com.mycila.inject.internal.guava.collect.Maps$FilteredEntryMap)>(r1);

        return;
    }
}
