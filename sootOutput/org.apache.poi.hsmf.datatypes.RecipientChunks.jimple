public final class org.apache.poi.hsmf.datatypes.RecipientChunks extends java.lang.Object implements org.apache.poi.hsmf.datatypes.ChunkGroupWithProperties
{
    private static org.apache.poi.util.POILogger logger;
    public static final java.lang.String PREFIX;
    public static final org.apache.poi.hsmf.datatypes.MAPIProperty RECIPIENT_NAME;
    public static final org.apache.poi.hsmf.datatypes.MAPIProperty DELIVERY_TYPE;
    public static final org.apache.poi.hsmf.datatypes.MAPIProperty RECIPIENT_EMAIL_ADDRESS;
    public static final org.apache.poi.hsmf.datatypes.MAPIProperty RECIPIENT_SEARCH;
    public static final org.apache.poi.hsmf.datatypes.MAPIProperty RECIPIENT_SMTP_ADDRESS;
    public static final org.apache.poi.hsmf.datatypes.MAPIProperty RECIPIENT_DISPLAY_NAME;
    public int recipientNumber;
    public org.apache.poi.hsmf.datatypes.ByteChunk recipientSearchChunk;
    public org.apache.poi.hsmf.datatypes.StringChunk recipientNameChunk;
    public org.apache.poi.hsmf.datatypes.StringChunk recipientEmailChunk;
    public org.apache.poi.hsmf.datatypes.StringChunk recipientSMTPChunk;
    public org.apache.poi.hsmf.datatypes.StringChunk deliveryTypeChunk;
    public org.apache.poi.hsmf.datatypes.StringChunk recipientDisplayNameChunk;
    private org.apache.poi.hsmf.datatypes.PropertiesChunk recipientProperties;
    private java.util.List allChunks;

    public void <init>(java.lang.String)
    {
        org.apache.poi.hsmf.datatypes.RecipientChunks r0;
        java.lang.NumberFormatException $r4;
        org.apache.poi.util.POILogger $r6;
        java.util.ArrayList $r10;
        int $i0, $i1, $i2, $i4, $i6;
        java.lang.StringBuilder $r7, $r8, $r11;
        java.lang.String r2, $r3, $r9;

        r0 := @this: org.apache.poi.hsmf.datatypes.RecipientChunks;

        r2 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.hsmf.datatypes.RecipientChunks: java.util.List allChunks> = $r10;

        $i4 = (int) -1;

        r0.<org.apache.poi.hsmf.datatypes.RecipientChunks: int recipientNumber> = $i4;

        $i0 = virtualinvoke r2.<java.lang.String: int lastIndexOf(int)>(35);

        $i6 = (int) -1;

        if $i0 <= $i6 goto label4;

        $i1 = $i0 + 1;

        $r3 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i1);

     label1:
        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r3, 16);

        r0.<org.apache.poi.hsmf.datatypes.RecipientChunks: int recipientNumber> = $i2;

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r6 = <org.apache.poi.hsmf.datatypes.RecipientChunks: org.apache.poi.util.POILogger logger>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid recipient number in name ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(7, $r9);

     label4:
        return;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public java.lang.String getRecipientName()
    {
        org.apache.poi.hsmf.datatypes.StringChunk $r1, $r2, $r3, $r5;
        org.apache.poi.hsmf.datatypes.RecipientChunks r0;
        java.lang.String $r4, $r6;

        r0 := @this: org.apache.poi.hsmf.datatypes.RecipientChunks;

        $r1 = r0.<org.apache.poi.hsmf.datatypes.RecipientChunks: org.apache.poi.hsmf.datatypes.StringChunk recipientNameChunk>;

        if $r1 == null goto label1;

        $r5 = r0.<org.apache.poi.hsmf.datatypes.RecipientChunks: org.apache.poi.hsmf.datatypes.StringChunk recipientNameChunk>;

        $r6 = virtualinvoke $r5.<org.apache.poi.hsmf.datatypes.StringChunk: java.lang.String getValue()>();

        return $r6;

     label1:
        $r2 = r0.<org.apache.poi.hsmf.datatypes.RecipientChunks: org.apache.poi.hsmf.datatypes.StringChunk recipientDisplayNameChunk>;

        if $r2 == null goto label2;

        $r3 = r0.<org.apache.poi.hsmf.datatypes.RecipientChunks: org.apache.poi.hsmf.datatypes.StringChunk recipientDisplayNameChunk>;

        $r4 = virtualinvoke $r3.<org.apache.poi.hsmf.datatypes.StringChunk: java.lang.String getValue()>();

        return $r4;

     label2:
        return null;
    }

    public java.lang.String getRecipientEmailAddress()
    {
        org.apache.poi.hsmf.datatypes.ByteChunk $r4, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i11, $i13;
        java.lang.String $r6, $r7, $r9, $r10, $r12, $r13, $r15;
        boolean $z0, $z1;
        org.apache.poi.hsmf.datatypes.StringChunk $r1, $r2, $r3, $r8, $r11, $r14;
        org.apache.poi.hsmf.datatypes.RecipientChunks r0;

        r0 := @this: org.apache.poi.hsmf.datatypes.RecipientChunks;

        $r1 = r0.<org.apache.poi.hsmf.datatypes.RecipientChunks: org.apache.poi.hsmf.datatypes.StringChunk recipientSMTPChunk>;

        if $r1 == null goto label1;

        $r14 = r0.<org.apache.poi.hsmf.datatypes.RecipientChunks: org.apache.poi.hsmf.datatypes.StringChunk recipientSMTPChunk>;

        $r15 = virtualinvoke $r14.<org.apache.poi.hsmf.datatypes.StringChunk: java.lang.String getValue()>();

        return $r15;

     label1:
        $r2 = r0.<org.apache.poi.hsmf.datatypes.RecipientChunks: org.apache.poi.hsmf.datatypes.StringChunk recipientEmailChunk>;

        if $r2 == null goto label3;

        $r11 = r0.<org.apache.poi.hsmf.datatypes.RecipientChunks: org.apache.poi.hsmf.datatypes.StringChunk recipientEmailChunk>;

        $r12 = virtualinvoke $r11.<org.apache.poi.hsmf.datatypes.StringChunk: java.lang.String getValue()>();

        $i6 = virtualinvoke $r12.<java.lang.String: int indexOf(java.lang.String)>("/CN=");

        $i9 = (int) -1;

        if $i6 != $i9 goto label2;

        return $r12;

     label2:
        $i7 = $i6 + 4;

        $r13 = virtualinvoke $r12.<java.lang.String: java.lang.String substring(int)>($i7);

        return $r13;

     label3:
        $r3 = r0.<org.apache.poi.hsmf.datatypes.RecipientChunks: org.apache.poi.hsmf.datatypes.StringChunk recipientNameChunk>;

        if $r3 == null goto label5;

        $r8 = r0.<org.apache.poi.hsmf.datatypes.RecipientChunks: org.apache.poi.hsmf.datatypes.StringChunk recipientNameChunk>;

        $r9 = virtualinvoke $r8.<org.apache.poi.hsmf.datatypes.StringChunk: java.lang.String getValue()>();

        $i3 = virtualinvoke $r9.<java.lang.String: int indexOf(int)>(64);

        $i11 = (int) -1;

        if $i3 <= $i11 goto label5;

        $z0 = virtualinvoke $r9.<java.lang.String: boolean startsWith(java.lang.String)>("\'");

        if $z0 == 0 goto label4;

        $z1 = virtualinvoke $r9.<java.lang.String: boolean endsWith(java.lang.String)>("\'");

        if $z1 == 0 goto label4;

        $i4 = virtualinvoke $r9.<java.lang.String: int length()>();

        $i5 = $i4 - 1;

        $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String substring(int,int)>(1, $i5);

        return $r10;

     label4:
        return $r9;

     label5:
        $r4 = r0.<org.apache.poi.hsmf.datatypes.RecipientChunks: org.apache.poi.hsmf.datatypes.ByteChunk recipientSearchChunk>;

        if $r4 == null goto label6;

        $r5 = r0.<org.apache.poi.hsmf.datatypes.RecipientChunks: org.apache.poi.hsmf.datatypes.ByteChunk recipientSearchChunk>;

        $r6 = virtualinvoke $r5.<org.apache.poi.hsmf.datatypes.ByteChunk: java.lang.String getAs7bitString()>();

        $i0 = virtualinvoke $r6.<java.lang.String: int indexOf(java.lang.String)>("SMTP:");

        $i13 = (int) -1;

        if $i0 == $i13 goto label6;

        $i1 = virtualinvoke $r6.<java.lang.String: int indexOf(java.lang.String)>("SMTP:");

        $i2 = $i1 + 5;

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int)>($i2);

        return $r7;

     label6:
        return null;
    }

    public java.util.Map getProperties()
    {
        org.apache.poi.hsmf.datatypes.PropertiesChunk $r1, $r3;
        java.util.Map $r2, $r4;
        org.apache.poi.hsmf.datatypes.RecipientChunks r0;

        r0 := @this: org.apache.poi.hsmf.datatypes.RecipientChunks;

        $r1 = r0.<org.apache.poi.hsmf.datatypes.RecipientChunks: org.apache.poi.hsmf.datatypes.PropertiesChunk recipientProperties>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.poi.hsmf.datatypes.RecipientChunks: org.apache.poi.hsmf.datatypes.PropertiesChunk recipientProperties>;

        $r4 = virtualinvoke $r3.<org.apache.poi.hsmf.datatypes.PropertiesChunk: java.util.Map getProperties()>();

        return $r4;

     label1:
        $r2 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        return $r2;
    }

    public org.apache.poi.hsmf.datatypes.Chunk[] getAll()
    {
        java.util.List $r1, $r2;
        java.lang.Object[] $r4;
        org.apache.poi.hsmf.datatypes.RecipientChunks r0;
        int $i0;
        org.apache.poi.hsmf.datatypes.Chunk[] $r3, $r5;

        r0 := @this: org.apache.poi.hsmf.datatypes.RecipientChunks;

        $r2 = r0.<org.apache.poi.hsmf.datatypes.RecipientChunks: java.util.List allChunks>;

        $r1 = r0.<org.apache.poi.hsmf.datatypes.RecipientChunks: java.util.List allChunks>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $r3 = newarray (org.apache.poi.hsmf.datatypes.Chunk)[$i0];

        $r4 = interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r5 = (org.apache.poi.hsmf.datatypes.Chunk[]) $r4;

        return $r5;
    }

    public org.apache.poi.hsmf.datatypes.Chunk[] getChunks()
    {
        org.apache.poi.hsmf.datatypes.RecipientChunks r0;
        org.apache.poi.hsmf.datatypes.Chunk[] $r1;

        r0 := @this: org.apache.poi.hsmf.datatypes.RecipientChunks;

        $r1 = virtualinvoke r0.<org.apache.poi.hsmf.datatypes.RecipientChunks: org.apache.poi.hsmf.datatypes.Chunk[] getAll()>();

        return $r1;
    }

    public void record(org.apache.poi.hsmf.datatypes.Chunk)
    {
        org.apache.poi.hsmf.datatypes.ByteChunk $r14;
        org.apache.poi.hsmf.datatypes.PropertiesChunk $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        boolean $z0;
        org.apache.poi.hsmf.datatypes.StringChunk $r9, $r10, $r11, $r12, $r13;
        org.apache.poi.hsmf.datatypes.Chunk r0;
        org.apache.poi.hsmf.datatypes.MAPIProperty $r1, $r2, $r3, $r4, $r5, $r6;
        org.apache.poi.hsmf.datatypes.RecipientChunks r7;
        java.util.List $r15;

        r7 := @this: org.apache.poi.hsmf.datatypes.RecipientChunks;

        r0 := @parameter0: org.apache.poi.hsmf.datatypes.Chunk;

        $i0 = virtualinvoke r0.<org.apache.poi.hsmf.datatypes.Chunk: int getChunkId()>();

        $r1 = <org.apache.poi.hsmf.datatypes.RecipientChunks: org.apache.poi.hsmf.datatypes.MAPIProperty RECIPIENT_SEARCH>;

        $i1 = $r1.<org.apache.poi.hsmf.datatypes.MAPIProperty: int id>;

        if $i0 != $i1 goto label1;

        $r14 = (org.apache.poi.hsmf.datatypes.ByteChunk) r0;

        r7.<org.apache.poi.hsmf.datatypes.RecipientChunks: org.apache.poi.hsmf.datatypes.ByteChunk recipientSearchChunk> = $r14;

        goto label7;

     label1:
        $i2 = virtualinvoke r0.<org.apache.poi.hsmf.datatypes.Chunk: int getChunkId()>();

        $r2 = <org.apache.poi.hsmf.datatypes.RecipientChunks: org.apache.poi.hsmf.datatypes.MAPIProperty RECIPIENT_NAME>;

        $i3 = $r2.<org.apache.poi.hsmf.datatypes.MAPIProperty: int id>;

        if $i2 != $i3 goto label2;

        $r13 = (org.apache.poi.hsmf.datatypes.StringChunk) r0;

        r7.<org.apache.poi.hsmf.datatypes.RecipientChunks: org.apache.poi.hsmf.datatypes.StringChunk recipientDisplayNameChunk> = $r13;

        goto label7;

     label2:
        $i4 = virtualinvoke r0.<org.apache.poi.hsmf.datatypes.Chunk: int getChunkId()>();

        $r3 = <org.apache.poi.hsmf.datatypes.RecipientChunks: org.apache.poi.hsmf.datatypes.MAPIProperty RECIPIENT_DISPLAY_NAME>;

        $i5 = $r3.<org.apache.poi.hsmf.datatypes.MAPIProperty: int id>;

        if $i4 != $i5 goto label3;

        $r12 = (org.apache.poi.hsmf.datatypes.StringChunk) r0;

        r7.<org.apache.poi.hsmf.datatypes.RecipientChunks: org.apache.poi.hsmf.datatypes.StringChunk recipientNameChunk> = $r12;

        goto label7;

     label3:
        $i6 = virtualinvoke r0.<org.apache.poi.hsmf.datatypes.Chunk: int getChunkId()>();

        $r4 = <org.apache.poi.hsmf.datatypes.RecipientChunks: org.apache.poi.hsmf.datatypes.MAPIProperty RECIPIENT_EMAIL_ADDRESS>;

        $i7 = $r4.<org.apache.poi.hsmf.datatypes.MAPIProperty: int id>;

        if $i6 != $i7 goto label4;

        $r11 = (org.apache.poi.hsmf.datatypes.StringChunk) r0;

        r7.<org.apache.poi.hsmf.datatypes.RecipientChunks: org.apache.poi.hsmf.datatypes.StringChunk recipientEmailChunk> = $r11;

        goto label7;

     label4:
        $i8 = virtualinvoke r0.<org.apache.poi.hsmf.datatypes.Chunk: int getChunkId()>();

        $r5 = <org.apache.poi.hsmf.datatypes.RecipientChunks: org.apache.poi.hsmf.datatypes.MAPIProperty RECIPIENT_SMTP_ADDRESS>;

        $i9 = $r5.<org.apache.poi.hsmf.datatypes.MAPIProperty: int id>;

        if $i8 != $i9 goto label5;

        $r10 = (org.apache.poi.hsmf.datatypes.StringChunk) r0;

        r7.<org.apache.poi.hsmf.datatypes.RecipientChunks: org.apache.poi.hsmf.datatypes.StringChunk recipientSMTPChunk> = $r10;

        goto label7;

     label5:
        $i10 = virtualinvoke r0.<org.apache.poi.hsmf.datatypes.Chunk: int getChunkId()>();

        $r6 = <org.apache.poi.hsmf.datatypes.RecipientChunks: org.apache.poi.hsmf.datatypes.MAPIProperty DELIVERY_TYPE>;

        $i11 = $r6.<org.apache.poi.hsmf.datatypes.MAPIProperty: int id>;

        if $i10 != $i11 goto label6;

        $r9 = (org.apache.poi.hsmf.datatypes.StringChunk) r0;

        r7.<org.apache.poi.hsmf.datatypes.RecipientChunks: org.apache.poi.hsmf.datatypes.StringChunk deliveryTypeChunk> = $r9;

        goto label7;

     label6:
        $z0 = r0 instanceof org.apache.poi.hsmf.datatypes.PropertiesChunk;

        if $z0 == 0 goto label7;

        $r8 = (org.apache.poi.hsmf.datatypes.PropertiesChunk) r0;

        r7.<org.apache.poi.hsmf.datatypes.RecipientChunks: org.apache.poi.hsmf.datatypes.PropertiesChunk recipientProperties> = $r8;

     label7:
        $r15 = r7.<org.apache.poi.hsmf.datatypes.RecipientChunks: java.util.List allChunks>;

        interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(r0);

        return;
    }

    public void chunksComplete()
    {
        org.apache.poi.hsmf.datatypes.PropertiesChunk $r1, $r3;
        org.apache.poi.hsmf.datatypes.RecipientChunks r0;
        org.apache.poi.util.POILogger $r2;

        r0 := @this: org.apache.poi.hsmf.datatypes.RecipientChunks;

        $r1 = r0.<org.apache.poi.hsmf.datatypes.RecipientChunks: org.apache.poi.hsmf.datatypes.PropertiesChunk recipientProperties>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.poi.hsmf.datatypes.RecipientChunks: org.apache.poi.hsmf.datatypes.PropertiesChunk recipientProperties>;

        virtualinvoke $r3.<org.apache.poi.hsmf.datatypes.PropertiesChunk: void matchVariableSizedPropertiesToChunks()>();

        goto label2;

     label1:
        $r2 = <org.apache.poi.hsmf.datatypes.RecipientChunks: org.apache.poi.util.POILogger logger>;

        virtualinvoke $r2.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(5, "Recipeints Chunk didn\'t contain a list of properties!");

     label2:
        return;
    }

    static void <clinit>()
    {
        org.apache.poi.hsmf.datatypes.MAPIProperty $r1, $r2, $r3, $r4, $r5, $r6;
        org.apache.poi.util.POILogger $r0;

        <org.apache.poi.hsmf.datatypes.RecipientChunks: java.lang.String PREFIX> = "__recip_version1.0_#";

        $r0 = staticinvoke <org.apache.poi.util.POILogFactory: org.apache.poi.util.POILogger getLogger(java.lang.Class)>(class "Lorg/apache/poi/hsmf/datatypes/RecipientChunks;");

        <org.apache.poi.hsmf.datatypes.RecipientChunks: org.apache.poi.util.POILogger logger> = $r0;

        $r1 = <org.apache.poi.hsmf.datatypes.MAPIProperty: org.apache.poi.hsmf.datatypes.MAPIProperty DISPLAY_NAME>;

        <org.apache.poi.hsmf.datatypes.RecipientChunks: org.apache.poi.hsmf.datatypes.MAPIProperty RECIPIENT_NAME> = $r1;

        $r2 = <org.apache.poi.hsmf.datatypes.MAPIProperty: org.apache.poi.hsmf.datatypes.MAPIProperty ADDRTYPE>;

        <org.apache.poi.hsmf.datatypes.RecipientChunks: org.apache.poi.hsmf.datatypes.MAPIProperty DELIVERY_TYPE> = $r2;

        $r3 = <org.apache.poi.hsmf.datatypes.MAPIProperty: org.apache.poi.hsmf.datatypes.MAPIProperty EMAIL_ADDRESS>;

        <org.apache.poi.hsmf.datatypes.RecipientChunks: org.apache.poi.hsmf.datatypes.MAPIProperty RECIPIENT_EMAIL_ADDRESS> = $r3;

        $r4 = <org.apache.poi.hsmf.datatypes.MAPIProperty: org.apache.poi.hsmf.datatypes.MAPIProperty SEARCH_KEY>;

        <org.apache.poi.hsmf.datatypes.RecipientChunks: org.apache.poi.hsmf.datatypes.MAPIProperty RECIPIENT_SEARCH> = $r4;

        $r5 = <org.apache.poi.hsmf.datatypes.MAPIProperty: org.apache.poi.hsmf.datatypes.MAPIProperty SMTP_ADDRESS>;

        <org.apache.poi.hsmf.datatypes.RecipientChunks: org.apache.poi.hsmf.datatypes.MAPIProperty RECIPIENT_SMTP_ADDRESS> = $r5;

        $r6 = <org.apache.poi.hsmf.datatypes.MAPIProperty: org.apache.poi.hsmf.datatypes.MAPIProperty RECIPIENT_DISPLAY_NAME>;

        <org.apache.poi.hsmf.datatypes.RecipientChunks: org.apache.poi.hsmf.datatypes.MAPIProperty RECIPIENT_DISPLAY_NAME> = $r6;

        return;
    }
}
