public class org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements org.openxmlformats.schemas.drawingml.x2006.main.CTPath2D
{
    private static final javax.xml.namespace.QName CLOSE$0;
    private static final javax.xml.namespace.QName MOVETO$2;
    private static final javax.xml.namespace.QName LNTO$4;
    private static final javax.xml.namespace.QName ARCTO$6;
    private static final javax.xml.namespace.QName QUADBEZTO$8;
    private static final javax.xml.namespace.QName CUBICBEZTO$10;
    private static final javax.xml.namespace.QName W$12;
    private static final javax.xml.namespace.QName H$14;
    private static final javax.xml.namespace.QName FILL$16;
    private static final javax.xml.namespace.QName STROKE$18;
    private static final javax.xml.namespace.QName EXTRUSIONOK$20;

    public void <init>(org.apache.xmlbeans.SchemaType)
    {
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        org.apache.xmlbeans.SchemaType r1;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        r1 := @parameter0: org.apache.xmlbeans.SchemaType;

        specialinvoke r0.<org.apache.xmlbeans.impl.values.XmlComplexContentImpl: void <init>(org.apache.xmlbeans.SchemaType)>(r1);

        return;
    }

    public java.util.List getCloseList()
    {
        java.lang.Throwable $r3;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl$1CloseList $r4;
        java.util.List $r5;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        java.lang.Object $r1;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r4 = new org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl$1CloseList;

        specialinvoke $r4.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl$1CloseList: void <init>(org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl)>(r0);

        exitmonitor $r1;

     label2:
        $r5 = (java.util.List) $r4;

        return $r5;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DClose[] getCloseArray()
    {
        java.lang.Throwable $r6;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DClose[] r5;
        org.apache.xmlbeans.impl.values.TypeStore $r3;
        java.util.ArrayList $r2;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        int $i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r4;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r4 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName CLOSE$0>;

        interfaceinvoke $r3.<org.apache.xmlbeans.impl.values.TypeStore: void find_all_element_users(javax.xml.namespace.QName,java.util.List)>($r4, $r2);

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        r5 = newarray (org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DClose)[$i0];

        interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r5);

        exitmonitor $r1;

     label2:
        return r5;

     label3:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DClose getCloseArray(int)
    {
        java.lang.Throwable $r6;
        java.lang.IndexOutOfBoundsException $r5;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DClose r7;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        int i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName CLOSE$0>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, i0);

        r7 = (org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DClose) $r4;

        if r7 != null goto label2;

        $r5 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r5.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r5;

     label2:
        exitmonitor $r1;

     label3:
        return r7;

     label4:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public int sizeOfCloseArray()
    {
        java.lang.Throwable $r4;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        int $i0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName CLOSE$0>;

        $i0 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(javax.xml.namespace.QName)>($r3);

        exitmonitor $r1;

     label2:
        return $i0;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setCloseArray(org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DClose[])
    {
        java.lang.Throwable $r4;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DClose[] r2;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        r2 := @parameter0: org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DClose[];

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName CLOSE$0>;

        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void arraySetterHelper(org.apache.xmlbeans.XmlObject[],javax.xml.namespace.QName)>(r2, $r3);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setCloseArray(int, org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DClose)
    {
        java.lang.Throwable $r7;
        java.lang.IndexOutOfBoundsException $r6;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DClose r5, r8;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        int i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        i0 := @parameter0: int;

        r5 := @parameter1: org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DClose;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName CLOSE$0>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, i0);

        r8 = (org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DClose) $r4;

        if r8 != null goto label2;

        $r6 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r6.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r6;

     label2:
        interfaceinvoke r8.<org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DClose: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r7;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DClose insertNewClose(int)
    {
        java.lang.Throwable $r5;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DClose r6;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        int i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName CLOSE$0>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser insert_element_user(javax.xml.namespace.QName,int)>($r3, i0);

        r6 = (org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DClose) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DClose addNewClose()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DClose r6;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName CLOSE$0>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>($r3);

        r6 = (org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DClose) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void removeClose(int)
    {
        java.lang.Throwable $r4;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        int i0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName CLOSE$0>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(javax.xml.namespace.QName,int)>($r3, i0);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.util.List getMoveToList()
    {
        java.lang.Throwable $r3;
        java.util.List $r5;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl$1MoveToList $r4;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        java.lang.Object $r1;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r4 = new org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl$1MoveToList;

        specialinvoke $r4.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl$1MoveToList: void <init>(org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl)>(r0);

        exitmonitor $r1;

     label2:
        $r5 = (java.util.List) $r4;

        return $r5;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DMoveTo[] getMoveToArray()
    {
        java.lang.Throwable $r6;
        org.apache.xmlbeans.impl.values.TypeStore $r3;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DMoveTo[] r5;
        java.util.ArrayList $r2;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        int $i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r4;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r4 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName MOVETO$2>;

        interfaceinvoke $r3.<org.apache.xmlbeans.impl.values.TypeStore: void find_all_element_users(javax.xml.namespace.QName,java.util.List)>($r4, $r2);

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        r5 = newarray (org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DMoveTo)[$i0];

        interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r5);

        exitmonitor $r1;

     label2:
        return r5;

     label3:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DMoveTo getMoveToArray(int)
    {
        java.lang.Throwable $r6;
        java.lang.IndexOutOfBoundsException $r5;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        int i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DMoveTo r7;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName MOVETO$2>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, i0);

        r7 = (org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DMoveTo) $r4;

        if r7 != null goto label2;

        $r5 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r5.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r5;

     label2:
        exitmonitor $r1;

     label3:
        return r7;

     label4:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public int sizeOfMoveToArray()
    {
        java.lang.Throwable $r4;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        int $i0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName MOVETO$2>;

        $i0 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(javax.xml.namespace.QName)>($r3);

        exitmonitor $r1;

     label2:
        return $i0;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setMoveToArray(org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DMoveTo[])
    {
        java.lang.Throwable $r4;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DMoveTo[] r2;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        r2 := @parameter0: org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DMoveTo[];

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName MOVETO$2>;

        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void arraySetterHelper(org.apache.xmlbeans.XmlObject[],javax.xml.namespace.QName)>(r2, $r3);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setMoveToArray(int, org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DMoveTo)
    {
        java.lang.Throwable $r7;
        java.lang.IndexOutOfBoundsException $r6;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        int i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DMoveTo r5, r8;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        i0 := @parameter0: int;

        r5 := @parameter1: org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DMoveTo;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName MOVETO$2>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, i0);

        r8 = (org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DMoveTo) $r4;

        if r8 != null goto label2;

        $r6 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r6.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r6;

     label2:
        interfaceinvoke r8.<org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DMoveTo: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r7;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DMoveTo insertNewMoveTo(int)
    {
        java.lang.Throwable $r5;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        int i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DMoveTo r6;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName MOVETO$2>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser insert_element_user(javax.xml.namespace.QName,int)>($r3, i0);

        r6 = (org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DMoveTo) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DMoveTo addNewMoveTo()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DMoveTo r6;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName MOVETO$2>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>($r3);

        r6 = (org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DMoveTo) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void removeMoveTo(int)
    {
        java.lang.Throwable $r4;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        int i0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName MOVETO$2>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(javax.xml.namespace.QName,int)>($r3, i0);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.util.List getLnToList()
    {
        java.lang.Throwable $r3;
        java.util.List $r5;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl$1LnToList $r4;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        java.lang.Object $r1;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r4 = new org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl$1LnToList;

        specialinvoke $r4.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl$1LnToList: void <init>(org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl)>(r0);

        exitmonitor $r1;

     label2:
        $r5 = (java.util.List) $r4;

        return $r5;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DLineTo[] getLnToArray()
    {
        java.lang.Throwable $r6;
        org.apache.xmlbeans.impl.values.TypeStore $r3;
        java.util.ArrayList $r2;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DLineTo[] r5;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        int $i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r4;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r4 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName LNTO$4>;

        interfaceinvoke $r3.<org.apache.xmlbeans.impl.values.TypeStore: void find_all_element_users(javax.xml.namespace.QName,java.util.List)>($r4, $r2);

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        r5 = newarray (org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DLineTo)[$i0];

        interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r5);

        exitmonitor $r1;

     label2:
        return r5;

     label3:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DLineTo getLnToArray(int)
    {
        java.lang.Throwable $r6;
        java.lang.IndexOutOfBoundsException $r5;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DLineTo r7;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        int i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName LNTO$4>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, i0);

        r7 = (org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DLineTo) $r4;

        if r7 != null goto label2;

        $r5 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r5.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r5;

     label2:
        exitmonitor $r1;

     label3:
        return r7;

     label4:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public int sizeOfLnToArray()
    {
        java.lang.Throwable $r4;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        int $i0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName LNTO$4>;

        $i0 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(javax.xml.namespace.QName)>($r3);

        exitmonitor $r1;

     label2:
        return $i0;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setLnToArray(org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DLineTo[])
    {
        java.lang.Throwable $r4;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DLineTo[] r2;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        r2 := @parameter0: org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DLineTo[];

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName LNTO$4>;

        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void arraySetterHelper(org.apache.xmlbeans.XmlObject[],javax.xml.namespace.QName)>(r2, $r3);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setLnToArray(int, org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DLineTo)
    {
        java.lang.Throwable $r7;
        java.lang.IndexOutOfBoundsException $r6;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DLineTo r5, r8;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        int i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        i0 := @parameter0: int;

        r5 := @parameter1: org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DLineTo;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName LNTO$4>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, i0);

        r8 = (org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DLineTo) $r4;

        if r8 != null goto label2;

        $r6 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r6.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r6;

     label2:
        interfaceinvoke r8.<org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DLineTo: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r7;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DLineTo insertNewLnTo(int)
    {
        java.lang.Throwable $r5;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DLineTo r6;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        int i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName LNTO$4>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser insert_element_user(javax.xml.namespace.QName,int)>($r3, i0);

        r6 = (org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DLineTo) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DLineTo addNewLnTo()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DLineTo r6;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName LNTO$4>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>($r3);

        r6 = (org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DLineTo) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void removeLnTo(int)
    {
        java.lang.Throwable $r4;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        int i0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName LNTO$4>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(javax.xml.namespace.QName,int)>($r3, i0);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.util.List getArcToList()
    {
        java.lang.Throwable $r3;
        java.util.List $r5;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl$1ArcToList $r4;
        java.lang.Object $r1;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r4 = new org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl$1ArcToList;

        specialinvoke $r4.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl$1ArcToList: void <init>(org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl)>(r0);

        exitmonitor $r1;

     label2:
        $r5 = (java.util.List) $r4;

        return $r5;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DArcTo[] getArcToArray()
    {
        java.lang.Throwable $r6;
        org.apache.xmlbeans.impl.values.TypeStore $r3;
        java.util.ArrayList $r2;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        int $i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r4;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DArcTo[] r5;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r4 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName ARCTO$6>;

        interfaceinvoke $r3.<org.apache.xmlbeans.impl.values.TypeStore: void find_all_element_users(javax.xml.namespace.QName,java.util.List)>($r4, $r2);

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        r5 = newarray (org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DArcTo)[$i0];

        interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r5);

        exitmonitor $r1;

     label2:
        return r5;

     label3:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DArcTo getArcToArray(int)
    {
        java.lang.Throwable $r6;
        java.lang.IndexOutOfBoundsException $r5;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DArcTo r7;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        int i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName ARCTO$6>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, i0);

        r7 = (org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DArcTo) $r4;

        if r7 != null goto label2;

        $r5 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r5.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r5;

     label2:
        exitmonitor $r1;

     label3:
        return r7;

     label4:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public int sizeOfArcToArray()
    {
        java.lang.Throwable $r4;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        int $i0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName ARCTO$6>;

        $i0 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(javax.xml.namespace.QName)>($r3);

        exitmonitor $r1;

     label2:
        return $i0;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setArcToArray(org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DArcTo[])
    {
        java.lang.Throwable $r4;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        java.lang.Object $r1;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DArcTo[] r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        r2 := @parameter0: org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DArcTo[];

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName ARCTO$6>;

        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void arraySetterHelper(org.apache.xmlbeans.XmlObject[],javax.xml.namespace.QName)>(r2, $r3);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setArcToArray(int, org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DArcTo)
    {
        java.lang.Throwable $r7;
        java.lang.IndexOutOfBoundsException $r6;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DArcTo r5, r8;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        int i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        i0 := @parameter0: int;

        r5 := @parameter1: org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DArcTo;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName ARCTO$6>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, i0);

        r8 = (org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DArcTo) $r4;

        if r8 != null goto label2;

        $r6 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r6.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r6;

     label2:
        interfaceinvoke r8.<org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DArcTo: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r7;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DArcTo insertNewArcTo(int)
    {
        java.lang.Throwable $r5;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DArcTo r6;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        int i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName ARCTO$6>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser insert_element_user(javax.xml.namespace.QName,int)>($r3, i0);

        r6 = (org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DArcTo) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DArcTo addNewArcTo()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DArcTo r6;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName ARCTO$6>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>($r3);

        r6 = (org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DArcTo) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void removeArcTo(int)
    {
        java.lang.Throwable $r4;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        int i0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName ARCTO$6>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(javax.xml.namespace.QName,int)>($r3, i0);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.util.List getQuadBezToList()
    {
        java.lang.Throwable $r3;
        java.util.List $r5;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        java.lang.Object $r1;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl$1QuadBezToList $r4;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r4 = new org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl$1QuadBezToList;

        specialinvoke $r4.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl$1QuadBezToList: void <init>(org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl)>(r0);

        exitmonitor $r1;

     label2:
        $r5 = (java.util.List) $r4;

        return $r5;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DQuadBezierTo[] getQuadBezToArray()
    {
        java.lang.Throwable $r6;
        org.apache.xmlbeans.impl.values.TypeStore $r3;
        java.util.ArrayList $r2;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DQuadBezierTo[] r5;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        int $i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r4;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r4 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName QUADBEZTO$8>;

        interfaceinvoke $r3.<org.apache.xmlbeans.impl.values.TypeStore: void find_all_element_users(javax.xml.namespace.QName,java.util.List)>($r4, $r2);

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        r5 = newarray (org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DQuadBezierTo)[$i0];

        interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r5);

        exitmonitor $r1;

     label2:
        return r5;

     label3:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DQuadBezierTo getQuadBezToArray(int)
    {
        java.lang.Throwable $r6;
        java.lang.IndexOutOfBoundsException $r5;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        int i0;
        java.lang.Object $r1;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DQuadBezierTo r7;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName QUADBEZTO$8>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, i0);

        r7 = (org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DQuadBezierTo) $r4;

        if r7 != null goto label2;

        $r5 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r5.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r5;

     label2:
        exitmonitor $r1;

     label3:
        return r7;

     label4:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public int sizeOfQuadBezToArray()
    {
        java.lang.Throwable $r4;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        int $i0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName QUADBEZTO$8>;

        $i0 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(javax.xml.namespace.QName)>($r3);

        exitmonitor $r1;

     label2:
        return $i0;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setQuadBezToArray(org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DQuadBezierTo[])
    {
        java.lang.Throwable $r4;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DQuadBezierTo[] r2;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        r2 := @parameter0: org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DQuadBezierTo[];

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName QUADBEZTO$8>;

        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void arraySetterHelper(org.apache.xmlbeans.XmlObject[],javax.xml.namespace.QName)>(r2, $r3);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setQuadBezToArray(int, org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DQuadBezierTo)
    {
        java.lang.Throwable $r7;
        java.lang.IndexOutOfBoundsException $r6;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        int i0;
        java.lang.Object $r1;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DQuadBezierTo r5, r8;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        i0 := @parameter0: int;

        r5 := @parameter1: org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DQuadBezierTo;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName QUADBEZTO$8>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, i0);

        r8 = (org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DQuadBezierTo) $r4;

        if r8 != null goto label2;

        $r6 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r6.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r6;

     label2:
        interfaceinvoke r8.<org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DQuadBezierTo: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r7;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DQuadBezierTo insertNewQuadBezTo(int)
    {
        java.lang.Throwable $r5;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        int i0;
        java.lang.Object $r1;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DQuadBezierTo r6;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName QUADBEZTO$8>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser insert_element_user(javax.xml.namespace.QName,int)>($r3, i0);

        r6 = (org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DQuadBezierTo) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DQuadBezierTo addNewQuadBezTo()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        java.lang.Object $r1;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DQuadBezierTo r6;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName QUADBEZTO$8>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>($r3);

        r6 = (org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DQuadBezierTo) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void removeQuadBezTo(int)
    {
        java.lang.Throwable $r4;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        int i0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName QUADBEZTO$8>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(javax.xml.namespace.QName,int)>($r3, i0);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.util.List getCubicBezToList()
    {
        java.lang.Throwable $r3;
        java.util.List $r5;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl$1CubicBezToList $r4;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        java.lang.Object $r1;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r4 = new org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl$1CubicBezToList;

        specialinvoke $r4.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl$1CubicBezToList: void <init>(org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl)>(r0);

        exitmonitor $r1;

     label2:
        $r5 = (java.util.List) $r4;

        return $r5;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DCubicBezierTo[] getCubicBezToArray()
    {
        java.lang.Throwable $r6;
        org.apache.xmlbeans.impl.values.TypeStore $r3;
        java.util.ArrayList $r2;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DCubicBezierTo[] r5;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        int $i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r4;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r4 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName CUBICBEZTO$10>;

        interfaceinvoke $r3.<org.apache.xmlbeans.impl.values.TypeStore: void find_all_element_users(javax.xml.namespace.QName,java.util.List)>($r4, $r2);

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        r5 = newarray (org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DCubicBezierTo)[$i0];

        interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r5);

        exitmonitor $r1;

     label2:
        return r5;

     label3:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DCubicBezierTo getCubicBezToArray(int)
    {
        java.lang.Throwable $r6;
        java.lang.IndexOutOfBoundsException $r5;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DCubicBezierTo r7;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        int i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName CUBICBEZTO$10>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, i0);

        r7 = (org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DCubicBezierTo) $r4;

        if r7 != null goto label2;

        $r5 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r5.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r5;

     label2:
        exitmonitor $r1;

     label3:
        return r7;

     label4:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public int sizeOfCubicBezToArray()
    {
        java.lang.Throwable $r4;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        int $i0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName CUBICBEZTO$10>;

        $i0 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(javax.xml.namespace.QName)>($r3);

        exitmonitor $r1;

     label2:
        return $i0;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setCubicBezToArray(org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DCubicBezierTo[])
    {
        java.lang.Throwable $r4;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DCubicBezierTo[] r2;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        r2 := @parameter0: org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DCubicBezierTo[];

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName CUBICBEZTO$10>;

        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void arraySetterHelper(org.apache.xmlbeans.XmlObject[],javax.xml.namespace.QName)>(r2, $r3);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setCubicBezToArray(int, org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DCubicBezierTo)
    {
        java.lang.Throwable $r7;
        java.lang.IndexOutOfBoundsException $r6;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DCubicBezierTo r5, r8;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        int i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        i0 := @parameter0: int;

        r5 := @parameter1: org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DCubicBezierTo;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName CUBICBEZTO$10>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, i0);

        r8 = (org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DCubicBezierTo) $r4;

        if r8 != null goto label2;

        $r6 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r6.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r6;

     label2:
        interfaceinvoke r8.<org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DCubicBezierTo: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r7;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DCubicBezierTo insertNewCubicBezTo(int)
    {
        java.lang.Throwable $r5;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DCubicBezierTo r6;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        int i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName CUBICBEZTO$10>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser insert_element_user(javax.xml.namespace.QName,int)>($r3, i0);

        r6 = (org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DCubicBezierTo) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DCubicBezierTo addNewCubicBezTo()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DCubicBezierTo r6;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName CUBICBEZTO$10>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>($r3);

        r6 = (org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DCubicBezierTo) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void removeCubicBezTo(int)
    {
        java.lang.Throwable $r4;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        int i0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName CUBICBEZTO$10>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(javax.xml.namespace.QName,int)>($r3, i0);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public long getW()
    {
        org.apache.xmlbeans.XmlAnySimpleType $r6;
        java.lang.Throwable $r7;
        long $l0;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r5;
        org.apache.xmlbeans.SimpleValue r8;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName W$12>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r8 = (org.apache.xmlbeans.SimpleValue) $r4;

        if r8 != null goto label2;

        $r5 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName W$12>;

        $r6 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.XmlAnySimpleType get_default_attribute_value(javax.xml.namespace.QName)>($r5);

        r8 = (org.apache.xmlbeans.SimpleValue) $r6;

     label2:
        if r8 != null goto label4;

        exitmonitor $r1;

     label3:
        return 0L;

     label4:
        $l0 = interfaceinvoke r8.<org.apache.xmlbeans.SimpleValue: long getLongValue()>();

        exitmonitor $r1;

     label5:
        return $l0;

     label6:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label7:
        throw $r7;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public org.openxmlformats.schemas.drawingml.x2006.main.STPositiveCoordinate xgetW()
    {
        org.apache.xmlbeans.XmlAnySimpleType $r6;
        java.lang.Throwable $r7;
        org.openxmlformats.schemas.drawingml.x2006.main.STPositiveCoordinate r8;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r5;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName W$12>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r8 = (org.openxmlformats.schemas.drawingml.x2006.main.STPositiveCoordinate) $r4;

        if r8 != null goto label2;

        $r5 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName W$12>;

        $r6 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.XmlAnySimpleType get_default_attribute_value(javax.xml.namespace.QName)>($r5);

        r8 = (org.openxmlformats.schemas.drawingml.x2006.main.STPositiveCoordinate) $r6;

     label2:
        exitmonitor $r1;

     label3:
        return r8;

     label4:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r7;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public boolean isSetW()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        boolean $z0;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName W$12>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        if $r4 == null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        exitmonitor $r1;

     label4:
        return $z0;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setW(long)
    {
        java.lang.Throwable $r8;
        long l0;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r5;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r7;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r6;
        org.apache.xmlbeans.SimpleValue r9;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        l0 := @parameter0: long;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName W$12>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r9 = (org.apache.xmlbeans.SimpleValue) $r4;

        if r9 != null goto label2;

        $r5 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r6 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName W$12>;

        $r7 = interfaceinvoke $r5.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_attribute_user(javax.xml.namespace.QName)>($r6);

        r9 = (org.apache.xmlbeans.SimpleValue) $r7;

     label2:
        interfaceinvoke r9.<org.apache.xmlbeans.SimpleValue: void setLongValue(long)>(l0);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r8 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r8;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void xsetW(org.openxmlformats.schemas.drawingml.x2006.main.STPositiveCoordinate)
    {
        java.lang.Throwable $r9;
        org.openxmlformats.schemas.drawingml.x2006.main.STPositiveCoordinate r5, r10;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r7;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        r5 := @parameter0: org.openxmlformats.schemas.drawingml.x2006.main.STPositiveCoordinate;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName W$12>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r10 = (org.openxmlformats.schemas.drawingml.x2006.main.STPositiveCoordinate) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName W$12>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_attribute_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.openxmlformats.schemas.drawingml.x2006.main.STPositiveCoordinate) $r8;

     label2:
        interfaceinvoke r10.<org.openxmlformats.schemas.drawingml.x2006.main.STPositiveCoordinate: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void unsetW()
    {
        java.lang.Throwable $r4;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName W$12>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_attribute(javax.xml.namespace.QName)>($r3);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public long getH()
    {
        org.apache.xmlbeans.XmlAnySimpleType $r6;
        java.lang.Throwable $r7;
        long $l0;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r5;
        org.apache.xmlbeans.SimpleValue r8;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName H$14>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r8 = (org.apache.xmlbeans.SimpleValue) $r4;

        if r8 != null goto label2;

        $r5 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName H$14>;

        $r6 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.XmlAnySimpleType get_default_attribute_value(javax.xml.namespace.QName)>($r5);

        r8 = (org.apache.xmlbeans.SimpleValue) $r6;

     label2:
        if r8 != null goto label4;

        exitmonitor $r1;

     label3:
        return 0L;

     label4:
        $l0 = interfaceinvoke r8.<org.apache.xmlbeans.SimpleValue: long getLongValue()>();

        exitmonitor $r1;

     label5:
        return $l0;

     label6:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label7:
        throw $r7;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public org.openxmlformats.schemas.drawingml.x2006.main.STPositiveCoordinate xgetH()
    {
        org.apache.xmlbeans.XmlAnySimpleType $r6;
        java.lang.Throwable $r7;
        org.openxmlformats.schemas.drawingml.x2006.main.STPositiveCoordinate r8;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r5;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName H$14>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r8 = (org.openxmlformats.schemas.drawingml.x2006.main.STPositiveCoordinate) $r4;

        if r8 != null goto label2;

        $r5 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName H$14>;

        $r6 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.XmlAnySimpleType get_default_attribute_value(javax.xml.namespace.QName)>($r5);

        r8 = (org.openxmlformats.schemas.drawingml.x2006.main.STPositiveCoordinate) $r6;

     label2:
        exitmonitor $r1;

     label3:
        return r8;

     label4:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r7;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public boolean isSetH()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        boolean $z0;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName H$14>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        if $r4 == null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        exitmonitor $r1;

     label4:
        return $z0;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setH(long)
    {
        java.lang.Throwable $r8;
        long l0;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r5;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r7;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r6;
        org.apache.xmlbeans.SimpleValue r9;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        l0 := @parameter0: long;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName H$14>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r9 = (org.apache.xmlbeans.SimpleValue) $r4;

        if r9 != null goto label2;

        $r5 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r6 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName H$14>;

        $r7 = interfaceinvoke $r5.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_attribute_user(javax.xml.namespace.QName)>($r6);

        r9 = (org.apache.xmlbeans.SimpleValue) $r7;

     label2:
        interfaceinvoke r9.<org.apache.xmlbeans.SimpleValue: void setLongValue(long)>(l0);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r8 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r8;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void xsetH(org.openxmlformats.schemas.drawingml.x2006.main.STPositiveCoordinate)
    {
        java.lang.Throwable $r9;
        org.openxmlformats.schemas.drawingml.x2006.main.STPositiveCoordinate r5, r10;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r7;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        r5 := @parameter0: org.openxmlformats.schemas.drawingml.x2006.main.STPositiveCoordinate;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName H$14>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r10 = (org.openxmlformats.schemas.drawingml.x2006.main.STPositiveCoordinate) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName H$14>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_attribute_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.openxmlformats.schemas.drawingml.x2006.main.STPositiveCoordinate) $r8;

     label2:
        interfaceinvoke r10.<org.openxmlformats.schemas.drawingml.x2006.main.STPositiveCoordinate: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void unsetH()
    {
        java.lang.Throwable $r4;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName H$14>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_attribute(javax.xml.namespace.QName)>($r3);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.openxmlformats.schemas.drawingml.x2006.main.STPathFillMode$Enum getFill()
    {
        org.apache.xmlbeans.XmlAnySimpleType $r8;
        java.lang.Throwable $r9;
        org.openxmlformats.schemas.drawingml.x2006.main.STPathFillMode$Enum $r6;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r7;
        org.apache.xmlbeans.StringEnumAbstractBase $r5;
        org.apache.xmlbeans.SimpleValue r10;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName FILL$16>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r10 = (org.apache.xmlbeans.SimpleValue) $r4;

        if r10 != null goto label2;

        $r7 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName FILL$16>;

        $r8 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.XmlAnySimpleType get_default_attribute_value(javax.xml.namespace.QName)>($r7);

        r10 = (org.apache.xmlbeans.SimpleValue) $r8;

     label2:
        if r10 != null goto label4;

        exitmonitor $r1;

     label3:
        return null;

     label4:
        $r5 = interfaceinvoke r10.<org.apache.xmlbeans.SimpleValue: org.apache.xmlbeans.StringEnumAbstractBase getEnumValue()>();

        $r6 = (org.openxmlformats.schemas.drawingml.x2006.main.STPathFillMode$Enum) $r5;

        exitmonitor $r1;

     label5:
        return $r6;

     label6:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label7:
        throw $r9;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public org.openxmlformats.schemas.drawingml.x2006.main.STPathFillMode xgetFill()
    {
        org.apache.xmlbeans.XmlAnySimpleType $r6;
        java.lang.Throwable $r7;
        org.openxmlformats.schemas.drawingml.x2006.main.STPathFillMode r8;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r5;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName FILL$16>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r8 = (org.openxmlformats.schemas.drawingml.x2006.main.STPathFillMode) $r4;

        if r8 != null goto label2;

        $r5 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName FILL$16>;

        $r6 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.XmlAnySimpleType get_default_attribute_value(javax.xml.namespace.QName)>($r5);

        r8 = (org.openxmlformats.schemas.drawingml.x2006.main.STPathFillMode) $r6;

     label2:
        exitmonitor $r1;

     label3:
        return r8;

     label4:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r7;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public boolean isSetFill()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        boolean $z0;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName FILL$16>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        if $r4 == null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        exitmonitor $r1;

     label4:
        return $z0;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setFill(org.openxmlformats.schemas.drawingml.x2006.main.STPathFillMode$Enum)
    {
        java.lang.Throwable $r9;
        org.openxmlformats.schemas.drawingml.x2006.main.STPathFillMode$Enum r5;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r7;
        org.apache.xmlbeans.SimpleValue r10;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        r5 := @parameter0: org.openxmlformats.schemas.drawingml.x2006.main.STPathFillMode$Enum;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName FILL$16>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r10 = (org.apache.xmlbeans.SimpleValue) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName FILL$16>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_attribute_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.apache.xmlbeans.SimpleValue) $r8;

     label2:
        interfaceinvoke r10.<org.apache.xmlbeans.SimpleValue: void setEnumValue(org.apache.xmlbeans.StringEnumAbstractBase)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void xsetFill(org.openxmlformats.schemas.drawingml.x2006.main.STPathFillMode)
    {
        java.lang.Throwable $r9;
        org.openxmlformats.schemas.drawingml.x2006.main.STPathFillMode r5, r10;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r7;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        r5 := @parameter0: org.openxmlformats.schemas.drawingml.x2006.main.STPathFillMode;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName FILL$16>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r10 = (org.openxmlformats.schemas.drawingml.x2006.main.STPathFillMode) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName FILL$16>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_attribute_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.openxmlformats.schemas.drawingml.x2006.main.STPathFillMode) $r8;

     label2:
        interfaceinvoke r10.<org.openxmlformats.schemas.drawingml.x2006.main.STPathFillMode: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void unsetFill()
    {
        java.lang.Throwable $r4;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName FILL$16>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_attribute(javax.xml.namespace.QName)>($r3);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean getStroke()
    {
        org.apache.xmlbeans.XmlAnySimpleType $r6;
        java.lang.Throwable $r7;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r5;
        org.apache.xmlbeans.SimpleValue r8;
        boolean $z0;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName STROKE$18>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r8 = (org.apache.xmlbeans.SimpleValue) $r4;

        if r8 != null goto label2;

        $r5 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName STROKE$18>;

        $r6 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.XmlAnySimpleType get_default_attribute_value(javax.xml.namespace.QName)>($r5);

        r8 = (org.apache.xmlbeans.SimpleValue) $r6;

     label2:
        if r8 != null goto label4;

        exitmonitor $r1;

     label3:
        return 0;

     label4:
        $z0 = interfaceinvoke r8.<org.apache.xmlbeans.SimpleValue: boolean getBooleanValue()>();

        exitmonitor $r1;

     label5:
        return $z0;

     label6:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label7:
        throw $r7;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public org.apache.xmlbeans.XmlBoolean xgetStroke()
    {
        org.apache.xmlbeans.XmlAnySimpleType $r6;
        java.lang.Throwable $r7;
        org.apache.xmlbeans.XmlBoolean r8;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r5;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName STROKE$18>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r8 = (org.apache.xmlbeans.XmlBoolean) $r4;

        if r8 != null goto label2;

        $r5 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName STROKE$18>;

        $r6 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.XmlAnySimpleType get_default_attribute_value(javax.xml.namespace.QName)>($r5);

        r8 = (org.apache.xmlbeans.XmlBoolean) $r6;

     label2:
        exitmonitor $r1;

     label3:
        return r8;

     label4:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r7;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public boolean isSetStroke()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        boolean $z0;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName STROKE$18>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        if $r4 == null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        exitmonitor $r1;

     label4:
        return $z0;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setStroke(boolean)
    {
        java.lang.Throwable $r8;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r5;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r7;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r6;
        org.apache.xmlbeans.SimpleValue r9;
        boolean z0;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName STROKE$18>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r9 = (org.apache.xmlbeans.SimpleValue) $r4;

        if r9 != null goto label2;

        $r5 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r6 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName STROKE$18>;

        $r7 = interfaceinvoke $r5.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_attribute_user(javax.xml.namespace.QName)>($r6);

        r9 = (org.apache.xmlbeans.SimpleValue) $r7;

     label2:
        interfaceinvoke r9.<org.apache.xmlbeans.SimpleValue: void setBooleanValue(boolean)>(z0);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r8 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r8;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void xsetStroke(org.apache.xmlbeans.XmlBoolean)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.XmlBoolean r5, r10;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r7;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        r5 := @parameter0: org.apache.xmlbeans.XmlBoolean;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName STROKE$18>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r10 = (org.apache.xmlbeans.XmlBoolean) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName STROKE$18>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_attribute_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.apache.xmlbeans.XmlBoolean) $r8;

     label2:
        interfaceinvoke r10.<org.apache.xmlbeans.XmlBoolean: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void unsetStroke()
    {
        java.lang.Throwable $r4;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName STROKE$18>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_attribute(javax.xml.namespace.QName)>($r3);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean getExtrusionOk()
    {
        org.apache.xmlbeans.XmlAnySimpleType $r6;
        java.lang.Throwable $r7;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r5;
        org.apache.xmlbeans.SimpleValue r8;
        boolean $z0;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName EXTRUSIONOK$20>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r8 = (org.apache.xmlbeans.SimpleValue) $r4;

        if r8 != null goto label2;

        $r5 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName EXTRUSIONOK$20>;

        $r6 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.XmlAnySimpleType get_default_attribute_value(javax.xml.namespace.QName)>($r5);

        r8 = (org.apache.xmlbeans.SimpleValue) $r6;

     label2:
        if r8 != null goto label4;

        exitmonitor $r1;

     label3:
        return 0;

     label4:
        $z0 = interfaceinvoke r8.<org.apache.xmlbeans.SimpleValue: boolean getBooleanValue()>();

        exitmonitor $r1;

     label5:
        return $z0;

     label6:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label7:
        throw $r7;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public org.apache.xmlbeans.XmlBoolean xgetExtrusionOk()
    {
        org.apache.xmlbeans.XmlAnySimpleType $r6;
        java.lang.Throwable $r7;
        org.apache.xmlbeans.XmlBoolean r8;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r5;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName EXTRUSIONOK$20>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r8 = (org.apache.xmlbeans.XmlBoolean) $r4;

        if r8 != null goto label2;

        $r5 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName EXTRUSIONOK$20>;

        $r6 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.XmlAnySimpleType get_default_attribute_value(javax.xml.namespace.QName)>($r5);

        r8 = (org.apache.xmlbeans.XmlBoolean) $r6;

     label2:
        exitmonitor $r1;

     label3:
        return r8;

     label4:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r7;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public boolean isSetExtrusionOk()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        boolean $z0;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName EXTRUSIONOK$20>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        if $r4 == null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        exitmonitor $r1;

     label4:
        return $z0;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setExtrusionOk(boolean)
    {
        java.lang.Throwable $r8;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r5;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r7;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r6;
        org.apache.xmlbeans.SimpleValue r9;
        boolean z0;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName EXTRUSIONOK$20>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r9 = (org.apache.xmlbeans.SimpleValue) $r4;

        if r9 != null goto label2;

        $r5 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r6 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName EXTRUSIONOK$20>;

        $r7 = interfaceinvoke $r5.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_attribute_user(javax.xml.namespace.QName)>($r6);

        r9 = (org.apache.xmlbeans.SimpleValue) $r7;

     label2:
        interfaceinvoke r9.<org.apache.xmlbeans.SimpleValue: void setBooleanValue(boolean)>(z0);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r8 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r8;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void xsetExtrusionOk(org.apache.xmlbeans.XmlBoolean)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.XmlBoolean r5, r10;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r7;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        r5 := @parameter0: org.apache.xmlbeans.XmlBoolean;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName EXTRUSIONOK$20>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r10 = (org.apache.xmlbeans.XmlBoolean) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName EXTRUSIONOK$20>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_attribute_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.apache.xmlbeans.XmlBoolean) $r8;

     label2:
        interfaceinvoke r10.<org.apache.xmlbeans.XmlBoolean: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void unsetExtrusionOk()
    {
        java.lang.Throwable $r4;
        org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName EXTRUSIONOK$20>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_attribute(javax.xml.namespace.QName)>($r3);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    static void <clinit>()
    {
        javax.xml.namespace.QName $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        $r0 = new javax.xml.namespace.QName;

        specialinvoke $r0.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("http://schemas.openxmlformats.org/drawingml/2006/main", "close");

        <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName CLOSE$0> = $r0;

        $r1 = new javax.xml.namespace.QName;

        specialinvoke $r1.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("http://schemas.openxmlformats.org/drawingml/2006/main", "moveTo");

        <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName MOVETO$2> = $r1;

        $r2 = new javax.xml.namespace.QName;

        specialinvoke $r2.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("http://schemas.openxmlformats.org/drawingml/2006/main", "lnTo");

        <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName LNTO$4> = $r2;

        $r3 = new javax.xml.namespace.QName;

        specialinvoke $r3.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("http://schemas.openxmlformats.org/drawingml/2006/main", "arcTo");

        <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName ARCTO$6> = $r3;

        $r4 = new javax.xml.namespace.QName;

        specialinvoke $r4.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("http://schemas.openxmlformats.org/drawingml/2006/main", "quadBezTo");

        <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName QUADBEZTO$8> = $r4;

        $r5 = new javax.xml.namespace.QName;

        specialinvoke $r5.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("http://schemas.openxmlformats.org/drawingml/2006/main", "cubicBezTo");

        <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName CUBICBEZTO$10> = $r5;

        $r6 = new javax.xml.namespace.QName;

        specialinvoke $r6.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("", "w");

        <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName W$12> = $r6;

        $r7 = new javax.xml.namespace.QName;

        specialinvoke $r7.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("", "h");

        <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName H$14> = $r7;

        $r8 = new javax.xml.namespace.QName;

        specialinvoke $r8.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("", "fill");

        <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName FILL$16> = $r8;

        $r9 = new javax.xml.namespace.QName;

        specialinvoke $r9.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("", "stroke");

        <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName STROKE$18> = $r9;

        $r10 = new javax.xml.namespace.QName;

        specialinvoke $r10.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("", "extrusionOk");

        <org.openxmlformats.schemas.drawingml.x2006.main.impl.CTPath2DImpl: javax.xml.namespace.QName EXTRUSIONOK$20> = $r10;

        return;
    }
}
