public class com.hp.hpl.jena.rdf.arp.states.WantTypedLiteral extends com.hp.hpl.jena.rdf.arp.states.AbsWantLiteralValueOrDescription implements com.hp.hpl.jena.rdf.arp.states.FrameI
{
    final com.hp.hpl.jena.rdf.arp.impl.URIReference dtURI;

    public void <init>(com.hp.hpl.jena.rdf.arp.states.WantsObjectFrameI, java.lang.String, com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext) throws org.xml.sax.SAXParseException
    {
        com.hp.hpl.jena.rdf.arp.states.WantTypedLiteral r0;
        com.hp.hpl.jena.rdf.arp.impl.URIReference $r5;
        com.hp.hpl.jena.rdf.arp.states.WantsObjectFrameI r1;
        java.lang.String r3;
        com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext r2, $r4;

        r0 := @this: com.hp.hpl.jena.rdf.arp.states.WantTypedLiteral;

        r1 := @parameter0: com.hp.hpl.jena.rdf.arp.states.WantsObjectFrameI;

        r3 := @parameter1: java.lang.String;

        r2 := @parameter2: com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext;

        specialinvoke r0.<com.hp.hpl.jena.rdf.arp.states.AbsWantLiteralValueOrDescription: void <init>(com.hp.hpl.jena.rdf.arp.states.FrameI,com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext)>(r1, r2);

        $r4 = r0.<com.hp.hpl.jena.rdf.arp.states.WantTypedLiteral: com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext xml>;

        $r5 = staticinvoke <com.hp.hpl.jena.rdf.arp.impl.URIReference: com.hp.hpl.jena.rdf.arp.impl.URIReference resolve(com.hp.hpl.jena.rdf.arp.states.Frame,com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext,java.lang.String)>(r0, $r4, r3);

        r0.<com.hp.hpl.jena.rdf.arp.states.WantTypedLiteral: com.hp.hpl.jena.rdf.arp.impl.URIReference dtURI> = $r5;

        return;
    }

    public com.hp.hpl.jena.rdf.arp.states.FrameI startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes) throws org.xml.sax.SAXParseException
    {
        com.hp.hpl.jena.rdf.arp.states.WantTypedLiteral r0;
        com.hp.hpl.jena.rdf.arp.states.FrameI $r10;
        org.xml.sax.Attributes r9;
        java.lang.StringBuilder $r1, $r2, $r4, $r5;
        java.lang.String r3, $r6, r7, r8;

        r0 := @this: com.hp.hpl.jena.rdf.arp.states.WantTypedLiteral;

        r7 := @parameter0: java.lang.String;

        r8 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r9 := @parameter3: org.xml.sax.Attributes;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot have XML element content <");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">as part of typed literal");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.hp.hpl.jena.rdf.arp.states.WantTypedLiteral: void warning(int,java.lang.String)>(201, $r6);

        $r10 = specialinvoke r0.<com.hp.hpl.jena.rdf.arp.states.AbsWantLiteralValueOrDescription: com.hp.hpl.jena.rdf.arp.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>(r7, r8, r3, r9);

        return $r10;
    }

    public void endElement() throws org.xml.sax.SAXParseException
    {
        com.hp.hpl.jena.rdf.arp.impl.Taint $r5;
        com.hp.hpl.jena.rdf.arp.states.WantsObjectFrameI $r7;
        com.hp.hpl.jena.rdf.arp.impl.ARPDatatypeLiteral $r0;
        com.hp.hpl.jena.rdf.arp.states.WantTypedLiteral r1;
        com.hp.hpl.jena.rdf.arp.impl.URIReference $r4;
        com.hp.hpl.jena.rdf.arp.states.FrameI $r6;
        java.lang.StringBuffer $r2;
        java.lang.String $r3;
        boolean $z0;

        r1 := @this: com.hp.hpl.jena.rdf.arp.states.WantTypedLiteral;

        $r0 = new com.hp.hpl.jena.rdf.arp.impl.ARPDatatypeLiteral;

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.rdf.arp.states.WantTypedLiteral: java.lang.StringBuffer getBuf()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $r4 = r1.<com.hp.hpl.jena.rdf.arp.states.WantTypedLiteral: com.hp.hpl.jena.rdf.arp.impl.URIReference dtURI>;

        specialinvoke $r0.<com.hp.hpl.jena.rdf.arp.impl.ARPDatatypeLiteral: void <init>(com.hp.hpl.jena.rdf.arp.states.Frame,java.lang.String,com.hp.hpl.jena.rdf.arp.impl.URIReference)>(r1, $r3, $r4);

        $r5 = r1.<com.hp.hpl.jena.rdf.arp.states.WantTypedLiteral: com.hp.hpl.jena.rdf.arp.impl.Taint taint>;

        $z0 = interfaceinvoke $r5.<com.hp.hpl.jena.rdf.arp.impl.Taint: boolean isTainted()>();

        if $z0 == 0 goto label1;

        virtualinvoke $r0.<com.hp.hpl.jena.rdf.arp.impl.ARPDatatypeLiteral: void taint()>();

     label1:
        $r6 = virtualinvoke r1.<com.hp.hpl.jena.rdf.arp.states.WantTypedLiteral: com.hp.hpl.jena.rdf.arp.states.FrameI getParent()>();

        $r7 = (com.hp.hpl.jena.rdf.arp.states.WantsObjectFrameI) $r6;

        interfaceinvoke $r7.<com.hp.hpl.jena.rdf.arp.states.WantsObjectFrameI: void theObject(com.hp.hpl.jena.rdf.arp.impl.ANode)>($r0);

        specialinvoke r1.<com.hp.hpl.jena.rdf.arp.states.AbsWantLiteralValueOrDescription: void endElement()>();

        return;
    }

    public void afterChild()
    {
        com.hp.hpl.jena.rdf.arp.states.WantTypedLiteral r0;

        r0 := @this: com.hp.hpl.jena.rdf.arp.states.WantTypedLiteral;

        return;
    }

    public volatile void processingInstruction(java.lang.String, java.lang.String) throws org.xml.sax.SAXParseException
    {
        com.hp.hpl.jena.rdf.arp.states.WantTypedLiteral r0;
        java.lang.String r1, r2;

        r0 := @this: com.hp.hpl.jena.rdf.arp.states.WantTypedLiteral;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<com.hp.hpl.jena.rdf.arp.states.AbsWantLiteralValueOrDescription: void processingInstruction(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    public volatile void comment(char[], int, int)
    {
        com.hp.hpl.jena.rdf.arp.states.WantTypedLiteral r0;
        int i0, i1;
        char[] r1;

        r0 := @this: com.hp.hpl.jena.rdf.arp.states.WantTypedLiteral;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<com.hp.hpl.jena.rdf.arp.states.AbsWantLiteralValueOrDescription: void comment(char[],int,int)>(r1, i0, i1);

        return;
    }

    public volatile void characters(char[], int, int) throws org.xml.sax.SAXParseException
    {
        com.hp.hpl.jena.rdf.arp.states.WantTypedLiteral r0;
        int i0, i1;
        char[] r1;

        r0 := @this: com.hp.hpl.jena.rdf.arp.states.WantTypedLiteral;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<com.hp.hpl.jena.rdf.arp.states.AbsWantLiteralValueOrDescription: void characters(char[],int,int)>(r1, i0, i1);

        return;
    }
}
