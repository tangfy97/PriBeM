public class org.springframework.context.access.ContextJndiBeanFactoryLocator extends org.springframework.jndi.JndiLocatorSupport implements org.springframework.beans.factory.access.BeanFactoryLocator
{
    public static final java.lang.String BEAN_FACTORY_PATH_DELIMITERS;

    public void <init>()
    {
        org.springframework.context.access.ContextJndiBeanFactoryLocator r0;

        r0 := @this: org.springframework.context.access.ContextJndiBeanFactoryLocator;

        specialinvoke r0.<org.springframework.jndi.JndiLocatorSupport: void <init>()>();

        return;
    }

    public org.springframework.beans.factory.access.BeanFactoryReference useBeanFactory(java.lang.String) throws org.springframework.beans.BeansException
    {
        java.lang.String[] $r4;
        javax.naming.NamingException $r12;
        org.springframework.context.access.ContextJndiBeanFactoryLocator r0;
        java.lang.String r1, $r11, $r18, r19;
        boolean $z0;
        org.springframework.beans.factory.access.BootstrapException $r13;
        org.springframework.beans.factory.access.BeanFactoryReference $r5;
        java.lang.Object $r2;
        org.apache.commons.logging.Log $r3, $r7;
        java.lang.StringBuilder $r6, $r8, $r9, $r10, $r14, $r15, $r16, $r17;

        r0 := @this: org.springframework.context.access.ContextJndiBeanFactoryLocator;

        r1 := @parameter0: java.lang.String;

     label1:
        $r2 = virtualinvoke r0.<org.springframework.context.access.ContextJndiBeanFactoryLocator: java.lang.Object lookup(java.lang.String,java.lang.Class)>(r1, class "Ljava/lang/String;");

        r19 = (java.lang.String) $r2;

        $r3 = r0.<org.springframework.context.access.ContextJndiBeanFactoryLocator: org.apache.commons.logging.Log logger>;

        $z0 = interfaceinvoke $r3.<org.apache.commons.logging.Log: boolean isTraceEnabled()>();

        if $z0 == 0 goto label2;

        $r7 = r0.<org.springframework.context.access.ContextJndiBeanFactoryLocator: org.apache.commons.logging.Log logger>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("Bean factory path from JNDI environment variable [");

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] is: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r7.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r11);

     label2:
        $r4 = staticinvoke <org.springframework.util.StringUtils: java.lang.String[] tokenizeToStringArray(java.lang.String,java.lang.String)>(r19, ",; \t\n");

        $r5 = virtualinvoke r0.<org.springframework.context.access.ContextJndiBeanFactoryLocator: org.springframework.beans.factory.access.BeanFactoryReference createBeanFactory(java.lang.String[])>($r4);

     label3:
        return $r5;

     label4:
        $r12 := @caughtexception;

        $r13 = new org.springframework.beans.factory.access.BootstrapException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>("Define an environment variable [");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] containing ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("the class path locations of XML bean definition files");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<org.springframework.beans.factory.access.BootstrapException: void <init>(java.lang.String,java.lang.Throwable)>($r18, $r12);

        throw $r13;

        catch javax.naming.NamingException from label1 to label3 with label4;
    }

    protected org.springframework.beans.factory.access.BeanFactoryReference createBeanFactory(java.lang.String[]) throws org.springframework.beans.BeansException
    {
        org.springframework.context.access.ContextBeanFactoryReference $r3;
        org.springframework.context.access.ContextJndiBeanFactoryLocator r0;
        java.lang.String[] r1;
        org.springframework.context.ApplicationContext $r2;

        r0 := @this: org.springframework.context.access.ContextJndiBeanFactoryLocator;

        r1 := @parameter0: java.lang.String[];

        $r2 = virtualinvoke r0.<org.springframework.context.access.ContextJndiBeanFactoryLocator: org.springframework.context.ApplicationContext createApplicationContext(java.lang.String[])>(r1);

        $r3 = new org.springframework.context.access.ContextBeanFactoryReference;

        specialinvoke $r3.<org.springframework.context.access.ContextBeanFactoryReference: void <init>(org.springframework.context.ApplicationContext)>($r2);

        return $r3;
    }

    protected org.springframework.context.ApplicationContext createApplicationContext(java.lang.String[]) throws org.springframework.beans.BeansException
    {
        org.springframework.context.support.ClassPathXmlApplicationContext $r0;
        java.lang.String[] r1;
        org.springframework.context.access.ContextJndiBeanFactoryLocator r2;

        r2 := @this: org.springframework.context.access.ContextJndiBeanFactoryLocator;

        r1 := @parameter0: java.lang.String[];

        $r0 = new org.springframework.context.support.ClassPathXmlApplicationContext;

        specialinvoke $r0.<org.springframework.context.support.ClassPathXmlApplicationContext: void <init>(java.lang.String[])>(r1);

        return $r0;
    }

    public static void <clinit>()
    {
        <org.springframework.context.access.ContextJndiBeanFactoryLocator: java.lang.String BEAN_FACTORY_PATH_DELIMITERS> = ",; \t\n";

        return;
    }
}
