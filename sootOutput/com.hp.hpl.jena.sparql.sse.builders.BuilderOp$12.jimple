class com.hp.hpl.jena.sparql.sse.builders.BuilderOp$12 extends java.lang.Object implements com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build
{
    final com.hp.hpl.jena.sparql.sse.builders.BuilderOp this$0;

    void <init>(com.hp.hpl.jena.sparql.sse.builders.BuilderOp)
    {
        com.hp.hpl.jena.sparql.sse.builders.BuilderOp$12 r0;
        com.hp.hpl.jena.sparql.sse.builders.BuilderOp r1;

        r0 := @this: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$12;

        r1 := @parameter0: com.hp.hpl.jena.sparql.sse.builders.BuilderOp;

        r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp$12: com.hp.hpl.jena.sparql.sse.builders.BuilderOp this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.hp.hpl.jena.sparql.algebra.Op make(com.hp.hpl.jena.sparql.sse.ItemList)
    {
        com.hp.hpl.jena.sparql.sse.builders.BuilderOp $r2, $r4;
        com.hp.hpl.jena.sparql.sse.ItemList r0, $r7;
        com.hp.hpl.jena.sparql.sse.Item $r6;
        com.hp.hpl.jena.sparql.expr.ExprList r8;
        com.hp.hpl.jena.sparql.sse.builders.BuilderOp$12 r1;
        int $i0;
        com.hp.hpl.jena.sparql.algebra.Op $r3, $r5, $r9;
        boolean $z0, $z1;

        r1 := @this: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$12;

        r0 := @parameter0: com.hp.hpl.jena.sparql.sse.ItemList;

        staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderLib: void checkLength(int,int,com.hp.hpl.jena.sparql.sse.ItemList,java.lang.String)>(3, 4, r0, "leftjoin: wanted 2 or 3 arguments");

        $r2 = r1.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp$12: com.hp.hpl.jena.sparql.sse.builders.BuilderOp this$0>;

        $r3 = virtualinvoke $r2.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.algebra.Op build(com.hp.hpl.jena.sparql.sse.ItemList,int)>(r0, 1);

        $r4 = r1.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp$12: com.hp.hpl.jena.sparql.sse.builders.BuilderOp this$0>;

        $r5 = virtualinvoke $r4.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.algebra.Op build(com.hp.hpl.jena.sparql.sse.ItemList,int)>(r0, 2);

        r8 = null;

        $i0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.ItemList: int size()>();

        if $i0 != 4 goto label2;

        $r6 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.ItemList: com.hp.hpl.jena.sparql.sse.Item get(int)>(3);

        $z0 = virtualinvoke $r6.<com.hp.hpl.jena.sparql.sse.Item: boolean isList()>();

        if $z0 == 0 goto label1;

        $r7 = virtualinvoke $r6.<com.hp.hpl.jena.sparql.sse.Item: com.hp.hpl.jena.sparql.sse.ItemList getList()>();

        $z1 = virtualinvoke $r7.<com.hp.hpl.jena.sparql.sse.ItemList: boolean isEmpty()>();

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        r8 = staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderExpr: com.hp.hpl.jena.sparql.expr.ExprList buildExprOrExprList(com.hp.hpl.jena.sparql.sse.Item)>($r6);

     label2:
        $r9 = staticinvoke <com.hp.hpl.jena.sparql.algebra.op.OpLeftJoin: com.hp.hpl.jena.sparql.algebra.Op create(com.hp.hpl.jena.sparql.algebra.Op,com.hp.hpl.jena.sparql.algebra.Op,com.hp.hpl.jena.sparql.expr.ExprList)>($r3, $r5, r8);

        return $r9;
    }
}
