public class org.apache.commons.io.input.BOMInputStream extends org.apache.commons.io.input.ProxyInputStream
{
    private final boolean include;
    private final java.util.List boms;
    private org.apache.commons.io.ByteOrderMark byteOrderMark;
    private int[] firstBytes;
    private int fbLength;
    private int fbIndex;
    private int markFbIndex;
    private boolean markedAtStart;

    public void <init>(java.io.InputStream)
    {
        org.apache.commons.io.ByteOrderMark[] $r2;
        org.apache.commons.io.input.BOMInputStream r0;
        org.apache.commons.io.ByteOrderMark $r3;
        java.io.InputStream r1;

        r0 := @this: org.apache.commons.io.input.BOMInputStream;

        r1 := @parameter0: java.io.InputStream;

        $r2 = newarray (org.apache.commons.io.ByteOrderMark)[1];

        $r3 = <org.apache.commons.io.ByteOrderMark: org.apache.commons.io.ByteOrderMark UTF_8>;

        $r2[0] = $r3;

        specialinvoke r0.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>(r1, 0, $r2);

        return;
    }

    public void <init>(java.io.InputStream, boolean)
    {
        org.apache.commons.io.ByteOrderMark[] $r2;
        org.apache.commons.io.input.BOMInputStream r0;
        org.apache.commons.io.ByteOrderMark $r3;
        java.io.InputStream r1;
        boolean z0;

        r0 := @this: org.apache.commons.io.input.BOMInputStream;

        r1 := @parameter0: java.io.InputStream;

        z0 := @parameter1: boolean;

        $r2 = newarray (org.apache.commons.io.ByteOrderMark)[1];

        $r3 = <org.apache.commons.io.ByteOrderMark: org.apache.commons.io.ByteOrderMark UTF_8>;

        $r2[0] = $r3;

        specialinvoke r0.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>(r1, z0, $r2);

        return;
    }

    public transient void <init>(java.io.InputStream, org.apache.commons.io.ByteOrderMark[])
    {
        org.apache.commons.io.input.BOMInputStream r0;
        org.apache.commons.io.ByteOrderMark[] r2;
        java.io.InputStream r1;

        r0 := @this: org.apache.commons.io.input.BOMInputStream;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: org.apache.commons.io.ByteOrderMark[];

        specialinvoke r0.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>(r1, 0, r2);

        return;
    }

    public transient void <init>(java.io.InputStream, boolean, org.apache.commons.io.ByteOrderMark[])
    {
        java.util.List $r4;
        org.apache.commons.io.ByteOrderMark[] r2;
        int $i0;
        org.apache.commons.io.input.BOMInputStream r0;
        java.lang.IllegalArgumentException $r3;
        java.io.InputStream r1;
        boolean z0;

        r0 := @this: org.apache.commons.io.input.BOMInputStream;

        r1 := @parameter0: java.io.InputStream;

        z0 := @parameter1: boolean;

        r2 := @parameter2: org.apache.commons.io.ByteOrderMark[];

        specialinvoke r0.<org.apache.commons.io.input.ProxyInputStream: void <init>(java.io.InputStream)>(r1);

        if r2 == null goto label1;

        $i0 = lengthof r2;

        if $i0 != 0 goto label2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("No BOMs specified");

        throw $r3;

     label2:
        r0.<org.apache.commons.io.input.BOMInputStream: boolean include> = z0;

        $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r2);

        r0.<org.apache.commons.io.input.BOMInputStream: java.util.List boms> = $r4;

        return;
    }

    public boolean hasBOM() throws java.io.IOException
    {
        org.apache.commons.io.input.BOMInputStream r0;
        org.apache.commons.io.ByteOrderMark $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.io.input.BOMInputStream;

        $r1 = virtualinvoke r0.<org.apache.commons.io.input.BOMInputStream: org.apache.commons.io.ByteOrderMark getBOM()>();

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean hasBOM(org.apache.commons.io.ByteOrderMark) throws java.io.IOException
    {
        org.apache.commons.io.ByteOrderMark r1, $r3, $r4;
        java.lang.IllegalArgumentException $r5;
        java.util.List $r2;
        org.apache.commons.io.input.BOMInputStream r0;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String $r9;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.commons.io.input.BOMInputStream;

        r1 := @parameter0: org.apache.commons.io.ByteOrderMark;

        $r2 = r0.<org.apache.commons.io.input.BOMInputStream: java.util.List boms>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Stream not configure to detect ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label1:
        $r3 = r0.<org.apache.commons.io.input.BOMInputStream: org.apache.commons.io.ByteOrderMark byteOrderMark>;

        if $r3 == null goto label2;

        $r4 = virtualinvoke r0.<org.apache.commons.io.input.BOMInputStream: org.apache.commons.io.ByteOrderMark getBOM()>();

        $z1 = virtualinvoke $r4.<org.apache.commons.io.ByteOrderMark: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public org.apache.commons.io.ByteOrderMark getBOM() throws java.io.IOException
    {
        int[] $r1, $r4, $r5, $r7, $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7;
        org.apache.commons.io.input.BOMInputStream r0;
        boolean $z0, $z1;
        java.util.Iterator $r3;
        org.apache.commons.io.ByteOrderMark $r9, $r10, r12, $r13;
        java.util.List $r2;
        java.lang.Object $r11;
        java.io.InputStream $r6;

        r0 := @this: org.apache.commons.io.input.BOMInputStream;

        $r1 = r0.<org.apache.commons.io.input.BOMInputStream: int[] firstBytes>;

        if $r1 != null goto label6;

        i6 = 0;

        $r2 = r0.<org.apache.commons.io.input.BOMInputStream: java.util.List boms>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r11 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r12 = (org.apache.commons.io.ByteOrderMark) $r11;

        $i5 = virtualinvoke r12.<org.apache.commons.io.ByteOrderMark: int length()>();

        i6 = staticinvoke <java.lang.Math: int max(int,int)>(i6, $i5);

        goto label1;

     label2:
        $r4 = newarray (int)[i6];

        r0.<org.apache.commons.io.input.BOMInputStream: int[] firstBytes> = $r4;

        i7 = 0;

     label3:
        $r5 = r0.<org.apache.commons.io.input.BOMInputStream: int[] firstBytes>;

        $i0 = lengthof $r5;

        if i7 >= $i0 goto label6;

        $r7 = r0.<org.apache.commons.io.input.BOMInputStream: int[] firstBytes>;

        $r6 = r0.<org.apache.commons.io.input.BOMInputStream: java.io.InputStream in>;

        $i1 = virtualinvoke $r6.<java.io.InputStream: int read()>();

        $r7[i7] = $i1;

        $i2 = r0.<org.apache.commons.io.input.BOMInputStream: int fbLength>;

        $i3 = $i2 + 1;

        r0.<org.apache.commons.io.input.BOMInputStream: int fbLength> = $i3;

        $r8 = r0.<org.apache.commons.io.input.BOMInputStream: int[] firstBytes>;

        $i4 = $r8[i7];

        if $i4 >= 0 goto label4;

        goto label6;

     label4:
        $r9 = specialinvoke r0.<org.apache.commons.io.input.BOMInputStream: org.apache.commons.io.ByteOrderMark find()>();

        r0.<org.apache.commons.io.input.BOMInputStream: org.apache.commons.io.ByteOrderMark byteOrderMark> = $r9;

        $r10 = r0.<org.apache.commons.io.input.BOMInputStream: org.apache.commons.io.ByteOrderMark byteOrderMark>;

        if $r10 == null goto label5;

        $z1 = r0.<org.apache.commons.io.input.BOMInputStream: boolean include>;

        if $z1 != 0 goto label6;

        r0.<org.apache.commons.io.input.BOMInputStream: int fbLength> = 0;

        goto label6;

     label5:
        i7 = i7 + 1;

        goto label3;

     label6:
        $r13 = r0.<org.apache.commons.io.input.BOMInputStream: org.apache.commons.io.ByteOrderMark byteOrderMark>;

        return $r13;
    }

    public java.lang.String getBOMCharsetName() throws java.io.IOException
    {
        org.apache.commons.io.input.BOMInputStream r0;
        org.apache.commons.io.ByteOrderMark $r1, $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.commons.io.input.BOMInputStream;

        virtualinvoke r0.<org.apache.commons.io.input.BOMInputStream: org.apache.commons.io.ByteOrderMark getBOM()>();

        $r1 = r0.<org.apache.commons.io.input.BOMInputStream: org.apache.commons.io.ByteOrderMark byteOrderMark>;

        if $r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r2 = r0.<org.apache.commons.io.input.BOMInputStream: org.apache.commons.io.ByteOrderMark byteOrderMark>;

        $r3 = virtualinvoke $r2.<org.apache.commons.io.ByteOrderMark: java.lang.String getCharsetName()>();

     label2:
        return $r3;
    }

    private int readFirstBytes() throws java.io.IOException
    {
        int[] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i6;
        org.apache.commons.io.input.BOMInputStream r0;

        r0 := @this: org.apache.commons.io.input.BOMInputStream;

        virtualinvoke r0.<org.apache.commons.io.input.BOMInputStream: org.apache.commons.io.ByteOrderMark getBOM()>();

        $i1 = r0.<org.apache.commons.io.input.BOMInputStream: int fbIndex>;

        $i0 = r0.<org.apache.commons.io.input.BOMInputStream: int fbLength>;

        if $i1 >= $i0 goto label1;

        $r1 = r0.<org.apache.commons.io.input.BOMInputStream: int[] firstBytes>;

        $i2 = r0.<org.apache.commons.io.input.BOMInputStream: int fbIndex>;

        $i3 = $i2 + 1;

        r0.<org.apache.commons.io.input.BOMInputStream: int fbIndex> = $i3;

        $i4 = $r1[$i2];

        goto label2;

     label1:
        $i6 = (int) -1;

        $i4 = $i6;

     label2:
        return $i4;
    }

    private org.apache.commons.io.ByteOrderMark find()
    {
        java.util.List $r1;
        java.util.Iterator $r2;
        org.apache.commons.io.input.BOMInputStream r0;
        java.lang.Object $r3;
        org.apache.commons.io.ByteOrderMark r4;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.io.input.BOMInputStream;

        $r1 = r0.<org.apache.commons.io.input.BOMInputStream: java.util.List boms>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.commons.io.ByteOrderMark) $r3;

        $z1 = specialinvoke r0.<org.apache.commons.io.input.BOMInputStream: boolean matches(org.apache.commons.io.ByteOrderMark)>(r4);

        if $z1 == 0 goto label2;

        return r4;

     label2:
        goto label1;

     label3:
        return null;
    }

    private boolean matches(org.apache.commons.io.ByteOrderMark)
    {
        org.apache.commons.io.ByteOrderMark r0;
        int[] $r2;
        int $i0, $i1, $i2, $i3, $i4, i5;
        org.apache.commons.io.input.BOMInputStream r1;

        r1 := @this: org.apache.commons.io.input.BOMInputStream;

        r0 := @parameter0: org.apache.commons.io.ByteOrderMark;

        $i0 = virtualinvoke r0.<org.apache.commons.io.ByteOrderMark: int length()>();

        $i1 = r1.<org.apache.commons.io.input.BOMInputStream: int fbLength>;

        if $i0 == $i1 goto label1;

        return 0;

     label1:
        i5 = 0;

     label2:
        $i2 = virtualinvoke r0.<org.apache.commons.io.ByteOrderMark: int length()>();

        if i5 >= $i2 goto label4;

        $i3 = virtualinvoke r0.<org.apache.commons.io.ByteOrderMark: int get(int)>(i5);

        $r2 = r1.<org.apache.commons.io.input.BOMInputStream: int[] firstBytes>;

        $i4 = $r2[i5];

        if $i3 == $i4 goto label3;

        return 0;

     label3:
        i5 = i5 + 1;

        goto label2;

     label4:
        return 1;
    }

    public int read() throws java.io.IOException
    {
        int $i0, $i1;
        org.apache.commons.io.input.BOMInputStream r0;
        java.io.InputStream $r1;

        r0 := @this: org.apache.commons.io.input.BOMInputStream;

        $i0 = specialinvoke r0.<org.apache.commons.io.input.BOMInputStream: int readFirstBytes()>();

        if $i0 < 0 goto label1;

        $i1 = $i0;

        goto label2;

     label1:
        $r1 = r0.<org.apache.commons.io.input.BOMInputStream: java.io.InputStream in>;

        $i1 = virtualinvoke $r1.<java.io.InputStream: int read()>();

     label2:
        return $i1;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        byte[] r1;
        byte $b4;
        int $i0, $i1, $i2, $i3, i5, i6, i7, i8, $i9, $i11, $i13;
        org.apache.commons.io.input.BOMInputStream r0;
        java.io.InputStream $r2;

        r0 := @this: org.apache.commons.io.input.BOMInputStream;

        r1 := @parameter0: byte[];

        i5 := @parameter1: int;

        i6 := @parameter2: int;

        i7 = 0;

        i8 = 0;

     label1:
        if i6 <= 0 goto label2;

        if i8 < 0 goto label2;

        $i1 = specialinvoke r0.<org.apache.commons.io.input.BOMInputStream: int readFirstBytes()>();

        i8 = $i1;

        if $i1 < 0 goto label1;

        $i2 = i5;

        i5 = i5 + 1;

        $i3 = $i1 & 255;

        $b4 = (byte) $i3;

        r1[$i2] = $b4;

        $i11 = (int) -1;

        i6 = i6 + $i11;

        i7 = i7 + 1;

        goto label1;

     label2:
        $r2 = r0.<org.apache.commons.io.input.BOMInputStream: java.io.InputStream in>;

        $i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>(r1, i5, i6);

        if $i0 >= 0 goto label4;

        if i7 <= 0 goto label3;

        $i9 = i7;

        goto label5;

     label3:
        $i13 = (int) -1;

        $i9 = $i13;

        goto label5;

     label4:
        $i9 = i7 + $i0;

     label5:
        return $i9;
    }

    public int read(byte[]) throws java.io.IOException
    {
        byte[] r1;
        int $i0, $i1;
        org.apache.commons.io.input.BOMInputStream r0;

        r0 := @this: org.apache.commons.io.input.BOMInputStream;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        $i1 = virtualinvoke r0.<org.apache.commons.io.input.BOMInputStream: int read(byte[],int,int)>(r1, 0, $i0);

        return $i1;
    }

    public synchronized void mark(int)
    {
        int[] $r1;
        int $i0, i1;
        org.apache.commons.io.input.BOMInputStream r0;
        java.io.InputStream $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.io.input.BOMInputStream;

        i1 := @parameter0: int;

        $i0 = r0.<org.apache.commons.io.input.BOMInputStream: int fbIndex>;

        r0.<org.apache.commons.io.input.BOMInputStream: int markFbIndex> = $i0;

        $r1 = r0.<org.apache.commons.io.input.BOMInputStream: int[] firstBytes>;

        if $r1 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        r0.<org.apache.commons.io.input.BOMInputStream: boolean markedAtStart> = $z0;

        $r2 = r0.<org.apache.commons.io.input.BOMInputStream: java.io.InputStream in>;

        virtualinvoke $r2.<java.io.InputStream: void mark(int)>(i1);

        return;
    }

    public synchronized void reset() throws java.io.IOException
    {
        int $i0;
        org.apache.commons.io.input.BOMInputStream r0;
        boolean $z0;
        java.io.InputStream $r1;

        r0 := @this: org.apache.commons.io.input.BOMInputStream;

        $i0 = r0.<org.apache.commons.io.input.BOMInputStream: int markFbIndex>;

        r0.<org.apache.commons.io.input.BOMInputStream: int fbIndex> = $i0;

        $z0 = r0.<org.apache.commons.io.input.BOMInputStream: boolean markedAtStart>;

        if $z0 == 0 goto label1;

        r0.<org.apache.commons.io.input.BOMInputStream: int[] firstBytes> = null;

     label1:
        $r1 = r0.<org.apache.commons.io.input.BOMInputStream: java.io.InputStream in>;

        virtualinvoke $r1.<java.io.InputStream: void reset()>();

        return;
    }

    public long skip(long) throws java.io.IOException
    {
        byte $b0;
        int $i2, $i4;
        org.apache.commons.io.input.BOMInputStream r0;
        long $l1, l3;
        java.io.InputStream $r1;

        r0 := @this: org.apache.commons.io.input.BOMInputStream;

        l3 := @parameter0: long;

     label1:
        $b0 = l3 cmp 0L;

        $i4 = (int) $b0;

        if $i4 <= 0 goto label2;

        $i2 = specialinvoke r0.<org.apache.commons.io.input.BOMInputStream: int readFirstBytes()>();

        if $i2 < 0 goto label2;

        l3 = l3 - 1L;

        goto label1;

     label2:
        $r1 = r0.<org.apache.commons.io.input.BOMInputStream: java.io.InputStream in>;

        $l1 = virtualinvoke $r1.<java.io.InputStream: long skip(long)>(l3);

        return $l1;
    }
}
