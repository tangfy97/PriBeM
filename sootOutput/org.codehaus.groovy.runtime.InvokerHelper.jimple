public class org.codehaus.groovy.runtime.InvokerHelper extends java.lang.Object
{
    private static final java.lang.Object[] EMPTY_MAIN_ARGS;
    public static final java.lang.Object[] EMPTY_ARGS;
    protected static final java.lang.Object[] EMPTY_ARGUMENTS;
    protected static final java.lang.Class[] EMPTY_TYPES;
    static final groovy.lang.MetaClassRegistry metaRegistry;
    private static final org.codehaus.groovy.runtime.Invoker SINGLETON;

    public void <init>()
    {
        org.codehaus.groovy.runtime.InvokerHelper r0;

        r0 := @this: org.codehaus.groovy.runtime.InvokerHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.codehaus.groovy.runtime.Invoker getInstance()
    {
        org.codehaus.groovy.runtime.Invoker $r0;

        $r0 = <org.codehaus.groovy.runtime.InvokerHelper: org.codehaus.groovy.runtime.Invoker SINGLETON>;

        return $r0;
    }

    public static java.lang.Object invokeNoArgumentsMethod(java.lang.Object, java.lang.String)
    {
        java.lang.Object[] $r3;
        org.codehaus.groovy.runtime.Invoker $r0;
        java.lang.Object r1, $r4;
        java.lang.String r2;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.String;

        $r0 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: org.codehaus.groovy.runtime.Invoker getInstance()>();

        $r3 = <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object[] EMPTY_ARGS>;

        $r4 = virtualinvoke $r0.<org.codehaus.groovy.runtime.Invoker: java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object)>(r1, r2, $r3);

        return $r4;
    }

    public static void removeClass(java.lang.Class)
    {
        java.lang.Class r0;
        groovy.lang.MetaClassRegistry $r1;

        r0 := @parameter0: java.lang.Class;

        $r1 = <org.codehaus.groovy.runtime.InvokerHelper: groovy.lang.MetaClassRegistry metaRegistry>;

        interfaceinvoke $r1.<groovy.lang.MetaClassRegistry: void removeMetaClass(java.lang.Class)>(r0);

        staticinvoke <java.beans.Introspector: void flushFromCaches(java.lang.Class)>(r0);

        return;
    }

    public static java.lang.Object invokeMethodSafe(java.lang.Object, java.lang.String, java.lang.Object)
    {
        java.lang.Object r0, r2, $r3;
        java.lang.String r1;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object;

        if r0 == null goto label1;

        $r3 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object)>(r0, r1, r2);

        return $r3;

     label1:
        return null;
    }

    public static java.lang.Object invokeStaticMethod(java.lang.String, java.lang.String, java.lang.Object) throws java.lang.ClassNotFoundException
    {
        java.lang.Class $r1;
        java.lang.Object r3, $r4;
        java.lang.String r0, r2;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        $r4 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object invokeStaticMethod(java.lang.Class,java.lang.String,java.lang.Object)>($r1, r2, r3);

        return $r4;
    }

    public static java.lang.Object invokeStaticNoArgumentsMethod(java.lang.Class, java.lang.String)
    {
        java.lang.Object[] $r2;
        java.lang.Class r0;
        java.lang.Object $r3;
        java.lang.String r1;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.String;

        $r2 = <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object[] EMPTY_ARGS>;

        $r3 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object invokeStaticMethod(java.lang.Class,java.lang.String,java.lang.Object)>(r0, r1, $r2);

        return $r3;
    }

    public static java.lang.Object invokeConstructorOf(java.lang.String, java.lang.Object) throws java.lang.ClassNotFoundException
    {
        java.lang.Class $r1;
        java.lang.Object r2, $r3;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        $r3 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object invokeConstructorOf(java.lang.Class,java.lang.Object)>($r1, r2);

        return $r3;
    }

    public static java.lang.Object invokeNoArgumentsConstructorOf(java.lang.Class)
    {
        java.lang.Class r0;
        java.lang.Object $r2;
        java.lang.Object[] $r1;

        r0 := @parameter0: java.lang.Class;

        $r1 = <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object[] EMPTY_ARGS>;

        $r2 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object invokeConstructorOf(java.lang.Class,java.lang.Object)>(r0, $r1);

        return $r2;
    }

    public static java.lang.Object invokeClosure(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1, $r2;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        $r2 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object)>(r0, "doCall", r1);

        return $r2;
    }

    public static java.util.List asList(java.lang.Object)
    {
        java.lang.Object[] $r6, $r7;
        java.util.Enumeration r4;
        java.util.ArrayList $r3;
        java.util.List $r2, $r8, $r9, $r10;
        java.lang.Object r0, $r5;
        java.lang.Class $r1;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        $r10 = <java.util.Collections: java.util.List EMPTY_LIST>;

        return $r10;

     label1:
        $z0 = r0 instanceof java.util.List;

        if $z0 == 0 goto label2;

        $r9 = (java.util.List) r0;

        return $r9;

     label2:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z1 = virtualinvoke $r1.<java.lang.Class: boolean isArray()>();

        if $z1 == 0 goto label3;

        $r6 = (java.lang.Object[]) r0;

        $r7 = (java.lang.Object[]) $r6;

        $r8 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r7);

        return $r8;

     label3:
        $z2 = r0 instanceof java.util.Enumeration;

        if $z2 == 0 goto label6;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r4 = (java.util.Enumeration) r0;

     label4:
        $z3 = interfaceinvoke r4.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z3 == 0 goto label5;

        $r5 = interfaceinvoke r4.<java.util.Enumeration: java.lang.Object nextElement()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r5);

        goto label4;

     label5:
        return $r3;

     label6:
        $r2 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r0);

        return $r2;
    }

    public static java.lang.String toString(java.lang.Object)
    {
        java.lang.Object[] $r6, $r7;
        java.util.Collection $r4;
        java.util.Map $r2;
        java.lang.Object r0;
        java.lang.String $r1, $r3, $r5, $r8;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.lang.Object[];

        if $z0 == 0 goto label1;

        $r6 = (java.lang.Object[]) r0;

        $r7 = (java.lang.Object[]) $r6;

        $r8 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.String toArrayString(java.lang.Object[])>($r7);

        return $r8;

     label1:
        $z1 = r0 instanceof java.util.Collection;

        if $z1 == 0 goto label2;

        $r4 = (java.util.Collection) r0;

        $r5 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.String toListString(java.util.Collection)>($r4);

        return $r5;

     label2:
        $z2 = r0 instanceof java.util.Map;

        if $z2 == 0 goto label3;

        $r2 = (java.util.Map) r0;

        $r3 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.String toMapString(java.util.Map)>($r2);

        return $r3;

     label3:
        $r1 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.String format(java.lang.Object,boolean)>(r0, 0);

        return $r1;
    }

    public static java.lang.String inspect(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.String $r1;

        r0 := @parameter0: java.lang.Object;

        $r1 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.String format(java.lang.Object,boolean)>(r0, 1);

        return $r1;
    }

    public static java.lang.Object getAttribute(java.lang.Object, java.lang.String)
    {
        groovy.lang.MetaClass $r3, $r7, $r11;
        groovy.lang.GroovyObject $r6;
        groovy.lang.MetaClassRegistry $r1, $r10;
        java.lang.Object r0, $r5, $r8, $r12;
        java.lang.Class $r2, $r9;
        java.lang.String r4;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.String;

        $z0 = r0 instanceof java.lang.Class;

        if $z0 == 0 goto label1;

        $r10 = <org.codehaus.groovy.runtime.InvokerHelper: groovy.lang.MetaClassRegistry metaRegistry>;

        $r9 = (java.lang.Class) r0;

        $r11 = interfaceinvoke $r10.<groovy.lang.MetaClassRegistry: groovy.lang.MetaClass getMetaClass(java.lang.Class)>($r9);

        $r12 = interfaceinvoke $r11.<groovy.lang.MetaClass: java.lang.Object getAttribute(java.lang.Object,java.lang.String)>(r0, r4);

        return $r12;

     label1:
        $z1 = r0 instanceof groovy.lang.GroovyObject;

        if $z1 == 0 goto label2;

        $r6 = (groovy.lang.GroovyObject) r0;

        $r7 = interfaceinvoke $r6.<groovy.lang.GroovyObject: groovy.lang.MetaClass getMetaClass()>();

        $r8 = interfaceinvoke $r7.<groovy.lang.MetaClass: java.lang.Object getAttribute(java.lang.Object,java.lang.String)>(r0, r4);

        return $r8;

     label2:
        $r1 = <org.codehaus.groovy.runtime.InvokerHelper: groovy.lang.MetaClassRegistry metaRegistry>;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = interfaceinvoke $r1.<groovy.lang.MetaClassRegistry: groovy.lang.MetaClass getMetaClass(java.lang.Class)>($r2);

        $r5 = interfaceinvoke $r3.<groovy.lang.MetaClass: java.lang.Object getAttribute(java.lang.Object,java.lang.String)>(r0, r4);

        return $r5;
    }

    public static void setAttribute(java.lang.Object, java.lang.String, java.lang.Object)
    {
        groovy.lang.MetaClass $r3, $r7, $r10;
        groovy.lang.GroovyObject $r6;
        groovy.lang.MetaClassRegistry $r1, $r9;
        java.lang.Object r0, r5;
        java.lang.Class $r2, $r8;
        java.lang.String r4;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.Object;

        $z0 = r0 instanceof java.lang.Class;

        if $z0 == 0 goto label1;

        $r9 = <org.codehaus.groovy.runtime.InvokerHelper: groovy.lang.MetaClassRegistry metaRegistry>;

        $r8 = (java.lang.Class) r0;

        $r10 = interfaceinvoke $r9.<groovy.lang.MetaClassRegistry: groovy.lang.MetaClass getMetaClass(java.lang.Class)>($r8);

        interfaceinvoke $r10.<groovy.lang.MetaClass: void setAttribute(java.lang.Object,java.lang.String,java.lang.Object)>(r0, r4, r5);

        goto label3;

     label1:
        $z1 = r0 instanceof groovy.lang.GroovyObject;

        if $z1 == 0 goto label2;

        $r6 = (groovy.lang.GroovyObject) r0;

        $r7 = interfaceinvoke $r6.<groovy.lang.GroovyObject: groovy.lang.MetaClass getMetaClass()>();

        interfaceinvoke $r7.<groovy.lang.MetaClass: void setAttribute(java.lang.Object,java.lang.String,java.lang.Object)>(r0, r4, r5);

        goto label3;

     label2:
        $r1 = <org.codehaus.groovy.runtime.InvokerHelper: groovy.lang.MetaClassRegistry metaRegistry>;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = interfaceinvoke $r1.<groovy.lang.MetaClassRegistry: groovy.lang.MetaClass getMetaClass(java.lang.Class)>($r2);

        interfaceinvoke $r3.<groovy.lang.MetaClass: void setAttribute(java.lang.Object,java.lang.String,java.lang.Object)>(r0, r4, r5);

     label3:
        return;
    }

    public static java.lang.Object getProperty(java.lang.Object, java.lang.String)
    {
        groovy.lang.MetaClass $r2, $r6;
        groovy.lang.GroovyObject r10;
        groovy.lang.MetaClassRegistry $r0, $r5;
        java.lang.Class $r1, r11;
        java.lang.Object $r4, $r7, $r8, r9;
        java.lang.String r3;
        boolean $z0, $z1;

        r9 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.String;

        if r9 != null goto label1;

        r9 = staticinvoke <org.codehaus.groovy.runtime.NullObject: org.codehaus.groovy.runtime.NullObject getNullObject()>();

     label1:
        $z0 = r9 instanceof groovy.lang.GroovyObject;

        if $z0 == 0 goto label2;

        r10 = (groovy.lang.GroovyObject) r9;

        $r8 = interfaceinvoke r10.<groovy.lang.GroovyObject: java.lang.Object getProperty(java.lang.String)>(r3);

        return $r8;

     label2:
        $z1 = r9 instanceof java.lang.Class;

        if $z1 == 0 goto label3;

        r11 = (java.lang.Class) r9;

        $r5 = <org.codehaus.groovy.runtime.InvokerHelper: groovy.lang.MetaClassRegistry metaRegistry>;

        $r6 = interfaceinvoke $r5.<groovy.lang.MetaClassRegistry: groovy.lang.MetaClass getMetaClass(java.lang.Class)>(r11);

        $r7 = interfaceinvoke $r6.<groovy.lang.MetaClass: java.lang.Object getProperty(java.lang.Object,java.lang.String)>(r9, r3);

        return $r7;

     label3:
        $r0 = <org.codehaus.groovy.runtime.InvokerHelper: groovy.lang.MetaClassRegistry metaRegistry>;

        $r1 = virtualinvoke r9.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = interfaceinvoke $r0.<groovy.lang.MetaClassRegistry: groovy.lang.MetaClass getMetaClass(java.lang.Class)>($r1);

        $r4 = interfaceinvoke $r2.<groovy.lang.MetaClass: java.lang.Object getProperty(java.lang.Object,java.lang.String)>(r9, r3);

        return $r4;
    }

    public static java.lang.Object getPropertySafe(java.lang.Object, java.lang.String)
    {
        java.lang.Object r0, $r2;
        java.lang.String r1;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.String;

        if r0 == null goto label1;

        $r2 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object getProperty(java.lang.Object,java.lang.String)>(r0, r1);

        return $r2;

     label1:
        return null;
    }

    public static void setProperty(java.lang.Object, java.lang.String, java.lang.Object)
    {
        groovy.lang.MetaClass $r3, $r8;
        groovy.lang.GroovyObject r10;
        groovy.lang.MetaClassRegistry $r1, $r7;
        java.lang.Object r0, r5;
        java.lang.Class $r2, $r6, $r9;
        java.lang.String r4;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.Object;

        $z0 = r0 instanceof groovy.lang.GroovyObject;

        if $z0 == 0 goto label1;

        r10 = (groovy.lang.GroovyObject) r0;

        interfaceinvoke r10.<groovy.lang.GroovyObject: void setProperty(java.lang.String,java.lang.Object)>(r4, r5);

        goto label3;

     label1:
        $z1 = r0 instanceof java.lang.Class;

        if $z1 == 0 goto label2;

        $r7 = <org.codehaus.groovy.runtime.InvokerHelper: groovy.lang.MetaClassRegistry metaRegistry>;

        $r6 = (java.lang.Class) r0;

        $r8 = interfaceinvoke $r7.<groovy.lang.MetaClassRegistry: groovy.lang.MetaClass getMetaClass(java.lang.Class)>($r6);

        $r9 = (java.lang.Class) r0;

        interfaceinvoke $r8.<groovy.lang.MetaClass: void setProperty(java.lang.Object,java.lang.String,java.lang.Object)>($r9, r4, r5);

        goto label3;

     label2:
        $r1 = <org.codehaus.groovy.runtime.InvokerHelper: groovy.lang.MetaClassRegistry metaRegistry>;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = interfaceinvoke $r1.<groovy.lang.MetaClassRegistry: groovy.lang.MetaClass getMetaClass(java.lang.Class)>($r2);

        interfaceinvoke $r3.<groovy.lang.MetaClass: void setProperty(java.lang.Object,java.lang.String,java.lang.Object)>(r0, r4, r5);

     label3:
        return;
    }

    public static void setProperty2(java.lang.Object, java.lang.Object, java.lang.String)
    {
        java.lang.Object r0, r2;
        java.lang.String r1;

        r2 := @parameter0: java.lang.Object;

        r0 := @parameter1: java.lang.Object;

        r1 := @parameter2: java.lang.String;

        staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: void setProperty(java.lang.Object,java.lang.String,java.lang.Object)>(r0, r1, r2);

        return;
    }

    public static void setGroovyObjectProperty(java.lang.Object, groovy.lang.GroovyObject, java.lang.String)
    {
        groovy.lang.GroovyObject r0;
        java.lang.Object r2;
        java.lang.String r1;

        r2 := @parameter0: java.lang.Object;

        r0 := @parameter1: groovy.lang.GroovyObject;

        r1 := @parameter2: java.lang.String;

        interfaceinvoke r0.<groovy.lang.GroovyObject: void setProperty(java.lang.String,java.lang.Object)>(r1, r2);

        return;
    }

    public static java.lang.Object getGroovyObjectProperty(groovy.lang.GroovyObject, java.lang.String)
    {
        groovy.lang.GroovyObject r0;
        java.lang.Object $r2;
        java.lang.String r1;

        r0 := @parameter0: groovy.lang.GroovyObject;

        r1 := @parameter1: java.lang.String;

        $r2 = interfaceinvoke r0.<groovy.lang.GroovyObject: java.lang.Object getProperty(java.lang.String)>(r1);

        return $r2;
    }

    public static void setPropertySafe2(java.lang.Object, java.lang.Object, java.lang.String)
    {
        java.lang.Object r0, r1;
        java.lang.String r2;

        r1 := @parameter0: java.lang.Object;

        r0 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.String;

        if r0 == null goto label1;

        staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: void setProperty2(java.lang.Object,java.lang.Object,java.lang.String)>(r1, r0, r2);

     label1:
        return;
    }

    public static groovy.lang.Closure getMethodPointer(java.lang.Object, java.lang.String)
    {
        org.codehaus.groovy.runtime.MethodClosure $r1;
        java.lang.NullPointerException $r3;
        java.lang.StringBuffer $r4, $r5, $r6, $r7;
        java.lang.Object r0;
        java.lang.String r2, $r8;

        r0 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Cannot access method pointer for \'");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' on null object");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>($r8);

        throw $r3;

     label1:
        $r1 = new org.codehaus.groovy.runtime.MethodClosure;

        specialinvoke $r1.<org.codehaus.groovy.runtime.MethodClosure: void <init>(java.lang.Object,java.lang.String)>(r0, r2);

        return $r1;
    }

    public static java.lang.Object unaryMinus(java.lang.Object)
    {
        java.lang.Float $r8, r19;
        java.lang.Integer $r15, r16;
        java.math.BigDecimal $r10, $r11;
        java.lang.Long $r14, r17;
        java.math.BigInteger $r12, $r13;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        float $f0, $f1;
        java.lang.Object[] $r1;
        java.lang.Double $r9, r18;
        long $l0, $l1;
        java.util.ArrayList $r3, $r4;
        int $i2, $i3;
        double $d0, $d1;
        java.util.Iterator $r5;
        java.lang.Object r0, $r2, $r6, $r7;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.lang.Integer;

        if $z0 == 0 goto label1;

        r16 = (java.lang.Integer) r0;

        $i2 = virtualinvoke r16.<java.lang.Integer: int intValue()>();

        $i3 = neg $i2;

        $r15 = staticinvoke <org.codehaus.groovy.runtime.typehandling.IntegerCache: java.lang.Integer integerValue(int)>($i3);

        return $r15;

     label1:
        $z1 = r0 instanceof java.lang.Long;

        if $z1 == 0 goto label2;

        r17 = (java.lang.Long) r0;

        $r14 = new java.lang.Long;

        $l0 = virtualinvoke r17.<java.lang.Long: long longValue()>();

        $l1 = neg $l0;

        specialinvoke $r14.<java.lang.Long: void <init>(long)>($l1);

        return $r14;

     label2:
        $z2 = r0 instanceof java.math.BigInteger;

        if $z2 == 0 goto label3;

        $r12 = (java.math.BigInteger) r0;

        $r13 = virtualinvoke $r12.<java.math.BigInteger: java.math.BigInteger negate()>();

        return $r13;

     label3:
        $z3 = r0 instanceof java.math.BigDecimal;

        if $z3 == 0 goto label4;

        $r10 = (java.math.BigDecimal) r0;

        $r11 = virtualinvoke $r10.<java.math.BigDecimal: java.math.BigDecimal negate()>();

        return $r11;

     label4:
        $z4 = r0 instanceof java.lang.Double;

        if $z4 == 0 goto label5;

        r18 = (java.lang.Double) r0;

        $r9 = new java.lang.Double;

        $d0 = virtualinvoke r18.<java.lang.Double: double doubleValue()>();

        $d1 = neg $d0;

        specialinvoke $r9.<java.lang.Double: void <init>(double)>($d1);

        return $r9;

     label5:
        $z5 = r0 instanceof java.lang.Float;

        if $z5 == 0 goto label6;

        r19 = (java.lang.Float) r0;

        $r8 = new java.lang.Float;

        $f0 = virtualinvoke r19.<java.lang.Float: float floatValue()>();

        $f1 = neg $f0;

        specialinvoke $r8.<java.lang.Float: void <init>(float)>($f1);

        return $r8;

     label6:
        $z6 = r0 instanceof java.util.ArrayList;

        if $z6 == 0 goto label9;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4 = (java.util.ArrayList) r0;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label7:
        $z7 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label8;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object unaryMinus(java.lang.Object)>($r6);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r7);

        goto label7;

     label8:
        return $r3;

     label9:
        $r1 = <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object[] EMPTY_ARGS>;

        $r2 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object)>(r0, "negative", $r1);

        return $r2;
    }

    public static java.lang.Object unaryPlus(java.lang.Object)
    {
        java.lang.Object[] $r1;
        java.util.ArrayList $r3, $r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.util.Iterator $r5;
        java.lang.Object r0, $r2, $r6, $r7;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.lang.Integer;

        if $z0 != 0 goto label1;

        $z1 = r0 instanceof java.lang.Long;

        if $z1 != 0 goto label1;

        $z2 = r0 instanceof java.math.BigInteger;

        if $z2 != 0 goto label1;

        $z3 = r0 instanceof java.math.BigDecimal;

        if $z3 != 0 goto label1;

        $z4 = r0 instanceof java.lang.Double;

        if $z4 != 0 goto label1;

        $z5 = r0 instanceof java.lang.Float;

        if $z5 == 0 goto label2;

     label1:
        return r0;

     label2:
        $z6 = r0 instanceof java.util.ArrayList;

        if $z6 == 0 goto label5;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4 = (java.util.ArrayList) r0;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label3:
        $z7 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label4;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object unaryPlus(java.lang.Object)>($r6);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r7);

        goto label3;

     label4:
        return $r3;

     label5:
        $r1 = <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object[] EMPTY_ARGS>;

        $r2 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object)>(r0, "positive", $r1);

        return $r2;
    }

    public static java.util.regex.Matcher findRegex(java.lang.Object, java.lang.Object)
    {
        java.util.regex.Matcher $r3, $r4;
        java.lang.Object r0, r1;
        java.util.regex.Pattern $r2, r7;
        java.lang.String r5, r6;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        $z0 = r0 instanceof java.lang.String;

        if $z0 == 0 goto label1;

        r5 = (java.lang.String) r0;

        goto label2;

     label1:
        r5 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.String toString(java.lang.Object)>(r0);

     label2:
        $z1 = r1 instanceof java.lang.String;

        if $z1 == 0 goto label3;

        r6 = (java.lang.String) r1;

        goto label5;

     label3:
        $z2 = r1 instanceof java.util.regex.Pattern;

        if $z2 == 0 goto label4;

        r7 = (java.util.regex.Pattern) r1;

        $r4 = virtualinvoke r7.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r5);

        return $r4;

     label4:
        r6 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.String toString(java.lang.Object)>(r1);

     label5:
        $r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(r6);

        $r3 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r5);

        return $r3;
    }

    public static boolean matchRegex(java.lang.Object, java.lang.Object)
    {
        java.util.regex.Matcher $r4;
        java.lang.Object r0, r2;
        java.lang.String $r1, $r3;
        java.util.regex.Pattern r5;
        boolean $z0, $z1;

        r2 := @parameter0: java.lang.Object;

        r0 := @parameter1: java.lang.Object;

        $z0 = r0 instanceof java.util.regex.Pattern;

        if $z0 == 0 goto label1;

        r5 = (java.util.regex.Pattern) r0;

        goto label2;

     label1:
        $r1 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.String toString(java.lang.Object)>(r0);

        r5 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r1);

     label2:
        $r3 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.String toString(java.lang.Object)>(r2);

        $r4 = virtualinvoke r5.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r3);

        staticinvoke <org.codehaus.groovy.runtime.RegexSupport: void setLastMatcher(java.util.regex.Matcher)>($r4);

        $z1 = virtualinvoke $r4.<java.util.regex.Matcher: boolean matches()>();

        return $z1;
    }

    public static groovy.lang.Tuple createTuple(java.lang.Object[])
    {
        groovy.lang.Tuple $r0;
        java.lang.Object[] r1;

        r1 := @parameter0: java.lang.Object[];

        $r0 = new groovy.lang.Tuple;

        specialinvoke $r0.<groovy.lang.Tuple: void <init>(java.lang.Object[])>(r1);

        return $r0;
    }

    public static groovy.lang.SpreadMap spreadMap(java.lang.Object)
    {
        java.lang.Object[] r12;
        groovy.lang.SpreadMapEvaluatingException $r1;
        java.lang.StringBuffer $r2, $r3, $r6, $r7, $r8;
        java.util.Map $r10, $r13, $r18;
        int $i0, $i1, i2, i3;
        java.lang.String $r5, $r9;
        boolean $z0, $z1;
        java.util.Iterator $r15;
        java.util.Set $r11, $r14;
        groovy.lang.SpreadMap $r16;
        java.lang.Object r0, $r17, $r19;
        java.lang.Class $r4;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.util.Map;

        if $z0 == 0 goto label3;

        $r10 = (java.util.Map) r0;

        $r11 = interfaceinvoke $r10.<java.util.Map: java.util.Set keySet()>();

        $i0 = interfaceinvoke $r11.<java.util.Set: int size()>();

        $i1 = $i0 * 2;

        r12 = newarray (java.lang.Object)[$i1];

        i2 = 0;

        $r13 = (java.util.Map) r0;

        $r14 = interfaceinvoke $r13.<java.util.Map: java.util.Set keySet()>();

        $r15 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r17 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        i3 = i2 + 1;

        r12[i2] = $r17;

        i2 = i3 + 1;

        $r18 = (java.util.Map) r0;

        $r19 = interfaceinvoke $r18.<java.util.Map: java.lang.Object get(java.lang.Object)>($r17);

        r12[i3] = $r19;

        goto label1;

     label2:
        $r16 = new groovy.lang.SpreadMap;

        specialinvoke $r16.<groovy.lang.SpreadMap: void <init>(java.lang.Object[])>(r12);

        return $r16;

     label3:
        $r1 = new groovy.lang.SpreadMapEvaluatingException;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Cannot spread the map ");

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", value ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r1.<groovy.lang.SpreadMapEvaluatingException: void <init>(java.lang.String)>($r9);

        throw $r1;
    }

    public static java.util.List createList(java.lang.Object[])
    {
        java.util.List $r2;
        java.lang.Object[] r1;
        int $i0;
        java.util.ArrayList $r0;

        r1 := @parameter0: java.lang.Object[];

        $r0 = new java.util.ArrayList;

        $i0 = lengthof r1;

        specialinvoke $r0.<java.util.ArrayList: void <init>(int)>($i0);

        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r1);

        interfaceinvoke $r0.<java.util.List: boolean addAll(java.util.Collection)>($r2);

        return $r0;
    }

    public static java.util.Map createMap(java.lang.Object[])
    {
        java.lang.Object[] r1;
        java.util.LinkedHashMap $r0;
        java.util.Map r7;
        int $i0, $i1, $i2, $i3, i4, $i5, $i6, i7;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r9;
        java.util.Set $r8;
        java.lang.Object $r2, $r3, $r4, $r5, $r6, $r10, $r11;

        r1 := @parameter0: java.lang.Object[];

        $r0 = new java.util.LinkedHashMap;

        $i0 = lengthof r1;

        $i1 = $i0 / 2;

        specialinvoke $r0.<java.util.LinkedHashMap: void <init>(int)>($i1);

        i4 = 0;

     label1:
        $i5 = lengthof r1;

        $i6 = $i5 - 1;

        if i4 >= $i6 goto label5;

        $r2 = r1[i4];

        $z0 = $r2 instanceof groovy.lang.SpreadMap;

        if $z0 == 0 goto label4;

        $i2 = i4 + 1;

        $r5 = r1[$i2];

        $z1 = $r5 instanceof java.util.Map;

        if $z1 == 0 goto label4;

        $i3 = i4 + 1;

        $r6 = r1[$i3];

        r7 = (java.util.Map) $r6;

        $r8 = interfaceinvoke r7.<java.util.Map: java.util.Set keySet()>();

        $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        $r11 = interfaceinvoke r7.<java.util.Map: java.lang.Object get(java.lang.Object)>($r10);

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r11);

        goto label2;

     label3:
        i4 = i4 + 2;

        goto label1;

     label4:
        i7 = i4 + 1;

        $r4 = r1[i4];

        i4 = i7 + 1;

        $r3 = r1[i7];

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r3);

        goto label1;

     label5:
        return $r0;
    }

    public static void assertFailed(java.lang.Object, java.lang.Object)
    {
        java.lang.AssertionError $r1, $r8;
        java.lang.StringBuffer $r2, $r3, $r5, $r9, $r11, $r12, $r13;
        java.lang.String $r6, $r7, $r10, $r14;
        boolean $z0;
        java.lang.Object r0, r4;

        r4 := @parameter0: java.lang.Object;

        r0 := @parameter1: java.lang.Object;

        if r0 == null goto label1;

        $r7 = "";

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label2;

     label1:
        $r1 = new java.lang.AssertionError;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Expression: ");

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.AssertionError: void <init>(java.lang.Object)>($r6);

        throw $r1;

     label2:
        $r8 = new java.lang.AssertionError;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(". Expression: ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r4);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.AssertionError: void <init>(java.lang.Object)>($r14);

        throw $r8;
    }

    public static java.lang.Object runScript(java.lang.Class, java.lang.String[])
    {
        java.lang.Object[] $r4;
        java.lang.String[] r1;
        java.lang.Class r2;
        java.lang.Object $r5;
        groovy.lang.Binding $r0;
        groovy.lang.Script $r3;

        r2 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.String[];

        $r0 = new groovy.lang.Binding;

        specialinvoke $r0.<groovy.lang.Binding: void <init>(java.lang.String[])>(r1);

        $r3 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: groovy.lang.Script createScript(java.lang.Class,groovy.lang.Binding)>(r2, $r0);

        $r4 = <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object[] EMPTY_ARGS>;

        $r5 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object)>($r3, "run", $r4);

        return $r5;
    }

    public static groovy.lang.Script createScript(java.lang.Class, groovy.lang.Binding)
    {
        org.codehaus.groovy.runtime.InvokerHelper$2 $r2;
        groovy.lang.Script r14;
        groovy.lang.GroovyObject r15;
        java.lang.StringBuffer $r8, $r9, $r10, $r11, $r12;
        java.util.Map $r4;
        java.lang.String $r13;
        groovy.lang.Binding r3;
        boolean $z0;
        groovy.lang.GroovyRuntimeException $r7;
        java.lang.Exception $r6;
        java.lang.Class r0;
        java.lang.Object $r1;
        org.codehaus.groovy.runtime.InvokerHelper$1 $r5;

        r0 := @parameter0: java.lang.Class;

        r3 := @parameter1: groovy.lang.Binding;

        if r0 != null goto label1;

        $r5 = new org.codehaus.groovy.runtime.InvokerHelper$1;

        specialinvoke $r5.<org.codehaus.groovy.runtime.InvokerHelper$1: void <init>()>();

        r14 = $r5;

        goto label5;

     label1:
        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.Object newInstance()>();

        r15 = (groovy.lang.GroovyObject) $r1;

        $z0 = r15 instanceof groovy.lang.Script;

        if $z0 == 0 goto label2;

        r14 = (groovy.lang.Script) r15;

        goto label3;

     label2:
        $r2 = new org.codehaus.groovy.runtime.InvokerHelper$2;

        specialinvoke $r2.<org.codehaus.groovy.runtime.InvokerHelper$2: void <init>(groovy.lang.GroovyObject)>(r15);

        r14 = $r2;

        $r4 = virtualinvoke r3.<groovy.lang.Binding: java.util.Map getVariables()>();

        staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: void setProperties(java.lang.Object,java.util.Map)>(r15, $r4);

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;

        $r7 = new groovy.lang.GroovyRuntimeException;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Failed to create Script instance for class: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(". Reason: ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r6);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r7.<groovy.lang.GroovyRuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r13, $r6);

        throw $r7;

     label5:
        virtualinvoke r14.<groovy.lang.Script: void setBinding(groovy.lang.Binding)>(r3);

        return r14;

        catch java.lang.Exception from label1 to label3 with label4;
    }

    public static void setProperties(java.lang.Object, java.util.Map)
    {
        groovy.lang.MetaClass $r1;
        java.util.Map$Entry r6;
        java.util.Iterator $r4;
        java.util.Set $r3;
        java.util.Map r2;
        java.lang.Object r0, $r5, $r7, $r9;
        java.lang.String $r8;
        groovy.lang.MissingPropertyException $r10;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.util.Map;

        $r1 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: groovy.lang.MetaClass getMetaClass(java.lang.Object)>(r0);

        $r3 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r5;

        $r7 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>();

        $r9 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

     label2:
        interfaceinvoke $r1.<groovy.lang.MetaClass: void setProperty(java.lang.Object,java.lang.String,java.lang.Object)>(r0, $r8, $r9);

     label3:
        goto label5;

     label4:
        $r10 := @caughtexception;

     label5:
        goto label1;

     label6:
        return;

        catch groovy.lang.MissingPropertyException from label2 to label3 with label4;
    }

    public static java.lang.String getVersion()
    {
        java.lang.String r1;
        java.lang.Package $r0;

        r1 = null;

        $r0 = staticinvoke <java.lang.Package: java.lang.Package getPackage(java.lang.String)>("groovy.lang");

        if $r0 == null goto label1;

        r1 = virtualinvoke $r0.<java.lang.Package: java.lang.String getImplementationVersion()>();

     label1:
        if r1 != null goto label2;

        r1 = "";

     label2:
        return r1;
    }

    public static void write(java.io.Writer, java.lang.Object) throws java.io.IOException
    {
        java.lang.Object[] $r10, $r11;
        groovy.lang.Writable r14;
        java.util.Map $r8;
        int $i0, $i2;
        java.lang.String $r5, $r7, $r9, $r12, $r13;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.util.Collection $r6;
        java.io.Reader r15;
        java.io.InputStreamReader $r16;
        java.io.Writer r1;
        char[] $r4;
        java.lang.Object r0;
        java.io.InputStream $r3;

        r1 := @parameter0: java.io.Writer;

        r0 := @parameter1: java.lang.Object;

        $z0 = r0 instanceof java.lang.String;

        if $z0 == 0 goto label01;

        $r13 = (java.lang.String) r0;

        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>($r13);

        goto label12;

     label01:
        $z1 = r0 instanceof java.lang.Object[];

        if $z1 == 0 goto label02;

        $r10 = (java.lang.Object[]) r0;

        $r11 = (java.lang.Object[]) $r10;

        $r12 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.String toArrayString(java.lang.Object[])>($r11);

        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>($r12);

        goto label12;

     label02:
        $z2 = r0 instanceof java.util.Map;

        if $z2 == 0 goto label03;

        $r8 = (java.util.Map) r0;

        $r9 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.String toMapString(java.util.Map)>($r8);

        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>($r9);

        goto label12;

     label03:
        $z3 = r0 instanceof java.util.Collection;

        if $z3 == 0 goto label04;

        $r6 = (java.util.Collection) r0;

        $r7 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.String toListString(java.util.Collection)>($r6);

        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>($r7);

        goto label12;

     label04:
        $z4 = r0 instanceof groovy.lang.Writable;

        if $z4 == 0 goto label05;

        r14 = (groovy.lang.Writable) r0;

        interfaceinvoke r14.<groovy.lang.Writable: java.io.Writer writeTo(java.io.Writer)>(r1);

        goto label12;

     label05:
        $z5 = r0 instanceof java.io.InputStream;

        if $z5 != 0 goto label06;

        $z7 = r0 instanceof java.io.Reader;

        if $z7 == 0 goto label11;

     label06:
        $z6 = r0 instanceof java.io.InputStream;

        if $z6 == 0 goto label07;

        $r16 = new java.io.InputStreamReader;

        $r3 = (java.io.InputStream) r0;

        specialinvoke $r16.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r3);

        r15 = $r16;

        goto label08;

     label07:
        r15 = (java.io.Reader) r0;

     label08:
        $r4 = newarray (char)[8192];

     label09:
        $i0 = virtualinvoke r15.<java.io.Reader: int read(char[])>($r4);

        $i2 = (int) -1;

        if $i0 == $i2 goto label10;

        virtualinvoke r1.<java.io.Writer: void write(char[],int,int)>($r4, 0, $i0);

        goto label09;

     label10:
        virtualinvoke r15.<java.io.Reader: void close()>();

        goto label12;

     label11:
        $r5 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.String toString(java.lang.Object)>(r0);

        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>($r5);

     label12:
        return;
    }

    public static java.util.Iterator asIterator(java.lang.Object)
    {
        java.lang.Object[] $r1;
        java.util.Iterator $r3;
        java.lang.Object r0, $r2;

        r0 := @parameter0: java.lang.Object;

        $r1 = <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object[] EMPTY_ARGS>;

        $r2 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object)>(r0, "iterator", $r1);

        $r3 = (java.util.Iterator) $r2;

        return $r3;
    }

    protected static java.lang.String format(java.lang.Object, boolean)
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6;
        java.util.Collection $r22;
        java.lang.Object[] $r26;
        java.lang.StringBuffer $r11, $r12, $r13, $r14;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r15, $r17, $r18, $r19, $r20, $r21, $r23, $r28;
        groovy.lang.MetaClass $r25;
        groovy.lang.Range r29;
        org.w3c.dom.Element $r16;
        org.codehaus.groovy.runtime.NullObject $r24;
        java.lang.Object r0, $r27;
        java.lang.Class $r1;

        r0 := @parameter0: java.lang.Object;

        z6 := @parameter1: boolean;

        if r0 != null goto label1;

        $r24 = staticinvoke <org.codehaus.groovy.runtime.NullObject: org.codehaus.groovy.runtime.NullObject getNullObject()>();

        $r25 = virtualinvoke $r24.<org.codehaus.groovy.runtime.NullObject: groovy.lang.MetaClass getMetaClass()>();

        $r26 = <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object[] EMPTY_ARGS>;

        $r27 = interfaceinvoke $r25.<groovy.lang.MetaClass: java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[])>($r24, "toString", $r26);

        $r28 = (java.lang.String) $r27;

        return $r28;

     label1:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isArray()>();

        if $z0 == 0 goto label2;

        $r22 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.util.Collection asCollection(java.lang.Object)>(r0);

        $r23 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.String format(java.lang.Object,boolean)>($r22, z6);

        return $r23;

     label2:
        $z1 = r0 instanceof groovy.lang.Range;

        if $z1 == 0 goto label4;

        r29 = (groovy.lang.Range) r0;

        if z6 == 0 goto label3;

        $r21 = interfaceinvoke r29.<groovy.lang.Range: java.lang.String inspect()>();

        return $r21;

     label3:
        $r20 = virtualinvoke r29.<java.lang.Object: java.lang.String toString()>();

        return $r20;

     label4:
        $z2 = r0 instanceof java.util.List;

        if $z2 == 0 goto label5;

        $r19 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.String formatList(java.lang.Object,boolean)>(r0, z6);

        return $r19;

     label5:
        $z3 = r0 instanceof java.util.Map;

        if $z3 == 0 goto label6;

        $r18 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.String formatMap(java.lang.Object,boolean)>(r0, z6);

        return $r18;

     label6:
        $z4 = r0 instanceof org.w3c.dom.Element;

        if $z4 == 0 goto label7;

        $r16 = (org.w3c.dom.Element) r0;

        $r17 = staticinvoke <groovy.xml.dom.DOMUtil: java.lang.String serialize(org.w3c.dom.Element)>($r16);

        return $r17;

     label7:
        $z5 = r0 instanceof java.lang.String;

        if $z5 == 0 goto label9;

        if z6 == 0 goto label8;

        $r4 = (java.lang.String) r0;

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\n", "\\\\n");

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\r", "\\\\r");

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\t", "\\\\t");

        $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\f", "\\\\f");

        $r9 = virtualinvoke $r8.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\"", "\\\\\"");

        $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\", "\\\\");

        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r15;

     label8:
        $r3 = (java.lang.String) r0;

        return $r3;

     label9:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }

    private static java.lang.String formatMap(java.lang.Object, boolean)
    {
        java.lang.StringBuffer $r2;
        java.util.Map r1;
        java.lang.String $r5, $r8, $r11;
        boolean $z0, $z1, z2, z3;
        java.util.Map$Entry $r12;
        java.util.Iterator $r4;
        java.util.Set $r3;
        java.lang.Object r0, $r6, $r7, $r9, $r10;

        r0 := @parameter0: java.lang.Object;

        z2 := @parameter1: boolean;

        r1 = (java.util.Map) r0;

        $z0 = interfaceinvoke r1.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return "[:]";

     label1:
        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>(java.lang.String)>("[");

        z3 = 1;

        $r3 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label7;

        if z3 == 0 goto label3;

        z3 = 0;

        goto label4;

     label3:
        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

     label4:
        $r6 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (java.util.Map$Entry) $r6;

        $r7 = interfaceinvoke $r12.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r8 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.String format(java.lang.Object,boolean)>($r7, z2);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r9 = interfaceinvoke $r12.<java.util.Map$Entry: java.lang.Object getValue()>();

        if $r9 != r1 goto label5;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("this Map_");

        goto label6;

     label5:
        $r10 = interfaceinvoke $r12.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r11 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.String format(java.lang.Object,boolean)>($r10, z2);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

     label6:
        goto label2;

     label7:
        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r5 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }

    private static java.lang.String formatList(java.lang.Object, boolean)
    {
        java.util.Iterator $r3;
        java.util.List r1;
        java.lang.StringBuffer $r2;
        java.lang.Object r0, $r5;
        java.lang.String $r4, $r6;
        boolean $z0, z1, z2;

        r0 := @parameter0: java.lang.Object;

        z1 := @parameter1: boolean;

        r1 = (java.util.List) r0;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>(java.lang.String)>("[");

        z2 = 1;

        $r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        if z2 == 0 goto label2;

        z2 = 0;

        goto label3;

     label2:
        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

     label3:
        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r6 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.String format(java.lang.Object,boolean)>($r5, z1);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        goto label1;

     label4:
        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }

    public static java.lang.String toTypeString(java.lang.Object[])
    {
        java.lang.Object[] r0;
        java.lang.StringBuffer $r1;
        int $i0, i1;
        java.lang.Object $r3, $r4;
        java.lang.Class $r5;
        java.lang.String $r2, $r6;

        r0 := @parameter0: java.lang.Object[];

        if r0 != null goto label1;

        return "null";

     label1:
        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        i1 = 0;

     label2:
        $i0 = lengthof r0;

        if i1 >= $i0 goto label6;

        if i1 <= 0 goto label3;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

     label3:
        $r3 = r0[i1];

        if $r3 == null goto label4;

        $r4 = r0[i1];

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        goto label5;

     label4:
        $r6 = "null";

     label5:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        i1 = i1 + 1;

        goto label2;

     label6:
        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.String toMapString(java.util.Map)
    {
        java.lang.String $r1;
        java.util.Map r0;

        r0 := @parameter0: java.util.Map;

        $r1 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.String format(java.lang.Object,boolean)>(r0, 1);

        return $r1;
    }

    public static java.lang.String toListString(java.util.Collection)
    {
        java.lang.String $r1;
        java.util.Collection r0;

        r0 := @parameter0: java.util.Collection;

        $r1 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.String format(java.lang.Object,boolean)>(r0, 1);

        return $r1;
    }

    public static java.lang.String toArrayString(java.lang.Object[])
    {
        java.lang.Object[] r0;
        java.lang.StringBuffer $r1;
        int $i0, i1;
        java.lang.Object $r3;
        java.lang.String $r2, $r4;

        r0 := @parameter0: java.lang.Object[];

        if r0 != null goto label1;

        return "null";

     label1:
        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>(java.lang.String)>("{");

        i1 = 0;

     label2:
        $i0 = lengthof r0;

        if i1 >= $i0 goto label4;

        if i1 <= 0 goto label3;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

     label3:
        $r3 = r0[i1];

        $r4 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.String format(java.lang.Object,boolean)>($r3, 1);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        i1 = i1 + 1;

        goto label2;

     label4:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("}");

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    public static java.util.List createRange(java.lang.Object, java.lang.Object, boolean)
    {
        java.lang.Throwable $r3;
        java.lang.Error $r5;
        java.lang.RuntimeException $r4, $r6;
        java.util.List $r2;
        java.lang.Object r0, r1;
        boolean z0;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        z0 := @parameter2: boolean;

     label1:
        $r2 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.util.List createRange(java.lang.Object,java.lang.Object,boolean)>(r0, r1, z0);

     label2:
        return $r2;

     label3:
        $r6 := @caughtexception;

        throw $r6;

     label4:
        $r5 := @caughtexception;

        throw $r5;

     label5:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

        catch java.lang.RuntimeException from label1 to label2 with label3;
        catch java.lang.Error from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label5;
    }

    public static java.lang.Object bitwiseNegate(java.lang.Object)
    {
        java.lang.Object[] $r1;
        long $l0, $l1;
        java.lang.Integer r16, $r18;
        java.util.ArrayList $r4, $r20;
        java.lang.Long r17, $r19;
        int $i2, $i3, $i5;
        java.math.BigInteger $r12, $r13;
        java.lang.String $r8, $r10;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.util.Iterator $r5;
        java.lang.Object r0, $r2, $r6, $r7;
        java.util.regex.Pattern $r9, $r11;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.lang.Integer;

        if $z0 == 0 goto label1;

        r16 = (java.lang.Integer) r0;

        $r18 = new java.lang.Integer;

        $i2 = virtualinvoke r16.<java.lang.Integer: int intValue()>();

        $i5 = (int) -1;

        $i3 = $i2 ^ $i5;

        specialinvoke $r18.<java.lang.Integer: void <init>(int)>($i3);

        return $r18;

     label1:
        $z1 = r0 instanceof java.lang.Long;

        if $z1 == 0 goto label2;

        r17 = (java.lang.Long) r0;

        $r19 = new java.lang.Long;

        $l0 = virtualinvoke r17.<java.lang.Long: long longValue()>();

        $l1 = $l0 ^ -1L;

        specialinvoke $r19.<java.lang.Long: void <init>(long)>($l1);

        return $r19;

     label2:
        $z2 = r0 instanceof java.math.BigInteger;

        if $z2 == 0 goto label3;

        $r12 = (java.math.BigInteger) r0;

        $r13 = virtualinvoke $r12.<java.math.BigInteger: java.math.BigInteger not()>();

        return $r13;

     label3:
        $z3 = r0 instanceof java.lang.String;

        if $z3 == 0 goto label4;

        $r10 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        $r11 = staticinvoke <org.codehaus.groovy.runtime.DefaultGroovyMethods: java.util.regex.Pattern bitwiseNegate(java.lang.String)>($r10);

        return $r11;

     label4:
        $z4 = r0 instanceof groovy.lang.GString;

        if $z4 == 0 goto label5;

        $r8 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        $r9 = staticinvoke <org.codehaus.groovy.runtime.DefaultGroovyMethods: java.util.regex.Pattern bitwiseNegate(java.lang.String)>($r8);

        return $r9;

     label5:
        $z5 = r0 instanceof java.util.ArrayList;

        if $z5 == 0 goto label8;

        $r20 = new java.util.ArrayList;

        specialinvoke $r20.<java.util.ArrayList: void <init>()>();

        $r4 = (java.util.ArrayList) r0;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label6:
        $z6 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label7;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object bitwiseNegate(java.lang.Object)>($r6);

        interfaceinvoke $r20.<java.util.List: boolean add(java.lang.Object)>($r7);

        goto label6;

     label7:
        return $r20;

     label8:
        $r1 = <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object[] EMPTY_ARGS>;

        $r2 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object)>(r0, "bitwiseNegate", $r1);

        return $r2;
    }

    public static groovy.lang.MetaClassRegistry getMetaRegistry()
    {
        groovy.lang.MetaClassRegistry $r0;

        $r0 = <org.codehaus.groovy.runtime.InvokerHelper: groovy.lang.MetaClassRegistry metaRegistry>;

        return $r0;
    }

    public static groovy.lang.MetaClass getMetaClass(java.lang.Object)
    {
        groovy.lang.MetaClass $r3;
        groovy.lang.MetaClassRegistry $r1;
        java.lang.Object r0;
        java.lang.Class $r2;

        r0 := @parameter0: java.lang.Object;

        $r1 = <org.codehaus.groovy.runtime.InvokerHelper: groovy.lang.MetaClassRegistry metaRegistry>;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = interfaceinvoke $r1.<groovy.lang.MetaClassRegistry: groovy.lang.MetaClass getMetaClass(java.lang.Class)>($r2);

        return $r3;
    }

    public static groovy.lang.MetaClass getMetaClass(java.lang.Class)
    {
        groovy.lang.MetaClass $r2;
        java.lang.Class r0;
        groovy.lang.MetaClassRegistry $r1;

        r0 := @parameter0: java.lang.Class;

        $r1 = <org.codehaus.groovy.runtime.InvokerHelper: groovy.lang.MetaClassRegistry metaRegistry>;

        $r2 = interfaceinvoke $r1.<groovy.lang.MetaClassRegistry: groovy.lang.MetaClass getMetaClass(java.lang.Class)>(r0);

        return $r2;
    }

    public static java.lang.Object invokeMethod(java.lang.Object, java.lang.String, java.lang.Object)
    {
        groovy.lang.MetaClass $r6;
        java.lang.Object[] $r7;
        groovy.lang.MetaClassRegistry $r5;
        java.lang.Object r1, $r2, $r3, $r8, r9;
        java.lang.Class r4;
        java.lang.String r0;
        boolean $z0, $z1;

        r9 := @parameter0: java.lang.Object;

        r0 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.Object;

        if r9 != null goto label1;

        r9 = staticinvoke <org.codehaus.groovy.runtime.NullObject: org.codehaus.groovy.runtime.NullObject getNullObject()>();

     label1:
        $z0 = r9 instanceof java.lang.Class;

        if $z0 == 0 goto label2;

        r4 = (java.lang.Class) r9;

        $r5 = <org.codehaus.groovy.runtime.InvokerHelper: groovy.lang.MetaClassRegistry metaRegistry>;

        $r6 = interfaceinvoke $r5.<groovy.lang.MetaClassRegistry: groovy.lang.MetaClass getMetaClass(java.lang.Class)>(r4);

        $r7 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object[] asArray(java.lang.Object)>(r1);

        $r8 = interfaceinvoke $r6.<groovy.lang.MetaClass: java.lang.Object invokeStaticMethod(java.lang.Object,java.lang.String,java.lang.Object[])>(r9, r0, $r7);

        return $r8;

     label2:
        $z1 = r9 instanceof groovy.lang.GroovyObject;

        if $z1 != 0 goto label3;

        $r3 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object invokePojoMethod(java.lang.Object,java.lang.String,java.lang.Object)>(r9, r0, r1);

        return $r3;

     label3:
        $r2 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object invokePogoMethod(java.lang.Object,java.lang.String,java.lang.Object)>(r9, r0, r1);

        return $r2;
    }

    private static java.lang.Object invokePojoMethod(java.lang.Object, java.lang.String, java.lang.Object)
    {
        groovy.lang.MetaClass $r3;
        java.lang.Object[] $r6;
        groovy.lang.MetaClassRegistry $r2;
        java.lang.Object r0, r5, $r7;
        java.lang.Class $r1;
        java.lang.String r4;

        r0 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.Object;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = <org.codehaus.groovy.runtime.InvokerHelper: groovy.lang.MetaClassRegistry metaRegistry>;

        $r3 = interfaceinvoke $r2.<groovy.lang.MetaClassRegistry: groovy.lang.MetaClass getMetaClass(java.lang.Class)>($r1);

        $r6 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object[] asArray(java.lang.Object)>(r5);

        $r7 = interfaceinvoke $r3.<groovy.lang.MetaClass: java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[])>(r0, r4, $r6);

        return $r7;
    }

    private static java.lang.Object invokePogoMethod(java.lang.Object, java.lang.String, java.lang.Object)
    {
        java.lang.Throwable $r15;
        java.lang.Object[] $r5, $r7, $r13;
        groovy.lang.GroovyObject r1;
        java.lang.String r3, $r10;
        boolean z0, $z1, $z2;
        groovy.lang.MetaClass $r2;
        groovy.lang.MissingMethodException $r9, $r16;
        java.lang.Object r0, r4, $r6, $r8, $r14;
        java.lang.Class $r11, $r12;

        r0 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.Object;

        r1 = (groovy.lang.GroovyObject) r0;

        z0 = r1 instanceof groovy.lang.GroovyInterceptable;

     label1:
        if z0 == 0 goto label3;

        $r7 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object[] asUnwrappedArray(java.lang.Object)>(r4);

        $r8 = interfaceinvoke r1.<groovy.lang.GroovyObject: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>(r3, $r7);

     label2:
        return $r8;

     label3:
        $r2 = interfaceinvoke r1.<groovy.lang.GroovyObject: groovy.lang.MetaClass getMetaClass()>();

        $r5 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object[] asArray(java.lang.Object)>(r4);

        $r6 = interfaceinvoke $r2.<groovy.lang.MetaClass: java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[])>(r0, r3, $r5);

     label4:
        return $r6;

     label5:
        $r9 := @caughtexception;

        $z1 = $r9 instanceof org.codehaus.groovy.runtime.metaclass.MissingMethodExecutionFailed;

        if $z1 == 0 goto label6;

        $r15 = virtualinvoke $r9.<groovy.lang.MissingMethodException: java.lang.Throwable getCause()>();

        $r16 = (groovy.lang.MissingMethodException) $r15;

        throw $r16;

     label6:
        if z0 != 0 goto label7;

        $r10 = virtualinvoke $r9.<groovy.lang.MissingMethodException: java.lang.String getMethod()>();

        $z2 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z2 == 0 goto label7;

        $r11 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r12 = virtualinvoke $r9.<groovy.lang.MissingMethodException: java.lang.Class getType()>();

        if $r11 != $r12 goto label7;

        $r13 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object[] asUnwrappedArray(java.lang.Object)>(r4);

        $r14 = interfaceinvoke r1.<groovy.lang.GroovyObject: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>(r3, $r13);

        return $r14;

     label7:
        throw $r9;

        catch groovy.lang.MissingMethodException from label1 to label2 with label5;
        catch groovy.lang.MissingMethodException from label3 to label4 with label5;
    }

    public static java.lang.Object invokeSuperMethod(java.lang.Object, java.lang.String, java.lang.Object)
    {
        groovy.lang.MetaClass $r4;
        java.lang.Object[] $r7;
        java.lang.NullPointerException $r9;
        groovy.lang.MetaClassRegistry $r2;
        java.lang.StringBuffer $r10, $r11, $r12, $r13;
        java.lang.Object r0, r6, $r8;
        java.lang.Class $r1, $r3;
        java.lang.String r5, $r14;

        r0 := @parameter0: java.lang.Object;

        r5 := @parameter1: java.lang.String;

        r6 := @parameter2: java.lang.Object;

        if r0 != null goto label1;

        $r9 = new java.lang.NullPointerException;

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Cannot invoke method ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r5);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("() on null object");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.NullPointerException: void <init>(java.lang.String)>($r14);

        throw $r9;

     label1:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = <org.codehaus.groovy.runtime.InvokerHelper: groovy.lang.MetaClassRegistry metaRegistry>;

        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.Class getSuperclass()>();

        $r4 = interfaceinvoke $r2.<groovy.lang.MetaClassRegistry: groovy.lang.MetaClass getMetaClass(java.lang.Class)>($r3);

        $r7 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object[] asArray(java.lang.Object)>(r6);

        $r8 = interfaceinvoke $r4.<groovy.lang.MetaClass: java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[])>(r0, r5, $r7);

        return $r8;
    }

    public static java.lang.Object invokeStaticMethod(java.lang.Class, java.lang.String, java.lang.Object)
    {
        groovy.lang.MetaClass $r2;
        groovy.lang.MetaClassRegistry $r1;
        java.lang.Object[] $r5;
        java.lang.Class r0;
        java.lang.Object r4, $r6;
        java.lang.String r3;

        r0 := @parameter0: java.lang.Class;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.Object;

        $r1 = <org.codehaus.groovy.runtime.InvokerHelper: groovy.lang.MetaClassRegistry metaRegistry>;

        $r2 = interfaceinvoke $r1.<groovy.lang.MetaClassRegistry: groovy.lang.MetaClass getMetaClass(java.lang.Class)>(r0);

        $r5 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object[] asArray(java.lang.Object)>(r4);

        $r6 = interfaceinvoke $r2.<groovy.lang.MetaClass: java.lang.Object invokeStaticMethod(java.lang.Object,java.lang.String,java.lang.Object[])>(r0, r3, $r5);

        return $r6;
    }

    public static java.lang.Object invokeConstructorOf(java.lang.Class, java.lang.Object)
    {
        groovy.lang.MetaClass $r2;
        groovy.lang.MetaClassRegistry $r1;
        java.lang.Object[] $r4;
        java.lang.Class r0;
        java.lang.Object r3, $r5;

        r0 := @parameter0: java.lang.Class;

        r3 := @parameter1: java.lang.Object;

        $r1 = <org.codehaus.groovy.runtime.InvokerHelper: groovy.lang.MetaClassRegistry metaRegistry>;

        $r2 = interfaceinvoke $r1.<groovy.lang.MetaClassRegistry: groovy.lang.MetaClass getMetaClass(java.lang.Class)>(r0);

        $r4 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object[] asArray(java.lang.Object)>(r3);

        $r5 = interfaceinvoke $r2.<groovy.lang.MetaClass: java.lang.Object invokeConstructor(java.lang.Object[])>($r4);

        return $r5;
    }

    public static java.lang.Object[] asArray(java.lang.Object)
    {
        java.lang.Object[] $r1, $r2, $r3, $r4;
        java.lang.Object r0;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        $r4 = <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object[] EMPTY_ARGUMENTS>;

        return $r4;

     label1:
        $z0 = r0 instanceof java.lang.Object[];

        if $z0 == 0 goto label2;

        $r2 = (java.lang.Object[]) r0;

        $r3 = (java.lang.Object[]) $r2;

        return $r3;

     label2:
        $r1 = newarray (java.lang.Object)[1];

        $r1[0] = r0;

        return $r1;
    }

    public static java.lang.Object[] asUnwrappedArray(java.lang.Object)
    {
        java.lang.Object[] $r1;
        org.codehaus.groovy.runtime.wrappers.PojoWrapper $r4;
        int $i0, i1;
        java.lang.Object r0, $r2, $r3, $r5;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        $r1 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object[] asArray(java.lang.Object)>(r0);

        i1 = 0;

     label1:
        $i0 = lengthof $r1;

        if i1 >= $i0 goto label3;

        $r2 = $r1[i1];

        $z0 = $r2 instanceof org.codehaus.groovy.runtime.wrappers.PojoWrapper;

        if $z0 == 0 goto label2;

        $r3 = $r1[i1];

        $r4 = (org.codehaus.groovy.runtime.wrappers.PojoWrapper) $r3;

        $r5 = virtualinvoke $r4.<org.codehaus.groovy.runtime.wrappers.PojoWrapper: java.lang.Object unwrap()>();

        $r1[i1] = $r5;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return $r1;
    }

    static java.lang.Object[] access$000()
    {
        java.lang.Object[] $r0;

        $r0 = <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object[] EMPTY_MAIN_ARGS>;

        return $r0;
    }

    static void <clinit>()
    {
        java.lang.Object[] $r0, $r2, $r3;
        groovy.lang.MetaClassRegistry $r5;
        org.codehaus.groovy.runtime.Invoker $r6;
        java.lang.Class[] $r4;
        java.lang.String[] $r1;

        $r0 = newarray (java.lang.Object)[1];

        $r1 = newarray (java.lang.String)[0];

        $r0[0] = $r1;

        <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object[] EMPTY_MAIN_ARGS> = $r0;

        $r2 = newarray (java.lang.Object)[0];

        <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object[] EMPTY_ARGS> = $r2;

        $r3 = <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object[] EMPTY_ARGS>;

        <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object[] EMPTY_ARGUMENTS> = $r3;

        $r4 = newarray (java.lang.Class)[0];

        <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Class[] EMPTY_TYPES> = $r4;

        $r5 = staticinvoke <groovy.lang.GroovySystem: groovy.lang.MetaClassRegistry getMetaClassRegistry()>();

        <org.codehaus.groovy.runtime.InvokerHelper: groovy.lang.MetaClassRegistry metaRegistry> = $r5;

        $r6 = new org.codehaus.groovy.runtime.Invoker;

        specialinvoke $r6.<org.codehaus.groovy.runtime.Invoker: void <init>()>();

        <org.codehaus.groovy.runtime.InvokerHelper: org.codehaus.groovy.runtime.Invoker SINGLETON> = $r6;

        return;
    }
}
