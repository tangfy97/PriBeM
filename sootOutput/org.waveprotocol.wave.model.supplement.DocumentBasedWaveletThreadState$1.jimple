class org.waveprotocol.wave.model.supplement.DocumentBasedWaveletThreadState$1 extends java.lang.Object implements org.waveprotocol.wave.model.adt.ObservableBasicMap$Listener
{
    final org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement$Listener val$listener;
    final org.waveprotocol.wave.model.id.WaveletId val$wid;
    final org.waveprotocol.wave.model.supplement.DocumentBasedWaveletThreadState this$0;

    void <init>(org.waveprotocol.wave.model.supplement.DocumentBasedWaveletThreadState, org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement$Listener, org.waveprotocol.wave.model.id.WaveletId)
    {
        org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement$Listener r2;
        org.waveprotocol.wave.model.supplement.DocumentBasedWaveletThreadState$1 r0;
        org.waveprotocol.wave.model.supplement.DocumentBasedWaveletThreadState r1;
        org.waveprotocol.wave.model.id.WaveletId r3;

        r0 := @this: org.waveprotocol.wave.model.supplement.DocumentBasedWaveletThreadState$1;

        r1 := @parameter0: org.waveprotocol.wave.model.supplement.DocumentBasedWaveletThreadState;

        r2 := @parameter1: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement$Listener;

        r3 := @parameter2: org.waveprotocol.wave.model.id.WaveletId;

        r0.<org.waveprotocol.wave.model.supplement.DocumentBasedWaveletThreadState$1: org.waveprotocol.wave.model.supplement.DocumentBasedWaveletThreadState this$0> = r1;

        r0.<org.waveprotocol.wave.model.supplement.DocumentBasedWaveletThreadState$1: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement$Listener val$listener> = r2;

        r0.<org.waveprotocol.wave.model.supplement.DocumentBasedWaveletThreadState$1: org.waveprotocol.wave.model.id.WaveletId val$wid> = r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onEntrySet(java.lang.String, org.waveprotocol.wave.model.supplement.ThreadState, org.waveprotocol.wave.model.supplement.ThreadState)
    {
        org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement$Listener $r5;
        org.waveprotocol.wave.model.supplement.DocumentBasedWaveletThreadState$1 r0;
        org.waveprotocol.wave.model.id.WaveletId $r4;
        java.lang.String r1;
        org.waveprotocol.wave.model.supplement.ThreadState r2, r3;

        r0 := @this: org.waveprotocol.wave.model.supplement.DocumentBasedWaveletThreadState$1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.waveprotocol.wave.model.supplement.ThreadState;

        r3 := @parameter2: org.waveprotocol.wave.model.supplement.ThreadState;

        $r5 = r0.<org.waveprotocol.wave.model.supplement.DocumentBasedWaveletThreadState$1: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement$Listener val$listener>;

        $r4 = r0.<org.waveprotocol.wave.model.supplement.DocumentBasedWaveletThreadState$1: org.waveprotocol.wave.model.id.WaveletId val$wid>;

        interfaceinvoke $r5.<org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement$Listener: void onThreadStateChanged(org.waveprotocol.wave.model.id.WaveletId,java.lang.String,org.waveprotocol.wave.model.supplement.ThreadState,org.waveprotocol.wave.model.supplement.ThreadState)>($r4, r1, r2, r3);

        return;
    }

    public volatile void onEntrySet(java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.waveprotocol.wave.model.supplement.DocumentBasedWaveletThreadState$1 r0;
        java.lang.Object r1, r2, r3;
        java.lang.String $r6;
        org.waveprotocol.wave.model.supplement.ThreadState $r4, $r5;

        r0 := @this: org.waveprotocol.wave.model.supplement.DocumentBasedWaveletThreadState$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        $r6 = (java.lang.String) r1;

        $r5 = (org.waveprotocol.wave.model.supplement.ThreadState) r2;

        $r4 = (org.waveprotocol.wave.model.supplement.ThreadState) r3;

        virtualinvoke r0.<org.waveprotocol.wave.model.supplement.DocumentBasedWaveletThreadState$1: void onEntrySet(java.lang.String,org.waveprotocol.wave.model.supplement.ThreadState,org.waveprotocol.wave.model.supplement.ThreadState)>($r6, $r5, $r4);

        return;
    }
}
