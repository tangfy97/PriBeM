public class org.springframework.web.bind.support.ConfigurableWebBindingInitializer extends java.lang.Object implements org.springframework.web.bind.support.WebBindingInitializer
{
    private boolean autoGrowNestedPaths;
    private boolean directFieldAccess;
    private org.springframework.validation.MessageCodesResolver messageCodesResolver;
    private org.springframework.validation.BindingErrorProcessor bindingErrorProcessor;
    private org.springframework.validation.Validator validator;
    private org.springframework.core.convert.ConversionService conversionService;
    private org.springframework.beans.PropertyEditorRegistrar[] propertyEditorRegistrars;

    public void <init>()
    {
        org.springframework.web.bind.support.ConfigurableWebBindingInitializer r0;

        r0 := @this: org.springframework.web.bind.support.ConfigurableWebBindingInitializer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.springframework.web.bind.support.ConfigurableWebBindingInitializer: boolean autoGrowNestedPaths> = 1;

        r0.<org.springframework.web.bind.support.ConfigurableWebBindingInitializer: boolean directFieldAccess> = 0;

        return;
    }

    public void setAutoGrowNestedPaths(boolean)
    {
        org.springframework.web.bind.support.ConfigurableWebBindingInitializer r0;
        boolean z0;

        r0 := @this: org.springframework.web.bind.support.ConfigurableWebBindingInitializer;

        z0 := @parameter0: boolean;

        r0.<org.springframework.web.bind.support.ConfigurableWebBindingInitializer: boolean autoGrowNestedPaths> = z0;

        return;
    }

    public boolean isAutoGrowNestedPaths()
    {
        org.springframework.web.bind.support.ConfigurableWebBindingInitializer r0;
        boolean $z0;

        r0 := @this: org.springframework.web.bind.support.ConfigurableWebBindingInitializer;

        $z0 = r0.<org.springframework.web.bind.support.ConfigurableWebBindingInitializer: boolean autoGrowNestedPaths>;

        return $z0;
    }

    public final void setDirectFieldAccess(boolean)
    {
        org.springframework.web.bind.support.ConfigurableWebBindingInitializer r0;
        boolean z0;

        r0 := @this: org.springframework.web.bind.support.ConfigurableWebBindingInitializer;

        z0 := @parameter0: boolean;

        r0.<org.springframework.web.bind.support.ConfigurableWebBindingInitializer: boolean directFieldAccess> = z0;

        return;
    }

    public boolean isDirectFieldAccess()
    {
        org.springframework.web.bind.support.ConfigurableWebBindingInitializer r0;
        boolean $z0;

        r0 := @this: org.springframework.web.bind.support.ConfigurableWebBindingInitializer;

        $z0 = r0.<org.springframework.web.bind.support.ConfigurableWebBindingInitializer: boolean directFieldAccess>;

        return $z0;
    }

    public final void setMessageCodesResolver(org.springframework.validation.MessageCodesResolver)
    {
        org.springframework.validation.MessageCodesResolver r1;
        org.springframework.web.bind.support.ConfigurableWebBindingInitializer r0;

        r0 := @this: org.springframework.web.bind.support.ConfigurableWebBindingInitializer;

        r1 := @parameter0: org.springframework.validation.MessageCodesResolver;

        r0.<org.springframework.web.bind.support.ConfigurableWebBindingInitializer: org.springframework.validation.MessageCodesResolver messageCodesResolver> = r1;

        return;
    }

    public final org.springframework.validation.MessageCodesResolver getMessageCodesResolver()
    {
        org.springframework.validation.MessageCodesResolver $r1;
        org.springframework.web.bind.support.ConfigurableWebBindingInitializer r0;

        r0 := @this: org.springframework.web.bind.support.ConfigurableWebBindingInitializer;

        $r1 = r0.<org.springframework.web.bind.support.ConfigurableWebBindingInitializer: org.springframework.validation.MessageCodesResolver messageCodesResolver>;

        return $r1;
    }

    public final void setBindingErrorProcessor(org.springframework.validation.BindingErrorProcessor)
    {
        org.springframework.validation.BindingErrorProcessor r1;
        org.springframework.web.bind.support.ConfigurableWebBindingInitializer r0;

        r0 := @this: org.springframework.web.bind.support.ConfigurableWebBindingInitializer;

        r1 := @parameter0: org.springframework.validation.BindingErrorProcessor;

        r0.<org.springframework.web.bind.support.ConfigurableWebBindingInitializer: org.springframework.validation.BindingErrorProcessor bindingErrorProcessor> = r1;

        return;
    }

    public final org.springframework.validation.BindingErrorProcessor getBindingErrorProcessor()
    {
        org.springframework.validation.BindingErrorProcessor $r1;
        org.springframework.web.bind.support.ConfigurableWebBindingInitializer r0;

        r0 := @this: org.springframework.web.bind.support.ConfigurableWebBindingInitializer;

        $r1 = r0.<org.springframework.web.bind.support.ConfigurableWebBindingInitializer: org.springframework.validation.BindingErrorProcessor bindingErrorProcessor>;

        return $r1;
    }

    public final void setValidator(org.springframework.validation.Validator)
    {
        org.springframework.validation.Validator r1;
        org.springframework.web.bind.support.ConfigurableWebBindingInitializer r0;

        r0 := @this: org.springframework.web.bind.support.ConfigurableWebBindingInitializer;

        r1 := @parameter0: org.springframework.validation.Validator;

        r0.<org.springframework.web.bind.support.ConfigurableWebBindingInitializer: org.springframework.validation.Validator validator> = r1;

        return;
    }

    public final org.springframework.validation.Validator getValidator()
    {
        org.springframework.validation.Validator $r1;
        org.springframework.web.bind.support.ConfigurableWebBindingInitializer r0;

        r0 := @this: org.springframework.web.bind.support.ConfigurableWebBindingInitializer;

        $r1 = r0.<org.springframework.web.bind.support.ConfigurableWebBindingInitializer: org.springframework.validation.Validator validator>;

        return $r1;
    }

    public final void setConversionService(org.springframework.core.convert.ConversionService)
    {
        org.springframework.core.convert.ConversionService r1;
        org.springframework.web.bind.support.ConfigurableWebBindingInitializer r0;

        r0 := @this: org.springframework.web.bind.support.ConfigurableWebBindingInitializer;

        r1 := @parameter0: org.springframework.core.convert.ConversionService;

        r0.<org.springframework.web.bind.support.ConfigurableWebBindingInitializer: org.springframework.core.convert.ConversionService conversionService> = r1;

        return;
    }

    public final org.springframework.core.convert.ConversionService getConversionService()
    {
        org.springframework.core.convert.ConversionService $r1;
        org.springframework.web.bind.support.ConfigurableWebBindingInitializer r0;

        r0 := @this: org.springframework.web.bind.support.ConfigurableWebBindingInitializer;

        $r1 = r0.<org.springframework.web.bind.support.ConfigurableWebBindingInitializer: org.springframework.core.convert.ConversionService conversionService>;

        return $r1;
    }

    public final void setPropertyEditorRegistrar(org.springframework.beans.PropertyEditorRegistrar)
    {
        org.springframework.beans.PropertyEditorRegistrar[] $r1;
        org.springframework.beans.PropertyEditorRegistrar r2;
        org.springframework.web.bind.support.ConfigurableWebBindingInitializer r0;

        r0 := @this: org.springframework.web.bind.support.ConfigurableWebBindingInitializer;

        r2 := @parameter0: org.springframework.beans.PropertyEditorRegistrar;

        $r1 = newarray (org.springframework.beans.PropertyEditorRegistrar)[1];

        $r1[0] = r2;

        r0.<org.springframework.web.bind.support.ConfigurableWebBindingInitializer: org.springframework.beans.PropertyEditorRegistrar[] propertyEditorRegistrars> = $r1;

        return;
    }

    public final void setPropertyEditorRegistrars(org.springframework.beans.PropertyEditorRegistrar[])
    {
        org.springframework.beans.PropertyEditorRegistrar[] r1;
        org.springframework.web.bind.support.ConfigurableWebBindingInitializer r0;

        r0 := @this: org.springframework.web.bind.support.ConfigurableWebBindingInitializer;

        r1 := @parameter0: org.springframework.beans.PropertyEditorRegistrar[];

        r0.<org.springframework.web.bind.support.ConfigurableWebBindingInitializer: org.springframework.beans.PropertyEditorRegistrar[] propertyEditorRegistrars> = r1;

        return;
    }

    public final org.springframework.beans.PropertyEditorRegistrar[] getPropertyEditorRegistrars()
    {
        org.springframework.beans.PropertyEditorRegistrar[] $r1;
        org.springframework.web.bind.support.ConfigurableWebBindingInitializer r0;

        r0 := @this: org.springframework.web.bind.support.ConfigurableWebBindingInitializer;

        $r1 = r0.<org.springframework.web.bind.support.ConfigurableWebBindingInitializer: org.springframework.beans.PropertyEditorRegistrar[] propertyEditorRegistrars>;

        return $r1;
    }

    public void initBinder(org.springframework.web.bind.WebDataBinder, org.springframework.web.context.request.WebRequest)
    {
        org.springframework.validation.Validator $r4, $r10, $r13;
        org.springframework.web.context.request.WebRequest r16;
        org.springframework.validation.BindingErrorProcessor $r3, $r14;
        int i0, i1;
        org.springframework.validation.MessageCodesResolver $r2, $r15;
        org.springframework.beans.PropertyEditorRegistrar r7;
        org.springframework.core.convert.ConversionService $r8, $r17;
        boolean $z0, $z1, $z2;
        org.springframework.web.bind.support.ConfigurableWebBindingInitializer r1;
        org.springframework.beans.PropertyEditorRegistrar[] $r5, $r6;
        org.springframework.web.bind.WebDataBinder r0;
        java.lang.Object $r9, $r11;
        java.lang.Class $r12;

        r1 := @this: org.springframework.web.bind.support.ConfigurableWebBindingInitializer;

        r0 := @parameter0: org.springframework.web.bind.WebDataBinder;

        r16 := @parameter1: org.springframework.web.context.request.WebRequest;

        $z0 = r1.<org.springframework.web.bind.support.ConfigurableWebBindingInitializer: boolean autoGrowNestedPaths>;

        virtualinvoke r0.<org.springframework.web.bind.WebDataBinder: void setAutoGrowNestedPaths(boolean)>($z0);

        $z1 = r1.<org.springframework.web.bind.support.ConfigurableWebBindingInitializer: boolean directFieldAccess>;

        if $z1 == 0 goto label1;

        virtualinvoke r0.<org.springframework.web.bind.WebDataBinder: void initDirectFieldAccess()>();

     label1:
        $r2 = r1.<org.springframework.web.bind.support.ConfigurableWebBindingInitializer: org.springframework.validation.MessageCodesResolver messageCodesResolver>;

        if $r2 == null goto label2;

        $r15 = r1.<org.springframework.web.bind.support.ConfigurableWebBindingInitializer: org.springframework.validation.MessageCodesResolver messageCodesResolver>;

        virtualinvoke r0.<org.springframework.web.bind.WebDataBinder: void setMessageCodesResolver(org.springframework.validation.MessageCodesResolver)>($r15);

     label2:
        $r3 = r1.<org.springframework.web.bind.support.ConfigurableWebBindingInitializer: org.springframework.validation.BindingErrorProcessor bindingErrorProcessor>;

        if $r3 == null goto label3;

        $r14 = r1.<org.springframework.web.bind.support.ConfigurableWebBindingInitializer: org.springframework.validation.BindingErrorProcessor bindingErrorProcessor>;

        virtualinvoke r0.<org.springframework.web.bind.WebDataBinder: void setBindingErrorProcessor(org.springframework.validation.BindingErrorProcessor)>($r14);

     label3:
        $r4 = r1.<org.springframework.web.bind.support.ConfigurableWebBindingInitializer: org.springframework.validation.Validator validator>;

        if $r4 == null goto label4;

        $r9 = virtualinvoke r0.<org.springframework.web.bind.WebDataBinder: java.lang.Object getTarget()>();

        if $r9 == null goto label4;

        $r10 = r1.<org.springframework.web.bind.support.ConfigurableWebBindingInitializer: org.springframework.validation.Validator validator>;

        $r11 = virtualinvoke r0.<org.springframework.web.bind.WebDataBinder: java.lang.Object getTarget()>();

        $r12 = virtualinvoke $r11.<java.lang.Object: java.lang.Class getClass()>();

        $z2 = interfaceinvoke $r10.<org.springframework.validation.Validator: boolean supports(java.lang.Class)>($r12);

        if $z2 == 0 goto label4;

        $r13 = r1.<org.springframework.web.bind.support.ConfigurableWebBindingInitializer: org.springframework.validation.Validator validator>;

        virtualinvoke r0.<org.springframework.web.bind.WebDataBinder: void setValidator(org.springframework.validation.Validator)>($r13);

     label4:
        $r17 = r1.<org.springframework.web.bind.support.ConfigurableWebBindingInitializer: org.springframework.core.convert.ConversionService conversionService>;

        if $r17 == null goto label5;

        $r8 = r1.<org.springframework.web.bind.support.ConfigurableWebBindingInitializer: org.springframework.core.convert.ConversionService conversionService>;

        virtualinvoke r0.<org.springframework.web.bind.WebDataBinder: void setConversionService(org.springframework.core.convert.ConversionService)>($r8);

     label5:
        $r5 = r1.<org.springframework.web.bind.support.ConfigurableWebBindingInitializer: org.springframework.beans.PropertyEditorRegistrar[] propertyEditorRegistrars>;

        if $r5 == null goto label8;

        $r6 = r1.<org.springframework.web.bind.support.ConfigurableWebBindingInitializer: org.springframework.beans.PropertyEditorRegistrar[] propertyEditorRegistrars>;

        i0 = lengthof $r6;

        i1 = 0;

        goto label7;

     label6:
        r7 = $r6[i1];

        interfaceinvoke r7.<org.springframework.beans.PropertyEditorRegistrar: void registerCustomEditors(org.springframework.beans.PropertyEditorRegistry)>(r0);

        i1 = i1 + 1;

     label7:
        if i1 < i0 goto label6;

     label8:
        return;
    }
}
