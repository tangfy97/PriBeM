class com.google.gxp.compiler.reparent.Reparenter$ElementVisitor extends java.lang.Object implements com.google.gxp.compiler.parser.ParsedElementVisitor
{
    private final com.google.gxp.compiler.reparent.EditableParts output;
    private final com.google.gxp.compiler.reparent.Parts nodeParts;
    private final com.google.gxp.compiler.alerts.AlertSink alertSink;
    final com.google.gxp.compiler.reparent.Reparenter this$0;

    void <init>(com.google.gxp.compiler.reparent.Reparenter, com.google.gxp.compiler.reparent.EditableParts, com.google.gxp.compiler.reparent.Parts, com.google.gxp.compiler.alerts.AlertSink)
    {
        com.google.gxp.compiler.reparent.Parts r5, $r7;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r0;
        com.google.gxp.compiler.reparent.Reparenter r1;
        com.google.gxp.compiler.alerts.AlertSink r8, $r10;
        java.lang.Object $r3, $r6, $r9;
        com.google.gxp.compiler.reparent.EditableParts r2, $r4;

        r0 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r1 := @parameter0: com.google.gxp.compiler.reparent.Reparenter;

        r2 := @parameter1: com.google.gxp.compiler.reparent.EditableParts;

        r5 := @parameter2: com.google.gxp.compiler.reparent.Parts;

        r8 := @parameter3: com.google.gxp.compiler.alerts.AlertSink;

        r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.Reparenter this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = staticinvoke <com.google.gxp.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r4 = (com.google.gxp.compiler.reparent.EditableParts) $r3;

        r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.EditableParts output> = $r4;

        $r6 = staticinvoke <com.google.gxp.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r5);

        $r7 = (com.google.gxp.compiler.reparent.Parts) $r6;

        r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.Parts nodeParts> = $r7;

        $r9 = staticinvoke <com.google.gxp.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r8);

        $r10 = (com.google.gxp.compiler.alerts.AlertSink) $r9;

        r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.alerts.AlertSink alertSink> = $r10;

        return;
    }

    private com.google.gxp.compiler.base.SpaceOperator parseSpaceOperator(com.google.gxp.compiler.reparent.AttributeMap, com.google.gxp.compiler.parser.Namespace, java.lang.String)
    {
        com.google.gxp.compiler.alerts.common.InvalidAttributeValueError $r8;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r7;
        com.google.gxp.compiler.reparent.AttributeMap r0;
        com.google.gxp.compiler.parser.Namespace r1;
        com.google.gxp.compiler.reparent.Attribute $r10;
        com.google.gxp.compiler.alerts.AlertSink $r9;
        java.lang.String r2, $r3, $r4, $r5;
        com.google.gxp.compiler.base.SpaceOperator $r6;

        r7 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r0 := @parameter0: com.google.gxp.compiler.reparent.AttributeMap;

        r1 := @parameter1: com.google.gxp.compiler.parser.Namespace;

        r2 := @parameter2: java.lang.String;

        $r3 = virtualinvoke r0.<com.google.gxp.compiler.reparent.AttributeMap: java.lang.String getOptional(com.google.gxp.compiler.parser.Namespace,java.lang.String,java.lang.String)>(r1, r2, null);

        if $r3 == null goto label2;

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String toUpperCase()>();

        $r6 = staticinvoke <com.google.gxp.compiler.base.SpaceOperator: com.google.gxp.compiler.base.SpaceOperator valueOf(java.lang.String)>($r5);

        if $r6 != null goto label1;

        $r9 = r7.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r8 = new com.google.gxp.compiler.alerts.common.InvalidAttributeValueError;

        $r10 = virtualinvoke r0.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.reparent.Attribute getAttribute(com.google.gxp.compiler.parser.Namespace,java.lang.String)>(r1, r2);

        specialinvoke $r8.<com.google.gxp.compiler.alerts.common.InvalidAttributeValueError: void <init>(com.google.gxp.compiler.base.Node)>($r10);

        interfaceinvoke $r9.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r8);

     label1:
        return $r6;

     label2:
        return null;
    }

    private com.google.gxp.compiler.base.SpaceOperatorSet getSpaceOperators(com.google.gxp.compiler.reparent.AttributeMap)
    {
        com.google.gxp.compiler.base.SpaceOperatorSet $r6;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r0;
        com.google.gxp.compiler.reparent.AttributeMap r1;
        com.google.gxp.compiler.parser.Namespace $r2, $r4;
        com.google.gxp.compiler.base.SpaceOperator $r3, $r5;

        r0 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r1 := @parameter0: com.google.gxp.compiler.reparent.AttributeMap;

        $r2 = <com.google.gxp.compiler.parser.GxpNamespace: com.google.gxp.compiler.parser.Namespace INSTANCE>;

        $r3 = specialinvoke r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.base.SpaceOperator parseSpaceOperator(com.google.gxp.compiler.reparent.AttributeMap,com.google.gxp.compiler.parser.Namespace,java.lang.String)>(r1, $r2, "ispace");

        $r4 = <com.google.gxp.compiler.parser.GxpNamespace: com.google.gxp.compiler.parser.Namespace INSTANCE>;

        $r5 = specialinvoke r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.base.SpaceOperator parseSpaceOperator(com.google.gxp.compiler.reparent.AttributeMap,com.google.gxp.compiler.parser.Namespace,java.lang.String)>(r1, $r4, "espace");

        $r6 = new com.google.gxp.compiler.base.SpaceOperatorSet;

        specialinvoke $r6.<com.google.gxp.compiler.base.SpaceOperatorSet: void <init>(com.google.gxp.compiler.base.SpaceOperator,com.google.gxp.compiler.base.SpaceOperator)>($r3, $r5);

        return $r6;
    }

    private transient java.util.List getJavaAnnotations(com.google.gxp.compiler.base.Node, com.google.gxp.compiler.base.JavaAnnotation$Element, com.google.gxp.compiler.base.JavaAnnotation$Element[])
    {
        com.google.gxp.compiler.parser.OutputLanguageNamespace $r10;
        com.google.gxp.compiler.base.JavaAnnotation$Element r2, $r17, $r18;
        com.google.gxp.compiler.base.Expression $r12;
        com.google.gxp.compiler.reparent.Parts $r5, $r8;
        java.util.ArrayList $r1, $r3;
        com.google.gxp.compiler.reparent.AttributeMap $r9;
        com.google.gxp.compiler.alerts.AlertSink $r13, $r20;
        com.google.gxp.compiler.base.Node r22;
        java.lang.String $r14;
        boolean $z0, $z1;
        java.util.Iterator $r7;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r4;
        com.google.gxp.compiler.base.JavaAnnotation $r15, $r21, r23;
        com.google.gxp.compiler.reparent.Attribute $r11;
        java.util.List $r6;
        com.google.gxp.compiler.base.JavaAnnotation$Element[] r0;
        java.lang.Object $r16;
        com.google.gxp.compiler.reparent.MisplacedJavaAnnotationError $r19;

        r4 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r22 := @parameter0: com.google.gxp.compiler.base.Node;

        r2 := @parameter1: com.google.gxp.compiler.base.JavaAnnotation$Element;

        r0 := @parameter2: com.google.gxp.compiler.base.JavaAnnotation$Element[];

        $r1 = staticinvoke <com.google.gxp.com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>(r0);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>(r2);

        $r3 = staticinvoke <com.google.gxp.com.google.common.collect.Lists: java.util.ArrayList newArrayList()>();

        $r5 = r4.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.Parts nodeParts>;

        $r6 = interfaceinvoke $r5.<com.google.gxp.compiler.reparent.Parts: java.util.List getJavaAnnotations()>();

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r16 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r23 = (com.google.gxp.compiler.base.JavaAnnotation) $r16;

        $r17 = virtualinvoke r23.<com.google.gxp.compiler.base.JavaAnnotation: com.google.gxp.compiler.base.JavaAnnotation$Element getElement()>();

        if $r17 != null goto label2;

        $r21 = virtualinvoke r23.<com.google.gxp.compiler.base.JavaAnnotation: com.google.gxp.compiler.base.JavaAnnotation withElement(com.google.gxp.compiler.base.JavaAnnotation$Element)>(r2);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r21);

        goto label4;

     label2:
        $r18 = virtualinvoke r23.<com.google.gxp.compiler.base.JavaAnnotation: com.google.gxp.compiler.base.JavaAnnotation$Element getElement()>();

        $z1 = interfaceinvoke $r1.<java.util.List: boolean contains(java.lang.Object)>($r18);

        if $z1 == 0 goto label3;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r23);

        goto label4;

     label3:
        $r20 = r4.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r19 = new com.google.gxp.compiler.reparent.MisplacedJavaAnnotationError;

        specialinvoke $r19.<com.google.gxp.compiler.reparent.MisplacedJavaAnnotationError: void <init>(com.google.gxp.compiler.base.JavaAnnotation)>(r23);

        interfaceinvoke $r20.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r19);

     label4:
        goto label1;

     label5:
        $r8 = r4.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.Parts nodeParts>;

        $r9 = interfaceinvoke $r8.<com.google.gxp.compiler.reparent.Parts: com.google.gxp.compiler.reparent.AttributeMap getAttributes()>();

        $r10 = <com.google.gxp.compiler.parser.JavaNamespace: com.google.gxp.compiler.parser.OutputLanguageNamespace INSTANCE>;

        $r11 = virtualinvoke $r9.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.reparent.Attribute getAttribute(com.google.gxp.compiler.parser.Namespace,java.lang.String)>($r10, "annotate");

        if $r11 == null goto label6;

        $r12 = virtualinvoke $r11.<com.google.gxp.compiler.reparent.Attribute: com.google.gxp.compiler.base.Expression getValue()>();

        $r13 = r4.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r14 = virtualinvoke $r12.<com.google.gxp.compiler.base.Expression: java.lang.String getStaticString(com.google.gxp.compiler.alerts.AlertSink,java.lang.String)>($r13, "");

        $r15 = new com.google.gxp.compiler.base.JavaAnnotation;

        specialinvoke $r15.<com.google.gxp.compiler.base.JavaAnnotation: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.base.JavaAnnotation$Element,java.lang.String)>($r11, r2, $r14);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r15);

     label6:
        return $r3;
    }

    private com.google.gxp.compiler.base.Expression getCollapsableContent(com.google.gxp.compiler.reparent.AttributeMap)
    {
        com.google.gxp.compiler.base.Expression $r2;
        com.google.gxp.compiler.base.CollapseExpression $r5;
        com.google.gxp.compiler.base.SpaceOperatorSet $r4;
        com.google.gxp.compiler.reparent.Parts $r1;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r0;
        com.google.gxp.compiler.reparent.AttributeMap r3;

        r0 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r3 := @parameter0: com.google.gxp.compiler.reparent.AttributeMap;

        $r1 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.Parts nodeParts>;

        $r2 = interfaceinvoke $r1.<com.google.gxp.compiler.reparent.Parts: com.google.gxp.compiler.base.Expression getContent()>();

        $r4 = specialinvoke r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.base.SpaceOperatorSet getSpaceOperators(com.google.gxp.compiler.reparent.AttributeMap)>(r3);

        $r5 = staticinvoke <com.google.gxp.compiler.base.CollapseExpression: com.google.gxp.compiler.base.CollapseExpression create(com.google.gxp.compiler.base.Expression,com.google.gxp.compiler.base.SpaceOperatorSet)>($r2, $r4);

        return $r5;
    }

    public java.lang.Void visitAttrElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)
    {
        com.google.gxp.compiler.base.Expression $r5, $r6;
        com.google.gxp.compiler.reparent.Parts $r1;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r0;
        com.google.gxp.compiler.base.ConvertibleToContent $r4;
        com.google.gxp.compiler.reparent.AttributeMap $r2;
        com.google.gxp.compiler.reparent.Attribute $r7;
        java.lang.String $r3;
        com.google.gxp.compiler.parser.GxpNamespace$GxpElement r8;
        com.google.gxp.compiler.reparent.EditableParts $r9;

        r0 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r8 := @parameter0: com.google.gxp.compiler.parser.GxpNamespace$GxpElement;

        $r1 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.Parts nodeParts>;

        $r2 = interfaceinvoke $r1.<com.google.gxp.compiler.reparent.Parts: com.google.gxp.compiler.reparent.AttributeMap getAttributes()>();

        $r3 = virtualinvoke $r2.<com.google.gxp.compiler.reparent.AttributeMap: java.lang.String get(java.lang.String,java.lang.String)>("name", null);

        if $r3 == null goto label1;

        $r4 = new com.google.gxp.compiler.base.ConvertibleToContent;

        $r5 = specialinvoke r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.base.Expression getCollapsableContent(com.google.gxp.compiler.reparent.AttributeMap)>($r2);

        specialinvoke $r4.<com.google.gxp.compiler.base.ConvertibleToContent: void <init>(com.google.gxp.compiler.base.Expression)>($r5);

        $r6 = virtualinvoke $r2.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.base.Expression getOptionalExprValue(java.lang.String,com.google.gxp.compiler.base.Expression)>("cond", null);

        $r9 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.EditableParts output>;

        $r7 = new com.google.gxp.compiler.reparent.Attribute;

        specialinvoke $r7.<com.google.gxp.compiler.reparent.Attribute: void <init>(com.google.gxp.compiler.base.Node,java.lang.String,com.google.gxp.compiler.base.Expression,com.google.gxp.compiler.base.Expression)>(r8, $r3, $r4, $r6);

        virtualinvoke $r9.<com.google.gxp.compiler.reparent.EditableParts: void accumulate(com.google.gxp.compiler.reparent.Attribute)>($r7);

     label1:
        return null;
    }

    public java.lang.Void visitEvalElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)
    {
        com.google.gxp.compiler.base.NativeExpression $r7;
        com.google.gxp.compiler.alerts.common.MissingAttributeError $r10;
        com.google.gxp.compiler.base.MultiLanguageAttrValue $r3;
        com.google.gxp.compiler.reparent.Parts $r1;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r0;
        com.google.gxp.compiler.reparent.AttributeMap $r2;
        com.google.gxp.compiler.parser.Namespace $r5;
        com.google.gxp.compiler.alerts.AlertSink $r11;
        java.lang.String $r4, $r6;
        com.google.gxp.compiler.parser.GxpNamespace$GxpElement r8;
        com.google.gxp.compiler.reparent.EditableParts $r9;
        boolean $z0;

        r0 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r8 := @parameter0: com.google.gxp.compiler.parser.GxpNamespace$GxpElement;

        $r1 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.Parts nodeParts>;

        $r2 = interfaceinvoke $r1.<com.google.gxp.compiler.reparent.Parts: com.google.gxp.compiler.reparent.AttributeMap getAttributes()>();

        $r3 = virtualinvoke $r2.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.base.MultiLanguageAttrValue getMultiLanguageAttrValue(java.lang.String,boolean)>("expr", 1);

        $r4 = virtualinvoke $r2.<com.google.gxp.compiler.reparent.AttributeMap: java.lang.String getOptional(java.lang.String,java.lang.String)>("example", null);

        $r5 = <com.google.gxp.compiler.parser.GxpNamespace: com.google.gxp.compiler.parser.Namespace INSTANCE>;

        $r6 = virtualinvoke $r2.<com.google.gxp.compiler.reparent.AttributeMap: java.lang.String getOptional(com.google.gxp.compiler.parser.Namespace,java.lang.String,java.lang.String)>($r5, "ph", null);

        $z0 = virtualinvoke $r3.<com.google.gxp.compiler.base.MultiLanguageAttrValue: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r11 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r10 = new com.google.gxp.compiler.alerts.common.MissingAttributeError;

        specialinvoke $r10.<com.google.gxp.compiler.alerts.common.MissingAttributeError: void <init>(com.google.gxp.compiler.base.Node,java.lang.String)>(r8, "expr");

        interfaceinvoke $r11.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r10);

        goto label2;

     label1:
        $r9 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.EditableParts output>;

        $r7 = new com.google.gxp.compiler.base.NativeExpression;

        specialinvoke $r7.<com.google.gxp.compiler.base.NativeExpression: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.base.MultiLanguageAttrValue,java.lang.String,java.lang.String)>(r8, $r3, $r4, $r6);

        virtualinvoke $r9.<com.google.gxp.compiler.reparent.EditableParts: void accumulate(com.google.gxp.compiler.base.Expression)>($r7);

     label2:
        return null;
    }

    public java.lang.Void visitCondElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)
    {
        com.google.gxp.compiler.base.Conditional$Clause r18, r19;
        com.google.gxp.compiler.base.Expression $r10, $r13, r17;
        com.google.gxp.compiler.base.Conditional $r4;
        com.google.gxp.compiler.alerts.common.MissingAttributeError $r14;
        com.google.gxp.compiler.reparent.Parts $r1;
        com.google.gxp.compiler.alerts.AlertSink $r8, $r15;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.util.Iterator $r3;
        com.google.gxp.compiler.reparent.NoClausesInCondError $r7;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r0;
        com.google.gxp.compiler.base.StringConstant $r11;
        java.util.List $r2, r16;
        java.lang.Object $r9, $r12;
        com.google.gxp.compiler.parser.GxpNamespace$GxpElement r5;
        com.google.gxp.compiler.reparent.EditableParts $r6;

        r0 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r5 := @parameter0: com.google.gxp.compiler.parser.GxpNamespace$GxpElement;

        $r1 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.Parts nodeParts>;

        $r2 = interfaceinvoke $r1.<com.google.gxp.compiler.reparent.Parts: java.util.List getClauses()>();

        r16 = $r2;

        r17 = null;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r12 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r18 = (com.google.gxp.compiler.base.Conditional$Clause) $r12;

        $r13 = virtualinvoke r18.<com.google.gxp.compiler.base.Conditional$Clause: com.google.gxp.compiler.base.Expression getPredicate()>();

        $z3 = virtualinvoke $r13.<com.google.gxp.compiler.base.Expression: boolean alwaysEquals(boolean)>(1);

        if $z3 == 0 goto label3;

        $i4 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i4 == 1 goto label2;

        $z4 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z4 != 1 goto label3;

     label2:
        $r15 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r14 = new com.google.gxp.compiler.alerts.common.MissingAttributeError;

        specialinvoke $r14.<com.google.gxp.compiler.alerts.common.MissingAttributeError: void <init>(com.google.gxp.compiler.base.Node,java.lang.String)>(r18, "cond");

        interfaceinvoke $r15.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r14);

     label3:
        goto label1;

     label4:
        $z1 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label6;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i1 = $i0 - 1;

        $r9 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i1);

        r19 = (com.google.gxp.compiler.base.Conditional$Clause) $r9;

        $r10 = virtualinvoke r19.<com.google.gxp.compiler.base.Conditional$Clause: com.google.gxp.compiler.base.Expression getPredicate()>();

        $z2 = virtualinvoke $r10.<com.google.gxp.compiler.base.Expression: boolean alwaysEquals(boolean)>(1);

        if $z2 == 0 goto label5;

        r17 = virtualinvoke r19.<com.google.gxp.compiler.base.Conditional$Clause: com.google.gxp.compiler.base.Expression getExpression()>();

        $i2 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i3 = $i2 - 1;

        r16 = interfaceinvoke $r2.<java.util.List: java.util.List subList(int,int)>(0, $i3);

        goto label6;

     label5:
        $r11 = new com.google.gxp.compiler.base.StringConstant;

        specialinvoke $r11.<com.google.gxp.compiler.base.StringConstant: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.schema.Schema,java.lang.String)>(r5, null, "");

        r17 = $r11;

     label6:
        $z5 = interfaceinvoke r16.<java.util.List: boolean isEmpty()>();

        if $z5 == 0 goto label7;

        if r17 != null goto label8;

        $r8 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r7 = new com.google.gxp.compiler.reparent.NoClausesInCondError;

        specialinvoke $r7.<com.google.gxp.compiler.reparent.NoClausesInCondError: void <init>(com.google.gxp.compiler.base.Node)>(r5);

        interfaceinvoke $r8.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r7);

        goto label8;

     label7:
        $r6 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.EditableParts output>;

        $r4 = new com.google.gxp.compiler.base.Conditional;

        specialinvoke $r4.<com.google.gxp.compiler.base.Conditional: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.schema.Schema,java.util.List,com.google.gxp.compiler.base.Expression)>(r5, null, r16, r17);

        virtualinvoke $r6.<com.google.gxp.compiler.reparent.EditableParts: void accumulate(com.google.gxp.compiler.base.Expression)>($r4);

     label8:
        return null;
    }

    public java.lang.Void visitClauseElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)
    {
        com.google.gxp.compiler.base.Conditional$Clause $r7;
        com.google.gxp.compiler.base.Expression $r6, $r9;
        com.google.gxp.compiler.reparent.Parts $r1;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r0;
        com.google.gxp.compiler.reparent.AttributeMap $r2;
        com.google.gxp.compiler.base.BooleanConstant $r3;
        java.lang.Boolean $r5;
        com.google.gxp.compiler.parser.GxpNamespace$GxpElement r4;
        com.google.gxp.compiler.reparent.EditableParts $r8;

        r0 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r4 := @parameter0: com.google.gxp.compiler.parser.GxpNamespace$GxpElement;

        $r1 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.Parts nodeParts>;

        $r2 = interfaceinvoke $r1.<com.google.gxp.compiler.reparent.Parts: com.google.gxp.compiler.reparent.AttributeMap getAttributes()>();

        $r3 = new com.google.gxp.compiler.base.BooleanConstant;

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        specialinvoke $r3.<com.google.gxp.compiler.base.BooleanConstant: void <init>(com.google.gxp.compiler.base.Node,java.lang.Boolean)>(r4, $r5);

        $r6 = virtualinvoke $r2.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.base.Expression getOptionalExprValue(java.lang.String,com.google.gxp.compiler.base.Expression)>("cond", $r3);

        if $r6 == null goto label1;

        $r8 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.EditableParts output>;

        $r7 = new com.google.gxp.compiler.base.Conditional$Clause;

        $r9 = specialinvoke r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.base.Expression getCollapsableContent(com.google.gxp.compiler.reparent.AttributeMap)>($r2);

        specialinvoke $r7.<com.google.gxp.compiler.base.Conditional$Clause: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.base.Expression,com.google.gxp.compiler.base.Expression)>(r4, $r6, $r9);

        virtualinvoke $r8.<com.google.gxp.compiler.reparent.EditableParts: void accumulate(com.google.gxp.compiler.base.Conditional$Clause)>($r7);

     label1:
        return null;
    }

    public java.lang.Void visitIfElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)
    {
        com.google.gxp.compiler.base.UnexpectedNodeException $r0;
        com.google.gxp.compiler.parser.GxpNamespace$GxpElement r1;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r2;

        r2 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r1 := @parameter0: com.google.gxp.compiler.parser.GxpNamespace$GxpElement;

        $r0 = new com.google.gxp.compiler.base.UnexpectedNodeException;

        specialinvoke $r0.<com.google.gxp.compiler.base.UnexpectedNodeException: void <init>(com.google.gxp.compiler.base.Node)>(r1);

        throw $r0;
    }

    public java.lang.Void visitElifElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)
    {
        com.google.gxp.compiler.base.UnexpectedNodeException $r0;
        com.google.gxp.compiler.parser.GxpNamespace$GxpElement r1;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r2;

        r2 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r1 := @parameter0: com.google.gxp.compiler.parser.GxpNamespace$GxpElement;

        $r0 = new com.google.gxp.compiler.base.UnexpectedNodeException;

        specialinvoke $r0.<com.google.gxp.compiler.base.UnexpectedNodeException: void <init>(com.google.gxp.compiler.base.Node)>(r1);

        throw $r0;
    }

    public java.lang.Void visitElseElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)
    {
        com.google.gxp.compiler.base.UnexpectedNodeException $r0;
        com.google.gxp.compiler.parser.GxpNamespace$GxpElement r1;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r2;

        r2 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r1 := @parameter0: com.google.gxp.compiler.parser.GxpNamespace$GxpElement;

        $r0 = new com.google.gxp.compiler.base.UnexpectedNodeException;

        specialinvoke $r0.<com.google.gxp.compiler.base.UnexpectedNodeException: void <init>(com.google.gxp.compiler.base.Node)>(r1);

        throw $r0;
    }

    public java.lang.Void visitImportElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)
    {
        com.google.gxp.compiler.base.ClassImport $r9;
        com.google.gxp.compiler.base.TemplateName$FullyQualified $r8, $r13;
        com.google.gxp.compiler.reparent.ConflictingAttributesError $r16;
        java.lang.String[] $r23;
        com.google.gxp.compiler.reparent.Parts $r1;
        com.google.gxp.compiler.reparent.AttributeMap $r2;
        com.google.gxp.compiler.parser.Namespace $r17, $r20;
        com.google.gxp.compiler.alerts.AlertSink $r6, $r11, $r18, $r24;
        java.lang.String $r3, $r4;
        com.google.gxp.compiler.alerts.SourcePosition $r7, $r12;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r0;
        com.google.gxp.compiler.reparent.Attribute $r19, $r21;
        com.google.gxp.compiler.reparent.MissingAttributesError $r22;
        com.google.gxp.compiler.parser.GxpNamespace$GxpElement r5;
        com.google.gxp.compiler.reparent.EditableParts $r10, $r15;
        com.google.gxp.compiler.base.PackageImport $r14;

        r0 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r5 := @parameter0: com.google.gxp.compiler.parser.GxpNamespace$GxpElement;

        $r1 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.Parts nodeParts>;

        $r2 = interfaceinvoke $r1.<com.google.gxp.compiler.reparent.Parts: com.google.gxp.compiler.reparent.AttributeMap getAttributes()>();

        $r3 = virtualinvoke $r2.<com.google.gxp.compiler.reparent.AttributeMap: java.lang.String getOptional(java.lang.String,java.lang.String)>("class", null);

        $r4 = virtualinvoke $r2.<com.google.gxp.compiler.reparent.AttributeMap: java.lang.String getOptional(java.lang.String,java.lang.String)>("package", null);

        if $r3 != null goto label1;

        if $r4 != null goto label1;

        $r24 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r22 = new com.google.gxp.compiler.reparent.MissingAttributesError;

        $r23 = newarray (java.lang.String)[2];

        $r23[0] = "class";

        $r23[1] = "package";

        specialinvoke $r22.<com.google.gxp.compiler.reparent.MissingAttributesError: void <init>(com.google.gxp.compiler.base.Node,java.lang.String[])>(r5, $r23);

        interfaceinvoke $r24.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r22);

        return null;

     label1:
        if $r3 == null goto label2;

        if $r4 == null goto label2;

        $r18 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r16 = new com.google.gxp.compiler.reparent.ConflictingAttributesError;

        $r17 = <com.google.gxp.compiler.parser.NullNamespace: com.google.gxp.compiler.parser.Namespace INSTANCE>;

        $r19 = virtualinvoke $r2.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.reparent.Attribute getAttribute(com.google.gxp.compiler.parser.Namespace,java.lang.String)>($r17, "class");

        $r20 = <com.google.gxp.compiler.parser.NullNamespace: com.google.gxp.compiler.parser.Namespace INSTANCE>;

        $r21 = virtualinvoke $r2.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.reparent.Attribute getAttribute(com.google.gxp.compiler.parser.Namespace,java.lang.String)>($r20, "package");

        specialinvoke $r16.<com.google.gxp.compiler.reparent.ConflictingAttributesError: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.reparent.Attribute,com.google.gxp.compiler.reparent.Attribute)>(r5, $r19, $r21);

        interfaceinvoke $r18.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r16);

        return null;

     label2:
        if $r4 == null goto label4;

        $r11 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r12 = virtualinvoke r5.<com.google.gxp.compiler.parser.GxpNamespace$GxpElement: com.google.gxp.compiler.alerts.SourcePosition getSourcePosition()>();

        $r13 = staticinvoke <com.google.gxp.compiler.base.TemplateName: com.google.gxp.compiler.base.TemplateName$FullyQualified parseFullyQualifiedDottedName(com.google.gxp.compiler.alerts.AlertSink,com.google.gxp.compiler.alerts.SourcePosition,java.lang.String)>($r11, $r12, $r4);

        if $r13 == null goto label3;

        $r15 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.EditableParts output>;

        $r14 = new com.google.gxp.compiler.base.PackageImport;

        specialinvoke $r14.<com.google.gxp.compiler.base.PackageImport: void <init>(com.google.gxp.compiler.base.Node,java.lang.String)>(r5, $r4);

        virtualinvoke $r15.<com.google.gxp.compiler.reparent.EditableParts: void accumulate(com.google.gxp.compiler.base.Import)>($r14);

     label3:
        goto label5;

     label4:
        if $r3 == null goto label5;

        $r6 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r7 = virtualinvoke r5.<com.google.gxp.compiler.parser.GxpNamespace$GxpElement: com.google.gxp.compiler.alerts.SourcePosition getSourcePosition()>();

        $r8 = staticinvoke <com.google.gxp.compiler.base.TemplateName: com.google.gxp.compiler.base.TemplateName$FullyQualified parseFullyQualifiedDottedName(com.google.gxp.compiler.alerts.AlertSink,com.google.gxp.compiler.alerts.SourcePosition,java.lang.String)>($r6, $r7, $r3);

        if $r8 == null goto label5;

        $r10 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.EditableParts output>;

        $r9 = new com.google.gxp.compiler.base.ClassImport;

        specialinvoke $r9.<com.google.gxp.compiler.base.ClassImport: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.base.TemplateName$FullyQualified)>(r5, $r8);

        virtualinvoke $r10.<com.google.gxp.compiler.reparent.EditableParts: void accumulate(com.google.gxp.compiler.base.Import)>($r9);

     label5:
        return null;
    }

    private com.google.gxp.compiler.base.TemplateName$FullyQualified createRootName(com.google.gxp.compiler.base.Node)
    {
        com.google.gxp.compiler.reparent.MismatchedTemplateNameError $r9;
        com.google.gxp.compiler.base.Expression $r3;
        com.google.gxp.compiler.base.TemplateName$FullyQualified $r18;
        com.google.gxp.compiler.reparent.Parts $r1;
        com.google.gxp.compiler.reparent.AttributeMap $r2;
        com.google.gxp.compiler.reparent.Reparenter $r7, $r12, $r16;
        com.google.gxp.compiler.alerts.AlertSink $r5, $r10, $r14;
        com.google.gxp.compiler.base.Node r4;
        java.lang.String $r6, $r8, $r13, $r17;
        boolean $z0;
        com.google.gxp.compiler.alerts.SourcePosition $r11, $r15;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r0;

        r0 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r4 := @parameter0: com.google.gxp.compiler.base.Node;

        $r1 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.Parts nodeParts>;

        $r2 = interfaceinvoke $r1.<com.google.gxp.compiler.reparent.Parts: com.google.gxp.compiler.reparent.AttributeMap getAttributes()>();

        $r3 = virtualinvoke $r2.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.base.Expression getValue(java.lang.String,com.google.gxp.compiler.base.Expression)>("name", null);

        if $r3 == null goto label1;

        $r5 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r6 = virtualinvoke $r3.<com.google.gxp.compiler.base.Expression: java.lang.String getStaticString(com.google.gxp.compiler.alerts.AlertSink,java.lang.String)>($r5, null);

        $r7 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.Reparenter this$0>;

        $r8 = staticinvoke <com.google.gxp.compiler.reparent.Reparenter: java.lang.String access$100(com.google.gxp.compiler.reparent.Reparenter)>($r7);

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label1;

        $r10 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r9 = new com.google.gxp.compiler.reparent.MismatchedTemplateNameError;

        $r11 = virtualinvoke $r3.<com.google.gxp.compiler.base.Expression: com.google.gxp.compiler.alerts.SourcePosition getSourcePosition()>();

        $r12 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.Reparenter this$0>;

        $r13 = staticinvoke <com.google.gxp.compiler.reparent.Reparenter: java.lang.String access$100(com.google.gxp.compiler.reparent.Reparenter)>($r12);

        specialinvoke $r9.<com.google.gxp.compiler.reparent.MismatchedTemplateNameError: void <init>(com.google.gxp.compiler.alerts.SourcePosition,java.lang.String,java.lang.String)>($r11, $r6, $r13);

        interfaceinvoke $r10.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r9);

     label1:
        $r14 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r15 = interfaceinvoke r4.<com.google.gxp.compiler.base.Node: com.google.gxp.compiler.alerts.SourcePosition getSourcePosition()>();

        $r16 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.Reparenter this$0>;

        $r17 = staticinvoke <com.google.gxp.compiler.reparent.Reparenter: java.lang.String access$100(com.google.gxp.compiler.reparent.Reparenter)>($r16);

        $r18 = staticinvoke <com.google.gxp.compiler.base.TemplateName: com.google.gxp.compiler.base.TemplateName$FullyQualified parseFullyQualifiedDottedName(com.google.gxp.compiler.alerts.AlertSink,com.google.gxp.compiler.alerts.SourcePosition,java.lang.String)>($r14, $r15, $r17);

        return $r18;
    }

    public java.lang.Void visitInterfaceElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)
    {
        com.google.gxp.compiler.base.JavaAnnotation$Element $r14;
        com.google.gxp.compiler.base.TemplateName$FullyQualified $r2;
        com.google.gxp.compiler.schema.Schema $r24;
        com.google.gxp.compiler.reparent.Parts $r4, $r16, $r18, $r20;
        java.util.ArrayList $r6;
        com.google.gxp.compiler.base.Parameter $r12;
        com.google.gxp.compiler.base.TemplateType $r9;
        java.lang.String $r11;
        com.google.gxp.compiler.base.ContentType $r3;
        com.google.gxp.compiler.base.Interface $r22;
        com.google.gxp.compiler.alerts.SourcePosition $r8, $r10;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r0;
        com.google.gxp.compiler.base.FormalParameter $r7;
        java.util.List $r5, $r15, $r17, $r19, $r21;
        com.google.gxp.compiler.base.JavaAnnotation$Element[] $r13;
        com.google.gxp.compiler.parser.GxpNamespace$GxpElement r1;
        com.google.gxp.compiler.reparent.EditableParts $r23;

        r0 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r1 := @parameter0: com.google.gxp.compiler.parser.GxpNamespace$GxpElement;

        $r2 = specialinvoke r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.base.TemplateName$FullyQualified createRootName(com.google.gxp.compiler.base.Node)>(r1);

        $r3 = specialinvoke r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.base.ContentType createContentType(com.google.gxp.compiler.base.Node,java.lang.String)>(r1, "text/html");

        $r4 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.Parts nodeParts>;

        $r5 = interfaceinvoke $r4.<com.google.gxp.compiler.reparent.Parts: java.util.List getParameters()>();

        $r6 = staticinvoke <com.google.gxp.com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Iterable)>($r5);

        $r7 = new com.google.gxp.compiler.base.FormalParameter;

        $r8 = virtualinvoke r1.<com.google.gxp.compiler.parser.GxpNamespace$GxpElement: com.google.gxp.compiler.alerts.SourcePosition getSourcePosition()>();

        $r9 = new com.google.gxp.compiler.base.TemplateType;

        $r10 = virtualinvoke r1.<com.google.gxp.compiler.parser.GxpNamespace$GxpElement: com.google.gxp.compiler.alerts.SourcePosition getSourcePosition()>();

        $r11 = virtualinvoke $r2.<com.google.gxp.compiler.base.TemplateName$FullyQualified: java.lang.String toString()>();

        specialinvoke $r9.<com.google.gxp.compiler.base.TemplateType: void <init>(com.google.gxp.compiler.alerts.SourcePosition,java.lang.String,com.google.gxp.compiler.base.TemplateName)>($r10, $r11, $r2);

        specialinvoke $r7.<com.google.gxp.compiler.base.FormalParameter: void <init>(com.google.gxp.compiler.alerts.SourcePosition,java.lang.String,java.lang.String,com.google.gxp.compiler.base.Type)>($r8, "this", "this", $r9);

        $r12 = new com.google.gxp.compiler.base.Parameter;

        specialinvoke $r12.<com.google.gxp.compiler.base.Parameter: void <init>(com.google.gxp.compiler.base.FormalParameter)>($r7);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r12);

        $r14 = <com.google.gxp.compiler.base.JavaAnnotation$Element: com.google.gxp.compiler.base.JavaAnnotation$Element INTERFACE>;

        $r13 = newarray (com.google.gxp.compiler.base.JavaAnnotation$Element)[0];

        $r15 = specialinvoke r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: java.util.List getJavaAnnotations(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.base.JavaAnnotation$Element,com.google.gxp.compiler.base.JavaAnnotation$Element[])>(r1, $r14, $r13);

        $r16 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.Parts nodeParts>;

        $r17 = interfaceinvoke $r16.<com.google.gxp.compiler.reparent.Parts: java.util.List getImports()>();

        $r18 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.Parts nodeParts>;

        $r19 = interfaceinvoke $r18.<com.google.gxp.compiler.reparent.Parts: java.util.List getThrowsDeclarations()>();

        $r20 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.Parts nodeParts>;

        $r21 = interfaceinvoke $r20.<com.google.gxp.compiler.reparent.Parts: java.util.List getFormalTypeParameters()>();

        if $r3 == null goto label1;

        $r23 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.EditableParts output>;

        $r22 = new com.google.gxp.compiler.base.Interface;

        $r24 = virtualinvoke $r3.<com.google.gxp.compiler.base.ContentType: com.google.gxp.compiler.schema.Schema getSchema()>();

        specialinvoke $r22.<com.google.gxp.compiler.base.Interface: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.base.TemplateName$FullyQualified,com.google.gxp.compiler.schema.Schema,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List)>(r1, $r2, $r24, $r15, $r17, $r19, $r6, $r21);

        virtualinvoke $r23.<com.google.gxp.compiler.reparent.EditableParts: void accumulate(com.google.gxp.compiler.base.Root)>($r22);

     label1:
        return null;
    }

    public java.lang.Void visitAbbrElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)
    {
        com.google.gxp.compiler.base.Expression $r6, $r7;
        com.google.gxp.compiler.base.AbbrExpression $r8;
        com.google.gxp.compiler.reparent.Parts $r1;
        com.google.gxp.compiler.base.Type $r4;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r0;
        com.google.gxp.compiler.reparent.AttributeMap $r2;
        com.google.gxp.compiler.parser.GxpNamespace$GxpElement r3;
        java.lang.String $r5;
        com.google.gxp.compiler.reparent.EditableParts $r9;

        r0 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r3 := @parameter0: com.google.gxp.compiler.parser.GxpNamespace$GxpElement;

        $r1 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.Parts nodeParts>;

        $r2 = interfaceinvoke $r1.<com.google.gxp.compiler.reparent.Parts: com.google.gxp.compiler.reparent.AttributeMap getAttributes()>();

        $r4 = specialinvoke r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.base.Type createType(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.reparent.AttributeMap,boolean,com.google.gxp.compiler.base.Type)>(r3, $r2, 0, null);

        $r5 = specialinvoke r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: java.lang.String getVariableName(com.google.gxp.compiler.reparent.AttributeMap,java.lang.String,boolean)>($r2, "name", 0);

        $r6 = virtualinvoke $r2.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.base.Expression getExprValue(java.lang.String,com.google.gxp.compiler.base.Expression)>("expr", null);

        $r7 = specialinvoke r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.base.Expression getCollapsableContent(com.google.gxp.compiler.reparent.AttributeMap)>($r2);

        if $r4 == null goto label1;

        if $r5 == null goto label1;

        if $r6 == null goto label1;

        $r9 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.EditableParts output>;

        $r8 = new com.google.gxp.compiler.base.AbbrExpression;

        specialinvoke $r8.<com.google.gxp.compiler.base.AbbrExpression: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.base.Type,java.lang.String,com.google.gxp.compiler.base.Expression,com.google.gxp.compiler.base.Expression)>(r3, $r4, $r5, $r6, $r7);

        virtualinvoke $r9.<com.google.gxp.compiler.reparent.EditableParts: void accumulate(com.google.gxp.compiler.base.Expression)>($r8);

     label1:
        return null;
    }

    public java.lang.Void visitLoopElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)
    {
        com.google.gxp.compiler.parser.OutputLanguageNamespace $r16, r23;
        com.google.gxp.compiler.reparent.Parts $r1;
        com.google.gxp.compiler.alerts.common.UnknownAttributeError $r20;
        boolean $z0, $z1, $z2, z3, $z4, z5, z6;
        com.google.gxp.compiler.base.Type $r4;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r0;
        com.google.gxp.compiler.reparent.MissingAttributesError $r26;
        com.google.gxp.compiler.base.Expression $r7, $r9, $r10, $r11;
        java.lang.String[] $r27;
        java.lang.Iterable $r14;
        com.google.gxp.compiler.reparent.AttributeMap $r2;
        com.google.gxp.compiler.parser.Namespace $r12, $r13, $r24, $r25;
        com.google.gxp.compiler.base.LoopExpression $r18;
        com.google.gxp.compiler.alerts.AlertSink $r21, $r28;
        java.lang.String $r5, $r6;
        java.util.Iterator $r15;
        com.google.gxp.compiler.base.StringConstant $r8;
        com.google.gxp.compiler.reparent.Attribute $r17;
        java.lang.Object $r22;
        com.google.gxp.compiler.parser.GxpNamespace$GxpElement r3;
        com.google.gxp.compiler.reparent.EditableParts $r19;

        r0 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r3 := @parameter0: com.google.gxp.compiler.parser.GxpNamespace$GxpElement;

        $r1 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.Parts nodeParts>;

        $r2 = interfaceinvoke $r1.<com.google.gxp.compiler.reparent.Parts: com.google.gxp.compiler.reparent.AttributeMap getAttributes()>();

        $r4 = specialinvoke r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.base.Type createType(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.reparent.AttributeMap,boolean,com.google.gxp.compiler.base.Type)>(r3, $r2, 0, null);

        $r5 = specialinvoke r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: java.lang.String getVariableName(com.google.gxp.compiler.reparent.AttributeMap,java.lang.String,boolean)>($r2, "key", 1);

        $r6 = specialinvoke r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: java.lang.String getVariableName(com.google.gxp.compiler.reparent.AttributeMap,java.lang.String,boolean)>($r2, "var", 0);

        $r7 = specialinvoke r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.base.Expression getCollapsableContent(com.google.gxp.compiler.reparent.AttributeMap)>($r2);

        $r8 = new com.google.gxp.compiler.base.StringConstant;

        specialinvoke $r8.<com.google.gxp.compiler.base.StringConstant: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.schema.Schema,java.lang.String)>(r3, null, " ");

        $r9 = virtualinvoke $r2.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.base.Expression getOptionalAttributeValue(java.lang.String,com.google.gxp.compiler.base.Expression)>("delimiter", $r8);

        $r10 = virtualinvoke $r2.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.base.Expression getOptionalExprValue(java.lang.String,com.google.gxp.compiler.base.Expression)>("iterator", null);

        $r11 = virtualinvoke $r2.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.base.Expression getOptionalExprValue(java.lang.String,com.google.gxp.compiler.base.Expression)>("iterable", null);

        if $r11 != null goto label1;

        if $r10 != null goto label1;

        $r28 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r26 = new com.google.gxp.compiler.reparent.MissingAttributesError;

        $r27 = newarray (java.lang.String)[2];

        $r27[0] = "iterator";

        $r27[1] = "iterable";

        specialinvoke $r26.<com.google.gxp.compiler.reparent.MissingAttributesError: void <init>(com.google.gxp.compiler.base.Node,java.lang.String[])>(r3, $r27);

        interfaceinvoke $r28.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r26);

        return null;

     label1:
        $r13 = <com.google.gxp.compiler.parser.NullNamespace: com.google.gxp.compiler.parser.Namespace INSTANCE>;

        $r12 = <com.google.gxp.compiler.parser.NullNamespace: com.google.gxp.compiler.parser.Namespace INSTANCE>;

        z3 = virtualinvoke r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: boolean checkForConflictingLoopAttributes(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.reparent.AttributeMap,com.google.gxp.compiler.parser.Namespace,com.google.gxp.compiler.parser.Namespace)>(r3, $r2, $r13, $r12);

        $r14 = staticinvoke <com.google.gxp.compiler.reparent.AttributeMap: java.lang.Iterable getOutputLanguageNamespaces()>();

        $r15 = interfaceinvoke $r14.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z4 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label3;

        $r22 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        r23 = (com.google.gxp.compiler.parser.OutputLanguageNamespace) $r22;

        $r24 = <com.google.gxp.compiler.parser.NullNamespace: com.google.gxp.compiler.parser.Namespace INSTANCE>;

        $z0 = virtualinvoke r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: boolean checkForConflictingLoopAttributes(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.reparent.AttributeMap,com.google.gxp.compiler.parser.Namespace,com.google.gxp.compiler.parser.Namespace)>(r3, $r2, $r24, r23);

        z5 = z3 | $z0;

        $r25 = <com.google.gxp.compiler.parser.NullNamespace: com.google.gxp.compiler.parser.Namespace INSTANCE>;

        $z1 = virtualinvoke r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: boolean checkForConflictingLoopAttributes(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.reparent.AttributeMap,com.google.gxp.compiler.parser.Namespace,com.google.gxp.compiler.parser.Namespace)>(r3, $r2, r23, $r25);

        z6 = z5 | $z1;

        $z2 = virtualinvoke r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: boolean checkForConflictingLoopAttributes(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.reparent.AttributeMap,com.google.gxp.compiler.parser.Namespace,com.google.gxp.compiler.parser.Namespace)>(r3, $r2, r23, r23);

        z3 = z6 | $z2;

        goto label2;

     label3:
        $r16 = <com.google.gxp.compiler.parser.JavaScriptNamespace: com.google.gxp.compiler.parser.OutputLanguageNamespace INSTANCE>;

        $r17 = virtualinvoke $r2.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.reparent.Attribute getAttribute(com.google.gxp.compiler.parser.Namespace,java.lang.String)>($r16, "iterator");

        if $r17 == null goto label4;

        $r21 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r20 = new com.google.gxp.compiler.alerts.common.UnknownAttributeError;

        specialinvoke $r20.<com.google.gxp.compiler.alerts.common.UnknownAttributeError: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.base.Node)>(r3, $r17);

        interfaceinvoke $r21.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r20);

        return null;

     label4:
        if $r4 == null goto label5;

        if $r6 == null goto label5;

        if z3 != 0 goto label5;

        $r19 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.EditableParts output>;

        $r18 = new com.google.gxp.compiler.base.LoopExpression;

        specialinvoke $r18.<com.google.gxp.compiler.base.LoopExpression: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.base.Type,java.lang.String,java.lang.String,com.google.gxp.compiler.base.Expression,com.google.gxp.compiler.base.Expression,com.google.gxp.compiler.base.Expression,com.google.gxp.compiler.base.Expression)>(r3, $r4, $r5, $r6, $r11, $r10, $r7, $r9);

        virtualinvoke $r19.<com.google.gxp.compiler.reparent.EditableParts: void accumulate(com.google.gxp.compiler.base.Expression)>($r18);

     label5:
        return null;
    }

    public boolean checkForConflictingLoopAttributes(com.google.gxp.compiler.base.Node, com.google.gxp.compiler.reparent.AttributeMap, com.google.gxp.compiler.parser.Namespace, com.google.gxp.compiler.parser.Namespace)
    {
        com.google.gxp.compiler.reparent.ConflictingAttributesError $r6;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r5;
        com.google.gxp.compiler.reparent.AttributeMap r0;
        com.google.gxp.compiler.parser.Namespace r1, r3;
        com.google.gxp.compiler.reparent.Attribute $r2, $r4;
        com.google.gxp.compiler.alerts.AlertSink $r8;
        com.google.gxp.compiler.base.Node r7;

        r5 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r7 := @parameter0: com.google.gxp.compiler.base.Node;

        r0 := @parameter1: com.google.gxp.compiler.reparent.AttributeMap;

        r1 := @parameter2: com.google.gxp.compiler.parser.Namespace;

        r3 := @parameter3: com.google.gxp.compiler.parser.Namespace;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.reparent.Attribute getAttribute(com.google.gxp.compiler.parser.Namespace,java.lang.String)>(r1, "iterable");

        $r4 = virtualinvoke r0.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.reparent.Attribute getAttribute(com.google.gxp.compiler.parser.Namespace,java.lang.String)>(r3, "iterator");

        if $r2 == null goto label1;

        if $r4 == null goto label1;

        $r8 = r5.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r6 = new com.google.gxp.compiler.reparent.ConflictingAttributesError;

        specialinvoke $r6.<com.google.gxp.compiler.reparent.ConflictingAttributesError: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.reparent.Attribute,com.google.gxp.compiler.reparent.Attribute)>(r7, $r2, $r4);

        interfaceinvoke $r8.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r6);

        return 1;

     label1:
        return 0;
    }

    private com.google.gxp.compiler.base.Type createGxpType(com.google.gxp.compiler.base.Node, com.google.gxp.compiler.reparent.AttributeMap, com.google.gxp.compiler.reparent.Attribute)
    {
        com.google.gxp.compiler.schema.Schema $r10, $r12, $r20;
        int[] $r6;
        java.util.Map $r14;
        com.google.gxp.compiler.base.BundleType $r17;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r2;
        com.google.gxp.compiler.reparent.Reparenter$GxpType $r5;
        com.google.gxp.compiler.base.Expression $r1;
        java.util.HashMap $r15;
        java.lang.String[] $r21;
        com.google.gxp.compiler.schema.ElementValidator $r13;
        com.google.gxp.compiler.reparent.AttributeMap r7;
        com.google.gxp.compiler.reparent.Reparenter $r9, $r11, $r19;
        com.google.gxp.compiler.alerts.AlertSink $r3, $r26, $r28;
        com.google.gxp.compiler.base.Node r18;
        int $i0, $i1, i2, i3;
        com.google.gxp.compiler.base.BooleanType $r24;
        java.lang.String $r4, $r8, $r16, r22, $r23;
        com.google.gxp.compiler.alerts.common.InvalidAttributeValueError $r25, $r27;
        com.google.gxp.compiler.reparent.Attribute r0;

        r2 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r18 := @parameter0: com.google.gxp.compiler.base.Node;

        r7 := @parameter1: com.google.gxp.compiler.reparent.AttributeMap;

        r0 := @parameter2: com.google.gxp.compiler.reparent.Attribute;

        $r1 = virtualinvoke r0.<com.google.gxp.compiler.reparent.Attribute: com.google.gxp.compiler.base.Expression getValue()>();

        $r3 = r2.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r4 = virtualinvoke $r1.<com.google.gxp.compiler.base.Expression: java.lang.String getStaticString(com.google.gxp.compiler.alerts.AlertSink,java.lang.String)>($r3, null);

        $r5 = staticinvoke <com.google.gxp.compiler.reparent.Reparenter$GxpType: com.google.gxp.compiler.reparent.Reparenter$GxpType parse(java.lang.String)>($r4);

        if $r5 != null goto label1;

        $r28 = r2.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r27 = new com.google.gxp.compiler.alerts.common.InvalidAttributeValueError;

        specialinvoke $r27.<com.google.gxp.compiler.alerts.common.InvalidAttributeValueError: void <init>(com.google.gxp.compiler.base.Node)>(r0);

        interfaceinvoke $r28.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r27);

        return null;

     label1:
        $r6 = <com.google.gxp.compiler.reparent.Reparenter$3: int[] $SwitchMap$com$google$gxp$compiler$reparent$Reparenter$GxpType>;

        $i0 = virtualinvoke $r5.<com.google.gxp.compiler.reparent.Reparenter$GxpType: int ordinal()>();

        $i1 = $r6[$i0];

        lookupswitch($i1)
        {
            case 1: goto label2;
            case 2: goto label3;
            default: goto label8;
        };

     label2:
        $r24 = new com.google.gxp.compiler.base.BooleanType;

        specialinvoke $r24.<com.google.gxp.compiler.base.BooleanType: void <init>(com.google.gxp.compiler.base.Node)>(r18);

        return $r24;

     label3:
        $r8 = virtualinvoke r7.<com.google.gxp.compiler.reparent.AttributeMap: java.lang.String get(java.lang.String,java.lang.String)>("from-element", null);

        if $r8 == null goto label4;

        $r9 = r2.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.Reparenter this$0>;

        $r10 = staticinvoke <com.google.gxp.compiler.reparent.Reparenter: com.google.gxp.compiler.schema.Schema access$200(com.google.gxp.compiler.reparent.Reparenter)>($r9);

        if $r10 != null goto label5;

     label4:
        return null;

     label5:
        $r11 = r2.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.Reparenter this$0>;

        $r12 = staticinvoke <com.google.gxp.compiler.reparent.Reparenter: com.google.gxp.compiler.schema.Schema access$200(com.google.gxp.compiler.reparent.Reparenter)>($r11);

        $r13 = virtualinvoke $r12.<com.google.gxp.compiler.schema.Schema: com.google.gxp.compiler.schema.ElementValidator getElementValidator(java.lang.String)>($r8);

        $r14 = virtualinvoke $r13.<com.google.gxp.compiler.schema.ElementValidator: java.util.Map getAttributeValidatorMap()>();

        $r15 = staticinvoke <com.google.gxp.com.google.common.collect.Maps: java.util.HashMap newHashMap(java.util.Map)>($r14);

        $r16 = virtualinvoke r7.<com.google.gxp.compiler.reparent.AttributeMap: java.lang.String getOptional(java.lang.String,java.lang.String)>("exclude", null);

        if $r16 == null goto label7;

        $r21 = virtualinvoke $r16.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        i2 = lengthof $r21;

        i3 = 0;

     label6:
        if i3 >= i2 goto label7;

        r22 = $r21[i3];

        $r23 = virtualinvoke r22.<java.lang.String: java.lang.String trim()>();

        interfaceinvoke $r15.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r23);

        i3 = i3 + 1;

        goto label6;

     label7:
        $r17 = new com.google.gxp.compiler.base.BundleType;

        $r19 = r2.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.Reparenter this$0>;

        $r20 = staticinvoke <com.google.gxp.compiler.reparent.Reparenter: com.google.gxp.compiler.schema.Schema access$200(com.google.gxp.compiler.reparent.Reparenter)>($r19);

        specialinvoke $r17.<com.google.gxp.compiler.base.BundleType: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.schema.Schema,java.util.Map)>(r18, $r20, $r15);

        return $r17;

     label8:
        $r26 = r2.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r25 = new com.google.gxp.compiler.alerts.common.InvalidAttributeValueError;

        specialinvoke $r25.<com.google.gxp.compiler.alerts.common.InvalidAttributeValueError: void <init>(com.google.gxp.compiler.base.Node)>(r0);

        interfaceinvoke $r26.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r25);

        return null;
    }

    private com.google.gxp.compiler.base.Type createType(com.google.gxp.compiler.base.Node, com.google.gxp.compiler.reparent.AttributeMap, boolean, com.google.gxp.compiler.base.Type)
    {
        com.google.gxp.compiler.parser.OutputLanguageNamespace r17;
        com.google.gxp.compiler.reparent.ConflictingAttributesError $r27, $r28, $r29;
        com.google.gxp.compiler.base.MultiLanguageAttrValue $r5;
        com.google.gxp.compiler.base.NativeType $r30;
        boolean $z0, $z1, z2, $z3, $z4;
        com.google.gxp.compiler.base.Type r6, $r25, r26;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r8;
        java.lang.Iterable $r11;
        com.google.gxp.compiler.reparent.AttributeMap r0;
        com.google.gxp.compiler.parser.Namespace $r1, $r3;
        com.google.gxp.compiler.alerts.AlertSink $r10, $r15, $r20, $r22;
        com.google.gxp.compiler.base.Node r7;
        java.util.Iterator $r12;
        com.google.gxp.compiler.reparent.InvalidTypeError $r31;
        com.google.gxp.compiler.reparent.Attribute $r2, $r4, $r13, $r18, $r23, r24;
        java.lang.Object $r16;

        r8 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r7 := @parameter0: com.google.gxp.compiler.base.Node;

        r0 := @parameter1: com.google.gxp.compiler.reparent.AttributeMap;

        z2 := @parameter2: boolean;

        r6 := @parameter3: com.google.gxp.compiler.base.Type;

        $r1 = <com.google.gxp.compiler.parser.GxpNamespace: com.google.gxp.compiler.parser.Namespace INSTANCE>;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.reparent.Attribute getAttribute(com.google.gxp.compiler.parser.Namespace,java.lang.String)>($r1, "type");

        $r3 = <com.google.gxp.compiler.parser.NullNamespace: com.google.gxp.compiler.parser.Namespace INSTANCE>;

        $r4 = virtualinvoke r0.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.reparent.Attribute getAttribute(com.google.gxp.compiler.parser.Namespace,java.lang.String)>($r3, "content-type");

        $r5 = virtualinvoke r0.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.base.MultiLanguageAttrValue getMultiLanguageAttrValue(java.lang.String)>("type");

        if $r2 == null goto label01;

        if $r4 == null goto label01;

        $r22 = r8.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r27 = new com.google.gxp.compiler.reparent.ConflictingAttributesError;

        specialinvoke $r27.<com.google.gxp.compiler.reparent.ConflictingAttributesError: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.reparent.Attribute,com.google.gxp.compiler.reparent.Attribute)>(r7, $r2, $r4);

        interfaceinvoke $r22.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r27);

     label01:
        if $r2 != null goto label02;

        if $r4 == null goto label08;

     label02:
        $z0 = virtualinvoke $r5.<com.google.gxp.compiler.base.MultiLanguageAttrValue: boolean isEmpty()>();

        if $z0 != 0 goto label08;

        if $r2 == null goto label03;

        $r23 = $r2;

        goto label04;

     label03:
        $r23 = $r4;

     label04:
        r24 = $r23;

        $r11 = staticinvoke <com.google.gxp.compiler.reparent.AttributeMap: java.lang.Iterable getOutputLanguageNamespaces()>();

        $r12 = interfaceinvoke $r11.<java.lang.Iterable: java.util.Iterator iterator()>();

     label05:
        $z4 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label07;

        $r16 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r17 = (com.google.gxp.compiler.parser.OutputLanguageNamespace) $r16;

        $r18 = virtualinvoke r0.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.reparent.Attribute getAttribute(com.google.gxp.compiler.parser.Namespace,java.lang.String)>(r17, "type");

        if $r18 == null goto label06;

        $r20 = r8.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r28 = new com.google.gxp.compiler.reparent.ConflictingAttributesError;

        specialinvoke $r28.<com.google.gxp.compiler.reparent.ConflictingAttributesError: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.reparent.Attribute,com.google.gxp.compiler.reparent.Attribute)>(r7, r24, $r18);

        interfaceinvoke $r20.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r28);

     label06:
        goto label05;

     label07:
        $r13 = virtualinvoke r0.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.reparent.Attribute getAttribute(java.lang.String)>("type");

        if $r13 == null goto label08;

        $r15 = r8.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r29 = new com.google.gxp.compiler.reparent.ConflictingAttributesError;

        specialinvoke $r29.<com.google.gxp.compiler.reparent.ConflictingAttributesError: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.reparent.Attribute,com.google.gxp.compiler.reparent.Attribute)>(r7, r24, $r13);

        interfaceinvoke $r15.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r29);

     label08:
        if $r2 == null goto label09;

        $r25 = specialinvoke r8.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.base.Type createGxpType(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.reparent.AttributeMap,com.google.gxp.compiler.reparent.Attribute)>(r7, r0, $r2);

        goto label13;

     label09:
        if $r4 == null goto label10;

        $r25 = specialinvoke r8.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.base.ContentType createContentType(com.google.gxp.compiler.base.Node,java.lang.String)>(r7, null);

        goto label13;

     label10:
        if r6 == null goto label11;

        $z3 = virtualinvoke $r5.<com.google.gxp.compiler.base.MultiLanguageAttrValue: boolean isEmpty()>();

        if $z3 != 0 goto label12;

     label11:
        $r30 = new com.google.gxp.compiler.base.NativeType;

        $r25 = $r30;

        specialinvoke $r30.<com.google.gxp.compiler.base.NativeType: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.base.MultiLanguageAttrValue)>(r7, $r5);

        goto label13;

     label12:
        $r25 = r6;

     label13:
        r26 = $r25;

        if $r25 == null goto label14;

        $z1 = virtualinvoke $r25.<com.google.gxp.compiler.base.Type: boolean onlyAllowedInParam()>();

        if $z1 == 0 goto label14;

        if z2 != 0 goto label14;

        $r10 = r8.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r31 = new com.google.gxp.compiler.reparent.InvalidTypeError;

        specialinvoke $r31.<com.google.gxp.compiler.reparent.InvalidTypeError: void <init>(com.google.gxp.compiler.base.Type)>($r25);

        interfaceinvoke $r10.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r31);

        r26 = null;

     label14:
        return r26;
    }

    private com.google.gxp.compiler.base.ContentType createContentType(com.google.gxp.compiler.base.Node, java.lang.String)
    {
        com.google.gxp.compiler.base.Expression $r4;
        com.google.gxp.compiler.schema.SchemaFactory $r8;
        com.google.gxp.compiler.schema.Schema r9, $r17;
        com.google.gxp.compiler.reparent.Parts $r1;
        com.google.gxp.compiler.reparent.AttributeMap $r2;
        com.google.gxp.compiler.reparent.Reparenter $r7;
        com.google.gxp.compiler.alerts.AlertSink $r6, $r13;
        com.google.gxp.compiler.base.Node r14, r15;
        java.lang.String r5, $r11, r16;
        com.google.gxp.compiler.base.ContentType $r18;
        com.google.gxp.compiler.alerts.SourcePosition $r10;
        com.google.gxp.compiler.reparent.UnknownContentTypeError $r12;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r0;
        com.google.gxp.compiler.reparent.Attribute $r3;

        r0 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r14 := @parameter0: com.google.gxp.compiler.base.Node;

        r5 := @parameter1: java.lang.String;

        $r1 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.Parts nodeParts>;

        $r2 = interfaceinvoke $r1.<com.google.gxp.compiler.reparent.Parts: com.google.gxp.compiler.reparent.AttributeMap getAttributes()>();

        $r3 = virtualinvoke $r2.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.reparent.Attribute getAttribute(java.lang.String)>("content-type");

        if $r3 != null goto label1;

        r15 = r14;

        r16 = r5;

        goto label2;

     label1:
        r15 = $r3;

        $r4 = virtualinvoke $r3.<com.google.gxp.compiler.reparent.Attribute: com.google.gxp.compiler.base.Expression getValue()>();

        $r6 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        r16 = virtualinvoke $r4.<com.google.gxp.compiler.base.Expression: java.lang.String getStaticString(com.google.gxp.compiler.alerts.AlertSink,java.lang.String)>($r6, r5);

     label2:
        if r16 != null goto label3;

        $r17 = null;

        goto label4;

     label3:
        $r7 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.Reparenter this$0>;

        $r8 = staticinvoke <com.google.gxp.compiler.reparent.Reparenter: com.google.gxp.compiler.schema.SchemaFactory access$300(com.google.gxp.compiler.reparent.Reparenter)>($r7);

        $r17 = interfaceinvoke $r8.<com.google.gxp.compiler.schema.SchemaFactory: com.google.gxp.compiler.schema.Schema fromContentTypeName(java.lang.String)>(r16);

     label4:
        r9 = $r17;

        if $r17 != null goto label5;

        if r16 == null goto label5;

        $r13 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r12 = new com.google.gxp.compiler.reparent.UnknownContentTypeError;

        specialinvoke $r12.<com.google.gxp.compiler.reparent.UnknownContentTypeError: void <init>(com.google.gxp.compiler.base.Node,java.lang.String)>(r15, r16);

        interfaceinvoke $r13.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r12);

     label5:
        if r9 != null goto label6;

        $r18 = null;

        goto label7;

     label6:
        $r18 = new com.google.gxp.compiler.base.ContentType;

        $r10 = interfaceinvoke r15.<com.google.gxp.compiler.base.Node: com.google.gxp.compiler.alerts.SourcePosition getSourcePosition()>();

        $r11 = interfaceinvoke r15.<com.google.gxp.compiler.base.Node: java.lang.String getDisplayName()>();

        specialinvoke $r18.<com.google.gxp.compiler.base.ContentType: void <init>(com.google.gxp.compiler.alerts.SourcePosition,java.lang.String,com.google.gxp.compiler.schema.Schema)>($r10, $r11, r9);

     label7:
        return $r18;
    }

    public java.lang.Void visitParamElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)
    {
        com.google.gxp.compiler.schema.Schema $r25, $r30;
        com.google.gxp.compiler.reparent.Parts $r1, $r10;
        com.google.gxp.compiler.alerts.common.ContentTypeExpectedAlert $r19;
        com.google.gxp.compiler.base.Parameter $r13;
        com.google.gxp.compiler.base.SpaceOperatorSet $r9;
        com.google.gxp.compiler.base.ContentType $r26, r41;
        boolean z0, $z1, $z2, $z3, $z4, $z5, z6, z7, $z9, $z10, $z11;
        java.util.regex.PatternSyntaxException $r34;
        com.google.gxp.compiler.reparent.BadRegexError $r35;
        com.google.gxp.compiler.base.Type $r42, r43;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r0;
        com.google.gxp.compiler.base.FormalParameter $r12;
        java.util.List $r7;
        com.google.gxp.compiler.base.JavaAnnotation$Element[] $r5;
        java.util.regex.Pattern r39;
        com.google.gxp.compiler.base.JavaAnnotation$Element $r6;
        com.google.gxp.compiler.base.Expression $r11, r38, r40, r44;
        com.google.gxp.compiler.reparent.RequiresStaticContentError $r15;
        com.google.gxp.compiler.reparent.AttributeMap $r2;
        com.google.gxp.compiler.reparent.Reparenter $r24, $r29;
        com.google.gxp.compiler.alerts.AlertSink $r16, $r20, $r32, $r36;
        java.lang.String $r3, $r8, $r18, $r22, $r23, $r28, $r37;
        com.google.gxp.compiler.alerts.SourcePosition $r21, $r27;
        com.google.gxp.compiler.alerts.common.InvalidAttributeValueError $r31;
        com.google.gxp.compiler.base.StringConstant $r17;
        com.google.gxp.compiler.reparent.Attribute $r33;
        com.google.gxp.compiler.parser.GxpNamespace$GxpElement r4;
        com.google.gxp.compiler.reparent.EditableParts $r14;

        r0 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r4 := @parameter0: com.google.gxp.compiler.parser.GxpNamespace$GxpElement;

        $r1 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.Parts nodeParts>;

        $r2 = interfaceinvoke $r1.<com.google.gxp.compiler.reparent.Parts: com.google.gxp.compiler.reparent.AttributeMap getAttributes()>();

        $r3 = specialinvoke r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: java.lang.String getVariableName(com.google.gxp.compiler.reparent.AttributeMap,java.lang.String,boolean)>($r2, "name", 0);

        $r6 = <com.google.gxp.compiler.base.JavaAnnotation$Element: com.google.gxp.compiler.base.JavaAnnotation$Element PARAM>;

        $r5 = newarray (com.google.gxp.compiler.base.JavaAnnotation$Element)[0];

        $r7 = specialinvoke r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: java.util.List getJavaAnnotations(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.base.JavaAnnotation$Element,com.google.gxp.compiler.base.JavaAnnotation$Element[])>(r4, $r6, $r5);

        r38 = null;

        z6 = 0;

        r39 = null;

        r40 = null;

        z7 = 0;

        $r8 = virtualinvoke $r2.<com.google.gxp.compiler.reparent.AttributeMap: java.lang.String getOptional(java.lang.String,java.lang.String)>("content", null);

        r41 = null;

        if $r8 == null goto label01;

        $z11 = 1;

        $z10 = 1;

        goto label02;

     label01:
        $z11 = 0;

        $z10 = 0;

     label02:
        z0 = $z10;

        if $z11 == 0 goto label04;

        $r23 = "*";

        $z5 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z5 != 0 goto label03;

        $r32 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r31 = new com.google.gxp.compiler.alerts.common.InvalidAttributeValueError;

        $r33 = virtualinvoke $r2.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.reparent.Attribute getAttribute(java.lang.String)>("content");

        specialinvoke $r31.<com.google.gxp.compiler.alerts.common.InvalidAttributeValueError: void <init>(com.google.gxp.compiler.base.Node)>($r33);

        interfaceinvoke $r32.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r31);

     label03:
        $r24 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.Reparenter this$0>;

        $r25 = staticinvoke <com.google.gxp.compiler.reparent.Reparenter: com.google.gxp.compiler.schema.Schema access$200(com.google.gxp.compiler.reparent.Reparenter)>($r24);

        if $r25 == null goto label04;

        $r26 = new com.google.gxp.compiler.base.ContentType;

        $r27 = virtualinvoke r4.<com.google.gxp.compiler.parser.GxpNamespace$GxpElement: com.google.gxp.compiler.alerts.SourcePosition getSourcePosition()>();

        $r28 = virtualinvoke r4.<com.google.gxp.compiler.parser.GxpNamespace$GxpElement: java.lang.String getDisplayName()>();

        $r29 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.Reparenter this$0>;

        $r30 = staticinvoke <com.google.gxp.compiler.reparent.Reparenter: com.google.gxp.compiler.schema.Schema access$200(com.google.gxp.compiler.reparent.Reparenter)>($r29);

        specialinvoke $r26.<com.google.gxp.compiler.base.ContentType: void <init>(com.google.gxp.compiler.alerts.SourcePosition,java.lang.String,com.google.gxp.compiler.schema.Schema)>($r27, $r28, $r30);

        r41 = $r26;

     label04:
        $r42 = specialinvoke r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.base.Type createType(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.reparent.AttributeMap,boolean,com.google.gxp.compiler.base.Type)>(r4, $r2, 1, r41);

        r43 = $r42;

        if $r42 != null goto label05;

        return null;

     label05:
        if z0 == 0 goto label06;

        $z4 = virtualinvoke $r42.<com.google.gxp.compiler.base.Type: boolean isContent()>();

        if $z4 != 0 goto label06;

        $r20 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r19 = new com.google.gxp.compiler.alerts.common.ContentTypeExpectedAlert;

        $r21 = virtualinvoke r4.<com.google.gxp.compiler.parser.GxpNamespace$GxpElement: com.google.gxp.compiler.alerts.SourcePosition getSourcePosition()>();

        $r22 = virtualinvoke r4.<com.google.gxp.compiler.parser.GxpNamespace$GxpElement: java.lang.String getDisplayName()>();

        specialinvoke $r19.<com.google.gxp.compiler.alerts.common.ContentTypeExpectedAlert: void <init>(com.google.gxp.compiler.alerts.SourcePosition,java.lang.String,java.lang.String)>($r21, $r22, "when content=\'*\' is set.");

        interfaceinvoke $r20.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r19);

        r43 = r41;

     label06:
        $z9 = virtualinvoke r43.<com.google.gxp.compiler.base.Type: boolean takesDefaultParam()>();

        if $z9 == 0 goto label07;

        r38 = virtualinvoke $r2.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.base.Expression getOptionalExprValue(java.lang.String,com.google.gxp.compiler.base.Expression)>("default", null);

        z6 = virtualinvoke $r2.<com.google.gxp.compiler.reparent.AttributeMap: boolean getBooleanValue(java.lang.String)>("has-default");

     label07:
        $z1 = virtualinvoke r43.<com.google.gxp.compiler.base.Type: boolean takesRegexParam()>();

        if $z1 == 0 goto label12;

        $r18 = virtualinvoke $r2.<com.google.gxp.compiler.reparent.AttributeMap: java.lang.String getOptional(java.lang.String,java.lang.String)>("regex", null);

        if $r18 == null goto label11;

     label08:
        r39 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r18);

     label09:
        goto label11;

     label10:
        $r34 := @caughtexception;

        $r36 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r35 = new com.google.gxp.compiler.reparent.BadRegexError;

        $r37 = virtualinvoke $r34.<java.util.regex.PatternSyntaxException: java.lang.String getPattern()>();

        specialinvoke $r35.<com.google.gxp.compiler.reparent.BadRegexError: void <init>(com.google.gxp.compiler.base.Node,java.lang.String)>(r4, $r37);

        interfaceinvoke $r36.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r35);

     label11:
        goto label13;

     label12:
        r39 = virtualinvoke r43.<com.google.gxp.compiler.base.Type: java.util.regex.Pattern getPattern(java.lang.String)>($r3);

     label13:
        $z2 = virtualinvoke r43.<com.google.gxp.compiler.base.Type: boolean takesConstructorParam()>();

        if $z2 == 0 goto label14;

        r40 = virtualinvoke $r2.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.base.Expression getOptionalExprValue(java.lang.String,com.google.gxp.compiler.base.Expression)>("constructor", null);

        z7 = virtualinvoke $r2.<com.google.gxp.compiler.reparent.AttributeMap: boolean getBooleanValue(java.lang.String)>("has-constructor");

     label14:
        $r9 = specialinvoke r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.base.SpaceOperatorSet getSpaceOperators(com.google.gxp.compiler.reparent.AttributeMap)>($r2);

        $r10 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.Parts nodeParts>;

        $r11 = interfaceinvoke $r10.<com.google.gxp.compiler.reparent.Parts: com.google.gxp.compiler.base.Expression getContent()>();

        r44 = $r11;

        $z3 = virtualinvoke $r11.<com.google.gxp.compiler.base.Expression: boolean hasStaticString()>();

        if $z3 != 0 goto label15;

        $r16 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r15 = new com.google.gxp.compiler.reparent.RequiresStaticContentError;

        specialinvoke $r15.<com.google.gxp.compiler.reparent.RequiresStaticContentError: void <init>(com.google.gxp.compiler.base.Node)>(r4);

        interfaceinvoke $r16.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r15);

        $r17 = new com.google.gxp.compiler.base.StringConstant;

        specialinvoke $r17.<com.google.gxp.compiler.base.StringConstant: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.schema.Schema,java.lang.String)>(r4, null, "");

        r44 = $r17;

     label15:
        if $r3 == null goto label16;

        $r12 = new com.google.gxp.compiler.base.FormalParameter;

        specialinvoke $r12.<com.google.gxp.compiler.base.FormalParameter: void <init>(com.google.gxp.compiler.base.Node,java.lang.String,boolean,com.google.gxp.compiler.base.Type,com.google.gxp.compiler.base.Expression,boolean,java.util.regex.Pattern,com.google.gxp.compiler.base.Expression,boolean,com.google.gxp.compiler.base.SpaceOperatorSet)>(r4, $r3, z0, r43, r38, z6, r39, r40, z7, $r9);

        $r14 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.EditableParts output>;

        $r13 = new com.google.gxp.compiler.base.Parameter;

        specialinvoke $r13.<com.google.gxp.compiler.base.Parameter: void <init>(com.google.gxp.compiler.base.FormalParameter,java.util.List,com.google.gxp.compiler.base.Expression,boolean,com.google.gxp.compiler.base.Expression,boolean,com.google.gxp.compiler.base.Expression)>($r12, $r7, r38, z6, r40, z7, r44);

        virtualinvoke $r14.<com.google.gxp.compiler.reparent.EditableParts: void accumulate(com.google.gxp.compiler.base.Parameter)>($r13);

     label16:
        return null;

        catch java.util.regex.PatternSyntaxException from label08 to label09 with label10;
    }

    public java.lang.Void visitTemplateElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)
    {
        com.google.gxp.compiler.base.TemplateName$FullyQualified $r2;
        com.google.gxp.compiler.schema.Schema $r28;
        com.google.gxp.compiler.reparent.Parts $r3, $r6, $r15, $r17, $r19, $r21, $r23;
        com.google.gxp.compiler.base.ContentType $r5;
        boolean $z0;
        com.google.gxp.compiler.base.Constructor r9, $r33;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r0;
        java.util.List $r7, $r14, $r16, $r18, $r20, $r22, $r24;
        com.google.gxp.compiler.base.JavaAnnotation$Element[] $r10;
        com.google.gxp.compiler.reparent.MoreThanOneConstructorError $r29;
        com.google.gxp.compiler.base.JavaAnnotation$Element $r11, $r12, $r13;
        com.google.gxp.compiler.base.Expression $r25;
        com.google.gxp.compiler.reparent.AttributeMap $r4;
        com.google.gxp.compiler.alerts.AlertSink $r30;
        com.google.gxp.compiler.base.Node $r32;
        int $i0;
        com.google.gxp.compiler.base.Template $r26;
        java.lang.Object $r8, $r31;
        com.google.gxp.compiler.parser.GxpNamespace$GxpElement r1;
        com.google.gxp.compiler.reparent.EditableParts $r27;

        r0 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r1 := @parameter0: com.google.gxp.compiler.parser.GxpNamespace$GxpElement;

        $r2 = specialinvoke r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.base.TemplateName$FullyQualified createRootName(com.google.gxp.compiler.base.Node)>(r1);

        $r3 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.Parts nodeParts>;

        $r4 = interfaceinvoke $r3.<com.google.gxp.compiler.reparent.Parts: com.google.gxp.compiler.reparent.AttributeMap getAttributes()>();

        $r5 = specialinvoke r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.base.ContentType createContentType(com.google.gxp.compiler.base.Node,java.lang.String)>(r1, "text/html");

        $r6 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.Parts nodeParts>;

        $r7 = interfaceinvoke $r6.<com.google.gxp.compiler.reparent.Parts: java.util.List getConstructors()>();

        $z0 = interfaceinvoke $r7.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r33 = staticinvoke <com.google.gxp.compiler.base.Constructor: com.google.gxp.compiler.base.Constructor empty(com.google.gxp.compiler.base.Node)>(r1);

        goto label2;

     label1:
        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(0);

        $r33 = (com.google.gxp.compiler.base.Constructor) $r8;

     label2:
        r9 = $r33;

        $i0 = interfaceinvoke $r7.<java.util.List: int size()>();

        if $i0 <= 1 goto label3;

        $r30 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r29 = new com.google.gxp.compiler.reparent.MoreThanOneConstructorError;

        $r31 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(1);

        $r32 = (com.google.gxp.compiler.base.Node) $r31;

        specialinvoke $r29.<com.google.gxp.compiler.reparent.MoreThanOneConstructorError: void <init>(com.google.gxp.compiler.base.Node)>($r32);

        interfaceinvoke $r30.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r29);

     label3:
        $r13 = <com.google.gxp.compiler.base.JavaAnnotation$Element: com.google.gxp.compiler.base.JavaAnnotation$Element CLASS>;

        $r10 = newarray (com.google.gxp.compiler.base.JavaAnnotation$Element)[2];

        $r11 = <com.google.gxp.compiler.base.JavaAnnotation$Element: com.google.gxp.compiler.base.JavaAnnotation$Element INSTANCE>;

        $r10[0] = $r11;

        $r12 = <com.google.gxp.compiler.base.JavaAnnotation$Element: com.google.gxp.compiler.base.JavaAnnotation$Element INTERFACE>;

        $r10[1] = $r12;

        $r14 = specialinvoke r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: java.util.List getJavaAnnotations(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.base.JavaAnnotation$Element,com.google.gxp.compiler.base.JavaAnnotation$Element[])>(r1, $r13, $r10);

        $r15 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.Parts nodeParts>;

        $r16 = interfaceinvoke $r15.<com.google.gxp.compiler.reparent.Parts: java.util.List getImports()>();

        $r17 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.Parts nodeParts>;

        $r18 = interfaceinvoke $r17.<com.google.gxp.compiler.reparent.Parts: java.util.List getImplementsDeclarations()>();

        $r19 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.Parts nodeParts>;

        $r20 = interfaceinvoke $r19.<com.google.gxp.compiler.reparent.Parts: java.util.List getThrowsDeclarations()>();

        $r21 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.Parts nodeParts>;

        $r22 = interfaceinvoke $r21.<com.google.gxp.compiler.reparent.Parts: java.util.List getParameters()>();

        $r23 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.Parts nodeParts>;

        $r24 = interfaceinvoke $r23.<com.google.gxp.compiler.reparent.Parts: java.util.List getFormalTypeParameters()>();

        $r25 = specialinvoke r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.base.Expression getCollapsableContent(com.google.gxp.compiler.reparent.AttributeMap)>($r4);

        if $r5 == null goto label4;

        $r27 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.EditableParts output>;

        $r26 = new com.google.gxp.compiler.base.Template;

        $r28 = virtualinvoke $r5.<com.google.gxp.compiler.base.ContentType: com.google.gxp.compiler.schema.Schema getSchema()>();

        specialinvoke $r26.<com.google.gxp.compiler.base.Template: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.base.TemplateName$FullyQualified,com.google.gxp.compiler.schema.Schema,java.util.List,com.google.gxp.compiler.base.Constructor,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,com.google.gxp.compiler.base.Expression)>(r1, $r2, $r28, $r14, r9, $r16, $r18, $r20, $r22, $r24, $r25);

        virtualinvoke $r27.<com.google.gxp.compiler.reparent.EditableParts: void accumulate(com.google.gxp.compiler.base.Root)>($r26);

     label4:
        return null;
    }

    public java.lang.Void visitConstructorElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)
    {
        com.google.gxp.compiler.base.Constructor $r1;
        com.google.gxp.compiler.base.JavaAnnotation$Element $r4;
        com.google.gxp.compiler.reparent.Parts $r7;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r0;
        java.util.List $r6, $r8;
        com.google.gxp.compiler.base.JavaAnnotation$Element[] $r3;
        com.google.gxp.compiler.parser.GxpNamespace$GxpElement r2;
        com.google.gxp.compiler.reparent.EditableParts $r5;

        r0 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r2 := @parameter0: com.google.gxp.compiler.parser.GxpNamespace$GxpElement;

        $r5 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.EditableParts output>;

        $r1 = new com.google.gxp.compiler.base.Constructor;

        $r4 = <com.google.gxp.compiler.base.JavaAnnotation$Element: com.google.gxp.compiler.base.JavaAnnotation$Element CONSTRUCTOR>;

        $r3 = newarray (com.google.gxp.compiler.base.JavaAnnotation$Element)[0];

        $r6 = specialinvoke r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: java.util.List getJavaAnnotations(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.base.JavaAnnotation$Element,com.google.gxp.compiler.base.JavaAnnotation$Element[])>(r2, $r4, $r3);

        $r7 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.Parts nodeParts>;

        $r8 = interfaceinvoke $r7.<com.google.gxp.compiler.reparent.Parts: java.util.List getParameters()>();

        specialinvoke $r1.<com.google.gxp.compiler.base.Constructor: void <init>(com.google.gxp.compiler.base.Node,java.util.List,java.util.List)>(r2, $r6, $r8);

        virtualinvoke $r5.<com.google.gxp.compiler.reparent.EditableParts: void accumulate(com.google.gxp.compiler.base.Constructor)>($r1);

        return null;
    }

    public java.lang.Void visitImplementsElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)
    {
        com.google.gxp.compiler.parser.OutputLanguageNamespace $r3;
        com.google.gxp.compiler.base.UnboundImplementsDeclaration $r7;
        com.google.gxp.compiler.base.TemplateName $r6;
        com.google.gxp.compiler.reparent.Parts $r1;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r0;
        com.google.gxp.compiler.base.NativeImplementsDeclaration $r11;
        com.google.gxp.compiler.reparent.AttributeMap $r2;
        java.lang.String $r4, $r5;
        com.google.gxp.compiler.parser.GxpNamespace$GxpElement r8;
        com.google.gxp.compiler.reparent.EditableParts $r9, $r12;
        com.google.gxp.compiler.base.NativeType $r10;

        r0 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r8 := @parameter0: com.google.gxp.compiler.parser.GxpNamespace$GxpElement;

        $r1 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.Parts nodeParts>;

        $r2 = interfaceinvoke $r1.<com.google.gxp.compiler.reparent.Parts: com.google.gxp.compiler.reparent.AttributeMap getAttributes()>();

        $r3 = <com.google.gxp.compiler.parser.JavaNamespace: com.google.gxp.compiler.parser.OutputLanguageNamespace INSTANCE>;

        $r4 = virtualinvoke $r2.<com.google.gxp.compiler.reparent.AttributeMap: java.lang.String getOptional(com.google.gxp.compiler.parser.Namespace,java.lang.String,java.lang.String)>($r3, "interface", null);

        if $r4 == null goto label1;

        $r10 = new com.google.gxp.compiler.base.NativeType;

        specialinvoke $r10.<com.google.gxp.compiler.base.NativeType: void <init>(com.google.gxp.compiler.base.Node,java.lang.String)>(r8, $r4);

        $r12 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.EditableParts output>;

        $r11 = new com.google.gxp.compiler.base.NativeImplementsDeclaration;

        specialinvoke $r11.<com.google.gxp.compiler.base.NativeImplementsDeclaration: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.base.NativeType)>(r8, $r10);

        virtualinvoke $r12.<com.google.gxp.compiler.reparent.EditableParts: void accumulate(com.google.gxp.compiler.base.ImplementsDeclaration)>($r11);

        goto label2;

     label1:
        $r5 = virtualinvoke $r2.<com.google.gxp.compiler.reparent.AttributeMap: java.lang.String get(java.lang.String,java.lang.String)>("interface", null);

        if $r5 == null goto label2;

        $r6 = staticinvoke <com.google.gxp.compiler.base.TemplateName: com.google.gxp.compiler.base.TemplateName create(java.lang.String,java.lang.String)>(null, $r5);

        $r9 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.EditableParts output>;

        $r7 = new com.google.gxp.compiler.base.UnboundImplementsDeclaration;

        specialinvoke $r7.<com.google.gxp.compiler.base.UnboundImplementsDeclaration: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.base.TemplateName)>(r8, $r6);

        virtualinvoke $r9.<com.google.gxp.compiler.reparent.EditableParts: void accumulate(com.google.gxp.compiler.base.ImplementsDeclaration)>($r7);

     label2:
        return null;
    }

    public java.lang.Void visitThrowsElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)
    {
        com.google.gxp.compiler.alerts.SourcePosition $r6;
        com.google.gxp.compiler.base.ThrowsDeclaration $r8;
        com.google.gxp.compiler.base.TemplateName $r7;
        com.google.gxp.compiler.reparent.Parts $r1;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r0;
        com.google.gxp.compiler.reparent.AttributeMap $r2;
        com.google.gxp.compiler.alerts.AlertSink $r5;
        java.lang.String $r3;
        com.google.gxp.compiler.parser.GxpNamespace$GxpElement r4;
        com.google.gxp.compiler.reparent.EditableParts $r9;

        r0 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r4 := @parameter0: com.google.gxp.compiler.parser.GxpNamespace$GxpElement;

        $r1 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.Parts nodeParts>;

        $r2 = interfaceinvoke $r1.<com.google.gxp.compiler.reparent.Parts: com.google.gxp.compiler.reparent.AttributeMap getAttributes()>();

        $r3 = virtualinvoke $r2.<com.google.gxp.compiler.reparent.AttributeMap: java.lang.String get(java.lang.String,java.lang.String)>("exception", null);

        if $r3 == null goto label1;

        $r5 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r6 = virtualinvoke r4.<com.google.gxp.compiler.parser.GxpNamespace$GxpElement: com.google.gxp.compiler.alerts.SourcePosition getSourcePosition()>();

        $r7 = staticinvoke <com.google.gxp.compiler.base.TemplateName: com.google.gxp.compiler.base.TemplateName parseDottedName(com.google.gxp.compiler.alerts.AlertSink,com.google.gxp.compiler.alerts.SourcePosition,java.lang.String)>($r5, $r6, $r3);

        if $r7 == null goto label1;

        $r9 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.EditableParts output>;

        $r8 = new com.google.gxp.compiler.base.ThrowsDeclaration;

        specialinvoke $r8.<com.google.gxp.compiler.base.ThrowsDeclaration: void <init>(com.google.gxp.compiler.base.Node,java.lang.String)>(r4, $r3);

        virtualinvoke $r9.<com.google.gxp.compiler.reparent.EditableParts: void accumulate(com.google.gxp.compiler.base.ThrowsDeclaration)>($r8);

     label1:
        return null;
    }

    public java.lang.Void visitTypeParamElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)
    {
        com.google.gxp.compiler.base.FormalTypeParameter $r6;
        com.google.gxp.compiler.reparent.Parts $r1;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r0;
        com.google.gxp.compiler.reparent.AttributeMap $r2;
        java.lang.String $r3, $r4;
        com.google.gxp.compiler.parser.GxpNamespace$GxpElement r5;
        com.google.gxp.compiler.reparent.EditableParts $r7;
        com.google.gxp.compiler.base.NativeType $r8;

        r0 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r5 := @parameter0: com.google.gxp.compiler.parser.GxpNamespace$GxpElement;

        $r1 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.Parts nodeParts>;

        $r2 = interfaceinvoke $r1.<com.google.gxp.compiler.reparent.Parts: com.google.gxp.compiler.reparent.AttributeMap getAttributes()>();

        $r3 = specialinvoke r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: java.lang.String getVariableName(com.google.gxp.compiler.reparent.AttributeMap,java.lang.String,boolean)>($r2, "name", 0);

        $r4 = virtualinvoke $r2.<com.google.gxp.compiler.reparent.AttributeMap: java.lang.String getOptional(java.lang.String,java.lang.String)>("extends", null);

        if $r3 == null goto label3;

        if $r4 != null goto label1;

        $r8 = null;

        goto label2;

     label1:
        $r8 = new com.google.gxp.compiler.base.NativeType;

        specialinvoke $r8.<com.google.gxp.compiler.base.NativeType: void <init>(com.google.gxp.compiler.base.Node,java.lang.String)>(r5, $r4);

     label2:
        $r7 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.EditableParts output>;

        $r6 = new com.google.gxp.compiler.base.FormalTypeParameter;

        specialinvoke $r6.<com.google.gxp.compiler.base.FormalTypeParameter: void <init>(com.google.gxp.compiler.base.Node,java.lang.String,com.google.gxp.compiler.base.NativeType)>(r5, $r3, $r8);

        virtualinvoke $r7.<com.google.gxp.compiler.reparent.EditableParts: void accumulate(com.google.gxp.compiler.base.FormalTypeParameter)>($r6);

     label3:
        return null;
    }

    public java.lang.Void visitMsgElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)
    {
        com.google.gxp.compiler.base.Expression $r5;
        com.google.gxp.compiler.schema.Schema $r10;
        com.google.gxp.compiler.reparent.Parts $r1;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r0;
        com.google.gxp.compiler.reparent.AttributeMap $r2;
        java.lang.String $r3, $r4;
        com.google.gxp.compiler.parser.GxpNamespace$GxpElement r6;
        com.google.gxp.compiler.reparent.EditableParts $r9;
        com.google.gxp.compiler.base.ContentType $r7;
        boolean $z0;
        com.google.gxp.compiler.base.UnextractedMessage $r8;

        r0 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r6 := @parameter0: com.google.gxp.compiler.parser.GxpNamespace$GxpElement;

        $r1 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.Parts nodeParts>;

        $r2 = interfaceinvoke $r1.<com.google.gxp.compiler.reparent.Parts: com.google.gxp.compiler.reparent.AttributeMap getAttributes()>();

        $r3 = virtualinvoke $r2.<com.google.gxp.compiler.reparent.AttributeMap: java.lang.String getOptional(java.lang.String,java.lang.String)>("meaning", null);

        $r4 = virtualinvoke $r2.<com.google.gxp.compiler.reparent.AttributeMap: java.lang.String getOptional(java.lang.String,java.lang.String)>("comment", null);

        $z0 = virtualinvoke $r2.<com.google.gxp.compiler.reparent.AttributeMap: boolean getBooleanValue(java.lang.String)>("hidden");

        $r5 = specialinvoke r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.base.Expression getCollapsableContent(com.google.gxp.compiler.reparent.AttributeMap)>($r2);

        $r7 = specialinvoke r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.base.ContentType createContentType(com.google.gxp.compiler.base.Node,java.lang.String)>(r6, null);

        if $r7 != null goto label1;

        $r10 = null;

        goto label2;

     label1:
        $r10 = virtualinvoke $r7.<com.google.gxp.compiler.base.ContentType: com.google.gxp.compiler.schema.Schema getSchema()>();

     label2:
        $r9 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.EditableParts output>;

        $r8 = new com.google.gxp.compiler.base.UnextractedMessage;

        specialinvoke $r8.<com.google.gxp.compiler.base.UnextractedMessage: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.schema.Schema,java.lang.String,java.lang.String,boolean,com.google.gxp.compiler.base.Expression)>(r6, $r10, $r3, $r4, $z0, $r5);

        virtualinvoke $r9.<com.google.gxp.compiler.reparent.EditableParts: void accumulate(com.google.gxp.compiler.base.Expression)>($r8);

        return null;
    }

    public java.lang.Void visitNoMsgElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)
    {
        com.google.gxp.compiler.base.NoMessage $r3;
        com.google.gxp.compiler.base.Expression $r6;
        com.google.gxp.compiler.reparent.Parts $r1;
        com.google.gxp.compiler.parser.GxpNamespace$GxpElement r4;
        com.google.gxp.compiler.reparent.EditableParts $r5;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r0;
        com.google.gxp.compiler.reparent.AttributeMap $r2;

        r0 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r4 := @parameter0: com.google.gxp.compiler.parser.GxpNamespace$GxpElement;

        $r1 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.Parts nodeParts>;

        $r2 = interfaceinvoke $r1.<com.google.gxp.compiler.reparent.Parts: com.google.gxp.compiler.reparent.AttributeMap getAttributes()>();

        $r5 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.EditableParts output>;

        $r3 = new com.google.gxp.compiler.base.NoMessage;

        $r6 = specialinvoke r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.base.Expression getCollapsableContent(com.google.gxp.compiler.reparent.AttributeMap)>($r2);

        specialinvoke $r3.<com.google.gxp.compiler.base.NoMessage: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.base.Expression)>(r4, $r6);

        virtualinvoke $r5.<com.google.gxp.compiler.reparent.EditableParts: void accumulate(com.google.gxp.compiler.base.Expression)>($r3);

        return null;
    }

    public java.lang.Void visitPHElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)
    {
        com.google.gxp.compiler.reparent.Parts $r1;
        com.google.gxp.compiler.reparent.AttributeMap $r2;
        com.google.gxp.compiler.alerts.AlertSink $r10;
        int $i0;
        java.lang.String $r3, $r4, $r8, r16;
        com.google.gxp.compiler.alerts.common.InvalidAttributeValueError $r9;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r0;
        com.google.gxp.compiler.reparent.Attribute $r11;
        com.google.gxp.compiler.base.PlaceholderStart $r5;
        java.lang.StringBuilder $r12, $r13, $r14, $r15;
        com.google.gxp.compiler.parser.GxpNamespace$GxpElement r6;
        com.google.gxp.compiler.reparent.EditableParts $r7;

        r0 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r6 := @parameter0: com.google.gxp.compiler.parser.GxpNamespace$GxpElement;

        $r1 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.Parts nodeParts>;

        $r2 = interfaceinvoke $r1.<com.google.gxp.compiler.reparent.Parts: com.google.gxp.compiler.reparent.AttributeMap getAttributes()>();

        $r3 = virtualinvoke $r2.<com.google.gxp.compiler.reparent.AttributeMap: java.lang.String get(java.lang.String,java.lang.String)>("name", null);

        $r4 = virtualinvoke $r2.<com.google.gxp.compiler.reparent.AttributeMap: java.lang.String getOptional(java.lang.String,java.lang.String)>("example", null);

        r16 = $r4;

        if $r4 == null goto label1;

        $r8 = virtualinvoke $r4.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r8.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        $r10 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r9 = new com.google.gxp.compiler.alerts.common.InvalidAttributeValueError;

        $r11 = virtualinvoke $r2.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.reparent.Attribute getAttribute(java.lang.String)>("example");

        specialinvoke $r9.<com.google.gxp.compiler.alerts.common.InvalidAttributeValueError: void <init>(com.google.gxp.compiler.base.Node)>($r11);

        interfaceinvoke $r10.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r9);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<var>");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</var>");

        r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        if $r3 == null goto label2;

        $r7 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.EditableParts output>;

        $r5 = new com.google.gxp.compiler.base.PlaceholderStart;

        specialinvoke $r5.<com.google.gxp.compiler.base.PlaceholderStart: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.schema.Schema,java.lang.String,java.lang.String)>(r6, null, $r3, r16);

        virtualinvoke $r7.<com.google.gxp.compiler.reparent.EditableParts: void accumulate(com.google.gxp.compiler.base.Expression)>($r5);

     label2:
        return null;
    }

    public java.lang.Void visitEPHElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)
    {
        com.google.gxp.compiler.base.PlaceholderEnd $r1;
        com.google.gxp.compiler.parser.GxpNamespace$GxpElement r2;
        com.google.gxp.compiler.reparent.EditableParts $r3;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r0;

        r0 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r2 := @parameter0: com.google.gxp.compiler.parser.GxpNamespace$GxpElement;

        $r3 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.EditableParts output>;

        $r1 = new com.google.gxp.compiler.base.PlaceholderEnd;

        specialinvoke $r1.<com.google.gxp.compiler.base.PlaceholderEnd: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.schema.Schema)>(r2, null);

        virtualinvoke $r3.<com.google.gxp.compiler.reparent.EditableParts: void accumulate(com.google.gxp.compiler.base.Expression)>($r1);

        return null;
    }

    private java.util.List getBundles(com.google.gxp.compiler.reparent.AttributeMap)
    {
        java.lang.String[] $r4;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r7;
        java.util.ArrayList $r0;
        com.google.gxp.compiler.reparent.AttributeMap r1;
        com.google.gxp.compiler.parser.Namespace $r2;
        int i0, i1;
        java.lang.String $r3, r5, $r6;

        r7 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r1 := @parameter0: com.google.gxp.compiler.reparent.AttributeMap;

        $r0 = staticinvoke <com.google.gxp.com.google.common.collect.Lists: java.util.ArrayList newArrayList()>();

        $r2 = <com.google.gxp.compiler.parser.GxpNamespace: com.google.gxp.compiler.parser.Namespace INSTANCE>;

        $r3 = virtualinvoke r1.<com.google.gxp.compiler.reparent.AttributeMap: java.lang.String getOptional(com.google.gxp.compiler.parser.Namespace,java.lang.String,java.lang.String)>($r2, "bundles", null);

        if $r3 == null goto label2;

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        i0 = lengthof $r4;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r5 = $r4[i1];

        $r6 = virtualinvoke r5.<java.lang.String: java.lang.String trim()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r6);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r0;
    }

    public java.lang.Void visitCallElement(com.google.gxp.compiler.parser.CallNamespace$CallElement)
    {
        com.google.gxp.compiler.base.UnboundCall $r14;
        com.google.gxp.compiler.reparent.Parts $r1;
        com.google.gxp.compiler.alerts.common.UnknownAttributeError $r21;
        boolean $z0, $z1, $z2, $z3;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r0;
        com.google.gxp.compiler.base.ObjectConstant $r25;
        java.util.List $r6, $r7;
        com.google.gxp.com.google.common.collect.ImmutableMap $r18;
        com.google.gxp.compiler.base.Expression $r5, $r23;
        com.google.gxp.compiler.base.ConvertibleToContent $r4;
        com.google.gxp.compiler.reparent.AttributeMap $r2;
        com.google.gxp.compiler.parser.Namespace $r20;
        com.google.gxp.com.google.common.collect.ImmutableMap$Builder $r3;
        com.google.gxp.compiler.alerts.AlertSink $r10, $r22;
        java.lang.String $r12, $r17, $r24;
        com.google.gxp.compiler.alerts.SourcePosition $r11, $r16;
        java.util.Iterator $r8;
        com.google.gxp.compiler.parser.CallNamespace$CallElement r9;
        com.google.gxp.compiler.base.TemplateName $r13;
        com.google.gxp.compiler.base.StringConstant $r26;
        com.google.gxp.compiler.reparent.Attribute r27;
        java.lang.Object $r19;
        com.google.gxp.compiler.reparent.EditableParts $r15;

        r0 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r9 := @parameter0: com.google.gxp.compiler.parser.CallNamespace$CallElement;

        $r1 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.Parts nodeParts>;

        $r2 = interfaceinvoke $r1.<com.google.gxp.compiler.reparent.Parts: com.google.gxp.compiler.reparent.AttributeMap getAttributes()>();

        $r3 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableMap: com.google.gxp.com.google.common.collect.ImmutableMap$Builder builder()>();

        $r4 = new com.google.gxp.compiler.base.ConvertibleToContent;

        $r5 = specialinvoke r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.base.Expression getCollapsableContent(com.google.gxp.compiler.reparent.AttributeMap)>($r2);

        specialinvoke $r4.<com.google.gxp.compiler.base.ConvertibleToContent: void <init>(com.google.gxp.compiler.base.Expression)>($r5);

        $r6 = specialinvoke r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: java.util.List getBundles(com.google.gxp.compiler.reparent.AttributeMap)>($r2);

        $r7 = virtualinvoke $r2.<com.google.gxp.compiler.reparent.AttributeMap: java.util.List getUnusedAttributes()>();

        $r8 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r19 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r27 = (com.google.gxp.compiler.reparent.Attribute) $r19;

        $r20 = virtualinvoke r27.<com.google.gxp.compiler.reparent.Attribute: com.google.gxp.compiler.parser.Namespace getNamespace()>();

        $z2 = $r20 instanceof com.google.gxp.compiler.parser.NullNamespace;

        if $z2 == 0 goto label3;

        $r23 = virtualinvoke r27.<com.google.gxp.compiler.reparent.Attribute: com.google.gxp.compiler.base.Expression getValue()>();

        $z3 = $r23 instanceof com.google.gxp.compiler.base.StringConstant;

        if $z3 == 0 goto label2;

        $r25 = new com.google.gxp.compiler.base.ObjectConstant;

        $r26 = (com.google.gxp.compiler.base.StringConstant) $r23;

        specialinvoke $r25.<com.google.gxp.compiler.base.ObjectConstant: void <init>(com.google.gxp.compiler.base.StringConstant)>($r26);

        r27 = virtualinvoke r27.<com.google.gxp.compiler.reparent.Attribute: com.google.gxp.compiler.reparent.Attribute withValue(com.google.gxp.compiler.base.Expression)>($r25);

     label2:
        $r24 = virtualinvoke r27.<com.google.gxp.compiler.reparent.Attribute: java.lang.String getName()>();

        virtualinvoke $r3.<com.google.gxp.com.google.common.collect.ImmutableMap$Builder: com.google.gxp.com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>($r24, r27);

        goto label4;

     label3:
        $r22 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r21 = new com.google.gxp.compiler.alerts.common.UnknownAttributeError;

        specialinvoke $r21.<com.google.gxp.compiler.alerts.common.UnknownAttributeError: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.base.Node)>(r9, r27);

        interfaceinvoke $r22.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r21);

     label4:
        goto label1;

     label5:
        $r10 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r11 = virtualinvoke r9.<com.google.gxp.compiler.parser.CallNamespace$CallElement: com.google.gxp.compiler.alerts.SourcePosition getSourcePosition()>();

        $r12 = virtualinvoke r9.<com.google.gxp.compiler.parser.CallNamespace$CallElement: java.lang.String getTagName()>();

        $r13 = staticinvoke <com.google.gxp.compiler.base.TemplateName: com.google.gxp.compiler.base.TemplateName parseDottedName(com.google.gxp.compiler.alerts.AlertSink,com.google.gxp.compiler.alerts.SourcePosition,java.lang.String)>($r10, $r11, $r12);

        $z1 = virtualinvoke $r13.<com.google.gxp.compiler.base.TemplateName: boolean isValid()>();

        if $z1 == 0 goto label6;

        $r15 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.EditableParts output>;

        $r14 = new com.google.gxp.compiler.base.UnboundCall;

        $r16 = virtualinvoke r9.<com.google.gxp.compiler.parser.CallNamespace$CallElement: com.google.gxp.compiler.alerts.SourcePosition getSourcePosition()>();

        $r17 = virtualinvoke r9.<com.google.gxp.compiler.parser.CallNamespace$CallElement: java.lang.String getDisplayName()>();

        $r18 = virtualinvoke $r3.<com.google.gxp.com.google.common.collect.ImmutableMap$Builder: com.google.gxp.com.google.common.collect.ImmutableMap build()>();

        specialinvoke $r14.<com.google.gxp.compiler.base.UnboundCall: void <init>(com.google.gxp.compiler.alerts.SourcePosition,java.lang.String,com.google.gxp.compiler.base.TemplateName,java.util.Map,java.util.List,com.google.gxp.compiler.base.Expression)>($r16, $r17, $r13, $r18, $r6, $r4);

        virtualinvoke $r15.<com.google.gxp.compiler.reparent.EditableParts: void accumulate(com.google.gxp.compiler.base.Expression)>($r14);

     label6:
        return null;
    }

    public java.lang.Void visitParsedOutputElement(com.google.gxp.compiler.parser.OutputNamespace$ParsedOutputElement)
    {
        com.google.gxp.compiler.schema.ElementValidator$Flag $r26;
        com.google.gxp.compiler.base.Expression r27;
        com.google.gxp.compiler.schema.SchemaFactory $r10;
        com.google.gxp.compiler.schema.Schema $r17, $r28;
        com.google.gxp.compiler.reparent.Parts $r3;
        com.google.gxp.compiler.reparent.InvalidDoctypeError $r21;
        com.google.gxp.compiler.schema.ElementValidator $r1;
        com.google.gxp.compiler.reparent.AttributeMap $r4;
        com.google.gxp.compiler.parser.Namespace $r5, $r24;
        com.google.gxp.compiler.reparent.Reparenter $r9;
        com.google.gxp.compiler.alerts.AlertSink $r22;
        java.lang.String $r6, $r8, $r16, $r18, $r25;
        com.google.gxp.compiler.schema.DocType $r7, r23;
        boolean $z0;
        com.google.gxp.compiler.alerts.SourcePosition $r15;
        com.google.gxp.compiler.parser.OutputNamespace$ParsedOutputElement r0;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r2;
        com.google.gxp.compiler.base.StringConstant $r20;
        java.util.List $r11, $r12, $r19;
        com.google.gxp.compiler.base.OutputElement $r13;
        com.google.gxp.compiler.reparent.EditableParts $r14;

        r2 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r0 := @parameter0: com.google.gxp.compiler.parser.OutputNamespace$ParsedOutputElement;

        $r1 = virtualinvoke r0.<com.google.gxp.compiler.parser.OutputNamespace$ParsedOutputElement: com.google.gxp.compiler.schema.ElementValidator getValidator()>();

        $r3 = r2.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.Parts nodeParts>;

        $r4 = interfaceinvoke $r3.<com.google.gxp.compiler.reparent.Parts: com.google.gxp.compiler.reparent.AttributeMap getAttributes()>();

        $r5 = <com.google.gxp.compiler.parser.GxpNamespace: com.google.gxp.compiler.parser.Namespace INSTANCE>;

        $r6 = virtualinvoke $r4.<com.google.gxp.compiler.reparent.AttributeMap: java.lang.String getOptional(com.google.gxp.compiler.parser.Namespace,java.lang.String,java.lang.String)>($r5, "doctype", null);

        if $r6 != null goto label1;

        r23 = null;

        goto label2;

     label1:
        $r7 = virtualinvoke $r1.<com.google.gxp.compiler.schema.ElementValidator: com.google.gxp.compiler.schema.DocType getDocType(java.lang.String)>($r6);

        r23 = $r7;

        if $r7 != null goto label2;

        $r22 = r2.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r21 = new com.google.gxp.compiler.reparent.InvalidDoctypeError;

        specialinvoke $r21.<com.google.gxp.compiler.reparent.InvalidDoctypeError: void <init>(com.google.gxp.compiler.base.Node,java.lang.String)>(r0, $r6);

        interfaceinvoke $r22.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r21);

     label2:
        $r24 = <com.google.gxp.compiler.parser.GxpNamespace: com.google.gxp.compiler.parser.Namespace INSTANCE>;

        $r25 = virtualinvoke $r4.<com.google.gxp.compiler.reparent.AttributeMap: java.lang.String getOptional(com.google.gxp.compiler.parser.Namespace,java.lang.String,java.lang.String)>($r24, "ph", null);

        $r26 = <com.google.gxp.compiler.schema.ElementValidator$Flag: com.google.gxp.compiler.schema.ElementValidator$Flag NOENDTAG>;

        $z0 = virtualinvoke $r1.<com.google.gxp.compiler.schema.ElementValidator: boolean isFlagSet(com.google.gxp.compiler.schema.ElementValidator$Flag)>($r26);

        if $z0 == 0 goto label3;

        $r20 = new com.google.gxp.compiler.base.StringConstant;

        specialinvoke $r20.<com.google.gxp.compiler.base.StringConstant: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.schema.Schema,java.lang.String)>(r0, null, "");

        r27 = $r20;

        goto label4;

     label3:
        r27 = specialinvoke r2.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.base.Expression getCollapsableContent(com.google.gxp.compiler.reparent.AttributeMap)>($r4);

     label4:
        $r8 = virtualinvoke $r1.<com.google.gxp.compiler.schema.ElementValidator: java.lang.String getInnerContentType()>();

        if $r8 != null goto label5;

        $r28 = null;

        goto label6;

     label5:
        $r9 = r2.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.Reparenter this$0>;

        $r10 = staticinvoke <com.google.gxp.compiler.reparent.Reparenter: com.google.gxp.compiler.schema.SchemaFactory access$300(com.google.gxp.compiler.reparent.Reparenter)>($r9);

        $r28 = interfaceinvoke $r10.<com.google.gxp.compiler.schema.SchemaFactory: com.google.gxp.compiler.schema.Schema fromContentTypeName(java.lang.String)>($r8);

     label6:
        $r11 = specialinvoke r2.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: java.util.List getBundles(com.google.gxp.compiler.reparent.AttributeMap)>($r4);

        $r12 = virtualinvoke $r4.<com.google.gxp.compiler.reparent.AttributeMap: java.util.List getUnusedAttributes()>();

        $r14 = r2.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.EditableParts output>;

        $r13 = new com.google.gxp.compiler.base.OutputElement;

        $r15 = virtualinvoke r0.<com.google.gxp.compiler.parser.OutputNamespace$ParsedOutputElement: com.google.gxp.compiler.alerts.SourcePosition getSourcePosition()>();

        $r16 = virtualinvoke r0.<com.google.gxp.compiler.parser.OutputNamespace$ParsedOutputElement: java.lang.String getDisplayName()>();

        $r17 = virtualinvoke r0.<com.google.gxp.compiler.parser.OutputNamespace$ParsedOutputElement: com.google.gxp.compiler.schema.Schema getSchema()>();

        $r18 = virtualinvoke $r1.<com.google.gxp.compiler.schema.ElementValidator: java.lang.String getTagName()>();

        $r19 = specialinvoke r2.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: java.util.List checkAttributes(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.schema.ElementValidator,java.util.List)>(r0, $r1, $r12);

        specialinvoke $r13.<com.google.gxp.compiler.base.OutputElement: void <init>(com.google.gxp.compiler.alerts.SourcePosition,java.lang.String,com.google.gxp.compiler.schema.Schema,com.google.gxp.compiler.schema.Schema,java.lang.String,com.google.gxp.compiler.schema.ElementValidator,com.google.gxp.compiler.schema.DocType,java.util.List,java.util.List,java.lang.String,com.google.gxp.compiler.base.Expression)>($r15, $r16, $r17, $r28, $r18, $r1, r23, $r19, $r11, $r25, r27);

        virtualinvoke $r14.<com.google.gxp.compiler.reparent.EditableParts: void accumulate(com.google.gxp.compiler.base.Expression)>($r13);

        return null;
    }

    public java.lang.Void visitCppIncludeElement(com.google.gxp.compiler.parser.CppNamespace$CppElement)
    {
        com.google.gxp.compiler.reparent.ConflictingAttributesError $r10;
        java.lang.String[] $r17;
        com.google.gxp.compiler.reparent.Parts $r1;
        com.google.gxp.compiler.reparent.AttributeMap $r2;
        com.google.gxp.compiler.parser.Namespace $r11, $r14;
        com.google.gxp.compiler.alerts.AlertSink $r12, $r18;
        java.lang.String $r3, $r4;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r0;
        com.google.gxp.compiler.reparent.Attribute $r13, $r15;
        com.google.gxp.compiler.reparent.MissingAttributesError $r16;
        com.google.gxp.compiler.base.CppFileImport $r5;
        com.google.gxp.compiler.parser.CppNamespace$CppElement r6;
        com.google.gxp.compiler.reparent.EditableParts $r7, $r9;
        com.google.gxp.compiler.base.CppLibraryImport $r8;

        r0 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r6 := @parameter0: com.google.gxp.compiler.parser.CppNamespace$CppElement;

        $r1 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.Parts nodeParts>;

        $r2 = interfaceinvoke $r1.<com.google.gxp.compiler.reparent.Parts: com.google.gxp.compiler.reparent.AttributeMap getAttributes()>();

        $r3 = virtualinvoke $r2.<com.google.gxp.compiler.reparent.AttributeMap: java.lang.String getOptional(java.lang.String,java.lang.String)>("library", null);

        $r4 = virtualinvoke $r2.<com.google.gxp.compiler.reparent.AttributeMap: java.lang.String getOptional(java.lang.String,java.lang.String)>("file", null);

        if $r3 != null goto label1;

        if $r4 != null goto label1;

        $r18 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r16 = new com.google.gxp.compiler.reparent.MissingAttributesError;

        $r17 = newarray (java.lang.String)[2];

        $r17[0] = "library";

        $r17[1] = "file";

        specialinvoke $r16.<com.google.gxp.compiler.reparent.MissingAttributesError: void <init>(com.google.gxp.compiler.base.Node,java.lang.String[])>(r6, $r17);

        interfaceinvoke $r18.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r16);

        return null;

     label1:
        if $r3 == null goto label2;

        if $r4 == null goto label2;

        $r12 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r10 = new com.google.gxp.compiler.reparent.ConflictingAttributesError;

        $r11 = <com.google.gxp.compiler.parser.NullNamespace: com.google.gxp.compiler.parser.Namespace INSTANCE>;

        $r13 = virtualinvoke $r2.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.reparent.Attribute getAttribute(com.google.gxp.compiler.parser.Namespace,java.lang.String)>($r11, "library");

        $r14 = <com.google.gxp.compiler.parser.NullNamespace: com.google.gxp.compiler.parser.Namespace INSTANCE>;

        $r15 = virtualinvoke $r2.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.reparent.Attribute getAttribute(com.google.gxp.compiler.parser.Namespace,java.lang.String)>($r14, "file");

        specialinvoke $r10.<com.google.gxp.compiler.reparent.ConflictingAttributesError: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.reparent.Attribute,com.google.gxp.compiler.reparent.Attribute)>(r6, $r13, $r15);

        interfaceinvoke $r12.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r10);

        return null;

     label2:
        if $r3 == null goto label3;

        $r9 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.EditableParts output>;

        $r8 = new com.google.gxp.compiler.base.CppLibraryImport;

        specialinvoke $r8.<com.google.gxp.compiler.base.CppLibraryImport: void <init>(com.google.gxp.compiler.base.Node,java.lang.String)>(r6, $r3);

        virtualinvoke $r9.<com.google.gxp.compiler.reparent.EditableParts: void accumulate(com.google.gxp.compiler.base.Import)>($r8);

        goto label4;

     label3:
        if $r4 == null goto label4;

        $r7 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.EditableParts output>;

        $r5 = new com.google.gxp.compiler.base.CppFileImport;

        specialinvoke $r5.<com.google.gxp.compiler.base.CppFileImport: void <init>(com.google.gxp.compiler.base.Node,java.lang.String)>(r6, $r4);

        virtualinvoke $r7.<com.google.gxp.compiler.reparent.EditableParts: void accumulate(com.google.gxp.compiler.base.Import)>($r5);

     label4:
        return null;
    }

    public java.lang.Void visitJavaAnnotateElement(com.google.gxp.compiler.parser.JavaNamespace$JavaElement)
    {
        com.google.gxp.compiler.base.Expression $r13;
        com.google.gxp.compiler.base.JavaAnnotation$Element r15;
        com.google.gxp.compiler.reparent.Parts $r1;
        com.google.gxp.compiler.reparent.AttributeMap $r2;
        com.google.gxp.compiler.parser.JavaNamespace$JavaElement r5;
        com.google.gxp.compiler.alerts.AlertSink $r12;
        java.lang.String $r3, $r8, $r9, r14;
        com.google.gxp.compiler.alerts.SourcePosition $r7;
        java.lang.IllegalArgumentException $r10;
        com.google.gxp.compiler.alerts.common.InvalidAttributeValueError $r11;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r0;
        com.google.gxp.compiler.base.JavaAnnotation $r4;
        com.google.gxp.compiler.reparent.EditableParts $r6;

        r0 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r5 := @parameter0: com.google.gxp.compiler.parser.JavaNamespace$JavaElement;

        $r1 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.Parts nodeParts>;

        $r2 = interfaceinvoke $r1.<com.google.gxp.compiler.reparent.Parts: com.google.gxp.compiler.reparent.AttributeMap getAttributes()>();

        r14 = virtualinvoke $r2.<com.google.gxp.compiler.reparent.AttributeMap: java.lang.String get(java.lang.String,java.lang.String)>("with", null);

        r15 = null;

        $r3 = virtualinvoke $r2.<com.google.gxp.compiler.reparent.AttributeMap: java.lang.String getOptional(java.lang.String,java.lang.String)>("element", null);

        if $r3 == null goto label4;

     label1:
        $r9 = virtualinvoke $r3.<java.lang.String: java.lang.String toUpperCase()>();

        r15 = staticinvoke <com.google.gxp.compiler.base.JavaAnnotation$Element: com.google.gxp.compiler.base.JavaAnnotation$Element valueOf(java.lang.String)>($r9);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        $r12 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r11 = new com.google.gxp.compiler.alerts.common.InvalidAttributeValueError;

        $r13 = virtualinvoke $r2.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.base.Expression getValue(java.lang.String,com.google.gxp.compiler.base.Expression)>("element", null);

        specialinvoke $r11.<com.google.gxp.compiler.alerts.common.InvalidAttributeValueError: void <init>(com.google.gxp.compiler.base.Node)>($r13);

        interfaceinvoke $r12.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r11);

        r14 = null;

     label4:
        if r14 == null goto label5;

        $r6 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.EditableParts output>;

        $r4 = new com.google.gxp.compiler.base.JavaAnnotation;

        $r7 = virtualinvoke r5.<com.google.gxp.compiler.parser.JavaNamespace$JavaElement: com.google.gxp.compiler.alerts.SourcePosition getSourcePosition()>();

        $r8 = virtualinvoke r5.<com.google.gxp.compiler.parser.JavaNamespace$JavaElement: java.lang.String getDisplayName()>();

        specialinvoke $r4.<com.google.gxp.compiler.base.JavaAnnotation: void <init>(com.google.gxp.compiler.alerts.SourcePosition,java.lang.String,com.google.gxp.compiler.base.JavaAnnotation$Element,java.lang.String)>($r7, $r8, r15, r14);

        virtualinvoke $r6.<com.google.gxp.compiler.reparent.EditableParts: void accumulate(com.google.gxp.compiler.base.JavaAnnotation)>($r4);

     label5:
        return null;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    public java.lang.Void visitTextElement(com.google.gxp.compiler.parser.TextElement)
    {
        com.google.gxp.compiler.parser.TextElement r2;
        com.google.gxp.compiler.reparent.EditableParts $r3;
        java.lang.String $r4;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r0;
        com.google.gxp.compiler.base.StringConstant $r1;

        r0 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r2 := @parameter0: com.google.gxp.compiler.parser.TextElement;

        $r3 = r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.EditableParts output>;

        $r1 = new com.google.gxp.compiler.base.StringConstant;

        $r4 = virtualinvoke r2.<com.google.gxp.compiler.parser.TextElement: java.lang.String getText()>();

        specialinvoke $r1.<com.google.gxp.compiler.base.StringConstant: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.schema.Schema,java.lang.String)>(r2, null, $r4);

        virtualinvoke $r3.<com.google.gxp.compiler.reparent.EditableParts: void accumulate(com.google.gxp.compiler.base.Expression)>($r1);

        return null;
    }

    public java.lang.Void visitNullElement(com.google.gxp.compiler.parser.NullElement)
    {
        com.google.gxp.compiler.parser.NullElement r1;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r0;

        r0 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r1 := @parameter0: com.google.gxp.compiler.parser.NullElement;

        return null;
    }

    private java.util.List checkAttributes(com.google.gxp.compiler.base.Node, com.google.gxp.compiler.schema.ElementValidator, java.util.List)
    {
        com.google.gxp.compiler.base.Expression $r7;
        com.google.gxp.compiler.schema.SchemaFactory $r10;
        com.google.gxp.compiler.schema.Schema $r11;
        com.google.gxp.compiler.schema.ElementValidator r4;
        java.util.ArrayList $r1;
        com.google.gxp.compiler.reparent.Reparenter $r9;
        com.google.gxp.compiler.alerts.AlertSink $r15, $r18;
        com.google.gxp.compiler.base.Node r17;
        java.lang.String $r5, $r13, $r21;
        com.google.gxp.compiler.alerts.common.UnknownAttributeError $r16;
        boolean $z0, $z1, $z2, $z3;
        java.util.Iterator $r2;
        com.google.gxp.compiler.alerts.common.InvalidAttributeValueError $r14;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r8;
        com.google.gxp.compiler.base.StringConstant $r12;
        com.google.gxp.compiler.reparent.Attribute r20;
        java.util.List r0, $r19;
        com.google.gxp.compiler.schema.AttributeValidator $r6;
        java.lang.Object $r3;

        r8 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r17 := @parameter0: com.google.gxp.compiler.base.Node;

        r4 := @parameter1: com.google.gxp.compiler.schema.ElementValidator;

        r0 := @parameter2: java.util.List;

        $z0 = interfaceinvoke r0.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r19 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r19;

     label1:
        $r1 = staticinvoke <com.google.gxp.com.google.common.collect.Lists: java.util.ArrayList newArrayList()>();

        $r2 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label7;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r20 = (com.google.gxp.compiler.reparent.Attribute) $r3;

        $r5 = virtualinvoke r20.<com.google.gxp.compiler.reparent.Attribute: java.lang.String getName()>();

        $r6 = virtualinvoke r4.<com.google.gxp.compiler.schema.ElementValidator: com.google.gxp.compiler.schema.AttributeValidator getAttributeValidator(java.lang.String)>($r5);

        if $r6 != null goto label3;

        $r18 = r8.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r16 = new com.google.gxp.compiler.alerts.common.UnknownAttributeError;

        specialinvoke $r16.<com.google.gxp.compiler.alerts.common.UnknownAttributeError: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.base.Node)>(r17, r20);

        interfaceinvoke $r18.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r16);

        goto label6;

     label3:
        $r7 = virtualinvoke r20.<com.google.gxp.compiler.reparent.Attribute: com.google.gxp.compiler.base.Expression getValue()>();

        $z2 = $r7 instanceof com.google.gxp.compiler.base.StringConstant;

        if $z2 == 0 goto label4;

        $r12 = (com.google.gxp.compiler.base.StringConstant) $r7;

        $r13 = virtualinvoke $r12.<com.google.gxp.compiler.base.StringConstant: java.lang.String evaluate()>();

        $z3 = virtualinvoke $r6.<com.google.gxp.compiler.schema.AttributeValidator: boolean isValidValue(java.lang.String)>($r13);

        if $z3 != 0 goto label4;

        $r15 = r8.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r14 = new com.google.gxp.compiler.alerts.common.InvalidAttributeValueError;

        specialinvoke $r14.<com.google.gxp.compiler.alerts.common.InvalidAttributeValueError: void <init>(com.google.gxp.compiler.base.Node)>(r20);

        interfaceinvoke $r15.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r14);

     label4:
        $r21 = virtualinvoke $r6.<com.google.gxp.compiler.schema.AttributeValidator: java.lang.String getContentType()>();

        if $r21 == null goto label5;

        $r9 = r8.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.reparent.Reparenter this$0>;

        $r10 = staticinvoke <com.google.gxp.compiler.reparent.Reparenter: com.google.gxp.compiler.schema.SchemaFactory access$300(com.google.gxp.compiler.reparent.Reparenter)>($r9);

        $r11 = interfaceinvoke $r10.<com.google.gxp.compiler.schema.SchemaFactory: com.google.gxp.compiler.schema.Schema fromContentTypeName(java.lang.String)>($r21);

        r20 = virtualinvoke r20.<com.google.gxp.compiler.reparent.Attribute: com.google.gxp.compiler.reparent.Attribute withInnerSchema(com.google.gxp.compiler.schema.Schema)>($r11);

     label5:
        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>(r20);

     label6:
        goto label2;

     label7:
        return $r1;
    }

    private java.lang.String getVariableName(com.google.gxp.compiler.reparent.AttributeMap, java.lang.String, boolean)
    {
        com.google.gxp.compiler.reparent.IllegalVariableNameError $r8, $r11, $r14;
        com.google.gxp.compiler.reparent.AttributeMap r0;
        java.util.regex.Matcher $r4, $r6;
        com.google.gxp.compiler.alerts.AlertSink $r9, $r12, $r15;
        int $i0;
        java.lang.String r1, r2, $r17;
        boolean z0, $z1, $z2;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r7;
        com.google.gxp.compiler.reparent.Attribute $r10, $r13, $r16;
        java.util.regex.Pattern $r3, $r5;

        r7 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r0 := @parameter0: com.google.gxp.compiler.reparent.AttributeMap;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        if z0 == 0 goto label1;

        $r17 = virtualinvoke r0.<com.google.gxp.compiler.reparent.AttributeMap: java.lang.String getOptional(java.lang.String,java.lang.String)>(r1, null);

        goto label2;

     label1:
        $r17 = virtualinvoke r0.<com.google.gxp.compiler.reparent.AttributeMap: java.lang.String get(java.lang.String,java.lang.String)>(r1, null);

     label2:
        r2 = $r17;

        if $r17 == null goto label5;

        $r3 = staticinvoke <com.google.gxp.compiler.reparent.Reparenter: java.util.regex.Pattern access$400()>();

        $r4 = virtualinvoke $r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r17);

        $z1 = virtualinvoke $r4.<java.util.regex.Matcher: boolean matches()>();

        if $z1 != 0 goto label3;

        $r15 = r7.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r14 = new com.google.gxp.compiler.reparent.IllegalVariableNameError;

        $r16 = virtualinvoke r0.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.reparent.Attribute getAttribute(java.lang.String)>(r1);

        specialinvoke $r14.<com.google.gxp.compiler.reparent.IllegalVariableNameError: void <init>(com.google.gxp.compiler.base.Node,java.lang.String)>($r16, $r17);

        interfaceinvoke $r15.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r14);

        return null;

     label3:
        $r5 = staticinvoke <com.google.gxp.compiler.reparent.Reparenter: java.util.regex.Pattern access$500()>();

        $r6 = virtualinvoke $r5.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r17);

        $z2 = virtualinvoke $r6.<java.util.regex.Matcher: boolean matches()>();

        if $z2 == 0 goto label4;

        $r12 = r7.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r11 = new com.google.gxp.compiler.reparent.IllegalVariableNameError;

        $r13 = virtualinvoke r0.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.reparent.Attribute getAttribute(java.lang.String)>(r1);

        specialinvoke $r11.<com.google.gxp.compiler.reparent.IllegalVariableNameError: void <init>(com.google.gxp.compiler.base.Node,java.lang.String)>($r13, $r17);

        interfaceinvoke $r12.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r11);

        return null;

     label4:
        $i0 = virtualinvoke $r17.<java.lang.String: int length()>();

        if $i0 <= 64 goto label5;

        $r9 = r7.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r8 = new com.google.gxp.compiler.reparent.IllegalVariableNameError;

        $r10 = virtualinvoke r0.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.reparent.Attribute getAttribute(java.lang.String)>(r1);

        specialinvoke $r8.<com.google.gxp.compiler.reparent.IllegalVariableNameError: void <init>(com.google.gxp.compiler.base.Node,java.lang.String)>($r10, $r17);

        interfaceinvoke $r9.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r8);

        return null;

     label5:
        return r2;
    }

    public volatile java.lang.Object visitNullElement(com.google.gxp.compiler.parser.NullElement)
    {
        com.google.gxp.compiler.parser.NullElement r1;
        java.lang.Void $r2;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r0;

        r0 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r1 := @parameter0: com.google.gxp.compiler.parser.NullElement;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: java.lang.Void visitNullElement(com.google.gxp.compiler.parser.NullElement)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitTextElement(com.google.gxp.compiler.parser.TextElement)
    {
        java.lang.Void $r2;
        com.google.gxp.compiler.parser.TextElement r1;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r0;

        r0 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r1 := @parameter0: com.google.gxp.compiler.parser.TextElement;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: java.lang.Void visitTextElement(com.google.gxp.compiler.parser.TextElement)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitJavaAnnotateElement(com.google.gxp.compiler.parser.JavaNamespace$JavaElement)
    {
        com.google.gxp.compiler.parser.JavaNamespace$JavaElement r1;
        java.lang.Void $r2;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r0;

        r0 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r1 := @parameter0: com.google.gxp.compiler.parser.JavaNamespace$JavaElement;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: java.lang.Void visitJavaAnnotateElement(com.google.gxp.compiler.parser.JavaNamespace$JavaElement)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitCppIncludeElement(com.google.gxp.compiler.parser.CppNamespace$CppElement)
    {
        com.google.gxp.compiler.parser.CppNamespace$CppElement r1;
        java.lang.Void $r2;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r0;

        r0 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r1 := @parameter0: com.google.gxp.compiler.parser.CppNamespace$CppElement;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: java.lang.Void visitCppIncludeElement(com.google.gxp.compiler.parser.CppNamespace$CppElement)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitParsedOutputElement(com.google.gxp.compiler.parser.OutputNamespace$ParsedOutputElement)
    {
        java.lang.Void $r2;
        com.google.gxp.compiler.parser.OutputNamespace$ParsedOutputElement r1;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r0;

        r0 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r1 := @parameter0: com.google.gxp.compiler.parser.OutputNamespace$ParsedOutputElement;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: java.lang.Void visitParsedOutputElement(com.google.gxp.compiler.parser.OutputNamespace$ParsedOutputElement)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitCallElement(com.google.gxp.compiler.parser.CallNamespace$CallElement)
    {
        java.lang.Void $r2;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r0;
        com.google.gxp.compiler.parser.CallNamespace$CallElement r1;

        r0 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r1 := @parameter0: com.google.gxp.compiler.parser.CallNamespace$CallElement;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: java.lang.Void visitCallElement(com.google.gxp.compiler.parser.CallNamespace$CallElement)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitTypeParamElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)
    {
        java.lang.Void $r2;
        com.google.gxp.compiler.parser.GxpNamespace$GxpElement r1;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r0;

        r0 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r1 := @parameter0: com.google.gxp.compiler.parser.GxpNamespace$GxpElement;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: java.lang.Void visitTypeParamElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitThrowsElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)
    {
        java.lang.Void $r2;
        com.google.gxp.compiler.parser.GxpNamespace$GxpElement r1;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r0;

        r0 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r1 := @parameter0: com.google.gxp.compiler.parser.GxpNamespace$GxpElement;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: java.lang.Void visitThrowsElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitTemplateElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)
    {
        java.lang.Void $r2;
        com.google.gxp.compiler.parser.GxpNamespace$GxpElement r1;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r0;

        r0 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r1 := @parameter0: com.google.gxp.compiler.parser.GxpNamespace$GxpElement;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: java.lang.Void visitTemplateElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitPHElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)
    {
        java.lang.Void $r2;
        com.google.gxp.compiler.parser.GxpNamespace$GxpElement r1;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r0;

        r0 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r1 := @parameter0: com.google.gxp.compiler.parser.GxpNamespace$GxpElement;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: java.lang.Void visitPHElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitParamElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)
    {
        java.lang.Void $r2;
        com.google.gxp.compiler.parser.GxpNamespace$GxpElement r1;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r0;

        r0 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r1 := @parameter0: com.google.gxp.compiler.parser.GxpNamespace$GxpElement;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: java.lang.Void visitParamElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitNoMsgElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)
    {
        java.lang.Void $r2;
        com.google.gxp.compiler.parser.GxpNamespace$GxpElement r1;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r0;

        r0 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r1 := @parameter0: com.google.gxp.compiler.parser.GxpNamespace$GxpElement;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: java.lang.Void visitNoMsgElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitMsgElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)
    {
        java.lang.Void $r2;
        com.google.gxp.compiler.parser.GxpNamespace$GxpElement r1;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r0;

        r0 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r1 := @parameter0: com.google.gxp.compiler.parser.GxpNamespace$GxpElement;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: java.lang.Void visitMsgElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitLoopElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)
    {
        java.lang.Void $r2;
        com.google.gxp.compiler.parser.GxpNamespace$GxpElement r1;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r0;

        r0 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r1 := @parameter0: com.google.gxp.compiler.parser.GxpNamespace$GxpElement;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: java.lang.Void visitLoopElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitInterfaceElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)
    {
        java.lang.Void $r2;
        com.google.gxp.compiler.parser.GxpNamespace$GxpElement r1;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r0;

        r0 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r1 := @parameter0: com.google.gxp.compiler.parser.GxpNamespace$GxpElement;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: java.lang.Void visitInterfaceElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitImportElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)
    {
        java.lang.Void $r2;
        com.google.gxp.compiler.parser.GxpNamespace$GxpElement r1;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r0;

        r0 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r1 := @parameter0: com.google.gxp.compiler.parser.GxpNamespace$GxpElement;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: java.lang.Void visitImportElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitImplementsElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)
    {
        java.lang.Void $r2;
        com.google.gxp.compiler.parser.GxpNamespace$GxpElement r1;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r0;

        r0 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r1 := @parameter0: com.google.gxp.compiler.parser.GxpNamespace$GxpElement;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: java.lang.Void visitImplementsElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitIfElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)
    {
        java.lang.Void $r2;
        com.google.gxp.compiler.parser.GxpNamespace$GxpElement r1;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r0;

        r0 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r1 := @parameter0: com.google.gxp.compiler.parser.GxpNamespace$GxpElement;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: java.lang.Void visitIfElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitEvalElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)
    {
        java.lang.Void $r2;
        com.google.gxp.compiler.parser.GxpNamespace$GxpElement r1;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r0;

        r0 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r1 := @parameter0: com.google.gxp.compiler.parser.GxpNamespace$GxpElement;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: java.lang.Void visitEvalElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitEPHElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)
    {
        java.lang.Void $r2;
        com.google.gxp.compiler.parser.GxpNamespace$GxpElement r1;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r0;

        r0 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r1 := @parameter0: com.google.gxp.compiler.parser.GxpNamespace$GxpElement;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: java.lang.Void visitEPHElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitElseElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)
    {
        java.lang.Void $r2;
        com.google.gxp.compiler.parser.GxpNamespace$GxpElement r1;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r0;

        r0 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r1 := @parameter0: com.google.gxp.compiler.parser.GxpNamespace$GxpElement;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: java.lang.Void visitElseElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitElifElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)
    {
        java.lang.Void $r2;
        com.google.gxp.compiler.parser.GxpNamespace$GxpElement r1;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r0;

        r0 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r1 := @parameter0: com.google.gxp.compiler.parser.GxpNamespace$GxpElement;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: java.lang.Void visitElifElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitConstructorElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)
    {
        java.lang.Void $r2;
        com.google.gxp.compiler.parser.GxpNamespace$GxpElement r1;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r0;

        r0 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r1 := @parameter0: com.google.gxp.compiler.parser.GxpNamespace$GxpElement;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: java.lang.Void visitConstructorElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitCondElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)
    {
        java.lang.Void $r2;
        com.google.gxp.compiler.parser.GxpNamespace$GxpElement r1;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r0;

        r0 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r1 := @parameter0: com.google.gxp.compiler.parser.GxpNamespace$GxpElement;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: java.lang.Void visitCondElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitClauseElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)
    {
        java.lang.Void $r2;
        com.google.gxp.compiler.parser.GxpNamespace$GxpElement r1;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r0;

        r0 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r1 := @parameter0: com.google.gxp.compiler.parser.GxpNamespace$GxpElement;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: java.lang.Void visitClauseElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitAttrElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)
    {
        java.lang.Void $r2;
        com.google.gxp.compiler.parser.GxpNamespace$GxpElement r1;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r0;

        r0 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r1 := @parameter0: com.google.gxp.compiler.parser.GxpNamespace$GxpElement;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: java.lang.Void visitAttrElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitAbbrElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)
    {
        java.lang.Void $r2;
        com.google.gxp.compiler.parser.GxpNamespace$GxpElement r1;
        com.google.gxp.compiler.reparent.Reparenter$ElementVisitor r0;

        r0 := @this: com.google.gxp.compiler.reparent.Reparenter$ElementVisitor;

        r1 := @parameter0: com.google.gxp.compiler.parser.GxpNamespace$GxpElement;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.reparent.Reparenter$ElementVisitor: java.lang.Void visitAbbrElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)>(r1);

        return $r2;
    }
}
