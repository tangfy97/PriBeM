public class com.hp.hpl.jena.sparql.serializer.FormatterElement extends com.hp.hpl.jena.sparql.serializer.FormatterBase implements com.hp.hpl.jena.sparql.syntax.ElementVisitor
{
    public static final int INDENT;
    public static final boolean PATTERN_MARKERS;
    public static final boolean GROUP_SEP_DOT;
    public static final boolean GROUP_FIRST_ON_SAME_LINE;
    public static final boolean PRETTY_PRINT;
    public static final boolean UNION_MARKERS;
    public static final boolean GROUP_UNNEST_ONE;
    public static final boolean GRAPH_FIXED_INDENT;
    public static final boolean ELEMENT1_FIXED_INDENT;
    public static final int TRIPLES_SUBJECT_COLUMN;
    public static final int TRIPLES_SUBJECT_LONG;
    public static final int TRIPLES_PROPERTY_COLUMN;
    public static final int TRIPLES_COLUMN_GAP;
    int subjectWidth;
    int predicateWidth;

    public void <init>(org.apache.jena.atlas.io.IndentedWriter, com.hp.hpl.jena.sparql.serializer.SerializationContext)
    {
        com.hp.hpl.jena.sparql.serializer.SerializationContext r2;
        int $i1, $i3;
        org.apache.jena.atlas.io.IndentedWriter r1;
        com.hp.hpl.jena.sparql.serializer.FormatterElement r0;

        r0 := @this: com.hp.hpl.jena.sparql.serializer.FormatterElement;

        r1 := @parameter0: org.apache.jena.atlas.io.IndentedWriter;

        r2 := @parameter1: com.hp.hpl.jena.sparql.serializer.SerializationContext;

        specialinvoke r0.<com.hp.hpl.jena.sparql.serializer.FormatterBase: void <init>(org.apache.jena.atlas.io.IndentedWriter,com.hp.hpl.jena.sparql.serializer.SerializationContext)>(r1, r2);

        $i1 = (int) -1;

        r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: int subjectWidth> = $i1;

        $i3 = (int) -1;

        r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: int predicateWidth> = $i3;

        return;
    }

    public static void format(org.apache.jena.atlas.io.IndentedWriter, com.hp.hpl.jena.sparql.serializer.SerializationContext, com.hp.hpl.jena.sparql.syntax.Element)
    {
        com.hp.hpl.jena.sparql.serializer.SerializationContext r2;
        com.hp.hpl.jena.sparql.syntax.Element r3;
        org.apache.jena.atlas.io.IndentedWriter r1;
        com.hp.hpl.jena.sparql.serializer.FormatterElement $r0;

        r1 := @parameter0: org.apache.jena.atlas.io.IndentedWriter;

        r2 := @parameter1: com.hp.hpl.jena.sparql.serializer.SerializationContext;

        r3 := @parameter2: com.hp.hpl.jena.sparql.syntax.Element;

        $r0 = new com.hp.hpl.jena.sparql.serializer.FormatterElement;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: void <init>(org.apache.jena.atlas.io.IndentedWriter,com.hp.hpl.jena.sparql.serializer.SerializationContext)>(r1, r2);

        virtualinvoke $r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: void startVisit()>();

        virtualinvoke r3.<com.hp.hpl.jena.sparql.syntax.Element: void visit(com.hp.hpl.jena.sparql.syntax.ElementVisitor)>($r0);

        virtualinvoke $r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: void finishVisit()>();

        return;
    }

    public static java.lang.String asString(com.hp.hpl.jena.sparql.syntax.Element)
    {
        com.hp.hpl.jena.sparql.serializer.SerializationContext $r0;
        com.hp.hpl.jena.sparql.syntax.Element r2;
        org.apache.jena.atlas.io.IndentedLineBuffer $r1;
        java.lang.String $r3;

        r2 := @parameter0: com.hp.hpl.jena.sparql.syntax.Element;

        $r0 = new com.hp.hpl.jena.sparql.serializer.SerializationContext;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.serializer.SerializationContext: void <init>()>();

        $r1 = new org.apache.jena.atlas.io.IndentedLineBuffer;

        specialinvoke $r1.<org.apache.jena.atlas.io.IndentedLineBuffer: void <init>()>();

        staticinvoke <com.hp.hpl.jena.sparql.serializer.FormatterElement: void format(org.apache.jena.atlas.io.IndentedWriter,com.hp.hpl.jena.sparql.serializer.SerializationContext,com.hp.hpl.jena.sparql.syntax.Element)>($r1, $r0, r2);

        $r3 = virtualinvoke $r1.<org.apache.jena.atlas.io.IndentedLineBuffer: java.lang.String toString()>();

        return $r3;
    }

    public boolean topMustBeGroup()
    {
        com.hp.hpl.jena.sparql.serializer.FormatterElement r0;

        r0 := @this: com.hp.hpl.jena.sparql.serializer.FormatterElement;

        return 0;
    }

    public void visit(com.hp.hpl.jena.sparql.syntax.ElementTriplesBlock)
    {
        com.hp.hpl.jena.sparql.syntax.ElementTriplesBlock r0;
        com.hp.hpl.jena.sparql.core.BasicPattern $r2;
        org.apache.jena.atlas.io.IndentedWriter $r3;
        com.hp.hpl.jena.sparql.serializer.FormatterElement r1;
        boolean $z0;

        r1 := @this: com.hp.hpl.jena.sparql.serializer.FormatterElement;

        r0 := @parameter0: com.hp.hpl.jena.sparql.syntax.ElementTriplesBlock;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.syntax.ElementTriplesBlock: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r3 = r1.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r3.<org.apache.jena.atlas.io.IndentedWriter: void println(java.lang.String)>("# Empty BGP");

        return;

     label1:
        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.syntax.ElementTriplesBlock: com.hp.hpl.jena.sparql.core.BasicPattern getPattern()>();

        virtualinvoke r1.<com.hp.hpl.jena.sparql.serializer.FormatterElement: void formatTriples(com.hp.hpl.jena.sparql.core.BasicPattern)>($r2);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.syntax.ElementPathBlock)
    {
        com.hp.hpl.jena.sparql.core.Prologue $r11;
        com.hp.hpl.jena.sparql.serializer.SerializationContext $r10;
        com.hp.hpl.jena.graph.Node $r6, $r13, $r14, $r16, $r18;
        com.hp.hpl.jena.sparql.core.PathBlock $r1;
        com.hp.hpl.jena.sparql.path.Path $r9;
        boolean $z0, $z1, $z2, z3;
        java.util.Iterator $r2;
        com.hp.hpl.jena.sparql.core.TriplePath r4;
        com.hp.hpl.jena.sparql.syntax.ElementPathBlock r0;
        org.apache.jena.atlas.io.IndentedWriter $r7, $r8, $r12, $r15, $r17, $r19, $r20;
        com.hp.hpl.jena.sparql.serializer.FormatterElement r5;
        java.lang.Object $r3;

        r5 := @this: com.hp.hpl.jena.sparql.serializer.FormatterElement;

        r0 := @parameter0: com.hp.hpl.jena.sparql.syntax.ElementPathBlock;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.syntax.ElementPathBlock: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r20 = r5.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r20.<org.apache.jena.atlas.io.IndentedWriter: void println(java.lang.String)>("# Empty BGP");

        return;

     label1:
        z3 = 1;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.syntax.ElementPathBlock: com.hp.hpl.jena.sparql.core.PathBlock getPattern()>();

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.core.PathBlock: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.hp.hpl.jena.sparql.core.TriplePath) $r3;

        if z3 != 0 goto label3;

        $r19 = r5.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r19.<org.apache.jena.atlas.io.IndentedWriter: void println(java.lang.String)>(" .");

     label3:
        z3 = 0;

        $z2 = virtualinvoke r4.<com.hp.hpl.jena.sparql.core.TriplePath: boolean isTriple()>();

        if $z2 == 0 goto label4;

        $r14 = virtualinvoke r4.<com.hp.hpl.jena.sparql.core.TriplePath: com.hp.hpl.jena.graph.Node getSubject()>();

        specialinvoke r5.<com.hp.hpl.jena.sparql.serializer.FormatterElement: int printSubject(com.hp.hpl.jena.graph.Node)>($r14);

        $r15 = r5.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r15.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>(" ");

        $r16 = virtualinvoke r4.<com.hp.hpl.jena.sparql.core.TriplePath: com.hp.hpl.jena.graph.Node getPredicate()>();

        specialinvoke r5.<com.hp.hpl.jena.sparql.serializer.FormatterElement: int printProperty(com.hp.hpl.jena.graph.Node)>($r16);

        $r17 = r5.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r17.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>(" ");

        $r18 = virtualinvoke r4.<com.hp.hpl.jena.sparql.core.TriplePath: com.hp.hpl.jena.graph.Node getObject()>();

        specialinvoke r5.<com.hp.hpl.jena.sparql.serializer.FormatterElement: int printObject(com.hp.hpl.jena.graph.Node)>($r18);

        goto label5;

     label4:
        $r6 = virtualinvoke r4.<com.hp.hpl.jena.sparql.core.TriplePath: com.hp.hpl.jena.graph.Node getSubject()>();

        specialinvoke r5.<com.hp.hpl.jena.sparql.serializer.FormatterElement: int printSubject(com.hp.hpl.jena.graph.Node)>($r6);

        $r7 = r5.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r7.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>(" ");

        $r8 = r5.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        $r9 = virtualinvoke r4.<com.hp.hpl.jena.sparql.core.TriplePath: com.hp.hpl.jena.sparql.path.Path getPath()>();

        $r10 = r5.<com.hp.hpl.jena.sparql.serializer.FormatterElement: com.hp.hpl.jena.sparql.serializer.SerializationContext context>;

        $r11 = virtualinvoke $r10.<com.hp.hpl.jena.sparql.serializer.SerializationContext: com.hp.hpl.jena.sparql.core.Prologue getPrologue()>();

        staticinvoke <com.hp.hpl.jena.sparql.path.PathWriter: void write(org.apache.jena.atlas.io.IndentedWriter,com.hp.hpl.jena.sparql.path.Path,com.hp.hpl.jena.sparql.core.Prologue)>($r8, $r9, $r11);

        $r12 = r5.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r12.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>(" ");

        $r13 = virtualinvoke r4.<com.hp.hpl.jena.sparql.core.TriplePath: com.hp.hpl.jena.graph.Node getObject()>();

        specialinvoke r5.<com.hp.hpl.jena.sparql.serializer.FormatterElement: int printObject(com.hp.hpl.jena.graph.Node)>($r13);

     label5:
        goto label2;

     label6:
        return;
    }

    public void visit(com.hp.hpl.jena.sparql.syntax.ElementDataset)
    {
        com.hp.hpl.jena.sparql.syntax.ElementDataset r0;
        com.hp.hpl.jena.sparql.syntax.Element $r1, $r3;
        com.hp.hpl.jena.sparql.serializer.FormatterElement r2;

        r2 := @this: com.hp.hpl.jena.sparql.serializer.FormatterElement;

        r0 := @parameter0: com.hp.hpl.jena.sparql.syntax.ElementDataset;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.syntax.ElementDataset: com.hp.hpl.jena.sparql.syntax.Element getPatternElement()>();

        if $r1 == null goto label1;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.syntax.ElementDataset: com.hp.hpl.jena.sparql.syntax.Element getPatternElement()>();

        virtualinvoke r2.<com.hp.hpl.jena.sparql.serializer.FormatterElement: void visitAsGroup(com.hp.hpl.jena.sparql.syntax.Element)>($r3);

     label1:
        return;
    }

    public void visit(com.hp.hpl.jena.sparql.syntax.ElementFilter)
    {
        com.hp.hpl.jena.sparql.serializer.SerializationContext $r5;
        org.apache.jena.atlas.io.IndentedWriter $r1, $r6, $r7, $r8;
        com.hp.hpl.jena.sparql.serializer.FormatterElement r0;
        com.hp.hpl.jena.sparql.syntax.ElementFilter r2;
        com.hp.hpl.jena.sparql.expr.Expr $r3;
        com.hp.hpl.jena.sparql.serializer.FmtExprSPARQL $r4;
        boolean $z0, $z1, z2, z3, z4;

        r0 := @this: com.hp.hpl.jena.sparql.serializer.FormatterElement;

        r2 := @parameter0: com.hp.hpl.jena.sparql.syntax.ElementFilter;

        $r1 = r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r1.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>("FILTER ");

        $r3 = virtualinvoke r2.<com.hp.hpl.jena.sparql.syntax.ElementFilter: com.hp.hpl.jena.sparql.expr.Expr getExpr()>();

        $r4 = new com.hp.hpl.jena.sparql.serializer.FmtExprSPARQL;

        $r6 = r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        $r5 = r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: com.hp.hpl.jena.sparql.serializer.SerializationContext context>;

        specialinvoke $r4.<com.hp.hpl.jena.sparql.serializer.FmtExprSPARQL: void <init>(org.apache.jena.atlas.io.IndentedWriter,com.hp.hpl.jena.sparql.serializer.SerializationContext)>($r6, $r5);

        z2 = 0;

        z4 = 0;

        z3 = 0;

        $z0 = interfaceinvoke $r3.<com.hp.hpl.jena.sparql.expr.Expr: boolean isVariable()>();

        if $z0 == 0 goto label1;

        z2 = 1;

        z4 = 1;

        z3 = 1;

     label1:
        $z1 = interfaceinvoke $r3.<com.hp.hpl.jena.sparql.expr.Expr: boolean isConstant()>();

        if $z1 == 0 goto label2;

        z2 = 1;

        z4 = 1;

        z3 = 1;

     label2:
        if z4 == 0 goto label3;

        $r8 = r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r8.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>("( ");

     label3:
        virtualinvoke $r4.<com.hp.hpl.jena.sparql.serializer.FmtExprSPARQL: void format(com.hp.hpl.jena.sparql.expr.Expr)>($r3);

        if z3 == 0 goto label4;

        $r7 = r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r7.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>(" )");

     label4:
        return;
    }

    public void visit(com.hp.hpl.jena.sparql.syntax.ElementAssign)
    {
        com.hp.hpl.jena.sparql.serializer.SerializationContext $r12;
        com.hp.hpl.jena.sparql.expr.Expr $r14;
        java.lang.String $r7, $r9;
        com.hp.hpl.jena.sparql.serializer.FmtExprSPARQL $r11;
        com.hp.hpl.jena.sparql.syntax.ElementAssign r5;
        com.hp.hpl.jena.sparql.core.Var $r6;
        org.apache.jena.atlas.io.IndentedWriter $r1, $r3, $r10, $r13, $r15;
        com.hp.hpl.jena.sparql.serializer.FormatterElement r0;
        java.lang.StringBuilder $r2, $r4, $r8;

        r0 := @this: com.hp.hpl.jena.sparql.serializer.FormatterElement;

        r5 := @parameter0: com.hp.hpl.jena.sparql.syntax.ElementAssign;

        $r1 = r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r1.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>("LET (");

        $r3 = r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?");

        $r6 = virtualinvoke r5.<com.hp.hpl.jena.sparql.syntax.ElementAssign: com.hp.hpl.jena.sparql.core.Var getVar()>();

        $r7 = virtualinvoke $r6.<com.hp.hpl.jena.sparql.core.Var: java.lang.String getVarName()>();

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>($r9);

        $r10 = r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r10.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>(" := ");

        $r11 = new com.hp.hpl.jena.sparql.serializer.FmtExprSPARQL;

        $r13 = r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        $r12 = r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: com.hp.hpl.jena.sparql.serializer.SerializationContext context>;

        specialinvoke $r11.<com.hp.hpl.jena.sparql.serializer.FmtExprSPARQL: void <init>(org.apache.jena.atlas.io.IndentedWriter,com.hp.hpl.jena.sparql.serializer.SerializationContext)>($r13, $r12);

        $r14 = virtualinvoke r5.<com.hp.hpl.jena.sparql.syntax.ElementAssign: com.hp.hpl.jena.sparql.expr.Expr getExpr()>();

        virtualinvoke $r11.<com.hp.hpl.jena.sparql.serializer.FmtExprSPARQL: void format(com.hp.hpl.jena.sparql.expr.Expr)>($r14);

        $r15 = r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r15.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>(")");

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.syntax.ElementBind)
    {
        com.hp.hpl.jena.sparql.serializer.SerializationContext $r3;
        com.hp.hpl.jena.sparql.expr.Expr $r6;
        com.hp.hpl.jena.sparql.syntax.ElementBind r5;
        com.hp.hpl.jena.sparql.serializer.FmtExprSPARQL $r2;
        java.lang.String $r12, $r14;
        com.hp.hpl.jena.sparql.core.Var $r11;
        org.apache.jena.atlas.io.IndentedWriter $r1, $r4, $r7, $r9, $r15;
        com.hp.hpl.jena.sparql.serializer.FormatterElement r0;
        java.lang.StringBuilder $r8, $r10, $r13;

        r0 := @this: com.hp.hpl.jena.sparql.serializer.FormatterElement;

        r5 := @parameter0: com.hp.hpl.jena.sparql.syntax.ElementBind;

        $r1 = r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r1.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>("BIND(");

        $r2 = new com.hp.hpl.jena.sparql.serializer.FmtExprSPARQL;

        $r4 = r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        $r3 = r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: com.hp.hpl.jena.sparql.serializer.SerializationContext context>;

        specialinvoke $r2.<com.hp.hpl.jena.sparql.serializer.FmtExprSPARQL: void <init>(org.apache.jena.atlas.io.IndentedWriter,com.hp.hpl.jena.sparql.serializer.SerializationContext)>($r4, $r3);

        $r6 = virtualinvoke r5.<com.hp.hpl.jena.sparql.syntax.ElementBind: com.hp.hpl.jena.sparql.expr.Expr getExpr()>();

        virtualinvoke $r2.<com.hp.hpl.jena.sparql.serializer.FmtExprSPARQL: void format(com.hp.hpl.jena.sparql.expr.Expr)>($r6);

        $r7 = r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r7.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>(" AS ");

        $r9 = r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?");

        $r11 = virtualinvoke r5.<com.hp.hpl.jena.sparql.syntax.ElementBind: com.hp.hpl.jena.sparql.core.Var getVar()>();

        $r12 = virtualinvoke $r11.<com.hp.hpl.jena.sparql.core.Var: java.lang.String getVarName()>();

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>($r14);

        $r15 = r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r15.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>(")");

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.syntax.ElementData)
    {
        java.util.List $r3, $r4;
        com.hp.hpl.jena.sparql.core.Prologue $r6;
        com.hp.hpl.jena.sparql.syntax.ElementData r1;
        com.hp.hpl.jena.sparql.serializer.SerializationContext $r5;
        org.apache.jena.atlas.io.IndentedWriter $r2;
        com.hp.hpl.jena.sparql.serializer.FormatterElement r0;

        r0 := @this: com.hp.hpl.jena.sparql.serializer.FormatterElement;

        r1 := @parameter0: com.hp.hpl.jena.sparql.syntax.ElementData;

        $r2 = r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        $r3 = virtualinvoke r1.<com.hp.hpl.jena.sparql.syntax.ElementData: java.util.List getVars()>();

        $r4 = virtualinvoke r1.<com.hp.hpl.jena.sparql.syntax.ElementData: java.util.List getRows()>();

        $r5 = r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: com.hp.hpl.jena.sparql.serializer.SerializationContext context>;

        $r6 = virtualinvoke $r5.<com.hp.hpl.jena.sparql.serializer.SerializationContext: com.hp.hpl.jena.sparql.core.Prologue getPrologue()>();

        staticinvoke <com.hp.hpl.jena.sparql.serializer.QuerySerializer: void outputDataBlock(org.apache.jena.atlas.io.IndentedWriter,java.util.List,java.util.List,com.hp.hpl.jena.sparql.core.Prologue)>($r2, $r3, $r4, $r6);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.syntax.ElementUnion)
    {
        java.util.ListIterator $r5;
        int $i0;
        boolean $z0, z1;
        com.hp.hpl.jena.sparql.syntax.ElementUnion r0;
        org.apache.jena.atlas.io.IndentedWriter $r3, $r6, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r20;
        com.hp.hpl.jena.sparql.serializer.FormatterElement r2;
        java.util.List $r1, $r4, $r17;
        com.hp.hpl.jena.sparql.syntax.Element r8, $r19;
        java.lang.Object $r7, $r18;

        r2 := @this: com.hp.hpl.jena.sparql.serializer.FormatterElement;

        r0 := @parameter0: com.hp.hpl.jena.sparql.syntax.ElementUnion;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.syntax.ElementUnion: java.util.List getElements()>();

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 != 1 goto label1;

        $r14 = r2.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r14.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>("UNION");

        $r15 = r2.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r15.<org.apache.jena.atlas.io.IndentedWriter: void incIndent(int)>(2);

        $r16 = r2.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r16.<org.apache.jena.atlas.io.IndentedWriter: void newline()>();

        $r17 = virtualinvoke r0.<com.hp.hpl.jena.sparql.syntax.ElementUnion: java.util.List getElements()>();

        $r18 = interfaceinvoke $r17.<java.util.List: java.lang.Object get(int)>(0);

        $r19 = (com.hp.hpl.jena.sparql.syntax.Element) $r18;

        virtualinvoke r2.<com.hp.hpl.jena.sparql.serializer.FormatterElement: void visitAsGroup(com.hp.hpl.jena.sparql.syntax.Element)>($r19);

        $r20 = r2.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r20.<org.apache.jena.atlas.io.IndentedWriter: void decIndent(int)>(2);

        return;

     label1:
        $r3 = r2.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r3.<org.apache.jena.atlas.io.IndentedWriter: void incIndent(int)>(2);

        z1 = 1;

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.sparql.syntax.ElementUnion: java.util.List getElements()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.ListIterator listIterator()>();

     label2:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r7 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r8 = (com.hp.hpl.jena.sparql.syntax.Element) $r7;

        if z1 != 0 goto label3;

        $r9 = r2.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r9.<org.apache.jena.atlas.io.IndentedWriter: void decIndent(int)>(2);

        $r10 = r2.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r10.<org.apache.jena.atlas.io.IndentedWriter: void newline()>();

        $r11 = r2.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r11.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>("UNION");

        $r12 = r2.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r12.<org.apache.jena.atlas.io.IndentedWriter: void newline()>();

        $r13 = r2.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r13.<org.apache.jena.atlas.io.IndentedWriter: void incIndent(int)>(2);

     label3:
        virtualinvoke r2.<com.hp.hpl.jena.sparql.serializer.FormatterElement: void visitAsGroup(com.hp.hpl.jena.sparql.syntax.Element)>(r8);

        z1 = 0;

        goto label2;

     label4:
        $r6 = r2.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r6.<org.apache.jena.atlas.io.IndentedWriter: void decIndent(int)>(2);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.syntax.ElementGroup)
    {
        int $i0, $i1;
        boolean $z0, $z1, z2;
        java.util.Iterator $r7;
        org.apache.jena.atlas.io.IndentedWriter $r1, $r2, $r3, $r4, $r8, $r9, $r10, $r11, $r12, $r15, $r16;
        com.hp.hpl.jena.sparql.serializer.FormatterElement r0;
        java.util.List $r6;
        com.hp.hpl.jena.sparql.syntax.ElementGroup r5;
        com.hp.hpl.jena.sparql.syntax.Element r14, r17;
        java.lang.Object $r13;

        r0 := @this: com.hp.hpl.jena.sparql.serializer.FormatterElement;

        r5 := @parameter0: com.hp.hpl.jena.sparql.syntax.ElementGroup;

        $r1 = r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r1.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>("{");

        $r2 = r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r2.<org.apache.jena.atlas.io.IndentedWriter: void incIndent(int)>(2);

        $r3 = r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        $i0 = virtualinvoke $r3.<org.apache.jena.atlas.io.IndentedWriter: int getRow()>();

        $r4 = r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r4.<org.apache.jena.atlas.io.IndentedWriter: void pad()>();

        z2 = 1;

        r17 = null;

        $r6 = virtualinvoke r5.<com.hp.hpl.jena.sparql.syntax.ElementGroup: java.util.List getElements()>();

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r13 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r14 = (com.hp.hpl.jena.sparql.syntax.Element) $r13;

        if z2 != 0 goto label3;

        $z1 = staticinvoke <com.hp.hpl.jena.sparql.serializer.FormatterElement: boolean needsDotSeparator(com.hp.hpl.jena.sparql.syntax.Element,com.hp.hpl.jena.sparql.syntax.Element)>(r17, r14);

        if $z1 == 0 goto label2;

        $r16 = r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r16.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>(" . ");

     label2:
        $r15 = r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r15.<org.apache.jena.atlas.io.IndentedWriter: void newline()>();

     label3:
        virtualinvoke r14.<com.hp.hpl.jena.sparql.syntax.Element: void visit(com.hp.hpl.jena.sparql.syntax.ElementVisitor)>(r0);

        z2 = 0;

        r17 = r14;

        goto label1;

     label4:
        $r8 = r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r8.<org.apache.jena.atlas.io.IndentedWriter: void decIndent(int)>(2);

        $r9 = r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        $i1 = virtualinvoke $r9.<org.apache.jena.atlas.io.IndentedWriter: int getRow()>();

        if $i0 == $i1 goto label5;

        $r12 = r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r12.<org.apache.jena.atlas.io.IndentedWriter: void newline()>();

        goto label6;

     label5:
        $r10 = r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r10.<org.apache.jena.atlas.io.IndentedWriter: void print(char)>(32);

     label6:
        $r11 = r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r11.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>("}");

        return;
    }

    private static boolean needsDotSeparator(com.hp.hpl.jena.sparql.syntax.Element, com.hp.hpl.jena.sparql.syntax.Element)
    {
        com.hp.hpl.jena.sparql.syntax.Element r0, r1;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: com.hp.hpl.jena.sparql.syntax.Element;

        r1 := @parameter1: com.hp.hpl.jena.sparql.syntax.Element;

        $z0 = staticinvoke <com.hp.hpl.jena.sparql.serializer.FormatterElement: boolean needsDotSeparator(com.hp.hpl.jena.sparql.syntax.Element)>(r0);

        if $z0 == 0 goto label1;

        $z1 = staticinvoke <com.hp.hpl.jena.sparql.serializer.FormatterElement: boolean needsDotSeparator(com.hp.hpl.jena.sparql.syntax.Element)>(r1);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    private static boolean needsDotSeparator(com.hp.hpl.jena.sparql.syntax.Element)
    {
        com.hp.hpl.jena.sparql.syntax.Element r0;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: com.hp.hpl.jena.sparql.syntax.Element;

        $z0 = r0 instanceof com.hp.hpl.jena.sparql.syntax.ElementTriplesBlock;

        if $z0 != 0 goto label1;

        $z1 = r0 instanceof com.hp.hpl.jena.sparql.syntax.ElementPathBlock;

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public void visit(com.hp.hpl.jena.sparql.syntax.ElementOptional)
    {
        com.hp.hpl.jena.sparql.syntax.ElementOptional r4;
        com.hp.hpl.jena.sparql.syntax.Element $r5;
        org.apache.jena.atlas.io.IndentedWriter $r1, $r2, $r3, $r6;
        com.hp.hpl.jena.sparql.serializer.FormatterElement r0;

        r0 := @this: com.hp.hpl.jena.sparql.serializer.FormatterElement;

        r4 := @parameter0: com.hp.hpl.jena.sparql.syntax.ElementOptional;

        $r1 = r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r1.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>("OPTIONAL");

        $r2 = r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r2.<org.apache.jena.atlas.io.IndentedWriter: void incIndent(int)>(2);

        $r3 = r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r3.<org.apache.jena.atlas.io.IndentedWriter: void newline()>();

        $r5 = virtualinvoke r4.<com.hp.hpl.jena.sparql.syntax.ElementOptional: com.hp.hpl.jena.sparql.syntax.Element getOptionalElement()>();

        virtualinvoke r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: void visitAsGroup(com.hp.hpl.jena.sparql.syntax.Element)>($r5);

        $r6 = r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r6.<org.apache.jena.atlas.io.IndentedWriter: void decIndent(int)>(2);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.syntax.ElementNamedGraph)
    {
        com.hp.hpl.jena.sparql.syntax.ElementNamedGraph r1;
        com.hp.hpl.jena.sparql.syntax.Element $r3;
        com.hp.hpl.jena.graph.Node $r2;
        com.hp.hpl.jena.sparql.serializer.FormatterElement r0;

        r0 := @this: com.hp.hpl.jena.sparql.serializer.FormatterElement;

        r1 := @parameter0: com.hp.hpl.jena.sparql.syntax.ElementNamedGraph;

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.sparql.syntax.ElementNamedGraph: com.hp.hpl.jena.graph.Node getGraphNameNode()>();

        $r3 = virtualinvoke r1.<com.hp.hpl.jena.sparql.syntax.ElementNamedGraph: com.hp.hpl.jena.sparql.syntax.Element getElement()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: void visitNodePattern(java.lang.String,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.syntax.Element)>("GRAPH", $r2, $r3);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.syntax.ElementService)
    {
        com.hp.hpl.jena.sparql.syntax.Element $r3;
        com.hp.hpl.jena.sparql.syntax.ElementService r0;
        com.hp.hpl.jena.graph.Node $r2;
        java.lang.String r4;
        com.hp.hpl.jena.sparql.serializer.FormatterElement r1;
        boolean $z0;

        r1 := @this: com.hp.hpl.jena.sparql.serializer.FormatterElement;

        r0 := @parameter0: com.hp.hpl.jena.sparql.syntax.ElementService;

        r4 = "SERVICE";

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.syntax.ElementService: boolean getSilent()>();

        if $z0 == 0 goto label1;

        r4 = "SERVICE SILENT";

     label1:
        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.syntax.ElementService: com.hp.hpl.jena.graph.Node getServiceNode()>();

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.syntax.ElementService: com.hp.hpl.jena.sparql.syntax.Element getElement()>();

        specialinvoke r1.<com.hp.hpl.jena.sparql.serializer.FormatterElement: void visitNodePattern(java.lang.String,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.syntax.Element)>(r4, $r2, $r3);

        return;
    }

    private void visitNodePattern(java.lang.String, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.sparql.syntax.Element)
    {
        com.hp.hpl.jena.graph.Node r4;
        org.apache.jena.atlas.io.IndentedWriter $r2, $r3, $r5, $r6, $r7, $r9;
        com.hp.hpl.jena.sparql.serializer.FormatterElement r1;
        com.hp.hpl.jena.sparql.syntax.Element r8;
        java.lang.String r0, $r10;

        r1 := @this: com.hp.hpl.jena.sparql.serializer.FormatterElement;

        r0 := @parameter0: java.lang.String;

        r4 := @parameter1: com.hp.hpl.jena.graph.Node;

        r8 := @parameter2: com.hp.hpl.jena.sparql.syntax.Element;

        virtualinvoke r0.<java.lang.String: int length()>();

        $r2 = r1.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r2.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>(r0);

        $r3 = r1.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r3.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>(" ");

        if r4 != null goto label1;

        $r10 = "*";

        goto label2;

     label1:
        $r10 = virtualinvoke r1.<com.hp.hpl.jena.sparql.serializer.FormatterElement: java.lang.String slotToString(com.hp.hpl.jena.graph.Node)>(r4);

     label2:
        $r5 = r1.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r5.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>($r10);

        virtualinvoke $r10.<java.lang.String: int length()>();

        $r6 = r1.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r6.<org.apache.jena.atlas.io.IndentedWriter: void incIndent(int)>(2);

        $r7 = r1.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r7.<org.apache.jena.atlas.io.IndentedWriter: void newline()>();

        virtualinvoke r1.<com.hp.hpl.jena.sparql.serializer.FormatterElement: void visitAsGroup(com.hp.hpl.jena.sparql.syntax.Element)>(r8);

        $r9 = r1.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r9.<org.apache.jena.atlas.io.IndentedWriter: void decIndent(int)>(2);

        return;
    }

    private void visitElement1(java.lang.String, com.hp.hpl.jena.sparql.syntax.Element1)
    {
        com.hp.hpl.jena.sparql.syntax.Element1 r5;
        org.apache.jena.atlas.io.IndentedWriter $r2, $r3, $r4, $r7;
        com.hp.hpl.jena.sparql.serializer.FormatterElement r1;
        com.hp.hpl.jena.sparql.syntax.Element $r6;
        java.lang.String r0;

        r1 := @this: com.hp.hpl.jena.sparql.serializer.FormatterElement;

        r0 := @parameter0: java.lang.String;

        r5 := @parameter1: com.hp.hpl.jena.sparql.syntax.Element1;

        virtualinvoke r0.<java.lang.String: int length()>();

        $r2 = r1.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r2.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>(r0);

        virtualinvoke r0.<java.lang.String: int length()>();

        $r3 = r1.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r3.<org.apache.jena.atlas.io.IndentedWriter: void incIndent(int)>(2);

        $r4 = r1.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r4.<org.apache.jena.atlas.io.IndentedWriter: void newline()>();

        $r6 = virtualinvoke r5.<com.hp.hpl.jena.sparql.syntax.Element1: com.hp.hpl.jena.sparql.syntax.Element getElement()>();

        virtualinvoke r1.<com.hp.hpl.jena.sparql.serializer.FormatterElement: void visitAsGroup(com.hp.hpl.jena.sparql.syntax.Element)>($r6);

        $r7 = r1.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r7.<org.apache.jena.atlas.io.IndentedWriter: void decIndent(int)>(2);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.syntax.ElementExists)
    {
        com.hp.hpl.jena.sparql.syntax.ElementExists r1;
        com.hp.hpl.jena.sparql.serializer.FormatterElement r0;

        r0 := @this: com.hp.hpl.jena.sparql.serializer.FormatterElement;

        r1 := @parameter0: com.hp.hpl.jena.sparql.syntax.ElementExists;

        specialinvoke r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: void visitElement1(java.lang.String,com.hp.hpl.jena.sparql.syntax.Element1)>("EXISTS", r1);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.syntax.ElementNotExists)
    {
        com.hp.hpl.jena.sparql.serializer.FormatterElement r0;
        com.hp.hpl.jena.sparql.syntax.ElementNotExists r1;

        r0 := @this: com.hp.hpl.jena.sparql.serializer.FormatterElement;

        r1 := @parameter0: com.hp.hpl.jena.sparql.syntax.ElementNotExists;

        specialinvoke r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: void visitElement1(java.lang.String,com.hp.hpl.jena.sparql.syntax.Element1)>("NOT EXISTS", r1);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.syntax.ElementMinus)
    {
        com.hp.hpl.jena.sparql.syntax.ElementMinus r4;
        com.hp.hpl.jena.sparql.syntax.Element $r5;
        org.apache.jena.atlas.io.IndentedWriter $r1, $r2, $r3, $r6;
        com.hp.hpl.jena.sparql.serializer.FormatterElement r0;

        r0 := @this: com.hp.hpl.jena.sparql.serializer.FormatterElement;

        r4 := @parameter0: com.hp.hpl.jena.sparql.syntax.ElementMinus;

        $r1 = r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r1.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>("MINUS");

        $r2 = r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r2.<org.apache.jena.atlas.io.IndentedWriter: void incIndent(int)>(2);

        $r3 = r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r3.<org.apache.jena.atlas.io.IndentedWriter: void newline()>();

        $r5 = virtualinvoke r4.<com.hp.hpl.jena.sparql.syntax.ElementMinus: com.hp.hpl.jena.sparql.syntax.Element getMinusElement()>();

        virtualinvoke r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: void visitAsGroup(com.hp.hpl.jena.sparql.syntax.Element)>($r5);

        $r6 = r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r6.<org.apache.jena.atlas.io.IndentedWriter: void decIndent(int)>(2);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.syntax.ElementSubQuery)
    {
        com.hp.hpl.jena.query.Query $r4;
        com.hp.hpl.jena.sparql.serializer.SerializationContext $r6, $r10;
        org.apache.jena.atlas.io.IndentedWriter $r1, $r2, $r7, $r8, $r11, $r12, $r13;
        com.hp.hpl.jena.sparql.serializer.FormatterElement r0, $r5;
        com.hp.hpl.jena.sparql.syntax.ElementSubQuery r3;
        com.hp.hpl.jena.sparql.serializer.FmtExprSPARQL $r9;

        r0 := @this: com.hp.hpl.jena.sparql.serializer.FormatterElement;

        r3 := @parameter0: com.hp.hpl.jena.sparql.syntax.ElementSubQuery;

        $r1 = r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r1.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>("{ ");

        $r2 = r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r2.<org.apache.jena.atlas.io.IndentedWriter: void incIndent(int)>(2);

        $r4 = virtualinvoke r3.<com.hp.hpl.jena.sparql.syntax.ElementSubQuery: com.hp.hpl.jena.query.Query getQuery()>();

        $r8 = r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        $r5 = new com.hp.hpl.jena.sparql.serializer.FormatterElement;

        $r7 = r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        $r6 = r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: com.hp.hpl.jena.sparql.serializer.SerializationContext context>;

        specialinvoke $r5.<com.hp.hpl.jena.sparql.serializer.FormatterElement: void <init>(org.apache.jena.atlas.io.IndentedWriter,com.hp.hpl.jena.sparql.serializer.SerializationContext)>($r7, $r6);

        $r9 = new com.hp.hpl.jena.sparql.serializer.FmtExprSPARQL;

        $r11 = r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        $r10 = r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: com.hp.hpl.jena.sparql.serializer.SerializationContext context>;

        specialinvoke $r9.<com.hp.hpl.jena.sparql.serializer.FmtExprSPARQL: void <init>(org.apache.jena.atlas.io.IndentedWriter,com.hp.hpl.jena.sparql.serializer.SerializationContext)>($r11, $r10);

        staticinvoke <com.hp.hpl.jena.sparql.serializer.Serializer: void serializeARQ(com.hp.hpl.jena.query.Query,org.apache.jena.atlas.io.IndentedWriter,com.hp.hpl.jena.sparql.serializer.FormatterElement,com.hp.hpl.jena.sparql.serializer.FmtExprSPARQL,com.hp.hpl.jena.sparql.serializer.FormatterTemplate)>($r4, $r8, $r5, $r9, null);

        $r12 = r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r12.<org.apache.jena.atlas.io.IndentedWriter: void decIndent(int)>(2);

        $r13 = r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r13.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>("}");

        return;
    }

    public void visitAsGroup(com.hp.hpl.jena.sparql.syntax.Element)
    {
        org.apache.jena.atlas.io.IndentedWriter $r2, $r3, $r4, $r5;
        com.hp.hpl.jena.sparql.serializer.FormatterElement r1;
        com.hp.hpl.jena.sparql.syntax.Element r0;
        boolean $z0, z1, $z2, $z4, $z5;

        r1 := @this: com.hp.hpl.jena.sparql.serializer.FormatterElement;

        r0 := @parameter0: com.hp.hpl.jena.sparql.syntax.Element;

        $z0 = r0 instanceof com.hp.hpl.jena.sparql.syntax.ElementGroup;

        if $z0 != 0 goto label1;

        $z2 = r0 instanceof com.hp.hpl.jena.sparql.syntax.ElementSubQuery;

        if $z2 != 0 goto label1;

        $z5 = 1;

        $z4 = 1;

        goto label2;

     label1:
        $z5 = 0;

        $z4 = 0;

     label2:
        z1 = $z4;

        if $z5 == 0 goto label3;

        $r4 = r1.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r4.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>("{ ");

        $r5 = r1.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r5.<org.apache.jena.atlas.io.IndentedWriter: void incIndent(int)>(2);

     label3:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.syntax.Element: void visit(com.hp.hpl.jena.sparql.syntax.ElementVisitor)>(r1);

        if z1 == 0 goto label4;

        $r2 = r1.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r2.<org.apache.jena.atlas.io.IndentedWriter: void decIndent(int)>(2);

        $r3 = r1.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r3.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>("}");

     label4:
        return;
    }

    protected void formatTriples(com.hp.hpl.jena.sparql.core.BasicPattern)
    {
        com.hp.hpl.jena.graph.Node $r8, r9;
        java.util.ArrayList $r2;
        int $i0, $i1, $i2;
        boolean $z0, $z1, z2, $z3, z4, z5;
        java.util.Iterator $r3;
        com.hp.hpl.jena.sparql.core.BasicPattern r0;
        org.apache.jena.atlas.io.IndentedWriter $r4, $r7;
        com.hp.hpl.jena.sparql.serializer.FormatterElement r1;
        com.hp.hpl.jena.graph.Triple r6;
        java.lang.Object $r5;

        r1 := @this: com.hp.hpl.jena.sparql.serializer.FormatterElement;

        r0 := @parameter0: com.hp.hpl.jena.sparql.core.BasicPattern;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.BasicPattern: boolean isEmpty()>();

        if $z0 == 0 goto label01;

        return;

     label01:
        specialinvoke r1.<com.hp.hpl.jena.sparql.serializer.FormatterElement: void setWidths(com.hp.hpl.jena.sparql.core.BasicPattern)>(r0);

        $i0 = r1.<com.hp.hpl.jena.sparql.serializer.FormatterElement: int subjectWidth>;

        if $i0 <= 8 goto label02;

        r1.<com.hp.hpl.jena.sparql.serializer.FormatterElement: int subjectWidth> = 8;

     label02:
        $i1 = r1.<com.hp.hpl.jena.sparql.serializer.FormatterElement: int predicateWidth>;

        if $i1 <= 20 goto label03;

        r1.<com.hp.hpl.jena.sparql.serializer.FormatterElement: int predicateWidth> = 20;

     label03:
        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r9 = null;

        z2 = 1;

        z5 = 1;

        z4 = 1;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.BasicPattern: java.util.Iterator iterator()>();

     label04:
        $z3 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label08;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.hp.hpl.jena.graph.Triple) $r5;

        if r9 == null goto label05;

        $r8 = virtualinvoke r6.<com.hp.hpl.jena.graph.Triple: com.hp.hpl.jena.graph.Node getSubject()>();

        $z1 = virtualinvoke $r8.<com.hp.hpl.jena.graph.Node: boolean equals(java.lang.Object)>(r9);

        if $z1 == 0 goto label05;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r6);

        goto label04;

     label05:
        if r9 == null goto label07;

        if z5 != 0 goto label06;

        $r7 = r1.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r7.<org.apache.jena.atlas.io.IndentedWriter: void println()>();

     label06:
        specialinvoke r1.<com.hp.hpl.jena.sparql.serializer.FormatterElement: void formatSameSubject(com.hp.hpl.jena.graph.Node,java.util.List)>(r9, $r2);

        z2 = 0;

        z5 = 0;

        z4 = 0;

     label07:
        r9 = virtualinvoke r6.<com.hp.hpl.jena.graph.Triple: com.hp.hpl.jena.graph.Node getSubject()>();

        interfaceinvoke $r2.<java.util.List: void clear()>();

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r6);

        goto label04;

     label08:
        if r9 == null goto label10;

        $i2 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i2 == 0 goto label10;

        if z4 != 0 goto label09;

        $r4 = r1.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r4.<org.apache.jena.atlas.io.IndentedWriter: void println()>();

     label09:
        specialinvoke r1.<com.hp.hpl.jena.sparql.serializer.FormatterElement: void formatSameSubject(com.hp.hpl.jena.graph.Node,java.util.List)>(r9, $r2);

     label10:
        return;
    }

    private void formatSameSubject(com.hp.hpl.jena.graph.Node, java.util.List)
    {
        com.hp.hpl.jena.graph.Node $r5, $r7, $r8, $r14, $r15, r18;
        int $i0, $i1, i2, $i3;
        boolean $z0;
        java.util.Iterator $r1;
        org.apache.jena.atlas.io.IndentedWriter $r6, $r9, $r10, $r13, $r16, $r17;
        com.hp.hpl.jena.sparql.serializer.FormatterElement r4;
        com.hp.hpl.jena.graph.Triple r3, r12;
        java.util.List r0;
        java.lang.Object $r2, $r11;

        r4 := @this: com.hp.hpl.jena.sparql.serializer.FormatterElement;

        r18 := @parameter0: com.hp.hpl.jena.graph.Node;

        r0 := @parameter1: java.util.List;

        if r0 == null goto label1;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i0 != 0 goto label2;

     label1:
        return;

     label2:
        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.hp.hpl.jena.graph.Triple) $r2;

        $i1 = r4.<com.hp.hpl.jena.sparql.serializer.FormatterElement: int subjectWidth>;

        i2 = $i1 + 2;

        $r5 = virtualinvoke r3.<com.hp.hpl.jena.graph.Triple: com.hp.hpl.jena.graph.Node getSubject()>();

        $i3 = specialinvoke r4.<com.hp.hpl.jena.sparql.serializer.FormatterElement: int printSubject(com.hp.hpl.jena.graph.Node)>($r5);

        if $i3 <= 12 goto label3;

        $r16 = r4.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r16.<org.apache.jena.atlas.io.IndentedWriter: void incIndent(int)>(i2);

        $r17 = r4.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r17.<org.apache.jena.atlas.io.IndentedWriter: void println()>();

        goto label4;

     label3:
        specialinvoke r4.<com.hp.hpl.jena.sparql.serializer.FormatterElement: void printGap()>();

        $r6 = r4.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r6.<org.apache.jena.atlas.io.IndentedWriter: void incIndent(int)>(i2);

     label4:
        $r7 = virtualinvoke r3.<com.hp.hpl.jena.graph.Triple: com.hp.hpl.jena.graph.Node getPredicate()>();

        specialinvoke r4.<com.hp.hpl.jena.sparql.serializer.FormatterElement: int printProperty(com.hp.hpl.jena.graph.Node)>($r7);

        specialinvoke r4.<com.hp.hpl.jena.sparql.serializer.FormatterElement: void printGap()>();

        $r8 = virtualinvoke r3.<com.hp.hpl.jena.graph.Triple: com.hp.hpl.jena.graph.Node getObject()>();

        specialinvoke r4.<com.hp.hpl.jena.sparql.serializer.FormatterElement: int printObject(com.hp.hpl.jena.graph.Node)>($r8);

     label5:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r11 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r12 = (com.hp.hpl.jena.graph.Triple) $r11;

        $r13 = r4.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r13.<org.apache.jena.atlas.io.IndentedWriter: void println(java.lang.String)>(" ;");

        $r14 = virtualinvoke r12.<com.hp.hpl.jena.graph.Triple: com.hp.hpl.jena.graph.Node getPredicate()>();

        specialinvoke r4.<com.hp.hpl.jena.sparql.serializer.FormatterElement: int printProperty(com.hp.hpl.jena.graph.Node)>($r14);

        specialinvoke r4.<com.hp.hpl.jena.sparql.serializer.FormatterElement: void printGap()>();

        $r15 = virtualinvoke r12.<com.hp.hpl.jena.graph.Triple: com.hp.hpl.jena.graph.Node getObject()>();

        specialinvoke r4.<com.hp.hpl.jena.sparql.serializer.FormatterElement: int printObject(com.hp.hpl.jena.graph.Node)>($r15);

        goto label5;

     label6:
        $r9 = r4.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r9.<org.apache.jena.atlas.io.IndentedWriter: void decIndent(int)>(i2);

        $r10 = r4.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r10.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>(" .");

        return;
    }

    private void setWidths(com.hp.hpl.jena.sparql.core.BasicPattern)
    {
        com.hp.hpl.jena.graph.Node $r5, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i9;
        java.lang.String $r6, $r8;
        boolean $z0;
        java.util.Iterator $r2;
        com.hp.hpl.jena.sparql.core.BasicPattern r1;
        com.hp.hpl.jena.sparql.serializer.FormatterElement r0;
        com.hp.hpl.jena.graph.Triple r4;
        java.lang.Object $r3;

        r0 := @this: com.hp.hpl.jena.sparql.serializer.FormatterElement;

        r1 := @parameter0: com.hp.hpl.jena.sparql.core.BasicPattern;

        $i7 = (int) -1;

        r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: int subjectWidth> = $i7;

        $i9 = (int) -1;

        r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: int predicateWidth> = $i9;

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.sparql.core.BasicPattern: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.hp.hpl.jena.graph.Triple) $r3;

        $r5 = virtualinvoke r4.<com.hp.hpl.jena.graph.Triple: com.hp.hpl.jena.graph.Node getSubject()>();

        $r6 = virtualinvoke r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: java.lang.String slotToString(com.hp.hpl.jena.graph.Node)>($r5);

        $i0 = virtualinvoke $r6.<java.lang.String: int length()>();

        $i1 = r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: int subjectWidth>;

        if $i0 <= $i1 goto label2;

        $i5 = virtualinvoke $r6.<java.lang.String: int length()>();

        r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: int subjectWidth> = $i5;

     label2:
        $r7 = virtualinvoke r4.<com.hp.hpl.jena.graph.Triple: com.hp.hpl.jena.graph.Node getPredicate()>();

        $r8 = virtualinvoke r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: java.lang.String slotToString(com.hp.hpl.jena.graph.Node)>($r7);

        $i2 = virtualinvoke $r8.<java.lang.String: int length()>();

        $i3 = r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: int predicateWidth>;

        if $i2 <= $i3 goto label3;

        $i4 = virtualinvoke $r8.<java.lang.String: int length()>();

        r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: int predicateWidth> = $i4;

     label3:
        goto label1;

     label4:
        return;
    }

    private void printGap()
    {
        org.apache.jena.atlas.io.IndentedWriter $r1;
        com.hp.hpl.jena.sparql.serializer.FormatterElement r0;

        r0 := @this: com.hp.hpl.jena.sparql.serializer.FormatterElement;

        $r1 = r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r1.<org.apache.jena.atlas.io.IndentedWriter: void print(char,int)>(32, 2);

        return;
    }

    private int printSubject(com.hp.hpl.jena.graph.Node)
    {
        int $i0, $i1;
        com.hp.hpl.jena.graph.Node r1;
        java.lang.String $r2;
        org.apache.jena.atlas.io.IndentedWriter $r3, $r4;
        com.hp.hpl.jena.sparql.serializer.FormatterElement r0;

        r0 := @this: com.hp.hpl.jena.sparql.serializer.FormatterElement;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: java.lang.String slotToString(com.hp.hpl.jena.graph.Node)>(r1);

        $r3 = r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r3.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>($r2);

        $r4 = r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        $i0 = r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: int subjectWidth>;

        virtualinvoke $r4.<org.apache.jena.atlas.io.IndentedWriter: void pad(int)>($i0);

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        return $i1;
    }

    private int printProperty(com.hp.hpl.jena.graph.Node)
    {
        int $i0, $i1;
        com.hp.hpl.jena.graph.Node r1;
        java.lang.String $r2;
        org.apache.jena.atlas.io.IndentedWriter $r3, $r4;
        com.hp.hpl.jena.sparql.serializer.FormatterElement r0;

        r0 := @this: com.hp.hpl.jena.sparql.serializer.FormatterElement;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: java.lang.String slotToString(com.hp.hpl.jena.graph.Node)>(r1);

        $r3 = r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r3.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>($r2);

        $r4 = r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        $i0 = r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: int predicateWidth>;

        virtualinvoke $r4.<org.apache.jena.atlas.io.IndentedWriter: void pad(int)>($i0);

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        return $i1;
    }

    private int printObject(com.hp.hpl.jena.graph.Node)
    {
        int $i0;
        com.hp.hpl.jena.graph.Node r1;
        com.hp.hpl.jena.sparql.serializer.FormatterElement r0;

        r0 := @this: com.hp.hpl.jena.sparql.serializer.FormatterElement;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        $i0 = specialinvoke r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: int printNoCol(com.hp.hpl.jena.graph.Node)>(r1);

        return $i0;
    }

    private int printNoCol(com.hp.hpl.jena.graph.Node)
    {
        int $i0;
        com.hp.hpl.jena.graph.Node r1;
        java.lang.String $r2;
        org.apache.jena.atlas.io.IndentedWriter $r3;
        com.hp.hpl.jena.sparql.serializer.FormatterElement r0;

        r0 := @this: com.hp.hpl.jena.sparql.serializer.FormatterElement;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: java.lang.String slotToString(com.hp.hpl.jena.graph.Node)>(r1);

        $r3 = r0.<com.hp.hpl.jena.sparql.serializer.FormatterElement: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r3.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>($r2);

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        return $i0;
    }

    public static void <clinit>()
    {
        <com.hp.hpl.jena.sparql.serializer.FormatterElement: int TRIPLES_COLUMN_GAP> = 2;

        <com.hp.hpl.jena.sparql.serializer.FormatterElement: int TRIPLES_PROPERTY_COLUMN> = 20;

        <com.hp.hpl.jena.sparql.serializer.FormatterElement: int TRIPLES_SUBJECT_LONG> = 12;

        <com.hp.hpl.jena.sparql.serializer.FormatterElement: int TRIPLES_SUBJECT_COLUMN> = 8;

        <com.hp.hpl.jena.sparql.serializer.FormatterElement: boolean ELEMENT1_FIXED_INDENT> = 1;

        <com.hp.hpl.jena.sparql.serializer.FormatterElement: boolean GRAPH_FIXED_INDENT> = 1;

        <com.hp.hpl.jena.sparql.serializer.FormatterElement: boolean GROUP_UNNEST_ONE> = 0;

        <com.hp.hpl.jena.sparql.serializer.FormatterElement: boolean UNION_MARKERS> = 0;

        <com.hp.hpl.jena.sparql.serializer.FormatterElement: boolean PRETTY_PRINT> = 1;

        <com.hp.hpl.jena.sparql.serializer.FormatterElement: boolean GROUP_FIRST_ON_SAME_LINE> = 0;

        <com.hp.hpl.jena.sparql.serializer.FormatterElement: boolean GROUP_SEP_DOT> = 0;

        <com.hp.hpl.jena.sparql.serializer.FormatterElement: boolean PATTERN_MARKERS> = 0;

        <com.hp.hpl.jena.sparql.serializer.FormatterElement: int INDENT> = 2;

        return;
    }
}
