public class org.codehaus.groovy.runtime.metaclass.ReflectionMetaMethod extends groovy.lang.MetaMethod
{
    protected final org.codehaus.groovy.reflection.CachedMethod method;

    public void <init>(org.codehaus.groovy.reflection.CachedMethod)
    {
        org.codehaus.groovy.runtime.metaclass.ReflectionMetaMethod r0;
        org.codehaus.groovy.reflection.CachedClass[] $r2;
        org.codehaus.groovy.reflection.CachedMethod r1;

        r0 := @this: org.codehaus.groovy.runtime.metaclass.ReflectionMetaMethod;

        r1 := @parameter0: org.codehaus.groovy.reflection.CachedMethod;

        specialinvoke r0.<groovy.lang.MetaMethod: void <init>()>();

        r0.<org.codehaus.groovy.runtime.metaclass.ReflectionMetaMethod: org.codehaus.groovy.reflection.CachedMethod method> = r1;

        $r2 = virtualinvoke r1.<org.codehaus.groovy.reflection.CachedMethod: org.codehaus.groovy.reflection.CachedClass[] getParameterTypes()>();

        virtualinvoke r0.<org.codehaus.groovy.runtime.metaclass.ReflectionMetaMethod: void setParametersTypes(org.codehaus.groovy.reflection.CachedClass[])>($r2);

        return;
    }

    public int getModifiers()
    {
        int $i0;
        org.codehaus.groovy.runtime.metaclass.ReflectionMetaMethod r0;
        org.codehaus.groovy.reflection.CachedMethod $r1;

        r0 := @this: org.codehaus.groovy.runtime.metaclass.ReflectionMetaMethod;

        $r1 = r0.<org.codehaus.groovy.runtime.metaclass.ReflectionMetaMethod: org.codehaus.groovy.reflection.CachedMethod method>;

        $i0 = virtualinvoke $r1.<org.codehaus.groovy.reflection.CachedMethod: int getModifiers()>();

        return $i0;
    }

    public java.lang.String getName()
    {
        org.codehaus.groovy.runtime.metaclass.ReflectionMetaMethod r0;
        java.lang.String $r2;
        org.codehaus.groovy.reflection.CachedMethod $r1;

        r0 := @this: org.codehaus.groovy.runtime.metaclass.ReflectionMetaMethod;

        $r1 = r0.<org.codehaus.groovy.runtime.metaclass.ReflectionMetaMethod: org.codehaus.groovy.reflection.CachedMethod method>;

        $r2 = virtualinvoke $r1.<org.codehaus.groovy.reflection.CachedMethod: java.lang.String getName()>();

        return $r2;
    }

    public java.lang.Class getReturnType()
    {
        java.lang.Class $r2;
        org.codehaus.groovy.runtime.metaclass.ReflectionMetaMethod r0;
        org.codehaus.groovy.reflection.CachedMethod $r1;

        r0 := @this: org.codehaus.groovy.runtime.metaclass.ReflectionMetaMethod;

        $r1 = r0.<org.codehaus.groovy.runtime.metaclass.ReflectionMetaMethod: org.codehaus.groovy.reflection.CachedMethod method>;

        $r2 = virtualinvoke $r1.<org.codehaus.groovy.reflection.CachedMethod: java.lang.Class getReturnType()>();

        return $r2;
    }

    public org.codehaus.groovy.reflection.CachedClass getDeclaringClass()
    {
        org.codehaus.groovy.reflection.CachedClass $r2;
        org.codehaus.groovy.runtime.metaclass.ReflectionMetaMethod r0;
        org.codehaus.groovy.reflection.CachedMethod $r1;

        r0 := @this: org.codehaus.groovy.runtime.metaclass.ReflectionMetaMethod;

        $r1 = r0.<org.codehaus.groovy.runtime.metaclass.ReflectionMetaMethod: org.codehaus.groovy.reflection.CachedMethod method>;

        $r2 = $r1.<org.codehaus.groovy.reflection.CachedMethod: org.codehaus.groovy.reflection.CachedClass cachedClass>;

        return $r2;
    }

    public java.lang.Object invoke(java.lang.Object, java.lang.Object[])
    {
        java.lang.IllegalAccessException $r8;
        java.lang.Object[] r4;
        java.lang.IllegalArgumentException $r10;
        org.codehaus.groovy.reflection.CachedMethod $r1;
        java.lang.reflect.InvocationTargetException $r6;
        org.codehaus.groovy.runtime.metaclass.ReflectionMetaMethod r0;
        java.lang.Object r3, $r5;
        org.codehaus.groovy.runtime.InvokerInvocationException $r7, $r9, $r11;
        java.lang.reflect.Method $r2;

        r0 := @this: org.codehaus.groovy.runtime.metaclass.ReflectionMetaMethod;

        r3 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.Object[];

     label1:
        $r1 = r0.<org.codehaus.groovy.runtime.metaclass.ReflectionMetaMethod: org.codehaus.groovy.reflection.CachedMethod method>;

        $r2 = virtualinvoke $r1.<org.codehaus.groovy.reflection.CachedMethod: java.lang.reflect.Method setAccessible()>();

        $r5 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r3, r4);

     label2:
        return $r5;

     label3:
        $r10 := @caughtexception;

        $r11 = new org.codehaus.groovy.runtime.InvokerInvocationException;

        specialinvoke $r11.<org.codehaus.groovy.runtime.InvokerInvocationException: void <init>(java.lang.Throwable)>($r10);

        throw $r11;

     label4:
        $r8 := @caughtexception;

        $r9 = new org.codehaus.groovy.runtime.InvokerInvocationException;

        specialinvoke $r9.<org.codehaus.groovy.runtime.InvokerInvocationException: void <init>(java.lang.Throwable)>($r8);

        throw $r9;

     label5:
        $r6 := @caughtexception;

        $r7 = new org.codehaus.groovy.runtime.InvokerInvocationException;

        specialinvoke $r7.<org.codehaus.groovy.runtime.InvokerInvocationException: void <init>(java.lang.reflect.InvocationTargetException)>($r6);

        throw $r7;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
        catch java.lang.IllegalAccessException from label1 to label2 with label4;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label5;
    }

    public java.lang.String toString()
    {
        org.codehaus.groovy.runtime.metaclass.ReflectionMetaMethod r0;
        java.lang.String $r2;
        org.codehaus.groovy.reflection.CachedMethod $r1;

        r0 := @this: org.codehaus.groovy.runtime.metaclass.ReflectionMetaMethod;

        $r1 = r0.<org.codehaus.groovy.runtime.metaclass.ReflectionMetaMethod: org.codehaus.groovy.reflection.CachedMethod method>;

        $r2 = virtualinvoke $r1.<org.codehaus.groovy.reflection.CachedMethod: java.lang.String toString()>();

        return $r2;
    }

    protected java.lang.Class[] getPT()
    {
        java.lang.Class[] $r2;
        org.codehaus.groovy.runtime.metaclass.ReflectionMetaMethod r0;
        org.codehaus.groovy.reflection.CachedMethod $r1;

        r0 := @this: org.codehaus.groovy.runtime.metaclass.ReflectionMetaMethod;

        $r1 = r0.<org.codehaus.groovy.runtime.metaclass.ReflectionMetaMethod: org.codehaus.groovy.reflection.CachedMethod method>;

        $r2 = virtualinvoke $r1.<org.codehaus.groovy.reflection.CachedMethod: java.lang.Class[] getNativeParameterTypes()>();

        return $r2;
    }
}
