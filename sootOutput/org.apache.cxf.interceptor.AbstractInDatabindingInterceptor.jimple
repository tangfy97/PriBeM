public abstract class org.apache.cxf.interceptor.AbstractInDatabindingInterceptor extends org.apache.cxf.phase.AbstractPhaseInterceptor
{
    public static final java.lang.String NO_VALIDATE_PARTS;
    private static final javax.xml.namespace.QName XSD_ANY;
    private static final java.util.ResourceBundle BUNDLE;

    public void <init>(java.lang.String)
    {
        org.apache.cxf.interceptor.AbstractInDatabindingInterceptor r0;
        java.lang.String r1;

        r0 := @this: org.apache.cxf.interceptor.AbstractInDatabindingInterceptor;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.cxf.phase.AbstractPhaseInterceptor: void <init>(java.lang.String)>(r1);

        return;
    }

    public void <init>(java.lang.String, java.lang.String)
    {
        org.apache.cxf.interceptor.AbstractInDatabindingInterceptor r0;
        java.lang.String r1, r2;

        r0 := @this: org.apache.cxf.interceptor.AbstractInDatabindingInterceptor;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.cxf.phase.AbstractPhaseInterceptor: void <init>(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    protected boolean isRequestor(org.apache.cxf.message.Message)
    {
        org.apache.cxf.message.Message r0;
        java.lang.Boolean $r1;
        java.lang.Object $r2;
        org.apache.cxf.interceptor.AbstractInDatabindingInterceptor r3;
        boolean $z0;

        r3 := @this: org.apache.cxf.interceptor.AbstractInDatabindingInterceptor;

        r0 := @parameter0: org.apache.cxf.message.Message;

        $r1 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r2 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>("org.apache.cxf.client");

        $z0 = virtualinvoke $r1.<java.lang.Boolean: boolean equals(java.lang.Object)>($r2);

        return $z0;
    }

    protected boolean supportsDataReader(org.apache.cxf.message.Message, java.lang.Class)
    {
        org.apache.cxf.message.Message r0;
        org.apache.cxf.databinding.DataBinding $r3;
        java.lang.Class[] $r4;
        org.apache.cxf.interceptor.AbstractInDatabindingInterceptor r7;
        org.apache.cxf.message.Exchange $r1;
        org.apache.cxf.service.Service $r2;
        int i0, i1;
        java.lang.Class r5, r6;
        boolean $z0;

        r7 := @this: org.apache.cxf.interceptor.AbstractInDatabindingInterceptor;

        r0 := @parameter0: org.apache.cxf.message.Message;

        r6 := @parameter1: java.lang.Class;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r2 = staticinvoke <org.apache.cxf.service.model.ServiceModelUtil: org.apache.cxf.service.Service getService(org.apache.cxf.message.Exchange)>($r1);

        $r3 = interfaceinvoke $r2.<org.apache.cxf.service.Service: org.apache.cxf.databinding.DataBinding getDataBinding()>();

        $r4 = interfaceinvoke $r3.<org.apache.cxf.databinding.DataBinding: java.lang.Class[] getSupportedReaderFormats()>();

        i0 = lengthof $r4;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r5 = $r4[i1];

        $z0 = virtualinvoke r5.<java.lang.Object: boolean equals(java.lang.Object)>(r6);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    protected org.apache.cxf.databinding.DataReader getDataReader(org.apache.cxf.message.Message, java.lang.Class)
    {
        java.lang.Object[] $r15;
        org.apache.cxf.interceptor.AbstractInDatabindingInterceptor r12;
        org.apache.cxf.common.i18n.Message $r14;
        org.apache.cxf.service.Service $r2;
        org.apache.cxf.interceptor.Fault $r13;
        java.util.ResourceBundle $r16;
        java.lang.String $r7, $r11;
        org.apache.cxf.databinding.DataReader $r5;
        org.apache.cxf.message.Message r0;
        org.apache.cxf.databinding.DataBinding $r3;
        java.util.Collection $r6;
        org.apache.cxf.message.Exchange $r1, $r8;
        org.apache.cxf.endpoint.Endpoint $r9;
        java.lang.Class r4, $r10;
        javax.xml.namespace.QName $r17;

        r12 := @this: org.apache.cxf.interceptor.AbstractInDatabindingInterceptor;

        r0 := @parameter0: org.apache.cxf.message.Message;

        r4 := @parameter1: java.lang.Class;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r2 = staticinvoke <org.apache.cxf.service.model.ServiceModelUtil: org.apache.cxf.service.Service getService(org.apache.cxf.message.Exchange)>($r1);

        $r3 = interfaceinvoke $r2.<org.apache.cxf.service.Service: org.apache.cxf.databinding.DataBinding getDataBinding()>();

        $r5 = interfaceinvoke $r3.<org.apache.cxf.databinding.DataBinding: org.apache.cxf.databinding.DataReader createReader(java.lang.Class)>(r4);

        if $r5 != null goto label1;

        $r13 = new org.apache.cxf.interceptor.Fault;

        $r14 = new org.apache.cxf.common.i18n.Message;

        $r16 = <org.apache.cxf.interceptor.AbstractInDatabindingInterceptor: java.util.ResourceBundle BUNDLE>;

        $r15 = newarray (java.lang.Object)[1];

        $r17 = interfaceinvoke $r2.<org.apache.cxf.service.Service: javax.xml.namespace.QName getName()>();

        $r15[0] = $r17;

        specialinvoke $r14.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.ResourceBundle,java.lang.Object[])>("NO_DATAREADER", $r16, $r15);

        specialinvoke $r13.<org.apache.cxf.interceptor.Fault: void <init>(org.apache.cxf.common.i18n.Message)>($r14);

        throw $r13;

     label1:
        $r6 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.util.Collection getAttachments()>();

        interfaceinvoke $r5.<org.apache.cxf.databinding.DataReader: void setAttachments(java.util.Collection)>($r6);

        $r7 = <org.apache.cxf.databinding.DataReader: java.lang.String ENDPOINT>;

        $r8 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r9 = interfaceinvoke $r8.<org.apache.cxf.message.Exchange: org.apache.cxf.endpoint.Endpoint getEndpoint()>();

        interfaceinvoke $r5.<org.apache.cxf.databinding.DataReader: void setProperty(java.lang.String,java.lang.Object)>($r7, $r9);

        $r10 = class "Lorg/apache/cxf/message/Message;";

        $r11 = virtualinvoke $r10.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke $r5.<org.apache.cxf.databinding.DataReader: void setProperty(java.lang.String,java.lang.Object)>($r11, r0);

        virtualinvoke r12.<org.apache.cxf.interceptor.AbstractInDatabindingInterceptor: void setDataReaderValidation(org.apache.cxf.service.Service,org.apache.cxf.message.Message,org.apache.cxf.databinding.DataReader)>($r2, r0, $r5);

        return $r5;
    }

    protected org.apache.cxf.databinding.DataReader getDataReader(org.apache.cxf.message.Message)
    {
        org.apache.cxf.databinding.DataReader $r2;
        org.apache.cxf.interceptor.AbstractInDatabindingInterceptor r0;
        org.apache.cxf.message.Message r1;

        r0 := @this: org.apache.cxf.interceptor.AbstractInDatabindingInterceptor;

        r1 := @parameter0: org.apache.cxf.message.Message;

        $r2 = virtualinvoke r0.<org.apache.cxf.interceptor.AbstractInDatabindingInterceptor: org.apache.cxf.databinding.DataReader getDataReader(org.apache.cxf.message.Message,java.lang.Class)>(r1, class "Ljavax/xml/stream/XMLStreamReader;");

        return $r2;
    }

    protected org.apache.cxf.databinding.DataReader getNodeDataReader(org.apache.cxf.message.Message)
    {
        org.apache.cxf.databinding.DataReader $r2;
        org.apache.cxf.interceptor.AbstractInDatabindingInterceptor r0;
        org.apache.cxf.message.Message r1;

        r0 := @this: org.apache.cxf.interceptor.AbstractInDatabindingInterceptor;

        r1 := @parameter0: org.apache.cxf.message.Message;

        $r2 = virtualinvoke r0.<org.apache.cxf.interceptor.AbstractInDatabindingInterceptor: org.apache.cxf.databinding.DataReader getDataReader(org.apache.cxf.message.Message,java.lang.Class)>(r1, class "Lorg/w3c/dom/Node;");

        return $r2;
    }

    protected boolean shouldValidate(org.apache.cxf.message.Message)
    {
        org.apache.cxf.annotations.SchemaValidation$SchemaValidationType $r1;
        org.apache.cxf.message.Message r0;
        org.apache.cxf.interceptor.AbstractInDatabindingInterceptor r2;
        boolean $z0;

        r2 := @this: org.apache.cxf.interceptor.AbstractInDatabindingInterceptor;

        r0 := @parameter0: org.apache.cxf.message.Message;

        $r1 = <org.apache.cxf.annotations.SchemaValidation$SchemaValidationType: org.apache.cxf.annotations.SchemaValidation$SchemaValidationType IN>;

        $z0 = staticinvoke <org.apache.cxf.helpers.ServiceUtils: boolean isSchemaValidationEnabled(org.apache.cxf.annotations.SchemaValidation$SchemaValidationType,org.apache.cxf.message.Message)>($r1, r0);

        return $z0;
    }

    protected void setDataReaderValidation(org.apache.cxf.service.Service, org.apache.cxf.message.Message, org.apache.cxf.databinding.DataReader)
    {
        org.apache.cxf.Bus $r8;
        org.apache.cxf.databinding.DataReader r2;
        org.apache.cxf.message.Message r1;
        org.apache.cxf.service.model.ServiceInfo $r6;
        org.apache.cxf.interceptor.AbstractInDatabindingInterceptor r0;
        org.apache.cxf.message.Exchange $r7;
        javax.xml.validation.Schema $r9;
        java.util.List $r4;
        org.apache.cxf.service.Service r3;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: org.apache.cxf.interceptor.AbstractInDatabindingInterceptor;

        r3 := @parameter0: org.apache.cxf.service.Service;

        r1 := @parameter1: org.apache.cxf.message.Message;

        r2 := @parameter2: org.apache.cxf.databinding.DataReader;

        $z0 = virtualinvoke r0.<org.apache.cxf.interceptor.AbstractInDatabindingInterceptor: boolean shouldValidate(org.apache.cxf.message.Message)>(r1);

        if $z0 == 0 goto label1;

        $r4 = interfaceinvoke r3.<org.apache.cxf.service.Service: java.util.List getServiceInfos()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(0);

        $r6 = (org.apache.cxf.service.model.ServiceInfo) $r5;

        $r7 = interfaceinvoke r1.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r8 = interfaceinvoke $r7.<org.apache.cxf.message.Exchange: org.apache.cxf.Bus getBus()>();

        $r9 = staticinvoke <org.apache.cxf.wsdl.EndpointReferenceUtils: javax.xml.validation.Schema getSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.Bus)>($r6, $r8);

        interfaceinvoke r2.<org.apache.cxf.databinding.DataReader: void setSchema(javax.xml.validation.Schema)>($r9);

        goto label2;

     label1:
        interfaceinvoke r2.<org.apache.cxf.databinding.DataReader: void setSchema(javax.xml.validation.Schema)>(null);

     label2:
        return;
    }

    private void setOperationSchemaValidation(org.apache.cxf.service.model.OperationInfo, org.apache.cxf.message.Message)
    {
        org.apache.cxf.annotations.SchemaValidation$SchemaValidationType r2;
        org.apache.cxf.message.Message r3;
        org.apache.cxf.service.model.OperationInfo r0;
        java.lang.Object $r1;
        org.apache.cxf.interceptor.AbstractInDatabindingInterceptor r4;

        r4 := @this: org.apache.cxf.interceptor.AbstractInDatabindingInterceptor;

        r0 := @parameter0: org.apache.cxf.service.model.OperationInfo;

        r3 := @parameter1: org.apache.cxf.message.Message;

        if r0 == null goto label1;

        $r1 = virtualinvoke r0.<org.apache.cxf.service.model.OperationInfo: java.lang.Object getProperty(java.lang.String)>("schema-validation-enabled");

        r2 = (org.apache.cxf.annotations.SchemaValidation$SchemaValidationType) $r1;

        if r2 == null goto label1;

        interfaceinvoke r3.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>("schema-validation-enabled", r2);

     label1:
        return;
    }

    protected org.apache.cxf.staxutils.DepthXMLStreamReader getXMLStreamReader(org.apache.cxf.message.Message)
    {
        javax.xml.stream.XMLStreamReader r2;
        org.apache.cxf.staxutils.DepthXMLStreamReader $r3, $r4;
        org.apache.cxf.message.Message r0;
        java.lang.Object $r1;
        org.apache.cxf.interceptor.AbstractInDatabindingInterceptor r5;
        boolean $z0;

        r5 := @this: org.apache.cxf.interceptor.AbstractInDatabindingInterceptor;

        r0 := @parameter0: org.apache.cxf.message.Message;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object getContent(java.lang.Class)>(class "Ljavax/xml/stream/XMLStreamReader;");

        r2 = (javax.xml.stream.XMLStreamReader) $r1;

        if r2 != null goto label1;

        return null;

     label1:
        $z0 = r2 instanceof org.apache.cxf.staxutils.DepthXMLStreamReader;

        if $z0 == 0 goto label2;

        $r4 = (org.apache.cxf.staxutils.DepthXMLStreamReader) r2;

        return $r4;

     label2:
        $r3 = new org.apache.cxf.staxutils.DepthXMLStreamReader;

        specialinvoke $r3.<org.apache.cxf.staxutils.DepthXMLStreamReader: void <init>(javax.xml.stream.XMLStreamReader)>(r2);

        interfaceinvoke r0.<org.apache.cxf.message.Message: void setContent(java.lang.Class,java.lang.Object)>(class "Ljavax/xml/stream/XMLStreamReader;", $r3);

        return $r3;
    }

    protected org.apache.cxf.service.model.MessagePartInfo findMessagePart(org.apache.cxf.message.Exchange, java.util.Collection, javax.xml.namespace.QName, boolean, int, org.apache.cxf.message.Message)
    {
        org.apache.cxf.interceptor.AbstractInDatabindingInterceptor r5;
        org.apache.cxf.service.model.AbstractMessageContainer $r21;
        boolean z0, $z1, $z2, $z3, $z4;
        java.util.Collection r3;
        org.apache.cxf.service.model.OperationInfo r11, $r27;
        java.util.List $r15, $r16;
        javax.xml.namespace.QName $r20, $r22, $r25, $r26, r29, $r34;
        org.apache.cxf.service.model.ServiceInfo $r8;
        org.apache.cxf.service.model.BindingOperationInfo $r14, r31;
        int $i0, $i1, i2, $i3;
        java.lang.String $r19, $r23, $r24, $r28;
        org.apache.cxf.service.model.MessagePartInfo r18, r30;
        org.apache.cxf.service.model.EndpointInfo $r12;
        java.util.Iterator $r4;
        org.apache.cxf.service.model.MessageInfo $r9;
        org.apache.cxf.message.Message r6;
        org.apache.cxf.service.model.BindingInfo $r7, $r13;
        org.apache.cxf.message.Exchange r0;
        org.apache.cxf.endpoint.Endpoint r2;
        org.apache.cxf.service.model.BindingMessageInfo r32, r33;
        java.lang.Object $r1, $r10, $r17;

        r5 := @this: org.apache.cxf.interceptor.AbstractInDatabindingInterceptor;

        r0 := @parameter0: org.apache.cxf.message.Exchange;

        r3 := @parameter1: java.util.Collection;

        r29 := @parameter2: javax.xml.namespace.QName;

        z0 := @parameter3: boolean;

        i2 := @parameter4: int;

        r6 := @parameter5: org.apache.cxf.message.Message;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Class)>(class "Lorg/apache/cxf/endpoint/Endpoint;");

        r2 = (org.apache.cxf.endpoint.Endpoint) $r1;

        r30 = null;

        r31 = null;

        r32 = null;

        $r4 = interfaceinvoke r3.<java.util.Collection: java.util.Iterator iterator()>();

     label01:
        $z3 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label13;

        $r10 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r11 = (org.apache.cxf.service.model.OperationInfo) $r10;

        $r12 = interfaceinvoke r2.<org.apache.cxf.endpoint.Endpoint: org.apache.cxf.service.model.EndpointInfo getEndpointInfo()>();

        $r13 = virtualinvoke $r12.<org.apache.cxf.service.model.EndpointInfo: org.apache.cxf.service.model.BindingInfo getBinding()>();

        $r14 = virtualinvoke $r13.<org.apache.cxf.service.model.BindingInfo: org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.service.model.OperationInfo)>(r11);

        if $r14 != null goto label02;

        goto label01;

     label02:
        if z0 == 0 goto label03;

        r33 = virtualinvoke $r14.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.BindingMessageInfo getOutput()>();

        goto label04;

     label03:
        r33 = virtualinvoke $r14.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.BindingMessageInfo getInput()>();

     label04:
        if r33 != null goto label05;

        interfaceinvoke $r4.<java.util.Iterator: void remove()>();

        goto label01;

     label05:
        $r15 = virtualinvoke r33.<org.apache.cxf.service.model.BindingMessageInfo: java.util.List getMessageParts()>();

        $i0 = interfaceinvoke $r15.<java.util.Collection: int size()>();

        if $i0 == 0 goto label06;

        $i1 = interfaceinvoke $r15.<java.util.Collection: int size()>();

        if $i1 > i2 goto label07;

     label06:
        interfaceinvoke $r4.<java.util.Iterator: void remove()>();

        goto label01;

     label07:
        $r16 = virtualinvoke r33.<org.apache.cxf.service.model.BindingMessageInfo: java.util.List getMessageParts()>();

        $r17 = interfaceinvoke $r16.<java.util.List: java.lang.Object get(int)>(i2);

        r18 = (org.apache.cxf.service.model.MessagePartInfo) $r17;

        $r19 = virtualinvoke r29.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        if $r19 == null goto label08;

        $r28 = virtualinvoke r29.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $i3 = virtualinvoke $r28.<java.lang.String: int length()>();

        if $i3 != 0 goto label09;

     label08:
        $r20 = new javax.xml.namespace.QName;

        $r21 = virtualinvoke r18.<org.apache.cxf.service.model.MessagePartInfo: org.apache.cxf.service.model.AbstractMessageContainer getMessageInfo()>();

        $r22 = virtualinvoke $r21.<org.apache.cxf.service.model.AbstractMessageContainer: javax.xml.namespace.QName getName()>();

        $r23 = virtualinvoke $r22.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r24 = virtualinvoke r29.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        specialinvoke $r20.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>($r23, $r24);

        r29 = $r20;

     label09:
        $r34 = virtualinvoke r18.<org.apache.cxf.service.model.MessagePartInfo: javax.xml.namespace.QName getConcreteName()>();

        $z4 = virtualinvoke r29.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r34);

        if $z4 == 0 goto label10;

        interfaceinvoke r0.<org.apache.cxf.message.Exchange: void put(java.lang.Class,java.lang.Object)>(class "Lorg/apache/cxf/service/model/BindingOperationInfo;", $r14);

        $r27 = virtualinvoke $r14.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.OperationInfo getOperationInfo()>();

        interfaceinvoke r0.<org.apache.cxf.message.Exchange: void put(java.lang.Class,java.lang.Object)>(class "Lorg/apache/cxf/service/model/OperationInfo;", $r27);

        $z2 = virtualinvoke r11.<org.apache.cxf.service.model.OperationInfo: boolean isOneWay()>();

        interfaceinvoke r0.<org.apache.cxf.message.Exchange: void setOneWay(boolean)>($z2);

        return r18;

     label10:
        $r25 = <org.apache.cxf.interceptor.AbstractInDatabindingInterceptor: javax.xml.namespace.QName XSD_ANY>;

        $r26 = virtualinvoke r18.<org.apache.cxf.service.model.MessagePartInfo: javax.xml.namespace.QName getTypeQName()>();

        $z1 = virtualinvoke $r25.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r26);

        if $z1 == 0 goto label11;

        r30 = r18;

        r31 = $r14;

        r32 = r33;

        goto label12;

     label11:
        interfaceinvoke $r4.<java.util.Iterator: void remove()>();

     label12:
        goto label01;

     label13:
        if r30 == null goto label14;

        $r7 = virtualinvoke r31.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.BindingInfo getBinding()>();

        $r8 = virtualinvoke $r7.<org.apache.cxf.service.model.BindingInfo: org.apache.cxf.service.model.ServiceInfo getService()>();

        $r9 = virtualinvoke r32.<org.apache.cxf.service.model.BindingMessageInfo: org.apache.cxf.service.model.MessageInfo getMessageInfo()>();

        virtualinvoke r5.<org.apache.cxf.interceptor.AbstractInDatabindingInterceptor: org.apache.cxf.service.model.MessageInfo setMessage(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo,boolean,org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessageInfo)>(r6, r31, z0, $r8, $r9);

     label14:
        return r30;
    }

    protected org.apache.cxf.service.model.MessageInfo setMessage(org.apache.cxf.message.Message, org.apache.cxf.service.model.BindingOperationInfo, boolean, org.apache.cxf.service.model.ServiceInfo, org.apache.cxf.service.model.MessageInfo)
    {
        java.net.URISyntaxException $r26;
        org.apache.cxf.service.model.BindingOperationInfo r3;
        org.apache.cxf.service.model.ServiceInfo r10;
        org.apache.cxf.interceptor.AbstractInDatabindingInterceptor r8;
        java.lang.Boolean $r6;
        java.lang.String $r18, $r23;
        java.net.URI $r19, $r25, r27;
        boolean $z0, $z1, z2;
        org.apache.cxf.service.model.EndpointInfo $r15;
        org.apache.cxf.service.model.InterfaceInfo $r12;
        org.apache.cxf.service.model.MessageInfo r1;
        org.apache.cxf.message.Message r0;
        org.apache.cxf.service.model.OperationInfo $r4, $r5, $r9;
        org.apache.cxf.message.Exchange $r2;
        org.apache.cxf.endpoint.Endpoint $r14;
        java.lang.Object $r7, $r17;
        java.lang.StringBuilder $r20, $r21, $r22;
        javax.xml.namespace.QName $r11, $r13, $r16, $r24;

        r8 := @this: org.apache.cxf.interceptor.AbstractInDatabindingInterceptor;

        r0 := @parameter0: org.apache.cxf.message.Message;

        r3 := @parameter1: org.apache.cxf.service.model.BindingOperationInfo;

        z2 := @parameter2: boolean;

        r10 := @parameter3: org.apache.cxf.service.model.ServiceInfo;

        r1 := @parameter4: org.apache.cxf.service.model.MessageInfo;

        interfaceinvoke r0.<org.apache.cxf.message.Message: void put(java.lang.Class,java.lang.Object)>(class "Lorg/apache/cxf/service/model/MessageInfo;", r1);

        $r2 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        interfaceinvoke $r2.<org.apache.cxf.message.Exchange: void put(java.lang.Class,java.lang.Object)>(class "Lorg/apache/cxf/service/model/BindingOperationInfo;", r3);

        $r4 = virtualinvoke r3.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.OperationInfo getOperationInfo()>();

        interfaceinvoke $r2.<org.apache.cxf.message.Exchange: void put(java.lang.Class,java.lang.Object)>(class "Lorg/apache/cxf/service/model/OperationInfo;", $r4);

        $r5 = virtualinvoke r3.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.OperationInfo getOperationInfo()>();

        $z0 = virtualinvoke $r5.<org.apache.cxf.service.model.OperationInfo: boolean isOneWay()>();

        interfaceinvoke $r2.<org.apache.cxf.message.Exchange: void setOneWay(boolean)>($z0);

        $r6 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r7 = virtualinvoke r3.<org.apache.cxf.service.model.BindingOperationInfo: java.lang.Object getProperty(java.lang.String)>("operation.is.synthetic");

        $z1 = virtualinvoke $r6.<java.lang.Boolean: boolean equals(java.lang.Object)>($r7);

        if $z1 != 0 goto label1;

        $r24 = virtualinvoke r3.<org.apache.cxf.service.model.BindingOperationInfo: javax.xml.namespace.QName getName()>();

        interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>("javax.xml.ws.wsdl.operation", $r24);

     label1:
        $r9 = virtualinvoke r3.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.OperationInfo getOperationInfo()>();

        specialinvoke r8.<org.apache.cxf.interceptor.AbstractInDatabindingInterceptor: void setOperationSchemaValidation(org.apache.cxf.service.model.OperationInfo,org.apache.cxf.message.Message)>($r9, r0);

        $r11 = virtualinvoke r10.<org.apache.cxf.service.model.ServiceInfo: javax.xml.namespace.QName getName()>();

        interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>("javax.xml.ws.wsdl.service", $r11);

        $r12 = virtualinvoke r10.<org.apache.cxf.service.model.ServiceInfo: org.apache.cxf.service.model.InterfaceInfo getInterface()>();

        $r13 = virtualinvoke $r12.<org.apache.cxf.service.model.InterfaceInfo: javax.xml.namespace.QName getName()>();

        interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>("javax.xml.ws.wsdl.interface", $r13);

        $r14 = interfaceinvoke $r2.<org.apache.cxf.message.Exchange: org.apache.cxf.endpoint.Endpoint getEndpoint()>();

        $r15 = interfaceinvoke $r14.<org.apache.cxf.endpoint.Endpoint: org.apache.cxf.service.model.EndpointInfo getEndpointInfo()>();

        $r16 = virtualinvoke $r15.<org.apache.cxf.service.model.EndpointInfo: javax.xml.namespace.QName getName()>();

        interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>("javax.xml.ws.wsdl.port", $r16);

        $r17 = virtualinvoke $r15.<org.apache.cxf.service.model.EndpointInfo: java.lang.Object getProperty(java.lang.String,java.lang.Class)>("URI", class "Ljava/net/URI;");

        $r25 = (java.net.URI) $r17;

        r27 = $r25;

        if $r25 != null goto label6;

        $r18 = virtualinvoke $r15.<org.apache.cxf.service.model.EndpointInfo: java.lang.String getAddress()>();

     label2:
        $r19 = new java.net.URI;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?wsdl");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.net.URI: void <init>(java.lang.String)>($r23);

        r27 = $r19;

     label3:
        goto label5;

     label4:
        $r26 := @caughtexception;

     label5:
        virtualinvoke $r15.<org.apache.cxf.service.model.EndpointInfo: void setProperty(java.lang.String,java.lang.Object)>("URI", r27);

     label6:
        interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>("javax.xml.ws.wsdl.description", r27);

        return r1;

        catch java.net.URISyntaxException from label2 to label3 with label4;
    }

    protected org.apache.cxf.service.model.BindingOperationInfo getBindingOperationInfo(org.apache.cxf.message.Exchange, javax.xml.namespace.QName, boolean)
    {
        org.apache.cxf.service.model.OperationInfo $r3;
        org.apache.cxf.service.model.BindingOperationInfo $r6;
        org.apache.cxf.interceptor.AbstractInDatabindingInterceptor r4;
        org.apache.cxf.message.Exchange r2;
        int $i0, $i1;
        javax.xml.namespace.QName r0;
        java.lang.String $r1, r5;
        boolean z0, $z1;

        r4 := @this: org.apache.cxf.interceptor.AbstractInDatabindingInterceptor;

        r2 := @parameter0: org.apache.cxf.message.Exchange;

        r0 := @parameter1: javax.xml.namespace.QName;

        z0 := @parameter2: boolean;

        $r1 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        r5 = $r1;

        if z0 == 0 goto label1;

        $z1 = virtualinvoke $r1.<java.lang.String: boolean endsWith(java.lang.String)>("Response");

        if $z1 == 0 goto label1;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i1 = $i0 - 8;

        r5 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

     label1:
        $r6 = staticinvoke <org.apache.cxf.service.model.ServiceModelUtil: org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.message.Exchange,java.lang.String)>(r2, r5);

        if $r6 == null goto label2;

        interfaceinvoke r2.<org.apache.cxf.message.Exchange: void put(java.lang.Class,java.lang.Object)>(class "Lorg/apache/cxf/service/model/BindingOperationInfo;", $r6);

        $r3 = virtualinvoke $r6.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.OperationInfo getOperationInfo()>();

        interfaceinvoke r2.<org.apache.cxf.message.Exchange: void put(java.lang.Class,java.lang.Object)>(class "Lorg/apache/cxf/service/model/OperationInfo;", $r3);

     label2:
        return $r6;
    }

    protected org.apache.cxf.service.model.MessageInfo getMessageInfo(org.apache.cxf.message.Message, org.apache.cxf.service.model.BindingOperationInfo)
    {
        org.apache.cxf.service.model.MessageInfo $r3;
        org.apache.cxf.message.Message r1;
        org.apache.cxf.service.model.BindingOperationInfo r2;
        org.apache.cxf.interceptor.AbstractInDatabindingInterceptor r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.interceptor.AbstractInDatabindingInterceptor;

        r1 := @parameter0: org.apache.cxf.message.Message;

        r2 := @parameter1: org.apache.cxf.service.model.BindingOperationInfo;

        $z0 = virtualinvoke r0.<org.apache.cxf.interceptor.AbstractInDatabindingInterceptor: boolean isRequestor(org.apache.cxf.message.Message)>(r1);

        $r3 = virtualinvoke r0.<org.apache.cxf.interceptor.AbstractInDatabindingInterceptor: org.apache.cxf.service.model.MessageInfo getMessageInfo(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo,boolean)>(r1, r2, $z0);

        return $r3;
    }

    protected org.apache.cxf.service.model.MessageInfo getMessageInfo(org.apache.cxf.message.Message, org.apache.cxf.service.model.BindingOperationInfo, boolean)
    {
        org.apache.cxf.service.model.MessageInfo $r3, $r4, r6;
        org.apache.cxf.message.Message r2;
        org.apache.cxf.service.model.OperationInfo $r1;
        org.apache.cxf.service.model.BindingOperationInfo r0;
        org.apache.cxf.interceptor.AbstractInDatabindingInterceptor r5;
        boolean z0;

        r5 := @this: org.apache.cxf.interceptor.AbstractInDatabindingInterceptor;

        r2 := @parameter0: org.apache.cxf.message.Message;

        r0 := @parameter1: org.apache.cxf.service.model.BindingOperationInfo;

        z0 := @parameter2: boolean;

        $r1 = virtualinvoke r0.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.OperationInfo getOperationInfo()>();

        if z0 == 0 goto label1;

        r6 = virtualinvoke $r1.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getOutput()>();

        $r4 = virtualinvoke $r1.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getOutput()>();

        interfaceinvoke r2.<org.apache.cxf.message.Message: void put(java.lang.Class,java.lang.Object)>(class "Lorg/apache/cxf/service/model/MessageInfo;", $r4);

        goto label2;

     label1:
        r6 = virtualinvoke $r1.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getInput()>();

        $r3 = virtualinvoke $r1.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getInput()>();

        interfaceinvoke r2.<org.apache.cxf.message.Message: void put(java.lang.Class,java.lang.Object)>(class "Lorg/apache/cxf/service/model/MessageInfo;", $r3);

     label2:
        return r6;
    }

    static void <clinit>()
    {
        java.util.ResourceBundle $r7;
        java.lang.StringBuilder $r0, $r3, $r4;
        java.lang.Class $r1;
        java.lang.String $r2, $r5;
        javax.xml.namespace.QName $r6;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = class "Lorg/apache/cxf/interceptor/AbstractInDatabindingInterceptor;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".novalidate-parts");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        <org.apache.cxf.interceptor.AbstractInDatabindingInterceptor: java.lang.String NO_VALIDATE_PARTS> = $r5;

        $r6 = new javax.xml.namespace.QName;

        specialinvoke $r6.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String,java.lang.String)>("http://www.w3.org/2001/XMLSchema", "anyType", "xsd");

        <org.apache.cxf.interceptor.AbstractInDatabindingInterceptor: javax.xml.namespace.QName XSD_ANY> = $r6;

        $r7 = staticinvoke <org.apache.cxf.common.i18n.BundleUtils: java.util.ResourceBundle getBundle(java.lang.Class)>(class "Lorg/apache/cxf/interceptor/AbstractInDatabindingInterceptor;");

        <org.apache.cxf.interceptor.AbstractInDatabindingInterceptor: java.util.ResourceBundle BUNDLE> = $r7;

        return;
    }
}
