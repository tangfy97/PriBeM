public class com.jidesoft.swing.JideSplitPaneDivider extends javax.swing.JPanel implements java.beans.PropertyChangeListener
{
    protected com.jidesoft.swing.JideSplitPaneDivider$DragController _dragger;
    protected int _dividerSize;
    protected com.jidesoft.swing.JideSplitPane _jideSplitPane;
    protected com.jidesoft.swing.JideSplitPaneDivider$MouseHandler _mouseHandler;
    protected int _orientation;
    static final java.awt.Cursor HORIZONTAL_CURSOR;
    static final java.awt.Cursor VERTICAL_CURSOR;
    static final java.awt.Cursor DEFAULT_CURSOR;
    private com.jidesoft.plaf.basic.Painter _gripperPainter;
    public static final int COLLAPSED_STATE;
    public static final int DEFAULT_STATE;
    public static final int EXPANDED_STATE;
    private int _currentState;
    protected javax.swing.JButton _leftButton;
    protected javax.swing.JButton _rightButton;
    private int _triangleSize;
    private int _buttonWidth;
    private int _buttonHeight;
    private int _lastPosition;

    public void <init>(com.jidesoft.swing.JideSplitPane)
    {
        java.awt.Color $r3;
        javax.swing.border.Border $r4;
        com.jidesoft.swing.JideSplitPaneDivider r0;
        int $i0, $i1, $i2;
        com.jidesoft.swing.JideSplitPane r1, $r2, $r5;
        com.jidesoft.plaf.basic.Painter $r7;
        java.lang.Object $r6;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.JideSplitPaneDivider;

        r1 := @parameter0: com.jidesoft.swing.JideSplitPane;

        specialinvoke r0.<javax.swing.JPanel: void <init>()>();

        $i0 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: int getInt(java.lang.Object)>("JideSplitPane.dividerSize");

        r0.<com.jidesoft.swing.JideSplitPaneDivider: int _dividerSize> = $i0;

        r0.<com.jidesoft.swing.JideSplitPaneDivider: int _currentState> = 1;

        r0.<com.jidesoft.swing.JideSplitPaneDivider: javax.swing.JButton _leftButton> = null;

        r0.<com.jidesoft.swing.JideSplitPaneDivider: javax.swing.JButton _rightButton> = null;

        r0.<com.jidesoft.swing.JideSplitPaneDivider: int _triangleSize> = 5;

        r0.<com.jidesoft.swing.JideSplitPaneDivider: int _buttonWidth> = 5;

        r0.<com.jidesoft.swing.JideSplitPaneDivider: int _buttonHeight> = 10;

        virtualinvoke r0.<com.jidesoft.swing.JideSplitPaneDivider: void setJideSplitPane(com.jidesoft.swing.JideSplitPane)>(r1);

        $r2 = r0.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPane _jideSplitPane>;

        $i1 = virtualinvoke $r2.<com.jidesoft.swing.JideSplitPane: int getOrientation()>();

        r0.<com.jidesoft.swing.JideSplitPaneDivider: int _orientation> = $i1;

        $i2 = virtualinvoke r1.<com.jidesoft.swing.JideSplitPane: int getDividerSize()>();

        virtualinvoke r0.<com.jidesoft.swing.JideSplitPaneDivider: void setDividerSize(int)>($i2);

        virtualinvoke r0.<com.jidesoft.swing.JideSplitPaneDivider: void setDefaultResizeCursor()>();

        $r3 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("JideSplitPaneDivider.background");

        virtualinvoke r0.<com.jidesoft.swing.JideSplitPaneDivider: void setBackground(java.awt.Color)>($r3);

        $r4 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: javax.swing.border.Border getBorder(java.lang.Object)>("JideSplitPaneDivider.border");

        virtualinvoke r0.<com.jidesoft.swing.JideSplitPaneDivider: void setBorder(javax.swing.border.Border)>($r4);

        $r5 = r0.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPane _jideSplitPane>;

        $z0 = virtualinvoke $r5.<com.jidesoft.swing.JideSplitPane: boolean isOneTouchExpandable()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.jidesoft.swing.JideSplitPaneDivider: void oneTouchExpandableChanged()>();

     label1:
        $r6 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("JideSplitPaneDivider.gripperPainter");

        $r7 = (com.jidesoft.plaf.basic.Painter) $r6;

        r0.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.plaf.basic.Painter _gripperPainter> = $r7;

        virtualinvoke r0.<com.jidesoft.swing.JideSplitPaneDivider: void setOpaque(boolean)>(0);

        virtualinvoke r0.<com.jidesoft.swing.JideSplitPaneDivider: void setLayout(java.awt.LayoutManager)>(null);

        return;
    }

    public void setDefaultResizeCursor()
    {
        int $i0;
        com.jidesoft.swing.JideSplitPaneDivider r0;
        java.awt.Cursor $r1;

        r0 := @this: com.jidesoft.swing.JideSplitPaneDivider;

        $i0 = r0.<com.jidesoft.swing.JideSplitPaneDivider: int _orientation>;

        if $i0 != 1 goto label1;

        $r1 = <com.jidesoft.swing.JideSplitPaneDivider: java.awt.Cursor HORIZONTAL_CURSOR>;

        goto label2;

     label1:
        $r1 = <com.jidesoft.swing.JideSplitPaneDivider: java.awt.Cursor VERTICAL_CURSOR>;

     label2:
        virtualinvoke r0.<com.jidesoft.swing.JideSplitPaneDivider: void setCursor(java.awt.Cursor)>($r1);

        return;
    }

    public com.jidesoft.swing.JideSplitPane getJideSplitPane()
    {
        com.jidesoft.swing.JideSplitPane $r1;
        com.jidesoft.swing.JideSplitPaneDivider r0;

        r0 := @this: com.jidesoft.swing.JideSplitPaneDivider;

        $r1 = r0.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPane _jideSplitPane>;

        return $r1;
    }

    public void setJideSplitPane(com.jidesoft.swing.JideSplitPane)
    {
        com.jidesoft.swing.JideSplitPane r1;
        com.jidesoft.swing.JideSplitPaneDivider r0;

        r0 := @this: com.jidesoft.swing.JideSplitPaneDivider;

        r1 := @parameter0: com.jidesoft.swing.JideSplitPane;

        specialinvoke r0.<com.jidesoft.swing.JideSplitPaneDivider: void uninstallListeners()>();

        r0.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPane _jideSplitPane> = r1;

        specialinvoke r0.<com.jidesoft.swing.JideSplitPaneDivider: void installListeners()>();

        return;
    }

    private void installListeners()
    {
        com.jidesoft.swing.JideSplitPaneDivider$MouseHandler $r2, $r3, $r5, $r7, $r8, $r10;
        com.jidesoft.swing.JideSplitPaneDivider r0;
        com.jidesoft.swing.JideSplitPane $r1, $r4, $r6, $r9;

        r0 := @this: com.jidesoft.swing.JideSplitPaneDivider;

        $r1 = r0.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPane _jideSplitPane>;

        if $r1 == null goto label2;

        $r2 = r0.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPaneDivider$MouseHandler _mouseHandler>;

        if $r2 != null goto label1;

        $r10 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPaneDivider$MouseHandler createMouseHandler()>();

        r0.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPaneDivider$MouseHandler _mouseHandler> = $r10;

     label1:
        $r4 = r0.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPane _jideSplitPane>;

        $r3 = r0.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPaneDivider$MouseHandler _mouseHandler>;

        virtualinvoke $r4.<com.jidesoft.swing.JideSplitPane: void addMouseListener(java.awt.event.MouseListener)>($r3);

        $r6 = r0.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPane _jideSplitPane>;

        $r5 = r0.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPaneDivider$MouseHandler _mouseHandler>;

        virtualinvoke $r6.<com.jidesoft.swing.JideSplitPane: void addMouseMotionListener(java.awt.event.MouseMotionListener)>($r5);

        $r7 = r0.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPaneDivider$MouseHandler _mouseHandler>;

        virtualinvoke r0.<com.jidesoft.swing.JideSplitPaneDivider: void addMouseListener(java.awt.event.MouseListener)>($r7);

        $r8 = r0.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPaneDivider$MouseHandler _mouseHandler>;

        virtualinvoke r0.<com.jidesoft.swing.JideSplitPaneDivider: void addMouseMotionListener(java.awt.event.MouseMotionListener)>($r8);

        $r9 = r0.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPane _jideSplitPane>;

        virtualinvoke $r9.<com.jidesoft.swing.JideSplitPane: void addPropertyChangeListener(java.beans.PropertyChangeListener)>(r0);

     label2:
        return;
    }

    private void uninstallListeners()
    {
        com.jidesoft.swing.JideSplitPaneDivider$MouseHandler $r3, $r4, $r6, $r8, $r9;
        com.jidesoft.swing.JideSplitPaneDivider r0;
        com.jidesoft.swing.JideSplitPane $r1, $r2, $r5, $r7;

        r0 := @this: com.jidesoft.swing.JideSplitPaneDivider;

        $r1 = r0.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPane _jideSplitPane>;

        if $r1 == null goto label1;

        $r2 = r0.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPane _jideSplitPane>;

        virtualinvoke $r2.<com.jidesoft.swing.JideSplitPane: void removePropertyChangeListener(java.beans.PropertyChangeListener)>(r0);

        $r3 = r0.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPaneDivider$MouseHandler _mouseHandler>;

        if $r3 == null goto label1;

        $r5 = r0.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPane _jideSplitPane>;

        $r4 = r0.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPaneDivider$MouseHandler _mouseHandler>;

        virtualinvoke $r5.<com.jidesoft.swing.JideSplitPane: void removeMouseListener(java.awt.event.MouseListener)>($r4);

        $r7 = r0.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPane _jideSplitPane>;

        $r6 = r0.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPaneDivider$MouseHandler _mouseHandler>;

        virtualinvoke $r7.<com.jidesoft.swing.JideSplitPane: void removeMouseMotionListener(java.awt.event.MouseMotionListener)>($r6);

        $r8 = r0.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPaneDivider$MouseHandler _mouseHandler>;

        virtualinvoke r0.<com.jidesoft.swing.JideSplitPaneDivider: void removeMouseListener(java.awt.event.MouseListener)>($r8);

        $r9 = r0.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPaneDivider$MouseHandler _mouseHandler>;

        virtualinvoke r0.<com.jidesoft.swing.JideSplitPaneDivider: void removeMouseMotionListener(java.awt.event.MouseMotionListener)>($r9);

        r0.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPaneDivider$MouseHandler _mouseHandler> = null;

     label1:
        return;
    }

    protected com.jidesoft.swing.JideSplitPaneDivider$MouseHandler createMouseHandler()
    {
        com.jidesoft.swing.JideSplitPaneDivider$MouseHandler $r0;
        com.jidesoft.swing.JideSplitPaneDivider r1;

        r1 := @this: com.jidesoft.swing.JideSplitPaneDivider;

        $r0 = new com.jidesoft.swing.JideSplitPaneDivider$MouseHandler;

        specialinvoke $r0.<com.jidesoft.swing.JideSplitPaneDivider$MouseHandler: void <init>(com.jidesoft.swing.JideSplitPaneDivider)>(r1);

        return $r0;
    }

    public void setDividerSize(int)
    {
        int i0;
        com.jidesoft.swing.JideSplitPaneDivider r0;

        r0 := @this: com.jidesoft.swing.JideSplitPaneDivider;

        i0 := @parameter0: int;

        r0.<com.jidesoft.swing.JideSplitPaneDivider: int _dividerSize> = i0;

        return;
    }

    public int getDividerSize()
    {
        int $i0;
        com.jidesoft.swing.JideSplitPaneDivider r0;

        r0 := @this: com.jidesoft.swing.JideSplitPaneDivider;

        $i0 = r0.<com.jidesoft.swing.JideSplitPaneDivider: int _dividerSize>;

        return $i0;
    }

    public java.awt.Dimension getPreferredSize()
    {
        java.awt.Dimension $r0;
        com.jidesoft.swing.JideSplitPaneDivider r1;
        int $i0, $i1;

        r1 := @this: com.jidesoft.swing.JideSplitPaneDivider;

        $r0 = new java.awt.Dimension;

        $i0 = virtualinvoke r1.<com.jidesoft.swing.JideSplitPaneDivider: int getDividerSize()>();

        $i1 = virtualinvoke r1.<com.jidesoft.swing.JideSplitPaneDivider: int getDividerSize()>();

        specialinvoke $r0.<java.awt.Dimension: void <init>(int,int)>($i0, $i1);

        return $r0;
    }

    public java.awt.Dimension getMinimumSize()
    {
        java.awt.Dimension $r1;
        com.jidesoft.swing.JideSplitPaneDivider r0;

        r0 := @this: com.jidesoft.swing.JideSplitPaneDivider;

        $r1 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPaneDivider: java.awt.Dimension getPreferredSize()>();

        return $r1;
    }

    public void propertyChange(java.beans.PropertyChangeEvent)
    {
        java.awt.Cursor $r15;
        com.jidesoft.swing.JideSplitPaneDivider r2;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        java.beans.PropertyChangeEvent r0;
        boolean $z0, $z1, $z2, $z3;
        com.jidesoft.swing.JideSplitPane $r3, $r12, $r13, $r14;
        java.lang.Object $r1;

        r2 := @this: com.jidesoft.swing.JideSplitPaneDivider;

        r0 := @parameter0: java.beans.PropertyChangeEvent;

        $r1 = virtualinvoke r0.<java.beans.PropertyChangeEvent: java.lang.Object getSource()>();

        $r3 = r2.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPane _jideSplitPane>;

        if $r1 != $r3 goto label6;

        $r4 = "orientation";

        $r5 = virtualinvoke r0.<java.beans.PropertyChangeEvent: java.lang.String getPropertyName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label3;

        $r14 = r2.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPane _jideSplitPane>;

        $i2 = virtualinvoke $r14.<com.jidesoft.swing.JideSplitPane: int getOrientation()>();

        r2.<com.jidesoft.swing.JideSplitPaneDivider: int _orientation> = $i2;

        $i3 = r2.<com.jidesoft.swing.JideSplitPaneDivider: int _orientation>;

        if $i3 != 1 goto label1;

        $r15 = <com.jidesoft.swing.JideSplitPaneDivider: java.awt.Cursor HORIZONTAL_CURSOR>;

        goto label2;

     label1:
        $r15 = <com.jidesoft.swing.JideSplitPaneDivider: java.awt.Cursor VERTICAL_CURSOR>;

     label2:
        virtualinvoke r2.<com.jidesoft.swing.JideSplitPaneDivider: void setCursor(java.awt.Cursor)>($r15);

        virtualinvoke r2.<com.jidesoft.swing.JideSplitPaneDivider: void invalidate()>();

        virtualinvoke r2.<com.jidesoft.swing.JideSplitPaneDivider: void validate()>();

        goto label6;

     label3:
        $r6 = "oneTouchExpandable";

        $r7 = virtualinvoke r0.<java.beans.PropertyChangeEvent: java.lang.String getPropertyName()>();

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z1 == 0 goto label4;

        $r13 = r2.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPane _jideSplitPane>;

        $i1 = virtualinvoke $r13.<com.jidesoft.swing.JideSplitPane: int getDividerSize()>();

        virtualinvoke r2.<com.jidesoft.swing.JideSplitPaneDivider: void setDividerSize(int)>($i1);

        virtualinvoke r2.<com.jidesoft.swing.JideSplitPaneDivider: void oneTouchExpandableChanged()>();

        goto label6;

     label4:
        $r8 = "dividerSize";

        $r9 = virtualinvoke r0.<java.beans.PropertyChangeEvent: java.lang.String getPropertyName()>();

        $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z2 == 0 goto label5;

        $r12 = r2.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPane _jideSplitPane>;

        $i0 = virtualinvoke $r12.<com.jidesoft.swing.JideSplitPane: int getDividerSize()>();

        virtualinvoke r2.<com.jidesoft.swing.JideSplitPaneDivider: void setDividerSize(int)>($i0);

        goto label6;

     label5:
        $r10 = "gripper";

        $r11 = virtualinvoke r0.<java.beans.PropertyChangeEvent: java.lang.String getPropertyName()>();

        $z3 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z3 == 0 goto label6;

        virtualinvoke r2.<com.jidesoft.swing.JideSplitPaneDivider: void repaint()>();

     label6:
        return;
    }

    public void updateUI()
    {
        java.awt.Color $r1;
        com.jidesoft.swing.JideSplitPaneDivider r0;
        com.jidesoft.plaf.basic.Painter $r4;
        java.lang.Object $r3;
        javax.swing.border.Border $r2;

        r0 := @this: com.jidesoft.swing.JideSplitPaneDivider;

        specialinvoke r0.<javax.swing.JPanel: void updateUI()>();

        $r1 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("JideSplitPaneDivider.background");

        virtualinvoke r0.<com.jidesoft.swing.JideSplitPaneDivider: void setBackground(java.awt.Color)>($r1);

        $r2 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: javax.swing.border.Border getBorder(java.lang.Object)>("JideSplitPaneDivider.border");

        virtualinvoke r0.<com.jidesoft.swing.JideSplitPaneDivider: void setBorder(javax.swing.border.Border)>($r2);

        $r3 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("JideSplitPaneDivider.gripperPainter");

        $r4 = (com.jidesoft.plaf.basic.Painter) $r3;

        r0.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.plaf.basic.Painter _gripperPainter> = $r4;

        return;
    }

    public void paintComponent(java.awt.Graphics)
    {
        java.awt.Color $r9;
        java.awt.Rectangle $r5;
        javax.swing.border.Border $r2;
        com.jidesoft.swing.JideSplitPaneDivider r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        boolean $z0, $z1;
        java.awt.Dimension $r3;
        java.awt.Graphics r1;
        com.jidesoft.swing.JideSplitPane $r4;
        com.jidesoft.plaf.basic.Painter $r6, $r7, $r8;

        r0 := @this: com.jidesoft.swing.JideSplitPaneDivider;

        r1 := @parameter0: java.awt.Graphics;

        specialinvoke r0.<javax.swing.JPanel: void paintComponent(java.awt.Graphics)>(r1);

        $r2 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPaneDivider: javax.swing.border.Border getBorder()>();

        $r3 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPaneDivider: java.awt.Dimension getSize()>();

        $z0 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPaneDivider: boolean isOpaque()>();

        if $z0 == 0 goto label1;

        $r9 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPaneDivider: java.awt.Color getBackground()>();

        virtualinvoke r1.<java.awt.Graphics: void setColor(java.awt.Color)>($r9);

        $i11 = $r3.<java.awt.Dimension: int width>;

        $i10 = $r3.<java.awt.Dimension: int height>;

        virtualinvoke r1.<java.awt.Graphics: void fillRect(int,int,int,int)>(0, 0, $i11, $i10);

     label1:
        if $r2 == null goto label2;

        $i9 = $r3.<java.awt.Dimension: int width>;

        $i8 = $r3.<java.awt.Dimension: int height>;

        interfaceinvoke $r2.<javax.swing.border.Border: void paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int)>(r0, r1, 0, 0, $i9, $i8);

     label2:
        $r4 = r0.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPane _jideSplitPane>;

        $z1 = virtualinvoke $r4.<com.jidesoft.swing.JideSplitPane: boolean isShowGripper()>();

        if $z1 == 0 goto label5;

        $r5 = new java.awt.Rectangle;

        specialinvoke $r5.<java.awt.Rectangle: void <init>(java.awt.Dimension)>($r3);

        $r6 = r0.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.plaf.basic.Painter _gripperPainter>;

        if $r6 == null goto label4;

        $i7 = $r5.<java.awt.Rectangle: int width>;

        $i6 = $r5.<java.awt.Rectangle: int height>;

        if $i7 <= $i6 goto label3;

        $r8 = r0.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.plaf.basic.Painter _gripperPainter>;

        interfaceinvoke $r8.<com.jidesoft.plaf.basic.Painter: void paint(javax.swing.JComponent,java.awt.Graphics,java.awt.Rectangle,int,int)>(r0, r1, $r5, 1, 0);

        goto label5;

     label3:
        $r7 = r0.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.plaf.basic.Painter _gripperPainter>;

        interfaceinvoke $r7.<com.jidesoft.plaf.basic.Painter: void paint(javax.swing.JComponent,java.awt.Graphics,java.awt.Rectangle,int,int)>(r0, r1, $r5, 0, 0);

        goto label5;

     label4:
        $i0 = $r5.<java.awt.Rectangle: int x>;

        $i1 = $i0 + 1;

        $r5.<java.awt.Rectangle: int x> = $i1;

        $i2 = $r5.<java.awt.Rectangle: int y>;

        $i3 = $i2 + 1;

        $r5.<java.awt.Rectangle: int y> = $i3;

        $i4 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: int getInt(java.lang.Object)>("JideSplitPane.dividerSize");

        $i5 = $i4 / 3;

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void drawGrip(java.awt.Graphics,java.awt.Rectangle,int,int)>(r1, $r5, 9, $i5);

     label5:
        return;
    }

    protected void prepareForDragging()
    {
        com.jidesoft.swing.JideSplitPane $r1;
        com.jidesoft.swing.JideSplitPaneDivider r0;

        r0 := @this: com.jidesoft.swing.JideSplitPaneDivider;

        $r1 = r0.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPane _jideSplitPane>;

        virtualinvoke $r1.<com.jidesoft.swing.JideSplitPane: void startDragging(com.jidesoft.swing.JideSplitPaneDivider)>(r0);

        return;
    }

    protected void dragDividerTo(int)
    {
        com.jidesoft.swing.JideSplitPaneDivider r0;
        int i0, $i1, $i2;
        com.jidesoft.swing.JideSplitPane $r1, $r2, $r3;

        r0 := @this: com.jidesoft.swing.JideSplitPaneDivider;

        i0 := @parameter0: int;

        $r1 = r0.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPane _jideSplitPane>;

        virtualinvoke $r1.<com.jidesoft.swing.JideSplitPane: void dragDividerTo(com.jidesoft.swing.JideSplitPaneDivider,int)>(r0, i0);

        r0.<com.jidesoft.swing.JideSplitPaneDivider: int _currentState> = 1;

        $r2 = r0.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPane _jideSplitPane>;

        $i1 = virtualinvoke $r2.<com.jidesoft.swing.JideSplitPane: int indexOfDivider(com.jidesoft.swing.JideSplitPaneDivider)>(r0);

        $r3 = r0.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPane _jideSplitPane>;

        $i2 = virtualinvoke $r3.<com.jidesoft.swing.JideSplitPane: int getDividerLocation(int)>($i1);

        r0.<com.jidesoft.swing.JideSplitPaneDivider: int _lastPosition> = $i2;

        return;
    }

    protected void finishDraggingTo(int)
    {
        int i0;
        com.jidesoft.swing.JideSplitPane $r1;
        com.jidesoft.swing.JideSplitPaneDivider r0;

        r0 := @this: com.jidesoft.swing.JideSplitPaneDivider;

        i0 := @parameter0: int;

        $r1 = r0.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPane _jideSplitPane>;

        virtualinvoke $r1.<com.jidesoft.swing.JideSplitPane: void finishDraggingTo(com.jidesoft.swing.JideSplitPaneDivider,int)>(r0, i0);

        return;
    }

    protected int getPreviousDividerLocation(boolean, boolean)
    {
        com.jidesoft.swing.JideSplitPaneDivider r0;
        com.jidesoft.swing.JideSplitPane $r1;
        int $i0;
        boolean z0, z1;

        r0 := @this: com.jidesoft.swing.JideSplitPaneDivider;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        $r1 = r0.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPane _jideSplitPane>;

        $i0 = virtualinvoke $r1.<com.jidesoft.swing.JideSplitPane: int getPreviousDividerLocation(com.jidesoft.swing.JideSplitPaneDivider,boolean,boolean)>(r0, z0, z1);

        return $i0;
    }

    protected int getNextDividerLocation(boolean, boolean)
    {
        com.jidesoft.swing.JideSplitPaneDivider r0;
        com.jidesoft.swing.JideSplitPane $r1;
        int $i0;
        boolean z0, z1;

        r0 := @this: com.jidesoft.swing.JideSplitPaneDivider;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        $r1 = r0.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPane _jideSplitPane>;

        $i0 = virtualinvoke $r1.<com.jidesoft.swing.JideSplitPane: int getNextDividerLocation(com.jidesoft.swing.JideSplitPaneDivider,boolean,boolean)>(r0, z0, z1);

        return $i0;
    }

    public java.awt.Component getFirstComponent(boolean)
    {
        java.lang.IndexOutOfBoundsException $r14;
        com.jidesoft.swing.JideSplitPaneDivider r0;
        int $i0, $i1, $i2, i3, $i5;
        java.lang.String $r6;
        boolean z0, $z1;
        java.awt.Component $r8, $r10, $r12;
        com.jidesoft.swing.JideSplitPane $r1, $r7, $r9, $r11;
        java.lang.StringBuilder $r4, $r5, $r13;

        r0 := @this: com.jidesoft.swing.JideSplitPaneDivider;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPane _jideSplitPane>;

        $i0 = virtualinvoke $r1.<com.jidesoft.swing.JideSplitPane: int indexOf(java.awt.Component)>(r0);

        $i1 = $i0 - 1;

        if $i1 < 0 goto label5;

        i3 = $i0 - 1;

     label1:
        if i3 < 0 goto label4;

        if z0 != 0 goto label2;

        $r11 = r0.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPane _jideSplitPane>;

        $r12 = virtualinvoke $r11.<com.jidesoft.swing.JideSplitPane: java.awt.Component getComponent(int)>(i3);

        $z1 = virtualinvoke $r12.<java.awt.Component: boolean isVisible()>();

        if $z1 == 0 goto label3;

     label2:
        $r9 = r0.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPane _jideSplitPane>;

        $r10 = virtualinvoke $r9.<com.jidesoft.swing.JideSplitPane: java.awt.Component getComponent(int)>(i3);

        return $r10;

     label3:
        $i5 = (int) -1;

        i3 = i3 + $i5;

        goto label1;

     label4:
        $r7 = r0.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPane _jideSplitPane>;

        $i2 = $i0 - 1;

        $r8 = virtualinvoke $r7.<com.jidesoft.swing.JideSplitPane: java.awt.Component getComponent(int)>($i2);

        return $r8;

     label5:
        $r14 = new java.lang.IndexOutOfBoundsException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("There is no component before divider ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r6);

        throw $r14;
    }

    public java.awt.Component getSecondComponent(boolean)
    {
        java.lang.IndexOutOfBoundsException $r3;
        com.jidesoft.swing.JideSplitPaneDivider r0;
        int $i0, $i1, $i2, $i3, i4;
        java.lang.String $r7;
        boolean z0, $z1;
        java.awt.Component $r9, $r11, $r13;
        com.jidesoft.swing.JideSplitPane $r1, $r2, $r8, $r10, $r12;
        java.lang.StringBuilder $r4, $r5, $r6;

        r0 := @this: com.jidesoft.swing.JideSplitPaneDivider;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPane _jideSplitPane>;

        $i0 = virtualinvoke $r1.<com.jidesoft.swing.JideSplitPane: int indexOf(java.awt.Component)>(r0);

        $i1 = $i0 + 1;

        $r2 = r0.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPane _jideSplitPane>;

        $i2 = virtualinvoke $r2.<com.jidesoft.swing.JideSplitPane: int getComponentCount()>();

        if $i1 >= $i2 goto label5;

        i4 = $i0 + 1;

     label1:
        if i4 < 0 goto label4;

        if z0 != 0 goto label2;

        $r12 = r0.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPane _jideSplitPane>;

        $r13 = virtualinvoke $r12.<com.jidesoft.swing.JideSplitPane: java.awt.Component getComponent(int)>(i4);

        $z1 = virtualinvoke $r13.<java.awt.Component: boolean isVisible()>();

        if $z1 == 0 goto label3;

     label2:
        $r10 = r0.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPane _jideSplitPane>;

        $r11 = virtualinvoke $r10.<com.jidesoft.swing.JideSplitPane: java.awt.Component getComponent(int)>(i4);

        return $r11;

     label3:
        i4 = i4 + 1;

        goto label1;

     label4:
        $r8 = r0.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPane _jideSplitPane>;

        $i3 = $i0 + 1;

        $r9 = virtualinvoke $r8.<com.jidesoft.swing.JideSplitPane: java.awt.Component getComponent(int)>($i3);

        return $r9;

     label5:
        $r3 = new java.lang.IndexOutOfBoundsException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("There is no component before divider ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r7);

        throw $r3;
    }

    protected void oneTouchExpandableChanged()
    {
        boolean $z0, $z1, $z2, $z3, $z4;
        java.awt.Component $r3, $r5;
        java.awt.Dimension $r6;
        com.jidesoft.swing.JideSplitPaneDivider r0;
        com.jidesoft.swing.JideSplitPaneDivider$OneTouchActionHandler $r14, $r21;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14;
        javax.swing.JButton $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r15, $r16, $r17, $r18, $r19, $r20, $r22, $r23, $r24, $r25, $r27;
        com.jidesoft.swing.JideSplitPane $r1, $r2, $r4, $r26, $r28, $r29, $r30, $r31;

        r0 := @this: com.jidesoft.swing.JideSplitPaneDivider;

        $r1 = r0.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPane _jideSplitPane>;

        $z0 = virtualinvoke $r1.<com.jidesoft.swing.JideSplitPane: boolean isOneTouchExpandable()>();

        if $z0 == 0 goto label03;

        $r18 = r0.<com.jidesoft.swing.JideSplitPaneDivider: javax.swing.JButton _leftButton>;

        if $r18 != null goto label03;

        $r19 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPaneDivider: javax.swing.JButton createLeftOneTouchButton()>();

        r0.<com.jidesoft.swing.JideSplitPaneDivider: javax.swing.JButton _leftButton> = $r19;

        $r20 = r0.<com.jidesoft.swing.JideSplitPaneDivider: javax.swing.JButton _leftButton>;

        if $r20 == null goto label03;

        $r22 = r0.<com.jidesoft.swing.JideSplitPaneDivider: javax.swing.JButton _leftButton>;

        $r21 = new com.jidesoft.swing.JideSplitPaneDivider$OneTouchActionHandler;

        specialinvoke $r21.<com.jidesoft.swing.JideSplitPaneDivider$OneTouchActionHandler: void <init>(com.jidesoft.swing.JideSplitPaneDivider,boolean)>(r0, 1);

        virtualinvoke $r22.<javax.swing.JButton: void addActionListener(java.awt.event.ActionListener)>($r21);

        $i6 = r0.<com.jidesoft.swing.JideSplitPaneDivider: int _orientation>;

        if $i6 != 1 goto label01;

        $r24 = r0.<com.jidesoft.swing.JideSplitPaneDivider: javax.swing.JButton _leftButton>;

        $i11 = r0.<com.jidesoft.swing.JideSplitPaneDivider: int _buttonWidth>;

        $i10 = r0.<com.jidesoft.swing.JideSplitPaneDivider: int _buttonHeight>;

        virtualinvoke $r24.<javax.swing.JButton: void setBounds(int,int,int,int)>(1, 10, $i11, $i10);

        goto label02;

     label01:
        $i7 = r0.<com.jidesoft.swing.JideSplitPaneDivider: int _orientation>;

        if $i7 != 0 goto label02;

        $r23 = r0.<com.jidesoft.swing.JideSplitPaneDivider: javax.swing.JButton _leftButton>;

        $i9 = r0.<com.jidesoft.swing.JideSplitPaneDivider: int _buttonHeight>;

        $i8 = r0.<com.jidesoft.swing.JideSplitPaneDivider: int _buttonWidth>;

        virtualinvoke $r23.<javax.swing.JButton: void setBounds(int,int,int,int)>(10, 1, $i9, $i8);

     label02:
        $r25 = r0.<com.jidesoft.swing.JideSplitPaneDivider: javax.swing.JButton _leftButton>;

        virtualinvoke r0.<com.jidesoft.swing.JideSplitPaneDivider: java.awt.Component add(java.awt.Component)>($r25);

     label03:
        $r26 = r0.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPane _jideSplitPane>;

        $z1 = virtualinvoke $r26.<com.jidesoft.swing.JideSplitPane: boolean isOneTouchExpandable()>();

        if $z1 == 0 goto label06;

        $r11 = r0.<com.jidesoft.swing.JideSplitPaneDivider: javax.swing.JButton _rightButton>;

        if $r11 != null goto label06;

        $r12 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPaneDivider: javax.swing.JButton createRightOneTouchButton()>();

        r0.<com.jidesoft.swing.JideSplitPaneDivider: javax.swing.JButton _rightButton> = $r12;

        $r13 = r0.<com.jidesoft.swing.JideSplitPaneDivider: javax.swing.JButton _rightButton>;

        if $r13 == null goto label06;

        $r15 = r0.<com.jidesoft.swing.JideSplitPaneDivider: javax.swing.JButton _rightButton>;

        $r14 = new com.jidesoft.swing.JideSplitPaneDivider$OneTouchActionHandler;

        specialinvoke $r14.<com.jidesoft.swing.JideSplitPaneDivider$OneTouchActionHandler: void <init>(com.jidesoft.swing.JideSplitPaneDivider,boolean)>(r0, 0);

        virtualinvoke $r15.<javax.swing.JButton: void addActionListener(java.awt.event.ActionListener)>($r14);

        $i0 = r0.<com.jidesoft.swing.JideSplitPaneDivider: int _orientation>;

        if $i0 != 1 goto label04;

        $r17 = r0.<com.jidesoft.swing.JideSplitPaneDivider: javax.swing.JButton _rightButton>;

        $i5 = r0.<com.jidesoft.swing.JideSplitPaneDivider: int _buttonWidth>;

        $i4 = r0.<com.jidesoft.swing.JideSplitPaneDivider: int _buttonHeight>;

        virtualinvoke $r17.<javax.swing.JButton: void setBounds(int,int,int,int)>(1, 25, $i5, $i4);

        goto label05;

     label04:
        $i1 = r0.<com.jidesoft.swing.JideSplitPaneDivider: int _orientation>;

        if $i1 != 0 goto label05;

        $r16 = r0.<com.jidesoft.swing.JideSplitPaneDivider: javax.swing.JButton _rightButton>;

        $i3 = r0.<com.jidesoft.swing.JideSplitPaneDivider: int _buttonHeight>;

        $i2 = r0.<com.jidesoft.swing.JideSplitPaneDivider: int _buttonWidth>;

        virtualinvoke $r16.<javax.swing.JButton: void setBounds(int,int,int,int)>(25, 1, $i3, $i2);

     label05:
        $r27 = r0.<com.jidesoft.swing.JideSplitPaneDivider: javax.swing.JButton _rightButton>;

        virtualinvoke r0.<com.jidesoft.swing.JideSplitPaneDivider: java.awt.Component add(java.awt.Component)>($r27);

     label06:
        $r28 = r0.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPane _jideSplitPane>;

        $z2 = virtualinvoke $r28.<com.jidesoft.swing.JideSplitPane: boolean isOneTouchExpandable()>();

        if $z2 != 0 goto label07;

        $r9 = r0.<com.jidesoft.swing.JideSplitPaneDivider: javax.swing.JButton _leftButton>;

        if $r9 == null goto label07;

        $r10 = r0.<com.jidesoft.swing.JideSplitPaneDivider: javax.swing.JButton _leftButton>;

        virtualinvoke r0.<com.jidesoft.swing.JideSplitPaneDivider: void remove(java.awt.Component)>($r10);

        r0.<com.jidesoft.swing.JideSplitPaneDivider: javax.swing.JButton _leftButton> = null;

     label07:
        $r29 = r0.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPane _jideSplitPane>;

        $z3 = virtualinvoke $r29.<com.jidesoft.swing.JideSplitPane: boolean isOneTouchExpandable()>();

        if $z3 != 0 goto label08;

        $r7 = r0.<com.jidesoft.swing.JideSplitPaneDivider: javax.swing.JButton _rightButton>;

        if $r7 == null goto label08;

        $r8 = r0.<com.jidesoft.swing.JideSplitPaneDivider: javax.swing.JButton _rightButton>;

        virtualinvoke r0.<com.jidesoft.swing.JideSplitPaneDivider: void remove(java.awt.Component)>($r8);

        r0.<com.jidesoft.swing.JideSplitPaneDivider: javax.swing.JButton _rightButton> = null;

     label08:
        $r30 = r0.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPane _jideSplitPane>;

        $i12 = virtualinvoke $r30.<com.jidesoft.swing.JideSplitPane: int getPaneCount()>();

        $r31 = r0.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPane _jideSplitPane>;

        $z4 = virtualinvoke $r31.<com.jidesoft.swing.JideSplitPane: boolean isOneTouchExpandable()>();

        if $z4 == 0 goto label11;

        i13 = 0;

     label09:
        if i13 >= $i12 goto label10;

        $r4 = r0.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPane _jideSplitPane>;

        $r5 = virtualinvoke $r4.<com.jidesoft.swing.JideSplitPane: java.awt.Component getPaneAt(int)>(i13);

        $r6 = new java.awt.Dimension;

        specialinvoke $r6.<java.awt.Dimension: void <init>(int,int)>(0, 0);

        staticinvoke <com.jidesoft.utils.PortingUtils: void setMinimumSize(java.awt.Component,java.awt.Dimension)>($r5, $r6);

        i13 = i13 + 1;

        goto label09;

     label10:
        goto label13;

     label11:
        i14 = 0;

     label12:
        if i14 >= $i12 goto label13;

        $r2 = r0.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPane _jideSplitPane>;

        $r3 = virtualinvoke $r2.<com.jidesoft.swing.JideSplitPane: java.awt.Component getPaneAt(int)>(i14);

        staticinvoke <com.jidesoft.utils.PortingUtils: void setMinimumSize(java.awt.Component,java.awt.Dimension)>($r3, null);

        i14 = i14 + 1;

        goto label12;

     label13:
        return;
    }

    protected javax.swing.JButton createLeftOneTouchButton()
    {
        java.awt.Dimension $r2;
        com.jidesoft.swing.JideSplitPaneDivider$1 $r0;
        com.jidesoft.swing.JideSplitPaneDivider r1;
        java.awt.Cursor $r3;
        int $i0, $i1;

        r1 := @this: com.jidesoft.swing.JideSplitPaneDivider;

        $r0 = new com.jidesoft.swing.JideSplitPaneDivider$1;

        specialinvoke $r0.<com.jidesoft.swing.JideSplitPaneDivider$1: void <init>(com.jidesoft.swing.JideSplitPaneDivider)>(r1);

        $r2 = new java.awt.Dimension;

        $i1 = r1.<com.jidesoft.swing.JideSplitPaneDivider: int _buttonWidth>;

        $i0 = r1.<com.jidesoft.swing.JideSplitPaneDivider: int _buttonHeight>;

        specialinvoke $r2.<java.awt.Dimension: void <init>(int,int)>($i1, $i0);

        virtualinvoke $r0.<javax.swing.JButton: void setMinimumSize(java.awt.Dimension)>($r2);

        $r3 = staticinvoke <java.awt.Cursor: java.awt.Cursor getPredefinedCursor(int)>(0);

        virtualinvoke $r0.<javax.swing.JButton: void setCursor(java.awt.Cursor)>($r3);

        virtualinvoke $r0.<javax.swing.JButton: void setFocusPainted(boolean)>(0);

        virtualinvoke $r0.<javax.swing.JButton: void setBorderPainted(boolean)>(0);

        virtualinvoke $r0.<javax.swing.JButton: void setRequestFocusEnabled(boolean)>(0);

        return $r0;
    }

    public int getCurrentState()
    {
        int $i0;
        com.jidesoft.swing.JideSplitPaneDivider r0;

        r0 := @this: com.jidesoft.swing.JideSplitPaneDivider;

        $i0 = r0.<com.jidesoft.swing.JideSplitPaneDivider: int _currentState>;

        return $i0;
    }

    protected javax.swing.JButton createRightOneTouchButton()
    {
        com.jidesoft.swing.JideSplitPaneDivider$2 $r0;
        java.awt.Dimension $r2;
        com.jidesoft.swing.JideSplitPaneDivider r1;
        java.awt.Cursor $r3;
        int $i0, $i1;

        r1 := @this: com.jidesoft.swing.JideSplitPaneDivider;

        $r0 = new com.jidesoft.swing.JideSplitPaneDivider$2;

        specialinvoke $r0.<com.jidesoft.swing.JideSplitPaneDivider$2: void <init>(com.jidesoft.swing.JideSplitPaneDivider)>(r1);

        $r2 = new java.awt.Dimension;

        $i1 = r1.<com.jidesoft.swing.JideSplitPaneDivider: int _buttonWidth>;

        $i0 = r1.<com.jidesoft.swing.JideSplitPaneDivider: int _buttonHeight>;

        specialinvoke $r2.<java.awt.Dimension: void <init>(int,int)>($i1, $i0);

        virtualinvoke $r0.<javax.swing.JButton: void setMinimumSize(java.awt.Dimension)>($r2);

        $r3 = staticinvoke <java.awt.Cursor: java.awt.Cursor getPredefinedCursor(int)>(0);

        virtualinvoke $r0.<javax.swing.JButton: void setCursor(java.awt.Cursor)>($r3);

        virtualinvoke $r0.<javax.swing.JButton: void setFocusPainted(boolean)>(0);

        virtualinvoke $r0.<javax.swing.JButton: void setBorderPainted(boolean)>(0);

        virtualinvoke $r0.<javax.swing.JButton: void setRequestFocusEnabled(boolean)>(0);

        return $r0;
    }

    protected java.awt.Color getDarkShadowColor()
    {
        java.awt.Color $r0;
        com.jidesoft.swing.JideSplitPaneDivider r1;

        r1 := @this: com.jidesoft.swing.JideSplitPaneDivider;

        $r0 = staticinvoke <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>("controlDkShadow");

        return $r0;
    }

    public void collapse()
    {
        javax.swing.JButton $r1, $r3;
        com.jidesoft.swing.JideSplitPaneDivider r0;
        com.jidesoft.swing.JideSplitPaneDivider$OneTouchActionHandler $r2;

        r0 := @this: com.jidesoft.swing.JideSplitPaneDivider;

        $r1 = r0.<com.jidesoft.swing.JideSplitPaneDivider: javax.swing.JButton _leftButton>;

        if $r1 == null goto label1;

        $r3 = r0.<com.jidesoft.swing.JideSplitPaneDivider: javax.swing.JButton _leftButton>;

        virtualinvoke $r3.<javax.swing.JButton: void doClick()>();

        goto label2;

     label1:
        $r2 = new com.jidesoft.swing.JideSplitPaneDivider$OneTouchActionHandler;

        specialinvoke $r2.<com.jidesoft.swing.JideSplitPaneDivider$OneTouchActionHandler: void <init>(com.jidesoft.swing.JideSplitPaneDivider,boolean)>(r0, 1);

        virtualinvoke $r2.<com.jidesoft.swing.JideSplitPaneDivider$OneTouchActionHandler: void actionPerformed(java.awt.event.ActionEvent)>(null);

     label2:
        return;
    }

    public void expand()
    {
        javax.swing.JButton $r1, $r3;
        com.jidesoft.swing.JideSplitPaneDivider r0;
        com.jidesoft.swing.JideSplitPaneDivider$OneTouchActionHandler $r2;

        r0 := @this: com.jidesoft.swing.JideSplitPaneDivider;

        $r1 = r0.<com.jidesoft.swing.JideSplitPaneDivider: javax.swing.JButton _rightButton>;

        if $r1 == null goto label1;

        $r3 = r0.<com.jidesoft.swing.JideSplitPaneDivider: javax.swing.JButton _rightButton>;

        virtualinvoke $r3.<javax.swing.JButton: void doClick()>();

        goto label2;

     label1:
        $r2 = new com.jidesoft.swing.JideSplitPaneDivider$OneTouchActionHandler;

        specialinvoke $r2.<com.jidesoft.swing.JideSplitPaneDivider$OneTouchActionHandler: void <init>(com.jidesoft.swing.JideSplitPaneDivider,boolean)>(r0, 0);

        virtualinvoke $r2.<com.jidesoft.swing.JideSplitPaneDivider$OneTouchActionHandler: void actionPerformed(java.awt.event.ActionEvent)>(null);

     label2:
        return;
    }

    static int access$000(com.jidesoft.swing.JideSplitPaneDivider)
    {
        int $i0;
        com.jidesoft.swing.JideSplitPaneDivider r0;

        r0 := @parameter0: com.jidesoft.swing.JideSplitPaneDivider;

        $i0 = r0.<com.jidesoft.swing.JideSplitPaneDivider: int _triangleSize>;

        return $i0;
    }

    static int access$100(com.jidesoft.swing.JideSplitPaneDivider)
    {
        int $i0;
        com.jidesoft.swing.JideSplitPaneDivider r0;

        r0 := @parameter0: com.jidesoft.swing.JideSplitPaneDivider;

        $i0 = r0.<com.jidesoft.swing.JideSplitPaneDivider: int _currentState>;

        return $i0;
    }

    static int access$102(com.jidesoft.swing.JideSplitPaneDivider, int)
    {
        int i0;
        com.jidesoft.swing.JideSplitPaneDivider r0;

        r0 := @parameter0: com.jidesoft.swing.JideSplitPaneDivider;

        i0 := @parameter1: int;

        r0.<com.jidesoft.swing.JideSplitPaneDivider: int _currentState> = i0;

        return i0;
    }

    static int access$200(com.jidesoft.swing.JideSplitPaneDivider)
    {
        int $i0;
        com.jidesoft.swing.JideSplitPaneDivider r0;

        r0 := @parameter0: com.jidesoft.swing.JideSplitPaneDivider;

        $i0 = r0.<com.jidesoft.swing.JideSplitPaneDivider: int _lastPosition>;

        return $i0;
    }

    static int access$202(com.jidesoft.swing.JideSplitPaneDivider, int)
    {
        int i0;
        com.jidesoft.swing.JideSplitPaneDivider r0;

        r0 := @parameter0: com.jidesoft.swing.JideSplitPaneDivider;

        i0 := @parameter1: int;

        r0.<com.jidesoft.swing.JideSplitPaneDivider: int _lastPosition> = i0;

        return i0;
    }

    static void <clinit>()
    {
        java.awt.Cursor $r0, $r1, $r2;

        <com.jidesoft.swing.JideSplitPaneDivider: int EXPANDED_STATE> = 2;

        <com.jidesoft.swing.JideSplitPaneDivider: int DEFAULT_STATE> = 1;

        <com.jidesoft.swing.JideSplitPaneDivider: int COLLAPSED_STATE> = 0;

        $r0 = staticinvoke <com.jidesoft.swing.JideCursors: java.awt.Cursor getPredefinedCursor(int)>(20);

        <com.jidesoft.swing.JideSplitPaneDivider: java.awt.Cursor HORIZONTAL_CURSOR> = $r0;

        $r1 = staticinvoke <com.jidesoft.swing.JideCursors: java.awt.Cursor getPredefinedCursor(int)>(21);

        <com.jidesoft.swing.JideSplitPaneDivider: java.awt.Cursor VERTICAL_CURSOR> = $r1;

        $r2 = staticinvoke <java.awt.Cursor: java.awt.Cursor getDefaultCursor()>();

        <com.jidesoft.swing.JideSplitPaneDivider: java.awt.Cursor DEFAULT_CURSOR> = $r2;

        return;
    }
}
