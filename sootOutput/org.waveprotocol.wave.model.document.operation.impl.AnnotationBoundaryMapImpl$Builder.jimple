public final class org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl$Builder extends java.lang.Object
{
    private java.lang.String[] changeKeys;
    private java.lang.String[] changeOldValues;
    private java.lang.String[] changeNewValues;
    private java.lang.String[] endKeys;

    private void <init>()
    {
        java.lang.String[] $r1, $r2, $r3, $r4;
        org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl$Builder r0;

        r0 := @this: org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl: java.lang.String[] access$000()>();

        r0.<org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl$Builder: java.lang.String[] changeKeys> = $r1;

        $r2 = staticinvoke <org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl: java.lang.String[] access$000()>();

        r0.<org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl$Builder: java.lang.String[] changeOldValues> = $r2;

        $r3 = staticinvoke <org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl: java.lang.String[] access$000()>();

        r0.<org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl$Builder: java.lang.String[] changeNewValues> = $r3;

        $r4 = staticinvoke <org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl: java.lang.String[] access$000()>();

        r0.<org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl$Builder: java.lang.String[] endKeys> = $r4;

        return;
    }

    public org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl build()
    {
        org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl $r0;
        java.lang.String[] $r2, $r3, $r4, $r5;
        org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl$Builder r1;

        r1 := @this: org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl$Builder;

        $r0 = new org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl;

        $r5 = r1.<org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl$Builder: java.lang.String[] endKeys>;

        $r4 = r1.<org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl$Builder: java.lang.String[] changeKeys>;

        $r3 = r1.<org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl$Builder: java.lang.String[] changeOldValues>;

        $r2 = r1.<org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl$Builder: java.lang.String[] changeNewValues>;

        specialinvoke $r0.<org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl: void <init>(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[])>($r5, $r4, $r3, $r2);

        return $r0;
    }

    public transient org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl$Builder initializationEnd(java.lang.String[])
    {
        java.lang.String[] r1;
        org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl$Builder r0;

        r0 := @this: org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl$Builder;

        r1 := @parameter0: java.lang.String[];

        r0.<org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl$Builder: java.lang.String[] endKeys> = r1;

        return r0;
    }

    public transient org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl$Builder initializationValues(java.lang.String[])
    {
        java.lang.String[] r0, r1, r2, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11;
        java.lang.String $r5, $r6;
        java.lang.IllegalArgumentException $r7;
        org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl$Builder r3;

        r3 := @this: org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl$Builder;

        r0 := @parameter0: java.lang.String[];

        $i0 = lengthof r0;

        $i1 = $i0 % 2;

        if $i1 == 0 goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("pairs must be even in size");

        throw $r7;

     label1:
        $i2 = lengthof r0;

        $i3 = $i2 / 2;

        r1 = newarray (java.lang.String)[$i3];

        $i4 = lengthof r0;

        $i5 = $i4 / 2;

        r2 = newarray (java.lang.String)[$i5];

        i11 = 0;

     label2:
        $i6 = lengthof r1;

        if i11 >= $i6 goto label3;

        $i8 = i11 * 2;

        $r5 = r0[$i8];

        r1[i11] = $r5;

        $i9 = i11 * 2;

        $i10 = $i9 + 1;

        $r6 = r0[$i10];

        r2[i11] = $r6;

        i11 = i11 + 1;

        goto label2;

     label3:
        r3.<org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl$Builder: java.lang.String[] changeKeys> = r1;

        $i7 = lengthof r1;

        $r4 = newarray (java.lang.String)[$i7];

        r3.<org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl$Builder: java.lang.String[] changeOldValues> = $r4;

        r3.<org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl$Builder: java.lang.String[] changeNewValues> = r2;

        return r3;
    }

    public org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl$Builder updateValues(java.lang.String[], java.lang.String[], java.lang.String[])
    {
        java.lang.String[] r0, r1, r3;
        int $i0, $i1, $i2, $i3;
        org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl$Builder r2;
        boolean $z0;

        r2 := @this: org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl$Builder;

        r0 := @parameter0: java.lang.String[];

        r1 := @parameter1: java.lang.String[];

        r3 := @parameter2: java.lang.String[];

        $i1 = lengthof r0;

        $i0 = lengthof r1;

        if $i1 != $i0 goto label1;

        $i3 = lengthof r0;

        $i2 = lengthof r1;

        if $i3 != $i2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.waveprotocol.wave.model.util.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, "Parallel arrays must have same length");

        r2.<org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl$Builder: java.lang.String[] changeKeys> = r0;

        r2.<org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl$Builder: java.lang.String[] changeOldValues> = r1;

        r2.<org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl$Builder: java.lang.String[] changeNewValues> = r3;

        return r2;
    }

    public transient org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl$Builder updateValues(java.lang.String[])
    {
        java.lang.String[] r0, r1, r2, r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14;
        java.lang.String $r6, $r7, $r8;
        java.lang.IllegalArgumentException $r9;
        org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl$Builder r4, $r5;

        r4 := @this: org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl$Builder;

        r0 := @parameter0: java.lang.String[];

        $i0 = lengthof r0;

        $i1 = $i0 % 3;

        if $i1 == 0 goto label1;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Triplets must be a multiple of 3 in size");

        throw $r9;

     label1:
        $i2 = lengthof r0;

        $i3 = $i2 / 3;

        r1 = newarray (java.lang.String)[$i3];

        $i4 = lengthof r0;

        $i5 = $i4 / 3;

        r2 = newarray (java.lang.String)[$i5];

        $i6 = lengthof r0;

        $i7 = $i6 / 3;

        r3 = newarray (java.lang.String)[$i7];

        i14 = 0;

     label2:
        $i8 = lengthof r1;

        if i14 >= $i8 goto label3;

        $i9 = i14 * 3;

        $r6 = r0[$i9];

        r1[i14] = $r6;

        $i10 = i14 * 3;

        $i11 = $i10 + 1;

        $r7 = r0[$i11];

        r2[i14] = $r7;

        $i12 = i14 * 3;

        $i13 = $i12 + 2;

        $r8 = r0[$i13];

        r3[i14] = $r8;

        i14 = i14 + 1;

        goto label2;

     label3:
        $r5 = virtualinvoke r4.<org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl$Builder: org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl$Builder updateValues(java.lang.String[],java.lang.String[],java.lang.String[])>(r1, r2, r3);

        return $r5;
    }

    void <init>(org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl$1)
    {
        org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl$Builder r0;
        org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl$1 r1;

        r0 := @this: org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl$Builder;

        r1 := @parameter0: org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl$1;

        specialinvoke r0.<org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl$Builder: void <init>()>();

        return;
    }
}
