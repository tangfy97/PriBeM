public class org.sat4j.minisat.constraints.cnf.CBClause extends java.lang.Object implements org.sat4j.minisat.core.Constr, org.sat4j.minisat.core.Undoable, java.io.Serializable
{
    private static final long serialVersionUID;
    protected int falsified;
    private boolean learnt;
    protected final int[] lits;
    protected final org.sat4j.minisat.core.ILits voc;
    private double activity;
    static final boolean $assertionsDisabled;

    public static org.sat4j.minisat.constraints.cnf.CBClause brandNewClause(org.sat4j.minisat.core.UnitPropagationListener, org.sat4j.minisat.core.ILits, org.sat4j.specs.IVecInt)
    {
        org.sat4j.minisat.constraints.cnf.CBClause $r0;
        org.sat4j.specs.IVecInt r1;
        org.sat4j.minisat.core.UnitPropagationListener r3;
        org.sat4j.minisat.core.ILits r2;

        r3 := @parameter0: org.sat4j.minisat.core.UnitPropagationListener;

        r2 := @parameter1: org.sat4j.minisat.core.ILits;

        r1 := @parameter2: org.sat4j.specs.IVecInt;

        $r0 = new org.sat4j.minisat.constraints.cnf.CBClause;

        specialinvoke $r0.<org.sat4j.minisat.constraints.cnf.CBClause: void <init>(org.sat4j.specs.IVecInt,org.sat4j.minisat.core.ILits)>(r1, r2);

        virtualinvoke $r0.<org.sat4j.minisat.constraints.cnf.CBClause: void register()>();

        return $r0;
    }

    public void <init>(org.sat4j.specs.IVecInt, org.sat4j.minisat.core.ILits, boolean)
    {
        org.sat4j.minisat.constraints.cnf.CBClause r0;
        int[] $r2, $r4;
        org.sat4j.specs.IVecInt r1;
        int $i0;
        org.sat4j.minisat.core.ILits r3;
        boolean z0;

        r0 := @this: org.sat4j.minisat.constraints.cnf.CBClause;

        r1 := @parameter0: org.sat4j.specs.IVecInt;

        r3 := @parameter1: org.sat4j.minisat.core.ILits;

        z0 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.sat4j.minisat.constraints.cnf.CBClause: boolean learnt> = z0;

        $i0 = interfaceinvoke r1.<org.sat4j.specs.IVecInt: int size()>();

        $r2 = newarray (int)[$i0];

        r0.<org.sat4j.minisat.constraints.cnf.CBClause: int[] lits> = $r2;

        r0.<org.sat4j.minisat.constraints.cnf.CBClause: org.sat4j.minisat.core.ILits voc> = r3;

        $r4 = r0.<org.sat4j.minisat.constraints.cnf.CBClause: int[] lits>;

        interfaceinvoke r1.<org.sat4j.specs.IVecInt: void moveTo(int[])>($r4);

        return;
    }

    public void <init>(org.sat4j.specs.IVecInt, org.sat4j.minisat.core.ILits)
    {
        org.sat4j.minisat.constraints.cnf.CBClause r0;
        org.sat4j.specs.IVecInt r1;
        org.sat4j.minisat.core.ILits r2;

        r0 := @this: org.sat4j.minisat.constraints.cnf.CBClause;

        r1 := @parameter0: org.sat4j.specs.IVecInt;

        r2 := @parameter1: org.sat4j.minisat.core.ILits;

        specialinvoke r0.<org.sat4j.minisat.constraints.cnf.CBClause: void <init>(org.sat4j.specs.IVecInt,org.sat4j.minisat.core.ILits,boolean)>(r1, r2, 0);

        return;
    }

    public void remove()
    {
        org.sat4j.minisat.constraints.cnf.CBClause r0;
        int[] $r1, $r2;
        int $i0, $i1, $i2, i3;
        org.sat4j.specs.IVec $r4;
        org.sat4j.minisat.core.ILits $r3;

        r0 := @this: org.sat4j.minisat.constraints.cnf.CBClause;

        i3 = 0;

     label1:
        $r1 = r0.<org.sat4j.minisat.constraints.cnf.CBClause: int[] lits>;

        $i0 = lengthof $r1;

        if i3 >= $i0 goto label2;

        $r3 = r0.<org.sat4j.minisat.constraints.cnf.CBClause: org.sat4j.minisat.core.ILits voc>;

        $r2 = r0.<org.sat4j.minisat.constraints.cnf.CBClause: int[] lits>;

        $i1 = $r2[i3];

        $i2 = $i1 ^ 1;

        $r4 = interfaceinvoke $r3.<org.sat4j.minisat.core.ILits: org.sat4j.specs.IVec attaches(int)>($i2);

        interfaceinvoke $r4.<org.sat4j.specs.IVec: void remove(java.lang.Object)>(r0);

        i3 = i3 + 1;

        goto label1;

     label2:
        return;
    }

    public boolean propagate(org.sat4j.minisat.core.UnitPropagationListener, int)
    {
        java.lang.AssertionError $r10;
        int[] $r3, $r4, $r5, $r8, $r9;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11;
        org.sat4j.specs.IVec $r2;
        org.sat4j.minisat.core.ILits $r1, $r6;
        boolean $z0, $z1, $z2;
        org.sat4j.minisat.constraints.cnf.CBClause r0;
        org.sat4j.minisat.core.UnitPropagationListener r7;

        r0 := @this: org.sat4j.minisat.constraints.cnf.CBClause;

        r7 := @parameter0: org.sat4j.minisat.core.UnitPropagationListener;

        i0 := @parameter1: int;

        $r1 = r0.<org.sat4j.minisat.constraints.cnf.CBClause: org.sat4j.minisat.core.ILits voc>;

        $r2 = interfaceinvoke $r1.<org.sat4j.minisat.core.ILits: org.sat4j.specs.IVec undos(int)>(i0);

        interfaceinvoke $r2.<org.sat4j.specs.IVec: org.sat4j.specs.IVec push(java.lang.Object)>(r0);

        $i1 = r0.<org.sat4j.minisat.constraints.cnf.CBClause: int falsified>;

        $i2 = $i1 + 1;

        r0.<org.sat4j.minisat.constraints.cnf.CBClause: int falsified> = $i2;

        $z0 = <org.sat4j.minisat.constraints.cnf.CBClause: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i10 = r0.<org.sat4j.minisat.constraints.cnf.CBClause: int falsified>;

        $r9 = r0.<org.sat4j.minisat.constraints.cnf.CBClause: int[] lits>;

        $i9 = lengthof $r9;

        if $i10 != $i9 goto label1;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();

        throw $r10;

     label1:
        $i5 = r0.<org.sat4j.minisat.constraints.cnf.CBClause: int falsified>;

        $r3 = r0.<org.sat4j.minisat.constraints.cnf.CBClause: int[] lits>;

        $i3 = lengthof $r3;

        $i4 = $i3 - 1;

        if $i5 != $i4 goto label5;

        i11 = 0;

     label2:
        $r4 = r0.<org.sat4j.minisat.constraints.cnf.CBClause: int[] lits>;

        $i6 = lengthof $r4;

        if i11 >= $i6 goto label4;

        $r6 = r0.<org.sat4j.minisat.constraints.cnf.CBClause: org.sat4j.minisat.core.ILits voc>;

        $r5 = r0.<org.sat4j.minisat.constraints.cnf.CBClause: int[] lits>;

        $i7 = $r5[i11];

        $z1 = interfaceinvoke $r6.<org.sat4j.minisat.core.ILits: boolean isFalsified(int)>($i7);

        if $z1 != 0 goto label3;

        $r8 = r0.<org.sat4j.minisat.constraints.cnf.CBClause: int[] lits>;

        $i8 = $r8[i11];

        $z2 = interfaceinvoke r7.<org.sat4j.minisat.core.UnitPropagationListener: boolean enqueue(int,org.sat4j.minisat.core.Constr)>($i8, r0);

        return $z2;

     label3:
        i11 = i11 + 1;

        goto label2;

     label4:
        return 0;

     label5:
        return 1;
    }

    public boolean simplify()
    {
        org.sat4j.minisat.constraints.cnf.CBClause r0;
        int[] r1;
        int i0, i1, i2;
        org.sat4j.minisat.core.ILits $r2;
        boolean $z0;

        r0 := @this: org.sat4j.minisat.constraints.cnf.CBClause;

        r1 = r0.<org.sat4j.minisat.constraints.cnf.CBClause: int[] lits>;

        i0 = lengthof r1;

        i2 = 0;

     label1:
        if i2 >= i0 goto label3;

        i1 = r1[i2];

        $r2 = r0.<org.sat4j.minisat.constraints.cnf.CBClause: org.sat4j.minisat.core.ILits voc>;

        $z0 = interfaceinvoke $r2.<org.sat4j.minisat.core.ILits: boolean isSatisfied(int)>(i1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return 0;
    }

    public void undo(int)
    {
        org.sat4j.minisat.constraints.cnf.CBClause r0;
        int $i0, $i1, i2;

        r0 := @this: org.sat4j.minisat.constraints.cnf.CBClause;

        i2 := @parameter0: int;

        $i0 = r0.<org.sat4j.minisat.constraints.cnf.CBClause: int falsified>;

        $i1 = $i0 - 1;

        r0.<org.sat4j.minisat.constraints.cnf.CBClause: int falsified> = $i1;

        return;
    }

    public void calcReason(int, org.sat4j.specs.IVecInt)
    {
        java.lang.AssertionError $r9, $r10, $r11;
        int[] $r2, $r6;
        int i0, $i1, $i2, $i3, i4, $i5, $i6, $i7, i8, $i10;
        org.sat4j.minisat.core.ILits $r4, $r8;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.sat4j.minisat.constraints.cnf.CBClause r0;
        org.sat4j.specs.IVecInt r1;

        r0 := @this: org.sat4j.minisat.constraints.cnf.CBClause;

        i0 := @parameter0: int;

        r1 := @parameter1: org.sat4j.specs.IVecInt;

        $z0 = <org.sat4j.minisat.constraints.cnf.CBClause: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i6 = interfaceinvoke r1.<org.sat4j.specs.IVecInt: int size()>();

        if $i6 == 0 goto label1;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();

        throw $r9;

     label1:
        $r6 = r0.<org.sat4j.minisat.constraints.cnf.CBClause: int[] lits>;

        $i7 = lengthof $r6;

        i8 = 0;

     label2:
        if i8 >= $i7 goto label5;

        i4 = $r6[i8];

        $z2 = <org.sat4j.minisat.constraints.cnf.CBClause: boolean $assertionsDisabled>;

        if $z2 != 0 goto label3;

        $r4 = r0.<org.sat4j.minisat.constraints.cnf.CBClause: org.sat4j.minisat.core.ILits voc>;

        $z3 = interfaceinvoke $r4.<org.sat4j.minisat.core.ILits: boolean isFalsified(int)>(i4);

        if $z3 != 0 goto label3;

        if i4 == i0 goto label3;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();

        throw $r10;

     label3:
        $r8 = r0.<org.sat4j.minisat.constraints.cnf.CBClause: org.sat4j.minisat.core.ILits voc>;

        $z4 = interfaceinvoke $r8.<org.sat4j.minisat.core.ILits: boolean isFalsified(int)>(i4);

        if $z4 == 0 goto label4;

        $i5 = i4 ^ 1;

        interfaceinvoke r1.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i5);

     label4:
        i8 = i8 + 1;

        goto label2;

     label5:
        $z1 = <org.sat4j.minisat.constraints.cnf.CBClause: boolean $assertionsDisabled>;

        if $z1 != 0 goto label6;

        $i10 = (int) -1;

        if i0 == $i10 goto label6;

        $i1 = interfaceinvoke r1.<org.sat4j.specs.IVecInt: int size()>();

        $r2 = r0.<org.sat4j.minisat.constraints.cnf.CBClause: int[] lits>;

        $i2 = lengthof $r2;

        $i3 = $i2 - 1;

        if $i1 == $i3 goto label6;

        $r11 = new java.lang.AssertionError;

        specialinvoke $r11.<java.lang.AssertionError: void <init>()>();

        throw $r11;

     label6:
        return;
    }

    public boolean learnt()
    {
        org.sat4j.minisat.constraints.cnf.CBClause r0;
        boolean $z0;

        r0 := @this: org.sat4j.minisat.constraints.cnf.CBClause;

        $z0 = r0.<org.sat4j.minisat.constraints.cnf.CBClause: boolean learnt>;

        return $z0;
    }

    public void incActivity(double)
    {
        org.sat4j.minisat.constraints.cnf.CBClause r0;
        double d0, $d1, $d2;

        r0 := @this: org.sat4j.minisat.constraints.cnf.CBClause;

        d0 := @parameter0: double;

        $d1 = r0.<org.sat4j.minisat.constraints.cnf.CBClause: double activity>;

        $d2 = $d1 + d0;

        r0.<org.sat4j.minisat.constraints.cnf.CBClause: double activity> = $d2;

        return;
    }

    public double getActivity()
    {
        org.sat4j.minisat.constraints.cnf.CBClause r0;
        double $d0;

        r0 := @this: org.sat4j.minisat.constraints.cnf.CBClause;

        $d0 = r0.<org.sat4j.minisat.constraints.cnf.CBClause: double activity>;

        return $d0;
    }

    public boolean locked()
    {
        org.sat4j.minisat.constraints.cnf.CBClause r0;
        org.sat4j.minisat.core.Constr $r4;
        int[] r1;
        int i0, i1, i2;
        org.sat4j.minisat.core.ILits $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: org.sat4j.minisat.constraints.cnf.CBClause;

        r1 = r0.<org.sat4j.minisat.constraints.cnf.CBClause: int[] lits>;

        i0 = lengthof r1;

        i2 = 0;

     label1:
        if i2 >= i0 goto label5;

        i1 = r1[i2];

        $r2 = r0.<org.sat4j.minisat.constraints.cnf.CBClause: org.sat4j.minisat.core.ILits voc>;

        $z0 = interfaceinvoke $r2.<org.sat4j.minisat.core.ILits: boolean isSatisfied(int)>(i1);

        if $z0 == 0 goto label4;

        $r3 = r0.<org.sat4j.minisat.constraints.cnf.CBClause: org.sat4j.minisat.core.ILits voc>;

        $r4 = interfaceinvoke $r3.<org.sat4j.minisat.core.ILits: org.sat4j.minisat.core.Constr getReason(int)>(i1);

        if $r4 != r0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;

     label4:
        i2 = i2 + 1;

        goto label1;

     label5:
        return 0;
    }

    public void setLearnt()
    {
        org.sat4j.minisat.constraints.cnf.CBClause r0;

        r0 := @this: org.sat4j.minisat.constraints.cnf.CBClause;

        r0.<org.sat4j.minisat.constraints.cnf.CBClause: boolean learnt> = 1;

        return;
    }

    public void register()
    {
        org.sat4j.minisat.core.Propagatable $r10;
        java.lang.AssertionError $r9;
        int[] $r1, r7, r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8, i9, i10, i11, i12;
        org.sat4j.specs.IVec $r5;
        org.sat4j.minisat.core.ILits $r3, $r4, $r6;
        boolean $z0, $z1, $z2;
        org.sat4j.minisat.constraints.cnf.CBClause r0;

        r0 := @this: org.sat4j.minisat.constraints.cnf.CBClause;

        r7 = r0.<org.sat4j.minisat.constraints.cnf.CBClause: int[] lits>;

        i7 = lengthof r7;

        i8 = 0;

     label1:
        if i8 >= i7 goto label2;

        i9 = r7[i8];

        $r6 = r0.<org.sat4j.minisat.constraints.cnf.CBClause: org.sat4j.minisat.core.ILits voc>;

        $i6 = i9 ^ 1;

        $r10 = (org.sat4j.minisat.core.Propagatable) r0;

        interfaceinvoke $r6.<org.sat4j.minisat.core.ILits: void attach(int,org.sat4j.minisat.core.Propagatable)>($i6, $r10);

        i8 = i8 + 1;

        goto label1;

     label2:
        $z0 = r0.<org.sat4j.minisat.constraints.cnf.CBClause: boolean learnt>;

        if $z0 == 0 goto label6;

        r8 = r0.<org.sat4j.minisat.constraints.cnf.CBClause: int[] lits>;

        i10 = lengthof r8;

        i11 = 0;

     label3:
        if i11 >= i10 goto label5;

        i12 = r8[i11];

        $r3 = r0.<org.sat4j.minisat.constraints.cnf.CBClause: org.sat4j.minisat.core.ILits voc>;

        $z2 = interfaceinvoke $r3.<org.sat4j.minisat.core.ILits: boolean isFalsified(int)>(i12);

        if $z2 == 0 goto label4;

        $r4 = r0.<org.sat4j.minisat.constraints.cnf.CBClause: org.sat4j.minisat.core.ILits voc>;

        $i3 = i12 ^ 1;

        $r5 = interfaceinvoke $r4.<org.sat4j.minisat.core.ILits: org.sat4j.specs.IVec undos(int)>($i3);

        interfaceinvoke $r5.<org.sat4j.specs.IVec: org.sat4j.specs.IVec push(java.lang.Object)>(r0);

        $i4 = r0.<org.sat4j.minisat.constraints.cnf.CBClause: int falsified>;

        $i5 = $i4 + 1;

        r0.<org.sat4j.minisat.constraints.cnf.CBClause: int falsified> = $i5;

     label4:
        i11 = i11 + 1;

        goto label3;

     label5:
        $z1 = <org.sat4j.minisat.constraints.cnf.CBClause: boolean $assertionsDisabled>;

        if $z1 != 0 goto label6;

        $i2 = r0.<org.sat4j.minisat.constraints.cnf.CBClause: int falsified>;

        $r1 = r0.<org.sat4j.minisat.constraints.cnf.CBClause: int[] lits>;

        $i0 = lengthof $r1;

        $i1 = $i0 - 1;

        if $i2 == $i1 goto label6;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();

        throw $r9;

     label6:
        return;
    }

    public void rescaleBy(double)
    {
        org.sat4j.minisat.constraints.cnf.CBClause r0;
        double d0, $d1, $d2;

        r0 := @this: org.sat4j.minisat.constraints.cnf.CBClause;

        d0 := @parameter0: double;

        $d1 = r0.<org.sat4j.minisat.constraints.cnf.CBClause: double activity>;

        $d2 = $d1 * d0;

        r0.<org.sat4j.minisat.constraints.cnf.CBClause: double activity> = $d2;

        return;
    }

    public int size()
    {
        org.sat4j.minisat.constraints.cnf.CBClause r0;
        int $i0;
        int[] $r1;

        r0 := @this: org.sat4j.minisat.constraints.cnf.CBClause;

        $r1 = r0.<org.sat4j.minisat.constraints.cnf.CBClause: int[] lits>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public int get(int)
    {
        org.sat4j.minisat.constraints.cnf.CBClause r0;
        int[] $r1;
        int i0, $i1;

        r0 := @this: org.sat4j.minisat.constraints.cnf.CBClause;

        i0 := @parameter0: int;

        $r1 = r0.<org.sat4j.minisat.constraints.cnf.CBClause: int[] lits>;

        $i1 = $r1[i0];

        return $i1;
    }

    public void assertConstraint(org.sat4j.minisat.core.UnitPropagationListener)
    {
        org.sat4j.minisat.constraints.cnf.CBClause r1;
        java.lang.AssertionError $r3, $r6;
        int[] $r2, $r4;
        org.sat4j.minisat.core.UnitPropagationListener r0;
        int $i0, $i1;
        org.sat4j.minisat.core.ILits $r5;
        boolean $z0, $z1, $z2, $z3;

        r1 := @this: org.sat4j.minisat.constraints.cnf.CBClause;

        r0 := @parameter0: org.sat4j.minisat.core.UnitPropagationListener;

        $z0 = <org.sat4j.minisat.constraints.cnf.CBClause: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r5 = r1.<org.sat4j.minisat.constraints.cnf.CBClause: org.sat4j.minisat.core.ILits voc>;

        $r4 = r1.<org.sat4j.minisat.constraints.cnf.CBClause: int[] lits>;

        $i1 = $r4[0];

        $z3 = interfaceinvoke $r5.<org.sat4j.minisat.core.ILits: boolean isUnassigned(int)>($i1);

        if $z3 != 0 goto label1;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label1:
        $r2 = r1.<org.sat4j.minisat.constraints.cnf.CBClause: int[] lits>;

        $i0 = $r2[0];

        $z1 = interfaceinvoke r0.<org.sat4j.minisat.core.UnitPropagationListener: boolean enqueue(int,org.sat4j.minisat.core.Constr)>($i0, r1);

        $z2 = <org.sat4j.minisat.constraints.cnf.CBClause: boolean $assertionsDisabled>;

        if $z2 != 0 goto label2;

        if $z1 != 0 goto label2;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label2:
        return;
    }

    public java.lang.String toString()
    {
        org.sat4j.minisat.constraints.cnf.CBClause r1;
        int[] $r2, $r4, $r5;
        java.lang.StringBuffer $r0;
        int $i0, $i1, $i2, i3;
        java.lang.String $r3, $r7;
        org.sat4j.minisat.core.ILits $r6;

        r1 := @this: org.sat4j.minisat.constraints.cnf.CBClause;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        i3 = 0;

     label1:
        $r2 = r1.<org.sat4j.minisat.constraints.cnf.CBClause: int[] lits>;

        $i0 = lengthof $r2;

        if i3 >= $i0 goto label2;

        $r4 = r1.<org.sat4j.minisat.constraints.cnf.CBClause: int[] lits>;

        $i1 = $r4[i3];

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[");

        $r6 = r1.<org.sat4j.minisat.constraints.cnf.CBClause: org.sat4j.minisat.core.ILits voc>;

        $r5 = r1.<org.sat4j.minisat.constraints.cnf.CBClause: int[] lits>;

        $i2 = $r5[i3];

        $r7 = interfaceinvoke $r6.<org.sat4j.minisat.core.ILits: java.lang.String valueToString(int)>($i2);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        i3 = i3 + 1;

        goto label1;

     label2:
        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        <org.sat4j.minisat.constraints.cnf.CBClause: long serialVersionUID> = 1L;

        $r0 = class "Lorg/sat4j/minisat/constraints/cnf/CBClause;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.sat4j.minisat.constraints.cnf.CBClause: boolean $assertionsDisabled> = $z1;

        return;
    }
}
