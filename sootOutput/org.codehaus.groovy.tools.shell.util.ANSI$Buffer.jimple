public class org.codehaus.groovy.tools.shell.util.ANSI$Buffer extends java.lang.Object
{
    private final java.lang.StringBuffer buff;
    public final boolean autoClear;
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        org.codehaus.groovy.tools.shell.util.ANSI$Buffer r0;
        java.lang.StringBuffer $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.util.ANSI$Buffer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.codehaus.groovy.tools.shell.util.ANSI$Buffer: boolean autoClear> = 1;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        r0.<org.codehaus.groovy.tools.shell.util.ANSI$Buffer: java.lang.StringBuffer buff> = $r1;

        r0.<org.codehaus.groovy.tools.shell.util.ANSI$Buffer: boolean autoClear> = 1;

        return;
    }

    public java.lang.String toString()
    {
        java.lang.Throwable $r3;
        org.codehaus.groovy.tools.shell.util.ANSI$Buffer r0;
        java.lang.StringBuffer $r1;
        java.lang.String $r2;

        r0 := @this: org.codehaus.groovy.tools.shell.util.ANSI$Buffer;

     label1:
        $r1 = r0.<org.codehaus.groovy.tools.shell.util.ANSI$Buffer: java.lang.StringBuffer buff>;

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

     label2:
        virtualinvoke r0.<org.codehaus.groovy.tools.shell.util.ANSI$Buffer: void clear()>();

        return $r2;

     label3:
        $r3 := @caughtexception;

     label4:
        virtualinvoke r0.<org.codehaus.groovy.tools.shell.util.ANSI$Buffer: void clear()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void clear()
    {
        org.codehaus.groovy.tools.shell.util.ANSI$Buffer r0;
        java.lang.StringBuffer $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.util.ANSI$Buffer;

        $r1 = r0.<org.codehaus.groovy.tools.shell.util.ANSI$Buffer: java.lang.StringBuffer buff>;

        virtualinvoke $r1.<java.lang.StringBuffer: void setLength(int)>(0);

        return;
    }

    public int size()
    {
        int $i0;
        org.codehaus.groovy.tools.shell.util.ANSI$Buffer r0;
        java.lang.StringBuffer $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.util.ANSI$Buffer;

        $r1 = r0.<org.codehaus.groovy.tools.shell.util.ANSI$Buffer: java.lang.StringBuffer buff>;

        $i0 = virtualinvoke $r1.<java.lang.StringBuffer: int length()>();

        return $i0;
    }

    public org.codehaus.groovy.tools.shell.util.ANSI$Buffer append(java.lang.String)
    {
        java.lang.String r1;
        org.codehaus.groovy.tools.shell.util.ANSI$Buffer r0;
        java.lang.StringBuffer $r2;

        r0 := @this: org.codehaus.groovy.tools.shell.util.ANSI$Buffer;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.codehaus.groovy.tools.shell.util.ANSI$Buffer: java.lang.StringBuffer buff>;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        return r0;
    }

    public org.codehaus.groovy.tools.shell.util.ANSI$Buffer append(java.lang.Object)
    {
        org.codehaus.groovy.tools.shell.util.ANSI$Buffer r0, $r3;
        java.lang.Object r1;
        java.lang.String $r2;

        r0 := @this: org.codehaus.groovy.tools.shell.util.ANSI$Buffer;

        r1 := @parameter0: java.lang.Object;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        $r3 = virtualinvoke r0.<org.codehaus.groovy.tools.shell.util.ANSI$Buffer: org.codehaus.groovy.tools.shell.util.ANSI$Buffer append(java.lang.String)>($r2);

        return $r3;
    }

    public org.codehaus.groovy.tools.shell.util.ANSI$Buffer attrib(int)
    {
        org.codehaus.groovy.tools.shell.util.ANSI$Buffer r0;
        java.lang.StringBuffer $r1;
        int i0;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.tools.shell.util.ANSI$Buffer;

        i0 := @parameter0: int;

        $z0 = staticinvoke <org.codehaus.groovy.tools.shell.util.ANSI: boolean isEnabled()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<org.codehaus.groovy.tools.shell.util.ANSI$Buffer: java.lang.StringBuffer buff>;

        $r2 = staticinvoke <jline.ANSIBuffer$ANSICodes: java.lang.String attrib(int)>(i0);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

     label1:
        return r0;
    }

    public org.codehaus.groovy.tools.shell.util.ANSI$Buffer attrib(java.lang.String, int)
    {
        java.lang.AssertionError $r8;
        org.codehaus.groovy.tools.shell.util.ANSI$Buffer r0;
        java.lang.StringBuffer $r2, $r3, $r5, $r6;
        int i0;
        java.lang.String r1, $r4, $r7;
        boolean $z0, $z1;

        r0 := @this: org.codehaus.groovy.tools.shell.util.ANSI$Buffer;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $z0 = <org.codehaus.groovy.tools.shell.util.ANSI$Buffer: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if r1 != null goto label1;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label1:
        $z1 = staticinvoke <org.codehaus.groovy.tools.shell.util.ANSI: boolean isEnabled()>();

        if $z1 == 0 goto label2;

        $r3 = r0.<org.codehaus.groovy.tools.shell.util.ANSI$Buffer: java.lang.StringBuffer buff>;

        $r4 = staticinvoke <jline.ANSIBuffer$ANSICodes: java.lang.String attrib(int)>(i0);

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r7 = staticinvoke <jline.ANSIBuffer$ANSICodes: java.lang.String attrib(int)>(0);

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        goto label3;

     label2:
        $r2 = r0.<org.codehaus.groovy.tools.shell.util.ANSI$Buffer: java.lang.StringBuffer buff>;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

     label3:
        return r0;
    }

    public org.codehaus.groovy.tools.shell.util.ANSI$Buffer attrib(java.lang.String, java.lang.String)
    {
        org.codehaus.groovy.tools.shell.util.ANSI$Buffer r0, $r3;
        int $i0;
        java.lang.String r1, r2;

        r0 := @this: org.codehaus.groovy.tools.shell.util.ANSI$Buffer;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $i0 = staticinvoke <org.codehaus.groovy.tools.shell.util.ANSI$Code: int forName(java.lang.String)>(r2);

        $r3 = virtualinvoke r0.<org.codehaus.groovy.tools.shell.util.ANSI$Buffer: org.codehaus.groovy.tools.shell.util.ANSI$Buffer attrib(java.lang.String,int)>(r1, $i0);

        return $r3;
    }

    static void <clinit>()
    {
        java.lang.Class $r0, $r1;
        boolean $z0, $z1;

        $r0 = <org.codehaus.groovy.tools.shell.util.ANSI: java.lang.Class class$org$codehaus$groovy$tools$shell$util$ANSI>;

        if $r0 != null goto label1;

        $r1 = staticinvoke <org.codehaus.groovy.tools.shell.util.ANSI: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.util.ANSI");

        <org.codehaus.groovy.tools.shell.util.ANSI: java.lang.Class class$org$codehaus$groovy$tools$shell$util$ANSI> = $r1;

        goto label2;

     label1:
        $r1 = <org.codehaus.groovy.tools.shell.util.ANSI: java.lang.Class class$org$codehaus$groovy$tools$shell$util$ANSI>;

     label2:
        $z0 = virtualinvoke $r1.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        <org.codehaus.groovy.tools.shell.util.ANSI$Buffer: boolean $assertionsDisabled> = $z1;

        return;
    }
}
