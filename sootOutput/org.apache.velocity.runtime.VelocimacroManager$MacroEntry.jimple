class org.apache.velocity.runtime.VelocimacroManager$MacroEntry extends java.lang.Object
{
    private final java.lang.String vmName;
    private final java.lang.String[] argArray;
    private final java.lang.String sourceTemplate;
    private org.apache.velocity.runtime.parser.node.SimpleNode nodeTree;
    private boolean fromLibrary;
    private org.apache.velocity.runtime.directive.VelocimacroProxy vp;

    private void <init>(java.lang.String, org.apache.velocity.runtime.parser.node.Node, java.lang.String[], java.lang.String, org.apache.velocity.runtime.RuntimeServices)
    {
        java.lang.String[] r2, $r9;
        org.apache.velocity.runtime.RuntimeServices r15;
        int $i0, $i1;
        java.lang.String r1, r5, $r7, $r14;
        org.apache.velocity.runtime.parser.node.Node r3;
        org.apache.velocity.runtime.VelocimacroManager$MacroEntry r0;
        org.apache.velocity.runtime.directive.VelocimacroProxy $r6, $r8, $r10, $r12, $r13, $r16;
        org.apache.velocity.runtime.parser.node.SimpleNode $r4, $r11;

        r0 := @this: org.apache.velocity.runtime.VelocimacroManager$MacroEntry;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: org.apache.velocity.runtime.parser.node.Node;

        r2 := @parameter2: java.lang.String[];

        r5 := @parameter3: java.lang.String;

        r15 := @parameter4: org.apache.velocity.runtime.RuntimeServices;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.velocity.runtime.VelocimacroManager$MacroEntry: org.apache.velocity.runtime.parser.node.SimpleNode nodeTree> = null;

        r0.<org.apache.velocity.runtime.VelocimacroManager$MacroEntry: boolean fromLibrary> = 0;

        r0.<org.apache.velocity.runtime.VelocimacroManager$MacroEntry: java.lang.String vmName> = r1;

        r0.<org.apache.velocity.runtime.VelocimacroManager$MacroEntry: java.lang.String[] argArray> = r2;

        $r4 = (org.apache.velocity.runtime.parser.node.SimpleNode) r3;

        r0.<org.apache.velocity.runtime.VelocimacroManager$MacroEntry: org.apache.velocity.runtime.parser.node.SimpleNode nodeTree> = $r4;

        r0.<org.apache.velocity.runtime.VelocimacroManager$MacroEntry: java.lang.String sourceTemplate> = r5;

        $r6 = new org.apache.velocity.runtime.directive.VelocimacroProxy;

        specialinvoke $r6.<org.apache.velocity.runtime.directive.VelocimacroProxy: void <init>()>();

        r0.<org.apache.velocity.runtime.VelocimacroManager$MacroEntry: org.apache.velocity.runtime.directive.VelocimacroProxy vp> = $r6;

        $r8 = r0.<org.apache.velocity.runtime.VelocimacroManager$MacroEntry: org.apache.velocity.runtime.directive.VelocimacroProxy vp>;

        $r7 = r0.<org.apache.velocity.runtime.VelocimacroManager$MacroEntry: java.lang.String vmName>;

        virtualinvoke $r8.<org.apache.velocity.runtime.directive.VelocimacroProxy: void setName(java.lang.String)>($r7);

        $r10 = r0.<org.apache.velocity.runtime.VelocimacroManager$MacroEntry: org.apache.velocity.runtime.directive.VelocimacroProxy vp>;

        $r9 = r0.<org.apache.velocity.runtime.VelocimacroManager$MacroEntry: java.lang.String[] argArray>;

        virtualinvoke $r10.<org.apache.velocity.runtime.directive.VelocimacroProxy: void setArgArray(java.lang.String[])>($r9);

        $r12 = r0.<org.apache.velocity.runtime.VelocimacroManager$MacroEntry: org.apache.velocity.runtime.directive.VelocimacroProxy vp>;

        $r11 = r0.<org.apache.velocity.runtime.VelocimacroManager$MacroEntry: org.apache.velocity.runtime.parser.node.SimpleNode nodeTree>;

        virtualinvoke $r12.<org.apache.velocity.runtime.directive.VelocimacroProxy: void setNodeTree(org.apache.velocity.runtime.parser.node.SimpleNode)>($r11);

        $r13 = r0.<org.apache.velocity.runtime.VelocimacroManager$MacroEntry: org.apache.velocity.runtime.directive.VelocimacroProxy vp>;

        $i0 = interfaceinvoke r3.<org.apache.velocity.runtime.parser.node.Node: int getLine()>();

        $i1 = interfaceinvoke r3.<org.apache.velocity.runtime.parser.node.Node: int getColumn()>();

        $r14 = interfaceinvoke r3.<org.apache.velocity.runtime.parser.node.Node: java.lang.String getTemplateName()>();

        virtualinvoke $r13.<org.apache.velocity.runtime.directive.VelocimacroProxy: void setLocation(int,int,java.lang.String)>($i0, $i1, $r14);

        $r16 = r0.<org.apache.velocity.runtime.VelocimacroManager$MacroEntry: org.apache.velocity.runtime.directive.VelocimacroProxy vp>;

        virtualinvoke $r16.<org.apache.velocity.runtime.directive.VelocimacroProxy: void init(org.apache.velocity.runtime.RuntimeServices)>(r15);

        return;
    }

    public void setFromLibrary(boolean)
    {
        org.apache.velocity.runtime.VelocimacroManager$MacroEntry r0;
        boolean z0;

        r0 := @this: org.apache.velocity.runtime.VelocimacroManager$MacroEntry;

        z0 := @parameter0: boolean;

        r0.<org.apache.velocity.runtime.VelocimacroManager$MacroEntry: boolean fromLibrary> = z0;

        return;
    }

    public boolean getFromLibrary()
    {
        org.apache.velocity.runtime.VelocimacroManager$MacroEntry r0;
        boolean $z0;

        r0 := @this: org.apache.velocity.runtime.VelocimacroManager$MacroEntry;

        $z0 = r0.<org.apache.velocity.runtime.VelocimacroManager$MacroEntry: boolean fromLibrary>;

        return $z0;
    }

    public org.apache.velocity.runtime.parser.node.SimpleNode getNodeTree()
    {
        org.apache.velocity.runtime.VelocimacroManager$MacroEntry r0;
        org.apache.velocity.runtime.parser.node.SimpleNode $r1;

        r0 := @this: org.apache.velocity.runtime.VelocimacroManager$MacroEntry;

        $r1 = r0.<org.apache.velocity.runtime.VelocimacroManager$MacroEntry: org.apache.velocity.runtime.parser.node.SimpleNode nodeTree>;

        return $r1;
    }

    public java.lang.String getSourceTemplate()
    {
        java.lang.String $r1;
        org.apache.velocity.runtime.VelocimacroManager$MacroEntry r0;

        r0 := @this: org.apache.velocity.runtime.VelocimacroManager$MacroEntry;

        $r1 = r0.<org.apache.velocity.runtime.VelocimacroManager$MacroEntry: java.lang.String sourceTemplate>;

        return $r1;
    }

    org.apache.velocity.runtime.directive.VelocimacroProxy getProxy(java.lang.String)
    {
        org.apache.velocity.runtime.directive.VelocimacroProxy $r1;
        java.lang.String r2;
        org.apache.velocity.runtime.VelocimacroManager$MacroEntry r0;

        r0 := @this: org.apache.velocity.runtime.VelocimacroManager$MacroEntry;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.velocity.runtime.VelocimacroManager$MacroEntry: org.apache.velocity.runtime.directive.VelocimacroProxy vp>;

        return $r1;
    }

    void <init>(java.lang.String, org.apache.velocity.runtime.parser.node.Node, java.lang.String[], java.lang.String, org.apache.velocity.runtime.RuntimeServices, org.apache.velocity.runtime.VelocimacroManager$1)
    {
        org.apache.velocity.runtime.RuntimeServices r5;
        org.apache.velocity.runtime.VelocimacroManager$1 r6;
        java.lang.String[] r3;
        java.lang.String r1, r4;
        org.apache.velocity.runtime.parser.node.Node r2;
        org.apache.velocity.runtime.VelocimacroManager$MacroEntry r0;

        r0 := @this: org.apache.velocity.runtime.VelocimacroManager$MacroEntry;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.velocity.runtime.parser.node.Node;

        r3 := @parameter2: java.lang.String[];

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: org.apache.velocity.runtime.RuntimeServices;

        r6 := @parameter5: org.apache.velocity.runtime.VelocimacroManager$1;

        specialinvoke r0.<org.apache.velocity.runtime.VelocimacroManager$MacroEntry: void <init>(java.lang.String,org.apache.velocity.runtime.parser.node.Node,java.lang.String[],java.lang.String,org.apache.velocity.runtime.RuntimeServices)>(r1, r2, r3, r4, r5);

        return;
    }
}
