final class org.springframework.util.ReflectionUtils$5 extends java.lang.Object implements org.springframework.util.ReflectionUtils$FieldCallback
{
    private final java.lang.Object val$src;
    private final java.lang.Object val$dest;

    void <init>(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r1, r2;
        org.springframework.util.ReflectionUtils$5 r0;

        r0 := @this: org.springframework.util.ReflectionUtils$5;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r0.<org.springframework.util.ReflectionUtils$5: java.lang.Object val$src> = r1;

        r0.<org.springframework.util.ReflectionUtils$5: java.lang.Object val$dest> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void doWith(java.lang.reflect.Field) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException
    {
        java.lang.Object $r2, $r3, $r4;
        org.springframework.util.ReflectionUtils$5 r1;
        java.lang.reflect.Field r0;

        r1 := @this: org.springframework.util.ReflectionUtils$5;

        r0 := @parameter0: java.lang.reflect.Field;

        staticinvoke <org.springframework.util.ReflectionUtils: void makeAccessible(java.lang.reflect.Field)>(r0);

        $r2 = r1.<org.springframework.util.ReflectionUtils$5: java.lang.Object val$src>;

        $r3 = virtualinvoke r0.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r2);

        $r4 = r1.<org.springframework.util.ReflectionUtils$5: java.lang.Object val$dest>;

        virtualinvoke r0.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>($r4, $r3);

        return;
    }
}
