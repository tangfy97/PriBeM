class org.springframework.context.'annotation'.ConfigurationClassBeanDefinitionReader$ConfigurationClassBeanDefinition extends org.springframework.beans.factory.support.RootBeanDefinition implements org.springframework.beans.factory.'annotation'.AnnotatedBeanDefinition
{
    private org.springframework.core.type.AnnotationMetadata annotationMetadata;

    public void <init>(org.springframework.context.'annotation'.ConfigurationClass)
    {
        org.springframework.core.type.AnnotationMetadata $r2;
        org.springframework.context.'annotation'.ConfigurationClassBeanDefinitionReader$ConfigurationClassBeanDefinition r0;
        org.springframework.context.'annotation'.ConfigurationClass r1;

        r0 := @this: org.springframework.context.'annotation'.ConfigurationClassBeanDefinitionReader$ConfigurationClassBeanDefinition;

        r1 := @parameter0: org.springframework.context.'annotation'.ConfigurationClass;

        specialinvoke r0.<org.springframework.beans.factory.support.RootBeanDefinition: void <init>()>();

        $r2 = virtualinvoke r1.<org.springframework.context.'annotation'.ConfigurationClass: org.springframework.core.type.AnnotationMetadata getMetadata()>();

        r0.<org.springframework.context.'annotation'.ConfigurationClassBeanDefinitionReader$ConfigurationClassBeanDefinition: org.springframework.core.type.AnnotationMetadata annotationMetadata> = $r2;

        return;
    }

    private void <init>(org.springframework.context.'annotation'.ConfigurationClassBeanDefinitionReader$ConfigurationClassBeanDefinition)
    {
        org.springframework.core.type.AnnotationMetadata $r2;
        org.springframework.context.'annotation'.ConfigurationClassBeanDefinitionReader$ConfigurationClassBeanDefinition r0, r1;

        r0 := @this: org.springframework.context.'annotation'.ConfigurationClassBeanDefinitionReader$ConfigurationClassBeanDefinition;

        r1 := @parameter0: org.springframework.context.'annotation'.ConfigurationClassBeanDefinitionReader$ConfigurationClassBeanDefinition;

        specialinvoke r0.<org.springframework.beans.factory.support.RootBeanDefinition: void <init>(org.springframework.beans.factory.support.RootBeanDefinition)>(r1);

        $r2 = r1.<org.springframework.context.'annotation'.ConfigurationClassBeanDefinitionReader$ConfigurationClassBeanDefinition: org.springframework.core.type.AnnotationMetadata annotationMetadata>;

        r0.<org.springframework.context.'annotation'.ConfigurationClassBeanDefinitionReader$ConfigurationClassBeanDefinition: org.springframework.core.type.AnnotationMetadata annotationMetadata> = $r2;

        return;
    }

    public org.springframework.core.type.AnnotationMetadata getMetadata()
    {
        org.springframework.core.type.AnnotationMetadata $r1;
        org.springframework.context.'annotation'.ConfigurationClassBeanDefinitionReader$ConfigurationClassBeanDefinition r0;

        r0 := @this: org.springframework.context.'annotation'.ConfigurationClassBeanDefinitionReader$ConfigurationClassBeanDefinition;

        $r1 = r0.<org.springframework.context.'annotation'.ConfigurationClassBeanDefinitionReader$ConfigurationClassBeanDefinition: org.springframework.core.type.AnnotationMetadata annotationMetadata>;

        return $r1;
    }

    public boolean isFactoryMethod(java.lang.reflect.Method)
    {
        org.springframework.context.'annotation'.ConfigurationClassBeanDefinitionReader$ConfigurationClassBeanDefinition r0;
        java.lang.'annotation'.Annotation $r2;
        java.lang.reflect.Method r1;
        boolean $z0;

        r0 := @this: org.springframework.context.'annotation'.ConfigurationClassBeanDefinitionReader$ConfigurationClassBeanDefinition;

        r1 := @parameter0: java.lang.reflect.Method;

        $z0 = specialinvoke r0.<org.springframework.beans.factory.support.RootBeanDefinition: boolean isFactoryMethod(java.lang.reflect.Method)>(r1);

        if $z0 == 0 goto label1;

        $r2 = staticinvoke <org.springframework.core.'annotation'.AnnotationUtils: java.lang.'annotation'.Annotation findAnnotation(java.lang.reflect.Method,java.lang.Class)>(r1, class "Lorg/springframework/context/annotation/Bean;");

        if $r2 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public org.springframework.context.'annotation'.ConfigurationClassBeanDefinitionReader$ConfigurationClassBeanDefinition cloneBeanDefinition()
    {
        org.springframework.context.'annotation'.ConfigurationClassBeanDefinitionReader$ConfigurationClassBeanDefinition $r0, r1;

        r1 := @this: org.springframework.context.'annotation'.ConfigurationClassBeanDefinitionReader$ConfigurationClassBeanDefinition;

        $r0 = new org.springframework.context.'annotation'.ConfigurationClassBeanDefinitionReader$ConfigurationClassBeanDefinition;

        specialinvoke $r0.<org.springframework.context.'annotation'.ConfigurationClassBeanDefinitionReader$ConfigurationClassBeanDefinition: void <init>(org.springframework.context.'annotation'.ConfigurationClassBeanDefinitionReader$ConfigurationClassBeanDefinition)>(r1);

        return $r0;
    }

    public volatile org.springframework.beans.factory.support.RootBeanDefinition cloneBeanDefinition()
    {
        org.springframework.context.'annotation'.ConfigurationClassBeanDefinitionReader$ConfigurationClassBeanDefinition r0, $r1;

        r0 := @this: org.springframework.context.'annotation'.ConfigurationClassBeanDefinitionReader$ConfigurationClassBeanDefinition;

        $r1 = virtualinvoke r0.<org.springframework.context.'annotation'.ConfigurationClassBeanDefinitionReader$ConfigurationClassBeanDefinition: org.springframework.context.'annotation'.ConfigurationClassBeanDefinitionReader$ConfigurationClassBeanDefinition cloneBeanDefinition()>();

        return $r1;
    }
}
