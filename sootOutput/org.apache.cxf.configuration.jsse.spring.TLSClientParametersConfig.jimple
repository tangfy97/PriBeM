public final class org.apache.cxf.configuration.jsse.spring.TLSClientParametersConfig extends java.lang.Object
{
    private static java.util.Set classes;
    private static javax.xml.bind.JAXBContext context;

    private void <init>()
    {
        org.apache.cxf.configuration.jsse.spring.TLSClientParametersConfig r0;

        r0 := @this: org.apache.cxf.configuration.jsse.spring.TLSClientParametersConfig;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static synchronized javax.xml.bind.JAXBContext getContext() throws javax.xml.bind.JAXBException
    {
        java.util.Set $r6, $r8;
        org.apache.cxf.jaxb.JAXBContextCache$CachedContextAndSchemas $r5;
        java.util.HashSet $r1;
        java.lang.Class $r3;
        java.lang.String $r2;
        java.lang.ClassLoader $r4;
        javax.xml.bind.JAXBContext $r0, $r7, $r9;

        $r0 = <org.apache.cxf.configuration.jsse.spring.TLSClientParametersConfig: javax.xml.bind.JAXBContext context>;

        if $r0 == null goto label1;

        $r8 = <org.apache.cxf.configuration.jsse.spring.TLSClientParametersConfig: java.util.Set classes>;

        if $r8 != null goto label2;

     label1:
        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        $r2 = staticinvoke <org.apache.cxf.common.util.PackageUtils: java.lang.String getPackageName(java.lang.Class)>(class "Lorg/apache/cxf/configuration/security/TLSClientParametersType;");

        $r3 = class "Lorg/apache/cxf/configuration/jsse/spring/TLSClientParametersConfig;";

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        staticinvoke <org.apache.cxf.jaxb.JAXBContextCache: void addPackage(java.util.Set,java.lang.String,java.lang.ClassLoader)>($r1, $r2, $r4);

        $r5 = staticinvoke <org.apache.cxf.jaxb.JAXBContextCache: org.apache.cxf.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)>($r1, null, null, null, 0);

        $r6 = virtualinvoke $r5.<org.apache.cxf.jaxb.JAXBContextCache$CachedContextAndSchemas: java.util.Set getClasses()>();

        <org.apache.cxf.configuration.jsse.spring.TLSClientParametersConfig: java.util.Set classes> = $r6;

        $r7 = virtualinvoke $r5.<org.apache.cxf.jaxb.JAXBContextCache$CachedContextAndSchemas: javax.xml.bind.JAXBContext getContext()>();

        <org.apache.cxf.configuration.jsse.spring.TLSClientParametersConfig: javax.xml.bind.JAXBContext context> = $r7;

     label2:
        $r9 = <org.apache.cxf.configuration.jsse.spring.TLSClientParametersConfig: javax.xml.bind.JAXBContext context>;

        return $r9;
    }

    static org.apache.cxf.configuration.jsse.TLSClientParameters createTLSClientParametersFromType(org.apache.cxf.configuration.security.TLSClientParametersType) throws java.security.GeneralSecurityException, java.io.IOException
    {
        java.security.SecureRandom $r9;
        org.apache.cxf.configuration.security.FiltersType $r13;
        int $i0;
        org.apache.cxf.configuration.security.TrustManagersType $r4;
        java.lang.String $r2, $r10, $r14;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        org.apache.cxf.configuration.security.KeyManagersType $r6;
        org.apache.cxf.configuration.security.CipherSuites $r11;
        org.apache.cxf.configuration.jsse.TLSClientParameters $r0;
        org.apache.cxf.configuration.security.CertificateConstraintsType $r3;
        org.apache.cxf.configuration.security.TLSClientParametersType r1;
        org.apache.cxf.configuration.security.SecureRandomParameters $r8;
        java.util.List $r12;
        javax.net.ssl.TrustManager[] $r5;
        javax.net.ssl.KeyManager[] $r7;

        r1 := @parameter0: org.apache.cxf.configuration.security.TLSClientParametersType;

        $r0 = new org.apache.cxf.configuration.jsse.TLSClientParameters;

        specialinvoke $r0.<org.apache.cxf.configuration.jsse.TLSClientParameters: void <init>()>();

        $z0 = virtualinvoke r1.<org.apache.cxf.configuration.security.TLSClientParametersType: boolean isUseHttpsURLConnectionDefaultSslSocketFactory()>();

        $z1 = virtualinvoke r1.<org.apache.cxf.configuration.security.TLSClientParametersType: boolean isDisableCNCheck()>();

        if $z1 == 0 goto label01;

        virtualinvoke $r0.<org.apache.cxf.configuration.jsse.TLSClientParameters: void setDisableCNCheck(boolean)>(1);

     label01:
        $z2 = virtualinvoke r1.<org.apache.cxf.configuration.security.TLSClientParametersType: boolean isUseHttpsURLConnectionDefaultHostnameVerifier()>();

        if $z2 == 0 goto label02;

        virtualinvoke $r0.<org.apache.cxf.configuration.jsse.TLSClientParameters: void setUseHttpsURLConnectionDefaultHostnameVerifier(boolean)>(1);

     label02:
        $z3 = virtualinvoke r1.<org.apache.cxf.configuration.security.TLSClientParametersType: boolean isUseHttpsURLConnectionDefaultSslSocketFactory()>();

        if $z3 == 0 goto label03;

        virtualinvoke $r0.<org.apache.cxf.configuration.jsse.TLSClientParameters: void setUseHttpsURLConnectionDefaultSslSocketFactory(boolean)>(1);

     label03:
        $z4 = virtualinvoke r1.<org.apache.cxf.configuration.security.TLSClientParametersType: boolean isSetSecureSocketProtocol()>();

        if $z4 == 0 goto label04;

        $r14 = virtualinvoke r1.<org.apache.cxf.configuration.security.TLSClientParametersType: java.lang.String getSecureSocketProtocol()>();

        virtualinvoke $r0.<org.apache.cxf.configuration.jsse.TLSClientParameters: void setSecureSocketProtocol(java.lang.String)>($r14);

     label04:
        $z5 = virtualinvoke r1.<org.apache.cxf.configuration.security.TLSClientParametersType: boolean isSetCipherSuitesFilter()>();

        if $z5 == 0 goto label05;

        $r13 = virtualinvoke r1.<org.apache.cxf.configuration.security.TLSClientParametersType: org.apache.cxf.configuration.security.FiltersType getCipherSuitesFilter()>();

        virtualinvoke $r0.<org.apache.cxf.configuration.jsse.TLSClientParameters: void setCipherSuitesFilter(org.apache.cxf.configuration.security.FiltersType)>($r13);

     label05:
        $z6 = virtualinvoke r1.<org.apache.cxf.configuration.security.TLSClientParametersType: boolean isSetCipherSuites()>();

        if $z6 == 0 goto label06;

        $r11 = virtualinvoke r1.<org.apache.cxf.configuration.security.TLSClientParametersType: org.apache.cxf.configuration.security.CipherSuites getCipherSuites()>();

        $r12 = virtualinvoke $r11.<org.apache.cxf.configuration.security.CipherSuites: java.util.List getCipherSuite()>();

        virtualinvoke $r0.<org.apache.cxf.configuration.jsse.TLSClientParameters: void setCipherSuites(java.util.List)>($r12);

     label06:
        $z7 = virtualinvoke r1.<org.apache.cxf.configuration.security.TLSClientParametersType: boolean isSetJsseProvider()>();

        if $z7 == 0 goto label07;

        $r10 = virtualinvoke r1.<org.apache.cxf.configuration.security.TLSClientParametersType: java.lang.String getJsseProvider()>();

        virtualinvoke $r0.<org.apache.cxf.configuration.jsse.TLSClientParameters: void setJsseProvider(java.lang.String)>($r10);

     label07:
        $z8 = virtualinvoke r1.<org.apache.cxf.configuration.security.TLSClientParametersType: boolean isSetSecureRandomParameters()>();

        if $z8 == 0 goto label08;

        if $z0 != 0 goto label08;

        $r8 = virtualinvoke r1.<org.apache.cxf.configuration.security.TLSClientParametersType: org.apache.cxf.configuration.security.SecureRandomParameters getSecureRandomParameters()>();

        $r9 = staticinvoke <org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils: java.security.SecureRandom getSecureRandom(org.apache.cxf.configuration.security.SecureRandomParameters)>($r8);

        virtualinvoke $r0.<org.apache.cxf.configuration.jsse.TLSClientParameters: void setSecureRandom(java.security.SecureRandom)>($r9);

     label08:
        $z11 = virtualinvoke r1.<org.apache.cxf.configuration.security.TLSClientParametersType: boolean isSetKeyManagers()>();

        if $z11 == 0 goto label09;

        if $z0 != 0 goto label09;

        $r6 = virtualinvoke r1.<org.apache.cxf.configuration.security.TLSClientParametersType: org.apache.cxf.configuration.security.KeyManagersType getKeyManagers()>();

        $r7 = staticinvoke <org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils: javax.net.ssl.KeyManager[] getKeyManagers(org.apache.cxf.configuration.security.KeyManagersType)>($r6);

        virtualinvoke $r0.<org.apache.cxf.configuration.jsse.TLSClientParameters: void setKeyManagers(javax.net.ssl.KeyManager[])>($r7);

     label09:
        $z12 = virtualinvoke r1.<org.apache.cxf.configuration.security.TLSClientParametersType: boolean isSetTrustManagers()>();

        if $z12 == 0 goto label10;

        if $z0 != 0 goto label10;

        $r4 = virtualinvoke r1.<org.apache.cxf.configuration.security.TLSClientParametersType: org.apache.cxf.configuration.security.TrustManagersType getTrustManagers()>();

        $r5 = staticinvoke <org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils: javax.net.ssl.TrustManager[] getTrustManagers(org.apache.cxf.configuration.security.TrustManagersType)>($r4);

        virtualinvoke $r0.<org.apache.cxf.configuration.jsse.TLSClientParameters: void setTrustManagers(javax.net.ssl.TrustManager[])>($r5);

     label10:
        $z13 = virtualinvoke r1.<org.apache.cxf.configuration.security.TLSClientParametersType: boolean isSetCertConstraints()>();

        if $z13 == 0 goto label11;

        $r3 = virtualinvoke r1.<org.apache.cxf.configuration.security.TLSClientParametersType: org.apache.cxf.configuration.security.CertificateConstraintsType getCertConstraints()>();

        virtualinvoke $r0.<org.apache.cxf.configuration.jsse.TLSClientParameters: void setCertConstraints(org.apache.cxf.configuration.security.CertificateConstraintsType)>($r3);

     label11:
        $z9 = virtualinvoke r1.<org.apache.cxf.configuration.security.TLSClientParametersType: boolean isSetSslCacheTimeout()>();

        if $z9 == 0 goto label12;

        $i0 = virtualinvoke r1.<org.apache.cxf.configuration.security.TLSClientParametersType: int getSslCacheTimeout()>();

        virtualinvoke $r0.<org.apache.cxf.configuration.jsse.TLSClientParameters: void setSslCacheTimeout(int)>($i0);

     label12:
        $z10 = virtualinvoke r1.<org.apache.cxf.configuration.security.TLSClientParametersType: boolean isSetCertAlias()>();

        if $z10 == 0 goto label13;

        $r2 = virtualinvoke r1.<org.apache.cxf.configuration.security.TLSClientParametersType: java.lang.String getCertAlias()>();

        virtualinvoke $r0.<org.apache.cxf.configuration.jsse.TLSClientParameters: void setCertAlias(java.lang.String)>($r2);

     label13:
        return $r0;
    }

    public static java.lang.Object createTLSClientParameters(java.lang.String)
    {
        javax.xml.bind.Unmarshaller $r4;
        org.apache.cxf.configuration.jsse.TLSClientParameters $r6;
        javax.xml.bind.JAXBElement $r5, r12;
        java.lang.RuntimeException $r9, $r10;
        java.lang.Exception $r8;
        org.apache.cxf.configuration.security.TLSClientParametersType $r7;
        java.io.StringReader $r0;
        javax.xml.stream.XMLStreamReader $r2;
        java.lang.Object r11;
        java.lang.String r1;
        javax.xml.bind.JAXBContext $r3;
        boolean $z0;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.io.StringReader;

        specialinvoke $r0.<java.io.StringReader: void <init>(java.lang.String)>(r1);

        $r2 = staticinvoke <org.apache.cxf.staxutils.StaxUtils: javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.Reader)>($r0);

     label1:
        $r3 = staticinvoke <org.apache.cxf.configuration.jsse.spring.TLSClientParametersConfig: javax.xml.bind.JAXBContext getContext()>();

        $r4 = virtualinvoke $r3.<javax.xml.bind.JAXBContext: javax.xml.bind.Unmarshaller createUnmarshaller()>();

        $r5 = interfaceinvoke $r4.<javax.xml.bind.Unmarshaller: javax.xml.bind.JAXBElement unmarshal(javax.xml.stream.XMLStreamReader,java.lang.Class)>($r2, class "Lorg/apache/cxf/configuration/security/TLSClientParametersType;");

        r11 = $r5;

        $z0 = $r5 instanceof javax.xml.bind.JAXBElement;

        if $z0 == 0 goto label2;

        r12 = (javax.xml.bind.JAXBElement) $r5;

        r11 = virtualinvoke r12.<javax.xml.bind.JAXBElement: java.lang.Object getValue()>();

     label2:
        $r7 = (org.apache.cxf.configuration.security.TLSClientParametersType) r11;

        $r6 = staticinvoke <org.apache.cxf.configuration.jsse.spring.TLSClientParametersConfig: org.apache.cxf.configuration.jsse.TLSClientParameters createTLSClientParametersFromType(org.apache.cxf.configuration.security.TLSClientParametersType)>($r7);

     label3:
        return $r6;

     label4:
        $r10 := @caughtexception;

        throw $r10;

     label5:
        $r8 := @caughtexception;

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r8);

        throw $r9;

        catch java.lang.RuntimeException from label1 to label3 with label4;
        catch java.lang.Exception from label1 to label3 with label5;
    }
}
