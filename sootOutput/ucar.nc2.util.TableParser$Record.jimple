public class ucar.nc2.util.TableParser$Record extends java.lang.Object
{
    private java.util.List values;

    public void <init>()
    {
        ucar.nc2.util.TableParser$Record r0;
        java.util.ArrayList $r1;

        r0 := @this: ucar.nc2.util.TableParser$Record;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<ucar.nc2.util.TableParser$Record: java.util.List values> = $r1;

        return;
    }

    static ucar.nc2.util.TableParser$Record make(java.lang.String, java.util.List)
    {
        java.io.PrintStream $r10;
        java.lang.Object[] $r9;
        java.util.Iterator $r2;
        java.lang.NumberFormatException $r8;
        ucar.nc2.util.TableParser$Field r4;
        java.util.List r1, $r6;
        java.lang.Object $r3, $r7;
        java.lang.String r5;
        ucar.nc2.util.TableParser$Record $r0;
        boolean $z0;

        r5 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.List;

     label1:
        $r0 = new ucar.nc2.util.TableParser$Record;

        specialinvoke $r0.<ucar.nc2.util.TableParser$Record: void <init>()>();

        $r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (ucar.nc2.util.TableParser$Field) $r3;

        $r6 = $r0.<ucar.nc2.util.TableParser$Record: java.util.List values>;

        $r7 = virtualinvoke r4.<ucar.nc2.util.TableParser$Field: java.lang.Object parse(java.lang.String)>(r5);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r7);

        goto label2;

     label3:
        return $r0;

     label4:
        $r8 := @caughtexception;

        $r10 = <java.lang.System: java.io.PrintStream out>;

        $r9 = newarray (java.lang.Object)[1];

        $r9[0] = r5;

        virtualinvoke $r10.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("Bad line=%s %n", $r9);

        return null;

        catch java.lang.NumberFormatException from label1 to label3 with label4;
    }

    public int nfields()
    {
        int $i0;
        java.util.List $r1;
        ucar.nc2.util.TableParser$Record r0;

        r0 := @this: ucar.nc2.util.TableParser$Record;

        $r1 = r0.<ucar.nc2.util.TableParser$Record: java.util.List values>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    public java.lang.Object get(int)
    {
        java.util.List $r1;
        int i0;
        java.lang.Object $r2;
        ucar.nc2.util.TableParser$Record r0;

        r0 := @this: ucar.nc2.util.TableParser$Record;

        i0 := @parameter0: int;

        $r1 = r0.<ucar.nc2.util.TableParser$Record: java.util.List values>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        return $r2;
    }

    public void toString(java.util.Formatter)
    {
        java.lang.Object[] $r3, $r6;
        java.util.Formatter r2;
        java.util.List $r1, $r4;
        int $i0, i1;
        java.lang.Object $r5;
        java.lang.String $r7;
        ucar.nc2.util.TableParser$Record r0;

        r0 := @this: ucar.nc2.util.TableParser$Record;

        r2 := @parameter0: java.util.Formatter;

        i1 = 0;

     label1:
        $r1 = r0.<ucar.nc2.util.TableParser$Record: java.util.List values>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if i1 >= $i0 goto label2;

        $r4 = r0.<ucar.nc2.util.TableParser$Record: java.util.List values>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i1);

        $r6 = newarray (java.lang.Object)[1];

        $r7 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        $r6[0] = $r7;

        virtualinvoke r2.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>(" %s,", $r6);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r3 = newarray (java.lang.Object)[0];

        virtualinvoke r2.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%n", $r3);

        return;
    }

    static java.util.List access$000(ucar.nc2.util.TableParser$Record)
    {
        java.util.List $r1;
        ucar.nc2.util.TableParser$Record r0;

        r0 := @parameter0: ucar.nc2.util.TableParser$Record;

        $r1 = r0.<ucar.nc2.util.TableParser$Record: java.util.List values>;

        return $r1;
    }
}
