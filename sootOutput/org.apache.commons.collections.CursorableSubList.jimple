class org.apache.commons.collections.CursorableSubList extends org.apache.commons.collections.CursorableLinkedList implements java.util.List
{
    protected org.apache.commons.collections.CursorableLinkedList _list;
    protected org.apache.commons.collections.CursorableLinkedList$Listable _pre;
    protected org.apache.commons.collections.CursorableLinkedList$Listable _post;

    void <init>(org.apache.commons.collections.CursorableLinkedList, int, int)
    {
        java.lang.IndexOutOfBoundsException $r1;
        org.apache.commons.collections.CursorableSubList r0;
        int i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8;
        org.apache.commons.collections.CursorableLinkedList r2, $r3, $r5, $r13, $r15, $r24;
        java.lang.IllegalArgumentException $r22;
        org.apache.commons.collections.CursorableLinkedList$Listable $r4, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r14, $r16, $r17, $r18, $r19, $r20, $r21, $r23;

        r0 := @this: org.apache.commons.collections.CursorableSubList;

        r2 := @parameter0: org.apache.commons.collections.CursorableLinkedList;

        i0 := @parameter1: int;

        i2 := @parameter2: int;

        specialinvoke r0.<org.apache.commons.collections.CursorableLinkedList: void <init>()>();

        r0.<org.apache.commons.collections.CursorableSubList: org.apache.commons.collections.CursorableLinkedList _list> = null;

        r0.<org.apache.commons.collections.CursorableSubList: org.apache.commons.collections.CursorableLinkedList$Listable _pre> = null;

        r0.<org.apache.commons.collections.CursorableSubList: org.apache.commons.collections.CursorableLinkedList$Listable _post> = null;

        if 0 > i0 goto label01;

        $i1 = virtualinvoke r2.<org.apache.commons.collections.CursorableLinkedList: int size()>();

        if $i1 >= i2 goto label02;

     label01:
        $r1 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r1;

     label02:
        if i0 <= i2 goto label03;

        $r22 = new java.lang.IllegalArgumentException;

        specialinvoke $r22.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r22;

     label03:
        r0.<org.apache.commons.collections.CursorableSubList: org.apache.commons.collections.CursorableLinkedList _list> = r2;

        $i3 = virtualinvoke r2.<org.apache.commons.collections.CursorableLinkedList: int size()>();

        if i0 >= $i3 goto label06;

        $r16 = r0.<org.apache.commons.collections.CursorableSubList: org.apache.commons.collections.CursorableLinkedList$Listable _head>;

        $r15 = r0.<org.apache.commons.collections.CursorableSubList: org.apache.commons.collections.CursorableLinkedList _list>;

        $r17 = virtualinvoke $r15.<org.apache.commons.collections.CursorableLinkedList: org.apache.commons.collections.CursorableLinkedList$Listable getListableAt(int)>(i0);

        virtualinvoke $r16.<org.apache.commons.collections.CursorableLinkedList$Listable: void setNext(org.apache.commons.collections.CursorableLinkedList$Listable)>($r17);

        $r18 = r0.<org.apache.commons.collections.CursorableSubList: org.apache.commons.collections.CursorableLinkedList$Listable _head>;

        $r19 = virtualinvoke $r18.<org.apache.commons.collections.CursorableLinkedList$Listable: org.apache.commons.collections.CursorableLinkedList$Listable next()>();

        if null != $r19 goto label04;

        $r23 = null;

        goto label05;

     label04:
        $r20 = r0.<org.apache.commons.collections.CursorableSubList: org.apache.commons.collections.CursorableLinkedList$Listable _head>;

        $r21 = virtualinvoke $r20.<org.apache.commons.collections.CursorableLinkedList$Listable: org.apache.commons.collections.CursorableLinkedList$Listable next()>();

        $r23 = virtualinvoke $r21.<org.apache.commons.collections.CursorableLinkedList$Listable: org.apache.commons.collections.CursorableLinkedList$Listable prev()>();

     label05:
        r0.<org.apache.commons.collections.CursorableSubList: org.apache.commons.collections.CursorableLinkedList$Listable _pre> = $r23;

        goto label07;

     label06:
        $r3 = r0.<org.apache.commons.collections.CursorableSubList: org.apache.commons.collections.CursorableLinkedList _list>;

        $i4 = i0 - 1;

        $r4 = virtualinvoke $r3.<org.apache.commons.collections.CursorableLinkedList: org.apache.commons.collections.CursorableLinkedList$Listable getListableAt(int)>($i4);

        r0.<org.apache.commons.collections.CursorableSubList: org.apache.commons.collections.CursorableLinkedList$Listable _pre> = $r4;

     label07:
        if i0 != i2 goto label09;

        $r11 = r0.<org.apache.commons.collections.CursorableSubList: org.apache.commons.collections.CursorableLinkedList$Listable _head>;

        virtualinvoke $r11.<org.apache.commons.collections.CursorableLinkedList$Listable: void setNext(org.apache.commons.collections.CursorableLinkedList$Listable)>(null);

        $r12 = r0.<org.apache.commons.collections.CursorableSubList: org.apache.commons.collections.CursorableLinkedList$Listable _head>;

        virtualinvoke $r12.<org.apache.commons.collections.CursorableLinkedList$Listable: void setPrev(org.apache.commons.collections.CursorableLinkedList$Listable)>(null);

        $i6 = virtualinvoke r2.<org.apache.commons.collections.CursorableLinkedList: int size()>();

        if i2 >= $i6 goto label08;

        $r13 = r0.<org.apache.commons.collections.CursorableSubList: org.apache.commons.collections.CursorableLinkedList _list>;

        $r14 = virtualinvoke $r13.<org.apache.commons.collections.CursorableLinkedList: org.apache.commons.collections.CursorableLinkedList$Listable getListableAt(int)>(i2);

        r0.<org.apache.commons.collections.CursorableSubList: org.apache.commons.collections.CursorableLinkedList$Listable _post> = $r14;

        goto label10;

     label08:
        r0.<org.apache.commons.collections.CursorableSubList: org.apache.commons.collections.CursorableLinkedList$Listable _post> = null;

        goto label10;

     label09:
        $r6 = r0.<org.apache.commons.collections.CursorableSubList: org.apache.commons.collections.CursorableLinkedList$Listable _head>;

        $r5 = r0.<org.apache.commons.collections.CursorableSubList: org.apache.commons.collections.CursorableLinkedList _list>;

        $i5 = i2 - 1;

        $r7 = virtualinvoke $r5.<org.apache.commons.collections.CursorableLinkedList: org.apache.commons.collections.CursorableLinkedList$Listable getListableAt(int)>($i5);

        virtualinvoke $r6.<org.apache.commons.collections.CursorableLinkedList$Listable: void setPrev(org.apache.commons.collections.CursorableLinkedList$Listable)>($r7);

        $r8 = r0.<org.apache.commons.collections.CursorableSubList: org.apache.commons.collections.CursorableLinkedList$Listable _head>;

        $r9 = virtualinvoke $r8.<org.apache.commons.collections.CursorableLinkedList$Listable: org.apache.commons.collections.CursorableLinkedList$Listable prev()>();

        $r10 = virtualinvoke $r9.<org.apache.commons.collections.CursorableLinkedList$Listable: org.apache.commons.collections.CursorableLinkedList$Listable next()>();

        r0.<org.apache.commons.collections.CursorableSubList: org.apache.commons.collections.CursorableLinkedList$Listable _post> = $r10;

     label10:
        $i7 = i2 - i0;

        r0.<org.apache.commons.collections.CursorableSubList: int _size> = $i7;

        $r24 = r0.<org.apache.commons.collections.CursorableSubList: org.apache.commons.collections.CursorableLinkedList _list>;

        $i8 = $r24.<org.apache.commons.collections.CursorableLinkedList: int _modCount>;

        r0.<org.apache.commons.collections.CursorableSubList: int _modCount> = $i8;

        return;
    }

    public void clear()
    {
        org.apache.commons.collections.CursorableSubList r0;
        java.util.Iterator $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.CursorableSubList;

        virtualinvoke r0.<org.apache.commons.collections.CursorableSubList: void checkForComod()>();

        $r1 = virtualinvoke r0.<org.apache.commons.collections.CursorableSubList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        interfaceinvoke $r1.<java.util.Iterator: void remove()>();

        goto label1;

     label2:
        return;
    }

    public java.util.Iterator iterator()
    {
        org.apache.commons.collections.CursorableSubList r0;
        java.util.Iterator $r1;

        r0 := @this: org.apache.commons.collections.CursorableSubList;

        virtualinvoke r0.<org.apache.commons.collections.CursorableSubList: void checkForComod()>();

        $r1 = specialinvoke r0.<org.apache.commons.collections.CursorableLinkedList: java.util.Iterator iterator()>();

        return $r1;
    }

    public int size()
    {
        int $i0;
        org.apache.commons.collections.CursorableSubList r0;

        r0 := @this: org.apache.commons.collections.CursorableSubList;

        virtualinvoke r0.<org.apache.commons.collections.CursorableSubList: void checkForComod()>();

        $i0 = specialinvoke r0.<org.apache.commons.collections.CursorableLinkedList: int size()>();

        return $i0;
    }

    public boolean isEmpty()
    {
        org.apache.commons.collections.CursorableSubList r0;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.CursorableSubList;

        virtualinvoke r0.<org.apache.commons.collections.CursorableSubList: void checkForComod()>();

        $z0 = specialinvoke r0.<org.apache.commons.collections.CursorableLinkedList: boolean isEmpty()>();

        return $z0;
    }

    public java.lang.Object[] toArray()
    {
        org.apache.commons.collections.CursorableSubList r0;
        java.lang.Object[] $r1;

        r0 := @this: org.apache.commons.collections.CursorableSubList;

        virtualinvoke r0.<org.apache.commons.collections.CursorableSubList: void checkForComod()>();

        $r1 = specialinvoke r0.<org.apache.commons.collections.CursorableLinkedList: java.lang.Object[] toArray()>();

        return $r1;
    }

    public java.lang.Object[] toArray(java.lang.Object[])
    {
        org.apache.commons.collections.CursorableSubList r0;
        java.lang.Object[] r1, $r2;

        r0 := @this: org.apache.commons.collections.CursorableSubList;

        r1 := @parameter0: java.lang.Object[];

        virtualinvoke r0.<org.apache.commons.collections.CursorableSubList: void checkForComod()>();

        $r2 = specialinvoke r0.<org.apache.commons.collections.CursorableLinkedList: java.lang.Object[] toArray(java.lang.Object[])>(r1);

        return $r2;
    }

    public boolean contains(java.lang.Object)
    {
        org.apache.commons.collections.CursorableSubList r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.CursorableSubList;

        r1 := @parameter0: java.lang.Object;

        virtualinvoke r0.<org.apache.commons.collections.CursorableSubList: void checkForComod()>();

        $z0 = specialinvoke r0.<org.apache.commons.collections.CursorableLinkedList: boolean contains(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean remove(java.lang.Object)
    {
        org.apache.commons.collections.CursorableSubList r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.CursorableSubList;

        r1 := @parameter0: java.lang.Object;

        virtualinvoke r0.<org.apache.commons.collections.CursorableSubList: void checkForComod()>();

        $z0 = specialinvoke r0.<org.apache.commons.collections.CursorableLinkedList: boolean remove(java.lang.Object)>(r1);

        return $z0;
    }

    public java.lang.Object removeFirst()
    {
        org.apache.commons.collections.CursorableSubList r0;
        java.lang.Object $r1;

        r0 := @this: org.apache.commons.collections.CursorableSubList;

        virtualinvoke r0.<org.apache.commons.collections.CursorableSubList: void checkForComod()>();

        $r1 = specialinvoke r0.<org.apache.commons.collections.CursorableLinkedList: java.lang.Object removeFirst()>();

        return $r1;
    }

    public java.lang.Object removeLast()
    {
        org.apache.commons.collections.CursorableSubList r0;
        java.lang.Object $r1;

        r0 := @this: org.apache.commons.collections.CursorableSubList;

        virtualinvoke r0.<org.apache.commons.collections.CursorableSubList: void checkForComod()>();

        $r1 = specialinvoke r0.<org.apache.commons.collections.CursorableLinkedList: java.lang.Object removeLast()>();

        return $r1;
    }

    public boolean addAll(java.util.Collection)
    {
        org.apache.commons.collections.CursorableSubList r0;
        java.util.Collection r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.CursorableSubList;

        r1 := @parameter0: java.util.Collection;

        virtualinvoke r0.<org.apache.commons.collections.CursorableSubList: void checkForComod()>();

        $z0 = specialinvoke r0.<org.apache.commons.collections.CursorableLinkedList: boolean addAll(java.util.Collection)>(r1);

        return $z0;
    }

    public boolean add(java.lang.Object)
    {
        org.apache.commons.collections.CursorableSubList r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.CursorableSubList;

        r1 := @parameter0: java.lang.Object;

        virtualinvoke r0.<org.apache.commons.collections.CursorableSubList: void checkForComod()>();

        $z0 = specialinvoke r0.<org.apache.commons.collections.CursorableLinkedList: boolean add(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean addFirst(java.lang.Object)
    {
        org.apache.commons.collections.CursorableSubList r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.CursorableSubList;

        r1 := @parameter0: java.lang.Object;

        virtualinvoke r0.<org.apache.commons.collections.CursorableSubList: void checkForComod()>();

        $z0 = specialinvoke r0.<org.apache.commons.collections.CursorableLinkedList: boolean addFirst(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean addLast(java.lang.Object)
    {
        org.apache.commons.collections.CursorableSubList r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.CursorableSubList;

        r1 := @parameter0: java.lang.Object;

        virtualinvoke r0.<org.apache.commons.collections.CursorableSubList: void checkForComod()>();

        $z0 = specialinvoke r0.<org.apache.commons.collections.CursorableLinkedList: boolean addLast(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean removeAll(java.util.Collection)
    {
        org.apache.commons.collections.CursorableSubList r0;
        java.util.Collection r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.CursorableSubList;

        r1 := @parameter0: java.util.Collection;

        virtualinvoke r0.<org.apache.commons.collections.CursorableSubList: void checkForComod()>();

        $z0 = specialinvoke r0.<org.apache.commons.collections.CursorableLinkedList: boolean removeAll(java.util.Collection)>(r1);

        return $z0;
    }

    public boolean containsAll(java.util.Collection)
    {
        org.apache.commons.collections.CursorableSubList r0;
        java.util.Collection r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.CursorableSubList;

        r1 := @parameter0: java.util.Collection;

        virtualinvoke r0.<org.apache.commons.collections.CursorableSubList: void checkForComod()>();

        $z0 = specialinvoke r0.<org.apache.commons.collections.CursorableLinkedList: boolean containsAll(java.util.Collection)>(r1);

        return $z0;
    }

    public boolean addAll(int, java.util.Collection)
    {
        java.util.Collection r1;
        int i0;
        org.apache.commons.collections.CursorableSubList r0;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.CursorableSubList;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.Collection;

        virtualinvoke r0.<org.apache.commons.collections.CursorableSubList: void checkForComod()>();

        $z0 = specialinvoke r0.<org.apache.commons.collections.CursorableLinkedList: boolean addAll(int,java.util.Collection)>(i0, r1);

        return $z0;
    }

    public int hashCode()
    {
        int $i0;
        org.apache.commons.collections.CursorableSubList r0;

        r0 := @this: org.apache.commons.collections.CursorableSubList;

        virtualinvoke r0.<org.apache.commons.collections.CursorableSubList: void checkForComod()>();

        $i0 = specialinvoke r0.<org.apache.commons.collections.CursorableLinkedList: int hashCode()>();

        return $i0;
    }

    public boolean retainAll(java.util.Collection)
    {
        org.apache.commons.collections.CursorableSubList r0;
        java.util.Collection r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.CursorableSubList;

        r1 := @parameter0: java.util.Collection;

        virtualinvoke r0.<org.apache.commons.collections.CursorableSubList: void checkForComod()>();

        $z0 = specialinvoke r0.<org.apache.commons.collections.CursorableLinkedList: boolean retainAll(java.util.Collection)>(r1);

        return $z0;
    }

    public java.lang.Object set(int, java.lang.Object)
    {
        int i0;
        org.apache.commons.collections.CursorableSubList r0;
        java.lang.Object r1, $r2;

        r0 := @this: org.apache.commons.collections.CursorableSubList;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        virtualinvoke r0.<org.apache.commons.collections.CursorableSubList: void checkForComod()>();

        $r2 = specialinvoke r0.<org.apache.commons.collections.CursorableLinkedList: java.lang.Object set(int,java.lang.Object)>(i0, r1);

        return $r2;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.commons.collections.CursorableSubList r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.CursorableSubList;

        r1 := @parameter0: java.lang.Object;

        virtualinvoke r0.<org.apache.commons.collections.CursorableSubList: void checkForComod()>();

        $z0 = specialinvoke r0.<org.apache.commons.collections.CursorableLinkedList: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    public java.lang.Object get(int)
    {
        int i0;
        org.apache.commons.collections.CursorableSubList r0;
        java.lang.Object $r1;

        r0 := @this: org.apache.commons.collections.CursorableSubList;

        i0 := @parameter0: int;

        virtualinvoke r0.<org.apache.commons.collections.CursorableSubList: void checkForComod()>();

        $r1 = specialinvoke r0.<org.apache.commons.collections.CursorableLinkedList: java.lang.Object get(int)>(i0);

        return $r1;
    }

    public java.lang.Object getFirst()
    {
        org.apache.commons.collections.CursorableSubList r0;
        java.lang.Object $r1;

        r0 := @this: org.apache.commons.collections.CursorableSubList;

        virtualinvoke r0.<org.apache.commons.collections.CursorableSubList: void checkForComod()>();

        $r1 = specialinvoke r0.<org.apache.commons.collections.CursorableLinkedList: java.lang.Object getFirst()>();

        return $r1;
    }

    public java.lang.Object getLast()
    {
        org.apache.commons.collections.CursorableSubList r0;
        java.lang.Object $r1;

        r0 := @this: org.apache.commons.collections.CursorableSubList;

        virtualinvoke r0.<org.apache.commons.collections.CursorableSubList: void checkForComod()>();

        $r1 = specialinvoke r0.<org.apache.commons.collections.CursorableLinkedList: java.lang.Object getLast()>();

        return $r1;
    }

    public void add(int, java.lang.Object)
    {
        int i0;
        org.apache.commons.collections.CursorableSubList r0;
        java.lang.Object r1;

        r0 := @this: org.apache.commons.collections.CursorableSubList;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        virtualinvoke r0.<org.apache.commons.collections.CursorableSubList: void checkForComod()>();

        specialinvoke r0.<org.apache.commons.collections.CursorableLinkedList: void add(int,java.lang.Object)>(i0, r1);

        return;
    }

    public java.util.ListIterator listIterator(int)
    {
        int i0;
        org.apache.commons.collections.CursorableSubList r0;
        java.util.ListIterator $r1;

        r0 := @this: org.apache.commons.collections.CursorableSubList;

        i0 := @parameter0: int;

        virtualinvoke r0.<org.apache.commons.collections.CursorableSubList: void checkForComod()>();

        $r1 = specialinvoke r0.<org.apache.commons.collections.CursorableLinkedList: java.util.ListIterator listIterator(int)>(i0);

        return $r1;
    }

    public java.lang.Object remove(int)
    {
        int i0;
        org.apache.commons.collections.CursorableSubList r0;
        java.lang.Object $r1;

        r0 := @this: org.apache.commons.collections.CursorableSubList;

        i0 := @parameter0: int;

        virtualinvoke r0.<org.apache.commons.collections.CursorableSubList: void checkForComod()>();

        $r1 = specialinvoke r0.<org.apache.commons.collections.CursorableLinkedList: java.lang.Object remove(int)>(i0);

        return $r1;
    }

    public int indexOf(java.lang.Object)
    {
        int $i0;
        org.apache.commons.collections.CursorableSubList r0;
        java.lang.Object r1;

        r0 := @this: org.apache.commons.collections.CursorableSubList;

        r1 := @parameter0: java.lang.Object;

        virtualinvoke r0.<org.apache.commons.collections.CursorableSubList: void checkForComod()>();

        $i0 = specialinvoke r0.<org.apache.commons.collections.CursorableLinkedList: int indexOf(java.lang.Object)>(r1);

        return $i0;
    }

    public int lastIndexOf(java.lang.Object)
    {
        int $i0;
        org.apache.commons.collections.CursorableSubList r0;
        java.lang.Object r1;

        r0 := @this: org.apache.commons.collections.CursorableSubList;

        r1 := @parameter0: java.lang.Object;

        virtualinvoke r0.<org.apache.commons.collections.CursorableSubList: void checkForComod()>();

        $i0 = specialinvoke r0.<org.apache.commons.collections.CursorableLinkedList: int lastIndexOf(java.lang.Object)>(r1);

        return $i0;
    }

    public java.util.ListIterator listIterator()
    {
        org.apache.commons.collections.CursorableSubList r0;
        java.util.ListIterator $r1;

        r0 := @this: org.apache.commons.collections.CursorableSubList;

        virtualinvoke r0.<org.apache.commons.collections.CursorableSubList: void checkForComod()>();

        $r1 = specialinvoke r0.<org.apache.commons.collections.CursorableLinkedList: java.util.ListIterator listIterator()>();

        return $r1;
    }

    public java.util.List subList(int, int)
    {
        java.util.List $r1;
        int i0, i1;
        org.apache.commons.collections.CursorableSubList r0;

        r0 := @this: org.apache.commons.collections.CursorableSubList;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<org.apache.commons.collections.CursorableSubList: void checkForComod()>();

        $r1 = specialinvoke r0.<org.apache.commons.collections.CursorableLinkedList: java.util.List subList(int,int)>(i0, i1);

        return $r1;
    }

    protected org.apache.commons.collections.CursorableLinkedList$Listable insertListable(org.apache.commons.collections.CursorableLinkedList$Listable, org.apache.commons.collections.CursorableLinkedList$Listable, java.lang.Object)
    {
        org.apache.commons.collections.CursorableSubList r0;
        int $i0, $i1, $i2, $i3;
        org.apache.commons.collections.CursorableLinkedList $r12;
        org.apache.commons.collections.CursorableLinkedList$Listable r1, r2, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r13, $r14, $r15, $r16, $r17;
        java.lang.Object r3;

        r0 := @this: org.apache.commons.collections.CursorableSubList;

        r1 := @parameter0: org.apache.commons.collections.CursorableLinkedList$Listable;

        r2 := @parameter1: org.apache.commons.collections.CursorableLinkedList$Listable;

        r3 := @parameter2: java.lang.Object;

        $i0 = r0.<org.apache.commons.collections.CursorableSubList: int _modCount>;

        $i1 = $i0 + 1;

        r0.<org.apache.commons.collections.CursorableSubList: int _modCount> = $i1;

        $i2 = r0.<org.apache.commons.collections.CursorableSubList: int _size>;

        $i3 = $i2 + 1;

        r0.<org.apache.commons.collections.CursorableSubList: int _size> = $i3;

        $r12 = r0.<org.apache.commons.collections.CursorableSubList: org.apache.commons.collections.CursorableLinkedList _list>;

        if null != r1 goto label1;

        $r13 = r0.<org.apache.commons.collections.CursorableSubList: org.apache.commons.collections.CursorableLinkedList$Listable _pre>;

        goto label2;

     label1:
        $r13 = r1;

     label2:
        if null != r2 goto label3;

        $r14 = r0.<org.apache.commons.collections.CursorableSubList: org.apache.commons.collections.CursorableLinkedList$Listable _post>;

        goto label4;

     label3:
        $r14 = r2;

     label4:
        $r15 = virtualinvoke $r12.<org.apache.commons.collections.CursorableLinkedList: org.apache.commons.collections.CursorableLinkedList$Listable insertListable(org.apache.commons.collections.CursorableLinkedList$Listable,org.apache.commons.collections.CursorableLinkedList$Listable,java.lang.Object)>($r13, $r14, r3);

        $r16 = r0.<org.apache.commons.collections.CursorableSubList: org.apache.commons.collections.CursorableLinkedList$Listable _head>;

        $r17 = virtualinvoke $r16.<org.apache.commons.collections.CursorableLinkedList$Listable: org.apache.commons.collections.CursorableLinkedList$Listable next()>();

        if null != $r17 goto label5;

        $r10 = r0.<org.apache.commons.collections.CursorableSubList: org.apache.commons.collections.CursorableLinkedList$Listable _head>;

        virtualinvoke $r10.<org.apache.commons.collections.CursorableLinkedList$Listable: void setNext(org.apache.commons.collections.CursorableLinkedList$Listable)>($r15);

        $r11 = r0.<org.apache.commons.collections.CursorableSubList: org.apache.commons.collections.CursorableLinkedList$Listable _head>;

        virtualinvoke $r11.<org.apache.commons.collections.CursorableLinkedList$Listable: void setPrev(org.apache.commons.collections.CursorableLinkedList$Listable)>($r15);

     label5:
        $r4 = r0.<org.apache.commons.collections.CursorableSubList: org.apache.commons.collections.CursorableLinkedList$Listable _head>;

        $r5 = virtualinvoke $r4.<org.apache.commons.collections.CursorableLinkedList$Listable: org.apache.commons.collections.CursorableLinkedList$Listable prev()>();

        if r1 != $r5 goto label6;

        $r9 = r0.<org.apache.commons.collections.CursorableSubList: org.apache.commons.collections.CursorableLinkedList$Listable _head>;

        virtualinvoke $r9.<org.apache.commons.collections.CursorableLinkedList$Listable: void setPrev(org.apache.commons.collections.CursorableLinkedList$Listable)>($r15);

     label6:
        $r6 = r0.<org.apache.commons.collections.CursorableSubList: org.apache.commons.collections.CursorableLinkedList$Listable _head>;

        $r7 = virtualinvoke $r6.<org.apache.commons.collections.CursorableLinkedList$Listable: org.apache.commons.collections.CursorableLinkedList$Listable next()>();

        if r2 != $r7 goto label7;

        $r8 = r0.<org.apache.commons.collections.CursorableSubList: org.apache.commons.collections.CursorableLinkedList$Listable _head>;

        virtualinvoke $r8.<org.apache.commons.collections.CursorableLinkedList$Listable: void setNext(org.apache.commons.collections.CursorableLinkedList$Listable)>($r15);

     label7:
        virtualinvoke r0.<org.apache.commons.collections.CursorableSubList: void broadcastListableInserted(org.apache.commons.collections.CursorableLinkedList$Listable)>($r15);

        return $r15;
    }

    protected void removeListable(org.apache.commons.collections.CursorableLinkedList$Listable)
    {
        org.apache.commons.collections.CursorableSubList r0;
        int $i0, $i1, $i2, $i3;
        org.apache.commons.collections.CursorableLinkedList $r6;
        org.apache.commons.collections.CursorableLinkedList$Listable $r1, $r2, r3, $r4, $r5, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16;

        r0 := @this: org.apache.commons.collections.CursorableSubList;

        r3 := @parameter0: org.apache.commons.collections.CursorableLinkedList$Listable;

        $i0 = r0.<org.apache.commons.collections.CursorableSubList: int _modCount>;

        $i1 = $i0 + 1;

        r0.<org.apache.commons.collections.CursorableSubList: int _modCount> = $i1;

        $i2 = r0.<org.apache.commons.collections.CursorableSubList: int _size>;

        $i3 = $i2 - 1;

        r0.<org.apache.commons.collections.CursorableSubList: int _size> = $i3;

        $r1 = r0.<org.apache.commons.collections.CursorableSubList: org.apache.commons.collections.CursorableLinkedList$Listable _head>;

        $r2 = virtualinvoke $r1.<org.apache.commons.collections.CursorableLinkedList$Listable: org.apache.commons.collections.CursorableLinkedList$Listable next()>();

        if $r2 != r3 goto label1;

        $r11 = r0.<org.apache.commons.collections.CursorableSubList: org.apache.commons.collections.CursorableLinkedList$Listable _head>;

        $r12 = virtualinvoke $r11.<org.apache.commons.collections.CursorableLinkedList$Listable: org.apache.commons.collections.CursorableLinkedList$Listable prev()>();

        if $r12 != r3 goto label1;

        $r13 = r0.<org.apache.commons.collections.CursorableSubList: org.apache.commons.collections.CursorableLinkedList$Listable _head>;

        virtualinvoke $r13.<org.apache.commons.collections.CursorableLinkedList$Listable: void setNext(org.apache.commons.collections.CursorableLinkedList$Listable)>(null);

        $r14 = r0.<org.apache.commons.collections.CursorableSubList: org.apache.commons.collections.CursorableLinkedList$Listable _head>;

        virtualinvoke $r14.<org.apache.commons.collections.CursorableLinkedList$Listable: void setPrev(org.apache.commons.collections.CursorableLinkedList$Listable)>(null);

     label1:
        $r15 = r0.<org.apache.commons.collections.CursorableSubList: org.apache.commons.collections.CursorableLinkedList$Listable _head>;

        $r16 = virtualinvoke $r15.<org.apache.commons.collections.CursorableLinkedList$Listable: org.apache.commons.collections.CursorableLinkedList$Listable next()>();

        if $r16 != r3 goto label2;

        $r9 = r0.<org.apache.commons.collections.CursorableSubList: org.apache.commons.collections.CursorableLinkedList$Listable _head>;

        $r10 = virtualinvoke r3.<org.apache.commons.collections.CursorableLinkedList$Listable: org.apache.commons.collections.CursorableLinkedList$Listable next()>();

        virtualinvoke $r9.<org.apache.commons.collections.CursorableLinkedList$Listable: void setNext(org.apache.commons.collections.CursorableLinkedList$Listable)>($r10);

     label2:
        $r4 = r0.<org.apache.commons.collections.CursorableSubList: org.apache.commons.collections.CursorableLinkedList$Listable _head>;

        $r5 = virtualinvoke $r4.<org.apache.commons.collections.CursorableLinkedList$Listable: org.apache.commons.collections.CursorableLinkedList$Listable prev()>();

        if $r5 != r3 goto label3;

        $r7 = r0.<org.apache.commons.collections.CursorableSubList: org.apache.commons.collections.CursorableLinkedList$Listable _head>;

        $r8 = virtualinvoke r3.<org.apache.commons.collections.CursorableLinkedList$Listable: org.apache.commons.collections.CursorableLinkedList$Listable prev()>();

        virtualinvoke $r7.<org.apache.commons.collections.CursorableLinkedList$Listable: void setPrev(org.apache.commons.collections.CursorableLinkedList$Listable)>($r8);

     label3:
        $r6 = r0.<org.apache.commons.collections.CursorableSubList: org.apache.commons.collections.CursorableLinkedList _list>;

        virtualinvoke $r6.<org.apache.commons.collections.CursorableLinkedList: void removeListable(org.apache.commons.collections.CursorableLinkedList$Listable)>(r3);

        virtualinvoke r0.<org.apache.commons.collections.CursorableSubList: void broadcastListableRemoved(org.apache.commons.collections.CursorableLinkedList$Listable)>(r3);

        return;
    }

    protected void checkForComod() throws java.util.ConcurrentModificationException
    {
        int $i0, $i1;
        org.apache.commons.collections.CursorableSubList r0;
        org.apache.commons.collections.CursorableLinkedList $r1;
        java.util.ConcurrentModificationException $r2;

        r0 := @this: org.apache.commons.collections.CursorableSubList;

        $i1 = r0.<org.apache.commons.collections.CursorableSubList: int _modCount>;

        $r1 = r0.<org.apache.commons.collections.CursorableSubList: org.apache.commons.collections.CursorableLinkedList _list>;

        $i0 = $r1.<org.apache.commons.collections.CursorableLinkedList: int _modCount>;

        if $i1 == $i0 goto label1;

        $r2 = new java.util.ConcurrentModificationException;

        specialinvoke $r2.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r2;

     label1:
        return;
    }
}
