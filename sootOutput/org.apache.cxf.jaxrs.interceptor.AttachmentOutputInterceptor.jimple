public class org.apache.cxf.jaxrs.interceptor.AttachmentOutputInterceptor extends org.apache.cxf.interceptor.AttachmentOutInterceptor
{
    private java.lang.String multipartType;
    private java.util.Map rootHeaders;

    public void <init>(java.lang.String, java.util.Map)
    {
        java.lang.String r1;
        org.apache.cxf.jaxrs.interceptor.AttachmentOutputInterceptor r0;
        java.util.Map r2;

        r0 := @this: org.apache.cxf.jaxrs.interceptor.AttachmentOutputInterceptor;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Map;

        specialinvoke r0.<org.apache.cxf.interceptor.AttachmentOutInterceptor: void <init>()>();

        r0.<org.apache.cxf.jaxrs.interceptor.AttachmentOutputInterceptor: java.lang.String multipartType> = r1;

        r0.<org.apache.cxf.jaxrs.interceptor.AttachmentOutputInterceptor: java.util.Map rootHeaders> = r2;

        return;
    }

    protected java.lang.String getMultipartType()
    {
        java.lang.String $r1;
        org.apache.cxf.jaxrs.interceptor.AttachmentOutputInterceptor r0;

        r0 := @this: org.apache.cxf.jaxrs.interceptor.AttachmentOutputInterceptor;

        $r1 = r0.<org.apache.cxf.jaxrs.interceptor.AttachmentOutputInterceptor: java.lang.String multipartType>;

        return $r1;
    }

    protected java.util.Map getRootHeaders()
    {
        org.apache.cxf.jaxrs.interceptor.AttachmentOutputInterceptor r0;
        java.util.Map $r1, $r2;

        r0 := @this: org.apache.cxf.jaxrs.interceptor.AttachmentOutputInterceptor;

        $r1 = r0.<org.apache.cxf.jaxrs.interceptor.AttachmentOutputInterceptor: java.util.Map rootHeaders>;

        $r2 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r1);

        return $r2;
    }

    protected boolean writeOptionalTypeParameters()
    {
        org.apache.cxf.jaxrs.interceptor.AttachmentOutputInterceptor r0;

        r0 := @this: org.apache.cxf.jaxrs.interceptor.AttachmentOutputInterceptor;

        return 0;
    }
}
