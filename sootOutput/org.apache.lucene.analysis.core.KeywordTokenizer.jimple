public final class org.apache.lucene.analysis.core.KeywordTokenizer extends org.apache.lucene.analysis.Tokenizer
{
    public static final int DEFAULT_BUFFER_SIZE;
    private boolean done;
    private int finalOffset;
    private final org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt;
    private org.apache.lucene.analysis.tokenattributes.OffsetAttribute offsetAtt;

    public void <init>(java.io.Reader)
    {
        org.apache.lucene.analysis.core.KeywordTokenizer r0;
        java.io.Reader r1;

        r0 := @this: org.apache.lucene.analysis.core.KeywordTokenizer;

        r1 := @parameter0: java.io.Reader;

        specialinvoke r0.<org.apache.lucene.analysis.core.KeywordTokenizer: void <init>(java.io.Reader,int)>(r1, 256);

        return;
    }

    public void <init>(java.io.Reader, int)
    {
        org.apache.lucene.analysis.tokenattributes.CharTermAttribute $r3, $r6;
        org.apache.lucene.analysis.core.KeywordTokenizer r0;
        java.io.Reader r1;
        org.apache.lucene.analysis.tokenattributes.OffsetAttribute $r5;
        java.lang.IllegalArgumentException $r7;
        int i0;
        org.apache.lucene.util.Attribute $r2, $r4;

        r0 := @this: org.apache.lucene.analysis.core.KeywordTokenizer;

        r1 := @parameter0: java.io.Reader;

        i0 := @parameter1: int;

        specialinvoke r0.<org.apache.lucene.analysis.Tokenizer: void <init>(java.io.Reader)>(r1);

        r0.<org.apache.lucene.analysis.core.KeywordTokenizer: boolean done> = 0;

        $r2 = virtualinvoke r0.<org.apache.lucene.analysis.core.KeywordTokenizer: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/CharTermAttribute;");

        $r3 = (org.apache.lucene.analysis.tokenattributes.CharTermAttribute) $r2;

        r0.<org.apache.lucene.analysis.core.KeywordTokenizer: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt> = $r3;

        $r4 = virtualinvoke r0.<org.apache.lucene.analysis.core.KeywordTokenizer: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/OffsetAttribute;");

        $r5 = (org.apache.lucene.analysis.tokenattributes.OffsetAttribute) $r4;

        r0.<org.apache.lucene.analysis.core.KeywordTokenizer: org.apache.lucene.analysis.tokenattributes.OffsetAttribute offsetAtt> = $r5;

        if i0 > 0 goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("bufferSize must be > 0");

        throw $r7;

     label1:
        $r6 = r0.<org.apache.lucene.analysis.core.KeywordTokenizer: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt>;

        interfaceinvoke $r6.<org.apache.lucene.analysis.tokenattributes.CharTermAttribute: char[] resizeBuffer(int)>(i0);

        return;
    }

    public void <init>(org.apache.lucene.util.AttributeSource$AttributeFactory, java.io.Reader, int)
    {
        org.apache.lucene.analysis.tokenattributes.CharTermAttribute $r4, $r7;
        org.apache.lucene.util.AttributeSource$AttributeFactory r1;
        org.apache.lucene.analysis.core.KeywordTokenizer r0;
        java.io.Reader r2;
        org.apache.lucene.analysis.tokenattributes.OffsetAttribute $r6;
        java.lang.IllegalArgumentException $r8;
        int i0;
        org.apache.lucene.util.Attribute $r3, $r5;

        r0 := @this: org.apache.lucene.analysis.core.KeywordTokenizer;

        r1 := @parameter0: org.apache.lucene.util.AttributeSource$AttributeFactory;

        r2 := @parameter1: java.io.Reader;

        i0 := @parameter2: int;

        specialinvoke r0.<org.apache.lucene.analysis.Tokenizer: void <init>(org.apache.lucene.util.AttributeSource$AttributeFactory,java.io.Reader)>(r1, r2);

        r0.<org.apache.lucene.analysis.core.KeywordTokenizer: boolean done> = 0;

        $r3 = virtualinvoke r0.<org.apache.lucene.analysis.core.KeywordTokenizer: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/CharTermAttribute;");

        $r4 = (org.apache.lucene.analysis.tokenattributes.CharTermAttribute) $r3;

        r0.<org.apache.lucene.analysis.core.KeywordTokenizer: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt> = $r4;

        $r5 = virtualinvoke r0.<org.apache.lucene.analysis.core.KeywordTokenizer: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/OffsetAttribute;");

        $r6 = (org.apache.lucene.analysis.tokenattributes.OffsetAttribute) $r5;

        r0.<org.apache.lucene.analysis.core.KeywordTokenizer: org.apache.lucene.analysis.tokenattributes.OffsetAttribute offsetAtt> = $r6;

        if i0 > 0 goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("bufferSize must be > 0");

        throw $r8;

     label1:
        $r7 = r0.<org.apache.lucene.analysis.core.KeywordTokenizer: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt>;

        interfaceinvoke $r7.<org.apache.lucene.analysis.tokenattributes.CharTermAttribute: char[] resizeBuffer(int)>(i0);

        return;
    }

    public final boolean incrementToken() throws java.io.IOException
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, $i11;
        boolean $z0;
        org.apache.lucene.analysis.tokenattributes.CharTermAttribute $r1, $r3, $r4;
        org.apache.lucene.analysis.core.KeywordTokenizer r0;
        java.io.Reader $r2;
        org.apache.lucene.analysis.tokenattributes.OffsetAttribute $r5;
        char[] r6;

        r0 := @this: org.apache.lucene.analysis.core.KeywordTokenizer;

        $z0 = r0.<org.apache.lucene.analysis.core.KeywordTokenizer: boolean done>;

        if $z0 != 0 goto label5;

        virtualinvoke r0.<org.apache.lucene.analysis.core.KeywordTokenizer: void clearAttributes()>();

        r0.<org.apache.lucene.analysis.core.KeywordTokenizer: boolean done> = 1;

        i9 = 0;

        $r1 = r0.<org.apache.lucene.analysis.core.KeywordTokenizer: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt>;

        r6 = interfaceinvoke $r1.<org.apache.lucene.analysis.tokenattributes.CharTermAttribute: char[] buffer()>();

     label1:
        $r2 = r0.<org.apache.lucene.analysis.core.KeywordTokenizer: java.io.Reader input>;

        $i0 = lengthof r6;

        $i1 = $i0 - i9;

        $i2 = virtualinvoke $r2.<java.io.Reader: int read(char[],int,int)>(r6, i9, $i1);

        $i11 = (int) -1;

        if $i2 != $i11 goto label2;

        goto label4;

     label2:
        i9 = i9 + $i2;

        $i3 = lengthof r6;

        if i9 != $i3 goto label3;

        $r3 = r0.<org.apache.lucene.analysis.core.KeywordTokenizer: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt>;

        $i4 = lengthof r6;

        $i5 = 1 + $i4;

        r6 = interfaceinvoke $r3.<org.apache.lucene.analysis.tokenattributes.CharTermAttribute: char[] resizeBuffer(int)>($i5);

     label3:
        goto label1;

     label4:
        $r4 = r0.<org.apache.lucene.analysis.core.KeywordTokenizer: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt>;

        interfaceinvoke $r4.<org.apache.lucene.analysis.tokenattributes.CharTermAttribute: org.apache.lucene.analysis.tokenattributes.CharTermAttribute setLength(int)>(i9);

        $i6 = virtualinvoke r0.<org.apache.lucene.analysis.core.KeywordTokenizer: int correctOffset(int)>(i9);

        r0.<org.apache.lucene.analysis.core.KeywordTokenizer: int finalOffset> = $i6;

        $r5 = r0.<org.apache.lucene.analysis.core.KeywordTokenizer: org.apache.lucene.analysis.tokenattributes.OffsetAttribute offsetAtt>;

        $i7 = virtualinvoke r0.<org.apache.lucene.analysis.core.KeywordTokenizer: int correctOffset(int)>(0);

        $i8 = r0.<org.apache.lucene.analysis.core.KeywordTokenizer: int finalOffset>;

        interfaceinvoke $r5.<org.apache.lucene.analysis.tokenattributes.OffsetAttribute: void setOffset(int,int)>($i7, $i8);

        return 1;

     label5:
        return 0;
    }

    public final void end()
    {
        int $i0, $i1;
        org.apache.lucene.analysis.core.KeywordTokenizer r0;
        org.apache.lucene.analysis.tokenattributes.OffsetAttribute $r1;

        r0 := @this: org.apache.lucene.analysis.core.KeywordTokenizer;

        $r1 = r0.<org.apache.lucene.analysis.core.KeywordTokenizer: org.apache.lucene.analysis.tokenattributes.OffsetAttribute offsetAtt>;

        $i1 = r0.<org.apache.lucene.analysis.core.KeywordTokenizer: int finalOffset>;

        $i0 = r0.<org.apache.lucene.analysis.core.KeywordTokenizer: int finalOffset>;

        interfaceinvoke $r1.<org.apache.lucene.analysis.tokenattributes.OffsetAttribute: void setOffset(int,int)>($i1, $i0);

        return;
    }

    public void reset() throws java.io.IOException
    {
        org.apache.lucene.analysis.core.KeywordTokenizer r0;

        r0 := @this: org.apache.lucene.analysis.core.KeywordTokenizer;

        r0.<org.apache.lucene.analysis.core.KeywordTokenizer: boolean done> = 0;

        return;
    }

    public static void <clinit>()
    {
        <org.apache.lucene.analysis.core.KeywordTokenizer: int DEFAULT_BUFFER_SIZE> = 256;

        return;
    }
}
