public class org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor extends org.apache.cxf.phase.AbstractPhaseInterceptor
{
    private static final java.util.logging.Logger LOG;
    private static final java.util.ResourceBundle BUNDLE;
    private static final java.lang.String RESOURCE_METHOD;
    private static final java.lang.String RESOURCE_OPERATION_NAME;

    public void <init>()
    {
        org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor r0;

        r0 := @this: org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor;

        specialinvoke r0.<org.apache.cxf.phase.AbstractPhaseInterceptor: void <init>(java.lang.String)>("unmarshal");

        return;
    }

    public void handleMessage(org.apache.cxf.message.Message)
    {
        java.lang.Throwable $r11;
        org.apache.cxf.interceptor.InterceptorChain $r6;
        org.apache.cxf.message.Message r0;
        java.lang.RuntimeException $r9;
        org.apache.cxf.message.Exchange $r1, $r3, $r12;
        org.apache.cxf.interceptor.Fault $r10;
        javax.ws.rs.core.Response $r14;
        java.lang.Boolean $r4;
        org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor r5;
        java.lang.Object $r2, $r13;
        java.lang.Class $r7;
        java.lang.String $r8;

        r5 := @this: org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor;

        r0 := @parameter0: org.apache.cxf.message.Message;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r2 = interfaceinvoke $r1.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Class)>(class "Lorg/apache/cxf/jaxrs/model/OperationResourceInfo;");

        if $r2 == null goto label1;

        return;

     label1:
        $r3 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r4 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        interfaceinvoke $r3.<org.apache.cxf.message.Exchange: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.apache.cxf.rest.message", $r4);

     label2:
        specialinvoke r5.<org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor: void processRequest(org.apache.cxf.message.Message)>(r0);

     label3:
        goto label6;

     label4:
        $r10 := @caughtexception;

        $r11 = virtualinvoke $r10.<org.apache.cxf.interceptor.Fault: java.lang.Throwable getCause()>();

        specialinvoke r5.<org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor: void convertExceptionToResponseIfPossible(java.lang.Throwable,org.apache.cxf.message.Message)>($r11, r0);

        goto label6;

     label5:
        $r9 := @caughtexception;

        specialinvoke r5.<org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor: void convertExceptionToResponseIfPossible(java.lang.Throwable,org.apache.cxf.message.Message)>($r9, r0);

     label6:
        $r12 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r13 = interfaceinvoke $r12.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Class)>(class "Ljavax/ws/rs/core/Response;");

        $r14 = (javax.ws.rs.core.Response) $r13;

        if $r14 == null goto label7;

        specialinvoke r5.<org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor: org.apache.cxf.message.Message createOutMessage(org.apache.cxf.message.Message,javax.ws.rs.core.Response)>(r0, $r14);

        $r6 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.interceptor.InterceptorChain getInterceptorChain()>();

        $r7 = class "Lorg/apache/cxf/interceptor/OutgoingChainInterceptor;";

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke $r6.<org.apache.cxf.interceptor.InterceptorChain: boolean doInterceptStartingAt(org.apache.cxf.message.Message,java.lang.String)>(r0, $r8);

     label7:
        return;

        catch org.apache.cxf.interceptor.Fault from label2 to label3 with label4;
        catch java.lang.RuntimeException from label2 to label3 with label5;
    }

    private void processRequest(org.apache.cxf.message.Message)
    {
        org.apache.cxf.jaxrs.impl.MetadataMap $r16;
        org.apache.cxf.jaxrs.model.OperationResourceInfo $r53, $r56, r88;
        org.apache.cxf.service.Service r87;
        java.util.Map $r7, $r8;
        javax.ws.rs.core.Response$Status $r64;
        javax.ws.rs.WebApplicationException $r75, $r79;
        java.lang.StringBuilder $r26, $r28, $r29, $r31, $r33, $r34, $r36, $r38, $r39, $r41, $r43, $r44, $r46, $r48, $r51;
        org.apache.cxf.jaxrs.ext.RequestHandler $r92;
        java.lang.Object[] $r58;
        java.util.ResourceBundle $r59;
        java.lang.String $r3, $r4, $r5, $r30, $r35, $r40, $r45, $r50, $r52, $r62, $r63, $r67, r82, r83;
        javax.ws.rs.NotAcceptableException $r81;
        java.io.IOException $r74;
        org.apache.cxf.message.Exchange $r11, $r12, $r18, $r55, $r72, $r78;
        org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor r23;
        org.apache.cxf.jaxrs.impl.RequestPreprocessor $r2;
        java.lang.reflect.Method $r49;
        boolean $z0, $z1, $z2, $z3, $z4, z5;
        java.util.logging.Logger $r22, $r27, $r32, $r37, $r42, $r47, $r61;
        javax.ws.rs.NotFoundException $r66;
        java.util.List r10, $r15, $r19, $r24, $r25, $r85, $r86;
        javax.ws.rs.core.Response $r65, $r76, $r77, $r93;
        org.apache.cxf.jaxrs.model.ClassResourceInfo $r17;
        org.apache.cxf.jaxrs.provider.ProviderFactory $r1;
        org.apache.cxf.common.i18n.Message $r57;
        java.util.logging.Level $r21;
        org.apache.cxf.jaxrs.JAXRSServiceImpl $r14;
        org.apache.cxf.jaxrs.model.ProviderInfo r89;
        int $i0, $i1, $i2, $i3;
        java.util.Iterator $r20;
        org.apache.cxf.message.Message r0;
        java.lang.IllegalArgumentException $r80;
        org.apache.cxf.jaxrs.impl.UriInfoImpl $r71;
        java.lang.Object $r6, $r9, $r13, $r54, $r60, $r68, $r69, $r70, $r73, $r84, $r90, $r91;

        r23 := @this: org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor;

        r0 := @parameter0: org.apache.cxf.message.Message;

        $r1 = staticinvoke <org.apache.cxf.jaxrs.provider.ProviderFactory: org.apache.cxf.jaxrs.provider.ProviderFactory getInstance(org.apache.cxf.message.Message)>(r0);

        $r2 = virtualinvoke $r1.<org.apache.cxf.jaxrs.provider.ProviderFactory: org.apache.cxf.jaxrs.impl.RequestPreprocessor getRequestPreprocessor()>();

        if $r2 == null goto label01;

        $r71 = new org.apache.cxf.jaxrs.impl.UriInfoImpl;

        specialinvoke $r71.<org.apache.cxf.jaxrs.impl.UriInfoImpl: void <init>(org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap)>(r0, null);

        virtualinvoke $r2.<org.apache.cxf.jaxrs.impl.RequestPreprocessor: java.lang.String preprocess(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)>(r0, $r71);

        $r72 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r73 = interfaceinvoke $r72.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Class)>(class "Ljavax/ws/rs/core/Response;");

        if $r73 == null goto label01;

        return;

     label01:
        $z0 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: boolean runContainerRequestFilters(org.apache.cxf.jaxrs.provider.ProviderFactory,org.apache.cxf.message.Message,boolean,java.util.List)>($r1, r0, 1, null);

        if $z0 == 0 goto label02;

        return;

     label02:
        $r3 = staticinvoke <org.apache.cxf.jaxrs.utils.HttpUtils: java.lang.String getProtocolHeader(org.apache.cxf.message.Message,java.lang.String,java.lang.String,boolean)>(r0, "org.apache.cxf.request.method", "POST", 1);

        $r4 = staticinvoke <org.apache.cxf.jaxrs.utils.HttpUtils: java.lang.String getPathToMatch(org.apache.cxf.message.Message,boolean)>(r0, 1);

        $r5 = <org.apache.cxf.message.Message: java.lang.String PROTOCOL_HEADERS>;

        $r6 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>($r5);

        $r7 = (java.util.Map) $r6;

        $r8 = staticinvoke <org.apache.cxf.helpers.CastUtils: java.util.Map cast(java.util.Map)>($r7);

        r82 = null;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>("Content-Type");

        r10 = (java.util.List) $r9;

        if r10 == null goto label03;

        $r70 = interfaceinvoke r10.<java.util.List: java.lang.Object get(int)>(0);

        r82 = (java.lang.String) $r70;

        interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>("Content-Type", r82);

     label03:
        if r82 != null goto label04;

        $r69 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>("Content-Type");

        r82 = (java.lang.String) $r69;

        if r82 != null goto label04;

        r82 = "*/*";

     label04:
        r83 = null;

        $r84 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>("Accept");

        $r85 = (java.util.List) $r84;

        if $r85 == null goto label05;

        $r68 = interfaceinvoke $r85.<java.util.List: java.lang.Object get(int)>(0);

        r83 = (java.lang.String) $r68;

        interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>("Accept", r83);

     label05:
        if r83 != null goto label06;

        $r67 = staticinvoke <org.apache.cxf.jaxrs.utils.HttpUtils: java.lang.String getProtocolHeader(org.apache.cxf.message.Message,java.lang.String,java.lang.String)>(r0, "Accept", null);

        r83 = $r67;

        if $r67 != null goto label06;

        r83 = "*/*";

        interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>("Accept", "*/*");

     label06:
        $r86 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.List sortMediaTypes(java.lang.String,java.lang.String)>(r83, "q");

     label07:
        goto label09;

     label08:
        $r80 := @caughtexception;

        $r81 = new javax.ws.rs.NotAcceptableException;

        specialinvoke $r81.<javax.ws.rs.NotAcceptableException: void <init>()>();

        throw $r81;

     label09:
        $r11 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        interfaceinvoke $r11.<org.apache.cxf.message.Exchange: java.lang.Object put(java.lang.Object,java.lang.Object)>("Accept", $r86);

        $r12 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r13 = interfaceinvoke $r12.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Class)>(class "Lorg/apache/cxf/service/Service;");

        r87 = (org.apache.cxf.service.Service) $r13;

        $r14 = (org.apache.cxf.jaxrs.JAXRSServiceImpl) r87;

        $r15 = virtualinvoke $r14.<org.apache.cxf.jaxrs.JAXRSServiceImpl: java.util.List getClassResourceInfos()>();

        $r16 = new org.apache.cxf.jaxrs.impl.MetadataMap;

        specialinvoke $r16.<org.apache.cxf.jaxrs.impl.MetadataMap: void <init>()>();

        $r17 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: org.apache.cxf.jaxrs.model.ClassResourceInfo selectResourceClass(java.util.List,java.lang.String,javax.ws.rs.core.MultivaluedMap,org.apache.cxf.message.Message)>($r15, $r4, $r16, r0);

        if $r17 != null goto label10;

        $r57 = new org.apache.cxf.common.i18n.Message;

        $r59 = <org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor: java.util.ResourceBundle BUNDLE>;

        $r58 = newarray (java.lang.Object)[2];

        $r60 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>("org.apache.cxf.request.uri");

        $r58[0] = $r60;

        $r58[1] = $r4;

        specialinvoke $r57.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.ResourceBundle,java.lang.Object[])>("NO_ROOT_EXC", $r59, $r58);

        $r61 = <org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor: java.util.logging.Logger LOG>;

        $r62 = virtualinvoke $r57.<org.apache.cxf.common.i18n.Message: java.lang.String toString()>();

        virtualinvoke $r61.<java.util.logging.Logger: void warning(java.lang.String)>($r62);

        $r63 = virtualinvoke $r57.<org.apache.cxf.common.i18n.Message: java.lang.String toString()>();

        $r64 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status NOT_FOUND>;

        $i3 = virtualinvoke $r64.<javax.ws.rs.core.Response$Status: int getStatusCode()>();

        $r65 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: javax.ws.rs.core.Response createResponse(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.message.Message,java.lang.String,int,boolean)>(null, r0, $r63, $i3, 0);

        $r66 = new javax.ws.rs.NotFoundException;

        specialinvoke $r66.<javax.ws.rs.NotFoundException: void <init>(javax.ws.rs.core.Response)>($r65);

        throw $r66;

     label10:
        $r18 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        interfaceinvoke $r18.<org.apache.cxf.message.Exchange: java.lang.Object put(java.lang.Object,java.lang.Object)>("root.resource.class", $r17);

        r88 = null;

        z5 = 0;

        $r19 = virtualinvoke $r1.<org.apache.cxf.jaxrs.provider.ProviderFactory: java.util.List getRequestHandlers()>();

        $r20 = interfaceinvoke $r19.<java.util.List: java.util.Iterator iterator()>();

     label11:
        $z1 = interfaceinvoke $r20.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label17;

        $r54 = interfaceinvoke $r20.<java.util.Iterator: java.lang.Object next()>();

        r89 = (org.apache.cxf.jaxrs.model.ProviderInfo) $r54;

        if r88 != null goto label15;

        if z5 != 0 goto label15;

     label12:
        $r56 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: org.apache.cxf.jaxrs.model.OperationResourceInfo findTargetMethod(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.message.Message,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.String,java.util.List,boolean)>($r17, r0, $r3, $r16, r82, $r86, 0);

        r88 = $r56;

        $i2 = interfaceinvoke $r15.<java.util.List: int size()>();

        specialinvoke r23.<org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor: void setExchangeProperties(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.OperationResourceInfo,javax.ws.rs.core.MultivaluedMap,int)>(r0, $r56, $r16, $i2);

     label13:
        goto label15;

     label14:
        $r79 := @caughtexception;

        z5 = 1;

     label15:
        $r90 = virtualinvoke r89.<org.apache.cxf.jaxrs.model.ProviderInfo: java.lang.Object getProvider()>();

        staticinvoke <org.apache.cxf.jaxrs.utils.InjectionUtils: void injectContexts(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)>($r90, r89, r0);

        $r91 = virtualinvoke r89.<org.apache.cxf.jaxrs.model.ProviderInfo: java.lang.Object getProvider()>();

        $r92 = (org.apache.cxf.jaxrs.ext.RequestHandler) $r91;

        $r93 = interfaceinvoke $r92.<org.apache.cxf.jaxrs.ext.RequestHandler: javax.ws.rs.core.Response handleRequest(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.ClassResourceInfo)>(r0, $r17);

        if $r93 == null goto label16;

        $r55 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        interfaceinvoke $r55.<org.apache.cxf.message.Exchange: void put(java.lang.Class,java.lang.Object)>(class "Ljavax/ws/rs/core/Response;", $r93);

        return;

     label16:
        goto label11;

     label17:
        if r88 != null goto label22;

     label18:
        $r53 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: org.apache.cxf.jaxrs.model.OperationResourceInfo findTargetMethod(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.message.Message,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.String,java.util.List,boolean)>($r17, r0, $r3, $r16, r82, $r86, 1);

        r88 = $r53;

        $i1 = interfaceinvoke $r15.<java.util.List: int size()>();

        specialinvoke r23.<org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor: void setExchangeProperties(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.OperationResourceInfo,javax.ws.rs.core.MultivaluedMap,int)>(r0, $r53, $r16, $i1);

     label19:
        goto label22;

     label20:
        $r75 := @caughtexception;

        $r76 = virtualinvoke $r75.<javax.ws.rs.WebApplicationException: javax.ws.rs.core.Response getResponse()>();

        $z4 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: boolean noResourceMethodForOptions(javax.ws.rs.core.Response,java.lang.String)>($r76, $r3);

        if $z4 == 0 goto label21;

        $r77 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: javax.ws.rs.core.Response createResponse(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.message.Message,java.lang.String,int,boolean)>($r17, null, null, 200, 1);

        $r78 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        interfaceinvoke $r78.<org.apache.cxf.message.Exchange: void put(java.lang.Class,java.lang.Object)>(class "Ljavax/ws/rs/core/Response;", $r77);

        return;

     label21:
        throw $r75;

     label22:
        $r22 = <org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor: java.util.logging.Logger LOG>;

        $r21 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z2 = virtualinvoke $r22.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r21);

        if $z2 == 0 goto label23;

        $r27 = <org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor: java.util.logging.Logger LOG>;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Request path is: ");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r27.<java.util.logging.Logger: void fine(java.lang.String)>($r30);

        $r32 = <org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor: java.util.logging.Logger LOG>;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Request HTTP method is: ");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r32.<java.util.logging.Logger: void fine(java.lang.String)>($r35);

        $r37 = <org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor: java.util.logging.Logger LOG>;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Request contentType is: ");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r82);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r37.<java.util.logging.Logger: void fine(java.lang.String)>($r40);

        $r42 = <org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor: java.util.logging.Logger LOG>;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Accept contentType is: ");

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r83);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r42.<java.util.logging.Logger: void fine(java.lang.String)>($r45);

        $r47 = <org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor: java.util.logging.Logger LOG>;

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found operation: ");

        $r49 = virtualinvoke r88.<org.apache.cxf.jaxrs.model.OperationResourceInfo: java.lang.reflect.Method getMethodToInvoke()>();

        $r50 = virtualinvoke $r49.<java.lang.reflect.Method: java.lang.String getName()>();

        $r51 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r47.<java.util.logging.Logger: void fine(java.lang.String)>($r52);

     label23:
        $i0 = interfaceinvoke $r15.<java.util.List: int size()>();

        specialinvoke r23.<org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor: void setExchangeProperties(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.OperationResourceInfo,javax.ws.rs.core.MultivaluedMap,int)>(r0, r88, $r16, $i0);

        $r24 = virtualinvoke r88.<org.apache.cxf.jaxrs.model.OperationResourceInfo: java.util.List getNameBindings()>();

        $z3 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: boolean runContainerRequestFilters(org.apache.cxf.jaxrs.provider.ProviderFactory,org.apache.cxf.message.Message,boolean,java.util.List)>($r1, r0, 0, $r24);

        if $z3 == 0 goto label24;

        return;

     label24:
        $r25 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.List processParameters(org.apache.cxf.jaxrs.model.OperationResourceInfo,javax.ws.rs.core.MultivaluedMap,org.apache.cxf.message.Message)>(r88, $r16, r0);

        interfaceinvoke r0.<org.apache.cxf.message.Message: void setContent(java.lang.Class,java.lang.Object)>(class "Ljava/util/List;", $r25);

     label25:
        goto label27;

     label26:
        $r74 := @caughtexception;

        specialinvoke r23.<org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor: void convertExceptionToResponseIfPossible(java.lang.Throwable,org.apache.cxf.message.Message)>($r74, r0);

     label27:
        return;

        catch java.lang.IllegalArgumentException from label06 to label07 with label08;
        catch javax.ws.rs.WebApplicationException from label12 to label13 with label14;
        catch javax.ws.rs.WebApplicationException from label18 to label19 with label20;
        catch java.io.IOException from label24 to label25 with label26;
    }

    private void convertExceptionToResponseIfPossible(java.lang.Throwable, org.apache.cxf.message.Message)
    {
        java.lang.Throwable r0;
        org.apache.cxf.message.Message r1;
        javax.ws.rs.InternalServerErrorException $r10;
        org.apache.cxf.jaxrs.provider.ProviderFactory $r4;
        java.lang.RuntimeException $r9;
        org.apache.cxf.message.Exchange $r3, $r5;
        javax.ws.rs.core.Response $r2;
        java.lang.Boolean $r7;
        org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor r8;
        java.lang.String $r6;
        boolean $z0, $z1;

        r8 := @this: org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor;

        r0 := @parameter0: java.lang.Throwable;

        r1 := @parameter1: org.apache.cxf.message.Message;

        $r2 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: javax.ws.rs.core.Response convertFaultToResponse(java.lang.Throwable,org.apache.cxf.message.Message)>(r0, r1);

        if $r2 != null goto label3;

        $r4 = staticinvoke <org.apache.cxf.jaxrs.provider.ProviderFactory: org.apache.cxf.jaxrs.provider.ProviderFactory getInstance(org.apache.cxf.message.Message)>(r1);

        virtualinvoke $r4.<org.apache.cxf.jaxrs.provider.ProviderFactory: void clearThreadLocalProxies()>();

        $r5 = interfaceinvoke r1.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r6 = <org.apache.cxf.message.Message: java.lang.String PROPOGATE_EXCEPTION>;

        $z0 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: boolean propogateException(org.apache.cxf.message.Message)>(r1);

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        interfaceinvoke $r5.<org.apache.cxf.message.Exchange: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r7);

        $z1 = r0 instanceof java.lang.RuntimeException;

        if $z1 == 0 goto label1;

        $r9 = (java.lang.RuntimeException) r0;

        goto label2;

     label1:
        $r10 = new javax.ws.rs.InternalServerErrorException;

        $r9 = $r10;

        specialinvoke $r10.<javax.ws.rs.InternalServerErrorException: void <init>(java.lang.Throwable)>(r0);

     label2:
        throw $r9;

     label3:
        $r3 = interfaceinvoke r1.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        interfaceinvoke $r3.<org.apache.cxf.message.Exchange: void put(java.lang.Class,java.lang.Object)>(class "Ljavax/ws/rs/core/Response;", $r2);

        return;
    }

    private void setExchangeProperties(org.apache.cxf.message.Message, org.apache.cxf.jaxrs.model.OperationResourceInfo, javax.ws.rs.core.MultivaluedMap, int)
    {
        org.apache.cxf.jaxrs.model.OperationResourceInfo r2;
        int i0;
        java.lang.String $r6, $r9, $r13, r18;
        java.lang.reflect.Method $r3, $r5;
        boolean $z0, $z1, $z2;
        org.apache.cxf.message.Message r0;
        org.apache.cxf.message.Exchange $r1, $r7, $r8;
        javax.ws.rs.core.MultivaluedMap r4;
        org.apache.cxf.jaxrs.model.ClassResourceInfo $r11;
        org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor r17;
        java.lang.StringBuilder $r10, $r14, $r15, $r16;
        java.lang.Class $r12;

        r17 := @this: org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor;

        r0 := @parameter0: org.apache.cxf.message.Message;

        r2 := @parameter1: org.apache.cxf.jaxrs.model.OperationResourceInfo;

        r4 := @parameter2: javax.ws.rs.core.MultivaluedMap;

        i0 := @parameter3: int;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        interfaceinvoke $r1.<org.apache.cxf.message.Exchange: void put(java.lang.Class,java.lang.Object)>(class "Lorg/apache/cxf/jaxrs/model/OperationResourceInfo;", r2);

        $r3 = virtualinvoke r2.<org.apache.cxf.jaxrs.model.OperationResourceInfo: java.lang.reflect.Method getMethodToInvoke()>();

        interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.apache.cxf.resource.method", $r3);

        interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>("jaxrs.template.parameters", r4);

        $r5 = virtualinvoke r2.<org.apache.cxf.jaxrs.model.OperationResourceInfo: java.lang.reflect.Method getMethodToInvoke()>();

        $r6 = virtualinvoke $r5.<java.lang.reflect.Method: java.lang.String getName()>();

        r18 = $r6;

        if i0 <= 1 goto label1;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke r2.<org.apache.cxf.jaxrs.model.OperationResourceInfo: org.apache.cxf.jaxrs.model.ClassResourceInfo getClassResourceInfo()>();

        $r12 = virtualinvoke $r11.<org.apache.cxf.jaxrs.model.ClassResourceInfo: java.lang.Class getServiceClass()>();

        $r13 = virtualinvoke $r12.<java.lang.Class: java.lang.String getSimpleName()>();

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r7 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        interfaceinvoke $r7.<org.apache.cxf.message.Exchange: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.apache.cxf.resource.operation.name", r18);

        $z0 = virtualinvoke r2.<org.apache.cxf.jaxrs.model.OperationResourceInfo: boolean isOneway()>();

        if $z0 != 0 goto label2;

        $r9 = staticinvoke <org.apache.cxf.jaxrs.utils.HttpUtils: java.lang.String getProtocolHeader(org.apache.cxf.message.Message,java.lang.String,java.lang.String)>(r0, "OnewayRequest", null);

        $z1 = staticinvoke <org.apache.cxf.message.MessageUtils: boolean isTrue(java.lang.Object)>($r9);

        if $z1 == 0 goto label3;

     label2:
        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        $r8 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        interfaceinvoke $r8.<org.apache.cxf.message.Exchange: void setOneWay(boolean)>($z2);

        return;
    }

    public void handleFault(org.apache.cxf.message.Message)
    {
        org.apache.cxf.jaxrs.lifecycle.ResourceProvider $r3;
        org.apache.cxf.interceptor.InterceptorChain $r6, $r10;
        boolean $z0, $z1, $z2;
        org.apache.cxf.logging.NoOpFaultListener $r18;
        java.util.logging.Logger $r22, $r28;
        javax.ws.rs.core.Response $r5;
        org.apache.cxf.jaxrs.model.ClassResourceInfo $r36;
        java.lang.StringBuilder $r21, $r23, $r25;
        java.lang.Throwable $r20, r27;
        org.apache.cxf.jaxrs.provider.ProviderFactory $r33;
        org.apache.cxf.interceptor.Fault $r19;
        org.apache.cxf.interceptor.OutgoingChainInterceptor $r15;
        java.lang.String $r8, $r17, $r24, $r26;
        java.util.Iterator $r11;
        org.apache.cxf.interceptor.Interceptor r13;
        org.apache.cxf.message.Message r1;
        org.apache.cxf.message.Exchange $r29, $r31, $r34;
        org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor r0;
        java.lang.Object $r2, $r4, $r9, $r12, $r30, $r32, $r35;
        java.lang.Class $r7, $r14, $r16;

        r0 := @this: org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor;

        r1 := @parameter0: org.apache.cxf.message.Message;

        specialinvoke r0.<org.apache.cxf.phase.AbstractPhaseInterceptor: void handleFault(org.apache.cxf.message.Message)>(r1);

        $r2 = interfaceinvoke r1.<org.apache.cxf.message.Message: java.lang.Object getContextualProperty(java.lang.String)>("map.cxf.interceptor.fault");

        $z0 = staticinvoke <org.apache.cxf.message.MessageUtils: boolean isTrue(java.lang.Object)>($r2);

        if $z0 == 0 goto label05;

        $r4 = interfaceinvoke r1.<org.apache.cxf.message.Message: java.lang.Object getContent(java.lang.Class)>(class "Ljava/lang/Exception;");

        r27 = (java.lang.Throwable) $r4;

        $z1 = r27 instanceof org.apache.cxf.interceptor.Fault;

        if $z1 == 0 goto label01;

        $r19 = (org.apache.cxf.interceptor.Fault) r27;

        r27 = virtualinvoke $r19.<org.apache.cxf.interceptor.Fault: java.lang.Throwable getCause()>();

     label01:
        $r5 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: javax.ws.rs.core.Response convertFaultToResponse(java.lang.Throwable,org.apache.cxf.message.Message)>(r27, r1);

        if $r5 == null goto label05;

        interfaceinvoke r1.<org.apache.cxf.message.Message: void removeContent(java.lang.Class)>(class "Ljava/lang/Exception;");

        $r6 = interfaceinvoke r1.<org.apache.cxf.message.Message: org.apache.cxf.interceptor.InterceptorChain getInterceptorChain()>();

        interfaceinvoke $r6.<org.apache.cxf.interceptor.InterceptorChain: void setFaultObserver(org.apache.cxf.transport.MessageObserver)>(null);

        $r7 = class "Lorg/apache/cxf/logging/FaultListener;";

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        $r9 = interfaceinvoke r1.<org.apache.cxf.message.Message: java.lang.Object getContextualProperty(java.lang.String)>($r8);

        if $r9 != null goto label02;

        $r16 = class "Lorg/apache/cxf/logging/FaultListener;";

        $r17 = virtualinvoke $r16.<java.lang.Class: java.lang.String getName()>();

        $r18 = new org.apache.cxf.logging.NoOpFaultListener;

        specialinvoke $r18.<org.apache.cxf.logging.NoOpFaultListener: void <init>()>();

        interfaceinvoke r1.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>($r17, $r18);

     label02:
        specialinvoke r0.<org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor: org.apache.cxf.message.Message createOutMessage(org.apache.cxf.message.Message,javax.ws.rs.core.Response)>(r1, $r5);

        $r10 = interfaceinvoke r1.<org.apache.cxf.message.Message: org.apache.cxf.interceptor.InterceptorChain getInterceptorChain()>();

        $r11 = interfaceinvoke $r10.<org.apache.cxf.interceptor.InterceptorChain: java.util.Iterator iterator()>();

     label03:
        $z2 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label05;

        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r13 = (org.apache.cxf.interceptor.Interceptor) $r12;

        $r14 = virtualinvoke r13.<java.lang.Object: java.lang.Class getClass()>();

        if $r14 != class "Lorg/apache/cxf/interceptor/OutgoingChainInterceptor;" goto label04;

        $r15 = (org.apache.cxf.interceptor.OutgoingChainInterceptor) r13;

        virtualinvoke $r15.<org.apache.cxf.interceptor.OutgoingChainInterceptor: void handleMessage(org.apache.cxf.message.Message)>(r1);

        return;

     label04:
        goto label03;

     label05:
        $r28 = <org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor: java.util.logging.Logger LOG>;

        virtualinvoke $r28.<java.util.logging.Logger: void fine(java.lang.String)>("Cleanup thread local variables");

        $r29 = interfaceinvoke r1.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r30 = interfaceinvoke $r29.<org.apache.cxf.message.Exchange: java.lang.Object remove(java.lang.Object)>("service.root.instance");

        $r31 = interfaceinvoke r1.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r32 = interfaceinvoke $r31.<org.apache.cxf.message.Exchange: java.lang.Object remove(java.lang.Object)>("service.root.provider");

        if $r30 == null goto label09;

        if $r32 == null goto label09;

     label06:
        $r3 = (org.apache.cxf.jaxrs.lifecycle.ResourceProvider) $r32;

        interfaceinvoke $r3.<org.apache.cxf.jaxrs.lifecycle.ResourceProvider: void releaseInstance(org.apache.cxf.message.Message,java.lang.Object)>(r1, $r30);

     label07:
        goto label09;

     label08:
        $r20 := @caughtexception;

        $r22 = <org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor: java.util.logging.Logger LOG>;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception occurred during releasing the service instance, ");

        $r24 = virtualinvoke $r20.<java.lang.Throwable: java.lang.String getMessage()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r22.<java.util.logging.Logger: void warning(java.lang.String)>($r26);

     label09:
        $r33 = staticinvoke <org.apache.cxf.jaxrs.provider.ProviderFactory: org.apache.cxf.jaxrs.provider.ProviderFactory getInstance(org.apache.cxf.message.Message)>(r1);

        virtualinvoke $r33.<org.apache.cxf.jaxrs.provider.ProviderFactory: void clearThreadLocalProxies()>();

        $r34 = interfaceinvoke r1.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r35 = interfaceinvoke $r34.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Object)>("root.resource.class");

        $r36 = (org.apache.cxf.jaxrs.model.ClassResourceInfo) $r35;

        if $r36 == null goto label10;

        virtualinvoke $r36.<org.apache.cxf.jaxrs.model.ClassResourceInfo: void clearThreadLocalProxies()>();

     label10:
        return;

        catch java.lang.Throwable from label06 to label07 with label08;
    }

    private org.apache.cxf.message.Message createOutMessage(org.apache.cxf.message.Message, javax.ws.rs.core.Response)
    {
        org.apache.cxf.message.MessageImpl $r4;
        java.lang.Object[] $r6;
        org.apache.cxf.interceptor.InterceptorChain $r12;
        org.apache.cxf.message.Message r0, $r10;
        org.apache.cxf.binding.Binding $r9;
        org.apache.cxf.message.MessageContentsList $r5;
        org.apache.cxf.message.Exchange $r1, $r8, $r11, $r13;
        org.apache.cxf.endpoint.Endpoint r3;
        javax.ws.rs.core.Response r7;
        org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor r14;
        java.lang.Object $r2;

        r14 := @this: org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor;

        r0 := @parameter0: org.apache.cxf.message.Message;

        r7 := @parameter1: javax.ws.rs.core.Response;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r2 = interfaceinvoke $r1.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Class)>(class "Lorg/apache/cxf/endpoint/Endpoint;");

        r3 = (org.apache.cxf.endpoint.Endpoint) $r2;

        $r4 = new org.apache.cxf.message.MessageImpl;

        specialinvoke $r4.<org.apache.cxf.message.MessageImpl: void <init>()>();

        $r5 = new org.apache.cxf.message.MessageContentsList;

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = r7;

        specialinvoke $r5.<org.apache.cxf.message.MessageContentsList: void <init>(java.lang.Object[])>($r6);

        interfaceinvoke $r4.<org.apache.cxf.message.Message: void setContent(java.lang.Class,java.lang.Object)>(class "Ljava/util/List;", $r5);

        $r8 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        interfaceinvoke $r4.<org.apache.cxf.message.Message: void setExchange(org.apache.cxf.message.Exchange)>($r8);

        $r9 = interfaceinvoke r3.<org.apache.cxf.endpoint.Endpoint: org.apache.cxf.binding.Binding getBinding()>();

        $r10 = interfaceinvoke $r9.<org.apache.cxf.binding.Binding: org.apache.cxf.message.Message createMessage(org.apache.cxf.message.Message)>($r4);

        $r11 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r12 = staticinvoke <org.apache.cxf.interceptor.OutgoingChainInterceptor: org.apache.cxf.interceptor.InterceptorChain getOutInterceptorChain(org.apache.cxf.message.Exchange)>($r11);

        interfaceinvoke $r10.<org.apache.cxf.message.Message: void setInterceptorChain(org.apache.cxf.interceptor.InterceptorChain)>($r12);

        $r13 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        interfaceinvoke $r13.<org.apache.cxf.message.Exchange: void setOutMessage(org.apache.cxf.message.Message)>($r10);

        return $r10;
    }

    static void <clinit>()
    {
        java.util.logging.Logger $r0;
        java.util.ResourceBundle $r1;

        <org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor: java.lang.String RESOURCE_OPERATION_NAME> = "org.apache.cxf.resource.operation.name";

        <org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor: java.lang.String RESOURCE_METHOD> = "org.apache.cxf.resource.method";

        $r0 = staticinvoke <org.apache.cxf.common.logging.LogUtils: java.util.logging.Logger getL7dLogger(java.lang.Class)>(class "Lorg/apache/cxf/jaxrs/interceptor/JAXRSInInterceptor;");

        <org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor: java.util.logging.Logger LOG> = $r0;

        $r1 = staticinvoke <org.apache.cxf.common.i18n.BundleUtils: java.util.ResourceBundle getBundle(java.lang.Class)>(class "Lorg/apache/cxf/jaxrs/interceptor/JAXRSInInterceptor;");

        <org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor: java.util.ResourceBundle BUNDLE> = $r1;

        return;
    }
}
