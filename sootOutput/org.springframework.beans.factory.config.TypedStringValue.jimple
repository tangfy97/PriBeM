public class org.springframework.beans.factory.config.TypedStringValue extends java.lang.Object implements org.springframework.beans.BeanMetadataElement
{
    private java.lang.String value;
    private volatile java.lang.Object targetType;
    private java.lang.Object source;
    private java.lang.String specifiedTypeName;
    private volatile boolean dynamic;

    public void <init>(java.lang.String)
    {
        org.springframework.beans.factory.config.TypedStringValue r0;
        java.lang.String r1;

        r0 := @this: org.springframework.beans.factory.config.TypedStringValue;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        virtualinvoke r0.<org.springframework.beans.factory.config.TypedStringValue: void setValue(java.lang.String)>(r1);

        return;
    }

    public void <init>(java.lang.String, java.lang.Class)
    {
        org.springframework.beans.factory.config.TypedStringValue r0;
        java.lang.Class r2;
        java.lang.String r1;

        r0 := @this: org.springframework.beans.factory.config.TypedStringValue;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Class;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        virtualinvoke r0.<org.springframework.beans.factory.config.TypedStringValue: void setValue(java.lang.String)>(r1);

        virtualinvoke r0.<org.springframework.beans.factory.config.TypedStringValue: void setTargetType(java.lang.Class)>(r2);

        return;
    }

    public void <init>(java.lang.String, java.lang.String)
    {
        org.springframework.beans.factory.config.TypedStringValue r0;
        java.lang.String r1, r2;

        r0 := @this: org.springframework.beans.factory.config.TypedStringValue;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        virtualinvoke r0.<org.springframework.beans.factory.config.TypedStringValue: void setValue(java.lang.String)>(r1);

        virtualinvoke r0.<org.springframework.beans.factory.config.TypedStringValue: void setTargetTypeName(java.lang.String)>(r2);

        return;
    }

    public void setValue(java.lang.String)
    {
        org.springframework.beans.factory.config.TypedStringValue r0;
        java.lang.String r1;

        r0 := @this: org.springframework.beans.factory.config.TypedStringValue;

        r1 := @parameter0: java.lang.String;

        r0.<org.springframework.beans.factory.config.TypedStringValue: java.lang.String value> = r1;

        return;
    }

    public java.lang.String getValue()
    {
        org.springframework.beans.factory.config.TypedStringValue r0;
        java.lang.String $r1;

        r0 := @this: org.springframework.beans.factory.config.TypedStringValue;

        $r1 = r0.<org.springframework.beans.factory.config.TypedStringValue: java.lang.String value>;

        return $r1;
    }

    public void setTargetType(java.lang.Class)
    {
        org.springframework.beans.factory.config.TypedStringValue r1;
        java.lang.Class r0;

        r1 := @this: org.springframework.beans.factory.config.TypedStringValue;

        r0 := @parameter0: java.lang.Class;

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r0, "\'targetType\' must not be null");

        r1.<org.springframework.beans.factory.config.TypedStringValue: java.lang.Object targetType> = r0;

        return;
    }

    public java.lang.Class getTargetType()
    {
        java.lang.IllegalStateException $r3;
        org.springframework.beans.factory.config.TypedStringValue r0;
        java.lang.Object r1;
        java.lang.Class $r2;
        boolean $z0;

        r0 := @this: org.springframework.beans.factory.config.TypedStringValue;

        r1 = r0.<org.springframework.beans.factory.config.TypedStringValue: java.lang.Object targetType>;

        $z0 = r1 instanceof java.lang.Class;

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Typed String value does not carry a resolved target type");

        throw $r3;

     label1:
        $r2 = (java.lang.Class) r1;

        return $r2;
    }

    public void setTargetTypeName(java.lang.String)
    {
        org.springframework.beans.factory.config.TypedStringValue r1;
        java.lang.String r0;

        r1 := @this: org.springframework.beans.factory.config.TypedStringValue;

        r0 := @parameter0: java.lang.String;

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r0, "\'targetTypeName\' must not be null");

        r1.<org.springframework.beans.factory.config.TypedStringValue: java.lang.Object targetType> = r0;

        return;
    }

    public java.lang.String getTargetTypeName()
    {
        org.springframework.beans.factory.config.TypedStringValue r0;
        java.lang.Object r1;
        java.lang.Class $r3;
        java.lang.String $r2, $r4;
        boolean $z0;

        r0 := @this: org.springframework.beans.factory.config.TypedStringValue;

        r1 = r0.<org.springframework.beans.factory.config.TypedStringValue: java.lang.Object targetType>;

        $z0 = r1 instanceof java.lang.Class;

        if $z0 == 0 goto label1;

        $r3 = (java.lang.Class) r1;

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        return $r4;

     label1:
        $r2 = (java.lang.String) r1;

        return $r2;
    }

    public boolean hasTargetType()
    {
        org.springframework.beans.factory.config.TypedStringValue r0;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: org.springframework.beans.factory.config.TypedStringValue;

        $r1 = r0.<org.springframework.beans.factory.config.TypedStringValue: java.lang.Object targetType>;

        $z0 = $r1 instanceof java.lang.Class;

        return $z0;
    }

    public java.lang.Class resolveTargetType(java.lang.ClassLoader) throws java.lang.ClassNotFoundException
    {
        org.springframework.beans.factory.config.TypedStringValue r0;
        java.lang.Object $r1;
        java.lang.Class $r4;
        java.lang.String $r2;
        java.lang.ClassLoader r3;

        r0 := @this: org.springframework.beans.factory.config.TypedStringValue;

        r3 := @parameter0: java.lang.ClassLoader;

        $r1 = r0.<org.springframework.beans.factory.config.TypedStringValue: java.lang.Object targetType>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke r0.<org.springframework.beans.factory.config.TypedStringValue: java.lang.String getTargetTypeName()>();

        $r4 = staticinvoke <org.springframework.util.ClassUtils: java.lang.Class forName(java.lang.String,java.lang.ClassLoader)>($r2, r3);

        r0.<org.springframework.beans.factory.config.TypedStringValue: java.lang.Object targetType> = $r4;

        return $r4;
    }

    public void setSource(java.lang.Object)
    {
        org.springframework.beans.factory.config.TypedStringValue r0;
        java.lang.Object r1;

        r0 := @this: org.springframework.beans.factory.config.TypedStringValue;

        r1 := @parameter0: java.lang.Object;

        r0.<org.springframework.beans.factory.config.TypedStringValue: java.lang.Object source> = r1;

        return;
    }

    public java.lang.Object getSource()
    {
        org.springframework.beans.factory.config.TypedStringValue r0;
        java.lang.Object $r1;

        r0 := @this: org.springframework.beans.factory.config.TypedStringValue;

        $r1 = r0.<org.springframework.beans.factory.config.TypedStringValue: java.lang.Object source>;

        return $r1;
    }

    public void setSpecifiedTypeName(java.lang.String)
    {
        org.springframework.beans.factory.config.TypedStringValue r0;
        java.lang.String r1;

        r0 := @this: org.springframework.beans.factory.config.TypedStringValue;

        r1 := @parameter0: java.lang.String;

        r0.<org.springframework.beans.factory.config.TypedStringValue: java.lang.String specifiedTypeName> = r1;

        return;
    }

    public java.lang.String getSpecifiedTypeName()
    {
        org.springframework.beans.factory.config.TypedStringValue r0;
        java.lang.String $r1;

        r0 := @this: org.springframework.beans.factory.config.TypedStringValue;

        $r1 = r0.<org.springframework.beans.factory.config.TypedStringValue: java.lang.String specifiedTypeName>;

        return $r1;
    }

    public void setDynamic()
    {
        org.springframework.beans.factory.config.TypedStringValue r0;

        r0 := @this: org.springframework.beans.factory.config.TypedStringValue;

        r0.<org.springframework.beans.factory.config.TypedStringValue: boolean dynamic> = 1;

        return;
    }

    public boolean isDynamic()
    {
        org.springframework.beans.factory.config.TypedStringValue r0;
        boolean $z0;

        r0 := @this: org.springframework.beans.factory.config.TypedStringValue;

        $z0 = r0.<org.springframework.beans.factory.config.TypedStringValue: boolean dynamic>;

        return $z0;
    }

    public boolean equals(java.lang.Object)
    {
        org.springframework.beans.factory.config.TypedStringValue r0, r2;
        java.lang.Object r1, $r5, $r6;
        java.lang.String $r3, $r4;
        boolean $z0, $z1, $z2;

        r0 := @this: org.springframework.beans.factory.config.TypedStringValue;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof org.springframework.beans.factory.config.TypedStringValue;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (org.springframework.beans.factory.config.TypedStringValue) r1;

        $r4 = r0.<org.springframework.beans.factory.config.TypedStringValue: java.lang.String value>;

        $r3 = r2.<org.springframework.beans.factory.config.TypedStringValue: java.lang.String value>;

        $z1 = staticinvoke <org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>($r4, $r3);

        if $z1 == 0 goto label3;

        $r6 = r0.<org.springframework.beans.factory.config.TypedStringValue: java.lang.Object targetType>;

        $r5 = r2.<org.springframework.beans.factory.config.TypedStringValue: java.lang.Object targetType>;

        $z2 = staticinvoke <org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>($r6, $r5);

        if $z2 == 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    public int hashCode()
    {
        org.springframework.beans.factory.config.TypedStringValue r0;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r2;
        java.lang.String $r1;

        r0 := @this: org.springframework.beans.factory.config.TypedStringValue;

        $r1 = r0.<org.springframework.beans.factory.config.TypedStringValue: java.lang.String value>;

        $i0 = staticinvoke <org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>($r1);

        $i1 = $i0 * 29;

        $r2 = r0.<org.springframework.beans.factory.config.TypedStringValue: java.lang.Object targetType>;

        $i2 = staticinvoke <org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>($r2);

        $i3 = $i1 + $i2;

        return $i3;
    }

    public java.lang.String toString()
    {
        org.springframework.beans.factory.config.TypedStringValue r1;
        java.lang.StringBuilder $r0, $r3, $r4, $r6, $r7;
        java.lang.Object $r5;
        java.lang.String $r2, $r8;

        r1 := @this: org.springframework.beans.factory.config.TypedStringValue;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("TypedStringValue: value [");

        $r2 = r1.<org.springframework.beans.factory.config.TypedStringValue: java.lang.String value>;

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("], target type [");

        $r5 = r1.<org.springframework.beans.factory.config.TypedStringValue: java.lang.Object targetType>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }
}
