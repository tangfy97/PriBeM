public class javax.xml.transform.TransformerException extends java.lang.Exception
{
    private static final long serialVersionUID;
    javax.xml.transform.SourceLocator locator;
    java.lang.Throwable containedException;
    static java.lang.Class class$java$lang$Throwable;

    public javax.xml.transform.SourceLocator getLocator()
    {
        javax.xml.transform.SourceLocator $r1;
        javax.xml.transform.TransformerException r0;

        r0 := @this: javax.xml.transform.TransformerException;

        $r1 = r0.<javax.xml.transform.TransformerException: javax.xml.transform.SourceLocator locator>;

        return $r1;
    }

    public void setLocator(javax.xml.transform.SourceLocator)
    {
        javax.xml.transform.SourceLocator r1;
        javax.xml.transform.TransformerException r0;

        r0 := @this: javax.xml.transform.TransformerException;

        r1 := @parameter0: javax.xml.transform.SourceLocator;

        r0.<javax.xml.transform.TransformerException: javax.xml.transform.SourceLocator locator> = r1;

        return;
    }

    public java.lang.Throwable getException()
    {
        java.lang.Throwable $r1;
        javax.xml.transform.TransformerException r0;

        r0 := @this: javax.xml.transform.TransformerException;

        $r1 = r0.<javax.xml.transform.TransformerException: java.lang.Throwable containedException>;

        return $r1;
    }

    public java.lang.Throwable getCause()
    {
        java.lang.Throwable $r1, $r2;
        javax.xml.transform.TransformerException r0;

        r0 := @this: javax.xml.transform.TransformerException;

        $r1 = r0.<javax.xml.transform.TransformerException: java.lang.Throwable containedException>;

        if $r1 != r0 goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r2 = r0.<javax.xml.transform.TransformerException: java.lang.Throwable containedException>;

     label2:
        return $r2;
    }

    public synchronized java.lang.Throwable initCause(java.lang.Throwable)
    {
        java.lang.Throwable $r1, r2;
        java.lang.IllegalStateException $r4;
        javax.xml.transform.TransformerException r0;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: javax.xml.transform.TransformerException;

        r2 := @parameter0: java.lang.Throwable;

        $r1 = r0.<javax.xml.transform.TransformerException: java.lang.Throwable containedException>;

        if $r1 == null goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Can\'t overwrite cause");

        throw $r4;

     label1:
        if r2 != r0 goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Self-causation not permitted");

        throw $r3;

     label2:
        r0.<javax.xml.transform.TransformerException: java.lang.Throwable containedException> = r2;

        return r0;
    }

    public void <init>(java.lang.String)
    {
        java.lang.String r1;
        javax.xml.transform.TransformerException r0;

        r0 := @this: javax.xml.transform.TransformerException;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String)>(r1);

        r0.<javax.xml.transform.TransformerException: java.lang.Throwable containedException> = null;

        r0.<javax.xml.transform.TransformerException: javax.xml.transform.SourceLocator locator> = null;

        return;
    }

    public void <init>(java.lang.Throwable)
    {
        java.lang.Throwable r1;
        java.lang.String $r2;
        javax.xml.transform.TransformerException r0;

        r0 := @this: javax.xml.transform.TransformerException;

        r1 := @parameter0: java.lang.Throwable;

        $r2 = virtualinvoke r1.<java.lang.Throwable: java.lang.String toString()>();

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String)>($r2);

        r0.<javax.xml.transform.TransformerException: java.lang.Throwable containedException> = r1;

        r0.<javax.xml.transform.TransformerException: javax.xml.transform.SourceLocator locator> = null;

        return;
    }

    public void <init>(java.lang.String, java.lang.Throwable)
    {
        java.lang.Throwable r2;
        javax.xml.transform.TransformerException r0;
        int $i0;
        java.lang.String r1, $r3;

        r0 := @this: javax.xml.transform.TransformerException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        $r3 = virtualinvoke r2.<java.lang.Throwable: java.lang.String toString()>();

        goto label3;

     label2:
        $r3 = r1;

     label3:
        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String)>($r3);

        r0.<javax.xml.transform.TransformerException: java.lang.Throwable containedException> = r2;

        r0.<javax.xml.transform.TransformerException: javax.xml.transform.SourceLocator locator> = null;

        return;
    }

    public void <init>(java.lang.String, javax.xml.transform.SourceLocator)
    {
        javax.xml.transform.SourceLocator r2;
        java.lang.String r1;
        javax.xml.transform.TransformerException r0;

        r0 := @this: javax.xml.transform.TransformerException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: javax.xml.transform.SourceLocator;

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String)>(r1);

        r0.<javax.xml.transform.TransformerException: java.lang.Throwable containedException> = null;

        r0.<javax.xml.transform.TransformerException: javax.xml.transform.SourceLocator locator> = r2;

        return;
    }

    public void <init>(java.lang.String, javax.xml.transform.SourceLocator, java.lang.Throwable)
    {
        java.lang.Throwable r2;
        javax.xml.transform.SourceLocator r3;
        javax.xml.transform.TransformerException r0;
        java.lang.String r1;

        r0 := @this: javax.xml.transform.TransformerException;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: javax.xml.transform.SourceLocator;

        r2 := @parameter2: java.lang.Throwable;

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String)>(r1);

        r0.<javax.xml.transform.TransformerException: java.lang.Throwable containedException> = r2;

        r0.<javax.xml.transform.TransformerException: javax.xml.transform.SourceLocator locator> = r3;

        return;
    }

    public java.lang.String getMessageAndLocation()
    {
        javax.xml.transform.SourceLocator $r3, $r4, $r6, $r7;
        javax.xml.transform.TransformerException r1;
        java.lang.StringBuffer $r0;
        int $i0, $i1;
        java.lang.String $r2, $r5, $r8;

        r1 := @this: javax.xml.transform.TransformerException;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = specialinvoke r1.<java.lang.Throwable: java.lang.String getMessage()>();

        if null == $r2 goto label1;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

     label1:
        $r3 = r1.<javax.xml.transform.TransformerException: javax.xml.transform.SourceLocator locator>;

        if null == $r3 goto label4;

        $r4 = r1.<javax.xml.transform.TransformerException: javax.xml.transform.SourceLocator locator>;

        $r5 = interfaceinvoke $r4.<javax.xml.transform.SourceLocator: java.lang.String getSystemId()>();

        $r6 = r1.<javax.xml.transform.TransformerException: javax.xml.transform.SourceLocator locator>;

        $i0 = interfaceinvoke $r6.<javax.xml.transform.SourceLocator: int getLineNumber()>();

        $r7 = r1.<javax.xml.transform.TransformerException: javax.xml.transform.SourceLocator locator>;

        $i1 = interfaceinvoke $r7.<javax.xml.transform.SourceLocator: int getColumnNumber()>();

        if null == $r5 goto label2;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; SystemID: ");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

     label2:
        if 0 == $i0 goto label3;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; Line#: ");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

     label3:
        if 0 == $i1 goto label4;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; Column#: ");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

     label4:
        $r8 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r8;
    }

    public java.lang.String getLocationAsString()
    {
        javax.xml.transform.SourceLocator $r1, $r3, $r5, $r6;
        javax.xml.transform.TransformerException r0;
        java.lang.StringBuffer $r2;
        int $i0, $i1;
        java.lang.String $r4, $r7;

        r0 := @this: javax.xml.transform.TransformerException;

        $r1 = r0.<javax.xml.transform.TransformerException: javax.xml.transform.SourceLocator locator>;

        if null == $r1 goto label4;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = r0.<javax.xml.transform.TransformerException: javax.xml.transform.SourceLocator locator>;

        $r4 = interfaceinvoke $r3.<javax.xml.transform.SourceLocator: java.lang.String getSystemId()>();

        $r5 = r0.<javax.xml.transform.TransformerException: javax.xml.transform.SourceLocator locator>;

        $i0 = interfaceinvoke $r5.<javax.xml.transform.SourceLocator: int getLineNumber()>();

        $r6 = r0.<javax.xml.transform.TransformerException: javax.xml.transform.SourceLocator locator>;

        $i1 = interfaceinvoke $r6.<javax.xml.transform.SourceLocator: int getColumnNumber()>();

        if null == $r4 goto label1;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; SystemID: ");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

     label1:
        if 0 == $i0 goto label2;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; Line#: ");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

     label2:
        if 0 == $i1 goto label3;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; Column#: ");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

     label3:
        $r7 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r7;

     label4:
        return null;
    }

    public void printStackTrace()
    {
        java.io.PrintWriter $r1;
        java.io.PrintStream $r2;
        javax.xml.transform.TransformerException r0;

        r0 := @this: javax.xml.transform.TransformerException;

        $r1 = new java.io.PrintWriter;

        $r2 = <java.lang.System: java.io.PrintStream err>;

        specialinvoke $r1.<java.io.PrintWriter: void <init>(java.io.OutputStream,boolean)>($r2, 1);

        virtualinvoke r0.<javax.xml.transform.TransformerException: void printStackTrace(java.io.PrintWriter)>($r1);

        return;
    }

    public void printStackTrace(java.io.PrintStream)
    {
        java.io.PrintWriter $r1;
        java.io.PrintStream r2;
        javax.xml.transform.TransformerException r0;

        r0 := @this: javax.xml.transform.TransformerException;

        r2 := @parameter0: java.io.PrintStream;

        $r1 = new java.io.PrintWriter;

        specialinvoke $r1.<java.io.PrintWriter: void <init>(java.io.OutputStream)>(r2);

        virtualinvoke r0.<javax.xml.transform.TransformerException: void printStackTrace(java.io.PrintWriter)>($r1);

        return;
    }

    public void printStackTrace(java.io.PrintWriter)
    {
        java.lang.Throwable $r16, $r18, r21, r22;
        java.lang.Object[] $r7;
        javax.xml.transform.TransformerException r0, $r9;
        java.lang.NoSuchMethodException $r13, $r17;
        int i0;
        java.lang.String $r1, $r10;
        java.lang.reflect.Method $r6;
        boolean $z0, z1;
        java.io.PrintWriter $r11, r19;
        java.io.PrintStream $r12;
        java.lang.IllegalAccessException $r14;
        java.lang.Class[] $r3, $r5;
        java.lang.reflect.InvocationTargetException $r15;
        java.lang.Class $r2, $r4, $r20;
        java.lang.Object $r8;

        r0 := @this: javax.xml.transform.TransformerException;

        r19 := @parameter0: java.io.PrintWriter;

        if r19 != null goto label01;

        $r11 = new java.io.PrintWriter;

        $r12 = <java.lang.System: java.io.PrintStream err>;

        specialinvoke $r11.<java.io.PrintWriter: void <init>(java.io.OutputStream,boolean)>($r12, 1);

        r19 = $r11;

     label01:
        $r1 = virtualinvoke r0.<javax.xml.transform.TransformerException: java.lang.String getLocationAsString()>();

        if null == $r1 goto label02;

        virtualinvoke r19.<java.io.PrintWriter: void println(java.lang.String)>($r1);

     label02:
        specialinvoke r0.<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>(r19);

     label03:
        goto label05;

     label04:
        $r18 := @caughtexception;

     label05:
        z1 = 0;

     label06:
        $r2 = <javax.xml.transform.TransformerException: java.lang.Class class$java$lang$Throwable>;

        if $r2 != null goto label07;

        $r20 = staticinvoke <javax.xml.transform.TransformerException: java.lang.Class class$(java.lang.String)>("java.lang.Throwable");

        <javax.xml.transform.TransformerException: java.lang.Class class$java$lang$Throwable> = $r20;

        goto label08;

     label07:
        $r20 = <javax.xml.transform.TransformerException: java.lang.Class class$java$lang$Throwable>;

     label08:
        $r3 = (java.lang.Class[]) null;

        virtualinvoke $r20.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getCause", $r3);

        z1 = 1;

     label09:
        goto label11;

     label10:
        $r17 := @caughtexception;

     label11:
        if z1 != 0 goto label25;

        r21 = virtualinvoke r0.<javax.xml.transform.TransformerException: java.lang.Throwable getException()>();

        i0 = 0;

        goto label24;

     label12:
        virtualinvoke r19.<java.io.PrintWriter: void println(java.lang.String)>("---------");

     label13:
        $z0 = r21 instanceof javax.xml.transform.TransformerException;

        if $z0 == 0 goto label14;

        $r9 = (javax.xml.transform.TransformerException) r21;

        $r10 = virtualinvoke $r9.<javax.xml.transform.TransformerException: java.lang.String getLocationAsString()>();

        if null == $r10 goto label14;

        virtualinvoke r19.<java.io.PrintWriter: void println(java.lang.String)>($r10);

     label14:
        virtualinvoke r21.<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>(r19);

     label15:
        goto label17;

     label16:
        $r16 := @caughtexception;

        virtualinvoke r19.<java.io.PrintWriter: void println(java.lang.String)>("Could not print stack trace...");

     label17:
        $r4 = virtualinvoke r21.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = (java.lang.Class[]) null;

        $r6 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getException", $r5);

        if null == $r6 goto label18;

        r22 = r21;

        $r7 = (java.lang.Object[]) null;

        $r8 = virtualinvoke $r6.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r21, $r7);

        r21 = (java.lang.Throwable) $r8;

        if r22 != r21 goto label19;

        goto label25;

     label18:
        r21 = null;

     label19:
        goto label23;

     label20:
        $r15 := @caughtexception;

        r21 = null;

        goto label23;

     label21:
        $r14 := @caughtexception;

        r21 = null;

        goto label23;

     label22:
        $r13 := @caughtexception;

        r21 = null;

     label23:
        i0 = i0 + 1;

     label24:
        if i0 >= 10 goto label25;

        if null != r21 goto label12;

     label25:
        virtualinvoke r19.<java.io.PrintWriter: void flush()>();

        return;

        catch java.lang.Throwable from label01 to label03 with label04;
        catch java.lang.NoSuchMethodException from label06 to label09 with label10;
        catch java.lang.Throwable from label13 to label15 with label16;
        catch java.lang.reflect.InvocationTargetException from label17 to label19 with label20;
        catch java.lang.IllegalAccessException from label17 to label19 with label21;
        catch java.lang.NoSuchMethodException from label17 to label19 with label22;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }

    public static void <clinit>()
    {
        <javax.xml.transform.TransformerException: long serialVersionUID> = 975798773772956428L;

        return;
    }
}
