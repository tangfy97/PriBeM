class org.apache.tika.parser.txt.CharsetRecog_2022$CharsetRecog_2022JP extends org.apache.tika.parser.txt.CharsetRecog_2022
{
    private byte[][] escapeSequences;

    void <init>()
    {
        byte[] $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        org.apache.tika.parser.txt.CharsetRecog_2022$CharsetRecog_2022JP r0;
        byte[][] $r1;

        r0 := @this: org.apache.tika.parser.txt.CharsetRecog_2022$CharsetRecog_2022JP;

        specialinvoke r0.<org.apache.tika.parser.txt.CharsetRecog_2022: void <init>()>();

        $r1 = newarray (byte[])[12];

        $r2 = newarray (byte)[4];

        $r2[0] = 27;

        $r2[1] = 36;

        $r2[2] = 40;

        $r2[3] = 67;

        $r1[0] = $r2;

        $r3 = newarray (byte)[4];

        $r3[0] = 27;

        $r3[1] = 36;

        $r3[2] = 40;

        $r3[3] = 68;

        $r1[1] = $r3;

        $r4 = newarray (byte)[3];

        $r4[0] = 27;

        $r4[1] = 36;

        $r4[2] = 64;

        $r1[2] = $r4;

        $r5 = newarray (byte)[3];

        $r5[0] = 27;

        $r5[1] = 36;

        $r5[2] = 65;

        $r1[3] = $r5;

        $r6 = newarray (byte)[3];

        $r6[0] = 27;

        $r6[1] = 36;

        $r6[2] = 66;

        $r1[4] = $r6;

        $r7 = newarray (byte)[3];

        $r7[0] = 27;

        $r7[1] = 38;

        $r7[2] = 64;

        $r1[5] = $r7;

        $r8 = newarray (byte)[3];

        $r8[0] = 27;

        $r8[1] = 40;

        $r8[2] = 66;

        $r1[6] = $r8;

        $r9 = newarray (byte)[3];

        $r9[0] = 27;

        $r9[1] = 40;

        $r9[2] = 72;

        $r1[7] = $r9;

        $r10 = newarray (byte)[3];

        $r10[0] = 27;

        $r10[1] = 40;

        $r10[2] = 73;

        $r1[8] = $r10;

        $r11 = newarray (byte)[3];

        $r11[0] = 27;

        $r11[1] = 40;

        $r11[2] = 74;

        $r1[9] = $r11;

        $r12 = newarray (byte)[3];

        $r12[0] = 27;

        $r12[1] = 46;

        $r12[2] = 65;

        $r1[10] = $r12;

        $r13 = newarray (byte)[3];

        $r13[0] = 27;

        $r13[1] = 46;

        $r13[2] = 70;

        $r1[11] = $r13;

        r0.<org.apache.tika.parser.txt.CharsetRecog_2022$CharsetRecog_2022JP: byte[][] escapeSequences> = $r1;

        return;
    }

    java.lang.String getName()
    {
        org.apache.tika.parser.txt.CharsetRecog_2022$CharsetRecog_2022JP r0;

        r0 := @this: org.apache.tika.parser.txt.CharsetRecog_2022$CharsetRecog_2022JP;

        return "ISO-2022-JP";
    }

    int match(org.apache.tika.parser.txt.CharsetDetector)
    {
        byte[] $r3;
        byte[][] $r2;
        int $i0, $i1;
        org.apache.tika.parser.txt.CharsetDetector r1;
        org.apache.tika.parser.txt.CharsetRecog_2022$CharsetRecog_2022JP r0;

        r0 := @this: org.apache.tika.parser.txt.CharsetRecog_2022$CharsetRecog_2022JP;

        r1 := @parameter0: org.apache.tika.parser.txt.CharsetDetector;

        $r3 = r1.<org.apache.tika.parser.txt.CharsetDetector: byte[] fInputBytes>;

        $i0 = r1.<org.apache.tika.parser.txt.CharsetDetector: int fInputLen>;

        $r2 = r0.<org.apache.tika.parser.txt.CharsetRecog_2022$CharsetRecog_2022JP: byte[][] escapeSequences>;

        $i1 = virtualinvoke r0.<org.apache.tika.parser.txt.CharsetRecog_2022$CharsetRecog_2022JP: int match(byte[],int,byte[][])>($r3, $i0, $r2);

        return $i1;
    }
}
