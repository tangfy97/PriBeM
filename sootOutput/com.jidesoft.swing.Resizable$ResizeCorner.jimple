public class com.jidesoft.swing.Resizable$ResizeCorner extends javax.swing.JComponent
{
    static final int SIZE;
    private int _corner;

    public void <init>()
    {
        com.jidesoft.swing.Resizable$ResizeCorner r0;

        r0 := @this: com.jidesoft.swing.Resizable$ResizeCorner;

        specialinvoke r0.<javax.swing.JComponent: void <init>()>();

        r0.<com.jidesoft.swing.Resizable$ResizeCorner: int _corner> = 16;

        return;
    }

    public void <init>(int)
    {
        int i0;
        com.jidesoft.swing.Resizable$ResizeCorner r0;

        r0 := @this: com.jidesoft.swing.Resizable$ResizeCorner;

        i0 := @parameter0: int;

        specialinvoke r0.<javax.swing.JComponent: void <init>()>();

        r0.<com.jidesoft.swing.Resizable$ResizeCorner: int _corner> = 16;

        r0.<com.jidesoft.swing.Resizable$ResizeCorner: int _corner> = i0;

        return;
    }

    public int getCorner()
    {
        int $i0;
        com.jidesoft.swing.Resizable$ResizeCorner r0;

        r0 := @this: com.jidesoft.swing.Resizable$ResizeCorner;

        $i0 = r0.<com.jidesoft.swing.Resizable$ResizeCorner: int _corner>;

        return $i0;
    }

    public void setCorner(int)
    {
        int i0;
        com.jidesoft.swing.Resizable$ResizeCorner r0;

        r0 := @this: com.jidesoft.swing.Resizable$ResizeCorner;

        i0 := @parameter0: int;

        r0.<com.jidesoft.swing.Resizable$ResizeCorner: int _corner> = i0;

        return;
    }

    public java.awt.Dimension getPreferredSize()
    {
        java.awt.Dimension $r0;
        com.jidesoft.swing.Resizable$ResizeCorner r1;

        r1 := @this: com.jidesoft.swing.Resizable$ResizeCorner;

        $r0 = new java.awt.Dimension;

        specialinvoke $r0.<java.awt.Dimension: void <init>(int,int)>(16, 16);

        return $r0;
    }

    protected void paintComponent(java.awt.Graphics)
    {
        java.awt.Color $r2, $r4, $r5, $r6, $r7;
        boolean $z0;
        java.awt.Graphics r1;
        com.jidesoft.swing.Resizable$ResizeCorner r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, i37, i38, i39, i40, i41, i42, i43, i44;
        java.awt.ComponentOrientation $r3;

        r0 := @this: com.jidesoft.swing.Resizable$ResizeCorner;

        r1 := @parameter0: java.awt.Graphics;

        specialinvoke r0.<javax.swing.JComponent: void paintComponent(java.awt.Graphics)>(r1);

        $i0 = virtualinvoke r0.<com.jidesoft.swing.Resizable$ResizeCorner: int getWidth()>();

        $i1 = virtualinvoke r0.<com.jidesoft.swing.Resizable$ResizeCorner: int getHeight()>();

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        $i3 = $i2 / 4;

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>($i3, 4);

        $r2 = virtualinvoke r1.<java.awt.Graphics: java.awt.Color getColor()>();

        $i5 = virtualinvoke r0.<com.jidesoft.swing.Resizable$ResizeCorner: int getCorner()>();

        $r3 = virtualinvoke r0.<com.jidesoft.swing.Resizable$ResizeCorner: java.awt.ComponentOrientation getComponentOrientation()>();

        $z0 = virtualinvoke $r3.<java.awt.ComponentOrientation: boolean isLeftToRight()>();

        lookupswitch($i5)
        {
            case 4: goto label10;
            case 16: goto label01;
            default: goto label18;
        };

     label01:
        $r4 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("controlLtHighlight");

        virtualinvoke r1.<java.awt.Graphics: void setColor(java.awt.Color)>($r4);

        i37 = 0;

        i38 = 0;

     label02:
        if i38 >= $i4 goto label05;

        i37 = i37 + 4;

        if $z0 == 0 goto label03;

        $i22 = $i2 - i37;

        $i21 = $i2 - i37;

        virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>($i2, $i22, $i21, $i2);

        goto label04;

     label03:
        $i20 = $i2 - i37;

        virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>(0, i37, $i20, $i2);

     label04:
        i38 = i38 + 1;

        goto label02;

     label05:
        $r5 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("controlShadow");

        virtualinvoke r1.<java.awt.Graphics: void setColor(java.awt.Color)>($r5);

        i39 = 0;

        i40 = 0;

     label06:
        if i40 >= $i4 goto label09;

        i39 = i39 + 4;

        if $z0 == 0 goto label07;

        $i12 = $i2 - i39;

        $i15 = $i12 + 1;

        $i13 = $i2 - i39;

        $i14 = $i13 + 1;

        virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>($i2, $i15, $i14, $i2);

        $i16 = $i2 - i39;

        $i19 = $i16 + 2;

        $i17 = $i2 - i39;

        $i18 = $i17 + 2;

        virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>($i2, $i19, $i18, $i2);

        goto label08;

     label07:
        $i8 = i39 + 1;

        $i6 = $i2 - i39;

        $i7 = $i6 - 1;

        virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>(0, $i8, $i7, $i2);

        $i11 = i39 + 2;

        $i9 = $i2 - i39;

        $i10 = $i9 - 2;

        virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>(0, $i11, $i10, $i2);

     label08:
        i40 = i40 + 1;

        goto label06;

     label09:
        goto label18;

     label10:
        $r6 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("controlLtHighlight");

        virtualinvoke r1.<java.awt.Graphics: void setColor(java.awt.Color)>($r6);

        i41 = 0;

        i42 = 0;

     label11:
        if i42 >= $i4 goto label14;

        i41 = i41 + 4;

        if $z0 == 0 goto label12;

        $i36 = $i2 - i41;

        virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>($i36, 0, $i2, i41);

        goto label13;

     label12:
        $i35 = $i2 - i41;

        virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>(i41, 0, $i2, $i35);

     label13:
        i42 = i42 + 1;

        goto label11;

     label14:
        $r7 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("controlShadow");

        virtualinvoke r1.<java.awt.Graphics: void setColor(java.awt.Color)>($r7);

        i43 = 0;

        i44 = 0;

     label15:
        if i44 >= $i4 goto label18;

        i43 = i43 + 4;

        if $z0 == 0 goto label16;

        $i29 = $i2 - i43;

        $i31 = $i29 + 1;

        $i30 = i43 - 1;

        virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>($i31, 0, $i2, $i30);

        $i32 = $i2 - i43;

        $i34 = $i32 + 2;

        $i33 = i43 - 2;

        virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>($i34, 0, $i2, $i33);

        goto label17;

     label16:
        $i25 = i43 + 1;

        $i23 = $i2 - i43;

        $i24 = $i23 - 1;

        virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>($i25, 0, $i2, $i24);

        $i28 = i43 + 2;

        $i26 = $i2 - i43;

        $i27 = $i26 - 2;

        virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>($i28, 0, $i2, $i27);

     label17:
        i44 = i44 + 1;

        goto label15;

     label18:
        virtualinvoke r1.<java.awt.Graphics: void setColor(java.awt.Color)>($r2);

        return;
    }

    public static void <clinit>()
    {
        <com.jidesoft.swing.Resizable$ResizeCorner: int SIZE> = 16;

        return;
    }
}
