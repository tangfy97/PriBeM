final class kodkod.engine.bool.BooleanAccumulator$1 extends java.lang.Object implements java.util.Iterator
{
    final java.util.Iterator iter;
    final kodkod.engine.bool.BooleanAccumulator this$0;

    void <init>(kodkod.engine.bool.BooleanAccumulator)
    {
        java.util.Iterator $r3;
        kodkod.engine.bool.BooleanAccumulator r1;
        kodkod.engine.bool.BooleanAccumulator$1 r0;
        kodkod.util.ints.SparseSequence $r2;

        r0 := @this: kodkod.engine.bool.BooleanAccumulator$1;

        r1 := @parameter0: kodkod.engine.bool.BooleanAccumulator;

        r0.<kodkod.engine.bool.BooleanAccumulator$1: kodkod.engine.bool.BooleanAccumulator this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <kodkod.engine.bool.BooleanAccumulator: kodkod.util.ints.SparseSequence access$1(kodkod.engine.bool.BooleanAccumulator)>(r1);

        $r3 = interfaceinvoke $r2.<kodkod.util.ints.SparseSequence: java.util.Iterator iterator()>();

        r0.<kodkod.engine.bool.BooleanAccumulator$1: java.util.Iterator iter> = $r3;

        return;
    }

    public boolean hasNext()
    {
        kodkod.engine.bool.BooleanAccumulator$1 r0;
        java.util.Iterator $r1;
        boolean $z0;

        r0 := @this: kodkod.engine.bool.BooleanAccumulator$1;

        $r1 = r0.<kodkod.engine.bool.BooleanAccumulator$1: java.util.Iterator iter>;

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        return $z0;
    }

    public kodkod.engine.bool.BooleanValue next()
    {
        java.util.Iterator $r1;
        kodkod.engine.bool.BooleanValue $r5;
        kodkod.util.ints.IndexedEntry $r3;
        java.lang.Object $r2, $r4;
        kodkod.engine.bool.BooleanAccumulator$1 r0;

        r0 := @this: kodkod.engine.bool.BooleanAccumulator$1;

        $r1 = r0.<kodkod.engine.bool.BooleanAccumulator$1: java.util.Iterator iter>;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (kodkod.util.ints.IndexedEntry) $r2;

        $r4 = interfaceinvoke $r3.<kodkod.util.ints.IndexedEntry: java.lang.Object value()>();

        $r5 = (kodkod.engine.bool.BooleanValue) $r4;

        return $r5;
    }

    public void remove()
    {
        java.lang.UnsupportedOperationException $r0;
        kodkod.engine.bool.BooleanAccumulator$1 r1;

        r1 := @this: kodkod.engine.bool.BooleanAccumulator$1;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public volatile java.lang.Object next()
    {
        kodkod.engine.bool.BooleanAccumulator$1 r0;
        kodkod.engine.bool.BooleanValue $r1;

        r0 := @this: kodkod.engine.bool.BooleanAccumulator$1;

        $r1 = virtualinvoke r0.<kodkod.engine.bool.BooleanAccumulator$1: kodkod.engine.bool.BooleanValue next()>();

        return $r1;
    }
}
