final class org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$StandardTermState extends org.apache.lucene.codecs.BlockTermState
{
    long freqOffset;
    long proxOffset;
    long skipOffset;
    org.apache.lucene.store.ByteArrayDataInput bytesReader;
    byte[] bytes;

    private void <init>()
    {
        org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$StandardTermState r0;

        r0 := @this: org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$StandardTermState;

        specialinvoke r0.<org.apache.lucene.codecs.BlockTermState: void <init>()>();

        return;
    }

    public org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$StandardTermState clone()
    {
        org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$StandardTermState $r0, r1;

        r1 := @this: org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$StandardTermState;

        $r0 = new org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$StandardTermState;

        specialinvoke $r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$StandardTermState: void <init>()>();

        virtualinvoke $r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$StandardTermState: void copyFrom(org.apache.lucene.index.TermState)>(r1);

        return $r0;
    }

    public void copyFrom(org.apache.lucene.index.TermState)
    {
        org.apache.lucene.index.TermState r1;
        org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$StandardTermState r0, r2;
        long $l0, $l1, $l2;

        r0 := @this: org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$StandardTermState;

        r1 := @parameter0: org.apache.lucene.index.TermState;

        specialinvoke r0.<org.apache.lucene.codecs.BlockTermState: void copyFrom(org.apache.lucene.index.TermState)>(r1);

        r2 = (org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$StandardTermState) r1;

        $l0 = r2.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$StandardTermState: long freqOffset>;

        r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$StandardTermState: long freqOffset> = $l0;

        $l1 = r2.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$StandardTermState: long proxOffset>;

        r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$StandardTermState: long proxOffset> = $l1;

        $l2 = r2.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$StandardTermState: long skipOffset>;

        r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$StandardTermState: long skipOffset> = $l2;

        return;
    }

    public java.lang.String toString()
    {
        org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$StandardTermState r1;
        long $l0, $l1, $l2;
        java.lang.StringBuilder $r0, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        java.lang.String $r2, $r10;

        r1 := @this: org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$StandardTermState;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = specialinvoke r1.<org.apache.lucene.codecs.BlockTermState: java.lang.String toString()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" freqFP=");

        $l0 = r1.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$StandardTermState: long freqOffset>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" proxFP=");

        $l1 = r1.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$StandardTermState: long proxOffset>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" skipOffset=");

        $l2 = r1.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$StandardTermState: long skipOffset>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    public volatile org.apache.lucene.index.TermState clone()
    {
        org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$StandardTermState r0, $r1;

        r0 := @this: org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$StandardTermState;

        $r1 = virtualinvoke r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$StandardTermState: org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$StandardTermState clone()>();

        return $r1;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$StandardTermState r0, $r1;

        r0 := @this: org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$StandardTermState;

        $r1 = virtualinvoke r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$StandardTermState: org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$StandardTermState clone()>();

        return $r1;
    }

    void <init>(org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$1)
    {
        org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$StandardTermState r0;
        org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$1 r1;

        r0 := @this: org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$StandardTermState;

        r1 := @parameter0: org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$1;

        specialinvoke r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$StandardTermState: void <init>()>();

        return;
    }
}
