public class org.apache.poi.poifs.crypt.DataSpaceMapUtils$DataSpaceDefinition extends java.lang.Object implements org.apache.poi.poifs.crypt.standard.EncryptionRecord
{
    java.lang.String[] transformer;

    public void <init>(java.lang.String[])
    {
        org.apache.poi.poifs.crypt.DataSpaceMapUtils$DataSpaceDefinition r0;
        java.lang.String[] r1;

        r0 := @this: org.apache.poi.poifs.crypt.DataSpaceMapUtils$DataSpaceDefinition;

        r1 := @parameter0: java.lang.String[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.poi.poifs.crypt.DataSpaceMapUtils$DataSpaceDefinition: java.lang.String[] transformer> = r1;

        return;
    }

    public void <init>(org.apache.poi.util.LittleEndianInput)
    {
        org.apache.poi.poifs.crypt.DataSpaceMapUtils$DataSpaceDefinition r0;
        org.apache.poi.util.LittleEndianInput r1;
        int $i0, i1;
        java.lang.String[] $r2, $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.poi.poifs.crypt.DataSpaceMapUtils$DataSpaceDefinition;

        r1 := @parameter0: org.apache.poi.util.LittleEndianInput;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        interfaceinvoke r1.<org.apache.poi.util.LittleEndianInput: int readInt()>();

        $i0 = interfaceinvoke r1.<org.apache.poi.util.LittleEndianInput: int readInt()>();

        $r2 = newarray (java.lang.String)[$i0];

        r0.<org.apache.poi.poifs.crypt.DataSpaceMapUtils$DataSpaceDefinition: java.lang.String[] transformer> = $r2;

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        $r3 = r0.<org.apache.poi.poifs.crypt.DataSpaceMapUtils$DataSpaceDefinition: java.lang.String[] transformer>;

        $r4 = staticinvoke <org.apache.poi.poifs.crypt.DataSpaceMapUtils: java.lang.String readUnicodeLPP4(org.apache.poi.util.LittleEndianInput)>(r1);

        $r3[i1] = $r4;

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void write(org.apache.poi.util.LittleEndianByteArrayOutputStream)
    {
        org.apache.poi.poifs.crypt.DataSpaceMapUtils$DataSpaceDefinition r1;
        java.lang.String[] $r2, r3;
        org.apache.poi.util.LittleEndianByteArrayOutputStream r0;
        int $i0, i1, i2;
        java.lang.String r4;

        r1 := @this: org.apache.poi.poifs.crypt.DataSpaceMapUtils$DataSpaceDefinition;

        r0 := @parameter0: org.apache.poi.util.LittleEndianByteArrayOutputStream;

        virtualinvoke r0.<org.apache.poi.util.LittleEndianByteArrayOutputStream: void writeInt(int)>(8);

        $r2 = r1.<org.apache.poi.poifs.crypt.DataSpaceMapUtils$DataSpaceDefinition: java.lang.String[] transformer>;

        $i0 = lengthof $r2;

        virtualinvoke r0.<org.apache.poi.util.LittleEndianByteArrayOutputStream: void writeInt(int)>($i0);

        r3 = r1.<org.apache.poi.poifs.crypt.DataSpaceMapUtils$DataSpaceDefinition: java.lang.String[] transformer>;

        i1 = lengthof r3;

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        r4 = r3[i2];

        staticinvoke <org.apache.poi.poifs.crypt.DataSpaceMapUtils: void writeUnicodeLPP4(org.apache.poi.util.LittleEndianOutput,java.lang.String)>(r0, r4);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }
}
