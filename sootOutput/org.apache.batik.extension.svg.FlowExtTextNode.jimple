public class org.apache.batik.extension.svg.FlowExtTextNode extends org.apache.batik.gvt.TextNode
{

    public void <init>()
    {
        org.apache.batik.extension.svg.FlowExtTextNode r0;
        org.apache.batik.gvt.TextPainter $r1;

        r0 := @this: org.apache.batik.extension.svg.FlowExtTextNode;

        specialinvoke r0.<org.apache.batik.gvt.TextNode: void <init>()>();

        $r1 = staticinvoke <org.apache.batik.extension.svg.FlowExtTextPainter: org.apache.batik.gvt.TextPainter getInstance()>();

        r0.<org.apache.batik.gvt.TextNode: org.apache.batik.gvt.TextPainter textPainter> = $r1;

        return;
    }

    public void setTextPainter(org.apache.batik.gvt.TextPainter)
    {
        org.apache.batik.extension.svg.FlowExtTextNode r1;
        org.apache.batik.gvt.TextPainter r0, $r2;

        r1 := @this: org.apache.batik.extension.svg.FlowExtTextNode;

        r0 := @parameter0: org.apache.batik.gvt.TextPainter;

        if r0 != null goto label1;

        $r2 = staticinvoke <org.apache.batik.extension.svg.FlowExtTextPainter: org.apache.batik.gvt.TextPainter getInstance()>();

        r1.<org.apache.batik.gvt.TextNode: org.apache.batik.gvt.TextPainter textPainter> = $r2;

        goto label2;

     label1:
        r1.<org.apache.batik.gvt.TextNode: org.apache.batik.gvt.TextPainter textPainter> = r0;

     label2:
        return;
    }
}
