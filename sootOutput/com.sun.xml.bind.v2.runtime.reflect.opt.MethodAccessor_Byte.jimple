public class com.sun.xml.bind.v2.runtime.reflect.opt.MethodAccessor_Byte extends com.sun.xml.bind.v2.runtime.reflect.Accessor
{

    public void <init>()
    {
        com.sun.xml.bind.v2.runtime.reflect.opt.MethodAccessor_Byte r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.reflect.opt.MethodAccessor_Byte;

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.reflect.Accessor: void <init>(java.lang.Class)>(class "Ljava/lang/Byte;");

        return;
    }

    public java.lang.Object get(java.lang.Object)
    {
        byte $b0;
        java.lang.Object r0;
        com.sun.xml.bind.v2.runtime.reflect.opt.Bean $r1;
        java.lang.Byte $r2;
        com.sun.xml.bind.v2.runtime.reflect.opt.MethodAccessor_Byte r3;

        r3 := @this: com.sun.xml.bind.v2.runtime.reflect.opt.MethodAccessor_Byte;

        r0 := @parameter0: java.lang.Object;

        $r1 = (com.sun.xml.bind.v2.runtime.reflect.opt.Bean) r0;

        $b0 = virtualinvoke $r1.<com.sun.xml.bind.v2.runtime.reflect.opt.Bean: byte get_byte()>();

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b0);

        return $r2;
    }

    public void set(java.lang.Object, java.lang.Object)
    {
        byte $b0;
        java.lang.Object r0, r1;
        com.sun.xml.bind.v2.runtime.reflect.opt.Bean $r3;
        java.lang.Byte $r2;
        com.sun.xml.bind.v2.runtime.reflect.opt.MethodAccessor_Byte r4;

        r4 := @this: com.sun.xml.bind.v2.runtime.reflect.opt.MethodAccessor_Byte;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        $r3 = (com.sun.xml.bind.v2.runtime.reflect.opt.Bean) r0;

        if r1 != null goto label1;

        $b0 = <com.sun.xml.bind.v2.runtime.reflect.opt.Const: byte default_value_byte>;

        goto label2;

     label1:
        $r2 = (java.lang.Byte) r1;

        $b0 = virtualinvoke $r2.<java.lang.Byte: byte byteValue()>();

     label2:
        virtualinvoke $r3.<com.sun.xml.bind.v2.runtime.reflect.opt.Bean: void set_byte(byte)>($b0);

        return;
    }
}
