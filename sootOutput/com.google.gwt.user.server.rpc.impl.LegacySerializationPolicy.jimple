public class com.google.gwt.user.server.rpc.impl.LegacySerializationPolicy extends com.google.gwt.user.server.rpc.SerializationPolicy implements com.google.gwt.user.server.rpc.impl.TypeNameObfuscator
{
    private static final java.lang.String ELISION_ERROR;
    private static final java.lang.Class[] JRE_BLACKLIST;
    private static final java.util.Set JRE_BLACKSET;
    private static final com.google.gwt.user.server.rpc.impl.LegacySerializationPolicy sInstance;

    public static com.google.gwt.user.server.rpc.impl.LegacySerializationPolicy getInstance()
    {
        com.google.gwt.user.server.rpc.impl.LegacySerializationPolicy $r0;

        $r0 = <com.google.gwt.user.server.rpc.impl.LegacySerializationPolicy: com.google.gwt.user.server.rpc.impl.LegacySerializationPolicy sInstance>;

        return $r0;
    }

    private void <init>()
    {
        com.google.gwt.user.server.rpc.impl.LegacySerializationPolicy r0;

        r0 := @this: com.google.gwt.user.server.rpc.impl.LegacySerializationPolicy;

        specialinvoke r0.<com.google.gwt.user.server.rpc.SerializationPolicy: void <init>()>();

        return;
    }

    public final java.lang.String getClassNameForTypeId(java.lang.String) throws com.google.gwt.user.client.rpc.SerializationException
    {
        com.google.gwt.user.client.rpc.SerializationException $r0;
        java.lang.String r2;
        com.google.gwt.user.server.rpc.impl.LegacySerializationPolicy r1;

        r1 := @this: com.google.gwt.user.server.rpc.impl.LegacySerializationPolicy;

        r2 := @parameter0: java.lang.String;

        $r0 = new com.google.gwt.user.client.rpc.SerializationException;

        specialinvoke $r0.<com.google.gwt.user.client.rpc.SerializationException: void <init>(java.lang.String)>("Type name elision in RPC payloads is only supported if the RPC whitelist file is used.");

        throw $r0;
    }

    public final java.lang.String getTypeIdForClass(java.lang.Class) throws com.google.gwt.user.client.rpc.SerializationException
    {
        com.google.gwt.user.client.rpc.SerializationException $r0;
        java.lang.Class r2;
        com.google.gwt.user.server.rpc.impl.LegacySerializationPolicy r1;

        r1 := @this: com.google.gwt.user.server.rpc.impl.LegacySerializationPolicy;

        r2 := @parameter0: java.lang.Class;

        $r0 = new com.google.gwt.user.client.rpc.SerializationException;

        specialinvoke $r0.<com.google.gwt.user.client.rpc.SerializationException: void <init>(java.lang.String)>("Type name elision in RPC payloads is only supported if the RPC whitelist file is used.");

        throw $r0;
    }

    public boolean shouldDeserializeFields(java.lang.Class)
    {
        java.lang.Class r1;
        com.google.gwt.user.server.rpc.impl.LegacySerializationPolicy r0;
        boolean $z0;

        r0 := @this: com.google.gwt.user.server.rpc.impl.LegacySerializationPolicy;

        r1 := @parameter0: java.lang.Class;

        $z0 = specialinvoke r0.<com.google.gwt.user.server.rpc.impl.LegacySerializationPolicy: boolean isFieldSerializable(java.lang.Class)>(r1);

        return $z0;
    }

    public boolean shouldSerializeFields(java.lang.Class)
    {
        java.lang.Class r1;
        com.google.gwt.user.server.rpc.impl.LegacySerializationPolicy r0;
        boolean $z0;

        r0 := @this: com.google.gwt.user.server.rpc.impl.LegacySerializationPolicy;

        r1 := @parameter0: java.lang.Class;

        $z0 = specialinvoke r0.<com.google.gwt.user.server.rpc.impl.LegacySerializationPolicy: boolean isFieldSerializable(java.lang.Class)>(r1);

        return $z0;
    }

    public void validateDeserialize(java.lang.Class) throws com.google.gwt.user.client.rpc.SerializationException
    {
        com.google.gwt.user.client.rpc.SerializationException $r2;
        com.google.gwt.user.server.rpc.impl.LegacySerializationPolicy r0;
        java.lang.Class r1, $r8;
        java.lang.StringBuilder $r3, $r4, $r6, $r7, $r10, $r11, $r12;
        java.lang.String $r5, $r9, $r13;
        boolean $z0;

        r0 := @this: com.google.gwt.user.server.rpc.impl.LegacySerializationPolicy;

        r1 := @parameter0: java.lang.Class;

        $z0 = specialinvoke r0.<com.google.gwt.user.server.rpc.impl.LegacySerializationPolicy: boolean isInstantiable(java.lang.Class)>(r1);

        if $z0 != 0 goto label1;

        $r2 = new com.google.gwt.user.client.rpc.SerializationException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Type \'");

        $r5 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' was not assignable to \'");

        $r8 = class "Lcom/google/gwt/user/client/rpc/IsSerializable;";

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' and did not have a custom field serializer. ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("For security purposes, this type will not be deserialized.");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<com.google.gwt.user.client.rpc.SerializationException: void <init>(java.lang.String)>($r13);

        throw $r2;

     label1:
        return;
    }

    public void validateSerialize(java.lang.Class) throws com.google.gwt.user.client.rpc.SerializationException
    {
        com.google.gwt.user.client.rpc.SerializationException $r2;
        com.google.gwt.user.server.rpc.impl.LegacySerializationPolicy r0;
        java.lang.Class r1, $r8;
        java.lang.StringBuilder $r3, $r4, $r6, $r7, $r10, $r11, $r12;
        java.lang.String $r5, $r9, $r13;
        boolean $z0;

        r0 := @this: com.google.gwt.user.server.rpc.impl.LegacySerializationPolicy;

        r1 := @parameter0: java.lang.Class;

        $z0 = specialinvoke r0.<com.google.gwt.user.server.rpc.impl.LegacySerializationPolicy: boolean isInstantiable(java.lang.Class)>(r1);

        if $z0 != 0 goto label1;

        $r2 = new com.google.gwt.user.client.rpc.SerializationException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Type \'");

        $r5 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' was not assignable to \'");

        $r8 = class "Lcom/google/gwt/user/client/rpc/IsSerializable;";

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' and did not have a custom field serializer.");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("For security purposes, this type will not be serialized.");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<com.google.gwt.user.client.rpc.SerializationException: void <init>(java.lang.String)>($r13);

        throw $r2;

     label1:
        return;
    }

    private boolean isFieldSerializable(java.lang.Class)
    {
        com.google.gwt.user.server.rpc.impl.LegacySerializationPolicy r0;
        java.util.Set $r3;
        java.lang.Class r1, $r2;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: com.google.gwt.user.server.rpc.impl.LegacySerializationPolicy;

        r1 := @parameter0: java.lang.Class;

        $z0 = specialinvoke r0.<com.google.gwt.user.server.rpc.impl.LegacySerializationPolicy: boolean isInstantiable(java.lang.Class)>(r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r2 = class "Ljava/io/Serializable;";

        $z1 = virtualinvoke $r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r1);

        if $z1 == 0 goto label4;

        $r3 = <com.google.gwt.user.server.rpc.impl.LegacySerializationPolicy: java.util.Set JRE_BLACKSET>;

        $z2 = interfaceinvoke $r3.<java.util.Set: boolean contains(java.lang.Object)>(r1);

        if $z2 != 0 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;

     label4:
        return 0;
    }

    private boolean isInstantiable(java.lang.Class)
    {
        com.google.gwt.user.server.rpc.impl.LegacySerializationPolicy r3;
        java.lang.Class r0, $r1, $r2, $r4;
        boolean $z0, $z1, $z2, $z3, $z4;

        r3 := @this: com.google.gwt.user.server.rpc.impl.LegacySerializationPolicy;

        r0 := @parameter0: java.lang.Class;

        $z0 = virtualinvoke r0.<java.lang.Class: boolean isPrimitive()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = virtualinvoke r0.<java.lang.Class: boolean isArray()>();

        if $z1 == 0 goto label2;

        $r4 = virtualinvoke r0.<java.lang.Class: java.lang.Class getComponentType()>();

        $z3 = specialinvoke r3.<com.google.gwt.user.server.rpc.impl.LegacySerializationPolicy: boolean isInstantiable(java.lang.Class)>($r4);

        return $z3;

     label2:
        $r1 = class "Lcom/google/gwt/user/client/rpc/IsSerializable;";

        $z2 = virtualinvoke $r1.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z2 == 0 goto label3;

        return 1;

     label3:
        $r2 = staticinvoke <com.google.gwt.user.server.rpc.impl.SerializabilityUtil: java.lang.Class hasCustomFieldSerializer(java.lang.Class)>(r0);

        if $r2 == null goto label4;

        $z4 = 1;

        goto label5;

     label4:
        $z4 = 0;

     label5:
        return $z4;
    }

    static void <clinit>()
    {
        java.util.HashSet $r1;
        java.util.List $r3;
        com.google.gwt.user.server.rpc.impl.LegacySerializationPolicy $r4;
        java.lang.Class[] $r0, $r2;

        <com.google.gwt.user.server.rpc.impl.LegacySerializationPolicy: java.lang.String ELISION_ERROR> = "Type name elision in RPC payloads is only supported if the RPC whitelist file is used.";

        $r0 = newarray (java.lang.Class)[37];

        $r0[0] = class "Ljava/lang/ArrayStoreException;";

        $r0[1] = class "Ljava/lang/AssertionError;";

        $r0[2] = class "Ljava/lang/Boolean;";

        $r0[3] = class "Ljava/lang/Byte;";

        $r0[4] = class "Ljava/lang/Character;";

        $r0[5] = class "Ljava/lang/Class;";

        $r0[6] = class "Ljava/lang/ClassCastException;";

        $r0[7] = class "Ljava/lang/Double;";

        $r0[8] = class "Ljava/lang/Error;";

        $r0[9] = class "Ljava/lang/Float;";

        $r0[10] = class "Ljava/lang/IllegalArgumentException;";

        $r0[11] = class "Ljava/lang/IllegalStateException;";

        $r0[12] = class "Ljava/lang/IndexOutOfBoundsException;";

        $r0[13] = class "Ljava/lang/Integer;";

        $r0[14] = class "Ljava/lang/Long;";

        $r0[15] = class "Ljava/lang/NegativeArraySizeException;";

        $r0[16] = class "Ljava/lang/NullPointerException;";

        $r0[17] = class "Ljava/lang/Number;";

        $r0[18] = class "Ljava/lang/NumberFormatException;";

        $r0[19] = class "Ljava/lang/Short;";

        $r0[20] = class "Ljava/lang/StackTraceElement;";

        $r0[21] = class "Ljava/lang/String;";

        $r0[22] = class "Ljava/lang/StringBuffer;";

        $r0[23] = class "Ljava/lang/StringIndexOutOfBoundsException;";

        $r0[24] = class "Ljava/lang/UnsupportedOperationException;";

        $r0[25] = class "Ljava/util/ArrayList;";

        $r0[26] = class "Ljava/util/ConcurrentModificationException;";

        $r0[27] = class "Ljava/util/Date;";

        $r0[28] = class "Ljava/util/EmptyStackException;";

        $r0[29] = class "Ljava/util/EventObject;";

        $r0[30] = class "Ljava/util/HashMap;";

        $r0[31] = class "Ljava/util/HashSet;";

        $r0[32] = class "Ljava/util/MissingResourceException;";

        $r0[33] = class "Ljava/util/NoSuchElementException;";

        $r0[34] = class "Ljava/util/Stack;";

        $r0[35] = class "Ljava/util/TooManyListenersException;";

        $r0[36] = class "Ljava/util/Vector;";

        <com.google.gwt.user.server.rpc.impl.LegacySerializationPolicy: java.lang.Class[] JRE_BLACKLIST> = $r0;

        $r1 = new java.util.HashSet;

        $r2 = <com.google.gwt.user.server.rpc.impl.LegacySerializationPolicy: java.lang.Class[] JRE_BLACKLIST>;

        $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2);

        specialinvoke $r1.<java.util.HashSet: void <init>(java.util.Collection)>($r3);

        <com.google.gwt.user.server.rpc.impl.LegacySerializationPolicy: java.util.Set JRE_BLACKSET> = $r1;

        $r4 = new com.google.gwt.user.server.rpc.impl.LegacySerializationPolicy;

        specialinvoke $r4.<com.google.gwt.user.server.rpc.impl.LegacySerializationPolicy: void <init>()>();

        <com.google.gwt.user.server.rpc.impl.LegacySerializationPolicy: com.google.gwt.user.server.rpc.impl.LegacySerializationPolicy sInstance> = $r4;

        return;
    }
}
