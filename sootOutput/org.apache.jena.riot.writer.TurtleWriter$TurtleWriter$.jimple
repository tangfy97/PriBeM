class org.apache.jena.riot.writer.TurtleWriter$TurtleWriter$ extends org.apache.jena.riot.writer.TurtleShell
{

    public void <init>(org.apache.jena.atlas.io.IndentedWriter, org.apache.jena.riot.system.PrefixMap, java.lang.String)
    {
        org.apache.jena.riot.system.PrefixMap r2;
        java.lang.String r3;
        org.apache.jena.riot.writer.TurtleWriter$TurtleWriter$ r0;
        org.apache.jena.atlas.io.IndentedWriter r1;

        r0 := @this: org.apache.jena.riot.writer.TurtleWriter$TurtleWriter$;

        r1 := @parameter0: org.apache.jena.atlas.io.IndentedWriter;

        r2 := @parameter1: org.apache.jena.riot.system.PrefixMap;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<org.apache.jena.riot.writer.TurtleShell: void <init>(org.apache.jena.atlas.io.IndentedWriter,org.apache.jena.riot.system.PrefixMap,java.lang.String)>(r1, r2, r3);

        return;
    }

    private void write(com.hp.hpl.jena.graph.Graph)
    {
        org.apache.jena.riot.writer.TurtleWriter$TurtleWriter$ r0;
        org.apache.jena.atlas.io.IndentedWriter $r5;
        org.apache.jena.riot.system.PrefixMap $r2, $r3;
        java.lang.String $r1;
        com.hp.hpl.jena.graph.Graph r4;
        boolean $z0, $z1;

        r0 := @this: org.apache.jena.riot.writer.TurtleWriter$TurtleWriter$;

        r4 := @parameter0: com.hp.hpl.jena.graph.Graph;

        $r1 = r0.<org.apache.jena.riot.writer.TurtleWriter$TurtleWriter$: java.lang.String baseURI>;

        virtualinvoke r0.<org.apache.jena.riot.writer.TurtleWriter$TurtleWriter$: void writeBase(java.lang.String)>($r1);

        $r2 = r0.<org.apache.jena.riot.writer.TurtleWriter$TurtleWriter$: org.apache.jena.riot.system.PrefixMap prefixMap>;

        virtualinvoke r0.<org.apache.jena.riot.writer.TurtleWriter$TurtleWriter$: void writePrefixes(org.apache.jena.riot.system.PrefixMap)>($r2);

        $r3 = r0.<org.apache.jena.riot.writer.TurtleWriter$TurtleWriter$: org.apache.jena.riot.system.PrefixMap prefixMap>;

        $z0 = interfaceinvoke $r3.<org.apache.jena.riot.system.PrefixMap: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z1 = interfaceinvoke r4.<com.hp.hpl.jena.graph.Graph: boolean isEmpty()>();

        if $z1 != 0 goto label1;

        $r5 = r0.<org.apache.jena.riot.writer.TurtleWriter$TurtleWriter$: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r5.<org.apache.jena.atlas.io.IndentedWriter: void println()>();

     label1:
        virtualinvoke r0.<org.apache.jena.riot.writer.TurtleWriter$TurtleWriter$: void writeGraphTTL(com.hp.hpl.jena.graph.Graph)>(r4);

        return;
    }

    static void access$000(org.apache.jena.riot.writer.TurtleWriter$TurtleWriter$, com.hp.hpl.jena.graph.Graph)
    {
        org.apache.jena.riot.writer.TurtleWriter$TurtleWriter$ r0;
        com.hp.hpl.jena.graph.Graph r1;

        r0 := @parameter0: org.apache.jena.riot.writer.TurtleWriter$TurtleWriter$;

        r1 := @parameter1: com.hp.hpl.jena.graph.Graph;

        specialinvoke r0.<org.apache.jena.riot.writer.TurtleWriter$TurtleWriter$: void write(com.hp.hpl.jena.graph.Graph)>(r1);

        return;
    }
}
