final class org.codehaus.groovy.runtime.DefaultGroovyMethods$12 extends java.lang.Object implements java.util.Iterator
{
    java.lang.String nextVal;
    boolean nextMustRead;
    boolean hasNext;
    private final java.io.BufferedReader val$bufferedReader;

    void <init>(java.io.BufferedReader)
    {
        java.io.BufferedReader r1;
        org.codehaus.groovy.runtime.DefaultGroovyMethods$12 r0;

        r0 := @this: org.codehaus.groovy.runtime.DefaultGroovyMethods$12;

        r1 := @parameter0: java.io.BufferedReader;

        r0.<org.codehaus.groovy.runtime.DefaultGroovyMethods$12: java.io.BufferedReader val$bufferedReader> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.codehaus.groovy.runtime.DefaultGroovyMethods$12: boolean nextMustRead> = 1;

        r0.<org.codehaus.groovy.runtime.DefaultGroovyMethods$12: boolean hasNext> = 1;

        return;
    }

    public boolean hasNext()
    {
        org.codehaus.groovy.runtime.DefaultGroovyMethods$12 r0;
        java.io.IOException $r2;
        java.lang.String $r1;
        boolean $z0, $z1, $z2;

        r0 := @this: org.codehaus.groovy.runtime.DefaultGroovyMethods$12;

        $z0 = r0.<org.codehaus.groovy.runtime.DefaultGroovyMethods$12: boolean nextMustRead>;

        if $z0 == 0 goto label4;

        $z1 = r0.<org.codehaus.groovy.runtime.DefaultGroovyMethods$12: boolean hasNext>;

        if $z1 == 0 goto label4;

     label1:
        $r1 = specialinvoke r0.<org.codehaus.groovy.runtime.DefaultGroovyMethods$12: java.lang.String readNext()>();

        r0.<org.codehaus.groovy.runtime.DefaultGroovyMethods$12: java.lang.String nextVal> = $r1;

        r0.<org.codehaus.groovy.runtime.DefaultGroovyMethods$12: boolean nextMustRead> = 0;

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        r0.<org.codehaus.groovy.runtime.DefaultGroovyMethods$12: boolean hasNext> = 0;

     label4:
        $z2 = r0.<org.codehaus.groovy.runtime.DefaultGroovyMethods$12: boolean hasNext>;

        return $z2;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public java.lang.Object next()
    {
        org.codehaus.groovy.runtime.DefaultGroovyMethods$12 r0;
        java.io.IOException $r1;
        java.lang.String r2;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.runtime.DefaultGroovyMethods$12;

        r2 = null;

        $z0 = r0.<org.codehaus.groovy.runtime.DefaultGroovyMethods$12: boolean nextMustRead>;

        if $z0 == 0 goto label4;

     label1:
        r2 = specialinvoke r0.<org.codehaus.groovy.runtime.DefaultGroovyMethods$12: java.lang.String readNext()>();

     label2:
        goto label5;

     label3:
        $r1 := @caughtexception;

        r0.<org.codehaus.groovy.runtime.DefaultGroovyMethods$12: boolean hasNext> = 0;

        goto label5;

     label4:
        r2 = r0.<org.codehaus.groovy.runtime.DefaultGroovyMethods$12: java.lang.String nextVal>;

     label5:
        r0.<org.codehaus.groovy.runtime.DefaultGroovyMethods$12: boolean nextMustRead> = 1;

        return r2;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private java.lang.String readNext() throws java.io.IOException
    {
        java.io.BufferedReader $r1;
        java.lang.String $r2;
        org.codehaus.groovy.runtime.DefaultGroovyMethods$12 r0;

        r0 := @this: org.codehaus.groovy.runtime.DefaultGroovyMethods$12;

        $r1 = r0.<org.codehaus.groovy.runtime.DefaultGroovyMethods$12: java.io.BufferedReader val$bufferedReader>;

        $r2 = virtualinvoke $r1.<java.io.BufferedReader: java.lang.String readLine()>();

        if $r2 != null goto label1;

        r0.<org.codehaus.groovy.runtime.DefaultGroovyMethods$12: boolean hasNext> = 0;

     label1:
        return $r2;
    }

    public void remove()
    {
        java.lang.UnsupportedOperationException $r0;
        org.codehaus.groovy.runtime.DefaultGroovyMethods$12 r1;

        r1 := @this: org.codehaus.groovy.runtime.DefaultGroovyMethods$12;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Cannot remove() from a Reader Iterator");

        throw $r0;
    }
}
