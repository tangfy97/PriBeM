public final class org.apache.poi.openxml4j.opc.internal.MemoryPackagePart extends org.apache.poi.openxml4j.opc.PackagePart
{
    protected byte[] data;

    public void <init>(org.apache.poi.openxml4j.opc.OPCPackage, org.apache.poi.openxml4j.opc.PackagePartName, java.lang.String) throws org.apache.poi.openxml4j.exceptions.InvalidFormatException
    {
        org.apache.poi.openxml4j.opc.OPCPackage r1;
        org.apache.poi.openxml4j.opc.PackagePartName r2;
        org.apache.poi.openxml4j.opc.internal.MemoryPackagePart r0;
        java.lang.String r3;

        r0 := @this: org.apache.poi.openxml4j.opc.internal.MemoryPackagePart;

        r1 := @parameter0: org.apache.poi.openxml4j.opc.OPCPackage;

        r2 := @parameter1: org.apache.poi.openxml4j.opc.PackagePartName;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<org.apache.poi.openxml4j.opc.PackagePart: void <init>(org.apache.poi.openxml4j.opc.OPCPackage,org.apache.poi.openxml4j.opc.PackagePartName,java.lang.String)>(r1, r2, r3);

        return;
    }

    public void <init>(org.apache.poi.openxml4j.opc.OPCPackage, org.apache.poi.openxml4j.opc.PackagePartName, java.lang.String, boolean) throws org.apache.poi.openxml4j.exceptions.InvalidFormatException
    {
        org.apache.poi.openxml4j.opc.OPCPackage r1;
        org.apache.poi.openxml4j.opc.PackagePartName r2;
        org.apache.poi.openxml4j.opc.internal.MemoryPackagePart r0;
        org.apache.poi.openxml4j.opc.internal.ContentType $r3;
        java.lang.String r4;
        boolean z0;

        r0 := @this: org.apache.poi.openxml4j.opc.internal.MemoryPackagePart;

        r1 := @parameter0: org.apache.poi.openxml4j.opc.OPCPackage;

        r2 := @parameter1: org.apache.poi.openxml4j.opc.PackagePartName;

        r4 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        $r3 = new org.apache.poi.openxml4j.opc.internal.ContentType;

        specialinvoke $r3.<org.apache.poi.openxml4j.opc.internal.ContentType: void <init>(java.lang.String)>(r4);

        specialinvoke r0.<org.apache.poi.openxml4j.opc.PackagePart: void <init>(org.apache.poi.openxml4j.opc.OPCPackage,org.apache.poi.openxml4j.opc.PackagePartName,org.apache.poi.openxml4j.opc.internal.ContentType,boolean)>(r1, r2, $r3, z0);

        return;
    }

    protected java.io.InputStream getInputStreamImpl()
    {
        byte[] $r1, $r3, $r4;
        java.io.ByteArrayInputStream $r2;
        org.apache.poi.openxml4j.opc.internal.MemoryPackagePart r0;

        r0 := @this: org.apache.poi.openxml4j.opc.internal.MemoryPackagePart;

        $r1 = r0.<org.apache.poi.openxml4j.opc.internal.MemoryPackagePart: byte[] data>;

        if $r1 != null goto label1;

        $r4 = newarray (byte)[0];

        r0.<org.apache.poi.openxml4j.opc.internal.MemoryPackagePart: byte[] data> = $r4;

     label1:
        $r2 = new java.io.ByteArrayInputStream;

        $r3 = r0.<org.apache.poi.openxml4j.opc.internal.MemoryPackagePart: byte[] data>;

        specialinvoke $r2.<java.io.ByteArrayInputStream: void <init>(byte[])>($r3);

        return $r2;
    }

    protected java.io.OutputStream getOutputStreamImpl()
    {
        org.apache.poi.openxml4j.opc.internal.MemoryPackagePart r1;
        org.apache.poi.openxml4j.opc.internal.MemoryPackagePartOutputStream $r0;

        r1 := @this: org.apache.poi.openxml4j.opc.internal.MemoryPackagePart;

        $r0 = new org.apache.poi.openxml4j.opc.internal.MemoryPackagePartOutputStream;

        specialinvoke $r0.<org.apache.poi.openxml4j.opc.internal.MemoryPackagePartOutputStream: void <init>(org.apache.poi.openxml4j.opc.internal.MemoryPackagePart)>(r1);

        return $r0;
    }

    public long getSize()
    {
        byte[] $r1, $r2;
        org.apache.poi.openxml4j.opc.internal.MemoryPackagePart r0;
        int $i0;
        long $l1;

        r0 := @this: org.apache.poi.openxml4j.opc.internal.MemoryPackagePart;

        $r1 = r0.<org.apache.poi.openxml4j.opc.internal.MemoryPackagePart: byte[] data>;

        if $r1 != null goto label1;

        $l1 = 0L;

        goto label2;

     label1:
        $r2 = r0.<org.apache.poi.openxml4j.opc.internal.MemoryPackagePart: byte[] data>;

        $i0 = lengthof $r2;

        $l1 = (long) $i0;

     label2:
        return $l1;
    }

    public void clear()
    {
        org.apache.poi.openxml4j.opc.internal.MemoryPackagePart r0;

        r0 := @this: org.apache.poi.openxml4j.opc.internal.MemoryPackagePart;

        r0.<org.apache.poi.openxml4j.opc.internal.MemoryPackagePart: byte[] data> = null;

        return;
    }

    public boolean save(java.io.OutputStream) throws org.apache.poi.openxml4j.exceptions.OpenXML4JException
    {
        java.io.OutputStream r2;
        org.apache.poi.openxml4j.opc.internal.MemoryPackagePart r1;
        org.apache.poi.openxml4j.opc.internal.marshallers.ZipPartMarshaller $r0;
        boolean $z0;

        r1 := @this: org.apache.poi.openxml4j.opc.internal.MemoryPackagePart;

        r2 := @parameter0: java.io.OutputStream;

        $r0 = new org.apache.poi.openxml4j.opc.internal.marshallers.ZipPartMarshaller;

        specialinvoke $r0.<org.apache.poi.openxml4j.opc.internal.marshallers.ZipPartMarshaller: void <init>()>();

        $z0 = virtualinvoke $r0.<org.apache.poi.openxml4j.opc.internal.marshallers.ZipPartMarshaller: boolean marshall(org.apache.poi.openxml4j.opc.PackagePart,java.io.OutputStream)>(r1, r2);

        return $z0;
    }

    public boolean load(java.io.InputStream) throws org.apache.poi.openxml4j.exceptions.InvalidFormatException
    {
        byte[] $r3;
        java.io.ByteArrayOutputStream $r0;
        org.apache.poi.openxml4j.exceptions.InvalidFormatException $r5;
        org.apache.poi.openxml4j.opc.internal.MemoryPackagePart r2;
        java.io.IOException $r4;
        java.lang.String $r6;
        java.io.InputStream r1;

        r2 := @this: org.apache.poi.openxml4j.opc.internal.MemoryPackagePart;

        r1 := @parameter0: java.io.InputStream;

        $r0 = new java.io.ByteArrayOutputStream;

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>();

     label1:
        staticinvoke <org.apache.poi.util.IOUtils: void copy(java.io.InputStream,java.io.OutputStream)>(r1, $r0);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new org.apache.poi.openxml4j.exceptions.InvalidFormatException;

        $r6 = virtualinvoke $r4.<java.io.IOException: java.lang.String getMessage()>();

        specialinvoke $r5.<org.apache.poi.openxml4j.exceptions.InvalidFormatException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label4:
        $r3 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        r2.<org.apache.poi.openxml4j.opc.internal.MemoryPackagePart: byte[] data> = $r3;

        return 1;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void close()
    {
        org.apache.poi.openxml4j.opc.internal.MemoryPackagePart r0;

        r0 := @this: org.apache.poi.openxml4j.opc.internal.MemoryPackagePart;

        return;
    }

    public void flush()
    {
        org.apache.poi.openxml4j.opc.internal.MemoryPackagePart r0;

        r0 := @this: org.apache.poi.openxml4j.opc.internal.MemoryPackagePart;

        return;
    }
}
