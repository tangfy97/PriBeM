public final class org.waveprotocol.wave.model.wave.data.impl.UnmodifiableBlipData extends org.waveprotocol.wave.model.wave.data.impl.ForwardingReadableBlipData implements org.waveprotocol.wave.model.wave.data.BlipData
{
    private static final org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData$Factory WAVELET_FACTORY;
    private final org.waveprotocol.wave.model.wave.data.ReadableBlipData data;
    private org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData wavelet;

    public void <init>(org.waveprotocol.wave.model.wave.data.ReadableBlipData)
    {
        org.waveprotocol.wave.model.wave.data.ReadableBlipData r1;
        org.waveprotocol.wave.model.wave.data.impl.UnmodifiableBlipData r0;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.UnmodifiableBlipData;

        r1 := @parameter0: org.waveprotocol.wave.model.wave.data.ReadableBlipData;

        specialinvoke r0.<org.waveprotocol.wave.model.wave.data.impl.ForwardingReadableBlipData: void <init>()>();

        r0.<org.waveprotocol.wave.model.wave.data.impl.UnmodifiableBlipData: org.waveprotocol.wave.model.wave.data.ReadableBlipData data> = r1;

        return;
    }

    protected org.waveprotocol.wave.model.wave.data.ReadableBlipData delegate()
    {
        org.waveprotocol.wave.model.wave.data.ReadableBlipData $r1;
        org.waveprotocol.wave.model.wave.data.impl.UnmodifiableBlipData r0;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.UnmodifiableBlipData;

        $r1 = r0.<org.waveprotocol.wave.model.wave.data.impl.UnmodifiableBlipData: org.waveprotocol.wave.model.wave.data.ReadableBlipData data>;

        return $r1;
    }

    public org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData getWavelet()
    {
        org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData$Factory $r4;
        org.waveprotocol.wave.model.wave.data.ReadableWaveletData $r5;
        org.waveprotocol.wave.model.wave.data.ReadableBlipData $r3;
        org.waveprotocol.wave.model.wave.data.impl.UnmodifiableBlipData r0;
        org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData $r1, $r2, $r6;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.UnmodifiableBlipData;

        $r1 = r0.<org.waveprotocol.wave.model.wave.data.impl.UnmodifiableBlipData: org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData wavelet>;

        if $r1 != null goto label1;

        $r4 = <org.waveprotocol.wave.model.wave.data.impl.UnmodifiableBlipData: org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData$Factory WAVELET_FACTORY>;

        $r3 = r0.<org.waveprotocol.wave.model.wave.data.impl.UnmodifiableBlipData: org.waveprotocol.wave.model.wave.data.ReadableBlipData data>;

        $r5 = interfaceinvoke $r3.<org.waveprotocol.wave.model.wave.data.ReadableBlipData: org.waveprotocol.wave.model.wave.data.ReadableWaveletData getWavelet()>();

        $r6 = virtualinvoke $r4.<org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData$Factory: org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData create(org.waveprotocol.wave.model.wave.data.ReadableWaveletData)>($r5);

        r0.<org.waveprotocol.wave.model.wave.data.impl.UnmodifiableBlipData: org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData wavelet> = $r6;

     label1:
        $r2 = r0.<org.waveprotocol.wave.model.wave.data.impl.UnmodifiableBlipData: org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData wavelet>;

        return $r2;
    }

    public final void submit()
    {
        java.lang.UnsupportedOperationException $r0;
        org.waveprotocol.wave.model.wave.data.impl.UnmodifiableBlipData r1;

        r1 := @this: org.waveprotocol.wave.model.wave.data.impl.UnmodifiableBlipData;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("UnmodifiableBlipData doesn\'t support submit");

        throw $r0;
    }

    public final long setLastModifiedTime(long)
    {
        java.lang.UnsupportedOperationException $r0;
        long l0;
        org.waveprotocol.wave.model.wave.data.impl.UnmodifiableBlipData r1;

        r1 := @this: org.waveprotocol.wave.model.wave.data.impl.UnmodifiableBlipData;

        l0 := @parameter0: long;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("UnmodifiableBlipData doesn\'t support setLastModifiedTime");

        throw $r0;
    }

    public final long setLastModifiedVersion(long)
    {
        java.lang.UnsupportedOperationException $r0;
        long l0;
        org.waveprotocol.wave.model.wave.data.impl.UnmodifiableBlipData r1;

        r1 := @this: org.waveprotocol.wave.model.wave.data.impl.UnmodifiableBlipData;

        l0 := @parameter0: long;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("UnmodifiableBlipData doesn\'t support setLastModifiedVersion");

        throw $r0;
    }

    public void onRemoteContentModified()
    {
        java.lang.UnsupportedOperationException $r0;
        org.waveprotocol.wave.model.wave.data.impl.UnmodifiableBlipData r1;

        r1 := @this: org.waveprotocol.wave.model.wave.data.impl.UnmodifiableBlipData;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("UnmodifiableBlipData doesn\'t support onRemoteContentModified");

        throw $r0;
    }

    public void addContributor(org.waveprotocol.wave.model.wave.ParticipantId)
    {
        java.lang.UnsupportedOperationException $r0;
        org.waveprotocol.wave.model.wave.ParticipantId r2;
        org.waveprotocol.wave.model.wave.data.impl.UnmodifiableBlipData r1;

        r1 := @this: org.waveprotocol.wave.model.wave.data.impl.UnmodifiableBlipData;

        r2 := @parameter0: org.waveprotocol.wave.model.wave.ParticipantId;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("UnmodifiableBlipData doesn\'t support addContributor");

        throw $r0;
    }

    public void removeContributor(org.waveprotocol.wave.model.wave.ParticipantId)
    {
        java.lang.UnsupportedOperationException $r0;
        org.waveprotocol.wave.model.wave.ParticipantId r2;
        org.waveprotocol.wave.model.wave.data.impl.UnmodifiableBlipData r1;

        r1 := @this: org.waveprotocol.wave.model.wave.data.impl.UnmodifiableBlipData;

        r2 := @parameter0: org.waveprotocol.wave.model.wave.ParticipantId;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("UnmodifiableBlipData doesn\'t support removeContributor");

        throw $r0;
    }

    public volatile org.waveprotocol.wave.model.wave.data.ReadableWaveletData getWavelet()
    {
        org.waveprotocol.wave.model.wave.data.impl.UnmodifiableBlipData r0;
        org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData $r1;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.UnmodifiableBlipData;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.wave.data.impl.UnmodifiableBlipData: org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData getWavelet()>();

        return $r1;
    }

    public volatile org.waveprotocol.wave.model.wave.data.WaveletData getWavelet()
    {
        org.waveprotocol.wave.model.wave.data.impl.UnmodifiableBlipData r0;
        org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData $r1;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.UnmodifiableBlipData;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.wave.data.impl.UnmodifiableBlipData: org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData getWavelet()>();

        return $r1;
    }

    static void <clinit>()
    {
        org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData$Factory $r0;

        $r0 = new org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData$Factory;

        specialinvoke $r0.<org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData$Factory: void <init>()>();

        <org.waveprotocol.wave.model.wave.data.impl.UnmodifiableBlipData: org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData$Factory WAVELET_FACTORY> = $r0;

        return;
    }
}
