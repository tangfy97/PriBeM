class org.apache.jena.riot.out.NodeToLabel$AllocatorBNodeAsIRI extends org.apache.jena.riot.out.NodeToLabel$AllocatorBase
{

    private void <init>()
    {
        org.apache.jena.riot.out.NodeToLabel$AllocatorBNodeAsIRI r0;

        r0 := @this: org.apache.jena.riot.out.NodeToLabel$AllocatorBNodeAsIRI;

        specialinvoke r0.<org.apache.jena.riot.out.NodeToLabel$AllocatorBase: void <init>(org.apache.jena.riot.out.NodeToLabel$1)>(null);

        return;
    }

    protected java.lang.String labelForBlank(com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.graph.Node r0;
        org.apache.jena.riot.out.NodeToLabel$AllocatorBNodeAsIRI r7;
        java.lang.StringBuilder $r2, $r3, $r4, $r5;
        java.lang.String $r1, $r6;

        r7 := @this: org.apache.jena.riot.out.NodeToLabel$AllocatorBNodeAsIRI;

        r0 := @parameter0: com.hp.hpl.jena.graph.Node;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.graph.Node: java.lang.String getBlankNodeLabel()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<_:");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    void <init>(org.apache.jena.riot.out.NodeToLabel$1)
    {
        org.apache.jena.riot.out.NodeToLabel$AllocatorBNodeAsIRI r0;
        org.apache.jena.riot.out.NodeToLabel$1 r1;

        r0 := @this: org.apache.jena.riot.out.NodeToLabel$AllocatorBNodeAsIRI;

        r1 := @parameter0: org.apache.jena.riot.out.NodeToLabel$1;

        specialinvoke r0.<org.apache.jena.riot.out.NodeToLabel$AllocatorBNodeAsIRI: void <init>()>();

        return;
    }
}
