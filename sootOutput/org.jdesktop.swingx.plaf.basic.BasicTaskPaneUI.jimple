public class org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI extends org.jdesktop.swingx.plaf.TaskPaneUI
{
    private static java.awt.event.FocusListener focusListener;
    protected int titleHeight;
    protected int roundHeight;
    protected org.jdesktop.swingx.JXTaskPane group;
    protected boolean mouseOver;
    protected javax.swing.event.MouseInputListener mouseListener;
    protected java.beans.PropertyChangeListener propertyListener;

    public void <init>()
    {
        org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI;

        specialinvoke r0.<org.jdesktop.swingx.plaf.TaskPaneUI: void <init>()>();

        r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI: int titleHeight> = 25;

        r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI: int roundHeight> = 5;

        return;
    }

    public static javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)
    {
        javax.swing.JComponent r1;
        org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI $r0;

        r1 := @parameter0: javax.swing.JComponent;

        $r0 = new org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI;

        specialinvoke $r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI: void <init>()>();

        return $r0;
    }

    public void installUI(javax.swing.JComponent)
    {
        javax.swing.JComponent r1;
        org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI r0;
        org.jdesktop.swingx.JXTaskPane $r2;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI;

        r1 := @parameter0: javax.swing.JComponent;

        specialinvoke r0.<org.jdesktop.swingx.plaf.TaskPaneUI: void installUI(javax.swing.JComponent)>(r1);

        $r2 = (org.jdesktop.swingx.JXTaskPane) r1;

        r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI: org.jdesktop.swingx.JXTaskPane group> = $r2;

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI: void installDefaults()>();

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI: void installListeners()>();

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI: void installKeyboardActions()>();

        return;
    }

    protected void installDefaults()
    {
        javax.swing.JComponent $r7, $r12;
        javax.swing.border.Border $r4, $r8;
        java.lang.Boolean $r2;
        java.awt.Container $r6, $r11;
        org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI r0;
        org.jdesktop.swingx.JXTaskPane $r1, $r3, $r5, $r9, $r10;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI: org.jdesktop.swingx.JXTaskPane group>;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        staticinvoke <javax.swing.LookAndFeel: void installProperty(javax.swing.JComponent,java.lang.String,java.lang.Object)>($r1, "opaque", $r2);

        $r3 = r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI: org.jdesktop.swingx.JXTaskPane group>;

        $r4 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI: javax.swing.border.Border createPaneBorder()>();

        virtualinvoke $r3.<org.jdesktop.swingx.JXTaskPane: void setBorder(javax.swing.border.Border)>($r4);

        $r5 = r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI: org.jdesktop.swingx.JXTaskPane group>;

        $r6 = virtualinvoke $r5.<org.jdesktop.swingx.JXTaskPane: java.awt.Container getContentPane()>();

        $r7 = (javax.swing.JComponent) $r6;

        $r8 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI: javax.swing.border.Border createContentPaneBorder()>();

        virtualinvoke $r7.<javax.swing.JComponent: void setBorder(javax.swing.border.Border)>($r8);

        $r9 = r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI: org.jdesktop.swingx.JXTaskPane group>;

        staticinvoke <javax.swing.LookAndFeel: void installColorsAndFont(javax.swing.JComponent,java.lang.String,java.lang.String,java.lang.String)>($r9, "TaskPane.background", "TaskPane.foreground", "TaskPane.font");

        $r10 = r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI: org.jdesktop.swingx.JXTaskPane group>;

        $r11 = virtualinvoke $r10.<org.jdesktop.swingx.JXTaskPane: java.awt.Container getContentPane()>();

        $r12 = (javax.swing.JComponent) $r11;

        staticinvoke <javax.swing.LookAndFeel: void installColorsAndFont(javax.swing.JComponent,java.lang.String,java.lang.String,java.lang.String)>($r12, "TaskPane.background", "TaskPane.foreground", "TaskPane.font");

        return;
    }

    protected void installListeners()
    {
        java.awt.event.FocusListener $r6;
        javax.swing.event.MouseInputListener $r1, $r2, $r4;
        java.beans.PropertyChangeListener $r8, $r9;
        org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI r0;
        org.jdesktop.swingx.JXTaskPane $r3, $r5, $r7, $r10;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI: javax.swing.event.MouseInputListener createMouseInputListener()>();

        r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI: javax.swing.event.MouseInputListener mouseListener> = $r1;

        $r3 = r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI: org.jdesktop.swingx.JXTaskPane group>;

        $r2 = r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI: javax.swing.event.MouseInputListener mouseListener>;

        virtualinvoke $r3.<org.jdesktop.swingx.JXTaskPane: void addMouseMotionListener(java.awt.event.MouseMotionListener)>($r2);

        $r5 = r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI: org.jdesktop.swingx.JXTaskPane group>;

        $r4 = r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI: javax.swing.event.MouseInputListener mouseListener>;

        virtualinvoke $r5.<org.jdesktop.swingx.JXTaskPane: void addMouseListener(java.awt.event.MouseListener)>($r4);

        $r7 = r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI: org.jdesktop.swingx.JXTaskPane group>;

        $r6 = <org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI: java.awt.event.FocusListener focusListener>;

        virtualinvoke $r7.<org.jdesktop.swingx.JXTaskPane: void addFocusListener(java.awt.event.FocusListener)>($r6);

        $r8 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI: java.beans.PropertyChangeListener createPropertyListener()>();

        r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI: java.beans.PropertyChangeListener propertyListener> = $r8;

        $r10 = r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI: org.jdesktop.swingx.JXTaskPane group>;

        $r9 = r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI: java.beans.PropertyChangeListener propertyListener>;

        virtualinvoke $r10.<org.jdesktop.swingx.JXTaskPane: void addPropertyChangeListener(java.beans.PropertyChangeListener)>($r9);

        return;
    }

    protected void installKeyboardActions()
    {
        java.lang.Object $r0;
        javax.swing.InputMap r1;
        org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI r2;
        javax.swing.ActionMap $r3;
        org.jdesktop.swingx.JXTaskPane $r4, $r5;

        r2 := @this: org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI;

        $r0 = staticinvoke <javax.swing.UIManager: java.lang.Object get(java.lang.Object)>("TaskPane.focusInputMap");

        r1 = (javax.swing.InputMap) $r0;

        if r1 == null goto label1;

        $r5 = r2.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI: org.jdesktop.swingx.JXTaskPane group>;

        staticinvoke <javax.swing.SwingUtilities: void replaceUIInputMap(javax.swing.JComponent,int,javax.swing.InputMap)>($r5, 0, r1);

     label1:
        $r3 = virtualinvoke r2.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI: javax.swing.ActionMap getActionMap()>();

        if $r3 == null goto label2;

        $r4 = r2.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI: org.jdesktop.swingx.JXTaskPane group>;

        staticinvoke <javax.swing.SwingUtilities: void replaceUIActionMap(javax.swing.JComponent,javax.swing.ActionMap)>($r4, $r3);

     label2:
        return;
    }

    javax.swing.ActionMap getActionMap()
    {
        org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$ToggleCollapsedAction $r1;
        javax.swing.plaf.ActionMapUIResource $r0;
        org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI r2;

        r2 := @this: org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI;

        $r0 = new javax.swing.plaf.ActionMapUIResource;

        specialinvoke $r0.<javax.swing.plaf.ActionMapUIResource: void <init>()>();

        $r1 = new org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$ToggleCollapsedAction;

        specialinvoke $r1.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$ToggleCollapsedAction: void <init>(org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI)>(r2);

        virtualinvoke $r0.<javax.swing.ActionMap: void put(java.lang.Object,javax.swing.Action)>("toggleCollapsed", $r1);

        return $r0;
    }

    public void uninstallUI(javax.swing.JComponent)
    {
        javax.swing.JComponent r1;
        org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI;

        r1 := @parameter0: javax.swing.JComponent;

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI: void uninstallListeners()>();

        specialinvoke r0.<org.jdesktop.swingx.plaf.TaskPaneUI: void uninstallUI(javax.swing.JComponent)>(r1);

        return;
    }

    protected void uninstallListeners()
    {
        java.awt.event.FocusListener $r5;
        javax.swing.event.MouseInputListener $r1, $r3;
        java.beans.PropertyChangeListener $r7;
        org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI r0;
        org.jdesktop.swingx.JXTaskPane $r2, $r4, $r6, $r8;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI;

        $r2 = r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI: org.jdesktop.swingx.JXTaskPane group>;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI: javax.swing.event.MouseInputListener mouseListener>;

        virtualinvoke $r2.<org.jdesktop.swingx.JXTaskPane: void removeMouseListener(java.awt.event.MouseListener)>($r1);

        $r4 = r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI: org.jdesktop.swingx.JXTaskPane group>;

        $r3 = r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI: javax.swing.event.MouseInputListener mouseListener>;

        virtualinvoke $r4.<org.jdesktop.swingx.JXTaskPane: void removeMouseMotionListener(java.awt.event.MouseMotionListener)>($r3);

        $r6 = r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI: org.jdesktop.swingx.JXTaskPane group>;

        $r5 = <org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI: java.awt.event.FocusListener focusListener>;

        virtualinvoke $r6.<org.jdesktop.swingx.JXTaskPane: void removeFocusListener(java.awt.event.FocusListener)>($r5);

        $r8 = r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI: org.jdesktop.swingx.JXTaskPane group>;

        $r7 = r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI: java.beans.PropertyChangeListener propertyListener>;

        virtualinvoke $r8.<org.jdesktop.swingx.JXTaskPane: void removePropertyChangeListener(java.beans.PropertyChangeListener)>($r7);

        return;
    }

    protected javax.swing.event.MouseInputListener createMouseInputListener()
    {
        org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI r1;
        org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$ToggleListener $r0;

        r1 := @this: org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI;

        $r0 = new org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$ToggleListener;

        specialinvoke $r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$ToggleListener: void <init>(org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI)>(r1);

        return $r0;
    }

    protected java.beans.PropertyChangeListener createPropertyListener()
    {
        org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$ChangeListener $r0;
        org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI r1;

        r1 := @this: org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI;

        $r0 = new org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$ChangeListener;

        specialinvoke $r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$ChangeListener: void <init>(org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI)>(r1);

        return $r0;
    }

    protected boolean isInBorder(java.awt.event.MouseEvent)
    {
        int $i0, $i1;
        org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI r1;
        java.awt.Component $r2;
        java.awt.event.MouseEvent r0;
        boolean $z0;

        r1 := @this: org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI;

        r0 := @parameter0: java.awt.event.MouseEvent;

        $i0 = virtualinvoke r0.<java.awt.event.MouseEvent: int getY()>();

        $r2 = virtualinvoke r0.<java.awt.event.MouseEvent: java.awt.Component getComponent()>();

        $i1 = virtualinvoke r1.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI: int getTitleHeight(java.awt.Component)>($r2);

        if $i0 >= $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    protected int getTitleHeight(java.awt.Component)
    {
        java.awt.Font $r3;
        javax.swing.Icon $r5;
        java.awt.Component r0;
        java.awt.FontMetrics $r4;
        int $i0, $i1, $i2, $i3, i4;
        org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI r1;
        boolean $z0, $z1;
        org.jdesktop.swingx.JXTaskPane r2;

        r1 := @this: org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI;

        r0 := @parameter0: java.awt.Component;

        $z0 = r0 instanceof org.jdesktop.swingx.JXTaskPane;

        if $z0 == 0 goto label3;

        r2 = (org.jdesktop.swingx.JXTaskPane) r0;

        $r3 = virtualinvoke r2.<org.jdesktop.swingx.JXTaskPane: java.awt.Font getFont()>();

        i4 = r1.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI: int titleHeight>;

        if $r3 == null goto label1;

        $z1 = $r3 instanceof javax.swing.plaf.FontUIResource;

        if $z1 != 0 goto label1;

        $r4 = virtualinvoke r2.<org.jdesktop.swingx.JXTaskPane: java.awt.FontMetrics getFontMetrics(java.awt.Font)>($r3);

        $i3 = virtualinvoke $r4.<java.awt.FontMetrics: int getHeight()>();

        i4 = staticinvoke <java.lang.Math: int max(int,int)>(i4, $i3);

     label1:
        $r5 = virtualinvoke r2.<org.jdesktop.swingx.JXTaskPane: javax.swing.Icon getIcon()>();

        if $r5 == null goto label2;

        $i1 = interfaceinvoke $r5.<javax.swing.Icon: int getIconHeight()>();

        $i2 = $i1 + 4;

        i4 = staticinvoke <java.lang.Math: int max(int,int)>(i4, $i2);

     label2:
        return i4;

     label3:
        $i0 = r1.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI: int titleHeight>;

        return $i0;
    }

    protected javax.swing.border.Border createPaneBorder()
    {
        org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI r1;
        org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder $r0;

        r1 := @this: org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI;

        $r0 = new org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder;

        specialinvoke $r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder: void <init>(org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI)>(r1);

        return $r0;
    }

    public java.awt.Dimension getPreferredSize(javax.swing.JComponent)
    {
        javax.swing.border.Border $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        org.jdesktop.swingx.JXTaskPane $r1, $r5, $r9, $r11;
        boolean $z0, $z1;
        javax.swing.JComponent r7;
        org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder $r8, $r12;
        org.jdesktop.swingx.JXCollapsiblePane r3;
        java.awt.Component $r2;
        java.awt.Dimension $r4, $r13, $r14;
        javax.swing.JLabel $r10;
        org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI;

        r7 := @parameter0: javax.swing.JComponent;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI: org.jdesktop.swingx.JXTaskPane group>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.JXTaskPane: java.awt.Component getComponent(int)>(0);

        $z0 = $r2 instanceof org.jdesktop.swingx.JXCollapsiblePane;

        if $z0 != 0 goto label1;

        $r14 = specialinvoke r0.<org.jdesktop.swingx.plaf.TaskPaneUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)>(r7);

        return $r14;

     label1:
        r3 = (org.jdesktop.swingx.JXCollapsiblePane) $r2;

        $r4 = virtualinvoke r3.<org.jdesktop.swingx.JXCollapsiblePane: java.awt.Dimension getPreferredSize()>();

        $r5 = r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI: org.jdesktop.swingx.JXTaskPane group>;

        $r6 = virtualinvoke $r5.<org.jdesktop.swingx.JXTaskPane: javax.swing.border.Border getBorder()>();

        $z1 = $r6 instanceof org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder;

        if $z1 == 0 goto label2;

        $r8 = (org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder) $r6;

        $r10 = $r8.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder: javax.swing.JLabel label>;

        $r9 = r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI: org.jdesktop.swingx.JXTaskPane group>;

        $i3 = virtualinvoke $r9.<org.jdesktop.swingx.JXTaskPane: int getMnemonic()>();

        virtualinvoke $r10.<javax.swing.JLabel: void setDisplayedMnemonic(int)>($i3);

        $r12 = (org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder) $r6;

        $r11 = r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI: org.jdesktop.swingx.JXTaskPane group>;

        $r13 = virtualinvoke $r12.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder: java.awt.Dimension getPreferredSize(org.jdesktop.swingx.JXTaskPane)>($r11);

        $i5 = $r4.<java.awt.Dimension: int width>;

        $i4 = $r13.<java.awt.Dimension: int width>;

        $i6 = staticinvoke <java.lang.Math: int max(int,int)>($i5, $i4);

        $r4.<java.awt.Dimension: int width> = $i6;

        $i8 = $r4.<java.awt.Dimension: int height>;

        $i7 = $r13.<java.awt.Dimension: int height>;

        $i9 = $i8 + $i7;

        $r4.<java.awt.Dimension: int height> = $i9;

        goto label3;

     label2:
        $i0 = $r4.<java.awt.Dimension: int height>;

        $i1 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI: int getTitleHeight(java.awt.Component)>(r7);

        $i2 = $i0 + $i1;

        $r4.<java.awt.Dimension: int height> = $i2;

     label3:
        return $r4;
    }

    protected javax.swing.border.Border createContentPaneBorder()
    {
        java.awt.Color $r0;
        org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$ContentPaneBorder $r2;
        javax.swing.border.CompoundBorder $r1;
        org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI r4;
        javax.swing.border.Border $r3;

        r4 := @this: org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI;

        $r0 = staticinvoke <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>("TaskPane.borderColor");

        $r1 = new javax.swing.border.CompoundBorder;

        $r2 = new org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$ContentPaneBorder;

        specialinvoke $r2.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$ContentPaneBorder: void <init>(java.awt.Color)>($r0);

        $r3 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(10, 10, 10, 10);

        specialinvoke $r1.<javax.swing.border.CompoundBorder: void <init>(javax.swing.border.Border,javax.swing.border.Border)>($r2, $r3);

        return $r1;
    }

    public java.awt.Component createAction(javax.swing.Action)
    {
        org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$1 $r0;
        javax.swing.Action r2;
        org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI r1;

        r1 := @this: org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI;

        r2 := @parameter0: javax.swing.Action;

        $r0 = new org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$1;

        specialinvoke $r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$1: void <init>(org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI,javax.swing.Action)>(r1, r2);

        virtualinvoke r1.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI: void configure(org.jdesktop.swingx.JXHyperlink)>($r0);

        return $r0;
    }

    protected void configure(org.jdesktop.swingx.JXHyperlink)
    {
        java.awt.Color $r1;
        org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI r2;
        org.jdesktop.swingx.JXHyperlink r0;

        r2 := @this: org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI;

        r0 := @parameter0: org.jdesktop.swingx.JXHyperlink;

        virtualinvoke r0.<org.jdesktop.swingx.JXHyperlink: void setOpaque(boolean)>(0);

        virtualinvoke r0.<org.jdesktop.swingx.JXHyperlink: void setBorderPainted(boolean)>(0);

        virtualinvoke r0.<org.jdesktop.swingx.JXHyperlink: void setFocusPainted(boolean)>(1);

        $r1 = staticinvoke <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>("TaskPane.titleForeground");

        virtualinvoke r0.<org.jdesktop.swingx.JXHyperlink: void setForeground(java.awt.Color)>($r1);

        return;
    }

    protected void ensureVisible()
    {
        org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$2 $r0;
        org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI r1;

        r1 := @this: org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI;

        $r0 = new org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$2;

        specialinvoke $r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$2: void <init>(org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI)>(r1);

        staticinvoke <javax.swing.SwingUtilities: void invokeLater(java.lang.Runnable)>($r0);

        return;
    }

    protected int getRoundHeight()
    {
        int $i0;
        org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI;

        $i0 = r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI: int roundHeight>;

        return $i0;
    }

    static void <clinit>()
    {
        org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$RepaintOnFocus $r0;

        $r0 = new org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$RepaintOnFocus;

        specialinvoke $r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$RepaintOnFocus: void <init>()>();

        <org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI: java.awt.event.FocusListener focusListener> = $r0;

        return;
    }
}
