public final class com.google.inject.util.Types extends java.lang.Object
{

    private void <init>()
    {
        com.google.inject.util.Types r0;

        r0 := @this: com.google.inject.util.Types;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static transient java.lang.reflect.ParameterizedType newParameterizedType(java.lang.reflect.Type, java.lang.reflect.Type[])
    {
        java.lang.reflect.Type[] r1;
        java.lang.reflect.ParameterizedType $r2;
        java.lang.reflect.Type r0;

        r0 := @parameter0: java.lang.reflect.Type;

        r1 := @parameter1: java.lang.reflect.Type[];

        $r2 = staticinvoke <com.google.inject.util.Types: java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])>(null, r0, r1);

        return $r2;
    }

    public static transient java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type, java.lang.reflect.Type, java.lang.reflect.Type[])
    {
        com.google.inject.internal.MoreTypes$ParameterizedTypeImpl $r0;
        java.lang.reflect.Type r1, r2;
        java.lang.reflect.Type[] r3;

        r1 := @parameter0: java.lang.reflect.Type;

        r2 := @parameter1: java.lang.reflect.Type;

        r3 := @parameter2: java.lang.reflect.Type[];

        $r0 = new com.google.inject.internal.MoreTypes$ParameterizedTypeImpl;

        specialinvoke $r0.<com.google.inject.internal.MoreTypes$ParameterizedTypeImpl: void <init>(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])>(r1, r2, r3);

        return $r0;
    }

    public static java.lang.reflect.GenericArrayType arrayOf(java.lang.reflect.Type)
    {
        java.lang.reflect.Type r1;
        com.google.inject.internal.MoreTypes$GenericArrayTypeImpl $r0;

        r1 := @parameter0: java.lang.reflect.Type;

        $r0 = new com.google.inject.internal.MoreTypes$GenericArrayTypeImpl;

        specialinvoke $r0.<com.google.inject.internal.MoreTypes$GenericArrayTypeImpl: void <init>(java.lang.reflect.Type)>(r1);

        return $r0;
    }

    public static java.lang.reflect.WildcardType subtypeOf(java.lang.reflect.Type)
    {
        java.lang.reflect.Type r2;
        java.lang.reflect.Type[] $r1, $r3;
        com.google.inject.internal.MoreTypes$WildcardTypeImpl $r0;

        r2 := @parameter0: java.lang.reflect.Type;

        $r0 = new com.google.inject.internal.MoreTypes$WildcardTypeImpl;

        $r1 = newarray (java.lang.reflect.Type)[1];

        $r1[0] = r2;

        $r3 = <com.google.inject.internal.MoreTypes: java.lang.reflect.Type[] EMPTY_TYPE_ARRAY>;

        specialinvoke $r0.<com.google.inject.internal.MoreTypes$WildcardTypeImpl: void <init>(java.lang.reflect.Type[],java.lang.reflect.Type[])>($r1, $r3);

        return $r0;
    }

    public static java.lang.reflect.WildcardType supertypeOf(java.lang.reflect.Type)
    {
        java.lang.reflect.Type r3;
        java.lang.reflect.Type[] $r1, $r2;
        com.google.inject.internal.MoreTypes$WildcardTypeImpl $r0;

        r3 := @parameter0: java.lang.reflect.Type;

        $r0 = new com.google.inject.internal.MoreTypes$WildcardTypeImpl;

        $r1 = newarray (java.lang.reflect.Type)[1];

        $r1[0] = class "Ljava/lang/Object;";

        $r2 = newarray (java.lang.reflect.Type)[1];

        $r2[0] = r3;

        specialinvoke $r0.<com.google.inject.internal.MoreTypes$WildcardTypeImpl: void <init>(java.lang.reflect.Type[],java.lang.reflect.Type[])>($r1, $r2);

        return $r0;
    }

    public static java.lang.reflect.ParameterizedType listOf(java.lang.reflect.Type)
    {
        java.lang.reflect.Type[] $r0;
        java.lang.reflect.ParameterizedType $r2;
        java.lang.reflect.Type r1;

        r1 := @parameter0: java.lang.reflect.Type;

        $r0 = newarray (java.lang.reflect.Type)[1];

        $r0[0] = r1;

        $r2 = staticinvoke <com.google.inject.util.Types: java.lang.reflect.ParameterizedType newParameterizedType(java.lang.reflect.Type,java.lang.reflect.Type[])>(class "Ljava/util/List;", $r0);

        return $r2;
    }

    public static java.lang.reflect.ParameterizedType setOf(java.lang.reflect.Type)
    {
        java.lang.reflect.Type[] $r0;
        java.lang.reflect.ParameterizedType $r2;
        java.lang.reflect.Type r1;

        r1 := @parameter0: java.lang.reflect.Type;

        $r0 = newarray (java.lang.reflect.Type)[1];

        $r0[0] = r1;

        $r2 = staticinvoke <com.google.inject.util.Types: java.lang.reflect.ParameterizedType newParameterizedType(java.lang.reflect.Type,java.lang.reflect.Type[])>(class "Ljava/util/Set;", $r0);

        return $r2;
    }

    public static java.lang.reflect.ParameterizedType mapOf(java.lang.reflect.Type, java.lang.reflect.Type)
    {
        java.lang.reflect.ParameterizedType $r3;
        java.lang.reflect.Type r1, r2;
        java.lang.reflect.Type[] $r0;

        r1 := @parameter0: java.lang.reflect.Type;

        r2 := @parameter1: java.lang.reflect.Type;

        $r0 = newarray (java.lang.reflect.Type)[2];

        $r0[0] = r1;

        $r0[1] = r2;

        $r3 = staticinvoke <com.google.inject.util.Types: java.lang.reflect.ParameterizedType newParameterizedType(java.lang.reflect.Type,java.lang.reflect.Type[])>(class "Ljava/util/Map;", $r0);

        return $r3;
    }

    public static java.lang.reflect.ParameterizedType providerOf(java.lang.reflect.Type)
    {
        java.lang.reflect.Type[] $r0;
        java.lang.reflect.ParameterizedType $r2;
        java.lang.reflect.Type r1;

        r1 := @parameter0: java.lang.reflect.Type;

        $r0 = newarray (java.lang.reflect.Type)[1];

        $r0[0] = r1;

        $r2 = staticinvoke <com.google.inject.util.Types: java.lang.reflect.ParameterizedType newParameterizedType(java.lang.reflect.Type,java.lang.reflect.Type[])>(class "Lcom/google/inject/Provider;", $r0);

        return $r2;
    }
}
