abstract class org.springframework.context.config.AbstractPropertyLoadingBeanDefinitionParser extends org.springframework.beans.factory.xml.AbstractSingleBeanDefinitionParser
{

    void <init>()
    {
        org.springframework.context.config.AbstractPropertyLoadingBeanDefinitionParser r0;

        r0 := @this: org.springframework.context.config.AbstractPropertyLoadingBeanDefinitionParser;

        specialinvoke r0.<org.springframework.beans.factory.xml.AbstractSingleBeanDefinitionParser: void <init>()>();

        return;
    }

    protected boolean shouldGenerateId()
    {
        org.springframework.context.config.AbstractPropertyLoadingBeanDefinitionParser r0;

        r0 := @this: org.springframework.context.config.AbstractPropertyLoadingBeanDefinitionParser;

        return 1;
    }

    protected void doParse(org.w3c.dom.Element, org.springframework.beans.factory.support.BeanDefinitionBuilder)
    {
        org.springframework.beans.factory.support.BeanDefinitionBuilder r5;
        java.lang.String[] $r11;
        java.lang.Integer $r10;
        org.springframework.context.config.AbstractPropertyLoadingBeanDefinitionParser r12;
        java.lang.Boolean $r7, $r9;
        java.lang.String $r1, $r2, $r3, $r4, $r6, $r8;
        boolean $z0, $z1, $z2, $z3;
        org.w3c.dom.Element r0;

        r12 := @this: org.springframework.context.config.AbstractPropertyLoadingBeanDefinitionParser;

        r0 := @parameter0: org.w3c.dom.Element;

        r5 := @parameter1: org.springframework.beans.factory.support.BeanDefinitionBuilder;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("location");

        $z0 = staticinvoke <org.springframework.util.StringUtils: boolean hasLength(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        $r11 = staticinvoke <org.springframework.util.StringUtils: java.lang.String[] commaDelimitedListToStringArray(java.lang.String)>($r1);

        virtualinvoke r5.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder addPropertyValue(java.lang.String,java.lang.Object)>("locations", $r11);

     label1:
        $r2 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("properties-ref");

        $z1 = staticinvoke <org.springframework.util.StringUtils: boolean hasLength(java.lang.String)>($r2);

        if $z1 == 0 goto label2;

        virtualinvoke r5.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder addPropertyReference(java.lang.String,java.lang.String)>("properties", $r2);

     label2:
        $r3 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("file-encoding");

        $z2 = staticinvoke <org.springframework.util.StringUtils: boolean hasLength(java.lang.String)>($r3);

        if $z2 == 0 goto label3;

        virtualinvoke r5.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder addPropertyReference(java.lang.String,java.lang.String)>("fileEncoding", $r3);

     label3:
        $r4 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("order");

        $z3 = staticinvoke <org.springframework.util.StringUtils: boolean hasLength(java.lang.String)>($r4);

        if $z3 == 0 goto label4;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r4);

        virtualinvoke r5.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder addPropertyValue(java.lang.String,java.lang.Object)>("order", $r10);

     label4:
        $r6 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("ignore-resource-not-found");

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r6);

        virtualinvoke r5.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder addPropertyValue(java.lang.String,java.lang.Object)>("ignoreResourceNotFound", $r7);

        $r8 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("local-override");

        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r8);

        virtualinvoke r5.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder addPropertyValue(java.lang.String,java.lang.Object)>("localOverride", $r9);

        virtualinvoke r5.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder setRole(int)>(2);

        return;
    }
}
