public final class org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition extends java.lang.Object
{
    java.lang.String name;
    org.apache.xmlbeans.impl.piccolo.xml.AttributeDefinition[] attributes;
    java.util.Map attributeMap;
    int size;

    public void <init>()
    {
        org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition: void <init>(java.lang.String)>(null);

        return;
    }

    public void <init>(java.lang.String)
    {
        org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition r0;
        org.apache.xmlbeans.impl.piccolo.xml.AttributeDefinition[] $r2;
        java.util.HashMap $r3;
        java.lang.String r1;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition: int size> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition: java.lang.String name> = r1;

        $r2 = newarray (org.apache.xmlbeans.impl.piccolo.xml.AttributeDefinition)[4];

        r0.<org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition: org.apache.xmlbeans.impl.piccolo.xml.AttributeDefinition[] attributes> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition: java.util.Map attributeMap> = $r3;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition: int size> = 0;

        return;
    }

    public final java.lang.String getName()
    {
        java.lang.String $r1;
        org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition: java.lang.String name>;

        return $r1;
    }

    public final void setName(java.lang.String)
    {
        java.lang.String r1;
        org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition: java.lang.String name> = r1;

        return;
    }

    public final org.apache.xmlbeans.impl.piccolo.xml.AttributeDefinition[] getAttributes()
    {
        org.apache.xmlbeans.impl.piccolo.xml.AttributeDefinition[] $r1;
        org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition: org.apache.xmlbeans.impl.piccolo.xml.AttributeDefinition[] attributes>;

        return $r1;
    }

    public final int getAttributeCount()
    {
        int $i0;
        org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition;

        $i0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition: int size>;

        return $i0;
    }

    public final org.apache.xmlbeans.impl.piccolo.util.IndexedObject getIndexedAttribute(java.lang.String)
    {
        org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition r0;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String r1;
        org.apache.xmlbeans.impl.piccolo.util.IndexedObject $r4;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition: java.util.Map attributeMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (org.apache.xmlbeans.impl.piccolo.util.IndexedObject) $r3;

        return $r4;
    }

    public final org.apache.xmlbeans.impl.piccolo.xml.AttributeDefinition getAttribute(int)
    {
        org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition r0;
        int i0;
        org.apache.xmlbeans.impl.piccolo.xml.AttributeDefinition[] $r1;
        org.apache.xmlbeans.impl.piccolo.xml.AttributeDefinition $r2;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition: org.apache.xmlbeans.impl.piccolo.xml.AttributeDefinition[] attributes>;

        $r2 = $r1[i0];

        return $r2;
    }

    public final void addAttribute(org.apache.xmlbeans.impl.piccolo.xml.AttributeDefinition) throws org.apache.xmlbeans.impl.piccolo.util.DuplicateKeyException
    {
        org.apache.xmlbeans.impl.piccolo.xml.AttributeDefinition r2;
        java.lang.StringBuffer $r13, $r14, $r16, $r17, $r19, $r20;
        org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition r1;
        java.util.Map $r3, $r10;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String $r4, $r11, $r15, $r18, $r21;
        org.apache.xmlbeans.impl.piccolo.util.IndexedObjectImpl $r0;
        org.apache.xmlbeans.impl.piccolo.util.DuplicateKeyException $r12;
        org.apache.xmlbeans.impl.piccolo.xml.AttributeDefinition[] $r6, $r7, r8, $r9;
        java.lang.Object $r5;

        r1 := @this: org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition;

        r2 := @parameter0: org.apache.xmlbeans.impl.piccolo.xml.AttributeDefinition;

        $r0 = new org.apache.xmlbeans.impl.piccolo.util.IndexedObjectImpl;

        $i0 = r1.<org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition: int size>;

        specialinvoke $r0.<org.apache.xmlbeans.impl.piccolo.util.IndexedObjectImpl: void <init>(int,java.lang.Object)>($i0, r2);

        $r3 = r1.<org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition: java.util.Map attributeMap>;

        $r4 = virtualinvoke r2.<org.apache.xmlbeans.impl.piccolo.xml.AttributeDefinition: java.lang.String getQName()>();

        $r5 = interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r0);

        if $r5 == null goto label1;

        $r10 = r1.<org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition: java.util.Map attributeMap>;

        $r11 = virtualinvoke r2.<org.apache.xmlbeans.impl.piccolo.xml.AttributeDefinition: java.lang.String getQName()>();

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r5);

        $r12 = new org.apache.xmlbeans.impl.piccolo.util.DuplicateKeyException;

        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("attribute \'");

        $r15 = virtualinvoke r2.<org.apache.xmlbeans.impl.piccolo.xml.AttributeDefinition: java.lang.String getQName()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' is already defined for element \'");

        $r18 = r1.<org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition: java.lang.String name>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'.");

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r12.<org.apache.xmlbeans.impl.piccolo.util.DuplicateKeyException: void <init>(java.lang.String)>($r21);

        throw $r12;

     label1:
        $i2 = r1.<org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition: int size>;

        $r6 = r1.<org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition: org.apache.xmlbeans.impl.piccolo.xml.AttributeDefinition[] attributes>;

        $i1 = lengthof $r6;

        if $i2 < $i1 goto label2;

        $i5 = r1.<org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition: int size>;

        $i6 = $i5 * 2;

        r8 = newarray (org.apache.xmlbeans.impl.piccolo.xml.AttributeDefinition)[$i6];

        $r9 = r1.<org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition: org.apache.xmlbeans.impl.piccolo.xml.AttributeDefinition[] attributes>;

        $i7 = r1.<org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition: int size>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, r8, 0, $i7);

        r1.<org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition: org.apache.xmlbeans.impl.piccolo.xml.AttributeDefinition[] attributes> = r8;

     label2:
        $r7 = r1.<org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition: org.apache.xmlbeans.impl.piccolo.xml.AttributeDefinition[] attributes>;

        $i3 = r1.<org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition: int size>;

        $i4 = $i3 + 1;

        r1.<org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition: int size> = $i4;

        $r7[$i3] = r2;

        return;
    }
}
