public class org.springframework.scripting.jruby.JRubyScriptFactory extends java.lang.Object implements org.springframework.scripting.ScriptFactory, org.springframework.beans.factory.BeanClassLoaderAware
{
    private final java.lang.String scriptSourceLocator;
    private final java.lang.Class[] scriptInterfaces;
    private java.lang.ClassLoader beanClassLoader;

    public void <init>(java.lang.String, java.lang.Class[])
    {
        java.lang.Class[] r3;
        java.lang.ClassLoader $r1;
        java.lang.String r2;
        org.springframework.scripting.jruby.JRubyScriptFactory r0;

        r0 := @this: org.springframework.scripting.jruby.JRubyScriptFactory;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Class[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <org.springframework.util.ClassUtils: java.lang.ClassLoader getDefaultClassLoader()>();

        r0.<org.springframework.scripting.jruby.JRubyScriptFactory: java.lang.ClassLoader beanClassLoader> = $r1;

        staticinvoke <org.springframework.util.Assert: void hasText(java.lang.String,java.lang.String)>(r2, "\'scriptSourceLocator\' must not be empty");

        staticinvoke <org.springframework.util.Assert: void notEmpty(java.lang.Object[],java.lang.String)>(r3, "\'scriptInterfaces\' must not be empty");

        r0.<org.springframework.scripting.jruby.JRubyScriptFactory: java.lang.String scriptSourceLocator> = r2;

        r0.<org.springframework.scripting.jruby.JRubyScriptFactory: java.lang.Class[] scriptInterfaces> = r3;

        return;
    }

    public void setBeanClassLoader(java.lang.ClassLoader)
    {
        java.lang.ClassLoader r1;
        org.springframework.scripting.jruby.JRubyScriptFactory r0;

        r0 := @this: org.springframework.scripting.jruby.JRubyScriptFactory;

        r1 := @parameter0: java.lang.ClassLoader;

        r0.<org.springframework.scripting.jruby.JRubyScriptFactory: java.lang.ClassLoader beanClassLoader> = r1;

        return;
    }

    public java.lang.String getScriptSourceLocator()
    {
        java.lang.String $r1;
        org.springframework.scripting.jruby.JRubyScriptFactory r0;

        r0 := @this: org.springframework.scripting.jruby.JRubyScriptFactory;

        $r1 = r0.<org.springframework.scripting.jruby.JRubyScriptFactory: java.lang.String scriptSourceLocator>;

        return $r1;
    }

    public java.lang.Class[] getScriptInterfaces()
    {
        java.lang.Class[] $r1;
        org.springframework.scripting.jruby.JRubyScriptFactory r0;

        r0 := @this: org.springframework.scripting.jruby.JRubyScriptFactory;

        $r1 = r0.<org.springframework.scripting.jruby.JRubyScriptFactory: java.lang.Class[] scriptInterfaces>;

        return $r1;
    }

    public boolean requiresConfigInterface()
    {
        org.springframework.scripting.jruby.JRubyScriptFactory r0;

        r0 := @this: org.springframework.scripting.jruby.JRubyScriptFactory;

        return 1;
    }

    public java.lang.Object getScriptedObject(org.springframework.scripting.ScriptSource, java.lang.Class[]) throws java.io.IOException, org.springframework.scripting.ScriptCompilationException
    {
        java.lang.Throwable $r6, $r8;
        org.jruby.exceptions.RaiseException $r16;
        org.jruby.RubyException $r9;
        java.lang.Class[] r2;
        org.springframework.scripting.ScriptSource r0;
        org.springframework.scripting.ScriptCompilationException $r14, $r15;
        org.jruby.runtime.builtin.IRubyObject $r10, $r11;
        java.lang.Object $r5;
        java.lang.String $r1, $r12;
        java.lang.ClassLoader $r4;
        org.springframework.scripting.jruby.JRubyScriptFactory r3;

        r3 := @this: org.springframework.scripting.jruby.JRubyScriptFactory;

        r0 := @parameter0: org.springframework.scripting.ScriptSource;

        r2 := @parameter1: java.lang.Class[];

     label1:
        $r1 = interfaceinvoke r0.<org.springframework.scripting.ScriptSource: java.lang.String getScriptAsString()>();

        $r4 = r3.<org.springframework.scripting.jruby.JRubyScriptFactory: java.lang.ClassLoader beanClassLoader>;

        $r5 = staticinvoke <org.springframework.scripting.jruby.JRubyScriptUtils: java.lang.Object createJRubyObject(java.lang.String,java.lang.Class[],java.lang.ClassLoader)>($r1, r2, $r4);

     label2:
        return $r5;

     label3:
        $r8 := @caughtexception;

        $r16 = (org.jruby.exceptions.RaiseException) $r8;

        $r9 = virtualinvoke $r16.<org.jruby.exceptions.RaiseException: org.jruby.RubyException getException()>();

        if $r9 == null goto label4;

        $r10 = $r9.<org.jruby.RubyException: org.jruby.runtime.builtin.IRubyObject message>;

        if $r10 == null goto label4;

        $r11 = $r9.<org.jruby.RubyException: org.jruby.runtime.builtin.IRubyObject message>;

        $r12 = virtualinvoke $r11.<java.lang.Object: java.lang.String toString()>();

        goto label5;

     label4:
        $r12 = "Unexpected JRuby error";

     label5:
        $r14 = new org.springframework.scripting.ScriptCompilationException;

        specialinvoke $r14.<org.springframework.scripting.ScriptCompilationException: void <init>(org.springframework.scripting.ScriptSource,java.lang.String,java.lang.Throwable)>(r0, $r12, $r8);

        throw $r14;

     label6:
        $r6 := @caughtexception;

        $r15 = new org.springframework.scripting.ScriptCompilationException;

        specialinvoke $r15.<org.springframework.scripting.ScriptCompilationException: void <init>(org.springframework.scripting.ScriptSource,java.lang.Throwable)>(r0, $r6);

        throw $r15;

        catch org.jruby.exceptions.RaiseException from label1 to label2 with label3;
        catch org.jruby.exceptions.JumpException from label1 to label2 with label6;
    }

    public java.lang.Class getScriptedObjectType(org.springframework.scripting.ScriptSource) throws java.io.IOException, org.springframework.scripting.ScriptCompilationException
    {
        org.springframework.scripting.ScriptSource r1;
        org.springframework.scripting.jruby.JRubyScriptFactory r0;

        r0 := @this: org.springframework.scripting.jruby.JRubyScriptFactory;

        r1 := @parameter0: org.springframework.scripting.ScriptSource;

        return null;
    }

    public boolean requiresScriptedObjectRefresh(org.springframework.scripting.ScriptSource)
    {
        org.springframework.scripting.ScriptSource r0;
        org.springframework.scripting.jruby.JRubyScriptFactory r1;
        boolean $z0;

        r1 := @this: org.springframework.scripting.jruby.JRubyScriptFactory;

        r0 := @parameter0: org.springframework.scripting.ScriptSource;

        $z0 = interfaceinvoke r0.<org.springframework.scripting.ScriptSource: boolean isModified()>();

        return $z0;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r3, $r4;
        java.lang.String $r2, $r5;
        org.springframework.scripting.jruby.JRubyScriptFactory r1;

        r1 := @this: org.springframework.scripting.jruby.JRubyScriptFactory;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JRubyScriptFactory: script source locator [");

        $r2 = r1.<org.springframework.scripting.jruby.JRubyScriptFactory: java.lang.String scriptSourceLocator>;

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }
}
