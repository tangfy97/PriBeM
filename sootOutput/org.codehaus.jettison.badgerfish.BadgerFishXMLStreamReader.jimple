public class org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader extends org.codehaus.jettison.AbstractXMLStreamReader
{
    private static final org.codehaus.jettison.badgerfish.BadgerFishConvention CONVENTION;
    private org.codehaus.jettison.util.FastStack nodes;
    private java.lang.String currentText;

    public void <init>(org.codehaus.jettison.json.JSONObject) throws org.codehaus.jettison.json.JSONException, javax.xml.stream.XMLStreamException
    {
        java.util.Iterator $r2;
        org.codehaus.jettison.util.FastStack $r8, $r10;
        org.codehaus.jettison.badgerfish.BadgerFishConvention $r7;
        org.codehaus.jettison.json.JSONObject r1, $r6;
        org.codehaus.jettison.Node $r5, $r9;
        java.lang.Object $r3;
        org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader r0;
        java.lang.String r4;

        r0 := @this: org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader;

        r1 := @parameter0: org.codehaus.jettison.json.JSONObject;

        specialinvoke r0.<org.codehaus.jettison.AbstractXMLStreamReader: void <init>()>();

        $r2 = virtualinvoke r1.<org.codehaus.jettison.json.JSONObject: java.util.Iterator keys()>();

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r3;

        $r5 = new org.codehaus.jettison.Node;

        $r6 = virtualinvoke r1.<org.codehaus.jettison.json.JSONObject: org.codehaus.jettison.json.JSONObject getJSONObject(java.lang.String)>(r4);

        $r7 = <org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader: org.codehaus.jettison.badgerfish.BadgerFishConvention CONVENTION>;

        specialinvoke $r5.<org.codehaus.jettison.Node: void <init>(org.codehaus.jettison.Node,java.lang.String,org.codehaus.jettison.json.JSONObject,org.codehaus.jettison.Convention)>(null, r4, $r6, $r7);

        r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader: org.codehaus.jettison.Node node> = $r5;

        $r8 = new org.codehaus.jettison.util.FastStack;

        specialinvoke $r8.<org.codehaus.jettison.util.FastStack: void <init>()>();

        r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader: org.codehaus.jettison.util.FastStack nodes> = $r8;

        $r10 = r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader: org.codehaus.jettison.util.FastStack nodes>;

        $r9 = r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader: org.codehaus.jettison.Node node>;

        virtualinvoke $r10.<org.codehaus.jettison.util.FastStack: void push(java.lang.Object)>($r9);

        r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader: int event> = 7;

        return;
    }

    public int next() throws javax.xml.stream.XMLStreamException
    {
        javax.xml.stream.XMLStreamException $r22;
        boolean $z0;
        org.codehaus.jettison.util.FastStack $r3, $r4, $r17, $r18;
        org.codehaus.jettison.Node $r1, $r6, $r7, $r9, $r11, r12, $r15, $r20, $r23;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, $i8;
        org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader r0;
        java.lang.String $r16;
        java.util.Iterator $r2, $r8;
        org.codehaus.jettison.json.JSONArray $r10, $r13, $r24;
        org.codehaus.jettison.json.JSONException $r21;
        java.lang.Object $r5, $r14, $r19;

        r0 := @this: org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader;

        $i0 = r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader: int event>;

        if $i0 != 7 goto label01;

        r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader: int event> = 1;

        goto label10;

     label01:
        $i1 = r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader: int event>;

        if $i1 != 2 goto label02;

        $r17 = r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader: org.codehaus.jettison.util.FastStack nodes>;

        $i6 = virtualinvoke $r17.<org.codehaus.jettison.util.FastStack: int size()>();

        if $i6 == 0 goto label02;

        $r18 = r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader: org.codehaus.jettison.util.FastStack nodes>;

        $r19 = virtualinvoke $r18.<org.codehaus.jettison.util.FastStack: java.lang.Object peek()>();

        $r20 = (org.codehaus.jettison.Node) $r19;

        r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader: org.codehaus.jettison.Node node> = $r20;

     label02:
        $r23 = r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader: org.codehaus.jettison.Node node>;

        $r24 = virtualinvoke $r23.<org.codehaus.jettison.Node: org.codehaus.jettison.json.JSONArray getArray()>();

        if $r24 == null goto label07;

        $r9 = r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader: org.codehaus.jettison.Node node>;

        $r10 = virtualinvoke $r9.<org.codehaus.jettison.Node: org.codehaus.jettison.json.JSONArray getArray()>();

        $i3 = virtualinvoke $r10.<org.codehaus.jettison.json.JSONArray: int length()>();

        $r11 = r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader: org.codehaus.jettison.Node node>;

        $i4 = virtualinvoke $r11.<org.codehaus.jettison.Node: int getArrayIndex()>();

        if $i3 <= $i4 goto label07;

        r12 = r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader: org.codehaus.jettison.Node node>;

        $i5 = virtualinvoke r12.<org.codehaus.jettison.Node: int getArrayIndex()>();

     label03:
        $r13 = virtualinvoke r12.<org.codehaus.jettison.Node: org.codehaus.jettison.json.JSONArray getArray()>();

        $r14 = virtualinvoke $r13.<org.codehaus.jettison.json.JSONArray: java.lang.Object get(int)>($i5);

        $r15 = r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader: org.codehaus.jettison.Node node>;

        $r16 = virtualinvoke $r15.<org.codehaus.jettison.Node: java.lang.String getCurrentKey()>();

        specialinvoke r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader: void processKey(java.lang.String,java.lang.Object)>($r16, $r14);

     label04:
        goto label06;

     label05:
        $r21 := @caughtexception;

        $r22 = new javax.xml.stream.XMLStreamException;

        specialinvoke $r22.<javax.xml.stream.XMLStreamException: void <init>(java.lang.Throwable)>($r21);

        throw $r22;

     label06:
        i7 = $i5 + 1;

        virtualinvoke r12.<org.codehaus.jettison.Node: void setArrayIndex(int)>(i7);

        goto label10;

     label07:
        $r1 = r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader: org.codehaus.jettison.Node node>;

        $r2 = virtualinvoke $r1.<org.codehaus.jettison.Node: java.util.Iterator getKeys()>();

        if $r2 == null goto label08;

        $r7 = r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader: org.codehaus.jettison.Node node>;

        $r8 = virtualinvoke $r7.<org.codehaus.jettison.Node: java.util.Iterator getKeys()>();

        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label08;

        specialinvoke r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader: void processElement()>();

        goto label10;

     label08:
        $r3 = r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader: org.codehaus.jettison.util.FastStack nodes>;

        $i2 = virtualinvoke $r3.<org.codehaus.jettison.util.FastStack: int size()>();

        if $i2 == 0 goto label09;

        r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader: int event> = 2;

        $r4 = r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader: org.codehaus.jettison.util.FastStack nodes>;

        $r5 = virtualinvoke $r4.<org.codehaus.jettison.util.FastStack: java.lang.Object pop()>();

        $r6 = (org.codehaus.jettison.Node) $r5;

        r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader: org.codehaus.jettison.Node node> = $r6;

        goto label10;

     label09:
        r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader: int event> = 8;

     label10:
        $i8 = r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader: int event>;

        return $i8;

        catch org.codehaus.jettison.json.JSONException from label03 to label04 with label05;
    }

    private void processElement() throws javax.xml.stream.XMLStreamException
    {
        java.util.Iterator $r2;
        org.codehaus.jettison.Node $r1, $r4;
        org.codehaus.jettison.json.JSONObject $r5;
        org.codehaus.jettison.json.JSONException $r7;
        javax.xml.stream.XMLStreamException $r8;
        java.lang.Object $r3, $r6;
        org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader r0;
        java.lang.String r9;

        r0 := @this: org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader;

     label1:
        $r1 = r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader: org.codehaus.jettison.Node node>;

        $r2 = virtualinvoke $r1.<org.codehaus.jettison.Node: java.util.Iterator getKeys()>();

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.lang.String) $r3;

        $r4 = r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader: org.codehaus.jettison.Node node>;

        $r5 = virtualinvoke $r4.<org.codehaus.jettison.Node: org.codehaus.jettison.json.JSONObject getObject()>();

        $r6 = virtualinvoke $r5.<org.codehaus.jettison.json.JSONObject: java.lang.Object get(java.lang.String)>(r9);

        specialinvoke r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader: void processKey(java.lang.String,java.lang.Object)>(r9, $r6);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        $r8 = new javax.xml.stream.XMLStreamException;

        specialinvoke $r8.<javax.xml.stream.XMLStreamException: void <init>(java.lang.Throwable)>($r7);

        throw $r8;

     label4:
        return;

        catch org.codehaus.jettison.json.JSONException from label1 to label2 with label3;
    }

    private void processKey(java.lang.String, java.lang.Object) throws org.codehaus.jettison.json.JSONException, javax.xml.stream.XMLStreamException
    {
        org.codehaus.jettison.util.FastStack $r8, $r14;
        org.codehaus.jettison.Node $r3, $r4, $r5, $r7, $r12, $r13;
        java.lang.StringBuffer $r15;
        int $i0, $i1, i2;
        java.lang.String r0, $r16, $r19;
        org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader r2;
        boolean $z0, $z1, $z2, $z3;
        org.codehaus.jettison.badgerfish.BadgerFishConvention $r10;
        org.codehaus.jettison.json.JSONObject $r11;
        org.codehaus.jettison.json.JSONArray r18, r20;
        java.lang.Object r1, $r6, $r9, $r17;

        r2 := @this: org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Object;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("$");

        if $z0 == 0 goto label07;

        r2.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader: int event> = 4;

        $z3 = r1 instanceof org.codehaus.jettison.json.JSONArray;

        if $z3 == 0 goto label03;

        r18 = (org.codehaus.jettison.json.JSONArray) r1;

        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        i2 = 0;

     label01:
        $i1 = virtualinvoke r18.<org.codehaus.jettison.json.JSONArray: int length()>();

        if i2 >= $i1 goto label02;

        $r17 = virtualinvoke r18.<org.codehaus.jettison.json.JSONArray: java.lang.Object get(int)>(i2);

        virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r17);

        i2 = i2 + 1;

        goto label01;

     label02:
        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        r2.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader: java.lang.String currentText> = $r16;

        goto label06;

     label03:
        if r1 != null goto label04;

        $r19 = null;

        goto label05;

     label04:
        $r19 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

     label05:
        r2.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader: java.lang.String currentText> = $r19;

     label06:
        return;

     label07:
        $z1 = r1 instanceof org.codehaus.jettison.json.JSONObject;

        if $z1 == 0 goto label08;

        $r7 = new org.codehaus.jettison.Node;

        $r8 = r2.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader: org.codehaus.jettison.util.FastStack nodes>;

        $r9 = virtualinvoke $r8.<org.codehaus.jettison.util.FastStack: java.lang.Object peek()>();

        $r12 = (org.codehaus.jettison.Node) $r9;

        $r11 = (org.codehaus.jettison.json.JSONObject) r1;

        $r10 = <org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader: org.codehaus.jettison.badgerfish.BadgerFishConvention CONVENTION>;

        specialinvoke $r7.<org.codehaus.jettison.Node: void <init>(org.codehaus.jettison.Node,java.lang.String,org.codehaus.jettison.json.JSONObject,org.codehaus.jettison.Convention)>($r12, r0, $r11, $r10);

        r2.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader: org.codehaus.jettison.Node node> = $r7;

        $r14 = r2.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader: org.codehaus.jettison.util.FastStack nodes>;

        $r13 = r2.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader: org.codehaus.jettison.Node node>;

        virtualinvoke $r14.<org.codehaus.jettison.util.FastStack: void push(java.lang.Object)>($r13);

        r2.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader: int event> = 1;

        return;

     label08:
        $z2 = r1 instanceof org.codehaus.jettison.json.JSONArray;

        if $z2 == 0 goto label10;

        r20 = (org.codehaus.jettison.json.JSONArray) r1;

        $i0 = virtualinvoke r20.<org.codehaus.jettison.json.JSONArray: int length()>();

        if $i0 != 0 goto label09;

        virtualinvoke r2.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader: int next()>();

        return;

     label09:
        $r3 = r2.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader: org.codehaus.jettison.Node node>;

        virtualinvoke $r3.<org.codehaus.jettison.Node: void setArray(org.codehaus.jettison.json.JSONArray)>(r20);

        $r4 = r2.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader: org.codehaus.jettison.Node node>;

        virtualinvoke $r4.<org.codehaus.jettison.Node: void setArrayIndex(int)>(1);

        $r5 = r2.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader: org.codehaus.jettison.Node node>;

        virtualinvoke $r5.<org.codehaus.jettison.Node: void setCurrentKey(java.lang.String)>(r0);

        $r6 = virtualinvoke r20.<org.codehaus.jettison.json.JSONArray: java.lang.Object get(int)>(0);

        specialinvoke r2.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader: void processKey(java.lang.String,java.lang.Object)>(r0, $r6);

     label10:
        return;
    }

    public void close() throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader r0;

        r0 := @this: org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader;

        return;
    }

    public java.lang.String getAttributeType(int)
    {
        int i0;
        org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader r0;

        r0 := @this: org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader;

        i0 := @parameter0: int;

        return null;
    }

    public java.lang.String getCharacterEncodingScheme()
    {
        org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader r0;

        r0 := @this: org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader;

        return null;
    }

    public java.lang.String getElementText() throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader r0;
        java.lang.String $r1;

        r0 := @this: org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader;

        $r1 = r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader: java.lang.String currentText>;

        return $r1;
    }

    public javax.xml.namespace.NamespaceContext getNamespaceContext()
    {
        org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader r0;

        r0 := @this: org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader;

        return null;
    }

    public java.lang.String getText()
    {
        org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader r0;
        java.lang.String $r1;

        r0 := @this: org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader;

        $r1 = r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader: java.lang.String currentText>;

        return $r1;
    }

    static void <clinit>()
    {
        org.codehaus.jettison.badgerfish.BadgerFishConvention $r0;

        $r0 = new org.codehaus.jettison.badgerfish.BadgerFishConvention;

        specialinvoke $r0.<org.codehaus.jettison.badgerfish.BadgerFishConvention: void <init>()>();

        <org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader: org.codehaus.jettison.badgerfish.BadgerFishConvention CONVENTION> = $r0;

        return;
    }
}
