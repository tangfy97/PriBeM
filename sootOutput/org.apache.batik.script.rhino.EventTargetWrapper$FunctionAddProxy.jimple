class org.apache.batik.script.rhino.EventTargetWrapper$FunctionAddProxy extends org.apache.batik.script.rhino.EventTargetWrapper$FunctionProxy
{
    protected java.util.Map listenerMap;
    protected org.apache.batik.script.rhino.RhinoInterpreter interpreter;
    static java.lang.Class class$java$lang$String;
    static java.lang.Class class$org$mozilla$javascript$Function;
    static java.lang.Class class$org$mozilla$javascript$Scriptable;

    void <init>(org.apache.batik.script.rhino.RhinoInterpreter, org.mozilla.javascript.Function, java.util.Map)
    {
        java.util.Map r2;
        org.mozilla.javascript.Function r1;
        org.apache.batik.script.rhino.EventTargetWrapper$FunctionAddProxy r0;
        org.apache.batik.script.rhino.RhinoInterpreter r3;

        r0 := @this: org.apache.batik.script.rhino.EventTargetWrapper$FunctionAddProxy;

        r3 := @parameter0: org.apache.batik.script.rhino.RhinoInterpreter;

        r1 := @parameter1: org.mozilla.javascript.Function;

        r2 := @parameter2: java.util.Map;

        specialinvoke r0.<org.apache.batik.script.rhino.EventTargetWrapper$FunctionProxy: void <init>(org.mozilla.javascript.Function)>(r1);

        r0.<org.apache.batik.script.rhino.EventTargetWrapper$FunctionAddProxy: java.util.Map listenerMap> = r2;

        r0.<org.apache.batik.script.rhino.EventTargetWrapper$FunctionAddProxy: org.apache.batik.script.rhino.RhinoInterpreter interpreter> = r3;

        return;
    }

    public java.lang.Object call(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, org.mozilla.javascript.Scriptable, java.lang.Object[])
    {
        org.apache.batik.script.rhino.EventTargetWrapper$HandleEventListener $r27;
        java.util.Map $r11, $r32, $r36, $r57;
        org.apache.batik.script.rhino.RhinoInterpreter $r29, $r54;
        java.lang.Object[] r2;
        org.apache.batik.script.rhino.EventTargetWrapper$FunctionEventListener $r52;
        org.mozilla.javascript.Function $r8, $r55;
        java.lang.String $r25, $r50;
        java.lang.ref.SoftReference $r31, $r56, r61, r65;
        org.mozilla.javascript.NativeJavaObject r1;
        org.mozilla.javascript.Context r6;
        java.lang.Class[] $r13, $r38;
        org.w3c.dom.events.EventListener r60, r64;
        org.w3c.dom.events.EventTarget $r24, $r49;
        boolean $z0, $z1, $z2, $z3;
        org.mozilla.javascript.Scriptable r0, r7, $r30;
        org.apache.batik.script.rhino.EventTargetWrapper$FunctionAddProxy r5;
        int $i0, $i1, i2, i3;
        java.lang.Boolean $r23, $r48;
        java.lang.Object $r3, $r4, $r9, $r10, $r12, $r18, $r19, $r20, $r21, $r22, $r26, $r28, $r33, $r34, $r35, $r37, $r43, $r44, $r45, $r46, $r47, $r51, $r53, $r58, $r59;
        java.lang.Class $r14, $r15, $r16, $r17, $r39, $r40, $r41, $r42, $r62, $r63, $r66, $r67;

        r5 := @this: org.apache.batik.script.rhino.EventTargetWrapper$FunctionAddProxy;

        r6 := @parameter0: org.mozilla.javascript.Context;

        r7 := @parameter1: org.mozilla.javascript.Scriptable;

        r0 := @parameter2: org.mozilla.javascript.Scriptable;

        r2 := @parameter3: java.lang.Object[];

        r1 = (org.mozilla.javascript.NativeJavaObject) r0;

        $r3 = r2[1];

        $z0 = $r3 instanceof org.mozilla.javascript.Function;

        if $z0 == 0 goto label09;

        r60 = null;

        $r36 = r5.<org.apache.batik.script.rhino.EventTargetWrapper$FunctionAddProxy: java.util.Map listenerMap>;

        $r35 = r2[1];

        $r37 = interfaceinvoke $r36.<java.util.Map: java.lang.Object get(java.lang.Object)>($r35);

        r61 = (java.lang.ref.SoftReference) $r37;

        if r61 == null goto label01;

        $r59 = virtualinvoke r61.<java.lang.ref.SoftReference: java.lang.Object get()>();

        r60 = (org.w3c.dom.events.EventListener) $r59;

     label01:
        if r60 != null goto label02;

        $r52 = new org.apache.batik.script.rhino.EventTargetWrapper$FunctionEventListener;

        $r53 = r2[1];

        $r55 = (org.mozilla.javascript.Function) $r53;

        $r54 = r5.<org.apache.batik.script.rhino.EventTargetWrapper$FunctionAddProxy: org.apache.batik.script.rhino.RhinoInterpreter interpreter>;

        specialinvoke $r52.<org.apache.batik.script.rhino.EventTargetWrapper$FunctionEventListener: void <init>(org.mozilla.javascript.Function,org.apache.batik.script.rhino.RhinoInterpreter)>($r55, $r54);

        r60 = $r52;

        $r57 = r5.<org.apache.batik.script.rhino.EventTargetWrapper$FunctionAddProxy: java.util.Map listenerMap>;

        $r58 = r2[1];

        $r56 = new java.lang.ref.SoftReference;

        specialinvoke $r56.<java.lang.ref.SoftReference: void <init>(java.lang.Object)>($r52);

        interfaceinvoke $r57.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r58, $r56);

     label02:
        $r38 = newarray (java.lang.Class)[3];

        $r39 = <org.apache.batik.script.rhino.EventTargetWrapper$FunctionAddProxy: java.lang.Class class$java$lang$String>;

        if $r39 != null goto label03;

        $r62 = staticinvoke <org.apache.batik.script.rhino.EventTargetWrapper$FunctionAddProxy: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.apache.batik.script.rhino.EventTargetWrapper$FunctionAddProxy: java.lang.Class class$java$lang$String> = $r62;

        goto label04;

     label03:
        $r62 = <org.apache.batik.script.rhino.EventTargetWrapper$FunctionAddProxy: java.lang.Class class$java$lang$String>;

     label04:
        $r38[0] = $r62;

        $r40 = <org.apache.batik.script.rhino.EventTargetWrapper$FunctionAddProxy: java.lang.Class class$org$mozilla$javascript$Function>;

        if $r40 != null goto label05;

        $r63 = staticinvoke <org.apache.batik.script.rhino.EventTargetWrapper$FunctionAddProxy: java.lang.Class class$(java.lang.String)>("org.mozilla.javascript.Function");

        <org.apache.batik.script.rhino.EventTargetWrapper$FunctionAddProxy: java.lang.Class class$org$mozilla$javascript$Function> = $r63;

        goto label06;

     label05:
        $r63 = <org.apache.batik.script.rhino.EventTargetWrapper$FunctionAddProxy: java.lang.Class class$org$mozilla$javascript$Function>;

     label06:
        $r38[1] = $r63;

        $r41 = <java.lang.Boolean: java.lang.Class TYPE>;

        $r38[2] = $r41;

        i2 = 0;

        goto label08;

     label07:
        $r43 = r2[i2];

        $r42 = $r38[i2];

        $r44 = staticinvoke <org.mozilla.javascript.Context: java.lang.Object jsToJava(java.lang.Object,java.lang.Class)>($r43, $r42);

        r2[i2] = $r44;

        i2 = i2 + 1;

     label08:
        $i1 = lengthof r2;

        if i2 < $i1 goto label07;

        $r45 = virtualinvoke r1.<org.mozilla.javascript.NativeJavaObject: java.lang.Object unwrap()>();

        $r49 = (org.w3c.dom.events.EventTarget) $r45;

        $r46 = r2[0];

        $r50 = (java.lang.String) $r46;

        $r47 = r2[2];

        $r48 = (java.lang.Boolean) $r47;

        $z3 = virtualinvoke $r48.<java.lang.Boolean: boolean booleanValue()>();

        interfaceinvoke $r49.<org.w3c.dom.events.EventTarget: void addEventListener(java.lang.String,org.w3c.dom.events.EventListener,boolean)>($r50, r60, $z3);

        $r51 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

        return $r51;

     label09:
        $r4 = r2[1];

        $z1 = $r4 instanceof org.mozilla.javascript.NativeObject;

        if $z1 == 0 goto label18;

        r64 = null;

        $r11 = r5.<org.apache.batik.script.rhino.EventTargetWrapper$FunctionAddProxy: java.util.Map listenerMap>;

        $r10 = r2[1];

        $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>($r10);

        r65 = (java.lang.ref.SoftReference) $r12;

        if r65 == null goto label10;

        $r34 = virtualinvoke r65.<java.lang.ref.SoftReference: java.lang.Object get()>();

        r64 = (org.w3c.dom.events.EventListener) $r34;

     label10:
        if r64 != null goto label11;

        $r27 = new org.apache.batik.script.rhino.EventTargetWrapper$HandleEventListener;

        $r28 = r2[1];

        $r30 = (org.mozilla.javascript.Scriptable) $r28;

        $r29 = r5.<org.apache.batik.script.rhino.EventTargetWrapper$FunctionAddProxy: org.apache.batik.script.rhino.RhinoInterpreter interpreter>;

        specialinvoke $r27.<org.apache.batik.script.rhino.EventTargetWrapper$HandleEventListener: void <init>(org.mozilla.javascript.Scriptable,org.apache.batik.script.rhino.RhinoInterpreter)>($r30, $r29);

        r64 = $r27;

        $r32 = r5.<org.apache.batik.script.rhino.EventTargetWrapper$FunctionAddProxy: java.util.Map listenerMap>;

        $r33 = r2[1];

        $r31 = new java.lang.ref.SoftReference;

        specialinvoke $r31.<java.lang.ref.SoftReference: void <init>(java.lang.Object)>($r27);

        interfaceinvoke $r32.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r33, $r31);

     label11:
        $r13 = newarray (java.lang.Class)[3];

        $r14 = <org.apache.batik.script.rhino.EventTargetWrapper$FunctionAddProxy: java.lang.Class class$java$lang$String>;

        if $r14 != null goto label12;

        $r66 = staticinvoke <org.apache.batik.script.rhino.EventTargetWrapper$FunctionAddProxy: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.apache.batik.script.rhino.EventTargetWrapper$FunctionAddProxy: java.lang.Class class$java$lang$String> = $r66;

        goto label13;

     label12:
        $r66 = <org.apache.batik.script.rhino.EventTargetWrapper$FunctionAddProxy: java.lang.Class class$java$lang$String>;

     label13:
        $r13[0] = $r66;

        $r15 = <org.apache.batik.script.rhino.EventTargetWrapper$FunctionAddProxy: java.lang.Class class$org$mozilla$javascript$Scriptable>;

        if $r15 != null goto label14;

        $r67 = staticinvoke <org.apache.batik.script.rhino.EventTargetWrapper$FunctionAddProxy: java.lang.Class class$(java.lang.String)>("org.mozilla.javascript.Scriptable");

        <org.apache.batik.script.rhino.EventTargetWrapper$FunctionAddProxy: java.lang.Class class$org$mozilla$javascript$Scriptable> = $r67;

        goto label15;

     label14:
        $r67 = <org.apache.batik.script.rhino.EventTargetWrapper$FunctionAddProxy: java.lang.Class class$org$mozilla$javascript$Scriptable>;

     label15:
        $r13[1] = $r67;

        $r16 = <java.lang.Boolean: java.lang.Class TYPE>;

        $r13[2] = $r16;

        i3 = 0;

        goto label17;

     label16:
        $r18 = r2[i3];

        $r17 = $r13[i3];

        $r19 = staticinvoke <org.mozilla.javascript.Context: java.lang.Object jsToJava(java.lang.Object,java.lang.Class)>($r18, $r17);

        r2[i3] = $r19;

        i3 = i3 + 1;

     label17:
        $i0 = lengthof r2;

        if i3 < $i0 goto label16;

        $r20 = virtualinvoke r1.<org.mozilla.javascript.NativeJavaObject: java.lang.Object unwrap()>();

        $r24 = (org.w3c.dom.events.EventTarget) $r20;

        $r21 = r2[0];

        $r25 = (java.lang.String) $r21;

        $r22 = r2[2];

        $r23 = (java.lang.Boolean) $r22;

        $z2 = virtualinvoke $r23.<java.lang.Boolean: boolean booleanValue()>();

        interfaceinvoke $r24.<org.w3c.dom.events.EventTarget: void addEventListener(java.lang.String,org.w3c.dom.events.EventListener,boolean)>($r25, r64, $z2);

        $r26 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

        return $r26;

     label18:
        $r8 = r5.<org.apache.batik.script.rhino.EventTargetWrapper$FunctionProxy: org.mozilla.javascript.Function delegate>;

        $r9 = interfaceinvoke $r8.<org.mozilla.javascript.Function: java.lang.Object call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])>(r6, r7, r0, r2);

        return $r9;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }
}
