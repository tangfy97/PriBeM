public class ucar.nc2.iosp.mcidas.AreaReader extends java.lang.Object
{
    private edu.wisc.ssec.mcidas.AreaFile af;
    private edu.wisc.ssec.mcidas.AREAnav nav;
    private int[] dirBlock;
    private int[] navBlock;
    private edu.wisc.ssec.mcidas.AreaDirectory ad;
    edu.wisc.ssec.mcidas.Calibrator calibrator;
    int[] bandMap;
    private float calScale;
    private java.lang.String calUnit;

    public void <init>()
    {
        ucar.nc2.iosp.mcidas.AreaReader r0;

        r0 := @this: ucar.nc2.iosp.mcidas.AreaReader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.iosp.mcidas.AreaReader: edu.wisc.ssec.mcidas.Calibrator calibrator> = null;

        r0.<ucar.nc2.iosp.mcidas.AreaReader: int[] bandMap> = null;

        r0.<ucar.nc2.iosp.mcidas.AreaReader: float calScale> = 1.0F;

        return;
    }

    public boolean init(ucar.unidata.io.RandomAccessFile, ucar.nc2.NetcdfFile) throws edu.wisc.ssec.mcidas.AreaFileException
    {
        ucar.nc2.Attribute $r126, $r127, $r130, $r133, $r136, $r137, $r140, $r141, $r142, $r149, $r150, $r152, $r153, $r154, $r157;
        java.lang.StringBuilder $r65, $r68, $r103, $r105, $r125, $r155;
        ucar.ma2.ArrayChar$D0 $r59, $r151;
        ucar.ma2.ArrayInt$D1 $r77, $r78, $r80, $r109, $r128, $r131, $r134, $r138, $r144, $r146;
        java.util.Date $r16, $r156;
        int[] $r5, $r12, $r14, $r19, $r20, $r22, $r23, $r26, $r49, $r50, $r74, $r75, $r76, $r82, $r97;
        edu.wisc.ssec.mcidas.AREAnav $r21, $r79;
        ucar.ma2.DataType $r29, $r33, $r38, $r44, $r47, $r54, $r100, $r111;
        ucar.nc2.units.DateFormatter $r115;
        edu.wisc.ssec.mcidas.AreaFileException $r116;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, $i14, $i15, i16, $i17, i18, i19, i20, i21, i22;
        ucar.nc2.Variable $r124, $r129, $r132, $r135, $r139, $r143, $r145, $r148;
        ucar.unidata.util.Parameter r72;
        java.lang.Object $r71;
        ucar.nc2.iosp.mcidas.McIDASAreaProjection $r147;
        java.lang.Throwable $r84, $r85, $r159;
        java.util.ArrayList $r123;
        java.lang.String $r3, $r24, $r40, $r57, $r63, $r67, $r69, $r87, $r89, $r104, $r106;
        edu.wisc.ssec.mcidas.McIDASException $r158;
        ucar.nc2.Dimension $r117, $r118, $r119, $r120, $r121, $r122;
        edu.wisc.ssec.mcidas.Calibrator $r83;
        ucar.unidata.io.RandomAccessFile r2;
        edu.wisc.ssec.mcidas.AreaFile $r4, $r6, $r13, $r18, $r25, $r52, $r81, $r114;
        ucar.nc2.iosp.mcidas.AreaReader r0;
        boolean $z0, $z1;
        java.util.List $r55;
        float $f0, $f1;
        ucar.nc2.NetcdfFile r27;
        edu.wisc.ssec.mcidas.AreaDirectory $r7, $r8, $r9, $r10, $r11, $r15, $r88, $r90;

        r0 := @this: ucar.nc2.iosp.mcidas.AreaReader;

        r2 := @parameter0: ucar.unidata.io.RandomAccessFile;

        r27 := @parameter1: ucar.nc2.NetcdfFile;

        $r114 = new edu.wisc.ssec.mcidas.AreaFile;

        $r3 = virtualinvoke r2.<ucar.unidata.io.RandomAccessFile: java.lang.String getLocation()>();

        specialinvoke $r114.<edu.wisc.ssec.mcidas.AreaFile: void <init>(java.lang.String)>($r3);

        r0.<ucar.nc2.iosp.mcidas.AreaReader: edu.wisc.ssec.mcidas.AreaFile af> = $r114;

        $r4 = r0.<ucar.nc2.iosp.mcidas.AreaReader: edu.wisc.ssec.mcidas.AreaFile af>;

        $r5 = virtualinvoke $r4.<edu.wisc.ssec.mcidas.AreaFile: int[] getDir()>();

        r0.<ucar.nc2.iosp.mcidas.AreaReader: int[] dirBlock> = $r5;

        $r6 = r0.<ucar.nc2.iosp.mcidas.AreaReader: edu.wisc.ssec.mcidas.AreaFile af>;

        $r7 = virtualinvoke $r6.<edu.wisc.ssec.mcidas.AreaFile: edu.wisc.ssec.mcidas.AreaDirectory getAreaDirectory()>();

        r0.<ucar.nc2.iosp.mcidas.AreaReader: edu.wisc.ssec.mcidas.AreaDirectory ad> = $r7;

        $r8 = r0.<ucar.nc2.iosp.mcidas.AreaReader: edu.wisc.ssec.mcidas.AreaDirectory ad>;

        $i0 = virtualinvoke $r8.<edu.wisc.ssec.mcidas.AreaDirectory: int getElements()>();

        $r9 = r0.<ucar.nc2.iosp.mcidas.AreaReader: edu.wisc.ssec.mcidas.AreaDirectory ad>;

        $i1 = virtualinvoke $r9.<edu.wisc.ssec.mcidas.AreaDirectory: int getLines()>();

        $r10 = r0.<ucar.nc2.iosp.mcidas.AreaReader: edu.wisc.ssec.mcidas.AreaDirectory ad>;

        $i2 = virtualinvoke $r10.<edu.wisc.ssec.mcidas.AreaDirectory: int getNumberOfBands()>();

        $r11 = r0.<ucar.nc2.iosp.mcidas.AreaReader: edu.wisc.ssec.mcidas.AreaDirectory ad>;

        $r12 = virtualinvoke $r11.<edu.wisc.ssec.mcidas.AreaDirectory: int[] getBands()>();

        r0.<ucar.nc2.iosp.mcidas.AreaReader: int[] bandMap> = $r12;

        $r13 = r0.<ucar.nc2.iosp.mcidas.AreaReader: edu.wisc.ssec.mcidas.AreaFile af>;

        $r14 = virtualinvoke $r13.<edu.wisc.ssec.mcidas.AreaFile: int[] getNav()>();

        r0.<ucar.nc2.iosp.mcidas.AreaReader: int[] navBlock> = $r14;

        $r15 = r0.<ucar.nc2.iosp.mcidas.AreaReader: edu.wisc.ssec.mcidas.AreaDirectory ad>;

        $r16 = virtualinvoke $r15.<edu.wisc.ssec.mcidas.AreaDirectory: java.util.Date getNominalTime()>();

        $r115 = new ucar.nc2.units.DateFormatter;

        specialinvoke $r115.<ucar.nc2.units.DateFormatter: void <init>()>();

     label01:
        $r19 = r0.<ucar.nc2.iosp.mcidas.AreaReader: int[] navBlock>;

        $r18 = r0.<ucar.nc2.iosp.mcidas.AreaReader: edu.wisc.ssec.mcidas.AreaFile af>;

        $r20 = virtualinvoke $r18.<edu.wisc.ssec.mcidas.AreaFile: int[] getAux()>();

        $r21 = staticinvoke <edu.wisc.ssec.mcidas.AREAnav: edu.wisc.ssec.mcidas.AREAnav makeAreaNav(int[],int[])>($r19, $r20);

        r0.<ucar.nc2.iosp.mcidas.AreaReader: edu.wisc.ssec.mcidas.AREAnav nav> = $r21;

     label02:
        goto label04;

     label03:
        $r85 := @caughtexception;

        $r116 = new edu.wisc.ssec.mcidas.AreaFileException;

        $r158 = (edu.wisc.ssec.mcidas.McIDASException) $r85;

        $r87 = virtualinvoke $r158.<edu.wisc.ssec.mcidas.McIDASException: java.lang.String getMessage()>();

        specialinvoke $r116.<edu.wisc.ssec.mcidas.AreaFileException: void <init>(java.lang.String)>($r87);

        $r159 = (java.lang.Throwable) $r116;

        throw $r159;

     label04:
        $r22 = r0.<ucar.nc2.iosp.mcidas.AreaReader: int[] dirBlock>;

        i13 = $r22[2];

        $r23 = r0.<ucar.nc2.iosp.mcidas.AreaReader: int[] dirBlock>;

        $i3 = $r23[52];

        $r24 = staticinvoke <edu.wisc.ssec.mcidas.McIDASUtil: java.lang.String intBitsToString(int)>($i3);

        $i4 = specialinvoke r0.<ucar.nc2.iosp.mcidas.AreaReader: int getCalType(java.lang.String)>($r24);

        $r25 = r0.<ucar.nc2.iosp.mcidas.AreaReader: edu.wisc.ssec.mcidas.AreaFile af>;

        $r26 = virtualinvoke $r25.<edu.wisc.ssec.mcidas.AreaFile: int[] getCal()>();

        if $r26 == null goto label08;

        $z1 = staticinvoke <edu.wisc.ssec.mcidas.CalibratorFactory: boolean hasCalibrator(int)>(i13);

        if $z1 == 0 goto label08;

     label05:
        $r81 = r0.<ucar.nc2.iosp.mcidas.AreaReader: edu.wisc.ssec.mcidas.AreaFile af>;

        $r82 = virtualinvoke $r81.<edu.wisc.ssec.mcidas.AreaFile: int[] getCal()>();

        $r83 = staticinvoke <edu.wisc.ssec.mcidas.CalibratorFactory: edu.wisc.ssec.mcidas.Calibrator getCalibrator(int,int,int[])>(i13, $i4, $r82);

        r0.<ucar.nc2.iosp.mcidas.AreaReader: edu.wisc.ssec.mcidas.Calibrator calibrator> = $r83;

     label06:
        goto label08;

     label07:
        $r84 := @caughtexception;

        r0.<ucar.nc2.iosp.mcidas.AreaReader: edu.wisc.ssec.mcidas.Calibrator calibrator> = null;

     label08:
        $r88 = r0.<ucar.nc2.iosp.mcidas.AreaReader: edu.wisc.ssec.mcidas.AreaDirectory ad>;

        $r89 = virtualinvoke $r88.<edu.wisc.ssec.mcidas.AreaDirectory: java.lang.String getCalibrationUnitName()>();

        r0.<ucar.nc2.iosp.mcidas.AreaReader: java.lang.String calUnit> = $r89;

        $r90 = r0.<ucar.nc2.iosp.mcidas.AreaReader: edu.wisc.ssec.mcidas.AreaDirectory ad>;

        $i14 = virtualinvoke $r90.<edu.wisc.ssec.mcidas.AreaDirectory: int getCalibrationScaleFactor()>();

        $f0 = (float) $i14;

        $f1 = 1.0F / $f0;

        r0.<ucar.nc2.iosp.mcidas.AreaReader: float calScale> = $f1;

        $r117 = new ucar.nc2.Dimension;

        specialinvoke $r117.<ucar.nc2.Dimension: void <init>(java.lang.String,int,boolean)>("elements", $i0, 1);

        $r118 = new ucar.nc2.Dimension;

        specialinvoke $r118.<ucar.nc2.Dimension: void <init>(java.lang.String,int,boolean)>("lines", $i1, 1);

        $r119 = new ucar.nc2.Dimension;

        specialinvoke $r119.<ucar.nc2.Dimension: void <init>(java.lang.String,int,boolean)>("bands", $i2, 1);

        $r120 = new ucar.nc2.Dimension;

        specialinvoke $r120.<ucar.nc2.Dimension: void <init>(java.lang.String,int,boolean)>("time", 1, 1);

        $r121 = new ucar.nc2.Dimension;

        specialinvoke $r121.<ucar.nc2.Dimension: void <init>(java.lang.String,int,boolean)>("dirSize", 64, 1);

        $r122 = new ucar.nc2.Dimension;

        $r97 = r0.<ucar.nc2.iosp.mcidas.AreaReader: int[] navBlock>;

        $i15 = lengthof $r97;

        specialinvoke $r122.<ucar.nc2.Dimension: void <init>(java.lang.String,int,boolean)>("navSize", $i15, 1);

        $r123 = new java.util.ArrayList;

        specialinvoke $r123.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r123.<java.util.List: boolean add(java.lang.Object)>($r120);

        interfaceinvoke $r123.<java.util.List: boolean add(java.lang.Object)>($r119);

        interfaceinvoke $r123.<java.util.List: boolean add(java.lang.Object)>($r118);

        interfaceinvoke $r123.<java.util.List: boolean add(java.lang.Object)>($r117);

        virtualinvoke r27.<ucar.nc2.NetcdfFile: ucar.nc2.Dimension addDimension(ucar.nc2.Group,ucar.nc2.Dimension)>(null, $r117);

        virtualinvoke r27.<ucar.nc2.NetcdfFile: ucar.nc2.Dimension addDimension(ucar.nc2.Group,ucar.nc2.Dimension)>(null, $r118);

        virtualinvoke r27.<ucar.nc2.NetcdfFile: ucar.nc2.Dimension addDimension(ucar.nc2.Group,ucar.nc2.Dimension)>(null, $r119);

        virtualinvoke r27.<ucar.nc2.NetcdfFile: ucar.nc2.Dimension addDimension(ucar.nc2.Group,ucar.nc2.Dimension)>(null, $r120);

        virtualinvoke r27.<ucar.nc2.NetcdfFile: ucar.nc2.Dimension addDimension(ucar.nc2.Group,ucar.nc2.Dimension)>(null, $r121);

        virtualinvoke r27.<ucar.nc2.NetcdfFile: ucar.nc2.Dimension addDimension(ucar.nc2.Group,ucar.nc2.Dimension)>(null, $r122);

        $r124 = new ucar.nc2.Variable;

        specialinvoke $r124.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String)>(r27, null, null, "time");

        $r100 = <ucar.ma2.DataType: ucar.ma2.DataType INT>;

        virtualinvoke $r124.<ucar.nc2.Variable: void setDataType(ucar.ma2.DataType)>($r100);

        virtualinvoke $r124.<ucar.nc2.Variable: void setDimensions(java.lang.String)>("time");

        $r126 = new ucar.nc2.Attribute;

        $r125 = new java.lang.StringBuilder;

        specialinvoke $r125.<java.lang.StringBuilder: void <init>()>();

        $r103 = virtualinvoke $r125.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("seconds since ");

        $r104 = virtualinvoke $r115.<ucar.nc2.units.DateFormatter: java.lang.String toDateTimeString(java.util.Date)>($r16);

        $r105 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r104);

        $r106 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r126.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", $r106);

        virtualinvoke $r124.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r126);

        $r127 = new ucar.nc2.Attribute;

        specialinvoke $r127.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "time");

        virtualinvoke $r124.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r127);

        $r128 = new ucar.ma2.ArrayInt$D1;

        specialinvoke $r128.<ucar.ma2.ArrayInt$D1: void <init>(int)>(1);

        $r109 = (ucar.ma2.ArrayInt$D1) $r128;

        virtualinvoke $r109.<ucar.ma2.ArrayInt$D1: void set(int,int)>(0, 0);

        virtualinvoke $r124.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r128, 0);

        virtualinvoke r27.<ucar.nc2.NetcdfFile: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(null, $r124);

        $r129 = new ucar.nc2.Variable;

        specialinvoke $r129.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String)>(r27, null, null, "lines");

        $r111 = <ucar.ma2.DataType: ucar.ma2.DataType INT>;

        virtualinvoke $r129.<ucar.nc2.Variable: void setDataType(ucar.ma2.DataType)>($r111);

        virtualinvoke $r129.<ucar.nc2.Variable: void setDimensions(java.lang.String)>("lines");

        $r130 = new ucar.nc2.Attribute;

        specialinvoke $r130.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("standard_name", "projection_y_coordinate");

        virtualinvoke $r129.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r130);

        $r131 = new ucar.ma2.ArrayInt$D1;

        specialinvoke $r131.<ucar.ma2.ArrayInt$D1: void <init>(int)>($i1);

        i16 = 0;

     label09:
        if i16 >= $i1 goto label12;

        $r79 = r0.<ucar.nc2.iosp.mcidas.AreaReader: edu.wisc.ssec.mcidas.AREAnav nav>;

        $z0 = virtualinvoke $r79.<edu.wisc.ssec.mcidas.AREAnav: boolean isFlippedLineCoordinates()>();

        if $z0 == 0 goto label10;

        $i17 = i16;

        goto label11;

     label10:
        $i12 = $i1 - i16;

        $i17 = $i12 - 1;

     label11:
        $r80 = (ucar.ma2.ArrayInt$D1) $r131;

        virtualinvoke $r80.<ucar.ma2.ArrayInt$D1: void set(int,int)>(i16, $i17);

        i16 = i16 + 1;

        goto label09;

     label12:
        virtualinvoke $r129.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r131, 0);

        virtualinvoke r27.<ucar.nc2.NetcdfFile: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(null, $r129);

        $r132 = new ucar.nc2.Variable;

        specialinvoke $r132.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String)>(r27, null, null, "elements");

        $r29 = <ucar.ma2.DataType: ucar.ma2.DataType INT>;

        virtualinvoke $r132.<ucar.nc2.Variable: void setDataType(ucar.ma2.DataType)>($r29);

        virtualinvoke $r132.<ucar.nc2.Variable: void setDimensions(java.lang.String)>("elements");

        $r133 = new ucar.nc2.Attribute;

        specialinvoke $r133.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("standard_name", "projection_x_coordinate");

        virtualinvoke $r132.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r133);

        $r134 = new ucar.ma2.ArrayInt$D1;

        specialinvoke $r134.<ucar.ma2.ArrayInt$D1: void <init>(int)>($i0);

        i18 = 0;

     label13:
        if i18 >= $i0 goto label14;

        $r78 = (ucar.ma2.ArrayInt$D1) $r134;

        virtualinvoke $r78.<ucar.ma2.ArrayInt$D1: void set(int,int)>(i18, i18);

        i18 = i18 + 1;

        goto label13;

     label14:
        virtualinvoke $r132.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r134, 0);

        virtualinvoke r27.<ucar.nc2.NetcdfFile: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(null, $r132);

        $r135 = new ucar.nc2.Variable;

        specialinvoke $r135.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String)>(r27, null, null, "bands");

        $r33 = <ucar.ma2.DataType: ucar.ma2.DataType INT>;

        virtualinvoke $r135.<ucar.nc2.Variable: void setDataType(ucar.ma2.DataType)>($r33);

        virtualinvoke $r135.<ucar.nc2.Variable: void setDimensions(java.lang.String)>("bands");

        $r136 = new ucar.nc2.Attribute;

        specialinvoke $r136.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "spectral band number");

        virtualinvoke $r135.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r136);

        $r137 = new ucar.nc2.Attribute;

        specialinvoke $r137.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("axis", "Z");

        virtualinvoke $r135.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r137);

        $r138 = new ucar.ma2.ArrayInt$D1;

        specialinvoke $r138.<ucar.ma2.ArrayInt$D1: void <init>(int)>($i2);

        i19 = 0;

     label15:
        if i19 >= $i2 goto label16;

        $r77 = (ucar.ma2.ArrayInt$D1) $r138;

        $r76 = r0.<ucar.nc2.iosp.mcidas.AreaReader: int[] bandMap>;

        $i11 = $r76[i19];

        virtualinvoke $r77.<ucar.ma2.ArrayInt$D1: void set(int,int)>(i19, $i11);

        i19 = i19 + 1;

        goto label15;

     label16:
        virtualinvoke $r135.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r138, 0);

        virtualinvoke r27.<ucar.nc2.NetcdfFile: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(null, $r135);

        $r139 = new ucar.nc2.Variable;

        specialinvoke $r139.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String)>(r27, null, null, "image");

        $r38 = <ucar.ma2.DataType: ucar.ma2.DataType INT>;

        virtualinvoke $r139.<ucar.nc2.Variable: void setDataType(ucar.ma2.DataType)>($r38);

        virtualinvoke $r139.<ucar.nc2.Variable: void setDimensions(java.util.List)>($r123);

        $i5 = specialinvoke r0.<ucar.nc2.iosp.mcidas.AreaReader: int getCalType(java.lang.String)>($r24);

        specialinvoke r0.<ucar.nc2.iosp.mcidas.AreaReader: void setCalTypeAttributes(ucar.nc2.Variable,int)>($r139, $i5);

        $r140 = new ucar.nc2.Attribute;

        $r40 = specialinvoke r0.<ucar.nc2.iosp.mcidas.AreaReader: java.lang.String getADDescription(int)>(52);

        specialinvoke $r140.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>($r40, $r24);

        virtualinvoke $r139.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r140);

        $r141 = new ucar.nc2.Attribute;

        specialinvoke $r141.<ucar.nc2.Attribute: void <init>(java.lang.String,ucar.ma2.Array)>("bands", $r138);

        virtualinvoke $r139.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r141);

        $r142 = new ucar.nc2.Attribute;

        specialinvoke $r142.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("grid_mapping", "AREAnav");

        virtualinvoke $r139.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r142);

        virtualinvoke r27.<ucar.nc2.NetcdfFile: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(null, $r139);

        $r143 = new ucar.nc2.Variable;

        specialinvoke $r143.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String)>(r27, null, null, "areaDirectory");

        $r44 = <ucar.ma2.DataType: ucar.ma2.DataType INT>;

        virtualinvoke $r143.<ucar.nc2.Variable: void setDataType(ucar.ma2.DataType)>($r44);

        virtualinvoke $r143.<ucar.nc2.Variable: void setDimensions(java.lang.String)>("dirSize");

        specialinvoke r0.<ucar.nc2.iosp.mcidas.AreaReader: void setAreaDirectoryAttributes(ucar.nc2.Variable)>($r143);

        $r144 = new ucar.ma2.ArrayInt$D1;

        specialinvoke $r144.<ucar.ma2.ArrayInt$D1: void <init>(int)>(64);

        i20 = 0;

     label17:
        if i20 >= 64 goto label18;

        $r75 = r0.<ucar.nc2.iosp.mcidas.AreaReader: int[] dirBlock>;

        $i10 = $r75[i20];

        virtualinvoke $r144.<ucar.ma2.ArrayInt$D1: void set(int,int)>(i20, $i10);

        i20 = i20 + 1;

        goto label17;

     label18:
        virtualinvoke $r143.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r144, 0);

        virtualinvoke r27.<ucar.nc2.NetcdfFile: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(null, $r143);

        $r145 = new ucar.nc2.Variable;

        specialinvoke $r145.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String)>(r27, null, null, "navBlock");

        $r47 = <ucar.ma2.DataType: ucar.ma2.DataType INT>;

        virtualinvoke $r145.<ucar.nc2.Variable: void setDataType(ucar.ma2.DataType)>($r47);

        virtualinvoke $r145.<ucar.nc2.Variable: void setDimensions(java.lang.String)>("navSize");

        specialinvoke r0.<ucar.nc2.iosp.mcidas.AreaReader: void setNavBlockAttributes(ucar.nc2.Variable)>($r145);

        $r146 = new ucar.ma2.ArrayInt$D1;

        $r49 = r0.<ucar.nc2.iosp.mcidas.AreaReader: int[] navBlock>;

        $i6 = lengthof $r49;

        specialinvoke $r146.<ucar.ma2.ArrayInt$D1: void <init>(int)>($i6);

        i21 = 0;

     label19:
        $r50 = r0.<ucar.nc2.iosp.mcidas.AreaReader: int[] navBlock>;

        $i7 = lengthof $r50;

        if i21 >= $i7 goto label20;

        $r74 = r0.<ucar.nc2.iosp.mcidas.AreaReader: int[] navBlock>;

        $i9 = $r74[i21];

        virtualinvoke $r146.<ucar.ma2.ArrayInt$D1: void set(int,int)>(i21, $i9);

        i21 = i21 + 1;

        goto label19;

     label20:
        virtualinvoke $r145.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r146, 0);

        virtualinvoke r27.<ucar.nc2.NetcdfFile: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(null, $r145);

        $r147 = new ucar.nc2.iosp.mcidas.McIDASAreaProjection;

        $r52 = r0.<ucar.nc2.iosp.mcidas.AreaReader: edu.wisc.ssec.mcidas.AreaFile af>;

        specialinvoke $r147.<ucar.nc2.iosp.mcidas.McIDASAreaProjection: void <init>(edu.wisc.ssec.mcidas.AreaFile)>($r52);

        $r148 = new ucar.nc2.Variable;

        specialinvoke $r148.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String)>(r27, null, null, "AREAnav");

        $r54 = <ucar.ma2.DataType: ucar.ma2.DataType CHAR>;

        virtualinvoke $r148.<ucar.nc2.Variable: void setDataType(ucar.ma2.DataType)>($r54);

        virtualinvoke $r148.<ucar.nc2.Variable: void setDimensions(java.lang.String)>("");

        $r55 = virtualinvoke $r147.<ucar.unidata.geoloc.ProjectionImpl: java.util.List getProjectionParameters()>();

        i22 = 0;

     label21:
        $i8 = interfaceinvoke $r55.<java.util.List: int size()>();

        if i22 >= $i8 goto label22;

        $r71 = interfaceinvoke $r55.<java.util.List: java.lang.Object get(int)>(i22);

        r72 = (ucar.unidata.util.Parameter) $r71;

        $r149 = new ucar.nc2.Attribute;

        specialinvoke $r149.<ucar.nc2.Attribute: void <init>(ucar.unidata.util.Parameter)>(r72);

        virtualinvoke $r148.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r149);

        i22 = i22 + 1;

        goto label21;

     label22:
        $r150 = new ucar.nc2.Attribute;

        $r57 = <ucar.nc2.iosp.mcidas.McIDASAreaProjection: java.lang.String GRID_MAPPING_NAME>;

        specialinvoke $r150.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("grid_mapping_name", $r57);

        virtualinvoke $r148.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r150);

        $r151 = new ucar.ma2.ArrayChar$D0;

        specialinvoke $r151.<ucar.ma2.ArrayChar$D0: void <init>()>();

        $r59 = (ucar.ma2.ArrayChar$D0) $r151;

        virtualinvoke $r59.<ucar.ma2.ArrayChar$D0: void set(char)>(32);

        virtualinvoke $r148.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r151, 0);

        virtualinvoke r27.<ucar.nc2.NetcdfFile: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(null, $r148);

        $r152 = new ucar.nc2.Attribute;

        specialinvoke $r152.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("Conventions", "CF-1.0");

        virtualinvoke r27.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r152);

        $r153 = new ucar.nc2.Attribute;

        specialinvoke $r153.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("netCDF-Java", "4.0");

        virtualinvoke r27.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r153);

        $r154 = new ucar.nc2.Attribute;

        $r63 = virtualinvoke $r115.<ucar.nc2.units.DateFormatter: java.lang.String toDateTimeString(java.util.Date)>($r16);

        specialinvoke $r154.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("nominal_image_time", $r63);

        virtualinvoke r27.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r154);

        $r155 = new java.lang.StringBuilder;

        specialinvoke $r155.<java.lang.StringBuilder: void <init>()>();

        $r65 = virtualinvoke $r155.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("netCDF encoded on ");

        $r156 = new java.util.Date;

        specialinvoke $r156.<java.util.Date: void <init>()>();

        $r67 = virtualinvoke $r115.<ucar.nc2.units.DateFormatter: java.lang.String toDateTimeString(java.util.Date)>($r156);

        $r68 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r67);

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.String toString()>();

        $r157 = new ucar.nc2.Attribute;

        specialinvoke $r157.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("history", $r69);

        virtualinvoke r27.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r157);

        virtualinvoke r27.<ucar.nc2.NetcdfFile: void finish()>();

        return 1;

        catch edu.wisc.ssec.mcidas.McIDASException from label01 to label02 with label03;
        catch edu.wisc.ssec.mcidas.CalibratorException from label05 to label06 with label07;
    }

    public static boolean isValidFile(ucar.unidata.io.RandomAccessFile)
    {
        java.lang.Throwable $r3;
        ucar.unidata.io.RandomAccessFile r0;
        java.lang.String $r1;
        edu.wisc.ssec.mcidas.AreaFile $r2;

        r0 := @parameter0: ucar.unidata.io.RandomAccessFile;

        $r1 = virtualinvoke r0.<ucar.unidata.io.RandomAccessFile: java.lang.String getLocation()>();

     label1:
        $r2 = new edu.wisc.ssec.mcidas.AreaFile;

        specialinvoke $r2.<edu.wisc.ssec.mcidas.AreaFile: void <init>(java.lang.String)>($r1);

     label2:
        return 1;

     label3:
        $r3 := @caughtexception;

        return 0;

        catch edu.wisc.ssec.mcidas.AreaFileException from label1 to label2 with label3;
    }

    public ucar.ma2.Array readVariable(ucar.nc2.Variable, ucar.ma2.Section) throws java.io.IOException, ucar.ma2.InvalidRangeException
    {
        double[][][] $r20;
        double[][] $r14, $r19;
        java.lang.Throwable $r21;
        ucar.ma2.Section r0;
        double[] $r11, $r12, $r16, $r18;
        java.lang.String $r23, $r27;
        java.io.IOException $r34;
        ucar.ma2.Array $r31;
        ucar.ma2.Index $r5, $r9, $r15, $r17, $r32;
        int[][] $r4, $r8, r33;
        edu.wisc.ssec.mcidas.AreaFile $r3, $r7;
        ucar.nc2.iosp.mcidas.AreaReader r2;
        int[] $r6, $r10, $r30;
        edu.wisc.ssec.mcidas.AREAnav $r13;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        ucar.ma2.Range r24, r25, r26;
        ucar.ma2.DataType $r28;
        float $f0, $f1;
        edu.wisc.ssec.mcidas.AreaFileException $r35;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, i21, $i22, i23, i24, i25, i26, i27, i28, i29;
        ucar.nc2.Variable r1;
        double $d0, $d1, $d2, $d3;
        java.lang.Class $r29;

        r2 := @this: ucar.nc2.iosp.mcidas.AreaReader;

        r1 := @parameter0: ucar.nc2.Variable;

        r0 := @parameter1: ucar.ma2.Section;

        r24 = null;

        r25 = null;

        r26 = null;

        if r0 == null goto label01;

        $z3 = 1;

        goto label02;

     label01:
        $z3 = 0;

     label02:
        $i0 = virtualinvoke r0.<ucar.ma2.Section: int getRank()>();

        if $i0 <= 0 goto label03;

        $z4 = 1;

        goto label04;

     label03:
        $z4 = 0;

     label04:
        $z5 = $z3 & $z4;

        if $z5 == 0 goto label08;

        $i18 = virtualinvoke r0.<ucar.ma2.Section: int getRank()>();

        if $i18 <= 3 goto label05;

        virtualinvoke r0.<ucar.ma2.Section: ucar.ma2.Range getRange(int)>(0);

        r24 = virtualinvoke r0.<ucar.ma2.Section: ucar.ma2.Range getRange(int)>(1);

        r26 = virtualinvoke r0.<ucar.ma2.Section: ucar.ma2.Range getRange(int)>(2);

        r25 = virtualinvoke r0.<ucar.ma2.Section: ucar.ma2.Range getRange(int)>(3);

        goto label08;

     label05:
        $i19 = virtualinvoke r0.<ucar.ma2.Section: int getRank()>();

        if $i19 <= 2 goto label06;

        virtualinvoke r0.<ucar.ma2.Section: ucar.ma2.Range getRange(int)>(0);

        r26 = virtualinvoke r0.<ucar.ma2.Section: ucar.ma2.Range getRange(int)>(1);

        r25 = virtualinvoke r0.<ucar.ma2.Section: ucar.ma2.Range getRange(int)>(2);

        goto label08;

     label06:
        $i20 = virtualinvoke r0.<ucar.ma2.Section: int getRank()>();

        if $i20 <= 1 goto label07;

        r26 = virtualinvoke r0.<ucar.ma2.Section: ucar.ma2.Range getRange(int)>(0);

        r25 = virtualinvoke r0.<ucar.ma2.Section: ucar.ma2.Range getRange(int)>(1);

        goto label08;

     label07:
        r25 = virtualinvoke r0.<ucar.ma2.Section: ucar.ma2.Range getRange(int)>(0);

     label08:
        $r27 = virtualinvoke r1.<ucar.nc2.Variable: java.lang.String getName()>();

        $r28 = virtualinvoke r1.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        $r29 = virtualinvoke $r28.<ucar.ma2.DataType: java.lang.Class getPrimitiveClassType()>();

        $r30 = virtualinvoke r0.<ucar.ma2.Section: int[] getShape()>();

        $r31 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(java.lang.Class,int[])>($r29, $r30);

        $r32 = virtualinvoke $r31.<ucar.ma2.Array: ucar.ma2.Index getIndex()>();

        $z6 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>("latitude");

        if $z6 != 0 goto label09;

        $z2 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>("longitude");

        if $z2 == 0 goto label15;

     label09:
        $r19 = newmultiarray (double)[2][1];

        $i1 = virtualinvoke r25.<ucar.ma2.Range: int length()>();

        $i2 = virtualinvoke r26.<ucar.ma2.Range: int length()>();

        $r20 = newmultiarray (double)[$i1][$i2][2];

        i21 = 0;

     label10:
        $i22 = virtualinvoke r25.<ucar.ma2.Range: int length()>();

        if i21 >= $i22 goto label15;

        i23 = 0;

     label11:
        $i15 = virtualinvoke r26.<ucar.ma2.Range: int length()>();

        if i23 >= $i15 goto label14;

        $r11 = $r19[0];

        $i16 = virtualinvoke r25.<ucar.ma2.Range: int element(int)>(i21);

        $d0 = (double) $i16;

        $r11[0] = $d0;

        $r12 = $r19[1];

        $i17 = virtualinvoke r26.<ucar.ma2.Range: int element(int)>(i23);

        $d1 = (double) $i17;

        $r12[0] = $d1;

        $r13 = r2.<ucar.nc2.iosp.mcidas.AreaReader: edu.wisc.ssec.mcidas.AREAnav nav>;

        $r14 = virtualinvoke $r13.<edu.wisc.ssec.mcidas.AREAnav: double[][] toLatLon(double[][])>($r19);

        $z1 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>("lat");

        if $z1 == 0 goto label12;

        $r17 = virtualinvoke $r32.<ucar.ma2.Index: ucar.ma2.Index set(int,int)>(i23, i21);

        $r18 = $r14[0];

        $d3 = $r18[0];

        $f1 = (float) $d3;

        virtualinvoke $r31.<ucar.ma2.Array: void setFloat(ucar.ma2.Index,float)>($r17, $f1);

        goto label13;

     label12:
        $r15 = virtualinvoke $r32.<ucar.ma2.Index: ucar.ma2.Index set(int,int)>(i23, i21);

        $r16 = $r14[1];

        $d2 = $r16[0];

        $f0 = (float) $d2;

        virtualinvoke $r31.<ucar.ma2.Array: void setFloat(ucar.ma2.Index,float)>($r15, $f0);

     label13:
        i23 = i23 + 1;

        goto label11;

     label14:
        i21 = i21 + 1;

        goto label10;

     label15:
        $z0 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>("image");

        if $z0 == 0 goto label29;

     label16:
        r33 = newmultiarray (int)[1][1];

        if r24 == null goto label23;

        i24 = 0;

     label17:
        $i8 = virtualinvoke r24.<ucar.ma2.Range: int length()>();

        if i24 >= $i8 goto label22;

        $i9 = virtualinvoke r24.<ucar.ma2.Range: int element(int)>(i24);

        i25 = $i9 + 1;

        i26 = 0;

     label18:
        $i10 = virtualinvoke r26.<ucar.ma2.Range: int length()>();

        if i26 >= $i10 goto label21;

        i27 = 0;

     label19:
        $i11 = virtualinvoke r25.<ucar.ma2.Range: int length()>();

        if i27 >= $i11 goto label20;

        $r7 = r2.<ucar.nc2.iosp.mcidas.AreaReader: edu.wisc.ssec.mcidas.AreaFile af>;

        $i12 = virtualinvoke r26.<ucar.ma2.Range: int element(int)>(i26);

        $i13 = virtualinvoke r25.<ucar.ma2.Range: int element(int)>(i27);

        $r8 = virtualinvoke $r7.<edu.wisc.ssec.mcidas.AreaFile: int[][] getData(int,int,int,int,int)>($i12, $i13, 1, 1, i25);

        $r9 = virtualinvoke $r32.<ucar.ma2.Index: ucar.ma2.Index set(int,int,int,int)>(0, i24, i26, i27);

        $r10 = $r8[0];

        $i14 = $r10[0];

        virtualinvoke $r31.<ucar.ma2.Array: void setInt(ucar.ma2.Index,int)>($r9, $i14);

        i27 = i27 + 1;

        goto label19;

     label20:
        i26 = i26 + 1;

        goto label18;

     label21:
        i24 = i24 + 1;

        goto label17;

     label22:
        goto label27;

     label23:
        i28 = 0;

     label24:
        $i3 = virtualinvoke r26.<ucar.ma2.Range: int length()>();

        if i28 >= $i3 goto label27;

        i29 = 0;

     label25:
        $i4 = virtualinvoke r25.<ucar.ma2.Range: int length()>();

        if i29 >= $i4 goto label26;

        $r3 = r2.<ucar.nc2.iosp.mcidas.AreaReader: edu.wisc.ssec.mcidas.AreaFile af>;

        $i5 = virtualinvoke r26.<ucar.ma2.Range: int element(int)>(i28);

        $i6 = virtualinvoke r25.<ucar.ma2.Range: int element(int)>(i29);

        $r4 = virtualinvoke $r3.<edu.wisc.ssec.mcidas.AreaFile: int[][] getData(int,int,int,int)>($i5, $i6, 1, 1);

        $r5 = virtualinvoke $r32.<ucar.ma2.Index: ucar.ma2.Index set(int,int,int)>(0, i28, i29);

        $r6 = $r4[0];

        $i7 = $r6[0];

        virtualinvoke $r31.<ucar.ma2.Array: void setInt(ucar.ma2.Index,int)>($r5, $i7);

        i29 = i29 + 1;

        goto label25;

     label26:
        i28 = i28 + 1;

        goto label24;

     label27:
        goto label29;

     label28:
        $r21 := @caughtexception;

        $r34 = new java.io.IOException;

        $r35 = (edu.wisc.ssec.mcidas.AreaFileException) $r21;

        $r23 = virtualinvoke $r35.<edu.wisc.ssec.mcidas.AreaFileException: java.lang.String toString()>();

        specialinvoke $r34.<java.io.IOException: void <init>(java.lang.String)>($r23);

        throw $r34;

     label29:
        return $r31;

        catch edu.wisc.ssec.mcidas.AreaFileException from label16 to label27 with label28;
    }

    private void setAreaDirectoryAttributes(ucar.nc2.Variable)
    {
        edu.wisc.ssec.mcidas.AreaDirectory $r2;
        java.lang.Integer $r6;
        ucar.nc2.iosp.mcidas.AreaReader r0;
        ucar.nc2.Attribute $r4;
        int[] $r1, $r7;
        int $i0, i1;
        ucar.nc2.Variable r3;
        java.lang.String $r5;

        r0 := @this: ucar.nc2.iosp.mcidas.AreaReader;

        r3 := @parameter0: ucar.nc2.Variable;

        $r1 = r0.<ucar.nc2.iosp.mcidas.AreaReader: int[] dirBlock>;

        if $r1 == null goto label1;

        $r2 = r0.<ucar.nc2.iosp.mcidas.AreaReader: edu.wisc.ssec.mcidas.AreaDirectory ad>;

        if $r2 != null goto label2;

     label1:
        return;

     label2:
        i1 = 1;

     label3:
        if i1 >= 14 goto label6;

        if i1 != 7 goto label4;

        goto label5;

     label4:
        $r4 = new ucar.nc2.Attribute;

        $r5 = specialinvoke r0.<ucar.nc2.iosp.mcidas.AreaReader: java.lang.String getADDescription(int)>(i1);

        $r6 = new java.lang.Integer;

        $r7 = r0.<ucar.nc2.iosp.mcidas.AreaReader: int[] dirBlock>;

        $i0 = $r7[i1];

        specialinvoke $r6.<java.lang.Integer: void <init>(int)>($i0);

        specialinvoke $r4.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>($r5, $r6);

        virtualinvoke r3.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r4);

     label5:
        i1 = i1 + 1;

        goto label3;

     label6:
        return;
    }

    private void setNavBlockAttributes(ucar.nc2.Variable)
    {
        edu.wisc.ssec.mcidas.AreaDirectory $r2;
        ucar.nc2.iosp.mcidas.AreaReader r0;
        ucar.nc2.Attribute $r4;
        int[] $r1, $r5;
        int $i0;
        ucar.nc2.Variable r3;
        java.lang.String $r6;

        r0 := @this: ucar.nc2.iosp.mcidas.AreaReader;

        r3 := @parameter0: ucar.nc2.Variable;

        $r1 = r0.<ucar.nc2.iosp.mcidas.AreaReader: int[] navBlock>;

        if $r1 == null goto label1;

        $r2 = r0.<ucar.nc2.iosp.mcidas.AreaReader: edu.wisc.ssec.mcidas.AreaDirectory ad>;

        if $r2 != null goto label2;

     label1:
        return;

     label2:
        $r4 = new ucar.nc2.Attribute;

        $r5 = r0.<ucar.nc2.iosp.mcidas.AreaReader: int[] navBlock>;

        $i0 = $r5[0];

        $r6 = staticinvoke <edu.wisc.ssec.mcidas.McIDASUtil: java.lang.String intBitsToString(int)>($i0);

        specialinvoke $r4.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("navigation_type", $r6);

        virtualinvoke r3.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r4);

        return;
    }

    private java.lang.String getADDescription(int)
    {
        ucar.nc2.iosp.mcidas.AreaReader r4;
        int i0;
        java.lang.StringBuilder $r0, $r1, $r2, $r3;
        java.lang.String r5, $r6;

        r4 := @this: ucar.nc2.iosp.mcidas.AreaReader;

        i0 := @parameter0: int;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dir(");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        tableswitch(i0)
        {
            case 0: goto label01;
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label04;
            case 4: goto label05;
            case 5: goto label06;
            case 6: goto label07;
            case 7: goto label36;
            case 8: goto label08;
            case 9: goto label09;
            case 10: goto label10;
            case 11: goto label11;
            case 12: goto label12;
            case 13: goto label13;
            case 14: goto label14;
            case 15: goto label15;
            case 16: goto label16;
            case 17: goto label17;
            case 18: goto label18;
            case 19: goto label36;
            case 20: goto label36;
            case 21: goto label36;
            case 22: goto label36;
            case 23: goto label36;
            case 24: goto label36;
            case 25: goto label36;
            case 26: goto label36;
            case 27: goto label36;
            case 28: goto label36;
            case 29: goto label36;
            case 30: goto label36;
            case 31: goto label36;
            case 32: goto label36;
            case 33: goto label19;
            case 34: goto label20;
            case 35: goto label21;
            case 36: goto label36;
            case 37: goto label36;
            case 38: goto label36;
            case 39: goto label36;
            case 40: goto label36;
            case 41: goto label36;
            case 42: goto label36;
            case 43: goto label36;
            case 44: goto label36;
            case 45: goto label22;
            case 46: goto label23;
            case 47: goto label24;
            case 48: goto label25;
            case 49: goto label26;
            case 50: goto label27;
            case 51: goto label28;
            case 52: goto label29;
            case 53: goto label36;
            case 54: goto label36;
            case 55: goto label36;
            case 56: goto label30;
            case 57: goto label31;
            case 58: goto label32;
            case 59: goto label33;
            case 60: goto label36;
            case 61: goto label36;
            case 62: goto label34;
            case 63: goto label35;
            default: goto label36;
        };

     label01:
        r5 = "relative position of the image object in the ADDE dataset";

        goto label36;

     label02:
        r5 = "AREA version";

        goto label36;

     label03:
        r5 = "SSEC sensor source number";

        goto label36;

     label04:
        r5 = "nominal year and Julian day of the image (yyyddd)";

        goto label36;

     label05:
        r5 = "nominal time of the image (hhmmss)";

        goto label36;

     label06:
        r5 = "upper-left image line coordinate";

        goto label36;

     label07:
        r5 = "upper-left image element coordinate";

        goto label36;

     label08:
        r5 = "number of lines in the image";

        goto label36;

     label09:
        r5 = "number of data points per line";

        goto label36;

     label10:
        r5 = "number of bytes per data point";

        goto label36;

     label11:
        r5 = "line resolution";

        goto label36;

     label12:
        r5 = "element resolution";

        goto label36;

     label13:
        r5 = "number of spectral bands";

        goto label36;

     label14:
        r5 = "length of the line prefix";

        goto label36;

     label15:
        r5 = "SSEC project number used when creating the file";

        goto label36;

     label16:
        r5 = "year and Julian day the image file was created (yyyddd)";

        goto label36;

     label17:
        r5 = "image file creation time (hhmmss)";

        goto label36;

     label18:
        r5 = "spectral band map: bands 1-32";

        goto label36;

     label19:
        r5 = "byte offset to the start of the data block";

        goto label36;

     label20:
        r5 = "byte offset to the start of the navigation block";

        goto label36;

     label21:
        r5 = "validity code";

        goto label36;

     label22:
        r5 = "actual image start year and Julian day (yyyddd)";

        goto label36;

     label23:
        r5 = "actual image start time (hhmmss) in milliseconds for POES data";

        goto label36;

     label24:
        r5 = "actual image start scan";

        goto label36;

     label25:
        r5 = "length of the prefix documentation";

        goto label36;

     label26:
        r5 = "length of the prefix calibration";

        goto label36;

     label27:
        r5 = "length of the prefix band list";

        goto label36;

     label28:
        r5 = "source type";

        goto label36;

     label29:
        r5 = "calibration type";

        goto label36;

     label30:
        r5 = "original source type";

        goto label36;

     label31:
        r5 = "calibration unit";

        goto label36;

     label32:
        r5 = "calibration scaling";

        goto label36;

     label33:
        r5 = "byte offset to the supplemental block";

        goto label36;

     label34:
        r5 = "byte offset to the calibration block";

        goto label36;

     label35:
        r5 = "number of comment cards";

     label36:
        $r6 = virtualinvoke r5.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\s", "_");

        return $r6;
    }

    private int getCalType(java.lang.String)
    {
        ucar.nc2.iosp.mcidas.AreaReader r6;
        byte b0;
        java.lang.String r0, $r1, $r2, $r3, $r4, $r5;
        boolean $z0, $z1, $z2, $z3, $z4;

        r6 := @this: ucar.nc2.iosp.mcidas.AreaReader;

        r0 := @parameter0: java.lang.String;

        b0 = -1;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("ALB");

        if $z0 == 0 goto label1;

        b0 = 3;

        goto label5;

     label1:
        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>();

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("BRIT");

        if $z1 == 0 goto label2;

        b0 = 5;

        goto label5;

     label2:
        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>();

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("RAD");

        if $z2 == 0 goto label3;

        b0 = 2;

        goto label5;

     label3:
        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>();

        $z3 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("RAW");

        if $z3 == 0 goto label4;

        b0 = 1;

        goto label5;

     label4:
        $r5 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>();

        $z4 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("TEMP");

        if $z4 == 0 goto label5;

        b0 = 4;

     label5:
        return b0;
    }

    private void setCalTypeAttributes(ucar.nc2.Variable, int)
    {
        java.lang.Float $r3;
        ucar.nc2.iosp.mcidas.AreaReader r1;
        byte $b1;
        ucar.nc2.Attribute $r2, $r4, $r7;
        int i0;
        float $f0, $f1;
        ucar.nc2.Variable r0;
        java.lang.String $r5, r6, $r8;

        r1 := @this: ucar.nc2.iosp.mcidas.AreaReader;

        r0 := @parameter0: ucar.nc2.Variable;

        i0 := @parameter1: int;

        r6 = "image values";

        tableswitch(i0)
        {
            case 1: goto label5;
            case 2: goto label4;
            case 3: goto label1;
            case 4: goto label3;
            case 5: goto label2;
            default: goto label6;
        };

     label1:
        r6 = "albedo";

        goto label6;

     label2:
        r6 = "brightness values";

        goto label6;

     label3:
        r6 = "temperature";

        goto label6;

     label4:
        r6 = "pixel radiance values";

        goto label6;

     label5:
        r6 = "raw image values";

        goto label6;

     label6:
        $r7 = new ucar.nc2.Attribute;

        specialinvoke $r7.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", r6);

        virtualinvoke r0.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r7);

        $r8 = r1.<ucar.nc2.iosp.mcidas.AreaReader: java.lang.String calUnit>;

        if $r8 == null goto label7;

        $r4 = new ucar.nc2.Attribute;

        $r5 = r1.<ucar.nc2.iosp.mcidas.AreaReader: java.lang.String calUnit>;

        specialinvoke $r4.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", $r5);

        virtualinvoke r0.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r4);

     label7:
        $f0 = r1.<ucar.nc2.iosp.mcidas.AreaReader: float calScale>;

        $b1 = $f0 cmpl 1.0F;

        if $b1 == 0 goto label8;

        $r2 = new ucar.nc2.Attribute;

        $f1 = r1.<ucar.nc2.iosp.mcidas.AreaReader: float calScale>;

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        specialinvoke $r2.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("scale_factor", $r3);

        virtualinvoke r0.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r2);

     label8:
        return;
    }
}
