class thredds.catalog2.simpleImpl.ServiceContainer extends java.lang.Object
{
    private java.util.List services;
    private final thredds.catalog2.simpleImpl.GlobalServiceContainer globalServiceContainer;
    private boolean isBuilt;
    static final boolean $assertionsDisabled;

    void <init>(thredds.catalog2.simpleImpl.GlobalServiceContainer)
    {
        thredds.catalog2.simpleImpl.GlobalServiceContainer r1;
        thredds.catalog2.simpleImpl.ServiceContainer r0;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: thredds.catalog2.simpleImpl.ServiceContainer;

        r1 := @parameter0: thredds.catalog2.simpleImpl.GlobalServiceContainer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("");

        throw $r2;

     label1:
        r0.<thredds.catalog2.simpleImpl.ServiceContainer: boolean isBuilt> = 0;

        r0.<thredds.catalog2.simpleImpl.ServiceContainer: thredds.catalog2.simpleImpl.GlobalServiceContainer globalServiceContainer> = r1;

        return;
    }

    thredds.catalog2.simpleImpl.ServiceImpl getServiceByGloballyUniqueName(java.lang.String)
    {
        thredds.catalog2.simpleImpl.GlobalServiceContainer $r2;
        thredds.catalog2.simpleImpl.ServiceImpl $r3;
        thredds.catalog2.simpleImpl.ServiceContainer r0;
        java.lang.String r1;

        r0 := @this: thredds.catalog2.simpleImpl.ServiceContainer;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<thredds.catalog2.simpleImpl.ServiceContainer: thredds.catalog2.simpleImpl.GlobalServiceContainer globalServiceContainer>;

        $r3 = virtualinvoke $r2.<thredds.catalog2.simpleImpl.GlobalServiceContainer: thredds.catalog2.simpleImpl.ServiceImpl getServiceByGloballyUniqueName(java.lang.String)>(r1);

        return $r3;
    }

    boolean isEmpty()
    {
        java.util.List $r1, $r2;
        thredds.catalog2.simpleImpl.ServiceContainer r0;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.ServiceContainer;

        $r1 = r0.<thredds.catalog2.simpleImpl.ServiceContainer: java.util.List services>;

        if $r1 != null goto label1;

        return 1;

     label1:
        $r2 = r0.<thredds.catalog2.simpleImpl.ServiceContainer: java.util.List services>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        return $z0;
    }

    int size()
    {
        java.util.List $r1, $r2;
        int $i0;
        thredds.catalog2.simpleImpl.ServiceContainer r0;

        r0 := @this: thredds.catalog2.simpleImpl.ServiceContainer;

        $r1 = r0.<thredds.catalog2.simpleImpl.ServiceContainer: java.util.List services>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<thredds.catalog2.simpleImpl.ServiceContainer: java.util.List services>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        return $i0;
    }

    thredds.catalog2.simpleImpl.ServiceImpl addService(java.lang.String, thredds.catalog.ServiceType, java.net.URI)
    {
        thredds.catalog2.simpleImpl.GlobalServiceContainer $r6, $r8;
        java.lang.IllegalStateException $r11;
        thredds.catalog2.simpleImpl.ServiceImpl $r2;
        java.lang.AssertionError $r9;
        java.util.ArrayList $r10;
        java.util.List $r1, $r7;
        thredds.catalog.ServiceType r4;
        thredds.catalog2.simpleImpl.ServiceContainer r0;
        java.lang.String r3;
        java.net.URI r5;
        boolean $z0, $z1, $z2;

        r0 := @this: thredds.catalog2.simpleImpl.ServiceContainer;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: thredds.catalog.ServiceType;

        r5 := @parameter2: java.net.URI;

        $z0 = r0.<thredds.catalog2.simpleImpl.ServiceContainer: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r11 = new java.lang.IllegalStateException;

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This ServiceContainer has been built.");

        throw $r11;

     label1:
        $r1 = r0.<thredds.catalog2.simpleImpl.ServiceContainer: java.util.List services>;

        if $r1 != null goto label2;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r0.<thredds.catalog2.simpleImpl.ServiceContainer: java.util.List services> = $r10;

     label2:
        $r2 = new thredds.catalog2.simpleImpl.ServiceImpl;

        $r6 = r0.<thredds.catalog2.simpleImpl.ServiceContainer: thredds.catalog2.simpleImpl.GlobalServiceContainer globalServiceContainer>;

        specialinvoke $r2.<thredds.catalog2.simpleImpl.ServiceImpl: void <init>(java.lang.String,thredds.catalog.ServiceType,java.net.URI,thredds.catalog2.simpleImpl.GlobalServiceContainer)>(r3, r4, r5, $r6);

        $r7 = r0.<thredds.catalog2.simpleImpl.ServiceContainer: java.util.List services>;

        $z1 = interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r2);

        $z2 = <thredds.catalog2.simpleImpl.ServiceContainer: boolean $assertionsDisabled>;

        if $z2 != 0 goto label3;

        if $z1 != 0 goto label3;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();

        throw $r9;

     label3:
        $r8 = r0.<thredds.catalog2.simpleImpl.ServiceContainer: thredds.catalog2.simpleImpl.GlobalServiceContainer globalServiceContainer>;

        virtualinvoke $r8.<thredds.catalog2.simpleImpl.GlobalServiceContainer: void addService(thredds.catalog2.simpleImpl.ServiceImpl)>($r2);

        return $r2;
    }

    boolean removeService(thredds.catalog2.simpleImpl.ServiceImpl)
    {
        thredds.catalog2.simpleImpl.GlobalServiceContainer $r3;
        java.lang.IllegalStateException $r5;
        thredds.catalog2.simpleImpl.ServiceImpl r1;
        java.lang.AssertionError $r4;
        java.util.List $r2;
        thredds.catalog2.simpleImpl.ServiceContainer r0;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: thredds.catalog2.simpleImpl.ServiceContainer;

        r1 := @parameter0: thredds.catalog2.simpleImpl.ServiceImpl;

        $z0 = r0.<thredds.catalog2.simpleImpl.ServiceContainer: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This ServiceContainer has been built.");

        throw $r5;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $r2 = r0.<thredds.catalog2.simpleImpl.ServiceContainer: java.util.List services>;

        $z1 = interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>(r1);

        if $z1 == 0 goto label4;

        $r3 = r0.<thredds.catalog2.simpleImpl.ServiceContainer: thredds.catalog2.simpleImpl.GlobalServiceContainer globalServiceContainer>;

        $z2 = virtualinvoke $r3.<thredds.catalog2.simpleImpl.GlobalServiceContainer: boolean removeService(thredds.catalog2.simpleImpl.ServiceImpl)>(r1);

        $z3 = <thredds.catalog2.simpleImpl.ServiceContainer: boolean $assertionsDisabled>;

        if $z3 != 0 goto label3;

        if $z2 != 0 goto label3;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label3:
        return 1;

     label4:
        return 0;
    }

    java.util.List getServices()
    {
        java.lang.IllegalStateException $r6;
        java.util.ArrayList $r2;
        java.util.List $r1, $r3, $r4, $r5;
        thredds.catalog2.simpleImpl.ServiceContainer r0;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.ServiceContainer;

        $z0 = r0.<thredds.catalog2.simpleImpl.ServiceContainer: boolean isBuilt>;

        if $z0 != 0 goto label1;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This Service has escaped from its ServiceBuilder without being finished().");

        throw $r6;

     label1:
        $r1 = r0.<thredds.catalog2.simpleImpl.ServiceContainer: java.util.List services>;

        if $r1 != null goto label2;

        $r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r5;

     label2:
        $r2 = new java.util.ArrayList;

        $r3 = r0.<thredds.catalog2.simpleImpl.ServiceContainer: java.util.List services>;

        specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r3);

        $r4 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r2);

        return $r4;
    }

    boolean containsServiceName(java.lang.String)
    {
        java.util.List $r2;
        thredds.catalog2.simpleImpl.ServiceImpl $r3;
        thredds.catalog2.simpleImpl.ServiceContainer r1;
        java.lang.String r0;
        boolean $z0;

        r1 := @this: thredds.catalog2.simpleImpl.ServiceContainer;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return 0;

     label1:
        $r2 = r1.<thredds.catalog2.simpleImpl.ServiceContainer: java.util.List services>;

        if $r2 != null goto label2;

        return 0;

     label2:
        $r3 = specialinvoke r1.<thredds.catalog2.simpleImpl.ServiceContainer: thredds.catalog2.simpleImpl.ServiceImpl getServiceImplByName(java.lang.String)>(r0);

        if null == $r3 goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    thredds.catalog2.Service getServiceByName(java.lang.String)
    {
        java.lang.IllegalStateException $r3;
        thredds.catalog2.simpleImpl.ServiceImpl $r2;
        thredds.catalog2.simpleImpl.ServiceContainer r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.ServiceContainer;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<thredds.catalog2.simpleImpl.ServiceContainer: boolean isBuilt>;

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This Service has escaped from its ServiceBuilder without being finished().");

        throw $r3;

     label1:
        if r1 != null goto label2;

        return null;

     label2:
        $r2 = specialinvoke r0.<thredds.catalog2.simpleImpl.ServiceContainer: thredds.catalog2.simpleImpl.ServiceImpl getServiceImplByName(java.lang.String)>(r1);

        return $r2;
    }

    private thredds.catalog2.simpleImpl.ServiceImpl getServiceImplByName(java.lang.String)
    {
        java.util.Iterator $r3;
        thredds.catalog2.simpleImpl.ServiceImpl r5;
        java.util.List $r1, $r2;
        thredds.catalog2.simpleImpl.ServiceContainer r0;
        java.lang.Object $r4;
        java.lang.String $r6, r7;
        boolean $z0, $z1;

        r0 := @this: thredds.catalog2.simpleImpl.ServiceContainer;

        r7 := @parameter0: java.lang.String;

        $r1 = r0.<thredds.catalog2.simpleImpl.ServiceContainer: java.util.List services>;

        if $r1 == null goto label3;

        $r2 = r0.<thredds.catalog2.simpleImpl.ServiceContainer: java.util.List services>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (thredds.catalog2.simpleImpl.ServiceImpl) $r4;

        $r6 = virtualinvoke r5.<thredds.catalog2.simpleImpl.ServiceImpl: java.lang.String getName()>();

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r7);

        if $z1 == 0 goto label2;

        return r5;

     label2:
        goto label1;

     label3:
        return null;
    }

    java.util.List getServiceBuilders()
    {
        java.lang.IllegalStateException $r6;
        java.util.ArrayList $r2;
        java.util.List $r1, $r3, $r4, $r5;
        thredds.catalog2.simpleImpl.ServiceContainer r0;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.ServiceContainer;

        $z0 = r0.<thredds.catalog2.simpleImpl.ServiceContainer: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This ServiceBuilder has been finished().");

        throw $r6;

     label1:
        $r1 = r0.<thredds.catalog2.simpleImpl.ServiceContainer: java.util.List services>;

        if $r1 != null goto label2;

        $r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r5;

     label2:
        $r2 = new java.util.ArrayList;

        $r3 = r0.<thredds.catalog2.simpleImpl.ServiceContainer: java.util.List services>;

        specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r3);

        $r4 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r2);

        return $r4;
    }

    thredds.catalog2.builder.ServiceBuilder getServiceBuilderByName(java.lang.String)
    {
        java.lang.IllegalStateException $r3;
        thredds.catalog2.simpleImpl.ServiceImpl $r2;
        thredds.catalog2.simpleImpl.ServiceContainer r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.ServiceContainer;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<thredds.catalog2.simpleImpl.ServiceContainer: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This ServiceBuilder has been finished().");

        throw $r3;

     label1:
        if r1 != null goto label2;

        return null;

     label2:
        $r2 = specialinvoke r0.<thredds.catalog2.simpleImpl.ServiceContainer: thredds.catalog2.simpleImpl.ServiceImpl getServiceImplByName(java.lang.String)>(r1);

        return $r2;
    }

    boolean isBuilt()
    {
        thredds.catalog2.simpleImpl.ServiceContainer r0;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.ServiceContainer;

        $z0 = r0.<thredds.catalog2.simpleImpl.ServiceContainer: boolean isBuilt>;

        return $z0;
    }

    thredds.catalog2.builder.BuilderIssues getIssues()
    {
        java.util.Iterator $r4;
        thredds.catalog2.simpleImpl.ServiceImpl r6;
        thredds.catalog2.builder.BuilderIssues $r0, $r7;
        java.util.List $r2, $r3;
        thredds.catalog2.simpleImpl.ServiceContainer r1;
        java.lang.Object $r5;
        boolean $z0;

        r1 := @this: thredds.catalog2.simpleImpl.ServiceContainer;

        $r0 = new thredds.catalog2.builder.BuilderIssues;

        specialinvoke $r0.<thredds.catalog2.builder.BuilderIssues: void <init>()>();

        $r2 = r1.<thredds.catalog2.simpleImpl.ServiceContainer: java.util.List services>;

        if $r2 == null goto label2;

        $r3 = r1.<thredds.catalog2.simpleImpl.ServiceContainer: java.util.List services>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (thredds.catalog2.simpleImpl.ServiceImpl) $r5;

        $r7 = virtualinvoke r6.<thredds.catalog2.simpleImpl.ServiceImpl: thredds.catalog2.builder.BuilderIssues getIssues()>();

        virtualinvoke $r0.<thredds.catalog2.builder.BuilderIssues: void addAllIssues(thredds.catalog2.builder.BuilderIssues)>($r7);

        goto label1;

     label2:
        return $r0;
    }

    void build() throws thredds.catalog2.builder.BuilderException
    {
        java.util.Iterator $r3;
        thredds.catalog2.simpleImpl.ServiceImpl r5;
        java.util.List $r1, $r2;
        thredds.catalog2.simpleImpl.ServiceContainer r0;
        java.lang.Object $r4;
        boolean $z0, $z1;

        r0 := @this: thredds.catalog2.simpleImpl.ServiceContainer;

        $z0 = r0.<thredds.catalog2.simpleImpl.ServiceContainer: boolean isBuilt>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = r0.<thredds.catalog2.simpleImpl.ServiceContainer: java.util.List services>;

        if $r1 == null goto label3;

        $r2 = r0.<thredds.catalog2.simpleImpl.ServiceContainer: java.util.List services>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (thredds.catalog2.simpleImpl.ServiceImpl) $r4;

        virtualinvoke r5.<thredds.catalog2.simpleImpl.ServiceImpl: thredds.catalog2.Service build()>();

        goto label2;

     label3:
        r0.<thredds.catalog2.simpleImpl.ServiceContainer: boolean isBuilt> = 1;

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lthredds/catalog2/simpleImpl/ServiceContainer;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <thredds.catalog2.simpleImpl.ServiceContainer: boolean $assertionsDisabled> = $z1;

        return;
    }
}
