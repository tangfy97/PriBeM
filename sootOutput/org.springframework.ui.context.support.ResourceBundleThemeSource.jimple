public class org.springframework.ui.context.support.ResourceBundleThemeSource extends java.lang.Object implements org.springframework.ui.context.HierarchicalThemeSource
{
    protected final org.apache.commons.logging.Log logger;
    private org.springframework.ui.context.ThemeSource parentThemeSource;
    private java.lang.String basenamePrefix;
    private final java.util.Map themeCache;

    public void <init>()
    {
        org.springframework.ui.context.support.ResourceBundleThemeSource r0;
        java.lang.Class $r1;
        org.apache.commons.logging.Log $r2;
        java.util.HashMap $r3;

        r0 := @this: org.springframework.ui.context.support.ResourceBundleThemeSource;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r1);

        r0.<org.springframework.ui.context.support.ResourceBundleThemeSource: org.apache.commons.logging.Log logger> = $r2;

        r0.<org.springframework.ui.context.support.ResourceBundleThemeSource: java.lang.String basenamePrefix> = "";

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<org.springframework.ui.context.support.ResourceBundleThemeSource: java.util.Map themeCache> = $r3;

        return;
    }

    public void setParentThemeSource(org.springframework.ui.context.ThemeSource)
    {
        java.lang.Throwable $r8;
        java.util.Iterator $r5;
        java.util.Collection $r4;
        org.springframework.ui.context.Theme r7;
        org.springframework.ui.context.support.ResourceBundleThemeSource r0;
        org.springframework.ui.context.ThemeSource r1;
        java.util.Map $r2, $r3;
        java.lang.Object $r6;
        boolean $z0;

        r0 := @this: org.springframework.ui.context.support.ResourceBundleThemeSource;

        r1 := @parameter0: org.springframework.ui.context.ThemeSource;

        r0.<org.springframework.ui.context.support.ResourceBundleThemeSource: org.springframework.ui.context.ThemeSource parentThemeSource> = r1;

        $r2 = r0.<org.springframework.ui.context.support.ResourceBundleThemeSource: java.util.Map themeCache>;

        entermonitor $r2;

     label1:
        $r3 = r0.<org.springframework.ui.context.support.ResourceBundleThemeSource: java.util.Map themeCache>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Collection values()>();

        $r5 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

        goto label3;

     label2:
        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.springframework.ui.context.Theme) $r6;

        virtualinvoke r0.<org.springframework.ui.context.support.ResourceBundleThemeSource: void initParent(org.springframework.ui.context.Theme)>(r7);

     label3:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        exitmonitor $r2;

     label4:
        goto label7;

     label5:
        $r8 := @caughtexception;

        exitmonitor $r2;

     label6:
        throw $r8;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public org.springframework.ui.context.ThemeSource getParentThemeSource()
    {
        org.springframework.ui.context.support.ResourceBundleThemeSource r0;
        org.springframework.ui.context.ThemeSource $r1;

        r0 := @this: org.springframework.ui.context.support.ResourceBundleThemeSource;

        $r1 = r0.<org.springframework.ui.context.support.ResourceBundleThemeSource: org.springframework.ui.context.ThemeSource parentThemeSource>;

        return $r1;
    }

    public void setBasenamePrefix(java.lang.String)
    {
        java.lang.String r1, $r2;
        org.springframework.ui.context.support.ResourceBundleThemeSource r0;

        r0 := @this: org.springframework.ui.context.support.ResourceBundleThemeSource;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label1;

        $r2 = r1;

        goto label2;

     label1:
        $r2 = "";

     label2:
        r0.<org.springframework.ui.context.support.ResourceBundleThemeSource: java.lang.String basenamePrefix> = $r2;

        return;
    }

    public org.springframework.ui.context.Theme getTheme(java.lang.String)
    {
        java.lang.Throwable $r21;
        org.springframework.ui.context.support.ResourceBundleThemeSource r1;
        java.util.Map $r2, $r3, $r12;
        java.lang.String r0, $r6, $r7, $r9, $r20;
        org.springframework.ui.context.support.SimpleTheme $r11;
        org.springframework.context.MessageSource $r10;
        boolean $z0;
        org.springframework.ui.context.Theme r22;
        java.lang.Object $r4;
        java.lang.StringBuilder $r5, $r8, $r14, $r16, $r17, $r18, $r19;
        org.apache.commons.logging.Log $r13, $r15;

        r1 := @this: org.springframework.ui.context.support.ResourceBundleThemeSource;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $r2 = r1.<org.springframework.ui.context.support.ResourceBundleThemeSource: java.util.Map themeCache>;

        entermonitor $r2;

     label2:
        $r3 = r1.<org.springframework.ui.context.support.ResourceBundleThemeSource: java.util.Map themeCache>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r22 = (org.springframework.ui.context.Theme) $r4;

        if r22 != null goto label3;

        $r5 = new java.lang.StringBuilder;

        $r6 = r1.<org.springframework.ui.context.support.ResourceBundleThemeSource: java.lang.String basenamePrefix>;

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r7);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = virtualinvoke r1.<org.springframework.ui.context.support.ResourceBundleThemeSource: org.springframework.context.MessageSource createMessageSource(java.lang.String)>($r9);

        $r11 = new org.springframework.ui.context.support.SimpleTheme;

        specialinvoke $r11.<org.springframework.ui.context.support.SimpleTheme: void <init>(java.lang.String,org.springframework.context.MessageSource)>(r0, $r10);

        r22 = $r11;

        virtualinvoke r1.<org.springframework.ui.context.support.ResourceBundleThemeSource: void initParent(org.springframework.ui.context.Theme)>($r11);

        $r12 = r1.<org.springframework.ui.context.support.ResourceBundleThemeSource: java.util.Map themeCache>;

        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r11);

        $r13 = r1.<org.springframework.ui.context.support.ResourceBundleThemeSource: org.apache.commons.logging.Log logger>;

        $z0 = interfaceinvoke $r13.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label3;

        $r15 = r1.<org.springframework.ui.context.support.ResourceBundleThemeSource: org.apache.commons.logging.Log logger>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>("Theme created: name \'");

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', basename [");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r15.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r20);

     label3:
        exitmonitor $r2;

     label4:
        return r22;

     label5:
        $r21 := @caughtexception;

        exitmonitor $r2;

     label6:
        throw $r21;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    protected org.springframework.context.MessageSource createMessageSource(java.lang.String)
    {
        org.springframework.context.support.ResourceBundleMessageSource $r0;
        java.lang.String r1;
        org.springframework.ui.context.support.ResourceBundleThemeSource r2;

        r2 := @this: org.springframework.ui.context.support.ResourceBundleThemeSource;

        r1 := @parameter0: java.lang.String;

        $r0 = new org.springframework.context.support.ResourceBundleMessageSource;

        specialinvoke $r0.<org.springframework.context.support.ResourceBundleMessageSource: void <init>()>();

        virtualinvoke $r0.<org.springframework.context.support.ResourceBundleMessageSource: void setBasename(java.lang.String)>(r1);

        return $r0;
    }

    protected void initParent(org.springframework.ui.context.Theme)
    {
        org.springframework.ui.context.Theme r0, $r9;
        org.springframework.ui.context.support.ResourceBundleThemeSource r4;
        org.springframework.ui.context.ThemeSource $r5, $r7;
        org.springframework.context.HierarchicalMessageSource r3;
        java.lang.String $r8;
        org.springframework.context.MessageSource $r1, $r2, $r6, $r10;
        boolean $z0;

        r4 := @this: org.springframework.ui.context.support.ResourceBundleThemeSource;

        r0 := @parameter0: org.springframework.ui.context.Theme;

        $r1 = interfaceinvoke r0.<org.springframework.ui.context.Theme: org.springframework.context.MessageSource getMessageSource()>();

        $z0 = $r1 instanceof org.springframework.context.HierarchicalMessageSource;

        if $z0 == 0 goto label1;

        $r2 = interfaceinvoke r0.<org.springframework.ui.context.Theme: org.springframework.context.MessageSource getMessageSource()>();

        r3 = (org.springframework.context.HierarchicalMessageSource) $r2;

        $r5 = virtualinvoke r4.<org.springframework.ui.context.support.ResourceBundleThemeSource: org.springframework.ui.context.ThemeSource getParentThemeSource()>();

        if $r5 == null goto label1;

        $r6 = interfaceinvoke r3.<org.springframework.context.HierarchicalMessageSource: org.springframework.context.MessageSource getParentMessageSource()>();

        if $r6 != null goto label1;

        $r7 = virtualinvoke r4.<org.springframework.ui.context.support.ResourceBundleThemeSource: org.springframework.ui.context.ThemeSource getParentThemeSource()>();

        $r8 = interfaceinvoke r0.<org.springframework.ui.context.Theme: java.lang.String getName()>();

        $r9 = interfaceinvoke $r7.<org.springframework.ui.context.ThemeSource: org.springframework.ui.context.Theme getTheme(java.lang.String)>($r8);

        if $r9 == null goto label1;

        $r10 = interfaceinvoke $r9.<org.springframework.ui.context.Theme: org.springframework.context.MessageSource getMessageSource()>();

        interfaceinvoke r3.<org.springframework.context.HierarchicalMessageSource: void setParentMessageSource(org.springframework.context.MessageSource)>($r10);

     label1:
        return;
    }
}
