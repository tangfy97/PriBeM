final class com.google.inject.internal.ScopeBindingProcessor extends com.google.inject.internal.AbstractProcessor
{

    void <init>(com.google.inject.internal.Errors)
    {
        com.google.inject.internal.Errors r1;
        com.google.inject.internal.ScopeBindingProcessor r0;

        r0 := @this: com.google.inject.internal.ScopeBindingProcessor;

        r1 := @parameter0: com.google.inject.internal.Errors;

        specialinvoke r0.<com.google.inject.internal.AbstractProcessor: void <init>(com.google.inject.internal.Errors)>(r1);

        return;
    }

    public java.lang.Boolean visit(com.google.inject.spi.ScopeBinding)
    {
        com.google.inject.spi.ScopeBinding r0;
        java.lang.Boolean $r13;
        com.google.inject.internal.State $r5, $r10;
        boolean $z0, $z1;
        com.google.inject.Scope $r1, $r8, $r12;
        com.google.inject.internal.Errors $r14, $r15, $r16, $r18, $r19;
        com.google.inject.internal.ScopeBindingProcessor r3;
        com.google.inject.internal.InjectorImpl $r4, $r9;
        java.lang.Class $r2, $r7;
        java.lang.Object $r6, $r11, $r17;

        r3 := @this: com.google.inject.internal.ScopeBindingProcessor;

        r0 := @parameter0: com.google.inject.spi.ScopeBinding;

        $r1 = virtualinvoke r0.<com.google.inject.spi.ScopeBinding: com.google.inject.Scope getScope()>();

        $r2 = virtualinvoke r0.<com.google.inject.spi.ScopeBinding: java.lang.Class getAnnotationType()>();

        $z0 = staticinvoke <com.google.inject.internal.Annotations: boolean isScopeAnnotation(java.lang.Class)>($r2);

        if $z0 != 0 goto label1;

        $r18 = r3.<com.google.inject.internal.ScopeBindingProcessor: com.google.inject.internal.Errors errors>;

        $r19 = virtualinvoke $r18.<com.google.inject.internal.Errors: com.google.inject.internal.Errors withSource(java.lang.Object)>($r2);

        virtualinvoke $r19.<com.google.inject.internal.Errors: com.google.inject.internal.Errors missingScopeAnnotation()>();

     label1:
        $z1 = staticinvoke <com.google.inject.internal.Annotations: boolean isRetainedAtRuntime(java.lang.Class)>($r2);

        if $z1 != 0 goto label2;

        $r15 = r3.<com.google.inject.internal.ScopeBindingProcessor: com.google.inject.internal.Errors errors>;

        $r16 = virtualinvoke $r15.<com.google.inject.internal.Errors: com.google.inject.internal.Errors withSource(java.lang.Object)>($r2);

        $r17 = virtualinvoke r0.<com.google.inject.spi.ScopeBinding: java.lang.Object getSource()>();

        virtualinvoke $r16.<com.google.inject.internal.Errors: com.google.inject.internal.Errors missingRuntimeRetention(java.lang.Object)>($r17);

     label2:
        $r4 = r3.<com.google.inject.internal.ScopeBindingProcessor: com.google.inject.internal.InjectorImpl injector>;

        $r5 = $r4.<com.google.inject.internal.InjectorImpl: com.google.inject.internal.State state>;

        $r6 = staticinvoke <com.google.inject.internal.util.$Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r2, "annotation type");

        $r7 = (java.lang.Class) $r6;

        $r8 = interfaceinvoke $r5.<com.google.inject.internal.State: com.google.inject.Scope getScope(java.lang.Class)>($r7);

        if $r8 == null goto label3;

        $r14 = r3.<com.google.inject.internal.ScopeBindingProcessor: com.google.inject.internal.Errors errors>;

        virtualinvoke $r14.<com.google.inject.internal.Errors: com.google.inject.internal.Errors duplicateScopes(com.google.inject.Scope,java.lang.Class,com.google.inject.Scope)>($r8, $r2, $r1);

        goto label4;

     label3:
        $r9 = r3.<com.google.inject.internal.ScopeBindingProcessor: com.google.inject.internal.InjectorImpl injector>;

        $r10 = $r9.<com.google.inject.internal.InjectorImpl: com.google.inject.internal.State state>;

        $r11 = staticinvoke <com.google.inject.internal.util.$Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r1, "scope");

        $r12 = (com.google.inject.Scope) $r11;

        interfaceinvoke $r10.<com.google.inject.internal.State: void putAnnotation(java.lang.Class,com.google.inject.Scope)>($r2, $r12);

     label4:
        $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        return $r13;
    }

    public volatile java.lang.Object visit(com.google.inject.spi.ScopeBinding)
    {
        java.lang.Boolean $r2;
        com.google.inject.internal.ScopeBindingProcessor r0;
        com.google.inject.spi.ScopeBinding r1;

        r0 := @this: com.google.inject.internal.ScopeBindingProcessor;

        r1 := @parameter0: com.google.inject.spi.ScopeBinding;

        $r2 = virtualinvoke r0.<com.google.inject.internal.ScopeBindingProcessor: java.lang.Boolean visit(com.google.inject.spi.ScopeBinding)>(r1);

        return $r2;
    }
}
