public class org.apache.xpath.functions.FuncLang extends org.apache.xpath.functions.FunctionOneArg
{

    public void <init>()
    {
        org.apache.xpath.functions.FuncLang r0;

        r0 := @this: org.apache.xpath.functions.FuncLang;

        specialinvoke r0.<org.apache.xpath.functions.FunctionOneArg: void <init>()>();

        return;
    }

    public org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext) throws javax.xml.transform.TransformerException
    {
        short $s1;
        org.apache.xpath.XPathContext r1;
        int $i0, $i2, $i3, $i4, i6, $i8, $i9, $i11;
        java.lang.String $r4, $r6, $r7, $r8;
        boolean $z0, z1;
        org.apache.xpath.Expression $r2;
        org.apache.xpath.functions.FuncLang r0;
        char $c5;
        org.apache.xpath.objects.XBoolean $r9;
        org.apache.xml.dtm.DTM $r5;
        org.apache.xpath.objects.XObject $r3;

        r0 := @this: org.apache.xpath.functions.FuncLang;

        r1 := @parameter0: org.apache.xpath.XPathContext;

        $r2 = r0.<org.apache.xpath.functions.FunctionOneArg: org.apache.xpath.Expression m_arg0>;

        $r3 = virtualinvoke $r2.<org.apache.xpath.Expression: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)>(r1);

        $r4 = virtualinvoke $r3.<org.apache.xpath.objects.XObject: java.lang.String str()>();

        $i0 = virtualinvoke r1.<org.apache.xpath.XPathContext: int getCurrentNode()>();

        i6 = $i0;

        z1 = 0;

        $r5 = virtualinvoke r1.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM getDTM(int)>($i0);

        goto label5;

     label1:
        $s1 = interfaceinvoke $r5.<org.apache.xml.dtm.DTM: short getNodeType(int)>(i6);

        if 1 != $s1 goto label4;

        $i2 = interfaceinvoke $r5.<org.apache.xml.dtm.DTM: int getAttributeNode(int,java.lang.String,java.lang.String)>(i6, "http://www.w3.org/XML/1998/namespace", "lang");

        $i8 = (int) -1;

        if $i8 == $i2 goto label4;

        $r6 = interfaceinvoke $r5.<org.apache.xml.dtm.DTM: java.lang.String getNodeValue(int)>($i2);

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String toLowerCase()>();

        $r8 = virtualinvoke $r4.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean startsWith(java.lang.String)>($r8);

        if $z0 == 0 goto label6;

        $i3 = virtualinvoke $r4.<java.lang.String: int length()>();

        $i4 = virtualinvoke $r6.<java.lang.String: int length()>();

        if $i4 == $i3 goto label2;

        $c5 = virtualinvoke $r6.<java.lang.String: char charAt(int)>($i3);

        $i9 = (int) $c5;

        if $i9 != 45 goto label3;

     label2:
        z1 = 1;

     label3:
        goto label6;

     label4:
        i6 = interfaceinvoke $r5.<org.apache.xml.dtm.DTM: int getParent(int)>(i6);

     label5:
        $i11 = (int) -1;

        if $i11 != i6 goto label1;

     label6:
        if z1 == 0 goto label7;

        $r9 = <org.apache.xpath.objects.XBoolean: org.apache.xpath.objects.XBoolean S_TRUE>;

        goto label8;

     label7:
        $r9 = <org.apache.xpath.objects.XBoolean: org.apache.xpath.objects.XBoolean S_FALSE>;

     label8:
        return $r9;
    }
}
