public class org.apache.batik.util.ParsedURLDefaultProtocolHandler extends org.apache.batik.util.AbstractParsedURLProtocolHandler
{

    public void <init>()
    {
        org.apache.batik.util.ParsedURLDefaultProtocolHandler r0;

        r0 := @this: org.apache.batik.util.ParsedURLDefaultProtocolHandler;

        specialinvoke r0.<org.apache.batik.util.AbstractParsedURLProtocolHandler: void <init>(java.lang.String)>(null);

        return;
    }

    protected void <init>(java.lang.String)
    {
        org.apache.batik.util.ParsedURLDefaultProtocolHandler r0;
        java.lang.String r1;

        r0 := @this: org.apache.batik.util.ParsedURLDefaultProtocolHandler;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.batik.util.AbstractParsedURLProtocolHandler: void <init>(java.lang.String)>(r1);

        return;
    }

    protected org.apache.batik.util.ParsedURLData constructParsedURLData()
    {
        org.apache.batik.util.ParsedURLDefaultProtocolHandler r1;
        org.apache.batik.util.ParsedURLData $r0;

        r1 := @this: org.apache.batik.util.ParsedURLDefaultProtocolHandler;

        $r0 = new org.apache.batik.util.ParsedURLData;

        specialinvoke $r0.<org.apache.batik.util.ParsedURLData: void <init>()>();

        return $r0;
    }

    protected org.apache.batik.util.ParsedURLData constructParsedURLData(java.net.URL)
    {
        org.apache.batik.util.ParsedURLDefaultProtocolHandler r2;
        org.apache.batik.util.ParsedURLData $r0;
        java.net.URL r1;

        r2 := @this: org.apache.batik.util.ParsedURLDefaultProtocolHandler;

        r1 := @parameter0: java.net.URL;

        $r0 = new org.apache.batik.util.ParsedURLData;

        specialinvoke $r0.<org.apache.batik.util.ParsedURLData: void <init>(java.net.URL)>(r1);

        return $r0;
    }

    public org.apache.batik.util.ParsedURLData parseURL(java.lang.String)
    {
        java.net.URL $r17;
        org.apache.batik.util.ParsedURLDefaultProtocolHandler r1;
        org.apache.batik.util.ParsedURLData $r2, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14, $i16, $i17, i18, i19, i20, i21, $i23, $i25, $i26, $i27, $i29, $i31, $i33, $i35, $i37, $i39, $i41;
        java.lang.String $r4, $r5, $r8, $r9, $r10, $r11, $r12, $r13, r14, r15, $r16;
        java.net.MalformedURLException $r6;
        java.lang.NumberFormatException $r3;
        char $c13, $c15;

        r1 := @this: org.apache.batik.util.ParsedURLDefaultProtocolHandler;

        r14 := @parameter0: java.lang.String;

     label01:
        $r17 = new java.net.URL;

        specialinvoke $r17.<java.net.URL: void <init>(java.lang.String)>(r14);

        $r2 = virtualinvoke r1.<org.apache.batik.util.ParsedURLDefaultProtocolHandler: org.apache.batik.util.ParsedURLData constructParsedURLData(java.net.URL)>($r17);

        return $r2;

     label02:
        $r6 := @caughtexception;

        $r7 = virtualinvoke r1.<org.apache.batik.util.ParsedURLDefaultProtocolHandler: org.apache.batik.util.ParsedURLData constructParsedURLData()>();

        if r14 != null goto label03;

        return $r7;

     label03:
        i18 = 0;

        $i2 = virtualinvoke r14.<java.lang.String: int length()>();

        i19 = $i2;

        $i3 = virtualinvoke r14.<java.lang.String: int indexOf(int)>(35);

        $r7.<org.apache.batik.util.ParsedURLData: java.lang.String ref> = null;

        $i23 = (int) -1;

        if $i3 == $i23 goto label05;

        $i16 = $i3 + 1;

        if $i16 >= $i2 goto label04;

        $i17 = $i3 + 1;

        $r13 = virtualinvoke r14.<java.lang.String: java.lang.String substring(int)>($i17);

        $r7.<org.apache.batik.util.ParsedURLData: java.lang.String ref> = $r13;

     label04:
        $r12 = virtualinvoke r14.<java.lang.String: java.lang.String substring(int,int)>(0, $i3);

        r14 = $r12;

        i19 = virtualinvoke $r12.<java.lang.String: int length()>();

     label05:
        if i19 != 0 goto label06;

        return $r7;

     label06:
        i20 = 0;

        i21 = virtualinvoke r14.<java.lang.String: char charAt(int)>(0);

        goto label09;

     label07:
        i20 = i20 + 1;

        if i20 != i19 goto label08;

        i21 = 0;

        goto label11;

     label08:
        i21 = virtualinvoke r14.<java.lang.String: char charAt(int)>(i20);

     label09:
        if i21 == 45 goto label07;

        if i21 == 43 goto label07;

        if i21 == 46 goto label07;

        if i21 < 97 goto label10;

        if i21 <= 122 goto label07;

     label10:
        if i21 < 65 goto label11;

        if i21 <= 90 goto label07;

     label11:
        if i21 != 58 goto label12;

        $r10 = virtualinvoke r14.<java.lang.String: java.lang.String substring(int,int)>(0, i20);

        $r11 = virtualinvoke $r10.<java.lang.String: java.lang.String toLowerCase()>();

        $r7.<org.apache.batik.util.ParsedURLData: java.lang.String protocol> = $r11;

        i18 = i20 + 1;

     label12:
        $i4 = virtualinvoke r14.<java.lang.String: int indexOf(int)>(47);

        $i25 = (int) -1;

        if $i4 == $i25 goto label13;

        $i12 = i18 + 2;

        if $i12 >= i19 goto label27;

        $c13 = virtualinvoke r14.<java.lang.String: char charAt(int)>(i18);

        $i26 = (int) $c13;

        if $i26 != 47 goto label27;

        $i14 = i18 + 1;

        $c15 = virtualinvoke r14.<java.lang.String: char charAt(int)>($i14);

        $i27 = (int) $c15;

        if $i27 != 47 goto label27;

     label13:
        $i29 = (int) -1;

        if $i4 == $i29 goto label14;

        i18 = i18 + 2;

     label14:
        $i5 = virtualinvoke r14.<java.lang.String: int indexOf(int,int)>(47, i18);

        $i31 = (int) -1;

        if $i5 != $i31 goto label15;

        r15 = virtualinvoke r14.<java.lang.String: java.lang.String substring(int)>(i18);

        goto label16;

     label15:
        r15 = virtualinvoke r14.<java.lang.String: java.lang.String substring(int,int)>(i18, $i5);

     label16:
        $i6 = virtualinvoke r15.<java.lang.String: int indexOf(int)>(58);

        $i33 = (int) -1;

        $r7.<org.apache.batik.util.ParsedURLData: int port> = $i33;

        $i35 = (int) -1;

        if $i6 != $i35 goto label18;

        $i11 = virtualinvoke r15.<java.lang.String: int length()>();

        if $i11 != 0 goto label17;

        $r7.<org.apache.batik.util.ParsedURLData: java.lang.String host> = null;

        goto label24;

     label17:
        $r7.<org.apache.batik.util.ParsedURLData: java.lang.String host> = r15;

        goto label24;

     label18:
        if $i6 != 0 goto label19;

        $r7.<org.apache.batik.util.ParsedURLData: java.lang.String host> = null;

        goto label20;

     label19:
        $r8 = virtualinvoke r15.<java.lang.String: java.lang.String substring(int,int)>(0, $i6);

        $r7.<org.apache.batik.util.ParsedURLData: java.lang.String host> = $r8;

     label20:
        $i7 = $i6 + 1;

        $i8 = virtualinvoke r15.<java.lang.String: int length()>();

        if $i7 >= $i8 goto label24;

        $i9 = $i6 + 1;

        $r9 = virtualinvoke r15.<java.lang.String: java.lang.String substring(int)>($i9);

     label21:
        $i10 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r9);

        $r7.<org.apache.batik.util.ParsedURLData: int port> = $i10;

     label22:
        goto label24;

     label23:
        $r3 := @caughtexception;

     label24:
        $r16 = $r7.<org.apache.batik.util.ParsedURLData: java.lang.String host>;

        if $r16 == null goto label25;

        $r5 = $r7.<org.apache.batik.util.ParsedURLData: java.lang.String host>;

        $i1 = virtualinvoke $r5.<java.lang.String: int indexOf(int)>(46);

        $i37 = (int) -1;

        if $i1 != $i37 goto label26;

     label25:
        $i0 = $r7.<org.apache.batik.util.ParsedURLData: int port>;

        $i39 = (int) -1;

        if $i0 != $i39 goto label26;

        $r7.<org.apache.batik.util.ParsedURLData: java.lang.String host> = null;

        goto label27;

     label26:
        i18 = $i5;

     label27:
        $i41 = (int) -1;

        if i18 == $i41 goto label28;

        if i18 < i19 goto label29;

     label28:
        return $r7;

     label29:
        $r4 = virtualinvoke r14.<java.lang.String: java.lang.String substring(int)>(i18);

        $r7.<org.apache.batik.util.ParsedURLData: java.lang.String path> = $r4;

        return $r7;

        catch java.net.MalformedURLException from label01 to label02 with label02;
        catch java.lang.NumberFormatException from label21 to label22 with label23;
    }

    public static java.lang.String unescapeStr(java.lang.String)
    {
        java.lang.StringBuffer $r4;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7, $i9, $i10, $i11, i13, i14, $i16, $i17, $i18, $i20, $i22, $i24;
        java.lang.String r0, $r2, $r3;
        char $c5, $c8, $c12;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(37);

        i13 = $i0;

        $i16 = (int) -1;

        if $i0 != $i16 goto label1;

        return r0;

     label1:
        i14 = 0;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        goto label6;

     label2:
        if i13 == i14 goto label3;

        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i14, i13);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

     label3:
        $i1 = i13 + 2;

        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i1 < $i2 goto label4;

        goto label7;

     label4:
        i14 = i13 + 3;

        $i3 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(37, i14);

        i13 = $i3;

        $i4 = $i3 + 1;

        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i4);

        $i17 = (int) $c5;

        $i6 = staticinvoke <org.apache.batik.util.ParsedURLDefaultProtocolHandler: int charToHex(int)>($i17);

        $i7 = $i3 + 1;

        $c8 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i7);

        $i18 = (int) $c8;

        $i9 = staticinvoke <org.apache.batik.util.ParsedURLDefaultProtocolHandler: int charToHex(int)>($i18);

        $i20 = (int) -1;

        if $i6 == $i20 goto label6;

        $i22 = (int) -1;

        if $i9 != $i22 goto label5;

        goto label6;

     label5:
        $i10 = $i6 << 4;

        $i11 = $i10 | $i9;

        $c12 = (char) $i11;

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c12);

     label6:
        $i24 = (int) -1;

        if i13 != $i24 goto label2;

     label7:
        $r2 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    public static int charToHex(int)
    {
        int i0, $i1, $i3;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 48: goto label1;
            case 49: goto label1;
            case 50: goto label1;
            case 51: goto label1;
            case 52: goto label1;
            case 53: goto label1;
            case 54: goto label1;
            case 55: goto label1;
            case 56: goto label1;
            case 57: goto label1;
            case 58: goto label8;
            case 59: goto label8;
            case 60: goto label8;
            case 61: goto label8;
            case 62: goto label8;
            case 63: goto label8;
            case 64: goto label8;
            case 65: goto label2;
            case 66: goto label3;
            case 67: goto label4;
            case 68: goto label5;
            case 69: goto label6;
            case 70: goto label7;
            case 71: goto label8;
            case 72: goto label8;
            case 73: goto label8;
            case 74: goto label8;
            case 75: goto label8;
            case 76: goto label8;
            case 77: goto label8;
            case 78: goto label8;
            case 79: goto label8;
            case 80: goto label8;
            case 81: goto label8;
            case 82: goto label8;
            case 83: goto label8;
            case 84: goto label8;
            case 85: goto label8;
            case 86: goto label8;
            case 87: goto label8;
            case 88: goto label8;
            case 89: goto label8;
            case 90: goto label8;
            case 91: goto label8;
            case 92: goto label8;
            case 93: goto label8;
            case 94: goto label8;
            case 95: goto label8;
            case 96: goto label8;
            case 97: goto label2;
            case 98: goto label3;
            case 99: goto label4;
            case 100: goto label5;
            case 101: goto label6;
            case 102: goto label7;
            default: goto label8;
        };

     label1:
        $i1 = i0 - 48;

        return $i1;

     label2:
        return 10;

     label3:
        return 11;

     label4:
        return 12;

     label5:
        return 13;

     label6:
        return 14;

     label7:
        return 15;

     label8:
        $i3 = (int) -1;

        return $i3;
    }

    public org.apache.batik.util.ParsedURLData parseURL(org.apache.batik.util.ParsedURL, java.lang.String)
    {
        org.apache.batik.util.ParsedURLDefaultProtocolHandler r2;
        boolean $z0, $z1, $z2;
        org.apache.batik.util.ParsedURLData $r9, $r16, $r26, $r33, $r35, $r36, $r37, $r39, $r40;
        org.apache.batik.util.ParsedURL r0;
        java.lang.StringBuffer $r5, $r6, $r7, $r13, $r14, $r18, $r20, $r23, $r24, $r29, $r30, $r31, $r46, $r47, $r48, $r49, $r50;
        int $i0, $i1, $i2, $i3, $i4, $i6, i8, i9, i10, $i11, $i12, $i14;
        java.lang.String $r1, $r4, $r8, $r10, $r11, $r15, $r19, $r22, $r25, $r28, $r32, $r34, $r38, r41, r42, r43, r44, r45;
        char $c5, $c7;

        r2 := @this: org.apache.batik.util.ParsedURLDefaultProtocolHandler;

        r0 := @parameter0: org.apache.batik.util.ParsedURL;

        r41 := @parameter1: java.lang.String;

        $i0 = virtualinvoke r41.<java.lang.String: int length()>();

        if $i0 != 0 goto label01;

        $r40 = r0.<org.apache.batik.util.ParsedURL: org.apache.batik.util.ParsedURLData data>;

        return $r40;

     label01:
        i8 = 0;

        $i1 = virtualinvoke r41.<java.lang.String: int length()>();

        if $i1 != 0 goto label02;

        $r39 = r0.<org.apache.batik.util.ParsedURL: org.apache.batik.util.ParsedURLData data>;

        return $r39;

     label02:
        i9 = virtualinvoke r41.<java.lang.String: char charAt(int)>(0);

        goto label05;

     label03:
        i8 = i8 + 1;

        if i8 != $i1 goto label04;

        i9 = 0;

        goto label07;

     label04:
        i9 = virtualinvoke r41.<java.lang.String: char charAt(int)>(i8);

     label05:
        if i9 == 45 goto label03;

        if i9 == 43 goto label03;

        if i9 == 46 goto label03;

        if i9 < 97 goto label06;

        if i9 <= 122 goto label03;

     label06:
        if i9 < 65 goto label07;

        if i9 <= 90 goto label03;

     label07:
        r42 = null;

        if i9 != 58 goto label08;

        $r38 = virtualinvoke r41.<java.lang.String: java.lang.String substring(int,int)>(0, i8);

        r42 = virtualinvoke $r38.<java.lang.String: java.lang.String toLowerCase()>();

     label08:
        if r42 == null goto label12;

        $r34 = virtualinvoke r0.<org.apache.batik.util.ParsedURL: java.lang.String getProtocol()>();

        $z2 = virtualinvoke r42.<java.lang.String: boolean equals(java.lang.Object)>($r34);

        if $z2 != 0 goto label09;

        $r37 = virtualinvoke r2.<org.apache.batik.util.ParsedURLDefaultProtocolHandler: org.apache.batik.util.ParsedURLData parseURL(java.lang.String)>(r41);

        return $r37;

     label09:
        i10 = i8 + 1;

        $i6 = virtualinvoke r41.<java.lang.String: int length()>();

        if i10 != $i6 goto label10;

        $r36 = virtualinvoke r2.<org.apache.batik.util.ParsedURLDefaultProtocolHandler: org.apache.batik.util.ParsedURLData parseURL(java.lang.String)>(r41);

        return $r36;

     label10:
        $c7 = virtualinvoke r41.<java.lang.String: char charAt(int)>(i10);

        $i11 = (int) $c7;

        if $i11 != 47 goto label11;

        $r35 = virtualinvoke r2.<org.apache.batik.util.ParsedURLDefaultProtocolHandler: org.apache.batik.util.ParsedURLData parseURL(java.lang.String)>(r41);

        return $r35;

     label11:
        r41 = virtualinvoke r41.<java.lang.String: java.lang.String substring(int)>(i10);

     label12:
        $z0 = virtualinvoke r41.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z0 == 0 goto label14;

        $i4 = virtualinvoke r41.<java.lang.String: int length()>();

        if $i4 <= 1 goto label13;

        $c5 = virtualinvoke r41.<java.lang.String: char charAt(int)>(1);

        $i12 = (int) $c5;

        if $i12 != 47 goto label13;

        $r46 = new java.lang.StringBuffer;

        specialinvoke $r46.<java.lang.StringBuffer: void <init>()>();

        $r28 = virtualinvoke r0.<org.apache.batik.util.ParsedURL: java.lang.String getProtocol()>();

        $r29 = virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r41);

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.String toString()>();

        $r33 = virtualinvoke r2.<org.apache.batik.util.ParsedURLDefaultProtocolHandler: org.apache.batik.util.ParsedURLData parseURL(java.lang.String)>($r32);

        return $r33;

     label13:
        $r47 = new java.lang.StringBuffer;

        specialinvoke $r47.<java.lang.StringBuffer: void <init>()>();

        $r22 = virtualinvoke r0.<org.apache.batik.util.ParsedURL: java.lang.String getPortStr()>();

        $r23 = virtualinvoke $r47.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r41);

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.String toString()>();

        $r26 = virtualinvoke r2.<org.apache.batik.util.ParsedURLDefaultProtocolHandler: org.apache.batik.util.ParsedURLData parseURL(java.lang.String)>($r25);

        return $r26;

     label14:
        $z1 = virtualinvoke r41.<java.lang.String: boolean startsWith(java.lang.String)>("#");

        if $z1 == 0 goto label16;

        $r10 = virtualinvoke r0.<org.apache.batik.util.ParsedURL: java.lang.String getPortStr()>();

        r43 = $r10;

        $r11 = virtualinvoke r0.<org.apache.batik.util.ParsedURL: java.lang.String getPath()>();

        if $r11 == null goto label15;

        $r48 = new java.lang.StringBuffer;

        specialinvoke $r48.<java.lang.StringBuffer: void <init>()>();

        $r18 = virtualinvoke $r48.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r19 = virtualinvoke r0.<org.apache.batik.util.ParsedURL: java.lang.String getPath()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);

        r43 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

     label15:
        $r49 = new java.lang.StringBuffer;

        specialinvoke $r49.<java.lang.StringBuffer: void <init>()>();

        $r13 = virtualinvoke $r49.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r43);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r41);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        $r16 = virtualinvoke r2.<org.apache.batik.util.ParsedURLDefaultProtocolHandler: org.apache.batik.util.ParsedURLData parseURL(java.lang.String)>($r15);

        return $r16;

     label16:
        $r1 = virtualinvoke r0.<org.apache.batik.util.ParsedURL: java.lang.String getPath()>();

        r44 = $r1;

        if $r1 != null goto label17;

        r44 = "";

     label17:
        $i2 = virtualinvoke r44.<java.lang.String: int lastIndexOf(int)>(47);

        $i14 = (int) -1;

        if $i2 != $i14 goto label18;

        r45 = "";

        goto label19;

     label18:
        $i3 = $i2 + 1;

        r45 = virtualinvoke r44.<java.lang.String: java.lang.String substring(int,int)>(0, $i3);

     label19:
        $r50 = new java.lang.StringBuffer;

        specialinvoke $r50.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke r0.<org.apache.batik.util.ParsedURL: java.lang.String getPortStr()>();

        $r5 = virtualinvoke $r50.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r45);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r41);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        $r9 = virtualinvoke r2.<org.apache.batik.util.ParsedURLDefaultProtocolHandler: org.apache.batik.util.ParsedURLData parseURL(java.lang.String)>($r8);

        return $r9;
    }
}
