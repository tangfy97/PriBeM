public class org.dom4j.rule.RuleSet extends java.lang.Object
{
    private java.util.ArrayList rules;
    private org.dom4j.rule.Rule[] ruleArray;

    public void <init>()
    {
        org.dom4j.rule.RuleSet r0;
        java.util.ArrayList $r1;

        r0 := @this: org.dom4j.rule.RuleSet;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.dom4j.rule.RuleSet: java.util.ArrayList rules> = $r1;

        return;
    }

    public java.lang.String toString()
    {
        org.dom4j.rule.RuleSet r1;
        java.util.ArrayList $r5;
        java.lang.StringBuffer $r0, $r3, $r4, $r6, $r7;
        java.lang.String $r2, $r8;

        r1 := @this: org.dom4j.rule.RuleSet;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = specialinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" [RuleSet: ");

        $r5 = r1.<org.dom4j.rule.RuleSet: java.util.ArrayList rules>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ]");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r8;
    }

    public org.dom4j.rule.Rule getMatchingRule(org.dom4j.Node)
    {
        org.dom4j.Node r3;
        org.dom4j.rule.RuleSet r0;
        org.dom4j.rule.Rule[] $r1;
        int $i0, i1, $i3;
        org.dom4j.rule.Rule r2;
        boolean $z0;

        r0 := @this: org.dom4j.rule.RuleSet;

        r3 := @parameter0: org.dom4j.Node;

        $r1 = virtualinvoke r0.<org.dom4j.rule.RuleSet: org.dom4j.rule.Rule[] getRuleArray()>();

        $i0 = lengthof $r1;

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label3;

        r2 = $r1[i1];

        $z0 = virtualinvoke r2.<org.dom4j.rule.Rule: boolean matches(org.dom4j.Node)>(r3);

        if $z0 == 0 goto label2;

        return r2;

     label2:
        $i3 = (int) -1;

        i1 = i1 + $i3;

        goto label1;

     label3:
        return null;
    }

    public void addRule(org.dom4j.rule.Rule)
    {
        org.dom4j.rule.RuleSet r0;
        org.dom4j.rule.Rule r1;
        java.util.ArrayList $r2;

        r0 := @this: org.dom4j.rule.RuleSet;

        r1 := @parameter0: org.dom4j.rule.Rule;

        $r2 = r0.<org.dom4j.rule.RuleSet: java.util.ArrayList rules>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        r0.<org.dom4j.rule.RuleSet: org.dom4j.rule.Rule[] ruleArray> = null;

        return;
    }

    public void removeRule(org.dom4j.rule.Rule)
    {
        org.dom4j.rule.RuleSet r0;
        org.dom4j.rule.Rule r1;
        java.util.ArrayList $r2;

        r0 := @this: org.dom4j.rule.RuleSet;

        r1 := @parameter0: org.dom4j.rule.Rule;

        $r2 = r0.<org.dom4j.rule.RuleSet: java.util.ArrayList rules>;

        virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        r0.<org.dom4j.rule.RuleSet: org.dom4j.rule.Rule[] ruleArray> = null;

        return;
    }

    public void addAll(org.dom4j.rule.RuleSet)
    {
        org.dom4j.rule.RuleSet r0, r1;
        java.util.ArrayList $r2, $r3;

        r0 := @this: org.dom4j.rule.RuleSet;

        r1 := @parameter0: org.dom4j.rule.RuleSet;

        $r3 = r0.<org.dom4j.rule.RuleSet: java.util.ArrayList rules>;

        $r2 = r1.<org.dom4j.rule.RuleSet: java.util.ArrayList rules>;

        virtualinvoke $r3.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r2);

        r0.<org.dom4j.rule.RuleSet: org.dom4j.rule.Rule[] ruleArray> = null;

        return;
    }

    protected org.dom4j.rule.Rule[] getRuleArray()
    {
        org.dom4j.rule.RuleSet r0;
        org.dom4j.rule.Rule[] $r1, $r2, $r5, $r6;
        java.util.ArrayList $r3, $r4, $r7;
        int $i0;

        r0 := @this: org.dom4j.rule.RuleSet;

        $r1 = r0.<org.dom4j.rule.RuleSet: org.dom4j.rule.Rule[] ruleArray>;

        if $r1 != null goto label1;

        $r3 = r0.<org.dom4j.rule.RuleSet: java.util.ArrayList rules>;

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r3);

        $r4 = r0.<org.dom4j.rule.RuleSet: java.util.ArrayList rules>;

        $i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        $r5 = newarray (org.dom4j.rule.Rule)[$i0];

        r0.<org.dom4j.rule.RuleSet: org.dom4j.rule.Rule[] ruleArray> = $r5;

        $r7 = r0.<org.dom4j.rule.RuleSet: java.util.ArrayList rules>;

        $r6 = r0.<org.dom4j.rule.RuleSet: org.dom4j.rule.Rule[] ruleArray>;

        virtualinvoke $r7.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r6);

     label1:
        $r2 = r0.<org.dom4j.rule.RuleSet: org.dom4j.rule.Rule[] ruleArray>;

        return $r2;
    }
}
