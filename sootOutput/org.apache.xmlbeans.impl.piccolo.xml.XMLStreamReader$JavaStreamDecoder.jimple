class org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$JavaStreamDecoder extends java.lang.Object implements org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$XMLStreamDecoder
{
    private java.io.Reader reader;
    char[] oneCharBuffer;
    boolean sawCR;
    private final org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader this$0;

    public void <init>(org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader) throws java.io.IOException
    {
        char[] $r2;
        org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader r1;
        org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$JavaStreamDecoder r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$JavaStreamDecoder;

        r1 := @parameter0: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$JavaStreamDecoder: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = newarray (char)[1];

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$JavaStreamDecoder: char[] oneCharBuffer> = $r2;

        return;
    }

    public void reset() throws java.io.IOException
    {
        byte[] $r14;
        java.io.PushbackInputStream $r8;
        org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$JavaStreamDecoder r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.String $r7, $r20;
        org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader $r1, $r2, $r4, $r6, $r9, $r11, $r12, $r13, $r15, $r16, $r17, $r19;
        java.io.InputStreamReader $r3, $r18;
        java.io.InputStream $r5, $r10;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$JavaStreamDecoder;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$JavaStreamDecoder: boolean sawCR> = 0;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$JavaStreamDecoder: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader this$0>;

        $i0 = staticinvoke <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int access$300(org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader)>($r1);

        $r2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$JavaStreamDecoder: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader this$0>;

        $i1 = staticinvoke <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int access$400(org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader)>($r2);

        $i2 = $i0 - $i1;

        if $i2 <= 0 goto label1;

        $r8 = new java.io.PushbackInputStream;

        $r9 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$JavaStreamDecoder: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader this$0>;

        $r10 = staticinvoke <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.io.InputStream access$1200(org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader)>($r9);

        $r11 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$JavaStreamDecoder: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader this$0>;

        $i3 = staticinvoke <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int access$300(org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader)>($r11);

        $r12 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$JavaStreamDecoder: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader this$0>;

        $i4 = staticinvoke <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int access$400(org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader)>($r12);

        $i5 = $i3 - $i4;

        specialinvoke $r8.<java.io.PushbackInputStream: void <init>(java.io.InputStream,int)>($r10, $i5);

        $r13 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$JavaStreamDecoder: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader this$0>;

        $r14 = staticinvoke <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: byte[] access$800(org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader)>($r13);

        $r15 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$JavaStreamDecoder: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader this$0>;

        $i6 = staticinvoke <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int access$400(org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader)>($r15);

        $r16 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$JavaStreamDecoder: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader this$0>;

        $i7 = staticinvoke <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int access$300(org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader)>($r16);

        $r17 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$JavaStreamDecoder: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader this$0>;

        $i8 = staticinvoke <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int access$400(org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader)>($r17);

        $i9 = $i7 - $i8;

        virtualinvoke $r8.<java.io.PushbackInputStream: void unread(byte[],int,int)>($r14, $i6, $i9);

        $r18 = new java.io.InputStreamReader;

        $r19 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$JavaStreamDecoder: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader this$0>;

        $r20 = staticinvoke <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.lang.String access$1300(org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader)>($r19);

        specialinvoke $r18.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>($r8, $r20);

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$JavaStreamDecoder: java.io.Reader reader> = $r18;

        goto label2;

     label1:
        $r3 = new java.io.InputStreamReader;

        $r4 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$JavaStreamDecoder: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader this$0>;

        $r5 = staticinvoke <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.io.InputStream access$1200(org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader)>($r4);

        $r6 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$JavaStreamDecoder: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader this$0>;

        $r7 = staticinvoke <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.lang.String access$1300(org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader)>($r6);

        specialinvoke $r3.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>($r5, $r7);

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$JavaStreamDecoder: java.io.Reader reader> = $r3;

     label2:
        return;
    }

    public int read() throws java.io.IOException
    {
        org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$JavaStreamDecoder r0;
        int $i0, $i2;
        char[] $r1, $r2;
        char $c1;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$JavaStreamDecoder;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$JavaStreamDecoder: char[] oneCharBuffer>;

        $i0 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$JavaStreamDecoder: int read(char[],int,int)>($r1, 0, 1);

        if $i0 <= 0 goto label2;

        $r2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$JavaStreamDecoder: char[] oneCharBuffer>;

        $c1 = $r2[0];

        $i2 = (int) $c1;

        return $i2;

     label2:
        if $i0 >= 0 goto label3;

        return $i0;

     label3:
        goto label1;
    }

    public int read(char[], int, int) throws java.io.IOException
    {
        boolean $z0;
        java.io.Reader $r2;
        java.lang.StringBuffer $r5, $r6, $r7, $r8, $r9, $r13, $r15, $r19, $r21, $r23, $r25, $r26;
        org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$JavaStreamDecoder r0;
        int i0, i1, $i2, $i3, i4, $i6, $i7, $i8, i9, i10, $i11, $i12, $i14, $i15, $i17, $i18, $i20, $i21, $i22, $i23, $i24, $i25, $i26;
        java.lang.String $r10, $r14, $r16, $r20, $r22;
        java.io.PrintStream $r4;
        char c5;
        org.apache.xmlbeans.impl.piccolo.io.IllegalCharException $r24, $r27;
        char[] r1;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$JavaStreamDecoder;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$JavaStreamDecoder: java.io.Reader reader>;

        $i2 = virtualinvoke $r2.<java.io.Reader: int read(char[],int,int)>(r1, i0, i1);

        i9 = i0;

        if $i2 >= 0 goto label01;

        return $i2;

     label01:
        i10 = 0;

     label02:
        if i10 >= $i2 goto label14;

        i4 = i10 + i0;

        c5 = r1[i4];

        $i11 = (int) c5;

        if $i11 < 32 goto label07;

        $i12 = (int) c5;

        $i14 = (int) 55295;

        if $i12 <= $i14 goto label04;

        $i15 = (int) c5;

        $i17 = (int) 57344;

        if $i15 < $i17 goto label03;

        $i18 = (int) c5;

        $i20 = (int) 65533;

        if $i18 <= $i20 goto label04;

     label03:
        $i21 = (int) c5;

        if $i21 < 65536 goto label06;

        $i22 = (int) c5;

        if $i22 > 1114111 goto label06;

     label04:
        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$JavaStreamDecoder: boolean sawCR> = 0;

        if i4 == i9 goto label05;

        r1[i9] = c5;

     label05:
        i9 = i9 + 1;

        goto label13;

     label06:
        $r24 = new org.apache.xmlbeans.impl.piccolo.io.IllegalCharException;

        $r23 = new java.lang.StringBuffer;

        specialinvoke $r23.<java.lang.StringBuffer: void <init>()>();

        $r19 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Illegal XML Character: 0x");

        $i23 = (int) c5;

        $r20 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i23);

        $r21 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r24.<org.apache.xmlbeans.impl.piccolo.io.IllegalCharException: void <init>(java.lang.String)>($r22);

        throw $r24;

     label07:
        $i24 = (int) c5;

        tableswitch($i24)
        {
            case 9: goto label11;
            case 10: goto label08;
            case 11: goto label12;
            case 12: goto label12;
            case 13: goto label10;
            default: goto label12;
        };

     label08:
        $z0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$JavaStreamDecoder: boolean sawCR>;

        if $z0 == 0 goto label09;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$JavaStreamDecoder: boolean sawCR> = 0;

        goto label13;

     label09:
        $i7 = i9;

        i9 = i9 + 1;

        r1[$i7] = 10;

        goto label13;

     label10:
        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$JavaStreamDecoder: boolean sawCR> = 1;

        $i6 = i9;

        i9 = i9 + 1;

        r1[$i6] = 10;

        goto label13;

     label11:
        $i8 = i9;

        i9 = i9 + 1;

        r1[$i8] = 9;

        goto label13;

     label12:
        $r4 = <java.lang.System: java.io.PrintStream out>;

        $r25 = new java.lang.StringBuffer;

        specialinvoke $r25.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Char: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" [");

        $i25 = (int) c5;

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i25);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r10);

        $r27 = new org.apache.xmlbeans.impl.piccolo.io.IllegalCharException;

        $r26 = new java.lang.StringBuffer;

        specialinvoke $r26.<java.lang.StringBuffer: void <init>()>();

        $r13 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Illegal XML character: 0x");

        $i26 = (int) c5;

        $r14 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i26);

        $r15 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r27.<org.apache.xmlbeans.impl.piccolo.io.IllegalCharException: void <init>(java.lang.String)>($r16);

        throw $r27;

     label13:
        i10 = i10 + 1;

        goto label02;

     label14:
        $i3 = i9 - i0;

        return $i3;
    }

    public boolean ready() throws java.io.IOException
    {
        java.io.Reader $r1;
        org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$JavaStreamDecoder r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$JavaStreamDecoder;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$JavaStreamDecoder: java.io.Reader reader>;

        $z0 = virtualinvoke $r1.<java.io.Reader: boolean ready()>();

        return $z0;
    }

    public long skip(long) throws java.io.IOException
    {
        long l0, $l2, $l7, l8;
        byte $b1;
        org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$JavaStreamDecoder r0;
        int $i3, $i4, $i5, $i6, $i9;
        org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader $r1, $r2, $r4, $r5;
        char[] $r3;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$JavaStreamDecoder;

        l0 := @parameter0: long;

        l8 = 0L;

     label1:
        $b1 = l8 cmp l0;

        $i9 = (int) $b1;

        if $i9 >= 0 goto label3;

        $r2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$JavaStreamDecoder: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader this$0>;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$JavaStreamDecoder: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader this$0>;

        $r3 = staticinvoke <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: char[] access$200(org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader)>($r1);

        $l2 = staticinvoke <java.lang.Math: long min(long,long)>(l0, 100L);

        $i3 = (int) $l2;

        $i4 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$JavaStreamDecoder: int read(char[],int,int)>($r3, 0, $i3);

        staticinvoke <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int access$002(org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader,int)>($r2, $i4);

        $r4 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$JavaStreamDecoder: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader this$0>;

        $i5 = staticinvoke <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int access$000(org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader)>($r4);

        if $i5 <= 0 goto label2;

        $r5 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$JavaStreamDecoder: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader this$0>;

        $i6 = staticinvoke <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int access$000(org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader)>($r5);

        $l7 = (long) $i6;

        l8 = l8 + $l7;

        goto label1;

     label2:
        return l8;

     label3:
        return l8;
    }
}
