public class ucar.nc2.iosp.grid.GridVariable extends java.lang.Object
{
    private static org.slf4j.Logger log;
    private static boolean warnOk;
    private static boolean compareData;
    private static boolean sendAll;
    private final java.lang.String filename;
    private final java.lang.String name;
    private java.lang.String vname;
    private ucar.grid.GridRecord firstRecord;
    private ucar.grid.GridTableLookup lookup;
    private ucar.nc2.iosp.grid.GridHorizCoordSys hcs;
    private ucar.nc2.iosp.grid.GridTimeCoord tcs;
    private ucar.nc2.iosp.grid.GridEnsembleCoord ecs;
    private ucar.nc2.iosp.grid.GridVertCoord vc;
    private java.util.List records;
    private int nlevels;
    private int nens;
    private int ntimes;
    private ucar.grid.GridRecord[] recordTracker;
    private boolean hasVert;
    private volatile int hashCode;
    static final boolean $assertionsDisabled;

    void <init>(java.lang.String, java.lang.String, ucar.nc2.iosp.grid.GridHorizCoordSys, ucar.grid.GridTableLookup)
    {
        ucar.nc2.iosp.grid.GridVariable r0;
        ucar.nc2.iosp.grid.GridHorizCoordSys r4;
        ucar.grid.GridTableLookup r5;
        java.lang.String r2, r3;
        java.util.ArrayList $r1;

        r0 := @this: ucar.nc2.iosp.grid.GridVariable;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: ucar.nc2.iosp.grid.GridHorizCoordSys;

        r5 := @parameter3: ucar.grid.GridTableLookup;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.iosp.grid.GridVariable: ucar.nc2.iosp.grid.GridTimeCoord tcs> = null;

        r0.<ucar.nc2.iosp.grid.GridVariable: ucar.nc2.iosp.grid.GridEnsembleCoord ecs> = null;

        r0.<ucar.nc2.iosp.grid.GridVariable: ucar.nc2.iosp.grid.GridVertCoord vc> = null;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<ucar.nc2.iosp.grid.GridVariable: java.util.List records> = $r1;

        r0.<ucar.nc2.iosp.grid.GridVariable: boolean hasVert> = 0;

        r0.<ucar.nc2.iosp.grid.GridVariable: int hashCode> = 0;

        r0.<ucar.nc2.iosp.grid.GridVariable: java.lang.String filename> = r2;

        r0.<ucar.nc2.iosp.grid.GridVariable: java.lang.String name> = r3;

        r0.<ucar.nc2.iosp.grid.GridVariable: ucar.nc2.iosp.grid.GridHorizCoordSys hcs> = r4;

        r0.<ucar.nc2.iosp.grid.GridVariable: ucar.grid.GridTableLookup lookup> = r5;

        return;
    }

    void addProduct(ucar.grid.GridRecord)
    {
        ucar.nc2.iosp.grid.GridVariable r0;
        java.util.List $r2;
        ucar.grid.GridRecord r1, $r3;

        r0 := @this: ucar.nc2.iosp.grid.GridVariable;

        r1 := @parameter0: ucar.grid.GridRecord;

        $r2 = r0.<ucar.nc2.iosp.grid.GridVariable: java.util.List records>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        $r3 = r0.<ucar.nc2.iosp.grid.GridVariable: ucar.grid.GridRecord firstRecord>;

        if $r3 != null goto label1;

        r0.<ucar.nc2.iosp.grid.GridVariable: ucar.grid.GridRecord firstRecord> = r1;

     label1:
        return;
    }

    java.util.List getRecords()
    {
        ucar.nc2.iosp.grid.GridVariable r0;
        java.util.List $r1;

        r0 := @this: ucar.nc2.iosp.grid.GridVariable;

        $r1 = r0.<ucar.nc2.iosp.grid.GridVariable: java.util.List records>;

        return $r1;
    }

    ucar.grid.GridRecord getFirstRecord()
    {
        ucar.nc2.iosp.grid.GridVariable r0;
        java.util.List $r1;
        java.lang.Object $r2;
        ucar.grid.GridRecord $r3;

        r0 := @this: ucar.nc2.iosp.grid.GridVariable;

        $r1 = r0.<ucar.nc2.iosp.grid.GridVariable: java.util.List records>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        $r3 = (ucar.grid.GridRecord) $r2;

        return $r3;
    }

    ucar.nc2.iosp.grid.GridHorizCoordSys getHorizCoordSys()
    {
        ucar.nc2.iosp.grid.GridVariable r0;
        ucar.nc2.iosp.grid.GridHorizCoordSys $r1;

        r0 := @this: ucar.nc2.iosp.grid.GridVariable;

        $r1 = r0.<ucar.nc2.iosp.grid.GridVariable: ucar.nc2.iosp.grid.GridHorizCoordSys hcs>;

        return $r1;
    }

    ucar.nc2.iosp.grid.GridVertCoord getVertCoord()
    {
        ucar.nc2.iosp.grid.GridVariable r0;
        ucar.nc2.iosp.grid.GridVertCoord $r1;

        r0 := @this: ucar.nc2.iosp.grid.GridVariable;

        $r1 = r0.<ucar.nc2.iosp.grid.GridVariable: ucar.nc2.iosp.grid.GridVertCoord vc>;

        return $r1;
    }

    boolean hasVert()
    {
        ucar.nc2.iosp.grid.GridVariable r0;
        boolean $z0;

        r0 := @this: ucar.nc2.iosp.grid.GridVariable;

        $z0 = r0.<ucar.nc2.iosp.grid.GridVariable: boolean hasVert>;

        return $z0;
    }

    void setVarName(java.lang.String)
    {
        ucar.nc2.iosp.grid.GridVariable r0;
        java.lang.String r1;

        r0 := @this: ucar.nc2.iosp.grid.GridVariable;

        r1 := @parameter0: java.lang.String;

        r0.<ucar.nc2.iosp.grid.GridVariable: java.lang.String vname> = r1;

        return;
    }

    void setVertCoord(ucar.nc2.iosp.grid.GridVertCoord)
    {
        ucar.nc2.iosp.grid.GridVariable r0;
        ucar.nc2.iosp.grid.GridVertCoord r1;

        r0 := @this: ucar.nc2.iosp.grid.GridVariable;

        r1 := @parameter0: ucar.nc2.iosp.grid.GridVertCoord;

        r0.<ucar.nc2.iosp.grid.GridVariable: ucar.nc2.iosp.grid.GridVertCoord vc> = r1;

        return;
    }

    void setTimeCoord(ucar.nc2.iosp.grid.GridTimeCoord)
    {
        ucar.nc2.iosp.grid.GridVariable r0;
        ucar.nc2.iosp.grid.GridTimeCoord r1;

        r0 := @this: ucar.nc2.iosp.grid.GridVariable;

        r1 := @parameter0: ucar.nc2.iosp.grid.GridTimeCoord;

        r0.<ucar.nc2.iosp.grid.GridVariable: ucar.nc2.iosp.grid.GridTimeCoord tcs> = r1;

        return;
    }

    void setEnsembleCoord(ucar.nc2.iosp.grid.GridEnsembleCoord)
    {
        ucar.nc2.iosp.grid.GridVariable r0;
        ucar.nc2.iosp.grid.GridEnsembleCoord r1;

        r0 := @this: ucar.nc2.iosp.grid.GridVariable;

        r1 := @parameter0: ucar.nc2.iosp.grid.GridEnsembleCoord;

        r0.<ucar.nc2.iosp.grid.GridVariable: ucar.nc2.iosp.grid.GridEnsembleCoord ecs> = r1;

        return;
    }

    public int getNEnsembles()
    {
        ucar.nc2.iosp.grid.GridVariable r0;
        ucar.nc2.iosp.grid.GridEnsembleCoord $r1, $r2;
        int $i0;

        r0 := @this: ucar.nc2.iosp.grid.GridVariable;

        $r1 = r0.<ucar.nc2.iosp.grid.GridVariable: ucar.nc2.iosp.grid.GridEnsembleCoord ecs>;

        if $r1 != null goto label1;

        $i0 = 1;

        goto label2;

     label1:
        $r2 = r0.<ucar.nc2.iosp.grid.GridVariable: ucar.nc2.iosp.grid.GridEnsembleCoord ecs>;

        $i0 = virtualinvoke $r2.<ucar.nc2.iosp.grid.GridEnsembleCoord: int getNEnsembles()>();

     label2:
        return $i0;
    }

    boolean hasEnsemble()
    {
        ucar.nc2.iosp.grid.GridVariable r0;
        ucar.nc2.iosp.grid.GridEnsembleCoord $r1;
        boolean $z0;

        r0 := @this: ucar.nc2.iosp.grid.GridVariable;

        $r1 = r0.<ucar.nc2.iosp.grid.GridVariable: ucar.nc2.iosp.grid.GridEnsembleCoord ecs>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    boolean isEnsemble()
    {
        ucar.nc2.iosp.grid.GridVariable r0;
        ucar.grib.GribPds $r4;
        ucar.grid.GridRecord $r1, $r2;
        boolean $z0, $z1;
        ucar.grib.GribGridRecord r3;

        r0 := @this: ucar.nc2.iosp.grid.GridVariable;

        $r1 = r0.<ucar.nc2.iosp.grid.GridVariable: ucar.grid.GridRecord firstRecord>;

        $z0 = $r1 instanceof ucar.grib.GribGridRecord;

        if $z0 == 0 goto label1;

        $r2 = r0.<ucar.nc2.iosp.grid.GridVariable: ucar.grid.GridRecord firstRecord>;

        r3 = (ucar.grib.GribGridRecord) $r2;

        $r4 = virtualinvoke r3.<ucar.grib.GribGridRecord: ucar.grib.GribPds getPds()>();

        $z1 = virtualinvoke $r4.<ucar.grib.GribPds: boolean isEnsemble()>();

        return $z1;

     label1:
        return 0;
    }

    int getVertNlevels()
    {
        int $i0;
        ucar.nc2.iosp.grid.GridVariable r0;
        ucar.nc2.iosp.grid.GridVertCoord $r1;

        r0 := @this: ucar.nc2.iosp.grid.GridVariable;

        $r1 = r0.<ucar.nc2.iosp.grid.GridVariable: ucar.nc2.iosp.grid.GridVertCoord vc>;

        $i0 = virtualinvoke $r1.<ucar.nc2.iosp.grid.GridVertCoord: int getNLevels()>();

        return $i0;
    }

    java.lang.String getVertName()
    {
        ucar.nc2.iosp.grid.GridVariable r0;
        ucar.nc2.iosp.grid.GridVertCoord $r1;
        java.lang.String $r2;

        r0 := @this: ucar.nc2.iosp.grid.GridVariable;

        $r1 = r0.<ucar.nc2.iosp.grid.GridVariable: ucar.nc2.iosp.grid.GridVertCoord vc>;

        $r2 = virtualinvoke $r1.<ucar.nc2.iosp.grid.GridVertCoord: java.lang.String getVariableName()>();

        return $r2;
    }

    java.lang.String getVertLevelName()
    {
        ucar.nc2.iosp.grid.GridVariable r0;
        ucar.nc2.iosp.grid.GridVertCoord $r1;
        java.lang.String $r2;

        r0 := @this: ucar.nc2.iosp.grid.GridVariable;

        $r1 = r0.<ucar.nc2.iosp.grid.GridVariable: ucar.nc2.iosp.grid.GridVertCoord vc>;

        $r2 = virtualinvoke $r1.<ucar.nc2.iosp.grid.GridVertCoord: java.lang.String getLevelName()>();

        return $r2;
    }

    boolean getVertIsUsed()
    {
        ucar.nc2.iosp.grid.GridVariable r0;
        ucar.nc2.iosp.grid.GridVertCoord $r1;
        boolean $z0;

        r0 := @this: ucar.nc2.iosp.grid.GridVariable;

        $r1 = r0.<ucar.nc2.iosp.grid.GridVariable: ucar.nc2.iosp.grid.GridVertCoord vc>;

        $z0 = virtualinvoke $r1.<ucar.nc2.iosp.grid.GridVertCoord: boolean isVertDimensionUsed()>();

        return $z0;
    }

    int getVertIndex(ucar.grid.GridRecord)
    {
        ucar.nc2.iosp.grid.GridVariable r0;
        int $i0;
        ucar.nc2.iosp.grid.GridVertCoord $r2;
        ucar.grid.GridRecord r1;

        r0 := @this: ucar.nc2.iosp.grid.GridVariable;

        r1 := @parameter0: ucar.grid.GridRecord;

        $r2 = r0.<ucar.nc2.iosp.grid.GridVariable: ucar.nc2.iosp.grid.GridVertCoord vc>;

        $i0 = virtualinvoke $r2.<ucar.nc2.iosp.grid.GridVertCoord: int getIndex(ucar.grid.GridRecord)>(r1);

        return $i0;
    }

    int getNTimes()
    {
        ucar.nc2.iosp.grid.GridVariable r0;
        int $i0;
        ucar.nc2.iosp.grid.GridTimeCoord $r1, $r2;

        r0 := @this: ucar.nc2.iosp.grid.GridVariable;

        $r1 = r0.<ucar.nc2.iosp.grid.GridVariable: ucar.nc2.iosp.grid.GridTimeCoord tcs>;

        if $r1 != null goto label1;

        $i0 = 1;

        goto label2;

     label1:
        $r2 = r0.<ucar.nc2.iosp.grid.GridVariable: ucar.nc2.iosp.grid.GridTimeCoord tcs>;

        $i0 = virtualinvoke $r2.<ucar.nc2.iosp.grid.GridTimeCoord: int getNTimes()>();

     label2:
        return $i0;
    }

    ucar.nc2.Variable makeVariable(ucar.nc2.NetcdfFile, ucar.nc2.Group, java.lang.String, ucar.unidata.io.RandomAccessFile)
    {
        java.lang.Integer $r187, $r189, $r191, $r200, $r226, $r230, $r237, $r244;
        ucar.nc2.iosp.grid.GridVertCoord $r53;
        ucar.nc2.Attribute $r19, $r20, $r26, $r182, $r184, $r186, $r188, $r190, $r192, $r196, $r199, $r202, $r208, $r212, $r216, $r218, $r221, $r225, $r227, $r229, $r231, $r235, $r236, $r238, $r240, $r242, $r243, $r245, $r248, $r251, $r254, $r274;
        ucar.nc2.iosp.grid.GridHorizCoordSys $r12, $r249, $r277, $r278;
        ucar.ma2.Array $r195, $r224;
        int[] $r181, $r193, $r207, $r222;
        ucar.ma2.DataType $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, i37, i38, $i39, i40;
        java.io.PrintStream $r99;
        ucar.grib.grib2.Grib2Pds$PdsProbability r285;
        java.lang.Class $r194, $r223;
        java.lang.Float $r275;
        ucar.nc2.constants.CF$CellMethods $r253;
        java.lang.AssertionError $r270;
        ucar.grid.GridDefRecord $r279;
        java.lang.String $r2, $r6, $r11, $r14, $r18, $r21, $r39, $r42, $r45, $r47, $r54, $r64, $r75, $r80, $r83, $r85, $r90, $r97, $r110, $r113, $r120, $r129, $r132, $r139, $r148, $r151, $r155, $r166, $r171, $r175, $r177, $r183, $r185, $r198, $r211, $r215, $r217, $r220, $r228, $r234, $r246, $r250, $r257, $r260, $r262, $r265, $r267, $r268, r271, r272, r280;
        ucar.unidata.io.RandomAccessFile r71;
        java.util.Formatter $r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, z24, $z25, z26, $z27;
        ucar.grid.GridRecord[] $r27, $r33, $r34, $r48, $r67, $r69, $r292;
        java.util.List $r29, $r31, $r269;
        ucar.grid.GridTableLookup $r16, $r24, $r25, $r89, $r179, $r203, $r210, $r214, $r233, $r276;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        ucar.nc2.iosp.grid.GridTimeCoord $r1, $r10, $r140, $r256, $r288;
        java.lang.StringBuilder $r36, $r38, $r40, $r41, $r43, $r44, $r46, $r50, $r52, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r72, $r74, $r76, $r77, $r78, $r79, $r81, $r82, $r84, $r86, $r88, $r91, $r92, $r93, $r94, $r96, $r103, $r105, $r106, $r107, $r108, $r109, $r111, $r112, $r114, $r115, $r116, $r117, $r118, $r119, $r122, $r124, $r125, $r126, $r127, $r128, $r130, $r131, $r133, $r134, $r135, $r137, $r138, $r141, $r143, $r144, $r145, $r146, $r147, $r149, $r150, $r152, $r153, $r154, $r156, $r157, $r158, $r159, $r160, $r161, $r162, $r163, $r164, $r165, $r167, $r169, $r170, $r172, $r174, $r176, $r255, $r258, $r259, $r261;
        java.lang.Object[] $r9, $r13, $r263, $r264, $r266;
        ucar.nc2.iosp.grid.GridEnsembleCoord $r98, $r100, $r121, $r178;
        ucar.grib.GribPds $r101, $r102, $r205;
        ucar.grib.grib2.Grib2Pds r283;
        java.util.Date $r136;
        ucar.nc2.iosp.grid.GridVariable$Belongs $r66;
        ucar.nc2.Variable $r3;
        org.slf4j.Logger $r28, $r37, $r49, $r51, $r73, $r87, $r104, $r123, $r142, $r168, $r173;
        ucar.grid.GridParameter $r17;
        ucar.grib.grib1.Grib1GridTableLookup r286;
        java.lang.Object $r32, $r65, $r95;
        ucar.grib.grib2.Grib2GridTableLookup r281;
        ucar.nc2.Group r5;
        ucar.grib.GribGridRecord r273, r282, r289, r290, r291, r294, r295;
        java.lang.Double $r239, $r241;
        ucar.grid.GridRecord $r15, $r22, $r35, $r68, $r70, $r180, $r197, $r201, $r204, $r206, $r209, $r213, $r219, $r232, $r252, r287, $r293;
        ucar.grib.grib2.Grib2Tables$VectorComponentFlag $r23, $r247;
        ucar.nc2.iosp.grid.GridVariable r0;
        float $f0;
        ucar.nc2.NetcdfFile r4;
        ucar.grib.grib2.Grib2Pds$PdsEnsembleDerived r284;
        java.util.Iterator $r30;

        r0 := @this: ucar.nc2.iosp.grid.GridVariable;

        r4 := @parameter0: ucar.nc2.NetcdfFile;

        r5 := @parameter1: ucar.nc2.Group;

        r271 := @parameter2: java.lang.String;

        r71 := @parameter3: ucar.unidata.io.RandomAccessFile;

        $z0 = <ucar.nc2.iosp.grid.GridVariable: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        $r269 = r0.<ucar.nc2.iosp.grid.GridVariable: java.util.List records>;

        $i32 = interfaceinvoke $r269.<java.util.List: int size()>();

        if $i32 > 0 goto label01;

        $r270 = new java.lang.AssertionError;

        specialinvoke $r270.<java.lang.AssertionError: void <init>(java.lang.Object)>("no records for this variable");

        throw $r270;

     label01:
        $i0 = virtualinvoke r0.<ucar.nc2.iosp.grid.GridVariable: int getVertNlevels()>();

        r0.<ucar.nc2.iosp.grid.GridVariable: int nlevels> = $i0;

        $r1 = r0.<ucar.nc2.iosp.grid.GridVariable: ucar.nc2.iosp.grid.GridTimeCoord tcs>;

        $i1 = virtualinvoke $r1.<ucar.nc2.iosp.grid.GridTimeCoord: int getNTimes()>();

        r0.<ucar.nc2.iosp.grid.GridVariable: int ntimes> = $i1;

        $r2 = r0.<ucar.nc2.iosp.grid.GridVariable: java.lang.String vname>;

        if $r2 != null goto label02;

        $r267 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String replace(java.lang.String,char,java.lang.String)>(r271, 32, "_");

        $r268 = staticinvoke <ucar.nc2.iosp.AbstractIOServiceProvider: java.lang.String createValidNetcdfObjectName(java.lang.String)>($r267);

        r0.<ucar.nc2.iosp.grid.GridVariable: java.lang.String vname> = $r268;

     label02:
        $r3 = new ucar.nc2.Variable;

        $r6 = r0.<ucar.nc2.iosp.grid.GridVariable: java.lang.String vname>;

        specialinvoke $r3.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String)>(r4, r5, null, $r6);

        $r7 = <ucar.ma2.DataType: ucar.ma2.DataType FLOAT>;

        virtualinvoke $r3.<ucar.nc2.Variable: void setDataType(ucar.ma2.DataType)>($r7);

        $r8 = new java.util.Formatter;

        specialinvoke $r8.<java.util.Formatter: void <init>()>();

        $z1 = virtualinvoke r0.<ucar.nc2.iosp.grid.GridVariable: boolean hasEnsemble()>();

        if $z1 == 0 goto label03;

        $r266 = newarray (java.lang.Object)[0];

        virtualinvoke $r8.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("ens ", $r266);

     label03:
        $r9 = newarray (java.lang.Object)[1];

        $r10 = r0.<ucar.nc2.iosp.grid.GridVariable: ucar.nc2.iosp.grid.GridTimeCoord tcs>;

        $r11 = virtualinvoke $r10.<ucar.nc2.iosp.grid.GridTimeCoord: java.lang.String getName()>();

        $r9[0] = $r11;

        virtualinvoke $r8.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%s ", $r9);

        $z2 = virtualinvoke r0.<ucar.nc2.iosp.grid.GridVariable: boolean getVertIsUsed()>();

        if $z2 == 0 goto label04;

        $r264 = newarray (java.lang.Object)[1];

        $r265 = virtualinvoke r0.<ucar.nc2.iosp.grid.GridVariable: java.lang.String getVertName()>();

        $r264[0] = $r265;

        virtualinvoke $r8.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%s ", $r264);

        r0.<ucar.nc2.iosp.grid.GridVariable: boolean hasVert> = 1;

     label04:
        $r12 = r0.<ucar.nc2.iosp.grid.GridVariable: ucar.nc2.iosp.grid.GridHorizCoordSys hcs>;

        $z3 = virtualinvoke $r12.<ucar.nc2.iosp.grid.GridHorizCoordSys: boolean isLatLon()>();

        if $z3 == 0 goto label05;

        $r263 = newarray (java.lang.Object)[0];

        virtualinvoke $r8.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("lat lon", $r263);

        goto label06;

     label05:
        $r13 = newarray (java.lang.Object)[0];

        virtualinvoke $r8.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("y x", $r13);

     label06:
        $r14 = virtualinvoke $r8.<java.util.Formatter: java.lang.String toString()>();

        virtualinvoke $r3.<ucar.nc2.Variable: void setDimensions(java.lang.String)>($r14);

        $r16 = r0.<ucar.nc2.iosp.grid.GridVariable: ucar.grid.GridTableLookup lookup>;

        $r15 = r0.<ucar.nc2.iosp.grid.GridVariable: ucar.grid.GridRecord firstRecord>;

        $r17 = interfaceinvoke $r16.<ucar.grid.GridTableLookup: ucar.grid.GridParameter getParameter(ucar.grid.GridRecord)>($r15);

        $r18 = virtualinvoke $r17.<ucar.grid.GridParameter: java.lang.String getUnit()>();

        r272 = $r18;

        if $r18 != null goto label07;

        r272 = "";

     label07:
        $r19 = new ucar.nc2.Attribute;

        specialinvoke $r19.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", r272);

        virtualinvoke $r3.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r19);

        $r20 = new ucar.nc2.Attribute;

        $r21 = specialinvoke r0.<ucar.nc2.iosp.grid.GridVariable: java.lang.String makeLongName()>();

        specialinvoke $r20.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", $r21);

        virtualinvoke $r3.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r20);

        $r22 = r0.<ucar.nc2.iosp.grid.GridVariable: ucar.grid.GridRecord firstRecord>;

        $z4 = $r22 instanceof ucar.grib.GribGridRecord;

        if $z4 == 0 goto label08;

        $r252 = r0.<ucar.nc2.iosp.grid.GridVariable: ucar.grid.GridRecord firstRecord>;

        r273 = (ucar.grib.GribGridRecord) $r252;

        $z21 = virtualinvoke r273.<ucar.grib.GribGridRecord: boolean isInterval()>();

        if $z21 == 0 goto label08;

        $i31 = virtualinvoke r273.<ucar.grib.GribGridRecord: int getStatisticalProcessType()>();

        $r253 = staticinvoke <ucar.nc2.constants.CF$CellMethods: ucar.nc2.constants.CF$CellMethods convertGribCodeTable4_10(int)>($i31);

        if $r253 == null goto label08;

        $r254 = new ucar.nc2.Attribute;

        $r255 = new java.lang.StringBuilder;

        specialinvoke $r255.<java.lang.StringBuilder: void <init>()>();

        $r256 = r0.<ucar.nc2.iosp.grid.GridVariable: ucar.nc2.iosp.grid.GridTimeCoord tcs>;

        $r257 = virtualinvoke $r256.<ucar.nc2.iosp.grid.GridTimeCoord: java.lang.String getName()>();

        $r258 = virtualinvoke $r255.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r257);

        $r259 = virtualinvoke $r258.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r260 = virtualinvoke $r253.<ucar.nc2.constants.CF$CellMethods: java.lang.String toString()>();

        $r261 = virtualinvoke $r259.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r260);

        $r262 = virtualinvoke $r261.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r254.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("cell_methods", $r262);

        virtualinvoke $r3.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r254);

     label08:
        $r274 = new ucar.nc2.Attribute;

        $r275 = new java.lang.Float;

        $r276 = r0.<ucar.nc2.iosp.grid.GridVariable: ucar.grid.GridTableLookup lookup>;

        $f0 = interfaceinvoke $r276.<ucar.grid.GridTableLookup: float getFirstMissingValue()>();

        specialinvoke $r275.<java.lang.Float: void <init>(float)>($f0);

        specialinvoke $r274.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("missing_value", $r275);

        virtualinvoke $r3.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r274);

        $r277 = r0.<ucar.nc2.iosp.grid.GridVariable: ucar.nc2.iosp.grid.GridHorizCoordSys hcs>;

        $z22 = virtualinvoke $r277.<ucar.nc2.iosp.grid.GridHorizCoordSys: boolean isLatLon()>();

        if $z22 != 0 goto label10;

        $z20 = <ucar.nc2.iosp.grib.GribGridServiceProvider: boolean addLatLon>;

        if $z20 == 0 goto label09;

        $r251 = new ucar.nc2.Attribute;

        specialinvoke $r251.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("coordinates", "lat lon");

        virtualinvoke $r3.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r251);

     label09:
        $r248 = new ucar.nc2.Attribute;

        $r249 = r0.<ucar.nc2.iosp.grid.GridVariable: ucar.nc2.iosp.grid.GridHorizCoordSys hcs>;

        $r250 = virtualinvoke $r249.<ucar.nc2.iosp.grid.GridHorizCoordSys: java.lang.String getGridName()>();

        specialinvoke $r248.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("grid_mapping", $r250);

        virtualinvoke $r3.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r248);

     label10:
        $r278 = r0.<ucar.nc2.iosp.grid.GridVariable: ucar.nc2.iosp.grid.GridHorizCoordSys hcs>;

        $r279 = virtualinvoke $r278.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord getGds()>();

        $i33 = virtualinvoke $r279.<ucar.grid.GridDefRecord: int getInt(java.lang.String)>("VectorComponentFlag");

        if $i33 != 0 goto label11;

        $r247 = <ucar.grib.grib2.Grib2Tables$VectorComponentFlag: ucar.grib.grib2.Grib2Tables$VectorComponentFlag easterlyNortherlyRelative>;

        r280 = virtualinvoke $r247.<ucar.grib.grib2.Grib2Tables$VectorComponentFlag: java.lang.String toString()>();

        goto label12;

     label11:
        $r23 = <ucar.grib.grib2.Grib2Tables$VectorComponentFlag: ucar.grib.grib2.Grib2Tables$VectorComponentFlag gridRelative>;

        r280 = virtualinvoke $r23.<ucar.grib.grib2.Grib2Tables$VectorComponentFlag: java.lang.String toString()>();

     label12:
        $r24 = r0.<ucar.nc2.iosp.grid.GridVariable: ucar.grid.GridTableLookup lookup>;

        $z5 = $r24 instanceof ucar.grib.grib2.Grib2GridTableLookup;

        if $z5 == 0 goto label17;

        $r203 = r0.<ucar.nc2.iosp.grid.GridVariable: ucar.grid.GridTableLookup lookup>;

        r281 = (ucar.grib.grib2.Grib2GridTableLookup) $r203;

        $r204 = r0.<ucar.nc2.iosp.grid.GridVariable: ucar.grid.GridRecord firstRecord>;

        r282 = (ucar.grib.GribGridRecord) $r204;

        $r205 = virtualinvoke r282.<ucar.grib.GribGridRecord: ucar.grib.GribPds getPds()>();

        r283 = (ucar.grib.grib2.Grib2Pds) $r205;

        $r206 = r0.<ucar.nc2.iosp.grid.GridVariable: ucar.grid.GridRecord firstRecord>;

        $r207 = virtualinvoke r281.<ucar.grib.grib2.Grib2GridTableLookup: int[] getParameterId(ucar.grid.GridRecord)>($r206);

        $r208 = new ucar.nc2.Attribute;

        $r210 = r0.<ucar.nc2.iosp.grid.GridVariable: ucar.grid.GridTableLookup lookup>;

        $r209 = r0.<ucar.nc2.iosp.grid.GridVariable: ucar.grid.GridRecord firstRecord>;

        $r211 = interfaceinvoke $r210.<ucar.grid.GridTableLookup: java.lang.String getDisciplineName(ucar.grid.GridRecord)>($r209);

        specialinvoke $r208.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("GRIB_param_discipline", $r211);

        virtualinvoke $r3.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r208);

        $r212 = new ucar.nc2.Attribute;

        $r214 = r0.<ucar.nc2.iosp.grid.GridVariable: ucar.grid.GridTableLookup lookup>;

        $r213 = r0.<ucar.nc2.iosp.grid.GridVariable: ucar.grid.GridRecord firstRecord>;

        $r215 = interfaceinvoke $r214.<ucar.grid.GridTableLookup: java.lang.String getCategoryName(ucar.grid.GridRecord)>($r213);

        specialinvoke $r212.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("GRIB_param_category", $r215);

        virtualinvoke $r3.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r212);

        $r216 = new ucar.nc2.Attribute;

        $r217 = virtualinvoke $r17.<ucar.grid.GridParameter: java.lang.String getName()>();

        specialinvoke $r216.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("GRIB_param_name", $r217);

        virtualinvoke $r3.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r216);

        $r218 = new ucar.nc2.Attribute;

        $r219 = r0.<ucar.nc2.iosp.grid.GridVariable: ucar.grid.GridRecord firstRecord>;

        $r220 = virtualinvoke r281.<ucar.grib.grib2.Grib2GridTableLookup: java.lang.String getGenProcessTypeName(ucar.grid.GridRecord)>($r219);

        specialinvoke $r218.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("GRIB_generating_process_type", $r220);

        virtualinvoke $r3.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r218);

        $r221 = new ucar.nc2.Attribute;

        $r223 = <java.lang.Integer: java.lang.Class TYPE>;

        $r222 = newarray (int)[1];

        $i25 = lengthof $r207;

        $r222[0] = $i25;

        $r224 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(java.lang.Class,int[],java.lang.Object)>($r223, $r222, $r207);

        specialinvoke $r221.<ucar.nc2.Attribute: void <init>(java.lang.String,ucar.ma2.Array)>("GRIB_param_id", $r224);

        virtualinvoke $r3.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r221);

        $r225 = new ucar.nc2.Attribute;

        $i26 = virtualinvoke r283.<ucar.grib.grib2.Grib2Pds: int getProductDefinitionTemplate()>();

        $r226 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i26);

        specialinvoke $r225.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("GRIB_product_definition_template", $r226);

        virtualinvoke $r3.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r225);

        $r227 = new ucar.nc2.Attribute;

        $i27 = virtualinvoke r283.<ucar.grib.grib2.Grib2Pds: int getProductDefinitionTemplate()>();

        $r228 = staticinvoke <ucar.grib.grib2.Grib2Tables: java.lang.String codeTable4_0(int)>($i27);

        specialinvoke $r227.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("GRIB_product_definition_template_desc", $r228);

        virtualinvoke $r3.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r227);

        $r229 = new ucar.nc2.Attribute;

        $r230 = new java.lang.Integer;

        $i28 = virtualinvoke r283.<ucar.grib.grib2.Grib2Pds: int getLevelType1()>();

        specialinvoke $r230.<java.lang.Integer: void <init>(int)>($i28);

        specialinvoke $r229.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("GRIB_level_type", $r230);

        virtualinvoke $r3.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r229);

        $r231 = new ucar.nc2.Attribute;

        $r233 = r0.<ucar.nc2.iosp.grid.GridVariable: ucar.grid.GridTableLookup lookup>;

        $r232 = r0.<ucar.nc2.iosp.grid.GridVariable: ucar.grid.GridRecord firstRecord>;

        $r234 = interfaceinvoke $r233.<ucar.grid.GridTableLookup: java.lang.String getLevelName(ucar.grid.GridRecord)>($r232);

        specialinvoke $r231.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("GRIB_level_type_name", $r234);

        virtualinvoke $r3.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r231);

        $z16 = virtualinvoke r283.<ucar.grib.grib2.Grib2Pds: boolean isInterval()>();

        if $z16 == 0 goto label13;

        $r245 = new ucar.nc2.Attribute;

        $r246 = virtualinvoke r282.<ucar.grib.GribGridRecord: java.lang.String getStatisticalProcessTypeName()>();

        specialinvoke $r245.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("GRIB_interval_stat_type", $r246);

        virtualinvoke $r3.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r245);

     label13:
        $z17 = virtualinvoke r283.<ucar.grib.grib2.Grib2Pds: boolean isEnsembleDerived()>();

        if $z17 == 0 goto label14;

        r284 = (ucar.grib.grib2.Grib2Pds$PdsEnsembleDerived) r283;

        $r243 = new ucar.nc2.Attribute;

        $r244 = new java.lang.Integer;

        $i30 = interfaceinvoke r284.<ucar.grib.grib2.Grib2Pds$PdsEnsembleDerived: int getDerivedForecastType()>();

        specialinvoke $r244.<java.lang.Integer: void <init>(int)>($i30);

        specialinvoke $r243.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("GRIB_ensemble_derived_type", $r244);

        virtualinvoke $r3.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r243);

     label14:
        $z18 = virtualinvoke r283.<ucar.grib.grib2.Grib2Pds: boolean isEnsemble()>();

        if $z18 == 0 goto label15;

        $r242 = new ucar.nc2.Attribute;

        specialinvoke $r242.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("GRIB_ensemble", "true");

        virtualinvoke $r3.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r242);

     label15:
        $z19 = virtualinvoke r283.<ucar.grib.grib2.Grib2Pds: boolean isProbability()>();

        if $z19 == 0 goto label16;

        r285 = (ucar.grib.grib2.Grib2Pds$PdsProbability) r283;

        $r236 = new ucar.nc2.Attribute;

        $r237 = new java.lang.Integer;

        $i29 = interfaceinvoke r285.<ucar.grib.grib2.Grib2Pds$PdsProbability: int getProbabilityType()>();

        specialinvoke $r237.<java.lang.Integer: void <init>(int)>($i29);

        specialinvoke $r236.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("GRIB_probability_type", $r237);

        virtualinvoke $r3.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r236);

        $r238 = new ucar.nc2.Attribute;

        $r239 = new java.lang.Double;

        $d4 = interfaceinvoke r285.<ucar.grib.grib2.Grib2Pds$PdsProbability: double getProbabilityLowerLimit()>();

        specialinvoke $r239.<java.lang.Double: void <init>(double)>($d4);

        specialinvoke $r238.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("GRIB_probability_lower_limit", $r239);

        virtualinvoke $r3.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r238);

        $r240 = new ucar.nc2.Attribute;

        $r241 = new java.lang.Double;

        $d5 = interfaceinvoke r285.<ucar.grib.grib2.Grib2Pds$PdsProbability: double getProbabilityUpperLimit()>();

        specialinvoke $r241.<java.lang.Double: void <init>(double)>($d5);

        specialinvoke $r240.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("GRIB_probability_upper_limit", $r241);

        virtualinvoke $r3.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r240);

     label16:
        $r235 = new ucar.nc2.Attribute;

        specialinvoke $r235.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("GRIB_VectorComponentFlag", r280);

        virtualinvoke $r3.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r235);

        goto label19;

     label17:
        $r25 = r0.<ucar.nc2.iosp.grid.GridVariable: ucar.grid.GridTableLookup lookup>;

        $z6 = $r25 instanceof ucar.grib.grib1.Grib1GridTableLookup;

        if $z6 == 0 goto label18;

        $r179 = r0.<ucar.nc2.iosp.grid.GridVariable: ucar.grid.GridTableLookup lookup>;

        r286 = (ucar.grib.grib1.Grib1GridTableLookup) $r179;

        $r180 = r0.<ucar.nc2.iosp.grid.GridVariable: ucar.grid.GridRecord firstRecord>;

        $r181 = virtualinvoke r286.<ucar.grib.grib1.Grib1GridTableLookup: int[] getParameterId(ucar.grid.GridRecord)>($r180);

        $r182 = new ucar.nc2.Attribute;

        $r183 = virtualinvoke $r17.<ucar.grid.GridParameter: java.lang.String getDescription()>();

        specialinvoke $r182.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("GRIB_param_name", $r183);

        virtualinvoke $r3.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r182);

        $r184 = new ucar.nc2.Attribute;

        $r185 = virtualinvoke $r17.<ucar.grid.GridParameter: java.lang.String getName()>();

        specialinvoke $r184.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("GRIB_param_short_name", $r185);

        virtualinvoke $r3.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r184);

        $r186 = new ucar.nc2.Attribute;

        $r187 = new java.lang.Integer;

        $i20 = $r181[1];

        specialinvoke $r187.<java.lang.Integer: void <init>(int)>($i20);

        specialinvoke $r186.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("GRIB_center_id", $r187);

        virtualinvoke $r3.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r186);

        $r188 = new ucar.nc2.Attribute;

        $r189 = new java.lang.Integer;

        $i21 = $r181[2];

        specialinvoke $r189.<java.lang.Integer: void <init>(int)>($i21);

        specialinvoke $r188.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("GRIB_table_id", $r189);

        virtualinvoke $r3.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r188);

        $r190 = new ucar.nc2.Attribute;

        $r191 = new java.lang.Integer;

        $i22 = $r181[3];

        specialinvoke $r191.<java.lang.Integer: void <init>(int)>($i22);

        specialinvoke $r190.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("GRIB_param_number", $r191);

        virtualinvoke $r3.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r190);

        $r192 = new ucar.nc2.Attribute;

        $r194 = <java.lang.Integer: java.lang.Class TYPE>;

        $r193 = newarray (int)[1];

        $i23 = lengthof $r181;

        $r193[0] = $i23;

        $r195 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(java.lang.Class,int[],java.lang.Object)>($r194, $r193, $r181);

        specialinvoke $r192.<ucar.nc2.Attribute: void <init>(java.lang.String,ucar.ma2.Array)>("GRIB_param_id", $r195);

        virtualinvoke $r3.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r192);

        $r196 = new ucar.nc2.Attribute;

        $r197 = r0.<ucar.nc2.iosp.grid.GridVariable: ucar.grid.GridRecord firstRecord>;

        $r198 = virtualinvoke r286.<ucar.grib.grib1.Grib1GridTableLookup: java.lang.String getProductDefinitionName(ucar.grid.GridRecord)>($r197);

        specialinvoke $r196.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("GRIB_product_definition_type", $r198);

        virtualinvoke $r3.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r196);

        $r199 = new ucar.nc2.Attribute;

        $r200 = new java.lang.Integer;

        $r201 = r0.<ucar.nc2.iosp.grid.GridVariable: ucar.grid.GridRecord firstRecord>;

        $i24 = interfaceinvoke $r201.<ucar.grid.GridRecord: int getLevelType1()>();

        specialinvoke $r200.<java.lang.Integer: void <init>(int)>($i24);

        specialinvoke $r199.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("GRIB_level_type", $r200);

        virtualinvoke $r3.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r199);

        $r202 = new ucar.nc2.Attribute;

        specialinvoke $r202.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("GRIB_VectorComponentFlag", r280);

        virtualinvoke $r3.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r202);

        goto label19;

     label18:
        $r26 = new ucar.nc2.Attribute;

        specialinvoke $r26.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("VectorComponentFlag", r280);

        virtualinvoke $r3.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r26);

     label19:
        virtualinvoke $r3.<ucar.nc2.Variable: void setSPobject(java.lang.Object)>(r0);

        $i34 = r0.<ucar.nc2.iosp.grid.GridVariable: int ntimes>;

        $i35 = r0.<ucar.nc2.iosp.grid.GridVariable: int nlevels>;

        $i36 = $i34 * $i35;

        i37 = $i36;

        $z23 = virtualinvoke r0.<ucar.nc2.iosp.grid.GridVariable: boolean hasEnsemble()>();

        if $z23 == 0 goto label20;

        $r178 = r0.<ucar.nc2.iosp.grid.GridVariable: ucar.nc2.iosp.grid.GridEnsembleCoord ecs>;

        $i19 = virtualinvoke $r178.<ucar.nc2.iosp.grid.GridEnsembleCoord: int getNEnsembles()>();

        i37 = $i36 * $i19;

     label20:
        $r27 = newarray (ucar.grid.GridRecord)[i37];

        r0.<ucar.nc2.iosp.grid.GridVariable: ucar.grid.GridRecord[] recordTracker> = $r27;

        $r28 = <ucar.nc2.iosp.grid.GridVariable: org.slf4j.Logger log>;

        $z7 = interfaceinvoke $r28.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z7 == 0 goto label21;

        $r173 = <ucar.nc2.iosp.grid.GridVariable: org.slf4j.Logger log>;

        $r172 = new java.lang.StringBuilder;

        specialinvoke $r172.<java.lang.StringBuilder: void <init>()>();

        $r174 = virtualinvoke $r172.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Record Assignment for Variable ");

        $r175 = virtualinvoke r0.<ucar.nc2.iosp.grid.GridVariable: java.lang.String getName()>();

        $r176 = virtualinvoke $r174.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r175);

        $r177 = virtualinvoke $r176.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r173.<org.slf4j.Logger: void debug(java.lang.String)>($r177);

     label21:
        z24 = 0;

        $r29 = r0.<ucar.nc2.iosp.grid.GridVariable: java.util.List records>;

        $r30 = interfaceinvoke $r29.<java.util.List: java.util.Iterator iterator()>();

     label22:
        $z25 = interfaceinvoke $r30.<java.util.Iterator: boolean hasNext()>();

        if $z25 == 0 goto label36;

        $r32 = interfaceinvoke $r30.<java.util.Iterator: java.lang.Object next()>();

        r287 = (ucar.grid.GridRecord) $r32;

        $i2 = virtualinvoke r0.<ucar.nc2.iosp.grid.GridVariable: int getVertIndex(ucar.grid.GridRecord)>(r287);

        i38 = $i2;

        $z8 = virtualinvoke r0.<ucar.nc2.iosp.grid.GridVariable: boolean getVertIsUsed()>();

        if $z8 != 0 goto label23;

        if $i2 <= 0 goto label23;

        $r168 = <ucar.nc2.iosp.grid.GridVariable: org.slf4j.Logger log>;

        $r167 = new java.lang.StringBuilder;

        specialinvoke $r167.<java.lang.StringBuilder: void <init>()>();

        $r169 = virtualinvoke $r167.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("inconsistent level encoding=");

        $r170 = virtualinvoke $r169.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r171 = virtualinvoke $r170.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r168.<org.slf4j.Logger: void warn(java.lang.String)>($r171);

        i38 = 0;

     label23:
        $r288 = r0.<ucar.nc2.iosp.grid.GridVariable: ucar.nc2.iosp.grid.GridTimeCoord tcs>;

        $i39 = virtualinvoke $r288.<ucar.nc2.iosp.grid.GridTimeCoord: int findIndex(ucar.grid.GridRecord)>(r287);

        if i38 >= 0 goto label24;

        $r142 = <ucar.nc2.iosp.grid.GridVariable: org.slf4j.Logger log>;

        $r141 = new java.lang.StringBuilder;

        specialinvoke $r141.<java.lang.StringBuilder: void <init>()>();

        $r143 = virtualinvoke $r141.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LEVEL NOT FOUND record; level=");

        $r144 = virtualinvoke $r143.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i38);

        $r145 = virtualinvoke $r144.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" time= ");

        $r146 = virtualinvoke $r145.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i39);

        $r147 = virtualinvoke $r146.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        $r148 = virtualinvoke r0.<ucar.nc2.iosp.grid.GridVariable: java.lang.String getName()>();

        $r149 = virtualinvoke $r147.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r148);

        $r150 = virtualinvoke $r149.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" file=");

        $r151 = virtualinvoke r4.<ucar.nc2.NetcdfFile: java.lang.String getLocation()>();

        $r152 = virtualinvoke $r150.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r151);

        $r153 = virtualinvoke $r152.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r154 = virtualinvoke $r153.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   ");

        $r155 = virtualinvoke r0.<ucar.nc2.iosp.grid.GridVariable: java.lang.String getVertLevelName()>();

        $r156 = virtualinvoke $r154.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r155);

        $r157 = virtualinvoke $r156.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (type=");

        $i17 = interfaceinvoke r287.<ucar.grid.GridRecord: int getLevelType1()>();

        $r158 = virtualinvoke $r157.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i17);

        $r159 = virtualinvoke $r158.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $i18 = interfaceinvoke r287.<ucar.grid.GridRecord: int getLevelType2()>();

        $r160 = virtualinvoke $r159.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i18);

        $r161 = virtualinvoke $r160.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")  value=");

        $d2 = interfaceinvoke r287.<ucar.grid.GridRecord: double getLevel1()>();

        $r162 = virtualinvoke $r161.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d2);

        $r163 = virtualinvoke $r162.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $d3 = interfaceinvoke r287.<ucar.grid.GridRecord: double getLevel2()>();

        $r164 = virtualinvoke $r163.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d3);

        $r165 = virtualinvoke $r164.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r166 = virtualinvoke $r165.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r142.<org.slf4j.Logger: void warn(java.lang.String)>($r166);

        virtualinvoke r0.<ucar.nc2.iosp.grid.GridVariable: int getVertIndex(ucar.grid.GridRecord)>(r287);

        goto label22;

     label24:
        if $i39 >= 0 goto label25;

        $r123 = <ucar.nc2.iosp.grid.GridVariable: org.slf4j.Logger log>;

        $r122 = new java.lang.StringBuilder;

        specialinvoke $r122.<java.lang.StringBuilder: void <init>()>();

        $r124 = virtualinvoke $r122.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TIME NOT FOUND record; level=");

        $r125 = virtualinvoke $r124.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i38);

        $r126 = virtualinvoke $r125.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" time= ");

        $r127 = virtualinvoke $r126.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i39);

        $r128 = virtualinvoke $r127.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        $r129 = virtualinvoke r0.<ucar.nc2.iosp.grid.GridVariable: java.lang.String getName()>();

        $r130 = virtualinvoke $r128.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r129);

        $r131 = virtualinvoke $r130.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" file=");

        $r132 = virtualinvoke r4.<ucar.nc2.NetcdfFile: java.lang.String getLocation()>();

        $r133 = virtualinvoke $r131.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r132);

        $r134 = virtualinvoke $r133.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r135 = virtualinvoke $r134.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" validTime= ");

        $r136 = interfaceinvoke r287.<ucar.grid.GridRecord: java.util.Date getValidTime()>();

        $r137 = virtualinvoke $r135.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r136);

        $r138 = virtualinvoke $r137.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r139 = virtualinvoke $r138.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r123.<org.slf4j.Logger: void warn(java.lang.String)>($r139);

        $r140 = r0.<ucar.nc2.iosp.grid.GridVariable: ucar.nc2.iosp.grid.GridTimeCoord tcs>;

        virtualinvoke $r140.<ucar.nc2.iosp.grid.GridTimeCoord: int findIndex(ucar.grid.GridRecord)>(r287);

        goto label22;

     label25:
        $z9 = virtualinvoke r0.<ucar.nc2.iosp.grid.GridVariable: boolean hasEnsemble()>();

        if $z9 == 0 goto label28;

        r289 = (ucar.grib.GribGridRecord) r287;

        $r98 = r0.<ucar.nc2.iosp.grid.GridVariable: ucar.nc2.iosp.grid.GridEnsembleCoord ecs>;

        $i7 = virtualinvoke $r98.<ucar.nc2.iosp.grid.GridEnsembleCoord: int getIndex(ucar.grib.GribGridRecord)>(r289);

        if $i7 >= 0 goto label26;

        $r101 = virtualinvoke r289.<ucar.grib.GribGridRecord: ucar.grib.GribPds getPds()>();

        $i15 = virtualinvoke $r101.<ucar.grib.GribPds: int getPerturbationNumber()>();

        $r102 = virtualinvoke r289.<ucar.grib.GribGridRecord: ucar.grib.GribPds getPds()>();

        $i16 = virtualinvoke $r102.<ucar.grib.GribPds: int getPerturbationType()>();

        $r104 = <ucar.nc2.iosp.grid.GridVariable: org.slf4j.Logger log>;

        $r103 = new java.lang.StringBuilder;

        specialinvoke $r103.<java.lang.StringBuilder: void <init>()>();

        $r105 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ENS NOT FOUND record; level=");

        $r106 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i38);

        $r107 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" time= ");

        $r108 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i39);

        $r109 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        $r110 = virtualinvoke r0.<ucar.nc2.iosp.grid.GridVariable: java.lang.String getName()>();

        $r111 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r110);

        $r112 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" file=");

        $r113 = virtualinvoke r4.<ucar.nc2.NetcdfFile: java.lang.String getLocation()>();

        $r114 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r113);

        $r115 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n ensNumber= ");

        $r116 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i15);

        $r117 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ensType= ");

        $r118 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i16);

        $r119 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r120 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r104.<org.slf4j.Logger: void warn(java.lang.String)>($r120);

        $r121 = r0.<ucar.nc2.iosp.grid.GridVariable: ucar.nc2.iosp.grid.GridEnsembleCoord ecs>;

        virtualinvoke $r121.<ucar.nc2.iosp.grid.GridEnsembleCoord: int getIndex(ucar.grib.GribGridRecord)>(r289);

        goto label22;

     label26:
        $i9 = r0.<ucar.nc2.iosp.grid.GridVariable: int ntimes>;

        $i8 = r0.<ucar.nc2.iosp.grid.GridVariable: int nlevels>;

        $i10 = $i9 * $i8;

        $i13 = $i7 * $i10;

        $i11 = r0.<ucar.nc2.iosp.grid.GridVariable: int nlevels>;

        $i12 = $i39 * $i11;

        $i14 = $i13 + $i12;

        i40 = $i14 + i38;

        if i40 >= 0 goto label27;

        $r99 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r99.<java.io.PrintStream: void println(java.lang.String)>("HEY");

        $r100 = r0.<ucar.nc2.iosp.grid.GridVariable: ucar.nc2.iosp.grid.GridEnsembleCoord ecs>;

        virtualinvoke $r100.<ucar.nc2.iosp.grid.GridEnsembleCoord: int getIndex(ucar.grib.GribGridRecord)>(r289);

     label27:
        goto label29;

     label28:
        $i3 = r0.<ucar.nc2.iosp.grid.GridVariable: int nlevels>;

        $i4 = $i39 * $i3;

        i40 = $i4 + i38;

     label29:
        z26 = 0;

        $z10 = r287 instanceof ucar.grib.GribGridRecord;

        if $z10 == 0 goto label31;

        r290 = (ucar.grib.GribGridRecord) r287;

        $r65 = virtualinvoke r290.<ucar.grib.GribGridRecord: java.lang.Object getBelongs()>();

        if $r65 == null goto label30;

        $r87 = <ucar.nc2.iosp.grid.GridVariable: org.slf4j.Logger log>;

        $r86 = new java.lang.StringBuilder;

        specialinvoke $r86.<java.lang.StringBuilder: void <init>()>();

        $r88 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GribGridRecord ");

        $r89 = r0.<ucar.nc2.iosp.grid.GridVariable: ucar.grid.GridTableLookup lookup>;

        $r90 = virtualinvoke r290.<ucar.grib.GribGridRecord: java.lang.String cdmVariableName(ucar.grid.GridTableLookup,boolean,boolean)>($r89, 1, 1);

        $r91 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r90);

        $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" recno = ");

        $r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i40);

        $r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" already belongs to = ");

        $r95 = virtualinvoke r290.<ucar.grib.GribGridRecord: java.lang.Object getBelongs()>();

        $r96 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r95);

        $r97 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r87.<org.slf4j.Logger: void warn(java.lang.String)>($r97);

     label30:
        $r66 = new ucar.nc2.iosp.grid.GridVariable$Belongs;

        specialinvoke $r66.<ucar.nc2.iosp.grid.GridVariable$Belongs: void <init>(ucar.nc2.iosp.grid.GridVariable,int,ucar.nc2.iosp.grid.GridVariable,ucar.nc2.iosp.grid.GridVariable$1)>(r0, i40, r0, null);

        virtualinvoke r290.<ucar.grib.GribGridRecord: void setBelongs(java.lang.Object)>($r66);

        $r67 = r0.<ucar.nc2.iosp.grid.GridVariable: ucar.grid.GridRecord[] recordTracker>;

        $r68 = $r67[i40];

        if $r68 == null goto label31;

        $r69 = r0.<ucar.nc2.iosp.grid.GridVariable: ucar.grid.GridRecord[] recordTracker>;

        $r70 = $r69[i40];

        r291 = (ucar.grib.GribGridRecord) $r70;

        $z14 = <ucar.nc2.iosp.grid.GridVariable: boolean compareData>;

        if $z14 == 0 goto label31;

        $z15 = specialinvoke r0.<ucar.nc2.iosp.grid.GridVariable: boolean compareData(ucar.grib.GribGridRecord,ucar.grib.GribGridRecord,ucar.unidata.io.RandomAccessFile)>(r291, r290, r71);

        if $z15 != 0 goto label31;

        $r73 = <ucar.nc2.iosp.grid.GridVariable: org.slf4j.Logger log>;

        $r72 = new java.lang.StringBuilder;

        specialinvoke $r72.<java.lang.StringBuilder: void <init>()>();

        $r74 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GridVariable ");

        $r75 = r0.<ucar.nc2.iosp.grid.GridVariable: java.lang.String vname>;

        $r76 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r75);

        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" recno = ");

        $r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i40);

        $r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" already has in slot = ");

        $r80 = virtualinvoke r291.<ucar.grib.GribGridRecord: java.lang.String toString()>();

        $r81 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r80);

        $r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with different data for ");

        $r83 = r0.<ucar.nc2.iosp.grid.GridVariable: java.lang.String filename>;

        $r84 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r83);

        $r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r73.<org.slf4j.Logger: void warn(java.lang.String)>($r85);

        z26 = 1;

     label31:
        $r292 = r0.<ucar.nc2.iosp.grid.GridVariable: ucar.grid.GridRecord[] recordTracker>;

        $r293 = $r292[i40];

        if $r293 != null goto label32;

        $r48 = r0.<ucar.nc2.iosp.grid.GridVariable: ucar.grid.GridRecord[] recordTracker>;

        $r48[i40] = r287;

        $r49 = <ucar.nc2.iosp.grid.GridVariable: org.slf4j.Logger log>;

        $z13 = interfaceinvoke $r49.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z13 == 0 goto label35;

        $r51 = <ucar.nc2.iosp.grid.GridVariable: org.slf4j.Logger log>;

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $r52 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r53 = r0.<ucar.nc2.iosp.grid.GridVariable: ucar.nc2.iosp.grid.GridVertCoord vc>;

        $r54 = virtualinvoke $r53.<ucar.nc2.iosp.grid.GridVertCoord: java.lang.String getVariableName()>();

        $r55 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54);

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (type=");

        $i5 = interfaceinvoke r287.<ucar.grid.GridRecord: int getLevelType1()>();

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $i6 = interfaceinvoke r287.<ucar.grid.GridRecord: int getLevelType2()>();

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")  value=");

        $d0 = interfaceinvoke r287.<ucar.grid.GridRecord: double getLevel1()>();

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $d1 = interfaceinvoke r287.<ucar.grid.GridRecord: double getLevel2()>();

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d1);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r51.<org.slf4j.Logger: void debug(java.lang.String)>($r64);

        goto label35;

     label32:
        $z11 = r287 instanceof ucar.grib.GribGridRecord;

        if $z11 == 0 goto label33;

        if z26 != 0 goto label33;

        $z12 = <ucar.nc2.iosp.grid.GridVariable: boolean warnOk>;

        if $z12 == 0 goto label33;

        if z24 != 0 goto label33;

        r294 = (ucar.grib.GribGridRecord) r287;

        $r34 = r0.<ucar.nc2.iosp.grid.GridVariable: ucar.grid.GridRecord[] recordTracker>;

        $r35 = $r34[i40];

        r295 = (ucar.grib.GribGridRecord) $r35;

        $r37 = <ucar.nc2.iosp.grid.GridVariable: org.slf4j.Logger log>;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate record for ");

        $r39 = r0.<ucar.nc2.iosp.grid.GridVariable: java.lang.String filename>;

        $r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n ");

        $r42 = virtualinvoke r294.<ucar.grib.GribGridRecord: java.lang.String toString()>();

        $r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n ");

        $r45 = virtualinvoke r295.<ucar.grib.GribGridRecord: java.lang.String toString()>();

        $r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r37.<org.slf4j.Logger: void warn(java.lang.String)>($r47);

     label33:
        $z27 = <ucar.nc2.iosp.grid.GridVariable: boolean sendAll>;

        if $z27 != 0 goto label34;

        z24 = 1;

     label34:
        $r33 = r0.<ucar.nc2.iosp.grid.GridVariable: ucar.grid.GridRecord[] recordTracker>;

        $r33[i40] = r287;

     label35:
        goto label22;

     label36:
        $r31 = r0.<ucar.nc2.iosp.grid.GridVariable: java.util.List records>;

        interfaceinvoke $r31.<java.util.List: void clear()>();

        return $r3;
    }

    private boolean compareData(ucar.grib.GribGridRecord, ucar.grib.GribGridRecord, ucar.unidata.io.RandomAccessFile)
    {
        ucar.unidata.io.RandomAccessFile r0;
        byte $b10;
        boolean $z0, $z1, $z2, $z3;
        ucar.nc2.iosp.grid.GridVariable r7;
        float $f0, $f1, $f2, $f3;
        ucar.grib.grib2.Grib2Data $r4;
        ucar.grib.GribGridRecord r1, r3;
        long $l1, $l2, $l4, $l5, $l11, $l12, $l13, $l14, $l15, $l16;
        float[] r8, r9;
        int $i0, $i3, $i6, $i7, $i8, $i9, i17;
        double $d0, $d1;
        org.slf4j.Logger $r6;
        ucar.grib.grib1.Grib1Data $r2;
        java.io.IOException $r5;

        r7 := @this: ucar.nc2.iosp.grid.GridVariable;

        r1 := @parameter0: ucar.grib.GribGridRecord;

        r3 := @parameter1: ucar.grib.GribGridRecord;

        r0 := @parameter2: ucar.unidata.io.RandomAccessFile;

        if r0 != null goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke r1.<ucar.grib.GribGridRecord: int getEdition()>();

        if $i0 != 2 goto label2;

        $r4 = new ucar.grib.grib2.Grib2Data;

        specialinvoke $r4.<ucar.grib.grib2.Grib2Data: void <init>(ucar.unidata.io.RandomAccessFile)>(r0);

        $l11 = virtualinvoke r1.<ucar.grib.GribGridRecord: long getGdsOffset()>();

        $l12 = virtualinvoke r1.<ucar.grib.GribGridRecord: long getPdsOffset()>();

        $l13 = virtualinvoke r1.<ucar.grib.GribGridRecord: long getReferenceTimeInMsecs()>();

        r8 = virtualinvoke $r4.<ucar.grib.grib2.Grib2Data: float[] getData(long,long,long)>($l11, $l12, $l13);

        $l14 = virtualinvoke r3.<ucar.grib.GribGridRecord: long getGdsOffset()>();

        $l15 = virtualinvoke r3.<ucar.grib.GribGridRecord: long getPdsOffset()>();

        $l16 = virtualinvoke r3.<ucar.grib.GribGridRecord: long getReferenceTimeInMsecs()>();

        r9 = virtualinvoke $r4.<ucar.grib.grib2.Grib2Data: float[] getData(long,long,long)>($l14, $l15, $l16);

        goto label3;

     label2:
        $r2 = new ucar.grib.grib1.Grib1Data;

        specialinvoke $r2.<ucar.grib.grib1.Grib1Data: void <init>(ucar.unidata.io.RandomAccessFile)>(r0);

        $l1 = virtualinvoke r1.<ucar.grib.GribGridRecord: long getGdsOffset()>();

        $l2 = virtualinvoke r1.<ucar.grib.GribGridRecord: long getPdsOffset()>();

        $i3 = virtualinvoke r1.<ucar.grib.GribGridRecord: int getDecimalScale()>();

        $z0 = virtualinvoke r1.<ucar.grib.GribGridRecord: boolean isBmsExists()>();

        r8 = virtualinvoke $r2.<ucar.grib.grib1.Grib1Data: float[] getData(long,long,int,boolean)>($l1, $l2, $i3, $z0);

        $l4 = virtualinvoke r3.<ucar.grib.GribGridRecord: long getGdsOffset()>();

        $l5 = virtualinvoke r3.<ucar.grib.GribGridRecord: long getPdsOffset()>();

        $i6 = virtualinvoke r3.<ucar.grib.GribGridRecord: int getDecimalScale()>();

        $z1 = virtualinvoke r3.<ucar.grib.GribGridRecord: boolean isBmsExists()>();

        r9 = virtualinvoke $r2.<ucar.grib.grib1.Grib1Data: float[] getData(long,long,int,boolean)>($l4, $l5, $i6, $z1);

     label3:
        goto label5;

     label4:
        $r5 := @caughtexception;

        $r6 = <ucar.nc2.iosp.grid.GridVariable: org.slf4j.Logger log>;

        interfaceinvoke $r6.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Failed to read data", $r5);

        return 0;

     label5:
        $i8 = lengthof r8;

        $i7 = lengthof r9;

        if $i8 == $i7 goto label6;

        return 0;

     label6:
        i17 = 0;

     label7:
        $i9 = lengthof r8;

        if i17 >= $i9 goto label9;

        $f1 = r8[i17];

        $f0 = r9[i17];

        $b10 = $f1 cmpl $f0;

        if $b10 == 0 goto label8;

        $f2 = r8[i17];

        $d0 = (double) $f2;

        $z2 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        if $z2 != 0 goto label8;

        $f3 = r9[i17];

        $d1 = (double) $f3;

        $z3 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        if $z3 != 0 goto label8;

        return 0;

     label8:
        i17 = i17 + 1;

        goto label7;

     label9:
        return 1;

        catch java.io.IOException from label1 to label3 with label4;
    }

    public void showRecord(int, java.util.Formatter)
    {
        java.lang.Integer $r2, $r5, $r10, $r11, $r14, $r17, $r19, $r20, $r21, $r24, $r27;
        java.util.Formatter r0;
        boolean $z0;
        ucar.nc2.iosp.grid.GridVertCoord $r15, $r25;
        ucar.grid.GridRecord[] $r4, $r6, $r7;
        ucar.nc2.iosp.grid.GridVariable r3;
        java.lang.Object[] $r1, $r9, $r18;
        java.lang.Double $r16, $r26;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, $i17, i18, $i19, i20, i21, i22, i23;
        java.lang.String $r13, $r23;
        ucar.grid.GridRecord r8;
        double $d0, $d1;
        ucar.nc2.iosp.grid.GridTimeCoord $r12, $r22;

        r3 := @this: ucar.nc2.iosp.grid.GridVariable;

        i0 := @parameter0: int;

        r0 := @parameter1: java.util.Formatter;

        if i0 < 0 goto label1;

        $r6 = r3.<ucar.nc2.iosp.grid.GridVariable: ucar.grid.GridRecord[] recordTracker>;

        $i3 = lengthof $r6;

        $i4 = $i3 - 1;

        if i0 <= $i4 goto label2;

     label1:
        $r1 = newarray (java.lang.Object)[2];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r1[0] = $r2;

        $r4 = r3.<ucar.nc2.iosp.grid.GridVariable: ucar.grid.GridRecord[] recordTracker>;

        $i1 = lengthof $r4;

        $i2 = $i1 - 1;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r1[1] = $r5;

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%d out of range [0,%d]%n", $r1);

        return;

     label2:
        $r7 = r3.<ucar.nc2.iosp.grid.GridVariable: ucar.grid.GridRecord[] recordTracker>;

        r8 = $r7[i0];

        $z0 = virtualinvoke r3.<ucar.nc2.iosp.grid.GridVariable: boolean hasEnsemble()>();

        if $z0 == 0 goto label3;

        $i9 = r3.<ucar.nc2.iosp.grid.GridVariable: int nlevels>;

        $i8 = r3.<ucar.nc2.iosp.grid.GridVariable: int ntimes>;

        $i10 = $i9 * $i8;

        i20 = i0 / $i10;

        $i12 = r3.<ucar.nc2.iosp.grid.GridVariable: int nlevels>;

        $i11 = r3.<ucar.nc2.iosp.grid.GridVariable: int ntimes>;

        $i13 = $i12 * $i11;

        $i14 = i20 * $i13;

        i21 = i0 - $i14;

        $i15 = r3.<ucar.nc2.iosp.grid.GridVariable: int nlevels>;

        i16 = i21 / $i15;

        $i17 = r3.<ucar.nc2.iosp.grid.GridVariable: int nlevels>;

        i18 = i21 % $i17;

        $r18 = newarray (java.lang.Object)[7];

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r18[0] = $r19;

        $i19 = virtualinvoke r8.<java.lang.Object: int hashCode()>();

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i19);

        $r18[1] = $r20;

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i20);

        $r18[2] = $r21;

        $r22 = r3.<ucar.nc2.iosp.grid.GridVariable: ucar.nc2.iosp.grid.GridTimeCoord tcs>;

        $r23 = virtualinvoke $r22.<ucar.nc2.iosp.grid.GridTimeCoord: java.lang.String getCoord(int)>(i16);

        $r18[3] = $r23;

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i16);

        $r18[4] = $r24;

        $r25 = r3.<ucar.nc2.iosp.grid.GridVariable: ucar.nc2.iosp.grid.GridVertCoord vc>;

        $d1 = virtualinvoke $r25.<ucar.nc2.iosp.grid.GridVertCoord: double getCoord(int)>(i18);

        $r26 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $r18[5] = $r26;

        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i18);

        $r18[6] = $r27;

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("recnum=%d (record hash=%d) ens=%d time=%s(%d) level=%f(%d)%n", $r18);

        goto label4;

     label3:
        $i5 = r3.<ucar.nc2.iosp.grid.GridVariable: int nlevels>;

        i22 = i0 / $i5;

        $i6 = r3.<ucar.nc2.iosp.grid.GridVariable: int nlevels>;

        i23 = i0 % $i6;

        $r9 = newarray (java.lang.Object)[6];

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r9[0] = $r10;

        $i7 = virtualinvoke r8.<java.lang.Object: int hashCode()>();

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        $r9[1] = $r11;

        $r12 = r3.<ucar.nc2.iosp.grid.GridVariable: ucar.nc2.iosp.grid.GridTimeCoord tcs>;

        $r13 = virtualinvoke $r12.<ucar.nc2.iosp.grid.GridTimeCoord: java.lang.String getCoord(int)>(i22);

        $r9[2] = $r13;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i22);

        $r9[3] = $r14;

        $r15 = r3.<ucar.nc2.iosp.grid.GridVariable: ucar.nc2.iosp.grid.GridVertCoord vc>;

        $d0 = virtualinvoke $r15.<ucar.nc2.iosp.grid.GridVertCoord: double getCoord(int)>(i23);

        $r16 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r9[4] = $r16;

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i23);

        $r9[5] = $r17;

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("recnum=%d (record hash=%d) time=%s(%d) level=%f(%d)%n", $r9);

     label4:
        return;
    }

    public void showMissing(java.util.Formatter)
    {
        java.lang.Object[] $r1, $r4, $r8, $r9, $r12;
        java.lang.Integer $r5, $r6;
        java.util.Formatter r0;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, i7, i8;
        java.lang.String $r3, $r7, $r13;
        ucar.grid.GridRecord $r11;
        boolean z0, $z2, $z3;
        ucar.grid.GridRecord[] $r10;
        ucar.nc2.iosp.grid.GridVariable r2;

        r2 := @this: ucar.nc2.iosp.grid.GridVariable;

        r0 := @parameter0: java.util.Formatter;

        i5 = 0;

        i6 = 0;

        $r1 = newarray (java.lang.Object)[1];

        $r3 = r2.<ucar.nc2.iosp.grid.GridVariable: java.lang.String name>;

        $r1[0] = $r3;

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("  %s%n", $r1);

        i7 = 0;

     label1:
        $i0 = r2.<ucar.nc2.iosp.grid.GridVariable: int nlevels>;

        if i7 >= $i0 goto label9;

        $r8 = newarray (java.lang.Object)[0];

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("   ", $r8);

        i8 = 0;

     label2:
        $i1 = r2.<ucar.nc2.iosp.grid.GridVariable: int ntimes>;

        if i8 >= $i1 goto label8;

        $r10 = r2.<ucar.nc2.iosp.grid.GridVariable: ucar.grid.GridRecord[] recordTracker>;

        $i2 = r2.<ucar.nc2.iosp.grid.GridVariable: int nlevels>;

        $i3 = i8 * $i2;

        $i4 = $i3 + i7;

        $r11 = $r10[$i4];

        if $r11 != null goto label3;

        $z3 = 1;

        $z2 = 1;

        goto label4;

     label3:
        $z3 = 0;

        $z2 = 0;

     label4:
        z0 = $z2;

        $r12 = newarray (java.lang.Object)[1];

        if $z3 == 0 goto label5;

        $r13 = "-";

        goto label6;

     label5:
        $r13 = "X";

     label6:
        $r12[0] = $r13;

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%s", $r12);

        if z0 == 0 goto label7;

        i5 = i5 + 1;

     label7:
        i6 = i6 + 1;

        i8 = i8 + 1;

        goto label2;

     label8:
        $r9 = newarray (java.lang.Object)[0];

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%n", $r9);

        i7 = i7 + 1;

        goto label1;

     label9:
        $r4 = newarray (java.lang.Object)[3];

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i5);

        $r4[0] = $r5;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6);

        $r4[1] = $r6;

        $r7 = r2.<ucar.nc2.iosp.grid.GridVariable: java.lang.String name>;

        $r4[2] = $r7;

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("  MISSING= %d / %d for %s%n", $r4);

        return;
    }

    public int showMissingSummary(java.util.Formatter)
    {
        java.lang.Object[] $r3;
        ucar.grid.GridRecord[] $r1, $r7;
        java.lang.Integer $r4, $r5;
        java.util.Formatter r2;
        ucar.nc2.iosp.grid.GridVariable r0;
        int i0, i1, i2;
        java.lang.String $r6;
        ucar.grid.GridRecord $r8;

        r0 := @this: ucar.nc2.iosp.grid.GridVariable;

        r2 := @parameter0: java.util.Formatter;

        i1 = 0;

        $r1 = r0.<ucar.nc2.iosp.grid.GridVariable: ucar.grid.GridRecord[] recordTracker>;

        i0 = lengthof $r1;

        i2 = 0;

     label1:
        if i2 >= i0 goto label3;

        $r7 = r0.<ucar.nc2.iosp.grid.GridVariable: ucar.grid.GridRecord[] recordTracker>;

        $r8 = $r7[i2];

        if $r8 != null goto label2;

        i1 = i1 + 1;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $r3 = newarray (java.lang.Object)[3];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r3[0] = $r4;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3[1] = $r5;

        $r6 = r0.<ucar.nc2.iosp.grid.GridVariable: java.lang.String name>;

        $r3[2] = $r6;

        virtualinvoke r2.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("  MISSING= %d / %d for %s%n", $r3);

        return i1;
    }

    public ucar.grid.GridRecord findRecord(int, int, int)
    {
        int i0, $i1, i2, $i3, $i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        boolean $z0;
        ucar.grid.GridRecord $r2, $r4;
        ucar.grid.GridRecord[] $r1, $r3;
        ucar.nc2.iosp.grid.GridVariable r0;

        r0 := @this: ucar.nc2.iosp.grid.GridVariable;

        i5 := @parameter0: int;

        i0 := @parameter1: int;

        i2 := @parameter2: int;

        $z0 = virtualinvoke r0.<ucar.nc2.iosp.grid.GridVariable: boolean hasEnsemble()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<ucar.nc2.iosp.grid.GridVariable: ucar.grid.GridRecord[] recordTracker>;

        $i7 = r0.<ucar.nc2.iosp.grid.GridVariable: int ntimes>;

        $i6 = r0.<ucar.nc2.iosp.grid.GridVariable: int nlevels>;

        $i8 = $i7 * $i6;

        $i11 = i5 * $i8;

        $i9 = r0.<ucar.nc2.iosp.grid.GridVariable: int nlevels>;

        $i10 = i0 * $i9;

        $i12 = $i11 + $i10;

        $i13 = $i12 + i2;

        $r4 = $r3[$i13];

        return $r4;

     label1:
        $r1 = r0.<ucar.nc2.iosp.grid.GridVariable: ucar.grid.GridRecord[] recordTracker>;

        $i1 = r0.<ucar.nc2.iosp.grid.GridVariable: int nlevels>;

        $i3 = i0 * $i1;

        $i4 = $i3 + i2;

        $r2 = $r1[$i4];

        return $r2;
    }

    public boolean equals(java.lang.Object)
    {
        ucar.nc2.iosp.grid.GridVariable r0;
        int $i0, $i1;
        java.lang.Object r1;
        boolean $z0, $z1;

        r0 := @this: ucar.nc2.iosp.grid.GridVariable;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof ucar.nc2.iosp.grid.GridVariable;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $i0 = virtualinvoke r0.<ucar.nc2.iosp.grid.GridVariable: int hashCode()>();

        $i1 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

        if $i0 != $i1 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;
    }

    public java.lang.String getName()
    {
        ucar.nc2.iosp.grid.GridVariable r0;
        java.lang.String $r1;

        r0 := @this: ucar.nc2.iosp.grid.GridVariable;

        $r1 = r0.<ucar.nc2.iosp.grid.GridVariable: java.lang.String name>;

        return $r1;
    }

    public int hashCode()
    {
        ucar.nc2.iosp.grid.GridHorizCoordSys $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, i11;
        java.lang.String $r1, $r4;
        ucar.grid.GridRecord $r2;
        ucar.nc2.iosp.grid.GridVariable r0;

        r0 := @this: ucar.nc2.iosp.grid.GridVariable;

        $i0 = r0.<ucar.nc2.iosp.grid.GridVariable: int hashCode>;

        if $i0 != 0 goto label1;

        $r1 = r0.<ucar.nc2.iosp.grid.GridVariable: java.lang.String name>;

        $i2 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        i9 = 629 + $i2;

        $i3 = 37 * i9;

        $r2 = r0.<ucar.nc2.iosp.grid.GridVariable: ucar.grid.GridRecord firstRecord>;

        $i4 = interfaceinvoke $r2.<ucar.grid.GridRecord: int getLevelType1()>();

        $i5 = $i3 + $i4;

        i10 = i9 + $i5;

        $i6 = 37 * i10;

        $r3 = r0.<ucar.nc2.iosp.grid.GridVariable: ucar.nc2.iosp.grid.GridHorizCoordSys hcs>;

        $r4 = virtualinvoke $r3.<ucar.nc2.iosp.grid.GridHorizCoordSys: java.lang.String getID()>();

        $i7 = virtualinvoke $r4.<java.lang.String: int hashCode()>();

        $i8 = $i6 + $i7;

        i11 = i10 + $i8;

        r0.<ucar.nc2.iosp.grid.GridVariable: int hashCode> = i11;

     label1:
        $i1 = r0.<ucar.nc2.iosp.grid.GridVariable: int hashCode>;

        return $i1;
    }

    public java.lang.String toString()
    {
        ucar.nc2.iosp.grid.GridVariable r0;
        java.lang.String $r1, $r2;

        r0 := @this: ucar.nc2.iosp.grid.GridVariable;

        $r1 = r0.<ucar.nc2.iosp.grid.GridVariable: java.lang.String vname>;

        if $r1 != null goto label1;

        $r2 = r0.<ucar.nc2.iosp.grid.GridVariable: java.lang.String name>;

        goto label2;

     label1:
        $r2 = r0.<ucar.nc2.iosp.grid.GridVariable: java.lang.String vname>;

     label2:
        return $r2;
    }

    public java.lang.String dump()
    {
        java.lang.Object[] $r2, $r12, $r16, $r17;
        java.lang.Double $r14;
        java.util.Date $r15, $r18;
        java.lang.Integer $r6, $r13;
        java.util.Formatter $r1;
        int $i0, $i1;
        java.lang.String $r4, $r9, $r19;
        boolean $z0;
        ucar.grid.GridRecord r11;
        double $d0;
        java.util.Iterator $r8;
        ucar.nc2.iosp.grid.GridVariable r3;
        java.util.List $r5, $r7;
        java.lang.Object $r10;
        ucar.nc2.units.DateFormatter $r0;

        r3 := @this: ucar.nc2.iosp.grid.GridVariable;

        $r0 = new ucar.nc2.units.DateFormatter;

        specialinvoke $r0.<ucar.nc2.units.DateFormatter: void <init>()>();

        $r1 = new java.util.Formatter;

        specialinvoke $r1.<java.util.Formatter: void <init>()>();

        $r2 = newarray (java.lang.Object)[2];

        $r4 = r3.<ucar.nc2.iosp.grid.GridVariable: java.lang.String name>;

        $r2[0] = $r4;

        $r5 = r3.<ucar.nc2.iosp.grid.GridVariable: java.util.List records>;

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2[1] = $r6;

        virtualinvoke $r1.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%s %d %n", $r2);

        $r7 = r3.<ucar.nc2.iosp.grid.GridVariable: java.util.List records>;

        $r8 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r10 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r11 = (ucar.grid.GridRecord) $r10;

        $r12 = newarray (java.lang.Object)[2];

        $i1 = interfaceinvoke r11.<ucar.grid.GridRecord: int getLevelType1()>();

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r12[0] = $r13;

        $d0 = interfaceinvoke r11.<ucar.grid.GridRecord: double getLevel1()>();

        $r14 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r12[1] = $r14;

        virtualinvoke $r1.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>(" level = %d %f", $r12);

        $r15 = interfaceinvoke r11.<ucar.grid.GridRecord: java.util.Date getValidTime()>();

        if null == $r15 goto label2;

        $r17 = newarray (java.lang.Object)[1];

        $r18 = interfaceinvoke r11.<ucar.grid.GridRecord: java.util.Date getValidTime()>();

        $r19 = virtualinvoke $r0.<ucar.nc2.units.DateFormatter: java.lang.String toDateTimeString(java.util.Date)>($r18);

        $r17[0] = $r19;

        virtualinvoke $r1.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>(" time = %s", $r17);

     label2:
        $r16 = newarray (java.lang.Object)[0];

        virtualinvoke $r1.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%n", $r16);

        goto label1;

     label3:
        $r9 = virtualinvoke $r1.<java.util.Formatter: java.lang.String toString()>();

        return $r9;
    }

    private java.lang.String makeLongName()
    {
        java.util.Formatter $r0;
        boolean $z0, $z1;
        ucar.nc2.iosp.grid.GridVariable r1;
        ucar.grib.GribGridRecord r20;
        ucar.grid.GridTableLookup $r3, $r24;
        java.lang.Object[] $r5, $r9, $r13, $r14, $r16, $r19;
        ucar.grib.GribPds $r17;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r6, $r8, $r11, $r12, $r15, $r18, $r22, $r25;
        ucar.grid.GridRecord $r2, $r7, $r10, $r23;
        ucar.grid.GridParameter $r4;
        ucar.grib.grib2.Grib2Pds r21;

        r1 := @this: ucar.nc2.iosp.grid.GridVariable;

        $r0 = new java.util.Formatter;

        specialinvoke $r0.<java.util.Formatter: void <init>()>();

        $r3 = r1.<ucar.nc2.iosp.grid.GridVariable: ucar.grid.GridTableLookup lookup>;

        $r2 = r1.<ucar.nc2.iosp.grid.GridVariable: ucar.grid.GridRecord firstRecord>;

        $r4 = interfaceinvoke $r3.<ucar.grid.GridTableLookup: ucar.grid.GridParameter getParameter(ucar.grid.GridRecord)>($r2);

        $r5 = newarray (java.lang.Object)[1];

        $r6 = virtualinvoke $r4.<ucar.grid.GridParameter: java.lang.String getDescription()>();

        $r5[0] = $r6;

        virtualinvoke $r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%s", $r5);

        $r7 = r1.<ucar.nc2.iosp.grid.GridVariable: ucar.grid.GridRecord firstRecord>;

        $z0 = $r7 instanceof ucar.grib.GribGridRecord;

        if $z0 == 0 goto label4;

        $r10 = r1.<ucar.nc2.iosp.grid.GridVariable: ucar.grid.GridRecord firstRecord>;

        r20 = (ucar.grib.GribGridRecord) $r10;

        $i0 = virtualinvoke r20.<ucar.grib.GribGridRecord: int getEdition()>();

        if $i0 != 2 goto label1;

        $r17 = virtualinvoke r20.<ucar.grib.GribGridRecord: ucar.grib.GribPds getPds()>();

        r21 = (ucar.grib.grib2.Grib2Pds) $r17;

        $r18 = virtualinvoke r21.<ucar.grib.grib2.Grib2Pds: java.lang.String getUseGenProcessType()>();

        if $r18 == null goto label1;

        $r19 = newarray (java.lang.Object)[1];

        $r19[0] = $r18;

        virtualinvoke $r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("_%s", $r19);

     label1:
        $r22 = virtualinvoke r20.<ucar.grib.GribGridRecord: java.lang.String makeSuffix()>();

        if $r22 == null goto label2;

        $i2 = virtualinvoke $r22.<java.lang.String: int length()>();

        if $i2 == 0 goto label2;

        $r16 = newarray (java.lang.Object)[1];

        $r16[0] = $r22;

        virtualinvoke $r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%s", $r16);

     label2:
        $z1 = virtualinvoke r20.<ucar.grib.GribGridRecord: boolean isInterval()>();

        if $z1 == 0 goto label4;

        $r11 = specialinvoke r1.<ucar.nc2.iosp.grid.GridVariable: java.lang.String makeIntervalName()>();

        $i1 = virtualinvoke $r11.<java.lang.String: int length()>();

        if $i1 == 0 goto label4;

        $r12 = virtualinvoke r20.<ucar.grib.GribGridRecord: java.lang.String getStatisticalProcessTypeNameShort()>();

        if $r12 == null goto label3;

        $r14 = newarray (java.lang.Object)[2];

        $r15 = virtualinvoke r20.<ucar.grib.GribGridRecord: java.lang.String getStatisticalProcessTypeName()>();

        $r14[0] = $r15;

        $r14[1] = $r11;

        virtualinvoke $r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>(" (%s for %s)", $r14);

        goto label4;

     label3:
        $r13 = newarray (java.lang.Object)[1];

        $r13[0] = $r11;

        virtualinvoke $r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>(" (%s)", $r13);

     label4:
        $r23 = r1.<ucar.nc2.iosp.grid.GridVariable: ucar.grid.GridRecord firstRecord>;

        $r24 = r1.<ucar.nc2.iosp.grid.GridVariable: ucar.grid.GridTableLookup lookup>;

        $r25 = staticinvoke <ucar.nc2.iosp.grid.GridIndexToNC: java.lang.String makeLevelName(ucar.grid.GridRecord,ucar.grid.GridTableLookup)>($r23, $r24);

        $i3 = virtualinvoke $r25.<java.lang.String: int length()>();

        if $i3 == 0 goto label5;

        $r9 = newarray (java.lang.Object)[1];

        $r9[0] = $r25;

        virtualinvoke $r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>(" @ %s", $r9);

     label5:
        $r8 = virtualinvoke $r0.<java.util.Formatter: java.lang.String toString()>();

        return $r8;
    }

    private java.lang.String makeIntervalName()
    {
        ucar.nc2.iosp.grid.GridTimeCoord $r1, $r3, $r6;
        ucar.nc2.iosp.grid.GridVariable r0;
        int $i0, $i1;
        java.lang.StringBuilder $r2, $r4, $r5, $r8, $r9;
        java.lang.String $r7, $r10;

        r0 := @this: ucar.nc2.iosp.grid.GridVariable;

        $r1 = r0.<ucar.nc2.iosp.grid.GridVariable: ucar.nc2.iosp.grid.GridTimeCoord tcs>;

        $i0 = virtualinvoke $r1.<ucar.nc2.iosp.grid.GridTimeCoord: int getConstantInterval()>();

        if $i0 >= 0 goto label1;

        return " Mixed Intervals";

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<ucar.nc2.iosp.grid.GridVariable: ucar.nc2.iosp.grid.GridTimeCoord tcs>;

        $i1 = virtualinvoke $r3.<ucar.nc2.iosp.grid.GridTimeCoord: int getConstantInterval()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r6 = r0.<ucar.nc2.iosp.grid.GridVariable: ucar.nc2.iosp.grid.GridTimeCoord tcs>;

        $r7 = virtualinvoke $r6.<ucar.nc2.iosp.grid.GridTimeCoord: java.lang.String getTimeUnit()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Intervals");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    static java.lang.String access$100(ucar.nc2.iosp.grid.GridVariable)
    {
        ucar.nc2.iosp.grid.GridVariable r0;
        java.lang.String $r1;

        r0 := @parameter0: ucar.nc2.iosp.grid.GridVariable;

        $r1 = r0.<ucar.nc2.iosp.grid.GridVariable: java.lang.String vname>;

        return $r1;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r1;
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lucar/nc2/iosp/grid/GridVariable;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <ucar.nc2.iosp.grid.GridVariable: boolean $assertionsDisabled> = $z1;

        $r1 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lucar/nc2/iosp/grid/GridVariable;");

        <ucar.nc2.iosp.grid.GridVariable: org.slf4j.Logger log> = $r1;

        <ucar.nc2.iosp.grid.GridVariable: boolean warnOk> = 1;

        <ucar.nc2.iosp.grid.GridVariable: boolean compareData> = 0;

        <ucar.nc2.iosp.grid.GridVariable: boolean sendAll> = 0;

        return;
    }
}
