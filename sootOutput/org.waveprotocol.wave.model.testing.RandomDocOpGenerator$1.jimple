class org.waveprotocol.wave.model.testing.RandomDocOpGenerator$1 extends java.lang.Object
{
    static final int[] $SwitchMap$org$waveprotocol$wave$model$document$operation$automaton$DocOpAutomaton$ValidationResult;
    static final int[] $SwitchMap$org$waveprotocol$wave$model$testing$RandomDocOpGenerator$Generator$Stage;

    static void <clinit>()
    {
        java.lang.NoSuchFieldError $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27;
        int[] $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult[] $r10;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$Stage[] $r0;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$Stage $r2, $r4, $r6, $r8;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult $r12, $r14, $r16, $r18;

        $r0 = staticinvoke <org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$Stage: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$Stage[] values()>();

        $i0 = lengthof $r0;

        $r1 = newarray (int)[$i0];

        <org.waveprotocol.wave.model.testing.RandomDocOpGenerator$1: int[] $SwitchMap$org$waveprotocol$wave$model$testing$RandomDocOpGenerator$Generator$Stage> = $r1;

     label01:
        $r3 = <org.waveprotocol.wave.model.testing.RandomDocOpGenerator$1: int[] $SwitchMap$org$waveprotocol$wave$model$testing$RandomDocOpGenerator$Generator$Stage>;

        $r2 = <org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$Stage: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$Stage S1_UNRESTRICTED>;

        $i1 = virtualinvoke $r2.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$Stage: int ordinal()>();

        $r3[$i1] = 1;

     label02:
        goto label04;

     label03:
        $r27 := @caughtexception;

     label04:
        $r5 = <org.waveprotocol.wave.model.testing.RandomDocOpGenerator$1: int[] $SwitchMap$org$waveprotocol$wave$model$testing$RandomDocOpGenerator$Generator$Stage>;

        $r4 = <org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$Stage: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$Stage S2_CLOSE_STRUCTURE>;

        $i2 = virtualinvoke $r4.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$Stage: int ordinal()>();

        $r5[$i2] = 2;

     label05:
        goto label07;

     label06:
        $r26 := @caughtexception;

     label07:
        $r7 = <org.waveprotocol.wave.model.testing.RandomDocOpGenerator$1: int[] $SwitchMap$org$waveprotocol$wave$model$testing$RandomDocOpGenerator$Generator$Stage>;

        $r6 = <org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$Stage: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$Stage S3_CLOSE_ANNOTATIONS>;

        $i3 = virtualinvoke $r6.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$Stage: int ordinal()>();

        $r7[$i3] = 3;

     label08:
        goto label10;

     label09:
        $r25 := @caughtexception;

     label10:
        $r9 = <org.waveprotocol.wave.model.testing.RandomDocOpGenerator$1: int[] $SwitchMap$org$waveprotocol$wave$model$testing$RandomDocOpGenerator$Generator$Stage>;

        $r8 = <org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$Stage: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$Stage S4_SKIP_TO_END>;

        $i4 = virtualinvoke $r8.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$Stage: int ordinal()>();

        $r9[$i4] = 4;

     label11:
        goto label13;

     label12:
        $r24 := @caughtexception;

     label13:
        $r10 = staticinvoke <org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult[] values()>();

        $i5 = lengthof $r10;

        $r11 = newarray (int)[$i5];

        <org.waveprotocol.wave.model.testing.RandomDocOpGenerator$1: int[] $SwitchMap$org$waveprotocol$wave$model$document$operation$automaton$DocOpAutomaton$ValidationResult> = $r11;

     label14:
        $r13 = <org.waveprotocol.wave.model.testing.RandomDocOpGenerator$1: int[] $SwitchMap$org$waveprotocol$wave$model$document$operation$automaton$DocOpAutomaton$ValidationResult>;

        $r12 = <org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult INVALID_DOCUMENT>;

        $i6 = virtualinvoke $r12.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult: int ordinal()>();

        $r13[$i6] = 1;

     label15:
        goto label17;

     label16:
        $r23 := @caughtexception;

     label17:
        $r15 = <org.waveprotocol.wave.model.testing.RandomDocOpGenerator$1: int[] $SwitchMap$org$waveprotocol$wave$model$document$operation$automaton$DocOpAutomaton$ValidationResult>;

        $r14 = <org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult VALID>;

        $i7 = virtualinvoke $r14.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult: int ordinal()>();

        $r15[$i7] = 2;

     label18:
        goto label20;

     label19:
        $r22 := @caughtexception;

     label20:
        $r17 = <org.waveprotocol.wave.model.testing.RandomDocOpGenerator$1: int[] $SwitchMap$org$waveprotocol$wave$model$document$operation$automaton$DocOpAutomaton$ValidationResult>;

        $r16 = <org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult INVALID_SCHEMA>;

        $i8 = virtualinvoke $r16.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult: int ordinal()>();

        $r17[$i8] = 3;

     label21:
        goto label23;

     label22:
        $r21 := @caughtexception;

     label23:
        $r19 = <org.waveprotocol.wave.model.testing.RandomDocOpGenerator$1: int[] $SwitchMap$org$waveprotocol$wave$model$document$operation$automaton$DocOpAutomaton$ValidationResult>;

        $r18 = <org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult ILL_FORMED>;

        $i9 = virtualinvoke $r18.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult: int ordinal()>();

        $r19[$i9] = 4;

     label24:
        goto label26;

     label25:
        $r20 := @caughtexception;

     label26:
        return;

        catch java.lang.NoSuchFieldError from label01 to label02 with label03;
        catch java.lang.NoSuchFieldError from label04 to label05 with label06;
        catch java.lang.NoSuchFieldError from label07 to label08 with label09;
        catch java.lang.NoSuchFieldError from label10 to label11 with label12;
        catch java.lang.NoSuchFieldError from label14 to label15 with label16;
        catch java.lang.NoSuchFieldError from label17 to label18 with label19;
        catch java.lang.NoSuchFieldError from label20 to label21 with label22;
        catch java.lang.NoSuchFieldError from label23 to label24 with label25;
    }
}
