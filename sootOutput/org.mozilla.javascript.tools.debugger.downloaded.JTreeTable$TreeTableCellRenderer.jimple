public class org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer extends javax.swing.JTree implements javax.swing.table.TableCellRenderer
{
    protected int visibleRow;
    private final org.mozilla.javascript.tools.debugger.downloaded.JTreeTable this$0;

    public void <init>(org.mozilla.javascript.tools.debugger.downloaded.JTreeTable, javax.swing.tree.TreeModel)
    {
        org.mozilla.javascript.tools.debugger.downloaded.JTreeTable r2;
        org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer r0;
        javax.swing.tree.TreeModel r1;

        r0 := @this: org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer;

        r2 := @parameter0: org.mozilla.javascript.tools.debugger.downloaded.JTreeTable;

        r1 := @parameter1: javax.swing.tree.TreeModel;

        specialinvoke r0.<javax.swing.JTree: void <init>(javax.swing.tree.TreeModel)>(r1);

        r0.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer: org.mozilla.javascript.tools.debugger.downloaded.JTreeTable this$0> = r2;

        return;
    }

    public void updateUI()
    {
        java.awt.Color $r3, $r4;
        javax.swing.tree.TreeCellRenderer $r1;
        org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer r0;
        boolean $z0;
        javax.swing.tree.DefaultTreeCellRenderer r2;

        r0 := @this: org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer;

        specialinvoke r0.<javax.swing.JTree: void updateUI()>();

        $r1 = virtualinvoke r0.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer: javax.swing.tree.TreeCellRenderer getCellRenderer()>();

        $z0 = $r1 instanceof javax.swing.tree.DefaultTreeCellRenderer;

        if $z0 == 0 goto label1;

        r2 = (javax.swing.tree.DefaultTreeCellRenderer) $r1;

        $r3 = staticinvoke <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>("Table.selectionForeground");

        virtualinvoke r2.<javax.swing.tree.DefaultTreeCellRenderer: void setTextSelectionColor(java.awt.Color)>($r3);

        $r4 = staticinvoke <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>("Table.selectionBackground");

        virtualinvoke r2.<javax.swing.tree.DefaultTreeCellRenderer: void setBackgroundSelectionColor(java.awt.Color)>($r4);

     label1:
        return;
    }

    public void setRowHeight(int)
    {
        org.mozilla.javascript.tools.debugger.downloaded.JTreeTable $r1, $r2, $r3;
        int i0, $i1, $i2;
        org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer r0;

        r0 := @this: org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer;

        i0 := @parameter0: int;

        if i0 <= 0 goto label1;

        specialinvoke r0.<javax.swing.JTree: void setRowHeight(int)>(i0);

        $r1 = r0.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer: org.mozilla.javascript.tools.debugger.downloaded.JTreeTable this$0>;

        if $r1 == null goto label1;

        $r2 = r0.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer: org.mozilla.javascript.tools.debugger.downloaded.JTreeTable this$0>;

        $i1 = virtualinvoke $r2.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable: int getRowHeight()>();

        if $i1 == i0 goto label1;

        $r3 = r0.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer: org.mozilla.javascript.tools.debugger.downloaded.JTreeTable this$0>;

        $i2 = virtualinvoke r0.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer: int getRowHeight()>();

        virtualinvoke $r3.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable: void setRowHeight(int)>($i2);

     label1:
        return;
    }

    public void setBounds(int, int, int, int)
    {
        org.mozilla.javascript.tools.debugger.downloaded.JTreeTable $r1;
        int i0, i1, $i2, i3, i4;
        org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer r0;

        r0 := @this: org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer;

        i0 := @parameter0: int;

        i3 := @parameter1: int;

        i1 := @parameter2: int;

        i4 := @parameter3: int;

        $r1 = r0.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer: org.mozilla.javascript.tools.debugger.downloaded.JTreeTable this$0>;

        $i2 = virtualinvoke $r1.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable: int getHeight()>();

        specialinvoke r0.<javax.swing.JTree: void setBounds(int,int,int,int)>(i0, 0, i1, $i2);

        return;
    }

    public void paint(java.awt.Graphics)
    {
        java.awt.Graphics r0;
        int $i0, $i1, $i2, $i3;
        org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer r1;

        r1 := @this: org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer;

        r0 := @parameter0: java.awt.Graphics;

        $i0 = r1.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer: int visibleRow>;

        $i1 = neg $i0;

        $i2 = virtualinvoke r1.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer: int getRowHeight()>();

        $i3 = $i1 * $i2;

        virtualinvoke r0.<java.awt.Graphics: void translate(int,int)>(0, $i3);

        specialinvoke r1.<javax.swing.JTree: void paint(java.awt.Graphics)>(r0);

        return;
    }

    public java.awt.Component getTableCellRendererComponent(javax.swing.JTable, java.lang.Object, boolean, boolean, int, int)
    {
        java.awt.Color $r2, $r3;
        org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer r0;
        int i0, i1;
        javax.swing.JTable r1;
        java.lang.Object r4;
        boolean z0, z1;

        r0 := @this: org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer;

        r1 := @parameter0: javax.swing.JTable;

        r4 := @parameter1: java.lang.Object;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        i0 := @parameter4: int;

        i1 := @parameter5: int;

        if z0 == 0 goto label1;

        $r3 = virtualinvoke r1.<javax.swing.JTable: java.awt.Color getSelectionBackground()>();

        virtualinvoke r0.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer: void setBackground(java.awt.Color)>($r3);

        goto label2;

     label1:
        $r2 = virtualinvoke r1.<javax.swing.JTable: java.awt.Color getBackground()>();

        virtualinvoke r0.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer: void setBackground(java.awt.Color)>($r2);

     label2:
        r0.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer: int visibleRow> = i0;

        return r0;
    }
}
