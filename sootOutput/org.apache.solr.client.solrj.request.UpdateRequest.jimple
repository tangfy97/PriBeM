public class org.apache.solr.client.solrj.request.UpdateRequest extends org.apache.solr.client.solrj.request.AbstractUpdateRequest
{
    private java.util.List documents;
    private java.util.Iterator docIterator;
    private java.util.List deleteById;
    private java.util.List deleteQuery;

    public void <init>()
    {
        org.apache.solr.client.solrj.SolrRequest$METHOD $r1;
        org.apache.solr.client.solrj.request.UpdateRequest r0;

        r0 := @this: org.apache.solr.client.solrj.request.UpdateRequest;

        $r1 = <org.apache.solr.client.solrj.SolrRequest$METHOD: org.apache.solr.client.solrj.SolrRequest$METHOD POST>;

        specialinvoke r0.<org.apache.solr.client.solrj.request.AbstractUpdateRequest: void <init>(org.apache.solr.client.solrj.SolrRequest$METHOD,java.lang.String)>($r1, "/update");

        r0.<org.apache.solr.client.solrj.request.UpdateRequest: java.util.List documents> = null;

        r0.<org.apache.solr.client.solrj.request.UpdateRequest: java.util.Iterator docIterator> = null;

        r0.<org.apache.solr.client.solrj.request.UpdateRequest: java.util.List deleteById> = null;

        r0.<org.apache.solr.client.solrj.request.UpdateRequest: java.util.List deleteQuery> = null;

        return;
    }

    public void <init>(java.lang.String)
    {
        java.lang.String r1;
        org.apache.solr.client.solrj.SolrRequest$METHOD $r2;
        org.apache.solr.client.solrj.request.UpdateRequest r0;

        r0 := @this: org.apache.solr.client.solrj.request.UpdateRequest;

        r1 := @parameter0: java.lang.String;

        $r2 = <org.apache.solr.client.solrj.SolrRequest$METHOD: org.apache.solr.client.solrj.SolrRequest$METHOD POST>;

        specialinvoke r0.<org.apache.solr.client.solrj.request.AbstractUpdateRequest: void <init>(org.apache.solr.client.solrj.SolrRequest$METHOD,java.lang.String)>($r2, r1);

        r0.<org.apache.solr.client.solrj.request.UpdateRequest: java.util.List documents> = null;

        r0.<org.apache.solr.client.solrj.request.UpdateRequest: java.util.Iterator docIterator> = null;

        r0.<org.apache.solr.client.solrj.request.UpdateRequest: java.util.List deleteById> = null;

        r0.<org.apache.solr.client.solrj.request.UpdateRequest: java.util.List deleteQuery> = null;

        return;
    }

    public void clear()
    {
        java.util.List $r1, $r2, $r3, $r4, $r5, $r6;
        org.apache.solr.client.solrj.request.UpdateRequest r0;

        r0 := @this: org.apache.solr.client.solrj.request.UpdateRequest;

        $r1 = r0.<org.apache.solr.client.solrj.request.UpdateRequest: java.util.List documents>;

        if $r1 == null goto label1;

        $r6 = r0.<org.apache.solr.client.solrj.request.UpdateRequest: java.util.List documents>;

        interfaceinvoke $r6.<java.util.List: void clear()>();

     label1:
        $r2 = r0.<org.apache.solr.client.solrj.request.UpdateRequest: java.util.List deleteById>;

        if $r2 == null goto label2;

        $r5 = r0.<org.apache.solr.client.solrj.request.UpdateRequest: java.util.List deleteById>;

        interfaceinvoke $r5.<java.util.List: void clear()>();

     label2:
        $r3 = r0.<org.apache.solr.client.solrj.request.UpdateRequest: java.util.List deleteQuery>;

        if $r3 == null goto label3;

        $r4 = r0.<org.apache.solr.client.solrj.request.UpdateRequest: java.util.List deleteQuery>;

        interfaceinvoke $r4.<java.util.List: void clear()>();

     label3:
        return;
    }

    public org.apache.solr.client.solrj.request.UpdateRequest add(org.apache.solr.common.SolrInputDocument)
    {
        java.util.List $r1, $r3;
        org.apache.solr.client.solrj.request.UpdateRequest r0;
        org.apache.solr.common.SolrInputDocument r2;
        java.util.ArrayList $r4;

        r0 := @this: org.apache.solr.client.solrj.request.UpdateRequest;

        r2 := @parameter0: org.apache.solr.common.SolrInputDocument;

        $r1 = r0.<org.apache.solr.client.solrj.request.UpdateRequest: java.util.List documents>;

        if $r1 != null goto label1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>(2);

        r0.<org.apache.solr.client.solrj.request.UpdateRequest: java.util.List documents> = $r4;

     label1:
        $r3 = r0.<org.apache.solr.client.solrj.request.UpdateRequest: java.util.List documents>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r2);

        return r0;
    }

    public org.apache.solr.client.solrj.request.UpdateRequest add(java.util.Collection)
    {
        java.util.List $r1, $r3;
        org.apache.solr.client.solrj.request.UpdateRequest r0;
        java.util.Collection r2;
        int $i0, $i1;
        java.util.ArrayList $r4;

        r0 := @this: org.apache.solr.client.solrj.request.UpdateRequest;

        r2 := @parameter0: java.util.Collection;

        $r1 = r0.<org.apache.solr.client.solrj.request.UpdateRequest: java.util.List documents>;

        if $r1 != null goto label1;

        $r4 = new java.util.ArrayList;

        $i0 = interfaceinvoke r2.<java.util.Collection: int size()>();

        $i1 = $i0 + 1;

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>($i1);

        r0.<org.apache.solr.client.solrj.request.UpdateRequest: java.util.List documents> = $r4;

     label1:
        $r3 = r0.<org.apache.solr.client.solrj.request.UpdateRequest: java.util.List documents>;

        interfaceinvoke $r3.<java.util.List: boolean addAll(java.util.Collection)>(r2);

        return r0;
    }

    public org.apache.solr.client.solrj.request.UpdateRequest deleteById(java.lang.String)
    {
        java.util.List $r1, $r3;
        org.apache.solr.client.solrj.request.UpdateRequest r0;
        java.lang.String r2;
        java.util.ArrayList $r4;

        r0 := @this: org.apache.solr.client.solrj.request.UpdateRequest;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.solr.client.solrj.request.UpdateRequest: java.util.List deleteById>;

        if $r1 != null goto label1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.solr.client.solrj.request.UpdateRequest: java.util.List deleteById> = $r4;

     label1:
        $r3 = r0.<org.apache.solr.client.solrj.request.UpdateRequest: java.util.List deleteById>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r2);

        return r0;
    }

    public org.apache.solr.client.solrj.request.UpdateRequest deleteById(java.util.List)
    {
        java.util.List $r1, r2, $r3;
        org.apache.solr.client.solrj.request.UpdateRequest r0;
        java.util.ArrayList $r4;

        r0 := @this: org.apache.solr.client.solrj.request.UpdateRequest;

        r2 := @parameter0: java.util.List;

        $r1 = r0.<org.apache.solr.client.solrj.request.UpdateRequest: java.util.List deleteById>;

        if $r1 != null goto label1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>(java.util.Collection)>(r2);

        r0.<org.apache.solr.client.solrj.request.UpdateRequest: java.util.List deleteById> = $r4;

        goto label2;

     label1:
        $r3 = r0.<org.apache.solr.client.solrj.request.UpdateRequest: java.util.List deleteById>;

        interfaceinvoke $r3.<java.util.List: boolean addAll(java.util.Collection)>(r2);

     label2:
        return r0;
    }

    public org.apache.solr.client.solrj.request.UpdateRequest deleteByQuery(java.lang.String)
    {
        java.util.List $r1, $r3;
        org.apache.solr.client.solrj.request.UpdateRequest r0;
        java.lang.String r2;
        java.util.ArrayList $r4;

        r0 := @this: org.apache.solr.client.solrj.request.UpdateRequest;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.solr.client.solrj.request.UpdateRequest: java.util.List deleteQuery>;

        if $r1 != null goto label1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.solr.client.solrj.request.UpdateRequest: java.util.List deleteQuery> = $r4;

     label1:
        $r3 = r0.<org.apache.solr.client.solrj.request.UpdateRequest: java.util.List deleteQuery>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r2);

        return r0;
    }

    public void setDocIterator(java.util.Iterator)
    {
        java.util.Iterator r1;
        org.apache.solr.client.solrj.request.UpdateRequest r0;

        r0 := @this: org.apache.solr.client.solrj.request.UpdateRequest;

        r1 := @parameter0: java.util.Iterator;

        r0.<org.apache.solr.client.solrj.request.UpdateRequest: java.util.Iterator docIterator> = r1;

        return;
    }

    public java.util.Collection getContentStreams() throws java.io.IOException
    {
        java.lang.String $r1;
        org.apache.solr.client.solrj.request.UpdateRequest r0;
        java.util.Collection $r2;

        r0 := @this: org.apache.solr.client.solrj.request.UpdateRequest;

        $r1 = virtualinvoke r0.<org.apache.solr.client.solrj.request.UpdateRequest: java.lang.String getXML()>();

        $r2 = staticinvoke <org.apache.solr.client.solrj.util.ClientUtils: java.util.Collection toContentStreams(java.lang.String,java.lang.String)>($r1, "application/xml; charset=UTF-8");

        return $r2;
    }

    public java.lang.String getXML() throws java.io.IOException
    {
        java.io.StringWriter $r0;
        org.apache.solr.client.solrj.request.UpdateRequest r1;
        int $i0;
        java.lang.String $r2, $r3;

        r1 := @this: org.apache.solr.client.solrj.request.UpdateRequest;

        $r0 = new java.io.StringWriter;

        specialinvoke $r0.<java.io.StringWriter: void <init>()>();

        virtualinvoke r1.<org.apache.solr.client.solrj.request.UpdateRequest: void writeXML(java.io.Writer)>($r0);

        virtualinvoke $r0.<java.io.StringWriter: void flush()>();

        $r2 = virtualinvoke $r0.<java.io.StringWriter: java.lang.String toString()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $r3 = $r2;

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    public void writeXML(java.io.Writer) throws java.io.IOException
    {
        boolean $z0, $z1, $z2, $z3, $z4, z5, z7, $z8, $z9;
        java.util.List $r1, $r4, $r7, $r15, $r16, $r17, $r22, $r30, $r33, $r34;
        java.io.Writer r3;
        java.lang.StringBuilder $r10, $r11, $r12, $r13, $r25, $r26, $r27, $r28;
        org.apache.solr.common.SolrInputDocument r31, r32;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.String $r14, $r29, r35, r36;
        java.util.Iterator $r2, $r5, $r8, $r18, $r19, $r20, $r23;
        org.apache.solr.client.solrj.request.UpdateRequest r0;
        java.lang.Object $r6, $r9, $r21, $r24;

        r0 := @this: org.apache.solr.client.solrj.request.UpdateRequest;

        r3 := @parameter0: java.io.Writer;

        $r1 = r0.<org.apache.solr.client.solrj.request.UpdateRequest: java.util.List documents>;

        if $r1 == null goto label01;

        $r30 = r0.<org.apache.solr.client.solrj.request.UpdateRequest: java.util.List documents>;

        $i6 = interfaceinvoke $r30.<java.util.List: int size()>();

        if $i6 > 0 goto label02;

     label01:
        $r2 = r0.<org.apache.solr.client.solrj.request.UpdateRequest: java.util.Iterator docIterator>;

        if $r2 == null goto label11;

     label02:
        $i4 = r0.<org.apache.solr.client.solrj.request.UpdateRequest: int commitWithin>;

        if $i4 <= 0 goto label03;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<add commitWithin=\"");

        $i5 = r0.<org.apache.solr.client.solrj.request.UpdateRequest: int commitWithin>;

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\">");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.io.Writer: void write(java.lang.String)>($r29);

        goto label04;

     label03:
        virtualinvoke r3.<java.io.Writer: void write(java.lang.String)>("<add>");

     label04:
        $r17 = r0.<org.apache.solr.client.solrj.request.UpdateRequest: java.util.List documents>;

        if $r17 == null goto label07;

        $r22 = r0.<org.apache.solr.client.solrj.request.UpdateRequest: java.util.List documents>;

        $r23 = interfaceinvoke $r22.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $z3 = interfaceinvoke $r23.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label07;

        $r24 = interfaceinvoke $r23.<java.util.Iterator: java.lang.Object next()>();

        r31 = (org.apache.solr.common.SolrInputDocument) $r24;

        if r31 == null goto label06;

        staticinvoke <org.apache.solr.client.solrj.util.ClientUtils: void writeXML(org.apache.solr.common.SolrInputDocument,java.io.Writer)>(r31, r3);

     label06:
        goto label05;

     label07:
        $r18 = r0.<org.apache.solr.client.solrj.request.UpdateRequest: java.util.Iterator docIterator>;

        if $r18 == null goto label10;

     label08:
        $r19 = r0.<org.apache.solr.client.solrj.request.UpdateRequest: java.util.Iterator docIterator>;

        $z2 = interfaceinvoke $r19.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label10;

        $r20 = r0.<org.apache.solr.client.solrj.request.UpdateRequest: java.util.Iterator docIterator>;

        $r21 = interfaceinvoke $r20.<java.util.Iterator: java.lang.Object next()>();

        r32 = (org.apache.solr.common.SolrInputDocument) $r21;

        if r32 == null goto label09;

        staticinvoke <org.apache.solr.client.solrj.util.ClientUtils: void writeXML(org.apache.solr.common.SolrInputDocument,java.io.Writer)>(r32, r3);

     label09:
        goto label08;

     label10:
        virtualinvoke r3.<java.io.Writer: void write(java.lang.String)>("</add>");

     label11:
        $r33 = r0.<org.apache.solr.client.solrj.request.UpdateRequest: java.util.List deleteById>;

        if $r33 == null goto label12;

        $r16 = r0.<org.apache.solr.client.solrj.request.UpdateRequest: java.util.List deleteById>;

        $i3 = interfaceinvoke $r16.<java.util.List: int size()>();

        if $i3 <= 0 goto label12;

        $z4 = 1;

        goto label13;

     label12:
        $z4 = 0;

     label13:
        z5 = $z4;

        $r34 = r0.<org.apache.solr.client.solrj.request.UpdateRequest: java.util.List deleteQuery>;

        if $r34 == null goto label14;

        $r15 = r0.<org.apache.solr.client.solrj.request.UpdateRequest: java.util.List deleteQuery>;

        $i2 = interfaceinvoke $r15.<java.util.List: int size()>();

        if $i2 <= 0 goto label14;

        $z9 = 1;

        $z8 = 1;

        goto label15;

     label14:
        $z9 = 0;

        $z8 = 0;

     label15:
        z7 = $z8;

        if z5 != 0 goto label16;

        if $z9 == 0 goto label23;

     label16:
        $i0 = r0.<org.apache.solr.client.solrj.request.UpdateRequest: int commitWithin>;

        if $i0 <= 0 goto label17;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<delete commitWithin=\"");

        $i1 = r0.<org.apache.solr.client.solrj.request.UpdateRequest: int commitWithin>;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\">");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>($r14);

        goto label18;

     label17:
        virtualinvoke r3.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>("<delete>");

     label18:
        if z5 == 0 goto label20;

        $r7 = r0.<org.apache.solr.client.solrj.request.UpdateRequest: java.util.List deleteById>;

        $r8 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label19:
        $z1 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label20;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r35 = (java.lang.String) $r9;

        virtualinvoke r3.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>("<id>");

        staticinvoke <org.apache.solr.common.util.XML: void escapeCharData(java.lang.String,java.io.Writer)>(r35, r3);

        virtualinvoke r3.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>("</id>");

        goto label19;

     label20:
        if z7 == 0 goto label22;

        $r4 = r0.<org.apache.solr.client.solrj.request.UpdateRequest: java.util.List deleteQuery>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label21:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label22;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r36 = (java.lang.String) $r6;

        virtualinvoke r3.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>("<query>");

        staticinvoke <org.apache.solr.common.util.XML: void escapeCharData(java.lang.String,java.io.Writer)>(r36, r3);

        virtualinvoke r3.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>("</query>");

        goto label21;

     label22:
        virtualinvoke r3.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>("</delete>");

     label23:
        return;
    }

    public java.util.List getDocuments()
    {
        java.util.List $r1;
        org.apache.solr.client.solrj.request.UpdateRequest r0;

        r0 := @this: org.apache.solr.client.solrj.request.UpdateRequest;

        $r1 = r0.<org.apache.solr.client.solrj.request.UpdateRequest: java.util.List documents>;

        return $r1;
    }

    public java.util.Iterator getDocIterator()
    {
        java.util.Iterator $r1;
        org.apache.solr.client.solrj.request.UpdateRequest r0;

        r0 := @this: org.apache.solr.client.solrj.request.UpdateRequest;

        $r1 = r0.<org.apache.solr.client.solrj.request.UpdateRequest: java.util.Iterator docIterator>;

        return $r1;
    }

    public java.util.List getDeleteById()
    {
        java.util.List $r1;
        org.apache.solr.client.solrj.request.UpdateRequest r0;

        r0 := @this: org.apache.solr.client.solrj.request.UpdateRequest;

        $r1 = r0.<org.apache.solr.client.solrj.request.UpdateRequest: java.util.List deleteById>;

        return $r1;
    }

    public java.util.List getDeleteQuery()
    {
        java.util.List $r1;
        org.apache.solr.client.solrj.request.UpdateRequest r0;

        r0 := @this: org.apache.solr.client.solrj.request.UpdateRequest;

        $r1 = r0.<org.apache.solr.client.solrj.request.UpdateRequest: java.util.List deleteQuery>;

        return $r1;
    }
}
