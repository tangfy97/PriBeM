public final enum class com.google.wave.api.ProtocolVersion extends java.lang.Enum
{
    public static final enum com.google.wave.api.ProtocolVersion V1;
    public static final enum com.google.wave.api.ProtocolVersion V2;
    public static final enum com.google.wave.api.ProtocolVersion V2_1;
    public static final enum com.google.wave.api.ProtocolVersion V2_2;
    public static final com.google.wave.api.ProtocolVersion DEFAULT;
    private static final java.util.logging.Logger LOG;
    private static final java.util.Map REVERSE_LOOKUP_MAP;
    private final java.lang.String versionString;
    private static final com.google.wave.api.ProtocolVersion[] $VALUES;

    public static com.google.wave.api.ProtocolVersion[] values()
    {
        java.lang.Object $r1;
        com.google.wave.api.ProtocolVersion[] $r0, $r2;

        $r0 = <com.google.wave.api.ProtocolVersion: com.google.wave.api.ProtocolVersion[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (com.google.wave.api.ProtocolVersion[]) $r1;

        return $r2;
    }

    public static com.google.wave.api.ProtocolVersion valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        com.google.wave.api.ProtocolVersion $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/google/wave/api/ProtocolVersion;", r0);

        $r2 = (com.google.wave.api.ProtocolVersion) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int, java.lang.String)
    {
        com.google.wave.api.ProtocolVersion r0;
        int i0;
        java.lang.String r1, r2;

        r0 := @this: com.google.wave.api.ProtocolVersion;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        r0.<com.google.wave.api.ProtocolVersion: java.lang.String versionString> = r2;

        return;
    }

    public java.lang.String getVersionString()
    {
        java.lang.String $r1;
        com.google.wave.api.ProtocolVersion r0;

        r0 := @this: com.google.wave.api.ProtocolVersion;

        $r1 = r0.<com.google.wave.api.ProtocolVersion: java.lang.String versionString>;

        return $r1;
    }

    public boolean isLessThan(com.google.wave.api.ProtocolVersion)
    {
        com.google.wave.api.ProtocolVersion r0, r1;
        int $i0;
        java.lang.String $r2, $r3;
        boolean $z0;

        r0 := @this: com.google.wave.api.ProtocolVersion;

        r1 := @parameter0: com.google.wave.api.ProtocolVersion;

        $r3 = r0.<com.google.wave.api.ProtocolVersion: java.lang.String versionString>;

        $r2 = r1.<com.google.wave.api.ProtocolVersion: java.lang.String versionString>;

        $i0 = virtualinvoke $r3.<java.lang.String: int compareTo(java.lang.String)>($r2);

        if $i0 >= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isLessThanOrEqual(com.google.wave.api.ProtocolVersion)
    {
        com.google.wave.api.ProtocolVersion r0, r1;
        int $i0;
        java.lang.String $r2, $r3;
        boolean $z0;

        r0 := @this: com.google.wave.api.ProtocolVersion;

        r1 := @parameter0: com.google.wave.api.ProtocolVersion;

        $r3 = r0.<com.google.wave.api.ProtocolVersion: java.lang.String versionString>;

        $r2 = r1.<com.google.wave.api.ProtocolVersion: java.lang.String versionString>;

        $i0 = virtualinvoke $r3.<java.lang.String: int compareTo(java.lang.String)>($r2);

        if $i0 > 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isGreaterThanOrEqual(com.google.wave.api.ProtocolVersion)
    {
        com.google.wave.api.ProtocolVersion r0, r1;
        int $i0;
        java.lang.String $r2, $r3;
        boolean $z0;

        r0 := @this: com.google.wave.api.ProtocolVersion;

        r1 := @parameter0: com.google.wave.api.ProtocolVersion;

        $r3 = r0.<com.google.wave.api.ProtocolVersion: java.lang.String versionString>;

        $r2 = r1.<com.google.wave.api.ProtocolVersion: java.lang.String versionString>;

        $i0 = virtualinvoke $r3.<java.lang.String: int compareTo(java.lang.String)>($r2);

        if $i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isGreaterThan(com.google.wave.api.ProtocolVersion)
    {
        com.google.wave.api.ProtocolVersion r0, r1;
        int $i0;
        java.lang.String $r2, $r3;
        boolean $z0;

        r0 := @this: com.google.wave.api.ProtocolVersion;

        r1 := @parameter0: com.google.wave.api.ProtocolVersion;

        $r3 = r0.<com.google.wave.api.ProtocolVersion: java.lang.String versionString>;

        $r2 = r1.<com.google.wave.api.ProtocolVersion: java.lang.String versionString>;

        $i0 = virtualinvoke $r3.<java.lang.String: int compareTo(java.lang.String)>($r2);

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static com.google.wave.api.ProtocolVersion fromVersionString(java.lang.String)
    {
        java.util.Map $r1;
        com.google.wave.api.ProtocolVersion r3, $r4;
        java.lang.Object $r2;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $r1 = <com.google.wave.api.ProtocolVersion: java.util.Map REVERSE_LOOKUP_MAP>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r3 = (com.google.wave.api.ProtocolVersion) $r2;

        if r3 != null goto label1;

        $r4 = <com.google.wave.api.ProtocolVersion: com.google.wave.api.ProtocolVersion DEFAULT>;

        return $r4;

     label1:
        return r3;
    }

    static void <clinit>()
    {
        java.util.HashMap $r13;
        java.util.Map $r18, $r19;
        int $i0, i1, i2;
        java.lang.String $r11, r17, $r24;
        boolean $z0;
        java.util.logging.Logger $r12, $r21;
        com.google.wave.api.ProtocolVersion[] $r4, $r14, $r15;
        com.google.wave.api.ProtocolVersion $r0, $r1, $r2, $r3, $r5, $r6, $r7, $r8, $r9, r16;
        java.lang.Class $r10;
        java.lang.StringBuilder $r20, $r22, $r23;

        $r0 = new com.google.wave.api.ProtocolVersion;

        specialinvoke $r0.<com.google.wave.api.ProtocolVersion: void <init>(java.lang.String,int,java.lang.String)>("V1", 0, "0.1");

        <com.google.wave.api.ProtocolVersion: com.google.wave.api.ProtocolVersion V1> = $r0;

        $r1 = new com.google.wave.api.ProtocolVersion;

        specialinvoke $r1.<com.google.wave.api.ProtocolVersion: void <init>(java.lang.String,int,java.lang.String)>("V2", 1, "0.2");

        <com.google.wave.api.ProtocolVersion: com.google.wave.api.ProtocolVersion V2> = $r1;

        $r2 = new com.google.wave.api.ProtocolVersion;

        specialinvoke $r2.<com.google.wave.api.ProtocolVersion: void <init>(java.lang.String,int,java.lang.String)>("V2_1", 2, "0.21");

        <com.google.wave.api.ProtocolVersion: com.google.wave.api.ProtocolVersion V2_1> = $r2;

        $r3 = new com.google.wave.api.ProtocolVersion;

        specialinvoke $r3.<com.google.wave.api.ProtocolVersion: void <init>(java.lang.String,int,java.lang.String)>("V2_2", 3, "0.22");

        <com.google.wave.api.ProtocolVersion: com.google.wave.api.ProtocolVersion V2_2> = $r3;

        $r4 = newarray (com.google.wave.api.ProtocolVersion)[4];

        $r5 = <com.google.wave.api.ProtocolVersion: com.google.wave.api.ProtocolVersion V1>;

        $r4[0] = $r5;

        $r6 = <com.google.wave.api.ProtocolVersion: com.google.wave.api.ProtocolVersion V2>;

        $r4[1] = $r6;

        $r7 = <com.google.wave.api.ProtocolVersion: com.google.wave.api.ProtocolVersion V2_1>;

        $r4[2] = $r7;

        $r8 = <com.google.wave.api.ProtocolVersion: com.google.wave.api.ProtocolVersion V2_2>;

        $r4[3] = $r8;

        <com.google.wave.api.ProtocolVersion: com.google.wave.api.ProtocolVersion[] $VALUES> = $r4;

        $r9 = <com.google.wave.api.ProtocolVersion: com.google.wave.api.ProtocolVersion V2_2>;

        <com.google.wave.api.ProtocolVersion: com.google.wave.api.ProtocolVersion DEFAULT> = $r9;

        $r10 = class "Lcom/google/wave/api/ProtocolVersion;";

        $r11 = virtualinvoke $r10.<java.lang.Class: java.lang.String getName()>();

        $r12 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r11);

        <com.google.wave.api.ProtocolVersion: java.util.logging.Logger LOG> = $r12;

        $r13 = new java.util.HashMap;

        $r14 = staticinvoke <com.google.wave.api.ProtocolVersion: com.google.wave.api.ProtocolVersion[] values()>();

        $i0 = lengthof $r14;

        specialinvoke $r13.<java.util.HashMap: void <init>(int)>($i0);

        <com.google.wave.api.ProtocolVersion: java.util.Map REVERSE_LOOKUP_MAP> = $r13;

        $r15 = staticinvoke <com.google.wave.api.ProtocolVersion: com.google.wave.api.ProtocolVersion[] values()>();

        i1 = lengthof $r15;

        i2 = 0;

     label1:
        if i2 >= i1 goto label3;

        r16 = $r15[i2];

        r17 = r16.<com.google.wave.api.ProtocolVersion: java.lang.String versionString>;

        $r18 = <com.google.wave.api.ProtocolVersion: java.util.Map REVERSE_LOOKUP_MAP>;

        $z0 = interfaceinvoke $r18.<java.util.Map: boolean containsKey(java.lang.Object)>(r17);

        if $z0 == 0 goto label2;

        $r21 = <com.google.wave.api.ProtocolVersion: java.util.logging.Logger LOG>;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("There are more than one ProtocolVersions that have the same version string ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r21.<java.util.logging.Logger: void warning(java.lang.String)>($r24);

     label2:
        $r19 = <com.google.wave.api.ProtocolVersion: java.util.Map REVERSE_LOOKUP_MAP>;

        interfaceinvoke $r19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r17, r16);

        i2 = i2 + 1;

        goto label1;

     label3:
        return;
    }
}
