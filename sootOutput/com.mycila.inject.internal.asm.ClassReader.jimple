public class com.mycila.inject.internal.asm.ClassReader extends java.lang.Object
{
    public static final int SKIP_CODE;
    public static final int SKIP_DEBUG;
    public static final int SKIP_FRAMES;
    public static final int EXPAND_FRAMES;
    public final byte[] b;
    private final int[] a;
    private final java.lang.String[] c;
    private final int d;
    public final int header;

    public void <init>(byte[])
    {
        int $i0;
        byte[] r1;
        com.mycila.inject.internal.asm.ClassReader r0;

        r0 := @this: com.mycila.inject.internal.asm.ClassReader;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        specialinvoke r0.<com.mycila.inject.internal.asm.ClassReader: void <init>(byte[],int,int)>(r1, 0, $i0);

        return;
    }

    public void <init>(byte[], int, int)
    {
        byte[] r1;
        java.lang.String[] $r4;
        com.mycila.inject.internal.asm.ClassReader r0;
        byte $b5;
        int[] $r2, $r3, $r5;
        int i0, $i1, $i2, i3, $i4, $i6, $i7, i8, i9, i10, i11, i12, $i13;

        r0 := @this: com.mycila.inject.internal.asm.ClassReader;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i8 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.mycila.inject.internal.asm.ClassReader: byte[] b> = r1;

        $i1 = i0 + 8;

        $i2 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>($i1);

        $r2 = newarray (int)[$i2];

        r0.<com.mycila.inject.internal.asm.ClassReader: int[] a> = $r2;

        $r3 = r0.<com.mycila.inject.internal.asm.ClassReader: int[] a>;

        i3 = lengthof $r3;

        $r4 = newarray (java.lang.String)[i3];

        r0.<com.mycila.inject.internal.asm.ClassReader: java.lang.String[] c> = $r4;

        i9 = 0;

        i10 = i0 + 10;

        i11 = 1;

     label1:
        if i11 >= i3 goto label7;

        $r5 = r0.<com.mycila.inject.internal.asm.ClassReader: int[] a>;

        $i4 = i10 + 1;

        $r5[i11] = $i4;

        $b5 = r1[i10];

        $i13 = (int) $b5;

        tableswitch($i13)
        {
            case 1: goto label4;
            case 2: goto label5;
            case 3: goto label2;
            case 4: goto label2;
            case 5: goto label3;
            case 6: goto label3;
            case 7: goto label5;
            case 8: goto label5;
            case 9: goto label2;
            case 10: goto label2;
            case 11: goto label2;
            case 12: goto label2;
            default: goto label5;
        };

     label2:
        i12 = 5;

        goto label6;

     label3:
        i12 = 9;

        i11 = i11 + 1;

        goto label6;

     label4:
        $i6 = i10 + 1;

        $i7 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>($i6);

        i12 = 3 + $i7;

        if i12 <= i9 goto label6;

        i9 = i12;

        goto label6;

     label5:
        i12 = 3;

     label6:
        i10 = i10 + i12;

        i11 = i11 + 1;

        goto label1;

     label7:
        r0.<com.mycila.inject.internal.asm.ClassReader: int d> = i9;

        r0.<com.mycila.inject.internal.asm.ClassReader: int header> = i10;

        return;
    }

    public int getAccess()
    {
        int $i0, $i1;
        com.mycila.inject.internal.asm.ClassReader r0;

        r0 := @this: com.mycila.inject.internal.asm.ClassReader;

        $i0 = r0.<com.mycila.inject.internal.asm.ClassReader: int header>;

        $i1 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>($i0);

        return $i1;
    }

    public java.lang.String getClassName()
    {
        int $i0, $i1, $i2;
        char[] $r1;
        java.lang.String $r2;
        com.mycila.inject.internal.asm.ClassReader r0;

        r0 := @this: com.mycila.inject.internal.asm.ClassReader;

        $i0 = r0.<com.mycila.inject.internal.asm.ClassReader: int header>;

        $i2 = $i0 + 2;

        $i1 = r0.<com.mycila.inject.internal.asm.ClassReader: int d>;

        $r1 = newarray (char)[$i1];

        $r2 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: java.lang.String readClass(int,char[])>($i2, $r1);

        return $r2;
    }

    public java.lang.String getSuperName()
    {
        com.mycila.inject.internal.asm.ClassReader r0;
        int[] $r1;
        int $i0, $i1, $i2, i3, $i4;
        char[] $r2;
        java.lang.String $r3;

        r0 := @this: com.mycila.inject.internal.asm.ClassReader;

        $r1 = r0.<com.mycila.inject.internal.asm.ClassReader: int[] a>;

        $i0 = r0.<com.mycila.inject.internal.asm.ClassReader: int header>;

        $i1 = $i0 + 4;

        $i2 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>($i1);

        i3 = $r1[$i2];

        if i3 != 0 goto label1;

        $r3 = null;

        goto label2;

     label1:
        $i4 = r0.<com.mycila.inject.internal.asm.ClassReader: int d>;

        $r2 = newarray (char)[$i4];

        $r3 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: java.lang.String readUTF8(int,char[])>(i3, $r2);

     label2:
        return $r3;
    }

    public java.lang.String[] getInterfaces()
    {
        java.lang.String[] r1;
        com.mycila.inject.internal.asm.ClassReader r0;
        int $i0, $i1, $i2, i3, i4;
        char[] r2;
        java.lang.String $r3;

        r0 := @this: com.mycila.inject.internal.asm.ClassReader;

        $i0 = r0.<com.mycila.inject.internal.asm.ClassReader: int header>;

        i3 = $i0 + 6;

        $i1 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>(i3);

        r1 = newarray (java.lang.String)[$i1];

        if $i1 <= 0 goto label2;

        $i2 = r0.<com.mycila.inject.internal.asm.ClassReader: int d>;

        r2 = newarray (char)[$i2];

        i4 = 0;

     label1:
        if i4 >= $i1 goto label2;

        i3 = i3 + 2;

        $r3 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: java.lang.String readClass(int,char[])>(i3, r2);

        r1[i4] = $r3;

        i4 = i4 + 1;

        goto label1;

     label2:
        return r1;
    }

    void a(com.mycila.inject.internal.asm.ClassWriter)
    {
        byte[] $r6, $r9;
        byte b7;
        int[] $r2, $r4, $r8, $r13, $r18;
        float $f0;
        long $l13, $l14;
        java.lang.String[] $r17, $r19;
        com.mycila.inject.internal.asm.ClassReader r0;
        com.mycila.inject.internal.asm.Item[] r3;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i8, $i9, $i10, i11, $i12, $i15, $i16, $i17, $i18, i19, i20, i21, $i22, $i23, $i24, i25, $i26, $i27, $i28, $i29, $i30;
        java.lang.String $r11, $r12, $r14, $r15, $r16, $r20, $r21, r22;
        com.mycila.inject.internal.asm.ClassWriter r5;
        double $d0, $d1, $d2;
        com.mycila.inject.internal.asm.ByteVector $r7;
        char[] r1;
        com.mycila.inject.internal.asm.Item $r23, $r24;

        r0 := @this: com.mycila.inject.internal.asm.ClassReader;

        r5 := @parameter0: com.mycila.inject.internal.asm.ClassWriter;

        $i0 = r0.<com.mycila.inject.internal.asm.ClassReader: int d>;

        r1 = newarray (char)[$i0];

        $r2 = r0.<com.mycila.inject.internal.asm.ClassReader: int[] a>;

        i1 = lengthof $r2;

        r3 = newarray (com.mycila.inject.internal.asm.Item)[i1];

        i19 = 1;

     label01:
        if i19 >= i1 goto label12;

        $r8 = r0.<com.mycila.inject.internal.asm.ClassReader: int[] a>;

        i20 = $r8[i19];

        $r9 = r0.<com.mycila.inject.internal.asm.ClassReader: byte[] b>;

        $i6 = i20 - 1;

        b7 = $r9[$i6];

        $r24 = new com.mycila.inject.internal.asm.Item;

        specialinvoke $r24.<com.mycila.inject.internal.asm.Item: void <init>(int)>(i19);

        $i26 = (int) b7;

        tableswitch($i26)
        {
            case 1: goto label08;
            case 2: goto label10;
            case 3: goto label03;
            case 4: goto label04;
            case 5: goto label06;
            case 6: goto label07;
            case 7: goto label10;
            case 8: goto label10;
            case 9: goto label02;
            case 10: goto label02;
            case 11: goto label02;
            case 12: goto label05;
            default: goto label10;
        };

     label02:
        $r13 = r0.<com.mycila.inject.internal.asm.ClassReader: int[] a>;

        $i9 = i20 + 2;

        $i10 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>($i9);

        i11 = $r13[$i10];

        $r14 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: java.lang.String readClass(int,char[])>(i20, r1);

        $r15 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: java.lang.String readUTF8(int,char[])>(i11, r1);

        $i12 = i11 + 2;

        $r16 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: java.lang.String readUTF8(int,char[])>($i12, r1);

        $i27 = (int) b7;

        virtualinvoke $r24.<com.mycila.inject.internal.asm.Item: void a(int,java.lang.String,java.lang.String,java.lang.String)>($i27, $r14, $r15, $r16);

        goto label11;

     label03:
        $i16 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readInt(int)>(i20);

        virtualinvoke $r24.<com.mycila.inject.internal.asm.Item: void a(int)>($i16);

        goto label11;

     label04:
        $i15 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readInt(int)>(i20);

        $f0 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i15);

        virtualinvoke $r24.<com.mycila.inject.internal.asm.Item: void a(float)>($f0);

        goto label11;

     label05:
        $r11 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: java.lang.String readUTF8(int,char[])>(i20, r1);

        $i8 = i20 + 2;

        $r12 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: java.lang.String readUTF8(int,char[])>($i8, r1);

        $i28 = (int) b7;

        virtualinvoke $r24.<com.mycila.inject.internal.asm.Item: void a(int,java.lang.String,java.lang.String,java.lang.String)>($i28, $r11, $r12, null);

        goto label11;

     label06:
        $l14 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: long readLong(int)>(i20);

        virtualinvoke $r24.<com.mycila.inject.internal.asm.Item: void a(long)>($l14);

        i19 = i19 + 1;

        goto label11;

     label07:
        $l13 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: long readLong(int)>(i20);

        $d2 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($l13);

        virtualinvoke $r24.<com.mycila.inject.internal.asm.Item: void a(double)>($d2);

        i19 = i19 + 1;

        goto label11;

     label08:
        $r17 = r0.<com.mycila.inject.internal.asm.ClassReader: java.lang.String[] c>;

        r22 = $r17[i19];

        if r22 != null goto label09;

        $r18 = r0.<com.mycila.inject.internal.asm.ClassReader: int[] a>;

        i21 = $r18[i19];

        $r19 = r0.<com.mycila.inject.internal.asm.ClassReader: java.lang.String[] c>;

        $i17 = i21 + 2;

        $i18 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>(i21);

        $r20 = specialinvoke r0.<com.mycila.inject.internal.asm.ClassReader: java.lang.String a(int,int,char[])>($i17, $i18, r1);

        $r19[i19] = $r20;

        r22 = $r20;

     label09:
        $i29 = (int) b7;

        virtualinvoke $r24.<com.mycila.inject.internal.asm.Item: void a(int,java.lang.String,java.lang.String,java.lang.String)>($i29, r22, null, null);

        goto label11;

     label10:
        $r21 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: java.lang.String readUTF8(int,char[])>(i20, r1);

        $i30 = (int) b7;

        virtualinvoke $r24.<com.mycila.inject.internal.asm.Item: void a(int,java.lang.String,java.lang.String,java.lang.String)>($i30, $r21, null, null);

     label11:
        $i22 = $r24.<com.mycila.inject.internal.asm.Item: int j>;

        $i23 = lengthof r3;

        $i24 = $i22 % $i23;

        $r23 = r3[$i24];

        $r24.<com.mycila.inject.internal.asm.Item: com.mycila.inject.internal.asm.Item k> = $r23;

        r3[$i24] = $r24;

        i19 = i19 + 1;

        goto label01;

     label12:
        $r4 = r0.<com.mycila.inject.internal.asm.ClassReader: int[] a>;

        $i2 = $r4[1];

        i25 = $i2 - 1;

        $r7 = r5.<com.mycila.inject.internal.asm.ClassWriter: com.mycila.inject.internal.asm.ByteVector d>;

        $r6 = r0.<com.mycila.inject.internal.asm.ClassReader: byte[] b>;

        $i3 = r0.<com.mycila.inject.internal.asm.ClassReader: int header>;

        $i4 = $i3 - i25;

        virtualinvoke $r7.<com.mycila.inject.internal.asm.ByteVector: com.mycila.inject.internal.asm.ByteVector putByteArray(byte[],int,int)>($r6, i25, $i4);

        r5.<com.mycila.inject.internal.asm.ClassWriter: com.mycila.inject.internal.asm.Item[] e> = r3;

        $d0 = (double) i1;

        $d1 = 0.75 * $d0;

        $i5 = (int) $d1;

        r5.<com.mycila.inject.internal.asm.ClassWriter: int f> = $i5;

        r5.<com.mycila.inject.internal.asm.ClassWriter: int c> = i1;

        return;
    }

    public void <init>(java.io.InputStream) throws java.io.IOException
    {
        byte[] $r2;
        com.mycila.inject.internal.asm.ClassReader r0;
        java.io.InputStream r1;

        r0 := @this: com.mycila.inject.internal.asm.ClassReader;

        r1 := @parameter0: java.io.InputStream;

        $r2 = staticinvoke <com.mycila.inject.internal.asm.ClassReader: byte[] a(java.io.InputStream)>(r1);

        specialinvoke r0.<com.mycila.inject.internal.asm.ClassReader: void <init>(byte[])>($r2);

        return;
    }

    public void <init>(java.lang.String) throws java.io.IOException
    {
        com.mycila.inject.internal.asm.ClassReader r0;
        java.lang.StringBuffer $r1, $r4, $r5;
        java.lang.String r2, $r3, $r6;
        java.io.InputStream $r7;

        r0 := @this: com.mycila.inject.internal.asm.ClassReader;

        r2 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke r2.<java.lang.String: java.lang.String replace(char,char)>(46, 47);

        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".class");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        $r7 = staticinvoke <java.lang.ClassLoader: java.io.InputStream getSystemResourceAsStream(java.lang.String)>($r6);

        specialinvoke r0.<com.mycila.inject.internal.asm.ClassReader: void <init>(java.io.InputStream)>($r7);

        return;
    }

    private static byte[] a(java.io.InputStream) throws java.io.IOException
    {
        byte[] r1, r3, r4;
        byte $b9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10, i11, $i13;
        java.io.IOException $r5;
        java.io.InputStream r0;

        r0 := @parameter0: java.io.InputStream;

        if r0 != null goto label1;

        $r5 = new java.io.IOException;

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>("Class not found");

        throw $r5;

     label1:
        $i0 = virtualinvoke r0.<java.io.InputStream: int available()>();

        r3 = newarray (byte)[$i0];

        i11 = 0;

     label2:
        $i1 = lengthof r3;

        $i2 = $i1 - i11;

        $i3 = virtualinvoke r0.<java.io.InputStream: int read(byte[],int,int)>(r3, i11, $i2);

        $i13 = (int) -1;

        if $i3 != $i13 goto label4;

        $i10 = lengthof r3;

        if i11 >= $i10 goto label3;

        r4 = newarray (byte)[i11];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, 0, r4, 0, i11);

        r3 = r4;

     label3:
        return r3;

     label4:
        i11 = i11 + $i3;

        $i4 = lengthof r3;

        if i11 != $i4 goto label6;

        $i5 = virtualinvoke r0.<java.io.InputStream: int read()>();

        if $i5 >= 0 goto label5;

        return r3;

     label5:
        $i6 = lengthof r3;

        $i7 = $i6 + 1000;

        r1 = newarray (byte)[$i7];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, 0, r1, 0, i11);

        $i8 = i11;

        i11 = i11 + 1;

        $b9 = (byte) $i5;

        r1[$i8] = $b9;

        r3 = r1;

     label6:
        goto label2;
    }

    public void accept(com.mycila.inject.internal.asm.ClassVisitor, int)
    {
        com.mycila.inject.internal.asm.Attribute[] $r2;
        int i0;
        com.mycila.inject.internal.asm.ClassVisitor r1;
        com.mycila.inject.internal.asm.ClassReader r0;

        r0 := @this: com.mycila.inject.internal.asm.ClassReader;

        r1 := @parameter0: com.mycila.inject.internal.asm.ClassVisitor;

        i0 := @parameter1: int;

        $r2 = newarray (com.mycila.inject.internal.asm.Attribute)[0];

        virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: void accept(com.mycila.inject.internal.asm.ClassVisitor,com.mycila.inject.internal.asm.Attribute[],int)>(r1, $r2, i0);

        return;
    }

    public void accept(com.mycila.inject.internal.asm.ClassVisitor, com.mycila.inject.internal.asm.Attribute[], int)
    {
        java.lang.Integer $r28, $r29, $r30, $r31, $r34;
        com.mycila.inject.internal.asm.AnnotationVisitor $r60, $r61, $r83, $r94;
        java.lang.String $r3, r5, $r7, $r8, $r22, $r23, $r24, $r25, $r26, $r27, $r32, $r33, $r35, $r36, $r37, $r38, $r39, $r40, $r43, $r57, $r59, $r64, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r79, $r80, $r82, $r84, $r85, $r86, $r87, $r88, $r89, $r90, $r91, $r93, $r95, $r96, $r97, $r98, $r99, $r100, $r101, $r102, $r103, $r104, $r109, $r112, r113, r114, r115, r116, r117, r118, $r120, $r121, $r122, r123, r127, r139, r142, $r143, $r144;
        com.mycila.inject.internal.asm.ClassWriter $r62;
        char[] r2, $r106;
        com.mycila.inject.internal.asm.MethodVisitor $r9;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z36, $z37, $z38, $z39, $z40, z41, $z42, $z43, z44, z45, z46;
        byte[] r1, $r11, $r58;
        byte $b42, $b43, $b45, $b75, $b77, $b82, $b104, $b109, $b112, $b120, $b124, $b128, $b179, $b180, $b182, b334;
        com.mycila.inject.internal.asm.Label[] r10, r136, r138;
        com.mycila.inject.internal.asm.MethodWriter r130;
        java.lang.String[] $r110, r129;
        com.mycila.inject.internal.asm.Label $r12, $r13, $r14, $r15, $r18, $r19, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, r135, r140, $r145, $r146;
        com.mycila.inject.internal.asm.ClassReader r0, $r63;
        int[] $r4, $r20, $r21, $r56, $r65, $r107, $r108, r137, r141;
        com.mycila.inject.internal.asm.Attribute $r42, $r44, $r45, $r78, $r92, $r105, r111, r119, r124, r126, r128, r131, r134, r147;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, i21, i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i44, $i46, $i47, $i48, $i49, $i50, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i76, $i79, $i80, $i81, $i84, $i85, $i86, $i87, $i88, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i106, $i108, $i110, $i111, $i114, $i115, $i116, $i117, $i118, $i119, $i122, $i123, $i125, $i126, $i127, $i130, $i133, $i136, $i137, $i138, $i139, $i140, $i141, $i142, $i143, $i144, $i145, $i146, $i147, $i148, $i149, $i150, $i151, $i152, $i153, $i154, $i155, $i156, $i157, $i158, $i159, $i160, $i161, $i162, $i163, $i164, $i165, $i166, $i167, $i168, $i169, $i170, $i171, $i172, $i173, $i174, $i175, $i176, $i177, $i178, $i181, $i183, $i184, $i185, $i186, $i187, $i188, $i189, $i190, $i191, $i192, $i193, $i194, $i195, $i196, $i197, $i198, $i199, $i200, $i201, $i202, $i203, $i204, $i205, $i207, $i208, $i209, $i210, $i211, $i212, $i213, $i214, $i215, $i216, $i217, $i218, $i219, $i220, $i221, $i222, $i223, $i224, $i225, $i226, $i227, $i228, $i229, $i230, $i231, $i232, $i233, $i234, $i235, $i236, $i237, $i238, $i239, $i240, $i241, $i242, $i243, $i244, $i245, $i246, $i247, $i248, $i249, $i250, $i251, $i252, $i253, $i254, i255, i256, i257, i258, i259, i260, i261, i262, $i263, i264, i265, i266, i267, i268, i269, i270, i271, $i272, $i273, $i274, i275, $i276, i277, i278, i279, i280, $i281, $i282, $i283, $i284, $i285, i286, i287, i288, i289, i290, i291, i292, $i293, $i294, $i295, i296, $i297, i298, i299, i300, i301, i302, i303, i304, i305, i306, i307, i308, i309, i310, i311, i312, i313, i314, i315, $i316, i317, i318, i319, i320, i323, i324, i325, i326, i327, i328, i329, i330, i331, i332, i333, i335, i336, i337, i338, i339, i340, i341, i342, i343, i344, i345, $i346, $i347, $i348, i349, i350, i351, $i352, i354, $i355, $i356, i357, i358, i360, $i361, i362, i363, i364, i365, i366, i367, i368, $i369, $i370, i371, i372, i374, i375, i376, i377, i378, i379, i380, i381, i382, i383, i384, i385, i386, i387, $i388, $i389, $i390, $i392, $i394, $i396, $i398, $i400, $i402, $i404, $i406, $i408, $i410, $i412, $i414, $i416, $i418, $i420, $i422, $i424, $i426, $i428, $i430, $i432, $i433, $i434, $i436, $i438, $i440, $i442, $i444, $i446, $i448, $i449, $i450, $i451, $i452, $i453, $i455, $i456, $i458, $i460, $i462, $i464, $i466, $i468, $i470, $i472, $i474, $i476, $i477, $i478, $i479, $i480, $i482, $i483, $i485, $i486, $i487, $i488, $i490, $i491, $i492, $i494, $i495, $i496, $i497, $i498, $i499, $i501, $i502, $i503, $i504, $i505, $i506, $i507, $i508, $i510, $i511, $i513, $i515, $i517, $i519, $i521, $i523;
        java.lang.Object[] r132, r133;
        short $s51, $s78, $s83, $s89, $s105, $s107, $s113, $s121, $s129, $s206, s321, s322, s359, s373, $s431, $s435, $s457, $s475, $s489, $s493, $s500, $s509, $s512;
        com.mycila.inject.internal.asm.ClassVisitor r6;
        java.lang.Object $r16, $r17, $r125;
        com.mycila.inject.internal.asm.Attribute[] r41;
        com.mycila.inject.internal.asm.FieldVisitor $r81;
        char $c131, $c132, $c134, $c135, $c353;

        r0 := @this: com.mycila.inject.internal.asm.ClassReader;

        r6 := @parameter0: com.mycila.inject.internal.asm.ClassVisitor;

        r41 := @parameter1: com.mycila.inject.internal.asm.Attribute[];

        i6 := @parameter2: int;

        r1 = r0.<com.mycila.inject.internal.asm.ClassReader: byte[] b>;

        $i0 = r0.<com.mycila.inject.internal.asm.ClassReader: int d>;

        r2 = newarray (char)[$i0];

        i255 = 0;

        i256 = 0;

        r111 = null;

        i257 = r0.<com.mycila.inject.internal.asm.ClassReader: int header>;

        i258 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>(i257);

        $i1 = i257 + 2;

        $r3 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: java.lang.String readClass(int,char[])>($i1, r2);

        $r4 = r0.<com.mycila.inject.internal.asm.ClassReader: int[] a>;

        $i2 = i257 + 4;

        $i3 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>($i2);

        i259 = $r4[$i3];

        if i259 != 0 goto label001;

        $r112 = null;

        goto label002;

     label001:
        $r112 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: java.lang.String readUTF8(int,char[])>(i259, r2);

     label002:
        r5 = $r112;

        $i4 = i257 + 6;

        $i5 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>($i4);

        $r110 = newarray (java.lang.String)[$i5];

        i260 = 0;

        i261 = i257 + 8;

        i262 = 0;

     label003:
        $i263 = lengthof $r110;

        if i262 >= $i263 goto label004;

        $r109 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: java.lang.String readClass(int,char[])>(i261, r2);

        $r110[i262] = $r109;

        i261 = i261 + 2;

        i262 = i262 + 1;

        goto label003;

     label004:
        $i7 = i6 & 1;

        if $i7 == 0 goto label005;

        $z36 = 1;

        goto label006;

     label005:
        $z36 = 0;

     label006:
        z0 = $z36;

        $i8 = i6 & 2;

        if $i8 == 0 goto label007;

        $z37 = 1;

        goto label008;

     label007:
        $z37 = 0;

     label008:
        z1 = $z37;

        $i9 = i6 & 8;

        if $i9 == 0 goto label009;

        $z38 = 1;

        goto label010;

     label009:
        $z38 = 0;

     label010:
        z2 = $z38;

        i264 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>(i261);

        i265 = i261 + 2;

     label011:
        if i264 <= 0 goto label014;

        $i251 = i265 + 6;

        i266 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>($i251);

        i265 = i265 + 8;

     label012:
        if i266 <= 0 goto label013;

        $i252 = i265 + 2;

        $i253 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readInt(int)>($i252);

        $i254 = 6 + $i253;

        i265 = i265 + $i254;

        $i392 = (int) -1;

        i266 = i266 + $i392;

        goto label012;

     label013:
        $i394 = (int) -1;

        i264 = i264 + $i394;

        goto label011;

     label014:
        i267 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>(i265);

        i268 = i265 + 2;

     label015:
        if i267 <= 0 goto label018;

        $i247 = i268 + 6;

        i269 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>($i247);

        i268 = i268 + 8;

     label016:
        if i269 <= 0 goto label017;

        $i248 = i268 + 2;

        $i249 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readInt(int)>($i248);

        $i250 = 6 + $i249;

        i268 = i268 + $i250;

        $i396 = (int) -1;

        i269 = i269 + $i396;

        goto label016;

     label017:
        $i398 = (int) -1;

        i267 = i267 + $i398;

        goto label015;

     label018:
        r113 = null;

        r114 = null;

        r115 = null;

        r116 = null;

        r117 = null;

        r118 = null;

        i270 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>(i268);

        i271 = i268 + 2;

     label019:
        if i270 <= 0 goto label031;

        $r95 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: java.lang.String readUTF8(int,char[])>(i271, r2);

        $r96 = "SourceFile";

        $z27 = virtualinvoke $r96.<java.lang.String: boolean equals(java.lang.Object)>($r95);

        if $z27 == 0 goto label020;

        $i246 = i271 + 6;

        r114 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: java.lang.String readUTF8(int,char[])>($i246, r2);

        goto label030;

     label020:
        $r97 = "InnerClasses";

        $z28 = virtualinvoke $r97.<java.lang.String: boolean equals(java.lang.Object)>($r95);

        if $z28 == 0 goto label021;

        i260 = i271 + 6;

        goto label030;

     label021:
        $r98 = "EnclosingMethod";

        $z29 = virtualinvoke $r98.<java.lang.String: boolean equals(java.lang.Object)>($r95);

        if $z29 == 0 goto label023;

        $i240 = i271 + 6;

        r116 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: java.lang.String readClass(int,char[])>($i240, r2);

        $i241 = i271 + 8;

        $i242 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>($i241);

        if $i242 == 0 goto label022;

        $r107 = r0.<com.mycila.inject.internal.asm.ClassReader: int[] a>;

        $i243 = $r107[$i242];

        r117 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: java.lang.String readUTF8(int,char[])>($i243, r2);

        $r108 = r0.<com.mycila.inject.internal.asm.ClassReader: int[] a>;

        $i244 = $r108[$i242];

        $i245 = $i244 + 2;

        r118 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: java.lang.String readUTF8(int,char[])>($i245, r2);

     label022:
        goto label030;

     label023:
        $r99 = "Signature";

        $z30 = virtualinvoke $r99.<java.lang.String: boolean equals(java.lang.Object)>($r95);

        if $z30 == 0 goto label024;

        $i239 = i271 + 6;

        r113 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: java.lang.String readUTF8(int,char[])>($i239, r2);

        goto label030;

     label024:
        $r100 = "RuntimeVisibleAnnotations";

        $z31 = virtualinvoke $r100.<java.lang.String: boolean equals(java.lang.Object)>($r95);

        if $z31 == 0 goto label025;

        i255 = i271 + 6;

        goto label030;

     label025:
        $r101 = "Deprecated";

        $z32 = virtualinvoke $r101.<java.lang.String: boolean equals(java.lang.Object)>($r95);

        if $z32 == 0 goto label026;

        i258 = i258 | 131072;

        goto label030;

     label026:
        $r102 = "Synthetic";

        $z33 = virtualinvoke $r102.<java.lang.String: boolean equals(java.lang.Object)>($r95);

        if $z33 == 0 goto label027;

        i258 = i258 | 266240;

        goto label030;

     label027:
        $r103 = "SourceDebugExtension";

        $z34 = virtualinvoke $r103.<java.lang.String: boolean equals(java.lang.Object)>($r95);

        if $z34 == 0 goto label028;

        $i236 = i271 + 2;

        $i237 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readInt(int)>($i236);

        $i238 = i271 + 6;

        $r106 = newarray (char)[$i237];

        r115 = specialinvoke r0.<com.mycila.inject.internal.asm.ClassReader: java.lang.String a(int,int,char[])>($i238, $i237, $r106);

        goto label030;

     label028:
        $r104 = "RuntimeInvisibleAnnotations";

        $z35 = virtualinvoke $r104.<java.lang.String: boolean equals(java.lang.Object)>($r95);

        if $z35 == 0 goto label029;

        i256 = i271 + 6;

        goto label030;

     label029:
        $i234 = i271 + 6;

        $i233 = i271 + 2;

        $i235 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readInt(int)>($i233);

        $i400 = (int) -1;

        $r105 = specialinvoke r0.<com.mycila.inject.internal.asm.ClassReader: com.mycila.inject.internal.asm.Attribute a(com.mycila.inject.internal.asm.Attribute[],java.lang.String,int,int,char[],int,com.mycila.inject.internal.asm.Label[])>(r41, $r95, $i234, $i235, r2, $i400, null);

        if $r105 == null goto label030;

        $r105.<com.mycila.inject.internal.asm.Attribute: com.mycila.inject.internal.asm.Attribute a> = r111;

        r111 = $r105;

     label030:
        $i272 = i271 + 2;

        $i273 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readInt(int)>($i272);

        $i274 = 6 + $i273;

        i271 = i271 + $i274;

        $i402 = (int) -1;

        i270 = i270 + $i402;

        goto label019;

     label031:
        $i10 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readInt(int)>(4);

        interfaceinvoke r6.<com.mycila.inject.internal.asm.ClassVisitor: void visit(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>($i10, i258, $r3, r113, r5, $r110);

        if z1 != 0 goto label033;

        if r114 != null goto label032;

        if r115 == null goto label033;

     label032:
        interfaceinvoke r6.<com.mycila.inject.internal.asm.ClassVisitor: void visitSource(java.lang.String,java.lang.String)>(r114, r115);

     label033:
        if r116 == null goto label034;

        interfaceinvoke r6.<com.mycila.inject.internal.asm.ClassVisitor: void visitOuterClass(java.lang.String,java.lang.String,java.lang.String)>(r116, r117, r118);

     label034:
        i275 = 1;

     label035:
        if i275 < 0 goto label042;

        if i275 != 0 goto label036;

        $i276 = i256;

        goto label037;

     label036:
        $i276 = i255;

     label037:
        if $i276 == 0 goto label041;

        i277 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>($i276);

        i278 = $i276 + 2;

     label038:
        if i277 <= 0 goto label041;

        $i232 = i278 + 2;

        $r93 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: java.lang.String readUTF8(int,char[])>(i278, r2);

        if i275 == 0 goto label039;

        $z39 = 1;

        goto label040;

     label039:
        $z39 = 0;

     label040:
        $r94 = interfaceinvoke r6.<com.mycila.inject.internal.asm.ClassVisitor: com.mycila.inject.internal.asm.AnnotationVisitor visitAnnotation(java.lang.String,boolean)>($r93, $z39);

        i278 = specialinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int a(int,char[],boolean,com.mycila.inject.internal.asm.AnnotationVisitor)>($i232, r2, 1, $r94);

        $i404 = (int) -1;

        i277 = i277 + $i404;

        goto label038;

     label041:
        $i406 = (int) -1;

        i275 = i275 + $i406;

        goto label035;

     label042:
        if r111 == null goto label043;

        r119 = r111.<com.mycila.inject.internal.asm.Attribute: com.mycila.inject.internal.asm.Attribute a>;

        r111.<com.mycila.inject.internal.asm.Attribute: com.mycila.inject.internal.asm.Attribute a> = null;

        interfaceinvoke r6.<com.mycila.inject.internal.asm.ClassVisitor: void visitAttribute(com.mycila.inject.internal.asm.Attribute)>(r111);

        r111 = r119;

        goto label042;

     label043:
        if i260 == 0 goto label051;

        i279 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>(i260);

        i280 = i260 + 2;

     label044:
        if i279 <= 0 goto label051;

        $i228 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>(i280);

        if $i228 != 0 goto label045;

        $r120 = null;

        goto label046;

     label045:
        $r120 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: java.lang.String readClass(int,char[])>(i280, r2);

     label046:
        $i229 = i280 + 2;

        $i230 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>($i229);

        if $i230 != 0 goto label047;

        $r121 = null;

        goto label048;

     label047:
        $i231 = i280 + 2;

        $r121 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: java.lang.String readClass(int,char[])>($i231, r2);

     label048:
        $i281 = i280 + 4;

        $i282 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>($i281);

        if $i282 != 0 goto label049;

        $r122 = null;

        goto label050;

     label049:
        $i283 = i280 + 4;

        $r122 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: java.lang.String readUTF8(int,char[])>($i283, r2);

     label050:
        $i284 = i280 + 6;

        $i285 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>($i284);

        interfaceinvoke r6.<com.mycila.inject.internal.asm.ClassVisitor: void visitInnerClass(java.lang.String,java.lang.String,java.lang.String,int)>($r120, $r121, $r122, $i285);

        i280 = i280 + 8;

        $i408 = (int) -1;

        i279 = i279 + $i408;

        goto label044;

     label051:
        i286 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>(i261);

        i287 = i261 + 2;

     label052:
        if i286 <= 0 goto label074;

        i288 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>(i287);

        $i218 = i287 + 2;

        $r79 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: java.lang.String readUTF8(int,char[])>($i218, r2);

        $i219 = i287 + 4;

        $r80 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: java.lang.String readUTF8(int,char[])>($i219, r2);

        i289 = 0;

        r123 = null;

        i290 = 0;

        i291 = 0;

        r124 = null;

        $i220 = i287 + 6;

        i292 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>($i220);

        i287 = i287 + 8;

     label053:
        if i292 <= 0 goto label061;

        $r85 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: java.lang.String readUTF8(int,char[])>(i287, r2);

        $r86 = "ConstantValue";

        $z21 = virtualinvoke $r86.<java.lang.String: boolean equals(java.lang.Object)>($r85);

        if $z21 == 0 goto label054;

        $i227 = i287 + 6;

        i289 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>($i227);

        goto label060;

     label054:
        $r87 = "Signature";

        $z22 = virtualinvoke $r87.<java.lang.String: boolean equals(java.lang.Object)>($r85);

        if $z22 == 0 goto label055;

        $i226 = i287 + 6;

        r123 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: java.lang.String readUTF8(int,char[])>($i226, r2);

        goto label060;

     label055:
        $r88 = "Deprecated";

        $z23 = virtualinvoke $r88.<java.lang.String: boolean equals(java.lang.Object)>($r85);

        if $z23 == 0 goto label056;

        i288 = i288 | 131072;

        goto label060;

     label056:
        $r89 = "Synthetic";

        $z24 = virtualinvoke $r89.<java.lang.String: boolean equals(java.lang.Object)>($r85);

        if $z24 == 0 goto label057;

        i288 = i288 | 266240;

        goto label060;

     label057:
        $r90 = "RuntimeVisibleAnnotations";

        $z25 = virtualinvoke $r90.<java.lang.String: boolean equals(java.lang.Object)>($r85);

        if $z25 == 0 goto label058;

        i290 = i287 + 6;

        goto label060;

     label058:
        $r91 = "RuntimeInvisibleAnnotations";

        $z26 = virtualinvoke $r91.<java.lang.String: boolean equals(java.lang.Object)>($r85);

        if $z26 == 0 goto label059;

        i291 = i287 + 6;

        goto label060;

     label059:
        $i224 = i287 + 6;

        $i223 = i287 + 2;

        $i225 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readInt(int)>($i223);

        $i410 = (int) -1;

        $r92 = specialinvoke r0.<com.mycila.inject.internal.asm.ClassReader: com.mycila.inject.internal.asm.Attribute a(com.mycila.inject.internal.asm.Attribute[],java.lang.String,int,int,char[],int,com.mycila.inject.internal.asm.Label[])>(r41, $r85, $i224, $i225, r2, $i410, null);

        if $r92 == null goto label060;

        $r92.<com.mycila.inject.internal.asm.Attribute: com.mycila.inject.internal.asm.Attribute a> = r124;

        r124 = $r92;

     label060:
        $i293 = i287 + 2;

        $i294 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readInt(int)>($i293);

        $i295 = 6 + $i294;

        i287 = i287 + $i295;

        $i412 = (int) -1;

        i292 = i292 + $i412;

        goto label053;

     label061:
        $i222 = i288;

        $r84 = r123;

        if i289 != 0 goto label062;

        $r125 = null;

        goto label063;

     label062:
        $r125 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: java.lang.Object readConst(int,char[])>(i289, r2);

     label063:
        $r81 = interfaceinvoke r6.<com.mycila.inject.internal.asm.ClassVisitor: com.mycila.inject.internal.asm.FieldVisitor visitField(int,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)>($i222, $r79, $r80, $r84, $r125);

        if $r81 == null goto label073;

        i296 = 1;

     label064:
        if i296 < 0 goto label071;

        if i296 != 0 goto label065;

        $i297 = i291;

        goto label066;

     label065:
        $i297 = i290;

     label066:
        if $i297 == 0 goto label070;

        i298 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>($i297);

        i299 = $i297 + 2;

     label067:
        if i298 <= 0 goto label070;

        $i221 = i299 + 2;

        $r82 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: java.lang.String readUTF8(int,char[])>(i299, r2);

        if i296 == 0 goto label068;

        $z40 = 1;

        goto label069;

     label068:
        $z40 = 0;

     label069:
        $r83 = interfaceinvoke $r81.<com.mycila.inject.internal.asm.FieldVisitor: com.mycila.inject.internal.asm.AnnotationVisitor visitAnnotation(java.lang.String,boolean)>($r82, $z40);

        i299 = specialinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int a(int,char[],boolean,com.mycila.inject.internal.asm.AnnotationVisitor)>($i221, r2, 1, $r83);

        $i414 = (int) -1;

        i298 = i298 + $i414;

        goto label067;

     label070:
        $i416 = (int) -1;

        i296 = i296 + $i416;

        goto label064;

     label071:
        if r124 == null goto label072;

        r126 = r124.<com.mycila.inject.internal.asm.Attribute: com.mycila.inject.internal.asm.Attribute a>;

        r124.<com.mycila.inject.internal.asm.Attribute: com.mycila.inject.internal.asm.Attribute a> = null;

        interfaceinvoke $r81.<com.mycila.inject.internal.asm.FieldVisitor: void visitAttribute(com.mycila.inject.internal.asm.Attribute)>(r124);

        r124 = r126;

        goto label071;

     label072:
        interfaceinvoke $r81.<com.mycila.inject.internal.asm.FieldVisitor: void visitEnd()>();

     label073:
        $i418 = (int) -1;

        i286 = i286 + $i418;

        goto label052;

     label074:
        i300 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>(i287);

        i301 = i287 + 2;

     label075:
        if i300 <= 0 goto label231;

        i302 = i301 + 6;

        i303 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>(i301);

        $i11 = i301 + 2;

        $r7 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: java.lang.String readUTF8(int,char[])>($i11, r2);

        $i12 = i301 + 4;

        $r8 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: java.lang.String readUTF8(int,char[])>($i12, r2);

        r127 = null;

        i304 = 0;

        i305 = 0;

        i306 = 0;

        i307 = 0;

        i308 = 0;

        r128 = null;

        i309 = 0;

        i310 = 0;

        $i13 = i301 + 6;

        i311 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>($i13);

        i301 = i301 + 8;

     label076:
        if i311 <= 0 goto label088;

        $r67 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: java.lang.String readUTF8(int,char[])>(i301, r2);

        $i216 = i301 + 2;

        $i217 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readInt(int)>($i216);

        i312 = i301 + 6;

        $r68 = "Code";

        $z11 = virtualinvoke $r68.<java.lang.String: boolean equals(java.lang.Object)>($r67);

        if $z11 == 0 goto label077;

        if z0 != 0 goto label087;

        i309 = i312;

        goto label087;

     label077:
        $r69 = "Exceptions";

        $z12 = virtualinvoke $r69.<java.lang.String: boolean equals(java.lang.Object)>($r67);

        if $z12 == 0 goto label078;

        i310 = i312;

        goto label087;

     label078:
        $r70 = "Signature";

        $z13 = virtualinvoke $r70.<java.lang.String: boolean equals(java.lang.Object)>($r67);

        if $z13 == 0 goto label079;

        r127 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: java.lang.String readUTF8(int,char[])>(i312, r2);

        goto label087;

     label079:
        $r71 = "Deprecated";

        $z14 = virtualinvoke $r71.<java.lang.String: boolean equals(java.lang.Object)>($r67);

        if $z14 == 0 goto label080;

        i303 = i303 | 131072;

        goto label087;

     label080:
        $r72 = "RuntimeVisibleAnnotations";

        $z15 = virtualinvoke $r72.<java.lang.String: boolean equals(java.lang.Object)>($r67);

        if $z15 == 0 goto label081;

        i304 = i312;

        goto label087;

     label081:
        $r73 = "AnnotationDefault";

        $z16 = virtualinvoke $r73.<java.lang.String: boolean equals(java.lang.Object)>($r67);

        if $z16 == 0 goto label082;

        i306 = i312;

        goto label087;

     label082:
        $r74 = "Synthetic";

        $z17 = virtualinvoke $r74.<java.lang.String: boolean equals(java.lang.Object)>($r67);

        if $z17 == 0 goto label083;

        i303 = i303 | 266240;

        goto label087;

     label083:
        $r75 = "RuntimeInvisibleAnnotations";

        $z18 = virtualinvoke $r75.<java.lang.String: boolean equals(java.lang.Object)>($r67);

        if $z18 == 0 goto label084;

        i305 = i312;

        goto label087;

     label084:
        $r76 = "RuntimeVisibleParameterAnnotations";

        $z19 = virtualinvoke $r76.<java.lang.String: boolean equals(java.lang.Object)>($r67);

        if $z19 == 0 goto label085;

        i307 = i312;

        goto label087;

     label085:
        $r77 = "RuntimeInvisibleParameterAnnotations";

        $z20 = virtualinvoke $r77.<java.lang.String: boolean equals(java.lang.Object)>($r67);

        if $z20 == 0 goto label086;

        i308 = i312;

        goto label087;

     label086:
        $i420 = (int) -1;

        $r78 = specialinvoke r0.<com.mycila.inject.internal.asm.ClassReader: com.mycila.inject.internal.asm.Attribute a(com.mycila.inject.internal.asm.Attribute[],java.lang.String,int,int,char[],int,com.mycila.inject.internal.asm.Label[])>(r41, $r67, i312, $i217, r2, $i420, null);

        if $r78 == null goto label087;

        $r78.<com.mycila.inject.internal.asm.Attribute: com.mycila.inject.internal.asm.Attribute a> = r128;

        r128 = $r78;

     label087:
        i301 = i312 + $i217;

        $i422 = (int) -1;

        i311 = i311 + $i422;

        goto label076;

     label088:
        if i310 != 0 goto label089;

        r129 = null;

        goto label091;

     label089:
        $i14 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>(i310);

        r129 = newarray (java.lang.String)[$i14];

        i310 = i310 + 2;

        i313 = 0;

     label090:
        $i15 = lengthof r129;

        if i313 >= $i15 goto label091;

        $r66 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: java.lang.String readClass(int,char[])>(i310, r2);

        r129[i313] = $r66;

        i310 = i310 + 2;

        i313 = i313 + 1;

        goto label090;

     label091:
        $r9 = interfaceinvoke r6.<com.mycila.inject.internal.asm.ClassVisitor: com.mycila.inject.internal.asm.MethodVisitor visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(i303, $r7, $r8, r127, r129);

        if $r9 == null goto label110;

        $z10 = $r9 instanceof com.mycila.inject.internal.asm.MethodWriter;

        if $z10 == 0 goto label098;

        r130 = (com.mycila.inject.internal.asm.MethodWriter) $r9;

        $r62 = r130.<com.mycila.inject.internal.asm.MethodWriter: com.mycila.inject.internal.asm.ClassWriter b>;

        $r63 = $r62.<com.mycila.inject.internal.asm.ClassWriter: com.mycila.inject.internal.asm.ClassReader J>;

        if $r63 != r0 goto label098;

        $r64 = r130.<com.mycila.inject.internal.asm.MethodWriter: java.lang.String g>;

        if r127 != $r64 goto label098;

        z41 = 0;

        if r129 != null goto label094;

        $i215 = r130.<com.mycila.inject.internal.asm.MethodWriter: int j>;

        if $i215 != 0 goto label092;

        $z42 = 1;

        goto label093;

     label092:
        $z42 = 0;

     label093:
        z41 = $z42;

        goto label097;

     label094:
        $i210 = lengthof r129;

        $i209 = r130.<com.mycila.inject.internal.asm.MethodWriter: int j>;

        if $i210 != $i209 goto label097;

        z41 = 1;

        $i212 = lengthof r129;

        i314 = $i212 - 1;

     label095:
        if i314 < 0 goto label097;

        $i424 = (int) -2;

        i310 = i310 + $i424;

        $r65 = r130.<com.mycila.inject.internal.asm.MethodWriter: int[] k>;

        $i213 = $r65[i314];

        $i214 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>(i310);

        if $i213 == $i214 goto label096;

        z41 = 0;

        goto label097;

     label096:
        $i426 = (int) -1;

        i314 = i314 + $i426;

        goto label095;

     label097:
        if z41 == 0 goto label098;

        r130.<com.mycila.inject.internal.asm.MethodWriter: int h> = i302;

        $i211 = i301 - i302;

        r130.<com.mycila.inject.internal.asm.MethodWriter: int i> = $i211;

        goto label230;

     label098:
        if i306 == 0 goto label099;

        $r61 = interfaceinvoke $r9.<com.mycila.inject.internal.asm.MethodVisitor: com.mycila.inject.internal.asm.AnnotationVisitor visitAnnotationDefault()>();

        specialinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int a(int,char[],java.lang.String,com.mycila.inject.internal.asm.AnnotationVisitor)>(i306, r2, null, $r61);

        if $r61 == null goto label099;

        interfaceinvoke $r61.<com.mycila.inject.internal.asm.AnnotationVisitor: void visitEnd()>();

     label099:
        i315 = 1;

     label100:
        if i315 < 0 goto label107;

        if i315 != 0 goto label101;

        $i316 = i305;

        goto label102;

     label101:
        $i316 = i304;

     label102:
        if $i316 == 0 goto label106;

        i317 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>($i316);

        i318 = $i316 + 2;

     label103:
        if i317 <= 0 goto label106;

        $i208 = i318 + 2;

        $r59 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: java.lang.String readUTF8(int,char[])>(i318, r2);

        if i315 == 0 goto label104;

        $z43 = 1;

        goto label105;

     label104:
        $z43 = 0;

     label105:
        $r60 = interfaceinvoke $r9.<com.mycila.inject.internal.asm.MethodVisitor: com.mycila.inject.internal.asm.AnnotationVisitor visitAnnotation(java.lang.String,boolean)>($r59, $z43);

        i318 = specialinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int a(int,char[],boolean,com.mycila.inject.internal.asm.AnnotationVisitor)>($i208, r2, 1, $r60);

        $i428 = (int) -1;

        i317 = i317 + $i428;

        goto label103;

     label106:
        $i430 = (int) -1;

        i315 = i315 + $i430;

        goto label100;

     label107:
        if i307 == 0 goto label108;

        specialinvoke r0.<com.mycila.inject.internal.asm.ClassReader: void a(int,java.lang.String,char[],boolean,com.mycila.inject.internal.asm.MethodVisitor)>(i307, $r8, r2, 1, $r9);

     label108:
        if i308 == 0 goto label109;

        specialinvoke r0.<com.mycila.inject.internal.asm.ClassReader: void a(int,java.lang.String,char[],boolean,com.mycila.inject.internal.asm.MethodVisitor)>(i308, $r8, r2, 0, $r9);

     label109:
        if r128 == null goto label110;

        r131 = r128.<com.mycila.inject.internal.asm.Attribute: com.mycila.inject.internal.asm.Attribute a>;

        r128.<com.mycila.inject.internal.asm.Attribute: com.mycila.inject.internal.asm.Attribute a> = null;

        interfaceinvoke $r9.<com.mycila.inject.internal.asm.MethodVisitor: void visitAttribute(com.mycila.inject.internal.asm.Attribute)>(r128);

        r128 = r131;

        goto label109;

     label110:
        if $r9 == null goto label229;

        if i309 == 0 goto label229;

        $i16 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>(i309);

        $i17 = i309 + 2;

        $i18 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>($i17);

        $i19 = i309 + 4;

        $i20 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readInt(int)>($i19);

        i319 = i309 + 8;

        i21 = i319;

        i22 = i319 + $i20;

        interfaceinvoke $r9.<com.mycila.inject.internal.asm.MethodVisitor: void visitCode()>();

        $i23 = $i20 + 2;

        r10 = newarray (com.mycila.inject.internal.asm.Label)[$i23];

        $i24 = $i20 + 1;

        virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: com.mycila.inject.internal.asm.Label readLabel(int,com.mycila.inject.internal.asm.Label[])>($i24, r10);

     label111:
        if i319 >= i22 goto label126;

        i320 = i319 - i21;

        $b179 = r1[i319];

        $s431 = (short) $b179;

        s321 = $s431 & 255;

        $r58 = <com.mycila.inject.internal.asm.ClassWriter: byte[] a>;

        $i432 = (int) s321;

        $b180 = $r58[$i432];

        $i433 = (int) $b180;

        tableswitch($i433)
        {
            case 0: goto label112;
            case 1: goto label121;
            case 2: goto label122;
            case 3: goto label121;
            case 4: goto label112;
            case 5: goto label122;
            case 6: goto label122;
            case 7: goto label123;
            case 8: goto label113;
            case 9: goto label114;
            case 10: goto label121;
            case 11: goto label122;
            case 12: goto label122;
            case 13: goto label117;
            case 14: goto label119;
            case 15: goto label124;
            case 16: goto label115;
            default: goto label124;
        };

     label112:
        i319 = i319 + 1;

        goto label125;

     label113:
        $i205 = i319 + 1;

        $s206 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: short readShort(int)>($i205);

        $i434 = (int) $s206;

        $i207 = i320 + $i434;

        virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: com.mycila.inject.internal.asm.Label readLabel(int,com.mycila.inject.internal.asm.Label[])>($i207, r10);

        i319 = i319 + 3;

        goto label125;

     label114:
        $i202 = i319 + 1;

        $i203 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readInt(int)>($i202);

        $i204 = i320 + $i203;

        virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: com.mycila.inject.internal.asm.Label readLabel(int,com.mycila.inject.internal.asm.Label[])>($i204, r10);

        i319 = i319 + 5;

        goto label125;

     label115:
        $i181 = i319 + 1;

        $b182 = r1[$i181];

        $s435 = (short) $b182;

        s322 = $s435 & 255;

        $i436 = (int) s322;

        if $i436 != 132 goto label116;

        i319 = i319 + 6;

        goto label125;

     label116:
        i319 = i319 + 4;

        goto label125;

     label117:
        $i192 = i319 + 4;

        $i191 = i320 & 3;

        i323 = $i192 - $i191;

        $i193 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readInt(int)>(i323);

        $i194 = i320 + $i193;

        virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: com.mycila.inject.internal.asm.Label readLabel(int,com.mycila.inject.internal.asm.Label[])>($i194, r10);

        $i195 = i323 + 8;

        $i196 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readInt(int)>($i195);

        $i197 = i323 + 4;

        $i198 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readInt(int)>($i197);

        $i199 = $i196 - $i198;

        i324 = $i199 + 1;

        i319 = i323 + 12;

     label118:
        if i324 <= 0 goto label125;

        $i200 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readInt(int)>(i319);

        $i201 = i320 + $i200;

        virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: com.mycila.inject.internal.asm.Label readLabel(int,com.mycila.inject.internal.asm.Label[])>($i201, r10);

        i319 = i319 + 4;

        $i438 = (int) -1;

        i324 = i324 + $i438;

        goto label118;

     label119:
        $i184 = i319 + 4;

        $i183 = i320 & 3;

        i325 = $i184 - $i183;

        $i185 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readInt(int)>(i325);

        $i186 = i320 + $i185;

        virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: com.mycila.inject.internal.asm.Label readLabel(int,com.mycila.inject.internal.asm.Label[])>($i186, r10);

        $i187 = i325 + 4;

        i326 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readInt(int)>($i187);

        i319 = i325 + 8;

     label120:
        if i326 <= 0 goto label125;

        $i188 = i319 + 4;

        $i189 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readInt(int)>($i188);

        $i190 = i320 + $i189;

        virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: com.mycila.inject.internal.asm.Label readLabel(int,com.mycila.inject.internal.asm.Label[])>($i190, r10);

        i319 = i319 + 8;

        $i440 = (int) -1;

        i326 = i326 + $i440;

        goto label120;

     label121:
        i319 = i319 + 2;

        goto label125;

     label122:
        i319 = i319 + 3;

        goto label125;

     label123:
        i319 = i319 + 5;

        goto label125;

     label124:
        i319 = i319 + 4;

     label125:
        goto label111;

     label126:
        i327 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>(i319);

        i328 = i319 + 2;

     label127:
        if i327 <= 0 goto label130;

        $i171 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>(i328);

        $r53 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: com.mycila.inject.internal.asm.Label readLabel(int,com.mycila.inject.internal.asm.Label[])>($i171, r10);

        $i172 = i328 + 2;

        $i173 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>($i172);

        $r54 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: com.mycila.inject.internal.asm.Label readLabel(int,com.mycila.inject.internal.asm.Label[])>($i173, r10);

        $i174 = i328 + 4;

        $i175 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>($i174);

        $r55 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: com.mycila.inject.internal.asm.Label readLabel(int,com.mycila.inject.internal.asm.Label[])>($i175, r10);

        $i176 = i328 + 6;

        $i177 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>($i176);

        if $i177 != 0 goto label128;

        interfaceinvoke $r9.<com.mycila.inject.internal.asm.MethodVisitor: void visitTryCatchBlock(com.mycila.inject.internal.asm.Label,com.mycila.inject.internal.asm.Label,com.mycila.inject.internal.asm.Label,java.lang.String)>($r53, $r54, $r55, null);

        goto label129;

     label128:
        $r56 = r0.<com.mycila.inject.internal.asm.ClassReader: int[] a>;

        $i178 = $r56[$i177];

        $r57 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: java.lang.String readUTF8(int,char[])>($i178, r2);

        interfaceinvoke $r9.<com.mycila.inject.internal.asm.MethodVisitor: void visitTryCatchBlock(com.mycila.inject.internal.asm.Label,com.mycila.inject.internal.asm.Label,com.mycila.inject.internal.asm.Label,java.lang.String)>($r53, $r54, $r55, $r57);

     label129:
        i328 = i328 + 8;

        $i442 = (int) -1;

        i327 = i327 + $i442;

        goto label127;

     label130:
        i329 = 0;

        i330 = 0;

        i331 = 0;

        i332 = 0;

        i333 = 0;

        b334 = 0;

        i335 = 0;

        i336 = 0;

        i337 = 0;

        i338 = 0;

        r132 = null;

        r133 = null;

        z44 = 1;

        z46 = 1;

        z45 = 1;

        r134 = null;

        i339 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>(i328);

        i340 = i328 + 2;

     label131:
        if i339 <= 0 goto label145;

        $r35 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: java.lang.String readUTF8(int,char[])>(i340, r2);

        $r36 = "LocalVariableTable";

        $z4 = virtualinvoke $r36.<java.lang.String: boolean equals(java.lang.Object)>($r35);

        if $z4 == 0 goto label135;

        if z1 != 0 goto label144;

        i329 = i340 + 6;

        $i162 = i340 + 6;

        i341 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>($i162);

        i342 = i340 + 8;

     label132:
        if i341 <= 0 goto label144;

        $i163 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>(i342);

        $r49 = r10[$i163];

        if $r49 != null goto label133;

        $r52 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: com.mycila.inject.internal.asm.Label readLabel(int,com.mycila.inject.internal.asm.Label[])>($i163, r10);

        $i168 = $r52.<com.mycila.inject.internal.asm.Label: int a>;

        $i169 = $i168 | 1;

        $r52.<com.mycila.inject.internal.asm.Label: int a> = $i169;

     label133:
        $i164 = i342 + 2;

        $i165 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>($i164);

        $i170 = $i163 + $i165;

        $r50 = r10[$i170];

        if $r50 != null goto label134;

        $r51 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: com.mycila.inject.internal.asm.Label readLabel(int,com.mycila.inject.internal.asm.Label[])>($i170, r10);

        $i166 = $r51.<com.mycila.inject.internal.asm.Label: int a>;

        $i167 = $i166 | 1;

        $r51.<com.mycila.inject.internal.asm.Label: int a> = $i167;

     label134:
        i342 = i342 + 10;

        $i444 = (int) -1;

        i341 = i341 + $i444;

        goto label132;

     label135:
        $r37 = "LocalVariableTypeTable";

        $z5 = virtualinvoke $r37.<java.lang.String: boolean equals(java.lang.Object)>($r35);

        if $z5 == 0 goto label136;

        i330 = i340 + 6;

        goto label144;

     label136:
        $r38 = "LineNumberTable";

        $z6 = virtualinvoke $r38.<java.lang.String: boolean equals(java.lang.Object)>($r35);

        if $z6 == 0 goto label139;

        if z1 != 0 goto label144;

        $i156 = i340 + 6;

        i343 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>($i156);

        i344 = i340 + 8;

     label137:
        if i343 <= 0 goto label144;

        $i157 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>(i344);

        $r46 = r10[$i157];

        if $r46 != null goto label138;

        $r48 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: com.mycila.inject.internal.asm.Label readLabel(int,com.mycila.inject.internal.asm.Label[])>($i157, r10);

        $i160 = $r48.<com.mycila.inject.internal.asm.Label: int a>;

        $i161 = $i160 | 1;

        $r48.<com.mycila.inject.internal.asm.Label: int a> = $i161;

     label138:
        $r47 = r10[$i157];

        $i158 = i344 + 2;

        $i159 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>($i158);

        $r47.<com.mycila.inject.internal.asm.Label: int b> = $i159;

        i344 = i344 + 4;

        $i446 = (int) -1;

        i343 = i343 + $i446;

        goto label137;

     label139:
        $r39 = "StackMapTable";

        $z7 = virtualinvoke $r39.<java.lang.String: boolean equals(java.lang.Object)>($r35);

        if $z7 == 0 goto label140;

        $i153 = i6 & 4;

        if $i153 != 0 goto label144;

        i331 = i340 + 8;

        $i154 = i340 + 2;

        i332 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readInt(int)>($i154);

        $i155 = i340 + 6;

        i333 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>($i155);

        goto label144;

     label140:
        $r40 = "StackMap";

        $z8 = virtualinvoke $r40.<java.lang.String: boolean equals(java.lang.Object)>($r35);

        if $z8 == 0 goto label141;

        $i150 = i6 & 4;

        if $i150 != 0 goto label144;

        i331 = i340 + 8;

        $i151 = i340 + 2;

        i332 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readInt(int)>($i151);

        $i152 = i340 + 6;

        i333 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>($i152);

        z44 = 0;

        z46 = 0;

        z45 = 0;

        goto label144;

     label141:
        i345 = 0;

     label142:
        $i145 = lengthof r41;

        if i345 >= $i145 goto label144;

        $r42 = r41[i345];

        $r43 = $r42.<com.mycila.inject.internal.asm.Attribute: java.lang.String type>;

        $z9 = virtualinvoke $r43.<java.lang.String: boolean equals(java.lang.Object)>($r35);

        if $z9 == 0 goto label143;

        $r44 = r41[i345];

        $i147 = i340 + 6;

        $i146 = i340 + 2;

        $i148 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readInt(int)>($i146);

        $i149 = i21 - 8;

        $r45 = virtualinvoke $r44.<com.mycila.inject.internal.asm.Attribute: com.mycila.inject.internal.asm.Attribute read(com.mycila.inject.internal.asm.ClassReader,int,int,char[],int,com.mycila.inject.internal.asm.Label[])>(r0, $i147, $i148, r2, $i149, r10);

        if $r45 == null goto label143;

        $r45.<com.mycila.inject.internal.asm.Attribute: com.mycila.inject.internal.asm.Attribute a> = r134;

        r134 = $r45;

     label143:
        i345 = i345 + 1;

        goto label142;

     label144:
        $i346 = i340 + 2;

        $i347 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readInt(int)>($i346);

        $i348 = 6 + $i347;

        i340 = i340 + $i348;

        $i448 = (int) -1;

        i339 = i339 + $i448;

        goto label131;

     label145:
        if i331 == 0 goto label164;

        r132 = newarray (java.lang.Object)[$i18];

        r133 = newarray (java.lang.Object)[$i16];

        if z2 == 0 goto label161;

        i349 = 0;

        $i130 = i303 & 8;

        if $i130 != 0 goto label147;

        $r32 = "<init>";

        $z3 = virtualinvoke $r32.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z3 == 0 goto label146;

        i349 = 1;

        $r34 = <com.mycila.inject.internal.asm.Opcodes: java.lang.Integer UNINITIALIZED_THIS>;

        r132[0] = $r34;

        goto label147;

     label146:
        i349 = 1;

        $i143 = r0.<com.mycila.inject.internal.asm.ClassReader: int header>;

        $i144 = $i143 + 2;

        $r33 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: java.lang.String readClass(int,char[])>($i144, r2);

        r132[0] = $r33;

     label147:
        i350 = 1;

     label148:
        i351 = i350;

        $i352 = i350;

        i350 = i350 + 1;

        $c353 = virtualinvoke $r8.<java.lang.String: char charAt(int)>($i352);

        $i449 = (int) $c353;

        tableswitch($i449)
        {
            case 66: goto label149;
            case 67: goto label149;
            case 68: goto label152;
            case 69: goto label159;
            case 70: goto label150;
            case 71: goto label159;
            case 72: goto label159;
            case 73: goto label149;
            case 74: goto label151;
            case 75: goto label159;
            case 76: goto label157;
            case 77: goto label159;
            case 78: goto label159;
            case 79: goto label159;
            case 80: goto label159;
            case 81: goto label159;
            case 82: goto label159;
            case 83: goto label149;
            case 84: goto label159;
            case 85: goto label159;
            case 86: goto label159;
            case 87: goto label159;
            case 88: goto label159;
            case 89: goto label159;
            case 90: goto label149;
            case 91: goto label153;
            default: goto label159;
        };

     label149:
        $i142 = i349;

        i349 = i349 + 1;

        $r31 = <com.mycila.inject.internal.asm.Opcodes: java.lang.Integer INTEGER>;

        r132[$i142] = $r31;

        goto label148;

     label150:
        $i140 = i349;

        i349 = i349 + 1;

        $r29 = <com.mycila.inject.internal.asm.Opcodes: java.lang.Integer FLOAT>;

        r132[$i140] = $r29;

        goto label148;

     label151:
        $i139 = i349;

        i349 = i349 + 1;

        $r28 = <com.mycila.inject.internal.asm.Opcodes: java.lang.Integer LONG>;

        r132[$i139] = $r28;

        goto label148;

     label152:
        $i141 = i349;

        i349 = i349 + 1;

        $r30 = <com.mycila.inject.internal.asm.Opcodes: java.lang.Integer DOUBLE>;

        r132[$i141] = $r30;

        goto label148;

     label153:
        $c131 = virtualinvoke $r8.<java.lang.String: char charAt(int)>(i350);

        $i450 = (int) $c131;

        if $i450 != 91 goto label154;

        i350 = i350 + 1;

        goto label153;

     label154:
        $c132 = virtualinvoke $r8.<java.lang.String: char charAt(int)>(i350);

        $i451 = (int) $c132;

        if $i451 != 76 goto label156;

        i350 = i350 + 1;

     label155:
        $c134 = virtualinvoke $r8.<java.lang.String: char charAt(int)>(i350);

        $i452 = (int) $c134;

        if $i452 == 59 goto label156;

        i350 = i350 + 1;

        goto label155;

     label156:
        $i133 = i349;

        i349 = i349 + 1;

        i350 = i350 + 1;

        $r26 = virtualinvoke $r8.<java.lang.String: java.lang.String substring(int,int)>(i351, i350);

        r132[$i133] = $r26;

        goto label148;

     label157:
        $c135 = virtualinvoke $r8.<java.lang.String: char charAt(int)>(i350);

        $i453 = (int) $c135;

        if $i453 == 59 goto label158;

        i350 = i350 + 1;

        goto label157;

     label158:
        $i136 = i349;

        i349 = i349 + 1;

        $i138 = i351 + 1;

        $i137 = i350;

        i350 = i350 + 1;

        $r27 = virtualinvoke $r8.<java.lang.String: java.lang.String substring(int,int)>($i138, $i137);

        r132[$i136] = $r27;

        goto label148;

     label159:
        goto label160;

     label160:
        i336 = i349;

     label161:
        $i455 = (int) -1;

        i335 = $i455;

        i354 = i331;

     label162:
        $i355 = i331 + i332;

        $i356 = $i355 - 2;

        if i354 >= $i356 goto label164;

        $b124 = r1[i354];

        $i456 = (int) $b124;

        if $i456 != 8 goto label163;

        $i125 = i354 + 1;

        $i126 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>($i125);

        if $i126 < 0 goto label163;

        if $i126 >= $i20 goto label163;

        $i127 = i21 + $i126;

        $b128 = r1[$i127];

        $s457 = (short) $b128;

        $s129 = $s457 & 255;

        $i458 = (int) $s129;

        if $i458 != 187 goto label163;

        virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: com.mycila.inject.internal.asm.Label readLabel(int,com.mycila.inject.internal.asm.Label[])>($i126, r10);

     label163:
        i354 = i354 + 1;

        goto label162;

     label164:
        i357 = i21;

     label165:
        if i357 >= i22 goto label219;

        i358 = i357 - i21;

        r135 = r10[i358];

        if r135 == null goto label166;

        interfaceinvoke $r9.<com.mycila.inject.internal.asm.MethodVisitor: void visitLabel(com.mycila.inject.internal.asm.Label)>(r135);

        if z1 != 0 goto label166;

        $i122 = r135.<com.mycila.inject.internal.asm.Label: int b>;

        if $i122 <= 0 goto label166;

        $i123 = r135.<com.mycila.inject.internal.asm.Label: int b>;

        interfaceinvoke $r9.<com.mycila.inject.internal.asm.MethodVisitor: void visitLineNumber(int,com.mycila.inject.internal.asm.Label)>($i123, r135);

     label166:
        if r132 == null goto label188;

        if i335 == i358 goto label167;

        $i460 = (int) -1;

        if i335 != $i460 goto label188;

     label167:
        if z45 == 0 goto label168;

        if z2 == 0 goto label169;

     label168:
        $i462 = (int) -1;

        interfaceinvoke $r9.<com.mycila.inject.internal.asm.MethodVisitor: void visitFrame(int,int,java.lang.Object[],int,java.lang.Object[])>($i462, i336, r132, i338, r133);

        goto label170;

     label169:
        $i464 = (int) -1;

        if i335 == $i464 goto label170;

        interfaceinvoke $r9.<com.mycila.inject.internal.asm.MethodVisitor: void visitFrame(int,int,java.lang.Object[],int,java.lang.Object[])>(b334, i337, r132, i338, r133);

     label170:
        if i333 <= 0 goto label187;

        if z46 == 0 goto label171;

        $i119 = i331;

        i331 = i331 + 1;

        $b120 = r1[$i119];

        s359 = $b120 & 255;

        goto label172;

     label171:
        s359 = 255;

        $i466 = (int) -1;

        i335 = $i466;

     label172:
        i337 = 0;

        if s359 >= 64 goto label173;

        i360 = s359;

        b334 = 3;

        i338 = 0;

        goto label186;

     label173:
        if s359 >= 128 goto label174;

        i360 = s359 - 64;

        i331 = specialinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int a(java.lang.Object[],int,int,char[],com.mycila.inject.internal.asm.Label[])>(r133, 0, i331, r2, r10);

        b334 = 4;

        i338 = 1;

        goto label186;

     label174:
        i360 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>(i331);

        i331 = i331 + 2;

        if s359 != 247 goto label175;

        i331 = specialinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int a(java.lang.Object[],int,int,char[],com.mycila.inject.internal.asm.Label[])>(r133, 0, i331, r2, r10);

        b334 = 4;

        i338 = 1;

        goto label186;

     label175:
        if s359 < 248 goto label176;

        if s359 >= 251 goto label176;

        b334 = 2;

        i337 = 251 - s359;

        i336 = i336 - i337;

        i338 = 0;

        goto label186;

     label176:
        if s359 != 251 goto label177;

        b334 = 3;

        i338 = 0;

        goto label186;

     label177:
        if s359 >= 255 goto label182;

        if z2 == 0 goto label178;

        $i361 = i336;

        goto label179;

     label178:
        $i361 = 0;

     label179:
        i362 = $i361;

        i363 = s359 - 251;

     label180:
        if i363 <= 0 goto label181;

        $i118 = i362;

        i362 = i362 + 1;

        i331 = specialinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int a(java.lang.Object[],int,int,char[],com.mycila.inject.internal.asm.Label[])>(r132, $i118, i331, r2, r10);

        $i468 = (int) -1;

        i363 = i363 + $i468;

        goto label180;

     label181:
        b334 = 1;

        i337 = s359 - 251;

        i336 = i336 + i337;

        i338 = 0;

        goto label186;

     label182:
        b334 = 0;

        $i114 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>(i331);

        i336 = $i114;

        i337 = $i114;

        i364 = $i114;

        i365 = i331 + 2;

        i366 = 0;

     label183:
        if i364 <= 0 goto label184;

        $i117 = i366;

        i366 = i366 + 1;

        i365 = specialinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int a(java.lang.Object[],int,int,char[],com.mycila.inject.internal.asm.Label[])>(r132, $i117, i365, r2, r10);

        $i470 = (int) -1;

        i364 = i364 + $i470;

        goto label183;

     label184:
        $i115 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>(i365);

        i338 = $i115;

        i367 = $i115;

        i331 = i365 + 2;

        i368 = 0;

     label185:
        if i367 <= 0 goto label186;

        $i116 = i368;

        i368 = i368 + 1;

        i331 = specialinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int a(java.lang.Object[],int,int,char[],com.mycila.inject.internal.asm.Label[])>(r133, $i116, i331, r2, r10);

        $i472 = (int) -1;

        i367 = i367 + $i472;

        goto label185;

     label186:
        $i369 = i360 + 1;

        $i370 = i335 + $i369;

        i335 = $i370;

        virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: com.mycila.inject.internal.asm.Label readLabel(int,com.mycila.inject.internal.asm.Label[])>($i370, r10);

        $i474 = (int) -1;

        i333 = i333 + $i474;

        goto label166;

     label187:
        r132 = null;

        goto label166;

     label188:
        $b42 = r1[i357];

        $s475 = (short) $b42;

        $s121 = $s475 & 255;

        $r11 = <com.mycila.inject.internal.asm.ClassWriter: byte[] a>;

        $i476 = (int) $s121;

        $b43 = $r11[$i476];

        $i477 = (int) $b43;

        tableswitch($i477)
        {
            case 0: goto label189;
            case 1: goto label204;
            case 2: goto label205;
            case 3: goto label203;
            case 4: goto label190;
            case 5: goto label215;
            case 6: goto label208;
            case 7: goto label208;
            case 8: goto label193;
            case 9: goto label194;
            case 10: goto label206;
            case 11: goto label207;
            case 12: goto label216;
            case 13: goto label197;
            case 14: goto label200;
            case 15: goto label217;
            case 16: goto label195;
            default: goto label217;
        };

     label189:
        $i478 = (int) $s121;

        interfaceinvoke $r9.<com.mycila.inject.internal.asm.MethodVisitor: void visitInsn(int)>($i478);

        i357 = i357 + 1;

        goto label218;

     label190:
        $i479 = (int) $s121;

        if $i479 <= 54 goto label191;

        $i480 = (int) $s121;

        $i482 = (int) -59;

        i371 = $i480 + $i482;

        $i100 = i371 >> 2;

        $i102 = 54 + $i100;

        $i101 = i371 & 3;

        interfaceinvoke $r9.<com.mycila.inject.internal.asm.MethodVisitor: void visitVarInsn(int,int)>($i102, $i101);

        goto label192;

     label191:
        $i483 = (int) $s121;

        $i485 = (int) -26;

        i372 = $i483 + $i485;

        $i97 = i372 >> 2;

        $i99 = 21 + $i97;

        $i98 = i372 & 3;

        interfaceinvoke $r9.<com.mycila.inject.internal.asm.MethodVisitor: void visitVarInsn(int,int)>($i99, $i98);

     label192:
        i357 = i357 + 1;

        goto label218;

     label193:
        $i88 = i357 + 1;

        $s89 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: short readShort(int)>($i88);

        $i486 = (int) $s89;

        $i90 = i358 + $i486;

        $r19 = r10[$i90];

        $i487 = (int) $s121;

        interfaceinvoke $r9.<com.mycila.inject.internal.asm.MethodVisitor: void visitJumpInsn(int,com.mycila.inject.internal.asm.Label)>($i487, $r19);

        i357 = i357 + 3;

        goto label218;

     label194:
        $i488 = (int) $s121;

        $i85 = $i488 - 33;

        $i84 = i357 + 1;

        $i86 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readInt(int)>($i84);

        $i87 = i358 + $i86;

        $r18 = r10[$i87];

        interfaceinvoke $r9.<com.mycila.inject.internal.asm.MethodVisitor: void visitJumpInsn(int,com.mycila.inject.internal.asm.Label)>($i85, $r18);

        i357 = i357 + 5;

        goto label218;

     label195:
        $i44 = i357 + 1;

        $b45 = r1[$i44];

        $s489 = (short) $b45;

        s373 = $s489 & 255;

        $i490 = (int) s373;

        if $i490 != 132 goto label196;

        $i48 = i357 + 2;

        $i49 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>($i48);

        $i50 = i357 + 4;

        $s51 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: short readShort(int)>($i50);

        $i491 = (int) $s51;

        interfaceinvoke $r9.<com.mycila.inject.internal.asm.MethodVisitor: void visitIincInsn(int,int)>($i49, $i491);

        i357 = i357 + 6;

        goto label218;

     label196:
        $i46 = i357 + 2;

        $i47 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>($i46);

        $i492 = (int) s373;

        interfaceinvoke $r9.<com.mycila.inject.internal.asm.MethodVisitor: void visitVarInsn(int,int)>($i492, $i47);

        i357 = i357 + 4;

        goto label218;

     label197:
        $i63 = i357 + 4;

        $i62 = i358 & 3;

        i374 = $i63 - $i62;

        $i64 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readInt(int)>(i374);

        i375 = i358 + $i64;

        $i65 = i374 + 4;

        $i66 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readInt(int)>($i65);

        $i67 = i374 + 8;

        $i68 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readInt(int)>($i67);

        i357 = i374 + 12;

        $i69 = $i68 - $i66;

        $i70 = $i69 + 1;

        r136 = newarray (com.mycila.inject.internal.asm.Label)[$i70];

        i376 = 0;

     label198:
        $i71 = lengthof r136;

        if i376 >= $i71 goto label199;

        $i72 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readInt(int)>(i357);

        $i73 = i358 + $i72;

        $r15 = r10[$i73];

        r136[i376] = $r15;

        i357 = i357 + 4;

        i376 = i376 + 1;

        goto label198;

     label199:
        $r14 = r10[i375];

        interfaceinvoke $r9.<com.mycila.inject.internal.asm.MethodVisitor: void visitTableSwitchInsn(int,int,com.mycila.inject.internal.asm.Label,com.mycila.inject.internal.asm.Label[])>($i66, $i68, $r14, r136);

        goto label218;

     label200:
        $i53 = i357 + 4;

        $i52 = i358 & 3;

        i377 = $i53 - $i52;

        $i54 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readInt(int)>(i377);

        i378 = i358 + $i54;

        $i55 = i377 + 4;

        $i56 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readInt(int)>($i55);

        i357 = i377 + 8;

        r137 = newarray (int)[$i56];

        r138 = newarray (com.mycila.inject.internal.asm.Label)[$i56];

        i379 = 0;

     label201:
        $i57 = lengthof r137;

        if i379 >= $i57 goto label202;

        $i58 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readInt(int)>(i357);

        r137[i379] = $i58;

        $i59 = i357 + 4;

        $i60 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readInt(int)>($i59);

        $i61 = i358 + $i60;

        $r13 = r10[$i61];

        r138[i379] = $r13;

        i357 = i357 + 8;

        i379 = i379 + 1;

        goto label201;

     label202:
        $r12 = r10[i378];

        interfaceinvoke $r9.<com.mycila.inject.internal.asm.MethodVisitor: void visitLookupSwitchInsn(com.mycila.inject.internal.asm.Label,int[],com.mycila.inject.internal.asm.Label[])>($r12, r137, r138);

        goto label218;

     label203:
        $i103 = i357 + 1;

        $b104 = r1[$i103];

        $s493 = (short) $b104;

        $s105 = $s493 & 255;

        $i494 = (int) $s121;

        $i495 = (int) $s105;

        interfaceinvoke $r9.<com.mycila.inject.internal.asm.MethodVisitor: void visitVarInsn(int,int)>($i494, $i495);

        i357 = i357 + 2;

        goto label218;

     label204:
        $i108 = i357 + 1;

        $b109 = r1[$i108];

        $i496 = (int) $s121;

        $i497 = (int) $b109;

        interfaceinvoke $r9.<com.mycila.inject.internal.asm.MethodVisitor: void visitIntInsn(int,int)>($i496, $i497);

        i357 = i357 + 2;

        goto label218;

     label205:
        $i106 = i357 + 1;

        $s107 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: short readShort(int)>($i106);

        $i498 = (int) $s121;

        $i499 = (int) $s107;

        interfaceinvoke $r9.<com.mycila.inject.internal.asm.MethodVisitor: void visitIntInsn(int,int)>($i498, $i499);

        i357 = i357 + 3;

        goto label218;

     label206:
        $i81 = i357 + 1;

        $b82 = r1[$i81];

        $s500 = (short) $b82;

        $s83 = $s500 & 255;

        $i501 = (int) $s83;

        $r17 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: java.lang.Object readConst(int,char[])>($i501, r2);

        interfaceinvoke $r9.<com.mycila.inject.internal.asm.MethodVisitor: void visitLdcInsn(java.lang.Object)>($r17);

        i357 = i357 + 2;

        goto label218;

     label207:
        $i79 = i357 + 1;

        $i80 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>($i79);

        $r16 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: java.lang.Object readConst(int,char[])>($i80, r2);

        interfaceinvoke $r9.<com.mycila.inject.internal.asm.MethodVisitor: void visitLdcInsn(java.lang.Object)>($r16);

        i357 = i357 + 3;

        goto label218;

     label208:
        $r20 = r0.<com.mycila.inject.internal.asm.ClassReader: int[] a>;

        $i91 = i357 + 1;

        $i92 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>($i91);

        i380 = $r20[$i92];

        $i502 = (int) $s121;

        if $i502 != 186 goto label209;

        r139 = "java/lang/dyn/Dynamic";

        goto label210;

     label209:
        r139 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: java.lang.String readClass(int,char[])>(i380, r2);

        $r21 = r0.<com.mycila.inject.internal.asm.ClassReader: int[] a>;

        $i93 = i380 + 2;

        $i94 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>($i93);

        i380 = $r21[$i94];

     label210:
        $r22 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: java.lang.String readUTF8(int,char[])>(i380, r2);

        $i95 = i380 + 2;

        $r23 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: java.lang.String readUTF8(int,char[])>($i95, r2);

        $i503 = (int) $s121;

        if $i503 >= 182 goto label211;

        $i504 = (int) $s121;

        interfaceinvoke $r9.<com.mycila.inject.internal.asm.MethodVisitor: void visitFieldInsn(int,java.lang.String,java.lang.String,java.lang.String)>($i504, r139, $r22, $r23);

        goto label212;

     label211:
        $i505 = (int) $s121;

        interfaceinvoke $r9.<com.mycila.inject.internal.asm.MethodVisitor: void visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String)>($i505, r139, $r22, $r23);

     label212:
        $i506 = (int) $s121;

        if $i506 == 185 goto label213;

        $i507 = (int) $s121;

        if $i507 != 186 goto label214;

     label213:
        i357 = i357 + 5;

        goto label218;

     label214:
        i357 = i357 + 3;

        goto label218;

     label215:
        $i96 = i357 + 1;

        $r24 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: java.lang.String readClass(int,char[])>($i96, r2);

        $i508 = (int) $s121;

        interfaceinvoke $r9.<com.mycila.inject.internal.asm.MethodVisitor: void visitTypeInsn(int,java.lang.String)>($i508, $r24);

        i357 = i357 + 3;

        goto label218;

     label216:
        $i74 = i357 + 1;

        $b75 = r1[$i74];

        $s509 = (short) $b75;

        $s78 = $s509 & 255;

        $i76 = i357 + 2;

        $b77 = r1[$i76];

        $i510 = (int) $s78;

        $i511 = (int) $b77;

        interfaceinvoke $r9.<com.mycila.inject.internal.asm.MethodVisitor: void visitIincInsn(int,int)>($i510, $i511);

        i357 = i357 + 3;

        goto label218;

     label217:
        $i110 = i357 + 1;

        $r25 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: java.lang.String readClass(int,char[])>($i110, r2);

        $i111 = i357 + 3;

        $b112 = r1[$i111];

        $s512 = (short) $b112;

        $s113 = $s512 & 255;

        $i513 = (int) $s113;

        interfaceinvoke $r9.<com.mycila.inject.internal.asm.MethodVisitor: void visitMultiANewArrayInsn(java.lang.String,int)>($r25, $i513);

        i357 = i357 + 4;

     label218:
        goto label165;

     label219:
        $i25 = i22 - i21;

        r140 = r10[$i25];

        if r140 == null goto label220;

        interfaceinvoke $r9.<com.mycila.inject.internal.asm.MethodVisitor: void visitLabel(com.mycila.inject.internal.asm.Label)>(r140);

     label220:
        if z1 != 0 goto label227;

        if i329 == 0 goto label227;

        r141 = null;

        if i330 == 0 goto label222;

        $i37 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>(i330);

        i381 = $i37 * 3;

        i382 = i330 + 2;

        r141 = newarray (int)[i381];

     label221:
        if i381 <= 0 goto label222;

        $i515 = (int) -1;

        i383 = i381 + $i515;

        $i38 = i382 + 6;

        r141[i383] = $i38;

        $i517 = (int) -1;

        i384 = i383 + $i517;

        $i39 = i382 + 8;

        $i40 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>($i39);

        r141[i384] = $i40;

        $i519 = (int) -1;

        i381 = i384 + $i519;

        $i41 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>(i382);

        r141[i381] = $i41;

        i382 = i382 + 10;

        goto label221;

     label222:
        i385 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>(i329);

        i386 = i329 + 2;

     label223:
        if i385 <= 0 goto label227;

        $i26 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>(i386);

        $i27 = i386 + 2;

        $i28 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>($i27);

        $i29 = i386 + 8;

        $i30 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>($i29);

        r142 = null;

        if r141 == null goto label226;

        i387 = 0;

     label224:
        $i31 = lengthof r141;

        if i387 >= $i31 goto label226;

        $i32 = r141[i387];

        if $i32 != $i26 goto label225;

        $i33 = i387 + 1;

        $i34 = r141[$i33];

        if $i34 != $i30 goto label225;

        $i35 = i387 + 2;

        $i36 = r141[$i35];

        r142 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: java.lang.String readUTF8(int,char[])>($i36, r2);

        goto label226;

     label225:
        i387 = i387 + 3;

        goto label224;

     label226:
        $i388 = i386 + 4;

        $r143 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: java.lang.String readUTF8(int,char[])>($i388, r2);

        $i389 = i386 + 6;

        $r144 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: java.lang.String readUTF8(int,char[])>($i389, r2);

        $r145 = r10[$i26];

        $i390 = $i26 + $i28;

        $r146 = r10[$i390];

        interfaceinvoke $r9.<com.mycila.inject.internal.asm.MethodVisitor: void visitLocalVariable(java.lang.String,java.lang.String,java.lang.String,com.mycila.inject.internal.asm.Label,com.mycila.inject.internal.asm.Label,int)>($r143, $r144, r142, $r145, $r146, $i30);

        i386 = i386 + 10;

        $i521 = (int) -1;

        i385 = i385 + $i521;

        goto label223;

     label227:
        if r134 == null goto label228;

        r147 = r134.<com.mycila.inject.internal.asm.Attribute: com.mycila.inject.internal.asm.Attribute a>;

        r134.<com.mycila.inject.internal.asm.Attribute: com.mycila.inject.internal.asm.Attribute a> = null;

        interfaceinvoke $r9.<com.mycila.inject.internal.asm.MethodVisitor: void visitAttribute(com.mycila.inject.internal.asm.Attribute)>(r134);

        r134 = r147;

        goto label227;

     label228:
        interfaceinvoke $r9.<com.mycila.inject.internal.asm.MethodVisitor: void visitMaxs(int,int)>($i16, $i18);

     label229:
        if $r9 == null goto label230;

        interfaceinvoke $r9.<com.mycila.inject.internal.asm.MethodVisitor: void visitEnd()>();

     label230:
        $i523 = (int) -1;

        i300 = i300 + $i523;

        goto label075;

     label231:
        interfaceinvoke r6.<com.mycila.inject.internal.asm.ClassVisitor: void visitEnd()>();

        return;
    }

    private void a(int, java.lang.String, char[], boolean, com.mycila.inject.internal.asm.MethodVisitor)
    {
        byte[] $r1;
        com.mycila.inject.internal.asm.ClassReader r0;
        short s1, $s10;
        byte $b0;
        com.mycila.inject.internal.asm.MethodVisitor r4;
        int $i2, i3, $i4, $i5, i6, i7, i8, i9, $i11, $i12, $i14;
        com.mycila.inject.internal.asm.AnnotationVisitor $r7, $r8;
        java.lang.String r2, $r6;
        com.mycila.inject.internal.asm.Type[] $r3;
        boolean z0;
        char[] r5;

        r0 := @this: com.mycila.inject.internal.asm.ClassReader;

        i6 := @parameter0: int;

        r2 := @parameter1: java.lang.String;

        r5 := @parameter2: char[];

        z0 := @parameter3: boolean;

        r4 := @parameter4: com.mycila.inject.internal.asm.MethodVisitor;

        $r1 = r0.<com.mycila.inject.internal.asm.ClassReader: byte[] b>;

        i7 = i6 + 1;

        $b0 = $r1[i6];

        $s10 = (short) $b0;

        s1 = $s10 & 255;

        $r3 = staticinvoke <com.mycila.inject.internal.asm.Type: com.mycila.inject.internal.asm.Type[] getArgumentTypes(java.lang.String)>(r2);

        $i2 = lengthof $r3;

        $i11 = (int) s1;

        i3 = $i2 - $i11;

        i8 = 0;

     label1:
        if i8 >= i3 goto label3;

        $r8 = interfaceinvoke r4.<com.mycila.inject.internal.asm.MethodVisitor: com.mycila.inject.internal.asm.AnnotationVisitor visitParameterAnnotation(int,java.lang.String,boolean)>(i8, "Ljava/lang/Synthetic;", 0);

        if $r8 == null goto label2;

        interfaceinvoke $r8.<com.mycila.inject.internal.asm.AnnotationVisitor: void visitEnd()>();

     label2:
        i8 = i8 + 1;

        goto label1;

     label3:
        $i12 = (int) s1;

        $i4 = $i12 + i3;

        if i8 >= $i4 goto label6;

        i9 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>(i7);

        i7 = i7 + 2;

     label4:
        if i9 <= 0 goto label5;

        $r6 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: java.lang.String readUTF8(int,char[])>(i7, r5);

        $r7 = interfaceinvoke r4.<com.mycila.inject.internal.asm.MethodVisitor: com.mycila.inject.internal.asm.AnnotationVisitor visitParameterAnnotation(int,java.lang.String,boolean)>(i8, $r6, z0);

        $i5 = i7 + 2;

        i7 = specialinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int a(int,char[],boolean,com.mycila.inject.internal.asm.AnnotationVisitor)>($i5, r5, 1, $r7);

        $i14 = (int) -1;

        i9 = i9 + $i14;

        goto label4;

     label5:
        i8 = i8 + 1;

        goto label3;

     label6:
        return;
    }

    private int a(int, char[], boolean, com.mycila.inject.internal.asm.AnnotationVisitor)
    {
        com.mycila.inject.internal.asm.ClassReader r0;
        com.mycila.inject.internal.asm.AnnotationVisitor r1;
        int $i0, i1, i2, i3, $i5, $i7;
        char[] r2;
        java.lang.String $r3;
        boolean z0;

        r0 := @this: com.mycila.inject.internal.asm.ClassReader;

        i1 := @parameter0: int;

        r2 := @parameter1: char[];

        z0 := @parameter2: boolean;

        r1 := @parameter3: com.mycila.inject.internal.asm.AnnotationVisitor;

        i2 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>(i1);

        i3 = i1 + 2;

        if z0 == 0 goto label2;

     label1:
        if i2 <= 0 goto label3;

        $i0 = i3 + 2;

        $r3 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: java.lang.String readUTF8(int,char[])>(i3, r2);

        i3 = specialinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int a(int,char[],java.lang.String,com.mycila.inject.internal.asm.AnnotationVisitor)>($i0, r2, $r3, r1);

        $i5 = (int) -1;

        i2 = i2 + $i5;

        goto label1;

     label2:
        if i2 <= 0 goto label3;

        i3 = specialinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int a(int,char[],java.lang.String,com.mycila.inject.internal.asm.AnnotationVisitor)>(i3, r2, null, r1);

        $i7 = (int) -1;

        i2 = i2 + $i7;

        goto label2;

     label3:
        if r1 == null goto label4;

        interfaceinvoke r1.<com.mycila.inject.internal.asm.AnnotationVisitor: void visitEnd()>();

     label4:
        return i3;
    }

    private int a(int, char[], java.lang.String, com.mycila.inject.internal.asm.AnnotationVisitor)
    {
        byte[] $r2, $r10, r25, $r39;
        byte $b0, $b4, $b33, $b52, $b54;
        long $l16, $l25;
        float[] r19;
        com.mycila.inject.internal.asm.ClassReader r1;
        short $s1, $s5, $s13, $s43, $s55, $s74, $s76, $s78;
        boolean[] r11;
        int[] $r12, $r14, $r16, r17, $r18, $r20, $r22, $r24, $r26, $r29, $r31, $r34, $r36;
        java.lang.Short $r42;
        long[] r15;
        com.mycila.inject.internal.asm.AnnotationVisitor r0, $r27, $r28, $r38;
        int $i2, $i3, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14, $i15, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i26, $i27, $i28, $i30, $i31, $i32, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i44, $i45, $i46, $i47, $i49, $i50, $i51, $i53, $i56, $i57, $i58, $i59, $i60, $i61, i62, i63, i64, i65, i66, i67, i68, i69, i70, i71, i72, i73, $i75, $i77, $i79, $i81, $i83, $i85, $i87, $i89, $i91, $i93, $i95;
        java.lang.Boolean $r40;
        java.lang.Object $r32;
        java.lang.Character $r43;
        double[] r21;
        java.lang.String r3, $r5, $r6, $r7, $r8, $r37;
        char[] r4, r23;
        java.lang.Byte $r41;
        boolean $z0;
        float $f0;
        short[] r13;
        com.mycila.inject.internal.asm.Type $r9;
        double $d0;
        char $c29, $c48;

        r1 := @this: com.mycila.inject.internal.asm.ClassReader;

        i62 := @parameter0: int;

        r4 := @parameter1: char[];

        r3 := @parameter2: java.lang.String;

        r0 := @parameter3: com.mycila.inject.internal.asm.AnnotationVisitor;

        if r0 != null goto label05;

        $r39 = r1.<com.mycila.inject.internal.asm.ClassReader: byte[] b>;

        $b54 = $r39[i62];

        $s74 = (short) $b54;

        $s55 = $s74 & 255;

        $i75 = (int) $s55;

        lookupswitch($i75)
        {
            case 64: goto label02;
            case 91: goto label03;
            case 101: goto label01;
            default: goto label04;
        };

     label01:
        $i56 = i62 + 5;

        return $i56;

     label02:
        $i59 = i62 + 3;

        $i60 = specialinvoke r1.<com.mycila.inject.internal.asm.ClassReader: int a(int,char[],boolean,com.mycila.inject.internal.asm.AnnotationVisitor)>($i59, r4, 1, null);

        return $i60;

     label03:
        $i57 = i62 + 1;

        $i58 = specialinvoke r1.<com.mycila.inject.internal.asm.ClassReader: int a(int,char[],boolean,com.mycila.inject.internal.asm.AnnotationVisitor)>($i57, r4, 0, null);

        return $i58;

     label04:
        $i61 = i62 + 3;

        return $i61;

     label05:
        $r2 = r1.<com.mycila.inject.internal.asm.ClassReader: byte[] b>;

        i63 = i62 + 1;

        $b0 = $r2[i62];

        $s76 = (short) $b0;

        $s1 = $s76 & 255;

        $i77 = (int) $s1;

        tableswitch($i77)
        {
            case 64: goto label16;
            case 65: goto label46;
            case 66: goto label07;
            case 67: goto label12;
            case 68: goto label06;
            case 69: goto label46;
            case 70: goto label06;
            case 71: goto label46;
            case 72: goto label46;
            case 73: goto label06;
            case 74: goto label06;
            case 75: goto label46;
            case 76: goto label46;
            case 77: goto label46;
            case 78: goto label46;
            case 79: goto label46;
            case 80: goto label46;
            case 81: goto label46;
            case 82: goto label46;
            case 83: goto label11;
            case 84: goto label46;
            case 85: goto label46;
            case 86: goto label46;
            case 87: goto label46;
            case 88: goto label46;
            case 89: goto label46;
            case 90: goto label08;
            case 91: goto label17;
            case 92: goto label46;
            case 93: goto label46;
            case 94: goto label46;
            case 95: goto label46;
            case 96: goto label46;
            case 97: goto label46;
            case 98: goto label46;
            case 99: goto label15;
            case 100: goto label46;
            case 101: goto label14;
            case 102: goto label46;
            case 103: goto label46;
            case 104: goto label46;
            case 105: goto label46;
            case 106: goto label46;
            case 107: goto label46;
            case 108: goto label46;
            case 109: goto label46;
            case 110: goto label46;
            case 111: goto label46;
            case 112: goto label46;
            case 113: goto label46;
            case 114: goto label46;
            case 115: goto label13;
            default: goto label46;
        };

     label06:
        $i44 = virtualinvoke r1.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>(i63);

        $r32 = virtualinvoke r1.<com.mycila.inject.internal.asm.ClassReader: java.lang.Object readConst(int,char[])>($i44, r4);

        interfaceinvoke r0.<com.mycila.inject.internal.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>(r3, $r32);

        i63 = i63 + 2;

        goto label46;

     label07:
        $r41 = new java.lang.Byte;

        $r36 = r1.<com.mycila.inject.internal.asm.ClassReader: int[] a>;

        $i49 = virtualinvoke r1.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>(i63);

        $i50 = $r36[$i49];

        $i51 = virtualinvoke r1.<com.mycila.inject.internal.asm.ClassReader: int readInt(int)>($i50);

        $b52 = (byte) $i51;

        specialinvoke $r41.<java.lang.Byte: void <init>(byte)>($b52);

        interfaceinvoke r0.<com.mycila.inject.internal.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>(r3, $r41);

        i63 = i63 + 2;

        goto label46;

     label08:
        $r29 = r1.<com.mycila.inject.internal.asm.ClassReader: int[] a>;

        $i37 = virtualinvoke r1.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>(i63);

        $i38 = $r29[$i37];

        $i39 = virtualinvoke r1.<com.mycila.inject.internal.asm.ClassReader: int readInt(int)>($i38);

        if $i39 != 0 goto label09;

        $r40 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        goto label10;

     label09:
        $r40 = <java.lang.Boolean: java.lang.Boolean TRUE>;

     label10:
        interfaceinvoke r0.<com.mycila.inject.internal.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>(r3, $r40);

        i63 = i63 + 2;

        goto label46;

     label11:
        $r42 = new java.lang.Short;

        $r31 = r1.<com.mycila.inject.internal.asm.ClassReader: int[] a>;

        $i40 = virtualinvoke r1.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>(i63);

        $i41 = $r31[$i40];

        $i42 = virtualinvoke r1.<com.mycila.inject.internal.asm.ClassReader: int readInt(int)>($i41);

        $s43 = (short) $i42;

        specialinvoke $r42.<java.lang.Short: void <init>(short)>($s43);

        interfaceinvoke r0.<com.mycila.inject.internal.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>(r3, $r42);

        i63 = i63 + 2;

        goto label46;

     label12:
        $r43 = new java.lang.Character;

        $r34 = r1.<com.mycila.inject.internal.asm.ClassReader: int[] a>;

        $i45 = virtualinvoke r1.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>(i63);

        $i46 = $r34[$i45];

        $i47 = virtualinvoke r1.<com.mycila.inject.internal.asm.ClassReader: int readInt(int)>($i46);

        $c48 = (char) $i47;

        specialinvoke $r43.<java.lang.Character: void <init>(char)>($c48);

        interfaceinvoke r0.<com.mycila.inject.internal.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>(r3, $r43);

        i63 = i63 + 2;

        goto label46;

     label13:
        $r5 = virtualinvoke r1.<com.mycila.inject.internal.asm.ClassReader: java.lang.String readUTF8(int,char[])>(i63, r4);

        interfaceinvoke r0.<com.mycila.inject.internal.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>(r3, $r5);

        i63 = i63 + 2;

        goto label46;

     label14:
        $r6 = virtualinvoke r1.<com.mycila.inject.internal.asm.ClassReader: java.lang.String readUTF8(int,char[])>(i63, r4);

        $i2 = i63 + 2;

        $r7 = virtualinvoke r1.<com.mycila.inject.internal.asm.ClassReader: java.lang.String readUTF8(int,char[])>($i2, r4);

        interfaceinvoke r0.<com.mycila.inject.internal.asm.AnnotationVisitor: void visitEnum(java.lang.String,java.lang.String,java.lang.String)>(r3, $r6, $r7);

        i63 = i63 + 4;

        goto label46;

     label15:
        $r8 = virtualinvoke r1.<com.mycila.inject.internal.asm.ClassReader: java.lang.String readUTF8(int,char[])>(i63, r4);

        $r9 = staticinvoke <com.mycila.inject.internal.asm.Type: com.mycila.inject.internal.asm.Type getType(java.lang.String)>($r8);

        interfaceinvoke r0.<com.mycila.inject.internal.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>(r3, $r9);

        i63 = i63 + 2;

        goto label46;

     label16:
        $i53 = i63 + 2;

        $r37 = virtualinvoke r1.<com.mycila.inject.internal.asm.ClassReader: java.lang.String readUTF8(int,char[])>(i63, r4);

        $r38 = interfaceinvoke r0.<com.mycila.inject.internal.asm.AnnotationVisitor: com.mycila.inject.internal.asm.AnnotationVisitor visitAnnotation(java.lang.String,java.lang.String)>(r3, $r37);

        i63 = specialinvoke r1.<com.mycila.inject.internal.asm.ClassReader: int a(int,char[],boolean,com.mycila.inject.internal.asm.AnnotationVisitor)>($i53, r4, 1, $r38);

        goto label46;

     label17:
        $i3 = virtualinvoke r1.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>(i63);

        i64 = i63 + 2;

        if $i3 != 0 goto label18;

        $i35 = i64 - 2;

        $r28 = interfaceinvoke r0.<com.mycila.inject.internal.asm.AnnotationVisitor: com.mycila.inject.internal.asm.AnnotationVisitor visitArray(java.lang.String)>(r3);

        $i36 = specialinvoke r1.<com.mycila.inject.internal.asm.ClassReader: int a(int,char[],boolean,com.mycila.inject.internal.asm.AnnotationVisitor)>($i35, r4, 0, $r28);

        return $i36;

     label18:
        $r10 = r1.<com.mycila.inject.internal.asm.ClassReader: byte[] b>;

        i65 = i64 + 1;

        $b4 = $r10[i64];

        $s78 = (short) $b4;

        $s5 = $s78 & 255;

        $i79 = (int) $s5;

        tableswitch($i79)
        {
            case 66: goto label19;
            case 67: goto label30;
            case 68: goto label42;
            case 69: goto label45;
            case 70: goto label39;
            case 71: goto label45;
            case 72: goto label45;
            case 73: goto label33;
            case 74: goto label36;
            case 75: goto label45;
            case 76: goto label45;
            case 77: goto label45;
            case 78: goto label45;
            case 79: goto label45;
            case 80: goto label45;
            case 81: goto label45;
            case 82: goto label45;
            case 83: goto label27;
            case 84: goto label45;
            case 85: goto label45;
            case 86: goto label45;
            case 87: goto label45;
            case 88: goto label45;
            case 89: goto label45;
            case 90: goto label22;
            default: goto label45;
        };

     label19:
        r25 = newarray (byte)[$i3];

        i66 = 0;

     label20:
        if i66 >= $i3 goto label21;

        $r26 = r1.<com.mycila.inject.internal.asm.ClassReader: int[] a>;

        $i30 = virtualinvoke r1.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>(i65);

        $i31 = $r26[$i30];

        $i32 = virtualinvoke r1.<com.mycila.inject.internal.asm.ClassReader: int readInt(int)>($i31);

        $b33 = (byte) $i32;

        r25[i66] = $b33;

        i65 = i65 + 3;

        i66 = i66 + 1;

        goto label20;

     label21:
        interfaceinvoke r0.<com.mycila.inject.internal.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>(r3, r25);

        $i81 = (int) -1;

        i63 = i65 + $i81;

        goto label46;

     label22:
        r11 = newarray (boolean)[$i3];

        i67 = 0;

     label23:
        if i67 >= $i3 goto label26;

        $i9 = i67;

        $r12 = r1.<com.mycila.inject.internal.asm.ClassReader: int[] a>;

        $i6 = virtualinvoke r1.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>(i65);

        $i7 = $r12[$i6];

        $i8 = virtualinvoke r1.<com.mycila.inject.internal.asm.ClassReader: int readInt(int)>($i7);

        if $i8 == 0 goto label24;

        $z0 = 1;

        goto label25;

     label24:
        $z0 = 0;

     label25:
        r11[$i9] = $z0;

        i65 = i65 + 3;

        i67 = i67 + 1;

        goto label23;

     label26:
        interfaceinvoke r0.<com.mycila.inject.internal.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>(r3, r11);

        $i83 = (int) -1;

        i63 = i65 + $i83;

        goto label46;

     label27:
        r13 = newarray (short)[$i3];

        i68 = 0;

     label28:
        if i68 >= $i3 goto label29;

        $r14 = r1.<com.mycila.inject.internal.asm.ClassReader: int[] a>;

        $i10 = virtualinvoke r1.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>(i65);

        $i11 = $r14[$i10];

        $i12 = virtualinvoke r1.<com.mycila.inject.internal.asm.ClassReader: int readInt(int)>($i11);

        $s13 = (short) $i12;

        r13[i68] = $s13;

        i65 = i65 + 3;

        i68 = i68 + 1;

        goto label28;

     label29:
        interfaceinvoke r0.<com.mycila.inject.internal.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>(r3, r13);

        $i85 = (int) -1;

        i63 = i65 + $i85;

        goto label46;

     label30:
        r23 = newarray (char)[$i3];

        i69 = 0;

     label31:
        if i69 >= $i3 goto label32;

        $r24 = r1.<com.mycila.inject.internal.asm.ClassReader: int[] a>;

        $i26 = virtualinvoke r1.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>(i65);

        $i27 = $r24[$i26];

        $i28 = virtualinvoke r1.<com.mycila.inject.internal.asm.ClassReader: int readInt(int)>($i27);

        $c29 = (char) $i28;

        r23[i69] = $c29;

        i65 = i65 + 3;

        i69 = i69 + 1;

        goto label31;

     label32:
        interfaceinvoke r0.<com.mycila.inject.internal.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>(r3, r23);

        $i87 = (int) -1;

        i63 = i65 + $i87;

        goto label46;

     label33:
        r17 = newarray (int)[$i3];

        i70 = 0;

     label34:
        if i70 >= $i3 goto label35;

        $r18 = r1.<com.mycila.inject.internal.asm.ClassReader: int[] a>;

        $i17 = virtualinvoke r1.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>(i65);

        $i18 = $r18[$i17];

        $i19 = virtualinvoke r1.<com.mycila.inject.internal.asm.ClassReader: int readInt(int)>($i18);

        r17[i70] = $i19;

        i65 = i65 + 3;

        i70 = i70 + 1;

        goto label34;

     label35:
        interfaceinvoke r0.<com.mycila.inject.internal.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>(r3, r17);

        $i89 = (int) -1;

        i63 = i65 + $i89;

        goto label46;

     label36:
        r15 = newarray (long)[$i3];

        i71 = 0;

     label37:
        if i71 >= $i3 goto label38;

        $r16 = r1.<com.mycila.inject.internal.asm.ClassReader: int[] a>;

        $i14 = virtualinvoke r1.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>(i65);

        $i15 = $r16[$i14];

        $l16 = virtualinvoke r1.<com.mycila.inject.internal.asm.ClassReader: long readLong(int)>($i15);

        r15[i71] = $l16;

        i65 = i65 + 3;

        i71 = i71 + 1;

        goto label37;

     label38:
        interfaceinvoke r0.<com.mycila.inject.internal.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>(r3, r15);

        $i91 = (int) -1;

        i63 = i65 + $i91;

        goto label46;

     label39:
        r19 = newarray (float)[$i3];

        i72 = 0;

     label40:
        if i72 >= $i3 goto label41;

        $r20 = r1.<com.mycila.inject.internal.asm.ClassReader: int[] a>;

        $i20 = virtualinvoke r1.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>(i65);

        $i21 = $r20[$i20];

        $i22 = virtualinvoke r1.<com.mycila.inject.internal.asm.ClassReader: int readInt(int)>($i21);

        $f0 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i22);

        r19[i72] = $f0;

        i65 = i65 + 3;

        i72 = i72 + 1;

        goto label40;

     label41:
        interfaceinvoke r0.<com.mycila.inject.internal.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>(r3, r19);

        $i93 = (int) -1;

        i63 = i65 + $i93;

        goto label46;

     label42:
        r21 = newarray (double)[$i3];

        i73 = 0;

     label43:
        if i73 >= $i3 goto label44;

        $r22 = r1.<com.mycila.inject.internal.asm.ClassReader: int[] a>;

        $i23 = virtualinvoke r1.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>(i65);

        $i24 = $r22[$i23];

        $l25 = virtualinvoke r1.<com.mycila.inject.internal.asm.ClassReader: long readLong(int)>($i24);

        $d0 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($l25);

        r21[i73] = $d0;

        i65 = i65 + 3;

        i73 = i73 + 1;

        goto label43;

     label44:
        interfaceinvoke r0.<com.mycila.inject.internal.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>(r3, r21);

        $i95 = (int) -1;

        i63 = i65 + $i95;

        goto label46;

     label45:
        $i34 = i65 - 3;

        $r27 = interfaceinvoke r0.<com.mycila.inject.internal.asm.AnnotationVisitor: com.mycila.inject.internal.asm.AnnotationVisitor visitArray(java.lang.String)>(r3);

        i63 = specialinvoke r1.<com.mycila.inject.internal.asm.ClassReader: int a(int,char[],boolean,com.mycila.inject.internal.asm.AnnotationVisitor)>($i34, r4, 0, $r27);

     label46:
        return i63;
    }

    private int a(java.lang.Object[], int, int, char[], com.mycila.inject.internal.asm.Label[])
    {
        byte[] $r1;
        java.lang.Object[] r2;
        java.lang.Integer $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        com.mycila.inject.internal.asm.Label[] r12;
        com.mycila.inject.internal.asm.ClassReader r0;
        short s1, $s6;
        byte $b0;
        int i2, $i3, i4, i5, $i7;
        java.lang.String $r4;
        com.mycila.inject.internal.asm.Label $r13;
        char[] r3;

        r0 := @this: com.mycila.inject.internal.asm.ClassReader;

        r2 := @parameter0: java.lang.Object[];

        i2 := @parameter1: int;

        i4 := @parameter2: int;

        r3 := @parameter3: char[];

        r12 := @parameter4: com.mycila.inject.internal.asm.Label[];

        $r1 = r0.<com.mycila.inject.internal.asm.ClassReader: byte[] b>;

        i5 = i4 + 1;

        $b0 = $r1[i4];

        $s6 = (short) $b0;

        s1 = $s6 & 255;

        $i7 = (int) s1;

        tableswitch($i7)
        {
            case 0: goto label01;
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label04;
            case 4: goto label05;
            case 5: goto label06;
            case 6: goto label07;
            case 7: goto label08;
            default: goto label09;
        };

     label01:
        $r11 = <com.mycila.inject.internal.asm.Opcodes: java.lang.Integer TOP>;

        r2[i2] = $r11;

        goto label10;

     label02:
        $r10 = <com.mycila.inject.internal.asm.Opcodes: java.lang.Integer INTEGER>;

        r2[i2] = $r10;

        goto label10;

     label03:
        $r9 = <com.mycila.inject.internal.asm.Opcodes: java.lang.Integer FLOAT>;

        r2[i2] = $r9;

        goto label10;

     label04:
        $r8 = <com.mycila.inject.internal.asm.Opcodes: java.lang.Integer DOUBLE>;

        r2[i2] = $r8;

        goto label10;

     label05:
        $r7 = <com.mycila.inject.internal.asm.Opcodes: java.lang.Integer LONG>;

        r2[i2] = $r7;

        goto label10;

     label06:
        $r6 = <com.mycila.inject.internal.asm.Opcodes: java.lang.Integer NULL>;

        r2[i2] = $r6;

        goto label10;

     label07:
        $r5 = <com.mycila.inject.internal.asm.Opcodes: java.lang.Integer UNINITIALIZED_THIS>;

        r2[i2] = $r5;

        goto label10;

     label08:
        $r4 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: java.lang.String readClass(int,char[])>(i5, r3);

        r2[i2] = $r4;

        i5 = i5 + 2;

        goto label10;

     label09:
        $i3 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>(i5);

        $r13 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: com.mycila.inject.internal.asm.Label readLabel(int,com.mycila.inject.internal.asm.Label[])>($i3, r12);

        r2[i2] = $r13;

        i5 = i5 + 2;

     label10:
        return i5;
    }

    protected com.mycila.inject.internal.asm.Label readLabel(int, com.mycila.inject.internal.asm.Label[])
    {
        int i0;
        com.mycila.inject.internal.asm.Label $r1, $r2, $r3;
        com.mycila.inject.internal.asm.Label[] r0;
        com.mycila.inject.internal.asm.ClassReader r4;

        r4 := @this: com.mycila.inject.internal.asm.ClassReader;

        i0 := @parameter0: int;

        r0 := @parameter1: com.mycila.inject.internal.asm.Label[];

        $r1 = r0[i0];

        if $r1 != null goto label1;

        $r3 = new com.mycila.inject.internal.asm.Label;

        specialinvoke $r3.<com.mycila.inject.internal.asm.Label: void <init>()>();

        r0[i0] = $r3;

     label1:
        $r2 = r0[i0];

        return $r2;
    }

    private com.mycila.inject.internal.asm.Attribute a(com.mycila.inject.internal.asm.Attribute[], java.lang.String, int, int, char[], int, com.mycila.inject.internal.asm.Label[])
    {
        com.mycila.inject.internal.asm.Label[] r8;
        com.mycila.inject.internal.asm.ClassReader r3;
        com.mycila.inject.internal.asm.Attribute[] r0;
        int $i0, i1, i2, i3, i4, $i6;
        java.lang.String r2, $r6;
        boolean $z0;
        char[] r7;
        com.mycila.inject.internal.asm.Attribute $r4, $r5, $r9, $r10, $r11;

        r3 := @this: com.mycila.inject.internal.asm.ClassReader;

        r0 := @parameter0: com.mycila.inject.internal.asm.Attribute[];

        r2 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r7 := @parameter4: char[];

        i3 := @parameter5: int;

        r8 := @parameter6: com.mycila.inject.internal.asm.Label[];

        i4 = 0;

     label1:
        $i0 = lengthof r0;

        if i4 >= $i0 goto label3;

        $r5 = r0[i4];

        $r6 = $r5.<com.mycila.inject.internal.asm.Attribute: java.lang.String type>;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label2;

        $r9 = r0[i4];

        $r10 = virtualinvoke $r9.<com.mycila.inject.internal.asm.Attribute: com.mycila.inject.internal.asm.Attribute read(com.mycila.inject.internal.asm.ClassReader,int,int,char[],int,com.mycila.inject.internal.asm.Label[])>(r3, i1, i2, r7, i3, r8);

        return $r10;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        $r11 = new com.mycila.inject.internal.asm.Attribute;

        specialinvoke $r11.<com.mycila.inject.internal.asm.Attribute: void <init>(java.lang.String)>(r2);

        $i6 = (int) -1;

        $r4 = virtualinvoke $r11.<com.mycila.inject.internal.asm.Attribute: com.mycila.inject.internal.asm.Attribute read(com.mycila.inject.internal.asm.ClassReader,int,int,char[],int,com.mycila.inject.internal.asm.Label[])>(r3, i1, i2, null, $i6, null);

        return $r4;
    }

    public int getItem(int)
    {
        int[] $r1;
        int i0, $i1;
        com.mycila.inject.internal.asm.ClassReader r0;

        r0 := @this: com.mycila.inject.internal.asm.ClassReader;

        i0 := @parameter0: int;

        $r1 = r0.<com.mycila.inject.internal.asm.ClassReader: int[] a>;

        $i1 = $r1[i0];

        return $i1;
    }

    public int readByte(int)
    {
        byte[] $r1;
        short $s2, $s3;
        byte $b1;
        int i0, $i4;
        com.mycila.inject.internal.asm.ClassReader r0;

        r0 := @this: com.mycila.inject.internal.asm.ClassReader;

        i0 := @parameter0: int;

        $r1 = r0.<com.mycila.inject.internal.asm.ClassReader: byte[] b>;

        $b1 = $r1[i0];

        $s3 = (short) $b1;

        $s2 = $s3 & 255;

        $i4 = (int) $s2;

        return $i4;
    }

    public int readUnsignedShort(int)
    {
        byte[] r1;
        com.mycila.inject.internal.asm.ClassReader r0;
        short $s2, $s5, $s8, $s10;
        byte $b1, $b4;
        int i0, $i3, $i6, $i7, $i9, $i11;

        r0 := @this: com.mycila.inject.internal.asm.ClassReader;

        i0 := @parameter0: int;

        r1 = r0.<com.mycila.inject.internal.asm.ClassReader: byte[] b>;

        $b1 = r1[i0];

        $s8 = (short) $b1;

        $s2 = $s8 & 255;

        $i9 = (int) $s2;

        $i6 = $i9 << 8;

        $i3 = i0 + 1;

        $b4 = r1[$i3];

        $s10 = (short) $b4;

        $s5 = $s10 & 255;

        $i11 = (int) $s5;

        $i7 = $i6 | $i11;

        return $i7;
    }

    public short readShort(int)
    {
        byte[] r1;
        com.mycila.inject.internal.asm.ClassReader r0;
        short $s2, $s5, $s8, $s9, $s11;
        byte $b1, $b4;
        int i0, $i3, $i6, $i7, $i10, $i12;

        r0 := @this: com.mycila.inject.internal.asm.ClassReader;

        i0 := @parameter0: int;

        r1 = r0.<com.mycila.inject.internal.asm.ClassReader: byte[] b>;

        $b1 = r1[i0];

        $s9 = (short) $b1;

        $s2 = $s9 & 255;

        $i10 = (int) $s2;

        $i6 = $i10 << 8;

        $i3 = i0 + 1;

        $b4 = r1[$i3];

        $s11 = (short) $b4;

        $s5 = $s11 & 255;

        $i12 = (int) $s5;

        $i7 = $i6 | $i12;

        $s8 = (short) $i7;

        return $s8;
    }

    public int readInt(int)
    {
        byte[] r1;
        com.mycila.inject.internal.asm.ClassReader r0;
        short $s2, $s5, $s10, $s15, $s18, $s20, $s22, $s24;
        byte $b1, $b4, $b9, $b14;
        int i0, $i3, $i6, $i7, $i8, $i11, $i12, $i13, $i16, $i17, $i19, $i21, $i23, $i25;

        r0 := @this: com.mycila.inject.internal.asm.ClassReader;

        i0 := @parameter0: int;

        r1 = r0.<com.mycila.inject.internal.asm.ClassReader: byte[] b>;

        $b1 = r1[i0];

        $s18 = (short) $b1;

        $s2 = $s18 & 255;

        $i19 = (int) $s2;

        $i7 = $i19 << 24;

        $i3 = i0 + 1;

        $b4 = r1[$i3];

        $s20 = (short) $b4;

        $s5 = $s20 & 255;

        $i21 = (int) $s5;

        $i6 = $i21 << 16;

        $i12 = $i7 | $i6;

        $i8 = i0 + 2;

        $b9 = r1[$i8];

        $s22 = (short) $b9;

        $s10 = $s22 & 255;

        $i23 = (int) $s10;

        $i11 = $i23 << 8;

        $i16 = $i12 | $i11;

        $i13 = i0 + 3;

        $b14 = r1[$i13];

        $s24 = (short) $b14;

        $s15 = $s24 & 255;

        $i25 = (int) $s15;

        $i17 = $i16 | $i25;

        return $i17;
    }

    public long readLong(int)
    {
        long l2, $l5, l6, $l7, $l8;
        com.mycila.inject.internal.asm.ClassReader r0;
        int i0, $i1, $i3, $i4;

        r0 := @this: com.mycila.inject.internal.asm.ClassReader;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readInt(int)>(i0);

        l2 = (long) $i1;

        $i3 = i0 + 4;

        $i4 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readInt(int)>($i3);

        $l5 = (long) $i4;

        l6 = $l5 & 4294967295L;

        $l7 = l2 << 32;

        $l8 = $l7 | l6;

        return $l8;
    }

    public java.lang.String readUTF8(int, char[])
    {
        java.lang.String[] $r1, $r4;
        com.mycila.inject.internal.asm.ClassReader r0;
        int[] $r3;
        int $i0, $i1, $i2, i3, i4;
        char[] r5;
        java.lang.String r2, $r6;

        r0 := @this: com.mycila.inject.internal.asm.ClassReader;

        i3 := @parameter0: int;

        r5 := @parameter1: char[];

        $i0 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>(i3);

        $r1 = r0.<com.mycila.inject.internal.asm.ClassReader: java.lang.String[] c>;

        r2 = $r1[$i0];

        if r2 == null goto label1;

        return r2;

     label1:
        $r3 = r0.<com.mycila.inject.internal.asm.ClassReader: int[] a>;

        i4 = $r3[$i0];

        $r4 = r0.<com.mycila.inject.internal.asm.ClassReader: java.lang.String[] c>;

        $i1 = i4 + 2;

        $i2 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>(i4);

        $r6 = specialinvoke r0.<com.mycila.inject.internal.asm.ClassReader: java.lang.String a(int,int,char[])>($i1, $i2, r5);

        $r4[$i0] = $r6;

        return $r6;
    }

    private java.lang.String a(int, int, char[])
    {
        byte[] r1;
        com.mycila.inject.internal.asm.ClassReader r0;
        short $s11, $s12, s20, $s21;
        byte $b3, $b7, b17, b19;
        int i0, i1, $i2, $i4, $i5, $i6, $i8, $i9, $i13, i15, i16, i18, $i22, $i23, $i24, $i25, $i26;
        java.lang.String $r4;
        char $c10, $c14;
        char[] r3;

        r0 := @this: com.mycila.inject.internal.asm.ClassReader;

        i15 := @parameter0: int;

        i0 := @parameter1: int;

        r3 := @parameter2: char[];

        i1 = i15 + i0;

        r1 = r0.<com.mycila.inject.internal.asm.ClassReader: byte[] b>;

        i16 = 0;

        b17 = 0;

        i18 = 0;

     label1:
        if i15 >= i1 goto label8;

        $i2 = i15;

        i15 = i15 + 1;

        b19 = r1[$i2];

        tableswitch(b17)
        {
            case 0: goto label2;
            case 1: goto label5;
            case 2: goto label6;
            default: goto label7;
        };

     label2:
        $s21 = (short) b19;

        s20 = $s21 & 255;

        $i22 = (int) s20;

        if $i22 >= 128 goto label3;

        $i13 = i16;

        i16 = i16 + 1;

        $c14 = (char) s20;

        r3[$i13] = $c14;

        goto label7;

     label3:
        $i23 = (int) s20;

        if $i23 >= 224 goto label4;

        $i24 = (int) s20;

        if $i24 <= 191 goto label4;

        $s12 = s20 & 31;

        i18 = (char) $s12;

        b17 = 1;

        goto label7;

     label4:
        $s11 = s20 & 15;

        i18 = (char) $s11;

        b17 = 2;

        goto label7;

     label5:
        $i6 = i16;

        i16 = i16 + 1;

        $i8 = i18 << 6;

        $b7 = b19 & 63;

        $i25 = (int) $b7;

        $i9 = $i8 | $i25;

        $c10 = (char) $i9;

        r3[$i6] = $c10;

        b17 = 0;

        goto label7;

     label6:
        $i4 = i18 << 6;

        $b3 = b19 & 63;

        $i26 = (int) $b3;

        $i5 = $i4 | $i26;

        i18 = (char) $i5;

        b17 = 1;

     label7:
        goto label1;

     label8:
        $r4 = new java.lang.String;

        specialinvoke $r4.<java.lang.String: void <init>(char[],int,int)>(r3, 0, i16);

        return $r4;
    }

    public java.lang.String readClass(int, char[])
    {
        int[] $r1;
        int i0, $i1, $i2;
        char[] r2;
        java.lang.String $r3;
        com.mycila.inject.internal.asm.ClassReader r0;

        r0 := @this: com.mycila.inject.internal.asm.ClassReader;

        i0 := @parameter0: int;

        r2 := @parameter1: char[];

        $r1 = r0.<com.mycila.inject.internal.asm.ClassReader: int[] a>;

        $i1 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readUnsignedShort(int)>(i0);

        $i2 = $r1[$i1];

        $r3 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: java.lang.String readUTF8(int,char[])>($i2, r2);

        return $r3;
    }

    public java.lang.Object readConst(int, char[])
    {
        byte[] $r2;
        java.lang.Float $r12;
        java.lang.Double $r14;
        com.mycila.inject.internal.asm.Type $r5;
        long $l4, $l5;
        java.lang.Integer $r11;
        com.mycila.inject.internal.asm.ClassReader r0;
        byte $b3;
        int[] $r1;
        java.lang.Long $r13;
        int i0, i1, $i2, $i6, $i7, $i8;
        java.lang.String $r4, $r10;
        double $d0;
        char[] r3;
        float $f0;

        r0 := @this: com.mycila.inject.internal.asm.ClassReader;

        i0 := @parameter0: int;

        r3 := @parameter1: char[];

        $r1 = r0.<com.mycila.inject.internal.asm.ClassReader: int[] a>;

        i1 = $r1[i0];

        $r2 = r0.<com.mycila.inject.internal.asm.ClassReader: byte[] b>;

        $i2 = i1 - 1;

        $b3 = $r2[$i2];

        $i8 = (int) $b3;

        tableswitch($i8)
        {
            case 3: goto label1;
            case 4: goto label2;
            case 5: goto label3;
            case 6: goto label4;
            case 7: goto label5;
            default: goto label6;
        };

     label1:
        $r11 = new java.lang.Integer;

        $i7 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readInt(int)>(i1);

        specialinvoke $r11.<java.lang.Integer: void <init>(int)>($i7);

        return $r11;

     label2:
        $r12 = new java.lang.Float;

        $i6 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: int readInt(int)>(i1);

        $f0 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i6);

        specialinvoke $r12.<java.lang.Float: void <init>(float)>($f0);

        return $r12;

     label3:
        $r13 = new java.lang.Long;

        $l5 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: long readLong(int)>(i1);

        specialinvoke $r13.<java.lang.Long: void <init>(long)>($l5);

        return $r13;

     label4:
        $r14 = new java.lang.Double;

        $l4 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: long readLong(int)>(i1);

        $d0 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($l4);

        specialinvoke $r14.<java.lang.Double: void <init>(double)>($d0);

        return $r14;

     label5:
        $r4 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: java.lang.String readUTF8(int,char[])>(i1, r3);

        $r5 = staticinvoke <com.mycila.inject.internal.asm.Type: com.mycila.inject.internal.asm.Type getObjectType(java.lang.String)>($r4);

        return $r5;

     label6:
        $r10 = virtualinvoke r0.<com.mycila.inject.internal.asm.ClassReader: java.lang.String readUTF8(int,char[])>(i1, r3);

        return $r10;
    }

    public static void <clinit>()
    {
        <com.mycila.inject.internal.asm.ClassReader: int EXPAND_FRAMES> = 8;

        <com.mycila.inject.internal.asm.ClassReader: int SKIP_FRAMES> = 4;

        <com.mycila.inject.internal.asm.ClassReader: int SKIP_DEBUG> = 2;

        <com.mycila.inject.internal.asm.ClassReader: int SKIP_CODE> = 1;

        return;
    }
}
