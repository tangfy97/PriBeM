public class com.mongodb.gridfs.GridFS extends java.lang.Object
{
    public static final int DEFAULT_CHUNKSIZE;
    public static final java.lang.String DEFAULT_BUCKET;
    protected final com.mongodb.DB _db;
    protected final java.lang.String _bucketName;
    protected final com.mongodb.DBCollection _filesCollection;
    protected final com.mongodb.DBCollection _chunkCollection;

    public void <init>(com.mongodb.DB)
    {
        com.mongodb.DB r1;
        com.mongodb.gridfs.GridFS r0;

        r0 := @this: com.mongodb.gridfs.GridFS;

        r1 := @parameter0: com.mongodb.DB;

        specialinvoke r0.<com.mongodb.gridfs.GridFS: void <init>(com.mongodb.DB,java.lang.String)>(r1, "fs");

        return;
    }

    public void <init>(com.mongodb.DB, java.lang.String)
    {
        java.lang.Integer $r19, $r21;
        com.mongodb.DBObject $r23;
        java.lang.String r2, $r5, $r8, $r12, $r15;
        com.mongodb.BasicDBObjectBuilder $r18, $r20, $r22;
        com.mongodb.DBCollection $r9, $r16, $r17, $r24;
        com.mongodb.gridfs.GridFS r0;
        com.mongodb.DB r1, $r4, $r11;
        java.lang.StringBuilder $r3, $r6, $r7, $r10, $r13, $r14;

        r0 := @this: com.mongodb.gridfs.GridFS;

        r1 := @parameter0: com.mongodb.DB;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.mongodb.gridfs.GridFS: com.mongodb.DB _db> = r1;

        r0.<com.mongodb.gridfs.GridFS: java.lang.String _bucketName> = r2;

        $r4 = r0.<com.mongodb.gridfs.GridFS: com.mongodb.DB _db>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = r0.<com.mongodb.gridfs.GridFS: java.lang.String _bucketName>;

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".files");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = virtualinvoke $r4.<com.mongodb.DB: com.mongodb.DBCollection getCollection(java.lang.String)>($r8);

        r0.<com.mongodb.gridfs.GridFS: com.mongodb.DBCollection _filesCollection> = $r9;

        $r11 = r0.<com.mongodb.gridfs.GridFS: com.mongodb.DB _db>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = r0.<com.mongodb.gridfs.GridFS: java.lang.String _bucketName>;

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".chunks");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = virtualinvoke $r11.<com.mongodb.DB: com.mongodb.DBCollection getCollection(java.lang.String)>($r15);

        r0.<com.mongodb.gridfs.GridFS: com.mongodb.DBCollection _chunkCollection> = $r16;

        $r17 = r0.<com.mongodb.gridfs.GridFS: com.mongodb.DBCollection _chunkCollection>;

        $r18 = staticinvoke <com.mongodb.BasicDBObjectBuilder: com.mongodb.BasicDBObjectBuilder start()>();

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r20 = virtualinvoke $r18.<com.mongodb.BasicDBObjectBuilder: com.mongodb.BasicDBObjectBuilder add(java.lang.String,java.lang.Object)>("files_id", $r19);

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r22 = virtualinvoke $r20.<com.mongodb.BasicDBObjectBuilder: com.mongodb.BasicDBObjectBuilder add(java.lang.String,java.lang.Object)>("n", $r21);

        $r23 = virtualinvoke $r22.<com.mongodb.BasicDBObjectBuilder: com.mongodb.DBObject get()>();

        virtualinvoke $r17.<com.mongodb.DBCollection: void ensureIndex(com.mongodb.DBObject)>($r23);

        $r24 = r0.<com.mongodb.gridfs.GridFS: com.mongodb.DBCollection _filesCollection>;

        virtualinvoke $r24.<com.mongodb.DBCollection: void setObjectClass(java.lang.Class)>(class "Lcom/mongodb/gridfs/GridFSDBFile;");

        return;
    }

    public com.mongodb.DBCursor getFileList()
    {
        com.mongodb.DBCursor $r2, $r5;
        com.mongodb.DBCollection $r1;
        com.mongodb.BasicDBObject $r3;
        java.lang.Integer $r4;
        com.mongodb.gridfs.GridFS r0;

        r0 := @this: com.mongodb.gridfs.GridFS;

        $r1 = r0.<com.mongodb.gridfs.GridFS: com.mongodb.DBCollection _filesCollection>;

        $r2 = virtualinvoke $r1.<com.mongodb.DBCollection: com.mongodb.DBCursor find()>();

        $r3 = new com.mongodb.BasicDBObject;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        specialinvoke $r3.<com.mongodb.BasicDBObject: void <init>(java.lang.String,java.lang.Object)>("filename", $r4);

        $r5 = virtualinvoke $r2.<com.mongodb.DBCursor: com.mongodb.DBCursor sort(com.mongodb.DBObject)>($r3);

        return $r5;
    }

    public com.mongodb.DBCursor getFileList(com.mongodb.DBObject)
    {
        com.mongodb.DBObject r1;
        com.mongodb.DBCursor $r3, $r6;
        com.mongodb.DBCollection $r2;
        com.mongodb.BasicDBObject $r4;
        java.lang.Integer $r5;
        com.mongodb.gridfs.GridFS r0;

        r0 := @this: com.mongodb.gridfs.GridFS;

        r1 := @parameter0: com.mongodb.DBObject;

        $r2 = r0.<com.mongodb.gridfs.GridFS: com.mongodb.DBCollection _filesCollection>;

        $r3 = virtualinvoke $r2.<com.mongodb.DBCollection: com.mongodb.DBCursor find(com.mongodb.DBObject)>(r1);

        $r4 = new com.mongodb.BasicDBObject;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        specialinvoke $r4.<com.mongodb.BasicDBObject: void <init>(java.lang.String,java.lang.Object)>("filename", $r5);

        $r6 = virtualinvoke $r3.<com.mongodb.DBCursor: com.mongodb.DBCursor sort(com.mongodb.DBObject)>($r4);

        return $r6;
    }

    public com.mongodb.gridfs.GridFSDBFile find(org.bson.types.ObjectId)
    {
        org.bson.types.ObjectId r1;
        com.mongodb.gridfs.GridFS r0;
        com.mongodb.gridfs.GridFSDBFile $r2;

        r0 := @this: com.mongodb.gridfs.GridFS;

        r1 := @parameter0: org.bson.types.ObjectId;

        $r2 = virtualinvoke r0.<com.mongodb.gridfs.GridFS: com.mongodb.gridfs.GridFSDBFile findOne(org.bson.types.ObjectId)>(r1);

        return $r2;
    }

    public com.mongodb.gridfs.GridFSDBFile findOne(org.bson.types.ObjectId)
    {
        com.mongodb.gridfs.GridFSDBFile $r3;
        com.mongodb.BasicDBObject $r1;
        org.bson.types.ObjectId r2;
        com.mongodb.gridfs.GridFS r0;

        r0 := @this: com.mongodb.gridfs.GridFS;

        r2 := @parameter0: org.bson.types.ObjectId;

        $r1 = new com.mongodb.BasicDBObject;

        specialinvoke $r1.<com.mongodb.BasicDBObject: void <init>(java.lang.String,java.lang.Object)>("_id", r2);

        $r3 = virtualinvoke r0.<com.mongodb.gridfs.GridFS: com.mongodb.gridfs.GridFSDBFile findOne(com.mongodb.DBObject)>($r1);

        return $r3;
    }

    public com.mongodb.gridfs.GridFSDBFile findOne(java.lang.String)
    {
        com.mongodb.gridfs.GridFSDBFile $r3;
        com.mongodb.BasicDBObject $r1;
        java.lang.String r2;
        com.mongodb.gridfs.GridFS r0;

        r0 := @this: com.mongodb.gridfs.GridFS;

        r2 := @parameter0: java.lang.String;

        $r1 = new com.mongodb.BasicDBObject;

        specialinvoke $r1.<com.mongodb.BasicDBObject: void <init>(java.lang.String,java.lang.Object)>("filename", r2);

        $r3 = virtualinvoke r0.<com.mongodb.gridfs.GridFS: com.mongodb.gridfs.GridFSDBFile findOne(com.mongodb.DBObject)>($r1);

        return $r3;
    }

    public com.mongodb.gridfs.GridFSDBFile findOne(com.mongodb.DBObject)
    {
        com.mongodb.DBObject r1, $r3;
        com.mongodb.gridfs.GridFSDBFile $r4;
        com.mongodb.DBCollection $r2;
        com.mongodb.gridfs.GridFS r0;

        r0 := @this: com.mongodb.gridfs.GridFS;

        r1 := @parameter0: com.mongodb.DBObject;

        $r2 = r0.<com.mongodb.gridfs.GridFS: com.mongodb.DBCollection _filesCollection>;

        $r3 = virtualinvoke $r2.<com.mongodb.DBCollection: com.mongodb.DBObject findOne(com.mongodb.DBObject)>(r1);

        $r4 = specialinvoke r0.<com.mongodb.gridfs.GridFS: com.mongodb.gridfs.GridFSDBFile _fix(java.lang.Object)>($r3);

        return $r4;
    }

    public java.util.List find(java.lang.String)
    {
        java.util.List $r3;
        com.mongodb.BasicDBObject $r1;
        java.lang.String r2;
        com.mongodb.gridfs.GridFS r0;

        r0 := @this: com.mongodb.gridfs.GridFS;

        r2 := @parameter0: java.lang.String;

        $r1 = new com.mongodb.BasicDBObject;

        specialinvoke $r1.<com.mongodb.BasicDBObject: void <init>(java.lang.String,java.lang.Object)>("filename", r2);

        $r3 = virtualinvoke r0.<com.mongodb.gridfs.GridFS: java.util.List find(com.mongodb.DBObject)>($r1);

        return $r3;
    }

    public java.util.List find(com.mongodb.DBObject)
    {
        com.mongodb.gridfs.GridFSDBFile $r6;
        com.mongodb.DBCollection $r3;
        java.util.ArrayList $r0;
        com.mongodb.gridfs.GridFS r1;
        com.mongodb.DBObject r2, $r5;
        com.mongodb.DBCursor $r4;
        boolean $z0;

        r1 := @this: com.mongodb.gridfs.GridFS;

        r2 := @parameter0: com.mongodb.DBObject;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r3 = r1.<com.mongodb.gridfs.GridFS: com.mongodb.DBCollection _filesCollection>;

        $r4 = virtualinvoke $r3.<com.mongodb.DBCollection: com.mongodb.DBCursor find(com.mongodb.DBObject)>(r2);

     label1:
        $z0 = virtualinvoke $r4.<com.mongodb.DBCursor: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = virtualinvoke $r4.<com.mongodb.DBCursor: com.mongodb.DBObject next()>();

        $r6 = specialinvoke r1.<com.mongodb.gridfs.GridFS: com.mongodb.gridfs.GridFSDBFile _fix(java.lang.Object)>($r5);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r6);

        goto label1;

     label2:
        return $r0;
    }

    private com.mongodb.gridfs.GridFSDBFile _fix(java.lang.Object)
    {
        com.mongodb.gridfs.GridFSDBFile r1;
        java.lang.Object r0;
        java.lang.RuntimeException $r3;
        boolean $z0;
        com.mongodb.gridfs.GridFS r2;

        r2 := @this: com.mongodb.gridfs.GridFS;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        return null;

     label1:
        $z0 = r0 instanceof com.mongodb.gridfs.GridFSDBFile;

        if $z0 != 0 goto label2;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("somehow didn\'t get a GridFSDBFile");

        throw $r3;

     label2:
        r1 = (com.mongodb.gridfs.GridFSDBFile) r0;

        r1.<com.mongodb.gridfs.GridFSDBFile: com.mongodb.gridfs.GridFS _fs> = r2;

        return r1;
    }

    public void remove(org.bson.types.ObjectId)
    {
        com.mongodb.BasicDBObject $r1, $r4;
        com.mongodb.DBCollection $r3, $r5;
        org.bson.types.ObjectId r2;
        com.mongodb.gridfs.GridFS r0;

        r0 := @this: com.mongodb.gridfs.GridFS;

        r2 := @parameter0: org.bson.types.ObjectId;

        $r3 = r0.<com.mongodb.gridfs.GridFS: com.mongodb.DBCollection _filesCollection>;

        $r1 = new com.mongodb.BasicDBObject;

        specialinvoke $r1.<com.mongodb.BasicDBObject: void <init>(java.lang.String,java.lang.Object)>("_id", r2);

        virtualinvoke $r3.<com.mongodb.DBCollection: com.mongodb.WriteResult remove(com.mongodb.DBObject)>($r1);

        $r5 = r0.<com.mongodb.gridfs.GridFS: com.mongodb.DBCollection _chunkCollection>;

        $r4 = new com.mongodb.BasicDBObject;

        specialinvoke $r4.<com.mongodb.BasicDBObject: void <init>(java.lang.String,java.lang.Object)>("files_id", r2);

        virtualinvoke $r5.<com.mongodb.DBCollection: com.mongodb.WriteResult remove(com.mongodb.DBObject)>($r4);

        return;
    }

    public void remove(java.lang.String)
    {
        com.mongodb.BasicDBObject $r1;
        java.lang.String r2;
        com.mongodb.gridfs.GridFS r0;

        r0 := @this: com.mongodb.gridfs.GridFS;

        r2 := @parameter0: java.lang.String;

        $r1 = new com.mongodb.BasicDBObject;

        specialinvoke $r1.<com.mongodb.BasicDBObject: void <init>(java.lang.String,java.lang.Object)>("filename", r2);

        virtualinvoke r0.<com.mongodb.gridfs.GridFS: void remove(com.mongodb.DBObject)>($r1);

        return;
    }

    public void remove(com.mongodb.DBObject)
    {
        java.util.List $r2;
        com.mongodb.DBObject r1;
        java.util.Iterator $r3;
        com.mongodb.gridfs.GridFSDBFile r5;
        java.lang.Object $r4;
        com.mongodb.gridfs.GridFS r0;
        boolean $z0;

        r0 := @this: com.mongodb.gridfs.GridFS;

        r1 := @parameter0: com.mongodb.DBObject;

        $r2 = virtualinvoke r0.<com.mongodb.gridfs.GridFS: java.util.List find(com.mongodb.DBObject)>(r1);

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.mongodb.gridfs.GridFSDBFile) $r4;

        virtualinvoke r5.<com.mongodb.gridfs.GridFSDBFile: void remove()>();

        goto label1;

     label2:
        return;
    }

    public com.mongodb.gridfs.GridFSInputFile createFile(byte[])
    {
        byte[] r2;
        java.io.ByteArrayInputStream $r1;
        com.mongodb.gridfs.GridFSInputFile $r3;
        com.mongodb.gridfs.GridFS r0;

        r0 := @this: com.mongodb.gridfs.GridFS;

        r2 := @parameter0: byte[];

        $r1 = new java.io.ByteArrayInputStream;

        specialinvoke $r1.<java.io.ByteArrayInputStream: void <init>(byte[])>(r2);

        $r3 = virtualinvoke r0.<com.mongodb.gridfs.GridFS: com.mongodb.gridfs.GridFSInputFile createFile(java.io.InputStream)>($r1);

        return $r3;
    }

    public com.mongodb.gridfs.GridFSInputFile createFile(java.io.File) throws java.io.IOException
    {
        com.mongodb.gridfs.GridFSInputFile $r4;
        java.io.FileInputStream $r1;
        java.lang.String $r3;
        java.io.File r2;
        com.mongodb.gridfs.GridFS r0;

        r0 := @this: com.mongodb.gridfs.GridFS;

        r2 := @parameter0: java.io.File;

        $r1 = new java.io.FileInputStream;

        specialinvoke $r1.<java.io.FileInputStream: void <init>(java.io.File)>(r2);

        $r3 = virtualinvoke r2.<java.io.File: java.lang.String getName()>();

        $r4 = virtualinvoke r0.<com.mongodb.gridfs.GridFS: com.mongodb.gridfs.GridFSInputFile createFile(java.io.InputStream,java.lang.String)>($r1, $r3);

        return $r4;
    }

    public com.mongodb.gridfs.GridFSInputFile createFile(java.io.InputStream)
    {
        com.mongodb.gridfs.GridFSInputFile $r2;
        com.mongodb.gridfs.GridFS r0;
        java.io.InputStream r1;

        r0 := @this: com.mongodb.gridfs.GridFS;

        r1 := @parameter0: java.io.InputStream;

        $r2 = virtualinvoke r0.<com.mongodb.gridfs.GridFS: com.mongodb.gridfs.GridFSInputFile createFile(java.io.InputStream,java.lang.String)>(r1, null);

        return $r2;
    }

    public com.mongodb.gridfs.GridFSInputFile createFile(java.io.InputStream, java.lang.String)
    {
        com.mongodb.gridfs.GridFSInputFile $r0;
        java.lang.String r3;
        com.mongodb.gridfs.GridFS r1;
        java.io.InputStream r2;

        r1 := @this: com.mongodb.gridfs.GridFS;

        r2 := @parameter0: java.io.InputStream;

        r3 := @parameter1: java.lang.String;

        $r0 = new com.mongodb.gridfs.GridFSInputFile;

        specialinvoke $r0.<com.mongodb.gridfs.GridFSInputFile: void <init>(com.mongodb.gridfs.GridFS,java.io.InputStream,java.lang.String)>(r1, r2, r3);

        return $r0;
    }

    public java.lang.String getBucketName()
    {
        java.lang.String $r1;
        com.mongodb.gridfs.GridFS r0;

        r0 := @this: com.mongodb.gridfs.GridFS;

        $r1 = r0.<com.mongodb.gridfs.GridFS: java.lang.String _bucketName>;

        return $r1;
    }

    public com.mongodb.DB getDB()
    {
        com.mongodb.DB $r1;
        com.mongodb.gridfs.GridFS r0;

        r0 := @this: com.mongodb.gridfs.GridFS;

        $r1 = r0.<com.mongodb.gridfs.GridFS: com.mongodb.DB _db>;

        return $r1;
    }

    public static void <clinit>()
    {
        <com.mongodb.gridfs.GridFS: java.lang.String DEFAULT_BUCKET> = "fs";

        <com.mongodb.gridfs.GridFS: int DEFAULT_CHUNKSIZE> = 262144;

        return;
    }
}
