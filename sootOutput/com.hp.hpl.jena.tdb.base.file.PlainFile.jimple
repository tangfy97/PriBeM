public abstract class com.hp.hpl.jena.tdb.base.file.PlainFile extends java.lang.Object implements org.apache.jena.atlas.lib.Sync, org.apache.jena.atlas.lib.Closeable
{
    protected long filesize;
    protected java.nio.ByteBuffer byteBuffer;

    void <init>()
    {
        com.hp.hpl.jena.tdb.base.file.PlainFile r0;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.PlainFile;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.tdb.base.file.PlainFile: long filesize> = -1L;

        r0.<com.hp.hpl.jena.tdb.base.file.PlainFile: java.nio.ByteBuffer byteBuffer> = null;

        return;
    }

    public final java.nio.ByteBuffer getByteBuffer()
    {
        com.hp.hpl.jena.tdb.base.file.PlainFile r0;
        java.nio.ByteBuffer $r1;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.PlainFile;

        $r1 = r0.<com.hp.hpl.jena.tdb.base.file.PlainFile: java.nio.ByteBuffer byteBuffer>;

        return $r1;
    }

    public final java.nio.ByteBuffer ensure(int)
    {
        long $l1, $l2, $l4, $l5;
        com.hp.hpl.jena.tdb.base.file.PlainFile r0;
        java.nio.ByteBuffer $r1, $r2, $r3;
        byte $b3;
        int i0, $i6;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.PlainFile;

        i0 := @parameter0: int;

        $l2 = r0.<com.hp.hpl.jena.tdb.base.file.PlainFile: long filesize>;

        $l1 = (long) i0;

        $b3 = $l2 cmp $l1;

        $i6 = (int) $b3;

        if $i6 <= 0 goto label1;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.tdb.base.file.PlainFile: java.nio.ByteBuffer getByteBuffer()>();

        return $r3;

     label1:
        $l4 = (long) i0;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.tdb.base.file.PlainFile: java.nio.ByteBuffer allocateBuffer(long)>($l4);

        r0.<com.hp.hpl.jena.tdb.base.file.PlainFile: java.nio.ByteBuffer byteBuffer> = $r1;

        $l5 = (long) i0;

        r0.<com.hp.hpl.jena.tdb.base.file.PlainFile: long filesize> = $l5;

        $r2 = r0.<com.hp.hpl.jena.tdb.base.file.PlainFile: java.nio.ByteBuffer byteBuffer>;

        return $r2;
    }

    public final long getFileSize()
    {
        long $l0;
        com.hp.hpl.jena.tdb.base.file.PlainFile r0;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.PlainFile;

        $l0 = r0.<com.hp.hpl.jena.tdb.base.file.PlainFile: long filesize>;

        return $l0;
    }

    public abstract void sync();

    public abstract void close();

    protected abstract java.nio.ByteBuffer allocateBuffer(long);
}
