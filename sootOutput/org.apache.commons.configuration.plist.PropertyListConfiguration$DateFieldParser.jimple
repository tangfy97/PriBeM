class org.apache.commons.configuration.plist.PropertyListConfiguration$DateFieldParser extends org.apache.commons.configuration.plist.PropertyListConfiguration$DateComponentParser
{
    private int calendarField;
    private int length;
    private int offset;

    public void <init>(int, int)
    {
        org.apache.commons.configuration.plist.PropertyListConfiguration$DateFieldParser r0;
        int i0, i1;

        r0 := @this: org.apache.commons.configuration.plist.PropertyListConfiguration$DateFieldParser;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<org.apache.commons.configuration.plist.PropertyListConfiguration$DateFieldParser: void <init>(int,int,int)>(i0, i1, 0);

        return;
    }

    public void <init>(int, int, int)
    {
        org.apache.commons.configuration.plist.PropertyListConfiguration$DateFieldParser r0;
        int i0, i1, i2;

        r0 := @this: org.apache.commons.configuration.plist.PropertyListConfiguration$DateFieldParser;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        specialinvoke r0.<org.apache.commons.configuration.plist.PropertyListConfiguration$DateComponentParser: void <init>(org.apache.commons.configuration.plist.PropertyListConfiguration$1)>(null);

        r0.<org.apache.commons.configuration.plist.PropertyListConfiguration$DateFieldParser: int calendarField> = i0;

        r0.<org.apache.commons.configuration.plist.PropertyListConfiguration$DateFieldParser: int length> = i1;

        r0.<org.apache.commons.configuration.plist.PropertyListConfiguration$DateFieldParser: int offset> = i2;

        return;
    }

    public void formatComponent(java.lang.StringBuffer, java.util.Calendar)
    {
        java.util.Calendar r2;
        java.lang.StringBuffer r1;
        org.apache.commons.configuration.plist.PropertyListConfiguration$DateFieldParser r0;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: org.apache.commons.configuration.plist.PropertyListConfiguration$DateFieldParser;

        r1 := @parameter0: java.lang.StringBuffer;

        r2 := @parameter1: java.util.Calendar;

        $i0 = r0.<org.apache.commons.configuration.plist.PropertyListConfiguration$DateFieldParser: int calendarField>;

        $i1 = virtualinvoke r2.<java.util.Calendar: int get(int)>($i0);

        $i2 = r0.<org.apache.commons.configuration.plist.PropertyListConfiguration$DateFieldParser: int offset>;

        $i4 = $i1 + $i2;

        $i3 = r0.<org.apache.commons.configuration.plist.PropertyListConfiguration$DateFieldParser: int length>;

        virtualinvoke r0.<org.apache.commons.configuration.plist.PropertyListConfiguration$DateFieldParser: void padNum(java.lang.StringBuffer,int,int)>(r1, $i4, $i3);

        return;
    }

    public int parseComponent(java.lang.String, int, java.util.Calendar) throws org.apache.commons.configuration.plist.ParseException
    {
        java.util.Calendar r2;
        org.apache.commons.configuration.plist.ParseException $r5;
        java.lang.StringBuffer $r6, $r7, $r8, $r9, $r10;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.String r1, $r3, $r11;
        java.lang.NumberFormatException $r4;
        org.apache.commons.configuration.plist.PropertyListConfiguration$DateFieldParser r0;

        r0 := @this: org.apache.commons.configuration.plist.PropertyListConfiguration$DateFieldParser;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.util.Calendar;

        $i1 = r0.<org.apache.commons.configuration.plist.PropertyListConfiguration$DateFieldParser: int length>;

        virtualinvoke r0.<org.apache.commons.configuration.plist.PropertyListConfiguration$DateFieldParser: void checkLength(java.lang.String,int,int)>(r1, i0, $i1);

     label1:
        $i4 = r0.<org.apache.commons.configuration.plist.PropertyListConfiguration$DateFieldParser: int calendarField>;

        $i2 = r0.<org.apache.commons.configuration.plist.PropertyListConfiguration$DateFieldParser: int length>;

        $i3 = i0 + $i2;

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i0, $i3);

        $i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3);

        $i6 = r0.<org.apache.commons.configuration.plist.PropertyListConfiguration$DateFieldParser: int offset>;

        $i7 = $i5 - $i6;

        virtualinvoke r2.<java.util.Calendar: void set(int,int)>($i4, $i7);

        $i8 = r0.<org.apache.commons.configuration.plist.PropertyListConfiguration$DateFieldParser: int length>;

     label2:
        return $i8;

     label3:
        $r4 := @caughtexception;

        $r5 = new org.apache.commons.configuration.plist.ParseException;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid number: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", index ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r5.<org.apache.commons.configuration.plist.ParseException: void <init>(java.lang.String)>($r11);

        throw $r5;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }
}
