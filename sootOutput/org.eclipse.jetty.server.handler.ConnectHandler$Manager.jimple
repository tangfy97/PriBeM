class org.eclipse.jetty.server.handler.ConnectHandler$Manager extends org.eclipse.jetty.io.nio.SelectorManager
{
    final org.eclipse.jetty.server.handler.ConnectHandler this$0;

    private void <init>(org.eclipse.jetty.server.handler.ConnectHandler)
    {
        org.eclipse.jetty.server.handler.ConnectHandler$Manager r0;
        org.eclipse.jetty.server.handler.ConnectHandler r1;

        r0 := @this: org.eclipse.jetty.server.handler.ConnectHandler$Manager;

        r1 := @parameter0: org.eclipse.jetty.server.handler.ConnectHandler;

        r0.<org.eclipse.jetty.server.handler.ConnectHandler$Manager: org.eclipse.jetty.server.handler.ConnectHandler this$0> = r1;

        specialinvoke r0.<org.eclipse.jetty.io.nio.SelectorManager: void <init>()>();

        return;
    }

    protected org.eclipse.jetty.io.nio.SelectChannelEndPoint newEndPoint(java.nio.channels.SocketChannel, org.eclipse.jetty.io.nio.SelectorManager$SelectSet, java.nio.channels.SelectionKey) throws java.io.IOException
    {
        java.net.Socket $r4;
        java.nio.channels.SelectionKey r3;
        org.eclipse.jetty.server.handler.ConnectHandler $r9;
        org.eclipse.jetty.io.nio.SelectChannelEndPoint $r0;
        org.eclipse.jetty.io.nio.AsyncConnection $r7;
        org.eclipse.jetty.io.nio.SelectorManager $r5;
        org.eclipse.jetty.server.handler.ConnectHandler$Manager r8;
        org.eclipse.jetty.io.nio.SelectorManager$SelectSet r2;
        java.nio.channels.SocketChannel r1;
        int $i0, $i1;
        java.lang.Object $r6;

        r8 := @this: org.eclipse.jetty.server.handler.ConnectHandler$Manager;

        r1 := @parameter0: java.nio.channels.SocketChannel;

        r2 := @parameter1: org.eclipse.jetty.io.nio.SelectorManager$SelectSet;

        r3 := @parameter2: java.nio.channels.SelectionKey;

        $r0 = new org.eclipse.jetty.io.nio.SelectChannelEndPoint;

        $r4 = virtualinvoke r1.<java.nio.channels.SocketChannel: java.net.Socket socket()>();

        $i0 = virtualinvoke $r4.<java.net.Socket: int getSoTimeout()>();

        specialinvoke $r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void <init>(java.nio.channels.SocketChannel,org.eclipse.jetty.io.nio.SelectorManager$SelectSet,java.nio.channels.SelectionKey,int)>(r1, r2, r3, $i0);

        $r5 = virtualinvoke r2.<org.eclipse.jetty.io.nio.SelectorManager$SelectSet: org.eclipse.jetty.io.nio.SelectorManager getManager()>();

        $r6 = virtualinvoke r3.<java.nio.channels.SelectionKey: java.lang.Object attachment()>();

        $r7 = virtualinvoke $r5.<org.eclipse.jetty.io.nio.SelectorManager: org.eclipse.jetty.io.nio.AsyncConnection newConnection(java.nio.channels.SocketChannel,org.eclipse.jetty.io.AsyncEndPoint,java.lang.Object)>(r1, $r0, $r6);

        virtualinvoke $r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void setConnection(org.eclipse.jetty.io.Connection)>($r7);

        $r9 = r8.<org.eclipse.jetty.server.handler.ConnectHandler$Manager: org.eclipse.jetty.server.handler.ConnectHandler this$0>;

        $i1 = staticinvoke <org.eclipse.jetty.server.handler.ConnectHandler: int access$100(org.eclipse.jetty.server.handler.ConnectHandler)>($r9);

        virtualinvoke $r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void setMaxIdleTime(int)>($i1);

        return $r0;
    }

    public org.eclipse.jetty.io.nio.AsyncConnection newConnection(java.nio.channels.SocketChannel, org.eclipse.jetty.io.AsyncEndPoint, java.lang.Object)
    {
        org.eclipse.jetty.server.handler.ConnectHandler$Manager r3;
        java.nio.channels.SocketChannel r4;
        org.eclipse.jetty.io.AsyncEndPoint r2;
        java.lang.Object r0;
        org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection r1;
        long $l0;

        r3 := @this: org.eclipse.jetty.server.handler.ConnectHandler$Manager;

        r4 := @parameter0: java.nio.channels.SocketChannel;

        r2 := @parameter1: org.eclipse.jetty.io.AsyncEndPoint;

        r0 := @parameter2: java.lang.Object;

        r1 = (org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection) r0;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke r1.<org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection: void setTimeStamp(long)>($l0);

        virtualinvoke r1.<org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection: void setEndPoint(org.eclipse.jetty.io.AsyncEndPoint)>(r2);

        return r1;
    }

    protected void endPointOpened(org.eclipse.jetty.io.nio.SelectChannelEndPoint)
    {
        org.eclipse.jetty.server.handler.ConnectHandler$Manager r4;
        java.nio.channels.SelectionKey $r1;
        java.lang.Object $r2;
        org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection r3;
        org.eclipse.jetty.io.nio.SelectChannelEndPoint r0;

        r4 := @this: org.eclipse.jetty.server.handler.ConnectHandler$Manager;

        r0 := @parameter0: org.eclipse.jetty.io.nio.SelectChannelEndPoint;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: java.nio.channels.SelectionKey getSelectionKey()>();

        $r2 = virtualinvoke $r1.<java.nio.channels.SelectionKey: java.lang.Object attachment()>();

        r3 = (org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection) $r2;

        virtualinvoke r3.<org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection: void ready()>();

        return;
    }

    public boolean dispatch(java.lang.Runnable)
    {
        org.eclipse.jetty.server.handler.ConnectHandler$Manager r0;
        org.eclipse.jetty.server.handler.ConnectHandler $r1;
        java.lang.Runnable r3;
        org.eclipse.jetty.util.thread.ThreadPool $r2;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.handler.ConnectHandler$Manager;

        r3 := @parameter0: java.lang.Runnable;

        $r1 = r0.<org.eclipse.jetty.server.handler.ConnectHandler$Manager: org.eclipse.jetty.server.handler.ConnectHandler this$0>;

        $r2 = staticinvoke <org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.thread.ThreadPool access$200(org.eclipse.jetty.server.handler.ConnectHandler)>($r1);

        $z0 = interfaceinvoke $r2.<org.eclipse.jetty.util.thread.ThreadPool: boolean dispatch(java.lang.Runnable)>(r3);

        return $z0;
    }

    protected void endPointClosed(org.eclipse.jetty.io.nio.SelectChannelEndPoint)
    {
        org.eclipse.jetty.server.handler.ConnectHandler$Manager r0;
        org.eclipse.jetty.io.nio.SelectChannelEndPoint r1;

        r0 := @this: org.eclipse.jetty.server.handler.ConnectHandler$Manager;

        r1 := @parameter0: org.eclipse.jetty.io.nio.SelectChannelEndPoint;

        return;
    }

    protected void endPointUpgraded(org.eclipse.jetty.io.ConnectedEndPoint, org.eclipse.jetty.io.Connection)
    {
        org.eclipse.jetty.io.ConnectedEndPoint r1;
        org.eclipse.jetty.server.handler.ConnectHandler$Manager r0;
        org.eclipse.jetty.io.Connection r2;

        r0 := @this: org.eclipse.jetty.server.handler.ConnectHandler$Manager;

        r1 := @parameter0: org.eclipse.jetty.io.ConnectedEndPoint;

        r2 := @parameter1: org.eclipse.jetty.io.Connection;

        return;
    }

    void <init>(org.eclipse.jetty.server.handler.ConnectHandler, org.eclipse.jetty.server.handler.ConnectHandler$1)
    {
        org.eclipse.jetty.server.handler.ConnectHandler$Manager r0;
        org.eclipse.jetty.server.handler.ConnectHandler$1 r2;
        org.eclipse.jetty.server.handler.ConnectHandler r1;

        r0 := @this: org.eclipse.jetty.server.handler.ConnectHandler$Manager;

        r1 := @parameter0: org.eclipse.jetty.server.handler.ConnectHandler;

        r2 := @parameter1: org.eclipse.jetty.server.handler.ConnectHandler$1;

        specialinvoke r0.<org.eclipse.jetty.server.handler.ConnectHandler$Manager: void <init>(org.eclipse.jetty.server.handler.ConnectHandler)>(r1);

        return;
    }
}
