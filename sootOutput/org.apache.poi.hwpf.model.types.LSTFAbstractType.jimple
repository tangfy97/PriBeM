public abstract class org.apache.poi.hwpf.model.types.LSTFAbstractType extends java.lang.Object
{
    protected int field_1_lsid;
    protected int field_2_tplc;
    protected short[] field_3_rgistdPara;
    protected byte field_4_flags;
    private static final org.apache.poi.util.BitField fSimpleList;
    private static final org.apache.poi.util.BitField unused1;
    private static final org.apache.poi.util.BitField fAutoNum;
    private static final org.apache.poi.util.BitField unused2;
    private static final org.apache.poi.util.BitField fHybrid;
    private static final org.apache.poi.util.BitField reserved1;
    protected org.apache.poi.hwpf.model.Grfhic field_5_grfhic;

    protected void <init>()
    {
        org.apache.poi.hwpf.model.types.LSTFAbstractType r0;
        short[] $r1;
        org.apache.poi.hwpf.model.Grfhic $r2;

        r0 := @this: org.apache.poi.hwpf.model.types.LSTFAbstractType;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (short)[0];

        r0.<org.apache.poi.hwpf.model.types.LSTFAbstractType: short[] field_3_rgistdPara> = $r1;

        $r2 = new org.apache.poi.hwpf.model.Grfhic;

        specialinvoke $r2.<org.apache.poi.hwpf.model.Grfhic: void <init>()>();

        r0.<org.apache.poi.hwpf.model.types.LSTFAbstractType: org.apache.poi.hwpf.model.Grfhic field_5_grfhic> = $r2;

        return;
    }

    protected void fillFields(byte[], int)
    {
        byte[] r1;
        org.apache.poi.hwpf.model.types.LSTFAbstractType r0;
        org.apache.poi.hwpf.model.Grfhic $r3;
        byte $b7;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8;
        short[] $r2;

        r0 := @this: org.apache.poi.hwpf.model.types.LSTFAbstractType;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        $i1 = 0 + i0;

        $i2 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r1, $i1);

        r0.<org.apache.poi.hwpf.model.types.LSTFAbstractType: int field_1_lsid> = $i2;

        $i3 = 4 + i0;

        $i4 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r1, $i3);

        r0.<org.apache.poi.hwpf.model.types.LSTFAbstractType: int field_2_tplc> = $i4;

        $i5 = 8 + i0;

        $r2 = staticinvoke <org.apache.poi.util.LittleEndian: short[] getShortArray(byte[],int,int)>(r1, $i5, 18);

        r0.<org.apache.poi.hwpf.model.types.LSTFAbstractType: short[] field_3_rgistdPara> = $r2;

        $i6 = 26 + i0;

        $b7 = r1[$i6];

        r0.<org.apache.poi.hwpf.model.types.LSTFAbstractType: byte field_4_flags> = $b7;

        $r3 = new org.apache.poi.hwpf.model.Grfhic;

        $i8 = 27 + i0;

        specialinvoke $r3.<org.apache.poi.hwpf.model.Grfhic: void <init>(byte[],int)>(r1, $i8);

        r0.<org.apache.poi.hwpf.model.types.LSTFAbstractType: org.apache.poi.hwpf.model.Grfhic field_5_grfhic> = $r3;

        return;
    }

    public void serialize(byte[], int)
    {
        byte[] r0;
        org.apache.poi.hwpf.model.types.LSTFAbstractType r1;
        org.apache.poi.hwpf.model.Grfhic $r3;
        byte $b6;
        int i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8;
        short[] $r2;

        r1 := @this: org.apache.poi.hwpf.model.types.LSTFAbstractType;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $i2 = 0 + i0;

        $i1 = r1.<org.apache.poi.hwpf.model.types.LSTFAbstractType: int field_1_lsid>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>(r0, $i2, $i1);

        $i4 = 4 + i0;

        $i3 = r1.<org.apache.poi.hwpf.model.types.LSTFAbstractType: int field_2_tplc>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>(r0, $i4, $i3);

        $i5 = 8 + i0;

        $r2 = r1.<org.apache.poi.hwpf.model.types.LSTFAbstractType: short[] field_3_rgistdPara>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putShortArray(byte[],int,short[])>(r0, $i5, $r2);

        $i7 = 26 + i0;

        $b6 = r1.<org.apache.poi.hwpf.model.types.LSTFAbstractType: byte field_4_flags>;

        r0[$i7] = $b6;

        $r3 = r1.<org.apache.poi.hwpf.model.types.LSTFAbstractType: org.apache.poi.hwpf.model.Grfhic field_5_grfhic>;

        $i8 = 27 + i0;

        virtualinvoke $r3.<org.apache.poi.hwpf.model.Grfhic: void serialize(byte[],int)>(r0, $i8);

        return;
    }

    public byte[] serialize()
    {
        int $i0;
        org.apache.poi.hwpf.model.types.LSTFAbstractType r1;
        byte[] r0;

        r1 := @this: org.apache.poi.hwpf.model.types.LSTFAbstractType;

        $i0 = staticinvoke <org.apache.poi.hwpf.model.types.LSTFAbstractType: int getSize()>();

        r0 = newarray (byte)[$i0];

        virtualinvoke r1.<org.apache.poi.hwpf.model.types.LSTFAbstractType: void serialize(byte[],int)>(r0, 0);

        return r0;
    }

    public static int getSize()
    {
        return 28;
    }

    public boolean equals(java.lang.Object)
    {
        byte $b4, $b5;
        int $i0, $i1, $i2, $i3, $i6, $i7;
        boolean $z0, $z1;
        org.apache.poi.hwpf.model.types.LSTFAbstractType r0, r4;
        org.apache.poi.hwpf.model.Grfhic $r7, $r8, $r9, $r10;
        java.lang.Object r1;
        java.lang.Class $r2, $r3;
        short[] $r5, $r6;

        r0 := @this: org.apache.poi.hwpf.model.types.LSTFAbstractType;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label3;

        return 0;

     label3:
        r4 = (org.apache.poi.hwpf.model.types.LSTFAbstractType) r1;

        $i1 = r0.<org.apache.poi.hwpf.model.types.LSTFAbstractType: int field_1_lsid>;

        $i0 = r4.<org.apache.poi.hwpf.model.types.LSTFAbstractType: int field_1_lsid>;

        if $i1 == $i0 goto label4;

        return 0;

     label4:
        $i3 = r0.<org.apache.poi.hwpf.model.types.LSTFAbstractType: int field_2_tplc>;

        $i2 = r4.<org.apache.poi.hwpf.model.types.LSTFAbstractType: int field_2_tplc>;

        if $i3 == $i2 goto label5;

        return 0;

     label5:
        $r6 = r0.<org.apache.poi.hwpf.model.types.LSTFAbstractType: short[] field_3_rgistdPara>;

        $r5 = r4.<org.apache.poi.hwpf.model.types.LSTFAbstractType: short[] field_3_rgistdPara>;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(short[],short[])>($r6, $r5);

        if $z0 != 0 goto label6;

        return 0;

     label6:
        $b5 = r0.<org.apache.poi.hwpf.model.types.LSTFAbstractType: byte field_4_flags>;

        $b4 = r4.<org.apache.poi.hwpf.model.types.LSTFAbstractType: byte field_4_flags>;

        $i6 = (int) $b5;

        $i7 = (int) $b4;

        if $i6 == $i7 goto label7;

        return 0;

     label7:
        $r7 = r0.<org.apache.poi.hwpf.model.types.LSTFAbstractType: org.apache.poi.hwpf.model.Grfhic field_5_grfhic>;

        if $r7 != null goto label8;

        $r10 = r4.<org.apache.poi.hwpf.model.types.LSTFAbstractType: org.apache.poi.hwpf.model.Grfhic field_5_grfhic>;

        if $r10 == null goto label9;

        return 0;

     label8:
        $r9 = r0.<org.apache.poi.hwpf.model.types.LSTFAbstractType: org.apache.poi.hwpf.model.Grfhic field_5_grfhic>;

        $r8 = r4.<org.apache.poi.hwpf.model.types.LSTFAbstractType: org.apache.poi.hwpf.model.Grfhic field_5_grfhic>;

        $z1 = virtualinvoke $r9.<org.apache.poi.hwpf.model.Grfhic: boolean equals(java.lang.Object)>($r8);

        if $z1 != 0 goto label9;

        return 0;

     label9:
        return 1;
    }

    public int hashCode()
    {
        byte $b5;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7, $i8, i9, i10, i11, i12, i13, $i14;
        org.apache.poi.hwpf.model.types.LSTFAbstractType r0;
        org.apache.poi.hwpf.model.Grfhic $r2;
        short[] $r1;

        r0 := @this: org.apache.poi.hwpf.model.types.LSTFAbstractType;

        $i0 = r0.<org.apache.poi.hwpf.model.types.LSTFAbstractType: int field_1_lsid>;

        i9 = 31 + $i0;

        $i2 = 31 * i9;

        $i1 = r0.<org.apache.poi.hwpf.model.types.LSTFAbstractType: int field_2_tplc>;

        i10 = $i2 + $i1;

        $i3 = 31 * i10;

        $r1 = r0.<org.apache.poi.hwpf.model.types.LSTFAbstractType: short[] field_3_rgistdPara>;

        $i4 = staticinvoke <java.util.Arrays: int hashCode(short[])>($r1);

        i11 = $i3 + $i4;

        $i6 = 31 * i11;

        $b5 = r0.<org.apache.poi.hwpf.model.types.LSTFAbstractType: byte field_4_flags>;

        $i14 = (int) $b5;

        i12 = $i6 + $i14;

        $i7 = 31 * i12;

        $r2 = r0.<org.apache.poi.hwpf.model.types.LSTFAbstractType: org.apache.poi.hwpf.model.Grfhic field_5_grfhic>;

        $i8 = virtualinvoke $r2.<org.apache.poi.hwpf.model.Grfhic: int hashCode()>();

        i13 = $i7 + $i8;

        return i13;
    }

    public java.lang.String toString()
    {
        byte $b2, $b3;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.StringBuilder $r1, $r3, $r4, $r5, $r6, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r25, $r27;
        short[] $r7;
        int $i0, $i1, $i4, $i5;
        java.lang.String $r26;
        org.apache.poi.hwpf.model.types.LSTFAbstractType r2;
        org.apache.poi.hwpf.model.Grfhic $r24;

        r2 := @this: org.apache.poi.hwpf.model.types.LSTFAbstractType;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[LSTF]\n");

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .lsid                 = ");

        $r1 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $i0 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.LSTFAbstractType: int getLsid()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .tplc                 = ");

        $r4 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $i1 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.LSTFAbstractType: int getTplc()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .rgistdPara           = ");

        $r6 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r7 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.LSTFAbstractType: short[] getRgistdPara()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .flags                = ");

        $r9 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $b2 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.LSTFAbstractType: byte getFlags()>();

        $i4 = (int) $b2;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        $r11 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .fSimpleList              = ");

        $z0 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.LSTFAbstractType: boolean isFSimpleList()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r13 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .unused1                  = ");

        $z1 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.LSTFAbstractType: boolean isUnused1()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r15 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .fAutoNum                 = ");

        $z2 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.LSTFAbstractType: boolean isFAutoNum()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r17 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .unused2                  = ");

        $z3 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.LSTFAbstractType: boolean isUnused2()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r19 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .fHybrid                  = ");

        $z4 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.LSTFAbstractType: boolean isFHybrid()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r21 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .reserved1                = ");

        $b3 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.LSTFAbstractType: byte getReserved1()>();

        $i5 = (int) $b3;

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .grfhic               = ");

        $r23 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r24 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.LSTFAbstractType: org.apache.poi.hwpf.model.Grfhic getGrfhic()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r24);

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[/LSTF]\n");

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r26;
    }

    public int getLsid()
    {
        org.apache.poi.hwpf.model.types.LSTFAbstractType r0;
        int $i0;

        r0 := @this: org.apache.poi.hwpf.model.types.LSTFAbstractType;

        $i0 = r0.<org.apache.poi.hwpf.model.types.LSTFAbstractType: int field_1_lsid>;

        return $i0;
    }

    public void setLsid(int)
    {
        org.apache.poi.hwpf.model.types.LSTFAbstractType r0;
        int i0;

        r0 := @this: org.apache.poi.hwpf.model.types.LSTFAbstractType;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hwpf.model.types.LSTFAbstractType: int field_1_lsid> = i0;

        return;
    }

    public int getTplc()
    {
        org.apache.poi.hwpf.model.types.LSTFAbstractType r0;
        int $i0;

        r0 := @this: org.apache.poi.hwpf.model.types.LSTFAbstractType;

        $i0 = r0.<org.apache.poi.hwpf.model.types.LSTFAbstractType: int field_2_tplc>;

        return $i0;
    }

    public void setTplc(int)
    {
        org.apache.poi.hwpf.model.types.LSTFAbstractType r0;
        int i0;

        r0 := @this: org.apache.poi.hwpf.model.types.LSTFAbstractType;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hwpf.model.types.LSTFAbstractType: int field_2_tplc> = i0;

        return;
    }

    public short[] getRgistdPara()
    {
        org.apache.poi.hwpf.model.types.LSTFAbstractType r0;
        short[] $r1;

        r0 := @this: org.apache.poi.hwpf.model.types.LSTFAbstractType;

        $r1 = r0.<org.apache.poi.hwpf.model.types.LSTFAbstractType: short[] field_3_rgistdPara>;

        return $r1;
    }

    public void setRgistdPara(short[])
    {
        org.apache.poi.hwpf.model.types.LSTFAbstractType r0;
        short[] r1;

        r0 := @this: org.apache.poi.hwpf.model.types.LSTFAbstractType;

        r1 := @parameter0: short[];

        r0.<org.apache.poi.hwpf.model.types.LSTFAbstractType: short[] field_3_rgistdPara> = r1;

        return;
    }

    public byte getFlags()
    {
        org.apache.poi.hwpf.model.types.LSTFAbstractType r0;
        byte $b0;

        r0 := @this: org.apache.poi.hwpf.model.types.LSTFAbstractType;

        $b0 = r0.<org.apache.poi.hwpf.model.types.LSTFAbstractType: byte field_4_flags>;

        return $b0;
    }

    public void setFlags(byte)
    {
        org.apache.poi.hwpf.model.types.LSTFAbstractType r0;
        byte b0;

        r0 := @this: org.apache.poi.hwpf.model.types.LSTFAbstractType;

        b0 := @parameter0: byte;

        r0.<org.apache.poi.hwpf.model.types.LSTFAbstractType: byte field_4_flags> = b0;

        return;
    }

    public org.apache.poi.hwpf.model.Grfhic getGrfhic()
    {
        org.apache.poi.hwpf.model.types.LSTFAbstractType r0;
        org.apache.poi.hwpf.model.Grfhic $r1;

        r0 := @this: org.apache.poi.hwpf.model.types.LSTFAbstractType;

        $r1 = r0.<org.apache.poi.hwpf.model.types.LSTFAbstractType: org.apache.poi.hwpf.model.Grfhic field_5_grfhic>;

        return $r1;
    }

    public void setGrfhic(org.apache.poi.hwpf.model.Grfhic)
    {
        org.apache.poi.hwpf.model.types.LSTFAbstractType r0;
        org.apache.poi.hwpf.model.Grfhic r1;

        r0 := @this: org.apache.poi.hwpf.model.types.LSTFAbstractType;

        r1 := @parameter0: org.apache.poi.hwpf.model.Grfhic;

        r0.<org.apache.poi.hwpf.model.types.LSTFAbstractType: org.apache.poi.hwpf.model.Grfhic field_5_grfhic> = r1;

        return;
    }

    public void setFSimpleList(boolean)
    {
        org.apache.poi.util.BitField $r1;
        byte $b0, $b2;
        org.apache.poi.hwpf.model.types.LSTFAbstractType r0;
        int $i1, $i3;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.LSTFAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.LSTFAbstractType: org.apache.poi.util.BitField fSimpleList>;

        $b0 = r0.<org.apache.poi.hwpf.model.types.LSTFAbstractType: byte field_4_flags>;

        $i3 = (int) $b0;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i3, z0);

        $b2 = (byte) $i1;

        r0.<org.apache.poi.hwpf.model.types.LSTFAbstractType: byte field_4_flags> = $b2;

        return;
    }

    public boolean isFSimpleList()
    {
        org.apache.poi.util.BitField $r1;
        byte $b0;
        org.apache.poi.hwpf.model.types.LSTFAbstractType r0;
        int $i1;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.LSTFAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.LSTFAbstractType: org.apache.poi.util.BitField fSimpleList>;

        $b0 = r0.<org.apache.poi.hwpf.model.types.LSTFAbstractType: byte field_4_flags>;

        $i1 = (int) $b0;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i1);

        return $z0;
    }

    public void setUnused1(boolean)
    {
        org.apache.poi.util.BitField $r1;
        byte $b0, $b2;
        org.apache.poi.hwpf.model.types.LSTFAbstractType r0;
        int $i1, $i3;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.LSTFAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.LSTFAbstractType: org.apache.poi.util.BitField unused1>;

        $b0 = r0.<org.apache.poi.hwpf.model.types.LSTFAbstractType: byte field_4_flags>;

        $i3 = (int) $b0;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i3, z0);

        $b2 = (byte) $i1;

        r0.<org.apache.poi.hwpf.model.types.LSTFAbstractType: byte field_4_flags> = $b2;

        return;
    }

    public boolean isUnused1()
    {
        org.apache.poi.util.BitField $r1;
        byte $b0;
        org.apache.poi.hwpf.model.types.LSTFAbstractType r0;
        int $i1;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.LSTFAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.LSTFAbstractType: org.apache.poi.util.BitField unused1>;

        $b0 = r0.<org.apache.poi.hwpf.model.types.LSTFAbstractType: byte field_4_flags>;

        $i1 = (int) $b0;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i1);

        return $z0;
    }

    public void setFAutoNum(boolean)
    {
        org.apache.poi.util.BitField $r1;
        byte $b0, $b2;
        org.apache.poi.hwpf.model.types.LSTFAbstractType r0;
        int $i1, $i3;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.LSTFAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.LSTFAbstractType: org.apache.poi.util.BitField fAutoNum>;

        $b0 = r0.<org.apache.poi.hwpf.model.types.LSTFAbstractType: byte field_4_flags>;

        $i3 = (int) $b0;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i3, z0);

        $b2 = (byte) $i1;

        r0.<org.apache.poi.hwpf.model.types.LSTFAbstractType: byte field_4_flags> = $b2;

        return;
    }

    public boolean isFAutoNum()
    {
        org.apache.poi.util.BitField $r1;
        byte $b0;
        org.apache.poi.hwpf.model.types.LSTFAbstractType r0;
        int $i1;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.LSTFAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.LSTFAbstractType: org.apache.poi.util.BitField fAutoNum>;

        $b0 = r0.<org.apache.poi.hwpf.model.types.LSTFAbstractType: byte field_4_flags>;

        $i1 = (int) $b0;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i1);

        return $z0;
    }

    public void setUnused2(boolean)
    {
        org.apache.poi.util.BitField $r1;
        byte $b0, $b2;
        org.apache.poi.hwpf.model.types.LSTFAbstractType r0;
        int $i1, $i3;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.LSTFAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.LSTFAbstractType: org.apache.poi.util.BitField unused2>;

        $b0 = r0.<org.apache.poi.hwpf.model.types.LSTFAbstractType: byte field_4_flags>;

        $i3 = (int) $b0;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i3, z0);

        $b2 = (byte) $i1;

        r0.<org.apache.poi.hwpf.model.types.LSTFAbstractType: byte field_4_flags> = $b2;

        return;
    }

    public boolean isUnused2()
    {
        org.apache.poi.util.BitField $r1;
        byte $b0;
        org.apache.poi.hwpf.model.types.LSTFAbstractType r0;
        int $i1;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.LSTFAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.LSTFAbstractType: org.apache.poi.util.BitField unused2>;

        $b0 = r0.<org.apache.poi.hwpf.model.types.LSTFAbstractType: byte field_4_flags>;

        $i1 = (int) $b0;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i1);

        return $z0;
    }

    public void setFHybrid(boolean)
    {
        org.apache.poi.util.BitField $r1;
        byte $b0, $b2;
        org.apache.poi.hwpf.model.types.LSTFAbstractType r0;
        int $i1, $i3;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.LSTFAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.LSTFAbstractType: org.apache.poi.util.BitField fHybrid>;

        $b0 = r0.<org.apache.poi.hwpf.model.types.LSTFAbstractType: byte field_4_flags>;

        $i3 = (int) $b0;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i3, z0);

        $b2 = (byte) $i1;

        r0.<org.apache.poi.hwpf.model.types.LSTFAbstractType: byte field_4_flags> = $b2;

        return;
    }

    public boolean isFHybrid()
    {
        org.apache.poi.util.BitField $r1;
        byte $b0;
        org.apache.poi.hwpf.model.types.LSTFAbstractType r0;
        int $i1;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.LSTFAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.LSTFAbstractType: org.apache.poi.util.BitField fHybrid>;

        $b0 = r0.<org.apache.poi.hwpf.model.types.LSTFAbstractType: byte field_4_flags>;

        $i1 = (int) $b0;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i1);

        return $z0;
    }

    public void setReserved1(byte)
    {
        org.apache.poi.util.BitField $r1;
        org.apache.poi.hwpf.model.types.LSTFAbstractType r0;
        byte b0, $b1, $b3;
        int $i2, $i4, $i5;

        r0 := @this: org.apache.poi.hwpf.model.types.LSTFAbstractType;

        b0 := @parameter0: byte;

        $r1 = <org.apache.poi.hwpf.model.types.LSTFAbstractType: org.apache.poi.util.BitField reserved1>;

        $b1 = r0.<org.apache.poi.hwpf.model.types.LSTFAbstractType: byte field_4_flags>;

        $i4 = (int) $b1;

        $i5 = (int) b0;

        $i2 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setValue(int,int)>($i4, $i5);

        $b3 = (byte) $i2;

        r0.<org.apache.poi.hwpf.model.types.LSTFAbstractType: byte field_4_flags> = $b3;

        return;
    }

    public byte getReserved1()
    {
        org.apache.poi.util.BitField $r1;
        byte $b0, $b2;
        org.apache.poi.hwpf.model.types.LSTFAbstractType r0;
        int $i1, $i3;

        r0 := @this: org.apache.poi.hwpf.model.types.LSTFAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.LSTFAbstractType: org.apache.poi.util.BitField reserved1>;

        $b0 = r0.<org.apache.poi.hwpf.model.types.LSTFAbstractType: byte field_4_flags>;

        $i3 = (int) $b0;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int getValue(int)>($i3);

        $b2 = (byte) $i1;

        return $b2;
    }

    static void <clinit>()
    {
        org.apache.poi.util.BitField $r0, $r1, $r2, $r3, $r4, $r5;

        $r0 = new org.apache.poi.util.BitField;

        specialinvoke $r0.<org.apache.poi.util.BitField: void <init>(int)>(1);

        <org.apache.poi.hwpf.model.types.LSTFAbstractType: org.apache.poi.util.BitField fSimpleList> = $r0;

        $r1 = new org.apache.poi.util.BitField;

        specialinvoke $r1.<org.apache.poi.util.BitField: void <init>(int)>(2);

        <org.apache.poi.hwpf.model.types.LSTFAbstractType: org.apache.poi.util.BitField unused1> = $r1;

        $r2 = new org.apache.poi.util.BitField;

        specialinvoke $r2.<org.apache.poi.util.BitField: void <init>(int)>(4);

        <org.apache.poi.hwpf.model.types.LSTFAbstractType: org.apache.poi.util.BitField fAutoNum> = $r2;

        $r3 = new org.apache.poi.util.BitField;

        specialinvoke $r3.<org.apache.poi.util.BitField: void <init>(int)>(8);

        <org.apache.poi.hwpf.model.types.LSTFAbstractType: org.apache.poi.util.BitField unused2> = $r3;

        $r4 = new org.apache.poi.util.BitField;

        specialinvoke $r4.<org.apache.poi.util.BitField: void <init>(int)>(16);

        <org.apache.poi.hwpf.model.types.LSTFAbstractType: org.apache.poi.util.BitField fHybrid> = $r4;

        $r5 = new org.apache.poi.util.BitField;

        specialinvoke $r5.<org.apache.poi.util.BitField: void <init>(int)>(224);

        <org.apache.poi.hwpf.model.types.LSTFAbstractType: org.apache.poi.util.BitField reserved1> = $r5;

        return;
    }
}
