public class org.apache.batik.gvt.renderer.MacRenderer extends java.lang.Object implements org.apache.batik.gvt.renderer.ImageRenderer
{
    static final int COPY_OVERHEAD;
    static final int COPY_LINE_OVERHEAD;
    static final java.awt.geom.AffineTransform IDENTITY;
    protected java.awt.RenderingHints renderingHints;
    protected java.awt.geom.AffineTransform usr2dev;
    protected org.apache.batik.gvt.GraphicsNode rootGN;
    protected int offScreenWidth;
    protected int offScreenHeight;
    protected boolean isDoubleBuffered;
    protected java.awt.image.BufferedImage currImg;
    protected java.awt.image.BufferedImage workImg;
    protected org.apache.batik.ext.awt.geom.RectListManager damagedAreas;
    public static int IMAGE_TYPE;
    public static java.awt.Color TRANSPARENT_WHITE;
    protected static java.awt.RenderingHints defaultRenderingHints;

    public void <init>()
    {
        org.apache.batik.gvt.renderer.MacRenderer r0;
        java.awt.RenderingHints $r1, $r2, $r3;
        java.awt.geom.AffineTransform $r4;

        r0 := @this: org.apache.batik.gvt.renderer.MacRenderer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.awt.RenderingHints;

        specialinvoke $r1.<java.awt.RenderingHints: void <init>(java.util.Map)>(null);

        r0.<org.apache.batik.gvt.renderer.MacRenderer: java.awt.RenderingHints renderingHints> = $r1;

        $r3 = r0.<org.apache.batik.gvt.renderer.MacRenderer: java.awt.RenderingHints renderingHints>;

        $r2 = <org.apache.batik.gvt.renderer.MacRenderer: java.awt.RenderingHints defaultRenderingHints>;

        virtualinvoke $r3.<java.awt.RenderingHints: void add(java.awt.RenderingHints)>($r2);

        $r4 = new java.awt.geom.AffineTransform;

        specialinvoke $r4.<java.awt.geom.AffineTransform: void <init>()>();

        r0.<org.apache.batik.gvt.renderer.MacRenderer: java.awt.geom.AffineTransform usr2dev> = $r4;

        return;
    }

    public void <init>(java.awt.RenderingHints, java.awt.geom.AffineTransform)
    {
        org.apache.batik.gvt.renderer.MacRenderer r0;
        java.awt.RenderingHints $r1, r2, $r3;
        java.awt.geom.AffineTransform $r4, $r5, r6;

        r0 := @this: org.apache.batik.gvt.renderer.MacRenderer;

        r2 := @parameter0: java.awt.RenderingHints;

        r6 := @parameter1: java.awt.geom.AffineTransform;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.awt.RenderingHints;

        specialinvoke $r1.<java.awt.RenderingHints: void <init>(java.util.Map)>(null);

        r0.<org.apache.batik.gvt.renderer.MacRenderer: java.awt.RenderingHints renderingHints> = $r1;

        $r3 = r0.<org.apache.batik.gvt.renderer.MacRenderer: java.awt.RenderingHints renderingHints>;

        virtualinvoke $r3.<java.awt.RenderingHints: void add(java.awt.RenderingHints)>(r2);

        if r6 != null goto label1;

        $r5 = new java.awt.geom.AffineTransform;

        specialinvoke $r5.<java.awt.geom.AffineTransform: void <init>()>();

        goto label2;

     label1:
        $r4 = new java.awt.geom.AffineTransform;

        specialinvoke $r4.<java.awt.geom.AffineTransform: void <init>(java.awt.geom.AffineTransform)>(r6);

     label2:
        return;
    }

    public void dispose()
    {
        org.apache.batik.gvt.renderer.MacRenderer r0;
        org.apache.batik.ext.awt.geom.RectListManager $r1, $r2;

        r0 := @this: org.apache.batik.gvt.renderer.MacRenderer;

        r0.<org.apache.batik.gvt.renderer.MacRenderer: org.apache.batik.gvt.GraphicsNode rootGN> = null;

        r0.<org.apache.batik.gvt.renderer.MacRenderer: java.awt.image.BufferedImage currImg> = null;

        r0.<org.apache.batik.gvt.renderer.MacRenderer: java.awt.image.BufferedImage workImg> = null;

        r0.<org.apache.batik.gvt.renderer.MacRenderer: java.awt.RenderingHints renderingHints> = null;

        r0.<org.apache.batik.gvt.renderer.MacRenderer: java.awt.geom.AffineTransform usr2dev> = null;

        $r1 = r0.<org.apache.batik.gvt.renderer.MacRenderer: org.apache.batik.ext.awt.geom.RectListManager damagedAreas>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.batik.gvt.renderer.MacRenderer: org.apache.batik.ext.awt.geom.RectListManager damagedAreas>;

        virtualinvoke $r2.<org.apache.batik.ext.awt.geom.RectListManager: void clear()>();

     label1:
        r0.<org.apache.batik.gvt.renderer.MacRenderer: org.apache.batik.ext.awt.geom.RectListManager damagedAreas> = null;

        return;
    }

    public void setTree(org.apache.batik.gvt.GraphicsNode)
    {
        org.apache.batik.gvt.renderer.MacRenderer r0;
        org.apache.batik.gvt.GraphicsNode r1;

        r0 := @this: org.apache.batik.gvt.renderer.MacRenderer;

        r1 := @parameter0: org.apache.batik.gvt.GraphicsNode;

        r0.<org.apache.batik.gvt.renderer.MacRenderer: org.apache.batik.gvt.GraphicsNode rootGN> = r1;

        return;
    }

    public org.apache.batik.gvt.GraphicsNode getTree()
    {
        org.apache.batik.gvt.renderer.MacRenderer r0;
        org.apache.batik.gvt.GraphicsNode $r1;

        r0 := @this: org.apache.batik.gvt.renderer.MacRenderer;

        $r1 = r0.<org.apache.batik.gvt.renderer.MacRenderer: org.apache.batik.gvt.GraphicsNode rootGN>;

        return $r1;
    }

    public void setTransform(java.awt.geom.AffineTransform)
    {
        java.lang.Throwable $r11;
        java.awt.image.BufferedImage $r3, r4, $r5, $r8, $r9;
        java.awt.geom.AffineTransform r0, $r2, $r10;
        java.awt.AlphaComposite $r7;
        java.awt.Graphics2D $r6;
        org.apache.batik.gvt.renderer.MacRenderer r1;
        int $i0, $i1;

        r1 := @this: org.apache.batik.gvt.renderer.MacRenderer;

        r0 := @parameter0: java.awt.geom.AffineTransform;

        if r0 != null goto label1;

        $r10 = new java.awt.geom.AffineTransform;

        specialinvoke $r10.<java.awt.geom.AffineTransform: void <init>()>();

        r1.<org.apache.batik.gvt.renderer.MacRenderer: java.awt.geom.AffineTransform usr2dev> = $r10;

        goto label2;

     label1:
        $r2 = new java.awt.geom.AffineTransform;

        specialinvoke $r2.<java.awt.geom.AffineTransform: void <init>(java.awt.geom.AffineTransform)>(r0);

        r1.<org.apache.batik.gvt.renderer.MacRenderer: java.awt.geom.AffineTransform usr2dev> = $r2;

     label2:
        $r3 = r1.<org.apache.batik.gvt.renderer.MacRenderer: java.awt.image.BufferedImage workImg>;

        if $r3 != null goto label3;

        return;

     label3:
        r4 = r1.<org.apache.batik.gvt.renderer.MacRenderer: java.awt.image.BufferedImage workImg>;

        entermonitor r4;

     label4:
        $r5 = r1.<org.apache.batik.gvt.renderer.MacRenderer: java.awt.image.BufferedImage workImg>;

        $r6 = virtualinvoke $r5.<java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>();

        $r7 = <java.awt.AlphaComposite: java.awt.AlphaComposite Clear>;

        virtualinvoke $r6.<java.awt.Graphics2D: void setComposite(java.awt.Composite)>($r7);

        $r8 = r1.<org.apache.batik.gvt.renderer.MacRenderer: java.awt.image.BufferedImage workImg>;

        $i0 = virtualinvoke $r8.<java.awt.image.BufferedImage: int getWidth()>();

        $r9 = r1.<org.apache.batik.gvt.renderer.MacRenderer: java.awt.image.BufferedImage workImg>;

        $i1 = virtualinvoke $r9.<java.awt.image.BufferedImage: int getHeight()>();

        virtualinvoke $r6.<java.awt.Graphics: void fillRect(int,int,int,int)>(0, 0, $i0, $i1);

        virtualinvoke $r6.<java.awt.Graphics: void dispose()>();

        exitmonitor r4;

        goto label6;

     label5:
        $r11 := @caughtexception;

        exitmonitor r4;

        throw $r11;

     label6:
        r1.<org.apache.batik.gvt.renderer.MacRenderer: org.apache.batik.ext.awt.geom.RectListManager damagedAreas> = null;

        return;

        catch java.lang.Throwable from label4 to label5 with label5;
    }

    public java.awt.geom.AffineTransform getTransform()
    {
        org.apache.batik.gvt.renderer.MacRenderer r0;
        java.awt.geom.AffineTransform $r1;

        r0 := @this: org.apache.batik.gvt.renderer.MacRenderer;

        $r1 = r0.<org.apache.batik.gvt.renderer.MacRenderer: java.awt.geom.AffineTransform usr2dev>;

        return $r1;
    }

    public void setRenderingHints(java.awt.RenderingHints)
    {
        org.apache.batik.gvt.renderer.MacRenderer r0;
        java.awt.RenderingHints $r1, r2, $r3;

        r0 := @this: org.apache.batik.gvt.renderer.MacRenderer;

        r2 := @parameter0: java.awt.RenderingHints;

        $r1 = new java.awt.RenderingHints;

        specialinvoke $r1.<java.awt.RenderingHints: void <init>(java.util.Map)>(null);

        r0.<org.apache.batik.gvt.renderer.MacRenderer: java.awt.RenderingHints renderingHints> = $r1;

        $r3 = r0.<org.apache.batik.gvt.renderer.MacRenderer: java.awt.RenderingHints renderingHints>;

        virtualinvoke $r3.<java.awt.RenderingHints: void add(java.awt.RenderingHints)>(r2);

        r0.<org.apache.batik.gvt.renderer.MacRenderer: org.apache.batik.ext.awt.geom.RectListManager damagedAreas> = null;

        return;
    }

    public java.awt.RenderingHints getRenderingHints()
    {
        org.apache.batik.gvt.renderer.MacRenderer r0;
        java.awt.RenderingHints $r1;

        r0 := @this: org.apache.batik.gvt.renderer.MacRenderer;

        $r1 = r0.<org.apache.batik.gvt.renderer.MacRenderer: java.awt.RenderingHints renderingHints>;

        return $r1;
    }

    public boolean isDoubleBuffered()
    {
        org.apache.batik.gvt.renderer.MacRenderer r0;
        boolean $z0;

        r0 := @this: org.apache.batik.gvt.renderer.MacRenderer;

        $z0 = r0.<org.apache.batik.gvt.renderer.MacRenderer: boolean isDoubleBuffered>;

        return $z0;
    }

    public void setDoubleBuffered(boolean)
    {
        java.awt.image.BufferedImage $r1;
        org.apache.batik.gvt.renderer.MacRenderer r0;
        boolean z0, $z1;

        r0 := @this: org.apache.batik.gvt.renderer.MacRenderer;

        z0 := @parameter0: boolean;

        $z1 = r0.<org.apache.batik.gvt.renderer.MacRenderer: boolean isDoubleBuffered>;

        if $z1 != z0 goto label1;

        return;

     label1:
        r0.<org.apache.batik.gvt.renderer.MacRenderer: boolean isDoubleBuffered> = z0;

        if z0 == 0 goto label2;

        r0.<org.apache.batik.gvt.renderer.MacRenderer: java.awt.image.BufferedImage workImg> = null;

        goto label3;

     label2:
        $r1 = r0.<org.apache.batik.gvt.renderer.MacRenderer: java.awt.image.BufferedImage currImg>;

        r0.<org.apache.batik.gvt.renderer.MacRenderer: java.awt.image.BufferedImage workImg> = $r1;

        r0.<org.apache.batik.gvt.renderer.MacRenderer: org.apache.batik.ext.awt.geom.RectListManager damagedAreas> = null;

     label3:
        return;
    }

    public void updateOffScreen(int, int)
    {
        org.apache.batik.gvt.renderer.MacRenderer r0;
        int i0, i1;

        r0 := @this: org.apache.batik.gvt.renderer.MacRenderer;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0.<org.apache.batik.gvt.renderer.MacRenderer: int offScreenWidth> = i0;

        r0.<org.apache.batik.gvt.renderer.MacRenderer: int offScreenHeight> = i1;

        return;
    }

    public java.awt.image.BufferedImage getOffScreen()
    {
        org.apache.batik.gvt.renderer.MacRenderer r0;
        java.awt.image.BufferedImage $r2;
        org.apache.batik.gvt.GraphicsNode $r1;

        r0 := @this: org.apache.batik.gvt.renderer.MacRenderer;

        $r1 = r0.<org.apache.batik.gvt.renderer.MacRenderer: org.apache.batik.gvt.GraphicsNode rootGN>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<org.apache.batik.gvt.renderer.MacRenderer: java.awt.image.BufferedImage currImg>;

        return $r2;
    }

    public void clearOffScreen()
    {
        java.lang.Throwable $r8;
        java.awt.image.BufferedImage $r1, r2, $r3, $r6, $r7;
        java.awt.AlphaComposite $r5;
        java.awt.Graphics2D $r4;
        org.apache.batik.gvt.renderer.MacRenderer r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.batik.gvt.renderer.MacRenderer;

        $z0 = r0.<org.apache.batik.gvt.renderer.MacRenderer: boolean isDoubleBuffered>;

        if $z0 == 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<org.apache.batik.gvt.renderer.MacRenderer: void updateWorkingBuffers()>();

        $r1 = r0.<org.apache.batik.gvt.renderer.MacRenderer: java.awt.image.BufferedImage workImg>;

        if $r1 != null goto label2;

        return;

     label2:
        r2 = r0.<org.apache.batik.gvt.renderer.MacRenderer: java.awt.image.BufferedImage workImg>;

        entermonitor r2;

     label3:
        $r3 = r0.<org.apache.batik.gvt.renderer.MacRenderer: java.awt.image.BufferedImage workImg>;

        $r4 = virtualinvoke $r3.<java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>();

        $r5 = <java.awt.AlphaComposite: java.awt.AlphaComposite Clear>;

        virtualinvoke $r4.<java.awt.Graphics2D: void setComposite(java.awt.Composite)>($r5);

        $r6 = r0.<org.apache.batik.gvt.renderer.MacRenderer: java.awt.image.BufferedImage workImg>;

        $i0 = virtualinvoke $r6.<java.awt.image.BufferedImage: int getWidth()>();

        $r7 = r0.<org.apache.batik.gvt.renderer.MacRenderer: java.awt.image.BufferedImage workImg>;

        $i1 = virtualinvoke $r7.<java.awt.image.BufferedImage: int getHeight()>();

        virtualinvoke $r4.<java.awt.Graphics: void fillRect(int,int,int,int)>(0, 0, $i0, $i1);

        virtualinvoke $r4.<java.awt.Graphics: void dispose()>();

        exitmonitor r2;

        goto label5;

     label4:
        $r8 := @caughtexception;

        exitmonitor r2;

        throw $r8;

     label5:
        r0.<org.apache.batik.gvt.renderer.MacRenderer: org.apache.batik.ext.awt.geom.RectListManager damagedAreas> = null;

        return;

        catch java.lang.Throwable from label3 to label4 with label4;
    }

    public void flush()
    {
        org.apache.batik.gvt.renderer.MacRenderer r0;

        r0 := @this: org.apache.batik.gvt.renderer.MacRenderer;

        return;
    }

    public void flush(java.awt.Rectangle)
    {
        org.apache.batik.gvt.renderer.MacRenderer r0;
        java.awt.Rectangle r1;

        r0 := @this: org.apache.batik.gvt.renderer.MacRenderer;

        r1 := @parameter0: java.awt.Rectangle;

        return;
    }

    public void flush(java.util.Collection)
    {
        org.apache.batik.gvt.renderer.MacRenderer r0;
        java.util.Collection r1;

        r0 := @this: org.apache.batik.gvt.renderer.MacRenderer;

        r1 := @parameter0: java.util.Collection;

        return;
    }

    protected void updateWorkingBuffers()
    {
        java.awt.image.BufferedImage $r2, $r3, $r4, $r5, $r6;
        org.apache.batik.gvt.GraphicsNode $r1;
        org.apache.batik.gvt.renderer.MacRenderer r0;
        int i0, i1, $i2, $i3, $i4;
        boolean $z0;

        r0 := @this: org.apache.batik.gvt.renderer.MacRenderer;

        $r1 = r0.<org.apache.batik.gvt.renderer.MacRenderer: org.apache.batik.gvt.GraphicsNode rootGN>;

        if $r1 != null goto label1;

        r0.<org.apache.batik.gvt.renderer.MacRenderer: java.awt.image.BufferedImage currImg> = null;

        r0.<org.apache.batik.gvt.renderer.MacRenderer: java.awt.image.BufferedImage workImg> = null;

        return;

     label1:
        i0 = r0.<org.apache.batik.gvt.renderer.MacRenderer: int offScreenWidth>;

        i1 = r0.<org.apache.batik.gvt.renderer.MacRenderer: int offScreenHeight>;

        $r2 = r0.<org.apache.batik.gvt.renderer.MacRenderer: java.awt.image.BufferedImage workImg>;

        if $r2 == null goto label2;

        $r4 = r0.<org.apache.batik.gvt.renderer.MacRenderer: java.awt.image.BufferedImage workImg>;

        $i2 = virtualinvoke $r4.<java.awt.image.BufferedImage: int getWidth()>();

        if $i2 < i0 goto label2;

        $r5 = r0.<org.apache.batik.gvt.renderer.MacRenderer: java.awt.image.BufferedImage workImg>;

        $i3 = virtualinvoke $r5.<java.awt.image.BufferedImage: int getHeight()>();

        if $i3 >= i1 goto label3;

     label2:
        $r6 = new java.awt.image.BufferedImage;

        $i4 = <org.apache.batik.gvt.renderer.MacRenderer: int IMAGE_TYPE>;

        specialinvoke $r6.<java.awt.image.BufferedImage: void <init>(int,int,int)>(i0, i1, $i4);

        r0.<org.apache.batik.gvt.renderer.MacRenderer: java.awt.image.BufferedImage workImg> = $r6;

     label3:
        $z0 = r0.<org.apache.batik.gvt.renderer.MacRenderer: boolean isDoubleBuffered>;

        if $z0 != 0 goto label4;

        $r3 = r0.<org.apache.batik.gvt.renderer.MacRenderer: java.awt.image.BufferedImage workImg>;

        r0.<org.apache.batik.gvt.renderer.MacRenderer: java.awt.image.BufferedImage currImg> = $r3;

     label4:
        return;
    }

    public void repaint(java.awt.Shape)
    {
        java.awt.Shape r0, $r4;
        java.awt.Rectangle $r5;
        org.apache.batik.gvt.renderer.MacRenderer r2;
        org.apache.batik.ext.awt.geom.RectListManager $r1;
        java.awt.geom.AffineTransform $r3;

        r2 := @this: org.apache.batik.gvt.renderer.MacRenderer;

        r0 := @parameter0: java.awt.Shape;

        if r0 != null goto label1;

        return;

     label1:
        $r1 = new org.apache.batik.ext.awt.geom.RectListManager;

        specialinvoke $r1.<org.apache.batik.ext.awt.geom.RectListManager: void <init>()>();

        $r3 = r2.<org.apache.batik.gvt.renderer.MacRenderer: java.awt.geom.AffineTransform usr2dev>;

        $r4 = virtualinvoke $r3.<java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>(r0);

        $r5 = interfaceinvoke $r4.<java.awt.Shape: java.awt.Rectangle getBounds()>();

        virtualinvoke $r1.<org.apache.batik.ext.awt.geom.RectListManager: void add(java.awt.Rectangle)>($r5);

        virtualinvoke r2.<org.apache.batik.gvt.renderer.MacRenderer: void repaint(org.apache.batik.ext.awt.geom.RectListManager)>($r1);

        return;
    }

    public void repaint(org.apache.batik.ext.awt.geom.RectListManager)
    {
        java.awt.RenderingHints $r4;
        org.apache.batik.ext.awt.geom.RectListManager r0, $r17, $r18, $r19, $r20;
        org.apache.batik.gvt.renderer.MacRenderer r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.awt.image.BufferedImage $r3, $r5, $r15, $r16, $r27, r30, r34;
        org.apache.batik.gvt.GraphicsNode $r2, $r14;
        java.awt.geom.AffineTransform $r10, $r13;
        java.lang.Throwable $r28, $r29;
        java.awt.Rectangle $r7, $r9, $r24, r31, r33;
        java.awt.AlphaComposite $r11, $r12, $r22, $r25, $r26;
        java.awt.Graphics2D $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        java.util.Iterator $r21, $r32;
        java.lang.Object $r8, $r23;

        r1 := @this: org.apache.batik.gvt.renderer.MacRenderer;

        r0 := @parameter0: org.apache.batik.ext.awt.geom.RectListManager;

        if r0 != null goto label01;

        return;

     label01:
        virtualinvoke r1.<org.apache.batik.gvt.renderer.MacRenderer: void updateWorkingBuffers()>();

        $r2 = r1.<org.apache.batik.gvt.renderer.MacRenderer: org.apache.batik.gvt.GraphicsNode rootGN>;

        if $r2 == null goto label02;

        $r3 = r1.<org.apache.batik.gvt.renderer.MacRenderer: java.awt.image.BufferedImage workImg>;

        if $r3 != null goto label03;

     label02:
        return;

     label03:
        r30 = r1.<org.apache.batik.gvt.renderer.MacRenderer: java.awt.image.BufferedImage workImg>;

        entermonitor r30;

     label04:
        $r5 = r1.<org.apache.batik.gvt.renderer.MacRenderer: java.awt.image.BufferedImage workImg>;

        $r4 = r1.<org.apache.batik.gvt.renderer.MacRenderer: java.awt.RenderingHints renderingHints>;

        $r6 = staticinvoke <org.apache.batik.ext.awt.image.GraphicsUtil: java.awt.Graphics2D createGraphics(java.awt.image.BufferedImage,java.awt.RenderingHints)>($r5, $r4);

        $r7 = new java.awt.Rectangle;

        $i1 = r1.<org.apache.batik.gvt.renderer.MacRenderer: int offScreenWidth>;

        $i0 = r1.<org.apache.batik.gvt.renderer.MacRenderer: int offScreenHeight>;

        specialinvoke $r7.<java.awt.Rectangle: void <init>(int,int,int,int)>(0, 0, $i1, $i0);

        $z0 = r1.<org.apache.batik.gvt.renderer.MacRenderer: boolean isDoubleBuffered>;

        if $z0 == 0 goto label08;

        $r16 = r1.<org.apache.batik.gvt.renderer.MacRenderer: java.awt.image.BufferedImage currImg>;

        if $r16 == null goto label08;

        $r17 = r1.<org.apache.batik.gvt.renderer.MacRenderer: org.apache.batik.ext.awt.geom.RectListManager damagedAreas>;

        if $r17 == null goto label08;

        $r18 = r1.<org.apache.batik.gvt.renderer.MacRenderer: org.apache.batik.ext.awt.geom.RectListManager damagedAreas>;

        virtualinvoke $r18.<org.apache.batik.ext.awt.geom.RectListManager: void subtract(org.apache.batik.ext.awt.geom.RectListManager,int,int)>(r0, 1000, 10);

        $r19 = r1.<org.apache.batik.gvt.renderer.MacRenderer: org.apache.batik.ext.awt.geom.RectListManager damagedAreas>;

        virtualinvoke $r19.<org.apache.batik.ext.awt.geom.RectListManager: void mergeRects(int,int)>(1000, 10);

        $r20 = r1.<org.apache.batik.gvt.renderer.MacRenderer: org.apache.batik.ext.awt.geom.RectListManager damagedAreas>;

        $r21 = virtualinvoke $r20.<org.apache.batik.ext.awt.geom.RectListManager: java.util.Iterator iterator()>();

        $r22 = <java.awt.AlphaComposite: java.awt.AlphaComposite Src>;

        virtualinvoke $r6.<java.awt.Graphics2D: void setComposite(java.awt.Composite)>($r22);

        goto label07;

     label05:
        $r23 = interfaceinvoke $r21.<java.util.Iterator: java.lang.Object next()>();

        r31 = (java.awt.Rectangle) $r23;

        $z4 = virtualinvoke $r7.<java.awt.Rectangle: boolean intersects(java.awt.Rectangle)>(r31);

        if $z4 != 0 goto label06;

        goto label07;

     label06:
        $r24 = virtualinvoke $r7.<java.awt.Rectangle: java.awt.Rectangle intersection(java.awt.Rectangle)>(r31);

        $i13 = $r24.<java.awt.Rectangle: int x>;

        $i12 = $r24.<java.awt.Rectangle: int y>;

        $i11 = $r24.<java.awt.Rectangle: int width>;

        $i10 = $r24.<java.awt.Rectangle: int height>;

        virtualinvoke $r6.<java.awt.Graphics: void setClip(int,int,int,int)>($i13, $i12, $i11, $i10);

        $r25 = <java.awt.AlphaComposite: java.awt.AlphaComposite Clear>;

        virtualinvoke $r6.<java.awt.Graphics2D: void setComposite(java.awt.Composite)>($r25);

        $i17 = $r24.<java.awt.Rectangle: int x>;

        $i16 = $r24.<java.awt.Rectangle: int y>;

        $i15 = $r24.<java.awt.Rectangle: int width>;

        $i14 = $r24.<java.awt.Rectangle: int height>;

        virtualinvoke $r6.<java.awt.Graphics: void fillRect(int,int,int,int)>($i17, $i16, $i15, $i14);

        $r26 = <java.awt.AlphaComposite: java.awt.AlphaComposite SrcOver>;

        virtualinvoke $r6.<java.awt.Graphics2D: void setComposite(java.awt.Composite)>($r26);

        $r27 = r1.<org.apache.batik.gvt.renderer.MacRenderer: java.awt.image.BufferedImage currImg>;

        virtualinvoke $r6.<java.awt.Graphics: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>($r27, 0, 0, null);

     label07:
        $z5 = interfaceinvoke $r21.<java.util.Iterator: boolean hasNext()>();

        if $z5 != 0 goto label05;

     label08:
        $r32 = virtualinvoke r0.<org.apache.batik.ext.awt.geom.RectListManager: java.util.Iterator iterator()>();

        goto label11;

     label09:
        $r8 = interfaceinvoke $r32.<java.util.Iterator: java.lang.Object next()>();

        r33 = (java.awt.Rectangle) $r8;

        $z1 = virtualinvoke $r7.<java.awt.Rectangle: boolean intersects(java.awt.Rectangle)>(r33);

        if $z1 != 0 goto label10;

        goto label11;

     label10:
        $r9 = virtualinvoke $r7.<java.awt.Rectangle: java.awt.Rectangle intersection(java.awt.Rectangle)>(r33);

        $r10 = <org.apache.batik.gvt.renderer.MacRenderer: java.awt.geom.AffineTransform IDENTITY>;

        virtualinvoke $r6.<java.awt.Graphics2D: void setTransform(java.awt.geom.AffineTransform)>($r10);

        $i5 = $r9.<java.awt.Rectangle: int x>;

        $i4 = $r9.<java.awt.Rectangle: int y>;

        $i3 = $r9.<java.awt.Rectangle: int width>;

        $i2 = $r9.<java.awt.Rectangle: int height>;

        virtualinvoke $r6.<java.awt.Graphics: void setClip(int,int,int,int)>($i5, $i4, $i3, $i2);

        $r11 = <java.awt.AlphaComposite: java.awt.AlphaComposite Clear>;

        virtualinvoke $r6.<java.awt.Graphics2D: void setComposite(java.awt.Composite)>($r11);

        $i9 = $r9.<java.awt.Rectangle: int x>;

        $i8 = $r9.<java.awt.Rectangle: int y>;

        $i7 = $r9.<java.awt.Rectangle: int width>;

        $i6 = $r9.<java.awt.Rectangle: int height>;

        virtualinvoke $r6.<java.awt.Graphics: void fillRect(int,int,int,int)>($i9, $i8, $i7, $i6);

        $r12 = <java.awt.AlphaComposite: java.awt.AlphaComposite SrcOver>;

        virtualinvoke $r6.<java.awt.Graphics2D: void setComposite(java.awt.Composite)>($r12);

        $r13 = r1.<org.apache.batik.gvt.renderer.MacRenderer: java.awt.geom.AffineTransform usr2dev>;

        virtualinvoke $r6.<java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>($r13);

        $r14 = r1.<org.apache.batik.gvt.renderer.MacRenderer: org.apache.batik.gvt.GraphicsNode rootGN>;

        interfaceinvoke $r14.<org.apache.batik.gvt.GraphicsNode: void paint(java.awt.Graphics2D)>($r6);

     label11:
        $z6 = interfaceinvoke $r32.<java.util.Iterator: boolean hasNext()>();

        if $z6 != 0 goto label09;

        virtualinvoke $r6.<java.awt.Graphics: void dispose()>();

        exitmonitor r30;

        goto label13;

     label12:
        $r29 := @caughtexception;

        exitmonitor r30;

        throw $r29;

     label13:
        goto label15;

     label14:
        $r28 := @caughtexception;

        virtualinvoke $r28.<java.lang.Throwable: void printStackTrace()>();

     label15:
        $z2 = staticinvoke <org.apache.batik.util.HaltingThread: boolean hasBeenHalted()>();

        if $z2 == 0 goto label16;

        return;

     label16:
        $z3 = r1.<org.apache.batik.gvt.renderer.MacRenderer: boolean isDoubleBuffered>;

        if $z3 == 0 goto label17;

        r34 = r1.<org.apache.batik.gvt.renderer.MacRenderer: java.awt.image.BufferedImage workImg>;

        $r15 = r1.<org.apache.batik.gvt.renderer.MacRenderer: java.awt.image.BufferedImage currImg>;

        r1.<org.apache.batik.gvt.renderer.MacRenderer: java.awt.image.BufferedImage workImg> = $r15;

        r1.<org.apache.batik.gvt.renderer.MacRenderer: java.awt.image.BufferedImage currImg> = r34;

        r1.<org.apache.batik.gvt.renderer.MacRenderer: org.apache.batik.ext.awt.geom.RectListManager damagedAreas> = r0;

     label17:
        return;

        catch java.lang.Throwable from label04 to label12 with label12;
        catch java.lang.Throwable from label03 to label13 with label14;
    }

    static void <clinit>()
    {
        java.awt.Color $r1;
        java.awt.RenderingHints $r2, $r5, $r8;
        java.awt.geom.AffineTransform $r0;
        java.awt.RenderingHints$Key $r4, $r7;
        java.lang.Object $r3, $r6;

        <org.apache.batik.gvt.renderer.MacRenderer: int COPY_LINE_OVERHEAD> = 10;

        <org.apache.batik.gvt.renderer.MacRenderer: int COPY_OVERHEAD> = 1000;

        $r0 = new java.awt.geom.AffineTransform;

        specialinvoke $r0.<java.awt.geom.AffineTransform: void <init>()>();

        <org.apache.batik.gvt.renderer.MacRenderer: java.awt.geom.AffineTransform IDENTITY> = $r0;

        <org.apache.batik.gvt.renderer.MacRenderer: int IMAGE_TYPE> = 3;

        $r1 = new java.awt.Color;

        specialinvoke $r1.<java.awt.Color: void <init>(int,int,int,int)>(255, 255, 255, 0);

        <org.apache.batik.gvt.renderer.MacRenderer: java.awt.Color TRANSPARENT_WHITE> = $r1;

        $r2 = new java.awt.RenderingHints;

        specialinvoke $r2.<java.awt.RenderingHints: void <init>(java.util.Map)>(null);

        <org.apache.batik.gvt.renderer.MacRenderer: java.awt.RenderingHints defaultRenderingHints> = $r2;

        $r5 = <org.apache.batik.gvt.renderer.MacRenderer: java.awt.RenderingHints defaultRenderingHints>;

        $r4 = <java.awt.RenderingHints: java.awt.RenderingHints$Key KEY_ANTIALIASING>;

        $r3 = <java.awt.RenderingHints: java.lang.Object VALUE_ANTIALIAS_ON>;

        virtualinvoke $r5.<java.awt.RenderingHints: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r3);

        $r8 = <org.apache.batik.gvt.renderer.MacRenderer: java.awt.RenderingHints defaultRenderingHints>;

        $r7 = <java.awt.RenderingHints: java.awt.RenderingHints$Key KEY_INTERPOLATION>;

        $r6 = <java.awt.RenderingHints: java.lang.Object VALUE_INTERPOLATION_BILINEAR>;

        virtualinvoke $r8.<java.awt.RenderingHints: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r6);

        return;
    }
}
