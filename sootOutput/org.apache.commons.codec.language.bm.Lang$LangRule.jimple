final class org.apache.commons.codec.language.bm.Lang$LangRule extends java.lang.Object
{
    private final boolean acceptOnMatch;
    private final java.util.Set languages;
    private final java.util.regex.Pattern pattern;

    private void <init>(java.util.regex.Pattern, java.util.Set, boolean)
    {
        java.util.Set r2;
        org.apache.commons.codec.language.bm.Lang$LangRule r0;
        java.util.regex.Pattern r1;
        boolean z0;

        r0 := @this: org.apache.commons.codec.language.bm.Lang$LangRule;

        r1 := @parameter0: java.util.regex.Pattern;

        r2 := @parameter1: java.util.Set;

        z0 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.codec.language.bm.Lang$LangRule: java.util.regex.Pattern pattern> = r1;

        r0.<org.apache.commons.codec.language.bm.Lang$LangRule: java.util.Set languages> = r2;

        r0.<org.apache.commons.codec.language.bm.Lang$LangRule: boolean acceptOnMatch> = z0;

        return;
    }

    public boolean matches(java.lang.String)
    {
        java.util.regex.Matcher $r3;
        org.apache.commons.codec.language.bm.Lang$LangRule r0;
        java.lang.String r1;
        java.util.regex.Pattern $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.codec.language.bm.Lang$LangRule;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.commons.codec.language.bm.Lang$LangRule: java.util.regex.Pattern pattern>;

        $r3 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1);

        $z0 = virtualinvoke $r3.<java.util.regex.Matcher: boolean find()>();

        return $z0;
    }

    void <init>(java.util.regex.Pattern, java.util.Set, boolean, org.apache.commons.codec.language.bm.Lang$1)
    {
        java.util.Set r2;
        org.apache.commons.codec.language.bm.Lang$LangRule r0;
        java.util.regex.Pattern r1;
        org.apache.commons.codec.language.bm.Lang$1 r3;
        boolean z0;

        r0 := @this: org.apache.commons.codec.language.bm.Lang$LangRule;

        r1 := @parameter0: java.util.regex.Pattern;

        r2 := @parameter1: java.util.Set;

        z0 := @parameter2: boolean;

        r3 := @parameter3: org.apache.commons.codec.language.bm.Lang$1;

        specialinvoke r0.<org.apache.commons.codec.language.bm.Lang$LangRule: void <init>(java.util.regex.Pattern,java.util.Set,boolean)>(r1, r2, z0);

        return;
    }

    static boolean access$100(org.apache.commons.codec.language.bm.Lang$LangRule)
    {
        org.apache.commons.codec.language.bm.Lang$LangRule r0;
        boolean $z0;

        r0 := @parameter0: org.apache.commons.codec.language.bm.Lang$LangRule;

        $z0 = r0.<org.apache.commons.codec.language.bm.Lang$LangRule: boolean acceptOnMatch>;

        return $z0;
    }

    static java.util.Set access$200(org.apache.commons.codec.language.bm.Lang$LangRule)
    {
        java.util.Set $r1;
        org.apache.commons.codec.language.bm.Lang$LangRule r0;

        r0 := @parameter0: org.apache.commons.codec.language.bm.Lang$LangRule;

        $r1 = r0.<org.apache.commons.codec.language.bm.Lang$LangRule: java.util.Set languages>;

        return $r1;
    }
}
