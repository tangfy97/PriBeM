class org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader extends org.apache.lucene.codecs.TermVectorsReader
{
    static final int FORMAT_UTF8_LENGTH_IN_BYTES;
    public static final int FORMAT_CURRENT;
    public static final int FORMAT_MINIMUM;
    static final int FORMAT_SIZE;
    public static final byte STORE_POSITIONS_WITH_TERMVECTOR;
    public static final byte STORE_OFFSET_WITH_TERMVECTOR;
    public static final java.lang.String VECTORS_FIELDS_EXTENSION;
    public static final java.lang.String VECTORS_DOCUMENTS_EXTENSION;
    public static final java.lang.String VECTORS_INDEX_EXTENSION;
    private org.apache.lucene.index.FieldInfos fieldInfos;
    private org.apache.lucene.store.IndexInput tvx;
    private org.apache.lucene.store.IndexInput tvd;
    private org.apache.lucene.store.IndexInput tvf;
    private int size;
    private int numTotalDocs;
    private int docStoreOffset;
    private final org.apache.lucene.store.CompoundFileDirectory storeCFSReader;
    private final int format;
    static final boolean $assertionsDisabled;

    void <init>(org.apache.lucene.index.FieldInfos, org.apache.lucene.store.IndexInput, org.apache.lucene.store.IndexInput, org.apache.lucene.store.IndexInput, int, int, int, int)
    {
        org.apache.lucene.store.IndexInput r2, r3, r4;
        int i0, i1, i2, i3;
        org.apache.lucene.index.FieldInfos r1;
        org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader r0;

        r0 := @this: org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader;

        r1 := @parameter0: org.apache.lucene.index.FieldInfos;

        r2 := @parameter1: org.apache.lucene.store.IndexInput;

        r3 := @parameter2: org.apache.lucene.store.IndexInput;

        r4 := @parameter3: org.apache.lucene.store.IndexInput;

        i0 := @parameter4: int;

        i1 := @parameter5: int;

        i2 := @parameter6: int;

        i3 := @parameter7: int;

        specialinvoke r0.<org.apache.lucene.codecs.TermVectorsReader: void <init>()>();

        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: org.apache.lucene.index.FieldInfos fieldInfos> = r1;

        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: org.apache.lucene.store.IndexInput tvx> = r2;

        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: org.apache.lucene.store.IndexInput tvd> = r3;

        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: org.apache.lucene.store.IndexInput tvf> = r4;

        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: int size> = i0;

        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: int numTotalDocs> = i1;

        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: int docStoreOffset> = i2;

        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: int format> = i3;

        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: org.apache.lucene.store.CompoundFileDirectory storeCFSReader> = null;

        return;
    }

    public void <init>(org.apache.lucene.store.Directory, org.apache.lucene.index.SegmentInfo, org.apache.lucene.index.FieldInfos, org.apache.lucene.store.IOContext) throws org.apache.lucene.index.CorruptIndexException, java.io.IOException
    {
        org.apache.lucene.store.Directory $r19, r24;
        org.apache.lucene.index.FieldInfos r5;
        org.apache.lucene.store.IOContext r3;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.lucene.index.SegmentInfo r1;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12, $r13, $r38;
        org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader r0;
        java.lang.Throwable $r21, $r22, $r23;
        long $l2, $l3;
        java.lang.AssertionError $r35, $r36, $r37, $r39;
        org.apache.lucene.store.CompoundFileDirectory $r34;
        int $i0, $i1, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i16, $i18;
        java.lang.String $r2, $r14, $r20, $r25, $r28, $r31;
        org.apache.lucene.store.IndexInput $r4, $r26, $r27, $r29, $r30, $r32, $r33;

        r0 := @this: org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader;

        r24 := @parameter0: org.apache.lucene.store.Directory;

        r1 := @parameter1: org.apache.lucene.index.SegmentInfo;

        r5 := @parameter2: org.apache.lucene.index.FieldInfos;

        r3 := @parameter3: org.apache.lucene.store.IOContext;

        specialinvoke r0.<org.apache.lucene.codecs.TermVectorsReader: void <init>()>();

        $r2 = staticinvoke <org.apache.lucene.codecs.lucene3x.Lucene3xSegmentInfoFormat: java.lang.String getDocStoreSegment(org.apache.lucene.index.SegmentInfo)>(r1);

        $i0 = staticinvoke <org.apache.lucene.codecs.lucene3x.Lucene3xSegmentInfoFormat: int getDocStoreOffset(org.apache.lucene.index.SegmentInfo)>(r1);

        $i1 = virtualinvoke r1.<org.apache.lucene.index.SegmentInfo: int getDocCount()>();

     label01:
        $i16 = (int) -1;

        if $i0 == $i16 goto label02;

        $z3 = staticinvoke <org.apache.lucene.codecs.lucene3x.Lucene3xSegmentInfoFormat: boolean getDocStoreIsCompoundFile(org.apache.lucene.index.SegmentInfo)>(r1);

        if $z3 == 0 goto label02;

        $r34 = new org.apache.lucene.store.CompoundFileDirectory;

        $r19 = r1.<org.apache.lucene.index.SegmentInfo: org.apache.lucene.store.Directory dir>;

        $r20 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String segmentFileName(java.lang.String,java.lang.String,java.lang.String)>($r2, "", "cfx");

        specialinvoke $r34.<org.apache.lucene.store.CompoundFileDirectory: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.store.IOContext,boolean)>($r19, $r20, r3, 0);

        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: org.apache.lucene.store.CompoundFileDirectory storeCFSReader> = $r34;

        r24 = $r34;

        goto label03;

     label02:
        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: org.apache.lucene.store.CompoundFileDirectory storeCFSReader> = null;

     label03:
        $r25 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String segmentFileName(java.lang.String,java.lang.String,java.lang.String)>($r2, "", "tvx");

        $r26 = virtualinvoke r24.<org.apache.lucene.store.Directory: org.apache.lucene.store.IndexInput openInput(java.lang.String,org.apache.lucene.store.IOContext)>($r25, r3);

        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: org.apache.lucene.store.IndexInput tvx> = $r26;

        $r27 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: org.apache.lucene.store.IndexInput tvx>;

        $i12 = specialinvoke r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: int checkValidFormat(org.apache.lucene.store.IndexInput)>($r27);

        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: int format> = $i12;

        $r28 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String segmentFileName(java.lang.String,java.lang.String,java.lang.String)>($r2, "", "tvd");

        $r29 = virtualinvoke r24.<org.apache.lucene.store.Directory: org.apache.lucene.store.IndexInput openInput(java.lang.String,org.apache.lucene.store.IOContext)>($r28, r3);

        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: org.apache.lucene.store.IndexInput tvd> = $r29;

        $r30 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: org.apache.lucene.store.IndexInput tvd>;

        $i13 = specialinvoke r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: int checkValidFormat(org.apache.lucene.store.IndexInput)>($r30);

        $r31 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String segmentFileName(java.lang.String,java.lang.String,java.lang.String)>($r2, "", "tvf");

        $r32 = virtualinvoke r24.<org.apache.lucene.store.Directory: org.apache.lucene.store.IndexInput openInput(java.lang.String,org.apache.lucene.store.IOContext)>($r31, r3);

        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: org.apache.lucene.store.IndexInput tvf> = $r32;

        $r33 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: org.apache.lucene.store.IndexInput tvf>;

        $i14 = specialinvoke r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: int checkValidFormat(org.apache.lucene.store.IndexInput)>($r33);

        $z4 = <org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: boolean $assertionsDisabled>;

        if $z4 != 0 goto label04;

        $i11 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: int format>;

        if $i11 == $i13 goto label04;

        $r35 = new java.lang.AssertionError;

        specialinvoke $r35.<java.lang.AssertionError: void <init>()>();

        throw $r35;

     label04:
        $z0 = <org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: boolean $assertionsDisabled>;

        if $z0 != 0 goto label05;

        $i10 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: int format>;

        if $i10 == $i14 goto label05;

        $r36 = new java.lang.AssertionError;

        specialinvoke $r36.<java.lang.AssertionError: void <init>()>();

        throw $r36;

     label05:
        $r4 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: org.apache.lucene.store.IndexInput tvx>;

        $l2 = virtualinvoke $r4.<org.apache.lucene.store.IndexInput: long length()>();

        $l3 = $l2 >> 4;

        $i4 = (int) $l3;

        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: int numTotalDocs> = $i4;

        $i18 = (int) -1;

        if $i18 != $i0 goto label06;

        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: int docStoreOffset> = 0;

        $i8 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: int numTotalDocs>;

        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: int size> = $i8;

        $z2 = <org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: boolean $assertionsDisabled>;

        if $z2 != 0 goto label07;

        if $i1 == 0 goto label07;

        $i9 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: int numTotalDocs>;

        if $i9 == $i1 goto label07;

        $r37 = new java.lang.AssertionError;

        specialinvoke $r37.<java.lang.AssertionError: void <init>()>();

        throw $r37;

     label06:
        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: int docStoreOffset> = $i0;

        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: int size> = $i1;

        $z1 = <org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: boolean $assertionsDisabled>;

        if $z1 != 0 goto label07;

        $i6 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: int numTotalDocs>;

        $i5 = $i1 + $i0;

        if $i6 >= $i5 goto label07;

        $r39 = new java.lang.AssertionError;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("numTotalDocs=");

        $i7 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: int numTotalDocs>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" size=");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" docStoreOffset=");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r39.<java.lang.AssertionError: void <init>(java.lang.Object)>($r14);

        throw $r39;

     label07:
        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: org.apache.lucene.index.FieldInfos fieldInfos> = r5;

     label08:
        if 1 != 0 goto label18;

     label09:
        virtualinvoke r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: void close()>();

     label10:
        goto label18;

     label11:
        $r23 := @caughtexception;

        goto label18;

     label12:
        $r22 := @caughtexception;

     label13:
        if 0 != 0 goto label17;

     label14:
        virtualinvoke r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: void close()>();

     label15:
        goto label17;

     label16:
        $r21 := @caughtexception;

     label17:
        throw $r22;

     label18:
        return;

        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label01 to label08 with label12;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    void seekTvx(int) throws java.io.IOException
    {
        org.apache.lucene.store.IndexInput $r1;
        long $l3, $l4, $l5;
        int i0, $i1, $i2;
        org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader r0;

        r0 := @this: org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: org.apache.lucene.store.IndexInput tvx>;

        $i1 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: int docStoreOffset>;

        $i2 = i0 + $i1;

        $l3 = (long) $i2;

        $l4 = $l3 * 16L;

        $l5 = $l4 + 4L;

        virtualinvoke $r1.<org.apache.lucene.store.IndexInput: void seek(long)>($l5);

        return;
    }

    private int checkValidFormat(org.apache.lucene.store.IndexInput) throws org.apache.lucene.index.CorruptIndexException, java.io.IOException
    {
        org.apache.lucene.store.IndexInput r0;
        org.apache.lucene.index.IndexFormatTooNewException $r1;
        int $i0;
        org.apache.lucene.index.IndexFormatTooOldException $r2;
        org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader r3;

        r3 := @this: org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader;

        r0 := @parameter0: org.apache.lucene.store.IndexInput;

        $i0 = virtualinvoke r0.<org.apache.lucene.store.IndexInput: int readInt()>();

        if $i0 >= 4 goto label1;

        $r2 = new org.apache.lucene.index.IndexFormatTooOldException;

        specialinvoke $r2.<org.apache.lucene.index.IndexFormatTooOldException: void <init>(org.apache.lucene.store.DataInput,int,int,int)>(r0, $i0, 4, 4);

        throw $r2;

     label1:
        if $i0 <= 4 goto label2;

        $r1 = new org.apache.lucene.index.IndexFormatTooNewException;

        specialinvoke $r1.<org.apache.lucene.index.IndexFormatTooNewException: void <init>(org.apache.lucene.store.DataInput,int,int,int)>(r0, $i0, 4, 4);

        throw $r1;

     label2:
        return $i0;
    }

    public void close() throws java.io.IOException
    {
        org.apache.lucene.store.IndexInput $r2, $r3, $r4;
        org.apache.lucene.store.CompoundFileDirectory $r5;
        java.io.Closeable[] $r0;
        org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader r1;

        r1 := @this: org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader;

        $r0 = newarray (java.io.Closeable)[4];

        $r2 = r1.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: org.apache.lucene.store.IndexInput tvx>;

        $r0[0] = $r2;

        $r3 = r1.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: org.apache.lucene.store.IndexInput tvd>;

        $r0[1] = $r3;

        $r4 = r1.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: org.apache.lucene.store.IndexInput tvf>;

        $r0[2] = $r4;

        $r5 = r1.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: org.apache.lucene.store.CompoundFileDirectory storeCFSReader>;

        $r0[3] = $r5;

        staticinvoke <org.apache.lucene.util.IOUtils: void close(java.io.Closeable[])>($r0);

        return;
    }

    int size()
    {
        int $i0;
        org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader r0;

        r0 := @this: org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader;

        $i0 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: int size>;

        return $i0;
    }

    public org.apache.lucene.index.Fields get(int) throws java.io.IOException
    {
        org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVFields $r2;
        org.apache.lucene.store.IndexInput $r1;
        int i0, $i1;
        org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader r0;

        r0 := @this: org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: org.apache.lucene.store.IndexInput tvx>;

        if $r1 == null goto label2;

        $r2 = new org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVFields;

        specialinvoke $r2.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVFields: void <init>(org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader,int)>(r0, i0);

        $i1 = virtualinvoke $r2.<org.apache.lucene.index.Fields: int size()>();

        if $i1 != 0 goto label1;

        return null;

     label1:
        return $r2;

     label2:
        return null;
    }

    public org.apache.lucene.codecs.TermVectorsReader clone()
    {
        int $i0, $i1, $i2, $i3;
        org.apache.lucene.index.FieldInfos $r11;
        org.apache.lucene.store.IndexInput $r1, $r2, $r3, $r4, $r5, $r6, r7, r8, r9;
        org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader r0, $r10;

        r0 := @this: org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader;

        r7 = null;

        r8 = null;

        r9 = null;

        $r1 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: org.apache.lucene.store.IndexInput tvx>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: org.apache.lucene.store.IndexInput tvd>;

        if $r2 == null goto label1;

        $r3 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: org.apache.lucene.store.IndexInput tvf>;

        if $r3 == null goto label1;

        $r4 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: org.apache.lucene.store.IndexInput tvx>;

        r7 = virtualinvoke $r4.<org.apache.lucene.store.IndexInput: org.apache.lucene.store.IndexInput clone()>();

        $r5 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: org.apache.lucene.store.IndexInput tvd>;

        r8 = virtualinvoke $r5.<org.apache.lucene.store.IndexInput: org.apache.lucene.store.IndexInput clone()>();

        $r6 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: org.apache.lucene.store.IndexInput tvf>;

        r9 = virtualinvoke $r6.<org.apache.lucene.store.IndexInput: org.apache.lucene.store.IndexInput clone()>();

     label1:
        $r10 = new org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader;

        $r11 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: org.apache.lucene.index.FieldInfos fieldInfos>;

        $i0 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: int size>;

        $i1 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: int numTotalDocs>;

        $i2 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: int docStoreOffset>;

        $i3 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: int format>;

        specialinvoke $r10.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: void <init>(org.apache.lucene.index.FieldInfos,org.apache.lucene.store.IndexInput,org.apache.lucene.store.IndexInput,org.apache.lucene.store.IndexInput,int,int,int,int)>($r11, r7, r8, r9, $i0, $i1, $i2, $i3);

        return $r10;
    }

    protected boolean sortTermsByUnicode()
    {
        org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader r0;

        r0 := @this: org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader;

        return 1;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.lucene.codecs.TermVectorsReader $r1;
        org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader r0;

        r0 := @this: org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader;

        $r1 = virtualinvoke r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: org.apache.lucene.codecs.TermVectorsReader clone()>();

        return $r1;
    }

    static org.apache.lucene.store.IndexInput access$000(org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader)
    {
        org.apache.lucene.store.IndexInput $r1;
        org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader r0;

        r0 := @parameter0: org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader;

        $r1 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: org.apache.lucene.store.IndexInput tvx>;

        return $r1;
    }

    static org.apache.lucene.store.IndexInput access$100(org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader)
    {
        org.apache.lucene.store.IndexInput $r1;
        org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader r0;

        r0 := @parameter0: org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader;

        $r1 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: org.apache.lucene.store.IndexInput tvd>;

        return $r1;
    }

    static org.apache.lucene.index.FieldInfos access$300(org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader)
    {
        org.apache.lucene.index.FieldInfos $r1;
        org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader r0;

        r0 := @parameter0: org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader;

        $r1 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: org.apache.lucene.index.FieldInfos fieldInfos>;

        return $r1;
    }

    static org.apache.lucene.store.IndexInput access$400(org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader)
    {
        org.apache.lucene.store.IndexInput $r1;
        org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader r0;

        r0 := @parameter0: org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader;

        $r1 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: org.apache.lucene.store.IndexInput tvf>;

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        <org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: java.lang.String VECTORS_INDEX_EXTENSION> = "tvx";

        <org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: java.lang.String VECTORS_DOCUMENTS_EXTENSION> = "tvd";

        <org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: java.lang.String VECTORS_FIELDS_EXTENSION> = "tvf";

        <org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: byte STORE_OFFSET_WITH_TERMVECTOR> = 2;

        <org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: byte STORE_POSITIONS_WITH_TERMVECTOR> = 1;

        <org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: int FORMAT_SIZE> = 4;

        <org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: int FORMAT_MINIMUM> = 4;

        <org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: int FORMAT_CURRENT> = 4;

        <org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: int FORMAT_UTF8_LENGTH_IN_BYTES> = 4;

        $r0 = class "Lorg/apache/lucene/codecs/lucene3x/Lucene3xTermVectorsReader;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: boolean $assertionsDisabled> = $z1;

        return;
    }
}
