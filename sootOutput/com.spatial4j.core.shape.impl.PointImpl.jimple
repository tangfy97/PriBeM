public class com.spatial4j.core.shape.impl.PointImpl extends java.lang.Object implements com.spatial4j.core.shape.Point
{
    private final com.spatial4j.core.context.SpatialContext ctx;
    private double x;
    private double y;
    static final boolean $assertionsDisabled;

    public void <init>(double, double, com.spatial4j.core.context.SpatialContext)
    {
        com.spatial4j.core.context.SpatialContext r1;
        com.spatial4j.core.shape.impl.PointImpl r0;
        double d0, d1;

        r0 := @this: com.spatial4j.core.shape.impl.PointImpl;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        r1 := @parameter2: com.spatial4j.core.context.SpatialContext;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.spatial4j.core.shape.impl.PointImpl: com.spatial4j.core.context.SpatialContext ctx> = r1;

        virtualinvoke r0.<com.spatial4j.core.shape.impl.PointImpl: void reset(double,double)>(d0, d1);

        return;
    }

    public void reset(double, double)
    {
        com.spatial4j.core.shape.impl.PointImpl r0;
        double d0, d1;

        r0 := @this: com.spatial4j.core.shape.impl.PointImpl;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        r0.<com.spatial4j.core.shape.impl.PointImpl: double x> = d0;

        r0.<com.spatial4j.core.shape.impl.PointImpl: double y> = d1;

        return;
    }

    public double getX()
    {
        com.spatial4j.core.shape.impl.PointImpl r0;
        double $d0;

        r0 := @this: com.spatial4j.core.shape.impl.PointImpl;

        $d0 = r0.<com.spatial4j.core.shape.impl.PointImpl: double x>;

        return $d0;
    }

    public double getY()
    {
        com.spatial4j.core.shape.impl.PointImpl r0;
        double $d0;

        r0 := @this: com.spatial4j.core.shape.impl.PointImpl;

        $d0 = r0.<com.spatial4j.core.shape.impl.PointImpl: double y>;

        return $d0;
    }

    public com.spatial4j.core.shape.Rectangle getBoundingBox()
    {
        com.spatial4j.core.context.SpatialContext $r1;
        com.spatial4j.core.shape.Rectangle $r2;
        com.spatial4j.core.shape.impl.PointImpl r0;

        r0 := @this: com.spatial4j.core.shape.impl.PointImpl;

        $r1 = r0.<com.spatial4j.core.shape.impl.PointImpl: com.spatial4j.core.context.SpatialContext ctx>;

        $r2 = virtualinvoke $r1.<com.spatial4j.core.context.SpatialContext: com.spatial4j.core.shape.Rectangle makeRectangle(com.spatial4j.core.shape.Point,com.spatial4j.core.shape.Point)>(r0, r0);

        return $r2;
    }

    public com.spatial4j.core.shape.impl.PointImpl getCenter()
    {
        com.spatial4j.core.shape.impl.PointImpl r0;

        r0 := @this: com.spatial4j.core.shape.impl.PointImpl;

        return r0;
    }

    public com.spatial4j.core.shape.SpatialRelation relate(com.spatial4j.core.shape.Shape)
    {
        com.spatial4j.core.shape.Shape r0;
        com.spatial4j.core.shape.SpatialRelation $r2, $r3, $r4;
        boolean $z0, $z1;
        com.spatial4j.core.shape.impl.PointImpl r1;

        r1 := @this: com.spatial4j.core.shape.impl.PointImpl;

        r0 := @parameter0: com.spatial4j.core.shape.Shape;

        $z0 = r0 instanceof com.spatial4j.core.shape.Point;

        if $z0 == 0 goto label3;

        $z1 = virtualinvoke r1.<com.spatial4j.core.shape.impl.PointImpl: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label1;

        $r4 = <com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation INTERSECTS>;

        goto label2;

     label1:
        $r4 = <com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation DISJOINT>;

     label2:
        return $r4;

     label3:
        $r2 = interfaceinvoke r0.<com.spatial4j.core.shape.Shape: com.spatial4j.core.shape.SpatialRelation relate(com.spatial4j.core.shape.Shape)>(r1);

        $r3 = virtualinvoke $r2.<com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation transpose()>();

        return $r3;
    }

    public boolean hasArea()
    {
        com.spatial4j.core.shape.impl.PointImpl r0;

        r0 := @this: com.spatial4j.core.shape.impl.PointImpl;

        return 0;
    }

    public double getArea(com.spatial4j.core.context.SpatialContext)
    {
        com.spatial4j.core.context.SpatialContext r1;
        com.spatial4j.core.shape.impl.PointImpl r0;

        r0 := @this: com.spatial4j.core.shape.impl.PointImpl;

        r1 := @parameter0: com.spatial4j.core.context.SpatialContext;

        return 0.0;
    }

    public java.lang.String toString()
    {
        com.spatial4j.core.shape.impl.PointImpl r2;
        java.lang.StringBuilder $r0, $r1, $r3, $r4, $r5, $r6;
        java.lang.String $r7;
        double $d0, $d1;

        r2 := @this: com.spatial4j.core.shape.impl.PointImpl;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Pt(x=");

        $d0 = r2.<com.spatial4j.core.shape.impl.PointImpl: double x>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",y=");

        $d1 = r2.<com.spatial4j.core.shape.impl.PointImpl: double y>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object r1;
        com.spatial4j.core.shape.impl.PointImpl r0;
        boolean $z0;

        r0 := @this: com.spatial4j.core.shape.impl.PointImpl;

        r1 := @parameter0: java.lang.Object;

        $z0 = staticinvoke <com.spatial4j.core.shape.impl.PointImpl: boolean equals(com.spatial4j.core.shape.Point,java.lang.Object)>(r0, r1);

        return $z0;
    }

    public static boolean equals(com.spatial4j.core.shape.Point, java.lang.Object)
    {
        java.lang.AssertionError $r3;
        com.spatial4j.core.shape.Point r0, r2;
        int $i0, $i1;
        java.lang.Object r1;
        boolean $z0, $z1;
        double $d0, $d1, $d2, $d3;

        r0 := @parameter0: com.spatial4j.core.shape.Point;

        r1 := @parameter1: java.lang.Object;

        $z0 = <com.spatial4j.core.shape.impl.PointImpl: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if r0 != null goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        if r0 != r1 goto label2;

        return 1;

     label2:
        $z1 = r1 instanceof com.spatial4j.core.shape.Point;

        if $z1 != 0 goto label3;

        return 0;

     label3:
        r2 = (com.spatial4j.core.shape.Point) r1;

        $d0 = interfaceinvoke r2.<com.spatial4j.core.shape.Point: double getX()>();

        $d1 = interfaceinvoke r0.<com.spatial4j.core.shape.Point: double getX()>();

        $i0 = staticinvoke <java.lang.Double: int compare(double,double)>($d0, $d1);

        if $i0 == 0 goto label4;

        return 0;

     label4:
        $d2 = interfaceinvoke r2.<com.spatial4j.core.shape.Point: double getY()>();

        $d3 = interfaceinvoke r0.<com.spatial4j.core.shape.Point: double getY()>();

        $i1 = staticinvoke <java.lang.Double: int compare(double,double)>($d2, $d3);

        if $i1 == 0 goto label5;

        return 0;

     label5:
        return 1;
    }

    public int hashCode()
    {
        int $i0;
        com.spatial4j.core.shape.impl.PointImpl r0;

        r0 := @this: com.spatial4j.core.shape.impl.PointImpl;

        $i0 = staticinvoke <com.spatial4j.core.shape.impl.PointImpl: int hashCode(com.spatial4j.core.shape.Point)>(r0);

        return $i0;
    }

    public static int hashCode(com.spatial4j.core.shape.Point)
    {
        long $l1, $l2, $l4, $l5, $l10, $l11;
        byte $b0, $b3;
        com.spatial4j.core.shape.Point r0;
        int $i6, $i7, $i8, $i9;
        double $d0, $d1, $d2, $d3;

        r0 := @parameter0: com.spatial4j.core.shape.Point;

        $d0 = interfaceinvoke r0.<com.spatial4j.core.shape.Point: double getX()>();

        $b0 = $d0 cmpl 0.0;

        if $b0 == 0 goto label1;

        $d3 = interfaceinvoke r0.<com.spatial4j.core.shape.Point: double getX()>();

        $l10 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d3);

        goto label2;

     label1:
        $l10 = 0L;

     label2:
        $l1 = $l10 >>> 32;

        $l2 = $l10 ^ $l1;

        $i9 = (int) $l2;

        $d1 = interfaceinvoke r0.<com.spatial4j.core.shape.Point: double getY()>();

        $b3 = $d1 cmpl 0.0;

        if $b3 == 0 goto label3;

        $d2 = interfaceinvoke r0.<com.spatial4j.core.shape.Point: double getY()>();

        $l11 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d2);

        goto label4;

     label3:
        $l11 = 0L;

     label4:
        $i7 = 31 * $i9;

        $l4 = $l11 >>> 32;

        $l5 = $l11 ^ $l4;

        $i6 = (int) $l5;

        $i8 = $i7 + $i6;

        return $i8;
    }

    public volatile com.spatial4j.core.shape.Point getCenter()
    {
        com.spatial4j.core.shape.impl.PointImpl r0, $r1;

        r0 := @this: com.spatial4j.core.shape.impl.PointImpl;

        $r1 = virtualinvoke r0.<com.spatial4j.core.shape.impl.PointImpl: com.spatial4j.core.shape.impl.PointImpl getCenter()>();

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lcom/spatial4j/core/shape/impl/PointImpl;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.spatial4j.core.shape.impl.PointImpl: boolean $assertionsDisabled> = $z1;

        return;
    }
}
