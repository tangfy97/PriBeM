public class com.pff.PSTDistList extends com.pff.PSTMessage
{
    private byte[] oneOffEntryIdUid;
    private byte[] wrappedEntryIdUid;

    void <init>(com.pff.PSTFile, com.pff.DescriptorIndexNode) throws com.pff.PSTException, java.io.IOException
    {
        byte[] $r3, $r4;
        com.pff.PSTDistList r0;
        com.pff.PSTFile r1;
        com.pff.DescriptorIndexNode r2;

        r0 := @this: com.pff.PSTDistList;

        r1 := @parameter0: com.pff.PSTFile;

        r2 := @parameter1: com.pff.DescriptorIndexNode;

        specialinvoke r0.<com.pff.PSTMessage: void <init>(com.pff.PSTFile,com.pff.DescriptorIndexNode)>(r1, r2);

        $r3 = newarray (byte)[16];

        $r3[0] = -127;

        $r3[1] = 43;

        $r3[2] = 31;

        $r3[3] = -92;

        $r3[4] = -66;

        $r3[5] = -93;

        $r3[6] = 16;

        $r3[7] = 25;

        $r3[8] = -99;

        $r3[9] = 110;

        $r3[10] = 0;

        $r3[11] = -35;

        $r3[12] = 1;

        $r3[13] = 15;

        $r3[14] = 84;

        $r3[15] = 2;

        r0.<com.pff.PSTDistList: byte[] oneOffEntryIdUid> = $r3;

        $r4 = newarray (byte)[16];

        $r4[0] = -64;

        $r4[1] = -111;

        $r4[2] = -83;

        $r4[3] = -45;

        $r4[4] = 81;

        $r4[5] = -99;

        $r4[6] = -49;

        $r4[7] = 17;

        $r4[8] = -92;

        $r4[9] = -87;

        $r4[10] = 0;

        $r4[11] = -86;

        $r4[12] = 0;

        $r4[13] = 71;

        $r4[14] = -6;

        $r4[15] = -92;

        r0.<com.pff.PSTDistList: byte[] wrappedEntryIdUid> = $r4;

        return;
    }

    void <init>(com.pff.PSTFile, com.pff.DescriptorIndexNode, com.pff.PSTTableBC, java.util.HashMap)
    {
        byte[] $r5, $r6;
        com.pff.PSTDistList r0;
        com.pff.PSTFile r1;
        com.pff.DescriptorIndexNode r2;
        java.util.HashMap r4;
        com.pff.PSTTableBC r3;

        r0 := @this: com.pff.PSTDistList;

        r1 := @parameter0: com.pff.PSTFile;

        r2 := @parameter1: com.pff.DescriptorIndexNode;

        r3 := @parameter2: com.pff.PSTTableBC;

        r4 := @parameter3: java.util.HashMap;

        specialinvoke r0.<com.pff.PSTMessage: void <init>(com.pff.PSTFile,com.pff.DescriptorIndexNode,com.pff.PSTTableBC,java.util.HashMap)>(r1, r2, r3, r4);

        $r5 = newarray (byte)[16];

        $r5[0] = -127;

        $r5[1] = 43;

        $r5[2] = 31;

        $r5[3] = -92;

        $r5[4] = -66;

        $r5[5] = -93;

        $r5[6] = 16;

        $r5[7] = 25;

        $r5[8] = -99;

        $r5[9] = 110;

        $r5[10] = 0;

        $r5[11] = -35;

        $r5[12] = 1;

        $r5[13] = 15;

        $r5[14] = 84;

        $r5[15] = 2;

        r0.<com.pff.PSTDistList: byte[] oneOffEntryIdUid> = $r5;

        $r6 = newarray (byte)[16];

        $r6[0] = -64;

        $r6[1] = -111;

        $r6[2] = -83;

        $r6[3] = -45;

        $r6[4] = 81;

        $r6[5] = -99;

        $r6[6] = -49;

        $r6[7] = 17;

        $r6[8] = -92;

        $r6[9] = -87;

        $r6[10] = 0;

        $r6[11] = -86;

        $r6[12] = 0;

        $r6[13] = 71;

        $r6[14] = -6;

        $r6[15] = -92;

        r0.<com.pff.PSTDistList: byte[] wrappedEntryIdUid> = $r6;

        return;
    }

    private int findNextNullChar(byte[], int)
    {
        byte[] r0;
        com.pff.PSTDistList r1;
        byte $b1, $b3;
        int $i0, $i2, i4;

        r1 := @this: com.pff.PSTDistList;

        r0 := @parameter0: byte[];

        i4 := @parameter1: int;

     label1:
        $i0 = lengthof r0;

        if i4 >= $i0 goto label3;

        $b1 = r0[i4];

        if $b1 != 0 goto label2;

        $i2 = i4 + 1;

        $b3 = r0[$i2];

        if $b3 != 0 goto label2;

        goto label3;

     label2:
        i4 = i4 + 2;

        goto label1;

     label3:
        return i4;
    }

    private com.pff.PSTDistList$OneOffEntry parseOneOffEntry(byte[], int) throws java.io.IOException
    {
        byte[] r0, r2, r4, r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, i13, i14, i15, i16;
        java.lang.String $r3, $r5, $r7;
        com.pff.PSTDistList r1;
        com.pff.PSTDistList$OneOffEntry $r8;

        r1 := @this: com.pff.PSTDistList;

        r0 := @parameter0: byte[];

        i11 := @parameter1: int;

        $i0 = i11 + 2;

        staticinvoke <com.pff.PSTObject: long convertLittleEndianBytesToLong(byte[],int,int)>(r0, i11, $i0);

        i12 = i11 + 2;

        $i1 = i12 + 2;

        staticinvoke <com.pff.PSTObject: long convertLittleEndianBytesToLong(byte[],int,int)>(r0, i12, $i1);

        i13 = i12 + 2;

        $i2 = specialinvoke r1.<com.pff.PSTDistList: int findNextNullChar(byte[],int)>(r0, i13);

        $i3 = $i2 - i13;

        r2 = newarray (byte)[$i3];

        $i4 = lengthof r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, i13, r2, 0, $i4);

        $r3 = new java.lang.String;

        specialinvoke $r3.<java.lang.String: void <init>(byte[],java.lang.String)>(r2, "UTF-16LE");

        i14 = $i2 + 2;

        $i5 = specialinvoke r1.<com.pff.PSTDistList: int findNextNullChar(byte[],int)>(r0, i14);

        $i6 = $i5 - i14;

        r4 = newarray (byte)[$i6];

        $i7 = lengthof r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, i14, r4, 0, $i7);

        $r5 = new java.lang.String;

        specialinvoke $r5.<java.lang.String: void <init>(byte[],java.lang.String)>(r4, "UTF-16LE");

        i15 = $i5 + 2;

        $i8 = specialinvoke r1.<com.pff.PSTDistList: int findNextNullChar(byte[],int)>(r0, i15);

        $i9 = $i8 - i15;

        r6 = newarray (byte)[$i9];

        $i10 = lengthof r6;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, i15, r6, 0, $i10);

        $r7 = new java.lang.String;

        specialinvoke $r7.<java.lang.String: void <init>(byte[],java.lang.String)>(r6, "UTF-16LE");

        i16 = $i8 + 2;

        $r8 = new com.pff.PSTDistList$OneOffEntry;

        specialinvoke $r8.<com.pff.PSTDistList$OneOffEntry: void <init>(com.pff.PSTDistList)>(r1);

        staticinvoke <com.pff.PSTDistList$OneOffEntry: java.lang.String access$002(com.pff.PSTDistList$OneOffEntry,java.lang.String)>($r8, $r3);

        staticinvoke <com.pff.PSTDistList$OneOffEntry: java.lang.String access$102(com.pff.PSTDistList$OneOffEntry,java.lang.String)>($r8, $r5);

        staticinvoke <com.pff.PSTDistList$OneOffEntry: java.lang.String access$202(com.pff.PSTDistList$OneOffEntry,java.lang.String)>($r8, $r7);

        staticinvoke <com.pff.PSTDistList$OneOffEntry: int access$302(com.pff.PSTDistList$OneOffEntry,int)>($r8, i16);

        return $r8;
    }

    public java.lang.Object[] getDistributionListMembers() throws com.pff.PSTException, java.io.IOException
    {
        byte[] $r6, $r7, $r8, r9, $r10, $r11, $r12, $r13, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r24;
        java.lang.Integer $r3;
        byte $b6, $b7, $b8, $b16;
        com.pff.PSTObject $r23;
        boolean $z0, $z1;
        com.pff.PSTDistList$OneOffEntry $r14;
        com.pff.PSTFile $r1, $r22;
        java.lang.Object[] r25;
        java.util.HashMap $r2;
        long $l1, $l3, $l13, $l14;
        short $s9, $s26;
        com.pff.PSTTableBCItem r5;
        int $i0, i2, $i4, $i5, $i10, $i11, $i12, $i15, i17, i18, i19, i20, i21, i22, i23, $i25, $i27;
        com.pff.PSTDistList r0;
        java.lang.Object $r4;

        r0 := @this: com.pff.PSTDistList;

        $r2 = r0.<com.pff.PSTDistList: java.util.HashMap items>;

        $r1 = r0.<com.pff.PSTDistList: com.pff.PSTFile pstFile>;

        $i25 = (int) 32853;

        $i0 = virtualinvoke $r1.<com.pff.PSTFile: int getNameToIdMapItem(int,int)>($i25, 2);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r4 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

        r5 = (com.pff.PSTTableBCItem) $r4;

        r25 = newarray (java.lang.Object)[0];

        if r5 == null goto label5;

        $r6 = r5.<com.pff.PSTTableBCItem: byte[] data>;

        $l1 = staticinvoke <com.pff.PSTObject: long convertLittleEndianBytesToLong(byte[],int,int)>($r6, 0, 4);

        i2 = (int) $l1;

        r25 = newarray (java.lang.Object)[i2];

        $r7 = r5.<com.pff.PSTTableBCItem: byte[] data>;

        $l3 = staticinvoke <com.pff.PSTObject: long convertLittleEndianBytesToLong(byte[],int,int)>($r7, 4, 8);

        i17 = (int) $l3;

        i18 = 0;

     label1:
        if i18 >= i2 goto label5;

        $r8 = r5.<com.pff.PSTTableBCItem: byte[] data>;

        $i4 = i17 + 4;

        staticinvoke <com.pff.PSTObject: long convertLittleEndianBytesToLong(byte[],int,int)>($r8, i17, $i4);

        i19 = i17 + 4;

        r9 = newarray (byte)[16];

        $r10 = r5.<com.pff.PSTTableBCItem: byte[] data>;

        $i5 = lengthof r9;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r10, i19, r9, 0, $i5);

        i17 = i19 + 16;

        $r11 = r0.<com.pff.PSTDistList: byte[] wrappedEntryIdUid>;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r9, $r11);

        if $z0 == 0 goto label3;

        $r15 = r5.<com.pff.PSTTableBCItem: byte[] data>;

        $b6 = $r15[i17];

        $r16 = r5.<com.pff.PSTTableBCItem: byte[] data>;

        $b7 = $r16[i17];

        $r17 = r5.<com.pff.PSTTableBCItem: byte[] data>;

        $b8 = $r17[i17];

        $s26 = (short) $b8;

        $s9 = $s26 & 128;

        $i27 = (int) $s9;

        if $i27 <= 0 goto label2;

        goto label2;

     label2:
        i20 = i17 + 1;

        $r18 = r5.<com.pff.PSTTableBCItem: byte[] data>;

        $i10 = i20 + 4;

        staticinvoke <com.pff.PSTObject: long convertLittleEndianBytesToLong(byte[],int,int)>($r18, i20, $i10);

        i21 = i20 + 4;

        $r24 = newarray (byte)[16];

        $r19 = r5.<com.pff.PSTTableBCItem: byte[] data>;

        $i11 = lengthof r9;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r19, i21, r9, 0, $i11);

        i22 = i21 + 16;

        $r20 = r5.<com.pff.PSTTableBCItem: byte[] data>;

        $i12 = i22 + 3;

        $l13 = staticinvoke <com.pff.PSTObject: long convertLittleEndianBytesToLong(byte[],int,int)>($r20, i22, $i12);

        $i15 = (int) $l13;

        i23 = i22 + 3;

        $r21 = r5.<com.pff.PSTTableBCItem: byte[] data>;

        $b16 = $r21[i23];

        i17 = i23 + 1;

        $r22 = r0.<com.pff.PSTDistList: com.pff.PSTFile pstFile>;

        $l14 = (long) $i15;

        $r23 = staticinvoke <com.pff.PSTObject: com.pff.PSTObject detectAndLoadPSTObject(com.pff.PSTFile,long)>($r22, $l14);

        r25[i18] = $r23;

        goto label4;

     label3:
        $r12 = r0.<com.pff.PSTDistList: byte[] oneOffEntryIdUid>;

        $z1 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r9, $r12);

        if $z1 == 0 goto label4;

        $r13 = r5.<com.pff.PSTTableBCItem: byte[] data>;

        $r14 = specialinvoke r0.<com.pff.PSTDistList: com.pff.PSTDistList$OneOffEntry parseOneOffEntry(byte[],int)>($r13, i17);

        i17 = staticinvoke <com.pff.PSTDistList$OneOffEntry: int access$300(com.pff.PSTDistList$OneOffEntry)>($r14);

        r25[i18] = $r14;

     label4:
        i18 = i18 + 1;

        goto label1;

     label5:
        return r25;
    }
}
