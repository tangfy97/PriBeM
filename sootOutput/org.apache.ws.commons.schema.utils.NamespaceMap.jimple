public class org.apache.ws.commons.schema.utils.NamespaceMap extends java.util.HashMap implements org.apache.ws.commons.schema.utils.NamespacePrefixList
{
    private static final long serialVersionUID;

    public void <init>()
    {
        org.apache.ws.commons.schema.utils.NamespaceMap r0;

        r0 := @this: org.apache.ws.commons.schema.utils.NamespaceMap;

        specialinvoke r0.<java.util.HashMap: void <init>()>();

        return;
    }

    public void <init>(java.util.Map)
    {
        org.apache.ws.commons.schema.utils.NamespaceMap r0;
        java.util.Map r1;

        r0 := @this: org.apache.ws.commons.schema.utils.NamespaceMap;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<java.util.HashMap: void <init>(java.util.Map)>(r1);

        return;
    }

    public void add(java.lang.String, java.lang.String)
    {
        org.apache.ws.commons.schema.utils.NamespaceMap r0;
        java.lang.String r1, r2;

        r0 := @this: org.apache.ws.commons.schema.utils.NamespaceMap;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<org.apache.ws.commons.schema.utils.NamespaceMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public java.lang.String[] getDeclaredPrefixes()
    {
        org.apache.ws.commons.schema.utils.NamespaceMap r0;
        java.lang.Object[] $r3;
        int $i0;
        java.util.Set $r1;
        java.lang.String[] $r2, $r4, $r5;

        r0 := @this: org.apache.ws.commons.schema.utils.NamespaceMap;

        $r1 = virtualinvoke r0.<org.apache.ws.commons.schema.utils.NamespaceMap: java.util.Set keySet()>();

        $i0 = interfaceinvoke $r1.<java.util.Set: int size()>();

        $r2 = newarray (java.lang.String)[$i0];

        $r3 = interfaceinvoke $r1.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r2);

        $r4 = (java.lang.String[]) $r3;

        $r5 = (java.lang.String[]) $r4;

        return $r5;
    }

    public java.lang.String getNamespaceURI(java.lang.String)
    {
        org.apache.ws.commons.schema.utils.NamespaceMap r0;
        java.lang.Object $r2;
        java.lang.String r1, $r3;

        r0 := @this: org.apache.ws.commons.schema.utils.NamespaceMap;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.ws.commons.schema.utils.NamespaceMap: java.lang.Object get(java.lang.Object)>(r1);

        if $r2 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

     label2:
        return $r3;
    }

    public java.lang.String getPrefix(java.lang.String)
    {
        org.apache.ws.commons.schema.utils.NamespaceMap r0;
        java.util.Map$Entry r4;
        java.util.Iterator $r2;
        java.util.Set $r1;
        java.lang.Object $r3, $r5, $r8;
        java.lang.String $r6, r7, $r9;
        boolean $z0, $z1;

        r0 := @this: org.apache.ws.commons.schema.utils.NamespaceMap;

        r7 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.ws.commons.schema.utils.NamespaceMap: java.util.Set entrySet()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r3;

        $r5 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r7);

        if $z1 == 0 goto label2;

        $r8 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r9 = (java.lang.String) $r8;

        return $r9;

     label2:
        goto label1;

     label3:
        return null;
    }

    public java.util.Iterator getPrefixes(java.lang.String)
    {
        org.apache.ws.commons.schema.utils.NamespaceMap r1;
        java.util.Map$Entry r6;
        java.util.Iterator $r3, $r4;
        java.util.Set $r2;
        java.util.ArrayList $r0;
        java.lang.Object $r5, $r7, $r10;
        java.lang.String $r8, r9;
        boolean $z0, $z1;

        r1 := @this: org.apache.ws.commons.schema.utils.NamespaceMap;

        r9 := @parameter0: java.lang.String;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = virtualinvoke r1.<org.apache.ws.commons.schema.utils.NamespaceMap: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r5;

        $r7 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>();

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r9);

        if $z1 == 0 goto label2;

        $r10 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r10);

     label2:
        goto label1;

     label3:
        $r4 = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>();

        return $r4;
    }

    public static void <clinit>()
    {
        <org.apache.ws.commons.schema.utils.NamespaceMap: long serialVersionUID> = 1L;

        return;
    }
}
