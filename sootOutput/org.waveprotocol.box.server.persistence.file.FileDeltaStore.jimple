public class org.waveprotocol.box.server.persistence.file.FileDeltaStore extends java.lang.Object implements org.waveprotocol.box.server.waveserver.DeltaStore
{
    private final java.lang.String basePath;

    public void <init>(java.lang.String)
    {
        java.lang.String r1;
        org.waveprotocol.box.server.persistence.file.FileDeltaStore r0;

        r0 := @this: org.waveprotocol.box.server.persistence.file.FileDeltaStore;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "Requested path is null");

        r0.<org.waveprotocol.box.server.persistence.file.FileDeltaStore: java.lang.String basePath> = r1;

        return;
    }

    public org.waveprotocol.box.server.persistence.file.FileDeltaCollection open(org.waveprotocol.wave.model.id.WaveletName) throws org.waveprotocol.box.server.persistence.PersistenceException
    {
        org.waveprotocol.wave.model.id.WaveletName r0;
        java.io.IOException $r4;
        org.waveprotocol.box.server.persistence.PersistenceException $r5;
        org.waveprotocol.box.server.persistence.file.FileDeltaStore r1;
        org.waveprotocol.box.server.persistence.file.FileDeltaCollection $r3;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String $r2, $r9;

        r1 := @this: org.waveprotocol.box.server.persistence.file.FileDeltaStore;

        r0 := @parameter0: org.waveprotocol.wave.model.id.WaveletName;

     label1:
        $r2 = r1.<org.waveprotocol.box.server.persistence.file.FileDeltaStore: java.lang.String basePath>;

        $r3 = staticinvoke <org.waveprotocol.box.server.persistence.file.FileDeltaCollection: org.waveprotocol.box.server.persistence.file.FileDeltaCollection open(org.waveprotocol.wave.model.id.WaveletName,java.lang.String)>(r0, $r2);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = new org.waveprotocol.box.server.persistence.PersistenceException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to open deltas for wavelet ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<org.waveprotocol.box.server.persistence.PersistenceException: void <init>(java.lang.String,java.lang.Throwable)>($r9, $r4);

        throw $r5;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void delete(org.waveprotocol.wave.model.id.WaveletName) throws org.waveprotocol.box.server.persistence.PersistenceException
    {
        org.waveprotocol.wave.model.id.WaveletName r0;
        java.lang.String $r2;
        org.waveprotocol.box.server.persistence.file.FileDeltaStore r1;

        r1 := @this: org.waveprotocol.box.server.persistence.file.FileDeltaStore;

        r0 := @parameter0: org.waveprotocol.wave.model.id.WaveletName;

        $r2 = r1.<org.waveprotocol.box.server.persistence.file.FileDeltaStore: java.lang.String basePath>;

        staticinvoke <org.waveprotocol.box.server.persistence.file.FileDeltaCollection: void delete(org.waveprotocol.wave.model.id.WaveletName,java.lang.String)>(r0, $r2);

        return;
    }

    public com.google.common.collect.ImmutableSet lookup(org.waveprotocol.wave.model.id.WaveId) throws org.waveprotocol.box.server.persistence.PersistenceException
    {
        com.google.common.collect.ImmutableSet$Builder $r7;
        org.waveprotocol.wave.model.id.WaveletId $r12;
        long $l2;
        byte $b3;
        int i0, $i1, i4, $i5;
        org.waveprotocol.wave.model.version.HashedVersion $r15;
        java.lang.String $r1, $r4, $r10, $r11, $r21;
        boolean $z0;
        org.waveprotocol.wave.model.id.WaveletName $r13;
        com.google.common.collect.ImmutableSet $r8, $r16;
        org.waveprotocol.wave.model.id.WaveId r0;
        java.io.IOException $r17;
        java.io.File r9, $r22;
        org.waveprotocol.box.server.persistence.file.FileDeltaStore r3;
        org.waveprotocol.box.server.persistence.file.FileDeltaCollection $r14;
        java.lang.StringBuilder $r19, $r20, $r24;
        java.io.File[] $r6;
        org.waveprotocol.box.server.persistence.file.FileDeltaStore$1 $r23;

        r3 := @this: org.waveprotocol.box.server.persistence.file.FileDeltaStore;

        r0 := @parameter0: org.waveprotocol.wave.model.id.WaveId;

        $r1 = staticinvoke <org.waveprotocol.box.server.persistence.file.FileUtils: java.lang.String waveIdToPathSegment(org.waveprotocol.wave.model.id.WaveId)>(r0);

        $r22 = new java.io.File;

        $r4 = r3.<org.waveprotocol.box.server.persistence.file.FileDeltaStore: java.lang.String basePath>;

        specialinvoke $r22.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r4, $r1);

        $z0 = virtualinvoke $r22.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        $r16 = staticinvoke <com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet of()>();

        return $r16;

     label1:
        $r23 = new org.waveprotocol.box.server.persistence.file.FileDeltaStore$1;

        specialinvoke $r23.<org.waveprotocol.box.server.persistence.file.FileDeltaStore$1: void <init>(org.waveprotocol.box.server.persistence.file.FileDeltaStore)>(r3);

        $r6 = virtualinvoke $r22.<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>($r23);

        $r7 = staticinvoke <com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet$Builder builder()>();

        i0 = lengthof $r6;

        i4 = 0;

     label2:
        if i4 >= i0 goto label7;

        r9 = $r6[i4];

        $r10 = virtualinvoke r9.<java.io.File: java.lang.String getName()>();

        $i1 = virtualinvoke $r10.<java.lang.String: int lastIndexOf(java.lang.String)>(".deltas");

        $r11 = virtualinvoke $r10.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        $r12 = staticinvoke <org.waveprotocol.box.server.persistence.file.FileUtils: org.waveprotocol.wave.model.id.WaveletId waveletIdFromPathSegment(java.lang.String)>($r11);

        $r13 = staticinvoke <org.waveprotocol.wave.model.id.WaveletName: org.waveprotocol.wave.model.id.WaveletName of(org.waveprotocol.wave.model.id.WaveId,org.waveprotocol.wave.model.id.WaveletId)>(r0, $r12);

        $r14 = virtualinvoke r3.<org.waveprotocol.box.server.persistence.file.FileDeltaStore: org.waveprotocol.box.server.persistence.file.FileDeltaCollection open(org.waveprotocol.wave.model.id.WaveletName)>($r13);

        $r15 = virtualinvoke $r14.<org.waveprotocol.box.server.persistence.file.FileDeltaCollection: org.waveprotocol.wave.model.version.HashedVersion getEndVersion()>();

        if $r15 == null goto label3;

        $l2 = virtualinvoke $r15.<org.waveprotocol.wave.model.version.HashedVersion: long getVersion()>();

        $b3 = $l2 cmp 0L;

        $i5 = (int) $b3;

        if $i5 <= 0 goto label3;

        virtualinvoke $r7.<com.google.common.collect.ImmutableSet$Builder: com.google.common.collect.ImmutableSet$Builder add(java.lang.Object)>($r12);

     label3:
        virtualinvoke $r14.<org.waveprotocol.box.server.persistence.file.FileDeltaCollection: void close()>();

     label4:
        goto label6;

     label5:
        $r17 := @caughtexception;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to close deltas file ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.eclipse.jetty.util.log.Log: void info(java.lang.String,java.lang.Object)>($r21, $r17);

     label6:
        i4 = i4 + 1;

        goto label2;

     label7:
        $r8 = virtualinvoke $r7.<com.google.common.collect.ImmutableSet$Builder: com.google.common.collect.ImmutableSet build()>();

        return $r8;

        catch java.io.IOException from label3 to label4 with label5;
    }

    public org.waveprotocol.box.common.ExceptionalIterator getWaveIdIterator()
    {
        org.waveprotocol.wave.model.id.WaveId $r9;
        com.google.common.collect.ImmutableSet$Builder $r5;
        org.waveprotocol.box.common.ExceptionalIterator $r10;
        java.io.File $r0, r7;
        org.waveprotocol.box.server.persistence.file.FileDeltaStore r1;
        int i0, i1;
        java.lang.String $r2, $r8;
        org.waveprotocol.box.server.persistence.file.FileDeltaStore$2 $r3;
        java.io.File[] $r4;
        boolean $z0;
        org.waveprotocol.box.server.persistence.file.FileDeltaStore$3 $r6;

        r1 := @this: org.waveprotocol.box.server.persistence.file.FileDeltaStore;

        $r0 = new java.io.File;

        $r2 = r1.<org.waveprotocol.box.server.persistence.file.FileDeltaStore: java.lang.String basePath>;

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>($r2);

        $z0 = virtualinvoke $r0.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        $r10 = staticinvoke <org.waveprotocol.box.common.ExceptionalIterator$Empty: org.waveprotocol.box.common.ExceptionalIterator create()>();

        return $r10;

     label1:
        $r3 = new org.waveprotocol.box.server.persistence.file.FileDeltaStore$2;

        specialinvoke $r3.<org.waveprotocol.box.server.persistence.file.FileDeltaStore$2: void <init>(org.waveprotocol.box.server.persistence.file.FileDeltaStore)>(r1);

        $r4 = virtualinvoke $r0.<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>($r3);

        $r5 = staticinvoke <com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet$Builder builder()>();

        i0 = lengthof $r4;

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        r7 = $r4[i1];

        $r8 = virtualinvoke r7.<java.io.File: java.lang.String getName()>();

        $r9 = staticinvoke <org.waveprotocol.box.server.persistence.file.FileUtils: org.waveprotocol.wave.model.id.WaveId waveIdFromPathSegment(java.lang.String)>($r8);

        virtualinvoke $r5.<com.google.common.collect.ImmutableSet$Builder: com.google.common.collect.ImmutableSet$Builder add(java.lang.Object)>($r9);

        i1 = i1 + 1;

        goto label2;

     label3:
        $r6 = new org.waveprotocol.box.server.persistence.file.FileDeltaStore$3;

        specialinvoke $r6.<org.waveprotocol.box.server.persistence.file.FileDeltaStore$3: void <init>(org.waveprotocol.box.server.persistence.file.FileDeltaStore,com.google.common.collect.ImmutableSet$Builder)>(r1, $r5);

        return $r6;
    }

    public volatile org.waveprotocol.box.server.waveserver.WaveletDeltaRecordReader open(org.waveprotocol.wave.model.id.WaveletName) throws org.waveprotocol.box.server.persistence.PersistenceException
    {
        org.waveprotocol.wave.model.id.WaveletName r1;
        org.waveprotocol.box.server.persistence.file.FileDeltaStore r0;
        org.waveprotocol.box.server.persistence.file.FileDeltaCollection $r2;

        r0 := @this: org.waveprotocol.box.server.persistence.file.FileDeltaStore;

        r1 := @parameter0: org.waveprotocol.wave.model.id.WaveletName;

        $r2 = virtualinvoke r0.<org.waveprotocol.box.server.persistence.file.FileDeltaStore: org.waveprotocol.box.server.persistence.file.FileDeltaCollection open(org.waveprotocol.wave.model.id.WaveletName)>(r1);

        return $r2;
    }
}
