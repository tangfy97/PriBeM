final class com.google.gxp.compiler.js.JavaScriptCodeGenerator$TemplateWorker$2 extends java.lang.Object implements com.google.gxp.com.google.common.base.Function
{
    final com.google.gxp.compiler.js.JavaScriptCodeGenerator$TemplateWorker this$0;

    void <init>(com.google.gxp.compiler.js.JavaScriptCodeGenerator$TemplateWorker)
    {
        com.google.gxp.compiler.js.JavaScriptCodeGenerator$TemplateWorker$2 r0;
        com.google.gxp.compiler.js.JavaScriptCodeGenerator$TemplateWorker r1;

        r0 := @this: com.google.gxp.compiler.js.JavaScriptCodeGenerator$TemplateWorker$2;

        r1 := @parameter0: com.google.gxp.compiler.js.JavaScriptCodeGenerator$TemplateWorker;

        r0.<com.google.gxp.compiler.js.JavaScriptCodeGenerator$TemplateWorker$2: com.google.gxp.compiler.js.JavaScriptCodeGenerator$TemplateWorker this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.String apply(com.google.gxp.compiler.base.Parameter)
    {
        com.google.gxp.compiler.js.JavaScriptCodeGenerator$TemplateWorker$2 r6;
        com.google.gxp.compiler.base.Parameter r2;
        java.lang.StringBuilder $r0, $r1, $r4;
        java.lang.String $r3, $r5;

        r6 := @this: com.google.gxp.compiler.js.JavaScriptCodeGenerator$TemplateWorker$2;

        r2 := @parameter0: com.google.gxp.compiler.base.Parameter;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("this.");

        $r3 = virtualinvoke r2.<com.google.gxp.compiler.base.Parameter: java.lang.String getPrimaryName()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public volatile java.lang.Object apply(java.lang.Object)
    {
        com.google.gxp.compiler.js.JavaScriptCodeGenerator$TemplateWorker$2 r0;
        com.google.gxp.compiler.base.Parameter $r2;
        java.lang.Object r1;
        java.lang.String $r3;

        r0 := @this: com.google.gxp.compiler.js.JavaScriptCodeGenerator$TemplateWorker$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.google.gxp.compiler.base.Parameter) r1;

        $r3 = virtualinvoke r0.<com.google.gxp.compiler.js.JavaScriptCodeGenerator$TemplateWorker$2: java.lang.String apply(com.google.gxp.compiler.base.Parameter)>($r2);

        return $r3;
    }
}
