public class com.jidesoft.swing.AutoResizingTextArea extends javax.swing.JTextArea
{
    public static final int DEFAULT_MAX_ROWS;
    public static final int DEFAULT_MIN_ROWS;
    private int _maxRows;
    private int _minRows;
    private com.jidesoft.swing.AutoResizingTextArea$ResizingDocumentListener _listener;

    public void <init>()
    {
        com.jidesoft.swing.AutoResizingTextArea r0;

        r0 := @this: com.jidesoft.swing.AutoResizingTextArea;

        specialinvoke r0.<com.jidesoft.swing.AutoResizingTextArea: void <init>(int,int)>(1, 20);

        return;
    }

    public void <init>(int)
    {
        int i0;
        com.jidesoft.swing.AutoResizingTextArea r0;

        r0 := @this: com.jidesoft.swing.AutoResizingTextArea;

        i0 := @parameter0: int;

        specialinvoke r0.<com.jidesoft.swing.AutoResizingTextArea: void <init>(int,int)>(i0, 20);

        return;
    }

    public void <init>(int, int)
    {
        int i0, i1;
        com.jidesoft.swing.AutoResizingTextArea r0;

        r0 := @this: com.jidesoft.swing.AutoResizingTextArea;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<javax.swing.JTextArea: void <init>()>();

        virtualinvoke r0.<com.jidesoft.swing.AutoResizingTextArea: void setMinRows(int)>(i0);

        virtualinvoke r0.<com.jidesoft.swing.AutoResizingTextArea: void setMaxRows(int)>(i1);

        virtualinvoke r0.<com.jidesoft.swing.AutoResizingTextArea: void setRows(int)>(i0);

        return;
    }

    public void <init>(java.lang.String)
    {
        java.lang.String r1;
        com.jidesoft.swing.AutoResizingTextArea r0;

        r0 := @this: com.jidesoft.swing.AutoResizingTextArea;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.jidesoft.swing.AutoResizingTextArea: void <init>()>();

        virtualinvoke r0.<com.jidesoft.swing.AutoResizingTextArea: void setText(java.lang.String)>(r1);

        return;
    }

    public void <init>(int, int, int)
    {
        com.jidesoft.swing.AutoResizingTextArea r0;
        int i0, i1, i2;

        r0 := @this: com.jidesoft.swing.AutoResizingTextArea;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        specialinvoke r0.<com.jidesoft.swing.AutoResizingTextArea: void <init>(int,int)>(i0, i1);

        virtualinvoke r0.<com.jidesoft.swing.AutoResizingTextArea: void setMinRows(int)>(i0);

        virtualinvoke r0.<com.jidesoft.swing.AutoResizingTextArea: void setMaxRows(int)>(i1);

        virtualinvoke r0.<com.jidesoft.swing.AutoResizingTextArea: void setColumns(int)>(i2);

        return;
    }

    public void <init>(java.lang.String, int, int, int)
    {
        com.jidesoft.swing.AutoResizingTextArea r0;
        int i0, i1, i2;
        java.lang.String r1;

        r0 := @this: com.jidesoft.swing.AutoResizingTextArea;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        specialinvoke r0.<com.jidesoft.swing.AutoResizingTextArea: void <init>(int,int,int)>(i0, i1, i2);

        virtualinvoke r0.<com.jidesoft.swing.AutoResizingTextArea: void setText(java.lang.String)>(r1);

        return;
    }

    public void <init>(javax.swing.text.Document)
    {
        javax.swing.text.Document r1;
        com.jidesoft.swing.AutoResizingTextArea r0;

        r0 := @this: com.jidesoft.swing.AutoResizingTextArea;

        r1 := @parameter0: javax.swing.text.Document;

        specialinvoke r0.<com.jidesoft.swing.AutoResizingTextArea: void <init>()>();

        virtualinvoke r0.<com.jidesoft.swing.AutoResizingTextArea: void setDocument(javax.swing.text.Document)>(r1);

        return;
    }

    public void <init>(javax.swing.text.Document, java.lang.String, int, int, int)
    {
        com.jidesoft.swing.AutoResizingTextArea r0;
        int i0, i1, i2;
        javax.swing.text.Document r1;
        java.lang.String r2;

        r0 := @this: com.jidesoft.swing.AutoResizingTextArea;

        r1 := @parameter0: javax.swing.text.Document;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i2 := @parameter3: int;

        i1 := @parameter4: int;

        specialinvoke r0.<javax.swing.JTextArea: void <init>(javax.swing.text.Document,java.lang.String,int,int)>(r1, r2, i0, i1);

        virtualinvoke r0.<com.jidesoft.swing.AutoResizingTextArea: void setMaxRows(int)>(i2);

        virtualinvoke r0.<com.jidesoft.swing.AutoResizingTextArea: void setMinRows(int)>(i0);

        return;
    }

    public void setRows(int)
    {
        com.jidesoft.swing.AutoResizingTextArea r0;
        int $i0, i1, $i2;

        r0 := @this: com.jidesoft.swing.AutoResizingTextArea;

        i1 := @parameter0: int;

        $i0 = specialinvoke r0.<javax.swing.JTextArea: int getRows()>();

        $i2 = specialinvoke r0.<com.jidesoft.swing.AutoResizingTextArea: int clipRowCount(int)>(i1);

        specialinvoke r0.<javax.swing.JTextArea: void setRows(int)>($i2);

        virtualinvoke r0.<com.jidesoft.swing.AutoResizingTextArea: void numberOfRowsUpdated(int,int)>($i0, $i2);

        return;
    }

    protected void numberOfRowsUpdated(int, int)
    {
        javax.swing.JScrollPane $r1;
        javax.swing.JComponent r3;
        com.jidesoft.swing.AutoResizingTextArea r0;
        int i0, i1;
        java.awt.Container $r2;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.AutoResizingTextArea;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = specialinvoke r0.<com.jidesoft.swing.AutoResizingTextArea: javax.swing.JScrollPane getParentScrollPane()>();

        if $r1 == null goto label1;

        $r2 = virtualinvoke $r1.<javax.swing.JScrollPane: java.awt.Container getParent()>();

        if $r2 == null goto label1;

        $z0 = $r2 instanceof javax.swing.JComponent;

        if $z0 == 0 goto label1;

        r3 = (javax.swing.JComponent) $r2;

        virtualinvoke r3.<javax.swing.JComponent: void revalidate()>();

     label1:
        return;
    }

    public int getMaxRows()
    {
        int $i0;
        com.jidesoft.swing.AutoResizingTextArea r0;

        r0 := @this: com.jidesoft.swing.AutoResizingTextArea;

        $i0 = r0.<com.jidesoft.swing.AutoResizingTextArea: int _maxRows>;

        return $i0;
    }

    public void setMaxRows(int)
    {
        com.jidesoft.swing.AutoResizingTextArea r0;
        int i0, $i1, $i2;

        r0 := @this: com.jidesoft.swing.AutoResizingTextArea;

        i0 := @parameter0: int;

        r0.<com.jidesoft.swing.AutoResizingTextArea: int _maxRows> = i0;

        $i1 = virtualinvoke r0.<com.jidesoft.swing.AutoResizingTextArea: int getRows()>();

        $i2 = specialinvoke r0.<com.jidesoft.swing.AutoResizingTextArea: int clipRowCount(int)>($i1);

        virtualinvoke r0.<com.jidesoft.swing.AutoResizingTextArea: void setRows(int)>($i2);

        return;
    }

    public int getMinRows()
    {
        int $i0;
        com.jidesoft.swing.AutoResizingTextArea r0;

        r0 := @this: com.jidesoft.swing.AutoResizingTextArea;

        $i0 = r0.<com.jidesoft.swing.AutoResizingTextArea: int _minRows>;

        return $i0;
    }

    public void setMinRows(int)
    {
        com.jidesoft.swing.AutoResizingTextArea r0;
        int i0, $i1, $i2;

        r0 := @this: com.jidesoft.swing.AutoResizingTextArea;

        i0 := @parameter0: int;

        r0.<com.jidesoft.swing.AutoResizingTextArea: int _minRows> = i0;

        $i1 = virtualinvoke r0.<com.jidesoft.swing.AutoResizingTextArea: int getRows()>();

        $i2 = specialinvoke r0.<com.jidesoft.swing.AutoResizingTextArea: int clipRowCount(int)>($i1);

        virtualinvoke r0.<com.jidesoft.swing.AutoResizingTextArea: void setRows(int)>($i2);

        return;
    }

    public void setDocument(javax.swing.text.Document)
    {
        com.jidesoft.swing.AutoResizingTextArea r0;
        com.jidesoft.swing.AutoResizingTextArea$ResizingDocumentListener $r3, $r4, $r5, $r6, $r7;
        javax.swing.text.Document $r1, r2;

        r0 := @this: com.jidesoft.swing.AutoResizingTextArea;

        r2 := @parameter0: javax.swing.text.Document;

        $r1 = virtualinvoke r0.<com.jidesoft.swing.AutoResizingTextArea: javax.swing.text.Document getDocument()>();

        if $r1 == null goto label1;

        $r6 = r0.<com.jidesoft.swing.AutoResizingTextArea: com.jidesoft.swing.AutoResizingTextArea$ResizingDocumentListener _listener>;

        if $r6 == null goto label1;

        $r7 = r0.<com.jidesoft.swing.AutoResizingTextArea: com.jidesoft.swing.AutoResizingTextArea$ResizingDocumentListener _listener>;

        interfaceinvoke $r1.<javax.swing.text.Document: void removeDocumentListener(javax.swing.event.DocumentListener)>($r7);

     label1:
        specialinvoke r0.<javax.swing.JTextArea: void setDocument(javax.swing.text.Document)>(r2);

        if r2 == null goto label3;

        $r3 = r0.<com.jidesoft.swing.AutoResizingTextArea: com.jidesoft.swing.AutoResizingTextArea$ResizingDocumentListener _listener>;

        if $r3 != null goto label2;

        $r5 = new com.jidesoft.swing.AutoResizingTextArea$ResizingDocumentListener;

        specialinvoke $r5.<com.jidesoft.swing.AutoResizingTextArea$ResizingDocumentListener: void <init>(com.jidesoft.swing.AutoResizingTextArea,com.jidesoft.swing.AutoResizingTextArea$1)>(r0, null);

        r0.<com.jidesoft.swing.AutoResizingTextArea: com.jidesoft.swing.AutoResizingTextArea$ResizingDocumentListener _listener> = $r5;

     label2:
        $r4 = r0.<com.jidesoft.swing.AutoResizingTextArea: com.jidesoft.swing.AutoResizingTextArea$ResizingDocumentListener _listener>;

        interfaceinvoke r2.<javax.swing.text.Document: void addDocumentListener(javax.swing.event.DocumentListener)>($r4);

     label3:
        specialinvoke r0.<com.jidesoft.swing.AutoResizingTextArea: void updateSize()>();

        return;
    }

    private int clipRowCount(int)
    {
        com.jidesoft.swing.AutoResizingTextArea r0;
        int i0, $i1, $i2, $i3, $i4;

        r0 := @this: com.jidesoft.swing.AutoResizingTextArea;

        i0 := @parameter0: int;

        $i1 = r0.<com.jidesoft.swing.AutoResizingTextArea: int _maxRows>;

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i1, i0);

        $i3 = r0.<com.jidesoft.swing.AutoResizingTextArea: int _minRows>;

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>($i3, $i2);

        return $i4;
    }

    private int getHeight(int)
    {
        java.awt.Insets $r1;
        com.jidesoft.swing.AutoResizingTextArea r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: com.jidesoft.swing.AutoResizingTextArea;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.jidesoft.swing.AutoResizingTextArea: java.awt.Insets getInsets()>();

        $i1 = virtualinvoke r0.<com.jidesoft.swing.AutoResizingTextArea: int getRowHeight()>();

        $i3 = i0 * $i1;

        $i2 = $r1.<java.awt.Insets: int top>;

        $i5 = $i3 + $i2;

        $i4 = $r1.<java.awt.Insets: int bottom>;

        $i6 = $i5 + $i4;

        return $i6;
    }

    private void updateSize()
    {
        javax.swing.JScrollPane $r1;
        javax.swing.JComponent r4;
        com.jidesoft.swing.AutoResizingTextArea r0;
        java.awt.Container $r2, $r3;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.AutoResizingTextArea;

        $r1 = specialinvoke r0.<com.jidesoft.swing.AutoResizingTextArea: javax.swing.JScrollPane getParentScrollPane()>();

        if $r1 == null goto label1;

        $r2 = virtualinvoke $r1.<java.awt.Container: java.awt.Container getParent()>();

        $z0 = $r2 instanceof javax.swing.JComponent;

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke $r1.<java.awt.Container: java.awt.Container getParent()>();

        r4 = (javax.swing.JComponent) $r3;

        virtualinvoke r4.<javax.swing.JComponent: void revalidate()>();

     label1:
        return;
    }

    public java.awt.Dimension getPreferredScrollableViewportSize()
    {
        com.jidesoft.swing.AutoResizingTextArea r0;
        java.awt.Dimension $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;

        r0 := @this: com.jidesoft.swing.AutoResizingTextArea;

        $r1 = virtualinvoke r0.<com.jidesoft.swing.AutoResizingTextArea: java.awt.Dimension getPreferredSize()>();

        $i0 = virtualinvoke r0.<com.jidesoft.swing.AutoResizingTextArea: int getMinRows()>();

        if $i0 == 0 goto label1;

        $i1 = virtualinvoke r0.<com.jidesoft.swing.AutoResizingTextArea: int getMaxRows()>();

        if $i1 == 0 goto label1;

        $i2 = virtualinvoke r0.<com.jidesoft.swing.AutoResizingTextArea: int getMinRows()>();

        $i3 = specialinvoke r0.<com.jidesoft.swing.AutoResizingTextArea: int getHeight(int)>($i2);

        $i4 = virtualinvoke r0.<com.jidesoft.swing.AutoResizingTextArea: int getMaxRows()>();

        $i5 = specialinvoke r0.<com.jidesoft.swing.AutoResizingTextArea: int getHeight(int)>($i4);

        $i6 = $r1.<java.awt.Dimension: int height>;

        $i7 = staticinvoke <java.lang.Math: int min(int,int)>($i5, $i6);

        $i8 = staticinvoke <java.lang.Math: int max(int,int)>($i3, $i7);

        $r1.<java.awt.Dimension: int height> = $i8;

     label1:
        return $r1;
    }

    private javax.swing.JScrollPane getParentScrollPane()
    {
        javax.swing.JScrollPane $r3;
        com.jidesoft.swing.AutoResizingTextArea r0;
        java.awt.Container $r1, $r2;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.AutoResizingTextArea;

        $r1 = virtualinvoke r0.<com.jidesoft.swing.AutoResizingTextArea: java.awt.Container getParent()>();

        if $r1 == null goto label1;

        $z0 = $r1 instanceof javax.swing.JViewport;

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke $r1.<java.awt.Component: java.awt.Container getParent()>();

        $r3 = (javax.swing.JScrollPane) $r2;

        return $r3;

     label1:
        return null;
    }

    static void access$100(com.jidesoft.swing.AutoResizingTextArea)
    {
        com.jidesoft.swing.AutoResizingTextArea r0;

        r0 := @parameter0: com.jidesoft.swing.AutoResizingTextArea;

        specialinvoke r0.<com.jidesoft.swing.AutoResizingTextArea: void updateSize()>();

        return;
    }

    public static void <clinit>()
    {
        <com.jidesoft.swing.AutoResizingTextArea: int DEFAULT_MIN_ROWS> = 1;

        <com.jidesoft.swing.AutoResizingTextArea: int DEFAULT_MAX_ROWS> = 20;

        return;
    }
}
