public class org.codehaus.groovy.runtime.metaclass.ReflectorLoader extends java.lang.ClassLoader
{
    private boolean inDefine;
    private final java.util.Map loadedClasses;
    private final java.lang.ClassLoader delegatationLoader;
    private static final java.lang.String REFLECTOR;
    static java.lang.Class class$org$codehaus$groovy$runtime$Reflector;

    protected java.lang.Class findClass(java.lang.String) throws java.lang.ClassNotFoundException
    {
        java.lang.Class $r4, $r5;
        org.codehaus.groovy.runtime.metaclass.ReflectorLoader r0;
        java.lang.ClassLoader $r1, $r3;
        java.lang.String r2;

        r0 := @this: org.codehaus.groovy.runtime.metaclass.ReflectorLoader;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.codehaus.groovy.runtime.metaclass.ReflectorLoader: java.lang.ClassLoader delegatationLoader>;

        if $r1 != null goto label1;

        $r5 = specialinvoke r0.<java.lang.ClassLoader: java.lang.Class findClass(java.lang.String)>(r2);

        return $r5;

     label1:
        $r3 = r0.<org.codehaus.groovy.runtime.metaclass.ReflectorLoader: java.lang.ClassLoader delegatationLoader>;

        $r4 = virtualinvoke $r3.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r2);

        return $r4;
    }

    protected synchronized java.lang.Class loadClass(java.lang.String, boolean) throws java.lang.ClassNotFoundException
    {
        java.lang.Class $r2, $r4, $r5;
        org.codehaus.groovy.runtime.metaclass.ReflectorLoader r0;
        java.lang.String r1, $r3;
        boolean $z0, z1, $z2;

        r0 := @this: org.codehaus.groovy.runtime.metaclass.ReflectorLoader;

        r1 := @parameter0: java.lang.String;

        z1 := @parameter1: boolean;

        $z0 = r0.<org.codehaus.groovy.runtime.metaclass.ReflectorLoader: boolean inDefine>;

        if $z0 == 0 goto label3;

        $r3 = <org.codehaus.groovy.runtime.metaclass.ReflectorLoader: java.lang.String REFLECTOR>;

        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z2 == 0 goto label3;

        $r4 = <org.codehaus.groovy.runtime.metaclass.ReflectorLoader: java.lang.Class class$org$codehaus$groovy$runtime$Reflector>;

        if $r4 != null goto label1;

        $r5 = staticinvoke <org.codehaus.groovy.runtime.metaclass.ReflectorLoader: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.runtime.Reflector");

        <org.codehaus.groovy.runtime.metaclass.ReflectorLoader: java.lang.Class class$org$codehaus$groovy$runtime$Reflector> = $r5;

        goto label2;

     label1:
        $r5 = <org.codehaus.groovy.runtime.metaclass.ReflectorLoader: java.lang.Class class$org$codehaus$groovy$runtime$Reflector>;

     label2:
        return $r5;

     label3:
        $r2 = specialinvoke r0.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String,boolean)>(r1, z1);

        return $r2;
    }

    public synchronized java.lang.Class defineClass(java.lang.String, byte[], java.security.ProtectionDomain)
    {
        byte[] r2;
        java.security.ProtectionDomain r3;
        java.util.Map $r5;
        int $i0;
        java.lang.Class $r4;
        org.codehaus.groovy.runtime.metaclass.ReflectorLoader r0;
        java.lang.String r1;

        r0 := @this: org.codehaus.groovy.runtime.metaclass.ReflectorLoader;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: byte[];

        r3 := @parameter2: java.security.ProtectionDomain;

        r0.<org.codehaus.groovy.runtime.metaclass.ReflectorLoader: boolean inDefine> = 1;

        $i0 = lengthof r2;

        $r4 = virtualinvoke r0.<org.codehaus.groovy.runtime.metaclass.ReflectorLoader: java.lang.Class defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)>(r1, r2, 0, $i0, r3);

        $r5 = r0.<org.codehaus.groovy.runtime.metaclass.ReflectorLoader: java.util.Map loadedClasses>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r4);

        virtualinvoke r0.<org.codehaus.groovy.runtime.metaclass.ReflectorLoader: void resolveClass(java.lang.Class)>($r4);

        r0.<org.codehaus.groovy.runtime.metaclass.ReflectorLoader: boolean inDefine> = 0;

        return $r4;
    }

    public void <init>(java.lang.ClassLoader)
    {
        java.util.HashMap $r2;
        java.lang.Class $r3;
        org.codehaus.groovy.runtime.metaclass.ReflectorLoader r0;
        java.lang.ClassLoader r1, $r4;

        r0 := @this: org.codehaus.groovy.runtime.metaclass.ReflectorLoader;

        r1 := @parameter0: java.lang.ClassLoader;

        specialinvoke r0.<java.lang.ClassLoader: void <init>(java.lang.ClassLoader)>(r1);

        r0.<org.codehaus.groovy.runtime.metaclass.ReflectorLoader: boolean inDefine> = 0;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.codehaus.groovy.runtime.metaclass.ReflectorLoader: java.util.Map loadedClasses> = $r2;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        r0.<org.codehaus.groovy.runtime.metaclass.ReflectorLoader: java.lang.ClassLoader delegatationLoader> = $r4;

        return;
    }

    public synchronized java.lang.Class getLoadedClass(java.lang.String)
    {
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.Class $r4;
        org.codehaus.groovy.runtime.metaclass.ReflectorLoader r0;
        java.lang.String r1;

        r0 := @this: org.codehaus.groovy.runtime.metaclass.ReflectorLoader;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.codehaus.groovy.runtime.metaclass.ReflectorLoader: java.util.Map loadedClasses>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.lang.Class) $r3;

        return $r4;
    }

    static java.lang.String getReflectorName(java.lang.Class)
    {
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.StringBuffer $r2, $r4, $r5, $r7, $r9, $r10, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r20, $r21, $r22, $r23, $r25, $r26, $r27;
        int i0, i1;
        java.lang.String $r1, $r3, $r6, $r8, $r11, $r19, $r24, r28, r30;
        java.lang.Class r0, r29, r31;

        r0 := @parameter0: java.lang.Class;

        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("java.");

        if $z0 == 0 goto label4;

        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("gjdk.");

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_GroovyReflector");

        r28 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        $z3 = virtualinvoke r0.<java.lang.Class: boolean isArray()>();

        if $z3 == 0 goto label3;

        r29 = r0;

        i0 = 0;

     label1:
        $z4 = virtualinvoke r29.<java.lang.Class: boolean isArray()>();

        if $z4 == 0 goto label2;

        r29 = virtualinvoke r29.<java.lang.Class: java.lang.Class getComponentType()>();

        i0 = i0 + 1;

        goto label1;

     label2:
        $r19 = virtualinvoke r29.<java.lang.Class: java.lang.String getName()>();

        $r20 = new java.lang.StringBuffer;

        specialinvoke $r20.<java.lang.StringBuffer: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("gjdk.");

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_GroovyReflectorArray");

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.String toString()>();

        r28 = $r24;

        if i0 <= 1 goto label3;

        $r25 = new java.lang.StringBuffer;

        specialinvoke $r25.<java.lang.StringBuffer: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r24);

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.String toString()>();

     label3:
        return r28;

     label4:
        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(char,char)>(36, 95);

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_GroovyReflector");

        r30 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        $z1 = virtualinvoke r0.<java.lang.Class: boolean isArray()>();

        if $z1 == 0 goto label7;

        r31 = r0;

        i1 = 0;

     label5:
        $z2 = virtualinvoke r31.<java.lang.Class: boolean isArray()>();

        if $z2 == 0 goto label6;

        r31 = virtualinvoke r31.<java.lang.Class: java.lang.Class getComponentType()>();

        i1 = i1 + 1;

        goto label5;

     label6:
        $r6 = virtualinvoke r31.<java.lang.Class: java.lang.String getName()>();

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.String: java.lang.String replace(char,char)>(36, 95);

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_GroovyReflectorArray");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        r30 = $r11;

        if i1 <= 1 goto label7;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i1);

        r30 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

     label7:
        return r30;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.lang.Class $r0, $r2;
        java.lang.String $r1;

        $r0 = <org.codehaus.groovy.runtime.metaclass.ReflectorLoader: java.lang.Class class$org$codehaus$groovy$runtime$Reflector>;

        if $r0 != null goto label1;

        $r2 = staticinvoke <org.codehaus.groovy.runtime.metaclass.ReflectorLoader: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.runtime.Reflector");

        <org.codehaus.groovy.runtime.metaclass.ReflectorLoader: java.lang.Class class$org$codehaus$groovy$runtime$Reflector> = $r2;

        goto label2;

     label1:
        $r2 = <org.codehaus.groovy.runtime.metaclass.ReflectorLoader: java.lang.Class class$org$codehaus$groovy$runtime$Reflector>;

     label2:
        $r1 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        <org.codehaus.groovy.runtime.metaclass.ReflectorLoader: java.lang.String REFLECTOR> = $r1;

        return;
    }
}
