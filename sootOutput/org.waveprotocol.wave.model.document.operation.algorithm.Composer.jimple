public final class org.waveprotocol.wave.model.document.operation.algorithm.Composer extends java.lang.Object
{
    private final java.util.Map preAnnotations;
    private final java.util.Map postAnnotations;
    private final org.waveprotocol.wave.model.document.operation.algorithm.Composer$AnnotationQueue preAnnotationQueue;
    private final org.waveprotocol.wave.model.document.operation.algorithm.Composer$AnnotationQueue postAnnotationQueue;
    private final org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor normalizer;
    private final org.waveprotocol.wave.model.document.operation.algorithm.Composer$Target defaultTarget;
    private org.waveprotocol.wave.model.document.operation.algorithm.Composer$Target target;

    private void <init>(org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor)
    {
        java.util.HashMap $r1, $r2;
        org.waveprotocol.wave.model.document.operation.algorithm.Composer$1 $r3;
        org.waveprotocol.wave.model.document.operation.algorithm.Composer r0;
        org.waveprotocol.wave.model.document.operation.algorithm.Composer$2 $r4;
        org.waveprotocol.wave.model.document.operation.algorithm.Composer$DefaultPreTarget $r5;
        org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor r6, $r7;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.Composer;

        r6 := @parameter0: org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer: java.util.Map preAnnotations> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer: java.util.Map postAnnotations> = $r2;

        $r3 = new org.waveprotocol.wave.model.document.operation.algorithm.Composer$1;

        specialinvoke $r3.<org.waveprotocol.wave.model.document.operation.algorithm.Composer$1: void <init>(org.waveprotocol.wave.model.document.operation.algorithm.Composer)>(r0);

        r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer: org.waveprotocol.wave.model.document.operation.algorithm.Composer$AnnotationQueue preAnnotationQueue> = $r3;

        $r4 = new org.waveprotocol.wave.model.document.operation.algorithm.Composer$2;

        specialinvoke $r4.<org.waveprotocol.wave.model.document.operation.algorithm.Composer$2: void <init>(org.waveprotocol.wave.model.document.operation.algorithm.Composer)>(r0);

        r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer: org.waveprotocol.wave.model.document.operation.algorithm.Composer$AnnotationQueue postAnnotationQueue> = $r4;

        $r5 = new org.waveprotocol.wave.model.document.operation.algorithm.Composer$DefaultPreTarget;

        specialinvoke $r5.<org.waveprotocol.wave.model.document.operation.algorithm.Composer$DefaultPreTarget: void <init>(org.waveprotocol.wave.model.document.operation.algorithm.Composer,org.waveprotocol.wave.model.document.operation.algorithm.Composer$1)>(r0, null);

        r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer: org.waveprotocol.wave.model.document.operation.algorithm.Composer$Target defaultTarget> = $r5;

        $r7 = staticinvoke <org.waveprotocol.wave.model.document.operation.algorithm.OperationNormalizer: org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor createNormalizer(org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor)>(r6);

        r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer: org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor normalizer> = $r7;

        return;
    }

    private org.waveprotocol.wave.model.document.operation.DocOp composeOperations(org.waveprotocol.wave.model.document.operation.DocOp, org.waveprotocol.wave.model.document.operation.DocOp) throws org.waveprotocol.wave.model.operation.OperationException
    {
        org.waveprotocol.wave.model.document.operation.DocOp r2, r3, $r6;
        org.waveprotocol.wave.model.document.operation.algorithm.Composer r0;
        org.waveprotocol.wave.model.document.operation.algorithm.Composer$FinisherPostTarget $r7;
        org.waveprotocol.wave.model.operation.OperationException $r12;
        org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10;
        java.lang.String $r18;
        boolean $z0;
        org.waveprotocol.wave.model.document.operation.algorithm.Composer$Target $r1, $r8, $r9, $r10, $r11;
        java.lang.Object $r5;
        java.lang.StringBuilder $r13, $r14, $r15, $r16, $r17;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.Composer;

        r2 := @parameter0: org.waveprotocol.wave.model.document.operation.DocOp;

        r3 := @parameter1: org.waveprotocol.wave.model.document.operation.DocOp;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer: org.waveprotocol.wave.model.document.operation.algorithm.Composer$Target defaultTarget>;

        r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer: org.waveprotocol.wave.model.document.operation.algorithm.Composer$Target target> = $r1;

        i9 = 0;

        i10 = 0;

     label1:
        $i0 = interfaceinvoke r2.<org.waveprotocol.wave.model.document.operation.DocOp: int size()>();

        if i9 >= $i0 goto label4;

        $i4 = i9;

        i9 = i9 + 1;

        $r9 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer: org.waveprotocol.wave.model.document.operation.algorithm.Composer$Target target>;

        interfaceinvoke r2.<org.waveprotocol.wave.model.document.operation.DocOp: void applyComponent(int,org.waveprotocol.wave.model.document.operation.DocOpCursor)>($i4, $r9);

     label2:
        $r10 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer: org.waveprotocol.wave.model.document.operation.algorithm.Composer$Target target>;

        $z0 = virtualinvoke $r10.<org.waveprotocol.wave.model.document.operation.algorithm.Composer$Target: boolean isPostTarget()>();

        if $z0 == 0 goto label1;

        $i5 = interfaceinvoke r3.<org.waveprotocol.wave.model.document.operation.DocOp: int size()>();

        if i10 < $i5 goto label3;

        $r12 = new org.waveprotocol.wave.model.operation.OperationException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Document size mismatch: op1 resulting length=");

        $i7 = staticinvoke <org.waveprotocol.wave.model.document.operation.impl.DocOpUtil: int resultingDocumentLength(org.waveprotocol.wave.model.document.operation.DocOp)>(r2);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", op2 initial length=");

        $i8 = staticinvoke <org.waveprotocol.wave.model.document.operation.impl.DocOpUtil: int initialDocumentLength(org.waveprotocol.wave.model.document.operation.DocOp)>(r3);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<org.waveprotocol.wave.model.operation.OperationException: void <init>(java.lang.String)>($r18);

        throw $r12;

     label3:
        $i6 = i10;

        i10 = i10 + 1;

        $r11 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer: org.waveprotocol.wave.model.document.operation.algorithm.Composer$Target target>;

        interfaceinvoke r3.<org.waveprotocol.wave.model.document.operation.DocOp: void applyComponent(int,org.waveprotocol.wave.model.document.operation.DocOpCursor)>($i6, $r11);

        goto label2;

     label4:
        $i1 = interfaceinvoke r3.<org.waveprotocol.wave.model.document.operation.DocOp: int size()>();

        if i10 >= $i1 goto label6;

        $r7 = new org.waveprotocol.wave.model.document.operation.algorithm.Composer$FinisherPostTarget;

        specialinvoke $r7.<org.waveprotocol.wave.model.document.operation.algorithm.Composer$FinisherPostTarget: void <init>(org.waveprotocol.wave.model.document.operation.algorithm.Composer,org.waveprotocol.wave.model.document.operation.algorithm.Composer$1)>(r0, null);

        r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer: org.waveprotocol.wave.model.document.operation.algorithm.Composer$Target target> = $r7;

     label5:
        $i2 = interfaceinvoke r3.<org.waveprotocol.wave.model.document.operation.DocOp: int size()>();

        if i10 >= $i2 goto label6;

        $i3 = i10;

        i10 = i10 + 1;

        $r8 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer: org.waveprotocol.wave.model.document.operation.algorithm.Composer$Target target>;

        interfaceinvoke r3.<org.waveprotocol.wave.model.document.operation.DocOp: void applyComponent(int,org.waveprotocol.wave.model.document.operation.DocOpCursor)>($i3, $r8);

        goto label5;

     label6:
        specialinvoke r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer: void flushAnnotations()>();

        $r4 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer: org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor normalizer>;

        $r5 = interfaceinvoke $r4.<org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor: java.lang.Object finish()>();

        $r6 = (org.waveprotocol.wave.model.document.operation.DocOp) $r5;

        return $r6;
    }

    public static org.waveprotocol.wave.model.document.operation.DocOp compose(org.waveprotocol.wave.model.document.operation.DocOp, org.waveprotocol.wave.model.document.operation.DocOp) throws org.waveprotocol.wave.model.operation.OperationException
    {
        org.waveprotocol.wave.model.document.operation.impl.DocOpBuffer $r1;
        org.waveprotocol.wave.model.document.operation.DocOp r2, r3, $r4;
        org.waveprotocol.wave.model.document.operation.algorithm.Composer $r0;
        org.waveprotocol.wave.model.document.operation.algorithm.Composer$ComposeException $r5;
        org.waveprotocol.wave.model.operation.OperationException $r6;
        java.lang.String $r7;

        r2 := @parameter0: org.waveprotocol.wave.model.document.operation.DocOp;

        r3 := @parameter1: org.waveprotocol.wave.model.document.operation.DocOp;

     label1:
        $r0 = new org.waveprotocol.wave.model.document.operation.algorithm.Composer;

        $r1 = new org.waveprotocol.wave.model.document.operation.impl.DocOpBuffer;

        specialinvoke $r1.<org.waveprotocol.wave.model.document.operation.impl.DocOpBuffer: void <init>()>();

        specialinvoke $r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer: void <init>(org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor)>($r1);

        $r4 = specialinvoke $r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer: org.waveprotocol.wave.model.document.operation.DocOp composeOperations(org.waveprotocol.wave.model.document.operation.DocOp,org.waveprotocol.wave.model.document.operation.DocOp)>(r2, r3);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        $r6 = new org.waveprotocol.wave.model.operation.OperationException;

        $r7 = virtualinvoke $r5.<org.waveprotocol.wave.model.document.operation.algorithm.Composer$ComposeException: java.lang.String getMessage()>();

        specialinvoke $r6.<org.waveprotocol.wave.model.operation.OperationException: void <init>(java.lang.String)>($r7);

        throw $r6;

        catch org.waveprotocol.wave.model.document.operation.algorithm.Composer$ComposeException from label1 to label2 with label3;
    }

    public static org.waveprotocol.wave.model.document.operation.DocInitialization compose(org.waveprotocol.wave.model.document.operation.DocInitialization, org.waveprotocol.wave.model.document.operation.DocOp) throws org.waveprotocol.wave.model.operation.OperationException
    {
        org.waveprotocol.wave.model.document.operation.DocOp r1, $r2;
        org.waveprotocol.wave.model.document.operation.DocInitialization r0, $r3;

        r0 := @parameter0: org.waveprotocol.wave.model.document.operation.DocInitialization;

        r1 := @parameter1: org.waveprotocol.wave.model.document.operation.DocOp;

        $r2 = staticinvoke <org.waveprotocol.wave.model.document.operation.algorithm.Composer: org.waveprotocol.wave.model.document.operation.DocOp compose(org.waveprotocol.wave.model.document.operation.DocOp,org.waveprotocol.wave.model.document.operation.DocOp)>(r0, r1);

        $r3 = staticinvoke <org.waveprotocol.wave.model.document.operation.impl.DocOpUtil: org.waveprotocol.wave.model.document.operation.DocInitialization asInitialization(org.waveprotocol.wave.model.document.operation.DocOp)>($r2);

        return $r3;
    }

    public static org.waveprotocol.wave.model.document.operation.DocOp compose(java.lang.Iterable)
    {
        org.waveprotocol.wave.model.document.operation.algorithm.DocOpCollector $r0;
        java.util.Iterator $r2;
        org.waveprotocol.wave.model.document.operation.DocOp $r3, r5;
        java.lang.Object $r4;
        java.lang.Iterable r1;
        boolean $z0;

        r1 := @parameter0: java.lang.Iterable;

        $r0 = new org.waveprotocol.wave.model.document.operation.algorithm.DocOpCollector;

        specialinvoke $r0.<org.waveprotocol.wave.model.document.operation.algorithm.DocOpCollector: void <init>()>();

        $r2 = interfaceinvoke r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.waveprotocol.wave.model.document.operation.DocOp) $r4;

        virtualinvoke $r0.<org.waveprotocol.wave.model.document.operation.algorithm.DocOpCollector: void add(org.waveprotocol.wave.model.document.operation.DocOp)>(r5);

        goto label1;

     label2:
        $r3 = virtualinvoke $r0.<org.waveprotocol.wave.model.document.operation.algorithm.DocOpCollector: org.waveprotocol.wave.model.document.operation.DocOp composeAll()>();

        return $r3;
    }

    public static org.waveprotocol.wave.model.document.operation.DocOp composeUnchecked(org.waveprotocol.wave.model.document.operation.DocOp, org.waveprotocol.wave.model.document.operation.DocOp) throws org.waveprotocol.wave.model.operation.OperationException
    {
        org.waveprotocol.wave.model.document.operation.impl.UncheckedDocOpBuffer $r1;
        org.waveprotocol.wave.model.document.operation.DocOp r2, r3, $r4;
        org.waveprotocol.wave.model.document.operation.algorithm.Composer $r0;
        org.waveprotocol.wave.model.document.operation.algorithm.Composer$ComposeException $r5;
        org.waveprotocol.wave.model.operation.OperationException $r6;
        java.lang.String $r7;

        r2 := @parameter0: org.waveprotocol.wave.model.document.operation.DocOp;

        r3 := @parameter1: org.waveprotocol.wave.model.document.operation.DocOp;

     label1:
        $r0 = new org.waveprotocol.wave.model.document.operation.algorithm.Composer;

        $r1 = new org.waveprotocol.wave.model.document.operation.impl.UncheckedDocOpBuffer;

        specialinvoke $r1.<org.waveprotocol.wave.model.document.operation.impl.UncheckedDocOpBuffer: void <init>()>();

        specialinvoke $r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer: void <init>(org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor)>($r1);

        $r4 = specialinvoke $r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer: org.waveprotocol.wave.model.document.operation.DocOp composeOperations(org.waveprotocol.wave.model.document.operation.DocOp,org.waveprotocol.wave.model.document.operation.DocOp)>(r2, r3);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        $r6 = new org.waveprotocol.wave.model.operation.OperationException;

        $r7 = virtualinvoke $r5.<org.waveprotocol.wave.model.document.operation.algorithm.Composer$ComposeException: java.lang.String getMessage()>();

        specialinvoke $r6.<org.waveprotocol.wave.model.operation.OperationException: void <init>(java.lang.String)>($r7);

        throw $r6;

        catch org.waveprotocol.wave.model.document.operation.algorithm.Composer$ComposeException from label1 to label2 with label3;
    }

    private void flushAnnotations()
    {
        org.waveprotocol.wave.model.document.operation.algorithm.Composer$AnnotationQueue $r1, $r2;
        org.waveprotocol.wave.model.document.operation.algorithm.Composer r0;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.Composer;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer: org.waveprotocol.wave.model.document.operation.algorithm.Composer$AnnotationQueue preAnnotationQueue>;

        virtualinvoke $r1.<org.waveprotocol.wave.model.document.operation.algorithm.Composer$AnnotationQueue: void flush()>();

        $r2 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer: org.waveprotocol.wave.model.document.operation.algorithm.Composer$AnnotationQueue postAnnotationQueue>;

        virtualinvoke $r2.<org.waveprotocol.wave.model.document.operation.algorithm.Composer$AnnotationQueue: void flush()>();

        return;
    }

    private static org.waveprotocol.wave.model.document.operation.AttributesUpdate invertUpdate(org.waveprotocol.wave.model.document.operation.AttributesUpdate)
    {
        java.lang.String[] $r3;
        int $i0, i1;
        java.lang.String $r4, $r5, $r6;
        org.waveprotocol.wave.model.document.operation.AttributesUpdate r1, r7;
        org.waveprotocol.wave.model.document.operation.impl.AttributesUpdateImpl $r0, $r2;

        r1 := @parameter0: org.waveprotocol.wave.model.document.operation.AttributesUpdate;

        $r0 = new org.waveprotocol.wave.model.document.operation.impl.AttributesUpdateImpl;

        specialinvoke $r0.<org.waveprotocol.wave.model.document.operation.impl.AttributesUpdateImpl: void <init>()>();

        r7 = $r0;

        i1 = 0;

     label1:
        $i0 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.operation.AttributesUpdate: int changeSize()>();

        if i1 >= $i0 goto label2;

        $r2 = new org.waveprotocol.wave.model.document.operation.impl.AttributesUpdateImpl;

        $r3 = newarray (java.lang.String)[3];

        $r4 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.operation.AttributesUpdate: java.lang.String getChangeKey(int)>(i1);

        $r3[0] = $r4;

        $r5 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.operation.AttributesUpdate: java.lang.String getNewValue(int)>(i1);

        $r3[1] = $r5;

        $r6 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.operation.AttributesUpdate: java.lang.String getOldValue(int)>(i1);

        $r3[2] = $r6;

        specialinvoke $r2.<org.waveprotocol.wave.model.document.operation.impl.AttributesUpdateImpl: void <init>(java.lang.String[])>($r3);

        r7 = interfaceinvoke r7.<org.waveprotocol.wave.model.document.operation.AttributesUpdate: org.waveprotocol.wave.model.document.operation.AttributesUpdate composeWith(org.waveprotocol.wave.model.document.operation.AttributesUpdate)>($r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r7;
    }

    static org.waveprotocol.wave.model.document.operation.algorithm.Composer$AnnotationQueue access$100(org.waveprotocol.wave.model.document.operation.algorithm.Composer)
    {
        org.waveprotocol.wave.model.document.operation.algorithm.Composer$AnnotationQueue $r1;
        org.waveprotocol.wave.model.document.operation.algorithm.Composer r0;

        r0 := @parameter0: org.waveprotocol.wave.model.document.operation.algorithm.Composer;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer: org.waveprotocol.wave.model.document.operation.algorithm.Composer$AnnotationQueue preAnnotationQueue>;

        return $r1;
    }

    static org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor access$200(org.waveprotocol.wave.model.document.operation.algorithm.Composer)
    {
        org.waveprotocol.wave.model.document.operation.algorithm.Composer r0;
        org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor $r1;

        r0 := @parameter0: org.waveprotocol.wave.model.document.operation.algorithm.Composer;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer: org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor normalizer>;

        return $r1;
    }

    static org.waveprotocol.wave.model.document.operation.algorithm.Composer$AnnotationQueue access$300(org.waveprotocol.wave.model.document.operation.algorithm.Composer)
    {
        org.waveprotocol.wave.model.document.operation.algorithm.Composer$AnnotationQueue $r1;
        org.waveprotocol.wave.model.document.operation.algorithm.Composer r0;

        r0 := @parameter0: org.waveprotocol.wave.model.document.operation.algorithm.Composer;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer: org.waveprotocol.wave.model.document.operation.algorithm.Composer$AnnotationQueue postAnnotationQueue>;

        return $r1;
    }

    static org.waveprotocol.wave.model.document.operation.algorithm.Composer$Target access$502(org.waveprotocol.wave.model.document.operation.algorithm.Composer, org.waveprotocol.wave.model.document.operation.algorithm.Composer$Target)
    {
        org.waveprotocol.wave.model.document.operation.algorithm.Composer$Target r1;
        org.waveprotocol.wave.model.document.operation.algorithm.Composer r0;

        r0 := @parameter0: org.waveprotocol.wave.model.document.operation.algorithm.Composer;

        r1 := @parameter1: org.waveprotocol.wave.model.document.operation.algorithm.Composer$Target;

        r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer: org.waveprotocol.wave.model.document.operation.algorithm.Composer$Target target> = r1;

        return r1;
    }

    static void access$700(org.waveprotocol.wave.model.document.operation.algorithm.Composer)
    {
        org.waveprotocol.wave.model.document.operation.algorithm.Composer r0;

        r0 := @parameter0: org.waveprotocol.wave.model.document.operation.algorithm.Composer;

        specialinvoke r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer: void flushAnnotations()>();

        return;
    }

    static org.waveprotocol.wave.model.document.operation.algorithm.Composer$Target access$800(org.waveprotocol.wave.model.document.operation.algorithm.Composer)
    {
        org.waveprotocol.wave.model.document.operation.algorithm.Composer$Target $r1;
        org.waveprotocol.wave.model.document.operation.algorithm.Composer r0;

        r0 := @parameter0: org.waveprotocol.wave.model.document.operation.algorithm.Composer;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer: org.waveprotocol.wave.model.document.operation.algorithm.Composer$Target defaultTarget>;

        return $r1;
    }

    static org.waveprotocol.wave.model.document.operation.AttributesUpdate access$1000(org.waveprotocol.wave.model.document.operation.AttributesUpdate)
    {
        org.waveprotocol.wave.model.document.operation.AttributesUpdate r0, $r1;

        r0 := @parameter0: org.waveprotocol.wave.model.document.operation.AttributesUpdate;

        $r1 = staticinvoke <org.waveprotocol.wave.model.document.operation.algorithm.Composer: org.waveprotocol.wave.model.document.operation.AttributesUpdate invertUpdate(org.waveprotocol.wave.model.document.operation.AttributesUpdate)>(r0);

        return $r1;
    }

    static java.util.Map access$1200(org.waveprotocol.wave.model.document.operation.algorithm.Composer)
    {
        org.waveprotocol.wave.model.document.operation.algorithm.Composer r0;
        java.util.Map $r1;

        r0 := @parameter0: org.waveprotocol.wave.model.document.operation.algorithm.Composer;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer: java.util.Map postAnnotations>;

        return $r1;
    }

    static java.util.Map access$1300(org.waveprotocol.wave.model.document.operation.algorithm.Composer)
    {
        org.waveprotocol.wave.model.document.operation.algorithm.Composer r0;
        java.util.Map $r1;

        r0 := @parameter0: org.waveprotocol.wave.model.document.operation.algorithm.Composer;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer: java.util.Map preAnnotations>;

        return $r1;
    }
}
