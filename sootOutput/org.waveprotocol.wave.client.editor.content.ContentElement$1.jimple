final class org.waveprotocol.wave.client.editor.content.ContentElement$1 extends java.lang.Object implements org.waveprotocol.wave.model.document.util.ElementManager
{

    void <init>()
    {
        org.waveprotocol.wave.client.editor.content.ContentElement$1 r0;

        r0 := @this: org.waveprotocol.wave.client.editor.content.ContentElement$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void setProperty(org.waveprotocol.wave.model.document.util.Property, org.waveprotocol.wave.client.editor.content.ContentElement, java.lang.Object)
    {
        org.waveprotocol.wave.model.document.util.Property r1;
        org.waveprotocol.wave.client.editor.content.ContentElement r0;
        java.lang.Object r2;
        org.waveprotocol.wave.client.editor.content.ContentElement$1 r3;

        r3 := @this: org.waveprotocol.wave.client.editor.content.ContentElement$1;

        r1 := @parameter0: org.waveprotocol.wave.model.document.util.Property;

        r0 := @parameter1: org.waveprotocol.wave.client.editor.content.ContentElement;

        r2 := @parameter2: java.lang.Object;

        virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentElement: void setProperty(org.waveprotocol.wave.model.document.util.Property,java.lang.Object)>(r1, r2);

        return;
    }

    public java.lang.Object getProperty(org.waveprotocol.wave.model.document.util.Property, org.waveprotocol.wave.client.editor.content.ContentElement)
    {
        org.waveprotocol.wave.model.document.util.Property r1;
        org.waveprotocol.wave.client.editor.content.ContentElement r0;
        java.lang.Object $r2;
        org.waveprotocol.wave.client.editor.content.ContentElement$1 r3;

        r3 := @this: org.waveprotocol.wave.client.editor.content.ContentElement$1;

        r1 := @parameter0: org.waveprotocol.wave.model.document.util.Property;

        r0 := @parameter1: org.waveprotocol.wave.client.editor.content.ContentElement;

        $r2 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentElement: java.lang.Object getProperty(org.waveprotocol.wave.model.document.util.Property)>(r1);

        return $r2;
    }

    public boolean isDestroyed(org.waveprotocol.wave.client.editor.content.ContentElement)
    {
        org.waveprotocol.wave.client.editor.content.ContentElement r0;
        org.waveprotocol.wave.client.editor.content.ContentElement$1 r1;
        boolean $z0, $z1;

        r1 := @this: org.waveprotocol.wave.client.editor.content.ContentElement$1;

        r0 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentElement;

        $z0 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentElement: boolean isContentAttached()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public volatile boolean isDestroyed(java.lang.Object)
    {
        org.waveprotocol.wave.client.editor.content.ContentElement$1 r0;
        java.lang.Object r1;
        org.waveprotocol.wave.client.editor.content.ContentElement $r2;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.client.editor.content.ContentElement$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.client.editor.content.ContentElement) r1;

        $z0 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentElement$1: boolean isDestroyed(org.waveprotocol.wave.client.editor.content.ContentElement)>($r2);

        return $z0;
    }

    public volatile void setProperty(org.waveprotocol.wave.model.document.util.Property, java.lang.Object, java.lang.Object)
    {
        org.waveprotocol.wave.model.document.util.Property r1;
        org.waveprotocol.wave.client.editor.content.ContentElement$1 r0;
        java.lang.Object r2, r3;
        org.waveprotocol.wave.client.editor.content.ContentElement $r4;

        r0 := @this: org.waveprotocol.wave.client.editor.content.ContentElement$1;

        r1 := @parameter0: org.waveprotocol.wave.model.document.util.Property;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        $r4 = (org.waveprotocol.wave.client.editor.content.ContentElement) r2;

        virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentElement$1: void setProperty(org.waveprotocol.wave.model.document.util.Property,org.waveprotocol.wave.client.editor.content.ContentElement,java.lang.Object)>(r1, $r4, r3);

        return;
    }

    public volatile java.lang.Object getProperty(org.waveprotocol.wave.model.document.util.Property, java.lang.Object)
    {
        org.waveprotocol.wave.model.document.util.Property r1;
        org.waveprotocol.wave.client.editor.content.ContentElement$1 r0;
        java.lang.Object r2, $r4;
        org.waveprotocol.wave.client.editor.content.ContentElement $r3;

        r0 := @this: org.waveprotocol.wave.client.editor.content.ContentElement$1;

        r1 := @parameter0: org.waveprotocol.wave.model.document.util.Property;

        r2 := @parameter1: java.lang.Object;

        $r3 = (org.waveprotocol.wave.client.editor.content.ContentElement) r2;

        $r4 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentElement$1: java.lang.Object getProperty(org.waveprotocol.wave.model.document.util.Property,org.waveprotocol.wave.client.editor.content.ContentElement)>(r1, $r3);

        return $r4;
    }
}
