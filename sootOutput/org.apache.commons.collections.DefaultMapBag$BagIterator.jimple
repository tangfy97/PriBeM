class org.apache.commons.collections.DefaultMapBag$BagIterator extends java.lang.Object implements java.util.Iterator
{
    private org.apache.commons.collections.DefaultMapBag _parent;
    private java.util.Iterator _support;
    private java.lang.Object _current;
    private int _mods;

    public void <init>(org.apache.commons.collections.DefaultMapBag, java.util.Iterator)
    {
        java.util.Iterator r2;
        org.apache.commons.collections.DefaultMapBag$BagIterator r0;
        int $i0;
        org.apache.commons.collections.DefaultMapBag r1;

        r0 := @this: org.apache.commons.collections.DefaultMapBag$BagIterator;

        r1 := @parameter0: org.apache.commons.collections.DefaultMapBag;

        r2 := @parameter1: java.util.Iterator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.collections.DefaultMapBag$BagIterator: org.apache.commons.collections.DefaultMapBag _parent> = null;

        r0.<org.apache.commons.collections.DefaultMapBag$BagIterator: java.util.Iterator _support> = null;

        r0.<org.apache.commons.collections.DefaultMapBag$BagIterator: java.lang.Object _current> = null;

        r0.<org.apache.commons.collections.DefaultMapBag$BagIterator: int _mods> = 0;

        r0.<org.apache.commons.collections.DefaultMapBag$BagIterator: org.apache.commons.collections.DefaultMapBag _parent> = r1;

        r0.<org.apache.commons.collections.DefaultMapBag$BagIterator: java.util.Iterator _support> = r2;

        r0.<org.apache.commons.collections.DefaultMapBag$BagIterator: java.lang.Object _current> = null;

        $i0 = staticinvoke <org.apache.commons.collections.DefaultMapBag: int access$000(org.apache.commons.collections.DefaultMapBag)>(r1);

        r0.<org.apache.commons.collections.DefaultMapBag$BagIterator: int _mods> = $i0;

        return;
    }

    public boolean hasNext()
    {
        java.util.Iterator $r1;
        org.apache.commons.collections.DefaultMapBag$BagIterator r0;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.DefaultMapBag$BagIterator;

        $r1 = r0.<org.apache.commons.collections.DefaultMapBag$BagIterator: java.util.Iterator _support>;

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        return $z0;
    }

    public java.lang.Object next()
    {
        java.util.Iterator $r2;
        org.apache.commons.collections.DefaultMapBag$BagIterator r0;
        org.apache.commons.collections.DefaultMapBag $r1;
        int $i0, $i1;
        java.lang.Object $r3, $r4;
        java.util.ConcurrentModificationException $r5;

        r0 := @this: org.apache.commons.collections.DefaultMapBag$BagIterator;

        $r1 = r0.<org.apache.commons.collections.DefaultMapBag$BagIterator: org.apache.commons.collections.DefaultMapBag _parent>;

        $i0 = staticinvoke <org.apache.commons.collections.DefaultMapBag: int access$000(org.apache.commons.collections.DefaultMapBag)>($r1);

        $i1 = r0.<org.apache.commons.collections.DefaultMapBag$BagIterator: int _mods>;

        if $i0 == $i1 goto label1;

        $r5 = new java.util.ConcurrentModificationException;

        specialinvoke $r5.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r5;

     label1:
        $r2 = r0.<org.apache.commons.collections.DefaultMapBag$BagIterator: java.util.Iterator _support>;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r0.<org.apache.commons.collections.DefaultMapBag$BagIterator: java.lang.Object _current> = $r3;

        $r4 = r0.<org.apache.commons.collections.DefaultMapBag$BagIterator: java.lang.Object _current>;

        return $r4;
    }

    public void remove()
    {
        java.util.Iterator $r2;
        org.apache.commons.collections.DefaultMapBag$BagIterator r0;
        org.apache.commons.collections.DefaultMapBag $r1, $r4;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r3;
        java.util.ConcurrentModificationException $r5;

        r0 := @this: org.apache.commons.collections.DefaultMapBag$BagIterator;

        $r1 = r0.<org.apache.commons.collections.DefaultMapBag$BagIterator: org.apache.commons.collections.DefaultMapBag _parent>;

        $i0 = staticinvoke <org.apache.commons.collections.DefaultMapBag: int access$000(org.apache.commons.collections.DefaultMapBag)>($r1);

        $i1 = r0.<org.apache.commons.collections.DefaultMapBag$BagIterator: int _mods>;

        if $i0 == $i1 goto label1;

        $r5 = new java.util.ConcurrentModificationException;

        specialinvoke $r5.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r5;

     label1:
        $r2 = r0.<org.apache.commons.collections.DefaultMapBag$BagIterator: java.util.Iterator _support>;

        interfaceinvoke $r2.<java.util.Iterator: void remove()>();

        $r4 = r0.<org.apache.commons.collections.DefaultMapBag$BagIterator: org.apache.commons.collections.DefaultMapBag _parent>;

        $r3 = r0.<org.apache.commons.collections.DefaultMapBag$BagIterator: java.lang.Object _current>;

        virtualinvoke $r4.<org.apache.commons.collections.DefaultMapBag: boolean remove(java.lang.Object,int)>($r3, 1);

        $i2 = r0.<org.apache.commons.collections.DefaultMapBag$BagIterator: int _mods>;

        $i3 = $i2 + 1;

        r0.<org.apache.commons.collections.DefaultMapBag$BagIterator: int _mods> = $i3;

        return;
    }
}
