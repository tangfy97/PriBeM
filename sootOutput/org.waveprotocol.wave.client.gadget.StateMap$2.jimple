class org.waveprotocol.wave.client.gadget.StateMap$2 extends java.lang.Object implements org.waveprotocol.wave.client.gadget.StateMap$Each
{
    final org.waveprotocol.wave.client.gadget.StateMap this$0;

    void <init>(org.waveprotocol.wave.client.gadget.StateMap)
    {
        org.waveprotocol.wave.client.gadget.StateMap$2 r0;
        org.waveprotocol.wave.client.gadget.StateMap r1;

        r0 := @this: org.waveprotocol.wave.client.gadget.StateMap$2;

        r1 := @parameter0: org.waveprotocol.wave.client.gadget.StateMap;

        r0.<org.waveprotocol.wave.client.gadget.StateMap$2: org.waveprotocol.wave.client.gadget.StateMap this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void apply(java.lang.String, java.lang.String)
    {
        org.waveprotocol.wave.client.gadget.StateMap $r3, $r4;
        java.lang.String r0, r2;
        org.waveprotocol.wave.client.gadget.StateMap$2 r1;

        r1 := @this: org.waveprotocol.wave.client.gadget.StateMap$2;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        if r0 == null goto label1;

        $r4 = r1.<org.waveprotocol.wave.client.gadget.StateMap$2: org.waveprotocol.wave.client.gadget.StateMap this$0>;

        virtualinvoke $r4.<org.waveprotocol.wave.client.gadget.StateMap: void put(java.lang.String,java.lang.String)>(r2, r0);

        goto label2;

     label1:
        $r3 = r1.<org.waveprotocol.wave.client.gadget.StateMap$2: org.waveprotocol.wave.client.gadget.StateMap this$0>;

        virtualinvoke $r3.<org.waveprotocol.wave.client.gadget.StateMap: void remove(java.lang.String)>(r2);

     label2:
        return;
    }
}
