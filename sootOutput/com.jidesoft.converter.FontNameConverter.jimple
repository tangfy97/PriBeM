public class com.jidesoft.converter.FontNameConverter extends java.lang.Object implements com.jidesoft.converter.ObjectConverter
{
    private boolean _ensureFontExistence;
    public static com.jidesoft.converter.ConverterContext CONTEXT;

    public void <init>()
    {
        com.jidesoft.converter.FontNameConverter r0;

        r0 := @this: com.jidesoft.converter.FontNameConverter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.jidesoft.converter.FontNameConverter: boolean _ensureFontExistence> = 0;

        return;
    }

    public java.lang.String toString(java.lang.Object, com.jidesoft.converter.ConverterContext)
    {
        com.jidesoft.converter.FontNameConverter r1;
        java.lang.String[] $r4;
        java.awt.GraphicsEnvironment $r3;
        com.jidesoft.converter.ConverterContext r6;
        int i0, i1;
        java.lang.Object r0;
        java.lang.String $r2, r5;
        boolean $z0, $z1, $z2;

        r1 := @this: com.jidesoft.converter.FontNameConverter;

        r0 := @parameter0: java.lang.Object;

        r6 := @parameter1: com.jidesoft.converter.ConverterContext;

        if r0 != null goto label1;

        return "";

     label1:
        $z0 = virtualinvoke r1.<com.jidesoft.converter.FontNameConverter: boolean isEnsureFontExistence()>();

        if $z0 == 0 goto label5;

        $r3 = staticinvoke <java.awt.GraphicsEnvironment: java.awt.GraphicsEnvironment getLocalGraphicsEnvironment()>();

        $r4 = virtualinvoke $r3.<java.awt.GraphicsEnvironment: java.lang.String[] getAvailableFontFamilyNames()>();

        i0 = lengthof $r4;

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        r5 = $r4[i1];

        $z2 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z2 == 0 goto label3;

        return r5;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return "";

     label5:
        $z1 = r0 instanceof java.lang.String;

        if $z1 == 0 goto label6;

        $r2 = (java.lang.String) r0;

        return $r2;

     label6:
        return "";
    }

    public boolean supportToString(java.lang.Object, com.jidesoft.converter.ConverterContext)
    {
        com.jidesoft.converter.FontNameConverter r0;
        java.lang.Object r1;
        com.jidesoft.converter.ConverterContext r2;

        r0 := @this: com.jidesoft.converter.FontNameConverter;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: com.jidesoft.converter.ConverterContext;

        return 1;
    }

    public java.lang.Object fromString(java.lang.String, com.jidesoft.converter.ConverterContext)
    {
        com.jidesoft.converter.FontNameConverter r1;
        java.lang.String[] $r3;
        java.awt.GraphicsEnvironment $r2;
        com.jidesoft.converter.ConverterContext r5;
        int $i0, i1, i2;
        java.lang.String r0, r4;
        boolean $z0, $z1;

        r1 := @this: com.jidesoft.converter.FontNameConverter;

        r0 := @parameter0: java.lang.String;

        r5 := @parameter1: com.jidesoft.converter.ConverterContext;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $z0 = virtualinvoke r1.<com.jidesoft.converter.FontNameConverter: boolean isEnsureFontExistence()>();

        if $z0 == 0 goto label5;

        $r2 = staticinvoke <java.awt.GraphicsEnvironment: java.awt.GraphicsEnvironment getLocalGraphicsEnvironment()>();

        $r3 = virtualinvoke $r2.<java.awt.GraphicsEnvironment: java.lang.String[] getAvailableFontFamilyNames()>();

        i1 = lengthof $r3;

        i2 = 0;

     label2:
        if i2 >= i1 goto label4;

        r4 = $r3[i2];

        $z1 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label3;

        return r0;

     label3:
        i2 = i2 + 1;

        goto label2;

     label4:
        return null;

     label5:
        return r0;
    }

    public boolean supportFromString(java.lang.String, com.jidesoft.converter.ConverterContext)
    {
        com.jidesoft.converter.FontNameConverter r0;
        java.lang.String r1;
        com.jidesoft.converter.ConverterContext r2;

        r0 := @this: com.jidesoft.converter.FontNameConverter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.jidesoft.converter.ConverterContext;

        return 1;
    }

    public boolean isEnsureFontExistence()
    {
        com.jidesoft.converter.FontNameConverter r0;
        boolean $z0;

        r0 := @this: com.jidesoft.converter.FontNameConverter;

        $z0 = r0.<com.jidesoft.converter.FontNameConverter: boolean _ensureFontExistence>;

        return $z0;
    }

    public void setEnsureFontExistence(boolean)
    {
        com.jidesoft.converter.FontNameConverter r0;
        boolean z0;

        r0 := @this: com.jidesoft.converter.FontNameConverter;

        z0 := @parameter0: boolean;

        r0.<com.jidesoft.converter.FontNameConverter: boolean _ensureFontExistence> = z0;

        return;
    }

    static void <clinit>()
    {
        com.jidesoft.converter.ConverterContext $r0;

        $r0 = new com.jidesoft.converter.ConverterContext;

        specialinvoke $r0.<com.jidesoft.converter.ConverterContext: void <init>(java.lang.String)>("FontName");

        <com.jidesoft.converter.FontNameConverter: com.jidesoft.converter.ConverterContext CONTEXT> = $r0;

        return;
    }
}
