public class org.apache.log4j.varia.LevelRangeFilter extends org.apache.log4j.spi.Filter
{
    boolean acceptOnMatch;
    org.apache.log4j.Level levelMin;
    org.apache.log4j.Level levelMax;

    public void <init>()
    {
        org.apache.log4j.varia.LevelRangeFilter r0;

        r0 := @this: org.apache.log4j.varia.LevelRangeFilter;

        specialinvoke r0.<org.apache.log4j.spi.Filter: void <init>()>();

        r0.<org.apache.log4j.varia.LevelRangeFilter: boolean acceptOnMatch> = 0;

        return;
    }

    public int decide(org.apache.log4j.spi.LoggingEvent)
    {
        org.apache.log4j.spi.LoggingEvent r3;
        org.apache.log4j.varia.LevelRangeFilter r0;
        org.apache.log4j.Level $r1, $r2, $r4, $r5, $r6, $r7;
        int $i0, $i1, $i3, $i5;
        boolean $z0, $z1;

        r0 := @this: org.apache.log4j.varia.LevelRangeFilter;

        r3 := @parameter0: org.apache.log4j.spi.LoggingEvent;

        $r1 = r0.<org.apache.log4j.varia.LevelRangeFilter: org.apache.log4j.Level levelMin>;

        if $r1 == null goto label1;

        $r6 = virtualinvoke r3.<org.apache.log4j.spi.LoggingEvent: org.apache.log4j.Level getLevel()>();

        $r7 = r0.<org.apache.log4j.varia.LevelRangeFilter: org.apache.log4j.Level levelMin>;

        $z1 = virtualinvoke $r6.<org.apache.log4j.Priority: boolean isGreaterOrEqual(org.apache.log4j.Priority)>($r7);

        if $z1 != 0 goto label1;

        $i3 = (int) -1;

        return $i3;

     label1:
        $r2 = r0.<org.apache.log4j.varia.LevelRangeFilter: org.apache.log4j.Level levelMax>;

        if $r2 == null goto label2;

        $r4 = virtualinvoke r3.<org.apache.log4j.spi.LoggingEvent: org.apache.log4j.Level getLevel()>();

        $i0 = virtualinvoke $r4.<org.apache.log4j.Priority: int toInt()>();

        $r5 = r0.<org.apache.log4j.varia.LevelRangeFilter: org.apache.log4j.Level levelMax>;

        $i1 = virtualinvoke $r5.<org.apache.log4j.Priority: int toInt()>();

        if $i0 <= $i1 goto label2;

        $i5 = (int) -1;

        return $i5;

     label2:
        $z0 = r0.<org.apache.log4j.varia.LevelRangeFilter: boolean acceptOnMatch>;

        if $z0 == 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    public org.apache.log4j.Level getLevelMax()
    {
        org.apache.log4j.varia.LevelRangeFilter r0;
        org.apache.log4j.Level $r1;

        r0 := @this: org.apache.log4j.varia.LevelRangeFilter;

        $r1 = r0.<org.apache.log4j.varia.LevelRangeFilter: org.apache.log4j.Level levelMax>;

        return $r1;
    }

    public org.apache.log4j.Level getLevelMin()
    {
        org.apache.log4j.varia.LevelRangeFilter r0;
        org.apache.log4j.Level $r1;

        r0 := @this: org.apache.log4j.varia.LevelRangeFilter;

        $r1 = r0.<org.apache.log4j.varia.LevelRangeFilter: org.apache.log4j.Level levelMin>;

        return $r1;
    }

    public boolean getAcceptOnMatch()
    {
        org.apache.log4j.varia.LevelRangeFilter r0;
        boolean $z0;

        r0 := @this: org.apache.log4j.varia.LevelRangeFilter;

        $z0 = r0.<org.apache.log4j.varia.LevelRangeFilter: boolean acceptOnMatch>;

        return $z0;
    }

    public void setLevelMax(org.apache.log4j.Level)
    {
        org.apache.log4j.varia.LevelRangeFilter r0;
        org.apache.log4j.Level r1;

        r0 := @this: org.apache.log4j.varia.LevelRangeFilter;

        r1 := @parameter0: org.apache.log4j.Level;

        r0.<org.apache.log4j.varia.LevelRangeFilter: org.apache.log4j.Level levelMax> = r1;

        return;
    }

    public void setLevelMin(org.apache.log4j.Level)
    {
        org.apache.log4j.varia.LevelRangeFilter r0;
        org.apache.log4j.Level r1;

        r0 := @this: org.apache.log4j.varia.LevelRangeFilter;

        r1 := @parameter0: org.apache.log4j.Level;

        r0.<org.apache.log4j.varia.LevelRangeFilter: org.apache.log4j.Level levelMin> = r1;

        return;
    }

    public void setAcceptOnMatch(boolean)
    {
        org.apache.log4j.varia.LevelRangeFilter r0;
        boolean z0;

        r0 := @this: org.apache.log4j.varia.LevelRangeFilter;

        z0 := @parameter0: boolean;

        r0.<org.apache.log4j.varia.LevelRangeFilter: boolean acceptOnMatch> = z0;

        return;
    }
}
