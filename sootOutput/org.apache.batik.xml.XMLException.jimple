public class org.apache.batik.xml.XMLException extends java.lang.RuntimeException
{
    protected java.lang.Exception exception;

    public void <init>(java.lang.String)
    {
        org.apache.batik.xml.XMLException r0;
        java.lang.String r1;

        r0 := @this: org.apache.batik.xml.XMLException;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.RuntimeException: void <init>(java.lang.String)>(r1);

        r0.<org.apache.batik.xml.XMLException: java.lang.Exception exception> = null;

        return;
    }

    public void <init>(java.lang.Exception)
    {
        org.apache.batik.xml.XMLException r0;
        java.lang.Exception r1;

        r0 := @this: org.apache.batik.xml.XMLException;

        r1 := @parameter0: java.lang.Exception;

        specialinvoke r0.<java.lang.RuntimeException: void <init>()>();

        r0.<org.apache.batik.xml.XMLException: java.lang.Exception exception> = r1;

        return;
    }

    public void <init>(java.lang.String, java.lang.Exception)
    {
        org.apache.batik.xml.XMLException r0;
        java.lang.String r1;
        java.lang.Exception r2;

        r0 := @this: org.apache.batik.xml.XMLException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Exception;

        specialinvoke r0.<java.lang.RuntimeException: void <init>(java.lang.String)>(r1);

        r0.<org.apache.batik.xml.XMLException: java.lang.Exception exception> = r2;

        return;
    }

    public java.lang.String getMessage()
    {
        org.apache.batik.xml.XMLException r0;
        java.lang.String $r1, $r4;
        java.lang.Exception $r2, $r3;

        r0 := @this: org.apache.batik.xml.XMLException;

        $r1 = specialinvoke r0.<java.lang.Throwable: java.lang.String getMessage()>();

        if $r1 != null goto label1;

        $r2 = r0.<org.apache.batik.xml.XMLException: java.lang.Exception exception>;

        if $r2 == null goto label1;

        $r3 = r0.<org.apache.batik.xml.XMLException: java.lang.Exception exception>;

        $r4 = virtualinvoke $r3.<java.lang.Throwable: java.lang.String getMessage()>();

        return $r4;

     label1:
        return $r1;
    }

    public java.lang.Exception getException()
    {
        org.apache.batik.xml.XMLException r0;
        java.lang.Exception $r1;

        r0 := @this: org.apache.batik.xml.XMLException;

        $r1 = r0.<org.apache.batik.xml.XMLException: java.lang.Exception exception>;

        return $r1;
    }

    public void printStackTrace()
    {
        java.io.PrintStream r2, $r3;
        java.lang.Throwable $r4;
        org.apache.batik.xml.XMLException r0;
        java.lang.Exception $r1;

        r0 := @this: org.apache.batik.xml.XMLException;

        $r1 = r0.<org.apache.batik.xml.XMLException: java.lang.Exception exception>;

        if $r1 != null goto label1;

        specialinvoke r0.<java.lang.Throwable: void printStackTrace()>();

        goto label4;

     label1:
        r2 = <java.lang.System: java.io.PrintStream err>;

        entermonitor r2;

     label2:
        $r3 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.Object)>(r0);

        specialinvoke r0.<java.lang.Throwable: void printStackTrace()>();

        exitmonitor r2;

        goto label4;

     label3:
        $r4 := @caughtexception;

        exitmonitor r2;

        throw $r4;

     label4:
        return;

        catch java.lang.Throwable from label2 to label3 with label3;
    }

    public void printStackTrace(java.io.PrintStream)
    {
        java.io.PrintStream r2;
        java.lang.Throwable $r3;
        org.apache.batik.xml.XMLException r0;
        java.lang.Exception $r1;

        r0 := @this: org.apache.batik.xml.XMLException;

        r2 := @parameter0: java.io.PrintStream;

        $r1 = r0.<org.apache.batik.xml.XMLException: java.lang.Exception exception>;

        if $r1 != null goto label1;

        specialinvoke r0.<java.lang.Throwable: void printStackTrace(java.io.PrintStream)>(r2);

        goto label4;

     label1:
        entermonitor r2;

     label2:
        virtualinvoke r2.<java.io.PrintStream: void println(java.lang.Object)>(r0);

        specialinvoke r0.<java.lang.Throwable: void printStackTrace()>();

        exitmonitor r2;

        goto label4;

     label3:
        $r3 := @caughtexception;

        exitmonitor r2;

        throw $r3;

     label4:
        return;

        catch java.lang.Throwable from label2 to label3 with label3;
    }

    public void printStackTrace(java.io.PrintWriter)
    {
        java.io.PrintWriter r2;
        java.lang.Throwable $r3;
        org.apache.batik.xml.XMLException r0;
        java.lang.Exception $r1;

        r0 := @this: org.apache.batik.xml.XMLException;

        r2 := @parameter0: java.io.PrintWriter;

        $r1 = r0.<org.apache.batik.xml.XMLException: java.lang.Exception exception>;

        if $r1 != null goto label1;

        specialinvoke r0.<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>(r2);

        goto label4;

     label1:
        entermonitor r2;

     label2:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>(r0);

        specialinvoke r0.<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>(r2);

        exitmonitor r2;

        goto label4;

     label3:
        $r3 := @caughtexception;

        exitmonitor r2;

        throw $r3;

     label4:
        return;

        catch java.lang.Throwable from label2 to label3 with label3;
    }
}
