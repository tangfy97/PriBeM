public class org.junit.runners.Parameterized extends org.junit.runners.Suite
{
    private static final java.util.List NO_RUNNERS;
    private final java.util.ArrayList runners;

    public void <init>(java.lang.Class) throws java.lang.Throwable
    {
        org.junit.runners.model.FrameworkMethod $r4;
        org.junit.runners.Parameterized$Parameters r6;
        java.lang.Iterable $r7;
        java.util.ArrayList $r3;
        java.util.List $r2;
        java.lang.'annotation'.Annotation $r5;
        java.lang.Class r1;
        java.lang.String $r8;
        org.junit.runners.Parameterized r0;

        r0 := @this: org.junit.runners.Parameterized;

        r1 := @parameter0: java.lang.Class;

        $r2 = <org.junit.runners.Parameterized: java.util.List NO_RUNNERS>;

        specialinvoke r0.<org.junit.runners.Suite: void <init>(java.lang.Class,java.util.List)>(r1, $r2);

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<org.junit.runners.Parameterized: java.util.ArrayList runners> = $r3;

        $r4 = specialinvoke r0.<org.junit.runners.Parameterized: org.junit.runners.model.FrameworkMethod getParametersMethod()>();

        $r5 = virtualinvoke $r4.<org.junit.runners.model.FrameworkMethod: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lorg/junit/runners/Parameterized$Parameters;");

        r6 = (org.junit.runners.Parameterized$Parameters) $r5;

        $r7 = specialinvoke r0.<org.junit.runners.Parameterized: java.lang.Iterable allParameters()>();

        $r8 = interfaceinvoke r6.<org.junit.runners.Parameterized$Parameters: java.lang.String name()>();

        specialinvoke r0.<org.junit.runners.Parameterized: void createRunnersForParameters(java.lang.Iterable,java.lang.String)>($r7, $r8);

        return;
    }

    protected java.util.List getChildren()
    {
        org.junit.runners.Parameterized r0;
        java.util.ArrayList $r1;

        r0 := @this: org.junit.runners.Parameterized;

        $r1 = r0.<org.junit.runners.Parameterized: java.util.ArrayList runners>;

        return $r1;
    }

    private java.lang.Iterable allParameters() throws java.lang.Throwable
    {
        org.junit.runners.model.FrameworkMethod $r1;
        java.lang.Object[] $r2;
        java.lang.Object $r3;
        org.junit.runners.Parameterized r0;
        java.lang.Exception $r4;
        java.lang.Iterable $r5;
        boolean $z0;

        r0 := @this: org.junit.runners.Parameterized;

        $r1 = specialinvoke r0.<org.junit.runners.Parameterized: org.junit.runners.model.FrameworkMethod getParametersMethod()>();

        $r2 = newarray (java.lang.Object)[0];

        $r3 = virtualinvoke $r1.<org.junit.runners.model.FrameworkMethod: java.lang.Object invokeExplosively(java.lang.Object,java.lang.Object[])>(null, $r2);

        $z0 = $r3 instanceof java.lang.Iterable;

        if $z0 == 0 goto label1;

        $r5 = (java.lang.Iterable) $r3;

        return $r5;

     label1:
        $r4 = specialinvoke r0.<org.junit.runners.Parameterized: java.lang.Exception parametersMethodReturnedWrongType()>();

        throw $r4;
    }

    private org.junit.runners.model.FrameworkMethod getParametersMethod() throws java.lang.Exception
    {
        org.junit.runners.model.TestClass $r1, $r7;
        java.lang.String $r8, $r10;
        org.junit.runners.Parameterized r0;
        boolean $z0, $z1, $z2;
        org.junit.runners.model.FrameworkMethod r12;
        java.util.Iterator $r3;
        java.lang.Exception $r4;
        java.util.List $r2;
        java.lang.StringBuilder $r5, $r6, $r9;
        java.lang.Object $r11;

        r0 := @this: org.junit.runners.Parameterized;

        $r1 = virtualinvoke r0.<org.junit.runners.Parameterized: org.junit.runners.model.TestClass getTestClass()>();

        $r2 = virtualinvoke $r1.<org.junit.runners.model.TestClass: java.util.List getAnnotatedMethods(java.lang.Class)>(class "Lorg/junit/runners/Parameterized$Parameters;");

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r11 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r12 = (org.junit.runners.model.FrameworkMethod) $r11;

        $z1 = virtualinvoke r12.<org.junit.runners.model.FrameworkMethod: boolean isStatic()>();

        if $z1 == 0 goto label2;

        $z2 = virtualinvoke r12.<org.junit.runners.model.FrameworkMethod: boolean isPublic()>();

        if $z2 == 0 goto label2;

        return r12;

     label2:
        goto label1;

     label3:
        $r4 = new java.lang.Exception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No public static parameters method on class ");

        $r7 = virtualinvoke r0.<org.junit.runners.Parameterized: org.junit.runners.model.TestClass getTestClass()>();

        $r8 = virtualinvoke $r7.<org.junit.runners.model.TestClass: java.lang.String getName()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.Exception: void <init>(java.lang.String)>($r10);

        throw $r4;
    }

    private void createRunnersForParameters(java.lang.Iterable, java.lang.String) throws org.junit.runners.model.InitializationError, java.lang.Exception
    {
        java.lang.Object[] r3;
        java.util.Iterator $r1;
        java.lang.ClassCastException $r11;
        java.lang.Iterable r0;
        java.lang.Exception $r12;
        java.util.ArrayList $r10;
        org.junit.runners.Parameterized$TestClassRunnerForParameters $r7;
        org.junit.runners.model.TestClass $r8;
        int i0;
        java.lang.Object $r2;
        java.lang.Class $r9;
        java.lang.String r5, $r6;
        org.junit.runners.Parameterized r4;
        boolean $z0;

        r4 := @this: org.junit.runners.Parameterized;

        r0 := @parameter0: java.lang.Iterable;

        r5 := @parameter1: java.lang.String;

     label1:
        i0 = 0;

        $r1 = interfaceinvoke r0.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.Object[]) $r2;

        $r6 = specialinvoke r4.<org.junit.runners.Parameterized: java.lang.String nameFor(java.lang.String,int,java.lang.Object[])>(r5, i0, r3);

        $r7 = new org.junit.runners.Parameterized$TestClassRunnerForParameters;

        $r8 = virtualinvoke r4.<org.junit.runners.Parameterized: org.junit.runners.model.TestClass getTestClass()>();

        $r9 = virtualinvoke $r8.<org.junit.runners.model.TestClass: java.lang.Class getJavaClass()>();

        specialinvoke $r7.<org.junit.runners.Parameterized$TestClassRunnerForParameters: void <init>(org.junit.runners.Parameterized,java.lang.Class,java.lang.Object[],java.lang.String)>(r4, $r9, r3, $r6);

        $r10 = r4.<org.junit.runners.Parameterized: java.util.ArrayList runners>;

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        i0 = i0 + 1;

        goto label2;

     label3:
        goto label5;

     label4:
        $r11 := @caughtexception;

        $r12 = specialinvoke r4.<org.junit.runners.Parameterized: java.lang.Exception parametersMethodReturnedWrongType()>();

        throw $r12;

     label5:
        return;

        catch java.lang.ClassCastException from label1 to label3 with label4;
    }

    private java.lang.String nameFor(java.lang.String, int, java.lang.Object[])
    {
        java.lang.Object[] r3;
        int i0;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;
        java.lang.String r0, $r1, $r2, $r4, $r9;
        org.junit.runners.Parameterized r10;

        r10 := @this: org.junit.runners.Parameterized;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r3 := @parameter2: java.lang.Object[];

        $r1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\{index\\}", $r1);

        $r4 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>($r2, r3);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    private java.lang.Exception parametersMethodReturnedWrongType() throws java.lang.Exception
    {
        org.junit.runners.model.FrameworkMethod $r3;
        java.lang.Object[] $r5;
        java.lang.Exception $r7;
        org.junit.runners.model.TestClass $r1;
        java.lang.String $r2, $r4, $r6;
        org.junit.runners.Parameterized r0;

        r0 := @this: org.junit.runners.Parameterized;

        $r1 = virtualinvoke r0.<org.junit.runners.Parameterized: org.junit.runners.model.TestClass getTestClass()>();

        $r2 = virtualinvoke $r1.<org.junit.runners.model.TestClass: java.lang.String getName()>();

        $r3 = specialinvoke r0.<org.junit.runners.Parameterized: org.junit.runners.model.FrameworkMethod getParametersMethod()>();

        $r4 = virtualinvoke $r3.<org.junit.runners.model.FrameworkMethod: java.lang.String getName()>();

        $r5 = newarray (java.lang.Object)[2];

        $r5[0] = $r2;

        $r5[1] = $r4;

        $r6 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("{0}.{1}() must return an Iterable of arrays.", $r5);

        $r7 = new java.lang.Exception;

        specialinvoke $r7.<java.lang.Exception: void <init>(java.lang.String)>($r6);

        return $r7;
    }

    private java.util.List getAnnotatedFieldsByParameter()
    {
        java.util.List $r2;
        org.junit.runners.model.TestClass $r1;
        org.junit.runners.Parameterized r0;

        r0 := @this: org.junit.runners.Parameterized;

        $r1 = virtualinvoke r0.<org.junit.runners.Parameterized: org.junit.runners.model.TestClass getTestClass()>();

        $r2 = virtualinvoke $r1.<org.junit.runners.model.TestClass: java.util.List getAnnotatedFields(java.lang.Class)>(class "Lorg/junit/runners/Parameterized$Parameter;");

        return $r2;
    }

    private boolean fieldsAreAnnotated()
    {
        java.util.List $r1;
        org.junit.runners.Parameterized r0;
        boolean $z0, $z1;

        r0 := @this: org.junit.runners.Parameterized;

        $r1 = specialinvoke r0.<org.junit.runners.Parameterized: java.util.List getAnnotatedFieldsByParameter()>();

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    static boolean access$000(org.junit.runners.Parameterized)
    {
        org.junit.runners.Parameterized r0;
        boolean $z0;

        r0 := @parameter0: org.junit.runners.Parameterized;

        $z0 = specialinvoke r0.<org.junit.runners.Parameterized: boolean fieldsAreAnnotated()>();

        return $z0;
    }

    static java.util.List access$100(org.junit.runners.Parameterized)
    {
        java.util.List $r1;
        org.junit.runners.Parameterized r0;

        r0 := @parameter0: org.junit.runners.Parameterized;

        $r1 = specialinvoke r0.<org.junit.runners.Parameterized: java.util.List getAnnotatedFieldsByParameter()>();

        return $r1;
    }

    static void <clinit>()
    {
        java.util.List $r0;

        $r0 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        <org.junit.runners.Parameterized: java.util.List NO_RUNNERS> = $r0;

        return;
    }
}
