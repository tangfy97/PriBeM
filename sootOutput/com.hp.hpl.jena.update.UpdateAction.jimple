public class com.hp.hpl.jena.update.UpdateAction extends java.lang.Object
{

    public void <init>()
    {
        com.hp.hpl.jena.update.UpdateAction r0;

        r0 := @this: com.hp.hpl.jena.update.UpdateAction;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void readExecute(java.lang.String, com.hp.hpl.jena.rdf.model.Model)
    {
        com.hp.hpl.jena.rdf.model.Model r1;
        java.lang.String r0;
        com.hp.hpl.jena.update.GraphStore $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: com.hp.hpl.jena.rdf.model.Model;

        $r2 = staticinvoke <com.hp.hpl.jena.update.GraphStoreFactory: com.hp.hpl.jena.update.GraphStore create(com.hp.hpl.jena.rdf.model.Model)>(r1);

        staticinvoke <com.hp.hpl.jena.update.UpdateAction: void readExecute(java.lang.String,com.hp.hpl.jena.update.GraphStore)>(r0, $r2);

        return;
    }

    public static void readExecute(java.lang.String, com.hp.hpl.jena.query.Dataset)
    {
        com.hp.hpl.jena.query.Dataset r1;
        java.lang.String r0;
        com.hp.hpl.jena.update.GraphStore $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: com.hp.hpl.jena.query.Dataset;

        $r2 = staticinvoke <com.hp.hpl.jena.update.GraphStoreFactory: com.hp.hpl.jena.update.GraphStore create(com.hp.hpl.jena.query.Dataset)>(r1);

        staticinvoke <com.hp.hpl.jena.update.UpdateAction: void readExecute(java.lang.String,com.hp.hpl.jena.update.GraphStore)>(r0, $r2);

        return;
    }

    public static void readExecute(java.lang.String, com.hp.hpl.jena.sparql.core.DatasetGraph)
    {
        java.lang.String r0;
        com.hp.hpl.jena.sparql.core.DatasetGraph r1;
        com.hp.hpl.jena.update.GraphStore $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: com.hp.hpl.jena.sparql.core.DatasetGraph;

        $r2 = staticinvoke <com.hp.hpl.jena.update.GraphStoreFactory: com.hp.hpl.jena.update.GraphStore create(com.hp.hpl.jena.sparql.core.DatasetGraph)>(r1);

        staticinvoke <com.hp.hpl.jena.update.UpdateAction: void readExecute(java.lang.String,com.hp.hpl.jena.update.GraphStore)>(r0, $r2);

        return;
    }

    public static void readExecute(java.lang.String, com.hp.hpl.jena.graph.Graph)
    {
        java.lang.String r0;
        com.hp.hpl.jena.update.GraphStore $r2;
        com.hp.hpl.jena.graph.Graph r1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: com.hp.hpl.jena.graph.Graph;

        $r2 = staticinvoke <com.hp.hpl.jena.update.GraphStoreFactory: com.hp.hpl.jena.update.GraphStore create(com.hp.hpl.jena.graph.Graph)>(r1);

        staticinvoke <com.hp.hpl.jena.update.UpdateAction: void readExecute(java.lang.String,com.hp.hpl.jena.update.GraphStore)>(r0, $r2);

        return;
    }

    public static void readExecute(java.lang.String, com.hp.hpl.jena.update.GraphStore)
    {
        java.lang.String r0;
        com.hp.hpl.jena.update.GraphStore r1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: com.hp.hpl.jena.update.GraphStore;

        staticinvoke <com.hp.hpl.jena.update.UpdateAction: void readExecute(java.lang.String,com.hp.hpl.jena.update.GraphStore,com.hp.hpl.jena.sparql.engine.binding.Binding)>(r0, r1, null);

        return;
    }

    public static void readExecute(java.lang.String, com.hp.hpl.jena.update.GraphStore, com.hp.hpl.jena.query.QuerySolution)
    {
        com.hp.hpl.jena.sparql.engine.binding.Binding $r3;
        com.hp.hpl.jena.update.GraphStore r1;
        com.hp.hpl.jena.query.QuerySolution r2;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: com.hp.hpl.jena.update.GraphStore;

        r2 := @parameter2: com.hp.hpl.jena.query.QuerySolution;

        $r3 = staticinvoke <com.hp.hpl.jena.sparql.engine.binding.BindingUtils: com.hp.hpl.jena.sparql.engine.binding.Binding asBinding(com.hp.hpl.jena.query.QuerySolution)>(r2);

        staticinvoke <com.hp.hpl.jena.update.UpdateAction: void readExecute(java.lang.String,com.hp.hpl.jena.update.GraphStore,com.hp.hpl.jena.sparql.engine.binding.Binding)>(r0, r1, $r3);

        return;
    }

    public static void readExecute(java.lang.String, com.hp.hpl.jena.update.GraphStore, com.hp.hpl.jena.sparql.engine.binding.Binding)
    {
        com.hp.hpl.jena.sparql.engine.binding.Binding r3;
        com.hp.hpl.jena.update.GraphStore r2;
        java.lang.String r0;
        com.hp.hpl.jena.update.UpdateRequest $r1;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: com.hp.hpl.jena.update.GraphStore;

        r3 := @parameter2: com.hp.hpl.jena.sparql.engine.binding.Binding;

        $r1 = staticinvoke <com.hp.hpl.jena.update.UpdateFactory: com.hp.hpl.jena.update.UpdateRequest read(java.lang.String)>(r0);

        staticinvoke <com.hp.hpl.jena.update.UpdateAction: void execute(com.hp.hpl.jena.update.UpdateRequest,com.hp.hpl.jena.update.GraphStore,com.hp.hpl.jena.sparql.engine.binding.Binding)>($r1, r2, r3);

        return;
    }

    public static void parseExecute(java.lang.String, com.hp.hpl.jena.rdf.model.Model)
    {
        com.hp.hpl.jena.rdf.model.Model r1;
        java.lang.String r0;
        com.hp.hpl.jena.update.GraphStore $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: com.hp.hpl.jena.rdf.model.Model;

        $r2 = staticinvoke <com.hp.hpl.jena.update.GraphStoreFactory: com.hp.hpl.jena.update.GraphStore create(com.hp.hpl.jena.rdf.model.Model)>(r1);

        staticinvoke <com.hp.hpl.jena.update.UpdateAction: void parseExecute(java.lang.String,com.hp.hpl.jena.update.GraphStore)>(r0, $r2);

        return;
    }

    public static void parseExecute(java.lang.String, com.hp.hpl.jena.query.Dataset)
    {
        com.hp.hpl.jena.query.Dataset r1;
        java.lang.String r0;
        com.hp.hpl.jena.update.GraphStore $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: com.hp.hpl.jena.query.Dataset;

        $r2 = staticinvoke <com.hp.hpl.jena.update.GraphStoreFactory: com.hp.hpl.jena.update.GraphStore create(com.hp.hpl.jena.query.Dataset)>(r1);

        staticinvoke <com.hp.hpl.jena.update.UpdateAction: void parseExecute(java.lang.String,com.hp.hpl.jena.update.GraphStore)>(r0, $r2);

        return;
    }

    public static void parseExecute(java.lang.String, com.hp.hpl.jena.sparql.core.DatasetGraph)
    {
        java.lang.String r0;
        com.hp.hpl.jena.sparql.core.DatasetGraph r1;
        com.hp.hpl.jena.update.GraphStore $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: com.hp.hpl.jena.sparql.core.DatasetGraph;

        $r2 = staticinvoke <com.hp.hpl.jena.update.GraphStoreFactory: com.hp.hpl.jena.update.GraphStore create(com.hp.hpl.jena.sparql.core.DatasetGraph)>(r1);

        staticinvoke <com.hp.hpl.jena.update.UpdateAction: void parseExecute(java.lang.String,com.hp.hpl.jena.update.GraphStore)>(r0, $r2);

        return;
    }

    public static void parseExecute(java.lang.String, com.hp.hpl.jena.graph.Graph)
    {
        java.lang.String r0;
        com.hp.hpl.jena.update.GraphStore $r2;
        com.hp.hpl.jena.graph.Graph r1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: com.hp.hpl.jena.graph.Graph;

        $r2 = staticinvoke <com.hp.hpl.jena.update.GraphStoreFactory: com.hp.hpl.jena.update.GraphStore create(com.hp.hpl.jena.graph.Graph)>(r1);

        staticinvoke <com.hp.hpl.jena.update.UpdateAction: void parseExecute(java.lang.String,com.hp.hpl.jena.update.GraphStore)>(r0, $r2);

        return;
    }

    public static void parseExecute(java.lang.String, com.hp.hpl.jena.update.GraphStore)
    {
        java.lang.String r0;
        com.hp.hpl.jena.update.GraphStore r2;
        com.hp.hpl.jena.update.UpdateRequest $r1;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: com.hp.hpl.jena.update.GraphStore;

        $r1 = staticinvoke <com.hp.hpl.jena.update.UpdateFactory: com.hp.hpl.jena.update.UpdateRequest create(java.lang.String)>(r0);

        staticinvoke <com.hp.hpl.jena.update.UpdateAction: void execute(com.hp.hpl.jena.update.UpdateRequest,com.hp.hpl.jena.update.GraphStore)>($r1, r2);

        return;
    }

    public static void execute(com.hp.hpl.jena.update.UpdateRequest, com.hp.hpl.jena.rdf.model.Model)
    {
        com.hp.hpl.jena.rdf.model.Model r1;
        com.hp.hpl.jena.update.GraphStore $r2;
        com.hp.hpl.jena.update.UpdateRequest r0;

        r0 := @parameter0: com.hp.hpl.jena.update.UpdateRequest;

        r1 := @parameter1: com.hp.hpl.jena.rdf.model.Model;

        $r2 = staticinvoke <com.hp.hpl.jena.update.GraphStoreFactory: com.hp.hpl.jena.update.GraphStore create(com.hp.hpl.jena.rdf.model.Model)>(r1);

        staticinvoke <com.hp.hpl.jena.update.UpdateAction: void execute(com.hp.hpl.jena.update.UpdateRequest,com.hp.hpl.jena.update.GraphStore)>(r0, $r2);

        return;
    }

    public static void execute(com.hp.hpl.jena.update.UpdateRequest, com.hp.hpl.jena.query.Dataset)
    {
        com.hp.hpl.jena.query.Dataset r1;
        com.hp.hpl.jena.update.GraphStore $r2;
        com.hp.hpl.jena.update.UpdateRequest r0;

        r0 := @parameter0: com.hp.hpl.jena.update.UpdateRequest;

        r1 := @parameter1: com.hp.hpl.jena.query.Dataset;

        $r2 = staticinvoke <com.hp.hpl.jena.update.GraphStoreFactory: com.hp.hpl.jena.update.GraphStore create(com.hp.hpl.jena.query.Dataset)>(r1);

        staticinvoke <com.hp.hpl.jena.update.UpdateAction: void execute(com.hp.hpl.jena.update.UpdateRequest,com.hp.hpl.jena.update.GraphStore)>(r0, $r2);

        return;
    }

    public static void execute(com.hp.hpl.jena.update.UpdateRequest, com.hp.hpl.jena.sparql.core.DatasetGraph)
    {
        com.hp.hpl.jena.sparql.core.DatasetGraph r1;
        com.hp.hpl.jena.update.GraphStore $r2;
        com.hp.hpl.jena.update.UpdateRequest r0;

        r0 := @parameter0: com.hp.hpl.jena.update.UpdateRequest;

        r1 := @parameter1: com.hp.hpl.jena.sparql.core.DatasetGraph;

        $r2 = staticinvoke <com.hp.hpl.jena.update.GraphStoreFactory: com.hp.hpl.jena.update.GraphStore create(com.hp.hpl.jena.sparql.core.DatasetGraph)>(r1);

        staticinvoke <com.hp.hpl.jena.update.UpdateAction: void execute(com.hp.hpl.jena.update.UpdateRequest,com.hp.hpl.jena.update.GraphStore)>(r0, $r2);

        return;
    }

    public static void execute(com.hp.hpl.jena.update.UpdateRequest, com.hp.hpl.jena.graph.Graph)
    {
        com.hp.hpl.jena.update.GraphStore $r2;
        com.hp.hpl.jena.update.UpdateRequest r0;
        com.hp.hpl.jena.graph.Graph r1;

        r0 := @parameter0: com.hp.hpl.jena.update.UpdateRequest;

        r1 := @parameter1: com.hp.hpl.jena.graph.Graph;

        $r2 = staticinvoke <com.hp.hpl.jena.update.GraphStoreFactory: com.hp.hpl.jena.update.GraphStore create(com.hp.hpl.jena.graph.Graph)>(r1);

        staticinvoke <com.hp.hpl.jena.update.UpdateAction: void execute(com.hp.hpl.jena.update.UpdateRequest,com.hp.hpl.jena.update.GraphStore)>(r0, $r2);

        return;
    }

    public static void execute(com.hp.hpl.jena.update.UpdateRequest, com.hp.hpl.jena.update.GraphStore)
    {
        com.hp.hpl.jena.update.GraphStore r1;
        com.hp.hpl.jena.update.UpdateRequest r0;

        r0 := @parameter0: com.hp.hpl.jena.update.UpdateRequest;

        r1 := @parameter1: com.hp.hpl.jena.update.GraphStore;

        staticinvoke <com.hp.hpl.jena.update.UpdateAction: void execute(com.hp.hpl.jena.update.UpdateRequest,com.hp.hpl.jena.update.GraphStore,com.hp.hpl.jena.sparql.engine.binding.Binding)>(r0, r1, null);

        return;
    }

    public static void execute(com.hp.hpl.jena.update.UpdateRequest, com.hp.hpl.jena.update.GraphStore, com.hp.hpl.jena.query.QuerySolution)
    {
        com.hp.hpl.jena.sparql.engine.binding.Binding $r3;
        com.hp.hpl.jena.update.GraphStore r1;
        com.hp.hpl.jena.query.QuerySolution r2;
        com.hp.hpl.jena.update.UpdateRequest r0;

        r0 := @parameter0: com.hp.hpl.jena.update.UpdateRequest;

        r1 := @parameter1: com.hp.hpl.jena.update.GraphStore;

        r2 := @parameter2: com.hp.hpl.jena.query.QuerySolution;

        $r3 = staticinvoke <com.hp.hpl.jena.sparql.engine.binding.BindingUtils: com.hp.hpl.jena.sparql.engine.binding.Binding asBinding(com.hp.hpl.jena.query.QuerySolution)>(r2);

        staticinvoke <com.hp.hpl.jena.update.UpdateAction: void execute(com.hp.hpl.jena.update.UpdateRequest,com.hp.hpl.jena.update.GraphStore,com.hp.hpl.jena.sparql.engine.binding.Binding)>(r0, r1, $r3);

        return;
    }

    public static void execute(com.hp.hpl.jena.update.UpdateRequest, com.hp.hpl.jena.update.GraphStore, com.hp.hpl.jena.sparql.engine.binding.Binding)
    {
        com.hp.hpl.jena.sparql.engine.binding.Binding r2;
        com.hp.hpl.jena.update.GraphStore r1;
        com.hp.hpl.jena.update.UpdateRequest r0;

        r0 := @parameter0: com.hp.hpl.jena.update.UpdateRequest;

        r1 := @parameter1: com.hp.hpl.jena.update.GraphStore;

        r2 := @parameter2: com.hp.hpl.jena.sparql.engine.binding.Binding;

        staticinvoke <com.hp.hpl.jena.update.UpdateAction: void execute$(com.hp.hpl.jena.update.UpdateRequest,com.hp.hpl.jena.update.GraphStore,com.hp.hpl.jena.sparql.engine.binding.Binding)>(r0, r1, r2);

        return;
    }

    private static void execute$(com.hp.hpl.jena.update.UpdateRequest, com.hp.hpl.jena.update.GraphStore, com.hp.hpl.jena.sparql.engine.binding.Binding)
    {
        com.hp.hpl.jena.sparql.engine.binding.Binding r2;
        com.hp.hpl.jena.update.GraphStore r1;
        com.hp.hpl.jena.sparql.ARQException $r4;
        com.hp.hpl.jena.update.UpdateProcessor $r3;
        com.hp.hpl.jena.update.UpdateRequest r0;

        r0 := @parameter0: com.hp.hpl.jena.update.UpdateRequest;

        r1 := @parameter1: com.hp.hpl.jena.update.GraphStore;

        r2 := @parameter2: com.hp.hpl.jena.sparql.engine.binding.Binding;

        $r3 = staticinvoke <com.hp.hpl.jena.update.UpdateExecutionFactory: com.hp.hpl.jena.update.UpdateProcessor create(com.hp.hpl.jena.update.UpdateRequest,com.hp.hpl.jena.update.GraphStore,com.hp.hpl.jena.sparql.engine.binding.Binding)>(r0, r1, r2);

        if $r3 != null goto label1;

        $r4 = new com.hp.hpl.jena.sparql.ARQException;

        specialinvoke $r4.<com.hp.hpl.jena.sparql.ARQException: void <init>(java.lang.String)>("No suitable update procesors are registered/able to execute your updates");

        throw $r4;

     label1:
        interfaceinvoke $r3.<com.hp.hpl.jena.update.UpdateProcessor: void execute()>();

        return;
    }

    public static void execute(com.hp.hpl.jena.update.Update, com.hp.hpl.jena.rdf.model.Model)
    {
        com.hp.hpl.jena.rdf.model.Model r1;
        com.hp.hpl.jena.update.Update r0;
        com.hp.hpl.jena.update.GraphStore $r2;

        r0 := @parameter0: com.hp.hpl.jena.update.Update;

        r1 := @parameter1: com.hp.hpl.jena.rdf.model.Model;

        $r2 = staticinvoke <com.hp.hpl.jena.update.GraphStoreFactory: com.hp.hpl.jena.update.GraphStore create(com.hp.hpl.jena.rdf.model.Model)>(r1);

        staticinvoke <com.hp.hpl.jena.update.UpdateAction: void execute(com.hp.hpl.jena.update.Update,com.hp.hpl.jena.update.GraphStore)>(r0, $r2);

        return;
    }

    public static void execute(com.hp.hpl.jena.update.Update, com.hp.hpl.jena.query.Dataset)
    {
        com.hp.hpl.jena.query.Dataset r1;
        com.hp.hpl.jena.update.Update r0;
        com.hp.hpl.jena.update.GraphStore $r2;

        r0 := @parameter0: com.hp.hpl.jena.update.Update;

        r1 := @parameter1: com.hp.hpl.jena.query.Dataset;

        $r2 = staticinvoke <com.hp.hpl.jena.update.GraphStoreFactory: com.hp.hpl.jena.update.GraphStore create(com.hp.hpl.jena.query.Dataset)>(r1);

        staticinvoke <com.hp.hpl.jena.update.UpdateAction: void execute(com.hp.hpl.jena.update.Update,com.hp.hpl.jena.update.GraphStore)>(r0, $r2);

        return;
    }

    public static void execute(com.hp.hpl.jena.update.Update, com.hp.hpl.jena.sparql.core.DatasetGraph)
    {
        com.hp.hpl.jena.update.Update r0;
        com.hp.hpl.jena.sparql.core.DatasetGraph r1;
        com.hp.hpl.jena.update.GraphStore $r2;

        r0 := @parameter0: com.hp.hpl.jena.update.Update;

        r1 := @parameter1: com.hp.hpl.jena.sparql.core.DatasetGraph;

        $r2 = staticinvoke <com.hp.hpl.jena.update.GraphStoreFactory: com.hp.hpl.jena.update.GraphStore create(com.hp.hpl.jena.sparql.core.DatasetGraph)>(r1);

        staticinvoke <com.hp.hpl.jena.update.UpdateAction: void execute(com.hp.hpl.jena.update.Update,com.hp.hpl.jena.update.GraphStore)>(r0, $r2);

        return;
    }

    public static void execute(com.hp.hpl.jena.update.Update, com.hp.hpl.jena.graph.Graph)
    {
        com.hp.hpl.jena.update.Update r0;
        com.hp.hpl.jena.update.GraphStore $r2;
        com.hp.hpl.jena.graph.Graph r1;

        r0 := @parameter0: com.hp.hpl.jena.update.Update;

        r1 := @parameter1: com.hp.hpl.jena.graph.Graph;

        $r2 = staticinvoke <com.hp.hpl.jena.update.GraphStoreFactory: com.hp.hpl.jena.update.GraphStore create(com.hp.hpl.jena.graph.Graph)>(r1);

        staticinvoke <com.hp.hpl.jena.update.UpdateAction: void execute(com.hp.hpl.jena.update.Update,com.hp.hpl.jena.update.GraphStore)>(r0, $r2);

        return;
    }

    public static void execute(com.hp.hpl.jena.update.Update, com.hp.hpl.jena.update.GraphStore)
    {
        com.hp.hpl.jena.update.Update r0;
        com.hp.hpl.jena.update.GraphStore r1;

        r0 := @parameter0: com.hp.hpl.jena.update.Update;

        r1 := @parameter1: com.hp.hpl.jena.update.GraphStore;

        staticinvoke <com.hp.hpl.jena.update.UpdateAction: void execute(com.hp.hpl.jena.update.Update,com.hp.hpl.jena.update.GraphStore,com.hp.hpl.jena.sparql.engine.binding.Binding)>(r0, r1, null);

        return;
    }

    public static void execute(com.hp.hpl.jena.update.Update, com.hp.hpl.jena.update.GraphStore, com.hp.hpl.jena.query.QuerySolution)
    {
        com.hp.hpl.jena.sparql.engine.binding.Binding $r3;
        com.hp.hpl.jena.update.GraphStore r1;
        com.hp.hpl.jena.query.QuerySolution r2;
        com.hp.hpl.jena.update.Update r0;

        r0 := @parameter0: com.hp.hpl.jena.update.Update;

        r1 := @parameter1: com.hp.hpl.jena.update.GraphStore;

        r2 := @parameter2: com.hp.hpl.jena.query.QuerySolution;

        $r3 = staticinvoke <com.hp.hpl.jena.sparql.engine.binding.BindingUtils: com.hp.hpl.jena.sparql.engine.binding.Binding asBinding(com.hp.hpl.jena.query.QuerySolution)>(r2);

        staticinvoke <com.hp.hpl.jena.update.UpdateAction: void execute(com.hp.hpl.jena.update.Update,com.hp.hpl.jena.update.GraphStore,com.hp.hpl.jena.sparql.engine.binding.Binding)>(r0, r1, $r3);

        return;
    }

    public static void execute(com.hp.hpl.jena.update.Update, com.hp.hpl.jena.update.GraphStore, com.hp.hpl.jena.sparql.engine.binding.Binding)
    {
        com.hp.hpl.jena.update.Update r0;
        com.hp.hpl.jena.sparql.engine.binding.Binding r2;
        com.hp.hpl.jena.update.GraphStore r1;

        r0 := @parameter0: com.hp.hpl.jena.update.Update;

        r1 := @parameter1: com.hp.hpl.jena.update.GraphStore;

        r2 := @parameter2: com.hp.hpl.jena.sparql.engine.binding.Binding;

        staticinvoke <com.hp.hpl.jena.update.UpdateAction: void execute$(com.hp.hpl.jena.update.Update,com.hp.hpl.jena.update.GraphStore,com.hp.hpl.jena.sparql.engine.binding.Binding)>(r0, r1, r2);

        return;
    }

    private static void execute$(com.hp.hpl.jena.update.Update, com.hp.hpl.jena.update.GraphStore, com.hp.hpl.jena.sparql.engine.binding.Binding)
    {
        com.hp.hpl.jena.sparql.engine.binding.Binding r3;
        com.hp.hpl.jena.update.GraphStore r2;
        com.hp.hpl.jena.update.Update r1;
        com.hp.hpl.jena.update.UpdateRequest $r0;

        r1 := @parameter0: com.hp.hpl.jena.update.Update;

        r2 := @parameter1: com.hp.hpl.jena.update.GraphStore;

        r3 := @parameter2: com.hp.hpl.jena.sparql.engine.binding.Binding;

        $r0 = new com.hp.hpl.jena.update.UpdateRequest;

        specialinvoke $r0.<com.hp.hpl.jena.update.UpdateRequest: void <init>()>();

        virtualinvoke $r0.<com.hp.hpl.jena.update.UpdateRequest: com.hp.hpl.jena.update.UpdateRequest add(com.hp.hpl.jena.update.Update)>(r1);

        staticinvoke <com.hp.hpl.jena.update.UpdateAction: void execute$(com.hp.hpl.jena.update.UpdateRequest,com.hp.hpl.jena.update.GraphStore,com.hp.hpl.jena.sparql.engine.binding.Binding)>($r0, r2, r3);

        return;
    }

    public static void parseExecute(com.hp.hpl.jena.sparql.modify.UsingList, com.hp.hpl.jena.sparql.core.DatasetGraph, java.lang.String)
    {
        com.hp.hpl.jena.query.Syntax $r3;
        java.lang.String r2;
        com.hp.hpl.jena.sparql.core.DatasetGraph r1;
        com.hp.hpl.jena.sparql.modify.UsingList r0;

        r0 := @parameter0: com.hp.hpl.jena.sparql.modify.UsingList;

        r1 := @parameter1: com.hp.hpl.jena.sparql.core.DatasetGraph;

        r2 := @parameter2: java.lang.String;

        $r3 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax defaultUpdateSyntax>;

        staticinvoke <com.hp.hpl.jena.update.UpdateAction: void parseExecute(com.hp.hpl.jena.sparql.modify.UsingList,com.hp.hpl.jena.sparql.core.DatasetGraph,java.lang.String,java.lang.String,com.hp.hpl.jena.query.Syntax)>(r0, r1, r2, null, $r3);

        return;
    }

    public static void parseExecute(com.hp.hpl.jena.sparql.modify.UsingList, com.hp.hpl.jena.sparql.core.DatasetGraph, java.lang.String, com.hp.hpl.jena.query.Syntax)
    {
        com.hp.hpl.jena.query.Syntax r3;
        java.lang.String r2;
        com.hp.hpl.jena.sparql.core.DatasetGraph r1;
        com.hp.hpl.jena.sparql.modify.UsingList r0;

        r0 := @parameter0: com.hp.hpl.jena.sparql.modify.UsingList;

        r1 := @parameter1: com.hp.hpl.jena.sparql.core.DatasetGraph;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: com.hp.hpl.jena.query.Syntax;

        staticinvoke <com.hp.hpl.jena.update.UpdateAction: void parseExecute(com.hp.hpl.jena.sparql.modify.UsingList,com.hp.hpl.jena.sparql.core.DatasetGraph,java.lang.String,java.lang.String,com.hp.hpl.jena.query.Syntax)>(r0, r1, r2, null, r3);

        return;
    }

    public static void parseExecute(com.hp.hpl.jena.sparql.modify.UsingList, com.hp.hpl.jena.sparql.core.DatasetGraph, java.lang.String, java.lang.String, com.hp.hpl.jena.query.Syntax)
    {
        com.hp.hpl.jena.query.Syntax r4;
        java.lang.String r2, r3;
        com.hp.hpl.jena.sparql.core.DatasetGraph r1;
        com.hp.hpl.jena.sparql.modify.UsingList r0;

        r0 := @parameter0: com.hp.hpl.jena.sparql.modify.UsingList;

        r1 := @parameter1: com.hp.hpl.jena.sparql.core.DatasetGraph;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: com.hp.hpl.jena.query.Syntax;

        staticinvoke <com.hp.hpl.jena.update.UpdateAction: void parseExecute(com.hp.hpl.jena.sparql.modify.UsingList,com.hp.hpl.jena.sparql.core.DatasetGraph,java.lang.String,com.hp.hpl.jena.sparql.engine.binding.Binding,java.lang.String,com.hp.hpl.jena.query.Syntax)>(r0, r1, r2, null, r3, r4);

        return;
    }

    public static void parseExecute(com.hp.hpl.jena.sparql.modify.UsingList, com.hp.hpl.jena.sparql.core.DatasetGraph, java.lang.String, com.hp.hpl.jena.query.QuerySolution, java.lang.String, com.hp.hpl.jena.query.Syntax)
    {
        com.hp.hpl.jena.sparql.engine.binding.Binding $r4;
        com.hp.hpl.jena.query.Syntax r6;
        com.hp.hpl.jena.query.QuerySolution r3;
        java.lang.String r2, r5;
        com.hp.hpl.jena.sparql.core.DatasetGraph r1;
        com.hp.hpl.jena.sparql.modify.UsingList r0;

        r0 := @parameter0: com.hp.hpl.jena.sparql.modify.UsingList;

        r1 := @parameter1: com.hp.hpl.jena.sparql.core.DatasetGraph;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: com.hp.hpl.jena.query.QuerySolution;

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: com.hp.hpl.jena.query.Syntax;

        $r4 = staticinvoke <com.hp.hpl.jena.sparql.engine.binding.BindingUtils: com.hp.hpl.jena.sparql.engine.binding.Binding asBinding(com.hp.hpl.jena.query.QuerySolution)>(r3);

        staticinvoke <com.hp.hpl.jena.update.UpdateAction: void parseExecute(com.hp.hpl.jena.sparql.modify.UsingList,com.hp.hpl.jena.sparql.core.DatasetGraph,java.lang.String,com.hp.hpl.jena.sparql.engine.binding.Binding,java.lang.String,com.hp.hpl.jena.query.Syntax)>(r0, r1, r2, $r4, r5, r6);

        return;
    }

    public static void parseExecute(com.hp.hpl.jena.sparql.modify.UsingList, com.hp.hpl.jena.sparql.core.DatasetGraph, java.lang.String, com.hp.hpl.jena.sparql.engine.binding.Binding, java.lang.String, com.hp.hpl.jena.query.Syntax)
    {
        com.hp.hpl.jena.query.Syntax r6;
        com.hp.hpl.jena.update.UpdateException $r7;
        com.hp.hpl.jena.sparql.core.DatasetGraph r3;
        com.hp.hpl.jena.sparql.modify.UsingList r2;
        com.hp.hpl.jena.sparql.engine.binding.Binding r4;
        java.lang.StringBuilder $r8, $r9, $r10;
        java.lang.String r0, r5, $r11;
        boolean $z0;
        java.io.InputStream $r1, r12;

        r2 := @parameter0: com.hp.hpl.jena.sparql.modify.UsingList;

        r3 := @parameter1: com.hp.hpl.jena.sparql.core.DatasetGraph;

        r0 := @parameter2: java.lang.String;

        r4 := @parameter3: com.hp.hpl.jena.sparql.engine.binding.Binding;

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: com.hp.hpl.jena.query.Syntax;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("-");

        if $z0 == 0 goto label1;

        r12 = <java.lang.System: java.io.InputStream in>;

        goto label2;

     label1:
        $r1 = staticinvoke <org.apache.jena.atlas.io.IO: java.io.InputStream openFile(java.lang.String)>(r0);

        r12 = $r1;

        if $r1 != null goto label2;

        $r7 = new com.hp.hpl.jena.update.UpdateException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File could not be opened: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<com.hp.hpl.jena.update.UpdateException: void <init>(java.lang.String)>($r11);

        throw $r7;

     label2:
        staticinvoke <com.hp.hpl.jena.update.UpdateAction: void parseExecute(com.hp.hpl.jena.sparql.modify.UsingList,com.hp.hpl.jena.sparql.core.DatasetGraph,java.io.InputStream,com.hp.hpl.jena.sparql.engine.binding.Binding,java.lang.String,com.hp.hpl.jena.query.Syntax)>(r2, r3, r12, r4, r5, r6);

        return;
    }

    public static void parseExecute(com.hp.hpl.jena.sparql.modify.UsingList, com.hp.hpl.jena.sparql.core.DatasetGraph, java.io.InputStream)
    {
        com.hp.hpl.jena.query.Syntax $r3;
        com.hp.hpl.jena.sparql.core.DatasetGraph r1;
        com.hp.hpl.jena.sparql.modify.UsingList r0;
        java.io.InputStream r2;

        r0 := @parameter0: com.hp.hpl.jena.sparql.modify.UsingList;

        r1 := @parameter1: com.hp.hpl.jena.sparql.core.DatasetGraph;

        r2 := @parameter2: java.io.InputStream;

        $r3 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax defaultUpdateSyntax>;

        staticinvoke <com.hp.hpl.jena.update.UpdateAction: void parseExecute(com.hp.hpl.jena.sparql.modify.UsingList,com.hp.hpl.jena.sparql.core.DatasetGraph,java.io.InputStream,com.hp.hpl.jena.query.Syntax)>(r0, r1, r2, $r3);

        return;
    }

    public static void parseExecute(com.hp.hpl.jena.sparql.modify.UsingList, com.hp.hpl.jena.sparql.core.DatasetGraph, java.io.InputStream, com.hp.hpl.jena.query.Syntax)
    {
        com.hp.hpl.jena.query.Syntax r3;
        com.hp.hpl.jena.sparql.core.DatasetGraph r1;
        com.hp.hpl.jena.sparql.modify.UsingList r0;
        java.io.InputStream r2;

        r0 := @parameter0: com.hp.hpl.jena.sparql.modify.UsingList;

        r1 := @parameter1: com.hp.hpl.jena.sparql.core.DatasetGraph;

        r2 := @parameter2: java.io.InputStream;

        r3 := @parameter3: com.hp.hpl.jena.query.Syntax;

        staticinvoke <com.hp.hpl.jena.update.UpdateAction: void parseExecute(com.hp.hpl.jena.sparql.modify.UsingList,com.hp.hpl.jena.sparql.core.DatasetGraph,java.io.InputStream,java.lang.String,com.hp.hpl.jena.query.Syntax)>(r0, r1, r2, null, r3);

        return;
    }

    public static void parseExecute(com.hp.hpl.jena.sparql.modify.UsingList, com.hp.hpl.jena.sparql.core.DatasetGraph, java.io.InputStream, java.lang.String)
    {
        com.hp.hpl.jena.query.Syntax $r4;
        java.lang.String r3;
        com.hp.hpl.jena.sparql.core.DatasetGraph r1;
        com.hp.hpl.jena.sparql.modify.UsingList r0;
        java.io.InputStream r2;

        r0 := @parameter0: com.hp.hpl.jena.sparql.modify.UsingList;

        r1 := @parameter1: com.hp.hpl.jena.sparql.core.DatasetGraph;

        r2 := @parameter2: java.io.InputStream;

        r3 := @parameter3: java.lang.String;

        $r4 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax defaultUpdateSyntax>;

        staticinvoke <com.hp.hpl.jena.update.UpdateAction: void parseExecute(com.hp.hpl.jena.sparql.modify.UsingList,com.hp.hpl.jena.sparql.core.DatasetGraph,java.io.InputStream,java.lang.String,com.hp.hpl.jena.query.Syntax)>(r0, r1, r2, r3, $r4);

        return;
    }

    public static void parseExecute(com.hp.hpl.jena.sparql.modify.UsingList, com.hp.hpl.jena.sparql.core.DatasetGraph, java.io.InputStream, java.lang.String, com.hp.hpl.jena.query.Syntax)
    {
        com.hp.hpl.jena.query.Syntax r4;
        java.lang.String r3;
        com.hp.hpl.jena.sparql.core.DatasetGraph r1;
        com.hp.hpl.jena.sparql.modify.UsingList r0;
        java.io.InputStream r2;

        r0 := @parameter0: com.hp.hpl.jena.sparql.modify.UsingList;

        r1 := @parameter1: com.hp.hpl.jena.sparql.core.DatasetGraph;

        r2 := @parameter2: java.io.InputStream;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: com.hp.hpl.jena.query.Syntax;

        staticinvoke <com.hp.hpl.jena.update.UpdateAction: void parseExecute(com.hp.hpl.jena.sparql.modify.UsingList,com.hp.hpl.jena.sparql.core.DatasetGraph,java.io.InputStream,com.hp.hpl.jena.sparql.engine.binding.Binding,java.lang.String,com.hp.hpl.jena.query.Syntax)>(r0, r1, r2, null, r3, r4);

        return;
    }

    public static void parseExecute(com.hp.hpl.jena.sparql.modify.UsingList, com.hp.hpl.jena.sparql.core.DatasetGraph, java.io.InputStream, com.hp.hpl.jena.query.QuerySolution, java.lang.String, com.hp.hpl.jena.query.Syntax)
    {
        com.hp.hpl.jena.sparql.engine.binding.Binding $r4;
        com.hp.hpl.jena.query.Syntax r6;
        com.hp.hpl.jena.query.QuerySolution r3;
        java.lang.String r5;
        com.hp.hpl.jena.sparql.core.DatasetGraph r1;
        com.hp.hpl.jena.sparql.modify.UsingList r0;
        java.io.InputStream r2;

        r0 := @parameter0: com.hp.hpl.jena.sparql.modify.UsingList;

        r1 := @parameter1: com.hp.hpl.jena.sparql.core.DatasetGraph;

        r2 := @parameter2: java.io.InputStream;

        r3 := @parameter3: com.hp.hpl.jena.query.QuerySolution;

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: com.hp.hpl.jena.query.Syntax;

        $r4 = staticinvoke <com.hp.hpl.jena.sparql.engine.binding.BindingUtils: com.hp.hpl.jena.sparql.engine.binding.Binding asBinding(com.hp.hpl.jena.query.QuerySolution)>(r3);

        staticinvoke <com.hp.hpl.jena.update.UpdateAction: void parseExecute(com.hp.hpl.jena.sparql.modify.UsingList,com.hp.hpl.jena.sparql.core.DatasetGraph,java.io.InputStream,com.hp.hpl.jena.sparql.engine.binding.Binding,java.lang.String,com.hp.hpl.jena.query.Syntax)>(r0, r1, r2, $r4, r5, r6);

        return;
    }

    public static void parseExecute(com.hp.hpl.jena.sparql.modify.UsingList, com.hp.hpl.jena.sparql.core.DatasetGraph, java.io.InputStream, com.hp.hpl.jena.sparql.engine.binding.Binding, java.lang.String, com.hp.hpl.jena.query.Syntax)
    {
        java.lang.Throwable $r13, $r14;
        com.hp.hpl.jena.query.Syntax r9;
        com.hp.hpl.jena.update.GraphStore $r1;
        com.hp.hpl.jena.sparql.core.Prologue $r7;
        com.hp.hpl.jena.sparql.core.DatasetGraph r0;
        com.hp.hpl.jena.sparql.modify.UsingUpdateSink $r4;
        com.hp.hpl.jena.sparql.modify.UsingList r6;
        com.hp.hpl.jena.sparql.modify.UpdateSink $r5;
        com.hp.hpl.jena.sparql.engine.binding.Binding r2;
        com.hp.hpl.jena.update.UpdateProcessorStreaming $r3;
        com.hp.hpl.jena.sparql.lang.UpdateParser $r10;
        java.lang.String r8;
        com.hp.hpl.jena.sparql.ARQException $r12;
        java.io.InputStream r11;

        r6 := @parameter0: com.hp.hpl.jena.sparql.modify.UsingList;

        r0 := @parameter1: com.hp.hpl.jena.sparql.core.DatasetGraph;

        r11 := @parameter2: java.io.InputStream;

        r2 := @parameter3: com.hp.hpl.jena.sparql.engine.binding.Binding;

        r8 := @parameter4: java.lang.String;

        r9 := @parameter5: com.hp.hpl.jena.query.Syntax;

        $r1 = staticinvoke <com.hp.hpl.jena.update.GraphStoreFactory: com.hp.hpl.jena.update.GraphStore create(com.hp.hpl.jena.sparql.core.DatasetGraph)>(r0);

        $r3 = staticinvoke <com.hp.hpl.jena.update.UpdateExecutionFactory: com.hp.hpl.jena.update.UpdateProcessorStreaming createStreaming(com.hp.hpl.jena.update.GraphStore,com.hp.hpl.jena.sparql.engine.binding.Binding)>($r1, r2);

        if $r3 != null goto label01;

        $r12 = new com.hp.hpl.jena.sparql.ARQException;

        specialinvoke $r12.<com.hp.hpl.jena.sparql.ARQException: void <init>(java.lang.String)>("No suitable update procesors are registered/able to execute your updates");

        throw $r12;

     label01:
        interfaceinvoke $r3.<com.hp.hpl.jena.update.UpdateProcessorStreaming: void startRequest()>();

     label02:
        $r4 = new com.hp.hpl.jena.sparql.modify.UsingUpdateSink;

        $r5 = interfaceinvoke $r3.<com.hp.hpl.jena.update.UpdateProcessorStreaming: com.hp.hpl.jena.sparql.modify.UpdateSink getUpdateSink()>();

        specialinvoke $r4.<com.hp.hpl.jena.sparql.modify.UsingUpdateSink: void <init>(com.hp.hpl.jena.sparql.modify.UpdateSink,com.hp.hpl.jena.sparql.modify.UsingList)>($r5, r6);

     label03:
        $r7 = interfaceinvoke $r4.<com.hp.hpl.jena.sparql.modify.UpdateSink: com.hp.hpl.jena.sparql.core.Prologue getPrologue()>();

        $r10 = staticinvoke <com.hp.hpl.jena.update.UpdateFactory: com.hp.hpl.jena.sparql.lang.UpdateParser setupParser(com.hp.hpl.jena.sparql.core.Prologue,java.lang.String,com.hp.hpl.jena.query.Syntax)>($r7, r8, r9);

        virtualinvoke $r10.<com.hp.hpl.jena.sparql.lang.UpdateParser: void parse(com.hp.hpl.jena.sparql.modify.UpdateSink,java.io.InputStream)>($r4, r11);

     label04:
        interfaceinvoke $r4.<com.hp.hpl.jena.sparql.modify.UpdateSink: void close()>();

        goto label07;

     label05:
        $r14 := @caughtexception;

     label06:
        interfaceinvoke $r4.<com.hp.hpl.jena.sparql.modify.UpdateSink: void close()>();

        throw $r14;

     label07:
        interfaceinvoke $r3.<com.hp.hpl.jena.update.UpdateProcessorStreaming: void finishRequest()>();

        goto label10;

     label08:
        $r13 := @caughtexception;

     label09:
        interfaceinvoke $r3.<com.hp.hpl.jena.update.UpdateProcessorStreaming: void finishRequest()>();

        throw $r13;

     label10:
        return;

        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.lang.Throwable from label02 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }
}
