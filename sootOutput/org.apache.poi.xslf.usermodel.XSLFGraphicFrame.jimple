public class org.apache.poi.xslf.usermodel.XSLFGraphicFrame extends org.apache.poi.xslf.usermodel.XSLFShape
{
    private final org.openxmlformats.schemas.presentationml.x2006.main.CTGraphicalObjectFrame _shape;
    private final org.apache.poi.xslf.usermodel.XSLFSheet _sheet;

    void <init>(org.openxmlformats.schemas.presentationml.x2006.main.CTGraphicalObjectFrame, org.apache.poi.xslf.usermodel.XSLFSheet)
    {
        org.apache.poi.xslf.usermodel.XSLFSheet r2;
        org.apache.poi.xslf.usermodel.XSLFGraphicFrame r0;
        org.openxmlformats.schemas.presentationml.x2006.main.CTGraphicalObjectFrame r1;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFGraphicFrame;

        r1 := @parameter0: org.openxmlformats.schemas.presentationml.x2006.main.CTGraphicalObjectFrame;

        r2 := @parameter1: org.apache.poi.xslf.usermodel.XSLFSheet;

        specialinvoke r0.<org.apache.poi.xslf.usermodel.XSLFShape: void <init>()>();

        r0.<org.apache.poi.xslf.usermodel.XSLFGraphicFrame: org.openxmlformats.schemas.presentationml.x2006.main.CTGraphicalObjectFrame _shape> = r1;

        r0.<org.apache.poi.xslf.usermodel.XSLFGraphicFrame: org.apache.poi.xslf.usermodel.XSLFSheet _sheet> = r2;

        return;
    }

    public org.openxmlformats.schemas.presentationml.x2006.main.CTGraphicalObjectFrame getXmlObject()
    {
        org.apache.poi.xslf.usermodel.XSLFGraphicFrame r0;
        org.openxmlformats.schemas.presentationml.x2006.main.CTGraphicalObjectFrame $r1;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFGraphicFrame;

        $r1 = r0.<org.apache.poi.xslf.usermodel.XSLFGraphicFrame: org.openxmlformats.schemas.presentationml.x2006.main.CTGraphicalObjectFrame _shape>;

        return $r1;
    }

    public org.apache.poi.xslf.usermodel.XSLFSheet getSheet()
    {
        org.apache.poi.xslf.usermodel.XSLFSheet $r1;
        org.apache.poi.xslf.usermodel.XSLFGraphicFrame r0;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFGraphicFrame;

        $r1 = r0.<org.apache.poi.xslf.usermodel.XSLFGraphicFrame: org.apache.poi.xslf.usermodel.XSLFSheet _sheet>;

        return $r1;
    }

    public int getShapeType()
    {
        java.lang.RuntimeException $r0;
        org.apache.poi.xslf.usermodel.XSLFGraphicFrame r1;

        r1 := @this: org.apache.poi.xslf.usermodel.XSLFGraphicFrame;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("NotImplemented");

        throw $r0;
    }

    public int getShapeId()
    {
        org.openxmlformats.schemas.presentationml.x2006.main.CTGraphicalObjectFrameNonVisual $r2;
        org.apache.poi.xslf.usermodel.XSLFGraphicFrame r0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualDrawingProps $r3;
        int $i1;
        long $l0;
        org.openxmlformats.schemas.presentationml.x2006.main.CTGraphicalObjectFrame $r1;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFGraphicFrame;

        $r1 = r0.<org.apache.poi.xslf.usermodel.XSLFGraphicFrame: org.openxmlformats.schemas.presentationml.x2006.main.CTGraphicalObjectFrame _shape>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.presentationml.x2006.main.CTGraphicalObjectFrame: org.openxmlformats.schemas.presentationml.x2006.main.CTGraphicalObjectFrameNonVisual getNvGraphicFramePr()>();

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.presentationml.x2006.main.CTGraphicalObjectFrameNonVisual: org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualDrawingProps getCNvPr()>();

        $l0 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualDrawingProps: long getId()>();

        $i1 = (int) $l0;

        return $i1;
    }

    public java.lang.String getShapeName()
    {
        org.openxmlformats.schemas.presentationml.x2006.main.CTGraphicalObjectFrameNonVisual $r2;
        org.apache.poi.xslf.usermodel.XSLFGraphicFrame r0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualDrawingProps $r3;
        java.lang.String $r4;
        org.openxmlformats.schemas.presentationml.x2006.main.CTGraphicalObjectFrame $r1;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFGraphicFrame;

        $r1 = r0.<org.apache.poi.xslf.usermodel.XSLFGraphicFrame: org.openxmlformats.schemas.presentationml.x2006.main.CTGraphicalObjectFrame _shape>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.presentationml.x2006.main.CTGraphicalObjectFrame: org.openxmlformats.schemas.presentationml.x2006.main.CTGraphicalObjectFrameNonVisual getNvGraphicFramePr()>();

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.presentationml.x2006.main.CTGraphicalObjectFrameNonVisual: org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualDrawingProps getCNvPr()>();

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualDrawingProps: java.lang.String getName()>();

        return $r4;
    }

    public java.awt.geom.Rectangle2D getAnchor()
    {
        org.apache.poi.xslf.usermodel.XSLFGraphicFrame r0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPoint2D $r3;
        long $l0, $l1, $l2, $l3;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D $r2;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPositiveSize2D $r4;
        java.awt.geom.Rectangle2D$Double $r5;
        org.openxmlformats.schemas.presentationml.x2006.main.CTGraphicalObjectFrame $r1;
        double $d0, $d1, $d2, $d3;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFGraphicFrame;

        $r1 = r0.<org.apache.poi.xslf.usermodel.XSLFGraphicFrame: org.openxmlformats.schemas.presentationml.x2006.main.CTGraphicalObjectFrame _shape>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.presentationml.x2006.main.CTGraphicalObjectFrame: org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D getXfrm()>();

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D: org.openxmlformats.schemas.drawingml.x2006.main.CTPoint2D getOff()>();

        $l0 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTPoint2D: long getX()>();

        $l1 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTPoint2D: long getY()>();

        $r4 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D: org.openxmlformats.schemas.drawingml.x2006.main.CTPositiveSize2D getExt()>();

        $l2 = interfaceinvoke $r4.<org.openxmlformats.schemas.drawingml.x2006.main.CTPositiveSize2D: long getCx()>();

        $l3 = interfaceinvoke $r4.<org.openxmlformats.schemas.drawingml.x2006.main.CTPositiveSize2D: long getCy()>();

        $r5 = new java.awt.geom.Rectangle2D$Double;

        $d0 = staticinvoke <org.apache.poi.util.Units: double toPoints(long)>($l0);

        $d1 = staticinvoke <org.apache.poi.util.Units: double toPoints(long)>($l1);

        $d2 = staticinvoke <org.apache.poi.util.Units: double toPoints(long)>($l2);

        $d3 = staticinvoke <org.apache.poi.util.Units: double toPoints(long)>($l3);

        specialinvoke $r5.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>($d0, $d1, $d2, $d3);

        return $r5;
    }

    public void setAnchor(java.awt.geom.Rectangle2D)
    {
        org.apache.poi.xslf.usermodel.XSLFGraphicFrame r0;
        java.awt.geom.Rectangle2D r3;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPoint2D $r4;
        long $l4, $l5, $l6, $l7;
        int $i0, $i1, $i2, $i3;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPositiveSize2D $r5;
        boolean $z0, $z1;
        double $d0, $d1, $d2, $d3;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D $r2;
        org.openxmlformats.schemas.presentationml.x2006.main.CTGraphicalObjectFrame $r1;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFGraphicFrame;

        r3 := @parameter0: java.awt.geom.Rectangle2D;

        $r1 = r0.<org.apache.poi.xslf.usermodel.XSLFGraphicFrame: org.openxmlformats.schemas.presentationml.x2006.main.CTGraphicalObjectFrame _shape>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.presentationml.x2006.main.CTGraphicalObjectFrame: org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D getXfrm()>();

        $z0 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D: boolean isSetOff()>();

        if $z0 == 0 goto label1;

        $r4 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D: org.openxmlformats.schemas.drawingml.x2006.main.CTPoint2D getOff()>();

        goto label2;

     label1:
        $r4 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D: org.openxmlformats.schemas.drawingml.x2006.main.CTPoint2D addNewOff()>();

     label2:
        $d0 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getX()>();

        $i0 = staticinvoke <org.apache.poi.util.Units: int toEMU(double)>($d0);

        $l6 = (long) $i0;

        $d1 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getY()>();

        $i1 = staticinvoke <org.apache.poi.util.Units: int toEMU(double)>($d1);

        $l7 = (long) $i1;

        interfaceinvoke $r4.<org.openxmlformats.schemas.drawingml.x2006.main.CTPoint2D: void setX(long)>($l6);

        interfaceinvoke $r4.<org.openxmlformats.schemas.drawingml.x2006.main.CTPoint2D: void setY(long)>($l7);

        $z1 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D: boolean isSetExt()>();

        if $z1 == 0 goto label3;

        $r5 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D: org.openxmlformats.schemas.drawingml.x2006.main.CTPositiveSize2D getExt()>();

        goto label4;

     label3:
        $r5 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D: org.openxmlformats.schemas.drawingml.x2006.main.CTPositiveSize2D addNewExt()>();

     label4:
        $d2 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getWidth()>();

        $i2 = staticinvoke <org.apache.poi.util.Units: int toEMU(double)>($d2);

        $l4 = (long) $i2;

        $d3 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getHeight()>();

        $i3 = staticinvoke <org.apache.poi.util.Units: int toEMU(double)>($d3);

        $l5 = (long) $i3;

        interfaceinvoke $r5.<org.openxmlformats.schemas.drawingml.x2006.main.CTPositiveSize2D: void setCx(long)>($l4);

        interfaceinvoke $r5.<org.openxmlformats.schemas.drawingml.x2006.main.CTPositiveSize2D: void setCy(long)>($l5);

        return;
    }

    static org.apache.poi.xslf.usermodel.XSLFGraphicFrame create(org.openxmlformats.schemas.presentationml.x2006.main.CTGraphicalObjectFrame, org.apache.poi.xslf.usermodel.XSLFSheet)
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTGraphicalObject $r1;
        org.apache.poi.xslf.usermodel.XSLFGraphicFrame $r5;
        org.openxmlformats.schemas.drawingml.x2006.main.CTGraphicalObjectData $r2;
        org.apache.poi.xslf.usermodel.XSLFTable $r7;
        org.apache.poi.xslf.usermodel.XSLFSheet r6;
        java.lang.String $r3, $r4;
        org.openxmlformats.schemas.presentationml.x2006.main.CTGraphicalObjectFrame r0;
        boolean $z0;

        r0 := @parameter0: org.openxmlformats.schemas.presentationml.x2006.main.CTGraphicalObjectFrame;

        r6 := @parameter1: org.apache.poi.xslf.usermodel.XSLFSheet;

        $r1 = interfaceinvoke r0.<org.openxmlformats.schemas.presentationml.x2006.main.CTGraphicalObjectFrame: org.openxmlformats.schemas.drawingml.x2006.main.CTGraphicalObject getGraphic()>();

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTGraphicalObject: org.openxmlformats.schemas.drawingml.x2006.main.CTGraphicalObjectData getGraphicData()>();

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTGraphicalObjectData: java.lang.String getUri()>();

        $r4 = <org.apache.poi.xslf.usermodel.XSLFTable: java.lang.String TABLE_URI>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $r7 = new org.apache.poi.xslf.usermodel.XSLFTable;

        specialinvoke $r7.<org.apache.poi.xslf.usermodel.XSLFTable: void <init>(org.openxmlformats.schemas.presentationml.x2006.main.CTGraphicalObjectFrame,org.apache.poi.xslf.usermodel.XSLFSheet)>(r0, r6);

        return $r7;

     label1:
        $r5 = new org.apache.poi.xslf.usermodel.XSLFGraphicFrame;

        specialinvoke $r5.<org.apache.poi.xslf.usermodel.XSLFGraphicFrame: void <init>(org.openxmlformats.schemas.presentationml.x2006.main.CTGraphicalObjectFrame,org.apache.poi.xslf.usermodel.XSLFSheet)>(r0, r6);

        return $r5;
    }

    public void setRotation(double)
    {
        java.lang.IllegalArgumentException $r0;
        org.apache.poi.xslf.usermodel.XSLFGraphicFrame r1;
        double d0;

        r1 := @this: org.apache.poi.xslf.usermodel.XSLFGraphicFrame;

        d0 := @parameter0: double;

        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Operation not supported");

        throw $r0;
    }

    public double getRotation()
    {
        org.apache.poi.xslf.usermodel.XSLFGraphicFrame r0;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFGraphicFrame;

        return 0.0;
    }

    public void setFlipHorizontal(boolean)
    {
        java.lang.IllegalArgumentException $r0;
        org.apache.poi.xslf.usermodel.XSLFGraphicFrame r1;
        boolean z0;

        r1 := @this: org.apache.poi.xslf.usermodel.XSLFGraphicFrame;

        z0 := @parameter0: boolean;

        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Operation not supported");

        throw $r0;
    }

    public void setFlipVertical(boolean)
    {
        java.lang.IllegalArgumentException $r0;
        org.apache.poi.xslf.usermodel.XSLFGraphicFrame r1;
        boolean z0;

        r1 := @this: org.apache.poi.xslf.usermodel.XSLFGraphicFrame;

        z0 := @parameter0: boolean;

        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Operation not supported");

        throw $r0;
    }

    public boolean getFlipHorizontal()
    {
        org.apache.poi.xslf.usermodel.XSLFGraphicFrame r0;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFGraphicFrame;

        return 0;
    }

    public boolean getFlipVertical()
    {
        org.apache.poi.xslf.usermodel.XSLFGraphicFrame r0;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFGraphicFrame;

        return 0;
    }

    public void draw(java.awt.Graphics2D)
    {
        org.apache.poi.xslf.usermodel.XSLFGraphicFrame r0;
        java.awt.Graphics2D r1;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFGraphicFrame;

        r1 := @parameter0: java.awt.Graphics2D;

        return;
    }

    void copy(org.apache.poi.xslf.usermodel.XSLFShape)
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTGraphicalObject $r3;
        org.apache.poi.xslf.usermodel.XSLFGraphicFrame r0, $r6;
        org.openxmlformats.schemas.drawingml.x2006.main.CTGraphicalObjectData $r4;
        org.apache.poi.xslf.usermodel.XSLFShape r1;
        java.lang.String $r5;
        org.openxmlformats.schemas.presentationml.x2006.main.CTGraphicalObjectFrame $r2;
        boolean $z0;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFGraphicFrame;

        r1 := @parameter0: org.apache.poi.xslf.usermodel.XSLFShape;

        specialinvoke r0.<org.apache.poi.xslf.usermodel.XSLFShape: void copy(org.apache.poi.xslf.usermodel.XSLFShape)>(r1);

        $r2 = r0.<org.apache.poi.xslf.usermodel.XSLFGraphicFrame: org.openxmlformats.schemas.presentationml.x2006.main.CTGraphicalObjectFrame _shape>;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.presentationml.x2006.main.CTGraphicalObjectFrame: org.openxmlformats.schemas.drawingml.x2006.main.CTGraphicalObject getGraphic()>();

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTGraphicalObject: org.openxmlformats.schemas.drawingml.x2006.main.CTGraphicalObjectData getGraphicData()>();

        $r5 = interfaceinvoke $r4.<org.openxmlformats.schemas.drawingml.x2006.main.CTGraphicalObjectData: java.lang.String getUri()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("http://schemas.openxmlformats.org/drawingml/2006/diagram");

        if $z0 == 0 goto label1;

        $r6 = (org.apache.poi.xslf.usermodel.XSLFGraphicFrame) r1;

        specialinvoke r0.<org.apache.poi.xslf.usermodel.XSLFGraphicFrame: void copyDiagram(org.openxmlformats.schemas.drawingml.x2006.main.CTGraphicalObjectData,org.apache.poi.xslf.usermodel.XSLFGraphicFrame)>($r4, $r6);

     label1:
        return;
    }

    private void copyDiagram(org.openxmlformats.schemas.drawingml.x2006.main.CTGraphicalObjectData, org.apache.poi.xslf.usermodel.XSLFGraphicFrame)
    {
        org.apache.poi.xslf.usermodel.XSLFGraphicFrame r4, r12;
        org.apache.poi.xslf.usermodel.XSLFSheet $r5, $r13, $r20, $r27, $r34;
        org.apache.poi.openxml4j.opc.PackagePart $r8, $r10, $r11, $r16, $r18, $r19, $r23, $r25, $r26, $r30, $r32, $r33;
        org.apache.poi.openxml4j.exceptions.InvalidFormatException $r35;
        org.openxmlformats.schemas.drawingml.x2006.main.CTGraphicalObjectData r0;
        org.apache.xmlbeans.XmlObject[] $r1;
        javax.xml.namespace.QName $r6, $r14, $r21, $r28;
        org.apache.xmlbeans.XmlCursor $r3;
        org.apache.poi.openxml4j.opc.PackageRelationship $r9, $r17, $r24, $r31;
        int $i0;
        org.apache.xmlbeans.XmlObject $r2;
        java.lang.String $r7, $r15, $r22, $r29;
        org.apache.poi.POIXMLException $r36;

        r12 := @this: org.apache.poi.xslf.usermodel.XSLFGraphicFrame;

        r0 := @parameter0: org.openxmlformats.schemas.drawingml.x2006.main.CTGraphicalObjectData;

        r4 := @parameter1: org.apache.poi.xslf.usermodel.XSLFGraphicFrame;

        $r1 = interfaceinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.CTGraphicalObjectData: org.apache.xmlbeans.XmlObject[] selectPath(java.lang.String)>("declare namespace dgm=\'http://schemas.openxmlformats.org/drawingml/2006/diagram\' $this//dgm:relIds");

        if $r1 == null goto label5;

        $i0 = lengthof $r1;

        if $i0 != 1 goto label5;

        $r2 = $r1[0];

        $r3 = interfaceinvoke $r2.<org.apache.xmlbeans.XmlObject: org.apache.xmlbeans.XmlCursor newCursor()>();

        $r5 = virtualinvoke r4.<org.apache.poi.xslf.usermodel.XSLFGraphicFrame: org.apache.poi.xslf.usermodel.XSLFSheet getSheet()>();

     label1:
        $r6 = new javax.xml.namespace.QName;

        specialinvoke $r6.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("http://schemas.openxmlformats.org/officeDocument/2006/relationships", "dm");

        $r7 = interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: java.lang.String getAttributeText(javax.xml.namespace.QName)>($r6);

        $r8 = virtualinvoke $r5.<org.apache.poi.xslf.usermodel.XSLFSheet: org.apache.poi.openxml4j.opc.PackagePart getPackagePart()>();

        $r9 = virtualinvoke $r8.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackageRelationship getRelationship(java.lang.String)>($r7);

        $r10 = virtualinvoke $r5.<org.apache.poi.xslf.usermodel.XSLFSheet: org.apache.poi.openxml4j.opc.PackagePart getPackagePart()>();

        $r11 = virtualinvoke $r10.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackagePart getRelatedPart(org.apache.poi.openxml4j.opc.PackageRelationship)>($r9);

        $r13 = r12.<org.apache.poi.xslf.usermodel.XSLFGraphicFrame: org.apache.poi.xslf.usermodel.XSLFSheet _sheet>;

        virtualinvoke $r13.<org.apache.poi.xslf.usermodel.XSLFSheet: org.apache.poi.openxml4j.opc.PackagePart importPart(org.apache.poi.openxml4j.opc.PackageRelationship,org.apache.poi.openxml4j.opc.PackagePart)>($r9, $r11);

        $r14 = new javax.xml.namespace.QName;

        specialinvoke $r14.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("http://schemas.openxmlformats.org/officeDocument/2006/relationships", "lo");

        $r15 = interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: java.lang.String getAttributeText(javax.xml.namespace.QName)>($r14);

        $r16 = virtualinvoke $r5.<org.apache.poi.xslf.usermodel.XSLFSheet: org.apache.poi.openxml4j.opc.PackagePart getPackagePart()>();

        $r17 = virtualinvoke $r16.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackageRelationship getRelationship(java.lang.String)>($r15);

        $r18 = virtualinvoke $r5.<org.apache.poi.xslf.usermodel.XSLFSheet: org.apache.poi.openxml4j.opc.PackagePart getPackagePart()>();

        $r19 = virtualinvoke $r18.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackagePart getRelatedPart(org.apache.poi.openxml4j.opc.PackageRelationship)>($r17);

        $r20 = r12.<org.apache.poi.xslf.usermodel.XSLFGraphicFrame: org.apache.poi.xslf.usermodel.XSLFSheet _sheet>;

        virtualinvoke $r20.<org.apache.poi.xslf.usermodel.XSLFSheet: org.apache.poi.openxml4j.opc.PackagePart importPart(org.apache.poi.openxml4j.opc.PackageRelationship,org.apache.poi.openxml4j.opc.PackagePart)>($r17, $r19);

        $r21 = new javax.xml.namespace.QName;

        specialinvoke $r21.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("http://schemas.openxmlformats.org/officeDocument/2006/relationships", "qs");

        $r22 = interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: java.lang.String getAttributeText(javax.xml.namespace.QName)>($r21);

        $r23 = virtualinvoke $r5.<org.apache.poi.xslf.usermodel.XSLFSheet: org.apache.poi.openxml4j.opc.PackagePart getPackagePart()>();

        $r24 = virtualinvoke $r23.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackageRelationship getRelationship(java.lang.String)>($r22);

        $r25 = virtualinvoke $r5.<org.apache.poi.xslf.usermodel.XSLFSheet: org.apache.poi.openxml4j.opc.PackagePart getPackagePart()>();

        $r26 = virtualinvoke $r25.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackagePart getRelatedPart(org.apache.poi.openxml4j.opc.PackageRelationship)>($r24);

        $r27 = r12.<org.apache.poi.xslf.usermodel.XSLFGraphicFrame: org.apache.poi.xslf.usermodel.XSLFSheet _sheet>;

        virtualinvoke $r27.<org.apache.poi.xslf.usermodel.XSLFSheet: org.apache.poi.openxml4j.opc.PackagePart importPart(org.apache.poi.openxml4j.opc.PackageRelationship,org.apache.poi.openxml4j.opc.PackagePart)>($r24, $r26);

        $r28 = new javax.xml.namespace.QName;

        specialinvoke $r28.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("http://schemas.openxmlformats.org/officeDocument/2006/relationships", "cs");

        $r29 = interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: java.lang.String getAttributeText(javax.xml.namespace.QName)>($r28);

        $r30 = virtualinvoke $r5.<org.apache.poi.xslf.usermodel.XSLFSheet: org.apache.poi.openxml4j.opc.PackagePart getPackagePart()>();

        $r31 = virtualinvoke $r30.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackageRelationship getRelationship(java.lang.String)>($r29);

        $r32 = virtualinvoke $r5.<org.apache.poi.xslf.usermodel.XSLFSheet: org.apache.poi.openxml4j.opc.PackagePart getPackagePart()>();

        $r33 = virtualinvoke $r32.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackagePart getRelatedPart(org.apache.poi.openxml4j.opc.PackageRelationship)>($r31);

        $r34 = r12.<org.apache.poi.xslf.usermodel.XSLFGraphicFrame: org.apache.poi.xslf.usermodel.XSLFSheet _sheet>;

        virtualinvoke $r34.<org.apache.poi.xslf.usermodel.XSLFSheet: org.apache.poi.openxml4j.opc.PackagePart importPart(org.apache.poi.openxml4j.opc.PackageRelationship,org.apache.poi.openxml4j.opc.PackagePart)>($r31, $r33);

     label2:
        goto label4;

     label3:
        $r35 := @caughtexception;

        $r36 = new org.apache.poi.POIXMLException;

        specialinvoke $r36.<org.apache.poi.POIXMLException: void <init>(java.lang.Throwable)>($r35);

        throw $r36;

     label4:
        interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: void dispose()>();

     label5:
        return;

        catch org.apache.poi.openxml4j.exceptions.InvalidFormatException from label1 to label2 with label3;
    }

    public volatile org.apache.xmlbeans.XmlObject getXmlObject()
    {
        org.apache.poi.xslf.usermodel.XSLFGraphicFrame r0;
        org.openxmlformats.schemas.presentationml.x2006.main.CTGraphicalObjectFrame $r1;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFGraphicFrame;

        $r1 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFGraphicFrame: org.openxmlformats.schemas.presentationml.x2006.main.CTGraphicalObjectFrame getXmlObject()>();

        return $r1;
    }
}
