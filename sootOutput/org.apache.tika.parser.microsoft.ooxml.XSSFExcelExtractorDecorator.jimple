public class org.apache.tika.parser.microsoft.ooxml.XSSFExcelExtractorDecorator extends org.apache.tika.parser.microsoft.ooxml.AbstractOOXMLExtractor
{
    private final org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor extractor;
    private final org.apache.poi.ss.usermodel.DataFormatter formatter;
    private final java.util.List sheetParts;
    private org.apache.tika.metadata.Metadata metadata;
    private static org.apache.poi.xssf.usermodel.helpers.HeaderFooterHelper hfHelper;

    public void <init>(org.apache.tika.parser.ParseContext, org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor, java.util.Locale)
    {
        org.apache.tika.parser.microsoft.ooxml.XSSFExcelExtractorDecorator r0;
        java.util.Locale r4;
        org.apache.tika.parser.ParseContext r1;
        org.apache.poi.ss.usermodel.DataFormatter $r5, $r6;
        org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor r2;
        java.util.ArrayList $r3;

        r0 := @this: org.apache.tika.parser.microsoft.ooxml.XSSFExcelExtractorDecorator;

        r1 := @parameter0: org.apache.tika.parser.ParseContext;

        r2 := @parameter1: org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor;

        r4 := @parameter2: java.util.Locale;

        specialinvoke r0.<org.apache.tika.parser.microsoft.ooxml.AbstractOOXMLExtractor: void <init>(org.apache.tika.parser.ParseContext,org.apache.poi.POIXMLTextExtractor)>(r1, r2);

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.tika.parser.microsoft.ooxml.XSSFExcelExtractorDecorator: java.util.List sheetParts> = $r3;

        r0.<org.apache.tika.parser.microsoft.ooxml.XSSFExcelExtractorDecorator: org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor extractor> = r2;

        virtualinvoke r2.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor: void setFormulasNotResults(boolean)>(0);

        virtualinvoke r2.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor: void setLocale(java.util.Locale)>(r4);

        if r4 != null goto label1;

        $r6 = new org.apache.poi.ss.usermodel.DataFormatter;

        specialinvoke $r6.<org.apache.poi.ss.usermodel.DataFormatter: void <init>()>();

        r0.<org.apache.tika.parser.microsoft.ooxml.XSSFExcelExtractorDecorator: org.apache.poi.ss.usermodel.DataFormatter formatter> = $r6;

        goto label2;

     label1:
        $r5 = new org.apache.poi.ss.usermodel.DataFormatter;

        specialinvoke $r5.<org.apache.poi.ss.usermodel.DataFormatter: void <init>(java.util.Locale)>(r4);

        r0.<org.apache.tika.parser.microsoft.ooxml.XSSFExcelExtractorDecorator: org.apache.poi.ss.usermodel.DataFormatter formatter> = $r5;

     label2:
        return;
    }

    public void getXHTML(org.xml.sax.ContentHandler, org.apache.tika.metadata.Metadata, org.apache.tika.parser.ParseContext) throws org.xml.sax.SAXException, org.apache.xmlbeans.XmlException, java.io.IOException, org.apache.tika.exception.TikaException
    {
        org.apache.tika.parser.microsoft.ooxml.XSSFExcelExtractorDecorator r0;
        org.apache.tika.metadata.Metadata r1;
        org.apache.tika.parser.ParseContext r3;
        org.xml.sax.ContentHandler r2;

        r0 := @this: org.apache.tika.parser.microsoft.ooxml.XSSFExcelExtractorDecorator;

        r2 := @parameter0: org.xml.sax.ContentHandler;

        r1 := @parameter1: org.apache.tika.metadata.Metadata;

        r3 := @parameter2: org.apache.tika.parser.ParseContext;

        r0.<org.apache.tika.parser.microsoft.ooxml.XSSFExcelExtractorDecorator: org.apache.tika.metadata.Metadata metadata> = r1;

        virtualinvoke r1.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("protected", "false");

        specialinvoke r0.<org.apache.tika.parser.microsoft.ooxml.AbstractOOXMLExtractor: void getXHTML(org.xml.sax.ContentHandler,org.apache.tika.metadata.Metadata,org.apache.tika.parser.ParseContext)>(r2, r1, r3);

        return;
    }

    protected void buildXHTML(org.apache.tika.sax.XHTMLContentHandler) throws org.xml.sax.SAXException, org.apache.xmlbeans.XmlException, java.io.IOException
    {
        org.apache.poi.xssf.model.StylesTable $r4;
        org.apache.tika.parser.microsoft.ooxml.XSSFExcelExtractorDecorator r0;
        org.apache.poi.xssf.eventusermodel.ReadOnlySharedStringsTable $r7;
        org.apache.poi.openxml4j.opc.PackagePart $r10;
        java.lang.String $r14, r26, r27;
        org.apache.poi.xssf.eventusermodel.XSSFReader $r3;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r5, $r16, $r18;
        org.apache.poi.xssf.model.CommentsTable $r13;
        org.apache.poi.openxml4j.exceptions.InvalidFormatException $r24;
        org.apache.tika.sax.XHTMLContentHandler r12;
        org.apache.poi.openxml4j.exceptions.OpenXML4JException $r22;
        org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor $r1;
        java.util.List $r9, $r15, $r17, $r19;
        org.apache.xmlbeans.XmlException $r23, $r25;
        org.apache.tika.parser.microsoft.ooxml.XSSFExcelExtractorDecorator$SheetTextAsHTML $r11;
        org.apache.poi.openxml4j.opc.OPCPackage $r2;
        java.lang.Object $r20, $r21;
        org.apache.poi.xssf.eventusermodel.XSSFReader$SheetIterator r6;
        java.io.InputStream $r8;

        r0 := @this: org.apache.tika.parser.microsoft.ooxml.XSSFExcelExtractorDecorator;

        r12 := @parameter0: org.apache.tika.sax.XHTMLContentHandler;

        $r1 = r0.<org.apache.tika.parser.microsoft.ooxml.XSSFExcelExtractorDecorator: org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor extractor>;

        $r2 = virtualinvoke $r1.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor: org.apache.poi.openxml4j.opc.OPCPackage getPackage()>();

     label01:
        $r3 = new org.apache.poi.xssf.eventusermodel.XSSFReader;

        specialinvoke $r3.<org.apache.poi.xssf.eventusermodel.XSSFReader: void <init>(org.apache.poi.openxml4j.opc.OPCPackage)>($r2);

        $r4 = virtualinvoke $r3.<org.apache.poi.xssf.eventusermodel.XSSFReader: org.apache.poi.xssf.model.StylesTable getStylesTable()>();

        $r5 = virtualinvoke $r3.<org.apache.poi.xssf.eventusermodel.XSSFReader: java.util.Iterator getSheetsData()>();

        r6 = (org.apache.poi.xssf.eventusermodel.XSSFReader$SheetIterator) $r5;

        $r7 = new org.apache.poi.xssf.eventusermodel.ReadOnlySharedStringsTable;

        specialinvoke $r7.<org.apache.poi.xssf.eventusermodel.ReadOnlySharedStringsTable: void <init>(org.apache.poi.openxml4j.opc.OPCPackage)>($r2);

     label02:
        goto label05;

     label03:
        $r24 := @caughtexception;

        $r25 = new org.apache.xmlbeans.XmlException;

        specialinvoke $r25.<org.apache.xmlbeans.XmlException: void <init>(java.lang.Throwable)>($r24);

        throw $r25;

     label04:
        $r22 := @caughtexception;

        $r23 = new org.apache.xmlbeans.XmlException;

        specialinvoke $r23.<org.apache.xmlbeans.XmlException: void <init>(java.lang.Throwable)>($r22);

        throw $r23;

     label05:
        $z0 = virtualinvoke r6.<org.apache.poi.xssf.eventusermodel.XSSFReader$SheetIterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r8 = virtualinvoke r6.<org.apache.poi.xssf.eventusermodel.XSSFReader$SheetIterator: java.io.InputStream next()>();

        $r9 = r0.<org.apache.tika.parser.microsoft.ooxml.XSSFExcelExtractorDecorator: java.util.List sheetParts>;

        $r10 = virtualinvoke r6.<org.apache.poi.xssf.eventusermodel.XSSFReader$SheetIterator: org.apache.poi.openxml4j.opc.PackagePart getSheetPart()>();

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r10);

        $r11 = new org.apache.tika.parser.microsoft.ooxml.XSSFExcelExtractorDecorator$SheetTextAsHTML;

        specialinvoke $r11.<org.apache.tika.parser.microsoft.ooxml.XSSFExcelExtractorDecorator$SheetTextAsHTML: void <init>(org.apache.tika.sax.XHTMLContentHandler)>(r12);

        $r13 = virtualinvoke r6.<org.apache.poi.xssf.eventusermodel.XSSFReader$SheetIterator: org.apache.poi.xssf.model.CommentsTable getSheetComments()>();

        virtualinvoke r12.<org.apache.tika.sax.XHTMLContentHandler: void startElement(java.lang.String)>("div");

        $r14 = virtualinvoke r6.<org.apache.poi.xssf.eventusermodel.XSSFReader$SheetIterator: java.lang.String getSheetName()>();

        virtualinvoke r12.<org.apache.tika.sax.XHTMLContentHandler: void element(java.lang.String,java.lang.String)>("h1", $r14);

        virtualinvoke r12.<org.apache.tika.sax.XHTMLContentHandler: void startElement(java.lang.String)>("table");

        virtualinvoke r12.<org.apache.tika.sax.XHTMLContentHandler: void startElement(java.lang.String)>("tbody");

        virtualinvoke r0.<org.apache.tika.parser.microsoft.ooxml.XSSFExcelExtractorDecorator: void processSheet(org.apache.poi.xssf.eventusermodel.XSSFSheetXMLHandler$SheetContentsHandler,org.apache.poi.xssf.model.CommentsTable,org.apache.poi.xssf.model.StylesTable,org.apache.poi.xssf.eventusermodel.ReadOnlySharedStringsTable,java.io.InputStream)>($r11, $r13, $r4, $r7, $r8);

        virtualinvoke r12.<org.apache.tika.sax.XHTMLContentHandler: void endElement(java.lang.String)>("tbody");

        virtualinvoke r12.<org.apache.tika.sax.XHTMLContentHandler: void endElement(java.lang.String)>("table");

        $r15 = staticinvoke <org.apache.tika.parser.microsoft.ooxml.XSSFExcelExtractorDecorator$SheetTextAsHTML: java.util.List access$000(org.apache.tika.parser.microsoft.ooxml.XSSFExcelExtractorDecorator$SheetTextAsHTML)>($r11);

        $r16 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>();

     label06:
        $z1 = interfaceinvoke $r16.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label07;

        $r21 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        r26 = (java.lang.String) $r21;

        specialinvoke r0.<org.apache.tika.parser.microsoft.ooxml.XSSFExcelExtractorDecorator: void extractHeaderFooter(java.lang.String,org.apache.tika.sax.XHTMLContentHandler)>(r26, r12);

        goto label06;

     label07:
        $r17 = staticinvoke <org.apache.tika.parser.microsoft.ooxml.XSSFExcelExtractorDecorator$SheetTextAsHTML: java.util.List access$100(org.apache.tika.parser.microsoft.ooxml.XSSFExcelExtractorDecorator$SheetTextAsHTML)>($r11);

        $r18 = interfaceinvoke $r17.<java.util.List: java.util.Iterator iterator()>();

     label08:
        $z2 = interfaceinvoke $r18.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label09;

        $r20 = interfaceinvoke $r18.<java.util.Iterator: java.lang.Object next()>();

        r27 = (java.lang.String) $r20;

        specialinvoke r0.<org.apache.tika.parser.microsoft.ooxml.XSSFExcelExtractorDecorator: void extractHeaderFooter(java.lang.String,org.apache.tika.sax.XHTMLContentHandler)>(r27, r12);

        goto label08;

     label09:
        $r19 = virtualinvoke r6.<org.apache.poi.xssf.eventusermodel.XSSFReader$SheetIterator: java.util.List getShapes()>();

        specialinvoke r0.<org.apache.tika.parser.microsoft.ooxml.XSSFExcelExtractorDecorator: void processShapes(java.util.List,org.apache.tika.sax.XHTMLContentHandler)>($r19, r12);

        virtualinvoke r12.<org.apache.tika.sax.XHTMLContentHandler: void endElement(java.lang.String)>("div");

        goto label05;

     label10:
        return;

        catch org.apache.poi.openxml4j.exceptions.InvalidFormatException from label01 to label02 with label03;
        catch org.apache.poi.openxml4j.exceptions.OpenXML4JException from label01 to label02 with label04;
    }

    private void extractHeaderFooter(java.lang.String, org.apache.tika.sax.XHTMLContentHandler) throws org.xml.sax.SAXException
    {
        org.apache.tika.parser.microsoft.ooxml.XSSFExcelExtractorDecorator r4;
        org.apache.tika.parser.microsoft.ooxml.XSSFExcelExtractorDecorator$HeaderFooterFromString $r0;
        org.apache.tika.sax.XHTMLContentHandler r3;
        int $i0;
        java.lang.String r1, $r2;

        r4 := @this: org.apache.tika.parser.microsoft.ooxml.XSSFExcelExtractorDecorator;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: org.apache.tika.sax.XHTMLContentHandler;

        $r0 = new org.apache.tika.parser.microsoft.ooxml.XSSFExcelExtractorDecorator$HeaderFooterFromString;

        specialinvoke $r0.<org.apache.tika.parser.microsoft.ooxml.XSSFExcelExtractorDecorator$HeaderFooterFromString: void <init>(java.lang.String)>(r1);

        $r2 = staticinvoke <org.apache.poi.hssf.extractor.ExcelExtractor: java.lang.String _extractHeaderFooter(org.apache.poi.ss.usermodel.HeaderFooter)>($r0);

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        virtualinvoke r3.<org.apache.tika.sax.XHTMLContentHandler: void element(java.lang.String,java.lang.String)>("p", $r2);

     label1:
        return;
    }

    private void processShapes(java.util.List, org.apache.tika.sax.XHTMLContentHandler) throws org.xml.sax.SAXException
    {
        java.util.Iterator $r1;
        org.apache.tika.sax.XHTMLContentHandler r6;
        org.apache.poi.xssf.usermodel.XSSFSimpleShape $r4;
        org.apache.tika.parser.microsoft.ooxml.XSSFExcelExtractorDecorator r7;
        java.util.List r0;
        int $i0;
        java.lang.Object $r2;
        java.lang.String $r5;
        org.apache.poi.xssf.usermodel.XSSFShape r3;
        boolean $z0, $z1;

        r7 := @this: org.apache.tika.parser.microsoft.ooxml.XSSFExcelExtractorDecorator;

        r0 := @parameter0: java.util.List;

        r6 := @parameter1: org.apache.tika.sax.XHTMLContentHandler;

        if r0 != null goto label1;

        return;

     label1:
        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.apache.poi.xssf.usermodel.XSSFShape) $r2;

        $z1 = r3 instanceof org.apache.poi.xssf.usermodel.XSSFSimpleShape;

        if $z1 == 0 goto label3;

        $r4 = (org.apache.poi.xssf.usermodel.XSSFSimpleShape) r3;

        $r5 = virtualinvoke $r4.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: java.lang.String getText()>();

        if $r5 == null goto label3;

        $i0 = virtualinvoke $r5.<java.lang.String: int length()>();

        if $i0 <= 0 goto label3;

        virtualinvoke r6.<org.apache.tika.sax.XHTMLContentHandler: void element(java.lang.String,java.lang.String)>("p", $r5);

     label3:
        goto label2;

     label4:
        return;
    }

    public void processSheet(org.apache.poi.xssf.eventusermodel.XSSFSheetXMLHandler$SheetContentsHandler, org.apache.poi.xssf.model.CommentsTable, org.apache.poi.xssf.model.StylesTable, org.apache.poi.xssf.eventusermodel.ReadOnlySharedStringsTable, java.io.InputStream) throws java.io.IOException, org.xml.sax.SAXException
    {
        javax.xml.parsers.SAXParserFactory $r2;
        org.apache.poi.xssf.model.StylesTable r7;
        org.xml.sax.XMLReader $r4;
        org.apache.tika.parser.microsoft.ooxml.XSSFExcelExtractorDecorator r11;
        org.apache.poi.xssf.eventusermodel.ReadOnlySharedStringsTable r9;
        org.apache.tika.metadata.Metadata $r13;
        org.apache.poi.xssf.eventusermodel.XSSFSheetXMLHandler $r6;
        org.apache.poi.ss.usermodel.DataFormatter $r12;
        javax.xml.parsers.SAXParser $r3;
        java.lang.String $r18, $r20;
        boolean $z0;
        org.xml.sax.InputSource $r0;
        org.apache.poi.xssf.model.CommentsTable r8;
        java.lang.RuntimeException $r15;
        org.apache.poi.xssf.eventusermodel.XSSFSheetXMLHandler$SheetContentsHandler r10;
        javax.xml.parsers.ParserConfigurationException $r14;
        org.apache.tika.parser.microsoft.ooxml.XSSFExcelExtractorDecorator$XSSFSheetInterestingPartsCapturer $r5;
        java.lang.StringBuilder $r16, $r17, $r19;
        java.io.InputStream r1;

        r11 := @this: org.apache.tika.parser.microsoft.ooxml.XSSFExcelExtractorDecorator;

        r10 := @parameter0: org.apache.poi.xssf.eventusermodel.XSSFSheetXMLHandler$SheetContentsHandler;

        r8 := @parameter1: org.apache.poi.xssf.model.CommentsTable;

        r7 := @parameter2: org.apache.poi.xssf.model.StylesTable;

        r9 := @parameter3: org.apache.poi.xssf.eventusermodel.ReadOnlySharedStringsTable;

        r1 := @parameter4: java.io.InputStream;

        $r0 = new org.xml.sax.InputSource;

        specialinvoke $r0.<org.xml.sax.InputSource: void <init>(java.io.InputStream)>(r1);

        $r2 = staticinvoke <javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParserFactory newInstance()>();

     label1:
        $r3 = virtualinvoke $r2.<javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParser newSAXParser()>();

        $r4 = virtualinvoke $r3.<javax.xml.parsers.SAXParser: org.xml.sax.XMLReader getXMLReader()>();

        $r5 = new org.apache.tika.parser.microsoft.ooxml.XSSFExcelExtractorDecorator$XSSFSheetInterestingPartsCapturer;

        $r6 = new org.apache.poi.xssf.eventusermodel.XSSFSheetXMLHandler;

        $r12 = r11.<org.apache.tika.parser.microsoft.ooxml.XSSFExcelExtractorDecorator: org.apache.poi.ss.usermodel.DataFormatter formatter>;

        specialinvoke $r6.<org.apache.poi.xssf.eventusermodel.XSSFSheetXMLHandler: void <init>(org.apache.poi.xssf.model.StylesTable,org.apache.poi.xssf.model.CommentsTable,org.apache.poi.xssf.eventusermodel.ReadOnlySharedStringsTable,org.apache.poi.xssf.eventusermodel.XSSFSheetXMLHandler$SheetContentsHandler,org.apache.poi.ss.usermodel.DataFormatter,boolean)>(r7, r8, r9, r10, $r12, 0);

        specialinvoke $r5.<org.apache.tika.parser.microsoft.ooxml.XSSFExcelExtractorDecorator$XSSFSheetInterestingPartsCapturer: void <init>(org.xml.sax.ContentHandler)>($r6);

        interfaceinvoke $r4.<org.xml.sax.XMLReader: void setContentHandler(org.xml.sax.ContentHandler)>($r5);

        interfaceinvoke $r4.<org.xml.sax.XMLReader: void parse(org.xml.sax.InputSource)>($r0);

        virtualinvoke r1.<java.io.InputStream: void close()>();

        $z0 = staticinvoke <org.apache.tika.parser.microsoft.ooxml.XSSFExcelExtractorDecorator$XSSFSheetInterestingPartsCapturer: boolean access$200(org.apache.tika.parser.microsoft.ooxml.XSSFExcelExtractorDecorator$XSSFSheetInterestingPartsCapturer)>($r5);

        if $z0 == 0 goto label2;

        $r13 = r11.<org.apache.tika.parser.microsoft.ooxml.XSSFExcelExtractorDecorator: org.apache.tika.metadata.Metadata metadata>;

        virtualinvoke $r13.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("protected", "true");

     label2:
        goto label4;

     label3:
        $r14 := @caughtexception;

        $r15 = new java.lang.RuntimeException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SAX parser appears to be broken - ");

        $r18 = virtualinvoke $r14.<javax.xml.parsers.ParserConfigurationException: java.lang.String getMessage()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.RuntimeException: void <init>(java.lang.String)>($r20);

        throw $r15;

     label4:
        return;

        catch javax.xml.parsers.ParserConfigurationException from label1 to label2 with label3;
    }

    protected java.util.List getMainDocumentParts() throws org.apache.tika.exception.TikaException
    {
        org.apache.poi.openxml4j.opc.PackagePart r5, $r20, $r27;
        java.net.URI $r17, $r24;
        boolean $z0, $z1, $z2;
        org.apache.poi.openxml4j.exceptions.InvalidFormatException $r28;
        org.apache.poi.openxml4j.opc.PackagePartName $r18, $r25;
        java.util.List $r2;
        org.apache.poi.openxml4j.opc.OPCPackage $r19, $r26;
        org.apache.poi.xssf.usermodel.XSSFRelation $r6, $r10;
        org.apache.poi.openxml4j.opc.PackageRelationship r30, r31;
        java.util.ArrayList $r0;
        org.apache.tika.parser.microsoft.ooxml.XSSFExcelExtractorDecorator r1;
        org.apache.poi.openxml4j.opc.PackageRelationshipCollection $r8, $r12;
        org.apache.tika.exception.TikaException $r29;
        java.lang.String $r7, $r11;
        java.util.Iterator $r3, $r9, $r13;
        org.apache.poi.openxml4j.opc.TargetMode $r15, $r16, $r22, $r23;
        java.lang.Object $r4, $r14, $r21;

        r1 := @this: org.apache.tika.parser.microsoft.ooxml.XSSFExcelExtractorDecorator;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = r1.<org.apache.tika.parser.microsoft.ooxml.XSSFExcelExtractorDecorator: java.util.List sheetParts>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.poi.openxml4j.opc.PackagePart) $r4;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r5);

     label02:
        $r6 = <org.apache.poi.xssf.usermodel.XSSFRelation: org.apache.poi.xssf.usermodel.XSSFRelation DRAWINGS>;

        $r7 = virtualinvoke $r6.<org.apache.poi.xssf.usermodel.XSSFRelation: java.lang.String getRelation()>();

        $r8 = virtualinvoke r5.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackageRelationshipCollection getRelationshipsByType(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<org.apache.poi.openxml4j.opc.PackageRelationshipCollection: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label05;

        $r21 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r30 = (org.apache.poi.openxml4j.opc.PackageRelationship) $r21;

        $r22 = virtualinvoke r30.<org.apache.poi.openxml4j.opc.PackageRelationship: org.apache.poi.openxml4j.opc.TargetMode getTargetMode()>();

        $r23 = <org.apache.poi.openxml4j.opc.TargetMode: org.apache.poi.openxml4j.opc.TargetMode INTERNAL>;

        if $r22 != $r23 goto label04;

        $r24 = virtualinvoke r30.<org.apache.poi.openxml4j.opc.PackageRelationship: java.net.URI getTargetURI()>();

        $r25 = staticinvoke <org.apache.poi.openxml4j.opc.PackagingURIHelper: org.apache.poi.openxml4j.opc.PackagePartName createPartName(java.net.URI)>($r24);

        $r26 = virtualinvoke r30.<org.apache.poi.openxml4j.opc.PackageRelationship: org.apache.poi.openxml4j.opc.OPCPackage getPackage()>();

        $r27 = virtualinvoke $r26.<org.apache.poi.openxml4j.opc.OPCPackage: org.apache.poi.openxml4j.opc.PackagePart getPart(org.apache.poi.openxml4j.opc.PackagePartName)>($r25);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r27);

     label04:
        goto label03;

     label05:
        $r10 = <org.apache.poi.xssf.usermodel.XSSFRelation: org.apache.poi.xssf.usermodel.XSSFRelation VML_DRAWINGS>;

        $r11 = virtualinvoke $r10.<org.apache.poi.xssf.usermodel.XSSFRelation: java.lang.String getRelation()>();

        $r12 = virtualinvoke r5.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackageRelationshipCollection getRelationshipsByType(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<org.apache.poi.openxml4j.opc.PackageRelationshipCollection: java.util.Iterator iterator()>();

     label06:
        $z2 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label08;

        $r14 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        r31 = (org.apache.poi.openxml4j.opc.PackageRelationship) $r14;

        $r15 = virtualinvoke r31.<org.apache.poi.openxml4j.opc.PackageRelationship: org.apache.poi.openxml4j.opc.TargetMode getTargetMode()>();

        $r16 = <org.apache.poi.openxml4j.opc.TargetMode: org.apache.poi.openxml4j.opc.TargetMode INTERNAL>;

        if $r15 != $r16 goto label07;

        $r17 = virtualinvoke r31.<org.apache.poi.openxml4j.opc.PackageRelationship: java.net.URI getTargetURI()>();

        $r18 = staticinvoke <org.apache.poi.openxml4j.opc.PackagingURIHelper: org.apache.poi.openxml4j.opc.PackagePartName createPartName(java.net.URI)>($r17);

        $r19 = virtualinvoke r31.<org.apache.poi.openxml4j.opc.PackageRelationship: org.apache.poi.openxml4j.opc.OPCPackage getPackage()>();

        $r20 = virtualinvoke $r19.<org.apache.poi.openxml4j.opc.OPCPackage: org.apache.poi.openxml4j.opc.PackagePart getPart(org.apache.poi.openxml4j.opc.PackagePartName)>($r18);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r20);

     label07:
        goto label06;

     label08:
        goto label10;

     label09:
        $r28 := @caughtexception;

        $r29 = new org.apache.tika.exception.TikaException;

        specialinvoke $r29.<org.apache.tika.exception.TikaException: void <init>(java.lang.String,java.lang.Throwable)>("Broken OOXML file", $r28);

        throw $r29;

     label10:
        goto label01;

     label11:
        return $r0;

        catch org.apache.poi.openxml4j.exceptions.InvalidFormatException from label02 to label08 with label09;
    }

    static org.apache.poi.xssf.usermodel.helpers.HeaderFooterHelper access$300()
    {
        org.apache.poi.xssf.usermodel.helpers.HeaderFooterHelper $r0;

        $r0 = <org.apache.tika.parser.microsoft.ooxml.XSSFExcelExtractorDecorator: org.apache.poi.xssf.usermodel.helpers.HeaderFooterHelper hfHelper>;

        return $r0;
    }

    static void <clinit>()
    {
        org.apache.poi.xssf.usermodel.helpers.HeaderFooterHelper $r0;

        $r0 = new org.apache.poi.xssf.usermodel.helpers.HeaderFooterHelper;

        specialinvoke $r0.<org.apache.poi.xssf.usermodel.helpers.HeaderFooterHelper: void <init>()>();

        <org.apache.tika.parser.microsoft.ooxml.XSSFExcelExtractorDecorator: org.apache.poi.xssf.usermodel.helpers.HeaderFooterHelper hfHelper> = $r0;

        return;
    }
}
