public class com.mongodb.CommandResult extends com.mongodb.BasicDBObject
{
    com.mongodb.DBObject _cmd;
    private static final long serialVersionUID;

    void <init>()
    {
        com.mongodb.CommandResult r0;

        r0 := @this: com.mongodb.CommandResult;

        specialinvoke r0.<com.mongodb.BasicDBObject: void <init>()>();

        return;
    }

    public boolean ok()
    {
        com.mongodb.CommandResult r0;
        int $i0;
        java.lang.Boolean $r10;
        java.lang.String $r6, $r8;
        java.lang.Number $r9;
        boolean $z0, $z1, $z2, $z3;
        java.lang.IllegalArgumentException $r2, $r11;
        java.lang.Object $r1;
        java.lang.StringBuilder $r3, $r4, $r7;
        java.lang.Class $r5;

        r0 := @this: com.mongodb.CommandResult;

        $r1 = virtualinvoke r0.<com.mongodb.CommandResult: java.lang.Object get(java.lang.String)>("ok");

        if $r1 != null goto label1;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("\'ok\' should never be null...");

        throw $r11;

     label1:
        $z0 = $r1 instanceof java.lang.Boolean;

        if $z0 == 0 goto label2;

        $r10 = (java.lang.Boolean) $r1;

        $z2 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>();

        return $z2;

     label2:
        $z1 = $r1 instanceof java.lang.Number;

        if $z1 == 0 goto label5;

        $r9 = (java.lang.Number) $r1;

        $i0 = virtualinvoke $r9.<java.lang.Number: int intValue()>();

        if $i0 != 1 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        return $z3;

     label5:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("can\'t figure out what to do with: ");

        $r5 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r2;
    }

    public java.lang.String getErrorMessage()
    {
        com.mongodb.CommandResult r0;
        java.lang.Object $r1;
        java.lang.String $r2;

        r0 := @this: com.mongodb.CommandResult;

        $r1 = virtualinvoke r0.<com.mongodb.CommandResult: java.lang.Object get(java.lang.String)>("errmsg");

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }

    public com.mongodb.MongoException getException()
    {
        com.mongodb.CommandResult$CommandFailure $r10;
        java.util.Iterator $r3;
        com.mongodb.CommandResult r0;
        java.util.Set $r2;
        com.mongodb.DBObject $r1;
        java.lang.Object $r4;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String r5, $r9, $r11;

        r0 := @this: com.mongodb.CommandResult;

        $r1 = r0.<com.mongodb.CommandResult: com.mongodb.DBObject _cmd>;

        $r2 = interfaceinvoke $r1.<com.mongodb.DBObject: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r4;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("command failed [");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("command failed [");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");

        $r9 = virtualinvoke r0.<com.mongodb.CommandResult: java.lang.String toString()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r10 = new com.mongodb.CommandResult$CommandFailure;

        $r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<com.mongodb.CommandResult$CommandFailure: void <init>(com.mongodb.CommandResult,java.lang.String)>(r0, $r11);

        return $r10;
    }

    public void throwOnError() throws com.mongodb.MongoException
    {
        com.mongodb.CommandResult r0;
        com.mongodb.MongoException $r1;
        boolean $z0;

        r0 := @this: com.mongodb.CommandResult;

        $z0 = virtualinvoke r0.<com.mongodb.CommandResult: boolean ok()>();

        if $z0 != 0 goto label1;

        $r1 = virtualinvoke r0.<com.mongodb.CommandResult: com.mongodb.MongoException getException()>();

        throw $r1;

     label1:
        return;
    }

    public static void <clinit>()
    {
        <com.mongodb.CommandResult: long serialVersionUID> = 1L;

        return;
    }
}
