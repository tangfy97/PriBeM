public class org.apache.poi.hwpf.usermodel.FieldsImpl extends java.lang.Object implements org.apache.poi.hwpf.usermodel.Fields
{
    private java.util.Map _fieldsByOffset;
    private org.apache.poi.hwpf.usermodel.FieldsImpl$PlexOfFieldComparator comparator;

    private static int binarySearch(java.util.List, int, int, int)
    {
        org.apache.poi.hwpf.model.PlexOfField $r2, $r4;
        byte $b16;
        int $i0, i1, i2, $i3, $i4, $i5, $i6, i7, $i8, $i9, $i10, i11, i12, i13, i14, i15, $i18;
        java.util.List r0;
        java.lang.Object $r1, $r3;

        r0 := @parameter0: java.util.List;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i7 := @parameter3: int;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        staticinvoke <org.apache.poi.hwpf.usermodel.FieldsImpl: void checkIndexForBinarySearch(int,int,int)>($i0, i1, i2);

        i11 = i1;

        $i18 = (int) -1;

        i12 = $i18;

        i13 = i2 - 1;

     label01:
        if i11 > i13 goto label05;

        $i9 = i11 + i13;

        i12 = $i9 >>> 1;

        $r3 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i12);

        $r4 = (org.apache.poi.hwpf.model.PlexOfField) $r3;

        $i10 = virtualinvoke $r4.<org.apache.poi.hwpf.model.PlexOfField: int getFcStart()>();

        if $i10 != i7 goto label02;

        return i12;

     label02:
        if $i10 >= i7 goto label03;

        i11 = i12 + 1;

        goto label04;

     label03:
        i13 = i12 - 1;

     label04:
        goto label01;

     label05:
        if i12 >= 0 goto label09;

        i14 = i2;

        i15 = i1;

     label06:
        if i15 >= i2 goto label08;

        $r1 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i15);

        $r2 = (org.apache.poi.hwpf.model.PlexOfField) $r1;

        $i8 = virtualinvoke $r2.<org.apache.poi.hwpf.model.PlexOfField: int getFcStart()>();

        if i7 >= $i8 goto label07;

        i14 = i15;

     label07:
        i15 = i15 + 1;

        goto label06;

     label08:
        $i5 = neg i14;

        $i6 = $i5 - 1;

        return $i6;

     label09:
        $i3 = neg i12;

        if 0 < 0 goto label10;

        $b16 = 1;

        goto label11;

     label10:
        $b16 = 2;

     label11:
        $i4 = $i3 - $b16;

        return $i4;
    }

    private static void checkIndexForBinarySearch(int, int, int)
    {
        int i0, i1, i2;
        java.lang.ArrayIndexOutOfBoundsException $r0;
        java.lang.IllegalArgumentException $r1;

        i2 := @parameter0: int;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if i0 <= i1 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r1;

     label1:
        if i2 < i1 goto label2;

        if 0 <= i0 goto label3;

     label2:
        $r0 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r0.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r0;

     label3:
        return;
    }

    public void <init>(org.apache.poi.hwpf.model.FieldsTables)
    {
        org.apache.poi.hwpf.model.FieldsDocumentPart r5;
        org.apache.poi.hwpf.usermodel.FieldsImpl$PlexOfFieldComparator $r1;
        java.util.HashMap $r2;
        java.util.ArrayList $r7;
        org.apache.poi.hwpf.model.FieldsDocumentPart[] $r3, $r4;
        org.apache.poi.hwpf.model.FieldsTables r6;
        java.util.Map $r8, $r9;
        int $i0, i1, i2;
        org.apache.poi.hwpf.usermodel.FieldsImpl r0;

        r0 := @this: org.apache.poi.hwpf.usermodel.FieldsImpl;

        r6 := @parameter0: org.apache.poi.hwpf.model.FieldsTables;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.apache.poi.hwpf.usermodel.FieldsImpl$PlexOfFieldComparator;

        specialinvoke $r1.<org.apache.poi.hwpf.usermodel.FieldsImpl$PlexOfFieldComparator: void <init>(org.apache.poi.hwpf.usermodel.FieldsImpl$1)>(null);

        r0.<org.apache.poi.hwpf.usermodel.FieldsImpl: org.apache.poi.hwpf.usermodel.FieldsImpl$PlexOfFieldComparator comparator> = $r1;

        $r2 = new java.util.HashMap;

        $r3 = staticinvoke <org.apache.poi.hwpf.model.FieldsDocumentPart: org.apache.poi.hwpf.model.FieldsDocumentPart[] values()>();

        $i0 = lengthof $r3;

        specialinvoke $r2.<java.util.HashMap: void <init>(int)>($i0);

        r0.<org.apache.poi.hwpf.usermodel.FieldsImpl: java.util.Map _fieldsByOffset> = $r2;

        $r4 = staticinvoke <org.apache.poi.hwpf.model.FieldsDocumentPart: org.apache.poi.hwpf.model.FieldsDocumentPart[] values()>();

        i1 = lengthof $r4;

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        r5 = $r4[i2];

        $r7 = virtualinvoke r6.<org.apache.poi.hwpf.model.FieldsTables: java.util.ArrayList getFieldsPLCF(org.apache.poi.hwpf.model.FieldsDocumentPart)>(r5);

        $r8 = r0.<org.apache.poi.hwpf.usermodel.FieldsImpl: java.util.Map _fieldsByOffset>;

        $r9 = specialinvoke r0.<org.apache.poi.hwpf.usermodel.FieldsImpl: java.util.Map parseFieldStructure(java.util.List)>($r7);

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, $r9);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    public java.util.Collection getFields(org.apache.poi.hwpf.model.FieldsDocumentPart)
    {
        org.apache.poi.hwpf.model.FieldsDocumentPart r1;
        java.util.Collection $r6, $r7;
        java.util.Set $r5;
        java.util.Map $r2, r4;
        java.lang.Object $r3;
        org.apache.poi.hwpf.usermodel.FieldsImpl r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.usermodel.FieldsImpl;

        r1 := @parameter0: org.apache.poi.hwpf.model.FieldsDocumentPart;

        $r2 = r0.<org.apache.poi.hwpf.usermodel.FieldsImpl: java.util.Map _fieldsByOffset>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.util.Map) $r3;

        if r4 == null goto label1;

        $z0 = interfaceinvoke r4.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        $r5 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

        return $r5;

     label2:
        $r6 = interfaceinvoke r4.<java.util.Map: java.util.Collection values()>();

        $r7 = staticinvoke <java.util.Collections: java.util.Collection unmodifiableCollection(java.util.Collection)>($r6);

        return $r7;
    }

    public org.apache.poi.hwpf.usermodel.FieldImpl getFieldByStartOffset(org.apache.poi.hwpf.model.FieldsDocumentPart, int)
    {
        org.apache.poi.hwpf.model.FieldsDocumentPart r1;
        org.apache.poi.hwpf.usermodel.FieldImpl $r7;
        java.lang.Integer $r5;
        java.util.Map $r2, r4;
        int i0;
        java.lang.Object $r3, $r6;
        org.apache.poi.hwpf.usermodel.FieldsImpl r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.usermodel.FieldsImpl;

        r1 := @parameter0: org.apache.poi.hwpf.model.FieldsDocumentPart;

        i0 := @parameter1: int;

        $r2 = r0.<org.apache.poi.hwpf.usermodel.FieldsImpl: java.util.Map _fieldsByOffset>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.util.Map) $r3;

        if r4 == null goto label1;

        $z0 = interfaceinvoke r4.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        return null;

     label2:
        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r6 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $r7 = (org.apache.poi.hwpf.usermodel.FieldImpl) $r6;

        return $r7;
    }

    private java.util.Map parseFieldStructure(java.util.List)
    {
        org.apache.poi.hwpf.usermodel.FieldImpl r8;
        java.util.HashMap $r1, $r5;
        java.lang.Integer $r9;
        java.util.ArrayList $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        org.apache.poi.hwpf.usermodel.FieldsImpl r2;
        boolean $z0, $z1;
        org.apache.poi.hwpf.usermodel.FieldsImpl$PlexOfFieldComparator $r3;
        java.util.Iterator $r6;
        java.util.List r0;
        java.lang.Object $r7;

        r2 := @this: org.apache.poi.hwpf.usermodel.FieldsImpl;

        r0 := @parameter0: java.util.List;

        if r0 == null goto label1;

        $z0 = interfaceinvoke r0.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        return $r1;

     label2:
        $r3 = r2.<org.apache.poi.hwpf.usermodel.FieldsImpl: org.apache.poi.hwpf.usermodel.FieldsImpl$PlexOfFieldComparator comparator>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r0, $r3);

        $r4 = new java.util.ArrayList;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        $i1 = $i0 / 3;

        $i2 = $i1 + 1;

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>($i2);

        $i3 = interfaceinvoke r0.<java.util.List: int size()>();

        specialinvoke r2.<org.apache.poi.hwpf.usermodel.FieldsImpl: void parseFieldStructureImpl(java.util.List,int,int,java.util.List)>(r0, 0, $i3, $r4);

        $r5 = new java.util.HashMap;

        $i4 = interfaceinvoke $r4.<java.util.List: int size()>();

        specialinvoke $r5.<java.util.HashMap: void <init>(int)>($i4);

        $r6 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (org.apache.poi.hwpf.usermodel.FieldImpl) $r7;

        $i5 = virtualinvoke r8.<org.apache.poi.hwpf.usermodel.FieldImpl: int getFieldStartOffset()>();

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, r8);

        goto label3;

     label4:
        return $r5;
    }

    private void parseFieldStructureImpl(java.util.List, int, int, java.util.List)
    {
        org.apache.poi.hwpf.usermodel.FieldImpl $r7, $r13;
        org.apache.poi.hwpf.model.PlexOfField r2, r5, r11;
        org.apache.poi.hwpf.usermodel.FieldsImpl r9;
        org.apache.poi.hwpf.model.FieldDescriptor $r3, $r6, $r12;
        java.util.List r0, r8;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, i25;
        java.lang.Object $r1, $r4, $r10;

        r9 := @this: org.apache.poi.hwpf.usermodel.FieldsImpl;

        r0 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r8 := @parameter3: java.util.List;

        i25 = i0;

     label01:
        if i25 >= i1 goto label13;

        $r1 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i25);

        r2 = (org.apache.poi.hwpf.model.PlexOfField) $r1;

        $r3 = virtualinvoke r2.<org.apache.poi.hwpf.model.PlexOfField: org.apache.poi.hwpf.model.FieldDescriptor getFld()>();

        $i2 = virtualinvoke $r3.<org.apache.poi.hwpf.model.FieldDescriptor: int getBoundaryType()>();

        if $i2 == 19 goto label02;

        i25 = i25 + 1;

        goto label01;

     label02:
        $i3 = i25 + 1;

        $i4 = virtualinvoke r2.<org.apache.poi.hwpf.model.PlexOfField: int getFcEnd()>();

        $i5 = staticinvoke <org.apache.poi.hwpf.usermodel.FieldsImpl: int binarySearch(java.util.List,int,int,int)>(r0, $i3, i1, $i4);

        if $i5 >= 0 goto label03;

        i25 = i25 + 1;

        goto label01;

     label03:
        $r4 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i5);

        r5 = (org.apache.poi.hwpf.model.PlexOfField) $r4;

        $r6 = virtualinvoke r5.<org.apache.poi.hwpf.model.PlexOfField: org.apache.poi.hwpf.model.FieldDescriptor getFld()>();

        $i6 = virtualinvoke $r6.<org.apache.poi.hwpf.model.FieldDescriptor: int getBoundaryType()>();

        tableswitch($i6)
        {
            case 19: goto label11;
            case 20: goto label04;
            case 21: goto label09;
            default: goto label11;
        };

     label04:
        $i12 = virtualinvoke r5.<org.apache.poi.hwpf.model.PlexOfField: int getFcEnd()>();

        $i13 = staticinvoke <org.apache.poi.hwpf.usermodel.FieldsImpl: int binarySearch(java.util.List,int,int,int)>(r0, $i5, i1, $i12);

        if $i13 >= 0 goto label05;

        i25 = i25 + 1;

        goto label01;

     label05:
        $r10 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i13);

        r11 = (org.apache.poi.hwpf.model.PlexOfField) $r10;

        $r12 = virtualinvoke r11.<org.apache.poi.hwpf.model.PlexOfField: org.apache.poi.hwpf.model.FieldDescriptor getFld()>();

        $i14 = virtualinvoke $r12.<org.apache.poi.hwpf.model.FieldDescriptor: int getBoundaryType()>();

        if $i14 == 21 goto label06;

        i25 = i25 + 1;

        goto label01;

     label06:
        $r13 = new org.apache.poi.hwpf.usermodel.FieldImpl;

        specialinvoke $r13.<org.apache.poi.hwpf.usermodel.FieldImpl: void <init>(org.apache.poi.hwpf.model.PlexOfField,org.apache.poi.hwpf.model.PlexOfField,org.apache.poi.hwpf.model.PlexOfField)>(r2, r5, r11);

        interfaceinvoke r8.<java.util.List: boolean add(java.lang.Object)>($r13);

        $i15 = virtualinvoke r2.<org.apache.poi.hwpf.model.PlexOfField: int getFcStart()>();

        $i16 = $i15 + 1;

        $i17 = virtualinvoke r5.<org.apache.poi.hwpf.model.PlexOfField: int getFcStart()>();

        $i18 = $i17 - 1;

        if $i16 >= $i18 goto label07;

        $i24 = i25 + 1;

        specialinvoke r9.<org.apache.poi.hwpf.usermodel.FieldsImpl: void parseFieldStructureImpl(java.util.List,int,int,java.util.List)>(r0, $i24, $i5, r8);

     label07:
        $i19 = virtualinvoke r5.<org.apache.poi.hwpf.model.PlexOfField: int getFcStart()>();

        $i20 = $i19 + 1;

        $i21 = virtualinvoke r11.<org.apache.poi.hwpf.model.PlexOfField: int getFcStart()>();

        $i22 = $i21 - 1;

        if $i20 >= $i22 goto label08;

        $i23 = $i5 + 1;

        specialinvoke r9.<org.apache.poi.hwpf.usermodel.FieldsImpl: void parseFieldStructureImpl(java.util.List,int,int,java.util.List)>(r0, $i23, $i13, r8);

     label08:
        i25 = $i13 + 1;

        goto label12;

     label09:
        $r7 = new org.apache.poi.hwpf.usermodel.FieldImpl;

        specialinvoke $r7.<org.apache.poi.hwpf.usermodel.FieldImpl: void <init>(org.apache.poi.hwpf.model.PlexOfField,org.apache.poi.hwpf.model.PlexOfField,org.apache.poi.hwpf.model.PlexOfField)>(r2, null, r5);

        interfaceinvoke r8.<java.util.List: boolean add(java.lang.Object)>($r7);

        $i7 = virtualinvoke r2.<org.apache.poi.hwpf.model.PlexOfField: int getFcStart()>();

        $i8 = $i7 + 1;

        $i9 = virtualinvoke r5.<org.apache.poi.hwpf.model.PlexOfField: int getFcStart()>();

        $i10 = $i9 - 1;

        if $i8 >= $i10 goto label10;

        $i11 = i25 + 1;

        specialinvoke r9.<org.apache.poi.hwpf.usermodel.FieldsImpl: void parseFieldStructureImpl(java.util.List,int,int,java.util.List)>(r0, $i11, $i5, r8);

     label10:
        i25 = $i5 + 1;

        goto label12;

     label11:
        i25 = i25 + 1;

        goto label01;

     label12:
        goto label01;

     label13:
        return;
    }

    public volatile org.apache.poi.hwpf.usermodel.Field getFieldByStartOffset(org.apache.poi.hwpf.model.FieldsDocumentPart, int)
    {
        org.apache.poi.hwpf.model.FieldsDocumentPart r1;
        int i0;
        org.apache.poi.hwpf.usermodel.FieldImpl $r2;
        org.apache.poi.hwpf.usermodel.FieldsImpl r0;

        r0 := @this: org.apache.poi.hwpf.usermodel.FieldsImpl;

        r1 := @parameter0: org.apache.poi.hwpf.model.FieldsDocumentPart;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.FieldsImpl: org.apache.poi.hwpf.usermodel.FieldImpl getFieldByStartOffset(org.apache.poi.hwpf.model.FieldsDocumentPart,int)>(r1, i0);

        return $r2;
    }
}
