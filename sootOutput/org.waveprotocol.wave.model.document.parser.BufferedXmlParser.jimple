public class org.waveprotocol.wave.model.document.parser.BufferedXmlParser extends java.lang.Object implements org.waveprotocol.wave.model.document.parser.SafeXmlPullParser
{
    private final org.waveprotocol.wave.model.document.parser.StreamingXmlParser parserImpl;
    private final java.util.Queue tokens;
    private org.waveprotocol.wave.model.document.parser.Item current;

    public void <init>(java.lang.String) throws org.waveprotocol.wave.model.document.parser.XmlParseException
    {
        org.waveprotocol.wave.model.document.parser.BufferedXmlParser r0;
        java.lang.String r3;
        java.util.LinkedList $r1;
        org.waveprotocol.wave.model.document.parser.StreamingXmlParser $r2;

        r0 := @this: org.waveprotocol.wave.model.document.parser.BufferedXmlParser;

        r3 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        r0.<org.waveprotocol.wave.model.document.parser.BufferedXmlParser: java.util.Queue tokens> = $r1;

        $r2 = new org.waveprotocol.wave.model.document.parser.StreamingXmlParser;

        specialinvoke $r2.<org.waveprotocol.wave.model.document.parser.StreamingXmlParser: void <init>(java.lang.String)>(r3);

        r0.<org.waveprotocol.wave.model.document.parser.BufferedXmlParser: org.waveprotocol.wave.model.document.parser.StreamingXmlParser parserImpl> = $r2;

        virtualinvoke r0.<org.waveprotocol.wave.model.document.parser.BufferedXmlParser: void parse()>();

        return;
    }

    public org.waveprotocol.wave.model.util.StringMap getAttributes() throws java.lang.IllegalStateException
    {
        org.waveprotocol.wave.model.util.StringMap $r2;
        org.waveprotocol.wave.model.document.parser.BufferedXmlParser r0;
        org.waveprotocol.wave.model.document.parser.Item $r1;

        r0 := @this: org.waveprotocol.wave.model.document.parser.BufferedXmlParser;

        $r1 = r0.<org.waveprotocol.wave.model.document.parser.BufferedXmlParser: org.waveprotocol.wave.model.document.parser.Item current>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.model.document.parser.Item: org.waveprotocol.wave.model.util.StringMap getAttributes()>();

        return $r2;
    }

    public org.waveprotocol.wave.model.document.parser.ItemType getCurrentType() throws java.lang.IllegalStateException
    {
        org.waveprotocol.wave.model.document.parser.BufferedXmlParser r0;
        org.waveprotocol.wave.model.document.parser.ItemType $r3;
        org.waveprotocol.wave.model.document.parser.Item $r1, $r2;

        r0 := @this: org.waveprotocol.wave.model.document.parser.BufferedXmlParser;

        $r1 = r0.<org.waveprotocol.wave.model.document.parser.BufferedXmlParser: org.waveprotocol.wave.model.document.parser.Item current>;

        if $r1 == null goto label1;

        $r2 = r0.<org.waveprotocol.wave.model.document.parser.BufferedXmlParser: org.waveprotocol.wave.model.document.parser.Item current>;

        $r3 = $r2.<org.waveprotocol.wave.model.document.parser.Item: org.waveprotocol.wave.model.document.parser.ItemType type>;

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    public java.lang.String getTagName() throws java.lang.IllegalStateException
    {
        java.lang.String $r2;
        org.waveprotocol.wave.model.document.parser.BufferedXmlParser r0;
        org.waveprotocol.wave.model.document.parser.Item $r1;

        r0 := @this: org.waveprotocol.wave.model.document.parser.BufferedXmlParser;

        $r1 = r0.<org.waveprotocol.wave.model.document.parser.BufferedXmlParser: org.waveprotocol.wave.model.document.parser.Item current>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.model.document.parser.Item: java.lang.String getTagName()>();

        return $r2;
    }

    public java.lang.String getText() throws java.lang.IllegalStateException
    {
        java.lang.String $r2;
        org.waveprotocol.wave.model.document.parser.BufferedXmlParser r0;
        org.waveprotocol.wave.model.document.parser.Item $r1;

        r0 := @this: org.waveprotocol.wave.model.document.parser.BufferedXmlParser;

        $r1 = r0.<org.waveprotocol.wave.model.document.parser.BufferedXmlParser: org.waveprotocol.wave.model.document.parser.Item current>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.model.document.parser.Item: java.lang.String getText()>();

        return $r2;
    }

    public java.lang.String getProcessingInstructionName() throws java.lang.IllegalStateException
    {
        java.lang.String $r2;
        org.waveprotocol.wave.model.document.parser.BufferedXmlParser r0;
        org.waveprotocol.wave.model.document.parser.Item $r1;

        r0 := @this: org.waveprotocol.wave.model.document.parser.BufferedXmlParser;

        $r1 = r0.<org.waveprotocol.wave.model.document.parser.BufferedXmlParser: org.waveprotocol.wave.model.document.parser.Item current>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.model.document.parser.Item: java.lang.String getProcessingInstructionName()>();

        return $r2;
    }

    public java.lang.String getProcessingInstructionValue() throws java.lang.IllegalStateException
    {
        java.lang.String $r2;
        org.waveprotocol.wave.model.document.parser.BufferedXmlParser r0;
        org.waveprotocol.wave.model.document.parser.Item $r1;

        r0 := @this: org.waveprotocol.wave.model.document.parser.BufferedXmlParser;

        $r1 = r0.<org.waveprotocol.wave.model.document.parser.BufferedXmlParser: org.waveprotocol.wave.model.document.parser.Item current>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.model.document.parser.Item: java.lang.String getProcessingInstructionValue()>();

        return $r2;
    }

    public org.waveprotocol.wave.model.document.parser.ItemType next()
    {
        org.waveprotocol.wave.model.document.parser.BufferedXmlParser r0;
        org.waveprotocol.wave.model.document.parser.ItemType $r4;
        java.lang.Object $r2;
        java.util.Queue $r1;
        java.util.NoSuchElementException $r5;
        org.waveprotocol.wave.model.document.parser.Item $r3;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.document.parser.BufferedXmlParser;

        $z0 = virtualinvoke r0.<org.waveprotocol.wave.model.document.parser.BufferedXmlParser: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r5 = new java.util.NoSuchElementException;

        specialinvoke $r5.<java.util.NoSuchElementException: void <init>()>();

        throw $r5;

     label1:
        $r1 = r0.<org.waveprotocol.wave.model.document.parser.BufferedXmlParser: java.util.Queue tokens>;

        $r2 = interfaceinvoke $r1.<java.util.Queue: java.lang.Object poll()>();

        $r3 = (org.waveprotocol.wave.model.document.parser.Item) $r2;

        r0.<org.waveprotocol.wave.model.document.parser.BufferedXmlParser: org.waveprotocol.wave.model.document.parser.Item current> = $r3;

        $r4 = virtualinvoke r0.<org.waveprotocol.wave.model.document.parser.BufferedXmlParser: org.waveprotocol.wave.model.document.parser.ItemType getCurrentType()>();

        return $r4;
    }

    public boolean hasNext()
    {
        org.waveprotocol.wave.model.document.parser.BufferedXmlParser r0;
        java.util.Queue $r1;
        boolean $z0, $z1;

        r0 := @this: org.waveprotocol.wave.model.document.parser.BufferedXmlParser;

        $r1 = r0.<org.waveprotocol.wave.model.document.parser.BufferedXmlParser: java.util.Queue tokens>;

        $z0 = interfaceinvoke $r1.<java.util.Queue: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    void parse() throws org.waveprotocol.wave.model.document.parser.XmlParseException
    {
        org.waveprotocol.wave.model.document.parser.BufferedXmlParser r0;
        org.waveprotocol.wave.model.document.parser.XmlParseException $r7;
        org.waveprotocol.wave.model.document.parser.Item $r5;
        org.waveprotocol.wave.model.document.parser.RuntimeXmlParseException $r6;
        java.util.Queue $r4;
        org.waveprotocol.wave.model.document.parser.StreamingXmlParser $r1, $r2, $r3;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.document.parser.BufferedXmlParser;

     label1:
        $r1 = r0.<org.waveprotocol.wave.model.document.parser.BufferedXmlParser: org.waveprotocol.wave.model.document.parser.StreamingXmlParser parserImpl>;

        $z0 = virtualinvoke $r1.<org.waveprotocol.wave.model.document.parser.StreamingXmlParser: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = r0.<org.waveprotocol.wave.model.document.parser.BufferedXmlParser: org.waveprotocol.wave.model.document.parser.StreamingXmlParser parserImpl>;

        virtualinvoke $r2.<org.waveprotocol.wave.model.document.parser.StreamingXmlParser: org.waveprotocol.wave.model.document.parser.ItemType next()>();

        $r4 = r0.<org.waveprotocol.wave.model.document.parser.BufferedXmlParser: java.util.Queue tokens>;

        $r3 = r0.<org.waveprotocol.wave.model.document.parser.BufferedXmlParser: org.waveprotocol.wave.model.document.parser.StreamingXmlParser parserImpl>;

        $r5 = virtualinvoke $r3.<org.waveprotocol.wave.model.document.parser.StreamingXmlParser: org.waveprotocol.wave.model.document.parser.Item getCurrentItem()>();

        interfaceinvoke $r4.<java.util.Queue: boolean add(java.lang.Object)>($r5);

        goto label1;

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        $r7 = new org.waveprotocol.wave.model.document.parser.XmlParseException;

        specialinvoke $r7.<org.waveprotocol.wave.model.document.parser.XmlParseException: void <init>(java.lang.Throwable)>($r6);

        throw $r7;

     label4:
        return;

        catch org.waveprotocol.wave.model.document.parser.RuntimeXmlParseException from label1 to label2 with label3;
    }

    public void remove()
    {
        org.waveprotocol.wave.model.document.parser.BufferedXmlParser r0;

        r0 := @this: org.waveprotocol.wave.model.document.parser.BufferedXmlParser;

        staticinvoke <org.waveprotocol.wave.model.util.Preconditions: void illegalState(java.lang.Object)>("Not implemented");

        return;
    }

    public volatile java.lang.Object next()
    {
        org.waveprotocol.wave.model.document.parser.BufferedXmlParser r0;
        org.waveprotocol.wave.model.document.parser.ItemType $r1;

        r0 := @this: org.waveprotocol.wave.model.document.parser.BufferedXmlParser;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.parser.BufferedXmlParser: org.waveprotocol.wave.model.document.parser.ItemType next()>();

        return $r1;
    }
}
