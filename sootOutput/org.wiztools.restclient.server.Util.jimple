class org.wiztools.restclient.server.Util extends java.lang.Object
{
    private static final int MAX_BODY_CHARS;

    private void <init>()
    {
        org.wiztools.restclient.server.Util r0;

        r0 := @this: org.wiztools.restclient.server.Util;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static java.lang.String inputStreamToString(java.io.InputStream) throws java.io.IOException
    {
        byte[] $r5;
        java.nio.ByteBuffer $r6;
        java.nio.charset.Charset $r0;
        java.nio.charset.CodingErrorAction $r2, $r3;
        int $i0;
        java.lang.String $r8, $r10, $r13, $r14;
        boolean $z0;
        java.nio.CharBuffer $r7;
        java.nio.charset.CharsetDecoder $r1;
        java.lang.StringBuilder $r9, $r11, $r12;
        java.io.InputStream r4;

        r4 := @parameter0: java.io.InputStream;

        $r0 = <org.wiztools.commons.Charsets: java.nio.charset.Charset US_ASCII>;

        $r1 = virtualinvoke $r0.<java.nio.charset.Charset: java.nio.charset.CharsetDecoder newDecoder()>();

        $r2 = <java.nio.charset.CodingErrorAction: java.nio.charset.CodingErrorAction IGNORE>;

        virtualinvoke $r1.<java.nio.charset.CharsetDecoder: java.nio.charset.CharsetDecoder onMalformedInput(java.nio.charset.CodingErrorAction)>($r2);

        $r3 = <java.nio.charset.CodingErrorAction: java.nio.charset.CodingErrorAction REPLACE>;

        virtualinvoke $r1.<java.nio.charset.CharsetDecoder: java.nio.charset.CharsetDecoder onUnmappableCharacter(java.nio.charset.CodingErrorAction)>($r3);

        virtualinvoke $r1.<java.nio.charset.CharsetDecoder: java.nio.charset.CharsetDecoder replaceWith(java.lang.String)>("?");

        $r5 = staticinvoke <org.wiztools.commons.StreamUtil: byte[] inputStream2Bytes(java.io.InputStream)>(r4);

        $r6 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r5);

        $r7 = virtualinvoke $r1.<java.nio.charset.CharsetDecoder: java.nio.CharBuffer decode(java.nio.ByteBuffer)>($r6);

        $r8 = virtualinvoke $r7.<java.nio.CharBuffer: java.lang.String toString()>();

        $i0 = virtualinvoke $r8.<java.lang.String: int length()>();

        if $i0 >= 101 goto label1;

        $r14 = $r8;

        goto label2;

     label1:
        $r14 = virtualinvoke $r8.<java.lang.String: java.lang.String substring(int)>(100);

     label2:
        $z0 = virtualinvoke $r14.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label3;

        return "";

     label3:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r14.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\p{C}", "?");

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("...");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;
    }

    public static void <clinit>()
    {
        <org.wiztools.restclient.server.Util: int MAX_BODY_CHARS> = 100;

        return;
    }
}
