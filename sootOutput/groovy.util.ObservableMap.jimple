public class groovy.util.ObservableMap extends java.lang.Object implements java.util.Map
{
    private java.util.Map delegate;
    private java.beans.PropertyChangeSupport pcs;
    private groovy.lang.Closure test;

    public void <init>()
    {
        java.util.LinkedHashMap $r1;
        groovy.util.ObservableMap r0;

        r0 := @this: groovy.util.ObservableMap;

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>()>();

        specialinvoke r0.<groovy.util.ObservableMap: void <init>(java.util.Map,groovy.lang.Closure)>($r1, null);

        return;
    }

    public void <init>(groovy.lang.Closure)
    {
        java.util.LinkedHashMap $r1;
        groovy.lang.Closure r2;
        groovy.util.ObservableMap r0;

        r0 := @this: groovy.util.ObservableMap;

        r2 := @parameter0: groovy.lang.Closure;

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>()>();

        specialinvoke r0.<groovy.util.ObservableMap: void <init>(java.util.Map,groovy.lang.Closure)>($r1, r2);

        return;
    }

    public void <init>(java.util.Map)
    {
        groovy.util.ObservableMap r0;
        java.util.Map r1;

        r0 := @this: groovy.util.ObservableMap;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<groovy.util.ObservableMap: void <init>(java.util.Map,groovy.lang.Closure)>(r1, null);

        return;
    }

    public void <init>(java.util.Map, groovy.lang.Closure)
    {
        java.util.Map r1;
        groovy.lang.Closure r2;
        java.beans.PropertyChangeSupport $r3;
        groovy.util.ObservableMap r0;

        r0 := @this: groovy.util.ObservableMap;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: groovy.lang.Closure;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<groovy.util.ObservableMap: java.util.Map delegate> = r1;

        r0.<groovy.util.ObservableMap: groovy.lang.Closure test> = r2;

        $r3 = new java.beans.PropertyChangeSupport;

        specialinvoke $r3.<java.beans.PropertyChangeSupport: void <init>(java.lang.Object)>(r0);

        r0.<groovy.util.ObservableMap: java.beans.PropertyChangeSupport pcs> = $r3;

        return;
    }

    public void clear()
    {
        groovy.util.ObservableMap$PropertyClearedEvent $r4;
        java.util.HashMap $r0;
        groovy.util.ObservableMap r1;
        java.util.Map $r2, $r3, $r6;
        java.beans.PropertyChangeSupport $r5;
        boolean $z0;

        r1 := @this: groovy.util.ObservableMap;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        $r2 = r1.<groovy.util.ObservableMap: java.util.Map delegate>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r6 = r1.<groovy.util.ObservableMap: java.util.Map delegate>;

        interfaceinvoke $r0.<java.util.Map: void putAll(java.util.Map)>($r6);

     label1:
        $r3 = r1.<groovy.util.ObservableMap: java.util.Map delegate>;

        interfaceinvoke $r3.<java.util.Map: void clear()>();

        if $r0 == null goto label2;

        $r5 = r1.<groovy.util.ObservableMap: java.beans.PropertyChangeSupport pcs>;

        $r4 = new groovy.util.ObservableMap$PropertyClearedEvent;

        specialinvoke $r4.<groovy.util.ObservableMap$PropertyClearedEvent: void <init>(java.lang.Object,java.util.Map)>(r1, $r0);

        virtualinvoke $r5.<java.beans.PropertyChangeSupport: void firePropertyChange(java.beans.PropertyChangeEvent)>($r4);

     label2:
        return;
    }

    public boolean containsKey(java.lang.Object)
    {
        java.util.Map $r2;
        java.lang.Object r1;
        groovy.util.ObservableMap r0;
        boolean $z0;

        r0 := @this: groovy.util.ObservableMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<groovy.util.ObservableMap: java.util.Map delegate>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean containsValue(java.lang.Object)
    {
        java.util.Map $r2;
        java.lang.Object r1;
        groovy.util.ObservableMap r0;
        boolean $z0;

        r0 := @this: groovy.util.ObservableMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<groovy.util.ObservableMap: java.util.Map delegate>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsValue(java.lang.Object)>(r1);

        return $z0;
    }

    public java.util.Set entrySet()
    {
        java.util.Set $r2;
        groovy.util.ObservableMap r0;
        java.util.Map $r1;

        r0 := @this: groovy.util.ObservableMap;

        $r1 = r0.<groovy.util.ObservableMap: java.util.Map delegate>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        return $r2;
    }

    public boolean equals(java.lang.Object)
    {
        java.util.Map $r2;
        java.lang.Object r1;
        groovy.util.ObservableMap r0;
        boolean $z0;

        r0 := @this: groovy.util.ObservableMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<groovy.util.ObservableMap: java.util.Map delegate>;

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    public java.lang.Object get(java.lang.Object)
    {
        java.util.Map $r2;
        java.lang.Object r1, $r3;
        groovy.util.ObservableMap r0;

        r0 := @this: groovy.util.ObservableMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<groovy.util.ObservableMap: java.util.Map delegate>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        return $r3;
    }

    public int hashCode()
    {
        int $i0;
        groovy.util.ObservableMap r0;
        java.util.Map $r1;

        r0 := @this: groovy.util.ObservableMap;

        $r1 = r0.<groovy.util.ObservableMap: java.util.Map delegate>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    public boolean isEmpty()
    {
        groovy.util.ObservableMap r0;
        java.util.Map $r1;
        boolean $z0;

        r0 := @this: groovy.util.ObservableMap;

        $r1 = r0.<groovy.util.ObservableMap: java.util.Map delegate>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>();

        return $z0;
    }

    public java.util.Set keySet()
    {
        java.util.Set $r2;
        groovy.util.ObservableMap r0;
        java.util.Map $r1;

        r0 := @this: groovy.util.ObservableMap;

        $r1 = r0.<groovy.util.ObservableMap: java.util.Map delegate>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        return $r2;
    }

    public java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        groovy.util.ObservableMap$PropertyAddedEvent $r10, $r21;
        groovy.lang.Closure $r3, $r15, $r16, $r25;
        java.util.Map $r2, $r5, $r13;
        boolean $z0, z1, $z2, $z3, $z5, $z6;
        java.lang.Object[] $r24;
        groovy.util.ObservableMap r0;
        int $i0;
        java.lang.Boolean $r17;
        java.lang.String $r9, $r12, $r20, $r23;
        groovy.util.ObservableMap$PropertyUpdatedEvent $r7, $r18;
        java.beans.PropertyChangeSupport $r8, $r11, $r19, $r22;
        java.lang.Object r1, r4, $r6, $r14, r26, r27;

        r0 := @this: groovy.util.ObservableMap;

        r1 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.Object;

        $r2 = r0.<groovy.util.ObservableMap: java.util.Map delegate>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $z6 = 1;

        $z5 = 1;

        goto label2;

     label1:
        $z6 = 0;

        $z5 = 0;

     label2:
        z1 = $z5;

        $r3 = r0.<groovy.util.ObservableMap: groovy.lang.Closure test>;

        if $r3 == null goto label7;

        $r13 = r0.<groovy.util.ObservableMap: java.util.Map delegate>;

        $r14 = interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r4);

        r26 = $r14;

        $r15 = r0.<groovy.util.ObservableMap: groovy.lang.Closure test>;

        $i0 = virtualinvoke $r15.<groovy.lang.Closure: int getMaximumNumberOfParameters()>();

        if $i0 != 2 goto label3;

        $r25 = r0.<groovy.util.ObservableMap: groovy.lang.Closure test>;

        $r24 = newarray (java.lang.Object)[2];

        $r24[0] = r1;

        $r24[1] = r4;

        r27 = virtualinvoke $r25.<groovy.lang.Closure: java.lang.Object call(java.lang.Object[])>($r24);

        goto label4;

     label3:
        $r16 = r0.<groovy.util.ObservableMap: groovy.lang.Closure test>;

        r27 = virtualinvoke $r16.<groovy.lang.Closure: java.lang.Object call(java.lang.Object)>(r4);

     label4:
        if r27 == null goto label6;

        $z2 = r27 instanceof java.lang.Boolean;

        if $z2 == 0 goto label6;

        $r17 = (java.lang.Boolean) r27;

        $z3 = virtualinvoke $r17.<java.lang.Boolean: boolean booleanValue()>();

        if $z3 == 0 goto label6;

        if z1 == 0 goto label5;

        $r22 = r0.<groovy.util.ObservableMap: java.beans.PropertyChangeSupport pcs>;

        $r21 = new groovy.util.ObservableMap$PropertyAddedEvent;

        $r23 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        specialinvoke $r21.<groovy.util.ObservableMap$PropertyAddedEvent: void <init>(java.lang.Object,java.lang.String,java.lang.Object)>(r0, $r23, r4);

        virtualinvoke $r22.<java.beans.PropertyChangeSupport: void firePropertyChange(java.beans.PropertyChangeEvent)>($r21);

        goto label6;

     label5:
        if $r14 == r4 goto label6;

        $r19 = r0.<groovy.util.ObservableMap: java.beans.PropertyChangeSupport pcs>;

        $r18 = new groovy.util.ObservableMap$PropertyUpdatedEvent;

        $r20 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        specialinvoke $r18.<groovy.util.ObservableMap$PropertyUpdatedEvent: void <init>(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)>(r0, $r20, $r14, r4);

        virtualinvoke $r19.<java.beans.PropertyChangeSupport: void firePropertyChange(java.beans.PropertyChangeEvent)>($r18);

     label6:
        goto label9;

     label7:
        $r5 = r0.<groovy.util.ObservableMap: java.util.Map delegate>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r4);

        r26 = $r6;

        if $z6 == 0 goto label8;

        $r11 = r0.<groovy.util.ObservableMap: java.beans.PropertyChangeSupport pcs>;

        $r10 = new groovy.util.ObservableMap$PropertyAddedEvent;

        $r12 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        specialinvoke $r10.<groovy.util.ObservableMap$PropertyAddedEvent: void <init>(java.lang.Object,java.lang.String,java.lang.Object)>(r0, $r12, r4);

        virtualinvoke $r11.<java.beans.PropertyChangeSupport: void firePropertyChange(java.beans.PropertyChangeEvent)>($r10);

        goto label9;

     label8:
        if $r6 == r4 goto label9;

        $r8 = r0.<groovy.util.ObservableMap: java.beans.PropertyChangeSupport pcs>;

        $r7 = new groovy.util.ObservableMap$PropertyUpdatedEvent;

        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        specialinvoke $r7.<groovy.util.ObservableMap$PropertyUpdatedEvent: void <init>(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)>(r0, $r9, $r6, r4);

        virtualinvoke $r8.<java.beans.PropertyChangeSupport: void firePropertyChange(java.beans.PropertyChangeEvent)>($r7);

     label9:
        return r26;
    }

    public void putAll(java.util.Map)
    {
        groovy.util.ObservableMap$PropertyAddedEvent $r21, $r28;
        groovy.util.ObservableMap$PropertyEvent[] $r7, $r9, $r10;
        groovy.lang.Closure $r17, $r24, $r25, $r30;
        java.util.Map r0, $r16, $r18, $r22;
        boolean $z0, $z1, z2, $z3, $z4, $z6, $z7;
        java.util.Set $r2;
        java.lang.Object[] $r8, $r29;
        groovy.util.ObservableMap$MultiPropertyEvent $r5;
        groovy.util.ObservableMap r4;
        java.util.ArrayList $r1;
        int $i0, $i1, $i2;
        java.lang.Boolean $r26;
        java.lang.String $r14;
        java.util.Map$Entry r12;
        java.util.Iterator $r3;
        groovy.util.ObservableMap$PropertyUpdatedEvent $r20, $r27;
        java.beans.PropertyChangeSupport $r6;
        java.lang.Object $r11, $r13, $r15, $r19, $r23, r31;

        r4 := @this: groovy.util.ObservableMap;

        r0 := @parameter0: java.util.Map;

        if r0 == null goto label12;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r2 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r11 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r12 = (java.util.Map$Entry) $r11;

        $r13 = interfaceinvoke r12.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r14 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r13);

        $r15 = interfaceinvoke r12.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r16 = r4.<groovy.util.ObservableMap: java.util.Map delegate>;

        $z1 = interfaceinvoke $r16.<java.util.Map: boolean containsKey(java.lang.Object)>($r14);

        if $z1 != 0 goto label02;

        $z7 = 1;

        $z6 = 1;

        goto label03;

     label02:
        $z7 = 0;

        $z6 = 0;

     label03:
        z2 = $z6;

        $r17 = r4.<groovy.util.ObservableMap: groovy.lang.Closure test>;

        if $r17 == null goto label08;

        $r22 = r4.<groovy.util.ObservableMap: java.util.Map delegate>;

        $r23 = interfaceinvoke $r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, $r15);

        $r24 = r4.<groovy.util.ObservableMap: groovy.lang.Closure test>;

        $i2 = virtualinvoke $r24.<groovy.lang.Closure: int getMaximumNumberOfParameters()>();

        if $i2 != 2 goto label04;

        $r30 = r4.<groovy.util.ObservableMap: groovy.lang.Closure test>;

        $r29 = newarray (java.lang.Object)[2];

        $r29[0] = $r14;

        $r29[1] = $r15;

        r31 = virtualinvoke $r30.<groovy.lang.Closure: java.lang.Object call(java.lang.Object[])>($r29);

        goto label05;

     label04:
        $r25 = r4.<groovy.util.ObservableMap: groovy.lang.Closure test>;

        r31 = virtualinvoke $r25.<groovy.lang.Closure: java.lang.Object call(java.lang.Object)>($r15);

     label05:
        if r31 == null goto label07;

        $z3 = r31 instanceof java.lang.Boolean;

        if $z3 == 0 goto label07;

        $r26 = (java.lang.Boolean) r31;

        $z4 = virtualinvoke $r26.<java.lang.Boolean: boolean booleanValue()>();

        if $z4 == 0 goto label07;

        if z2 == 0 goto label06;

        $r28 = new groovy.util.ObservableMap$PropertyAddedEvent;

        specialinvoke $r28.<groovy.util.ObservableMap$PropertyAddedEvent: void <init>(java.lang.Object,java.lang.String,java.lang.Object)>(r4, $r14, $r15);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r28);

        goto label07;

     label06:
        if $r23 == $r15 goto label07;

        $r27 = new groovy.util.ObservableMap$PropertyUpdatedEvent;

        specialinvoke $r27.<groovy.util.ObservableMap$PropertyUpdatedEvent: void <init>(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)>(r4, $r14, $r23, $r15);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r27);

     label07:
        goto label10;

     label08:
        $r18 = r4.<groovy.util.ObservableMap: java.util.Map delegate>;

        $r19 = interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, $r15);

        if $z7 == 0 goto label09;

        $r21 = new groovy.util.ObservableMap$PropertyAddedEvent;

        specialinvoke $r21.<groovy.util.ObservableMap$PropertyAddedEvent: void <init>(java.lang.Object,java.lang.String,java.lang.Object)>(r4, $r14, $r15);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r21);

        goto label10;

     label09:
        if $r19 == $r15 goto label10;

        $r20 = new groovy.util.ObservableMap$PropertyUpdatedEvent;

        specialinvoke $r20.<groovy.util.ObservableMap$PropertyUpdatedEvent: void <init>(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)>(r4, $r14, $r19, $r15);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r20);

     label10:
        goto label01;

     label11:
        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 <= 0 goto label12;

        $r6 = r4.<groovy.util.ObservableMap: java.beans.PropertyChangeSupport pcs>;

        $r5 = new groovy.util.ObservableMap$MultiPropertyEvent;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        $r7 = newarray (groovy.util.ObservableMap$PropertyEvent)[$i1];

        $r8 = interfaceinvoke $r1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r7);

        $r9 = (groovy.util.ObservableMap$PropertyEvent[]) $r8;

        $r10 = (groovy.util.ObservableMap$PropertyEvent[]) $r9;

        specialinvoke $r5.<groovy.util.ObservableMap$MultiPropertyEvent: void <init>(java.lang.Object,groovy.util.ObservableMap$PropertyEvent[])>(r4, $r10);

        virtualinvoke $r6.<java.beans.PropertyChangeSupport: void firePropertyChange(java.beans.PropertyChangeEvent)>($r5);

     label12:
        return;
    }

    public java.lang.Object remove(java.lang.Object)
    {
        groovy.util.ObservableMap$PropertyRemovedEvent $r4;
        java.util.Map $r2;
        java.beans.PropertyChangeSupport $r5;
        java.lang.Object r1, $r3;
        java.lang.String $r6;
        groovy.util.ObservableMap r0;

        r0 := @this: groovy.util.ObservableMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<groovy.util.ObservableMap: java.util.Map delegate>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        if r1 == null goto label1;

        $r5 = r0.<groovy.util.ObservableMap: java.beans.PropertyChangeSupport pcs>;

        $r4 = new groovy.util.ObservableMap$PropertyRemovedEvent;

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        specialinvoke $r4.<groovy.util.ObservableMap$PropertyRemovedEvent: void <init>(java.lang.Object,java.lang.String,java.lang.Object)>(r0, $r6, $r3);

        virtualinvoke $r5.<java.beans.PropertyChangeSupport: void firePropertyChange(java.beans.PropertyChangeEvent)>($r4);

     label1:
        return $r3;
    }

    public int size()
    {
        int $i0;
        groovy.util.ObservableMap r0;
        java.util.Map $r1;

        r0 := @this: groovy.util.ObservableMap;

        $r1 = r0.<groovy.util.ObservableMap: java.util.Map delegate>;

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        return $i0;
    }

    public java.util.Collection values()
    {
        groovy.util.ObservableMap r0;
        java.util.Map $r1;
        java.util.Collection $r2;

        r0 := @this: groovy.util.ObservableMap;

        $r1 = r0.<groovy.util.ObservableMap: java.util.Map delegate>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        return $r2;
    }

    public void addPropertyChangeListener(java.beans.PropertyChangeListener)
    {
        java.beans.PropertyChangeSupport $r2;
        groovy.util.ObservableMap r0;
        java.beans.PropertyChangeListener r1;

        r0 := @this: groovy.util.ObservableMap;

        r1 := @parameter0: java.beans.PropertyChangeListener;

        $r2 = r0.<groovy.util.ObservableMap: java.beans.PropertyChangeSupport pcs>;

        virtualinvoke $r2.<java.beans.PropertyChangeSupport: void addPropertyChangeListener(java.beans.PropertyChangeListener)>(r1);

        return;
    }

    public void addPropertyChangeListener(java.lang.String, java.beans.PropertyChangeListener)
    {
        java.beans.PropertyChangeListener r2;
        java.beans.PropertyChangeSupport $r3;
        java.lang.String r1;
        groovy.util.ObservableMap r0;

        r0 := @this: groovy.util.ObservableMap;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.beans.PropertyChangeListener;

        $r3 = r0.<groovy.util.ObservableMap: java.beans.PropertyChangeSupport pcs>;

        virtualinvoke $r3.<java.beans.PropertyChangeSupport: void addPropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)>(r1, r2);

        return;
    }

    public java.beans.PropertyChangeListener[] getPropertyChangeListeners()
    {
        java.beans.PropertyChangeSupport $r1;
        java.beans.PropertyChangeListener[] $r2;
        groovy.util.ObservableMap r0;

        r0 := @this: groovy.util.ObservableMap;

        $r1 = r0.<groovy.util.ObservableMap: java.beans.PropertyChangeSupport pcs>;

        $r2 = virtualinvoke $r1.<java.beans.PropertyChangeSupport: java.beans.PropertyChangeListener[] getPropertyChangeListeners()>();

        return $r2;
    }

    public java.beans.PropertyChangeListener[] getPropertyChangeListeners(java.lang.String)
    {
        java.beans.PropertyChangeListener[] $r3;
        java.beans.PropertyChangeSupport $r2;
        java.lang.String r1;
        groovy.util.ObservableMap r0;

        r0 := @this: groovy.util.ObservableMap;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<groovy.util.ObservableMap: java.beans.PropertyChangeSupport pcs>;

        $r3 = virtualinvoke $r2.<java.beans.PropertyChangeSupport: java.beans.PropertyChangeListener[] getPropertyChangeListeners(java.lang.String)>(r1);

        return $r3;
    }

    public void removePropertyChangeListener(java.beans.PropertyChangeListener)
    {
        java.beans.PropertyChangeSupport $r2;
        groovy.util.ObservableMap r0;
        java.beans.PropertyChangeListener r1;

        r0 := @this: groovy.util.ObservableMap;

        r1 := @parameter0: java.beans.PropertyChangeListener;

        $r2 = r0.<groovy.util.ObservableMap: java.beans.PropertyChangeSupport pcs>;

        virtualinvoke $r2.<java.beans.PropertyChangeSupport: void removePropertyChangeListener(java.beans.PropertyChangeListener)>(r1);

        return;
    }

    public void removePropertyChangeListener(java.lang.String, java.beans.PropertyChangeListener)
    {
        java.beans.PropertyChangeListener r2;
        java.beans.PropertyChangeSupport $r3;
        java.lang.String r1;
        groovy.util.ObservableMap r0;

        r0 := @this: groovy.util.ObservableMap;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.beans.PropertyChangeListener;

        $r3 = r0.<groovy.util.ObservableMap: java.beans.PropertyChangeSupport pcs>;

        virtualinvoke $r3.<java.beans.PropertyChangeSupport: void removePropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)>(r1, r2);

        return;
    }

    public boolean hasListeners(java.lang.String)
    {
        java.beans.PropertyChangeSupport $r2;
        java.lang.String r1;
        groovy.util.ObservableMap r0;
        boolean $z0;

        r0 := @this: groovy.util.ObservableMap;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<groovy.util.ObservableMap: java.beans.PropertyChangeSupport pcs>;

        $z0 = virtualinvoke $r2.<java.beans.PropertyChangeSupport: boolean hasListeners(java.lang.String)>(r1);

        return $z0;
    }
}
