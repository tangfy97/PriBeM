public class org.springframework.util.xml.SimpleNamespaceContext extends java.lang.Object implements javax.xml.namespace.NamespaceContext
{
    private java.util.Map prefixToNamespaceUri;
    private java.util.Map namespaceUriToPrefixes;
    private java.lang.String defaultNamespaceUri;

    public void <init>()
    {
        org.springframework.util.xml.SimpleNamespaceContext r0;
        java.util.HashMap $r1, $r2;

        r0 := @this: org.springframework.util.xml.SimpleNamespaceContext;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.springframework.util.xml.SimpleNamespaceContext: java.util.Map prefixToNamespaceUri> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.springframework.util.xml.SimpleNamespaceContext: java.util.Map namespaceUriToPrefixes> = $r2;

        r0.<org.springframework.util.xml.SimpleNamespaceContext: java.lang.String defaultNamespaceUri> = "";

        return;
    }

    public java.lang.String getNamespaceURI(java.lang.String)
    {
        java.util.Map $r5, $r6;
        org.springframework.util.xml.SimpleNamespaceContext r4;
        java.lang.Object $r7;
        java.lang.String r0, $r1, $r2, $r3, $r8, $r9;
        boolean $z0, $z1, $z2, $z3;

        r4 := @this: org.springframework.util.xml.SimpleNamespaceContext;

        r0 := @parameter0: java.lang.String;

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r0, "prefix is null");

        $r1 = "xml";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        return "http://www.w3.org/XML/1998/namespace";

     label1:
        $r2 = "xmlns";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label2;

        return "http://www.w3.org/2000/xmlns/";

     label2:
        $r3 = "";

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z2 == 0 goto label3;

        $r9 = r4.<org.springframework.util.xml.SimpleNamespaceContext: java.lang.String defaultNamespaceUri>;

        return $r9;

     label3:
        $r5 = r4.<org.springframework.util.xml.SimpleNamespaceContext: java.util.Map prefixToNamespaceUri>;

        $z3 = interfaceinvoke $r5.<java.util.Map: boolean containsKey(java.lang.Object)>(r0);

        if $z3 == 0 goto label4;

        $r6 = r4.<org.springframework.util.xml.SimpleNamespaceContext: java.util.Map prefixToNamespaceUri>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        $r8 = (java.lang.String) $r7;

        return $r8;

     label4:
        return "";
    }

    public java.lang.String getPrefix(java.lang.String)
    {
        java.util.List $r2;
        org.springframework.util.xml.SimpleNamespaceContext r0;
        java.lang.Object $r3;
        java.lang.String r1, $r4;
        boolean $z0;

        r0 := @this: org.springframework.util.xml.SimpleNamespaceContext;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<org.springframework.util.xml.SimpleNamespaceContext: java.util.List getPrefixesInternal(java.lang.String)>(r1);

        $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        $r4 = (java.lang.String) $r3;

     label2:
        return $r4;
    }

    public java.util.Iterator getPrefixes(java.lang.String)
    {
        java.util.List $r2;
        java.util.Iterator $r3;
        org.springframework.util.xml.SimpleNamespaceContext r0;
        java.lang.String r1;

        r0 := @this: org.springframework.util.xml.SimpleNamespaceContext;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<org.springframework.util.xml.SimpleNamespaceContext: java.util.List getPrefixesInternal(java.lang.String)>(r1);

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

        return $r3;
    }

    public void setBindings(java.util.Map)
    {
        java.util.Map$Entry r4;
        java.util.Iterator $r2;
        java.util.Set $r1;
        java.util.Map r0;
        org.springframework.util.xml.SimpleNamespaceContext r5;
        java.lang.Object $r3, $r6, $r8;
        java.lang.String $r7, $r9;
        boolean $z0;

        r5 := @this: org.springframework.util.xml.SimpleNamespaceContext;

        r0 := @parameter0: java.util.Map;

        $r1 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r3;

        $r6 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = (java.lang.String) $r6;

        $r8 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r9 = (java.lang.String) $r8;

        virtualinvoke r5.<org.springframework.util.xml.SimpleNamespaceContext: void bindNamespaceUri(java.lang.String,java.lang.String)>($r7, $r9);

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return;
    }

    public void bindDefaultNamespaceUri(java.lang.String)
    {
        org.springframework.util.xml.SimpleNamespaceContext r0;
        java.lang.String r1;

        r0 := @this: org.springframework.util.xml.SimpleNamespaceContext;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.springframework.util.xml.SimpleNamespaceContext: void bindNamespaceUri(java.lang.String,java.lang.String)>("", r1);

        return;
    }

    public void bindNamespaceUri(java.lang.String, java.lang.String)
    {
        java.util.List $r5;
        java.util.Map $r4;
        org.springframework.util.xml.SimpleNamespaceContext r3;
        java.lang.String r0, r1, $r2;
        boolean $z0;

        r3 := @this: org.springframework.util.xml.SimpleNamespaceContext;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r0, "No prefix given");

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r1, "No namespaceUri given");

        $r2 = "";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        r3.<org.springframework.util.xml.SimpleNamespaceContext: java.lang.String defaultNamespaceUri> = r1;

        goto label2;

     label1:
        $r4 = r3.<org.springframework.util.xml.SimpleNamespaceContext: java.util.Map prefixToNamespaceUri>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r1);

        $r5 = specialinvoke r3.<org.springframework.util.xml.SimpleNamespaceContext: java.util.List getPrefixesInternal(java.lang.String)>(r1);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r0);

     label2:
        return;
    }

    public void clear()
    {
        org.springframework.util.xml.SimpleNamespaceContext r0;
        java.util.Map $r1;

        r0 := @this: org.springframework.util.xml.SimpleNamespaceContext;

        $r1 = r0.<org.springframework.util.xml.SimpleNamespaceContext: java.util.Map prefixToNamespaceUri>;

        interfaceinvoke $r1.<java.util.Map: void clear()>();

        return;
    }

    public java.util.Iterator getBoundPrefixes()
    {
        java.util.Iterator $r3;
        java.util.Map $r1;
        org.springframework.util.xml.SimpleNamespaceContext r0;
        java.util.Set $r2;

        r0 := @this: org.springframework.util.xml.SimpleNamespaceContext;

        $r1 = r0.<org.springframework.util.xml.SimpleNamespaceContext: java.util.Map prefixToNamespaceUri>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        return $r3;
    }

    private java.util.List getPrefixesInternal(java.lang.String)
    {
        java.util.ArrayList $r7;
        java.util.Map $r5, $r8;
        org.springframework.util.xml.SimpleNamespaceContext r0;
        java.lang.String r1, $r2, $r3, $r4;
        boolean $z0, $z1, $z2;
        java.util.List $r9, $r10, $r11, r12;
        java.lang.Object $r6;

        r0 := @this: org.springframework.util.xml.SimpleNamespaceContext;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.springframework.util.xml.SimpleNamespaceContext: java.lang.String defaultNamespaceUri>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r11 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>("");

        return $r11;

     label1:
        $r3 = "http://www.w3.org/XML/1998/namespace";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

        $r10 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>("xml");

        return $r10;

     label2:
        $r4 = "http://www.w3.org/2000/xmlns/";

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z2 == 0 goto label3;

        $r9 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>("xmlns");

        return $r9;

     label3:
        $r5 = r0.<org.springframework.util.xml.SimpleNamespaceContext: java.util.Map namespaceUriToPrefixes>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r12 = (java.util.List) $r6;

        if r12 != null goto label4;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r12 = $r7;

        $r8 = r0.<org.springframework.util.xml.SimpleNamespaceContext: java.util.Map namespaceUriToPrefixes>;

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r7);

     label4:
        return r12;
    }

    public void removeBinding(java.lang.String)
    {
        java.util.List $r6;
        java.util.Map $r3;
        org.springframework.util.xml.SimpleNamespaceContext r2;
        java.lang.Object $r4;
        java.lang.String r0, $r1, r5;
        boolean $z0;

        r2 := @this: org.springframework.util.xml.SimpleNamespaceContext;

        r0 := @parameter0: java.lang.String;

        $r1 = "";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        r2.<org.springframework.util.xml.SimpleNamespaceContext: java.lang.String defaultNamespaceUri> = "";

        goto label2;

     label1:
        $r3 = r2.<org.springframework.util.xml.SimpleNamespaceContext: java.util.Map prefixToNamespaceUri>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r0);

        r5 = (java.lang.String) $r4;

        $r6 = specialinvoke r2.<org.springframework.util.xml.SimpleNamespaceContext: java.util.List getPrefixesInternal(java.lang.String)>(r5);

        interfaceinvoke $r6.<java.util.List: boolean remove(java.lang.Object)>(r0);

     label2:
        return;
    }
}
