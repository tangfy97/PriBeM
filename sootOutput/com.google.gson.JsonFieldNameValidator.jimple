class com.google.gson.JsonFieldNameValidator extends java.lang.Object
{
    private static final java.util.regex.Pattern JSON_FIELD_NAME_PATTERN;

    void <init>()
    {
        com.google.gson.JsonFieldNameValidator r0;

        r0 := @this: com.google.gson.JsonFieldNameValidator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.String validate(java.lang.String)
    {
        java.lang.IllegalArgumentException $r5;
        com.google.gson.JsonFieldNameValidator r10;
        java.util.regex.Matcher $r4;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String r0, $r1, $r2, $r9;
        java.util.regex.Pattern $r3;
        boolean $z0, $z1, $z2;

        r10 := @this: com.google.gson.JsonFieldNameValidator;

        r0 := @parameter0: java.lang.String;

        staticinvoke <com.google.gson.Preconditions: void checkNotNull(java.lang.Object)>(r0);

        $r1 = "";

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        staticinvoke <com.google.gson.Preconditions: void checkArgument(boolean)>($z2);

        $r3 = <com.google.gson.JsonFieldNameValidator: java.util.regex.Pattern JSON_FIELD_NAME_PATTERN>;

        $r4 = virtualinvoke $r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

        $z1 = virtualinvoke $r4.<java.util.regex.Matcher: boolean matches()>();

        if $z1 != 0 goto label3;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a valid JSON field name.");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label3:
        return r0;
    }

    static void <clinit>()
    {
        java.util.regex.Pattern $r0;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(^[a-zA-Z][a-zA-Z0-9\\$_\\-]*$)|(^[\\$_][a-zA-Z][a-zA-Z0-9\\$_\\-]*$)");

        <com.google.gson.JsonFieldNameValidator: java.util.regex.Pattern JSON_FIELD_NAME_PATTERN> = $r0;

        return;
    }
}
