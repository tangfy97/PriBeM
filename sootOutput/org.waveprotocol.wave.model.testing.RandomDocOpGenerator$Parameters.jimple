public final class org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters extends java.lang.Object
{
    int maxOpeningComponents;
    int maxInsertLength;
    int maxDeleteLength;
    boolean valid;
    int maxSkipAfterEnd;
    java.util.List elementTypes;
    java.util.List attributeNames;
    java.util.List attributeValues;
    java.util.List annotationOptions;
    public static final java.util.List RENDERABLE_ANNOTATION_OPTIONS;

    public java.util.List attributeValues()
    {
        java.util.List $r1, $r2;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters r3;
        java.lang.String[] $r0;

        r3 := @this: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters;

        $r0 = newarray (java.lang.String)[15];

        $r0[0] = "title";

        $r0[1] = "li";

        $r0[2] = "h1";

        $r0[3] = "h2";

        $r0[4] = "h3";

        $r0[5] = "h4";

        $r0[6] = "";

        $r0[7] = "0";

        $r0[8] = "1";

        $r0[9] = "2";

        $r0[10] = "3";

        $r0[11] = "4";

        $r0[12] = "5";

        $r0[13] = "114";

        $r0[14] = "9817";

        $r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0);

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    public void <init>()
    {
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters r0;
        java.lang.String[] $r1, $r4, $r7, $r12, $r15, $r18;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters$AnnotationOption $r11, $r14, $r17;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters$AnnotationOption[] $r10;
        java.util.List $r2, $r3, $r5, $r6, $r8, $r9, $r13, $r16, $r19, $r20, $r21;

        r0 := @this: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters: int maxOpeningComponents> = 16;

        r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters: int maxInsertLength> = 10;

        r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters: int maxDeleteLength> = 5;

        r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters: boolean valid> = 1;

        r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters: int maxSkipAfterEnd> = 5;

        $r1 = newarray (java.lang.String)[6];

        $r1[0] = "body";

        $r1[1] = "line";

        $r1[2] = "input";

        $r1[3] = "image";

        $r1[4] = "caption";

        $r1[5] = "br";

        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1);

        $r3 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r2);

        r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters: java.util.List elementTypes> = $r3;

        $r4 = newarray (java.lang.String)[11];

        $r4[0] = "_t";

        $r4[1] = "t";

        $r4[2] = "i";

        $r4[3] = "attachment";

        $r4[4] = "style";

        $r4[5] = "blipId";

        $r4[6] = "state";

        $r4[7] = "url";

        $r4[8] = "fontWeight";

        $r4[9] = "fontStyle";

        $r4[10] = "invalid_dummy";

        $r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r4);

        $r6 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r5);

        r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters: java.util.List attributeNames> = $r6;

        $r7 = newarray (java.lang.String)[16];

        $r7[0] = null;

        $r7[1] = "title";

        $r7[2] = "li";

        $r7[3] = "h1";

        $r7[4] = "h2";

        $r7[5] = "h3";

        $r7[6] = "h4";

        $r7[7] = "";

        $r7[8] = "0";

        $r7[9] = "1";

        $r7[10] = "2";

        $r7[11] = "3";

        $r7[12] = "4";

        $r7[13] = "5";

        $r7[14] = "114";

        $r7[15] = "9817";

        $r8 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r7);

        $r9 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r8);

        r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters: java.util.List attributeValues> = $r9;

        $r10 = newarray (org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters$AnnotationOption)[3];

        $r11 = new org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters$AnnotationOption;

        $r12 = newarray (java.lang.String)[3];

        $r12[0] = null;

        $r12[1] = "1";

        $r12[2] = "2";

        $r13 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r12);

        specialinvoke $r11.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters$AnnotationOption: void <init>(java.lang.String,java.util.List)>("a", $r13);

        $r10[0] = $r11;

        $r14 = new org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters$AnnotationOption;

        $r15 = newarray (java.lang.String)[2];

        $r15[0] = null;

        $r15[1] = "1";

        $r16 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r15);

        specialinvoke $r14.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters$AnnotationOption: void <init>(java.lang.String,java.util.List)>("b", $r16);

        $r10[1] = $r14;

        $r17 = new org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters$AnnotationOption;

        $r18 = newarray (java.lang.String)[2];

        $r18[0] = null;

        $r18[1] = "1";

        $r19 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r18);

        specialinvoke $r17.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters$AnnotationOption: void <init>(java.lang.String,java.util.List)>("c", $r19);

        $r10[2] = $r17;

        $r20 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r10);

        $r21 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r20);

        r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters: java.util.List annotationOptions> = $r21;

        return;
    }

    public int getMaxOpeningComponents()
    {
        int $i0;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters r0;

        r0 := @this: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters;

        $i0 = r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters: int maxOpeningComponents>;

        return $i0;
    }

    public int getMaxInsertLength()
    {
        int $i0;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters r0;

        r0 := @this: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters;

        $i0 = r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters: int maxInsertLength>;

        return $i0;
    }

    public int getMaxDeleteLength()
    {
        int $i0;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters r0;

        r0 := @this: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters;

        $i0 = r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters: int maxDeleteLength>;

        return $i0;
    }

    public java.util.List getAnnotationOptions()
    {
        java.util.List $r1, $r2;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters r0;

        r0 := @this: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters;

        $r1 = r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters: java.util.List annotationOptions>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    public org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters setMaxOpeningComponents(int)
    {
        int i0;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters r0;

        r0 := @this: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters;

        i0 := @parameter0: int;

        r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters: int maxOpeningComponents> = i0;

        return r0;
    }

    public org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters setMaxInsertLength(int)
    {
        int i0;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters r0;

        r0 := @this: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters;

        i0 := @parameter0: int;

        r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters: int maxInsertLength> = i0;

        return r0;
    }

    public org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters setMaxDeleteLength(int)
    {
        int i0;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters r0;

        r0 := @this: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters;

        i0 := @parameter0: int;

        r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters: int maxDeleteLength> = i0;

        return r0;
    }

    public org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters setAnnotationOptions(java.util.List)
    {
        java.util.List r1;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters r0;

        r0 := @this: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters;

        r1 := @parameter0: java.util.List;

        r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters: java.util.List annotationOptions> = r1;

        return r0;
    }

    public boolean getValidity()
    {
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters;

        $z0 = r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters: boolean valid>;

        return $z0;
    }

    public org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters setValidity(boolean)
    {
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters r0;
        boolean z0;

        r0 := @this: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters;

        z0 := @parameter0: boolean;

        r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters: boolean valid> = z0;

        return r0;
    }

    public int getMaxSkipAfterEnd()
    {
        int $i0;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters r0;

        r0 := @this: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters;

        $i0 = r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters: int maxSkipAfterEnd>;

        return $i0;
    }

    public org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters setMaxSkipBeyondEnd(int)
    {
        int i0;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters r0;

        r0 := @this: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters;

        i0 := @parameter0: int;

        r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters: int maxSkipAfterEnd> = i0;

        return r0;
    }

    public java.util.List getAnnotationKeys()
    {
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters r1;
        java.util.Iterator $r4;
        java.util.ArrayList $r0;
        java.util.List $r2, $r3, $r5;
        int $i0;
        java.lang.Object $r6;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters$AnnotationOption r7;
        java.lang.String $r8;
        boolean $z0;

        r1 := @this: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters;

        $r0 = new java.util.ArrayList;

        $r2 = r1.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters: java.util.List annotationOptions>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        specialinvoke $r0.<java.util.ArrayList: void <init>(int)>($i0);

        $r3 = r1.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters: java.util.List annotationOptions>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters$AnnotationOption) $r6;

        $r8 = r7.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters$AnnotationOption: java.lang.String key>;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r8);

        goto label1;

     label2:
        $r5 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r0);

        return $r5;
    }

    public java.util.List getElementTypes()
    {
        java.util.List $r1;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters r0;

        r0 := @this: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters;

        $r1 = r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters: java.util.List elementTypes>;

        return $r1;
    }

    public org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters setElementTypes(java.util.List)
    {
        java.util.List r1;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters r0;

        r0 := @this: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters;

        r1 := @parameter0: java.util.List;

        r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters: java.util.List elementTypes> = r1;

        return r0;
    }

    public java.util.List getAttributeNames()
    {
        java.util.List $r1;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters r0;

        r0 := @this: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters;

        $r1 = r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters: java.util.List attributeNames>;

        return $r1;
    }

    public org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters setAttributeNames(java.util.List)
    {
        java.util.HashSet $r0;
        java.util.List r1;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters r2;
        int $i0, $i1;
        boolean $z0;

        r2 := @this: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters;

        r1 := @parameter0: java.util.List;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>(java.util.Collection)>(r1);

        $i0 = virtualinvoke $r0.<java.util.HashSet: int size()>();

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i0 != $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.waveprotocol.wave.model.util.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, "duplicate attribute name");

        r2.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters: java.util.List attributeNames> = r1;

        return r2;
    }

    public java.util.List getAttributeValues()
    {
        java.util.List $r1;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters r0;

        r0 := @this: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters;

        $r1 = r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters: java.util.List attributeValues>;

        return $r1;
    }

    public org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters setAttributeValues(java.util.List)
    {
        java.util.List r1;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters r0;

        r0 := @this: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters;

        r1 := @parameter0: java.util.List;

        r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters: java.util.List attributeValues> = r1;

        return r0;
    }

    static void <clinit>()
    {
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters$AnnotationOption[] $r0;
        java.lang.String[] $r2, $r5, $r8;
        java.util.List $r3, $r6, $r9, $r10, $r11;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters$AnnotationOption $r1, $r4, $r7;

        $r0 = newarray (org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters$AnnotationOption)[3];

        $r1 = new org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters$AnnotationOption;

        $r2 = newarray (java.lang.String)[3];

        $r2[0] = null;

        $r2[1] = "http://www.youtube.com/watch?v=NBplLTBBmiA&feature=hd";

        $r2[2] = "http://code.google.com/p/wave-protocols/issues/entry";

        $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2);

        specialinvoke $r1.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters$AnnotationOption: void <init>(java.lang.String,java.util.List)>("link/auto", $r3);

        $r0[0] = $r1;

        $r4 = new org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters$AnnotationOption;

        $r5 = newarray (java.lang.String)[2];

        $r5[0] = null;

        $r5[1] = "bold";

        $r6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r5);

        specialinvoke $r4.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters$AnnotationOption: void <init>(java.lang.String,java.util.List)>("style/fontWeight", $r6);

        $r0[1] = $r4;

        $r7 = new org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters$AnnotationOption;

        $r8 = newarray (java.lang.String)[2];

        $r8[0] = null;

        $r8[1] = "underline";

        $r9 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r8);

        specialinvoke $r7.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters$AnnotationOption: void <init>(java.lang.String,java.util.List)>("style/textDecoration", $r9);

        $r0[2] = $r7;

        $r10 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0);

        $r11 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r10);

        <org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters: java.util.List RENDERABLE_ANNOTATION_OPTIONS> = $r11;

        return;
    }
}
