public abstract class org.apache.poi.ddf.AbstractEscherOptRecord extends org.apache.poi.ddf.EscherRecord
{
    protected java.util.List properties;

    public void <init>()
    {
        org.apache.poi.ddf.AbstractEscherOptRecord r0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.poi.ddf.AbstractEscherOptRecord;

        specialinvoke r0.<org.apache.poi.ddf.EscherRecord: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.ddf.AbstractEscherOptRecord: java.util.List properties> = $r1;

        return;
    }

    public void addEscherProperty(org.apache.poi.ddf.EscherProperty)
    {
        org.apache.poi.ddf.EscherProperty r1;
        java.util.List $r2;
        org.apache.poi.ddf.AbstractEscherOptRecord r0;

        r0 := @this: org.apache.poi.ddf.AbstractEscherOptRecord;

        r1 := @parameter0: org.apache.poi.ddf.EscherProperty;

        $r2 = r0.<org.apache.poi.ddf.AbstractEscherOptRecord: java.util.List properties>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public int fillFields(byte[], int, org.apache.poi.ddf.EscherRecordFactory)
    {
        org.apache.poi.ddf.EscherRecordFactory r4;
        byte[] r1;
        org.apache.poi.ddf.EscherPropertyFactory $r2;
        org.apache.poi.ddf.AbstractEscherOptRecord r0;
        short $s2;
        java.util.List $r3;
        int i0, $i1, i3, $i4;

        r0 := @this: org.apache.poi.ddf.AbstractEscherOptRecord;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        r4 := @parameter2: org.apache.poi.ddf.EscherRecordFactory;

        $i1 = virtualinvoke r0.<org.apache.poi.ddf.AbstractEscherOptRecord: int readHeader(byte[],int)>(r1, i0);

        $s2 = staticinvoke <org.apache.poi.ddf.AbstractEscherOptRecord: short readInstance(byte[],int)>(r1, i0);

        i3 = i0 + 8;

        $r2 = new org.apache.poi.ddf.EscherPropertyFactory;

        specialinvoke $r2.<org.apache.poi.ddf.EscherPropertyFactory: void <init>()>();

        $r3 = virtualinvoke $r2.<org.apache.poi.ddf.EscherPropertyFactory: java.util.List createProperties(byte[],int,short)>(r1, i3, $s2);

        r0.<org.apache.poi.ddf.AbstractEscherOptRecord: java.util.List properties> = $r3;

        $i4 = $i1 + 8;

        return $i4;
    }

    public java.util.List getEscherProperties()
    {
        java.util.List $r1;
        org.apache.poi.ddf.AbstractEscherOptRecord r0;

        r0 := @this: org.apache.poi.ddf.AbstractEscherOptRecord;

        $r1 = r0.<org.apache.poi.ddf.AbstractEscherOptRecord: java.util.List properties>;

        return $r1;
    }

    public org.apache.poi.ddf.EscherProperty getEscherProperty(int)
    {
        org.apache.poi.ddf.EscherProperty $r3;
        java.util.List $r1;
        int i0;
        java.lang.Object $r2;
        org.apache.poi.ddf.AbstractEscherOptRecord r0;

        r0 := @this: org.apache.poi.ddf.AbstractEscherOptRecord;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.ddf.AbstractEscherOptRecord: java.util.List properties>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = (org.apache.poi.ddf.EscherProperty) $r2;

        return $r3;
    }

    private int getPropertiesSize()
    {
        java.util.Iterator $r2;
        org.apache.poi.ddf.AbstractEscherOptRecord r0;
        org.apache.poi.ddf.EscherProperty r4;
        java.util.List $r1;
        int $i0, i1;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: org.apache.poi.ddf.AbstractEscherOptRecord;

        i1 = 0;

        $r1 = r0.<org.apache.poi.ddf.AbstractEscherOptRecord: java.util.List properties>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.poi.ddf.EscherProperty) $r3;

        $i0 = virtualinvoke r4.<org.apache.poi.ddf.EscherProperty: int getPropertySize()>();

        i1 = i1 + $i0;

        goto label1;

     label2:
        return i1;
    }

    public int getRecordSize()
    {
        int $i0, $i1;
        org.apache.poi.ddf.AbstractEscherOptRecord r0;

        r0 := @this: org.apache.poi.ddf.AbstractEscherOptRecord;

        $i0 = specialinvoke r0.<org.apache.poi.ddf.AbstractEscherOptRecord: int getPropertiesSize()>();

        $i1 = 8 + $i0;

        return $i1;
    }

    public org.apache.poi.ddf.EscherProperty lookup(int)
    {
        java.util.Iterator $r2;
        org.apache.poi.ddf.AbstractEscherOptRecord r0;
        org.apache.poi.ddf.EscherProperty r4;
        java.util.List $r1;
        short $s0;
        int i1, $i2;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: org.apache.poi.ddf.AbstractEscherOptRecord;

        i1 := @parameter0: int;

        $r1 = r0.<org.apache.poi.ddf.AbstractEscherOptRecord: java.util.List properties>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.poi.ddf.EscherProperty) $r3;

        $s0 = virtualinvoke r4.<org.apache.poi.ddf.EscherProperty: short getPropertyNumber()>();

        $i2 = (int) $s0;

        if $i2 != i1 goto label2;

        return r4;

     label2:
        goto label1;

     label3:
        return null;
    }

    public int serialize(int, byte[], org.apache.poi.ddf.EscherSerializationListener)
    {
        byte[] r2;
        org.apache.poi.ddf.EscherSerializationListener r0;
        org.apache.poi.ddf.AbstractEscherOptRecord r1;
        short $s1, $s2, $s4, $s7;
        int i0, $i3, $i5, $i6, $i8, $i9, $i10, $i11, i12;
        boolean $z0, $z1;
        java.util.Iterator $r4, $r6;
        org.apache.poi.ddf.EscherProperty r9, r10;
        java.util.List $r3, $r5;
        java.lang.Object $r7, $r8;

        r1 := @this: org.apache.poi.ddf.AbstractEscherOptRecord;

        i0 := @parameter0: int;

        r2 := @parameter1: byte[];

        r0 := @parameter2: org.apache.poi.ddf.EscherSerializationListener;

        $s1 = virtualinvoke r1.<org.apache.poi.ddf.AbstractEscherOptRecord: short getRecordId()>();

        interfaceinvoke r0.<org.apache.poi.ddf.EscherSerializationListener: void beforeRecordSerialize(int,short,org.apache.poi.ddf.EscherRecord)>(i0, $s1, r1);

        $s2 = virtualinvoke r1.<org.apache.poi.ddf.AbstractEscherOptRecord: short getOptions()>();

        staticinvoke <org.apache.poi.util.LittleEndian: void putShort(byte[],int,short)>(r2, i0, $s2);

        $i3 = i0 + 2;

        $s4 = virtualinvoke r1.<org.apache.poi.ddf.AbstractEscherOptRecord: short getRecordId()>();

        staticinvoke <org.apache.poi.util.LittleEndian: void putShort(byte[],int,short)>(r2, $i3, $s4);

        $i5 = i0 + 4;

        $i6 = specialinvoke r1.<org.apache.poi.ddf.AbstractEscherOptRecord: int getPropertiesSize()>();

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>(r2, $i5, $i6);

        i12 = i0 + 8;

        $r3 = r1.<org.apache.poi.ddf.AbstractEscherOptRecord: java.util.List properties>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r9 = (org.apache.poi.ddf.EscherProperty) $r8;

        $i11 = virtualinvoke r9.<org.apache.poi.ddf.EscherProperty: int serializeSimplePart(byte[],int)>(r2, i12);

        i12 = i12 + $i11;

        goto label1;

     label2:
        $r5 = r1.<org.apache.poi.ddf.AbstractEscherOptRecord: java.util.List properties>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r10 = (org.apache.poi.ddf.EscherProperty) $r7;

        $i10 = virtualinvoke r10.<org.apache.poi.ddf.EscherProperty: int serializeComplexPart(byte[],int)>(r2, i12);

        i12 = i12 + $i10;

        goto label3;

     label4:
        $s7 = virtualinvoke r1.<org.apache.poi.ddf.AbstractEscherOptRecord: short getRecordId()>();

        $i8 = i12 - i0;

        interfaceinvoke r0.<org.apache.poi.ddf.EscherSerializationListener: void afterRecordSerialize(int,short,int,org.apache.poi.ddf.EscherRecord)>(i12, $s7, $i8, r1);

        $i9 = i12 - i0;

        return $i9;
    }

    public void sortProperties()
    {
        java.util.List $r2;
        org.apache.poi.ddf.AbstractEscherOptRecord r0;
        org.apache.poi.ddf.AbstractEscherOptRecord$1 $r1;

        r0 := @this: org.apache.poi.ddf.AbstractEscherOptRecord;

        $r2 = r0.<org.apache.poi.ddf.AbstractEscherOptRecord: java.util.List properties>;

        $r1 = new org.apache.poi.ddf.AbstractEscherOptRecord$1;

        specialinvoke $r1.<org.apache.poi.ddf.AbstractEscherOptRecord$1: void <init>(org.apache.poi.ddf.AbstractEscherOptRecord)>(r0);

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r2, $r1);

        return;
    }

    public void setEscherProperty(org.apache.poi.ddf.EscherProperty)
    {
        java.util.Iterator $r2;
        org.apache.poi.ddf.AbstractEscherOptRecord r0;
        org.apache.poi.ddf.EscherProperty r3, r6;
        java.util.List $r1, $r4;
        short $s0, $s1;
        int $i2, $i3;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: org.apache.poi.ddf.AbstractEscherOptRecord;

        r3 := @parameter0: org.apache.poi.ddf.EscherProperty;

        $r1 = r0.<org.apache.poi.ddf.AbstractEscherOptRecord: java.util.List properties>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.apache.poi.ddf.EscherProperty) $r5;

        $s0 = virtualinvoke r6.<org.apache.poi.ddf.EscherProperty: short getId()>();

        $s1 = virtualinvoke r3.<org.apache.poi.ddf.EscherProperty: short getId()>();

        $i2 = (int) $s0;

        $i3 = (int) $s1;

        if $i2 != $i3 goto label2;

        interfaceinvoke $r2.<java.util.Iterator: void remove()>();

     label2:
        goto label1;

     label3:
        $r4 = r0.<org.apache.poi.ddf.AbstractEscherOptRecord: java.util.List properties>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r3);

        virtualinvoke r0.<org.apache.poi.ddf.AbstractEscherOptRecord: void sortProperties()>();

        return;
    }

    public void removeEscherProperty(int)
    {
        java.util.Iterator $r2;
        org.apache.poi.ddf.AbstractEscherOptRecord r0;
        org.apache.poi.ddf.EscherProperty r4;
        java.util.List $r1;
        short $s0;
        int i1, $i2;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: org.apache.poi.ddf.AbstractEscherOptRecord;

        i1 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.poi.ddf.AbstractEscherOptRecord: java.util.List getEscherProperties()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.poi.ddf.EscherProperty) $r3;

        $s0 = virtualinvoke r4.<org.apache.poi.ddf.EscherProperty: short getPropertyNumber()>();

        $i2 = (int) $s0;

        if $i2 != i1 goto label2;

        interfaceinvoke $r2.<java.util.Iterator: void remove()>();

     label2:
        goto label1;

     label3:
        return;
    }

    public java.lang.String toString()
    {
        org.apache.poi.ddf.AbstractEscherOptRecord r2;
        short $s0, $s1, $s2;
        int $i3;
        java.lang.String $r0, $r4, $r5, $r6, $r7, $r11, $r16, $r19;
        boolean $z0, $z1;
        java.util.Iterator $r10;
        org.apache.poi.ddf.EscherProperty r13;
        java.util.List $r8, $r9;
        java.lang.StringBuilder $r1, $r14, $r15, $r17, $r18;
        java.lang.Class $r3;
        java.lang.Object $r12;

        r2 := @this: org.apache.poi.ddf.AbstractEscherOptRecord;

        $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  isContainer: ");

        $z0 = virtualinvoke r2.<org.apache.poi.ddf.AbstractEscherOptRecord: boolean isContainerRecord()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  version: 0x");

        $s0 = virtualinvoke r2.<org.apache.poi.ddf.AbstractEscherOptRecord: short getVersion()>();

        $r5 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(short)>($s0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  instance: 0x");

        $s1 = virtualinvoke r2.<org.apache.poi.ddf.AbstractEscherOptRecord: short getInstance()>();

        $r6 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(short)>($s1);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  recordId: 0x");

        $s2 = virtualinvoke r2.<org.apache.poi.ddf.AbstractEscherOptRecord: short getRecordId()>();

        $r7 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(short)>($s2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  numchildren: ");

        $r8 = virtualinvoke r2.<org.apache.poi.ddf.AbstractEscherOptRecord: java.util.List getChildRecords()>();

        $i3 = interfaceinvoke $r8.<java.util.List: int size()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  properties:");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r9 = r2.<org.apache.poi.ddf.AbstractEscherOptRecord: java.util.List properties>;

        $r10 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r12 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r13 = (org.apache.poi.ddf.EscherProperty) $r12;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        $r16 = virtualinvoke r13.<java.lang.Object: java.lang.String toString()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        goto label1;

     label2:
        $r11 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }

    public java.lang.String toXml(java.lang.String)
    {
        org.apache.poi.ddf.AbstractEscherOptRecord r3;
        short $s0, $s1, $s2;
        java.lang.String r1, $r5, $r6, $r7, $r8, $r9, $r15, $r17, $r23, $r24;
        boolean $z0;
        java.util.Iterator $r11;
        org.apache.poi.ddf.EscherProperty r19;
        java.util.List $r10;
        java.lang.StringBuilder $r0, $r2, $r12, $r13, $r16, $r20, $r21, $r22;
        java.lang.Class $r4, $r14;
        java.lang.Object $r18;

        r3 := @this: org.apache.poi.ddf.AbstractEscherOptRecord;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r4 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getSimpleName()>();

        $s0 = virtualinvoke r3.<org.apache.poi.ddf.AbstractEscherOptRecord: short getRecordId()>();

        $r6 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(short)>($s0);

        $s1 = virtualinvoke r3.<org.apache.poi.ddf.AbstractEscherOptRecord: short getVersion()>();

        $r7 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(short)>($s1);

        $s2 = virtualinvoke r3.<org.apache.poi.ddf.AbstractEscherOptRecord: short getInstance()>();

        $r8 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(short)>($s2);

        $r9 = virtualinvoke r3.<org.apache.poi.ddf.AbstractEscherOptRecord: java.lang.String formatXmlRecordHeader(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r5, $r6, $r7, $r8);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r10 = virtualinvoke r3.<org.apache.poi.ddf.AbstractEscherOptRecord: java.util.List getEscherProperties()>();

        $r11 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r18 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r19 = (org.apache.poi.ddf.EscherProperty) $r18;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        $r24 = virtualinvoke r19.<org.apache.poi.ddf.EscherProperty: java.lang.String toXml(java.lang.String)>($r23);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        goto label1;

     label2:
        $r12 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</");

        $r14 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r15 = virtualinvoke $r14.<java.lang.Class: java.lang.String getSimpleName()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">\n");

        $r17 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r17;
    }
}
