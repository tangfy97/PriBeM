class org.waveprotocol.wave.client.gadget.renderer.GadgetWidget$ElementChangeTask$1 extends java.lang.Object implements org.waveprotocol.wave.client.gadget.StateMap$Each
{
    final org.waveprotocol.wave.client.gadget.StateMap val$oldPrefs;
    final org.waveprotocol.wave.client.gadget.renderer.GadgetWidget$ElementChangeTask this$1;

    void <init>(org.waveprotocol.wave.client.gadget.renderer.GadgetWidget$ElementChangeTask, org.waveprotocol.wave.client.gadget.StateMap)
    {
        org.waveprotocol.wave.client.gadget.renderer.GadgetWidget$ElementChangeTask r1;
        org.waveprotocol.wave.client.gadget.renderer.GadgetWidget$ElementChangeTask$1 r0;
        org.waveprotocol.wave.client.gadget.StateMap r2;

        r0 := @this: org.waveprotocol.wave.client.gadget.renderer.GadgetWidget$ElementChangeTask$1;

        r1 := @parameter0: org.waveprotocol.wave.client.gadget.renderer.GadgetWidget$ElementChangeTask;

        r2 := @parameter1: org.waveprotocol.wave.client.gadget.StateMap;

        r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetWidget$ElementChangeTask$1: org.waveprotocol.wave.client.gadget.renderer.GadgetWidget$ElementChangeTask this$1> = r1;

        r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetWidget$ElementChangeTask$1: org.waveprotocol.wave.client.gadget.StateMap val$oldPrefs> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void apply(java.lang.String, java.lang.String)
    {
        org.waveprotocol.wave.client.gadget.renderer.GadgetWidget$ElementChangeTask $r3;
        org.waveprotocol.wave.client.gadget.StateMap $r2, $r6;
        org.waveprotocol.wave.client.gadget.renderer.GadgetWidget $r5;
        java.lang.String r1, r4, $r7;
        org.waveprotocol.wave.client.gadget.renderer.GadgetWidget$ElementChangeTask$1 r0;
        boolean $z0, $z1;

        r0 := @this: org.waveprotocol.wave.client.gadget.renderer.GadgetWidget$ElementChangeTask$1;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        $r2 = r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetWidget$ElementChangeTask$1: org.waveprotocol.wave.client.gadget.StateMap val$oldPrefs>;

        $z0 = virtualinvoke $r2.<org.waveprotocol.wave.client.gadget.StateMap: boolean has(java.lang.String)>(r1);

        if $z0 == 0 goto label1;

        $r6 = r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetWidget$ElementChangeTask$1: org.waveprotocol.wave.client.gadget.StateMap val$oldPrefs>;

        $r7 = virtualinvoke $r6.<org.waveprotocol.wave.client.gadget.StateMap: java.lang.String get(java.lang.String)>(r1);

        $z1 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z1 != 0 goto label2;

     label1:
        $r3 = r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetWidget$ElementChangeTask$1: org.waveprotocol.wave.client.gadget.renderer.GadgetWidget$ElementChangeTask this$1>;

        $r5 = $r3.<org.waveprotocol.wave.client.gadget.renderer.GadgetWidget$ElementChangeTask: org.waveprotocol.wave.client.gadget.renderer.GadgetWidget this$0>;

        virtualinvoke $r5.<org.waveprotocol.wave.client.gadget.renderer.GadgetWidget: void setGadgetPref(java.lang.String,java.lang.String)>(r1, r4);

     label2:
        return;
    }
}
