class org.eclipse.jetty.client.SelectConnector$ConnectTimeout extends org.eclipse.jetty.util.thread.Timeout$Task
{
    private final java.nio.channels.SocketChannel channel;
    private final org.eclipse.jetty.client.HttpDestination destination;
    final org.eclipse.jetty.client.SelectConnector this$0;

    public void <init>(org.eclipse.jetty.client.SelectConnector, java.nio.channels.SocketChannel, org.eclipse.jetty.client.HttpDestination)
    {
        java.nio.channels.SocketChannel r2;
        org.eclipse.jetty.client.SelectConnector r1;
        org.eclipse.jetty.client.SelectConnector$ConnectTimeout r0;
        org.eclipse.jetty.client.HttpDestination r3;

        r0 := @this: org.eclipse.jetty.client.SelectConnector$ConnectTimeout;

        r1 := @parameter0: org.eclipse.jetty.client.SelectConnector;

        r2 := @parameter1: java.nio.channels.SocketChannel;

        r3 := @parameter2: org.eclipse.jetty.client.HttpDestination;

        r0.<org.eclipse.jetty.client.SelectConnector$ConnectTimeout: org.eclipse.jetty.client.SelectConnector this$0> = r1;

        specialinvoke r0.<org.eclipse.jetty.util.thread.Timeout$Task: void <init>()>();

        r0.<org.eclipse.jetty.client.SelectConnector$ConnectTimeout: java.nio.channels.SocketChannel channel> = r2;

        r0.<org.eclipse.jetty.client.SelectConnector$ConnectTimeout: org.eclipse.jetty.client.HttpDestination destination> = r3;

        return;
    }

    public void expired()
    {
        java.lang.Object[] $r3;
        java.io.IOException $r8;
        org.eclipse.jetty.client.SelectConnector$ConnectTimeout r0;
        java.nio.channels.SocketChannel $r1, $r4, $r5;
        java.net.SocketTimeoutException $r6;
        org.eclipse.jetty.util.log.Logger $r2, $r9;
        boolean $z0;
        org.eclipse.jetty.client.HttpDestination $r7;

        r0 := @this: org.eclipse.jetty.client.SelectConnector$ConnectTimeout;

        $r1 = r0.<org.eclipse.jetty.client.SelectConnector$ConnectTimeout: java.nio.channels.SocketChannel channel>;

        $z0 = virtualinvoke $r1.<java.nio.channels.SocketChannel: boolean isConnectionPending()>();

        if $z0 == 0 goto label5;

        $r2 = staticinvoke <org.eclipse.jetty.client.SelectConnector: org.eclipse.jetty.util.log.Logger access$000()>();

        $r3 = newarray (java.lang.Object)[1];

        $r4 = r0.<org.eclipse.jetty.client.SelectConnector$ConnectTimeout: java.nio.channels.SocketChannel channel>;

        $r3[0] = $r4;

        interfaceinvoke $r2.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>("Channel {} timed out while connecting, closing it", $r3);

     label1:
        $r5 = r0.<org.eclipse.jetty.client.SelectConnector$ConnectTimeout: java.nio.channels.SocketChannel channel>;

        virtualinvoke $r5.<java.nio.channels.SocketChannel: void close()>();

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        $r9 = staticinvoke <org.eclipse.jetty.client.SelectConnector: org.eclipse.jetty.util.log.Logger access$000()>();

        interfaceinvoke $r9.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r8);

     label4:
        $r7 = r0.<org.eclipse.jetty.client.SelectConnector$ConnectTimeout: org.eclipse.jetty.client.HttpDestination destination>;

        $r6 = new java.net.SocketTimeoutException;

        specialinvoke $r6.<java.net.SocketTimeoutException: void <init>()>();

        virtualinvoke $r7.<org.eclipse.jetty.client.HttpDestination: void onConnectionFailed(java.lang.Throwable)>($r6);

     label5:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }
}
