public class org.apache.xmlbeans.impl.jam.internal.CachedClassBuilder extends org.apache.xmlbeans.impl.jam.provider.JamClassBuilder
{
    private java.util.Map mQcname2jclass;
    private java.util.List mClassNames;

    public void <init>()
    {
        org.apache.xmlbeans.impl.jam.internal.CachedClassBuilder r0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.CachedClassBuilder;

        specialinvoke r0.<org.apache.xmlbeans.impl.jam.provider.JamClassBuilder: void <init>()>();

        r0.<org.apache.xmlbeans.impl.jam.internal.CachedClassBuilder: java.util.Map mQcname2jclass> = null;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.xmlbeans.impl.jam.internal.CachedClassBuilder: java.util.List mClassNames> = $r1;

        return;
    }

    public org.apache.xmlbeans.impl.jam.mutable.MClass build(java.lang.String, java.lang.String)
    {
        java.lang.StringBuffer $r7, $r8, $r9, $r10;
        java.util.Map $r1, $r4;
        int $i0;
        org.apache.xmlbeans.impl.jam.internal.CachedClassBuilder r0;
        java.lang.Object $r5;
        java.lang.String r2, $r3, r11;
        org.apache.xmlbeans.impl.jam.mutable.MClass $r6;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.CachedClassBuilder;

        r2 := @parameter0: java.lang.String;

        r11 := @parameter1: java.lang.String;

        $r1 = r0.<org.apache.xmlbeans.impl.jam.internal.CachedClassBuilder: java.util.Map mQcname2jclass>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r3 = virtualinvoke r2.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 <= 0 goto label2;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(46);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r11);

        r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

     label2:
        $r4 = r0.<org.apache.xmlbeans.impl.jam.internal.CachedClassBuilder: java.util.Map mQcname2jclass>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r11);

        $r6 = (org.apache.xmlbeans.impl.jam.mutable.MClass) $r5;

        return $r6;
    }

    public org.apache.xmlbeans.impl.jam.mutable.MClass createClassToBuild(java.lang.String, java.lang.String, java.lang.String[])
    {
        java.util.HashMap $r5;
        java.lang.String[] r6;
        java.lang.StringBuffer $r12, $r13, $r14, $r15;
        java.util.Map $r4, $r8, $r10;
        int $i0;
        java.lang.String r0, $r1, r2, r16;
        java.util.List $r9;
        org.apache.xmlbeans.impl.jam.internal.CachedClassBuilder r3;
        java.lang.Object $r11;
        org.apache.xmlbeans.impl.jam.mutable.MClass $r7, r17;

        r3 := @this: org.apache.xmlbeans.impl.jam.internal.CachedClassBuilder;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r6 := @parameter2: java.lang.String[];

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(46);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label2;

     label1:
        r16 = r2;

     label2:
        $r4 = r3.<org.apache.xmlbeans.impl.jam.internal.CachedClassBuilder: java.util.Map mQcname2jclass>;

        if $r4 == null goto label3;

        $r10 = r3.<org.apache.xmlbeans.impl.jam.internal.CachedClassBuilder: java.util.Map mQcname2jclass>;

        $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r16);

        r17 = (org.apache.xmlbeans.impl.jam.mutable.MClass) $r11;

        if r17 == null goto label4;

        return r17;

     label3:
        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r3.<org.apache.xmlbeans.impl.jam.internal.CachedClassBuilder: java.util.Map mQcname2jclass> = $r5;

     label4:
        $r7 = specialinvoke r3.<org.apache.xmlbeans.impl.jam.provider.JamClassBuilder: org.apache.xmlbeans.impl.jam.mutable.MClass createClassToBuild(java.lang.String,java.lang.String,java.lang.String[])>(r0, r2, r6);

        $r8 = r3.<org.apache.xmlbeans.impl.jam.internal.CachedClassBuilder: java.util.Map mQcname2jclass>;

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r16, $r7);

        $r9 = r3.<org.apache.xmlbeans.impl.jam.internal.CachedClassBuilder: java.util.List mClassNames>;

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>(r16);

        return $r7;
    }

    public java.lang.String[] getClassNames()
    {
        java.util.List $r1, $r3;
        int $i0;
        org.apache.xmlbeans.impl.jam.internal.CachedClassBuilder r0;
        java.lang.String[] r2;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.CachedClassBuilder;

        $r1 = r0.<org.apache.xmlbeans.impl.jam.internal.CachedClassBuilder: java.util.List mClassNames>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        r2 = newarray (java.lang.String)[$i0];

        $r3 = r0.<org.apache.xmlbeans.impl.jam.internal.CachedClassBuilder: java.util.List mClassNames>;

        interfaceinvoke $r3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r2);

        return r2;
    }
}
