public class ucar.nc2.ft.fmrc.FmrcInvLite$Gridset extends java.lang.Object implements java.io.Serializable
{
    java.lang.String gridsetName;
    java.util.List grids;
    int noffsets;
    double[] timeOffset;
    double[] timeBounds;
    java.util.Map timeCoordMap;
    final ucar.nc2.ft.fmrc.FmrcInvLite this$0;

    void <init>(ucar.nc2.ft.fmrc.FmrcInvLite, ucar.nc2.ft.fmrc.FmrcInv$RunSeq)
    {
        java.lang.StringBuilder $r38, $r40, $r41, $r42, $r43, $r44, $r45, $r50;
        ucar.nc2.ft.fmrc.TimeCoord r57, r58;
        ucar.nc2.ft.fmrc.FmrcInv$RunSeq r4;
        double[] $r8, $r9, $r21, $r22, $r23, $r24, $r25, $r26, $r30, $r52, $r53, $r54, $r55;
        java.util.ArrayList $r2;
        java.lang.String $r5, $r16, $r34, $r36, $r39, $r49, $r51;
        ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$GridInventory $r17;
        java.util.Date $r19, $r20, $r28, $r29, $r32, $r33, $r35;
        ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$Grid $r14;
        ucar.nc2.ft.fmrc.FmrcInvLite$Gridset r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.util.List $r6, $r11, $r15, $r46;
        ucar.nc2.ft.fmrc.FmrcInv$UberGrid $r48, r59;
        ucar.nc2.units.DateFormatter $r10;
        java.util.HashMap $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, i27, i28, i29, i30, $i31, i32, i33;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8;
        org.slf4j.Logger $r31, $r37;
        java.util.Iterator $r7, $r12;
        ucar.nc2.ft.fmrc.FmrcInvLite r1;
        java.lang.Object $r13, $r18, $r27, $r47, $r56;

        r0 := @this: ucar.nc2.ft.fmrc.FmrcInvLite$Gridset;

        r1 := @parameter0: ucar.nc2.ft.fmrc.FmrcInvLite;

        r4 := @parameter1: ucar.nc2.ft.fmrc.FmrcInv$RunSeq;

        r0.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: ucar.nc2.ft.fmrc.FmrcInvLite this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: java.util.List grids> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: java.util.Map timeCoordMap> = $r3;

        $r5 = virtualinvoke r4.<ucar.nc2.ft.fmrc.FmrcInv$RunSeq: java.lang.String getName()>();

        r0.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: java.lang.String gridsetName> = $r5;

        $r6 = virtualinvoke r4.<ucar.nc2.ft.fmrc.FmrcInv$RunSeq: java.util.List getTimes()>();

        $i0 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite: int nruns>;

        $i1 = interfaceinvoke $r6.<java.util.List: int size()>();

        if $i0 == $i1 goto label01;

        $z6 = 1;

        goto label02;

     label01:
        $z6 = 0;

     label02:
        z0 = $z6;

        r0.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: int noffsets> = 0;

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z7 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label04;

        $r56 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r57 = (ucar.nc2.ft.fmrc.TimeCoord) $r56;

        $i24 = r0.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: int noffsets>;

        $i25 = virtualinvoke r57.<ucar.nc2.ft.fmrc.TimeCoord: int getNCoords()>();

        $i26 = staticinvoke <java.lang.Math: int max(int,int)>($i24, $i25);

        r0.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: int noffsets> = $i26;

        goto label03;

     label04:
        $i3 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite: int nruns>;

        $i2 = r0.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: int noffsets>;

        $i4 = $i3 * $i2;

        $r8 = newarray (double)[$i4];

        r0.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: double[] timeOffset> = $r8;

        i27 = 0;

     label05:
        $r9 = r0.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: double[] timeOffset>;

        $i5 = lengthof $r9;

        if i27 >= $i5 goto label06;

        $r55 = r0.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: double[] timeOffset>;

        $r55[i27] = #NaN;

        i27 = i27 + 1;

        goto label05;

     label06:
        $z1 = virtualinvoke r4.<ucar.nc2.ft.fmrc.FmrcInv$RunSeq: boolean isInterval()>();

        if $z1 == 0 goto label08;

        $i20 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite: int nruns>;

        $i19 = r0.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: int noffsets>;

        $i21 = $i20 * $i19;

        $i22 = $i21 * 2;

        $r52 = newarray (double)[$i22];

        r0.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: double[] timeBounds> = $r52;

        i28 = 0;

     label07:
        $r53 = r0.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: double[] timeBounds>;

        $i23 = lengthof $r53;

        if i28 >= $i23 goto label08;

        $r54 = r0.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: double[] timeBounds>;

        $r54[i28] = #NaN;

        i28 = i28 + 1;

        goto label07;

     label08:
        $r10 = new ucar.nc2.units.DateFormatter;

        specialinvoke $r10.<ucar.nc2.units.DateFormatter: void <init>()>();

        i29 = 0;

        i30 = 0;

     label09:
        $i31 = interfaceinvoke $r6.<java.util.List: int size()>();

        if i30 >= $i31 goto label20;

        if z0 == 0 goto label14;

        $r27 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i30);

        r58 = (ucar.nc2.ft.fmrc.TimeCoord) $r27;

        $r28 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite: java.util.Date base>;

        $r29 = virtualinvoke r58.<ucar.nc2.ft.fmrc.TimeCoord: java.util.Date getRunDate()>();

        $d7 = staticinvoke <ucar.nc2.ft.fmrc.FmrcInv: double getOffsetInHours(java.util.Date,java.util.Date)>($r28, $r29);

     label10:
        $r30 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite: double[] runOffset>;

        $d8 = $r30[i29];

        $z4 = staticinvoke <ucar.nc2.util.Misc: boolean closeEnough(double,double)>($d8, $d7);

        if $z4 == 0 goto label11;

        goto label13;

     label11:
        i29 = i29 + 1;

        $r31 = staticinvoke <ucar.nc2.ft.fmrc.FmrcInvLite: org.slf4j.Logger access$100()>();

        $z5 = interfaceinvoke $r31.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z5 == 0 goto label12;

        $r32 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite: java.util.Date base>;

        $r33 = staticinvoke <ucar.nc2.ft.fmrc.FmrcInv: java.util.Date makeOffsetDate(java.util.Date,double)>($r32, $d8);

        $r34 = virtualinvoke $r10.<ucar.nc2.units.DateFormatter: java.lang.String toDateTimeStringISO(java.util.Date)>($r33);

        $r35 = virtualinvoke r58.<ucar.nc2.ft.fmrc.TimeCoord: java.util.Date getRunDate()>();

        $r36 = virtualinvoke $r10.<ucar.nc2.units.DateFormatter: java.lang.String toDateTimeStringISO(java.util.Date)>($r35);

        $r37 = staticinvoke <ucar.nc2.ft.fmrc.FmrcInvLite: org.slf4j.Logger access$100()>();

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r39 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite: java.lang.String collectionName>;

        $r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": runseq missing time ");

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" looking for ");

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for var = ");

        $r46 = virtualinvoke r4.<ucar.nc2.ft.fmrc.FmrcInv$RunSeq: java.util.List getUberGrids()>();

        $r47 = interfaceinvoke $r46.<java.util.List: java.lang.Object get(int)>(0);

        $r48 = (ucar.nc2.ft.fmrc.FmrcInv$UberGrid) $r47;

        $r49 = virtualinvoke $r48.<ucar.nc2.ft.fmrc.FmrcInv$UberGrid: java.lang.String getName()>();

        $r50 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r37.<org.slf4j.Logger: void debug(java.lang.String)>($r51);

     label12:
        goto label10;

     label13:
        goto label15;

     label14:
        $r18 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i29);

        r58 = (ucar.nc2.ft.fmrc.TimeCoord) $r18;

     label15:
        $r19 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite: java.util.Date base>;

        $r20 = virtualinvoke r58.<ucar.nc2.ft.fmrc.TimeCoord: java.util.Date getRunDate()>();

        $d0 = staticinvoke <ucar.nc2.ft.fmrc.FmrcInv: double getOffsetInHours(java.util.Date,java.util.Date)>($r19, $r20);

        $r21 = virtualinvoke r58.<ucar.nc2.ft.fmrc.TimeCoord: double[] getOffsetTimes()>();

        $i18 = lengthof $r21;

        i32 = 0;

     label16:
        if i32 >= $i18 goto label17;

        $r26 = r0.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: double[] timeOffset>;

        $i15 = r0.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: int noffsets>;

        $i16 = i29 * $i15;

        $i17 = $i16 + i32;

        $d5 = $r21[i32];

        $d6 = $d0 + $d5;

        $r26[$i17] = $d6;

        i32 = i32 + 1;

        goto label16;

     label17:
        $z3 = virtualinvoke r4.<ucar.nc2.ft.fmrc.FmrcInv$RunSeq: boolean isInterval()>();

        if $z3 == 0 goto label19;

        $r22 = virtualinvoke r58.<ucar.nc2.ft.fmrc.TimeCoord: double[] getBound1()>();

        $r23 = virtualinvoke r58.<ucar.nc2.ft.fmrc.TimeCoord: double[] getBound2()>();

        i33 = 0;

     label18:
        if i33 >= $i18 goto label19;

        $r24 = r0.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: double[] timeBounds>;

        $i6 = r0.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: int noffsets>;

        $i7 = i29 * $i6;

        $i8 = $i7 + i33;

        $i9 = 2 * $i8;

        $d1 = $r22[i33];

        $d2 = $d0 + $d1;

        $r24[$i9] = $d2;

        $r25 = r0.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: double[] timeBounds>;

        $i10 = r0.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: int noffsets>;

        $i11 = i29 * $i10;

        $i12 = $i11 + i33;

        $i13 = 2 * $i12;

        $i14 = $i13 + 1;

        $d3 = $r23[i33];

        $d4 = $d0 + $d3;

        $r25[$i14] = $d4;

        i33 = i33 + 1;

        goto label18;

     label19:
        i29 = i29 + 1;

        i30 = i30 + 1;

        goto label09;

     label20:
        $r11 = virtualinvoke r4.<ucar.nc2.ft.fmrc.FmrcInv$RunSeq: java.util.List getUberGrids()>();

        $r12 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();

     label21:
        $z2 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label22;

        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r59 = (ucar.nc2.ft.fmrc.FmrcInv$UberGrid) $r13;

        $r15 = r0.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: java.util.List grids>;

        $r14 = new ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$Grid;

        $r16 = virtualinvoke r59.<ucar.nc2.ft.fmrc.FmrcInv$UberGrid: java.lang.String getName()>();

        $r17 = specialinvoke r0.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$GridInventory getInventory(ucar.nc2.ft.fmrc.FmrcInv$UberGrid)>(r59);

        specialinvoke $r14.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$Grid: void <init>(ucar.nc2.ft.fmrc.FmrcInvLite$Gridset,java.lang.String,ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$GridInventory)>(r0, $r16, $r17);

        interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>($r14);

        goto label21;

     label22:
        return;
    }

    private ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$GridInventory getInventory(ucar.nc2.ft.fmrc.FmrcInv$UberGrid)
    {
        ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$GridInventory $r0, r9, r10;
        java.util.Iterator $r5;
        ucar.nc2.ft.fmrc.FmrcInvLite$Gridset r1;
        ucar.nc2.ft.fmrc.FmrcInvLite $r3, $r6;
        java.util.List $r4, $r7;
        ucar.nc2.ft.fmrc.FmrcInv$UberGrid r2;
        java.lang.Object $r8;
        boolean $z0, $z1;

        r1 := @this: ucar.nc2.ft.fmrc.FmrcInvLite$Gridset;

        r2 := @parameter0: ucar.nc2.ft.fmrc.FmrcInv$UberGrid;

        r10 = null;

        $r0 = new ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$GridInventory;

        specialinvoke $r0.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$GridInventory: void <init>(ucar.nc2.ft.fmrc.FmrcInvLite$Gridset,ucar.nc2.ft.fmrc.FmrcInv$UberGrid)>(r1, r2);

        $r3 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: ucar.nc2.ft.fmrc.FmrcInvLite this$0>;

        $r4 = $r3.<ucar.nc2.ft.fmrc.FmrcInvLite: java.util.List invList>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r8 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r9 = (ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$GridInventory) $r8;

        $z1 = staticinvoke <ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$GridInventory: boolean access$200(ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$GridInventory,java.lang.Object)>(r9, $r0);

        if $z1 == 0 goto label2;

        r10 = r9;

        goto label3;

     label2:
        goto label1;

     label3:
        if r10 != null goto label4;

        $r6 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: ucar.nc2.ft.fmrc.FmrcInvLite this$0>;

        $r7 = $r6.<ucar.nc2.ft.fmrc.FmrcInvLite: java.util.List invList>;

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r0);

        r10 = $r0;

     label4:
        return r10;
    }

    double getTimeCoord(int, int)
    {
        double[] $r1;
        ucar.nc2.ft.fmrc.FmrcInvLite$Gridset r0;
        int i0, $i1, i2, $i3, $i4;
        double $d0;

        r0 := @this: ucar.nc2.ft.fmrc.FmrcInvLite$Gridset;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        $r1 = r0.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: double[] timeOffset>;

        $i1 = r0.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: int noffsets>;

        $i3 = i0 * $i1;

        $i4 = $i3 + i2;

        $d0 = $r1[$i4];

        return $d0;
    }

    private java.util.List makeBest(thredds.inventory.FeatureCollectionConfig$BestDataset)
    {
        ucar.nc2.ft.fmrc.FmrcInvLite$TimeInv $r23, $r25;
        ucar.nc2.ft.fmrc.FmrcInvLite$Gridset r1;
        ucar.nc2.ft.fmrc.FmrcInvLite$TimeInv[] $r4, $r6, $r7;
        byte $b15;
        java.util.Map $r9;
        boolean $z0;
        java.util.Collection $r3;
        java.util.List $r8;
        ucar.nc2.ft.fmrc.TimeCoord$Tinv $r22, $r24;
        java.lang.Object[] $r5;
        double[] $r10, $r12, $r13, $r14;
        java.util.HashMap $r21;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i16, i17, $i18;
        thredds.inventory.FeatureCollectionConfig$BestDataset r11;
        double d0, d1, $d2, d3;
        ucar.nc2.ft.fmrc.FmrcInvLite $r2, $r17, $r20;

        r1 := @this: ucar.nc2.ft.fmrc.FmrcInvLite$Gridset;

        r11 := @parameter0: thredds.inventory.FeatureCollectionConfig$BestDataset;

        $r21 = new java.util.HashMap;

        specialinvoke $r21.<java.util.HashMap: void <init>()>();

        i16 = 0;

     label1:
        $r2 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: ucar.nc2.ft.fmrc.FmrcInvLite this$0>;

        $i0 = $r2.<ucar.nc2.ft.fmrc.FmrcInvLite: int nruns>;

        if i16 >= $i0 goto label8;

        i17 = 0;

     label2:
        $i2 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: int noffsets>;

        if i17 >= $i2 goto label7;

        $r10 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: double[] timeOffset>;

        $i3 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: int noffsets>;

        $i4 = i16 * $i3;

        $i5 = $i4 + i17;

        d3 = $r10[$i5];

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d3);

        if $z0 == 0 goto label3;

        goto label6;

     label3:
        if r11 == null goto label4;

        $d2 = r11.<thredds.inventory.FeatureCollectionConfig$BestDataset: double greaterThan>;

        $b15 = d3 cmpg $d2;

        $i18 = (int) $b15;

        if $i18 >= 0 goto label4;

        goto label6;

     label4:
        $r12 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: double[] timeBounds>;

        if $r12 != null goto label5;

        $r22 = new ucar.nc2.ft.fmrc.TimeCoord$Tinv;

        specialinvoke $r22.<ucar.nc2.ft.fmrc.TimeCoord$Tinv: void <init>(double)>(d3);

        $r23 = new ucar.nc2.ft.fmrc.FmrcInvLite$TimeInv;

        $r20 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: ucar.nc2.ft.fmrc.FmrcInvLite this$0>;

        specialinvoke $r23.<ucar.nc2.ft.fmrc.FmrcInvLite$TimeInv: void <init>(ucar.nc2.ft.fmrc.FmrcInvLite,int,int,double)>($r20, i16, i17, d3);

        interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r22, $r23);

        goto label6;

     label5:
        $r13 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: double[] timeBounds>;

        $i6 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: int noffsets>;

        $i7 = i16 * $i6;

        $i8 = $i7 + i17;

        $i9 = 2 * $i8;

        d0 = $r13[$i9];

        $r14 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: double[] timeBounds>;

        $i10 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: int noffsets>;

        $i11 = i16 * $i10;

        $i12 = $i11 + i17;

        $i13 = 2 * $i12;

        $i14 = $i13 + 1;

        d1 = $r14[$i14];

        $r24 = new ucar.nc2.ft.fmrc.TimeCoord$Tinv;

        specialinvoke $r24.<ucar.nc2.ft.fmrc.TimeCoord$Tinv: void <init>(double,double)>(d0, d1);

        $r25 = new ucar.nc2.ft.fmrc.FmrcInvLite$TimeInv;

        $r17 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: ucar.nc2.ft.fmrc.FmrcInvLite this$0>;

        specialinvoke $r25.<ucar.nc2.ft.fmrc.FmrcInvLite$TimeInv: void <init>(ucar.nc2.ft.fmrc.FmrcInvLite,int,int,double,double)>($r17, i16, i17, d0, d1);

        interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r24, $r25);

     label6:
        i17 = i17 + 1;

        goto label2;

     label7:
        i16 = i16 + 1;

        goto label1;

     label8:
        $r3 = interfaceinvoke $r21.<java.util.Map: java.util.Collection values()>();

        $i1 = interfaceinvoke $r3.<java.util.Collection: int size()>();

        $r4 = newarray (ucar.nc2.ft.fmrc.FmrcInvLite$TimeInv)[$i1];

        $r5 = interfaceinvoke $r3.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r6 = (ucar.nc2.ft.fmrc.FmrcInvLite$TimeInv[]) $r5;

        $r7 = (ucar.nc2.ft.fmrc.FmrcInvLite$TimeInv[]) $r6;

        $r8 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r7);

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r8);

        $r9 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: java.util.Map timeCoordMap>;

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Best", $r8);

        return $r8;
    }

    private java.util.List makeRun(int)
    {
        ucar.nc2.ft.fmrc.FmrcInvLite$TimeInv $r11, $r13;
        ucar.nc2.ft.fmrc.FmrcInvLite$Gridset r1;
        java.util.Map $r3;
        boolean $z0;
        java.lang.StringBuilder $r2, $r4, $r5;
        double[] $r7, $r8, $r9, $r10;
        java.util.ArrayList $r0;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15;
        java.lang.String $r6;
        double d0, d1, d2;
        ucar.nc2.ft.fmrc.FmrcInvLite $r12, $r14;

        r1 := @this: ucar.nc2.ft.fmrc.FmrcInvLite$Gridset;

        i2 := @parameter0: int;

        $r0 = new java.util.ArrayList;

        $i0 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: int noffsets>;

        specialinvoke $r0.<java.util.ArrayList: void <init>(int)>($i0);

        i15 = 0;

     label1:
        $i1 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: int noffsets>;

        if i15 >= $i1 goto label5;

        $r7 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: double[] timeOffset>;

        $i3 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: int noffsets>;

        $i4 = i2 * $i3;

        $i5 = $i4 + i15;

        d0 = $r7[$i5];

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0);

        if $z0 == 0 goto label2;

        goto label4;

     label2:
        $r8 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: double[] timeBounds>;

        if $r8 != null goto label3;

        $r13 = new ucar.nc2.ft.fmrc.FmrcInvLite$TimeInv;

        $r14 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: ucar.nc2.ft.fmrc.FmrcInvLite this$0>;

        specialinvoke $r13.<ucar.nc2.ft.fmrc.FmrcInvLite$TimeInv: void <init>(ucar.nc2.ft.fmrc.FmrcInvLite,int,int,double)>($r14, i2, i15, d0);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r13);

        goto label4;

     label3:
        $r9 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: double[] timeBounds>;

        $i6 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: int noffsets>;

        $i7 = i2 * $i6;

        $i8 = $i7 + i15;

        $i9 = 2 * $i8;

        d1 = $r9[$i9];

        $r10 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: double[] timeBounds>;

        $i10 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: int noffsets>;

        $i11 = i2 * $i10;

        $i12 = $i11 + i15;

        $i13 = 2 * $i12;

        $i14 = $i13 + 1;

        d2 = $r10[$i14];

        $r11 = new ucar.nc2.ft.fmrc.FmrcInvLite$TimeInv;

        $r12 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: ucar.nc2.ft.fmrc.FmrcInvLite this$0>;

        specialinvoke $r11.<ucar.nc2.ft.fmrc.FmrcInvLite$TimeInv: void <init>(ucar.nc2.ft.fmrc.FmrcInvLite,int,int,double,double)>($r12, i2, i15, d1, d2);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r11);

     label4:
        i15 = i15 + 1;

        goto label1;

     label5:
        $r3 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: java.util.Map timeCoordMap>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("run");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r0);

        return $r0;
    }

    private java.util.List makeConstantForecast(double)
    {
        ucar.nc2.ft.fmrc.FmrcInvLite$TimeInv $r9;
        double[] $r8, $r10;
        ucar.nc2.ft.fmrc.FmrcInvLite$Gridset r1;
        java.util.ArrayList $r0;
        java.util.Map $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9;
        java.lang.String $r7;
        double d0, d1, $d2, $d3;
        boolean $z0, $z1;
        ucar.nc2.ft.fmrc.FmrcInvLite $r2, $r11;
        java.lang.StringBuilder $r3, $r5, $r6;

        r1 := @this: ucar.nc2.ft.fmrc.FmrcInvLite$Gridset;

        d0 := @parameter0: double;

        $r0 = new java.util.ArrayList;

        $i0 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: int noffsets>;

        specialinvoke $r0.<java.util.ArrayList: void <init>(int)>($i0);

        i8 = 0;

     label1:
        $r2 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: ucar.nc2.ft.fmrc.FmrcInvLite this$0>;

        $i1 = $r2.<ucar.nc2.ft.fmrc.FmrcInvLite: int nruns>;

        if i8 >= $i1 goto label6;

        i9 = 0;

     label2:
        $i2 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: int noffsets>;

        if i9 >= $i2 goto label5;

        $r8 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: double[] timeOffset>;

        $i3 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: int noffsets>;

        $i4 = i8 * $i3;

        $i5 = $i4 + i9;

        d1 = $r8[$i5];

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d1);

        if $z0 == 0 goto label3;

        goto label4;

     label3:
        $z1 = staticinvoke <ucar.nc2.util.Misc: boolean closeEnough(double,double)>(d1, d0);

        if $z1 == 0 goto label4;

        $r9 = new ucar.nc2.ft.fmrc.FmrcInvLite$TimeInv;

        $r11 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: ucar.nc2.ft.fmrc.FmrcInvLite this$0>;

        $r10 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: double[] timeOffset>;

        $i6 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: int noffsets>;

        $i7 = i8 * $i6;

        $d2 = $r10[$i7];

        $d3 = d0 - $d2;

        specialinvoke $r9.<ucar.nc2.ft.fmrc.FmrcInvLite$TimeInv: void <init>(ucar.nc2.ft.fmrc.FmrcInvLite,int,int,double)>($r11, i8, i9, $d3);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r9);

     label4:
        i9 = i9 + 1;

        goto label2;

     label5:
        i8 = i8 + 1;

        goto label1;

     label6:
        $r4 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: java.util.Map timeCoordMap>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("forecast");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r0);

        return $r0;
    }

    private java.util.List makeConstantOffset(double)
    {
        ucar.nc2.ft.fmrc.FmrcInvLite$TimeInv $r11;
        double[] $r10;
        ucar.nc2.ft.fmrc.FmrcInvLite$Gridset r1;
        java.util.ArrayList $r0;
        java.util.Map $r5;
        int $i0, $i1, $i2, i3, i4;
        java.lang.String $r8;
        double d0, $d1, $d2, d3;
        boolean $z0, $z1;
        ucar.nc2.ft.fmrc.FmrcInvLite $r2, $r3, $r9, $r12;
        java.lang.StringBuilder $r4, $r6, $r7;

        r1 := @this: ucar.nc2.ft.fmrc.FmrcInvLite$Gridset;

        d0 := @parameter0: double;

        $r0 = new java.util.ArrayList;

        $r2 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: ucar.nc2.ft.fmrc.FmrcInvLite this$0>;

        $i0 = $r2.<ucar.nc2.ft.fmrc.FmrcInvLite: int nruns>;

        specialinvoke $r0.<java.util.ArrayList: void <init>(int)>($i0);

        i3 = 0;

     label1:
        $r3 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: ucar.nc2.ft.fmrc.FmrcInvLite this$0>;

        $i1 = $r3.<ucar.nc2.ft.fmrc.FmrcInvLite: int nruns>;

        if i3 >= $i1 goto label6;

        i4 = 0;

     label2:
        $i2 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: int noffsets>;

        if i4 >= $i2 goto label5;

        $d1 = virtualinvoke r1.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: double getTimeCoord(int,int)>(i3, i4);

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        if $z0 == 0 goto label3;

        goto label4;

     label3:
        $r9 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: ucar.nc2.ft.fmrc.FmrcInvLite this$0>;

        $r10 = $r9.<ucar.nc2.ft.fmrc.FmrcInvLite: double[] runOffset>;

        $d2 = $r10[i3];

        d3 = $d1 - $d2;

        $z1 = staticinvoke <ucar.nc2.util.Misc: boolean closeEnough(double,double)>(d3, d0);

        if $z1 == 0 goto label4;

        $r11 = new ucar.nc2.ft.fmrc.FmrcInvLite$TimeInv;

        $r12 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: ucar.nc2.ft.fmrc.FmrcInvLite this$0>;

        specialinvoke $r11.<ucar.nc2.ft.fmrc.FmrcInvLite$TimeInv: void <init>(ucar.nc2.ft.fmrc.FmrcInvLite,int,int,double)>($r12, i3, i4, $d1);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r11);

     label4:
        i4 = i4 + 1;

        goto label2;

     label5:
        i3 = i3 + 1;

        goto label1;

     label6:
        $r5 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: java.util.Map timeCoordMap>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("offset");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r0);

        return $r0;
    }

    static java.util.List access$000(ucar.nc2.ft.fmrc.FmrcInvLite$Gridset, thredds.inventory.FeatureCollectionConfig$BestDataset)
    {
        java.util.List $r2;
        thredds.inventory.FeatureCollectionConfig$BestDataset r1;
        ucar.nc2.ft.fmrc.FmrcInvLite$Gridset r0;

        r0 := @parameter0: ucar.nc2.ft.fmrc.FmrcInvLite$Gridset;

        r1 := @parameter1: thredds.inventory.FeatureCollectionConfig$BestDataset;

        $r2 = specialinvoke r0.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: java.util.List makeBest(thredds.inventory.FeatureCollectionConfig$BestDataset)>(r1);

        return $r2;
    }

    static java.util.List access$300(ucar.nc2.ft.fmrc.FmrcInvLite$Gridset, int)
    {
        int i0;
        java.util.List $r1;
        ucar.nc2.ft.fmrc.FmrcInvLite$Gridset r0;

        r0 := @parameter0: ucar.nc2.ft.fmrc.FmrcInvLite$Gridset;

        i0 := @parameter1: int;

        $r1 = specialinvoke r0.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: java.util.List makeRun(int)>(i0);

        return $r1;
    }

    static java.util.List access$400(ucar.nc2.ft.fmrc.FmrcInvLite$Gridset, double)
    {
        java.util.List $r1;
        ucar.nc2.ft.fmrc.FmrcInvLite$Gridset r0;
        double d0;

        r0 := @parameter0: ucar.nc2.ft.fmrc.FmrcInvLite$Gridset;

        d0 := @parameter1: double;

        $r1 = specialinvoke r0.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: java.util.List makeConstantForecast(double)>(d0);

        return $r1;
    }

    static java.util.List access$500(ucar.nc2.ft.fmrc.FmrcInvLite$Gridset, double)
    {
        java.util.List $r1;
        ucar.nc2.ft.fmrc.FmrcInvLite$Gridset r0;
        double d0;

        r0 := @parameter0: ucar.nc2.ft.fmrc.FmrcInvLite$Gridset;

        d0 := @parameter1: double;

        $r1 = specialinvoke r0.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: java.util.List makeConstantOffset(double)>(d0);

        return $r1;
    }
}
