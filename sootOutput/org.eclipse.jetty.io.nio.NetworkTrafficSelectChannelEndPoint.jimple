public class org.eclipse.jetty.io.nio.NetworkTrafficSelectChannelEndPoint extends org.eclipse.jetty.io.nio.SelectChannelEndPoint
{
    private static final org.eclipse.jetty.util.log.Logger LOG;
    private final java.util.List listeners;

    public void <init>(java.nio.channels.SocketChannel, org.eclipse.jetty.io.nio.SelectorManager$SelectSet, java.nio.channels.SelectionKey, int, java.util.List) throws java.io.IOException
    {
        java.util.List r4;
        org.eclipse.jetty.io.nio.NetworkTrafficSelectChannelEndPoint r0;
        org.eclipse.jetty.io.nio.SelectorManager$SelectSet r2;
        java.nio.channels.SocketChannel r1;
        java.nio.channels.SelectionKey r3;
        int i0;

        r0 := @this: org.eclipse.jetty.io.nio.NetworkTrafficSelectChannelEndPoint;

        r1 := @parameter0: java.nio.channels.SocketChannel;

        r2 := @parameter1: org.eclipse.jetty.io.nio.SelectorManager$SelectSet;

        r3 := @parameter2: java.nio.channels.SelectionKey;

        i0 := @parameter3: int;

        r4 := @parameter4: java.util.List;

        specialinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void <init>(java.nio.channels.SocketChannel,org.eclipse.jetty.io.nio.SelectorManager$SelectSet,java.nio.channels.SelectionKey,int)>(r1, r2, r3, i0);

        r0.<org.eclipse.jetty.io.nio.NetworkTrafficSelectChannelEndPoint: java.util.List listeners> = r4;

        return;
    }

    public int fill(org.eclipse.jetty.io.Buffer) throws java.io.IOException
    {
        int $i0;
        org.eclipse.jetty.io.nio.NetworkTrafficSelectChannelEndPoint r0;
        org.eclipse.jetty.io.Buffer r1;

        r0 := @this: org.eclipse.jetty.io.nio.NetworkTrafficSelectChannelEndPoint;

        r1 := @parameter0: org.eclipse.jetty.io.Buffer;

        $i0 = specialinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: int fill(org.eclipse.jetty.io.Buffer)>(r1);

        virtualinvoke r0.<org.eclipse.jetty.io.nio.NetworkTrafficSelectChannelEndPoint: void notifyIncoming(org.eclipse.jetty.io.Buffer,int)>(r1, $i0);

        return $i0;
    }

    public int flush(org.eclipse.jetty.io.Buffer) throws java.io.IOException
    {
        org.eclipse.jetty.io.nio.NetworkTrafficSelectChannelEndPoint r1;
        int $i0, $i1;
        org.eclipse.jetty.io.Buffer r0;

        r1 := @this: org.eclipse.jetty.io.nio.NetworkTrafficSelectChannelEndPoint;

        r0 := @parameter0: org.eclipse.jetty.io.Buffer;

        $i0 = interfaceinvoke r0.<org.eclipse.jetty.io.Buffer: int getIndex()>();

        $i1 = specialinvoke r1.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: int flush(org.eclipse.jetty.io.Buffer)>(r0);

        virtualinvoke r1.<org.eclipse.jetty.io.nio.NetworkTrafficSelectChannelEndPoint: void notifyOutgoing(org.eclipse.jetty.io.Buffer,int,int)>(r0, $i0, $i1);

        return $i1;
    }

    protected int gatheringFlush(org.eclipse.jetty.io.Buffer, java.nio.ByteBuffer, org.eclipse.jetty.io.Buffer, java.nio.ByteBuffer) throws java.io.IOException
    {
        org.eclipse.jetty.io.nio.NetworkTrafficSelectChannelEndPoint r2;
        java.nio.ByteBuffer r3, r4;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        org.eclipse.jetty.io.Buffer r0, r1;

        r2 := @this: org.eclipse.jetty.io.nio.NetworkTrafficSelectChannelEndPoint;

        r0 := @parameter0: org.eclipse.jetty.io.Buffer;

        r3 := @parameter1: java.nio.ByteBuffer;

        r1 := @parameter2: org.eclipse.jetty.io.Buffer;

        r4 := @parameter3: java.nio.ByteBuffer;

        $i0 = interfaceinvoke r0.<org.eclipse.jetty.io.Buffer: int getIndex()>();

        $i1 = interfaceinvoke r0.<org.eclipse.jetty.io.Buffer: int length()>();

        $i2 = interfaceinvoke r1.<org.eclipse.jetty.io.Buffer: int getIndex()>();

        $i3 = specialinvoke r2.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: int gatheringFlush(org.eclipse.jetty.io.Buffer,java.nio.ByteBuffer,org.eclipse.jetty.io.Buffer,java.nio.ByteBuffer)>(r0, r3, r1, r4);

        if $i3 <= $i1 goto label1;

        $i4 = $i1;

        goto label2;

     label1:
        $i4 = $i3;

     label2:
        virtualinvoke r2.<org.eclipse.jetty.io.nio.NetworkTrafficSelectChannelEndPoint: void notifyOutgoing(org.eclipse.jetty.io.Buffer,int,int)>(r0, $i0, $i4);

        if $i3 <= $i1 goto label3;

        $i5 = $i3 - $i1;

        goto label4;

     label3:
        $i5 = 0;

     label4:
        virtualinvoke r2.<org.eclipse.jetty.io.nio.NetworkTrafficSelectChannelEndPoint: void notifyOutgoing(org.eclipse.jetty.io.Buffer,int,int)>(r1, $i2, $i5);

        return $i3;
    }

    public void notifyOpened()
    {
        java.net.Socket $r7;
        org.eclipse.jetty.io.nio.NetworkTrafficSelectChannelEndPoint r0;
        java.util.Iterator $r4;
        org.eclipse.jetty.io.NetworkTrafficListener r6;
        java.lang.Exception $r8;
        java.util.List $r1, $r2, $r3;
        java.lang.Object $r5;
        org.eclipse.jetty.util.log.Logger $r9;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jetty.io.nio.NetworkTrafficSelectChannelEndPoint;

        $r1 = r0.<org.eclipse.jetty.io.nio.NetworkTrafficSelectChannelEndPoint: java.util.List listeners>;

        if $r1 == null goto label6;

        $r2 = r0.<org.eclipse.jetty.io.nio.NetworkTrafficSelectChannelEndPoint: java.util.List listeners>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label6;

        $r3 = r0.<org.eclipse.jetty.io.nio.NetworkTrafficSelectChannelEndPoint: java.util.List listeners>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.eclipse.jetty.io.NetworkTrafficListener) $r5;

     label2:
        $r7 = r0.<org.eclipse.jetty.io.nio.NetworkTrafficSelectChannelEndPoint: java.net.Socket _socket>;

        interfaceinvoke r6.<org.eclipse.jetty.io.NetworkTrafficListener: void opened(java.net.Socket)>($r7);

     label3:
        goto label5;

     label4:
        $r8 := @caughtexception;

        $r9 = <org.eclipse.jetty.io.nio.NetworkTrafficSelectChannelEndPoint: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r9.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.Throwable)>($r8);

     label5:
        goto label1;

     label6:
        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public void notifyIncoming(org.eclipse.jetty.io.Buffer, int)
    {
        java.net.Socket $r9;
        org.eclipse.jetty.io.nio.NetworkTrafficSelectChannelEndPoint r0;
        java.util.Iterator $r4;
        org.eclipse.jetty.io.NetworkTrafficListener r6;
        java.lang.Exception $r10;
        java.util.List $r1, $r2, $r3;
        int i0;
        java.lang.Object $r5;
        org.eclipse.jetty.util.log.Logger $r11;
        org.eclipse.jetty.io.Buffer r7, $r8;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jetty.io.nio.NetworkTrafficSelectChannelEndPoint;

        r7 := @parameter0: org.eclipse.jetty.io.Buffer;

        i0 := @parameter1: int;

        $r1 = r0.<org.eclipse.jetty.io.nio.NetworkTrafficSelectChannelEndPoint: java.util.List listeners>;

        if $r1 == null goto label6;

        $r2 = r0.<org.eclipse.jetty.io.nio.NetworkTrafficSelectChannelEndPoint: java.util.List listeners>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label6;

        if i0 <= 0 goto label6;

        $r3 = r0.<org.eclipse.jetty.io.nio.NetworkTrafficSelectChannelEndPoint: java.util.List listeners>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.eclipse.jetty.io.NetworkTrafficListener) $r5;

     label2:
        $r8 = interfaceinvoke r7.<org.eclipse.jetty.io.Buffer: org.eclipse.jetty.io.Buffer asReadOnlyBuffer()>();

        $r9 = r0.<org.eclipse.jetty.io.nio.NetworkTrafficSelectChannelEndPoint: java.net.Socket _socket>;

        interfaceinvoke r6.<org.eclipse.jetty.io.NetworkTrafficListener: void incoming(java.net.Socket,org.eclipse.jetty.io.Buffer)>($r9, $r8);

     label3:
        goto label5;

     label4:
        $r10 := @caughtexception;

        $r11 = <org.eclipse.jetty.io.nio.NetworkTrafficSelectChannelEndPoint: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r11.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.Throwable)>($r10);

     label5:
        goto label1;

     label6:
        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public void notifyOutgoing(org.eclipse.jetty.io.Buffer, int, int)
    {
        java.net.Socket $r9;
        org.eclipse.jetty.io.nio.NetworkTrafficSelectChannelEndPoint r0;
        org.eclipse.jetty.io.NetworkTrafficListener r6;
        int i0, i1, $i2;
        org.eclipse.jetty.io.Buffer r7, $r8;
        boolean $z0, $z1;
        java.util.Iterator $r4;
        java.lang.Exception $r10;
        java.util.List $r1, $r2, $r3;
        java.lang.Object $r5;
        org.eclipse.jetty.util.log.Logger $r11;

        r0 := @this: org.eclipse.jetty.io.nio.NetworkTrafficSelectChannelEndPoint;

        r7 := @parameter0: org.eclipse.jetty.io.Buffer;

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        $r1 = r0.<org.eclipse.jetty.io.nio.NetworkTrafficSelectChannelEndPoint: java.util.List listeners>;

        if $r1 == null goto label6;

        $r2 = r0.<org.eclipse.jetty.io.nio.NetworkTrafficSelectChannelEndPoint: java.util.List listeners>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label6;

        if i0 <= 0 goto label6;

        $r3 = r0.<org.eclipse.jetty.io.nio.NetworkTrafficSelectChannelEndPoint: java.util.List listeners>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.eclipse.jetty.io.NetworkTrafficListener) $r5;

     label2:
        $r8 = interfaceinvoke r7.<org.eclipse.jetty.io.Buffer: org.eclipse.jetty.io.Buffer asReadOnlyBuffer()>();

        interfaceinvoke $r8.<org.eclipse.jetty.io.Buffer: void setGetIndex(int)>(i1);

        $i2 = i1 + i0;

        interfaceinvoke $r8.<org.eclipse.jetty.io.Buffer: void setPutIndex(int)>($i2);

        $r9 = r0.<org.eclipse.jetty.io.nio.NetworkTrafficSelectChannelEndPoint: java.net.Socket _socket>;

        interfaceinvoke r6.<org.eclipse.jetty.io.NetworkTrafficListener: void outgoing(java.net.Socket,org.eclipse.jetty.io.Buffer)>($r9, $r8);

     label3:
        goto label5;

     label4:
        $r10 := @caughtexception;

        $r11 = <org.eclipse.jetty.io.nio.NetworkTrafficSelectChannelEndPoint: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r11.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.Throwable)>($r10);

     label5:
        goto label1;

     label6:
        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public void notifyClosed()
    {
        java.net.Socket $r7;
        org.eclipse.jetty.io.nio.NetworkTrafficSelectChannelEndPoint r0;
        java.util.Iterator $r4;
        org.eclipse.jetty.io.NetworkTrafficListener r6;
        java.lang.Exception $r8;
        java.util.List $r1, $r2, $r3;
        java.lang.Object $r5;
        org.eclipse.jetty.util.log.Logger $r9;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jetty.io.nio.NetworkTrafficSelectChannelEndPoint;

        $r1 = r0.<org.eclipse.jetty.io.nio.NetworkTrafficSelectChannelEndPoint: java.util.List listeners>;

        if $r1 == null goto label6;

        $r2 = r0.<org.eclipse.jetty.io.nio.NetworkTrafficSelectChannelEndPoint: java.util.List listeners>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label6;

        $r3 = r0.<org.eclipse.jetty.io.nio.NetworkTrafficSelectChannelEndPoint: java.util.List listeners>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.eclipse.jetty.io.NetworkTrafficListener) $r5;

     label2:
        $r7 = r0.<org.eclipse.jetty.io.nio.NetworkTrafficSelectChannelEndPoint: java.net.Socket _socket>;

        interfaceinvoke r6.<org.eclipse.jetty.io.NetworkTrafficListener: void closed(java.net.Socket)>($r7);

     label3:
        goto label5;

     label4:
        $r8 := @caughtexception;

        $r9 = <org.eclipse.jetty.io.nio.NetworkTrafficSelectChannelEndPoint: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r9.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.Throwable)>($r8);

     label5:
        goto label1;

     label6:
        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    static void <clinit>()
    {
        org.eclipse.jetty.util.log.Logger $r0;

        $r0 = staticinvoke <org.eclipse.jetty.util.log.Log: org.eclipse.jetty.util.log.Logger getLogger(java.lang.Class)>(class "Lorg/eclipse/jetty/io/nio/NetworkTrafficSelectChannelEndPoint;");

        <org.eclipse.jetty.io.nio.NetworkTrafficSelectChannelEndPoint: org.eclipse.jetty.util.log.Logger LOG> = $r0;

        return;
    }
}
