public class com.jhlabs.image.SplineColormap extends com.jhlabs.image.ArrayColormap implements java.io.Serializable
{
    public int numKnots;
    public int[] xKnots;
    public int[] yKnots;

    public void <init>()
    {
        int[] $r1, $r2;
        com.jhlabs.image.SplineColormap r0;
        int $i1, $i3;

        r0 := @this: com.jhlabs.image.SplineColormap;

        specialinvoke r0.<com.jhlabs.image.ArrayColormap: void <init>()>();

        r0.<com.jhlabs.image.SplineColormap: int numKnots> = 4;

        $r1 = newarray (int)[4];

        $r1[0] = 0;

        $r1[1] = 0;

        $r1[2] = 255;

        $r1[3] = 255;

        r0.<com.jhlabs.image.SplineColormap: int[] xKnots> = $r1;

        $r2 = newarray (int)[4];

        $r2[0] = -16777216;

        $r2[1] = -16777216;

        $i1 = (int) -1;

        $r2[2] = $i1;

        $i3 = (int) -1;

        $r2[3] = $i3;

        r0.<com.jhlabs.image.SplineColormap: int[] yKnots> = $r2;

        specialinvoke r0.<com.jhlabs.image.SplineColormap: void rebuildGradient()>();

        return;
    }

    public void <init>(int[], int[])
    {
        int[] $r1, $r2, r3, r4;
        com.jhlabs.image.SplineColormap r0;
        int $i0, $i2, $i4;

        r0 := @this: com.jhlabs.image.SplineColormap;

        r3 := @parameter0: int[];

        r4 := @parameter1: int[];

        specialinvoke r0.<com.jhlabs.image.ArrayColormap: void <init>()>();

        r0.<com.jhlabs.image.SplineColormap: int numKnots> = 4;

        $r1 = newarray (int)[4];

        $r1[0] = 0;

        $r1[1] = 0;

        $r1[2] = 255;

        $r1[3] = 255;

        r0.<com.jhlabs.image.SplineColormap: int[] xKnots> = $r1;

        $r2 = newarray (int)[4];

        $r2[0] = -16777216;

        $r2[1] = -16777216;

        $i2 = (int) -1;

        $r2[2] = $i2;

        $i4 = (int) -1;

        $r2[3] = $i4;

        r0.<com.jhlabs.image.SplineColormap: int[] yKnots> = $r2;

        r0.<com.jhlabs.image.SplineColormap: int[] xKnots> = r3;

        r0.<com.jhlabs.image.SplineColormap: int[] yKnots> = r4;

        $i0 = lengthof r3;

        r0.<com.jhlabs.image.SplineColormap: int numKnots> = $i0;

        specialinvoke r0.<com.jhlabs.image.SplineColormap: void rebuildGradient()>();

        return;
    }

    public int getKnot(int)
    {
        int[] $r1;
        com.jhlabs.image.SplineColormap r0;
        int i0, $i1;

        r0 := @this: com.jhlabs.image.SplineColormap;

        i0 := @parameter0: int;

        $r1 = r0.<com.jhlabs.image.SplineColormap: int[] yKnots>;

        $i1 = $r1[i0];

        return $i1;
    }

    public void setKnot(int, int)
    {
        int[] $r1;
        com.jhlabs.image.SplineColormap r0;
        int i0, i1;

        r0 := @this: com.jhlabs.image.SplineColormap;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.jhlabs.image.SplineColormap: int[] yKnots>;

        $r1[i0] = i1;

        specialinvoke r0.<com.jhlabs.image.SplineColormap: void rebuildGradient()>();

        return;
    }

    public void addKnot(int, int)
    {
        int[] r1, r2, $r3, $r4, $r5, $r6;
        com.jhlabs.image.SplineColormap r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, $i7, i8, $i9, $i10, $i11;

        r0 := @this: com.jhlabs.image.SplineColormap;

        i6 := @parameter0: int;

        i8 := @parameter1: int;

        $i0 = r0.<com.jhlabs.image.SplineColormap: int numKnots>;

        $i1 = $i0 + 1;

        r1 = newarray (int)[$i1];

        $i2 = r0.<com.jhlabs.image.SplineColormap: int numKnots>;

        $i3 = $i2 + 1;

        r2 = newarray (int)[$i3];

        $r3 = r0.<com.jhlabs.image.SplineColormap: int[] xKnots>;

        $i4 = r0.<com.jhlabs.image.SplineColormap: int numKnots>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, r1, 0, $i4);

        $r4 = r0.<com.jhlabs.image.SplineColormap: int[] yKnots>;

        $i5 = r0.<com.jhlabs.image.SplineColormap: int numKnots>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, r2, 0, $i5);

        r0.<com.jhlabs.image.SplineColormap: int[] xKnots> = r1;

        r0.<com.jhlabs.image.SplineColormap: int[] yKnots> = r2;

        $r5 = r0.<com.jhlabs.image.SplineColormap: int[] xKnots>;

        $i7 = r0.<com.jhlabs.image.SplineColormap: int numKnots>;

        $r5[$i7] = i6;

        $r6 = r0.<com.jhlabs.image.SplineColormap: int[] yKnots>;

        $i9 = r0.<com.jhlabs.image.SplineColormap: int numKnots>;

        $r6[$i9] = i8;

        $i10 = r0.<com.jhlabs.image.SplineColormap: int numKnots>;

        $i11 = $i10 + 1;

        r0.<com.jhlabs.image.SplineColormap: int numKnots> = $i11;

        specialinvoke r0.<com.jhlabs.image.SplineColormap: void sortKnots()>();

        specialinvoke r0.<com.jhlabs.image.SplineColormap: void rebuildGradient()>();

        return;
    }

    public void removeKnot(int)
    {
        int[] $r1, $r2, $r3, $r4;
        com.jhlabs.image.SplineColormap r0;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;

        r0 := @this: com.jhlabs.image.SplineColormap;

        i1 := @parameter0: int;

        $i0 = r0.<com.jhlabs.image.SplineColormap: int numKnots>;

        if $i0 > 4 goto label1;

        return;

     label1:
        $i2 = r0.<com.jhlabs.image.SplineColormap: int numKnots>;

        $i3 = $i2 - 1;

        if i1 >= $i3 goto label2;

        $r2 = r0.<com.jhlabs.image.SplineColormap: int[] xKnots>;

        $i9 = i1 + 1;

        $r1 = r0.<com.jhlabs.image.SplineColormap: int[] xKnots>;

        $i6 = r0.<com.jhlabs.image.SplineColormap: int numKnots>;

        $i7 = $i6 - i1;

        $i8 = $i7 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i9, $r1, i1, $i8);

        $r4 = r0.<com.jhlabs.image.SplineColormap: int[] yKnots>;

        $i13 = i1 + 1;

        $r3 = r0.<com.jhlabs.image.SplineColormap: int[] yKnots>;

        $i10 = r0.<com.jhlabs.image.SplineColormap: int numKnots>;

        $i11 = $i10 - i1;

        $i12 = $i11 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, $i13, $r3, i1, $i12);

     label2:
        $i4 = r0.<com.jhlabs.image.SplineColormap: int numKnots>;

        $i5 = $i4 - 1;

        r0.<com.jhlabs.image.SplineColormap: int numKnots> = $i5;

        specialinvoke r0.<com.jhlabs.image.SplineColormap: void rebuildGradient()>();

        return;
    }

    public void setKnotPosition(int, int)
    {
        int[] $r1;
        com.jhlabs.image.SplineColormap r0;
        int i0, i1, $i2;

        r0 := @this: com.jhlabs.image.SplineColormap;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.jhlabs.image.SplineColormap: int[] xKnots>;

        $i2 = staticinvoke <com.jhlabs.image.PixelUtils: int clamp(int)>(i1);

        $r1[i0] = $i2;

        specialinvoke r0.<com.jhlabs.image.SplineColormap: void sortKnots()>();

        specialinvoke r0.<com.jhlabs.image.SplineColormap: void rebuildGradient()>();

        return;
    }

    private void rebuildGradient()
    {
        int[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        com.jhlabs.image.SplineColormap r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, $i12;

        r0 := @this: com.jhlabs.image.SplineColormap;

        $r1 = r0.<com.jhlabs.image.SplineColormap: int[] xKnots>;

        $i12 = (int) -1;

        $r1[0] = $i12;

        $r2 = r0.<com.jhlabs.image.SplineColormap: int[] xKnots>;

        $i0 = r0.<com.jhlabs.image.SplineColormap: int numKnots>;

        $i1 = $i0 - 1;

        $r2[$i1] = 256;

        $r4 = r0.<com.jhlabs.image.SplineColormap: int[] yKnots>;

        $r3 = r0.<com.jhlabs.image.SplineColormap: int[] yKnots>;

        $i2 = $r3[1];

        $r4[0] = $i2;

        $r6 = r0.<com.jhlabs.image.SplineColormap: int[] yKnots>;

        $i3 = r0.<com.jhlabs.image.SplineColormap: int numKnots>;

        $i7 = $i3 - 1;

        $r5 = r0.<com.jhlabs.image.SplineColormap: int[] yKnots>;

        $i4 = r0.<com.jhlabs.image.SplineColormap: int numKnots>;

        $i5 = $i4 - 2;

        $i6 = $r5[$i5];

        $r6[$i7] = $i6;

        i10 = 0;

     label1:
        if i10 >= 256 goto label2;

        $r9 = r0.<com.jhlabs.image.ArrayColormap: int[] map>;

        $i8 = r0.<com.jhlabs.image.SplineColormap: int numKnots>;

        $r8 = r0.<com.jhlabs.image.SplineColormap: int[] xKnots>;

        $r7 = r0.<com.jhlabs.image.SplineColormap: int[] yKnots>;

        $i9 = staticinvoke <com.jhlabs.image.ImageMath: int colorSpline(int,int,int[],int[])>(i10, $i8, $r8, $r7);

        $r9[i10] = $i9;

        i10 = i10 + 1;

        goto label1;

     label2:
        return;
    }

    private void sortKnots()
    {
        int[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        com.jhlabs.image.SplineColormap r0;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, i7, i8;

        r0 := @this: com.jhlabs.image.SplineColormap;

        i5 = 1;

     label1:
        $i0 = r0.<com.jhlabs.image.SplineColormap: int numKnots>;

        if i5 >= $i0 goto label5;

        i6 = 1;

     label2:
        if i6 >= i5 goto label4;

        $r1 = r0.<com.jhlabs.image.SplineColormap: int[] xKnots>;

        $i2 = $r1[i5];

        $r2 = r0.<com.jhlabs.image.SplineColormap: int[] xKnots>;

        $i1 = $r2[i6];

        if $i2 >= $i1 goto label3;

        $r3 = r0.<com.jhlabs.image.SplineColormap: int[] xKnots>;

        i7 = $r3[i5];

        $r5 = r0.<com.jhlabs.image.SplineColormap: int[] xKnots>;

        $r4 = r0.<com.jhlabs.image.SplineColormap: int[] xKnots>;

        $i3 = $r4[i6];

        $r5[i5] = $i3;

        $r6 = r0.<com.jhlabs.image.SplineColormap: int[] xKnots>;

        $r6[i6] = i7;

        $r7 = r0.<com.jhlabs.image.SplineColormap: int[] yKnots>;

        i8 = $r7[i5];

        $r9 = r0.<com.jhlabs.image.SplineColormap: int[] yKnots>;

        $r8 = r0.<com.jhlabs.image.SplineColormap: int[] yKnots>;

        $i4 = $r8[i6];

        $r9[i5] = $i4;

        $r10 = r0.<com.jhlabs.image.SplineColormap: int[] yKnots>;

        $r10[i6] = i8;

     label3:
        i6 = i6 + 1;

        goto label2;

     label4:
        i5 = i5 + 1;

        goto label1;

     label5:
        return;
    }
}
