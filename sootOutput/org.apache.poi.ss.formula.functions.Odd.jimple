public final class org.apache.poi.ss.formula.functions.Odd extends org.apache.poi.ss.formula.functions.NumericFunction$OneArg
{
    private static final long PARITY_MASK;

    public void <init>()
    {
        org.apache.poi.ss.formula.functions.Odd r0;

        r0 := @this: org.apache.poi.ss.formula.functions.Odd;

        specialinvoke r0.<org.apache.poi.ss.formula.functions.NumericFunction$OneArg: void <init>()>();

        return;
    }

    protected double evaluate(double)
    {
        org.apache.poi.ss.formula.functions.Odd r0;
        long $l2, $l3, $l4;
        byte $b0, $b1;
        int $i5;
        double d0, $d1, $d2, $d3;

        r0 := @this: org.apache.poi.ss.formula.functions.Odd;

        d0 := @parameter0: double;

        $b0 = d0 cmpl 0.0;

        if $b0 != 0 goto label1;

        return 1.0;

     label1:
        $b1 = d0 cmpl 0.0;

        $i5 = (int) $b1;

        if $i5 <= 0 goto label2;

        $l4 = staticinvoke <org.apache.poi.ss.formula.functions.Odd: long calcOdd(double)>(d0);

        $d3 = (double) $l4;

        return $d3;

     label2:
        $d1 = neg d0;

        $l2 = staticinvoke <org.apache.poi.ss.formula.functions.Odd: long calcOdd(double)>($d1);

        $l3 = neg $l2;

        $d2 = (double) $l3;

        return $d2;
    }

    private static long calcOdd(double)
    {
        long $l0, l1, $l3, $l4;
        byte $b2;
        double d0, d1, $d2;

        d0 := @parameter0: double;

        d1 = d0 + 1.0;

        $l0 = (long) d1;

        l1 = $l0 & -2L;

        $d2 = (double) l1;

        $b2 = $d2 cmpl d1;

        if $b2 != 0 goto label1;

        $l4 = l1 - 1L;

        return $l4;

     label1:
        $l3 = l1 + 1L;

        return $l3;
    }

    public static void <clinit>()
    {
        <org.apache.poi.ss.formula.functions.Odd: long PARITY_MASK> = -2L;

        return;
    }
}
