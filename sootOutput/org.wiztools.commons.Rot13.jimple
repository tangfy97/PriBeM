public final class org.wiztools.commons.Rot13 extends java.lang.Object
{
    private static final java.util.Map map;

    private void <init>()
    {
        org.wiztools.commons.Rot13 r0;

        r0 := @this: org.wiztools.commons.Rot13;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String cipher(java.lang.String)
    {
        char c2;
        java.lang.Character $r5, r7;
        java.util.Map $r4;
        int $i0, i1, i3;
        char[] $r1;
        java.lang.StringBuilder $r2;
        java.lang.Object $r6;
        java.lang.String r0, $r3;

        r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();

        $r2 = new java.lang.StringBuilder;

        $i0 = lengthof $r1;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>($i0);

        i1 = lengthof $r1;

        i3 = 0;

     label1:
        if i3 >= i1 goto label4;

        c2 = $r1[i3];

        $r4 = <org.wiztools.commons.Rot13: java.util.Map map>;

        $r5 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c2);

        $r6 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        r7 = (java.lang.Character) $r6;

        if r7 != null goto label2;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c2);

        goto label3;

     label2:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

     label3:
        i3 = i3 + 1;

        goto label1;

     label4:
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    static void <clinit>()
    {
        java.util.HashMap $r4;
        char $c1, $c2;
        java.lang.Character $r6, $r7;
        java.util.Map $r5;
        int $i0, i3;
        char[] $r1, $r3;
        java.lang.String $r0, $r2;

        $r0 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";

        $r1 = virtualinvoke $r0.<java.lang.String: char[] toCharArray()>();

        $r2 = "NOPQRSTUVWXYZABCDEFGHIJKLMnopqrstuvwxyzabcdefghijklm";

        $r3 = virtualinvoke $r2.<java.lang.String: char[] toCharArray()>();

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        i3 = 0;

     label1:
        $i0 = lengthof $r1;

        if i3 >= $i0 goto label2;

        $c1 = $r1[i3];

        $r6 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $c2 = $r3[i3];

        $r7 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r7);

        i3 = i3 + 1;

        goto label1;

     label2:
        $r5 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r4);

        <org.wiztools.commons.Rot13: java.util.Map map> = $r5;

        return;
    }
}
