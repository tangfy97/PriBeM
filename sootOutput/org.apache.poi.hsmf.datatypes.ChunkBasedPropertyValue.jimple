public class org.apache.poi.hsmf.datatypes.ChunkBasedPropertyValue extends org.apache.poi.hsmf.datatypes.PropertyValue
{

    public void <init>(org.apache.poi.hsmf.datatypes.MAPIProperty, long, byte[])
    {
        byte[] r2;
        org.apache.poi.hsmf.datatypes.ChunkBasedPropertyValue r0;
        org.apache.poi.hsmf.datatypes.MAPIProperty r1;
        long l0;

        r0 := @this: org.apache.poi.hsmf.datatypes.ChunkBasedPropertyValue;

        r1 := @parameter0: org.apache.poi.hsmf.datatypes.MAPIProperty;

        l0 := @parameter1: long;

        r2 := @parameter2: byte[];

        specialinvoke r0.<org.apache.poi.hsmf.datatypes.PropertyValue: void <init>(org.apache.poi.hsmf.datatypes.MAPIProperty,long,byte[])>(r1, l0, r2);

        return;
    }

    public org.apache.poi.hsmf.datatypes.Chunk getValue()
    {
        org.apache.poi.hsmf.datatypes.ChunkBasedPropertyValue r0;

        r0 := @this: org.apache.poi.hsmf.datatypes.ChunkBasedPropertyValue;

        return null;
    }

    public void setValue(org.apache.poi.hsmf.datatypes.Chunk)
    {
        org.apache.poi.hsmf.datatypes.Chunk r1;
        org.apache.poi.hsmf.datatypes.ChunkBasedPropertyValue r0;

        r0 := @this: org.apache.poi.hsmf.datatypes.ChunkBasedPropertyValue;

        r1 := @parameter0: org.apache.poi.hsmf.datatypes.Chunk;

        return;
    }

    public volatile java.lang.Object getValue()
    {
        org.apache.poi.hsmf.datatypes.Chunk $r1;
        org.apache.poi.hsmf.datatypes.ChunkBasedPropertyValue r0;

        r0 := @this: org.apache.poi.hsmf.datatypes.ChunkBasedPropertyValue;

        $r1 = virtualinvoke r0.<org.apache.poi.hsmf.datatypes.ChunkBasedPropertyValue: org.apache.poi.hsmf.datatypes.Chunk getValue()>();

        return $r1;
    }
}
