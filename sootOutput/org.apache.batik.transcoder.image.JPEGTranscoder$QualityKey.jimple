class org.apache.batik.transcoder.image.JPEGTranscoder$QualityKey extends org.apache.batik.transcoder.TranscodingHints$Key
{

    private void <init>()
    {
        org.apache.batik.transcoder.image.JPEGTranscoder$QualityKey r0;

        r0 := @this: org.apache.batik.transcoder.image.JPEGTranscoder$QualityKey;

        specialinvoke r0.<org.apache.batik.transcoder.TranscodingHints$Key: void <init>()>();

        return;
    }

    public boolean isCompatibleValue(java.lang.Object)
    {
        java.lang.Float $r1;
        byte $b0, $b1;
        org.apache.batik.transcoder.image.JPEGTranscoder$QualityKey r2;
        int $i2, $i3;
        float $f0;
        java.lang.Object r0;
        boolean $z0, $z1;

        r2 := @this: org.apache.batik.transcoder.image.JPEGTranscoder$QualityKey;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.lang.Float;

        if $z0 == 0 goto label3;

        $r1 = (java.lang.Float) r0;

        $f0 = virtualinvoke $r1.<java.lang.Float: float floatValue()>();

        $b0 = $f0 cmpl 0.0F;

        $i2 = (int) $b0;

        if $i2 <= 0 goto label1;

        $b1 = $f0 cmpg 1.0F;

        $i3 = (int) $b1;

        if $i3 > 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;

     label3:
        return 0;
    }

    void <init>(org.apache.batik.transcoder.image.JPEGTranscoder$1)
    {
        org.apache.batik.transcoder.image.JPEGTranscoder$QualityKey r0;
        org.apache.batik.transcoder.image.JPEGTranscoder$1 r1;

        r0 := @this: org.apache.batik.transcoder.image.JPEGTranscoder$QualityKey;

        r1 := @parameter0: org.apache.batik.transcoder.image.JPEGTranscoder$1;

        specialinvoke r0.<org.apache.batik.transcoder.image.JPEGTranscoder$QualityKey: void <init>()>();

        return;
    }
}
