public abstract class com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase extends com.hp.hpl.jena.sparql.util.PrintSerializableBase implements com.hp.hpl.jena.sparql.engine.QueryIterator
{
    public static boolean traceIterators;
    private boolean finished;
    private volatile boolean requestingCancel;
    private boolean abortIterator;
    private java.lang.Object cancelLock;
    private java.lang.Throwable stackTrace;

    public void <init>()
    {
        java.lang.Throwable $r2;
        com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase r0;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase;

        specialinvoke r0.<com.hp.hpl.jena.sparql.util.PrintSerializableBase: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase: boolean finished> = 0;

        r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase: boolean requestingCancel> = 0;

        r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase: boolean abortIterator> = 0;

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase: java.lang.Object cancelLock> = $r1;

        r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase: java.lang.Throwable stackTrace> = null;

        $z0 = <com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase: boolean traceIterators>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.Throwable;

        specialinvoke $r2.<java.lang.Throwable: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase: java.lang.Throwable stackTrace> = $r2;

     label1:
        return;
    }

    protected abstract boolean hasNextBinding();

    protected abstract com.hp.hpl.jena.sparql.engine.binding.Binding moveToNextBinding();

    protected abstract void closeIterator();

    protected abstract void requestCancel();

    protected boolean isFinished()
    {
        com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase;

        $z0 = r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase: boolean finished>;

        return $z0;
    }

    public final boolean hasNext()
    {
        com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase r0;
        com.hp.hpl.jena.query.QueryCancelledException $r1;
        com.hp.hpl.jena.query.QueryFatalException $r2;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.String $r5, $r7;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase;

        $z0 = r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase: boolean finished>;

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $z1 = r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase: boolean requestingCancel>;

        if $z1 == 0 goto label2;

        $z3 = r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase: boolean abortIterator>;

        if $z3 == 0 goto label2;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase: void close()>();

        $r1 = new com.hp.hpl.jena.query.QueryCancelledException;

        specialinvoke $r1.<com.hp.hpl.jena.query.QueryCancelledException: void <init>()>();

        throw $r1;

     label2:
        $z2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase: boolean hasNextBinding()>();

        if $z2 != 0 goto label6;

     label3:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase: void close()>();

     label4:
        goto label6;

     label5:
        $r2 := @caughtexception;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fatal exception: ");

        $r5 = virtualinvoke $r2.<com.hp.hpl.jena.query.QueryFatalException: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.jena.atlas.logging.Log: void fatal(java.lang.Object,java.lang.String)>(r0, $r7);

        throw $r2;

     label6:
        return $z2;

        catch com.hp.hpl.jena.query.QueryFatalException from label3 to label4 with label5;
    }

    public final com.hp.hpl.jena.sparql.engine.binding.Binding next()
    {
        com.hp.hpl.jena.sparql.engine.binding.Binding $r1;
        com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase r0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase: com.hp.hpl.jena.sparql.engine.binding.Binding nextBinding()>();

        return $r1;
    }

    public final com.hp.hpl.jena.sparql.engine.binding.Binding nextBinding()
    {
        com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase r0;
        com.hp.hpl.jena.query.QueryCancelledException $r8;
        com.hp.hpl.jena.sparql.engine.binding.Binding $r1;
        com.hp.hpl.jena.query.QueryFatalException $r9;
        java.lang.String $r3, $r5, $r7;
        java.util.NoSuchElementException $r2, $r4, $r6;
        boolean $z0, $z1, $z2, $z3, z4;

        r0 := @this: com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase;

     label1:
        z4 = r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase: boolean requestingCancel>;

        if z4 == 0 goto label2;

        $z3 = r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase: boolean abortIterator>;

        if $z3 == 0 goto label2;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase: void close()>();

        $r8 = new com.hp.hpl.jena.query.QueryCancelledException;

        specialinvoke $r8.<com.hp.hpl.jena.query.QueryCancelledException: void <init>()>();

        throw $r8;

     label2:
        $z0 = r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase: boolean finished>;

        if $z0 == 0 goto label3;

        $r6 = new java.util.NoSuchElementException;

        $r7 = staticinvoke <com.hp.hpl.jena.sparql.util.Utils: java.lang.String className(java.lang.Object)>(r0);

        specialinvoke $r6.<java.util.NoSuchElementException: void <init>(java.lang.String)>($r7);

        throw $r6;

     label3:
        $z1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase: boolean hasNextBinding()>();

        if $z1 != 0 goto label4;

        $r4 = new java.util.NoSuchElementException;

        $r5 = staticinvoke <com.hp.hpl.jena.sparql.util.Utils: java.lang.String className(java.lang.Object)>(r0);

        specialinvoke $r4.<java.util.NoSuchElementException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label4:
        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase: com.hp.hpl.jena.sparql.engine.binding.Binding moveToNextBinding()>();

        if $r1 != null goto label5;

        $r2 = new java.util.NoSuchElementException;

        $r3 = staticinvoke <com.hp.hpl.jena.sparql.util.Utils: java.lang.String className(java.lang.Object)>(r0);

        specialinvoke $r2.<java.util.NoSuchElementException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label5:
        if z4 == 0 goto label6;

        $z2 = r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase: boolean finished>;

        if $z2 != 0 goto label6;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase: void close()>();

     label6:
        return $r1;

     label7:
        $r9 := @caughtexception;

        staticinvoke <org.apache.jena.atlas.logging.Log: void fatal(java.lang.Object,java.lang.String,java.lang.Throwable)>(r0, "QueryFatalException", $r9);

        throw $r9;

        catch com.hp.hpl.jena.query.QueryFatalException from label1 to label6 with label7;
    }

    public final void remove()
    {
        java.lang.UnsupportedOperationException $r7;
        com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r8, $r10, $r11;
        java.lang.String $r3, $r6, $r9, $r12;

        r0 := @this: com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Call to QueryIterator.remove() : ");

        $r3 = staticinvoke <com.hp.hpl.jena.sparql.util.Utils: java.lang.String className(java.lang.Object)>(r0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".remove");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.jena.atlas.logging.Log: void warn(java.lang.Object,java.lang.String)>(r0, $r6);

        $r7 = new java.lang.UnsupportedOperationException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = staticinvoke <com.hp.hpl.jena.sparql.util.Utils: java.lang.String className(java.lang.Object)>(r0);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".remove");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r12);

        throw $r7;
    }

    public void close()
    {
        com.hp.hpl.jena.query.QueryException $r1;
        com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase;

        $z0 = r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase: boolean finished>;

        if $z0 == 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase: void closeIterator()>();

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        staticinvoke <org.apache.jena.atlas.logging.Log: void warn(java.lang.Object,java.lang.String,java.lang.Throwable)>(r0, "QueryException in close()", $r1);

     label4:
        r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase: boolean finished> = 1;

        return;

        catch com.hp.hpl.jena.query.QueryException from label1 to label2 with label3;
    }

    public final void cancel()
    {
        java.lang.Throwable $r2;
        com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase r0;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase;

        $r1 = r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase: java.lang.Object cancelLock>;

        entermonitor $r1;

     label1:
        $z0 = r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase: boolean requestingCancel>;

        if $z0 != 0 goto label2;

        r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase: boolean abortIterator> = 1;

        r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase: boolean requestingCancel> = 1;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase: void requestCancel()>();

     label2:
        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r2 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private final void cancelAllowContinue()
    {
        java.lang.Throwable $r2;
        com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase r0;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase;

        $r1 = r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase: java.lang.Object cancelLock>;

        entermonitor $r1;

     label1:
        $z0 = r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase: boolean requestingCancel>;

        if $z0 != 0 goto label2;

        r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase: boolean requestingCancel> = 1;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase: void requestCancel()>();

     label2:
        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r2 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    protected static void performClose(com.hp.hpl.jena.sparql.engine.QueryIterator)
    {
        com.hp.hpl.jena.sparql.engine.QueryIterator r0;

        r0 := @parameter0: com.hp.hpl.jena.sparql.engine.QueryIterator;

        if r0 != null goto label1;

        return;

     label1:
        interfaceinvoke r0.<com.hp.hpl.jena.sparql.engine.QueryIterator: void close()>();

        return;
    }

    protected static void performRequestCancel(com.hp.hpl.jena.sparql.engine.QueryIterator)
    {
        com.hp.hpl.jena.sparql.engine.QueryIterator r0;

        r0 := @parameter0: com.hp.hpl.jena.sparql.engine.QueryIterator;

        if r0 != null goto label1;

        return;

     label1:
        interfaceinvoke r0.<com.hp.hpl.jena.sparql.engine.QueryIterator: void cancel()>();

        return;
    }

    public java.lang.String debug()
    {
        java.lang.Throwable $r1, $r2, $r4;
        int $i0, i1;
        java.lang.StackTraceElement r6;
        java.lang.String $r7, $r10, r12;
        boolean $z0;
        com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase r0;
        java.lang.StackTraceElement[] $r3, $r5;
        java.lang.StringBuilder $r8, $r9, $r11;

        r0 := @this: com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase;

        r12 = "";

        $r1 = r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase: java.lang.Throwable stackTrace>;

        if $r1 == null goto label4;

        i1 = 0;

     label1:
        $r2 = r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase: java.lang.Throwable stackTrace>;

        $r3 = virtualinvoke $r2.<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>();

        $i0 = lengthof $r3;

        if i1 >= $i0 goto label4;

        $r4 = r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase: java.lang.Throwable stackTrace>;

        $r5 = virtualinvoke $r4.<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>();

        r6 = $r5[i1];

        $r7 = virtualinvoke r6.<java.lang.StackTraceElement: java.lang.String getMethodName()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("<init>");

        if $z0 == 0 goto label2;

        goto label3;

     label2:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r10 = virtualinvoke r6.<java.lang.StackTraceElement: java.lang.String toString()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label4;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return r12;
    }

    public volatile java.lang.Object next()
    {
        com.hp.hpl.jena.sparql.engine.binding.Binding $r1;
        com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase r0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase: com.hp.hpl.jena.sparql.engine.binding.Binding next()>();

        return $r1;
    }

    static void <clinit>()
    {
        <com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase: boolean traceIterators> = 0;

        return;
    }
}
