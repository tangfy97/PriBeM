public class org.mortbay.thread.BoundedThreadPool$PoolThread extends java.lang.Thread
{
    java.lang.Runnable _job;
    private final org.mortbay.thread.BoundedThreadPool this$0;

    void <init>(org.mortbay.thread.BoundedThreadPool)
    {
        int $i0;
        org.mortbay.thread.BoundedThreadPool$PoolThread r0;
        org.mortbay.thread.BoundedThreadPool r1;
        boolean $z0;

        r0 := @this: org.mortbay.thread.BoundedThreadPool$PoolThread;

        r1 := @parameter0: org.mortbay.thread.BoundedThreadPool;

        r0.<org.mortbay.thread.BoundedThreadPool$PoolThread: org.mortbay.thread.BoundedThreadPool this$0> = r1;

        specialinvoke r0.<java.lang.Thread: void <init>()>();

        r0.<org.mortbay.thread.BoundedThreadPool$PoolThread: java.lang.Runnable _job> = null;

        $z0 = staticinvoke <org.mortbay.thread.BoundedThreadPool: boolean access$000(org.mortbay.thread.BoundedThreadPool)>(r1);

        virtualinvoke r0.<org.mortbay.thread.BoundedThreadPool$PoolThread: void setDaemon(boolean)>($z0);

        $i0 = r1.<org.mortbay.thread.BoundedThreadPool: int _priority>;

        virtualinvoke r0.<org.mortbay.thread.BoundedThreadPool$PoolThread: void setPriority(int)>($i0);

        return;
    }

    void <init>(org.mortbay.thread.BoundedThreadPool, java.lang.Runnable)
    {
        int $i0;
        org.mortbay.thread.BoundedThreadPool$PoolThread r0;
        java.lang.Runnable r2;
        org.mortbay.thread.BoundedThreadPool r1;
        boolean $z0;

        r0 := @this: org.mortbay.thread.BoundedThreadPool$PoolThread;

        r1 := @parameter0: org.mortbay.thread.BoundedThreadPool;

        r2 := @parameter1: java.lang.Runnable;

        r0.<org.mortbay.thread.BoundedThreadPool$PoolThread: org.mortbay.thread.BoundedThreadPool this$0> = r1;

        specialinvoke r0.<java.lang.Thread: void <init>()>();

        r0.<org.mortbay.thread.BoundedThreadPool$PoolThread: java.lang.Runnable _job> = null;

        $z0 = staticinvoke <org.mortbay.thread.BoundedThreadPool: boolean access$000(org.mortbay.thread.BoundedThreadPool)>(r1);

        virtualinvoke r0.<org.mortbay.thread.BoundedThreadPool$PoolThread: void setDaemon(boolean)>($z0);

        $i0 = r1.<org.mortbay.thread.BoundedThreadPool: int _priority>;

        virtualinvoke r0.<org.mortbay.thread.BoundedThreadPool$PoolThread: void setPriority(int)>($i0);

        r0.<org.mortbay.thread.BoundedThreadPool$PoolThread: java.lang.Runnable _job> = r2;

        return;
    }

    public void run()
    {
        byte $b8;
        java.util.Set $r4, $r13, $r27, $r33, $r51;
        org.mortbay.thread.BoundedThreadPool $r1, $r3, $r5, $r6, $r7, $r9, $r11, $r12, $r14, $r15, $r16, $r18, $r20, $r22, $r23, $r24, $r26, $r28, $r29, $r30, $r32, $r34, $r35, $r48, $r50, $r52, $r53, $r55, $r57, $r60, $r62, $r68, $r70;
        java.lang.Throwable $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r54, $r64, $r65, $r66;
        long $l3, $l4, $l5, $l7, $l10;
        org.mortbay.thread.BoundedThreadPool$PoolThread r0;
        java.lang.Runnable $r17, r67, r69, r72, r73, r74;
        boolean $z0, $z1, $z2, $z3;
        java.util.List $r10, $r21, $r31, $r36, $r58, $r63, $r71;
        int $i0, $i1, $i2, $i6, $i9, $i11, $i12, $i13, $i14;
        java.lang.InterruptedException $r59;
        java.lang.Object $r2, $r8, $r19, $r25, $r37, $r49, $r56, $r61;

        r0 := @this: org.mortbay.thread.BoundedThreadPool$PoolThread;

     label01:
        entermonitor r0;

     label02:
        r67 = r0.<org.mortbay.thread.BoundedThreadPool$PoolThread: java.lang.Runnable _job>;

        r0.<org.mortbay.thread.BoundedThreadPool$PoolThread: java.lang.Runnable _job> = null;

        exitmonitor r0;

     label03:
        goto label06;

     label04:
        $r66 := @caughtexception;

        exitmonitor r0;

     label05:
        throw $r66;

     label06:
        $r68 = r0.<org.mortbay.thread.BoundedThreadPool$PoolThread: org.mortbay.thread.BoundedThreadPool this$0>;

        $z3 = virtualinvoke $r68.<org.mortbay.thread.BoundedThreadPool: boolean isRunning()>();

        if $z3 == 0 goto label31;

        if r67 == null goto label07;

        r69 = r67;

        r67 = null;

        interfaceinvoke r69.<java.lang.Runnable: void run()>();

        goto label06;

     label07:
        $r7 = r0.<org.mortbay.thread.BoundedThreadPool$PoolThread: org.mortbay.thread.BoundedThreadPool this$0>;

        $r8 = staticinvoke <org.mortbay.thread.BoundedThreadPool: java.lang.Object access$100(org.mortbay.thread.BoundedThreadPool)>($r7);

        entermonitor $r8;

     label08:
        $r9 = r0.<org.mortbay.thread.BoundedThreadPool$PoolThread: org.mortbay.thread.BoundedThreadPool this$0>;

        $r10 = staticinvoke <org.mortbay.thread.BoundedThreadPool: java.util.List access$200(org.mortbay.thread.BoundedThreadPool)>($r9);

        $i0 = interfaceinvoke $r10.<java.util.List: int size()>();

        if $i0 <= 0 goto label10;

        $r35 = r0.<org.mortbay.thread.BoundedThreadPool$PoolThread: org.mortbay.thread.BoundedThreadPool this$0>;

        $r36 = staticinvoke <org.mortbay.thread.BoundedThreadPool: java.util.List access$200(org.mortbay.thread.BoundedThreadPool)>($r35);

        $r37 = interfaceinvoke $r36.<java.util.List: java.lang.Object remove(int)>(0);

        r67 = (java.lang.Runnable) $r37;

        exitmonitor $r8;

     label09:
        goto label06;

     label10:
        $r11 = r0.<org.mortbay.thread.BoundedThreadPool$PoolThread: org.mortbay.thread.BoundedThreadPool this$0>;

        staticinvoke <org.mortbay.thread.BoundedThreadPool: boolean access$302(org.mortbay.thread.BoundedThreadPool,boolean)>($r11, 0);

        $r12 = r0.<org.mortbay.thread.BoundedThreadPool$PoolThread: org.mortbay.thread.BoundedThreadPool this$0>;

        $r13 = staticinvoke <org.mortbay.thread.BoundedThreadPool: java.util.Set access$400(org.mortbay.thread.BoundedThreadPool)>($r12);

        $i1 = interfaceinvoke $r13.<java.util.Set: int size()>();

        $r14 = r0.<org.mortbay.thread.BoundedThreadPool$PoolThread: org.mortbay.thread.BoundedThreadPool this$0>;

        $i2 = staticinvoke <org.mortbay.thread.BoundedThreadPool: int access$500(org.mortbay.thread.BoundedThreadPool)>($r14);

        if $i1 > $i2 goto label11;

        $r30 = r0.<org.mortbay.thread.BoundedThreadPool$PoolThread: org.mortbay.thread.BoundedThreadPool this$0>;

        $r31 = staticinvoke <org.mortbay.thread.BoundedThreadPool: java.util.List access$600(org.mortbay.thread.BoundedThreadPool)>($r30);

        $i11 = interfaceinvoke $r31.<java.util.List: int size()>();

        if $i11 <= 0 goto label14;

        $r32 = r0.<org.mortbay.thread.BoundedThreadPool$PoolThread: org.mortbay.thread.BoundedThreadPool this$0>;

        $r33 = staticinvoke <org.mortbay.thread.BoundedThreadPool: java.util.Set access$400(org.mortbay.thread.BoundedThreadPool)>($r32);

        $i12 = interfaceinvoke $r33.<java.util.Set: int size()>();

        $r34 = r0.<org.mortbay.thread.BoundedThreadPool$PoolThread: org.mortbay.thread.BoundedThreadPool this$0>;

        $i13 = staticinvoke <org.mortbay.thread.BoundedThreadPool: int access$700(org.mortbay.thread.BoundedThreadPool)>($r34);

        if $i12 <= $i13 goto label14;

     label11:
        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r15 = r0.<org.mortbay.thread.BoundedThreadPool$PoolThread: org.mortbay.thread.BoundedThreadPool this$0>;

        $l4 = staticinvoke <org.mortbay.thread.BoundedThreadPool: long access$800(org.mortbay.thread.BoundedThreadPool)>($r15);

        $l5 = $l3 - $l4;

        $r16 = r0.<org.mortbay.thread.BoundedThreadPool$PoolThread: org.mortbay.thread.BoundedThreadPool this$0>;

        $i6 = virtualinvoke $r16.<org.mortbay.thread.BoundedThreadPool: int getMaxIdleTimeMs()>();

        $l7 = (long) $i6;

        $b8 = $l5 cmp $l7;

        $i14 = (int) $b8;

        if $i14 <= 0 goto label14;

        $r23 = r0.<org.mortbay.thread.BoundedThreadPool$PoolThread: org.mortbay.thread.BoundedThreadPool this$0>;

        staticinvoke <org.mortbay.thread.BoundedThreadPool: long access$802(org.mortbay.thread.BoundedThreadPool,long)>($r23, $l3);

        exitmonitor $r8;

     label12:
        goto label36;

     label13:
        return;

     label14:
        $r70 = r0.<org.mortbay.thread.BoundedThreadPool$PoolThread: org.mortbay.thread.BoundedThreadPool this$0>;

        $r71 = staticinvoke <org.mortbay.thread.BoundedThreadPool: java.util.List access$600(org.mortbay.thread.BoundedThreadPool)>($r70);

        interfaceinvoke $r71.<java.util.List: boolean add(java.lang.Object)>(r0);

        exitmonitor $r8;

     label15:
        goto label18;

     label16:
        $r65 := @caughtexception;

        exitmonitor $r8;

     label17:
        throw $r65;

     label18:
        entermonitor r0;

     label19:
        $r17 = r0.<org.mortbay.thread.BoundedThreadPool$PoolThread: java.lang.Runnable _job>;

        if $r17 != null goto label20;

        $r22 = r0.<org.mortbay.thread.BoundedThreadPool$PoolThread: org.mortbay.thread.BoundedThreadPool this$0>;

        $i9 = virtualinvoke $r22.<org.mortbay.thread.BoundedThreadPool: int getMaxIdleTimeMs()>();

        $l10 = (long) $i9;

        virtualinvoke r0.<java.lang.Object: void wait(long)>($l10);

     label20:
        r67 = r0.<org.mortbay.thread.BoundedThreadPool$PoolThread: java.lang.Runnable _job>;

        r0.<org.mortbay.thread.BoundedThreadPool$PoolThread: java.lang.Runnable _job> = null;

        exitmonitor r0;

     label21:
        goto label24;

     label22:
        $r64 := @caughtexception;

        exitmonitor r0;

     label23:
        throw $r64;

     label24:
        goto label48;

     label25:
        goto label30;

     label26:
        $r59 := @caughtexception;

        staticinvoke <org.mortbay.log.Log: void ignore(java.lang.Throwable)>($r59);

        goto label54;

     label27:
        goto label30;

     label28:
        $r54 := @caughtexception;

        goto label60;

     label29:
        throw $r54;

     label30:
        goto label06;

     label31:
        goto label66;

     label32:
        goto label35;

     label33:
        $r47 := @caughtexception;

        goto label78;

     label34:
        throw $r47;

     label35:
        return;

     label36:
        $r24 = r0.<org.mortbay.thread.BoundedThreadPool$PoolThread: org.mortbay.thread.BoundedThreadPool this$0>;

        $r25 = staticinvoke <org.mortbay.thread.BoundedThreadPool: java.lang.Object access$100(org.mortbay.thread.BoundedThreadPool)>($r24);

        entermonitor $r25;

     label37:
        $r26 = r0.<org.mortbay.thread.BoundedThreadPool$PoolThread: org.mortbay.thread.BoundedThreadPool this$0>;

        $r27 = staticinvoke <org.mortbay.thread.BoundedThreadPool: java.util.Set access$400(org.mortbay.thread.BoundedThreadPool)>($r26);

        interfaceinvoke $r27.<java.util.Set: boolean remove(java.lang.Object)>(r0);

        exitmonitor $r25;

     label38:
        goto label41;

     label39:
        $r46 := @caughtexception;

        exitmonitor $r25;

     label40:
        throw $r46;

     label41:
        entermonitor r0;

     label42:
        r72 = r0.<org.mortbay.thread.BoundedThreadPool$PoolThread: java.lang.Runnable _job>;

        exitmonitor r0;

     label43:
        goto label46;

     label44:
        $r45 := @caughtexception;

        exitmonitor r0;

     label45:
        throw $r45;

     label46:
        if r72 == null goto label47;

        $r28 = r0.<org.mortbay.thread.BoundedThreadPool$PoolThread: org.mortbay.thread.BoundedThreadPool this$0>;

        $z1 = virtualinvoke $r28.<org.mortbay.thread.BoundedThreadPool: boolean isRunning()>();

        if $z1 == 0 goto label47;

        $r29 = r0.<org.mortbay.thread.BoundedThreadPool$PoolThread: org.mortbay.thread.BoundedThreadPool this$0>;

        virtualinvoke $r29.<org.mortbay.thread.BoundedThreadPool: boolean dispatch(java.lang.Runnable)>(r72);

     label47:
        goto label13;

     label48:
        $r18 = r0.<org.mortbay.thread.BoundedThreadPool$PoolThread: org.mortbay.thread.BoundedThreadPool this$0>;

        $r19 = staticinvoke <org.mortbay.thread.BoundedThreadPool: java.lang.Object access$100(org.mortbay.thread.BoundedThreadPool)>($r18);

        entermonitor $r19;

     label49:
        $r20 = r0.<org.mortbay.thread.BoundedThreadPool$PoolThread: org.mortbay.thread.BoundedThreadPool this$0>;

        $r21 = staticinvoke <org.mortbay.thread.BoundedThreadPool: java.util.List access$600(org.mortbay.thread.BoundedThreadPool)>($r20);

        interfaceinvoke $r21.<java.util.List: boolean remove(java.lang.Object)>(r0);

        exitmonitor $r19;

     label50:
        goto label53;

     label51:
        $r44 := @caughtexception;

        exitmonitor $r19;

     label52:
        throw $r44;

     label53:
        goto label25;

     label54:
        $r60 = r0.<org.mortbay.thread.BoundedThreadPool$PoolThread: org.mortbay.thread.BoundedThreadPool this$0>;

        $r61 = staticinvoke <org.mortbay.thread.BoundedThreadPool: java.lang.Object access$100(org.mortbay.thread.BoundedThreadPool)>($r60);

        entermonitor $r61;

     label55:
        $r62 = r0.<org.mortbay.thread.BoundedThreadPool$PoolThread: org.mortbay.thread.BoundedThreadPool this$0>;

        $r63 = staticinvoke <org.mortbay.thread.BoundedThreadPool: java.util.List access$600(org.mortbay.thread.BoundedThreadPool)>($r62);

        interfaceinvoke $r63.<java.util.List: boolean remove(java.lang.Object)>(r0);

        exitmonitor $r61;

     label56:
        goto label59;

     label57:
        $r43 := @caughtexception;

        exitmonitor $r61;

     label58:
        throw $r43;

     label59:
        goto label27;

     label60:
        $r55 = r0.<org.mortbay.thread.BoundedThreadPool$PoolThread: org.mortbay.thread.BoundedThreadPool this$0>;

        $r56 = staticinvoke <org.mortbay.thread.BoundedThreadPool: java.lang.Object access$100(org.mortbay.thread.BoundedThreadPool)>($r55);

        entermonitor $r56;

     label61:
        $r57 = r0.<org.mortbay.thread.BoundedThreadPool$PoolThread: org.mortbay.thread.BoundedThreadPool this$0>;

        $r58 = staticinvoke <org.mortbay.thread.BoundedThreadPool: java.util.List access$600(org.mortbay.thread.BoundedThreadPool)>($r57);

        interfaceinvoke $r58.<java.util.List: boolean remove(java.lang.Object)>(r0);

        exitmonitor $r56;

     label62:
        goto label65;

     label63:
        $r42 := @caughtexception;

        exitmonitor $r56;

     label64:
        throw $r42;

     label65:
        goto label29;

     label66:
        $r1 = r0.<org.mortbay.thread.BoundedThreadPool$PoolThread: org.mortbay.thread.BoundedThreadPool this$0>;

        $r2 = staticinvoke <org.mortbay.thread.BoundedThreadPool: java.lang.Object access$100(org.mortbay.thread.BoundedThreadPool)>($r1);

        entermonitor $r2;

     label67:
        $r3 = r0.<org.mortbay.thread.BoundedThreadPool$PoolThread: org.mortbay.thread.BoundedThreadPool this$0>;

        $r4 = staticinvoke <org.mortbay.thread.BoundedThreadPool: java.util.Set access$400(org.mortbay.thread.BoundedThreadPool)>($r3);

        interfaceinvoke $r4.<java.util.Set: boolean remove(java.lang.Object)>(r0);

        exitmonitor $r2;

     label68:
        goto label71;

     label69:
        $r41 := @caughtexception;

        exitmonitor $r2;

     label70:
        throw $r41;

     label71:
        entermonitor r0;

     label72:
        r73 = r0.<org.mortbay.thread.BoundedThreadPool$PoolThread: java.lang.Runnable _job>;

        exitmonitor r0;

     label73:
        goto label76;

     label74:
        $r40 := @caughtexception;

        exitmonitor r0;

     label75:
        throw $r40;

     label76:
        if r73 == null goto label77;

        $r5 = r0.<org.mortbay.thread.BoundedThreadPool$PoolThread: org.mortbay.thread.BoundedThreadPool this$0>;

        $z0 = virtualinvoke $r5.<org.mortbay.thread.BoundedThreadPool: boolean isRunning()>();

        if $z0 == 0 goto label77;

        $r6 = r0.<org.mortbay.thread.BoundedThreadPool$PoolThread: org.mortbay.thread.BoundedThreadPool this$0>;

        virtualinvoke $r6.<org.mortbay.thread.BoundedThreadPool: boolean dispatch(java.lang.Runnable)>(r73);

     label77:
        goto label32;

     label78:
        $r48 = r0.<org.mortbay.thread.BoundedThreadPool$PoolThread: org.mortbay.thread.BoundedThreadPool this$0>;

        $r49 = staticinvoke <org.mortbay.thread.BoundedThreadPool: java.lang.Object access$100(org.mortbay.thread.BoundedThreadPool)>($r48);

        entermonitor $r49;

     label79:
        $r50 = r0.<org.mortbay.thread.BoundedThreadPool$PoolThread: org.mortbay.thread.BoundedThreadPool this$0>;

        $r51 = staticinvoke <org.mortbay.thread.BoundedThreadPool: java.util.Set access$400(org.mortbay.thread.BoundedThreadPool)>($r50);

        interfaceinvoke $r51.<java.util.Set: boolean remove(java.lang.Object)>(r0);

        exitmonitor $r49;

     label80:
        goto label83;

     label81:
        $r39 := @caughtexception;

        exitmonitor $r49;

     label82:
        throw $r39;

     label83:
        entermonitor r0;

     label84:
        r74 = r0.<org.mortbay.thread.BoundedThreadPool$PoolThread: java.lang.Runnable _job>;

        exitmonitor r0;

     label85:
        goto label88;

     label86:
        $r38 := @caughtexception;

        exitmonitor r0;

     label87:
        throw $r38;

     label88:
        if r74 == null goto label89;

        $r52 = r0.<org.mortbay.thread.BoundedThreadPool$PoolThread: org.mortbay.thread.BoundedThreadPool this$0>;

        $z2 = virtualinvoke $r52.<org.mortbay.thread.BoundedThreadPool: boolean isRunning()>();

        if $z2 == 0 goto label89;

        $r53 = r0.<org.mortbay.thread.BoundedThreadPool$PoolThread: org.mortbay.thread.BoundedThreadPool this$0>;

        virtualinvoke $r53.<org.mortbay.thread.BoundedThreadPool: boolean dispatch(java.lang.Runnable)>(r74);

     label89:
        goto label34;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label08 to label09 with label16;
        catch java.lang.Throwable from label10 to label12 with label16;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label16 to label17 with label16;
        catch java.lang.Throwable from label19 to label21 with label22;
        catch java.lang.Throwable from label22 to label23 with label22;
        catch java.lang.InterruptedException from label18 to label24 with label26;
        catch java.lang.Throwable from label18 to label25 with label28;
        catch java.lang.Throwable from label26 to label27 with label28;
        catch java.lang.Throwable from label28 to label29 with label28;
        catch java.lang.Throwable from label01 to label13 with label33;
        catch java.lang.Throwable from label14 to label32 with label33;
        catch java.lang.Throwable from label33 to label34 with label33;
        catch java.lang.Throwable from label37 to label38 with label39;
        catch java.lang.Throwable from label39 to label40 with label39;
        catch java.lang.Throwable from label42 to label43 with label44;
        catch java.lang.Throwable from label44 to label45 with label44;
        catch java.lang.Throwable from label49 to label50 with label51;
        catch java.lang.Throwable from label51 to label52 with label51;
        catch java.lang.Throwable from label48 to label54 with label33;
        catch java.lang.Throwable from label55 to label56 with label57;
        catch java.lang.Throwable from label57 to label58 with label57;
        catch java.lang.Throwable from label54 to label60 with label33;
        catch java.lang.Throwable from label61 to label62 with label63;
        catch java.lang.Throwable from label63 to label64 with label63;
        catch java.lang.Throwable from label60 to label66 with label33;
        catch java.lang.Throwable from label67 to label68 with label69;
        catch java.lang.Throwable from label69 to label70 with label69;
        catch java.lang.Throwable from label72 to label73 with label74;
        catch java.lang.Throwable from label74 to label75 with label74;
        catch java.lang.Throwable from label79 to label80 with label81;
        catch java.lang.Throwable from label81 to label82 with label81;
        catch java.lang.Throwable from label84 to label85 with label86;
        catch java.lang.Throwable from label86 to label87 with label86;
    }

    void dispatch(java.lang.Runnable)
    {
        java.lang.Throwable $r4;
        java.lang.IllegalStateException $r2;
        org.mortbay.thread.BoundedThreadPool$PoolThread r0;
        java.lang.Runnable $r1, r3;

        r0 := @this: org.mortbay.thread.BoundedThreadPool$PoolThread;

        r3 := @parameter0: java.lang.Runnable;

        entermonitor r0;

     label1:
        $r1 = r0.<org.mortbay.thread.BoundedThreadPool$PoolThread: java.lang.Runnable _job>;

        if $r1 != null goto label2;

        if r3 != null goto label3;

     label2:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>()>();

        throw $r2;

     label3:
        r0.<org.mortbay.thread.BoundedThreadPool$PoolThread: java.lang.Runnable _job> = r3;

        virtualinvoke r0.<java.lang.Object: void notify()>();

        exitmonitor r0;

     label4:
        goto label7;

     label5:
        $r4 := @caughtexception;

        exitmonitor r0;

     label6:
        throw $r4;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }
}
