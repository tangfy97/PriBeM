public class com.hp.hpl.jena.rdf.model.impl.RDFWriterFImpl extends java.lang.Object implements com.hp.hpl.jena.rdf.model.RDFWriterF
{
    protected static java.util.Properties langToClassName;
    protected static final java.lang.String[] LANGS;
    protected static final java.lang.String[] DEFAULTWRITERS;
    protected static final java.lang.String DEFAULTLANG;
    protected static final java.lang.String PROPNAMEBASE;

    public void <init>()
    {
        com.hp.hpl.jena.rdf.model.impl.RDFWriterFImpl r0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.RDFWriterFImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.hp.hpl.jena.rdf.model.RDFWriter getWriter()
    {
        com.hp.hpl.jena.rdf.model.RDFWriter $r2;
        com.hp.hpl.jena.rdf.model.impl.RDFWriterFImpl r0;
        java.lang.String $r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.RDFWriterFImpl;

        $r1 = <com.hp.hpl.jena.rdf.model.impl.RDFWriterFImpl: java.lang.String DEFAULTLANG>;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.RDFWriterFImpl: com.hp.hpl.jena.rdf.model.RDFWriter getWriter(java.lang.String)>($r1);

        return $r2;
    }

    public com.hp.hpl.jena.rdf.model.RDFWriter getWriter(java.lang.String)
    {
        java.util.Properties $r10;
        com.hp.hpl.jena.shared.JenaException $r6, $r7;
        java.lang.String[] $r0;
        java.lang.Exception $r5;
        com.hp.hpl.jena.rdf.model.RDFWriter $r4;
        java.lang.Class $r2;
        java.lang.Object $r3;
        com.hp.hpl.jena.shared.NoWriterForLangException $r1;
        com.hp.hpl.jena.rdf.model.impl.RDFWriterFImpl r8;
        java.lang.String r9, $r11;
        boolean $z0, $z1, $z2;

        r8 := @this: com.hp.hpl.jena.rdf.model.impl.RDFWriterFImpl;

        r9 := @parameter0: java.lang.String;

        if r9 == null goto label1;

        $z1 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z1 == 0 goto label2;

     label1:
        $r0 = <com.hp.hpl.jena.rdf.model.impl.RDFWriterFImpl: java.lang.String[] LANGS>;

        r9 = $r0[0];

     label2:
        $r10 = <com.hp.hpl.jena.rdf.model.impl.RDFWriterFImpl: java.util.Properties langToClassName>;

        $r11 = virtualinvoke $r10.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r9);

        if $r11 == null goto label3;

        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label4;

     label3:
        $r1 = new com.hp.hpl.jena.shared.NoWriterForLangException;

        specialinvoke $r1.<com.hp.hpl.jena.shared.NoWriterForLangException: void <init>(java.lang.String)>(r9);

        throw $r1;

     label4:
        $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r11);

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>();

        $r4 = (com.hp.hpl.jena.rdf.model.RDFWriter) $r3;

     label5:
        return $r4;

     label6:
        $r5 := @caughtexception;

        $z2 = $r5 instanceof com.hp.hpl.jena.shared.JenaException;

        if $z2 == 0 goto label7;

        $r7 = (com.hp.hpl.jena.shared.JenaException) $r5;

        throw $r7;

     label7:
        $r6 = new com.hp.hpl.jena.shared.JenaException;

        specialinvoke $r6.<com.hp.hpl.jena.shared.JenaException: void <init>(java.lang.Throwable)>($r5);

        throw $r6;

        catch java.lang.Exception from label4 to label5 with label6;
    }

    public java.lang.String setWriterClassName(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r2;
        com.hp.hpl.jena.rdf.model.impl.RDFWriterFImpl r3;

        r3 := @this: com.hp.hpl.jena.rdf.model.impl.RDFWriterFImpl;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <com.hp.hpl.jena.rdf.model.impl.RDFWriterFImpl: java.lang.String setBaseWriterClassName(java.lang.String,java.lang.String)>(r0, r1);

        return $r2;
    }

    public static java.lang.String setBaseWriterClassName(java.lang.String, java.lang.String)
    {
        java.util.Properties $r1, $r4;
        java.lang.String r0, $r2, r3;

        r0 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r1 = <com.hp.hpl.jena.rdf.model.impl.RDFWriterFImpl: java.util.Properties langToClassName>;

        $r2 = virtualinvoke $r1.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r0);

        $r4 = <com.hp.hpl.jena.rdf.model.impl.RDFWriterFImpl: java.util.Properties langToClassName>;

        virtualinvoke $r4.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>(r0, r3);

        return $r2;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0, $r1, $r2, $r5, $r6, $r11, $r15;
        int $i0, i1;
        java.lang.String $r3, $r9, $r12, $r14, $r16, $r17;
        java.util.Properties $r4, $r8;
        java.lang.StringBuilder $r7, $r10, $r13;

        <com.hp.hpl.jena.rdf.model.impl.RDFWriterFImpl: java.lang.String PROPNAMEBASE> = "com.hp.hpl.jena.writer.";

        <com.hp.hpl.jena.rdf.model.impl.RDFWriterFImpl: java.util.Properties langToClassName> = null;

        $r0 = newarray (java.lang.String)[13];

        $r0[0] = "RDF/XML";

        $r0[1] = "RDF/XML-ABBREV";

        $r0[2] = "N-TRIPLE";

        $r0[3] = "N-TRIPLES";

        $r0[4] = "N-Triples";

        $r0[5] = "N3";

        $r0[6] = "N3-PP";

        $r0[7] = "N3-PLAIN";

        $r0[8] = "N3-TRIPLES";

        $r0[9] = "N3-TRIPLE";

        $r0[10] = "TURTLE";

        $r0[11] = "Turtle";

        $r0[12] = "TTL";

        <com.hp.hpl.jena.rdf.model.impl.RDFWriterFImpl: java.lang.String[] LANGS> = $r0;

        $r1 = newarray (java.lang.String)[13];

        $r1[0] = "com.hp.hpl.jena.xmloutput.impl.Basic";

        $r1[1] = "com.hp.hpl.jena.xmloutput.impl.Abbreviated";

        $r1[2] = "com.hp.hpl.jena.rdf.model.impl.NTripleWriter";

        $r1[3] = "com.hp.hpl.jena.rdf.model.impl.NTripleWriter";

        $r1[4] = "com.hp.hpl.jena.rdf.model.impl.NTripleWriter";

        $r1[5] = "com.hp.hpl.jena.n3.N3JenaWriter";

        $r1[6] = "com.hp.hpl.jena.n3.N3JenaWriterPP";

        $r1[7] = "com.hp.hpl.jena.n3.N3TurtleJenaWriter";

        $r1[8] = "com.hp.hpl.jena.n3.N3TurtleJenaWriter";

        $r1[9] = "com.hp.hpl.jena.n3.N3JenaWriterTriples";

        $r1[10] = "com.hp.hpl.jena.n3.N3TurtleJenaWriter";

        $r1[11] = "com.hp.hpl.jena.n3.N3TurtleJenaWriter";

        $r1[12] = "com.hp.hpl.jena.n3.N3TurtleJenaWriter";

        <com.hp.hpl.jena.rdf.model.impl.RDFWriterFImpl: java.lang.String[] DEFAULTWRITERS> = $r1;

        $r2 = <com.hp.hpl.jena.rdf.model.impl.RDFWriterFImpl: java.lang.String[] LANGS>;

        $r3 = $r2[0];

        <com.hp.hpl.jena.rdf.model.impl.RDFWriterFImpl: java.lang.String DEFAULTLANG> = $r3;

        $r4 = new java.util.Properties;

        specialinvoke $r4.<java.util.Properties: void <init>()>();

        <com.hp.hpl.jena.rdf.model.impl.RDFWriterFImpl: java.util.Properties langToClassName> = $r4;

        i1 = 0;

     label1:
        $r5 = <com.hp.hpl.jena.rdf.model.impl.RDFWriterFImpl: java.lang.String[] LANGS>;

        $i0 = lengthof $r5;

        if i1 >= $i0 goto label2;

        $r8 = <com.hp.hpl.jena.rdf.model.impl.RDFWriterFImpl: java.util.Properties langToClassName>;

        $r6 = <com.hp.hpl.jena.rdf.model.impl.RDFWriterFImpl: java.lang.String[] LANGS>;

        $r9 = $r6[i1];

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("com.hp.hpl.jena.writer.");

        $r11 = <com.hp.hpl.jena.rdf.model.impl.RDFWriterFImpl: java.lang.String[] LANGS>;

        $r12 = $r11[i1];

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = <com.hp.hpl.jena.rdf.model.impl.RDFWriterFImpl: java.lang.String[] DEFAULTWRITERS>;

        $r16 = $r15[i1];

        $r17 = staticinvoke <com.hp.hpl.jena.JenaRuntime: java.lang.String getSystemProperty(java.lang.String,java.lang.String)>($r14, $r16);

        virtualinvoke $r8.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r9, $r17);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }
}
