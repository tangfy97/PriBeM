public class org.springframework.validation.MapBindingResult extends org.springframework.validation.AbstractBindingResult implements java.io.Serializable
{
    private final java.util.Map target;

    public void <init>(java.util.Map, java.lang.String)
    {
        java.lang.String r1;
        org.springframework.validation.MapBindingResult r0;
        java.util.Map r2;

        r0 := @this: org.springframework.validation.MapBindingResult;

        r2 := @parameter0: java.util.Map;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<org.springframework.validation.AbstractBindingResult: void <init>(java.lang.String)>(r1);

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r2, "Target Map must not be null");

        r0.<org.springframework.validation.MapBindingResult: java.util.Map target> = r2;

        return;
    }

    public final java.util.Map getTargetMap()
    {
        org.springframework.validation.MapBindingResult r0;
        java.util.Map $r1;

        r0 := @this: org.springframework.validation.MapBindingResult;

        $r1 = r0.<org.springframework.validation.MapBindingResult: java.util.Map target>;

        return $r1;
    }

    public final java.lang.Object getTarget()
    {
        org.springframework.validation.MapBindingResult r0;
        java.util.Map $r1;

        r0 := @this: org.springframework.validation.MapBindingResult;

        $r1 = r0.<org.springframework.validation.MapBindingResult: java.util.Map target>;

        return $r1;
    }

    protected java.lang.Object getActualFieldValue(java.lang.String)
    {
        org.springframework.validation.MapBindingResult r0;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String r1;

        r0 := @this: org.springframework.validation.MapBindingResult;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.springframework.validation.MapBindingResult: java.util.Map target>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        return $r3;
    }
}
