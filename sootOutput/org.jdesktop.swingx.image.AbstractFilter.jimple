public abstract class org.jdesktop.swingx.image.AbstractFilter extends org.jdesktop.beans.AbstractBean implements java.awt.image.BufferedImageOp
{

    public void <init>()
    {
        org.jdesktop.swingx.image.AbstractFilter r0;

        r0 := @this: org.jdesktop.swingx.image.AbstractFilter;

        specialinvoke r0.<org.jdesktop.beans.AbstractBean: void <init>()>();

        return;
    }

    public abstract java.awt.image.BufferedImage filter(java.awt.image.BufferedImage, java.awt.image.BufferedImage);

    public java.awt.geom.Rectangle2D getBounds2D(java.awt.image.BufferedImage)
    {
        java.awt.Rectangle $r0;
        org.jdesktop.swingx.image.AbstractFilter r2;
        java.awt.image.BufferedImage r1;
        int $i0, $i1;

        r2 := @this: org.jdesktop.swingx.image.AbstractFilter;

        r1 := @parameter0: java.awt.image.BufferedImage;

        $r0 = new java.awt.Rectangle;

        $i0 = virtualinvoke r1.<java.awt.image.BufferedImage: int getWidth()>();

        $i1 = virtualinvoke r1.<java.awt.image.BufferedImage: int getHeight()>();

        specialinvoke $r0.<java.awt.Rectangle: void <init>(int,int,int,int)>(0, 0, $i0, $i1);

        return $r0;
    }

    public java.awt.image.BufferedImage createCompatibleDestImage(java.awt.image.BufferedImage, java.awt.image.ColorModel)
    {
        org.jdesktop.swingx.image.AbstractFilter r3;
        java.awt.image.BufferedImage $r0, r1;
        java.awt.image.ColorModel r4;
        int $i0, $i1;
        java.awt.image.WritableRaster $r2;
        boolean $z0;

        r3 := @this: org.jdesktop.swingx.image.AbstractFilter;

        r1 := @parameter0: java.awt.image.BufferedImage;

        r4 := @parameter1: java.awt.image.ColorModel;

        if r4 != null goto label1;

        r4 = virtualinvoke r1.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>();

     label1:
        $r0 = new java.awt.image.BufferedImage;

        $i0 = virtualinvoke r1.<java.awt.image.BufferedImage: int getWidth()>();

        $i1 = virtualinvoke r1.<java.awt.image.BufferedImage: int getHeight()>();

        $r2 = virtualinvoke r4.<java.awt.image.ColorModel: java.awt.image.WritableRaster createCompatibleWritableRaster(int,int)>($i0, $i1);

        $z0 = virtualinvoke r4.<java.awt.image.ColorModel: boolean isAlphaPremultiplied()>();

        specialinvoke $r0.<java.awt.image.BufferedImage: void <init>(java.awt.image.ColorModel,java.awt.image.WritableRaster,boolean,java.util.Hashtable)>(r4, $r2, $z0, null);

        return $r0;
    }

    public java.awt.geom.Point2D getPoint2D(java.awt.geom.Point2D, java.awt.geom.Point2D)
    {
        org.jdesktop.swingx.image.AbstractFilter r3;
        java.awt.geom.Point2D r0, $r2, r4;
        java.lang.Object $r1;

        r3 := @this: org.jdesktop.swingx.image.AbstractFilter;

        r0 := @parameter0: java.awt.geom.Point2D;

        r4 := @parameter1: java.awt.geom.Point2D;

        $r1 = virtualinvoke r0.<java.awt.geom.Point2D: java.lang.Object clone()>();

        $r2 = (java.awt.geom.Point2D) $r1;

        return $r2;
    }

    public java.awt.RenderingHints getRenderingHints()
    {
        org.jdesktop.swingx.image.AbstractFilter r0;

        r0 := @this: org.jdesktop.swingx.image.AbstractFilter;

        return null;
    }
}
