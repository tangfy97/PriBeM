public class org.fife.ui.rsyntaxtextarea.folding.FoldManager extends java.lang.Object
{
    private org.fife.ui.rsyntaxtextarea.RSyntaxTextArea textArea;
    private org.fife.ui.rsyntaxtextarea.folding.FoldParser parser;
    private java.util.List folds;
    private boolean codeFoldingEnabled;
    private java.beans.PropertyChangeSupport support;
    public static final java.lang.String PROPERTY_FOLDS_UPDATED;
    private org.fife.ui.rsyntaxtextarea.parser.Parser tempParser;

    public void <init>(org.fife.ui.rsyntaxtextarea.RSyntaxTextArea)
    {
        org.fife.ui.rsyntaxtextarea.folding.FoldManager$Listener $r3;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea r1;
        java.beans.PropertyChangeSupport $r2;
        javax.swing.text.Document $r4;
        org.fife.ui.rsyntaxtextarea.folding.FoldManager r0;
        java.util.ArrayList $r5;

        r0 := @this: org.fife.ui.rsyntaxtextarea.folding.FoldManager;

        r1 := @parameter0: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea textArea> = r1;

        $r2 = new java.beans.PropertyChangeSupport;

        specialinvoke $r2.<java.beans.PropertyChangeSupport: void <init>(java.lang.Object)>(r0);

        r0.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: java.beans.PropertyChangeSupport support> = $r2;

        $r3 = new org.fife.ui.rsyntaxtextarea.folding.FoldManager$Listener;

        specialinvoke $r3.<org.fife.ui.rsyntaxtextarea.folding.FoldManager$Listener: void <init>(org.fife.ui.rsyntaxtextarea.folding.FoldManager,org.fife.ui.rsyntaxtextarea.folding.FoldManager$1)>(r0, null);

        $r4 = virtualinvoke r1.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: javax.swing.text.Document getDocument()>();

        interfaceinvoke $r4.<javax.swing.text.Document: void addDocumentListener(javax.swing.event.DocumentListener)>($r3);

        virtualinvoke r1.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: void addPropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)>("RSTA.syntaxStyle", $r3);

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: java.util.List folds> = $r5;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: void updateFoldParser()>();

        return;
    }

    public void addPropertyChangeListener(java.beans.PropertyChangeListener)
    {
        java.beans.PropertyChangeSupport $r2;
        java.beans.PropertyChangeListener r1;
        org.fife.ui.rsyntaxtextarea.folding.FoldManager r0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.folding.FoldManager;

        r1 := @parameter0: java.beans.PropertyChangeListener;

        $r2 = r0.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: java.beans.PropertyChangeSupport support>;

        virtualinvoke $r2.<java.beans.PropertyChangeSupport: void addPropertyChangeListener(java.beans.PropertyChangeListener)>(r1);

        return;
    }

    public void clear()
    {
        java.util.List $r1;
        org.fife.ui.rsyntaxtextarea.folding.FoldManager r0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.folding.FoldManager;

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: java.util.List folds>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        return;
    }

    public boolean ensureOffsetNotInClosedFold(int)
    {
        org.fife.ui.rsyntaxtextarea.folding.Fold r1;
        int i0;
        org.fife.ui.rsyntaxtextarea.folding.FoldManager r0;
        boolean $z0, z1;

        r0 := @this: org.fife.ui.rsyntaxtextarea.folding.FoldManager;

        i0 := @parameter0: int;

        z1 = 0;

        r1 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: org.fife.ui.rsyntaxtextarea.folding.Fold getDeepestFoldContaining(int)>(i0);

     label1:
        if r1 == null goto label3;

        $z0 = virtualinvoke r1.<org.fife.ui.rsyntaxtextarea.folding.Fold: boolean isCollapsed()>();

        if $z0 == 0 goto label2;

        virtualinvoke r1.<org.fife.ui.rsyntaxtextarea.folding.Fold: void setCollapsed(boolean)>(0);

        z1 = 1;

     label2:
        r1 = virtualinvoke r1.<org.fife.ui.rsyntaxtextarea.folding.Fold: org.fife.ui.rsyntaxtextarea.folding.Fold getParent()>();

        goto label1;

     label3:
        return z1;
    }

    public org.fife.ui.rsyntaxtextarea.folding.Fold getDeepestFoldContaining(int)
    {
        org.fife.ui.rsyntaxtextarea.folding.Fold $r2, r3;
        org.fife.ui.rsyntaxtextarea.folding.FoldManager r0;
        java.util.List $r1;
        int i0, $i1, i2, $i4;
        boolean $z0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.folding.FoldManager;

        i0 := @parameter0: int;

        r3 = null;

        $i4 = (int) -1;

        if i0 <= $i4 goto label3;

        i2 = 0;

     label1:
        $r1 = r0.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: java.util.List folds>;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        if i2 >= $i1 goto label3;

        $r2 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: org.fife.ui.rsyntaxtextarea.folding.Fold getFold(int)>(i2);

        $z0 = virtualinvoke $r2.<org.fife.ui.rsyntaxtextarea.folding.Fold: boolean containsOffset(int)>(i0);

        if $z0 == 0 goto label2;

        r3 = virtualinvoke $r2.<org.fife.ui.rsyntaxtextarea.folding.Fold: org.fife.ui.rsyntaxtextarea.folding.Fold getDeepestFoldContaining(int)>(i0);

        goto label3;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return r3;
    }

    public org.fife.ui.rsyntaxtextarea.folding.Fold getDeepestOpenFoldContaining(int)
    {
        org.fife.ui.rsyntaxtextarea.folding.Fold $r2, r3;
        org.fife.ui.rsyntaxtextarea.folding.FoldManager r0;
        java.util.List $r1;
        int i0, $i1, i2, $i4;
        boolean $z0, $z1;

        r0 := @this: org.fife.ui.rsyntaxtextarea.folding.FoldManager;

        i0 := @parameter0: int;

        r3 = null;

        $i4 = (int) -1;

        if i0 <= $i4 goto label4;

        i2 = 0;

     label1:
        $r1 = r0.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: java.util.List folds>;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        if i2 >= $i1 goto label4;

        $r2 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: org.fife.ui.rsyntaxtextarea.folding.Fold getFold(int)>(i2);

        $z0 = virtualinvoke $r2.<org.fife.ui.rsyntaxtextarea.folding.Fold: boolean containsOffset(int)>(i0);

        if $z0 == 0 goto label3;

        $z1 = virtualinvoke $r2.<org.fife.ui.rsyntaxtextarea.folding.Fold: boolean isCollapsed()>();

        if $z1 == 0 goto label2;

        return null;

     label2:
        r3 = virtualinvoke $r2.<org.fife.ui.rsyntaxtextarea.folding.Fold: org.fife.ui.rsyntaxtextarea.folding.Fold getDeepestOpenFoldContaining(int)>(i0);

        goto label4;

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        return r3;
    }

    public org.fife.ui.rsyntaxtextarea.folding.Fold getFold(int)
    {
        java.util.List $r1;
        org.fife.ui.rsyntaxtextarea.folding.Fold $r3;
        int i0;
        java.lang.Object $r2;
        org.fife.ui.rsyntaxtextarea.folding.FoldManager r0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.folding.FoldManager;

        i0 := @parameter0: int;

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: java.util.List folds>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = (org.fife.ui.rsyntaxtextarea.folding.Fold) $r2;

        return $r3;
    }

    public int getFoldCount()
    {
        int $i0;
        java.util.List $r1;
        org.fife.ui.rsyntaxtextarea.folding.FoldManager r0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.folding.FoldManager;

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: java.util.List folds>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    public org.fife.ui.rsyntaxtextarea.folding.Fold getFoldForLine(int)
    {
        java.util.List $r1;
        org.fife.ui.rsyntaxtextarea.folding.Fold $r2;
        int i0;
        org.fife.ui.rsyntaxtextarea.folding.FoldManager r0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.folding.FoldManager;

        i0 := @parameter0: int;

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: java.util.List folds>;

        $r2 = specialinvoke r0.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: org.fife.ui.rsyntaxtextarea.folding.Fold getFoldForLineImpl(org.fife.ui.rsyntaxtextarea.folding.Fold,java.util.List,int)>(null, $r1, i0);

        return $r2;
    }

    private org.fife.ui.rsyntaxtextarea.folding.Fold getFoldForLineImpl(org.fife.ui.rsyntaxtextarea.folding.Fold, java.util.List, int)
    {
        org.fife.ui.rsyntaxtextarea.folding.Fold r2, r5, $r6;
        org.fife.ui.rsyntaxtextarea.folding.FoldManager r4;
        java.util.List r0, $r3;
        int $i0, $i1, i2, $i3, i4, $i5, i6, i7;
        java.lang.Object $r1;

        r4 := @this: org.fife.ui.rsyntaxtextarea.folding.FoldManager;

        r5 := @parameter0: org.fife.ui.rsyntaxtextarea.folding.Fold;

        r0 := @parameter1: java.util.List;

        i4 := @parameter2: int;

        i6 = 0;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        i7 = $i0 - 1;

     label1:
        if i6 > i7 goto label8;

        $i1 = i6 + i7;

        i2 = $i1 >> 1;

        $r1 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i2);

        r2 = (org.fife.ui.rsyntaxtextarea.folding.Fold) $r1;

        $i3 = virtualinvoke r2.<org.fife.ui.rsyntaxtextarea.folding.Fold: int getStartLine()>();

        if i4 != $i3 goto label2;

        return r2;

     label2:
        if i4 >= $i3 goto label3;

        i7 = i2 - 1;

        goto label7;

     label3:
        $i5 = virtualinvoke r2.<org.fife.ui.rsyntaxtextarea.folding.Fold: int getEndLine()>();

        if i4 < $i5 goto label4;

        i6 = i2 + 1;

        goto label7;

     label4:
        $r3 = virtualinvoke r2.<org.fife.ui.rsyntaxtextarea.folding.Fold: java.util.List getChildren()>();

        if $r3 == null goto label5;

        $r6 = specialinvoke r4.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: org.fife.ui.rsyntaxtextarea.folding.Fold getFoldForLineImpl(org.fife.ui.rsyntaxtextarea.folding.Fold,java.util.List,int)>(r2, $r3, i4);

        goto label6;

     label5:
        $r6 = null;

     label6:
        return $r6;

     label7:
        goto label1;

     label8:
        return null;
    }

    public int getHiddenLineCount()
    {
        org.fife.ui.rsyntaxtextarea.folding.Fold $r4;
        org.fife.ui.rsyntaxtextarea.folding.FoldManager r0;
        java.util.List $r1, $r2;
        int $i0, $i1, i2, i3;
        java.lang.Object $r3;

        r0 := @this: org.fife.ui.rsyntaxtextarea.folding.FoldManager;

        i2 = 0;

        i3 = 0;

     label1:
        $r1 = r0.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: java.util.List folds>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if i3 >= $i0 goto label2;

        $r2 = r0.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: java.util.List folds>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i3);

        $r4 = (org.fife.ui.rsyntaxtextarea.folding.Fold) $r3;

        $i1 = virtualinvoke $r4.<org.fife.ui.rsyntaxtextarea.folding.Fold: int getCollapsedLineCount()>();

        i2 = i2 + $i1;

        i3 = i3 + 1;

        goto label1;

     label2:
        return i2;
    }

    public int getHiddenLineCountAbove(int)
    {
        int i0, $i1;
        org.fife.ui.rsyntaxtextarea.folding.FoldManager r0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.folding.FoldManager;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: int getHiddenLineCountAbove(int,boolean)>(i0, 0);

        return $i1;
    }

    public int getHiddenLineCountAbove(int, boolean)
    {
        org.fife.ui.rsyntaxtextarea.folding.Fold r4;
        org.fife.ui.rsyntaxtextarea.folding.FoldManager r0;
        java.util.List $r1, $r2;
        int $i0, i1, $i2, $i3, i4, i5, $i6;
        java.lang.Object $r3;
        boolean z0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.folding.FoldManager;

        i1 := @parameter0: int;

        z0 := @parameter1: boolean;

        i4 = 0;

        i5 = 0;

     label1:
        $r1 = r0.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: java.util.List folds>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if i5 >= $i0 goto label5;

        $r2 = r0.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: java.util.List folds>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i5);

        r4 = (org.fife.ui.rsyntaxtextarea.folding.Fold) $r3;

        if z0 == 0 goto label2;

        $i6 = i1 + i4;

        goto label3;

     label2:
        $i6 = i1;

     label3:
        $i2 = virtualinvoke r4.<org.fife.ui.rsyntaxtextarea.folding.Fold: int getStartLine()>();

        if $i2 < $i6 goto label4;

        goto label5;

     label4:
        $i3 = specialinvoke r0.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: int getHiddenLineCountAboveImpl(org.fife.ui.rsyntaxtextarea.folding.Fold,int,boolean)>(r4, $i6, z0);

        i4 = i4 + $i3;

        i5 = i5 + 1;

        goto label1;

     label5:
        return i4;
    }

    private int getHiddenLineCountAboveImpl(org.fife.ui.rsyntaxtextarea.folding.Fold, int, boolean)
    {
        org.fife.ui.rsyntaxtextarea.folding.Fold r0, $r1;
        org.fife.ui.rsyntaxtextarea.folding.FoldManager r2;
        int $i0, i1, $i2, $i3, $i4, $i5, i6, i7, $i8;
        boolean $z0, z1;

        r2 := @this: org.fife.ui.rsyntaxtextarea.folding.FoldManager;

        r0 := @parameter0: org.fife.ui.rsyntaxtextarea.folding.Fold;

        i1 := @parameter1: int;

        z1 := @parameter2: boolean;

        i6 = 0;

        $i0 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: int getEndLine()>();

        if $i0 < i1 goto label1;

        $z0 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: boolean isCollapsed()>();

        if $z0 == 0 goto label2;

        $i5 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: int getStartLine()>();

        if $i5 >= i1 goto label2;

     label1:
        i6 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: int getCollapsedLineCount()>();

        goto label7;

     label2:
        $i2 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: int getChildCount()>();

        i7 = 0;

     label3:
        if i7 >= $i2 goto label7;

        $r1 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: org.fife.ui.rsyntaxtextarea.folding.Fold getChild(int)>(i7);

        if z1 == 0 goto label4;

        $i8 = i1 + i6;

        goto label5;

     label4:
        $i8 = i1;

     label5:
        $i3 = virtualinvoke $r1.<org.fife.ui.rsyntaxtextarea.folding.Fold: int getStartLine()>();

        if $i3 < $i8 goto label6;

        goto label7;

     label6:
        $i4 = specialinvoke r2.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: int getHiddenLineCountAboveImpl(org.fife.ui.rsyntaxtextarea.folding.Fold,int,boolean)>($r1, $i8, z1);

        i6 = i6 + $i4;

        i7 = i7 + 1;

        goto label3;

     label7:
        return i6;
    }

    public int getLastVisibleLine()
    {
        org.fife.ui.rsyntaxtextarea.folding.Fold $r2, $r3, r4;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea $r1;
        org.fife.ui.rsyntaxtextarea.folding.FoldManager r0;
        int $i0, $i1, $i2, i3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r0 := @this: org.fife.ui.rsyntaxtextarea.folding.FoldManager;

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea textArea>;

        $i0 = virtualinvoke $r1.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: int getLineCount()>();

        i3 = $i0 - 1;

        $z0 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: boolean isCodeFoldingSupportedAndEnabled()>();

        if $z0 == 0 goto label2;

        $i1 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: int getFoldCount()>();

        if $i1 <= 0 goto label2;

        $i2 = $i1 - 1;

        $r2 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: org.fife.ui.rsyntaxtextarea.folding.Fold getFold(int)>($i2);

        r4 = $r2;

        $z1 = virtualinvoke $r2.<org.fife.ui.rsyntaxtextarea.folding.Fold: boolean containsLine(int)>(i3);

        if $z1 == 0 goto label2;

        $z2 = virtualinvoke $r2.<org.fife.ui.rsyntaxtextarea.folding.Fold: boolean isCollapsed()>();

        if $z2 == 0 goto label1;

        i3 = virtualinvoke $r2.<org.fife.ui.rsyntaxtextarea.folding.Fold: int getStartLine()>();

        goto label2;

     label1:
        $z3 = virtualinvoke r4.<org.fife.ui.rsyntaxtextarea.folding.Fold: boolean getHasChildFolds()>();

        if $z3 == 0 goto label2;

        $r3 = virtualinvoke r4.<org.fife.ui.rsyntaxtextarea.folding.Fold: org.fife.ui.rsyntaxtextarea.folding.Fold getLastChild()>();

        r4 = $r3;

        $z4 = virtualinvoke $r3.<org.fife.ui.rsyntaxtextarea.folding.Fold: boolean containsLine(int)>(i3);

        if $z4 == 0 goto label2;

        $z5 = virtualinvoke $r3.<org.fife.ui.rsyntaxtextarea.folding.Fold: boolean isCollapsed()>();

        if $z5 == 0 goto label1;

        i3 = virtualinvoke $r3.<org.fife.ui.rsyntaxtextarea.folding.Fold: int getStartLine()>();

        goto label2;

     label2:
        return i3;
    }

    public int getVisibleLineAbove(int)
    {
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea $r1;
        int $i0, i1, $i3, $i5;
        org.fife.ui.rsyntaxtextarea.folding.FoldManager r0;
        boolean $z0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.folding.FoldManager;

        i1 := @parameter0: int;

        if i1 <= 0 goto label1;

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea textArea>;

        $i0 = virtualinvoke $r1.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: int getLineCount()>();

        if i1 < $i0 goto label2;

     label1:
        $i3 = (int) -1;

        return $i3;

     label2:
        $i5 = (int) -1;

        i1 = i1 + $i5;

        if i1 < 0 goto label3;

        $z0 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: boolean isLineHidden(int)>(i1);

        if $z0 != 0 goto label2;

     label3:
        return i1;
    }

    public int getVisibleLineBelow(int)
    {
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea $r1;
        org.fife.ui.rsyntaxtextarea.folding.FoldManager r0;
        int $i0, $i1, i2, $i3, $i5, $i7;
        boolean $z0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.folding.FoldManager;

        i2 := @parameter0: int;

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea textArea>;

        $i0 = virtualinvoke $r1.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: int getLineCount()>();

        if i2 < 0 goto label1;

        $i1 = $i0 - 1;

        if i2 < $i1 goto label2;

     label1:
        $i5 = (int) -1;

        return $i5;

     label2:
        i2 = i2 + 1;

        if i2 >= $i0 goto label3;

        $z0 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: boolean isLineHidden(int)>(i2);

        if $z0 != 0 goto label2;

     label3:
        if i2 != $i0 goto label4;

        $i7 = (int) -1;

        $i3 = $i7;

        goto label5;

     label4:
        $i3 = i2;

     label5:
        return $i3;
    }

    public boolean isCodeFoldingEnabled()
    {
        org.fife.ui.rsyntaxtextarea.folding.FoldManager r0;
        boolean $z0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.folding.FoldManager;

        $z0 = r0.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: boolean codeFoldingEnabled>;

        return $z0;
    }

    public boolean isCodeFoldingSupportedAndEnabled()
    {
        org.fife.ui.rsyntaxtextarea.folding.FoldParser $r1;
        org.fife.ui.rsyntaxtextarea.folding.FoldManager r0;
        boolean $z0, $z1;

        r0 := @this: org.fife.ui.rsyntaxtextarea.folding.FoldManager;

        $z0 = r0.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: boolean codeFoldingEnabled>;

        if $z0 == 0 goto label1;

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: org.fife.ui.rsyntaxtextarea.folding.FoldParser parser>;

        if $r1 == null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public boolean isFoldStartLine(int)
    {
        org.fife.ui.rsyntaxtextarea.folding.Fold $r1;
        int i0;
        org.fife.ui.rsyntaxtextarea.folding.FoldManager r0;
        boolean $z0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.folding.FoldManager;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: org.fife.ui.rsyntaxtextarea.folding.Fold getFoldForLine(int)>(i0);

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isLineHidden(int)
    {
        org.fife.ui.rsyntaxtextarea.folding.Fold r4;
        org.fife.ui.rsyntaxtextarea.folding.FoldManager r0;
        java.util.List $r1, $r2;
        int $i0, i1, i2;
        java.lang.Object $r3;
        boolean $z0, $z1, $z2;

        r0 := @this: org.fife.ui.rsyntaxtextarea.folding.FoldManager;

        i1 := @parameter0: int;

        i2 = 0;

     label1:
        $r1 = r0.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: java.util.List folds>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if i2 >= $i0 goto label4;

        $r2 = r0.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: java.util.List folds>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i2);

        r4 = (org.fife.ui.rsyntaxtextarea.folding.Fold) $r3;

        $z0 = virtualinvoke r4.<org.fife.ui.rsyntaxtextarea.folding.Fold: boolean containsLine(int)>(i1);

        if $z0 == 0 goto label3;

        $z1 = virtualinvoke r4.<org.fife.ui.rsyntaxtextarea.folding.Fold: boolean isCollapsed()>();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $z2 = specialinvoke r0.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: boolean isLineHiddenImpl(org.fife.ui.rsyntaxtextarea.folding.Fold,int)>(r4, i1);

        return $z2;

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        return 0;
    }

    private boolean isLineHiddenImpl(org.fife.ui.rsyntaxtextarea.folding.Fold, int)
    {
        org.fife.ui.rsyntaxtextarea.folding.Fold r0, $r1;
        org.fife.ui.rsyntaxtextarea.folding.FoldManager r2;
        int $i0, i1, i2;
        boolean $z0, $z1, $z2;

        r2 := @this: org.fife.ui.rsyntaxtextarea.folding.FoldManager;

        r0 := @parameter0: org.fife.ui.rsyntaxtextarea.folding.Fold;

        i1 := @parameter1: int;

        i2 = 0;

     label1:
        $i0 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: int getChildCount()>();

        if i2 >= $i0 goto label4;

        $r1 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: org.fife.ui.rsyntaxtextarea.folding.Fold getChild(int)>(i2);

        $z0 = virtualinvoke $r1.<org.fife.ui.rsyntaxtextarea.folding.Fold: boolean containsLine(int)>(i1);

        if $z0 == 0 goto label3;

        $z1 = virtualinvoke $r1.<org.fife.ui.rsyntaxtextarea.folding.Fold: boolean isCollapsed()>();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $z2 = specialinvoke r2.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: boolean isLineHiddenImpl(org.fife.ui.rsyntaxtextarea.folding.Fold,int)>($r1, i1);

        return $z2;

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        return 0;
    }

    private void keepFoldState(org.fife.ui.rsyntaxtextarea.folding.Fold, java.util.List)
    {
        org.fife.ui.rsyntaxtextarea.folding.Fold r1, r3, r7;
        org.fife.ui.rsyntaxtextarea.folding.FoldManager r5;
        java.util.List r0, $r4;
        int $i0, $i1, $i2, $i3, i4;
        java.lang.Object $r2, $r6;
        boolean $z0, $z1;

        r5 := @this: org.fife.ui.rsyntaxtextarea.folding.FoldManager;

        r1 := @parameter0: org.fife.ui.rsyntaxtextarea.folding.Fold;

        r0 := @parameter1: java.util.List;

        $i0 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object)>(r0, r1);

        if $i0 < 0 goto label1;

        $r6 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i0);

        r7 = (org.fife.ui.rsyntaxtextarea.folding.Fold) $r6;

        $z1 = virtualinvoke r7.<org.fife.ui.rsyntaxtextarea.folding.Fold: boolean isCollapsed()>();

        virtualinvoke r1.<org.fife.ui.rsyntaxtextarea.folding.Fold: void setCollapsed(boolean)>($z1);

        goto label2;

     label1:
        $i1 = $i0 + 1;

        i4 = neg $i1;

        if i4 <= 0 goto label2;

        $i2 = i4 - 1;

        $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i2);

        r3 = (org.fife.ui.rsyntaxtextarea.folding.Fold) $r2;

        $i3 = virtualinvoke r1.<org.fife.ui.rsyntaxtextarea.folding.Fold: int getStartOffset()>();

        $z0 = virtualinvoke r3.<org.fife.ui.rsyntaxtextarea.folding.Fold: boolean containsOffset(int)>($i3);

        if $z0 == 0 goto label2;

        $r4 = virtualinvoke r3.<org.fife.ui.rsyntaxtextarea.folding.Fold: java.util.List getChildren()>();

        if $r4 == null goto label2;

        specialinvoke r5.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: void keepFoldState(org.fife.ui.rsyntaxtextarea.folding.Fold,java.util.List)>(r1, $r4);

     label2:
        return;
    }

    private void keepFoldStates(java.util.List, java.util.List)
    {
        org.fife.ui.rsyntaxtextarea.folding.Fold r2;
        org.fife.ui.rsyntaxtextarea.folding.FoldManager r3;
        java.util.List r0, $r4, $r5, r6;
        int $i0, i1;
        java.lang.Object $r1;

        r3 := @this: org.fife.ui.rsyntaxtextarea.folding.FoldManager;

        r0 := @parameter0: java.util.List;

        r6 := @parameter1: java.util.List;

        i1 = 0;

     label1:
        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if i1 >= $i0 goto label3;

        $r1 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i1);

        r2 = (org.fife.ui.rsyntaxtextarea.folding.Fold) $r1;

        $r4 = r3.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: java.util.List folds>;

        specialinvoke r3.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: void keepFoldState(org.fife.ui.rsyntaxtextarea.folding.Fold,java.util.List)>(r2, $r4);

        $r5 = virtualinvoke r2.<org.fife.ui.rsyntaxtextarea.folding.Fold: java.util.List getChildren()>();

        if $r5 == null goto label2;

        specialinvoke r3.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: void keepFoldStates(java.util.List,java.util.List)>($r5, r6);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    public void removePropertyChangeListener(java.beans.PropertyChangeListener)
    {
        java.beans.PropertyChangeSupport $r2;
        java.beans.PropertyChangeListener r1;
        org.fife.ui.rsyntaxtextarea.folding.FoldManager r0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.folding.FoldManager;

        r1 := @parameter0: java.beans.PropertyChangeListener;

        $r2 = r0.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: java.beans.PropertyChangeSupport support>;

        virtualinvoke $r2.<java.beans.PropertyChangeSupport: void removePropertyChangeListener(java.beans.PropertyChangeListener)>(r1);

        return;
    }

    public void reparse()
    {
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea $r3, $r9;
        org.fife.ui.rsyntaxtextarea.folding.FoldManager r0;
        java.util.List $r1, $r5, $r6, $r7, r10;
        java.beans.PropertyChangeSupport $r8;
        org.fife.ui.rsyntaxtextarea.folding.FoldParser $r2, $r4;
        boolean $z0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.folding.FoldManager;

        $z0 = r0.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: boolean codeFoldingEnabled>;

        if $z0 == 0 goto label3;

        $r2 = r0.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: org.fife.ui.rsyntaxtextarea.folding.FoldParser parser>;

        if $r2 == null goto label3;

        $r4 = r0.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: org.fife.ui.rsyntaxtextarea.folding.FoldParser parser>;

        $r3 = r0.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea textArea>;

        $r5 = interfaceinvoke $r4.<org.fife.ui.rsyntaxtextarea.folding.FoldParser: java.util.List getFolds(org.fife.ui.rsyntaxtextarea.RSyntaxTextArea)>($r3);

        r10 = $r5;

        if $r5 != null goto label1;

        r10 = <java.util.Collections: java.util.List EMPTY_LIST>;

        goto label2;

     label1:
        $r6 = r0.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: java.util.List folds>;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: void keepFoldStates(java.util.List,java.util.List)>($r5, $r6);

     label2:
        r0.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: java.util.List folds> = r10;

        $r8 = r0.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: java.beans.PropertyChangeSupport support>;

        $r7 = r0.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: java.util.List folds>;

        virtualinvoke $r8.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("FoldsUpdated", null, $r7);

        $r9 = r0.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea textArea>;

        virtualinvoke $r9.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: void repaint()>();

        goto label4;

     label3:
        $r1 = r0.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: java.util.List folds>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

     label4:
        return;
    }

    public void setCodeFoldingEnabled(boolean)
    {
        org.fife.ui.rsyntaxtextarea.parser.Parser $r1, $r6, $r9;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea $r3, $r7, $r10;
        org.fife.ui.rsyntaxtextarea.folding.FoldManager r0;
        org.fife.ui.rsyntaxtextarea.folding.FoldManager$1 $r5;
        java.util.List $r2;
        java.beans.PropertyChangeSupport $r4, $r8;
        boolean z0, $z1;

        r0 := @this: org.fife.ui.rsyntaxtextarea.folding.FoldManager;

        z0 := @parameter0: boolean;

        $z1 = r0.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: boolean codeFoldingEnabled>;

        if z0 == $z1 goto label3;

        r0.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: boolean codeFoldingEnabled> = z0;

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: org.fife.ui.rsyntaxtextarea.parser.Parser tempParser>;

        if $r1 == null goto label1;

        $r10 = r0.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea textArea>;

        $r9 = r0.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: org.fife.ui.rsyntaxtextarea.parser.Parser tempParser>;

        virtualinvoke $r10.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: boolean removeParser(org.fife.ui.rsyntaxtextarea.parser.Parser)>($r9);

     label1:
        if z0 == 0 goto label2;

        $r5 = new org.fife.ui.rsyntaxtextarea.folding.FoldManager$1;

        specialinvoke $r5.<org.fife.ui.rsyntaxtextarea.folding.FoldManager$1: void <init>(org.fife.ui.rsyntaxtextarea.folding.FoldManager)>(r0);

        r0.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: org.fife.ui.rsyntaxtextarea.parser.Parser tempParser> = $r5;

        $r7 = r0.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea textArea>;

        $r6 = r0.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: org.fife.ui.rsyntaxtextarea.parser.Parser tempParser>;

        virtualinvoke $r7.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: void addParser(org.fife.ui.rsyntaxtextarea.parser.Parser)>($r6);

        $r8 = r0.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: java.beans.PropertyChangeSupport support>;

        virtualinvoke $r8.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("FoldsUpdated", null, null);

        goto label3;

     label2:
        $r2 = <java.util.Collections: java.util.List EMPTY_LIST>;

        r0.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: java.util.List folds> = $r2;

        $r3 = r0.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea textArea>;

        virtualinvoke $r3.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: void repaint()>();

        $r4 = r0.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: java.beans.PropertyChangeSupport support>;

        virtualinvoke $r4.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("FoldsUpdated", null, null);

     label3:
        return;
    }

    public void setFolds(java.util.List)
    {
        java.util.List r1;
        org.fife.ui.rsyntaxtextarea.folding.FoldManager r0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.folding.FoldManager;

        r1 := @parameter0: java.util.List;

        r0.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: java.util.List folds> = r1;

        return;
    }

    private void updateFoldParser()
    {
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea $r2;
        org.fife.ui.rsyntaxtextarea.folding.FoldParser $r4;
        java.lang.String $r3;
        org.fife.ui.rsyntaxtextarea.folding.FoldParserManager $r1;
        org.fife.ui.rsyntaxtextarea.folding.FoldManager r0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.folding.FoldManager;

        $r1 = staticinvoke <org.fife.ui.rsyntaxtextarea.folding.FoldParserManager: org.fife.ui.rsyntaxtextarea.folding.FoldParserManager get()>();

        $r2 = r0.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea textArea>;

        $r3 = virtualinvoke $r2.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: java.lang.String getSyntaxEditingStyle()>();

        $r4 = virtualinvoke $r1.<org.fife.ui.rsyntaxtextarea.folding.FoldParserManager: org.fife.ui.rsyntaxtextarea.folding.FoldParser getFoldParser(java.lang.String)>($r3);

        r0.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: org.fife.ui.rsyntaxtextarea.folding.FoldParser parser> = $r4;

        return;
    }

    static void access$100(org.fife.ui.rsyntaxtextarea.folding.FoldManager)
    {
        org.fife.ui.rsyntaxtextarea.folding.FoldManager r0;

        r0 := @parameter0: org.fife.ui.rsyntaxtextarea.folding.FoldManager;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: void updateFoldParser()>();

        return;
    }

    static org.fife.ui.rsyntaxtextarea.RSyntaxTextArea access$200(org.fife.ui.rsyntaxtextarea.folding.FoldManager)
    {
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea $r1;
        org.fife.ui.rsyntaxtextarea.folding.FoldManager r0;

        r0 := @parameter0: org.fife.ui.rsyntaxtextarea.folding.FoldManager;

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea textArea>;

        return $r1;
    }

    public static void <clinit>()
    {
        <org.fife.ui.rsyntaxtextarea.folding.FoldManager: java.lang.String PROPERTY_FOLDS_UPDATED> = "FoldsUpdated";

        return;
    }
}
