public abstract class org.waveprotocol.box.server.waveserver.ForwardingWaveletDeltaRecordReader extends java.lang.Object implements org.waveprotocol.box.server.waveserver.WaveletDeltaRecordReader
{

    public void <init>()
    {
        org.waveprotocol.box.server.waveserver.ForwardingWaveletDeltaRecordReader r0;

        r0 := @this: org.waveprotocol.box.server.waveserver.ForwardingWaveletDeltaRecordReader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected abstract org.waveprotocol.box.server.waveserver.WaveletDeltaRecordReader delegate();

    public org.waveprotocol.wave.model.id.WaveletName getWaveletName()
    {
        org.waveprotocol.wave.model.id.WaveletName $r2;
        org.waveprotocol.box.server.waveserver.ForwardingWaveletDeltaRecordReader r0;
        org.waveprotocol.box.server.waveserver.WaveletDeltaRecordReader $r1;

        r0 := @this: org.waveprotocol.box.server.waveserver.ForwardingWaveletDeltaRecordReader;

        $r1 = virtualinvoke r0.<org.waveprotocol.box.server.waveserver.ForwardingWaveletDeltaRecordReader: org.waveprotocol.box.server.waveserver.WaveletDeltaRecordReader delegate()>();

        $r2 = interfaceinvoke $r1.<org.waveprotocol.box.server.waveserver.WaveletDeltaRecordReader: org.waveprotocol.wave.model.id.WaveletName getWaveletName()>();

        return $r2;
    }

    public boolean isEmpty()
    {
        org.waveprotocol.box.server.waveserver.ForwardingWaveletDeltaRecordReader r0;
        org.waveprotocol.box.server.waveserver.WaveletDeltaRecordReader $r1;
        boolean $z0;

        r0 := @this: org.waveprotocol.box.server.waveserver.ForwardingWaveletDeltaRecordReader;

        $r1 = virtualinvoke r0.<org.waveprotocol.box.server.waveserver.ForwardingWaveletDeltaRecordReader: org.waveprotocol.box.server.waveserver.WaveletDeltaRecordReader delegate()>();

        $z0 = interfaceinvoke $r1.<org.waveprotocol.box.server.waveserver.WaveletDeltaRecordReader: boolean isEmpty()>();

        return $z0;
    }

    public org.waveprotocol.wave.model.version.HashedVersion getEndVersion()
    {
        org.waveprotocol.wave.model.version.HashedVersion $r2;
        org.waveprotocol.box.server.waveserver.ForwardingWaveletDeltaRecordReader r0;
        org.waveprotocol.box.server.waveserver.WaveletDeltaRecordReader $r1;

        r0 := @this: org.waveprotocol.box.server.waveserver.ForwardingWaveletDeltaRecordReader;

        $r1 = virtualinvoke r0.<org.waveprotocol.box.server.waveserver.ForwardingWaveletDeltaRecordReader: org.waveprotocol.box.server.waveserver.WaveletDeltaRecordReader delegate()>();

        $r2 = interfaceinvoke $r1.<org.waveprotocol.box.server.waveserver.WaveletDeltaRecordReader: org.waveprotocol.wave.model.version.HashedVersion getEndVersion()>();

        return $r2;
    }

    public org.waveprotocol.box.server.waveserver.WaveletDeltaRecord getDelta(long) throws java.io.IOException
    {
        org.waveprotocol.box.server.waveserver.ForwardingWaveletDeltaRecordReader r0;
        long l0;
        org.waveprotocol.box.server.waveserver.WaveletDeltaRecord $r2;
        org.waveprotocol.box.server.waveserver.WaveletDeltaRecordReader $r1;

        r0 := @this: org.waveprotocol.box.server.waveserver.ForwardingWaveletDeltaRecordReader;

        l0 := @parameter0: long;

        $r1 = virtualinvoke r0.<org.waveprotocol.box.server.waveserver.ForwardingWaveletDeltaRecordReader: org.waveprotocol.box.server.waveserver.WaveletDeltaRecordReader delegate()>();

        $r2 = interfaceinvoke $r1.<org.waveprotocol.box.server.waveserver.WaveletDeltaRecordReader: org.waveprotocol.box.server.waveserver.WaveletDeltaRecord getDelta(long)>(l0);

        return $r2;
    }

    public org.waveprotocol.box.server.waveserver.WaveletDeltaRecord getDeltaByEndVersion(long) throws java.io.IOException
    {
        org.waveprotocol.box.server.waveserver.ForwardingWaveletDeltaRecordReader r0;
        long l0;
        org.waveprotocol.box.server.waveserver.WaveletDeltaRecord $r2;
        org.waveprotocol.box.server.waveserver.WaveletDeltaRecordReader $r1;

        r0 := @this: org.waveprotocol.box.server.waveserver.ForwardingWaveletDeltaRecordReader;

        l0 := @parameter0: long;

        $r1 = virtualinvoke r0.<org.waveprotocol.box.server.waveserver.ForwardingWaveletDeltaRecordReader: org.waveprotocol.box.server.waveserver.WaveletDeltaRecordReader delegate()>();

        $r2 = interfaceinvoke $r1.<org.waveprotocol.box.server.waveserver.WaveletDeltaRecordReader: org.waveprotocol.box.server.waveserver.WaveletDeltaRecord getDeltaByEndVersion(long)>(l0);

        return $r2;
    }

    public org.waveprotocol.wave.model.version.HashedVersion getAppliedAtVersion(long) throws java.io.IOException
    {
        org.waveprotocol.box.server.waveserver.ForwardingWaveletDeltaRecordReader r0;
        org.waveprotocol.wave.model.version.HashedVersion $r2;
        long l0;
        org.waveprotocol.box.server.waveserver.WaveletDeltaRecordReader $r1;

        r0 := @this: org.waveprotocol.box.server.waveserver.ForwardingWaveletDeltaRecordReader;

        l0 := @parameter0: long;

        $r1 = virtualinvoke r0.<org.waveprotocol.box.server.waveserver.ForwardingWaveletDeltaRecordReader: org.waveprotocol.box.server.waveserver.WaveletDeltaRecordReader delegate()>();

        $r2 = interfaceinvoke $r1.<org.waveprotocol.box.server.waveserver.WaveletDeltaRecordReader: org.waveprotocol.wave.model.version.HashedVersion getAppliedAtVersion(long)>(l0);

        return $r2;
    }

    public org.waveprotocol.wave.model.version.HashedVersion getResultingVersion(long) throws java.io.IOException
    {
        org.waveprotocol.box.server.waveserver.ForwardingWaveletDeltaRecordReader r0;
        org.waveprotocol.wave.model.version.HashedVersion $r2;
        long l0;
        org.waveprotocol.box.server.waveserver.WaveletDeltaRecordReader $r1;

        r0 := @this: org.waveprotocol.box.server.waveserver.ForwardingWaveletDeltaRecordReader;

        l0 := @parameter0: long;

        $r1 = virtualinvoke r0.<org.waveprotocol.box.server.waveserver.ForwardingWaveletDeltaRecordReader: org.waveprotocol.box.server.waveserver.WaveletDeltaRecordReader delegate()>();

        $r2 = interfaceinvoke $r1.<org.waveprotocol.box.server.waveserver.WaveletDeltaRecordReader: org.waveprotocol.wave.model.version.HashedVersion getResultingVersion(long)>(l0);

        return $r2;
    }

    public org.waveprotocol.box.server.waveserver.ByteStringMessage getAppliedDelta(long) throws java.io.IOException
    {
        org.waveprotocol.box.server.waveserver.ForwardingWaveletDeltaRecordReader r0;
        long l0;
        org.waveprotocol.box.server.waveserver.ByteStringMessage $r2;
        org.waveprotocol.box.server.waveserver.WaveletDeltaRecordReader $r1;

        r0 := @this: org.waveprotocol.box.server.waveserver.ForwardingWaveletDeltaRecordReader;

        l0 := @parameter0: long;

        $r1 = virtualinvoke r0.<org.waveprotocol.box.server.waveserver.ForwardingWaveletDeltaRecordReader: org.waveprotocol.box.server.waveserver.WaveletDeltaRecordReader delegate()>();

        $r2 = interfaceinvoke $r1.<org.waveprotocol.box.server.waveserver.WaveletDeltaRecordReader: org.waveprotocol.box.server.waveserver.ByteStringMessage getAppliedDelta(long)>(l0);

        return $r2;
    }

    public org.waveprotocol.wave.model.operation.wave.TransformedWaveletDelta getTransformedDelta(long) throws java.io.IOException
    {
        org.waveprotocol.box.server.waveserver.ForwardingWaveletDeltaRecordReader r0;
        org.waveprotocol.wave.model.operation.wave.TransformedWaveletDelta $r2;
        long l0;
        org.waveprotocol.box.server.waveserver.WaveletDeltaRecordReader $r1;

        r0 := @this: org.waveprotocol.box.server.waveserver.ForwardingWaveletDeltaRecordReader;

        l0 := @parameter0: long;

        $r1 = virtualinvoke r0.<org.waveprotocol.box.server.waveserver.ForwardingWaveletDeltaRecordReader: org.waveprotocol.box.server.waveserver.WaveletDeltaRecordReader delegate()>();

        $r2 = interfaceinvoke $r1.<org.waveprotocol.box.server.waveserver.WaveletDeltaRecordReader: org.waveprotocol.wave.model.operation.wave.TransformedWaveletDelta getTransformedDelta(long)>(l0);

        return $r2;
    }
}
