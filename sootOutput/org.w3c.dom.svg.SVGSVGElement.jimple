public interface  org.w3c.dom.svg.SVGSVGElement extends java.lang.Object implements org.w3c.dom.svg.SVGElement, org.w3c.dom.svg.SVGTests, org.w3c.dom.svg.SVGLangSpace, org.w3c.dom.svg.SVGExternalResourcesRequired, org.w3c.dom.svg.SVGStylable, org.w3c.dom.svg.SVGLocatable, org.w3c.dom.svg.SVGFitToViewBox, org.w3c.dom.svg.SVGZoomAndPan, org.w3c.dom.events.EventTarget, org.w3c.dom.events.DocumentEvent, org.w3c.dom.css.ViewCSS, org.w3c.dom.css.DocumentCSS
{

    public abstract org.w3c.dom.svg.SVGAnimatedLength getX();

    public abstract org.w3c.dom.svg.SVGAnimatedLength getY();

    public abstract org.w3c.dom.svg.SVGAnimatedLength getWidth();

    public abstract org.w3c.dom.svg.SVGAnimatedLength getHeight();

    public abstract java.lang.String getContentScriptType();

    public abstract void setContentScriptType(java.lang.String) throws org.w3c.dom.DOMException;

    public abstract java.lang.String getContentStyleType();

    public abstract void setContentStyleType(java.lang.String) throws org.w3c.dom.DOMException;

    public abstract org.w3c.dom.svg.SVGRect getViewport();

    public abstract float getPixelUnitToMillimeterX();

    public abstract float getPixelUnitToMillimeterY();

    public abstract float getScreenPixelToMillimeterX();

    public abstract float getScreenPixelToMillimeterY();

    public abstract boolean getUseCurrentView();

    public abstract void setUseCurrentView(boolean) throws org.w3c.dom.DOMException;

    public abstract org.w3c.dom.svg.SVGViewSpec getCurrentView();

    public abstract float getCurrentScale();

    public abstract void setCurrentScale(float) throws org.w3c.dom.DOMException;

    public abstract org.w3c.dom.svg.SVGPoint getCurrentTranslate();

    public abstract int suspendRedraw(int);

    public abstract void unsuspendRedraw(int) throws org.w3c.dom.DOMException;

    public abstract void unsuspendRedrawAll();

    public abstract void forceRedraw();

    public abstract void pauseAnimations();

    public abstract void unpauseAnimations();

    public abstract boolean animationsPaused();

    public abstract float getCurrentTime();

    public abstract void setCurrentTime(float);

    public abstract org.w3c.dom.NodeList getIntersectionList(org.w3c.dom.svg.SVGRect, org.w3c.dom.svg.SVGElement);

    public abstract org.w3c.dom.NodeList getEnclosureList(org.w3c.dom.svg.SVGRect, org.w3c.dom.svg.SVGElement);

    public abstract boolean checkIntersection(org.w3c.dom.svg.SVGElement, org.w3c.dom.svg.SVGRect);

    public abstract boolean checkEnclosure(org.w3c.dom.svg.SVGElement, org.w3c.dom.svg.SVGRect);

    public abstract void deselectAll();

    public abstract org.w3c.dom.svg.SVGNumber createSVGNumber();

    public abstract org.w3c.dom.svg.SVGLength createSVGLength();

    public abstract org.w3c.dom.svg.SVGAngle createSVGAngle();

    public abstract org.w3c.dom.svg.SVGPoint createSVGPoint();

    public abstract org.w3c.dom.svg.SVGMatrix createSVGMatrix();

    public abstract org.w3c.dom.svg.SVGRect createSVGRect();

    public abstract org.w3c.dom.svg.SVGTransform createSVGTransform();

    public abstract org.w3c.dom.svg.SVGTransform createSVGTransformFromMatrix(org.w3c.dom.svg.SVGMatrix);

    public abstract org.w3c.dom.Element getElementById(java.lang.String);

    public void setCurrentRotate(float)
    {
        float parameter0;
        java.lang.Error $r0;
        org.w3c.dom.svg.SVGSVGElement this;

        this := @this: org.w3c.dom.svg.SVGSVGElement;

        parameter0 := @parameter0: float;

        $r0 = new java.lang.Error;

        specialinvoke $r0.<java.lang.Error: void <init>(java.lang.String)>("Unresolved compilation error: Method <org.w3c.dom.svg.SVGSVGElement: void setCurrentRotate(float)> does not exist!");

        throw $r0;
    }
}
