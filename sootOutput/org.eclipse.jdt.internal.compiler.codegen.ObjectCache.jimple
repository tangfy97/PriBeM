public class org.eclipse.jdt.internal.compiler.codegen.ObjectCache extends java.lang.Object
{
    public java.lang.Object[] keyTable;
    public int[] valueTable;
    int elementSize;
    int threshold;

    public void <init>()
    {
        org.eclipse.jdt.internal.compiler.codegen.ObjectCache r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.ObjectCache;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.ObjectCache: void <init>(int)>(13);

        return;
    }

    public void <init>(int)
    {
        java.lang.Object[] $r1;
        int[] $r2;
        int i0, $i1;
        float $f0, $f1;
        org.eclipse.jdt.internal.compiler.codegen.ObjectCache r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.ObjectCache;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.eclipse.jdt.internal.compiler.codegen.ObjectCache: int elementSize> = 0;

        $f0 = (float) i0;

        $f1 = $f0 * 0.66F;

        $i1 = (int) $f1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.ObjectCache: int threshold> = $i1;

        $r1 = newarray (java.lang.Object)[i0];

        r0.<org.eclipse.jdt.internal.compiler.codegen.ObjectCache: java.lang.Object[] keyTable> = $r1;

        $r2 = newarray (int)[i0];

        r0.<org.eclipse.jdt.internal.compiler.codegen.ObjectCache: int[] valueTable> = $r2;

        return;
    }

    public void clear()
    {
        java.lang.Object[] $r1, $r2;
        int[] $r3;
        int i0, $i2;
        org.eclipse.jdt.internal.compiler.codegen.ObjectCache r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.ObjectCache;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.ObjectCache: java.lang.Object[] keyTable>;

        i0 = lengthof $r1;

        goto label2;

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.ObjectCache: java.lang.Object[] keyTable>;

        $r2[i0] = null;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.codegen.ObjectCache: int[] valueTable>;

        $r3[i0] = 0;

     label2:
        $i2 = (int) -1;

        i0 = i0 + $i2;

        if i0 >= 0 goto label1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.ObjectCache: int elementSize> = 0;

        return;
    }

    public boolean containsKey(java.lang.Object)
    {
        java.lang.Object[] $r2, $r3, $r5;
        int i0, i1;
        java.lang.Object r1, $r4, $r6;
        org.eclipse.jdt.internal.compiler.codegen.ObjectCache r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.ObjectCache;

        r1 := @parameter0: java.lang.Object;

        i1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.ObjectCache: int hashCode(java.lang.Object)>(r1);

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.ObjectCache: java.lang.Object[] keyTable>;

        i0 = lengthof $r2;

        goto label3;

     label1:
        $r3 = r0.<org.eclipse.jdt.internal.compiler.codegen.ObjectCache: java.lang.Object[] keyTable>;

        $r4 = $r3[i1];

        if $r4 != r1 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        if i1 != i0 goto label3;

        i1 = 0;

     label3:
        $r5 = r0.<org.eclipse.jdt.internal.compiler.codegen.ObjectCache: java.lang.Object[] keyTable>;

        $r6 = $r5[i1];

        if $r6 != null goto label1;

        return 0;
    }

    public int get(java.lang.Object)
    {
        java.lang.Object[] $r2, $r3, $r6;
        int[] $r5;
        int i0, $i1, i2, $i4;
        java.lang.Object r1, $r4, $r7;
        org.eclipse.jdt.internal.compiler.codegen.ObjectCache r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.ObjectCache;

        r1 := @parameter0: java.lang.Object;

        i2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.ObjectCache: int hashCode(java.lang.Object)>(r1);

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.ObjectCache: java.lang.Object[] keyTable>;

        i0 = lengthof $r2;

        goto label3;

     label1:
        $r3 = r0.<org.eclipse.jdt.internal.compiler.codegen.ObjectCache: java.lang.Object[] keyTable>;

        $r4 = $r3[i2];

        if $r4 != r1 goto label2;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.codegen.ObjectCache: int[] valueTable>;

        $i1 = $r5[i2];

        return $i1;

     label2:
        i2 = i2 + 1;

        if i2 != i0 goto label3;

        i2 = 0;

     label3:
        $r6 = r0.<org.eclipse.jdt.internal.compiler.codegen.ObjectCache: java.lang.Object[] keyTable>;

        $r7 = $r6[i2];

        if $r7 != null goto label1;

        $i4 = (int) -1;

        return $i4;
    }

    public int hashCode(java.lang.Object)
    {
        java.lang.Object[] $r2;
        int $i0, $i1, $i2, $i3;
        java.lang.Object r0;
        org.eclipse.jdt.internal.compiler.codegen.ObjectCache r1;

        r1 := @this: org.eclipse.jdt.internal.compiler.codegen.ObjectCache;

        r0 := @parameter0: java.lang.Object;

        $i0 = virtualinvoke r0.<java.lang.Object: int hashCode()>();

        $i2 = $i0 & 2147483647;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.codegen.ObjectCache: java.lang.Object[] keyTable>;

        $i1 = lengthof $r2;

        $i3 = $i2 % $i1;

        return $i3;
    }

    public int put(java.lang.Object, int)
    {
        java.lang.Object[] $r2, $r3, $r6, $r8;
        int[] $r5, $r7;
        int i0, i1, $i2, $i3, $i4, i5;
        org.eclipse.jdt.internal.compiler.codegen.ObjectCache r0;
        java.lang.Object r1, $r4, $r9;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.ObjectCache;

        r1 := @parameter0: java.lang.Object;

        i1 := @parameter1: int;

        i5 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.ObjectCache: int hashCode(java.lang.Object)>(r1);

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.ObjectCache: java.lang.Object[] keyTable>;

        i0 = lengthof $r2;

        goto label3;

     label1:
        $r3 = r0.<org.eclipse.jdt.internal.compiler.codegen.ObjectCache: java.lang.Object[] keyTable>;

        $r4 = $r3[i5];

        if $r4 != r1 goto label2;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.codegen.ObjectCache: int[] valueTable>;

        $r5[i5] = i1;

        return i1;

     label2:
        i5 = i5 + 1;

        if i5 != i0 goto label3;

        i5 = 0;

     label3:
        $r8 = r0.<org.eclipse.jdt.internal.compiler.codegen.ObjectCache: java.lang.Object[] keyTable>;

        $r9 = $r8[i5];

        if $r9 != null goto label1;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.codegen.ObjectCache: java.lang.Object[] keyTable>;

        $r6[i5] = r1;

        $r7 = r0.<org.eclipse.jdt.internal.compiler.codegen.ObjectCache: int[] valueTable>;

        $r7[i5] = i1;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.ObjectCache: int elementSize>;

        $i3 = $i2 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.ObjectCache: int elementSize> = $i3;

        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.ObjectCache: int threshold>;

        if $i3 <= $i4 goto label4;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.ObjectCache: void rehash()>();

     label4:
        return i1;
    }

    private void rehash()
    {
        java.lang.Object[] $r2, $r3, $r4, $r6, $r9;
        int[] $r7, $r10;
        int $i0, $i1, $i2, $i3, i4, $i6;
        org.eclipse.jdt.internal.compiler.codegen.ObjectCache r1, $r11;
        java.lang.Object $r5, $r8;

        r1 := @this: org.eclipse.jdt.internal.compiler.codegen.ObjectCache;

        $r11 = new org.eclipse.jdt.internal.compiler.codegen.ObjectCache;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.codegen.ObjectCache: java.lang.Object[] keyTable>;

        $i0 = lengthof $r2;

        $i1 = $i0 * 2;

        specialinvoke $r11.<org.eclipse.jdt.internal.compiler.codegen.ObjectCache: void <init>(int)>($i1);

        $r3 = r1.<org.eclipse.jdt.internal.compiler.codegen.ObjectCache: java.lang.Object[] keyTable>;

        i4 = lengthof $r3;

        goto label2;

     label1:
        $r4 = r1.<org.eclipse.jdt.internal.compiler.codegen.ObjectCache: java.lang.Object[] keyTable>;

        $r5 = $r4[i4];

        if $r5 == null goto label2;

        $r6 = r1.<org.eclipse.jdt.internal.compiler.codegen.ObjectCache: java.lang.Object[] keyTable>;

        $r8 = $r6[i4];

        $r7 = r1.<org.eclipse.jdt.internal.compiler.codegen.ObjectCache: int[] valueTable>;

        $i2 = $r7[i4];

        virtualinvoke $r11.<org.eclipse.jdt.internal.compiler.codegen.ObjectCache: int put(java.lang.Object,int)>($r8, $i2);

     label2:
        $i6 = (int) -1;

        i4 = i4 + $i6;

        if i4 >= 0 goto label1;

        $r9 = $r11.<org.eclipse.jdt.internal.compiler.codegen.ObjectCache: java.lang.Object[] keyTable>;

        r1.<org.eclipse.jdt.internal.compiler.codegen.ObjectCache: java.lang.Object[] keyTable> = $r9;

        $r10 = $r11.<org.eclipse.jdt.internal.compiler.codegen.ObjectCache: int[] valueTable>;

        r1.<org.eclipse.jdt.internal.compiler.codegen.ObjectCache: int[] valueTable> = $r10;

        $i3 = $r11.<org.eclipse.jdt.internal.compiler.codegen.ObjectCache: int threshold>;

        r1.<org.eclipse.jdt.internal.compiler.codegen.ObjectCache: int threshold> = $i3;

        return;
    }

    public int size()
    {
        int $i0;
        org.eclipse.jdt.internal.compiler.codegen.ObjectCache r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.ObjectCache;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.ObjectCache: int elementSize>;

        return $i0;
    }

    public java.lang.String toString()
    {
        java.lang.Object[] $r2, $r4;
        int[] $r8;
        java.lang.StringBuffer $r1, $r6, $r7;
        int $i0, $i1, i2;
        java.lang.Object $r3, $r5;
        java.lang.String $r9;
        org.eclipse.jdt.internal.compiler.codegen.ObjectCache r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.ObjectCache;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.ObjectCache: int size()>();

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("{");

        i2 = 0;

        goto label4;

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.ObjectCache: java.lang.Object[] keyTable>;

        $r3 = $r2[i2];

        if $r3 == null goto label2;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.codegen.ObjectCache: java.lang.Object[] keyTable>;

        $r5 = $r4[i2];

        $r6 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("->");

        $r8 = r0.<org.eclipse.jdt.internal.compiler.codegen.ObjectCache: int[] valueTable>;

        $i1 = $r8[i2];

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

     label2:
        if i2 >= $i0 goto label3;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

     label3:
        i2 = i2 + 1;

     label4:
        if i2 < $i0 goto label1;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("}");

        $r9 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r9;
    }
}
