public class net.oauth.client.OAuthResponseMessage extends net.oauth.OAuthMessage
{
    private final net.oauth.http.HttpResponseMessage http;

    void <init>(net.oauth.http.HttpResponseMessage) throws java.io.IOException
    {
        java.net.URL $r2;
        java.lang.String $r3, $r4, $r11, $r13, $r15, $r20, $r21;
        net.oauth.OAuth$Parameter r19;
        boolean $z0, $z1, $z2, $z3;
        java.util.Map$Entry r10;
        net.oauth.http.HttpResponseMessage r1;
        java.util.Iterator $r8, $r17;
        java.util.List $r5, $r6, $r7, $r16;
        java.lang.Object $r9, $r12, $r14, $r18;
        net.oauth.client.OAuthResponseMessage r0;

        r0 := @this: net.oauth.client.OAuthResponseMessage;

        r1 := @parameter0: net.oauth.http.HttpResponseMessage;

        $r3 = r1.<net.oauth.http.HttpResponseMessage: java.lang.String method>;

        $r2 = r1.<net.oauth.http.HttpResponseMessage: java.net.URL url>;

        $r4 = virtualinvoke $r2.<java.net.URL: java.lang.String toExternalForm()>();

        specialinvoke r0.<net.oauth.OAuthMessage: void <init>(java.lang.String,java.lang.String,java.util.Collection)>($r3, $r4, null);

        r0.<net.oauth.client.OAuthResponseMessage: net.oauth.http.HttpResponseMessage http> = r1;

        $r5 = virtualinvoke r0.<net.oauth.client.OAuthResponseMessage: java.util.List getHeaders()>();

        $r6 = r1.<net.oauth.http.HttpResponseMessage: java.util.List headers>;

        interfaceinvoke $r5.<java.util.List: boolean addAll(java.util.Collection)>($r6);

        $r7 = r1.<net.oauth.http.HttpResponseMessage: java.util.List headers>;

        $r8 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.util.Map$Entry) $r9;

        $r11 = "WWW-Authenticate";

        $r12 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r13 = (java.lang.String) $r12;

        $z1 = virtualinvoke $r11.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r13);

        if $z1 == 0 goto label4;

        $r14 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r15 = (java.lang.String) $r14;

        $r16 = staticinvoke <net.oauth.client.OAuthResponseMessage: java.util.List decodeAuthorization(java.lang.String)>($r15);

        $r17 = interfaceinvoke $r16.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke $r17.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        $r18 = interfaceinvoke $r17.<java.util.Iterator: java.lang.Object next()>();

        r19 = (net.oauth.OAuth$Parameter) $r18;

        $r20 = "realm";

        $r21 = virtualinvoke r19.<net.oauth.OAuth$Parameter: java.lang.String getKey()>();

        $z3 = virtualinvoke $r20.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r21);

        if $z3 != 0 goto label3;

        virtualinvoke r0.<net.oauth.client.OAuthResponseMessage: void addParameter(java.util.Map$Entry)>(r19);

     label3:
        goto label2;

     label4:
        goto label1;

     label5:
        return;
    }

    public net.oauth.http.HttpResponseMessage getHttpResponse()
    {
        net.oauth.http.HttpResponseMessage $r1;
        net.oauth.client.OAuthResponseMessage r0;

        r0 := @this: net.oauth.client.OAuthResponseMessage;

        $r1 = r0.<net.oauth.client.OAuthResponseMessage: net.oauth.http.HttpResponseMessage http>;

        return $r1;
    }

    public java.io.InputStream getBodyAsStream() throws java.io.IOException
    {
        net.oauth.http.HttpResponseMessage $r1;
        net.oauth.client.OAuthResponseMessage r0;
        java.io.InputStream $r2;

        r0 := @this: net.oauth.client.OAuthResponseMessage;

        $r1 = r0.<net.oauth.client.OAuthResponseMessage: net.oauth.http.HttpResponseMessage http>;

        $r2 = virtualinvoke $r1.<net.oauth.http.HttpResponseMessage: java.io.InputStream getBody()>();

        return $r2;
    }

    public java.lang.String getBodyEncoding()
    {
        java.lang.String $r2;
        net.oauth.http.HttpResponseMessage $r1;
        net.oauth.client.OAuthResponseMessage r0;

        r0 := @this: net.oauth.client.OAuthResponseMessage;

        $r1 = r0.<net.oauth.client.OAuthResponseMessage: net.oauth.http.HttpResponseMessage http>;

        $r2 = virtualinvoke $r1.<net.oauth.http.HttpResponseMessage: java.lang.String getContentCharset()>();

        return $r2;
    }

    public transient void requireParameters(java.lang.String[]) throws net.oauth.OAuthProblemException, java.io.IOException
    {
        java.util.Map $r3, $r4;
        java.lang.String[] r1;
        net.oauth.OAuthProblemException $r2;
        net.oauth.client.OAuthResponseMessage r0;

        r0 := @this: net.oauth.client.OAuthResponseMessage;

        r1 := @parameter0: java.lang.String[];

     label1:
        specialinvoke r0.<net.oauth.OAuthMessage: void requireParameters(java.lang.String[])>(r1);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<net.oauth.OAuthProblemException: java.util.Map getParameters()>();

        $r4 = virtualinvoke r0.<net.oauth.client.OAuthResponseMessage: java.util.Map getDump()>();

        interfaceinvoke $r3.<java.util.Map: void putAll(java.util.Map)>($r4);

        throw $r2;

     label4:
        return;

        catch net.oauth.OAuthProblemException from label1 to label2 with label3;
    }

    public net.oauth.OAuthProblemException toOAuthProblemException() throws java.io.IOException
    {
        java.io.IOException $r2, $r4;
        net.oauth.OAuthProblemException $r0;
        java.lang.IllegalArgumentException $r3;
        java.util.Map $r5, $r6;
        net.oauth.client.OAuthResponseMessage r1;
        java.io.InputStream $r7;

        r1 := @this: net.oauth.client.OAuthResponseMessage;

        $r0 = new net.oauth.OAuthProblemException;

        specialinvoke $r0.<net.oauth.OAuthProblemException: void <init>()>();

     label1:
        virtualinvoke r1.<net.oauth.client.OAuthResponseMessage: java.util.List getParameters()>();

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        goto label5;

     label4:
        $r3 := @caughtexception;

     label5:
        $r5 = virtualinvoke $r0.<net.oauth.OAuthProblemException: java.util.Map getParameters()>();

        $r6 = virtualinvoke r1.<net.oauth.client.OAuthResponseMessage: java.util.Map getDump()>();

        interfaceinvoke $r5.<java.util.Map: void putAll(java.util.Map)>($r6);

     label6:
        $r7 = virtualinvoke r1.<net.oauth.client.OAuthResponseMessage: java.io.InputStream getBodyAsStream()>();

        if $r7 == null goto label7;

        virtualinvoke $r7.<java.io.InputStream: void close()>();

     label7:
        goto label9;

     label8:
        $r2 := @caughtexception;

     label9:
        return $r0;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.IllegalArgumentException from label1 to label2 with label4;
        catch java.io.IOException from label6 to label7 with label8;
    }

    protected void completeParameters() throws java.io.IOException
    {
        java.util.List $r3;
        java.lang.String $r1, $r2;
        net.oauth.client.OAuthResponseMessage r0;

        r0 := @this: net.oauth.client.OAuthResponseMessage;

        specialinvoke r0.<net.oauth.OAuthMessage: void completeParameters()>();

        $r1 = virtualinvoke r0.<net.oauth.client.OAuthResponseMessage: java.lang.String readBodyAsString()>();

        if $r1 == null goto label1;

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        $r3 = staticinvoke <net.oauth.OAuth: java.util.List decodeForm(java.lang.String)>($r2);

        virtualinvoke r0.<net.oauth.client.OAuthResponseMessage: void addParameters(java.util.Collection)>($r3);

     label1:
        return;
    }

    protected void dump(java.util.Map) throws java.io.IOException
    {
        net.oauth.http.HttpResponseMessage $r2;
        net.oauth.client.OAuthResponseMessage r0;
        java.util.Map r1;

        r0 := @this: net.oauth.client.OAuthResponseMessage;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<net.oauth.OAuthMessage: void dump(java.util.Map)>(r1);

        $r2 = r0.<net.oauth.client.OAuthResponseMessage: net.oauth.http.HttpResponseMessage http>;

        virtualinvoke $r2.<net.oauth.http.HttpResponseMessage: void dump(java.util.Map)>(r1);

        return;
    }
}
