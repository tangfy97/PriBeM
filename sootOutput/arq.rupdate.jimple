public class arq.rupdate extends arq.cmdline.CmdARQ
{
    static final arq.cmdline.ArgDecl updateArg;
    protected arq.cmdline.ModRemote modRemote;
    java.util.List requestFiles;

    public static void main(java.lang.String[])
    {
        arq.rupdate $r0;
        java.lang.String[] r1;

        r1 := @parameter0: java.lang.String[];

        $r0 = new arq.rupdate;

        specialinvoke $r0.<arq.rupdate: void <init>(java.lang.String[])>(r1);

        virtualinvoke $r0.<arq.rupdate: void mainRun()>();

        return;
    }

    protected void <init>(java.lang.String[])
    {
        arq.rupdate r0;
        arq.cmdline.ModRemote $r2, $r4;
        arq.cmdline.ArgDecl $r3;
        java.lang.String[] r1;

        r0 := @this: arq.rupdate;

        r1 := @parameter0: java.lang.String[];

        specialinvoke r0.<arq.cmdline.CmdARQ: void <init>(java.lang.String[])>(r1);

        $r2 = new arq.cmdline.ModRemote;

        specialinvoke $r2.<arq.cmdline.ModRemote: void <init>()>();

        r0.<arq.rupdate: arq.cmdline.ModRemote modRemote> = $r2;

        r0.<arq.rupdate: java.util.List requestFiles> = null;

        $r3 = <arq.rupdate: arq.cmdline.ArgDecl updateArg>;

        specialinvoke r0.<arq.cmdline.CmdARQ: void add(arq.cmdline.ArgDecl,java.lang.String,java.lang.String)>($r3, "--update=FILE", "Update commands to execute");

        $r4 = r0.<arq.rupdate: arq.cmdline.ModRemote modRemote>;

        specialinvoke r0.<arq.cmdline.CmdARQ: void addModule(arq.cmdline.ArgModuleGeneral)>($r4);

        return;
    }

    protected void processModulesAndArgs()
    {
        arq.rupdate r0;
        arq.cmdline.ArgDecl $r1;
        java.util.List $r2;

        r0 := @this: arq.rupdate;

        $r1 = <arq.rupdate: arq.cmdline.ArgDecl updateArg>;

        $r2 = virtualinvoke r0.<arq.rupdate: java.util.List getValues(arq.cmdline.ArgDecl)>($r1);

        r0.<arq.rupdate: java.util.List requestFiles> = $r2;

        specialinvoke r0.<arq.cmdline.CmdARQ: void processModulesAndArgs()>();

        return;
    }

    protected java.lang.String getSummary()
    {
        arq.rupdate r1;
        java.lang.StringBuilder $r0, $r3, $r4;
        java.lang.String $r2, $r5;

        r1 := @this: arq.rupdate;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<arq.rupdate: java.lang.String getCommandName()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" --service=URL --update=<request file>");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    protected void exec()
    {
        com.hp.hpl.jena.update.UpdateRequest $r11, $r13;
        java.lang.String $r2, $r4, $r10, r15, r16;
        boolean $z0, $z1;
        arq.rupdate r0;
        arq.cmdline.ModRemote $r1, $r3;
        java.util.Iterator $r6, $r8;
        java.util.List $r5, $r7;
        arq.cmd.CmdException $r14;
        java.lang.Object $r9, $r12;

        r0 := @this: arq.rupdate;

        $r1 = r0.<arq.rupdate: arq.cmdline.ModRemote modRemote>;

        $r2 = virtualinvoke $r1.<arq.cmdline.ModRemote: java.lang.String getServiceURL()>();

        if $r2 != null goto label1;

        $r14 = new arq.cmd.CmdException;

        specialinvoke $r14.<arq.cmd.CmdException: void <init>(java.lang.String)>("No endpoint given");

        throw $r14;

     label1:
        $r3 = r0.<arq.rupdate: arq.cmdline.ModRemote modRemote>;

        $r4 = virtualinvoke $r3.<arq.cmdline.ModRemote: java.lang.String getServiceURL()>();

        $r5 = r0.<arq.rupdate: java.util.List requestFiles>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r12 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r15 = (java.lang.String) $r12;

        $r13 = staticinvoke <com.hp.hpl.jena.update.UpdateFactory: com.hp.hpl.jena.update.UpdateRequest read(java.lang.String)>(r15);

        specialinvoke r0.<arq.rupdate: void exec(java.lang.String,com.hp.hpl.jena.update.UpdateRequest)>($r4, $r13);

        goto label2;

     label3:
        $r7 = specialinvoke r0.<arq.cmdline.CmdARQ: java.util.List getPositional()>();

        $r8 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r16 = (java.lang.String) $r9;

        $r10 = virtualinvoke r0.<arq.rupdate: java.lang.String indirect(java.lang.String)>(r16);

        $r11 = staticinvoke <com.hp.hpl.jena.update.UpdateFactory: com.hp.hpl.jena.update.UpdateRequest create(java.lang.String)>($r10);

        specialinvoke r0.<arq.rupdate: void exec(java.lang.String,com.hp.hpl.jena.update.UpdateRequest)>($r4, $r11);

        goto label4;

     label5:
        return;
    }

    private void exec(java.lang.String, com.hp.hpl.jena.update.UpdateRequest)
    {
        arq.rupdate r3;
        java.lang.String r1;
        com.hp.hpl.jena.update.UpdateProcessor $r2;
        com.hp.hpl.jena.update.UpdateRequest r0;

        r3 := @this: arq.rupdate;

        r1 := @parameter0: java.lang.String;

        r0 := @parameter1: com.hp.hpl.jena.update.UpdateRequest;

        $r2 = staticinvoke <com.hp.hpl.jena.update.UpdateExecutionFactory: com.hp.hpl.jena.update.UpdateProcessor createRemote(com.hp.hpl.jena.update.UpdateRequest,java.lang.String)>(r0, r1);

        interfaceinvoke $r2.<com.hp.hpl.jena.update.UpdateProcessor: void execute()>();

        return;
    }

    static void <clinit>()
    {
        arq.cmdline.ArgDecl $r0;
        java.lang.String[] $r1;

        $r0 = new arq.cmdline.ArgDecl;

        $r1 = newarray (java.lang.String)[1];

        $r1[0] = "file";

        specialinvoke $r0.<arq.cmdline.ArgDecl: void <init>(boolean,java.lang.String,java.lang.String[])>(1, "update", $r1);

        <arq.rupdate: arq.cmdline.ArgDecl updateArg> = $r0;

        return;
    }
}
