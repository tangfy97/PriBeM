public class org.apache.batik.ext.awt.image.codec.jpeg.JPEGImageWriter extends java.lang.Object implements org.apache.batik.ext.awt.image.spi.ImageWriter
{

    public void <init>()
    {
        org.apache.batik.ext.awt.image.codec.jpeg.JPEGImageWriter r0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.jpeg.JPEGImageWriter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void writeImage(java.awt.image.RenderedImage, java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r2;
        org.apache.batik.ext.awt.image.codec.jpeg.JPEGImageWriter r0;
        java.awt.image.RenderedImage r1;

        r0 := @this: org.apache.batik.ext.awt.image.codec.jpeg.JPEGImageWriter;

        r1 := @parameter0: java.awt.image.RenderedImage;

        r2 := @parameter1: java.io.OutputStream;

        virtualinvoke r0.<org.apache.batik.ext.awt.image.codec.jpeg.JPEGImageWriter: void writeImage(java.awt.image.RenderedImage,java.io.OutputStream,org.apache.batik.ext.awt.image.spi.ImageWriterParams)>(r1, r2, null);

        return;
    }

    public void writeImage(java.awt.image.RenderedImage, java.io.OutputStream, org.apache.batik.ext.awt.image.spi.ImageWriterParams) throws java.io.IOException
    {
        java.io.OutputStream r1;
        java.lang.Float $r5, $r6;
        org.apache.batik.ext.awt.image.codec.jpeg.JPEGImageWriter r8;
        java.awt.image.BufferedImage r9;
        java.awt.image.RenderedImage r0;
        int $i0, $i1;
        org.apache.batik.ext.awt.image.spi.ImageWriterParams r3;
        float $f0;
        java.lang.Boolean $r7;
        com.sun.image.codec.jpeg.JPEGImageEncoder $r2;
        com.sun.image.codec.jpeg.JPEGEncodeParam $r4;
        boolean $z0, $z1;

        r8 := @this: org.apache.batik.ext.awt.image.codec.jpeg.JPEGImageWriter;

        r0 := @parameter0: java.awt.image.RenderedImage;

        r1 := @parameter1: java.io.OutputStream;

        r3 := @parameter2: org.apache.batik.ext.awt.image.spi.ImageWriterParams;

        $z0 = r0 instanceof java.awt.image.BufferedImage;

        if $z0 == 0 goto label1;

        r9 = (java.awt.image.BufferedImage) r0;

        goto label2;

     label1:
        $i0 = interfaceinvoke r0.<java.awt.image.RenderedImage: int getWidth()>();

        $i1 = interfaceinvoke r0.<java.awt.image.RenderedImage: int getHeight()>();

        r9 = staticinvoke <org.apache.batik.ext.awt.image.GraphicsUtil: java.awt.image.BufferedImage makeLinearBufferedImage(int,int,boolean)>($i0, $i1, 0);

     label2:
        $r2 = staticinvoke <com.sun.image.codec.jpeg.JPEGCodec: com.sun.image.codec.jpeg.JPEGImageEncoder createJPEGEncoder(java.io.OutputStream)>(r1);

        if r3 == null goto label4;

        $r4 = interfaceinvoke $r2.<com.sun.image.codec.jpeg.JPEGImageEncoder: com.sun.image.codec.jpeg.JPEGEncodeParam getDefaultJPEGEncodeParam(java.awt.image.BufferedImage)>(r9);

        $r5 = virtualinvoke r3.<org.apache.batik.ext.awt.image.spi.ImageWriterParams: java.lang.Float getJPEGQuality()>();

        if $r5 == null goto label3;

        $r6 = virtualinvoke r3.<org.apache.batik.ext.awt.image.spi.ImageWriterParams: java.lang.Float getJPEGQuality()>();

        $f0 = virtualinvoke $r6.<java.lang.Float: float floatValue()>();

        $r7 = virtualinvoke r3.<org.apache.batik.ext.awt.image.spi.ImageWriterParams: java.lang.Boolean getJPEGForceBaseline()>();

        $z1 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();

        interfaceinvoke $r4.<com.sun.image.codec.jpeg.JPEGEncodeParam: void setQuality(float,boolean)>($f0, $z1);

     label3:
        interfaceinvoke $r2.<com.sun.image.codec.jpeg.JPEGImageEncoder: void encode(java.awt.image.BufferedImage,com.sun.image.codec.jpeg.JPEGEncodeParam)>(r9, $r4);

        goto label5;

     label4:
        interfaceinvoke $r2.<com.sun.image.codec.jpeg.JPEGImageEncoder: void encode(java.awt.image.BufferedImage)>(r9);

     label5:
        return;
    }

    public java.lang.String getMIMEType()
    {
        org.apache.batik.ext.awt.image.codec.jpeg.JPEGImageWriter r0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.jpeg.JPEGImageWriter;

        return "image/jpeg";
    }
}
