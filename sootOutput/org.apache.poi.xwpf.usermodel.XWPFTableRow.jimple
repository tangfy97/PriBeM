public class org.apache.poi.xwpf.usermodel.XWPFTableRow extends java.lang.Object
{
    private org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow ctRow;
    private org.apache.poi.xwpf.usermodel.XWPFTable table;
    private java.util.List tableCells;

    public void <init>(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow, org.apache.poi.xwpf.usermodel.XWPFTable)
    {
        org.apache.poi.xwpf.usermodel.XWPFTableRow r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow r2;
        org.apache.poi.xwpf.usermodel.XWPFTable r1;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTableRow;

        r2 := @parameter0: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow;

        r1 := @parameter1: org.apache.poi.xwpf.usermodel.XWPFTable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.poi.xwpf.usermodel.XWPFTableRow: org.apache.poi.xwpf.usermodel.XWPFTable table> = r1;

        r0.<org.apache.poi.xwpf.usermodel.XWPFTableRow: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow ctRow> = r2;

        virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFTableRow: java.util.List getTableCells()>();

        return;
    }

    public org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow getCtRow()
    {
        org.apache.poi.xwpf.usermodel.XWPFTableRow r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow $r1;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTableRow;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableRow: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow ctRow>;

        return $r1;
    }

    public org.apache.poi.xwpf.usermodel.XWPFTableCell createCell()
    {
        org.apache.poi.xwpf.usermodel.XWPFTableRow r1;
        java.util.List $r6;
        org.apache.poi.xwpf.usermodel.IBody $r5;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow $r2;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc $r3;
        org.apache.poi.xwpf.usermodel.XWPFTableCell $r0;
        org.apache.poi.xwpf.usermodel.XWPFTable $r4;

        r1 := @this: org.apache.poi.xwpf.usermodel.XWPFTableRow;

        $r0 = new org.apache.poi.xwpf.usermodel.XWPFTableCell;

        $r2 = r1.<org.apache.poi.xwpf.usermodel.XWPFTableRow: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow ctRow>;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc addNewTc()>();

        $r4 = r1.<org.apache.poi.xwpf.usermodel.XWPFTableRow: org.apache.poi.xwpf.usermodel.XWPFTable table>;

        $r5 = virtualinvoke $r4.<org.apache.poi.xwpf.usermodel.XWPFTable: org.apache.poi.xwpf.usermodel.IBody getBody()>();

        specialinvoke $r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: void <init>(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc,org.apache.poi.xwpf.usermodel.XWPFTableRow,org.apache.poi.xwpf.usermodel.IBody)>($r3, r1, $r5);

        $r6 = r1.<org.apache.poi.xwpf.usermodel.XWPFTableRow: java.util.List tableCells>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r0);

        return $r0;
    }

    public org.apache.poi.xwpf.usermodel.XWPFTableCell getCell(int)
    {
        org.apache.poi.xwpf.usermodel.XWPFTableRow r0;
        java.util.List $r2;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow $r1;
        int i0, $i1;
        java.lang.Object $r3;
        org.apache.poi.xwpf.usermodel.XWPFTableCell $r4;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTableRow;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableRow: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow ctRow>;

        $i1 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow: int sizeOfTcArray()>();

        if i0 >= $i1 goto label1;

        $r2 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFTableRow: java.util.List getTableCells()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0);

        $r4 = (org.apache.poi.xwpf.usermodel.XWPFTableCell) $r3;

        return $r4;

     label1:
        return null;
    }

    public void removeCell(int)
    {
        org.apache.poi.xwpf.usermodel.XWPFTableRow r0;
        java.util.List $r2;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow $r1;
        int i0, $i1;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTableRow;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableRow: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow ctRow>;

        $i1 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow: int sizeOfTcArray()>();

        if i0 >= $i1 goto label1;

        $r2 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableRow: java.util.List tableCells>;

        interfaceinvoke $r2.<java.util.List: java.lang.Object remove(int)>(i0);

     label1:
        return;
    }

    public org.apache.poi.xwpf.usermodel.XWPFTableCell addNewTableCell()
    {
        org.apache.poi.xwpf.usermodel.XWPFTableRow r0;
        java.util.List $r6;
        org.apache.poi.xwpf.usermodel.IBody $r5;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow $r1;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc $r2;
        org.apache.poi.xwpf.usermodel.XWPFTableCell $r3;
        org.apache.poi.xwpf.usermodel.XWPFTable $r4;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTableRow;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableRow: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow ctRow>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc addNewTc()>();

        $r3 = new org.apache.poi.xwpf.usermodel.XWPFTableCell;

        $r4 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableRow: org.apache.poi.xwpf.usermodel.XWPFTable table>;

        $r5 = virtualinvoke $r4.<org.apache.poi.xwpf.usermodel.XWPFTable: org.apache.poi.xwpf.usermodel.IBody getBody()>();

        specialinvoke $r3.<org.apache.poi.xwpf.usermodel.XWPFTableCell: void <init>(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc,org.apache.poi.xwpf.usermodel.XWPFTableRow,org.apache.poi.xwpf.usermodel.IBody)>($r2, r0, $r5);

        $r6 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableRow: java.util.List tableCells>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r3);

        return $r3;
    }

    public void setHeight(int)
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTHeight $r7;
        org.apache.poi.xwpf.usermodel.XWPFTableRow r0;
        int $i0, i1;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTrPr $r1;
        java.math.BigInteger $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTableRow;

        i1 := @parameter0: int;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFTableRow: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTrPr getTrPr()>();

        $i0 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTrPr: int sizeOfTrHeightArray()>();

        if $i0 != 0 goto label1;

        $r7 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTrPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTHeight addNewTrHeight()>();

        goto label2;

     label1:
        $r7 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTrPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTHeight getTrHeightArray(int)>(0);

     label2:
        $r2 = new java.math.BigInteger;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.math.BigInteger: void <init>(java.lang.String)>($r6);

        interfaceinvoke $r7.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTHeight: void setVal(java.math.BigInteger)>($r2);

        return;
    }

    public int getHeight()
    {
        org.apache.poi.xwpf.usermodel.XWPFTableRow r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTHeight $r2;
        int $i0, $i1;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTrPr $r1;
        java.math.BigInteger $r3;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTableRow;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFTableRow: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTrPr getTrPr()>();

        $i0 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTrPr: int sizeOfTrHeightArray()>();

        if $i0 != 0 goto label1;

        $i1 = 0;

        goto label2;

     label1:
        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTrPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTHeight getTrHeightArray(int)>(0);

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTHeight: java.math.BigInteger getVal()>();

        $i1 = virtualinvoke $r3.<java.math.BigInteger: int intValue()>();

     label2:
        return $i1;
    }

    private org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTrPr getTrPr()
    {
        org.apache.poi.xwpf.usermodel.XWPFTableRow r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow $r1, $r2, $r3;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTrPr $r4;
        boolean $z0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTableRow;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableRow: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow ctRow>;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow: boolean isSetTrPr()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableRow: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow ctRow>;

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTrPr getTrPr()>();

        goto label2;

     label1:
        $r2 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableRow: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow ctRow>;

        $r4 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTrPr addNewTrPr()>();

     label2:
        return $r4;
    }

    public org.apache.poi.xwpf.usermodel.XWPFTable getTable()
    {
        org.apache.poi.xwpf.usermodel.XWPFTableRow r0;
        org.apache.poi.xwpf.usermodel.XWPFTable $r1;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTableRow;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableRow: org.apache.poi.xwpf.usermodel.XWPFTable table>;

        return $r1;
    }

    public java.util.List getTableICells()
    {
        org.apache.poi.xwpf.usermodel.IBody $r8, $r12;
        org.apache.xmlbeans.XmlCursor $r3;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc $r11;
        java.util.ArrayList $r0;
        org.apache.poi.xwpf.usermodel.XWPFTableRow r1;
        org.apache.poi.xwpf.usermodel.XWPFSDTCell $r5;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow $r2;
        org.apache.xmlbeans.XmlObject $r4;
        boolean $z0, $z1, $z2;
        org.apache.poi.xwpf.usermodel.XWPFTable $r6, $r10;
        org.apache.poi.xwpf.usermodel.XWPFTableCell $r9;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSdtCell $r7;

        r1 := @this: org.apache.poi.xwpf.usermodel.XWPFTableRow;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = r1.<org.apache.poi.xwpf.usermodel.XWPFTableRow: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow ctRow>;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow: org.apache.xmlbeans.XmlCursor newCursor()>();

        interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: void selectPath(java.lang.String)>("./*");

     label1:
        $z0 = interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: boolean toNextSelection()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlObject getObject()>();

        $z1 = $r4 instanceof org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc;

        if $z1 == 0 goto label2;

        $r9 = new org.apache.poi.xwpf.usermodel.XWPFTableCell;

        $r11 = (org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc) $r4;

        $r10 = r1.<org.apache.poi.xwpf.usermodel.XWPFTableRow: org.apache.poi.xwpf.usermodel.XWPFTable table>;

        $r12 = virtualinvoke $r10.<org.apache.poi.xwpf.usermodel.XWPFTable: org.apache.poi.xwpf.usermodel.IBody getBody()>();

        specialinvoke $r9.<org.apache.poi.xwpf.usermodel.XWPFTableCell: void <init>(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc,org.apache.poi.xwpf.usermodel.XWPFTableRow,org.apache.poi.xwpf.usermodel.IBody)>($r11, r1, $r12);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r9);

        goto label3;

     label2:
        $z2 = $r4 instanceof org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSdtCell;

        if $z2 == 0 goto label3;

        $r5 = new org.apache.poi.xwpf.usermodel.XWPFSDTCell;

        $r7 = (org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSdtCell) $r4;

        $r6 = r1.<org.apache.poi.xwpf.usermodel.XWPFTableRow: org.apache.poi.xwpf.usermodel.XWPFTable table>;

        $r8 = virtualinvoke $r6.<org.apache.poi.xwpf.usermodel.XWPFTable: org.apache.poi.xwpf.usermodel.IBody getBody()>();

        specialinvoke $r5.<org.apache.poi.xwpf.usermodel.XWPFSDTCell: void <init>(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSdtCell,org.apache.poi.xwpf.usermodel.XWPFTableRow,org.apache.poi.xwpf.usermodel.IBody)>($r7, r1, $r8);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r5);

     label3:
        goto label1;

     label4:
        return $r0;
    }

    public java.util.List getTableCells()
    {
        org.apache.poi.xwpf.usermodel.IBody $r11;
        java.util.Iterator $r6;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc r8;
        org.apache.poi.xwpf.usermodel.XWPFTableCell $r9;
        java.util.ArrayList $r3;
        org.apache.poi.xwpf.usermodel.XWPFTableRow r0;
        java.util.List $r1, $r2, $r5;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow $r4;
        java.lang.Object $r7;
        boolean $z0;
        org.apache.poi.xwpf.usermodel.XWPFTable $r10;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTableRow;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableRow: java.util.List tableCells>;

        if $r1 != null goto label3;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableRow: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow ctRow>;

        $r5 = interfaceinvoke $r4.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow: java.util.List getTcList()>();

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc) $r7;

        $r9 = new org.apache.poi.xwpf.usermodel.XWPFTableCell;

        $r10 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableRow: org.apache.poi.xwpf.usermodel.XWPFTable table>;

        $r11 = virtualinvoke $r10.<org.apache.poi.xwpf.usermodel.XWPFTable: org.apache.poi.xwpf.usermodel.IBody getBody()>();

        specialinvoke $r9.<org.apache.poi.xwpf.usermodel.XWPFTableCell: void <init>(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc,org.apache.poi.xwpf.usermodel.XWPFTableRow,org.apache.poi.xwpf.usermodel.IBody)>(r8, r0, $r11);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r9);

        goto label1;

     label2:
        r0.<org.apache.poi.xwpf.usermodel.XWPFTableRow: java.util.List tableCells> = $r3;

     label3:
        $r2 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableRow: java.util.List tableCells>;

        return $r2;
    }

    public org.apache.poi.xwpf.usermodel.XWPFTableCell getTableCell(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc)
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc $r5, r6;
        org.apache.poi.xwpf.usermodel.XWPFTableCell $r4, $r9;
        org.apache.poi.xwpf.usermodel.XWPFTableRow r0;
        java.util.List $r1, $r2, $r7;
        int $i0, i1;
        java.lang.Object $r3, $r8;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTableRow;

        r6 := @parameter0: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc;

        i1 = 0;

     label1:
        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableRow: java.util.List tableCells>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if i1 >= $i0 goto label3;

        $r2 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableRow: java.util.List tableCells>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i1);

        $r4 = (org.apache.poi.xwpf.usermodel.XWPFTableCell) $r3;

        $r5 = virtualinvoke $r4.<org.apache.poi.xwpf.usermodel.XWPFTableCell: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc getCTTc()>();

        if $r5 != r6 goto label2;

        $r7 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableRow: java.util.List tableCells>;

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i1);

        $r9 = (org.apache.poi.xwpf.usermodel.XWPFTableCell) $r8;

        return $r9;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return null;
    }

    public void setCantSplitRow(boolean)
    {
        org.apache.poi.xwpf.usermodel.XWPFTableRow r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum $r3;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTrPr $r1;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTOnOff $r2;
        boolean z0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTableRow;

        z0 := @parameter0: boolean;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFTableRow: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTrPr getTrPr()>();

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTrPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTOnOff addNewCantSplit()>();

        if z0 == 0 goto label1;

        $r3 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff: org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum ON>;

        goto label2;

     label1:
        $r3 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff: org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum OFF>;

     label2:
        interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTOnOff: void setVal(org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum)>($r3);

        return;
    }

    public boolean isCantSplitRow()
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum $r5, $r6;
        org.apache.poi.xwpf.usermodel.XWPFTableRow r0;
        java.util.List $r2;
        int $i0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTrPr $r1;
        java.lang.Object $r3;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTOnOff r4;
        boolean z0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTableRow;

        z0 = 0;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFTableRow: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTrPr getTrPr()>();

        $i0 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTrPr: int sizeOfCantSplitArray()>();

        if $i0 <= 0 goto label1;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTrPr: java.util.List getCantSplitList()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        r4 = (org.openxmlformats.schemas.wordprocessingml.x2006.main.CTOnOff) $r3;

        $r5 = interfaceinvoke r4.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTOnOff: org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum getVal()>();

        $r6 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff: org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum ON>;

        z0 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>($r6);

     label1:
        return z0;
    }

    public void setRepeatHeader(boolean)
    {
        org.apache.poi.xwpf.usermodel.XWPFTableRow r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum $r3;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTrPr $r1;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTOnOff $r2;
        boolean z0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTableRow;

        z0 := @parameter0: boolean;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFTableRow: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTrPr getTrPr()>();

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTrPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTOnOff addNewTblHeader()>();

        if z0 == 0 goto label1;

        $r3 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff: org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum ON>;

        goto label2;

     label1:
        $r3 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff: org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum OFF>;

     label2:
        interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTOnOff: void setVal(org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum)>($r3);

        return;
    }

    public boolean isRepeatHeader()
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum $r5, $r6;
        org.apache.poi.xwpf.usermodel.XWPFTableRow r0;
        java.util.List $r2;
        int $i0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTrPr $r1;
        java.lang.Object $r3;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTOnOff r4;
        boolean z0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTableRow;

        z0 = 0;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFTableRow: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTrPr getTrPr()>();

        $i0 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTrPr: int sizeOfTblHeaderArray()>();

        if $i0 <= 0 goto label1;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTrPr: java.util.List getTblHeaderList()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        r4 = (org.openxmlformats.schemas.wordprocessingml.x2006.main.CTOnOff) $r3;

        $r5 = interfaceinvoke r4.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTOnOff: org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum getVal()>();

        $r6 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff: org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum ON>;

        z0 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>($r6);

     label1:
        return z0;
    }
}
