public class org.jdesktop.swingx.action.BoundAction extends org.jdesktop.swingx.action.AbstractActionExt
{
    private static final java.util.logging.Logger LOG;
    private javax.swing.event.EventListenerList listeners;

    public void <init>()
    {
        org.jdesktop.swingx.action.BoundAction r0;

        r0 := @this: org.jdesktop.swingx.action.BoundAction;

        specialinvoke r0.<org.jdesktop.swingx.action.BoundAction: void <init>(java.lang.String)>("BoundAction");

        return;
    }

    public void <init>(java.lang.String)
    {
        org.jdesktop.swingx.action.BoundAction r0;
        java.lang.String r1;

        r0 := @this: org.jdesktop.swingx.action.BoundAction;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.jdesktop.swingx.action.AbstractActionExt: void <init>(java.lang.String)>(r1);

        return;
    }

    public void <init>(java.lang.String, java.lang.String)
    {
        org.jdesktop.swingx.action.BoundAction r0;
        java.lang.String r1, r2;

        r0 := @this: org.jdesktop.swingx.action.BoundAction;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.jdesktop.swingx.action.AbstractActionExt: void <init>(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    public void <init>(java.lang.String, javax.swing.Icon)
    {
        org.jdesktop.swingx.action.BoundAction r0;
        javax.swing.Icon r2;
        java.lang.String r1;

        r0 := @this: org.jdesktop.swingx.action.BoundAction;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: javax.swing.Icon;

        specialinvoke r0.<org.jdesktop.swingx.action.AbstractActionExt: void <init>(java.lang.String,javax.swing.Icon)>(r1, r2);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, javax.swing.Icon)
    {
        org.jdesktop.swingx.action.BoundAction r0;
        javax.swing.Icon r3;
        java.lang.String r1, r2;

        r0 := @this: org.jdesktop.swingx.action.BoundAction;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: javax.swing.Icon;

        specialinvoke r0.<org.jdesktop.swingx.action.AbstractActionExt: void <init>(java.lang.String,java.lang.String,javax.swing.Icon)>(r1, r2, r3);

        return;
    }

    public void setCallback(java.lang.String)
    {
        java.lang.String[] $r1;
        int $i0;
        java.lang.String r0, $r2, $r6, $r13, $r15;
        java.util.logging.Logger $r9;
        java.lang.Exception $r7;
        org.jdesktop.swingx.action.BoundAction r5;
        java.lang.Class $r3;
        java.lang.Object $r4;
        java.lang.StringBuilder $r8, $r10, $r11, $r12, $r14;

        r5 := @this: org.jdesktop.swingx.action.BoundAction;

        r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>("#", 2);

        $i0 = lengthof $r1;

        if $i0 != 2 goto label4;

     label1:
        $r2 = $r1[0];

        $r3 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>();

        $r6 = $r1[1];

        virtualinvoke r5.<org.jdesktop.swingx.action.BoundAction: void registerCallback(java.lang.Object,java.lang.String)>($r4, $r6);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        $r9 = <org.jdesktop.swingx.action.BoundAction: java.util.logging.Logger LOG>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ERROR: setCallback(");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") - ");

        $r13 = virtualinvoke $r7.<java.lang.Exception: java.lang.String getMessage()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<java.util.logging.Logger: void fine(java.lang.String)>($r15);

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void registerCallback(java.lang.Object, java.lang.String)
    {
        java.awt.event.ActionListener $r4;
        org.jdesktop.swingx.action.BoundAction$BooleanInvocationHandler $r5;
        org.jdesktop.swingx.action.BoundAction r0;
        java.lang.Object r1, $r3;
        java.lang.String r2;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.action.BoundAction;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.action.BoundAction: boolean isStateAction()>();

        if $z0 == 0 goto label1;

        $r5 = new org.jdesktop.swingx.action.BoundAction$BooleanInvocationHandler;

        specialinvoke $r5.<org.jdesktop.swingx.action.BoundAction$BooleanInvocationHandler: void <init>(org.jdesktop.swingx.action.BoundAction,java.lang.Object,java.lang.String)>(r0, r1, r2);

        virtualinvoke r0.<org.jdesktop.swingx.action.BoundAction: void addItemListener(java.awt.event.ItemListener)>($r5);

        goto label2;

     label1:
        $r3 = staticinvoke <java.beans.EventHandler: java.lang.Object create(java.lang.Class,java.lang.Object,java.lang.String)>(class "Ljava/awt/event/ActionListener;", r1, r2);

        $r4 = (java.awt.event.ActionListener) $r3;

        virtualinvoke r0.<org.jdesktop.swingx.action.BoundAction: void addActionListener(java.awt.event.ActionListener)>($r4);

     label2:
        return;
    }

    private void addListener(java.lang.Class, java.util.EventListener)
    {
        java.util.EventListener r3;
        javax.swing.event.EventListenerList $r1, $r4, $r5;
        org.jdesktop.swingx.action.BoundAction r0;
        java.lang.Class r2;

        r0 := @this: org.jdesktop.swingx.action.BoundAction;

        r2 := @parameter0: java.lang.Class;

        r3 := @parameter1: java.util.EventListener;

        $r1 = r0.<org.jdesktop.swingx.action.BoundAction: javax.swing.event.EventListenerList listeners>;

        if $r1 != null goto label1;

        $r5 = new javax.swing.event.EventListenerList;

        specialinvoke $r5.<javax.swing.event.EventListenerList: void <init>()>();

        r0.<org.jdesktop.swingx.action.BoundAction: javax.swing.event.EventListenerList listeners> = $r5;

     label1:
        $r4 = r0.<org.jdesktop.swingx.action.BoundAction: javax.swing.event.EventListenerList listeners>;

        virtualinvoke $r4.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(r2, r3);

        return;
    }

    private void removeListener(java.lang.Class, java.util.EventListener)
    {
        java.util.EventListener r3;
        javax.swing.event.EventListenerList $r1, $r4;
        org.jdesktop.swingx.action.BoundAction r0;
        java.lang.Class r2;

        r0 := @this: org.jdesktop.swingx.action.BoundAction;

        r2 := @parameter0: java.lang.Class;

        r3 := @parameter1: java.util.EventListener;

        $r1 = r0.<org.jdesktop.swingx.action.BoundAction: javax.swing.event.EventListenerList listeners>;

        if $r1 == null goto label1;

        $r4 = r0.<org.jdesktop.swingx.action.BoundAction: javax.swing.event.EventListenerList listeners>;

        virtualinvoke $r4.<javax.swing.event.EventListenerList: void remove(java.lang.Class,java.util.EventListener)>(r2, r3);

     label1:
        return;
    }

    private java.util.EventListener[] getListeners(java.lang.Class)
    {
        java.util.EventListener[] $r4;
        javax.swing.event.EventListenerList $r1, $r3;
        org.jdesktop.swingx.action.BoundAction r0;
        java.lang.Class r2;

        r0 := @this: org.jdesktop.swingx.action.BoundAction;

        r2 := @parameter0: java.lang.Class;

        $r1 = r0.<org.jdesktop.swingx.action.BoundAction: javax.swing.event.EventListenerList listeners>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r3 = r0.<org.jdesktop.swingx.action.BoundAction: javax.swing.event.EventListenerList listeners>;

        $r4 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.util.EventListener[] getListeners(java.lang.Class)>(r2);

        return $r4;
    }

    public void addActionListener(java.awt.event.ActionListener)
    {
        org.jdesktop.swingx.action.BoundAction r0;
        java.awt.event.ActionListener r1;

        r0 := @this: org.jdesktop.swingx.action.BoundAction;

        r1 := @parameter0: java.awt.event.ActionListener;

        specialinvoke r0.<org.jdesktop.swingx.action.BoundAction: void addListener(java.lang.Class,java.util.EventListener)>(class "Ljava/awt/event/ActionListener;", r1);

        return;
    }

    public void removeActionListener(java.awt.event.ActionListener)
    {
        org.jdesktop.swingx.action.BoundAction r0;
        java.awt.event.ActionListener r1;

        r0 := @this: org.jdesktop.swingx.action.BoundAction;

        r1 := @parameter0: java.awt.event.ActionListener;

        specialinvoke r0.<org.jdesktop.swingx.action.BoundAction: void removeListener(java.lang.Class,java.util.EventListener)>(class "Ljava/awt/event/ActionListener;", r1);

        return;
    }

    public java.awt.event.ActionListener[] getActionListeners()
    {
        java.util.EventListener[] $r1;
        org.jdesktop.swingx.action.BoundAction r0;
        java.awt.event.ActionListener[] $r2, $r3;

        r0 := @this: org.jdesktop.swingx.action.BoundAction;

        $r1 = specialinvoke r0.<org.jdesktop.swingx.action.BoundAction: java.util.EventListener[] getListeners(java.lang.Class)>(class "Ljava/awt/event/ActionListener;");

        $r2 = (java.awt.event.ActionListener[]) $r1;

        $r3 = (java.awt.event.ActionListener[]) $r2;

        return $r3;
    }

    public void addItemListener(java.awt.event.ItemListener)
    {
        org.jdesktop.swingx.action.BoundAction r0;
        java.awt.event.ItemListener r1;

        r0 := @this: org.jdesktop.swingx.action.BoundAction;

        r1 := @parameter0: java.awt.event.ItemListener;

        specialinvoke r0.<org.jdesktop.swingx.action.BoundAction: void addListener(java.lang.Class,java.util.EventListener)>(class "Ljava/awt/event/ItemListener;", r1);

        return;
    }

    public void removeItemListener(java.awt.event.ItemListener)
    {
        org.jdesktop.swingx.action.BoundAction r0;
        java.awt.event.ItemListener r1;

        r0 := @this: org.jdesktop.swingx.action.BoundAction;

        r1 := @parameter0: java.awt.event.ItemListener;

        specialinvoke r0.<org.jdesktop.swingx.action.BoundAction: void removeListener(java.lang.Class,java.util.EventListener)>(class "Ljava/awt/event/ItemListener;", r1);

        return;
    }

    public java.awt.event.ItemListener[] getItemListeners()
    {
        java.util.EventListener[] $r1;
        java.awt.event.ItemListener[] $r2, $r3;
        org.jdesktop.swingx.action.BoundAction r0;

        r0 := @this: org.jdesktop.swingx.action.BoundAction;

        $r1 = specialinvoke r0.<org.jdesktop.swingx.action.BoundAction: java.util.EventListener[] getListeners(java.lang.Class)>(class "Ljava/awt/event/ItemListener;");

        $r2 = (java.awt.event.ItemListener[]) $r1;

        $r3 = (java.awt.event.ItemListener[]) $r2;

        return $r3;
    }

    public void actionPerformed(java.awt.event.ActionEvent)
    {
        java.awt.event.ActionListener $r3;
        int $i0, i1;
        org.jdesktop.swingx.action.BoundAction r0;
        java.awt.event.ActionListener[] $r1;
        java.awt.event.ActionEvent r2;

        r0 := @this: org.jdesktop.swingx.action.BoundAction;

        r2 := @parameter0: java.awt.event.ActionEvent;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.action.BoundAction: java.awt.event.ActionListener[] getActionListeners()>();

        if $r1 == null goto label2;

        i1 = 0;

     label1:
        $i0 = lengthof $r1;

        if i1 >= $i0 goto label2;

        $r3 = $r1[i1];

        interfaceinvoke $r3.<java.awt.event.ActionListener: void actionPerformed(java.awt.event.ActionEvent)>(r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void itemStateChanged(java.awt.event.ItemEvent)
    {
        java.awt.event.ItemEvent r1;
        java.awt.event.ItemListener $r3;
        java.awt.event.ItemListener[] $r2;
        int $i0, $i1, i2;
        org.jdesktop.swingx.action.BoundAction r0;
        boolean $z0, $z2, $z3;

        r0 := @this: org.jdesktop.swingx.action.BoundAction;

        r1 := @parameter0: java.awt.event.ItemEvent;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.action.BoundAction: boolean isSelected()>();

        $i0 = virtualinvoke r1.<java.awt.event.ItemEvent: int getStateChange()>();

        if $i0 != 1 goto label1;

        $z3 = 1;

        $z2 = 1;

        goto label2;

     label1:
        $z3 = 0;

        $z2 = 0;

     label2:
        if $z0 == $z2 goto label4;

        virtualinvoke r0.<org.jdesktop.swingx.action.BoundAction: void setSelected(boolean)>($z3);

        $r2 = virtualinvoke r0.<org.jdesktop.swingx.action.BoundAction: java.awt.event.ItemListener[] getItemListeners()>();

        if $r2 == null goto label4;

        i2 = 0;

     label3:
        $i1 = lengthof $r2;

        if i2 >= $i1 goto label4;

        $r3 = $r2[i2];

        interfaceinvoke $r3.<java.awt.event.ItemListener: void itemStateChanged(java.awt.event.ItemEvent)>(r1);

        i2 = i2 + 1;

        goto label3;

     label4:
        return;
    }

    static java.util.logging.Logger access$000()
    {
        java.util.logging.Logger $r0;

        $r0 = <org.jdesktop.swingx.action.BoundAction: java.util.logging.Logger LOG>;

        return $r0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;

        $r0 = class "Lorg/jdesktop/swingx/action/BoundAction;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <org.jdesktop.swingx.action.BoundAction: java.util.logging.Logger LOG> = $r2;

        return;
    }
}
