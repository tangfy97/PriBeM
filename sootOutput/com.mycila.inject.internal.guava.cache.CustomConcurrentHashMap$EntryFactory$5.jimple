final enum class com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$EntryFactory$5 extends com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$EntryFactory
{

    void <init>(java.lang.String, int)
    {
        int i0;
        java.lang.String r1;
        com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$EntryFactory$5 r0;

        r0 := @this: com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$EntryFactory$5;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$EntryFactory: void <init>(java.lang.String,int,com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$1)>(r1, i0, null);

        return;
    }

    com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$ReferenceEntry newEntry(com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$Segment, java.lang.Object, int, com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$ReferenceEntry)
    {
        com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$Segment r1;
        com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$SoftEntry $r0;
        com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$EntryFactory$5 r5;
        int i0;
        com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$ReferenceEntry r3;
        java.lang.Object r2;
        java.lang.ref.ReferenceQueue $r4;

        r5 := @this: com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$EntryFactory$5;

        r1 := @parameter0: com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$Segment;

        r2 := @parameter1: java.lang.Object;

        i0 := @parameter2: int;

        r3 := @parameter3: com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$ReferenceEntry;

        $r0 = new com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$SoftEntry;

        $r4 = r1.<com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$Segment: java.lang.ref.ReferenceQueue keyReferenceQueue>;

        specialinvoke $r0.<com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$SoftEntry: void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,int,com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$ReferenceEntry)>($r4, r2, i0, r3);

        return $r0;
    }
}
