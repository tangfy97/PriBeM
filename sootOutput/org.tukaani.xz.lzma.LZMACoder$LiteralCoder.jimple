abstract class org.tukaani.xz.lzma.LZMACoder$LiteralCoder extends java.lang.Object
{
    private final int lc;
    private final int literalPosMask;
    private final org.tukaani.xz.lzma.LZMACoder this$0;

    void <init>(org.tukaani.xz.lzma.LZMACoder, int, int)
    {
        org.tukaani.xz.lzma.LZMACoder$LiteralCoder r0;
        org.tukaani.xz.lzma.LZMACoder r1;
        int i0, i1, $i2, $i3;

        r0 := @this: org.tukaani.xz.lzma.LZMACoder$LiteralCoder;

        r1 := @parameter0: org.tukaani.xz.lzma.LZMACoder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r0.<org.tukaani.xz.lzma.LZMACoder$LiteralCoder: org.tukaani.xz.lzma.LZMACoder this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.tukaani.xz.lzma.LZMACoder$LiteralCoder: int lc> = i0;

        $i2 = 1 << i1;

        $i3 = $i2 - 1;

        r0.<org.tukaani.xz.lzma.LZMACoder$LiteralCoder: int literalPosMask> = $i3;

        return;
    }

    final int getSubcoderIndex(int, int)
    {
        org.tukaani.xz.lzma.LZMACoder$LiteralCoder r0;
        int i0, $i1, $i2, i3, i4, $i5, $i6, $i7, i8, $i9;

        r0 := @this: org.tukaani.xz.lzma.LZMACoder$LiteralCoder;

        i0 := @parameter0: int;

        i4 := @parameter1: int;

        $i1 = r0.<org.tukaani.xz.lzma.LZMACoder$LiteralCoder: int lc>;

        $i2 = 8 - $i1;

        i3 = i0 >> $i2;

        $i5 = r0.<org.tukaani.xz.lzma.LZMACoder$LiteralCoder: int literalPosMask>;

        $i7 = i4 & $i5;

        $i6 = r0.<org.tukaani.xz.lzma.LZMACoder$LiteralCoder: int lc>;

        i8 = $i7 << $i6;

        $i9 = i3 + i8;

        return $i9;
    }
}
