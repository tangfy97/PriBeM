public class org.bouncycastle.math.ec.ECFieldElement$Fp extends org.bouncycastle.math.ec.ECFieldElement
{
    java.math.BigInteger x;
    java.math.BigInteger q;

    public void <init>(java.math.BigInteger, java.math.BigInteger)
    {
        org.bouncycastle.math.ec.ECFieldElement$Fp r0;
        int $i0;
        java.math.BigInteger r1, r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: org.bouncycastle.math.ec.ECFieldElement$Fp;

        r2 := @parameter0: java.math.BigInteger;

        r1 := @parameter1: java.math.BigInteger;

        specialinvoke r0.<org.bouncycastle.math.ec.ECFieldElement: void <init>()>();

        r0.<org.bouncycastle.math.ec.ECFieldElement$Fp: java.math.BigInteger x> = r1;

        $i0 = virtualinvoke r1.<java.math.BigInteger: int compareTo(java.math.BigInteger)>(r2);

        if $i0 < 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("x value too large in field element");

        throw $r3;

     label1:
        r0.<org.bouncycastle.math.ec.ECFieldElement$Fp: java.math.BigInteger q> = r2;

        return;
    }

    public java.math.BigInteger toBigInteger()
    {
        java.math.BigInteger $r1;
        org.bouncycastle.math.ec.ECFieldElement$Fp r0;

        r0 := @this: org.bouncycastle.math.ec.ECFieldElement$Fp;

        $r1 = r0.<org.bouncycastle.math.ec.ECFieldElement$Fp: java.math.BigInteger x>;

        return $r1;
    }

    public java.lang.String getFieldName()
    {
        org.bouncycastle.math.ec.ECFieldElement$Fp r0;

        r0 := @this: org.bouncycastle.math.ec.ECFieldElement$Fp;

        return "Fp";
    }

    public int getFieldSize()
    {
        int $i0;
        java.math.BigInteger $r1;
        org.bouncycastle.math.ec.ECFieldElement$Fp r0;

        r0 := @this: org.bouncycastle.math.ec.ECFieldElement$Fp;

        $r1 = r0.<org.bouncycastle.math.ec.ECFieldElement$Fp: java.math.BigInteger q>;

        $i0 = virtualinvoke $r1.<java.math.BigInteger: int bitLength()>();

        return $i0;
    }

    public java.math.BigInteger getQ()
    {
        java.math.BigInteger $r1;
        org.bouncycastle.math.ec.ECFieldElement$Fp r0;

        r0 := @this: org.bouncycastle.math.ec.ECFieldElement$Fp;

        $r1 = r0.<org.bouncycastle.math.ec.ECFieldElement$Fp: java.math.BigInteger q>;

        return $r1;
    }

    public org.bouncycastle.math.ec.ECFieldElement add(org.bouncycastle.math.ec.ECFieldElement)
    {
        org.bouncycastle.math.ec.ECFieldElement r2;
        org.bouncycastle.math.ec.ECFieldElement$Fp $r0, r1;
        java.math.BigInteger $r3, $r4, $r5, $r6, $r7, $r8;

        r1 := @this: org.bouncycastle.math.ec.ECFieldElement$Fp;

        r2 := @parameter0: org.bouncycastle.math.ec.ECFieldElement;

        $r0 = new org.bouncycastle.math.ec.ECFieldElement$Fp;

        $r3 = r1.<org.bouncycastle.math.ec.ECFieldElement$Fp: java.math.BigInteger q>;

        $r4 = r1.<org.bouncycastle.math.ec.ECFieldElement$Fp: java.math.BigInteger x>;

        $r5 = virtualinvoke r2.<org.bouncycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        $r6 = virtualinvoke $r4.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r5);

        $r7 = r1.<org.bouncycastle.math.ec.ECFieldElement$Fp: java.math.BigInteger q>;

        $r8 = virtualinvoke $r6.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r7);

        specialinvoke $r0.<org.bouncycastle.math.ec.ECFieldElement$Fp: void <init>(java.math.BigInteger,java.math.BigInteger)>($r3, $r8);

        return $r0;
    }

    public org.bouncycastle.math.ec.ECFieldElement subtract(org.bouncycastle.math.ec.ECFieldElement)
    {
        org.bouncycastle.math.ec.ECFieldElement r2;
        org.bouncycastle.math.ec.ECFieldElement$Fp $r0, r1;
        java.math.BigInteger $r3, $r4, $r5, $r6, $r7, $r8;

        r1 := @this: org.bouncycastle.math.ec.ECFieldElement$Fp;

        r2 := @parameter0: org.bouncycastle.math.ec.ECFieldElement;

        $r0 = new org.bouncycastle.math.ec.ECFieldElement$Fp;

        $r3 = r1.<org.bouncycastle.math.ec.ECFieldElement$Fp: java.math.BigInteger q>;

        $r4 = r1.<org.bouncycastle.math.ec.ECFieldElement$Fp: java.math.BigInteger x>;

        $r5 = virtualinvoke r2.<org.bouncycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        $r6 = virtualinvoke $r4.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r5);

        $r7 = r1.<org.bouncycastle.math.ec.ECFieldElement$Fp: java.math.BigInteger q>;

        $r8 = virtualinvoke $r6.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r7);

        specialinvoke $r0.<org.bouncycastle.math.ec.ECFieldElement$Fp: void <init>(java.math.BigInteger,java.math.BigInteger)>($r3, $r8);

        return $r0;
    }

    public org.bouncycastle.math.ec.ECFieldElement multiply(org.bouncycastle.math.ec.ECFieldElement)
    {
        org.bouncycastle.math.ec.ECFieldElement r2;
        org.bouncycastle.math.ec.ECFieldElement$Fp $r0, r1;
        java.math.BigInteger $r3, $r4, $r5, $r6, $r7, $r8;

        r1 := @this: org.bouncycastle.math.ec.ECFieldElement$Fp;

        r2 := @parameter0: org.bouncycastle.math.ec.ECFieldElement;

        $r0 = new org.bouncycastle.math.ec.ECFieldElement$Fp;

        $r3 = r1.<org.bouncycastle.math.ec.ECFieldElement$Fp: java.math.BigInteger q>;

        $r4 = r1.<org.bouncycastle.math.ec.ECFieldElement$Fp: java.math.BigInteger x>;

        $r5 = virtualinvoke r2.<org.bouncycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        $r6 = virtualinvoke $r4.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r5);

        $r7 = r1.<org.bouncycastle.math.ec.ECFieldElement$Fp: java.math.BigInteger q>;

        $r8 = virtualinvoke $r6.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r7);

        specialinvoke $r0.<org.bouncycastle.math.ec.ECFieldElement$Fp: void <init>(java.math.BigInteger,java.math.BigInteger)>($r3, $r8);

        return $r0;
    }

    public org.bouncycastle.math.ec.ECFieldElement divide(org.bouncycastle.math.ec.ECFieldElement)
    {
        org.bouncycastle.math.ec.ECFieldElement r2;
        org.bouncycastle.math.ec.ECFieldElement$Fp $r0, r1;
        java.math.BigInteger $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        r1 := @this: org.bouncycastle.math.ec.ECFieldElement$Fp;

        r2 := @parameter0: org.bouncycastle.math.ec.ECFieldElement;

        $r0 = new org.bouncycastle.math.ec.ECFieldElement$Fp;

        $r3 = r1.<org.bouncycastle.math.ec.ECFieldElement$Fp: java.math.BigInteger q>;

        $r4 = r1.<org.bouncycastle.math.ec.ECFieldElement$Fp: java.math.BigInteger x>;

        $r5 = virtualinvoke r2.<org.bouncycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        $r6 = r1.<org.bouncycastle.math.ec.ECFieldElement$Fp: java.math.BigInteger q>;

        $r7 = virtualinvoke $r5.<java.math.BigInteger: java.math.BigInteger modInverse(java.math.BigInteger)>($r6);

        $r8 = virtualinvoke $r4.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r7);

        $r9 = r1.<org.bouncycastle.math.ec.ECFieldElement$Fp: java.math.BigInteger q>;

        $r10 = virtualinvoke $r8.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r9);

        specialinvoke $r0.<org.bouncycastle.math.ec.ECFieldElement$Fp: void <init>(java.math.BigInteger,java.math.BigInteger)>($r3, $r10);

        return $r0;
    }

    public org.bouncycastle.math.ec.ECFieldElement negate()
    {
        org.bouncycastle.math.ec.ECFieldElement$Fp $r0, r1;
        java.math.BigInteger $r2, $r3, $r4, $r5, $r6;

        r1 := @this: org.bouncycastle.math.ec.ECFieldElement$Fp;

        $r0 = new org.bouncycastle.math.ec.ECFieldElement$Fp;

        $r3 = r1.<org.bouncycastle.math.ec.ECFieldElement$Fp: java.math.BigInteger q>;

        $r2 = r1.<org.bouncycastle.math.ec.ECFieldElement$Fp: java.math.BigInteger x>;

        $r4 = virtualinvoke $r2.<java.math.BigInteger: java.math.BigInteger negate()>();

        $r5 = r1.<org.bouncycastle.math.ec.ECFieldElement$Fp: java.math.BigInteger q>;

        $r6 = virtualinvoke $r4.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r5);

        specialinvoke $r0.<org.bouncycastle.math.ec.ECFieldElement$Fp: void <init>(java.math.BigInteger,java.math.BigInteger)>($r3, $r6);

        return $r0;
    }

    public org.bouncycastle.math.ec.ECFieldElement square()
    {
        org.bouncycastle.math.ec.ECFieldElement$Fp $r0, r1;
        java.math.BigInteger $r2, $r3, $r4, $r5, $r6, $r7;

        r1 := @this: org.bouncycastle.math.ec.ECFieldElement$Fp;

        $r0 = new org.bouncycastle.math.ec.ECFieldElement$Fp;

        $r4 = r1.<org.bouncycastle.math.ec.ECFieldElement$Fp: java.math.BigInteger q>;

        $r3 = r1.<org.bouncycastle.math.ec.ECFieldElement$Fp: java.math.BigInteger x>;

        $r2 = r1.<org.bouncycastle.math.ec.ECFieldElement$Fp: java.math.BigInteger x>;

        $r5 = virtualinvoke $r3.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r2);

        $r6 = r1.<org.bouncycastle.math.ec.ECFieldElement$Fp: java.math.BigInteger q>;

        $r7 = virtualinvoke $r5.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r6);

        specialinvoke $r0.<org.bouncycastle.math.ec.ECFieldElement$Fp: void <init>(java.math.BigInteger,java.math.BigInteger)>($r4, $r7);

        return $r0;
    }

    public org.bouncycastle.math.ec.ECFieldElement invert()
    {
        org.bouncycastle.math.ec.ECFieldElement$Fp $r0, r1;
        java.math.BigInteger $r2, $r3, $r4, $r5;

        r1 := @this: org.bouncycastle.math.ec.ECFieldElement$Fp;

        $r0 = new org.bouncycastle.math.ec.ECFieldElement$Fp;

        $r4 = r1.<org.bouncycastle.math.ec.ECFieldElement$Fp: java.math.BigInteger q>;

        $r3 = r1.<org.bouncycastle.math.ec.ECFieldElement$Fp: java.math.BigInteger x>;

        $r2 = r1.<org.bouncycastle.math.ec.ECFieldElement$Fp: java.math.BigInteger q>;

        $r5 = virtualinvoke $r3.<java.math.BigInteger: java.math.BigInteger modInverse(java.math.BigInteger)>($r2);

        specialinvoke $r0.<org.bouncycastle.math.ec.ECFieldElement$Fp: void <init>(java.math.BigInteger,java.math.BigInteger)>($r4, $r5);

        return $r0;
    }

    public org.bouncycastle.math.ec.ECFieldElement sqrt()
    {
        java.util.Random $r19;
        org.bouncycastle.math.ec.ECFieldElement$Fp r0, $r32, $r35, $r46;
        java.math.BigInteger $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, r15, $r16, $r17, $r18, $r20, $r21, $r22, $r23, $r24, r26, $r27, $r28, $r29, $r30, $r31, $r33, $r34, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r47, $r48, $r49, r50;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        org.bouncycastle.math.ec.ECFieldElement $r44;
        int $i0, $i1;
        java.math.BigInteger[] $r25;
        java.lang.RuntimeException $r45;

        r0 := @this: org.bouncycastle.math.ec.ECFieldElement$Fp;

        $r1 = r0.<org.bouncycastle.math.ec.ECFieldElement$Fp: java.math.BigInteger q>;

        $z0 = virtualinvoke $r1.<java.math.BigInteger: boolean testBit(int)>(0);

        if $z0 != 0 goto label1;

        $r45 = new java.lang.RuntimeException;

        specialinvoke $r45.<java.lang.RuntimeException: void <init>(java.lang.String)>("not done yet");

        throw $r45;

     label1:
        $r2 = r0.<org.bouncycastle.math.ec.ECFieldElement$Fp: java.math.BigInteger q>;

        $z1 = virtualinvoke $r2.<java.math.BigInteger: boolean testBit(int)>(1);

        if $z1 == 0 goto label4;

        $r35 = new org.bouncycastle.math.ec.ECFieldElement$Fp;

        $r37 = r0.<org.bouncycastle.math.ec.ECFieldElement$Fp: java.math.BigInteger q>;

        $r38 = r0.<org.bouncycastle.math.ec.ECFieldElement$Fp: java.math.BigInteger x>;

        $r36 = r0.<org.bouncycastle.math.ec.ECFieldElement$Fp: java.math.BigInteger q>;

        $r39 = virtualinvoke $r36.<java.math.BigInteger: java.math.BigInteger shiftRight(int)>(2);

        $r40 = <org.bouncycastle.math.ec.ECConstants: java.math.BigInteger ONE>;

        $r41 = virtualinvoke $r39.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r40);

        $r42 = r0.<org.bouncycastle.math.ec.ECFieldElement$Fp: java.math.BigInteger q>;

        $r43 = virtualinvoke $r38.<java.math.BigInteger: java.math.BigInteger modPow(java.math.BigInteger,java.math.BigInteger)>($r41, $r42);

        specialinvoke $r35.<org.bouncycastle.math.ec.ECFieldElement$Fp: void <init>(java.math.BigInteger,java.math.BigInteger)>($r37, $r43);

        $r44 = virtualinvoke $r35.<org.bouncycastle.math.ec.ECFieldElement: org.bouncycastle.math.ec.ECFieldElement square()>();

        $z8 = virtualinvoke $r44.<java.lang.Object: boolean equals(java.lang.Object)>(r0);

        if $z8 == 0 goto label2;

        $r46 = $r35;

        goto label3;

     label2:
        $r46 = null;

     label3:
        return $r46;

     label4:
        $r4 = r0.<org.bouncycastle.math.ec.ECFieldElement$Fp: java.math.BigInteger q>;

        $r3 = <org.bouncycastle.math.ec.ECConstants: java.math.BigInteger ONE>;

        $r5 = virtualinvoke $r4.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r3);

        $r6 = virtualinvoke $r5.<java.math.BigInteger: java.math.BigInteger shiftRight(int)>(1);

        $r8 = r0.<org.bouncycastle.math.ec.ECFieldElement$Fp: java.math.BigInteger x>;

        $r7 = r0.<org.bouncycastle.math.ec.ECFieldElement$Fp: java.math.BigInteger q>;

        $r9 = virtualinvoke $r8.<java.math.BigInteger: java.math.BigInteger modPow(java.math.BigInteger,java.math.BigInteger)>($r6, $r7);

        $r10 = <org.bouncycastle.math.ec.ECConstants: java.math.BigInteger ONE>;

        $z2 = virtualinvoke $r9.<java.math.BigInteger: boolean equals(java.lang.Object)>($r10);

        if $z2 != 0 goto label5;

        return null;

     label5:
        $r11 = virtualinvoke $r5.<java.math.BigInteger: java.math.BigInteger shiftRight(int)>(2);

        $r12 = virtualinvoke $r11.<java.math.BigInteger: java.math.BigInteger shiftLeft(int)>(1);

        $r13 = <org.bouncycastle.math.ec.ECConstants: java.math.BigInteger ONE>;

        $r14 = virtualinvoke $r12.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r13);

        r15 = r0.<org.bouncycastle.math.ec.ECFieldElement$Fp: java.math.BigInteger x>;

        $r16 = virtualinvoke r15.<java.math.BigInteger: java.math.BigInteger shiftLeft(int)>(2);

        $r17 = r0.<org.bouncycastle.math.ec.ECFieldElement$Fp: java.math.BigInteger q>;

        $r18 = virtualinvoke $r16.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r17);

        $r19 = new java.util.Random;

        specialinvoke $r19.<java.util.Random: void <init>()>();

     label6:
        $r47 = new java.math.BigInteger;

        $r48 = r0.<org.bouncycastle.math.ec.ECFieldElement$Fp: java.math.BigInteger q>;

        $i0 = virtualinvoke $r48.<java.math.BigInteger: int bitLength()>();

        specialinvoke $r47.<java.math.BigInteger: void <init>(int,java.util.Random)>($i0, $r19);

        $r49 = r0.<org.bouncycastle.math.ec.ECFieldElement$Fp: java.math.BigInteger q>;

        $i1 = virtualinvoke $r47.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r49);

        if $i1 >= 0 goto label6;

        $r20 = virtualinvoke $r47.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r47);

        $r21 = virtualinvoke $r20.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r18);

        $r22 = r0.<org.bouncycastle.math.ec.ECFieldElement$Fp: java.math.BigInteger q>;

        $r23 = virtualinvoke $r21.<java.math.BigInteger: java.math.BigInteger modPow(java.math.BigInteger,java.math.BigInteger)>($r6, $r22);

        $z3 = virtualinvoke $r23.<java.math.BigInteger: boolean equals(java.lang.Object)>($r5);

        if $z3 == 0 goto label6;

        $r24 = r0.<org.bouncycastle.math.ec.ECFieldElement$Fp: java.math.BigInteger q>;

        $r25 = staticinvoke <org.bouncycastle.math.ec.ECFieldElement$Fp: java.math.BigInteger[] lucasSequence(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r24, $r47, r15, $r14);

        r26 = $r25[0];

        r50 = $r25[1];

        $r27 = virtualinvoke r50.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r50);

        $r28 = r0.<org.bouncycastle.math.ec.ECFieldElement$Fp: java.math.BigInteger q>;

        $r29 = virtualinvoke $r27.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r28);

        $z4 = virtualinvoke $r29.<java.math.BigInteger: boolean equals(java.lang.Object)>($r18);

        if $z4 == 0 goto label8;

        $z7 = virtualinvoke r50.<java.math.BigInteger: boolean testBit(int)>(0);

        if $z7 == 0 goto label7;

        $r34 = r0.<org.bouncycastle.math.ec.ECFieldElement$Fp: java.math.BigInteger q>;

        r50 = virtualinvoke r50.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r34);

     label7:
        $r31 = virtualinvoke r50.<java.math.BigInteger: java.math.BigInteger shiftRight(int)>(1);

        $r32 = new org.bouncycastle.math.ec.ECFieldElement$Fp;

        $r33 = r0.<org.bouncycastle.math.ec.ECFieldElement$Fp: java.math.BigInteger q>;

        specialinvoke $r32.<org.bouncycastle.math.ec.ECFieldElement$Fp: void <init>(java.math.BigInteger,java.math.BigInteger)>($r33, $r31);

        return $r32;

     label8:
        $r30 = <org.bouncycastle.math.ec.ECConstants: java.math.BigInteger ONE>;

        $z5 = virtualinvoke r26.<java.math.BigInteger: boolean equals(java.lang.Object)>($r30);

        if $z5 != 0 goto label6;

        $z6 = virtualinvoke r26.<java.math.BigInteger: boolean equals(java.lang.Object)>($r5);

        if $z6 != 0 goto label6;

        return null;
    }

    private static java.math.BigInteger[] lucasSequence(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)
    {
        java.math.BigInteger r0, r1, $r2, r3, $r4, r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, r39, r40, r41, r42, r43, r44, r45, r46;
        boolean $z0;
        int $i0, $i1, $i2, i3, i4, $i6;
        java.math.BigInteger[] $r14;

        r3 := @parameter0: java.math.BigInteger;

        r1 := @parameter1: java.math.BigInteger;

        r5 := @parameter2: java.math.BigInteger;

        r0 := @parameter3: java.math.BigInteger;

        $i0 = virtualinvoke r0.<java.math.BigInteger: int bitLength()>();

        $i1 = virtualinvoke r0.<java.math.BigInteger: int getLowestSetBit()>();

        r39 = <org.bouncycastle.math.ec.ECConstants: java.math.BigInteger ONE>;

        r40 = <org.bouncycastle.math.ec.ECConstants: java.math.BigInteger TWO>;

        r41 = r1;

        r42 = <org.bouncycastle.math.ec.ECConstants: java.math.BigInteger ONE>;

        r43 = <org.bouncycastle.math.ec.ECConstants: java.math.BigInteger ONE>;

        i3 = $i0 - 1;

     label1:
        $i2 = $i1 + 1;

        if i3 < $i2 goto label4;

        $r20 = virtualinvoke r42.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r43);

        $r21 = virtualinvoke $r20.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>(r3);

        r42 = $r21;

        $z0 = virtualinvoke r0.<java.math.BigInteger: boolean testBit(int)>(i3);

        if $z0 == 0 goto label2;

        $r30 = virtualinvoke $r21.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r5);

        $r31 = virtualinvoke $r30.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>(r3);

        r43 = $r31;

        $r32 = virtualinvoke r39.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r41);

        r39 = virtualinvoke $r32.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>(r3);

        $r33 = virtualinvoke r41.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r40);

        $r34 = virtualinvoke r1.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r21);

        $r35 = virtualinvoke $r33.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r34);

        r40 = virtualinvoke $r35.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>(r3);

        $r36 = virtualinvoke r41.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r41);

        $r37 = virtualinvoke $r31.<java.math.BigInteger: java.math.BigInteger shiftLeft(int)>(1);

        $r38 = virtualinvoke $r36.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r37);

        r41 = virtualinvoke $r38.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>(r3);

        goto label3;

     label2:
        r43 = $r21;

        $r22 = virtualinvoke r39.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r40);

        $r23 = virtualinvoke $r22.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r21);

        r39 = virtualinvoke $r23.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>(r3);

        $r24 = virtualinvoke r41.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r40);

        $r25 = virtualinvoke r1.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r21);

        $r26 = virtualinvoke $r24.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r25);

        r41 = virtualinvoke $r26.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>(r3);

        $r27 = virtualinvoke r40.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r40);

        $r28 = virtualinvoke $r21.<java.math.BigInteger: java.math.BigInteger shiftLeft(int)>(1);

        $r29 = virtualinvoke $r27.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r28);

        r40 = virtualinvoke $r29.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>(r3);

     label3:
        $i6 = (int) -1;

        i3 = i3 + $i6;

        goto label1;

     label4:
        $r2 = virtualinvoke r42.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r43);

        $r4 = virtualinvoke $r2.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>(r3);

        $r6 = virtualinvoke $r4.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r5);

        $r7 = virtualinvoke $r6.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>(r3);

        $r8 = virtualinvoke r39.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r40);

        $r9 = virtualinvoke $r8.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r4);

        r44 = virtualinvoke $r9.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>(r3);

        $r10 = virtualinvoke r41.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r40);

        $r11 = virtualinvoke r1.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r4);

        $r12 = virtualinvoke $r10.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r11);

        r45 = virtualinvoke $r12.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>(r3);

        $r13 = virtualinvoke $r4.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r7);

        r46 = virtualinvoke $r13.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>(r3);

        i4 = 1;

     label5:
        if i4 > $i1 goto label6;

        $r15 = virtualinvoke r44.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r45);

        r44 = virtualinvoke $r15.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>(r3);

        $r16 = virtualinvoke r45.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r45);

        $r17 = virtualinvoke r46.<java.math.BigInteger: java.math.BigInteger shiftLeft(int)>(1);

        $r18 = virtualinvoke $r16.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r17);

        r45 = virtualinvoke $r18.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>(r3);

        $r19 = virtualinvoke r46.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r46);

        r46 = virtualinvoke $r19.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>(r3);

        i4 = i4 + 1;

        goto label5;

     label6:
        $r14 = newarray (java.math.BigInteger)[2];

        $r14[0] = r44;

        $r14[1] = r45;

        return $r14;
    }

    public boolean equals(java.lang.Object)
    {
        org.bouncycastle.math.ec.ECFieldElement$Fp r1, r2;
        java.lang.Object r0;
        java.math.BigInteger $r3, $r4, $r5, $r6;
        boolean $z0, $z1, $z2, $z3;

        r1 := @this: org.bouncycastle.math.ec.ECFieldElement$Fp;

        r0 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r0 instanceof org.bouncycastle.math.ec.ECFieldElement$Fp;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (org.bouncycastle.math.ec.ECFieldElement$Fp) r0;

        $r4 = r1.<org.bouncycastle.math.ec.ECFieldElement$Fp: java.math.BigInteger q>;

        $r3 = r2.<org.bouncycastle.math.ec.ECFieldElement$Fp: java.math.BigInteger q>;

        $z1 = virtualinvoke $r4.<java.math.BigInteger: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label3;

        $r6 = r1.<org.bouncycastle.math.ec.ECFieldElement$Fp: java.math.BigInteger x>;

        $r5 = r2.<org.bouncycastle.math.ec.ECFieldElement$Fp: java.math.BigInteger x>;

        $z2 = virtualinvoke $r6.<java.math.BigInteger: boolean equals(java.lang.Object)>($r5);

        if $z2 == 0 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        return $z3;
    }

    public int hashCode()
    {
        org.bouncycastle.math.ec.ECFieldElement$Fp r0;
        int $i0, $i1, $i2;
        java.math.BigInteger $r1, $r2;

        r0 := @this: org.bouncycastle.math.ec.ECFieldElement$Fp;

        $r1 = r0.<org.bouncycastle.math.ec.ECFieldElement$Fp: java.math.BigInteger q>;

        $i0 = virtualinvoke $r1.<java.math.BigInteger: int hashCode()>();

        $r2 = r0.<org.bouncycastle.math.ec.ECFieldElement$Fp: java.math.BigInteger x>;

        $i1 = virtualinvoke $r2.<java.math.BigInteger: int hashCode()>();

        $i2 = $i0 ^ $i1;

        return $i2;
    }
}
