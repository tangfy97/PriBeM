class org.wiztools.restclient.ui.TwoColumnTablePanel$1 extends java.lang.Object implements org.wiztools.restclient.ui.MultiEntryAdd
{
    final org.wiztools.restclient.ui.TwoColumnTablePanel this$0;

    void <init>(org.wiztools.restclient.ui.TwoColumnTablePanel)
    {
        org.wiztools.restclient.ui.TwoColumnTablePanel r1;
        org.wiztools.restclient.ui.TwoColumnTablePanel$1 r0;

        r0 := @this: org.wiztools.restclient.ui.TwoColumnTablePanel$1;

        r1 := @parameter0: org.wiztools.restclient.ui.TwoColumnTablePanel;

        r0.<org.wiztools.restclient.ui.TwoColumnTablePanel$1: org.wiztools.restclient.ui.TwoColumnTablePanel this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void add(java.util.Map, java.util.List)
    {
        org.wiztools.restclient.ui.RESTView $r15;
        java.util.Map r5;
        boolean $z0, $z1, $z2;
        java.util.Set $r6;
        org.wiztools.restclient.ui.TwoColumnTableModel $r2, $r22;
        java.util.List r11;
        java.lang.StringBuilder $r8, $r9, $r10, $r18;
        java.lang.Object[] r25;
        org.wiztools.restclient.ui.RESTUserInterface $r14;
        org.wiztools.restclient.ui.TwoColumnTablePanel $r1, $r13, $r21;
        java.util.ArrayList $r4;
        java.lang.Object[][] $r3;
        int i0, i1, i2;
        java.lang.String $r16, r24, r26, r27, r28;
        java.util.Iterator $r7, $r12;
        org.wiztools.restclient.ui.TwoColumnTablePanel$1 r0;
        java.lang.Object $r17, $r19, $r20, $r23;

        r0 := @this: org.wiztools.restclient.ui.TwoColumnTablePanel$1;

        r5 := @parameter0: java.util.Map;

        r11 := @parameter1: java.util.List;

        $r1 = r0.<org.wiztools.restclient.ui.TwoColumnTablePanel$1: org.wiztools.restclient.ui.TwoColumnTablePanel this$0>;

        $r2 = staticinvoke <org.wiztools.restclient.ui.TwoColumnTablePanel: org.wiztools.restclient.ui.TwoColumnTableModel access$000(org.wiztools.restclient.ui.TwoColumnTablePanel)>($r1);

        $r3 = virtualinvoke $r2.<org.wiztools.restclient.ui.TwoColumnTableModel: java.lang.Object[][] getData()>();

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        i0 = lengthof $r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r25 = $r3[i1];

        $r23 = r25[0];

        r24 = (java.lang.String) $r23;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r24);

        i1 = i1 + 1;

        goto label1;

     label2:
        i2 = 0;

        $r6 = interfaceinvoke r5.<java.util.Map: java.util.Set keySet()>();

        $r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r19 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r26 = (java.lang.String) $r19;

        $r20 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r26);

        r27 = (java.lang.String) $r20;

        $r21 = r0.<org.wiztools.restclient.ui.TwoColumnTablePanel$1: org.wiztools.restclient.ui.TwoColumnTablePanel this$0>;

        $r22 = staticinvoke <org.wiztools.restclient.ui.TwoColumnTablePanel: org.wiztools.restclient.ui.TwoColumnTableModel access$000(org.wiztools.restclient.ui.TwoColumnTablePanel)>($r21);

        virtualinvoke $r22.<org.wiztools.restclient.ui.TwoColumnTableModel: void insertRow(java.lang.Object,java.lang.Object)>(r26, r27);

        i2 = i2 + 1;

        goto label3;

     label4:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Added ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" key/value pairs.\n\n");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n**Lines Skipped Due To Pattern Mis-match**\n\n");

        $z1 = interfaceinvoke r11.<java.util.List: boolean isEmpty()>();

        if $z1 == 0 goto label5;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("- None -\n");

        goto label7;

     label5:
        $r12 = interfaceinvoke r11.<java.util.List: java.util.Iterator iterator()>();

     label6:
        $z2 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label7;

        $r17 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r28 = (java.lang.String) $r17;

        $r18 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r28);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        goto label6;

     label7:
        $r13 = r0.<org.wiztools.restclient.ui.TwoColumnTablePanel$1: org.wiztools.restclient.ui.TwoColumnTablePanel this$0>;

        $r14 = staticinvoke <org.wiztools.restclient.ui.TwoColumnTablePanel: org.wiztools.restclient.ui.RESTUserInterface access$100(org.wiztools.restclient.ui.TwoColumnTablePanel)>($r13);

        $r15 = interfaceinvoke $r14.<org.wiztools.restclient.ui.RESTUserInterface: org.wiztools.restclient.ui.RESTView getView()>();

        $r16 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r15.<org.wiztools.restclient.ui.RESTView: void showMessage(java.lang.String,java.lang.String)>("Multi-insert Result", $r16);

        return;
    }
}
