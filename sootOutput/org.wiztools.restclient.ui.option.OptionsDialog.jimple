public class org.wiztools.restclient.ui.option.OptionsDialog extends org.wiztools.restclient.ui.EscapableDialog
{
    private static final java.util.logging.Logger LOG;
    private final org.wiztools.restclient.ui.option.OptionsDialog me;
    private java.util.Map panels;
    private static final java.util.ResourceBundle rb;

    public void <init>(org.wiztools.restclient.ui.RESTUserInterface)
    {
        java.util.LinkedHashMap $r3;
        org.wiztools.restclient.ui.option.OptionsDialog r0;
        org.wiztools.restclient.ui.RESTUserInterface r1;
        javax.swing.JFrame $r2;

        r0 := @this: org.wiztools.restclient.ui.option.OptionsDialog;

        r1 := @parameter0: org.wiztools.restclient.ui.RESTUserInterface;

        $r2 = interfaceinvoke r1.<org.wiztools.restclient.ui.RESTUserInterface: javax.swing.JFrame getFrame()>();

        specialinvoke r0.<org.wiztools.restclient.ui.EscapableDialog: void <init>(java.awt.Frame,boolean)>($r2, 1);

        $r3 = new java.util.LinkedHashMap;

        specialinvoke $r3.<java.util.LinkedHashMap: void <init>()>();

        r0.<org.wiztools.restclient.ui.option.OptionsDialog: java.util.Map panels> = $r3;

        r0.<org.wiztools.restclient.ui.option.OptionsDialog: org.wiztools.restclient.ui.option.OptionsDialog me> = r0;

        return;
    }

    protected void init()
    {
        javax.swing.border.Border $r8, $r13;
        org.wiztools.restclient.ui.option.OptionsDialog r0, $r18;
        java.util.Map $r4, $r9, $r26, $r31, $r38;
        java.lang.InstantiationException $r46;
        java.awt.BorderLayout $r14;
        boolean $z0, $z1;
        java.lang.IllegalAccessException $r43;
        java.lang.Runtime $r23;
        java.util.Set $r5, $r10;
        java.util.logging.Logger $r36, $r45, $r48, $r51;
        javax.swing.JPanel $r12, $r15, $r28, $r29;
        org.wiztools.restclient.ui.option.IOptionsPanel $r42, r54;
        java.lang.String[] $r3, $r33;
        java.util.logging.Level $r35, $r44, $r47, $r50;
        java.util.ResourceBundle $r1;
        javax.swing.JTabbedPane $r7;
        int i0, i1;
        java.lang.String $r2, $r34, $r37, $r39, r52, r53, r55;
        java.awt.FlowLayout $r16;
        javax.swing.JRootPane $r19;
        javax.swing.JButton $r17, $r21;
        java.util.Iterator $r6, $r11;
        org.wiztools.restclient.ui.option.OptionsDialog$3 $r24;
        java.lang.Object $r25, $r27, $r30, $r32, $r41;
        java.lang.Class $r40;
        java.lang.ClassNotFoundException $r49;
        org.wiztools.restclient.ui.option.OptionsDialog$1 $r20;
        org.wiztools.restclient.ui.option.OptionsDialog$2 $r22;

        r0 := @this: org.wiztools.restclient.ui.option.OptionsDialog;

        virtualinvoke r0.<org.wiztools.restclient.ui.option.OptionsDialog: void setTitle(java.lang.String)>("Options");

        $r1 = <org.wiztools.restclient.ui.option.OptionsDialog: java.util.ResourceBundle rb>;

        $r2 = virtualinvoke $r1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("panel");

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        i0 = lengthof $r3;

        i1 = 0;

     label01:
        if i1 >= i0 goto label08;

        r52 = $r3[i1];

        $r33 = virtualinvoke r52.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

     label02:
        $r36 = <org.wiztools.restclient.ui.option.OptionsDialog: java.util.logging.Logger LOG>;

        $r35 = <java.util.logging.Level: java.util.logging.Level FINEST>;

        $r34 = $r33[1];

        virtualinvoke $r36.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Object)>($r35, "OptionsPanel adding: {0}", $r34);

        $r38 = r0.<org.wiztools.restclient.ui.option.OptionsDialog: java.util.Map panels>;

        $r39 = $r33[0];

        $r37 = $r33[1];

        $r40 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r37);

        $r41 = virtualinvoke $r40.<java.lang.Class: java.lang.Object newInstance()>();

        $r42 = (org.wiztools.restclient.ui.option.IOptionsPanel) $r41;

        interfaceinvoke $r38.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r39, $r42);

     label03:
        goto label07;

     label04:
        $r49 := @caughtexception;

        $r51 = <org.wiztools.restclient.ui.option.OptionsDialog: java.util.logging.Logger LOG>;

        $r50 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        virtualinvoke $r51.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r50, null, $r49);

        goto label07;

     label05:
        $r46 := @caughtexception;

        $r48 = <org.wiztools.restclient.ui.option.OptionsDialog: java.util.logging.Logger LOG>;

        $r47 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        virtualinvoke $r48.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r47, null, $r46);

        goto label07;

     label06:
        $r43 := @caughtexception;

        $r45 = <org.wiztools.restclient.ui.option.OptionsDialog: java.util.logging.Logger LOG>;

        $r44 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        virtualinvoke $r45.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r44, null, $r43);

     label07:
        i1 = i1 + 1;

        goto label01;

     label08:
        $r4 = r0.<org.wiztools.restclient.ui.option.OptionsDialog: java.util.Map panels>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Set keySet()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label09:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r30 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r53 = (java.lang.String) $r30;

        $r31 = r0.<org.wiztools.restclient.ui.option.OptionsDialog: java.util.Map panels>;

        $r32 = interfaceinvoke $r31.<java.util.Map: java.lang.Object get(java.lang.Object)>(r53);

        r54 = (org.wiztools.restclient.ui.option.IOptionsPanel) $r32;

        interfaceinvoke r54.<org.wiztools.restclient.ui.option.IOptionsPanel: void initOptions()>();

        goto label09;

     label10:
        $r7 = new javax.swing.JTabbedPane;

        specialinvoke $r7.<javax.swing.JTabbedPane: void <init>()>();

        $r8 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(5, 5, 5, 5);

        virtualinvoke $r7.<javax.swing.JTabbedPane: void setBorder(javax.swing.border.Border)>($r8);

        $r9 = r0.<org.wiztools.restclient.ui.option.OptionsDialog: java.util.Map panels>;

        $r10 = interfaceinvoke $r9.<java.util.Map: java.util.Set keySet()>();

        $r11 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label11:
        $z1 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label12;

        $r25 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r55 = (java.lang.String) $r25;

        $r26 = r0.<org.wiztools.restclient.ui.option.OptionsDialog: java.util.Map panels>;

        $r27 = interfaceinvoke $r26.<java.util.Map: java.lang.Object get(java.lang.Object)>(r55);

        $r28 = (javax.swing.JPanel) $r27;

        $r29 = staticinvoke <org.wiztools.restclient.ui.UIUtil: javax.swing.JPanel getFlowLayoutPanelLeftAligned(java.awt.Component)>($r28);

        virtualinvoke $r7.<javax.swing.JTabbedPane: void addTab(java.lang.String,java.awt.Component)>(r55, $r29);

        goto label11;

     label12:
        $r12 = new javax.swing.JPanel;

        specialinvoke $r12.<javax.swing.JPanel: void <init>()>();

        $r13 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(5, 5, 5, 5);

        virtualinvoke $r12.<javax.swing.JPanel: void setBorder(javax.swing.border.Border)>($r13);

        $r14 = new java.awt.BorderLayout;

        specialinvoke $r14.<java.awt.BorderLayout: void <init>(int,int)>(5, 5);

        virtualinvoke $r12.<javax.swing.JPanel: void setLayout(java.awt.LayoutManager)>($r14);

        virtualinvoke $r12.<javax.swing.JPanel: void add(java.awt.Component,java.lang.Object)>($r7, "Center");

        $r15 = new javax.swing.JPanel;

        specialinvoke $r15.<javax.swing.JPanel: void <init>()>();

        $r16 = new java.awt.FlowLayout;

        specialinvoke $r16.<java.awt.FlowLayout: void <init>(int)>(1);

        virtualinvoke $r15.<javax.swing.JPanel: void setLayout(java.awt.LayoutManager)>($r16);

        $r17 = new javax.swing.JButton;

        specialinvoke $r17.<javax.swing.JButton: void <init>(java.lang.String)>("Ok");

        $r18 = r0.<org.wiztools.restclient.ui.option.OptionsDialog: org.wiztools.restclient.ui.option.OptionsDialog me>;

        $r19 = virtualinvoke $r18.<org.wiztools.restclient.ui.option.OptionsDialog: javax.swing.JRootPane getRootPane()>();

        virtualinvoke $r19.<javax.swing.JRootPane: void setDefaultButton(javax.swing.JButton)>($r17);

        virtualinvoke $r17.<javax.swing.JButton: void setMnemonic(char)>(111);

        $r20 = new org.wiztools.restclient.ui.option.OptionsDialog$1;

        specialinvoke $r20.<org.wiztools.restclient.ui.option.OptionsDialog$1: void <init>(org.wiztools.restclient.ui.option.OptionsDialog)>(r0);

        virtualinvoke $r17.<javax.swing.JButton: void addActionListener(java.awt.event.ActionListener)>($r20);

        $r21 = new javax.swing.JButton;

        specialinvoke $r21.<javax.swing.JButton: void <init>(java.lang.String)>("Cancel");

        virtualinvoke $r21.<javax.swing.JButton: void setMnemonic(char)>(99);

        $r22 = new org.wiztools.restclient.ui.option.OptionsDialog$2;

        specialinvoke $r22.<org.wiztools.restclient.ui.option.OptionsDialog$2: void <init>(org.wiztools.restclient.ui.option.OptionsDialog)>(r0);

        virtualinvoke $r21.<javax.swing.JButton: void addActionListener(java.awt.event.ActionListener)>($r22);

        virtualinvoke $r15.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r17);

        virtualinvoke $r15.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r21);

        virtualinvoke $r12.<javax.swing.JPanel: void add(java.awt.Component,java.lang.Object)>($r15, "South");

        virtualinvoke r0.<org.wiztools.restclient.ui.option.OptionsDialog: void setContentPane(java.awt.Container)>($r12);

        virtualinvoke r0.<org.wiztools.restclient.ui.option.OptionsDialog: void pack()>();

        $r23 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        $r24 = new org.wiztools.restclient.ui.option.OptionsDialog$3;

        specialinvoke $r24.<org.wiztools.restclient.ui.option.OptionsDialog$3: void <init>(org.wiztools.restclient.ui.option.OptionsDialog)>(r0);

        virtualinvoke $r23.<java.lang.Runtime: void addShutdownHook(java.lang.Thread)>($r24);

        return;

        catch java.lang.ClassNotFoundException from label02 to label03 with label04;
        catch java.lang.InstantiationException from label02 to label03 with label05;
        catch java.lang.IllegalAccessException from label02 to label03 with label06;
    }

    private void writeProperties()
    {
        org.wiztools.restclient.ui.option.IOptionsPanel $r10;
        java.util.Iterator $r3;
        java.util.Set $r2;
        org.wiztools.restclient.ui.option.OptionsDialog r0;
        java.util.Map $r1, $r8;
        java.lang.Object $r4, $r6, $r9;
        java.lang.String r7;
        org.wiztools.restclient.IGlobalOptions $r5;
        boolean $z0;

        r0 := @this: org.wiztools.restclient.ui.option.OptionsDialog;

        $r1 = r0.<org.wiztools.restclient.ui.option.OptionsDialog: java.util.Map panels>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.lang.String) $r6;

        $r8 = r0.<org.wiztools.restclient.ui.option.OptionsDialog: java.util.Map panels>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7);

        $r10 = (org.wiztools.restclient.ui.option.IOptionsPanel) $r9;

        interfaceinvoke $r10.<org.wiztools.restclient.ui.option.IOptionsPanel: void shutdownOptions()>();

        goto label1;

     label2:
        $r4 = staticinvoke <org.wiztools.restclient.ServiceLocator: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/wiztools/restclient/IGlobalOptions;");

        $r5 = (org.wiztools.restclient.IGlobalOptions) $r4;

        interfaceinvoke $r5.<org.wiztools.restclient.IGlobalOptions: void writeProperties()>();

        return;
    }

    public void doEscape(java.awt.AWTEvent)
    {
        java.awt.AWTEvent r1;
        org.wiztools.restclient.ui.option.OptionsDialog r0;

        r0 := @this: org.wiztools.restclient.ui.option.OptionsDialog;

        r1 := @parameter0: java.awt.AWTEvent;

        specialinvoke r0.<org.wiztools.restclient.ui.option.OptionsDialog: void actionCancel()>();

        return;
    }

    private void actionOk()
    {
        org.wiztools.restclient.ui.option.IOptionsPanel $r12, $r18;
        java.util.ArrayList $r0;
        org.wiztools.restclient.ui.option.OptionsDialog r1, $r8, $r14;
        java.util.Map $r2, $r5, $r10, $r16;
        int $i0;
        java.lang.String $r13, r20, r21;
        boolean $z0, $z1;
        java.util.Iterator $r4, $r7;
        java.util.Set $r3, $r6;
        java.util.List $r19;
        java.lang.Object $r9, $r11, $r15, $r17;

        r1 := @this: org.wiztools.restclient.ui.option.OptionsDialog;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = r1.<org.wiztools.restclient.ui.option.OptionsDialog: java.util.Map panels>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set keySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r15 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r20 = (java.lang.String) $r15;

        $r16 = r1.<org.wiztools.restclient.ui.option.OptionsDialog: java.util.Map panels>;

        $r17 = interfaceinvoke $r16.<java.util.Map: java.lang.Object get(java.lang.Object)>(r20);

        $r18 = (org.wiztools.restclient.ui.option.IOptionsPanel) $r17;

        $r19 = interfaceinvoke $r18.<org.wiztools.restclient.ui.option.IOptionsPanel: java.util.List validateInput()>();

        if $r19 == null goto label2;

        interfaceinvoke $r0.<java.util.List: boolean addAll(java.util.Collection)>($r19);

     label2:
        goto label1;

     label3:
        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        if $i0 <= 0 goto label4;

        $r13 = staticinvoke <org.wiztools.restclient.util.Util: java.lang.String getHTMLListFromList(java.util.List)>($r0);

        $r14 = r1.<org.wiztools.restclient.ui.option.OptionsDialog: org.wiztools.restclient.ui.option.OptionsDialog me>;

        staticinvoke <javax.swing.JOptionPane: void showMessageDialog(java.awt.Component,java.lang.Object,java.lang.String,int)>($r14, $r13, "Error in input.", 0);

        return;

     label4:
        $r5 = r1.<org.wiztools.restclient.ui.option.OptionsDialog: java.util.Map panels>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Set keySet()>();

        $r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label5:
        $z1 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r9 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r21 = (java.lang.String) $r9;

        $r10 = r1.<org.wiztools.restclient.ui.option.OptionsDialog: java.util.Map panels>;

        $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r21);

        $r12 = (org.wiztools.restclient.ui.option.IOptionsPanel) $r11;

        interfaceinvoke $r12.<org.wiztools.restclient.ui.option.IOptionsPanel: boolean saveOptions()>();

        goto label5;

     label6:
        $r8 = r1.<org.wiztools.restclient.ui.option.OptionsDialog: org.wiztools.restclient.ui.option.OptionsDialog me>;

        virtualinvoke $r8.<org.wiztools.restclient.ui.option.OptionsDialog: void setVisible(boolean)>(0);

        return;
    }

    private void actionCancel()
    {
        org.wiztools.restclient.ui.option.IOptionsPanel $r9;
        java.util.Iterator $r3;
        java.util.Set $r2;
        org.wiztools.restclient.ui.option.OptionsDialog r0, $r4;
        java.util.Map $r1, $r7;
        java.lang.Object $r5, $r8;
        java.lang.String r6;
        boolean $z0;

        r0 := @this: org.wiztools.restclient.ui.option.OptionsDialog;

        $r1 = r0.<org.wiztools.restclient.ui.option.OptionsDialog: java.util.Map panels>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.String) $r5;

        $r7 = r0.<org.wiztools.restclient.ui.option.OptionsDialog: java.util.Map panels>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6);

        $r9 = (org.wiztools.restclient.ui.option.IOptionsPanel) $r8;

        interfaceinvoke $r9.<org.wiztools.restclient.ui.option.IOptionsPanel: boolean revertOptions()>();

        goto label1;

     label2:
        $r4 = r0.<org.wiztools.restclient.ui.option.OptionsDialog: org.wiztools.restclient.ui.option.OptionsDialog me>;

        virtualinvoke $r4.<org.wiztools.restclient.ui.option.OptionsDialog: void setVisible(boolean)>(0);

        return;
    }

    static void access$000(org.wiztools.restclient.ui.option.OptionsDialog)
    {
        org.wiztools.restclient.ui.option.OptionsDialog r0;

        r0 := @parameter0: org.wiztools.restclient.ui.option.OptionsDialog;

        specialinvoke r0.<org.wiztools.restclient.ui.option.OptionsDialog: void actionOk()>();

        return;
    }

    static void access$100(org.wiztools.restclient.ui.option.OptionsDialog)
    {
        org.wiztools.restclient.ui.option.OptionsDialog r0;

        r0 := @parameter0: org.wiztools.restclient.ui.option.OptionsDialog;

        specialinvoke r0.<org.wiztools.restclient.ui.option.OptionsDialog: void actionCancel()>();

        return;
    }

    static void access$200(org.wiztools.restclient.ui.option.OptionsDialog)
    {
        org.wiztools.restclient.ui.option.OptionsDialog r0;

        r0 := @parameter0: org.wiztools.restclient.ui.option.OptionsDialog;

        specialinvoke r0.<org.wiztools.restclient.ui.option.OptionsDialog: void writeProperties()>();

        return;
    }

    static void <clinit>()
    {
        java.util.ResourceBundle $r3;
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;

        $r0 = class "Lorg/wiztools/restclient/ui/option/OptionsDialog;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <org.wiztools.restclient.ui.option.OptionsDialog: java.util.logging.Logger LOG> = $r2;

        $r3 = staticinvoke <java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String)>("org.wiztools.restclient.uioptionsdialog");

        <org.wiztools.restclient.ui.option.OptionsDialog: java.util.ResourceBundle rb> = $r3;

        return;
    }
}
