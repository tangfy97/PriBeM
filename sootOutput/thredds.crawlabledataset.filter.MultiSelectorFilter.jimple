public class thredds.crawlabledataset.filter.MultiSelectorFilter extends java.lang.Object implements thredds.crawlabledataset.CrawlableDatasetFilter
{
    private java.util.List selectorGroup;

    public void <init>(java.util.List)
    {
        thredds.crawlabledataset.filter.MultiSelectorFilter r0;
        java.util.List r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: thredds.crawlabledataset.filter.MultiSelectorFilter;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Selector group parameter must not be null.");

        throw $r2;

     label1:
        r0.<thredds.crawlabledataset.filter.MultiSelectorFilter: java.util.List selectorGroup> = r1;

        return;
    }

    public void <init>(thredds.crawlabledataset.filter.MultiSelectorFilter$Selector)
    {
        thredds.crawlabledataset.filter.MultiSelectorFilter r0;
        java.util.List $r2, $r3;
        thredds.crawlabledataset.filter.MultiSelectorFilter$Selector r1;

        r0 := @this: thredds.crawlabledataset.filter.MultiSelectorFilter;

        r1 := @parameter0: thredds.crawlabledataset.filter.MultiSelectorFilter$Selector;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r3 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<thredds.crawlabledataset.filter.MultiSelectorFilter: java.util.List selectorGroup> = $r3;

        goto label2;

     label1:
        $r2 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r1);

        r0.<thredds.crawlabledataset.filter.MultiSelectorFilter: java.util.List selectorGroup> = $r2;

     label2:
        return;
    }

    public java.lang.Object getConfigObject()
    {
        thredds.crawlabledataset.filter.MultiSelectorFilter r0;
        java.util.List $r1;

        r0 := @this: thredds.crawlabledataset.filter.MultiSelectorFilter;

        $r1 = r0.<thredds.crawlabledataset.filter.MultiSelectorFilter: java.util.List selectorGroup>;

        return $r1;
    }

    public boolean accept(thredds.crawlabledataset.CrawlableDataset)
    {
        thredds.crawlabledataset.filter.MultiSelectorFilter r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6, z7, z8;
        java.util.Iterator $r4;
        thredds.crawlabledataset.filter.MultiSelectorFilter$Selector r6;
        thredds.crawlabledataset.CrawlableDataset r0;
        java.lang.IllegalArgumentException $r7;
        java.util.List $r2, $r3;
        java.lang.Object $r5;

        r1 := @this: thredds.crawlabledataset.filter.MultiSelectorFilter;

        r0 := @parameter0: thredds.crawlabledataset.CrawlableDataset;

        if r0 != null goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Dataset parameter must not be null.");

        throw $r7;

     label1:
        $r2 = r1.<thredds.crawlabledataset.filter.MultiSelectorFilter: java.util.List selectorGroup>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        return 1;

     label2:
        z6 = 0;

        z7 = 0;

        z8 = 0;

        $r3 = r1.<thredds.crawlabledataset.filter.MultiSelectorFilter: java.util.List selectorGroup>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (thredds.crawlabledataset.filter.MultiSelectorFilter$Selector) $r5;

        $z2 = virtualinvoke r6.<thredds.crawlabledataset.filter.MultiSelectorFilter$Selector: boolean isApplicable(thredds.crawlabledataset.CrawlableDataset)>(r0);

        if $z2 == 0 goto label5;

        z8 = 1;

        $z3 = virtualinvoke r6.<thredds.crawlabledataset.filter.MultiSelectorFilter$Selector: boolean isIncluder()>();

        if $z3 == 0 goto label4;

        z7 = 1;

        $z5 = virtualinvoke r6.<thredds.crawlabledataset.filter.MultiSelectorFilter$Selector: boolean match(thredds.crawlabledataset.CrawlableDataset)>(r0);

        if $z5 == 0 goto label5;

        z6 = 1;

        goto label5;

     label4:
        $z4 = virtualinvoke r6.<thredds.crawlabledataset.filter.MultiSelectorFilter$Selector: boolean match(thredds.crawlabledataset.CrawlableDataset)>(r0);

        if $z4 == 0 goto label5;

        return 0;

     label5:
        goto label3;

     label6:
        if z6 == 0 goto label7;

        return 1;

     label7:
        if z8 != 0 goto label8;

        return 1;

     label8:
        if z7 != 0 goto label9;

        return 1;

     label9:
        return 0;
    }
}
