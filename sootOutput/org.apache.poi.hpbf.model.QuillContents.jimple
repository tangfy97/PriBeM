public final class org.apache.poi.hpbf.model.QuillContents extends org.apache.poi.hpbf.model.HPBFPart
{
    private static final java.lang.String[] PATH;
    private org.apache.poi.hpbf.model.qcbits.QCBit[] bits;

    public void <init>(org.apache.poi.poifs.filesystem.DirectoryNode) throws java.io.IOException
    {
        byte[] $r4, $r6, $r7, $r9, $r10, $r11, $r12, $r14, $r15, $r16, r17, $r18;
        byte $b2, $b4;
        org.apache.poi.hpbf.model.qcbits.UnknownQCBit $r45;
        boolean $z0, $z1, $z2;
        org.apache.poi.hpbf.model.qcbits.QCBit $r32, $r34, $r36, $r38;
        org.apache.poi.poifs.filesystem.DirectoryNode r1;
        org.apache.poi.hpbf.model.qcbits.QCBit[] $r5, $r20, $r21, $r24, $r31, $r33, $r35, $r37;
        java.lang.StringBuilder $r27, $r28, $r29, $r40;
        java.lang.String[] $r2;
        long $l14, $l17;
        org.apache.poi.hpbf.model.QuillContents r0;
        int $i0, i1, $i3, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i15, $i16, i18, i19, $i20;
        java.lang.String $r30, $r39, $r42, $r43;
        org.apache.poi.hpbf.model.qcbits.QCPLCBit $r22;
        java.lang.IllegalArgumentException $r41;
        org.apache.poi.hpbf.model.qcbits.QCTextBit $r44;

        r0 := @this: org.apache.poi.hpbf.model.QuillContents;

        r1 := @parameter0: org.apache.poi.poifs.filesystem.DirectoryNode;

        $r2 = <org.apache.poi.hpbf.model.QuillContents: java.lang.String[] PATH>;

        specialinvoke r0.<org.apache.poi.hpbf.model.HPBFPart: void <init>(org.apache.poi.poifs.filesystem.DirectoryNode,java.lang.String[])>(r1, $r2);

        $r39 = new java.lang.String;

        $r4 = r0.<org.apache.poi.hpbf.model.QuillContents: byte[] data>;

        specialinvoke $r39.<java.lang.String: void <init>(byte[],int,int)>($r4, 0, 8);

        $z0 = virtualinvoke $r39.<java.lang.String: boolean equals(java.lang.Object)>("CHNKINK ");

        if $z0 != 0 goto label1;

        $r41 = new java.lang.IllegalArgumentException;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expecting \'CHNKINK \' but was \'");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r41.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r30);

        throw $r41;

     label1:
        $r5 = newarray (org.apache.poi.hpbf.model.qcbits.QCBit)[20];

        r0.<org.apache.poi.hpbf.model.QuillContents: org.apache.poi.hpbf.model.qcbits.QCBit[] bits> = $r5;

        i19 = 0;

     label2:
        if i19 >= 20 goto label7;

        $i0 = i19 * 24;

        i1 = 32 + $i0;

        $r6 = r0.<org.apache.poi.hpbf.model.QuillContents: byte[] data>;

        $b2 = $r6[i1];

        $i20 = (int) $b2;

        if $i20 != 24 goto label6;

        $r7 = r0.<org.apache.poi.hpbf.model.QuillContents: byte[] data>;

        $i3 = i1 + 1;

        $b4 = $r7[$i3];

        if $b4 != 0 goto label6;

        $r42 = new java.lang.String;

        $r9 = r0.<org.apache.poi.hpbf.model.QuillContents: byte[] data>;

        $i5 = i1 + 2;

        specialinvoke $r42.<java.lang.String: void <init>(byte[],int,int)>($r9, $i5, 4);

        $r10 = r0.<org.apache.poi.hpbf.model.QuillContents: byte[] data>;

        $i6 = i1 + 6;

        $i7 = staticinvoke <org.apache.poi.util.LittleEndian: int getUShort(byte[],int)>($r10, $i6);

        $r11 = r0.<org.apache.poi.hpbf.model.QuillContents: byte[] data>;

        $i8 = i1 + 8;

        $i9 = staticinvoke <org.apache.poi.util.LittleEndian: int getUShort(byte[],int)>($r11, $i8);

        $r12 = r0.<org.apache.poi.hpbf.model.QuillContents: byte[] data>;

        $i10 = i1 + 10;

        $i11 = staticinvoke <org.apache.poi.util.LittleEndian: int getUShort(byte[],int)>($r12, $i10);

        $r43 = new java.lang.String;

        $r14 = r0.<org.apache.poi.hpbf.model.QuillContents: byte[] data>;

        $i12 = i1 + 12;

        specialinvoke $r43.<java.lang.String: void <init>(byte[],int,int)>($r14, $i12, 4);

        $r15 = r0.<org.apache.poi.hpbf.model.QuillContents: byte[] data>;

        $i13 = i1 + 16;

        $l14 = staticinvoke <org.apache.poi.util.LittleEndian: long getUInt(byte[],int)>($r15, $i13);

        i15 = (int) $l14;

        $r16 = r0.<org.apache.poi.hpbf.model.QuillContents: byte[] data>;

        $i16 = i1 + 20;

        $l17 = staticinvoke <org.apache.poi.util.LittleEndian: long getUInt(byte[],int)>($r16, $i16);

        i18 = (int) $l17;

        r17 = newarray (byte)[i18];

        $r18 = r0.<org.apache.poi.hpbf.model.QuillContents: byte[] data>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r18, i15, r17, 0, i18);

        $z1 = virtualinvoke $r43.<java.lang.String: boolean equals(java.lang.Object)>("TEXT");

        if $z1 == 0 goto label3;

        $r24 = r0.<org.apache.poi.hpbf.model.QuillContents: org.apache.poi.hpbf.model.qcbits.QCBit[] bits>;

        $r44 = new org.apache.poi.hpbf.model.qcbits.QCTextBit;

        specialinvoke $r44.<org.apache.poi.hpbf.model.qcbits.QCTextBit: void <init>(java.lang.String,java.lang.String,byte[])>($r42, $r43, r17);

        $r24[i19] = $r44;

        goto label5;

     label3:
        $z2 = virtualinvoke $r43.<java.lang.String: boolean equals(java.lang.Object)>("PLC ");

        if $z2 == 0 goto label4;

        $r21 = r0.<org.apache.poi.hpbf.model.QuillContents: org.apache.poi.hpbf.model.qcbits.QCBit[] bits>;

        $r22 = staticinvoke <org.apache.poi.hpbf.model.qcbits.QCPLCBit: org.apache.poi.hpbf.model.qcbits.QCPLCBit createQCPLCBit(java.lang.String,java.lang.String,byte[])>($r42, $r43, r17);

        $r21[i19] = $r22;

        goto label5;

     label4:
        $r20 = r0.<org.apache.poi.hpbf.model.QuillContents: org.apache.poi.hpbf.model.qcbits.QCBit[] bits>;

        $r45 = new org.apache.poi.hpbf.model.qcbits.UnknownQCBit;

        specialinvoke $r45.<org.apache.poi.hpbf.model.qcbits.UnknownQCBit: void <init>(java.lang.String,java.lang.String,byte[])>($r42, $r43, r17);

        $r20[i19] = $r45;

     label5:
        $r31 = r0.<org.apache.poi.hpbf.model.QuillContents: org.apache.poi.hpbf.model.qcbits.QCBit[] bits>;

        $r32 = $r31[i19];

        virtualinvoke $r32.<org.apache.poi.hpbf.model.qcbits.QCBit: void setOptA(int)>($i7);

        $r33 = r0.<org.apache.poi.hpbf.model.QuillContents: org.apache.poi.hpbf.model.qcbits.QCBit[] bits>;

        $r34 = $r33[i19];

        virtualinvoke $r34.<org.apache.poi.hpbf.model.qcbits.QCBit: void setOptB(int)>($i9);

        $r35 = r0.<org.apache.poi.hpbf.model.QuillContents: org.apache.poi.hpbf.model.qcbits.QCBit[] bits>;

        $r36 = $r35[i19];

        virtualinvoke $r36.<org.apache.poi.hpbf.model.qcbits.QCBit: void setOptC(int)>($i11);

        $r37 = r0.<org.apache.poi.hpbf.model.QuillContents: org.apache.poi.hpbf.model.qcbits.QCBit[] bits>;

        $r38 = $r37[i19];

        virtualinvoke $r38.<org.apache.poi.hpbf.model.qcbits.QCBit: void setDataOffset(int)>(i15);

     label6:
        i19 = i19 + 1;

        goto label2;

     label7:
        return;
    }

    public org.apache.poi.hpbf.model.qcbits.QCBit[] getBits()
    {
        org.apache.poi.hpbf.model.qcbits.QCBit[] $r1;
        org.apache.poi.hpbf.model.QuillContents r0;

        r0 := @this: org.apache.poi.hpbf.model.QuillContents;

        $r1 = r0.<org.apache.poi.hpbf.model.QuillContents: org.apache.poi.hpbf.model.qcbits.QCBit[] bits>;

        return $r1;
    }

    protected void generateData()
    {
        java.lang.IllegalStateException $r0;
        org.apache.poi.hpbf.model.QuillContents r1;

        r1 := @this: org.apache.poi.hpbf.model.QuillContents;

        $r0 = new java.lang.IllegalStateException;

        specialinvoke $r0.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not done yet!");

        throw $r0;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0;

        $r0 = newarray (java.lang.String)[3];

        $r0[0] = "Quill";

        $r0[1] = "QuillSub";

        $r0[2] = "CONTENTS";

        <org.apache.poi.hpbf.model.QuillContents: java.lang.String[] PATH> = $r0;

        return;
    }
}
