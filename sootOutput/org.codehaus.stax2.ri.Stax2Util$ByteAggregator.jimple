public final class org.codehaus.stax2.ri.Stax2Util$ByteAggregator extends java.lang.Object
{
    private static final byte[] NO_BYTES;
    private static final int INITIAL_BLOCK_SIZE;
    static final int DEFAULT_BLOCK_ARRAY_SIZE;
    private byte[][] mBlocks;
    private int mBlockCount;
    private int mTotalLen;
    private byte[] mSpareBlock;

    public void <init>()
    {
        org.codehaus.stax2.ri.Stax2Util$ByteAggregator r0;

        r0 := @this: org.codehaus.stax2.ri.Stax2Util$ByteAggregator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public byte[] startAggregation()
    {
        byte[] r1;
        org.codehaus.stax2.ri.Stax2Util$ByteAggregator r0;

        r0 := @this: org.codehaus.stax2.ri.Stax2Util$ByteAggregator;

        r0.<org.codehaus.stax2.ri.Stax2Util$ByteAggregator: int mTotalLen> = 0;

        r0.<org.codehaus.stax2.ri.Stax2Util$ByteAggregator: int mBlockCount> = 0;

        r1 = r0.<org.codehaus.stax2.ri.Stax2Util$ByteAggregator: byte[] mSpareBlock>;

        if r1 != null goto label1;

        r1 = newarray (byte)[500];

        goto label2;

     label1:
        r0.<org.codehaus.stax2.ri.Stax2Util$ByteAggregator: byte[] mSpareBlock> = null;

     label2:
        return r1;
    }

    public byte[] addFullBlock(byte[])
    {
        byte[] r0, $r9;
        int i0, $i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        org.codehaus.stax2.ri.Stax2Util$ByteAggregator r1;
        byte[][] $r2, $r3, r4, $r5, $r6, $r7, $r8;

        r1 := @this: org.codehaus.stax2.ri.Stax2Util$ByteAggregator;

        r0 := @parameter0: byte[];

        i0 = lengthof r0;

        $r2 = r1.<org.codehaus.stax2.ri.Stax2Util$ByteAggregator: byte[][] mBlocks>;

        if $r2 != null goto label1;

        $r7 = newarray (byte[])[100];

        r1.<org.codehaus.stax2.ri.Stax2Util$ByteAggregator: byte[][] mBlocks> = $r7;

        goto label2;

     label1:
        $r3 = r1.<org.codehaus.stax2.ri.Stax2Util$ByteAggregator: byte[][] mBlocks>;

        i3 = lengthof $r3;

        $i1 = r1.<org.codehaus.stax2.ri.Stax2Util$ByteAggregator: int mBlockCount>;

        if $i1 < i3 goto label2;

        r4 = r1.<org.codehaus.stax2.ri.Stax2Util$ByteAggregator: byte[][] mBlocks>;

        $i2 = i3 + i3;

        $r5 = newarray (byte[])[$i2];

        r1.<org.codehaus.stax2.ri.Stax2Util$ByteAggregator: byte[][] mBlocks> = $r5;

        $r6 = r1.<org.codehaus.stax2.ri.Stax2Util$ByteAggregator: byte[][] mBlocks>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, 0, $r6, 0, i3);

     label2:
        $r8 = r1.<org.codehaus.stax2.ri.Stax2Util$ByteAggregator: byte[][] mBlocks>;

        $i4 = r1.<org.codehaus.stax2.ri.Stax2Util$ByteAggregator: int mBlockCount>;

        $r8[$i4] = r0;

        $i5 = r1.<org.codehaus.stax2.ri.Stax2Util$ByteAggregator: int mBlockCount>;

        $i6 = $i5 + 1;

        r1.<org.codehaus.stax2.ri.Stax2Util$ByteAggregator: int mBlockCount> = $i6;

        $i7 = r1.<org.codehaus.stax2.ri.Stax2Util$ByteAggregator: int mTotalLen>;

        $i8 = $i7 + i0;

        r1.<org.codehaus.stax2.ri.Stax2Util$ByteAggregator: int mTotalLen> = $i8;

        $i9 = r1.<org.codehaus.stax2.ri.Stax2Util$ByteAggregator: int mTotalLen>;

        $i10 = $i9 >> 1;

        $i11 = staticinvoke <java.lang.Math: int max(int,int)>($i10, 1000);

        $r9 = newarray (byte)[$i11];

        return $r9;
    }

    public byte[] aggregateAll(byte[], int)
    {
        byte[] r1, r3, r13, $r14;
        java.lang.StringBuffer $r5, $r6, $r7, $r8, $r9, $r10;
        int i0, $i1, i2, $i3, $i4, i5, i6, i7;
        java.lang.String $r11;
        org.codehaus.stax2.ri.Stax2Util$ByteAggregator r0;
        java.lang.RuntimeException $r4;
        byte[][] $r2, $r12;

        r0 := @this: org.codehaus.stax2.ri.Stax2Util$ByteAggregator;

        r3 := @parameter0: byte[];

        i0 := @parameter1: int;

        $i1 = r0.<org.codehaus.stax2.ri.Stax2Util$ByteAggregator: int mTotalLen>;

        i2 = $i1 + i0;

        if i2 != 0 goto label1;

        $r14 = <org.codehaus.stax2.ri.Stax2Util$ByteAggregator: byte[] NO_BYTES>;

        return $r14;

     label1:
        r1 = newarray (byte)[i2];

        i6 = 0;

        $r2 = r0.<org.codehaus.stax2.ri.Stax2Util$ByteAggregator: byte[][] mBlocks>;

        if $r2 == null goto label3;

        i7 = 0;

     label2:
        $i3 = r0.<org.codehaus.stax2.ri.Stax2Util$ByteAggregator: int mBlockCount>;

        if i7 >= $i3 goto label3;

        $r12 = r0.<org.codehaus.stax2.ri.Stax2Util$ByteAggregator: byte[][] mBlocks>;

        r13 = $r12[i7];

        i5 = lengthof r13;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r13, 0, r1, i6, i5);

        i6 = i6 + i5;

        i7 = i7 + 1;

        goto label2;

     label3:
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, 0, r1, i6, i0);

        r0.<org.codehaus.stax2.ri.Stax2Util$ByteAggregator: byte[] mSpareBlock> = r3;

        $i4 = i6 + i0;

        if $i4 == i2 goto label4;

        $r4 = new java.lang.RuntimeException;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Internal error: total len assumed to be ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", copied ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i4);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" bytes");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>($r11);

        throw $r4;

     label4:
        return r1;
    }

    static void <clinit>()
    {
        byte[] $r0;

        <org.codehaus.stax2.ri.Stax2Util$ByteAggregator: int DEFAULT_BLOCK_ARRAY_SIZE> = 100;

        <org.codehaus.stax2.ri.Stax2Util$ByteAggregator: int INITIAL_BLOCK_SIZE> = 500;

        $r0 = newarray (byte)[0];

        <org.codehaus.stax2.ri.Stax2Util$ByteAggregator: byte[] NO_BYTES> = $r0;

        return;
    }
}
