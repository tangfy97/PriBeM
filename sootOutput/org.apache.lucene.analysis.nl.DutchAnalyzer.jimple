public final class org.apache.lucene.analysis.nl.DutchAnalyzer extends org.apache.lucene.analysis.Analyzer
{
    public static final java.lang.String DEFAULT_STOPWORD_FILE;
    private final org.apache.lucene.analysis.util.CharArraySet stoptable;
    private org.apache.lucene.analysis.util.CharArraySet excltable;
    private final org.apache.lucene.analysis.miscellaneous.StemmerOverrideFilter$StemmerOverrideMap stemdict;
    private final org.apache.lucene.analysis.util.CharArrayMap origStemdict;
    private final org.apache.lucene.util.Version matchVersion;

    public static org.apache.lucene.analysis.util.CharArraySet getDefaultStopSet()
    {
        org.apache.lucene.analysis.util.CharArraySet $r0;

        $r0 = <org.apache.lucene.analysis.nl.DutchAnalyzer$DefaultSetHolder: org.apache.lucene.analysis.util.CharArraySet DEFAULT_STOP_SET>;

        return $r0;
    }

    public void <init>(org.apache.lucene.util.Version)
    {
        org.apache.lucene.analysis.util.CharArraySet $r3, $r4;
        org.apache.lucene.analysis.nl.DutchAnalyzer r0;
        org.apache.lucene.util.Version r1;
        org.apache.lucene.analysis.util.CharArrayMap $r2;

        r0 := @this: org.apache.lucene.analysis.nl.DutchAnalyzer;

        r1 := @parameter0: org.apache.lucene.util.Version;

        $r4 = <org.apache.lucene.analysis.nl.DutchAnalyzer$DefaultSetHolder: org.apache.lucene.analysis.util.CharArraySet DEFAULT_STOP_SET>;

        $r3 = <org.apache.lucene.analysis.util.CharArraySet: org.apache.lucene.analysis.util.CharArraySet EMPTY_SET>;

        $r2 = <org.apache.lucene.analysis.nl.DutchAnalyzer$DefaultSetHolder: org.apache.lucene.analysis.util.CharArrayMap DEFAULT_STEM_DICT>;

        specialinvoke r0.<org.apache.lucene.analysis.nl.DutchAnalyzer: void <init>(org.apache.lucene.util.Version,org.apache.lucene.analysis.util.CharArraySet,org.apache.lucene.analysis.util.CharArraySet,org.apache.lucene.analysis.util.CharArrayMap)>(r1, $r4, $r3, $r2);

        return;
    }

    public void <init>(org.apache.lucene.util.Version, org.apache.lucene.analysis.util.CharArraySet)
    {
        org.apache.lucene.analysis.util.CharArraySet r2, $r4;
        org.apache.lucene.analysis.nl.DutchAnalyzer r0;
        org.apache.lucene.util.Version r1, $r3;
        boolean $z0;
        org.apache.lucene.analysis.util.CharArrayMap $r5;

        r0 := @this: org.apache.lucene.analysis.nl.DutchAnalyzer;

        r1 := @parameter0: org.apache.lucene.util.Version;

        r2 := @parameter1: org.apache.lucene.analysis.util.CharArraySet;

        $r4 = <org.apache.lucene.analysis.util.CharArraySet: org.apache.lucene.analysis.util.CharArraySet EMPTY_SET>;

        $r3 = <org.apache.lucene.util.Version: org.apache.lucene.util.Version LUCENE_36>;

        $z0 = virtualinvoke r1.<org.apache.lucene.util.Version: boolean onOrAfter(org.apache.lucene.util.Version)>($r3);

        if $z0 == 0 goto label1;

        $r5 = <org.apache.lucene.analysis.nl.DutchAnalyzer$DefaultSetHolder: org.apache.lucene.analysis.util.CharArrayMap DEFAULT_STEM_DICT>;

        goto label2;

     label1:
        $r5 = staticinvoke <org.apache.lucene.analysis.util.CharArrayMap: org.apache.lucene.analysis.util.CharArrayMap emptyMap()>();

     label2:
        specialinvoke r0.<org.apache.lucene.analysis.nl.DutchAnalyzer: void <init>(org.apache.lucene.util.Version,org.apache.lucene.analysis.util.CharArraySet,org.apache.lucene.analysis.util.CharArraySet,org.apache.lucene.analysis.util.CharArrayMap)>(r1, r2, $r4, $r5);

        return;
    }

    public void <init>(org.apache.lucene.util.Version, org.apache.lucene.analysis.util.CharArraySet, org.apache.lucene.analysis.util.CharArraySet)
    {
        org.apache.lucene.analysis.util.CharArraySet r2, r3;
        org.apache.lucene.analysis.nl.DutchAnalyzer r0;
        org.apache.lucene.util.Version r1, $r4;
        boolean $z0;
        org.apache.lucene.analysis.util.CharArrayMap $r5;

        r0 := @this: org.apache.lucene.analysis.nl.DutchAnalyzer;

        r1 := @parameter0: org.apache.lucene.util.Version;

        r2 := @parameter1: org.apache.lucene.analysis.util.CharArraySet;

        r3 := @parameter2: org.apache.lucene.analysis.util.CharArraySet;

        $r4 = <org.apache.lucene.util.Version: org.apache.lucene.util.Version LUCENE_36>;

        $z0 = virtualinvoke r1.<org.apache.lucene.util.Version: boolean onOrAfter(org.apache.lucene.util.Version)>($r4);

        if $z0 == 0 goto label1;

        $r5 = <org.apache.lucene.analysis.nl.DutchAnalyzer$DefaultSetHolder: org.apache.lucene.analysis.util.CharArrayMap DEFAULT_STEM_DICT>;

        goto label2;

     label1:
        $r5 = staticinvoke <org.apache.lucene.analysis.util.CharArrayMap: org.apache.lucene.analysis.util.CharArrayMap emptyMap()>();

     label2:
        specialinvoke r0.<org.apache.lucene.analysis.nl.DutchAnalyzer: void <init>(org.apache.lucene.util.Version,org.apache.lucene.analysis.util.CharArraySet,org.apache.lucene.analysis.util.CharArraySet,org.apache.lucene.analysis.util.CharArrayMap)>(r1, r2, r3, $r5);

        return;
    }

    public void <init>(org.apache.lucene.util.Version, org.apache.lucene.analysis.util.CharArraySet, org.apache.lucene.analysis.util.CharArraySet, org.apache.lucene.analysis.util.CharArrayMap)
    {
        org.apache.lucene.analysis.miscellaneous.StemmerOverrideFilter$StemmerOverrideMap $r17;
        org.apache.lucene.analysis.util.CharArrayMap$EntryIterator $r15;
        int $i0;
        org.apache.lucene.analysis.nl.DutchAnalyzer r0;
        boolean $z0, $z1, $z2;
        java.lang.CharSequence $r20;
        java.io.IOException $r21;
        java.lang.RuntimeException $r22;
        org.apache.lucene.analysis.util.CharArrayMap$EntrySet $r14;
        org.apache.lucene.util.Version r2, $r12;
        org.apache.lucene.util.CharsRef $r16;
        org.apache.lucene.analysis.util.CharArraySet $r1, r3, $r4, $r5, r6, $r7, $r8;
        char[] $r18;
        java.lang.Object $r19;
        org.apache.lucene.analysis.miscellaneous.StemmerOverrideFilter$Builder $r13;
        org.apache.lucene.analysis.util.CharArrayMap r9, $r10, $r11;

        r0 := @this: org.apache.lucene.analysis.nl.DutchAnalyzer;

        r2 := @parameter0: org.apache.lucene.util.Version;

        r3 := @parameter1: org.apache.lucene.analysis.util.CharArraySet;

        r6 := @parameter2: org.apache.lucene.analysis.util.CharArraySet;

        r9 := @parameter3: org.apache.lucene.analysis.util.CharArrayMap;

        specialinvoke r0.<org.apache.lucene.analysis.Analyzer: void <init>()>();

        $r1 = <org.apache.lucene.analysis.util.CharArraySet: org.apache.lucene.analysis.util.CharArraySet EMPTY_SET>;

        r0.<org.apache.lucene.analysis.nl.DutchAnalyzer: org.apache.lucene.analysis.util.CharArraySet excltable> = $r1;

        r0.<org.apache.lucene.analysis.nl.DutchAnalyzer: org.apache.lucene.util.Version matchVersion> = r2;

        $r4 = staticinvoke <org.apache.lucene.analysis.util.CharArraySet: org.apache.lucene.analysis.util.CharArraySet copy(org.apache.lucene.util.Version,java.util.Set)>(r2, r3);

        $r5 = staticinvoke <org.apache.lucene.analysis.util.CharArraySet: org.apache.lucene.analysis.util.CharArraySet unmodifiableSet(org.apache.lucene.analysis.util.CharArraySet)>($r4);

        r0.<org.apache.lucene.analysis.nl.DutchAnalyzer: org.apache.lucene.analysis.util.CharArraySet stoptable> = $r5;

        $r7 = staticinvoke <org.apache.lucene.analysis.util.CharArraySet: org.apache.lucene.analysis.util.CharArraySet copy(org.apache.lucene.util.Version,java.util.Set)>(r2, r6);

        $r8 = staticinvoke <org.apache.lucene.analysis.util.CharArraySet: org.apache.lucene.analysis.util.CharArraySet unmodifiableSet(org.apache.lucene.analysis.util.CharArraySet)>($r7);

        r0.<org.apache.lucene.analysis.nl.DutchAnalyzer: org.apache.lucene.analysis.util.CharArraySet excltable> = $r8;

        $z0 = virtualinvoke r9.<org.apache.lucene.analysis.util.CharArrayMap: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r12 = <org.apache.lucene.util.Version: org.apache.lucene.util.Version LUCENE_31>;

        $z1 = virtualinvoke r2.<org.apache.lucene.util.Version: boolean onOrAfter(org.apache.lucene.util.Version)>($r12);

        if $z1 != 0 goto label2;

     label1:
        r0.<org.apache.lucene.analysis.nl.DutchAnalyzer: org.apache.lucene.analysis.miscellaneous.StemmerOverrideFilter$StemmerOverrideMap stemdict> = null;

        $r10 = staticinvoke <org.apache.lucene.analysis.util.CharArrayMap: org.apache.lucene.analysis.util.CharArrayMap copy(org.apache.lucene.util.Version,java.util.Map)>(r2, r9);

        $r11 = staticinvoke <org.apache.lucene.analysis.util.CharArrayMap: org.apache.lucene.analysis.util.CharArrayMap unmodifiableMap(org.apache.lucene.analysis.util.CharArrayMap)>($r10);

        r0.<org.apache.lucene.analysis.nl.DutchAnalyzer: org.apache.lucene.analysis.util.CharArrayMap origStemdict> = $r11;

        goto label7;

     label2:
        r0.<org.apache.lucene.analysis.nl.DutchAnalyzer: org.apache.lucene.analysis.util.CharArrayMap origStemdict> = null;

        $r13 = new org.apache.lucene.analysis.miscellaneous.StemmerOverrideFilter$Builder;

        specialinvoke $r13.<org.apache.lucene.analysis.miscellaneous.StemmerOverrideFilter$Builder: void <init>(boolean)>(0);

        $r14 = virtualinvoke r9.<org.apache.lucene.analysis.util.CharArrayMap: org.apache.lucene.analysis.util.CharArrayMap$EntrySet entrySet()>();

        $r15 = virtualinvoke $r14.<org.apache.lucene.analysis.util.CharArrayMap$EntrySet: org.apache.lucene.analysis.util.CharArrayMap$EntryIterator iterator()>();

        $r16 = new org.apache.lucene.util.CharsRef;

        specialinvoke $r16.<org.apache.lucene.util.CharsRef: void <init>()>();

     label3:
        $z2 = virtualinvoke $r15.<org.apache.lucene.analysis.util.CharArrayMap$EntryIterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        $r18 = virtualinvoke $r15.<org.apache.lucene.analysis.util.CharArrayMap$EntryIterator: char[] nextKey()>();

        $i0 = lengthof $r18;

        virtualinvoke $r16.<org.apache.lucene.util.CharsRef: void copyChars(char[],int,int)>($r18, 0, $i0);

        $r19 = virtualinvoke $r15.<org.apache.lucene.analysis.util.CharArrayMap$EntryIterator: java.lang.Object currentValue()>();

        $r20 = (java.lang.CharSequence) $r19;

        virtualinvoke $r13.<org.apache.lucene.analysis.miscellaneous.StemmerOverrideFilter$Builder: boolean add(java.lang.CharSequence,java.lang.CharSequence)>($r16, $r20);

        goto label3;

     label4:
        $r17 = virtualinvoke $r13.<org.apache.lucene.analysis.miscellaneous.StemmerOverrideFilter$Builder: org.apache.lucene.analysis.miscellaneous.StemmerOverrideFilter$StemmerOverrideMap build()>();

        r0.<org.apache.lucene.analysis.nl.DutchAnalyzer: org.apache.lucene.analysis.miscellaneous.StemmerOverrideFilter$StemmerOverrideMap stemdict> = $r17;

     label5:
        goto label7;

     label6:
        $r21 := @caughtexception;

        $r22 = new java.lang.RuntimeException;

        specialinvoke $r22.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("can not build stem dict", $r21);

        throw $r22;

     label7:
        return;

        catch java.io.IOException from label4 to label5 with label6;
    }

    protected org.apache.lucene.analysis.Analyzer$TokenStreamComponents createComponents(java.lang.String, java.io.Reader)
    {
        org.apache.lucene.analysis.core.LowerCaseFilter $r21;
        org.apache.lucene.analysis.miscellaneous.SetKeywordMarkerFilter $r15, $r33;
        boolean $z0, $z1, $z2;
        org.tartarus.snowball.ext.DutchStemmer $r29;
        java.io.Reader r4;
        org.apache.lucene.analysis.core.StopFilter $r8, $r23;
        org.apache.lucene.analysis.Analyzer$TokenStreamComponents $r14, $r30;
        org.apache.lucene.analysis.util.CharArraySet $r9, $r11, $r16, $r24, $r26, $r34;
        org.apache.lucene.analysis.TokenFilter r36, r37;
        org.apache.lucene.analysis.util.CharArrayMap $r13;
        org.apache.lucene.analysis.standard.StandardTokenizer $r3, $r17;
        org.apache.lucene.analysis.miscellaneous.StemmerOverrideFilter$StemmerOverrideMap $r27, $r32;
        org.apache.lucene.analysis.snowball.SnowballFilter $r28;
        org.apache.lucene.analysis.nl.DutchAnalyzer r0;
        java.lang.String r35;
        org.apache.lucene.analysis.miscellaneous.StemmerOverrideFilter $r31;
        org.apache.lucene.analysis.nl.DutchStemFilter $r12;
        org.apache.lucene.util.Version $r1, $r2, $r5, $r7, $r10, $r18, $r20, $r22, $r25;
        org.apache.lucene.analysis.standard.StandardFilter $r6, $r19;

        r0 := @this: org.apache.lucene.analysis.nl.DutchAnalyzer;

        r35 := @parameter0: java.lang.String;

        r4 := @parameter1: java.io.Reader;

        $r2 = r0.<org.apache.lucene.analysis.nl.DutchAnalyzer: org.apache.lucene.util.Version matchVersion>;

        $r1 = <org.apache.lucene.util.Version: org.apache.lucene.util.Version LUCENE_31>;

        $z0 = virtualinvoke $r2.<org.apache.lucene.util.Version: boolean onOrAfter(org.apache.lucene.util.Version)>($r1);

        if $z0 == 0 goto label3;

        $r17 = new org.apache.lucene.analysis.standard.StandardTokenizer;

        $r18 = r0.<org.apache.lucene.analysis.nl.DutchAnalyzer: org.apache.lucene.util.Version matchVersion>;

        specialinvoke $r17.<org.apache.lucene.analysis.standard.StandardTokenizer: void <init>(org.apache.lucene.util.Version,java.io.Reader)>($r18, r4);

        $r19 = new org.apache.lucene.analysis.standard.StandardFilter;

        $r20 = r0.<org.apache.lucene.analysis.nl.DutchAnalyzer: org.apache.lucene.util.Version matchVersion>;

        specialinvoke $r19.<org.apache.lucene.analysis.standard.StandardFilter: void <init>(org.apache.lucene.util.Version,org.apache.lucene.analysis.TokenStream)>($r20, $r17);

        $r21 = new org.apache.lucene.analysis.core.LowerCaseFilter;

        $r22 = r0.<org.apache.lucene.analysis.nl.DutchAnalyzer: org.apache.lucene.util.Version matchVersion>;

        specialinvoke $r21.<org.apache.lucene.analysis.core.LowerCaseFilter: void <init>(org.apache.lucene.util.Version,org.apache.lucene.analysis.TokenStream)>($r22, $r19);

        $r23 = new org.apache.lucene.analysis.core.StopFilter;

        $r25 = r0.<org.apache.lucene.analysis.nl.DutchAnalyzer: org.apache.lucene.util.Version matchVersion>;

        $r24 = r0.<org.apache.lucene.analysis.nl.DutchAnalyzer: org.apache.lucene.analysis.util.CharArraySet stoptable>;

        specialinvoke $r23.<org.apache.lucene.analysis.core.StopFilter: void <init>(org.apache.lucene.util.Version,org.apache.lucene.analysis.TokenStream,org.apache.lucene.analysis.util.CharArraySet)>($r25, $r21, $r24);

        r36 = $r23;

        $r26 = r0.<org.apache.lucene.analysis.nl.DutchAnalyzer: org.apache.lucene.analysis.util.CharArraySet excltable>;

        $z2 = virtualinvoke $r26.<org.apache.lucene.analysis.util.CharArraySet: boolean isEmpty()>();

        if $z2 != 0 goto label1;

        $r33 = new org.apache.lucene.analysis.miscellaneous.SetKeywordMarkerFilter;

        $r34 = r0.<org.apache.lucene.analysis.nl.DutchAnalyzer: org.apache.lucene.analysis.util.CharArraySet excltable>;

        specialinvoke $r33.<org.apache.lucene.analysis.miscellaneous.SetKeywordMarkerFilter: void <init>(org.apache.lucene.analysis.TokenStream,org.apache.lucene.analysis.util.CharArraySet)>($r23, $r34);

        r36 = $r33;

     label1:
        $r27 = r0.<org.apache.lucene.analysis.nl.DutchAnalyzer: org.apache.lucene.analysis.miscellaneous.StemmerOverrideFilter$StemmerOverrideMap stemdict>;

        if $r27 == null goto label2;

        $r31 = new org.apache.lucene.analysis.miscellaneous.StemmerOverrideFilter;

        $r32 = r0.<org.apache.lucene.analysis.nl.DutchAnalyzer: org.apache.lucene.analysis.miscellaneous.StemmerOverrideFilter$StemmerOverrideMap stemdict>;

        specialinvoke $r31.<org.apache.lucene.analysis.miscellaneous.StemmerOverrideFilter: void <init>(org.apache.lucene.analysis.TokenStream,org.apache.lucene.analysis.miscellaneous.StemmerOverrideFilter$StemmerOverrideMap)>(r36, $r32);

        r36 = $r31;

     label2:
        $r28 = new org.apache.lucene.analysis.snowball.SnowballFilter;

        $r29 = new org.tartarus.snowball.ext.DutchStemmer;

        specialinvoke $r29.<org.tartarus.snowball.ext.DutchStemmer: void <init>()>();

        specialinvoke $r28.<org.apache.lucene.analysis.snowball.SnowballFilter: void <init>(org.apache.lucene.analysis.TokenStream,org.tartarus.snowball.SnowballProgram)>(r36, $r29);

        $r30 = new org.apache.lucene.analysis.Analyzer$TokenStreamComponents;

        specialinvoke $r30.<org.apache.lucene.analysis.Analyzer$TokenStreamComponents: void <init>(org.apache.lucene.analysis.Tokenizer,org.apache.lucene.analysis.TokenStream)>($r17, $r28);

        return $r30;

     label3:
        $r3 = new org.apache.lucene.analysis.standard.StandardTokenizer;

        $r5 = r0.<org.apache.lucene.analysis.nl.DutchAnalyzer: org.apache.lucene.util.Version matchVersion>;

        specialinvoke $r3.<org.apache.lucene.analysis.standard.StandardTokenizer: void <init>(org.apache.lucene.util.Version,java.io.Reader)>($r5, r4);

        $r6 = new org.apache.lucene.analysis.standard.StandardFilter;

        $r7 = r0.<org.apache.lucene.analysis.nl.DutchAnalyzer: org.apache.lucene.util.Version matchVersion>;

        specialinvoke $r6.<org.apache.lucene.analysis.standard.StandardFilter: void <init>(org.apache.lucene.util.Version,org.apache.lucene.analysis.TokenStream)>($r7, $r3);

        $r8 = new org.apache.lucene.analysis.core.StopFilter;

        $r10 = r0.<org.apache.lucene.analysis.nl.DutchAnalyzer: org.apache.lucene.util.Version matchVersion>;

        $r9 = r0.<org.apache.lucene.analysis.nl.DutchAnalyzer: org.apache.lucene.analysis.util.CharArraySet stoptable>;

        specialinvoke $r8.<org.apache.lucene.analysis.core.StopFilter: void <init>(org.apache.lucene.util.Version,org.apache.lucene.analysis.TokenStream,org.apache.lucene.analysis.util.CharArraySet)>($r10, $r6, $r9);

        r37 = $r8;

        $r11 = r0.<org.apache.lucene.analysis.nl.DutchAnalyzer: org.apache.lucene.analysis.util.CharArraySet excltable>;

        $z1 = virtualinvoke $r11.<org.apache.lucene.analysis.util.CharArraySet: boolean isEmpty()>();

        if $z1 != 0 goto label4;

        $r15 = new org.apache.lucene.analysis.miscellaneous.SetKeywordMarkerFilter;

        $r16 = r0.<org.apache.lucene.analysis.nl.DutchAnalyzer: org.apache.lucene.analysis.util.CharArraySet excltable>;

        specialinvoke $r15.<org.apache.lucene.analysis.miscellaneous.SetKeywordMarkerFilter: void <init>(org.apache.lucene.analysis.TokenStream,org.apache.lucene.analysis.util.CharArraySet)>($r8, $r16);

        r37 = $r15;

     label4:
        $r12 = new org.apache.lucene.analysis.nl.DutchStemFilter;

        $r13 = r0.<org.apache.lucene.analysis.nl.DutchAnalyzer: org.apache.lucene.analysis.util.CharArrayMap origStemdict>;

        specialinvoke $r12.<org.apache.lucene.analysis.nl.DutchStemFilter: void <init>(org.apache.lucene.analysis.TokenStream,java.util.Map)>(r37, $r13);

        $r14 = new org.apache.lucene.analysis.Analyzer$TokenStreamComponents;

        specialinvoke $r14.<org.apache.lucene.analysis.Analyzer$TokenStreamComponents: void <init>(org.apache.lucene.analysis.Tokenizer,org.apache.lucene.analysis.TokenStream)>($r3, $r12);

        return $r14;
    }

    public static void <clinit>()
    {
        <org.apache.lucene.analysis.nl.DutchAnalyzer: java.lang.String DEFAULT_STOPWORD_FILE> = "dutch_stop.txt";

        return;
    }
}
