public class org.apache.lucene.queryparser.flexible.standard.nodes.NumericQueryNode extends org.apache.lucene.queryparser.flexible.core.nodes.QueryNodeImpl implements org.apache.lucene.queryparser.flexible.core.nodes.FieldValuePairQueryNode
{
    private java.text.NumberFormat numberFormat;
    private java.lang.CharSequence field;
    private java.lang.Number value;

    public void <init>(java.lang.CharSequence, java.lang.Number, java.text.NumberFormat)
    {
        java.lang.CharSequence r2;
        java.lang.Number r3;
        org.apache.lucene.queryparser.flexible.standard.nodes.NumericQueryNode r0;
        java.text.NumberFormat r1;

        r0 := @this: org.apache.lucene.queryparser.flexible.standard.nodes.NumericQueryNode;

        r2 := @parameter0: java.lang.CharSequence;

        r3 := @parameter1: java.lang.Number;

        r1 := @parameter2: java.text.NumberFormat;

        specialinvoke r0.<org.apache.lucene.queryparser.flexible.core.nodes.QueryNodeImpl: void <init>()>();

        virtualinvoke r0.<org.apache.lucene.queryparser.flexible.standard.nodes.NumericQueryNode: void setNumberFormat(java.text.NumberFormat)>(r1);

        virtualinvoke r0.<org.apache.lucene.queryparser.flexible.standard.nodes.NumericQueryNode: void setField(java.lang.CharSequence)>(r2);

        virtualinvoke r0.<org.apache.lucene.queryparser.flexible.standard.nodes.NumericQueryNode: void setValue(java.lang.Number)>(r3);

        return;
    }

    public java.lang.CharSequence getField()
    {
        java.lang.CharSequence $r1;
        org.apache.lucene.queryparser.flexible.standard.nodes.NumericQueryNode r0;

        r0 := @this: org.apache.lucene.queryparser.flexible.standard.nodes.NumericQueryNode;

        $r1 = r0.<org.apache.lucene.queryparser.flexible.standard.nodes.NumericQueryNode: java.lang.CharSequence field>;

        return $r1;
    }

    public void setField(java.lang.CharSequence)
    {
        java.lang.CharSequence r1;
        org.apache.lucene.queryparser.flexible.standard.nodes.NumericQueryNode r0;

        r0 := @this: org.apache.lucene.queryparser.flexible.standard.nodes.NumericQueryNode;

        r1 := @parameter0: java.lang.CharSequence;

        r0.<org.apache.lucene.queryparser.flexible.standard.nodes.NumericQueryNode: java.lang.CharSequence field> = r1;

        return;
    }

    protected java.lang.CharSequence getTermEscaped(org.apache.lucene.queryparser.flexible.core.parser.EscapeQuerySyntax)
    {
        java.lang.CharSequence $r7;
        org.apache.lucene.queryparser.flexible.core.parser.EscapeQuerySyntax r0;
        org.apache.lucene.queryparser.flexible.core.parser.EscapeQuerySyntax$Type $r5;
        org.apache.lucene.queryparser.flexible.standard.nodes.NumericQueryNode r1;
        java.text.NumberFormat $r3;
        java.util.Locale $r6;
        java.lang.String $r4;
        java.lang.Number $r2;

        r1 := @this: org.apache.lucene.queryparser.flexible.standard.nodes.NumericQueryNode;

        r0 := @parameter0: org.apache.lucene.queryparser.flexible.core.parser.EscapeQuerySyntax;

        $r3 = r1.<org.apache.lucene.queryparser.flexible.standard.nodes.NumericQueryNode: java.text.NumberFormat numberFormat>;

        $r2 = r1.<org.apache.lucene.queryparser.flexible.standard.nodes.NumericQueryNode: java.lang.Number value>;

        $r4 = virtualinvoke $r3.<java.text.NumberFormat: java.lang.String format(java.lang.Object)>($r2);

        $r6 = <java.util.Locale: java.util.Locale ROOT>;

        $r5 = <org.apache.lucene.queryparser.flexible.core.parser.EscapeQuerySyntax$Type: org.apache.lucene.queryparser.flexible.core.parser.EscapeQuerySyntax$Type NORMAL>;

        $r7 = interfaceinvoke r0.<org.apache.lucene.queryparser.flexible.core.parser.EscapeQuerySyntax: java.lang.CharSequence escape(java.lang.CharSequence,java.util.Locale,org.apache.lucene.queryparser.flexible.core.parser.EscapeQuerySyntax$Type)>($r4, $r6, $r5);

        return $r7;
    }

    public java.lang.CharSequence toQueryString(org.apache.lucene.queryparser.flexible.core.parser.EscapeQuerySyntax)
    {
        java.lang.CharSequence $r1, $r3, $r7, $r10;
        org.apache.lucene.queryparser.flexible.core.parser.EscapeQuerySyntax r6;
        org.apache.lucene.queryparser.flexible.standard.nodes.NumericQueryNode r0;
        java.lang.StringBuilder $r2, $r4, $r5, $r8;
        java.lang.String $r9;
        boolean $z0;

        r0 := @this: org.apache.lucene.queryparser.flexible.standard.nodes.NumericQueryNode;

        r6 := @parameter0: org.apache.lucene.queryparser.flexible.core.parser.EscapeQuerySyntax;

        $r1 = r0.<org.apache.lucene.queryparser.flexible.standard.nodes.NumericQueryNode: java.lang.CharSequence field>;

        $z0 = virtualinvoke r0.<org.apache.lucene.queryparser.flexible.standard.nodes.NumericQueryNode: boolean isDefaultField(java.lang.CharSequence)>($r1);

        if $z0 == 0 goto label1;

        $r10 = virtualinvoke r0.<org.apache.lucene.queryparser.flexible.standard.nodes.NumericQueryNode: java.lang.CharSequence getTermEscaped(org.apache.lucene.queryparser.flexible.core.parser.EscapeQuerySyntax)>(r6);

        return $r10;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<org.apache.lucene.queryparser.flexible.standard.nodes.NumericQueryNode: java.lang.CharSequence field>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r7 = virtualinvoke r0.<org.apache.lucene.queryparser.flexible.standard.nodes.NumericQueryNode: java.lang.CharSequence getTermEscaped(org.apache.lucene.queryparser.flexible.core.parser.EscapeQuerySyntax)>(r6);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public void setNumberFormat(java.text.NumberFormat)
    {
        org.apache.lucene.queryparser.flexible.standard.nodes.NumericQueryNode r0;
        java.text.NumberFormat r1;

        r0 := @this: org.apache.lucene.queryparser.flexible.standard.nodes.NumericQueryNode;

        r1 := @parameter0: java.text.NumberFormat;

        r0.<org.apache.lucene.queryparser.flexible.standard.nodes.NumericQueryNode: java.text.NumberFormat numberFormat> = r1;

        return;
    }

    public java.text.NumberFormat getNumberFormat()
    {
        org.apache.lucene.queryparser.flexible.standard.nodes.NumericQueryNode r0;
        java.text.NumberFormat $r1;

        r0 := @this: org.apache.lucene.queryparser.flexible.standard.nodes.NumericQueryNode;

        $r1 = r0.<org.apache.lucene.queryparser.flexible.standard.nodes.NumericQueryNode: java.text.NumberFormat numberFormat>;

        return $r1;
    }

    public java.lang.Number getValue()
    {
        java.lang.Number $r1;
        org.apache.lucene.queryparser.flexible.standard.nodes.NumericQueryNode r0;

        r0 := @this: org.apache.lucene.queryparser.flexible.standard.nodes.NumericQueryNode;

        $r1 = r0.<org.apache.lucene.queryparser.flexible.standard.nodes.NumericQueryNode: java.lang.Number value>;

        return $r1;
    }

    public void setValue(java.lang.Number)
    {
        java.lang.Number r1;
        org.apache.lucene.queryparser.flexible.standard.nodes.NumericQueryNode r0;

        r0 := @this: org.apache.lucene.queryparser.flexible.standard.nodes.NumericQueryNode;

        r1 := @parameter0: java.lang.Number;

        r0.<org.apache.lucene.queryparser.flexible.standard.nodes.NumericQueryNode: java.lang.Number value> = r1;

        return;
    }

    public java.lang.String toString()
    {
        java.lang.CharSequence $r3;
        org.apache.lucene.queryparser.flexible.standard.nodes.NumericQueryNode r2;
        java.text.NumberFormat $r7;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r9, $r10;
        java.lang.String $r8, $r11;
        java.lang.Number $r6;

        r2 := @this: org.apache.lucene.queryparser.flexible.standard.nodes.NumericQueryNode;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<numeric field=\'");

        $r3 = r2.<org.apache.lucene.queryparser.flexible.standard.nodes.NumericQueryNode: java.lang.CharSequence field>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' number=\'");

        $r7 = r2.<org.apache.lucene.queryparser.flexible.standard.nodes.NumericQueryNode: java.text.NumberFormat numberFormat>;

        $r6 = r2.<org.apache.lucene.queryparser.flexible.standard.nodes.NumericQueryNode: java.lang.Number value>;

        $r8 = virtualinvoke $r7.<java.text.NumberFormat: java.lang.String format(java.lang.Object)>($r6);

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'/>");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }

    public volatile java.lang.Object getValue()
    {
        java.lang.Number $r1;
        org.apache.lucene.queryparser.flexible.standard.nodes.NumericQueryNode r0;

        r0 := @this: org.apache.lucene.queryparser.flexible.standard.nodes.NumericQueryNode;

        $r1 = virtualinvoke r0.<org.apache.lucene.queryparser.flexible.standard.nodes.NumericQueryNode: java.lang.Number getValue()>();

        return $r1;
    }

    public volatile void setValue(java.lang.Object)
    {
        java.lang.Object r1;
        java.lang.Number $r2;
        org.apache.lucene.queryparser.flexible.standard.nodes.NumericQueryNode r0;

        r0 := @this: org.apache.lucene.queryparser.flexible.standard.nodes.NumericQueryNode;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Number) r1;

        virtualinvoke r0.<org.apache.lucene.queryparser.flexible.standard.nodes.NumericQueryNode: void setValue(java.lang.Number)>($r2);

        return;
    }
}
