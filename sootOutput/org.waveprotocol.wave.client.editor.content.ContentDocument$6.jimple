class org.waveprotocol.wave.client.editor.content.ContentDocument$6 extends java.lang.Object implements org.waveprotocol.wave.model.document.indexed.AnnotationSetListener
{
    final org.waveprotocol.wave.client.editor.content.ContentDocument this$0;

    void <init>(org.waveprotocol.wave.client.editor.content.ContentDocument)
    {
        org.waveprotocol.wave.client.editor.content.ContentDocument r1;
        org.waveprotocol.wave.client.editor.content.ContentDocument$6 r0;

        r0 := @this: org.waveprotocol.wave.client.editor.content.ContentDocument$6;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentDocument;

        r0.<org.waveprotocol.wave.client.editor.content.ContentDocument$6: org.waveprotocol.wave.client.editor.content.ContentDocument this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onAnnotationChange(int, int, java.lang.String, java.lang.Object)
    {
        java.lang.Throwable $r11;
        org.waveprotocol.wave.common.logging.Logger $r14;
        org.waveprotocol.wave.client.editor.content.ContentDocument $r1, $r7;
        org.waveprotocol.wave.model.document.util.AnnotationRegistry $r3;
        org.waveprotocol.wave.client.editor.content.ClientDocumentContext $r9;
        int i0, i1;
        java.lang.String r4;
        boolean $z0;
        java.util.Iterator $r5;
        java.lang.Exception $r12;
        org.waveprotocol.wave.common.logging.LoggerBundle $r13;
        org.waveprotocol.wave.client.editor.content.ContentDocument$6 r0;
        org.waveprotocol.wave.model.document.AnnotationMutationHandler $r8;
        java.lang.Object $r6, r10;
        org.waveprotocol.wave.client.editor.content.Registries $r2;

        r0 := @this: org.waveprotocol.wave.client.editor.content.ContentDocument$6;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r4 := @parameter2: java.lang.String;

        r10 := @parameter3: java.lang.Object;

        staticinvoke <org.waveprotocol.wave.client.editor.EditorStaticDeps: void startIgnoreMutations()>();

     label1:
        $r1 = r0.<org.waveprotocol.wave.client.editor.content.ContentDocument$6: org.waveprotocol.wave.client.editor.content.ContentDocument this$0>;

        $r2 = staticinvoke <org.waveprotocol.wave.client.editor.content.ContentDocument: org.waveprotocol.wave.client.editor.content.Registries access$800(org.waveprotocol.wave.client.editor.content.ContentDocument)>($r1);

        $r3 = interfaceinvoke $r2.<org.waveprotocol.wave.client.editor.content.Registries: org.waveprotocol.wave.model.document.util.AnnotationRegistry getAnnotationHandlerRegistry()>();

        $r5 = interfaceinvoke $r3.<org.waveprotocol.wave.model.document.util.AnnotationRegistry: java.util.Iterator getHandlers(java.lang.String)>(r4);

     label2:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

     label3:
        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (org.waveprotocol.wave.model.document.AnnotationMutationHandler) $r6;

        $r7 = r0.<org.waveprotocol.wave.client.editor.content.ContentDocument$6: org.waveprotocol.wave.client.editor.content.ContentDocument this$0>;

        $r9 = virtualinvoke $r7.<org.waveprotocol.wave.client.editor.content.ContentDocument: org.waveprotocol.wave.client.editor.content.ClientDocumentContext getContext()>();

        interfaceinvoke $r8.<org.waveprotocol.wave.model.document.AnnotationMutationHandler: void handleAnnotationChange(org.waveprotocol.wave.model.document.util.DocumentContext,int,int,java.lang.String,java.lang.Object)>($r9, i0, i1, r4, r10);

     label4:
        goto label2;

     label5:
        $r12 := @caughtexception;

        $r13 = <org.waveprotocol.wave.client.editor.EditorStaticDeps: org.waveprotocol.wave.common.logging.LoggerBundle logger>;

        $r14 = interfaceinvoke $r13.<org.waveprotocol.wave.common.logging.LoggerBundle: org.waveprotocol.wave.common.logging.Logger error()>();

        interfaceinvoke $r14.<org.waveprotocol.wave.common.logging.Logger: void log(java.lang.String,java.lang.Throwable)>("Exception from annotation change handler", $r12);

        goto label2;

     label6:
        staticinvoke <org.waveprotocol.wave.client.editor.EditorStaticDeps: void endIgnoreMutations()>();

        goto label9;

     label7:
        $r11 := @caughtexception;

     label8:
        staticinvoke <org.waveprotocol.wave.client.editor.EditorStaticDeps: void endIgnoreMutations()>();

        throw $r11;

     label9:
        return;

        catch java.lang.Exception from label3 to label4 with label5;
        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }
}
