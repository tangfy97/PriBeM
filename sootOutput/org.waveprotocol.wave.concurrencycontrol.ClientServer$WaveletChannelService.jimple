public abstract class org.waveprotocol.wave.concurrencycontrol.ClientServer$WaveletChannelService extends java.lang.Object implements com.google.protobuf.Service
{

    protected void <init>()
    {
        org.waveprotocol.wave.concurrencycontrol.ClientServer$WaveletChannelService r0;

        r0 := @this: org.waveprotocol.wave.concurrencycontrol.ClientServer$WaveletChannelService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.google.protobuf.Service newReflectiveService(org.waveprotocol.wave.concurrencycontrol.ClientServer$WaveletChannelService$Interface)
    {
        org.waveprotocol.wave.concurrencycontrol.ClientServer$WaveletChannelService$Interface r1;
        org.waveprotocol.wave.concurrencycontrol.ClientServer$WaveletChannelService$1 $r0;

        r1 := @parameter0: org.waveprotocol.wave.concurrencycontrol.ClientServer$WaveletChannelService$Interface;

        $r0 = new org.waveprotocol.wave.concurrencycontrol.ClientServer$WaveletChannelService$1;

        specialinvoke $r0.<org.waveprotocol.wave.concurrencycontrol.ClientServer$WaveletChannelService$1: void <init>(org.waveprotocol.wave.concurrencycontrol.ClientServer$WaveletChannelService$Interface)>(r1);

        return $r0;
    }

    public static com.google.protobuf.BlockingService newReflectiveBlockingService(org.waveprotocol.wave.concurrencycontrol.ClientServer$WaveletChannelService$BlockingInterface)
    {
        org.waveprotocol.wave.concurrencycontrol.ClientServer$WaveletChannelService$BlockingInterface r1;
        org.waveprotocol.wave.concurrencycontrol.ClientServer$WaveletChannelService$2 $r0;

        r1 := @parameter0: org.waveprotocol.wave.concurrencycontrol.ClientServer$WaveletChannelService$BlockingInterface;

        $r0 = new org.waveprotocol.wave.concurrencycontrol.ClientServer$WaveletChannelService$2;

        specialinvoke $r0.<org.waveprotocol.wave.concurrencycontrol.ClientServer$WaveletChannelService$2: void <init>(org.waveprotocol.wave.concurrencycontrol.ClientServer$WaveletChannelService$BlockingInterface)>(r1);

        return $r0;
    }

    public abstract void open(com.google.protobuf.RpcController, org.waveprotocol.wave.concurrencycontrol.ClientServer$OpenWaveletChannelRequest, com.google.protobuf.RpcCallback);

    public abstract void close(com.google.protobuf.RpcController, org.waveprotocol.wave.concurrencycontrol.ClientServer$CloseWaveletChannelRequest, com.google.protobuf.RpcCallback);

    public static final com.google.protobuf.Descriptors$ServiceDescriptor getDescriptor()
    {
        java.util.List $r1;
        java.lang.Object $r2;
        com.google.protobuf.Descriptors$ServiceDescriptor $r3;
        com.google.protobuf.Descriptors$FileDescriptor $r0;

        $r0 = staticinvoke <org.waveprotocol.wave.concurrencycontrol.ClientServer: com.google.protobuf.Descriptors$FileDescriptor getDescriptor()>();

        $r1 = virtualinvoke $r0.<com.google.protobuf.Descriptors$FileDescriptor: java.util.List getServices()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(1);

        $r3 = (com.google.protobuf.Descriptors$ServiceDescriptor) $r2;

        return $r3;
    }

    public final com.google.protobuf.Descriptors$ServiceDescriptor getDescriptorForType()
    {
        org.waveprotocol.wave.concurrencycontrol.ClientServer$WaveletChannelService r1;
        com.google.protobuf.Descriptors$ServiceDescriptor $r0;

        r1 := @this: org.waveprotocol.wave.concurrencycontrol.ClientServer$WaveletChannelService;

        $r0 = staticinvoke <org.waveprotocol.wave.concurrencycontrol.ClientServer$WaveletChannelService: com.google.protobuf.Descriptors$ServiceDescriptor getDescriptor()>();

        return $r0;
    }

    public final void callMethod(com.google.protobuf.Descriptors$MethodDescriptor, com.google.protobuf.RpcController, com.google.protobuf.Message, com.google.protobuf.RpcCallback)
    {
        org.waveprotocol.wave.concurrencycontrol.ClientServer$OpenWaveletChannelRequest $r9;
        com.google.protobuf.Descriptors$MethodDescriptor r0;
        com.google.protobuf.RpcController r4;
        java.lang.AssertionError $r11;
        java.lang.IllegalArgumentException $r12;
        com.google.protobuf.RpcCallback r6, $r8, $r10;
        org.waveprotocol.wave.concurrencycontrol.ClientServer$CloseWaveletChannelRequest $r7;
        int $i0;
        com.google.protobuf.Message r5;
        org.waveprotocol.wave.concurrencycontrol.ClientServer$WaveletChannelService r3;
        com.google.protobuf.Descriptors$ServiceDescriptor $r1, $r2;

        r3 := @this: org.waveprotocol.wave.concurrencycontrol.ClientServer$WaveletChannelService;

        r0 := @parameter0: com.google.protobuf.Descriptors$MethodDescriptor;

        r4 := @parameter1: com.google.protobuf.RpcController;

        r5 := @parameter2: com.google.protobuf.Message;

        r6 := @parameter3: com.google.protobuf.RpcCallback;

        $r1 = virtualinvoke r0.<com.google.protobuf.Descriptors$MethodDescriptor: com.google.protobuf.Descriptors$ServiceDescriptor getService()>();

        $r2 = staticinvoke <org.waveprotocol.wave.concurrencycontrol.ClientServer$WaveletChannelService: com.google.protobuf.Descriptors$ServiceDescriptor getDescriptor()>();

        if $r1 == $r2 goto label1;

        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Service.callMethod() given method descriptor for wrong service type.");

        throw $r12;

     label1:
        $i0 = virtualinvoke r0.<com.google.protobuf.Descriptors$MethodDescriptor: int getIndex()>();

        lookupswitch($i0)
        {
            case 0: goto label2;
            case 1: goto label3;
            default: goto label4;
        };

     label2:
        $r9 = (org.waveprotocol.wave.concurrencycontrol.ClientServer$OpenWaveletChannelRequest) r5;

        $r10 = staticinvoke <com.google.protobuf.RpcUtil: com.google.protobuf.RpcCallback specializeCallback(com.google.protobuf.RpcCallback)>(r6);

        virtualinvoke r3.<org.waveprotocol.wave.concurrencycontrol.ClientServer$WaveletChannelService: void open(com.google.protobuf.RpcController,org.waveprotocol.wave.concurrencycontrol.ClientServer$OpenWaveletChannelRequest,com.google.protobuf.RpcCallback)>(r4, $r9, $r10);

        return;

     label3:
        $r7 = (org.waveprotocol.wave.concurrencycontrol.ClientServer$CloseWaveletChannelRequest) r5;

        $r8 = staticinvoke <com.google.protobuf.RpcUtil: com.google.protobuf.RpcCallback specializeCallback(com.google.protobuf.RpcCallback)>(r6);

        virtualinvoke r3.<org.waveprotocol.wave.concurrencycontrol.ClientServer$WaveletChannelService: void close(com.google.protobuf.RpcController,org.waveprotocol.wave.concurrencycontrol.ClientServer$CloseWaveletChannelRequest,com.google.protobuf.RpcCallback)>(r4, $r7, $r8);

        return;

     label4:
        $r11 = new java.lang.AssertionError;

        specialinvoke $r11.<java.lang.AssertionError: void <init>(java.lang.Object)>("Can\'t get here.");

        throw $r11;
    }

    public final com.google.protobuf.Message getRequestPrototype(com.google.protobuf.Descriptors$MethodDescriptor)
    {
        org.waveprotocol.wave.concurrencycontrol.ClientServer$OpenWaveletChannelRequest $r4;
        com.google.protobuf.Descriptors$MethodDescriptor r0;
        java.lang.AssertionError $r5;
        java.lang.IllegalArgumentException $r6;
        org.waveprotocol.wave.concurrencycontrol.ClientServer$CloseWaveletChannelRequest $r3;
        int $i0;
        org.waveprotocol.wave.concurrencycontrol.ClientServer$WaveletChannelService r7;
        com.google.protobuf.Descriptors$ServiceDescriptor $r1, $r2;

        r7 := @this: org.waveprotocol.wave.concurrencycontrol.ClientServer$WaveletChannelService;

        r0 := @parameter0: com.google.protobuf.Descriptors$MethodDescriptor;

        $r1 = virtualinvoke r0.<com.google.protobuf.Descriptors$MethodDescriptor: com.google.protobuf.Descriptors$ServiceDescriptor getService()>();

        $r2 = staticinvoke <org.waveprotocol.wave.concurrencycontrol.ClientServer$WaveletChannelService: com.google.protobuf.Descriptors$ServiceDescriptor getDescriptor()>();

        if $r1 == $r2 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Service.getRequestPrototype() given method descriptor for wrong service type.");

        throw $r6;

     label1:
        $i0 = virtualinvoke r0.<com.google.protobuf.Descriptors$MethodDescriptor: int getIndex()>();

        lookupswitch($i0)
        {
            case 0: goto label2;
            case 1: goto label3;
            default: goto label4;
        };

     label2:
        $r4 = staticinvoke <org.waveprotocol.wave.concurrencycontrol.ClientServer$OpenWaveletChannelRequest: org.waveprotocol.wave.concurrencycontrol.ClientServer$OpenWaveletChannelRequest getDefaultInstance()>();

        return $r4;

     label3:
        $r3 = staticinvoke <org.waveprotocol.wave.concurrencycontrol.ClientServer$CloseWaveletChannelRequest: org.waveprotocol.wave.concurrencycontrol.ClientServer$CloseWaveletChannelRequest getDefaultInstance()>();

        return $r3;

     label4:
        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>(java.lang.Object)>("Can\'t get here.");

        throw $r5;
    }

    public final com.google.protobuf.Message getResponsePrototype(com.google.protobuf.Descriptors$MethodDescriptor)
    {
        com.google.protobuf.Descriptors$MethodDescriptor r0;
        java.lang.AssertionError $r5;
        java.lang.IllegalArgumentException $r6;
        org.waveprotocol.wave.concurrencycontrol.ClientServer$EmptyResponse $r3;
        int $i0;
        org.waveprotocol.wave.concurrencycontrol.ClientServer$WaveletChannelService r7;
        com.google.protobuf.Descriptors$ServiceDescriptor $r1, $r2;
        org.waveprotocol.wave.concurrencycontrol.ClientServer$OpenWaveletChannelStream $r4;

        r7 := @this: org.waveprotocol.wave.concurrencycontrol.ClientServer$WaveletChannelService;

        r0 := @parameter0: com.google.protobuf.Descriptors$MethodDescriptor;

        $r1 = virtualinvoke r0.<com.google.protobuf.Descriptors$MethodDescriptor: com.google.protobuf.Descriptors$ServiceDescriptor getService()>();

        $r2 = staticinvoke <org.waveprotocol.wave.concurrencycontrol.ClientServer$WaveletChannelService: com.google.protobuf.Descriptors$ServiceDescriptor getDescriptor()>();

        if $r1 == $r2 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Service.getResponsePrototype() given method descriptor for wrong service type.");

        throw $r6;

     label1:
        $i0 = virtualinvoke r0.<com.google.protobuf.Descriptors$MethodDescriptor: int getIndex()>();

        lookupswitch($i0)
        {
            case 0: goto label2;
            case 1: goto label3;
            default: goto label4;
        };

     label2:
        $r4 = staticinvoke <org.waveprotocol.wave.concurrencycontrol.ClientServer$OpenWaveletChannelStream: org.waveprotocol.wave.concurrencycontrol.ClientServer$OpenWaveletChannelStream getDefaultInstance()>();

        return $r4;

     label3:
        $r3 = staticinvoke <org.waveprotocol.wave.concurrencycontrol.ClientServer$EmptyResponse: org.waveprotocol.wave.concurrencycontrol.ClientServer$EmptyResponse getDefaultInstance()>();

        return $r3;

     label4:
        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>(java.lang.Object)>("Can\'t get here.");

        throw $r5;
    }

    public static org.waveprotocol.wave.concurrencycontrol.ClientServer$WaveletChannelService$Stub newStub(com.google.protobuf.RpcChannel)
    {
        com.google.protobuf.RpcChannel r1;
        org.waveprotocol.wave.concurrencycontrol.ClientServer$WaveletChannelService$Stub $r0;

        r1 := @parameter0: com.google.protobuf.RpcChannel;

        $r0 = new org.waveprotocol.wave.concurrencycontrol.ClientServer$WaveletChannelService$Stub;

        specialinvoke $r0.<org.waveprotocol.wave.concurrencycontrol.ClientServer$WaveletChannelService$Stub: void <init>(com.google.protobuf.RpcChannel,org.waveprotocol.wave.concurrencycontrol.ClientServer$1)>(r1, null);

        return $r0;
    }

    public static org.waveprotocol.wave.concurrencycontrol.ClientServer$WaveletChannelService$BlockingInterface newBlockingStub(com.google.protobuf.BlockingRpcChannel)
    {
        org.waveprotocol.wave.concurrencycontrol.ClientServer$WaveletChannelService$BlockingStub $r0;
        com.google.protobuf.BlockingRpcChannel r1;

        r1 := @parameter0: com.google.protobuf.BlockingRpcChannel;

        $r0 = new org.waveprotocol.wave.concurrencycontrol.ClientServer$WaveletChannelService$BlockingStub;

        specialinvoke $r0.<org.waveprotocol.wave.concurrencycontrol.ClientServer$WaveletChannelService$BlockingStub: void <init>(com.google.protobuf.BlockingRpcChannel,org.waveprotocol.wave.concurrencycontrol.ClientServer$1)>(r1, null);

        return $r0;
    }
}
