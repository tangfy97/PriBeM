public final class com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext extends com.sun.xml.bind.v2.runtime.Coordinator implements javax.xml.namespace.NamespaceContext, javax.xml.bind.ValidationEventHandler, org.xml.sax.ErrorHandler, com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor, com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor$TextPredictor
{
    private final com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State root;
    private com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State current;
    private static final com.sun.xml.bind.v2.runtime.unmarshaller.LocatorEx DUMMY_INSTANCE;
    private com.sun.xml.bind.v2.runtime.unmarshaller.LocatorEx locator;
    private java.lang.Object result;
    private com.sun.xml.bind.v2.runtime.JaxBeanInfo expectedType;
    private com.sun.xml.bind.IDResolver idResolver;
    private boolean isUnmarshalInProgress;
    private boolean aborted;
    public final com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl parent;
    private final com.sun.xml.bind.v2.runtime.AssociationMap assoc;
    private boolean isInplaceMode;
    private com.sun.xml.bind.unmarshaller.InfosetScanner scanner;
    private java.lang.Object currentElement;
    private javax.xml.namespace.NamespaceContext environmentNamespaceContext;
    public com.sun.xml.bind.api.ClassResolver classResolver;
    public java.lang.ClassLoader classLoader;
    private final java.util.Map factories;
    private com.sun.xml.bind.v2.runtime.unmarshaller.Patcher[] patchers;
    private int patchersLen;
    private java.lang.String[] nsBind;
    private int nsLen;
    private com.sun.xml.bind.v2.runtime.unmarshaller.Scope[] scopes;
    private int scopeTop;
    private static final com.sun.xml.bind.v2.runtime.unmarshaller.Loader DEFAULT_ROOT_LOADER;
    private static final com.sun.xml.bind.v2.runtime.unmarshaller.Loader EXPECTED_TYPE_ROOT_LOADER;
    static final boolean $assertionsDisabled;

    public void <init>(com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl, com.sun.xml.bind.v2.runtime.AssociationMap)
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.Scope[] $r4, $r5, $r10;
        com.sun.xml.bind.v2.runtime.AssociationMap r7;
        java.util.HashMap $r2;
        java.lang.String[] $r3;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State $r8;
        com.sun.xml.bind.v2.runtime.unmarshaller.LocatorEx $r1;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext r0;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl r6;
        int $i0, i1;
        com.sun.xml.bind.v2.runtime.unmarshaller.Scope $r9;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext;

        r6 := @parameter0: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl;

        r7 := @parameter1: com.sun.xml.bind.v2.runtime.AssociationMap;

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.Coordinator: void <init>()>();

        $r1 = <com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.LocatorEx DUMMY_INSTANCE>;

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.LocatorEx locator> = $r1;

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: boolean isUnmarshalInProgress> = 1;

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: boolean aborted> = 0;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: java.util.Map factories> = $r2;

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.Patcher[] patchers> = null;

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: int patchersLen> = 0;

        $r3 = newarray (java.lang.String)[16];

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: java.lang.String[] nsBind> = $r3;

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: int nsLen> = 0;

        $r4 = newarray (com.sun.xml.bind.v2.runtime.unmarshaller.Scope)[16];

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.Scope[] scopes> = $r4;

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: int scopeTop> = 0;

        i1 = 0;

     label1:
        $r5 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.Scope[] scopes>;

        $i0 = lengthof $r5;

        if i1 >= $i0 goto label2;

        $r10 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.Scope[] scopes>;

        $r9 = new com.sun.xml.bind.v2.runtime.unmarshaller.Scope;

        specialinvoke $r9.<com.sun.xml.bind.v2.runtime.unmarshaller.Scope: void <init>(com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext)>(r0);

        $r10[i1] = $r9;

        i1 = i1 + 1;

        goto label1;

     label2:
        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl parent> = r6;

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.AssociationMap assoc> = r7;

        $r8 = new com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State;

        specialinvoke $r8.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: void <init>(com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext,com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State,com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$1)>(r0, null, null);

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State current> = $r8;

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State root> = $r8;

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: void allocateMoreStates()>();

        return;
    }

    public void reset(com.sun.xml.bind.unmarshaller.InfosetScanner, boolean, com.sun.xml.bind.v2.runtime.JaxBeanInfo, com.sun.xml.bind.IDResolver)
    {
        com.sun.xml.bind.IDResolver r3;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext r0;
        com.sun.xml.bind.unmarshaller.InfosetScanner r1;
        com.sun.xml.bind.v2.runtime.JaxBeanInfo r2;
        boolean z0;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext;

        r1 := @parameter0: com.sun.xml.bind.unmarshaller.InfosetScanner;

        z0 := @parameter1: boolean;

        r2 := @parameter2: com.sun.xml.bind.v2.runtime.JaxBeanInfo;

        r3 := @parameter3: com.sun.xml.bind.IDResolver;

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.unmarshaller.InfosetScanner scanner> = r1;

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: boolean isInplaceMode> = z0;

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.JaxBeanInfo expectedType> = r2;

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.IDResolver idResolver> = r3;

        return;
    }

    public com.sun.xml.bind.v2.runtime.JAXBContextImpl getJAXBContext()
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext r0;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl $r1;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl $r2;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl parent>;

        $r2 = $r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: com.sun.xml.bind.v2.runtime.JAXBContextImpl context>;

        return $r2;
    }

    public com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State getCurrentState()
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext r0;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State $r1;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State current>;

        return $r1;
    }

    public com.sun.xml.bind.v2.runtime.unmarshaller.Loader selectRootLoader(com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State, com.sun.xml.bind.v2.runtime.unmarshaller.TagName) throws org.xml.sax.SAXException
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.TagName r3;
        com.sun.xml.bind.v2.runtime.unmarshaller.Loader $r4, $r13;
        com.sun.xml.bind.api.ClassResolver $r5, $r8;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext r0;
        java.lang.String $r6, $r7;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl $r1, $r10, $r11;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State r2;
        java.lang.RuntimeException $r15;
        java.lang.Exception $r14;
        java.lang.Class $r9;
        com.sun.xml.bind.v2.runtime.JaxBeanInfo $r12;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext;

        r2 := @parameter0: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State;

        r3 := @parameter1: com.sun.xml.bind.v2.runtime.unmarshaller.TagName;

     label1:
        $r1 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.JAXBContextImpl getJAXBContext()>();

        $r4 = virtualinvoke $r1.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.runtime.unmarshaller.Loader selectRootLoader(com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State,com.sun.xml.bind.v2.runtime.unmarshaller.TagName)>(r2, r3);

        if $r4 == null goto label3;

     label2:
        return $r4;

     label3:
        $r5 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.api.ClassResolver classResolver>;

        if $r5 == null goto label5;

        $r8 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.api.ClassResolver classResolver>;

        $r7 = r3.<com.sun.xml.bind.v2.runtime.unmarshaller.TagName: java.lang.String uri>;

        $r6 = r3.<com.sun.xml.bind.v2.runtime.unmarshaller.TagName: java.lang.String local>;

        $r9 = virtualinvoke $r8.<com.sun.xml.bind.api.ClassResolver: java.lang.Class resolveElementName(java.lang.String,java.lang.String)>($r7, $r6);

        if $r9 == null goto label5;

        $r10 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.JAXBContextImpl getJAXBContext()>();

        $r11 = virtualinvoke $r10.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.runtime.JAXBContextImpl createAugmented(java.lang.Class)>($r9);

        $r12 = virtualinvoke $r11.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.runtime.JaxBeanInfo getBeanInfo(java.lang.Class)>($r9);

        $r13 = virtualinvoke $r12.<com.sun.xml.bind.v2.runtime.JaxBeanInfo: com.sun.xml.bind.v2.runtime.unmarshaller.Loader getLoader(com.sun.xml.bind.v2.runtime.JAXBContextImpl,boolean)>($r11, 1);

     label4:
        return $r13;

     label5:
        goto label8;

     label6:
        $r15 := @caughtexception;

        throw $r15;

     label7:
        $r14 := @caughtexception;

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: void handleError(java.lang.Exception)>($r14);

     label8:
        return null;

        catch java.lang.RuntimeException from label1 to label2 with label6;
        catch java.lang.RuntimeException from label3 to label4 with label6;
        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
    }

    private void allocateMoreStates()
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State $r1, $r2, $r3, r5;
        java.lang.AssertionError $r4;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext r0;
        int i0;
        boolean $z0;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext;

        $z0 = <com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r2 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State current>;

        $r3 = staticinvoke <com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State access$400(com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State)>($r2);

        if $r3 == null goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label1:
        r5 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State current>;

        i0 = 0;

     label2:
        if i0 >= 8 goto label3;

        $r1 = new com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State;

        specialinvoke $r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: void <init>(com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext,com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State,com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$1)>(r0, r5, null);

        r5 = $r1;

        i0 = i0 + 1;

        goto label2;

     label3:
        return;
    }

    public void clearStates()
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext r0;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State $r1, $r2, $r3, r4;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext;

        r4 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State current>;

     label1:
        $r1 = staticinvoke <com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State access$400(com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State)>(r4);

        if $r1 == null goto label2;

        r4 = staticinvoke <com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State access$400(com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State)>(r4);

        goto label1;

     label2:
        $r2 = r4.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State prev>;

        if $r2 == null goto label3;

        r4.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: com.sun.xml.bind.v2.runtime.unmarshaller.Loader loader> = null;

        r4.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: boolean nil> = 0;

        r4.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: com.sun.xml.bind.v2.runtime.unmarshaller.Receiver receiver> = null;

        r4.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: com.sun.xml.bind.v2.runtime.unmarshaller.Intercepter intercepter> = null;

        r4.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: java.lang.String elementDefaultValue> = null;

        r4.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: java.lang.Object target> = null;

        r4 = r4.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State prev>;

        $r3 = staticinvoke <com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State access$400(com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State)>(r4);

        $r3.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State prev> = null;

        staticinvoke <com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State access$402(com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State,com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State)>(r4, null);

        goto label2;

     label3:
        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State current> = r4;

        return;
    }

    public void setFactories(java.lang.Object)
    {
        java.lang.Object[] $r3, r4;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext r0;
        java.util.Map $r1;
        int i0, i1;
        java.lang.Object r2, r5;
        boolean $z0;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext;

        r2 := @parameter0: java.lang.Object;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: java.util.Map factories>;

        interfaceinvoke $r1.<java.util.Map: void clear()>();

        if r2 != null goto label1;

        return;

     label1:
        $z0 = r2 instanceof java.lang.Object[];

        if $z0 == 0 goto label4;

        $r3 = (java.lang.Object[]) r2;

        r4 = (java.lang.Object[]) $r3;

        i0 = lengthof r4;

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        r5 = r4[i1];

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: void addFactory(java.lang.Object)>(r5);

        i1 = i1 + 1;

        goto label2;

     label3:
        goto label5;

     label4:
        specialinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: void addFactory(java.lang.Object)>(r2);

     label5:
        return;
    }

    private void addFactory(java.lang.Object)
    {
        java.lang.Class[] $r5;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$Factory $r8;
        java.lang.reflect.Method[] $r2;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext r7;
        java.util.Map $r9;
        int i0, $i1, i2;
        java.lang.Object r0;
        java.lang.Class $r1, $r6;
        java.lang.String $r4;
        java.lang.reflect.Method r3;
        boolean $z0;

        r7 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext;

        r0 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method[] getMethods()>();

        i0 = lengthof $r2;

        i2 = 0;

     label1:
        if i2 >= i0 goto label5;

        r3 = $r2[i2];

        $r4 = virtualinvoke r3.<java.lang.reflect.Method: java.lang.String getName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean startsWith(java.lang.String)>("create");

        if $z0 != 0 goto label2;

        goto label4;

     label2:
        $r5 = virtualinvoke r3.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $i1 = lengthof $r5;

        if $i1 <= 0 goto label3;

        goto label4;

     label3:
        $r6 = virtualinvoke r3.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        $r9 = r7.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: java.util.Map factories>;

        $r8 = new com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$Factory;

        specialinvoke $r8.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$Factory: void <init>(java.lang.Object,java.lang.reflect.Method)>(r0, r3);

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r8);

     label4:
        i2 = i2 + 1;

        goto label1;

     label5:
        return;
    }

    public void startDocument(com.sun.xml.bind.v2.runtime.unmarshaller.LocatorEx, javax.xml.namespace.NamespaceContext) throws org.xml.sax.SAXException
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State $r3, $r6, $r9;
        com.sun.xml.bind.v2.runtime.unmarshaller.Loader $r5, $r8;
        com.sun.xml.bind.v2.runtime.unmarshaller.LocatorEx r0;
        com.sun.xml.bind.IDResolver $r7;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext r1;
        javax.xml.namespace.NamespaceContext r2;
        com.sun.xml.bind.v2.runtime.JaxBeanInfo $r4;

        r1 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext;

        r0 := @parameter0: com.sun.xml.bind.v2.runtime.unmarshaller.LocatorEx;

        r2 := @parameter1: javax.xml.namespace.NamespaceContext;

        if r0 == null goto label1;

        r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.LocatorEx locator> = r0;

     label1:
        r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: javax.xml.namespace.NamespaceContext environmentNamespaceContext> = r2;

        r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: java.lang.Object result> = null;

        $r3 = r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State root>;

        r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State current> = $r3;

        r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: int patchersLen> = 0;

        r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: boolean aborted> = 0;

        r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: boolean isUnmarshalInProgress> = 1;

        r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: int nsLen> = 0;

        virtualinvoke r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: void setThreadAffinity()>();

        $r4 = r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.JaxBeanInfo expectedType>;

        if $r4 == null goto label2;

        $r9 = r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State root>;

        $r8 = <com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.Loader EXPECTED_TYPE_ROOT_LOADER>;

        $r9.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: com.sun.xml.bind.v2.runtime.unmarshaller.Loader loader> = $r8;

        goto label3;

     label2:
        $r6 = r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State root>;

        $r5 = <com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.Loader DEFAULT_ROOT_LOADER>;

        $r6.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: com.sun.xml.bind.v2.runtime.unmarshaller.Loader loader> = $r5;

     label3:
        $r7 = r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.IDResolver idResolver>;

        virtualinvoke $r7.<com.sun.xml.bind.IDResolver: void startDocument(javax.xml.bind.ValidationEventHandler)>(r1);

        return;
    }

    public void startElement(com.sun.xml.bind.v2.runtime.unmarshaller.TagName) throws org.xml.sax.SAXException
    {
        java.lang.Throwable $r2;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext r0;
        com.sun.xml.bind.v2.runtime.unmarshaller.TagName r1;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext;

        r1 := @parameter0: com.sun.xml.bind.v2.runtime.unmarshaller.TagName;

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: void pushCoordinator()>();

     label1:
        specialinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: void _startElement(com.sun.xml.bind.v2.runtime.unmarshaller.TagName)>(r1);

     label2:
        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: void popCoordinator()>();

        goto label5;

     label3:
        $r2 := @caughtexception;

     label4:
        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: void popCoordinator()>();

        throw $r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private void _startElement(com.sun.xml.bind.v2.runtime.unmarshaller.TagName) throws org.xml.sax.SAXException
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.TagName r4;
        com.sun.xml.bind.v2.runtime.unmarshaller.Loader $r8, $r10, $r14;
        java.lang.AssertionError $r11;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext r0;
        boolean $z0;
        com.sun.xml.bind.v2.runtime.AssociationMap $r1;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State $r2, $r3, $r5, $r6, $r7, $r9;
        com.sun.xml.bind.unmarshaller.InfosetScanner $r12;
        java.lang.Object $r13;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext;

        r4 := @parameter0: com.sun.xml.bind.v2.runtime.unmarshaller.TagName;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.AssociationMap assoc>;

        if $r1 == null goto label1;

        $r12 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.unmarshaller.InfosetScanner scanner>;

        $r13 = interfaceinvoke $r12.<com.sun.xml.bind.unmarshaller.InfosetScanner: java.lang.Object getCurrentElement()>();

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: java.lang.Object currentElement> = $r13;

     label1:
        $r2 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State current>;

        $r14 = $r2.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: com.sun.xml.bind.v2.runtime.unmarshaller.Loader loader>;

        $r3 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State current>;

        staticinvoke <com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: void access$500(com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State)>($r3);

        $r5 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State current>;

        virtualinvoke $r14.<com.sun.xml.bind.v2.runtime.unmarshaller.Loader: void childElement(com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State,com.sun.xml.bind.v2.runtime.unmarshaller.TagName)>($r5, r4);

        $z0 = <com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $r9 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State current>;

        $r10 = $r9.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: com.sun.xml.bind.v2.runtime.unmarshaller.Loader loader>;

        if $r10 != null goto label2;

        $r11 = new java.lang.AssertionError;

        specialinvoke $r11.<java.lang.AssertionError: void <init>()>();

        throw $r11;

     label2:
        $r6 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State current>;

        $r8 = $r6.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: com.sun.xml.bind.v2.runtime.unmarshaller.Loader loader>;

        $r7 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State current>;

        virtualinvoke $r8.<com.sun.xml.bind.v2.runtime.unmarshaller.Loader: void startElement(com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State,com.sun.xml.bind.v2.runtime.unmarshaller.TagName)>($r7, r4);

        return;
    }

    public void text(java.lang.CharSequence) throws org.xml.sax.SAXException
    {
        java.lang.Throwable $r3;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext r0;
        java.lang.CharSequence r4;
        int $i0;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State r1;
        java.lang.String $r2;
        com.sun.xml.bind.v2.runtime.unmarshaller.Loader $r5;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext;

        r4 := @parameter0: java.lang.CharSequence;

        r1 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State current>;

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: void pushCoordinator()>();

     label1:
        $r2 = r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: java.lang.String elementDefaultValue>;

        if $r2 == null goto label2;

        $i0 = interfaceinvoke r4.<java.lang.CharSequence: int length()>();

        if $i0 != 0 goto label2;

        r4 = r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: java.lang.String elementDefaultValue>;

     label2:
        $r5 = r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: com.sun.xml.bind.v2.runtime.unmarshaller.Loader loader>;

        virtualinvoke $r5.<com.sun.xml.bind.v2.runtime.unmarshaller.Loader: void text(com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State,java.lang.CharSequence)>(r1, r4);

     label3:
        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: void popCoordinator()>();

        goto label6;

     label4:
        $r3 := @caughtexception;

     label5:
        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: void popCoordinator()>();

        throw $r3;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public final void endElement(com.sun.xml.bind.v2.runtime.unmarshaller.TagName) throws org.xml.sax.SAXException
    {
        java.lang.Throwable $r8;
        com.sun.xml.bind.v2.runtime.unmarshaller.TagName r2;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State r1, $r6, $r7;
        com.sun.xml.bind.v2.runtime.unmarshaller.Loader $r3;
        com.sun.xml.bind.v2.runtime.unmarshaller.Receiver r4;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext r0;
        com.sun.xml.bind.v2.runtime.unmarshaller.Intercepter r5;
        java.lang.Object r9;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext;

        r2 := @parameter0: com.sun.xml.bind.v2.runtime.unmarshaller.TagName;

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: void pushCoordinator()>();

     label1:
        r1 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State current>;

        $r3 = r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: com.sun.xml.bind.v2.runtime.unmarshaller.Loader loader>;

        virtualinvoke $r3.<com.sun.xml.bind.v2.runtime.unmarshaller.Loader: void leaveElement(com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State,com.sun.xml.bind.v2.runtime.unmarshaller.TagName)>(r1, r2);

        r9 = r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: java.lang.Object target>;

        r4 = r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: com.sun.xml.bind.v2.runtime.unmarshaller.Receiver receiver>;

        r5 = r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: com.sun.xml.bind.v2.runtime.unmarshaller.Intercepter intercepter>;

        staticinvoke <com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: void access$600(com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State)>(r1);

        if r5 == null goto label2;

        $r7 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State current>;

        r9 = interfaceinvoke r5.<com.sun.xml.bind.v2.runtime.unmarshaller.Intercepter: java.lang.Object intercept(com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State,java.lang.Object)>($r7, r9);

     label2:
        if r4 == null goto label3;

        $r6 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State current>;

        interfaceinvoke r4.<com.sun.xml.bind.v2.runtime.unmarshaller.Receiver: void receive(com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State,java.lang.Object)>($r6, r9);

     label3:
        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: void popCoordinator()>();

        goto label6;

     label4:
        $r8 := @caughtexception;

     label5:
        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: void popCoordinator()>();

        throw $r8;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void endDocument() throws org.xml.sax.SAXException
    {
        com.sun.xml.bind.IDResolver $r1;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext r0;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State $r3, $r4;
        java.lang.AssertionError $r5;
        com.sun.xml.bind.v2.runtime.unmarshaller.LocatorEx $r2;
        boolean $z0;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext;

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: void runPatchers()>();

        $r1 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.IDResolver idResolver>;

        virtualinvoke $r1.<com.sun.xml.bind.IDResolver: void endDocument()>();

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: boolean isUnmarshalInProgress> = 0;

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: java.lang.Object currentElement> = null;

        $r2 = <com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.LocatorEx DUMMY_INSTANCE>;

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.LocatorEx locator> = $r2;

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: javax.xml.namespace.NamespaceContext environmentNamespaceContext> = null;

        $z0 = <com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r4 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State root>;

        $r3 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State current>;

        if $r4 == $r3 goto label1;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label1:
        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: void resetThreadAffinity()>();

        return;
    }

    public boolean expectText()
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext r0;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State $r1;
        com.sun.xml.bind.v2.runtime.unmarshaller.Loader $r2;
        boolean $z0;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State current>;

        $r2 = $r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: com.sun.xml.bind.v2.runtime.unmarshaller.Loader loader>;

        $z0 = $r2.<com.sun.xml.bind.v2.runtime.unmarshaller.Loader: boolean expectText>;

        return $z0;
    }

    public com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor$TextPredictor getPredictor()
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext;

        return r0;
    }

    public com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext getContext()
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext;

        return r0;
    }

    public java.lang.Object getResult() throws javax.xml.bind.UnmarshalException
    {
        java.lang.IllegalStateException $r3;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext r0;
        javax.xml.bind.UnmarshalException $r1;
        java.lang.Object $r2;
        boolean $z0, $z1;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext;

        $z0 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: boolean isUnmarshalInProgress>;

        if $z0 == 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>()>();

        throw $r3;

     label1:
        $z1 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: boolean aborted>;

        if $z1 != 0 goto label2;

        $r2 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: java.lang.Object result>;

        return $r2;

     label2:
        $r1 = new javax.xml.bind.UnmarshalException;

        specialinvoke $r1.<javax.xml.bind.UnmarshalException: void <init>(java.lang.String)>(null);

        throw $r1;
    }

    void clearResult()
    {
        java.lang.IllegalStateException $r1;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext r0;
        boolean $z0;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext;

        $z0 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: boolean isUnmarshalInProgress>;

        if $z0 == 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>()>();

        throw $r1;

     label1:
        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: java.lang.Object result> = null;

        return;
    }

    public java.lang.Object createInstance(java.lang.Class) throws org.xml.sax.SAXException
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$Factory r6;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext r0;
        java.util.Map $r1, $r4;
        java.lang.Class r2;
        java.lang.Object $r3, $r5, $r7;
        boolean $z0;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext;

        r2 := @parameter0: java.lang.Class;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: java.util.Map factories>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r4 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: java.util.Map factories>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        r6 = (com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$Factory) $r5;

        if r6 == null goto label1;

        $r7 = virtualinvoke r6.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$Factory: java.lang.Object createInstance()>();

        return $r7;

     label1:
        $r3 = staticinvoke <com.sun.xml.bind.v2.ClassFactory: java.lang.Object create(java.lang.Class)>(r2);

        return $r3;
    }

    public java.lang.Object createInstance(com.sun.xml.bind.v2.runtime.JaxBeanInfo) throws org.xml.sax.SAXException
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext r0;
        java.util.Map $r1, $r5;
        java.lang.InstantiationException $r8;
        java.lang.String $r12, $r14, $r19, $r21, $r26, $r28;
        boolean $z0;
        java.lang.IllegalAccessException $r22;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$Factory r29;
        java.lang.reflect.InvocationTargetException $r15;
        java.lang.Object $r3, $r6, $r7;
        java.lang.Class $r4, $r11, $r18, $r25;
        java.lang.StringBuilder $r9, $r10, $r13, $r16, $r17, $r20, $r23, $r24, $r27;
        com.sun.xml.bind.v2.runtime.JaxBeanInfo r2;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext;

        r2 := @parameter0: com.sun.xml.bind.v2.runtime.JaxBeanInfo;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: java.util.Map factories>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r5 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: java.util.Map factories>;

        $r4 = r2.<com.sun.xml.bind.v2.runtime.JaxBeanInfo: java.lang.Class jaxbType>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        r29 = (com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$Factory) $r6;

        if r29 == null goto label1;

        $r7 = virtualinvoke r29.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$Factory: java.lang.Object createInstance()>();

        return $r7;

     label1:
        $r3 = virtualinvoke r2.<com.sun.xml.bind.v2.runtime.JaxBeanInfo: java.lang.Object createInstance(com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext)>(r0);

     label2:
        return $r3;

     label3:
        $r22 := @caughtexception;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to create an instance of ");

        $r25 = r2.<com.sun.xml.bind.v2.runtime.JaxBeanInfo: java.lang.Class jaxbType>;

        $r26 = virtualinvoke $r25.<java.lang.Class: java.lang.String getName()>();

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.sun.xml.bind.v2.runtime.unmarshaller.Loader: void reportError(java.lang.String,java.lang.Exception,boolean)>($r28, $r22, 0);

        goto label6;

     label4:
        $r15 := @caughtexception;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to create an instance of ");

        $r18 = r2.<com.sun.xml.bind.v2.runtime.JaxBeanInfo: java.lang.Class jaxbType>;

        $r19 = virtualinvoke $r18.<java.lang.Class: java.lang.String getName()>();

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.sun.xml.bind.v2.runtime.unmarshaller.Loader: void reportError(java.lang.String,java.lang.Exception,boolean)>($r21, $r15, 0);

        goto label6;

     label5:
        $r8 := @caughtexception;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to create an instance of ");

        $r11 = r2.<com.sun.xml.bind.v2.runtime.JaxBeanInfo: java.lang.Class jaxbType>;

        $r12 = virtualinvoke $r11.<java.lang.Class: java.lang.String getName()>();

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.sun.xml.bind.v2.runtime.unmarshaller.Loader: void reportError(java.lang.String,java.lang.Exception,boolean)>($r14, $r8, 0);

     label6:
        return null;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label4;
        catch java.lang.InstantiationException from label1 to label2 with label5;
    }

    public void handleEvent(javax.xml.bind.ValidationEvent, boolean) throws org.xml.sax.SAXException
    {
        java.lang.Throwable $r9;
        javax.xml.bind.UnmarshalException $r6;
        com.sun.istack.SAXParseException2 $r4;
        com.sun.xml.bind.v2.runtime.unmarshaller.LocatorEx $r7;
        javax.xml.bind.ValidationEvent r3;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext r0;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl $r1;
        javax.xml.bind.ValidationEventHandler $r2;
        java.lang.String $r5, $r8;
        boolean $z0, z1;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext;

        r3 := @parameter0: javax.xml.bind.ValidationEvent;

        z1 := @parameter1: boolean;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl parent>;

        $r2 = virtualinvoke $r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: javax.xml.bind.ValidationEventHandler getEventHandler()>();

        $z0 = interfaceinvoke $r2.<javax.xml.bind.ValidationEventHandler: boolean handleEvent(javax.xml.bind.ValidationEvent)>(r3);

        if $z0 != 0 goto label1;

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: boolean aborted> = 1;

     label1:
        if z1 == 0 goto label2;

        if $z0 != 0 goto label3;

     label2:
        $r4 = new com.sun.istack.SAXParseException2;

        $r5 = interfaceinvoke r3.<javax.xml.bind.ValidationEvent: java.lang.String getMessage()>();

        $r7 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.LocatorEx locator>;

        $r6 = new javax.xml.bind.UnmarshalException;

        $r8 = interfaceinvoke r3.<javax.xml.bind.ValidationEvent: java.lang.String getMessage()>();

        $r9 = interfaceinvoke r3.<javax.xml.bind.ValidationEvent: java.lang.Throwable getLinkedException()>();

        specialinvoke $r6.<javax.xml.bind.UnmarshalException: void <init>(java.lang.String,java.lang.Throwable)>($r8, $r9);

        specialinvoke $r4.<com.sun.istack.SAXParseException2: void <init>(java.lang.String,org.xml.sax.Locator,java.lang.Exception)>($r5, $r7, $r6);

        throw $r4;

     label3:
        return;
    }

    public boolean handleEvent(javax.xml.bind.ValidationEvent)
    {
        javax.xml.bind.ValidationEvent r3;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext r0;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl $r1;
        javax.xml.bind.ValidationEventHandler $r2;
        java.lang.RuntimeException $r4;
        boolean $z0;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext;

        r3 := @parameter0: javax.xml.bind.ValidationEvent;

     label1:
        $r1 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl parent>;

        $r2 = virtualinvoke $r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: javax.xml.bind.ValidationEventHandler getEventHandler()>();

        $z0 = interfaceinvoke $r2.<javax.xml.bind.ValidationEventHandler: boolean handleEvent(javax.xml.bind.ValidationEvent)>(r3);

        if $z0 != 0 goto label2;

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: boolean aborted> = 1;

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        return 0;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void handleError(java.lang.Exception) throws org.xml.sax.SAXException
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext r0;
        java.lang.Exception r1;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext;

        r1 := @parameter0: java.lang.Exception;

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: void handleError(java.lang.Exception,boolean)>(r1, 1);

        return;
    }

    public void handleError(java.lang.Exception, boolean) throws org.xml.sax.SAXException
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext r0;
        javax.xml.bind.ValidationEventLocator $r5;
        java.lang.String $r3;
        com.sun.xml.bind.v2.runtime.unmarshaller.LocatorEx $r4;
        java.lang.Exception r2;
        javax.xml.bind.helpers.ValidationEventImpl $r1;
        boolean z0;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext;

        r2 := @parameter0: java.lang.Exception;

        z0 := @parameter1: boolean;

        $r1 = new javax.xml.bind.helpers.ValidationEventImpl;

        $r3 = virtualinvoke r2.<java.lang.Exception: java.lang.String getMessage()>();

        $r4 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.LocatorEx locator>;

        $r5 = interfaceinvoke $r4.<com.sun.xml.bind.v2.runtime.unmarshaller.LocatorEx: javax.xml.bind.ValidationEventLocator getLocation()>();

        specialinvoke $r1.<javax.xml.bind.helpers.ValidationEventImpl: void <init>(int,java.lang.String,javax.xml.bind.ValidationEventLocator,java.lang.Throwable)>(1, $r3, $r5, r2);

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: void handleEvent(javax.xml.bind.ValidationEvent,boolean)>($r1, z0);

        return;
    }

    public void handleError(java.lang.String)
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext r0;
        javax.xml.bind.ValidationEventLocator $r4;
        java.lang.String r2;
        com.sun.xml.bind.v2.runtime.unmarshaller.LocatorEx $r3;
        javax.xml.bind.helpers.ValidationEventImpl $r1;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext;

        r2 := @parameter0: java.lang.String;

        $r1 = new javax.xml.bind.helpers.ValidationEventImpl;

        $r3 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.LocatorEx locator>;

        $r4 = interfaceinvoke $r3.<com.sun.xml.bind.v2.runtime.unmarshaller.LocatorEx: javax.xml.bind.ValidationEventLocator getLocation()>();

        specialinvoke $r1.<javax.xml.bind.helpers.ValidationEventImpl: void <init>(int,java.lang.String,javax.xml.bind.ValidationEventLocator)>(1, r2, $r4);

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: boolean handleEvent(javax.xml.bind.ValidationEvent)>($r1);

        return;
    }

    protected javax.xml.bind.ValidationEventLocator getLocation()
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext r0;
        com.sun.xml.bind.v2.runtime.unmarshaller.LocatorEx $r1;
        javax.xml.bind.ValidationEventLocator $r2;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.LocatorEx locator>;

        $r2 = interfaceinvoke $r1.<com.sun.xml.bind.v2.runtime.unmarshaller.LocatorEx: javax.xml.bind.ValidationEventLocator getLocation()>();

        return $r2;
    }

    public com.sun.xml.bind.v2.runtime.unmarshaller.LocatorEx getLocator()
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext r0;
        com.sun.xml.bind.v2.runtime.unmarshaller.LocatorEx $r1;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.LocatorEx locator>;

        return $r1;
    }

    public void errorUnresolvedIDREF(java.lang.Object, java.lang.String, com.sun.xml.bind.v2.runtime.unmarshaller.LocatorEx) throws org.xml.sax.SAXException
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.Messages $r4;
        java.lang.Object[] $r2;
        javax.xml.bind.ValidationEventLocator $r7;
        com.sun.xml.bind.v2.runtime.unmarshaller.LocatorEx r6;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext r0;
        java.lang.Object r8;
        java.lang.String r3, $r5;
        javax.xml.bind.helpers.ValidationEventImpl $r1;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext;

        r8 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.String;

        r6 := @parameter2: com.sun.xml.bind.v2.runtime.unmarshaller.LocatorEx;

        $r1 = new javax.xml.bind.helpers.ValidationEventImpl;

        $r4 = <com.sun.xml.bind.v2.runtime.unmarshaller.Messages: com.sun.xml.bind.v2.runtime.unmarshaller.Messages UNRESOLVED_IDREF>;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = r3;

        $r5 = virtualinvoke $r4.<com.sun.xml.bind.v2.runtime.unmarshaller.Messages: java.lang.String format(java.lang.Object[])>($r2);

        $r7 = interfaceinvoke r6.<com.sun.xml.bind.v2.runtime.unmarshaller.LocatorEx: javax.xml.bind.ValidationEventLocator getLocation()>();

        specialinvoke $r1.<javax.xml.bind.helpers.ValidationEventImpl: void <init>(int,java.lang.String,javax.xml.bind.ValidationEventLocator)>(1, $r5, $r7);

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: void handleEvent(javax.xml.bind.ValidationEvent,boolean)>($r1, 1);

        return;
    }

    public void addPatcher(com.sun.xml.bind.v2.runtime.unmarshaller.Patcher)
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.Patcher r4;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        com.sun.xml.bind.v2.runtime.unmarshaller.Patcher[] $r1, $r2, $r3, r5, $r6, $r7;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext;

        r4 := @parameter0: com.sun.xml.bind.v2.runtime.unmarshaller.Patcher;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.Patcher[] patchers>;

        if $r1 != null goto label1;

        $r7 = newarray (com.sun.xml.bind.v2.runtime.unmarshaller.Patcher)[32];

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.Patcher[] patchers> = $r7;

     label1:
        $r2 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.Patcher[] patchers>;

        $i1 = lengthof $r2;

        $i0 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: int patchersLen>;

        if $i1 != $i0 goto label2;

        $i4 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: int patchersLen>;

        $i5 = $i4 * 2;

        r5 = newarray (com.sun.xml.bind.v2.runtime.unmarshaller.Patcher)[$i5];

        $r6 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.Patcher[] patchers>;

        $i6 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: int patchersLen>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, r5, 0, $i6);

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.Patcher[] patchers> = r5;

     label2:
        $r3 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.Patcher[] patchers>;

        $i2 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: int patchersLen>;

        $i3 = $i2 + 1;

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: int patchersLen> = $i3;

        $r3[$i2] = r4;

        return;
    }

    private void runPatchers() throws org.xml.sax.SAXException
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext r0;
        int $i0, i1;
        com.sun.xml.bind.v2.runtime.unmarshaller.Patcher[] $r1, $r2, $r4;
        com.sun.xml.bind.v2.runtime.unmarshaller.Patcher $r3;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.Patcher[] patchers>;

        if $r1 == null goto label2;

        i1 = 0;

     label1:
        $i0 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: int patchersLen>;

        if i1 >= $i0 goto label2;

        $r2 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.Patcher[] patchers>;

        $r3 = $r2[i1];

        interfaceinvoke $r3.<com.sun.xml.bind.v2.runtime.unmarshaller.Patcher: void run()>();

        $r4 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.Patcher[] patchers>;

        $r4[i1] = null;

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public java.lang.String addToIdTable(java.lang.String) throws org.xml.sax.SAXException
    {
        com.sun.xml.bind.IDResolver $r3;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext r0;
        java.lang.Object r6;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State $r1, $r4, $r5;
        java.lang.String r2;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State current>;

        r6 = $r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: java.lang.Object target>;

        if r6 != null goto label1;

        $r4 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State current>;

        $r5 = $r4.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State prev>;

        r6 = $r5.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: java.lang.Object target>;

     label1:
        $r3 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.IDResolver idResolver>;

        virtualinvoke $r3.<com.sun.xml.bind.IDResolver: void bind(java.lang.String,java.lang.Object)>(r2, r6);

        return r2;
    }

    public java.util.concurrent.Callable getObjectFromId(java.lang.String, java.lang.Class) throws org.xml.sax.SAXException
    {
        com.sun.xml.bind.IDResolver $r3;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext r0;
        java.lang.Class r2;
        java.util.concurrent.Callable $r4;
        java.lang.String r1;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Class;

        $r3 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.IDResolver idResolver>;

        $r4 = virtualinvoke $r3.<com.sun.xml.bind.IDResolver: java.util.concurrent.Callable resolve(java.lang.String,java.lang.Class)>(r1, r2);

        return $r4;
    }

    public void startPrefixMapping(java.lang.String, java.lang.String)
    {
        java.lang.String[] $r1, $r2, $r4, r6, $r7;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.String r3, r5;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext;

        r3 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.String;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: java.lang.String[] nsBind>;

        $i1 = lengthof $r1;

        $i0 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: int nsLen>;

        if $i1 != $i0 goto label1;

        $i6 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: int nsLen>;

        $i7 = $i6 * 2;

        r6 = newarray (java.lang.String)[$i7];

        $r7 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: java.lang.String[] nsBind>;

        $i8 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: int nsLen>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, 0, r6, 0, $i8);

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: java.lang.String[] nsBind> = r6;

     label1:
        $r2 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: java.lang.String[] nsBind>;

        $i2 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: int nsLen>;

        $i3 = $i2 + 1;

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: int nsLen> = $i3;

        $r2[$i2] = r3;

        $r4 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: java.lang.String[] nsBind>;

        $i4 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: int nsLen>;

        $i5 = $i4 + 1;

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: int nsLen> = $i5;

        $r4[$i4] = r5;

        return;
    }

    public void endPrefixMapping(java.lang.String)
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext r0;
        int $i0, $i1;
        java.lang.String r1;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext;

        r1 := @parameter0: java.lang.String;

        $i0 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: int nsLen>;

        $i1 = $i0 - 2;

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: int nsLen> = $i1;

        return;
    }

    private java.lang.String resolveNamespacePrefix(java.lang.String)
    {
        java.lang.String[] $r6, $r8;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext r1;
        int $i0, $i1, i2, $i4;
        javax.xml.namespace.NamespaceContext $r2, $r3;
        java.lang.String r0, $r4, $r5, $r7, $r9;
        boolean $z0, $z1, $z2;

        r1 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("xml");

        if $z0 == 0 goto label1;

        return "http://www.w3.org/XML/1998/namespace";

     label1:
        $i0 = r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: int nsLen>;

        i2 = $i0 - 2;

     label2:
        if i2 < 0 goto label4;

        $r6 = r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: java.lang.String[] nsBind>;

        $r7 = $r6[i2];

        $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z2 == 0 goto label3;

        $r8 = r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: java.lang.String[] nsBind>;

        $i1 = i2 + 1;

        $r9 = $r8[$i1];

        return $r9;

     label3:
        $i4 = (int) -2;

        i2 = i2 + $i4;

        goto label2;

     label4:
        $r2 = r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: javax.xml.namespace.NamespaceContext environmentNamespaceContext>;

        if $r2 == null goto label5;

        $r3 = r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: javax.xml.namespace.NamespaceContext environmentNamespaceContext>;

        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String intern()>();

        $r5 = interfaceinvoke $r3.<javax.xml.namespace.NamespaceContext: java.lang.String getNamespaceURI(java.lang.String)>($r4);

        return $r5;

     label5:
        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z1 == 0 goto label6;

        return "";

     label6:
        return null;
    }

    public java.lang.String[] getNewlyDeclaredPrefixes()
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext r0;
        int $i0;
        java.lang.String[] $r3;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State $r1, $r2;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State current>;

        $r2 = $r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State prev>;

        $i0 = staticinvoke <com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: int access$700(com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State)>($r2);

        $r3 = specialinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: java.lang.String[] getPrefixList(int)>($i0);

        return $r3;
    }

    public java.lang.String[] getAllDeclaredPrefixes()
    {
        java.lang.String[] $r1;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext;

        $r1 = specialinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: java.lang.String[] getPrefixList(int)>(0);

        return $r1;
    }

    private java.lang.String[] getPrefixList(int)
    {
        java.lang.String[] r2, $r3;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State $r1;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext r0;
        int $i0, i1, $i2, i3, $i4, $i5, $i6, i7;
        java.lang.String $r4;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext;

        i1 := @parameter0: int;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State current>;

        $i0 = staticinvoke <com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: int access$700(com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State)>($r1);

        $i2 = $i0 - i1;

        i3 = $i2 / 2;

        r2 = newarray (java.lang.String)[i3];

        i7 = 0;

     label1:
        $i4 = lengthof r2;

        if i7 >= $i4 goto label2;

        $r3 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: java.lang.String[] nsBind>;

        $i5 = i7 * 2;

        $i6 = i1 + $i5;

        $r4 = $r3[$i6];

        r2[i7] = $r4;

        i7 = i7 + 1;

        goto label1;

     label2:
        return r2;
    }

    public java.util.Iterator getPrefixes(java.lang.String)
    {
        java.util.List $r2, $r3;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext r0;
        java.util.Iterator $r4;
        java.lang.String r1;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: java.util.List getAllPrefixesInList(java.lang.String)>(r1);

        $r3 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r2);

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

        return $r4;
    }

    private java.util.List getAllPrefixesInList(java.lang.String)
    {
        java.lang.String[] $r3, $r5, $r8, $r10;
        java.util.ArrayList $r13;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext r2;
        int $i0, $i1, $i2, i3, $i5;
        java.lang.String r1, $r4, $r6, $r7, $r9, $r11;
        boolean $z0, $z1, $z2, $z3;
        java.lang.IllegalArgumentException $r14;

        r2 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext;

        r1 := @parameter0: java.lang.String;

        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>()>();

        if r1 != null goto label1;

        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r14;

     label1:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://www.w3.org/XML/1998/namespace");

        if $z0 == 0 goto label2;

        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>("xml");

        return $r13;

     label2:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://www.w3.org/2000/xmlns/");

        if $z1 == 0 goto label3;

        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>("xmlns");

        return $r13;

     label3:
        $i0 = r2.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: int nsLen>;

        i3 = $i0 - 2;

     label4:
        if i3 < 0 goto label6;

        $r3 = r2.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: java.lang.String[] nsBind>;

        $i1 = i3 + 1;

        $r4 = $r3[$i1];

        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z2 == 0 goto label5;

        $r5 = r2.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: java.lang.String[] nsBind>;

        $r6 = $r5[i3];

        $r7 = virtualinvoke r2.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: java.lang.String getNamespaceURI(java.lang.String)>($r6);

        $r8 = r2.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: java.lang.String[] nsBind>;

        $i2 = i3 + 1;

        $r9 = $r8[$i2];

        $z3 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z3 == 0 goto label5;

        $r10 = r2.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: java.lang.String[] nsBind>;

        $r11 = $r10[i3];

        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>($r11);

     label5:
        $i5 = (int) -2;

        i3 = i3 + $i5;

        goto label4;

     label6:
        return $r13;
    }

    public java.lang.String getPrefix(java.lang.String)
    {
        java.lang.String[] $r5, $r7, $r10, $r12;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext r1;
        int $i0, $i1, $i2, i3, $i5;
        javax.xml.namespace.NamespaceContext $r2, $r3;
        java.lang.String r0, $r4, $r6, $r8, $r9, $r11, $r13;
        boolean $z0, $z1, $z2, $z3;
        java.lang.IllegalArgumentException $r15;

        r1 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r15 = new java.lang.IllegalArgumentException;

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r15;

     label1:
        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("http://www.w3.org/XML/1998/namespace");

        if $z0 == 0 goto label2;

        return "xml";

     label2:
        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("http://www.w3.org/2000/xmlns/");

        if $z1 == 0 goto label3;

        return "xmlns";

     label3:
        $i0 = r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: int nsLen>;

        i3 = $i0 - 2;

     label4:
        if i3 < 0 goto label6;

        $r5 = r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: java.lang.String[] nsBind>;

        $i1 = i3 + 1;

        $r6 = $r5[$i1];

        $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z2 == 0 goto label5;

        $r7 = r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: java.lang.String[] nsBind>;

        $r8 = $r7[i3];

        $r9 = virtualinvoke r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: java.lang.String getNamespaceURI(java.lang.String)>($r8);

        $r10 = r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: java.lang.String[] nsBind>;

        $i2 = i3 + 1;

        $r11 = $r10[$i2];

        $z3 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z3 == 0 goto label5;

        $r12 = r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: java.lang.String[] nsBind>;

        $r13 = $r12[i3];

        return $r13;

     label5:
        $i5 = (int) -2;

        i3 = i3 + $i5;

        goto label4;

     label6:
        $r2 = r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: javax.xml.namespace.NamespaceContext environmentNamespaceContext>;

        if $r2 == null goto label7;

        $r3 = r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: javax.xml.namespace.NamespaceContext environmentNamespaceContext>;

        $r4 = interfaceinvoke $r3.<javax.xml.namespace.NamespaceContext: java.lang.String getPrefix(java.lang.String)>(r0);

        return $r4;

     label7:
        return null;
    }

    public java.lang.String getNamespaceURI(java.lang.String)
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext r1;
        java.lang.String r0, $r2;
        java.lang.IllegalArgumentException $r3;
        boolean $z0;

        r1 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;

     label1:
        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("xmlns");

        if $z0 == 0 goto label2;

        return "http://www.w3.org/2000/xmlns/";

     label2:
        $r2 = specialinvoke r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: java.lang.String resolveNamespacePrefix(java.lang.String)>(r0);

        return $r2;
    }

    public void startScope(int)
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.Scope[] $r1, $r2, r3, $r4, $r5, $r6;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12;
        com.sun.xml.bind.v2.runtime.unmarshaller.Scope $r7;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext;

        i0 := @parameter0: int;

        $i1 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: int scopeTop>;

        $i2 = $i1 + i0;

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: int scopeTop> = $i2;

        $i4 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: int scopeTop>;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.Scope[] scopes>;

        $i3 = lengthof $r1;

        if $i4 < $i3 goto label3;

        $i5 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: int scopeTop>;

        $i8 = $i5 + 1;

        $r2 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.Scope[] scopes>;

        $i6 = lengthof $r2;

        $i7 = $i6 * 2;

        $i9 = staticinvoke <java.lang.Math: int max(int,int)>($i8, $i7);

        r3 = newarray (com.sun.xml.bind.v2.runtime.unmarshaller.Scope)[$i9];

        $r5 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.Scope[] scopes>;

        $r4 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.Scope[] scopes>;

        $i10 = lengthof $r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, r3, 0, $i10);

        $r6 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.Scope[] scopes>;

        i12 = lengthof $r6;

     label1:
        $i11 = lengthof r3;

        if i12 >= $i11 goto label2;

        $r7 = new com.sun.xml.bind.v2.runtime.unmarshaller.Scope;

        specialinvoke $r7.<com.sun.xml.bind.v2.runtime.unmarshaller.Scope: void <init>(com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext)>(r0);

        r3[i12] = $r7;

        i12 = i12 + 1;

        goto label1;

     label2:
        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.Scope[] scopes> = r3;

     label3:
        return;
    }

    public void endScope(int) throws org.xml.sax.SAXException
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.Scope[] $r1, $r4;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext r0;
        int $i0, $i1, $i2, $i3, $i4, i5, $i7, $i9;
        com.sun.xml.bind.v2.runtime.unmarshaller.Scope $r2, $r6;
        com.sun.xml.bind.api.AccessorException $r3;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext;

        i5 := @parameter0: int;

     label1:
        if i5 <= 0 goto label2;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.Scope[] scopes>;

        $i0 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: int scopeTop>;

        $r2 = $r1[$i0];

        virtualinvoke $r2.<com.sun.xml.bind.v2.runtime.unmarshaller.Scope: void finish()>();

        $i7 = (int) -1;

        i5 = i5 + $i7;

        $i1 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: int scopeTop>;

        $i2 = $i1 - 1;

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: int scopeTop> = $i2;

        goto label1;

     label2:
        goto label5;

     label3:
        $r3 := @caughtexception;

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: void handleError(java.lang.Exception)>($r3);

     label4:
        if i5 <= 0 goto label5;

        $r4 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.Scope[] scopes>;

        $i3 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: int scopeTop>;

        $i4 = $i3 - 1;

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: int scopeTop> = $i4;

        $r6 = new com.sun.xml.bind.v2.runtime.unmarshaller.Scope;

        specialinvoke $r6.<com.sun.xml.bind.v2.runtime.unmarshaller.Scope: void <init>(com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext)>(r0);

        $r4[$i3] = $r6;

        $i9 = (int) -1;

        i5 = i5 + $i9;

        goto label4;

     label5:
        return;

        catch com.sun.xml.bind.api.AccessorException from label1 to label2 with label3;
    }

    public com.sun.xml.bind.v2.runtime.unmarshaller.Scope getScope(int)
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.Scope[] $r1;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext r0;
        int i0, $i1, $i2;
        com.sun.xml.bind.v2.runtime.unmarshaller.Scope $r2;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext;

        i0 := @parameter0: int;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.Scope[] scopes>;

        $i1 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: int scopeTop>;

        $i2 = $i1 - i0;

        $r2 = $r1[$i2];

        return $r2;
    }

    public void recordInnerPeer(java.lang.Object)
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext r0;
        com.sun.xml.bind.v2.runtime.AssociationMap $r1, $r4;
        java.lang.Object r2, $r3;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext;

        r2 := @parameter0: java.lang.Object;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.AssociationMap assoc>;

        if $r1 == null goto label1;

        $r4 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.AssociationMap assoc>;

        $r3 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: java.lang.Object currentElement>;

        virtualinvoke $r4.<com.sun.xml.bind.v2.runtime.AssociationMap: void addInner(java.lang.Object,java.lang.Object)>($r3, r2);

     label1:
        return;
    }

    public java.lang.Object getInnerPeer()
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext r0;
        com.sun.xml.bind.v2.runtime.AssociationMap $r1, $r3;
        java.lang.Object $r2, $r4;
        boolean $z0;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.AssociationMap assoc>;

        if $r1 == null goto label1;

        $z0 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: boolean isInplaceMode>;

        if $z0 == 0 goto label1;

        $r3 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.AssociationMap assoc>;

        $r2 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: java.lang.Object currentElement>;

        $r4 = virtualinvoke $r3.<com.sun.xml.bind.v2.runtime.AssociationMap: java.lang.Object getInnerPeer(java.lang.Object)>($r2);

        return $r4;

     label1:
        return null;
    }

    public void recordOuterPeer(java.lang.Object)
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext r0;
        com.sun.xml.bind.v2.runtime.AssociationMap $r1, $r4;
        java.lang.Object r2, $r3;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext;

        r2 := @parameter0: java.lang.Object;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.AssociationMap assoc>;

        if $r1 == null goto label1;

        $r4 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.AssociationMap assoc>;

        $r3 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: java.lang.Object currentElement>;

        virtualinvoke $r4.<com.sun.xml.bind.v2.runtime.AssociationMap: void addOuter(java.lang.Object,java.lang.Object)>($r3, r2);

     label1:
        return;
    }

    public java.lang.Object getOuterPeer()
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext r0;
        com.sun.xml.bind.v2.runtime.AssociationMap $r1, $r3;
        java.lang.Object $r2, $r4;
        boolean $z0;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.AssociationMap assoc>;

        if $r1 == null goto label1;

        $z0 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: boolean isInplaceMode>;

        if $z0 == 0 goto label1;

        $r3 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.AssociationMap assoc>;

        $r2 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: java.lang.Object currentElement>;

        $r4 = virtualinvoke $r3.<com.sun.xml.bind.v2.runtime.AssociationMap: java.lang.Object getOuterPeer(java.lang.Object)>($r2);

        return $r4;

     label1:
        return null;
    }

    public java.lang.String getXMIMEContentType()
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext r0;
        java.lang.Object r2;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State $r1;
        java.lang.String $r4;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl $r3;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State current>;

        r2 = $r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: java.lang.Object target>;

        if r2 != null goto label1;

        return null;

     label1:
        $r3 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.JAXBContextImpl getJAXBContext()>();

        $r4 = virtualinvoke $r3.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.lang.String getXMIMEContentType(java.lang.Object)>(r2);

        return $r4;
    }

    public static com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext getInstance()
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext $r1;
        com.sun.xml.bind.v2.runtime.Coordinator $r0;

        $r0 = staticinvoke <com.sun.xml.bind.v2.runtime.Coordinator: com.sun.xml.bind.v2.runtime.Coordinator _getInstance()>();

        $r1 = (com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext) $r0;

        return $r1;
    }

    public java.util.Collection getCurrentExpectedElements()
    {
        java.lang.Throwable $r3;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext r0;
        java.util.Collection $r4;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State $r1;
        com.sun.xml.bind.v2.runtime.unmarshaller.Loader r2;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext;

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: void pushCoordinator()>();

     label1:
        $r1 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State getCurrentState()>();

        r2 = $r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: com.sun.xml.bind.v2.runtime.unmarshaller.Loader loader>;

        if r2 == null goto label2;

        $r4 = virtualinvoke r2.<com.sun.xml.bind.v2.runtime.unmarshaller.Loader: java.util.Collection getExpectedChildElements()>();

        goto label3;

     label2:
        $r4 = null;

     label3:
        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: void popCoordinator()>();

        return $r4;

     label4:
        $r3 := @caughtexception;

     label5:
        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: void popCoordinator()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public java.util.Collection getCurrentExpectedAttributes()
    {
        java.lang.Throwable $r3;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext r0;
        java.util.Collection $r4;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State $r1;
        com.sun.xml.bind.v2.runtime.unmarshaller.Loader r2;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext;

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: void pushCoordinator()>();

     label1:
        $r1 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State getCurrentState()>();

        r2 = $r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: com.sun.xml.bind.v2.runtime.unmarshaller.Loader loader>;

        if r2 == null goto label2;

        $r4 = virtualinvoke r2.<com.sun.xml.bind.v2.runtime.unmarshaller.Loader: java.util.Collection getExpectedAttributes()>();

        goto label3;

     label2:
        $r4 = null;

     label3:
        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: void popCoordinator()>();

        return $r4;

     label4:
        $r3 := @caughtexception;

     label5:
        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: void popCoordinator()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader getStructureLoader()
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext r0;
        com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader $r5;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State $r1, $r3;
        com.sun.xml.bind.v2.runtime.unmarshaller.Loader $r2, $r4;
        boolean $z0;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State current>;

        $r2 = $r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: com.sun.xml.bind.v2.runtime.unmarshaller.Loader loader>;

        $z0 = $r2 instanceof com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader;

        if $z0 == 0 goto label1;

        $r3 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State current>;

        $r4 = $r3.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: com.sun.xml.bind.v2.runtime.unmarshaller.Loader loader>;

        $r5 = (com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader) $r4;

        return $r5;

     label1:
        return null;
    }

    static void access$000(com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext)
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext r0;

        r0 := @parameter0: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext;

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: void allocateMoreStates()>();

        return;
    }

    static int access$100(com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext)
    {
        int $i0;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext r0;

        r0 := @parameter0: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext;

        $i0 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: int nsLen>;

        return $i0;
    }

    static com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State access$202(com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext, com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State)
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext r0;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State r1;

        r0 := @parameter0: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext;

        r1 := @parameter1: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State;

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State current> = r1;

        return r1;
    }

    static java.lang.Object access$1002(com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext, java.lang.Object)
    {
        java.lang.Object r1;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext r0;

        r0 := @parameter0: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext;

        r1 := @parameter1: java.lang.Object;

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: java.lang.Object result> = r1;

        return r1;
    }

    static com.sun.xml.bind.v2.runtime.JaxBeanInfo access$1100(com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext)
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext r0;
        com.sun.xml.bind.v2.runtime.JaxBeanInfo $r1;

        r0 := @parameter0: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.JaxBeanInfo expectedType>;

        return $r1;
    }

    static void <clinit>()
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.LocatorExWrapper $r6;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$DefaultRootLoader $r7;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$ExpectedTypeRootLoader $r8;
        org.xml.sax.helpers.LocatorImpl $r5;
        int $i1, $i3;
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lcom/sun/xml/bind/v2/runtime/unmarshaller/UnmarshallingContext;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: boolean $assertionsDisabled> = $z1;

        $r5 = new org.xml.sax.helpers.LocatorImpl;

        specialinvoke $r5.<org.xml.sax.helpers.LocatorImpl: void <init>()>();

        virtualinvoke $r5.<org.xml.sax.helpers.LocatorImpl: void setPublicId(java.lang.String)>(null);

        virtualinvoke $r5.<org.xml.sax.helpers.LocatorImpl: void setSystemId(java.lang.String)>(null);

        $i1 = (int) -1;

        virtualinvoke $r5.<org.xml.sax.helpers.LocatorImpl: void setLineNumber(int)>($i1);

        $i3 = (int) -1;

        virtualinvoke $r5.<org.xml.sax.helpers.LocatorImpl: void setColumnNumber(int)>($i3);

        $r6 = new com.sun.xml.bind.v2.runtime.unmarshaller.LocatorExWrapper;

        specialinvoke $r6.<com.sun.xml.bind.v2.runtime.unmarshaller.LocatorExWrapper: void <init>(org.xml.sax.Locator)>($r5);

        <com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.LocatorEx DUMMY_INSTANCE> = $r6;

        $r7 = new com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$DefaultRootLoader;

        specialinvoke $r7.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$DefaultRootLoader: void <init>(com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$1)>(null);

        <com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.Loader DEFAULT_ROOT_LOADER> = $r7;

        $r8 = new com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$ExpectedTypeRootLoader;

        specialinvoke $r8.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$ExpectedTypeRootLoader: void <init>(com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$1)>(null);

        <com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.Loader EXPECTED_TYPE_ROOT_LOADER> = $r8;

        return;
    }
}
