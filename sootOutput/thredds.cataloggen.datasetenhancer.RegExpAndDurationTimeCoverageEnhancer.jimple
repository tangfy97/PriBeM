public class thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer extends java.lang.Object implements thredds.cataloggen.DatasetEnhancer
{
    private static org.slf4j.Logger log;
    private final java.lang.String matchPattern;
    private final java.lang.String substitutionPattern;
    private final java.lang.String duration;
    private final thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer$MatchTarget matchTarget;
    private java.util.regex.Pattern pattern;

    public static thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer getInstanceToMatchOnDatasetName(java.lang.String, java.lang.String, java.lang.String)
    {
        thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer $r0;
        java.lang.String r1, r2, r3;
        thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer$MatchTarget $r4;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r0 = new thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer;

        $r4 = <thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer$MatchTarget: thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer$MatchTarget DATASET_NAME>;

        specialinvoke $r0.<thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer: void <init>(java.lang.String,java.lang.String,java.lang.String,thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer$MatchTarget)>(r1, r2, r3, $r4);

        return $r0;
    }

    public static thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer getInstanceToMatchOnDatasetPath(java.lang.String, java.lang.String, java.lang.String)
    {
        thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer $r0;
        java.lang.String r1, r2, r3;
        thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer$MatchTarget $r4;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r0 = new thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer;

        $r4 = <thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer$MatchTarget: thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer$MatchTarget DATASET_PATH>;

        specialinvoke $r0.<thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer: void <init>(java.lang.String,java.lang.String,java.lang.String,thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer$MatchTarget)>(r1, r2, r3, $r4);

        return $r0;
    }

    private void <init>(java.lang.String, java.lang.String, java.lang.String, thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer$MatchTarget)
    {
        java.lang.String r1, r2, r3, $r14, $r17, $r19;
        thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer$MatchTarget r4;
        java.util.regex.PatternSyntaxException $r10;
        org.slf4j.Logger $r12;
        java.lang.IllegalArgumentException $r6, $r7, $r8, $r9;
        thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer r0;
        java.lang.StringBuilder $r11, $r13, $r15, $r16, $r18;
        java.util.regex.Pattern $r5;

        r0 := @this: thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer$MatchTarget;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null match pattern not allowed.");

        throw $r9;

     label1:
        if r2 != null goto label2;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null substitution pattern not allowed.");

        throw $r8;

     label2:
        if r3 != null goto label3;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null duration not allowed.");

        throw $r7;

     label3:
        if r4 != null goto label4;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null match target not allowed.");

        throw $r6;

     label4:
        r0.<thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer: java.lang.String matchPattern> = r1;

        r0.<thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer: java.lang.String substitutionPattern> = r2;

        r0.<thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer: java.lang.String duration> = r3;

        r0.<thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer: thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer$MatchTarget matchTarget> = r4;

     label5:
        $r5 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(r1);

        r0.<thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer: java.util.regex.Pattern pattern> = $r5;

     label6:
        goto label8;

     label7:
        $r10 := @caughtexception;

        $r12 = <thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer: org.slf4j.Logger log>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ctor(): bad match pattern <");

        $r14 = r0.<thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer: java.lang.String matchPattern>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">, failed to compile: ");

        $r17 = virtualinvoke $r10.<java.util.regex.PatternSyntaxException: java.lang.String getMessage()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r12.<org.slf4j.Logger: void error(java.lang.String)>($r19);

        r0.<thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer: java.util.regex.Pattern pattern> = null;

     label8:
        return;

        catch java.util.regex.PatternSyntaxException from label5 to label6 with label7;
    }

    public thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer$MatchTarget getMatchTarget()
    {
        thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer r0;
        thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer$MatchTarget $r1;

        r0 := @this: thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer;

        $r1 = r0.<thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer: thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer$MatchTarget matchTarget>;

        return $r1;
    }

    public java.lang.String getMatchPattern()
    {
        thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer r0;
        java.lang.String $r1;

        r0 := @this: thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer;

        $r1 = r0.<thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer: java.lang.String matchPattern>;

        return $r1;
    }

    public java.lang.String getSubstitutionPattern()
    {
        thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer r0;
        java.lang.String $r1;

        r0 := @this: thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer;

        $r1 = r0.<thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer: java.lang.String substitutionPattern>;

        return $r1;
    }

    public java.lang.String getDuration()
    {
        thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer r0;
        java.lang.String $r1;

        r0 := @this: thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer;

        $r1 = r0.<thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer: java.lang.String duration>;

        return $r1;
    }

    public java.lang.Object getConfigObject()
    {
        thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer r0;

        r0 := @this: thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer;

        return null;
    }

    public boolean addMetadata(thredds.catalog.InvDataset, thredds.crawlabledataset.CrawlableDataset)
    {
        java.lang.IndexOutOfBoundsException $r56;
        java.util.regex.Matcher $r16;
        java.lang.Exception $r33;
        ucar.nc2.units.DateRange $r20;
        thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer r0;
        java.lang.StringBuilder $r7, $r8, $r11, $r12, $r26, $r28, $r30, $r31, $r34, $r36, $r38, $r39, $r41, $r42, $r43, $r45, $r46, $r48, $r49, $r51, $r52, $r54, $r57, $r59, $r61, $r62, $r64, $r65, $r67;
        java.lang.StringBuffer $r17;
        java.lang.String $r10, $r13, $r18, $r23, $r25, $r29, $r32, $r37, $r40, $r44, $r47, $r50, $r53, $r55, $r60, $r63, $r66, $r68, r69;
        thredds.catalog.InvDatasetImpl $r22;
        java.lang.IllegalStateException $r6;
        thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer$MatchTarget $r2, $r3, $r4, $r5, $r9;
        boolean $z0, $z1, $z2;
        thredds.catalog.InvDataset r19;
        ucar.nc2.units.TimeDuration $r24;
        thredds.crawlabledataset.CrawlableDataset r14;
        java.util.regex.Pattern $r1, $r15;
        ucar.nc2.units.DateType $r21;
        int $i0;
        org.slf4j.Logger $r27, $r35, $r58;

        r0 := @this: thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer;

        r19 := @parameter0: thredds.catalog.InvDataset;

        r14 := @parameter1: thredds.crawlabledataset.CrawlableDataset;

        $r1 = r0.<thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer: java.util.regex.Pattern pattern>;

        if $r1 != null goto label01;

        $r27 = <thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer: org.slf4j.Logger log>;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("addMetadata(): bad match pattern <");

        $r29 = r0.<thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer: java.lang.String matchPattern>;

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">.");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r27.<org.slf4j.Logger: void error(java.lang.String)>($r32);

        return 0;

     label01:
        $r3 = r0.<thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer: thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer$MatchTarget matchTarget>;

        $r2 = <thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer$MatchTarget: thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer$MatchTarget DATASET_NAME>;

        $z0 = virtualinvoke $r3.<thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer$MatchTarget: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label02;

        r69 = interfaceinvoke r14.<thredds.crawlabledataset.CrawlableDataset: java.lang.String getName()>();

        goto label04;

     label02:
        $r5 = r0.<thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer: thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer$MatchTarget matchTarget>;

        $r4 = <thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer$MatchTarget: thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer$MatchTarget DATASET_PATH>;

        $z1 = virtualinvoke $r5.<thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer$MatchTarget: boolean equals(java.lang.Object)>($r4);

        if $z1 == 0 goto label03;

        r69 = interfaceinvoke r14.<thredds.crawlabledataset.CrawlableDataset: java.lang.String getPath()>();

        goto label04;

     label03:
        $r6 = new java.lang.IllegalStateException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown match target [");

        $r9 = r0.<thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer: thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer$MatchTarget matchTarget>;

        $r10 = virtualinvoke $r9.<thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer$MatchTarget: java.lang.String toString()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("].");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r13);

        throw $r6;

     label04:
        $r15 = r0.<thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer: java.util.regex.Pattern pattern>;

        $r16 = virtualinvoke $r15.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r69);

        $z2 = virtualinvoke $r16.<java.util.regex.Matcher: boolean find()>();

        if $z2 != 0 goto label05;

        return 0;

     label05:
        $r17 = new java.lang.StringBuffer;

        specialinvoke $r17.<java.lang.StringBuffer: void <init>()>();

     label06:
        $r18 = r0.<thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer: java.lang.String substitutionPattern>;

        virtualinvoke $r16.<java.util.regex.Matcher: java.util.regex.Matcher appendReplacement(java.lang.StringBuffer,java.lang.String)>($r17, $r18);

     label07:
        goto label09;

     label08:
        $r56 := @caughtexception;

        $r58 = <thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer: org.slf4j.Logger log>;

        $r57 = new java.lang.StringBuilder;

        specialinvoke $r57.<java.lang.StringBuilder: void <init>()>();

        $r59 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("addMetadata(): capture group mismatch between match pattern <");

        $r60 = r0.<thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer: java.lang.String matchPattern>;

        $r61 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r60);

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> and substitution pattern <");

        $r63 = r0.<thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer: java.lang.String substitutionPattern>;

        $r64 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r63);

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">: ");

        $r66 = virtualinvoke $r56.<java.lang.IndexOutOfBoundsException: java.lang.String getMessage()>();

        $r67 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r66);

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r58.<org.slf4j.Logger: void error(java.lang.String)>($r68);

        return 0;

     label09:
        $i0 = virtualinvoke $r16.<java.util.regex.Matcher: int start()>();

        virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer delete(int,int)>(0, $i0);

     label10:
        $r22 = (thredds.catalog.InvDatasetImpl) r19;

        $r20 = new ucar.nc2.units.DateRange;

        $r21 = new ucar.nc2.units.DateType;

        $r23 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r21.<ucar.nc2.units.DateType: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r23, null, null);

        $r24 = new ucar.nc2.units.TimeDuration;

        $r25 = r0.<thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer: java.lang.String duration>;

        specialinvoke $r24.<ucar.nc2.units.TimeDuration: void <init>(java.lang.String)>($r25);

        specialinvoke $r20.<ucar.nc2.units.DateRange: void <init>(ucar.nc2.units.DateType,ucar.nc2.units.DateType,ucar.nc2.units.TimeDuration,ucar.nc2.units.TimeDuration)>($r21, null, $r24, null);

        virtualinvoke $r22.<thredds.catalog.InvDatasetImpl: void setTimeCoverage(ucar.nc2.units.DateRange)>($r20);

     label11:
        goto label13;

     label12:
        $r33 := @caughtexception;

        $r35 = <thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer: org.slf4j.Logger log>;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("addMetadata(): Start time <");

        $r37 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> or duration <");

        $r40 = r0.<thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer: java.lang.String duration>;

        $r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> not parsable");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (crDataset.getName() <");

        $r44 = interfaceinvoke r14.<thredds.crawlabledataset.CrawlableDataset: java.lang.String getName()>();

        $r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">, this.matchPattern() <");

        $r47 = r0.<thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer: java.lang.String matchPattern>;

        $r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">, this.substitutionPattern() <");

        $r50 = r0.<thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer: java.lang.String substitutionPattern>;

        $r51 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">): ");

        $r53 = virtualinvoke $r33.<java.lang.Exception: java.lang.String getMessage()>();

        $r54 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r53);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r35.<org.slf4j.Logger: void warn(java.lang.String)>($r55);

        return 0;

     label13:
        return 1;

        catch java.lang.IndexOutOfBoundsException from label06 to label07 with label08;
        catch java.lang.Exception from label10 to label11 with label12;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lthredds/cataloggen/datasetenhancer/RegExpAndDurationTimeCoverageEnhancer;");

        <thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer: org.slf4j.Logger log> = $r0;

        return;
    }
}
