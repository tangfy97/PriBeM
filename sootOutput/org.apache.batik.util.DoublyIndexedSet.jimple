public class org.apache.batik.util.DoublyIndexedSet extends java.lang.Object
{
    protected org.apache.batik.util.DoublyIndexedTable table;
    protected static java.lang.Object value;

    public void <init>()
    {
        org.apache.batik.util.DoublyIndexedSet r0;
        org.apache.batik.util.DoublyIndexedTable $r1;

        r0 := @this: org.apache.batik.util.DoublyIndexedSet;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.apache.batik.util.DoublyIndexedTable;

        specialinvoke $r1.<org.apache.batik.util.DoublyIndexedTable: void <init>()>();

        r0.<org.apache.batik.util.DoublyIndexedSet: org.apache.batik.util.DoublyIndexedTable table> = $r1;

        return;
    }

    public int size()
    {
        int $i0;
        org.apache.batik.util.DoublyIndexedSet r0;
        org.apache.batik.util.DoublyIndexedTable $r1;

        r0 := @this: org.apache.batik.util.DoublyIndexedSet;

        $r1 = r0.<org.apache.batik.util.DoublyIndexedSet: org.apache.batik.util.DoublyIndexedTable table>;

        $i0 = virtualinvoke $r1.<org.apache.batik.util.DoublyIndexedTable: int size()>();

        return $i0;
    }

    public void add(java.lang.Object, java.lang.Object)
    {
        org.apache.batik.util.DoublyIndexedSet r0;
        java.lang.Object r1, r2, $r3;
        org.apache.batik.util.DoublyIndexedTable $r4;

        r0 := @this: org.apache.batik.util.DoublyIndexedSet;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = r0.<org.apache.batik.util.DoublyIndexedSet: org.apache.batik.util.DoublyIndexedTable table>;

        $r3 = <org.apache.batik.util.DoublyIndexedSet: java.lang.Object value>;

        virtualinvoke $r4.<org.apache.batik.util.DoublyIndexedTable: java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object)>(r1, r2, $r3);

        return;
    }

    public void remove(java.lang.Object, java.lang.Object)
    {
        org.apache.batik.util.DoublyIndexedSet r0;
        java.lang.Object r1, r2;
        org.apache.batik.util.DoublyIndexedTable $r3;

        r0 := @this: org.apache.batik.util.DoublyIndexedSet;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<org.apache.batik.util.DoublyIndexedSet: org.apache.batik.util.DoublyIndexedTable table>;

        virtualinvoke $r3.<org.apache.batik.util.DoublyIndexedTable: java.lang.Object remove(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public boolean contains(java.lang.Object, java.lang.Object)
    {
        org.apache.batik.util.DoublyIndexedSet r0;
        java.lang.Object r1, r2, $r4;
        org.apache.batik.util.DoublyIndexedTable $r3;
        boolean $z0;

        r0 := @this: org.apache.batik.util.DoublyIndexedSet;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<org.apache.batik.util.DoublyIndexedSet: org.apache.batik.util.DoublyIndexedTable table>;

        $r4 = virtualinvoke $r3.<org.apache.batik.util.DoublyIndexedTable: java.lang.Object get(java.lang.Object,java.lang.Object)>(r1, r2);

        if $r4 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void clear()
    {
        org.apache.batik.util.DoublyIndexedSet r0;
        org.apache.batik.util.DoublyIndexedTable $r1;

        r0 := @this: org.apache.batik.util.DoublyIndexedSet;

        $r1 = r0.<org.apache.batik.util.DoublyIndexedSet: org.apache.batik.util.DoublyIndexedTable table>;

        virtualinvoke $r1.<org.apache.batik.util.DoublyIndexedTable: void clear()>();

        return;
    }

    static void <clinit>()
    {
        java.lang.Object $r0;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <org.apache.batik.util.DoublyIndexedSet: java.lang.Object value> = $r0;

        return;
    }
}
