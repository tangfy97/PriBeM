class org.apache.batik.swing.svg.AbstractJSVGComponent$10$Query extends java.lang.Object implements java.lang.Runnable
{
    float result;
    private final float val$ff;
    private final org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper this$0;

    void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper, float)
    {
        float f0;
        org.apache.batik.swing.svg.AbstractJSVGComponent$10$Query r0;
        org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper r1;

        r0 := @this: org.apache.batik.swing.svg.AbstractJSVGComponent$10$Query;

        r1 := @parameter0: org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper;

        f0 := @parameter1: float;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.swing.svg.AbstractJSVGComponent$10$Query: org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper this$0> = r1;

        r0.<org.apache.batik.swing.svg.AbstractJSVGComponent$10$Query: float val$ff> = f0;

        return;
    }

    public void run()
    {
        org.apache.batik.bridge.UserAgent $r2;
        org.apache.batik.swing.svg.AbstractJSVGComponent$10$Query r0;
        float $f0, $f1;
        org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper $r1;

        r0 := @this: org.apache.batik.swing.svg.AbstractJSVGComponent$10$Query;

        $r1 = r0.<org.apache.batik.swing.svg.AbstractJSVGComponent$10$Query: org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper this$0>;

        $r2 = $r1.<org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper: org.apache.batik.bridge.UserAgent userAgent>;

        $f0 = r0.<org.apache.batik.swing.svg.AbstractJSVGComponent$10$Query: float val$ff>;

        $f1 = interfaceinvoke $r2.<org.apache.batik.bridge.UserAgent: float getBolderFontWeight(float)>($f0);

        r0.<org.apache.batik.swing.svg.AbstractJSVGComponent$10$Query: float result> = $f1;

        return;
    }
}
