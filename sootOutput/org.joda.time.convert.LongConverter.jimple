class org.joda.time.convert.LongConverter extends org.joda.time.convert.AbstractConverter implements org.joda.time.convert.InstantConverter, org.joda.time.convert.PartialConverter, org.joda.time.convert.DurationConverter
{
    static final org.joda.time.convert.LongConverter INSTANCE;
    static java.lang.Class class$java$lang$Long;

    protected void <init>()
    {
        org.joda.time.convert.LongConverter r0;

        r0 := @this: org.joda.time.convert.LongConverter;

        specialinvoke r0.<org.joda.time.convert.AbstractConverter: void <init>()>();

        return;
    }

    public long getInstantMillis(java.lang.Object, org.joda.time.Chronology)
    {
        org.joda.time.convert.LongConverter r2;
        java.lang.Long $r1;
        org.joda.time.Chronology r3;
        java.lang.Object r0;
        long $l0;

        r2 := @this: org.joda.time.convert.LongConverter;

        r0 := @parameter0: java.lang.Object;

        r3 := @parameter1: org.joda.time.Chronology;

        $r1 = (java.lang.Long) r0;

        $l0 = virtualinvoke $r1.<java.lang.Long: long longValue()>();

        return $l0;
    }

    public long getDurationMillis(java.lang.Object)
    {
        org.joda.time.convert.LongConverter r2;
        java.lang.Long $r1;
        java.lang.Object r0;
        long $l0;

        r2 := @this: org.joda.time.convert.LongConverter;

        r0 := @parameter0: java.lang.Object;

        $r1 = (java.lang.Long) r0;

        $l0 = virtualinvoke $r1.<java.lang.Long: long longValue()>();

        return $l0;
    }

    public java.lang.Class getSupportedType()
    {
        java.lang.Class $r0, $r2;
        org.joda.time.convert.LongConverter r1;

        r1 := @this: org.joda.time.convert.LongConverter;

        $r0 = <org.joda.time.convert.LongConverter: java.lang.Class class$java$lang$Long>;

        if $r0 != null goto label1;

        $r2 = staticinvoke <org.joda.time.convert.LongConverter: java.lang.Class class$(java.lang.String)>("java.lang.Long");

        <org.joda.time.convert.LongConverter: java.lang.Class class$java$lang$Long> = $r2;

        goto label2;

     label1:
        $r2 = <org.joda.time.convert.LongConverter: java.lang.Class class$java$lang$Long>;

     label2:
        return $r2;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        org.joda.time.convert.LongConverter $r0;

        $r0 = new org.joda.time.convert.LongConverter;

        specialinvoke $r0.<org.joda.time.convert.LongConverter: void <init>()>();

        <org.joda.time.convert.LongConverter: org.joda.time.convert.LongConverter INSTANCE> = $r0;

        return;
    }
}
