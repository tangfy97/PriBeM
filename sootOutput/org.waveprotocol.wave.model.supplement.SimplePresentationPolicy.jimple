public final class org.waveprotocol.wave.model.supplement.SimplePresentationPolicy extends java.lang.Object implements org.waveprotocol.wave.model.supplement.PresentationPolicy
{
    private final org.waveprotocol.wave.model.supplement.ThreadState defaultState;

    public void <init>(org.waveprotocol.wave.model.supplement.ThreadState)
    {
        org.waveprotocol.wave.model.supplement.SimplePresentationPolicy r0;
        org.waveprotocol.wave.model.supplement.ThreadState r1;

        r0 := @this: org.waveprotocol.wave.model.supplement.SimplePresentationPolicy;

        r1 := @parameter0: org.waveprotocol.wave.model.supplement.ThreadState;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.model.supplement.SimplePresentationPolicy: org.waveprotocol.wave.model.supplement.ThreadState defaultState> = r1;

        return;
    }

    public org.waveprotocol.wave.model.supplement.ThreadState expand(org.waveprotocol.wave.model.conversation.ConversationThread, org.waveprotocol.wave.model.supplement.ThreadState)
    {
        org.waveprotocol.wave.model.supplement.SimplePresentationPolicy r1;
        org.waveprotocol.wave.model.conversation.ConversationThread r2;
        org.waveprotocol.wave.model.supplement.ThreadState $r0, r3;

        r1 := @this: org.waveprotocol.wave.model.supplement.SimplePresentationPolicy;

        r2 := @parameter0: org.waveprotocol.wave.model.conversation.ConversationThread;

        r3 := @parameter1: org.waveprotocol.wave.model.supplement.ThreadState;

        $r0 = <org.waveprotocol.wave.model.supplement.ThreadState: org.waveprotocol.wave.model.supplement.ThreadState EXPANDED>;

        return $r0;
    }

    public org.waveprotocol.wave.model.supplement.ThreadState collapse(org.waveprotocol.wave.model.conversation.ConversationThread, org.waveprotocol.wave.model.supplement.ThreadState)
    {
        org.waveprotocol.wave.model.supplement.SimplePresentationPolicy r1;
        org.waveprotocol.wave.model.conversation.ConversationThread r2;
        org.waveprotocol.wave.model.supplement.ThreadState $r0, r3;

        r1 := @this: org.waveprotocol.wave.model.supplement.SimplePresentationPolicy;

        r2 := @parameter0: org.waveprotocol.wave.model.conversation.ConversationThread;

        r3 := @parameter1: org.waveprotocol.wave.model.supplement.ThreadState;

        $r0 = <org.waveprotocol.wave.model.supplement.ThreadState: org.waveprotocol.wave.model.supplement.ThreadState COLLAPSED>;

        return $r0;
    }

    public org.waveprotocol.wave.model.supplement.ThreadState getThreadState(org.waveprotocol.wave.model.conversation.ConversationThread, org.waveprotocol.wave.model.supplement.ThreadState)
    {
        org.waveprotocol.wave.model.supplement.SimplePresentationPolicy r1;
        org.waveprotocol.wave.model.conversation.ConversationThread r2;
        org.waveprotocol.wave.model.supplement.ThreadState r0, $r3;

        r1 := @this: org.waveprotocol.wave.model.supplement.SimplePresentationPolicy;

        r2 := @parameter0: org.waveprotocol.wave.model.conversation.ConversationThread;

        r0 := @parameter1: org.waveprotocol.wave.model.supplement.ThreadState;

        if r0 == null goto label1;

        $r3 = r0;

        goto label2;

     label1:
        $r3 = r1.<org.waveprotocol.wave.model.supplement.SimplePresentationPolicy: org.waveprotocol.wave.model.supplement.ThreadState defaultState>;

     label2:
        return $r3;
    }
}
