public class org.apache.poi.xslf.model.geom.Path extends java.lang.Object
{
    private final java.util.List commands;
    boolean _fill;
    boolean _stroke;
    long _w;
    long _h;

    public void <init>()
    {
        org.apache.poi.xslf.model.geom.Path r0;

        r0 := @this: org.apache.poi.xslf.model.geom.Path;

        specialinvoke r0.<org.apache.poi.xslf.model.geom.Path: void <init>(boolean,boolean)>(1, 1);

        return;
    }

    public void <init>(boolean, boolean)
    {
        org.apache.poi.xslf.model.geom.Path r0;
        java.util.ArrayList $r1;
        boolean z0, z1;

        r0 := @this: org.apache.poi.xslf.model.geom.Path;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.xslf.model.geom.Path: java.util.List commands> = $r1;

        r0.<org.apache.poi.xslf.model.geom.Path: long _w> = -1L;

        r0.<org.apache.poi.xslf.model.geom.Path: long _h> = -1L;

        r0.<org.apache.poi.xslf.model.geom.Path: boolean _fill> = z0;

        r0.<org.apache.poi.xslf.model.geom.Path: boolean _stroke> = z1;

        return;
    }

    public void <init>(org.openxmlformats.schemas.drawingml.x2006.main.CTPath2D)
    {
        java.lang.IllegalStateException $r7;
        org.apache.poi.xslf.model.geom.QuadToCommand $r21;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DCubicBezierTo r35;
        org.apache.poi.xslf.model.geom.CurveToCommand $r17;
        org.apache.poi.xslf.model.geom.LineToCommand $r27;
        org.apache.poi.xslf.model.geom.ClosePathCommand $r12;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        org.apache.poi.xslf.model.geom.Path r0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTAdjPoint2D $r14, $r15, $r16, $r19, $r20, $r26, $r30;
        java.util.List $r13, $r18, $r22, $r24, $r28, $r32;
        org.apache.xmlbeans.XmlObject[] $r5;
        org.apache.poi.xslf.model.geom.ArcToCommand $r23;
        java.lang.StringBuilder $r8, $r9, $r10;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DQuadBezierTo r34;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DMoveTo $r29;
        org.openxmlformats.schemas.drawingml.x2006.main.STPathFillMode$Enum $r2, $r3;
        long $l1, $l2;
        java.util.ArrayList $r4;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DArcTo r33;
        int $i0, i3;
        org.apache.xmlbeans.XmlObject r6;
        java.lang.String $r11;
        org.apache.poi.xslf.model.geom.MoveToCommand $r31;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DLineTo $r25;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPath2D r1;

        r0 := @this: org.apache.poi.xslf.model.geom.Path;

        r1 := @parameter0: org.openxmlformats.schemas.drawingml.x2006.main.CTPath2D;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = interfaceinvoke r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTPath2D: org.openxmlformats.schemas.drawingml.x2006.main.STPathFillMode$Enum getFill()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.STPathFillMode: org.openxmlformats.schemas.drawingml.x2006.main.STPathFillMode$Enum NONE>;

        if $r2 == $r3 goto label01;

        $z9 = 1;

        goto label02;

     label01:
        $z9 = 0;

     label02:
        r0.<org.apache.poi.xslf.model.geom.Path: boolean _fill> = $z9;

        $z0 = interfaceinvoke r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTPath2D: boolean getStroke()>();

        r0.<org.apache.poi.xslf.model.geom.Path: boolean _stroke> = $z0;

        $z1 = interfaceinvoke r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTPath2D: boolean isSetW()>();

        if $z1 == 0 goto label03;

        $l1 = interfaceinvoke r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTPath2D: long getW()>();

        goto label04;

     label03:
        $l1 = -1L;

     label04:
        r0.<org.apache.poi.xslf.model.geom.Path: long _w> = $l1;

        $z2 = interfaceinvoke r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTPath2D: boolean isSetH()>();

        if $z2 == 0 goto label05;

        $l2 = interfaceinvoke r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTPath2D: long getH()>();

        goto label06;

     label05:
        $l2 = -1L;

     label06:
        r0.<org.apache.poi.xslf.model.geom.Path: long _h> = $l2;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.xslf.model.geom.Path: java.util.List commands> = $r4;

        $r5 = interfaceinvoke r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTPath2D: org.apache.xmlbeans.XmlObject[] selectPath(java.lang.String)>("*");

        $i0 = lengthof $r5;

        i3 = 0;

     label07:
        if i3 >= $i0 goto label15;

        r6 = $r5[i3];

        $z3 = r6 instanceof org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DMoveTo;

        if $z3 == 0 goto label08;

        $r29 = (org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DMoveTo) r6;

        $r30 = interfaceinvoke $r29.<org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DMoveTo: org.openxmlformats.schemas.drawingml.x2006.main.CTAdjPoint2D getPt()>();

        $r32 = r0.<org.apache.poi.xslf.model.geom.Path: java.util.List commands>;

        $r31 = new org.apache.poi.xslf.model.geom.MoveToCommand;

        specialinvoke $r31.<org.apache.poi.xslf.model.geom.MoveToCommand: void <init>(org.openxmlformats.schemas.drawingml.x2006.main.CTAdjPoint2D)>($r30);

        interfaceinvoke $r32.<java.util.List: boolean add(java.lang.Object)>($r31);

        goto label14;

     label08:
        $z4 = r6 instanceof org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DLineTo;

        if $z4 == 0 goto label09;

        $r25 = (org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DLineTo) r6;

        $r26 = interfaceinvoke $r25.<org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DLineTo: org.openxmlformats.schemas.drawingml.x2006.main.CTAdjPoint2D getPt()>();

        $r28 = r0.<org.apache.poi.xslf.model.geom.Path: java.util.List commands>;

        $r27 = new org.apache.poi.xslf.model.geom.LineToCommand;

        specialinvoke $r27.<org.apache.poi.xslf.model.geom.LineToCommand: void <init>(org.openxmlformats.schemas.drawingml.x2006.main.CTAdjPoint2D)>($r26);

        interfaceinvoke $r28.<java.util.List: boolean add(java.lang.Object)>($r27);

        goto label14;

     label09:
        $z5 = r6 instanceof org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DArcTo;

        if $z5 == 0 goto label10;

        r33 = (org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DArcTo) r6;

        $r24 = r0.<org.apache.poi.xslf.model.geom.Path: java.util.List commands>;

        $r23 = new org.apache.poi.xslf.model.geom.ArcToCommand;

        specialinvoke $r23.<org.apache.poi.xslf.model.geom.ArcToCommand: void <init>(org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DArcTo)>(r33);

        interfaceinvoke $r24.<java.util.List: boolean add(java.lang.Object)>($r23);

        goto label14;

     label10:
        $z6 = r6 instanceof org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DQuadBezierTo;

        if $z6 == 0 goto label11;

        r34 = (org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DQuadBezierTo) r6;

        $r19 = interfaceinvoke r34.<org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DQuadBezierTo: org.openxmlformats.schemas.drawingml.x2006.main.CTAdjPoint2D getPtArray(int)>(0);

        $r20 = interfaceinvoke r34.<org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DQuadBezierTo: org.openxmlformats.schemas.drawingml.x2006.main.CTAdjPoint2D getPtArray(int)>(1);

        $r22 = r0.<org.apache.poi.xslf.model.geom.Path: java.util.List commands>;

        $r21 = new org.apache.poi.xslf.model.geom.QuadToCommand;

        specialinvoke $r21.<org.apache.poi.xslf.model.geom.QuadToCommand: void <init>(org.openxmlformats.schemas.drawingml.x2006.main.CTAdjPoint2D,org.openxmlformats.schemas.drawingml.x2006.main.CTAdjPoint2D)>($r19, $r20);

        interfaceinvoke $r22.<java.util.List: boolean add(java.lang.Object)>($r21);

        goto label14;

     label11:
        $z7 = r6 instanceof org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DCubicBezierTo;

        if $z7 == 0 goto label12;

        r35 = (org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DCubicBezierTo) r6;

        $r14 = interfaceinvoke r35.<org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DCubicBezierTo: org.openxmlformats.schemas.drawingml.x2006.main.CTAdjPoint2D getPtArray(int)>(0);

        $r15 = interfaceinvoke r35.<org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DCubicBezierTo: org.openxmlformats.schemas.drawingml.x2006.main.CTAdjPoint2D getPtArray(int)>(1);

        $r16 = interfaceinvoke r35.<org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DCubicBezierTo: org.openxmlformats.schemas.drawingml.x2006.main.CTAdjPoint2D getPtArray(int)>(2);

        $r18 = r0.<org.apache.poi.xslf.model.geom.Path: java.util.List commands>;

        $r17 = new org.apache.poi.xslf.model.geom.CurveToCommand;

        specialinvoke $r17.<org.apache.poi.xslf.model.geom.CurveToCommand: void <init>(org.openxmlformats.schemas.drawingml.x2006.main.CTAdjPoint2D,org.openxmlformats.schemas.drawingml.x2006.main.CTAdjPoint2D,org.openxmlformats.schemas.drawingml.x2006.main.CTAdjPoint2D)>($r14, $r15, $r16);

        interfaceinvoke $r18.<java.util.List: boolean add(java.lang.Object)>($r17);

        goto label14;

     label12:
        $z8 = r6 instanceof org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DClose;

        if $z8 == 0 goto label13;

        $r13 = r0.<org.apache.poi.xslf.model.geom.Path: java.util.List commands>;

        $r12 = new org.apache.poi.xslf.model.geom.ClosePathCommand;

        specialinvoke $r12.<org.apache.poi.xslf.model.geom.ClosePathCommand: void <init>()>();

        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>($r12);

        goto label14;

     label13:
        $r7 = new java.lang.IllegalStateException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported path segment: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        throw $r7;

     label14:
        i3 = i3 + 1;

        goto label07;

     label15:
        return;
    }

    public void addCommand(org.apache.poi.xslf.model.geom.PathCommand)
    {
        org.apache.poi.xslf.model.geom.Path r0;
        java.util.List $r2;
        org.apache.poi.xslf.model.geom.PathCommand r1;

        r0 := @this: org.apache.poi.xslf.model.geom.Path;

        r1 := @parameter0: org.apache.poi.xslf.model.geom.PathCommand;

        $r2 = r0.<org.apache.poi.xslf.model.geom.Path: java.util.List commands>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public java.awt.geom.GeneralPath getPath(org.apache.poi.xslf.model.geom.Context)
    {
        org.apache.poi.xslf.model.geom.Path r1;
        org.apache.poi.xslf.model.geom.Context r6;
        java.util.Iterator $r3;
        org.apache.poi.xslf.model.geom.PathCommand r5;
        java.util.List $r2;
        java.lang.Object $r4;
        java.awt.geom.GeneralPath $r0;
        boolean $z0;

        r1 := @this: org.apache.poi.xslf.model.geom.Path;

        r6 := @parameter0: org.apache.poi.xslf.model.geom.Context;

        $r0 = new java.awt.geom.GeneralPath;

        specialinvoke $r0.<java.awt.geom.GeneralPath: void <init>()>();

        $r2 = r1.<org.apache.poi.xslf.model.geom.Path: java.util.List commands>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.poi.xslf.model.geom.PathCommand) $r4;

        interfaceinvoke r5.<org.apache.poi.xslf.model.geom.PathCommand: void execute(java.awt.geom.GeneralPath,org.apache.poi.xslf.model.geom.Context)>($r0, r6);

        goto label1;

     label2:
        return $r0;
    }

    public boolean isStroked()
    {
        org.apache.poi.xslf.model.geom.Path r0;
        boolean $z0;

        r0 := @this: org.apache.poi.xslf.model.geom.Path;

        $z0 = r0.<org.apache.poi.xslf.model.geom.Path: boolean _stroke>;

        return $z0;
    }

    public boolean isFilled()
    {
        org.apache.poi.xslf.model.geom.Path r0;
        boolean $z0;

        r0 := @this: org.apache.poi.xslf.model.geom.Path;

        $z0 = r0.<org.apache.poi.xslf.model.geom.Path: boolean _fill>;

        return $z0;
    }

    public long getW()
    {
        org.apache.poi.xslf.model.geom.Path r0;
        long $l0;

        r0 := @this: org.apache.poi.xslf.model.geom.Path;

        $l0 = r0.<org.apache.poi.xslf.model.geom.Path: long _w>;

        return $l0;
    }

    public long getH()
    {
        org.apache.poi.xslf.model.geom.Path r0;
        long $l0;

        r0 := @this: org.apache.poi.xslf.model.geom.Path;

        $l0 = r0.<org.apache.poi.xslf.model.geom.Path: long _h>;

        return $l0;
    }
}
