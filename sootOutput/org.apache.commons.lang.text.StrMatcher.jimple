public abstract class org.apache.commons.lang.text.StrMatcher extends java.lang.Object
{
    private static final org.apache.commons.lang.text.StrMatcher COMMA_MATCHER;
    private static final org.apache.commons.lang.text.StrMatcher TAB_MATCHER;
    private static final org.apache.commons.lang.text.StrMatcher SPACE_MATCHER;
    private static final org.apache.commons.lang.text.StrMatcher SPLIT_MATCHER;
    private static final org.apache.commons.lang.text.StrMatcher TRIM_MATCHER;
    private static final org.apache.commons.lang.text.StrMatcher SINGLE_QUOTE_MATCHER;
    private static final org.apache.commons.lang.text.StrMatcher DOUBLE_QUOTE_MATCHER;
    private static final org.apache.commons.lang.text.StrMatcher QUOTE_MATCHER;
    private static final org.apache.commons.lang.text.StrMatcher NONE_MATCHER;

    public static org.apache.commons.lang.text.StrMatcher commaMatcher()
    {
        org.apache.commons.lang.text.StrMatcher $r0;

        $r0 = <org.apache.commons.lang.text.StrMatcher: org.apache.commons.lang.text.StrMatcher COMMA_MATCHER>;

        return $r0;
    }

    public static org.apache.commons.lang.text.StrMatcher tabMatcher()
    {
        org.apache.commons.lang.text.StrMatcher $r0;

        $r0 = <org.apache.commons.lang.text.StrMatcher: org.apache.commons.lang.text.StrMatcher TAB_MATCHER>;

        return $r0;
    }

    public static org.apache.commons.lang.text.StrMatcher spaceMatcher()
    {
        org.apache.commons.lang.text.StrMatcher $r0;

        $r0 = <org.apache.commons.lang.text.StrMatcher: org.apache.commons.lang.text.StrMatcher SPACE_MATCHER>;

        return $r0;
    }

    public static org.apache.commons.lang.text.StrMatcher splitMatcher()
    {
        org.apache.commons.lang.text.StrMatcher $r0;

        $r0 = <org.apache.commons.lang.text.StrMatcher: org.apache.commons.lang.text.StrMatcher SPLIT_MATCHER>;

        return $r0;
    }

    public static org.apache.commons.lang.text.StrMatcher trimMatcher()
    {
        org.apache.commons.lang.text.StrMatcher $r0;

        $r0 = <org.apache.commons.lang.text.StrMatcher: org.apache.commons.lang.text.StrMatcher TRIM_MATCHER>;

        return $r0;
    }

    public static org.apache.commons.lang.text.StrMatcher singleQuoteMatcher()
    {
        org.apache.commons.lang.text.StrMatcher $r0;

        $r0 = <org.apache.commons.lang.text.StrMatcher: org.apache.commons.lang.text.StrMatcher SINGLE_QUOTE_MATCHER>;

        return $r0;
    }

    public static org.apache.commons.lang.text.StrMatcher doubleQuoteMatcher()
    {
        org.apache.commons.lang.text.StrMatcher $r0;

        $r0 = <org.apache.commons.lang.text.StrMatcher: org.apache.commons.lang.text.StrMatcher DOUBLE_QUOTE_MATCHER>;

        return $r0;
    }

    public static org.apache.commons.lang.text.StrMatcher quoteMatcher()
    {
        org.apache.commons.lang.text.StrMatcher $r0;

        $r0 = <org.apache.commons.lang.text.StrMatcher: org.apache.commons.lang.text.StrMatcher QUOTE_MATCHER>;

        return $r0;
    }

    public static org.apache.commons.lang.text.StrMatcher noneMatcher()
    {
        org.apache.commons.lang.text.StrMatcher $r0;

        $r0 = <org.apache.commons.lang.text.StrMatcher: org.apache.commons.lang.text.StrMatcher NONE_MATCHER>;

        return $r0;
    }

    public static org.apache.commons.lang.text.StrMatcher charMatcher(char)
    {
        char c0;
        org.apache.commons.lang.text.StrMatcher$CharMatcher $r0;

        c0 := @parameter0: char;

        $r0 = new org.apache.commons.lang.text.StrMatcher$CharMatcher;

        specialinvoke $r0.<org.apache.commons.lang.text.StrMatcher$CharMatcher: void <init>(char)>(c0);

        return $r0;
    }

    public static org.apache.commons.lang.text.StrMatcher charSetMatcher(char[])
    {
        org.apache.commons.lang.text.StrMatcher$CharSetMatcher $r2;
        int $i0, $i1;
        char[] r0;
        char $c2;
        org.apache.commons.lang.text.StrMatcher $r1;
        org.apache.commons.lang.text.StrMatcher$CharMatcher $r3;

        r0 := @parameter0: char[];

        if r0 == null goto label1;

        $i0 = lengthof r0;

        if $i0 != 0 goto label2;

     label1:
        $r1 = <org.apache.commons.lang.text.StrMatcher: org.apache.commons.lang.text.StrMatcher NONE_MATCHER>;

        return $r1;

     label2:
        $i1 = lengthof r0;

        if $i1 != 1 goto label3;

        $r3 = new org.apache.commons.lang.text.StrMatcher$CharMatcher;

        $c2 = r0[0];

        specialinvoke $r3.<org.apache.commons.lang.text.StrMatcher$CharMatcher: void <init>(char)>($c2);

        return $r3;

     label3:
        $r2 = new org.apache.commons.lang.text.StrMatcher$CharSetMatcher;

        specialinvoke $r2.<org.apache.commons.lang.text.StrMatcher$CharSetMatcher: void <init>(char[])>(r0);

        return $r2;
    }

    public static org.apache.commons.lang.text.StrMatcher charSetMatcher(java.lang.String)
    {
        char $c2;
        org.apache.commons.lang.text.StrMatcher$CharMatcher $r4;
        org.apache.commons.lang.text.StrMatcher$CharSetMatcher $r2;
        int $i0, $i1;
        char[] $r3;
        java.lang.String r0;
        org.apache.commons.lang.text.StrMatcher $r1;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        $r1 = <org.apache.commons.lang.text.StrMatcher: org.apache.commons.lang.text.StrMatcher NONE_MATCHER>;

        return $r1;

     label2:
        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i1 != 1 goto label3;

        $r4 = new org.apache.commons.lang.text.StrMatcher$CharMatcher;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        specialinvoke $r4.<org.apache.commons.lang.text.StrMatcher$CharMatcher: void <init>(char)>($c2);

        return $r4;

     label3:
        $r2 = new org.apache.commons.lang.text.StrMatcher$CharSetMatcher;

        $r3 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();

        specialinvoke $r2.<org.apache.commons.lang.text.StrMatcher$CharSetMatcher: void <init>(char[])>($r3);

        return $r2;
    }

    public static org.apache.commons.lang.text.StrMatcher stringMatcher(java.lang.String)
    {
        int $i0;
        org.apache.commons.lang.text.StrMatcher$StringMatcher $r2;
        java.lang.String r0;
        org.apache.commons.lang.text.StrMatcher $r1;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        $r1 = <org.apache.commons.lang.text.StrMatcher: org.apache.commons.lang.text.StrMatcher NONE_MATCHER>;

        return $r1;

     label2:
        $r2 = new org.apache.commons.lang.text.StrMatcher$StringMatcher;

        specialinvoke $r2.<org.apache.commons.lang.text.StrMatcher$StringMatcher: void <init>(java.lang.String)>(r0);

        return $r2;
    }

    protected void <init>()
    {
        org.apache.commons.lang.text.StrMatcher r0;

        r0 := @this: org.apache.commons.lang.text.StrMatcher;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract int isMatch(char[], int, int, int);

    public int isMatch(char[], int)
    {
        int i0, $i1, $i2;
        char[] r1;
        org.apache.commons.lang.text.StrMatcher r0;

        r0 := @this: org.apache.commons.lang.text.StrMatcher;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        $i1 = lengthof r1;

        $i2 = virtualinvoke r0.<org.apache.commons.lang.text.StrMatcher: int isMatch(char[],int,int,int)>(r1, i0, 0, $i1);

        return $i2;
    }

    static void <clinit>()
    {
        org.apache.commons.lang.text.StrMatcher$CharMatcher $r0, $r1, $r2, $r7, $r8;
        org.apache.commons.lang.text.StrMatcher$TrimMatcher $r6;
        org.apache.commons.lang.text.StrMatcher$CharSetMatcher $r3, $r9;
        char[] $r5, $r11;
        java.lang.String $r4, $r10;
        org.apache.commons.lang.text.StrMatcher$NoMatcher $r12;

        $r0 = new org.apache.commons.lang.text.StrMatcher$CharMatcher;

        specialinvoke $r0.<org.apache.commons.lang.text.StrMatcher$CharMatcher: void <init>(char)>(44);

        <org.apache.commons.lang.text.StrMatcher: org.apache.commons.lang.text.StrMatcher COMMA_MATCHER> = $r0;

        $r1 = new org.apache.commons.lang.text.StrMatcher$CharMatcher;

        specialinvoke $r1.<org.apache.commons.lang.text.StrMatcher$CharMatcher: void <init>(char)>(9);

        <org.apache.commons.lang.text.StrMatcher: org.apache.commons.lang.text.StrMatcher TAB_MATCHER> = $r1;

        $r2 = new org.apache.commons.lang.text.StrMatcher$CharMatcher;

        specialinvoke $r2.<org.apache.commons.lang.text.StrMatcher$CharMatcher: void <init>(char)>(32);

        <org.apache.commons.lang.text.StrMatcher: org.apache.commons.lang.text.StrMatcher SPACE_MATCHER> = $r2;

        $r3 = new org.apache.commons.lang.text.StrMatcher$CharSetMatcher;

        $r4 = " \t\n\r\f";

        $r5 = virtualinvoke $r4.<java.lang.String: char[] toCharArray()>();

        specialinvoke $r3.<org.apache.commons.lang.text.StrMatcher$CharSetMatcher: void <init>(char[])>($r5);

        <org.apache.commons.lang.text.StrMatcher: org.apache.commons.lang.text.StrMatcher SPLIT_MATCHER> = $r3;

        $r6 = new org.apache.commons.lang.text.StrMatcher$TrimMatcher;

        specialinvoke $r6.<org.apache.commons.lang.text.StrMatcher$TrimMatcher: void <init>()>();

        <org.apache.commons.lang.text.StrMatcher: org.apache.commons.lang.text.StrMatcher TRIM_MATCHER> = $r6;

        $r7 = new org.apache.commons.lang.text.StrMatcher$CharMatcher;

        specialinvoke $r7.<org.apache.commons.lang.text.StrMatcher$CharMatcher: void <init>(char)>(39);

        <org.apache.commons.lang.text.StrMatcher: org.apache.commons.lang.text.StrMatcher SINGLE_QUOTE_MATCHER> = $r7;

        $r8 = new org.apache.commons.lang.text.StrMatcher$CharMatcher;

        specialinvoke $r8.<org.apache.commons.lang.text.StrMatcher$CharMatcher: void <init>(char)>(34);

        <org.apache.commons.lang.text.StrMatcher: org.apache.commons.lang.text.StrMatcher DOUBLE_QUOTE_MATCHER> = $r8;

        $r9 = new org.apache.commons.lang.text.StrMatcher$CharSetMatcher;

        $r10 = "\'\"";

        $r11 = virtualinvoke $r10.<java.lang.String: char[] toCharArray()>();

        specialinvoke $r9.<org.apache.commons.lang.text.StrMatcher$CharSetMatcher: void <init>(char[])>($r11);

        <org.apache.commons.lang.text.StrMatcher: org.apache.commons.lang.text.StrMatcher QUOTE_MATCHER> = $r9;

        $r12 = new org.apache.commons.lang.text.StrMatcher$NoMatcher;

        specialinvoke $r12.<org.apache.commons.lang.text.StrMatcher$NoMatcher: void <init>()>();

        <org.apache.commons.lang.text.StrMatcher: org.apache.commons.lang.text.StrMatcher NONE_MATCHER> = $r12;

        return;
    }
}
