abstract class nu.xom.jaxen.expr.DefaultArithExpr extends nu.xom.jaxen.expr.DefaultBinaryExpr
{

    void <init>(nu.xom.jaxen.expr.Expr, nu.xom.jaxen.expr.Expr)
    {
        nu.xom.jaxen.expr.Expr r1, r2;
        nu.xom.jaxen.expr.DefaultArithExpr r0;

        r0 := @this: nu.xom.jaxen.expr.DefaultArithExpr;

        r1 := @parameter0: nu.xom.jaxen.expr.Expr;

        r2 := @parameter1: nu.xom.jaxen.expr.Expr;

        specialinvoke r0.<nu.xom.jaxen.expr.DefaultBinaryExpr: void <init>(nu.xom.jaxen.expr.Expr,nu.xom.jaxen.expr.Expr)>(r1, r2);

        return;
    }

    public java.lang.String toString()
    {
        nu.xom.jaxen.expr.Expr $r3, $r6;
        java.lang.StringBuffer $r0, $r1, $r4, $r5, $r7, $r8;
        nu.xom.jaxen.expr.DefaultArithExpr r2;
        java.lang.String $r9;

        r2 := @this: nu.xom.jaxen.expr.DefaultArithExpr;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[(DefaultArithExpr): ");

        $r3 = virtualinvoke r2.<nu.xom.jaxen.expr.DefaultArithExpr: nu.xom.jaxen.expr.Expr getLHS()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r6 = virtualinvoke r2.<nu.xom.jaxen.expr.DefaultArithExpr: nu.xom.jaxen.expr.Expr getRHS()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r9;
    }
}
