class org.apache.cxf.workqueue.AutomaticWorkQueueImpl$DelayedTaskWrapper extends java.lang.Object implements java.util.concurrent.Delayed, java.lang.Runnable
{
    long trigger;
    java.lang.Runnable work;

    void <init>(java.lang.Runnable, long)
    {
        long $l0, l1, $l2;
        java.lang.Runnable r1;
        org.apache.cxf.workqueue.AutomaticWorkQueueImpl$DelayedTaskWrapper r0;

        r0 := @this: org.apache.cxf.workqueue.AutomaticWorkQueueImpl$DelayedTaskWrapper;

        r1 := @parameter0: java.lang.Runnable;

        l1 := @parameter1: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.cxf.workqueue.AutomaticWorkQueueImpl$DelayedTaskWrapper: java.lang.Runnable work> = r1;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l2 = $l0 + l1;

        r0.<org.apache.cxf.workqueue.AutomaticWorkQueueImpl$DelayedTaskWrapper: long trigger> = $l2;

        return;
    }

    public long getDelay(java.util.concurrent.TimeUnit)
    {
        java.util.concurrent.TimeUnit r1, $r2;
        long $l0, $l1, l2, $l3;
        org.apache.cxf.workqueue.AutomaticWorkQueueImpl$DelayedTaskWrapper r0;

        r0 := @this: org.apache.cxf.workqueue.AutomaticWorkQueueImpl$DelayedTaskWrapper;

        r1 := @parameter0: java.util.concurrent.TimeUnit;

        $l0 = r0.<org.apache.cxf.workqueue.AutomaticWorkQueueImpl$DelayedTaskWrapper: long trigger>;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l2 = $l0 - $l1;

        $r2 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        $l3 = virtualinvoke r1.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>(l2, $r2);

        return $l3;
    }

    public int compareTo(java.util.concurrent.Delayed)
    {
        long l0, $l1, $l3;
        byte $b2, $b4, b5;
        int $i6, $i7;
        java.util.concurrent.Delayed r0;
        org.apache.cxf.workqueue.AutomaticWorkQueueImpl$DelayedTaskWrapper $r1, r2;

        r2 := @this: org.apache.cxf.workqueue.AutomaticWorkQueueImpl$DelayedTaskWrapper;

        r0 := @parameter0: java.util.concurrent.Delayed;

        $r1 = (org.apache.cxf.workqueue.AutomaticWorkQueueImpl$DelayedTaskWrapper) r0;

        l0 = $r1.<org.apache.cxf.workqueue.AutomaticWorkQueueImpl$DelayedTaskWrapper: long trigger>;

        $l1 = r2.<org.apache.cxf.workqueue.AutomaticWorkQueueImpl$DelayedTaskWrapper: long trigger>;

        $b2 = $l1 cmp l0;

        $i6 = (int) $b2;

        if $i6 >= 0 goto label1;

        b5 = -1;

        goto label3;

     label1:
        $l3 = r2.<org.apache.cxf.workqueue.AutomaticWorkQueueImpl$DelayedTaskWrapper: long trigger>;

        $b4 = $l3 cmp l0;

        $i7 = (int) $b4;

        if $i7 <= 0 goto label2;

        b5 = 1;

        goto label3;

     label2:
        b5 = 0;

     label3:
        return b5;
    }

    public void run()
    {
        java.lang.Runnable $r1;
        org.apache.cxf.workqueue.AutomaticWorkQueueImpl$DelayedTaskWrapper r0;

        r0 := @this: org.apache.cxf.workqueue.AutomaticWorkQueueImpl$DelayedTaskWrapper;

        $r1 = r0.<org.apache.cxf.workqueue.AutomaticWorkQueueImpl$DelayedTaskWrapper: java.lang.Runnable work>;

        interfaceinvoke $r1.<java.lang.Runnable: void run()>();

        return;
    }

    public volatile int compareTo(java.lang.Object)
    {
        int $i0;
        java.lang.Object r1;
        java.util.concurrent.Delayed $r2;
        org.apache.cxf.workqueue.AutomaticWorkQueueImpl$DelayedTaskWrapper r0;

        r0 := @this: org.apache.cxf.workqueue.AutomaticWorkQueueImpl$DelayedTaskWrapper;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.util.concurrent.Delayed) r1;

        $i0 = virtualinvoke r0.<org.apache.cxf.workqueue.AutomaticWorkQueueImpl$DelayedTaskWrapper: int compareTo(java.util.concurrent.Delayed)>($r2);

        return $i0;
    }
}
