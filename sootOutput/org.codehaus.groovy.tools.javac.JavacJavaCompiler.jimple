public class org.codehaus.groovy.tools.javac.JavacJavaCompiler extends java.lang.Object implements org.codehaus.groovy.tools.javac.JavaCompiler
{
    private org.codehaus.groovy.control.CompilerConfiguration config;
    static java.lang.Class array$Ljava$lang$String;
    static java.lang.Class class$java$io$PrintWriter;

    public void <init>(org.codehaus.groovy.control.CompilerConfiguration)
    {
        org.codehaus.groovy.control.CompilerConfiguration r1;
        org.codehaus.groovy.tools.javac.JavacJavaCompiler r0;

        r0 := @this: org.codehaus.groovy.tools.javac.JavacJavaCompiler;

        r1 := @parameter0: org.codehaus.groovy.control.CompilerConfiguration;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.codehaus.groovy.tools.javac.JavacJavaCompiler: org.codehaus.groovy.control.CompilerConfiguration config> = r1;

        return;
    }

    public void compile(java.util.List, org.codehaus.groovy.control.CompilationUnit)
    {
        java.lang.NoSuchMethodException $r29;
        java.lang.Integer $r14, $r20;
        java.lang.reflect.Method $r9, $r17, r31;
        java.io.PrintWriter $r11;
        java.lang.Exception $r21, $r28;
        java.lang.reflect.InvocationTargetException $r24;
        java.util.List r1;
        groovy.lang.GroovyClassLoader $r3;
        org.codehaus.groovy.control.messages.ExceptionMessage $r23, $r26;
        java.lang.Throwable $r27;
        java.lang.Object[] $r12, $r18;
        java.lang.String[] $r4;
        org.codehaus.groovy.control.CompilationUnit r2;
        int i0;
        org.codehaus.groovy.control.ErrorCollector $r22, $r25;
        org.codehaus.groovy.tools.javac.JavacJavaCompiler r0;
        java.io.StringWriter $r10, r30;
        java.lang.Class[] $r6, $r15;
        org.codehaus.groovy.control.CompilerConfiguration $r35;
        java.lang.Class $r5, $r7, $r8, $r16, $r32, $r33, $r34;
        java.lang.Object $r13, $r19;

        r0 := @this: org.codehaus.groovy.tools.javac.JavacJavaCompiler;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: org.codehaus.groovy.control.CompilationUnit;

        $r3 = virtualinvoke r2.<org.codehaus.groovy.control.CompilationUnit: groovy.lang.GroovyClassLoader getClassLoader()>();

        $r4 = specialinvoke r0.<org.codehaus.groovy.tools.javac.JavacJavaCompiler: java.lang.String[] makeParameters(java.util.List,groovy.lang.GroovyClassLoader)>(r1, $r3);

        r30 = null;

        i0 = 0;

     label01:
        $r5 = specialinvoke r0.<org.codehaus.groovy.tools.javac.JavacJavaCompiler: java.lang.Class findJavac(org.codehaus.groovy.control.CompilationUnit)>(r2);

        r31 = null;

     label02:
        $r6 = newarray (java.lang.Class)[2];

        $r7 = <org.codehaus.groovy.tools.javac.JavacJavaCompiler: java.lang.Class array$Ljava$lang$String>;

        if $r7 != null goto label03;

        $r32 = staticinvoke <org.codehaus.groovy.tools.javac.JavacJavaCompiler: java.lang.Class class$(java.lang.String)>("[Ljava.lang.String;");

        <org.codehaus.groovy.tools.javac.JavacJavaCompiler: java.lang.Class array$Ljava$lang$String> = $r32;

        goto label04;

     label03:
        $r32 = <org.codehaus.groovy.tools.javac.JavacJavaCompiler: java.lang.Class array$Ljava$lang$String>;

     label04:
        $r6[0] = $r32;

        $r8 = <org.codehaus.groovy.tools.javac.JavacJavaCompiler: java.lang.Class class$java$io$PrintWriter>;

        if $r8 != null goto label05;

        $r33 = staticinvoke <org.codehaus.groovy.tools.javac.JavacJavaCompiler: java.lang.Class class$(java.lang.String)>("java.io.PrintWriter");

        <org.codehaus.groovy.tools.javac.JavacJavaCompiler: java.lang.Class class$java$io$PrintWriter> = $r33;

        goto label06;

     label05:
        $r33 = <org.codehaus.groovy.tools.javac.JavacJavaCompiler: java.lang.Class class$java$io$PrintWriter>;

     label06:
        $r6[1] = $r33;

        $r9 = virtualinvoke $r5.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("compile", $r6);

        r31 = $r9;

        $r10 = new java.io.StringWriter;

        specialinvoke $r10.<java.io.StringWriter: void <init>()>();

        r30 = $r10;

        $r11 = new java.io.PrintWriter;

        specialinvoke $r11.<java.io.PrintWriter: void <init>(java.io.Writer)>($r10);

        $r12 = newarray (java.lang.Object)[2];

        $r12[0] = $r4;

        $r12[1] = $r11;

        $r13 = virtualinvoke $r9.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r12);

        $r14 = (java.lang.Integer) $r13;

        i0 = virtualinvoke $r14.<java.lang.Integer: int intValue()>();

     label07:
        goto label09;

     label08:
        $r29 := @caughtexception;

     label09:
        if r31 != null goto label12;

        $r15 = newarray (java.lang.Class)[1];

        $r16 = <org.codehaus.groovy.tools.javac.JavacJavaCompiler: java.lang.Class array$Ljava$lang$String>;

        if $r16 != null goto label10;

        $r34 = staticinvoke <org.codehaus.groovy.tools.javac.JavacJavaCompiler: java.lang.Class class$(java.lang.String)>("[Ljava.lang.String;");

        <org.codehaus.groovy.tools.javac.JavacJavaCompiler: java.lang.Class array$Ljava$lang$String> = $r34;

        goto label11;

     label10:
        $r34 = <org.codehaus.groovy.tools.javac.JavacJavaCompiler: java.lang.Class array$Ljava$lang$String>;

     label11:
        $r15[0] = $r34;

        $r17 = virtualinvoke $r5.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("compile", $r15);

        $r18 = newarray (java.lang.Object)[1];

        $r18[0] = $r4;

        $r19 = virtualinvoke $r17.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r18);

        $r20 = (java.lang.Integer) $r19;

        i0 = virtualinvoke $r20.<java.lang.Integer: int intValue()>();

     label12:
        $r35 = virtualinvoke r2.<org.codehaus.groovy.control.CompilationUnit: org.codehaus.groovy.control.CompilerConfiguration getConfiguration()>();

        virtualinvoke $r35.<org.codehaus.groovy.control.CompilerConfiguration: java.io.PrintWriter getOutput()>();

     label13:
        goto label16;

     label14:
        $r24 := @caughtexception;

        $r25 = virtualinvoke r2.<org.codehaus.groovy.control.CompilationUnit: org.codehaus.groovy.control.ErrorCollector getErrorCollector()>();

        $r26 = new org.codehaus.groovy.control.messages.ExceptionMessage;

        $r27 = virtualinvoke $r24.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();

        $r28 = (java.lang.Exception) $r27;

        specialinvoke $r26.<org.codehaus.groovy.control.messages.ExceptionMessage: void <init>(java.lang.Exception,boolean,org.codehaus.groovy.control.ProcessingUnit)>($r28, 1, r2);

        virtualinvoke $r25.<org.codehaus.groovy.control.ErrorCollector: void addFatalError(org.codehaus.groovy.control.messages.Message)>($r26);

        goto label16;

     label15:
        $r21 := @caughtexception;

        $r22 = virtualinvoke r2.<org.codehaus.groovy.control.CompilationUnit: org.codehaus.groovy.control.ErrorCollector getErrorCollector()>();

        $r23 = new org.codehaus.groovy.control.messages.ExceptionMessage;

        specialinvoke $r23.<org.codehaus.groovy.control.messages.ExceptionMessage: void <init>(java.lang.Exception,boolean,org.codehaus.groovy.control.ProcessingUnit)>($r21, 1, r2);

        virtualinvoke $r22.<org.codehaus.groovy.control.ErrorCollector: void addFatalError(org.codehaus.groovy.control.messages.Message)>($r23);

     label16:
        if i0 == 0 goto label22;

        tableswitch(i0)
        {
            case 1: goto label17;
            case 2: goto label18;
            case 3: goto label19;
            case 4: goto label20;
            default: goto label21;
        };

     label17:
        specialinvoke r0.<org.codehaus.groovy.tools.javac.JavacJavaCompiler: void addJavacError(java.lang.String,org.codehaus.groovy.control.CompilationUnit,java.io.StringWriter)>("Compile error during compilation with javac.", r2, r30);

        goto label22;

     label18:
        specialinvoke r0.<org.codehaus.groovy.tools.javac.JavacJavaCompiler: void addJavacError(java.lang.String,org.codehaus.groovy.control.CompilationUnit,java.io.StringWriter)>("Invalid commandline usage for javac.", r2, r30);

        goto label22;

     label19:
        specialinvoke r0.<org.codehaus.groovy.tools.javac.JavacJavaCompiler: void addJavacError(java.lang.String,org.codehaus.groovy.control.CompilationUnit,java.io.StringWriter)>("System error during compilation with javac.", r2, r30);

        goto label22;

     label20:
        specialinvoke r0.<org.codehaus.groovy.tools.javac.JavacJavaCompiler: void addJavacError(java.lang.String,org.codehaus.groovy.control.CompilationUnit,java.io.StringWriter)>("Abnormal termination of javac.", r2, r30);

        goto label22;

     label21:
        specialinvoke r0.<org.codehaus.groovy.tools.javac.JavacJavaCompiler: void addJavacError(java.lang.String,org.codehaus.groovy.control.CompilationUnit,java.io.StringWriter)>("unexpected return value by javac.", r2, r30);

     label22:
        return;

        catch java.lang.NoSuchMethodException from label02 to label07 with label08;
        catch java.lang.reflect.InvocationTargetException from label01 to label13 with label14;
        catch java.lang.Exception from label01 to label13 with label15;
    }

    private void addJavacError(java.lang.String, org.codehaus.groovy.control.CompilationUnit, java.io.StringWriter)
    {
        org.codehaus.groovy.control.CompilationUnit r6;
        java.lang.StringBuffer $r1, $r2, $r3, $r4, $r5, $r9, $r10, $r11, $r12, $r14;
        java.lang.String $r13, r16, r17;
        org.codehaus.groovy.control.ErrorCollector $r7;
        org.codehaus.groovy.control.messages.SimpleMessage $r8;
        org.codehaus.groovy.tools.javac.JavacJavaCompiler r15;
        java.io.StringWriter r0;

        r15 := @this: org.codehaus.groovy.tools.javac.JavacJavaCompiler;

        r16 := @parameter0: java.lang.String;

        r6 := @parameter1: org.codehaus.groovy.control.CompilationUnit;

        r0 := @parameter2: java.io.StringWriter;

        if r0 == null goto label1;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r16);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r12 = virtualinvoke r0.<java.io.StringWriter: java.lang.StringBuffer getBuffer()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        r17 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label2;

     label1:
        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r16);

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\nThis javac version does not support compile(String[],PrintWriter), ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("so no further details of the error are available. The message error text ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("should be found on System.err.\n");

        r17 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

     label2:
        $r7 = virtualinvoke r6.<org.codehaus.groovy.control.CompilationUnit: org.codehaus.groovy.control.ErrorCollector getErrorCollector()>();

        $r8 = new org.codehaus.groovy.control.messages.SimpleMessage;

        specialinvoke $r8.<org.codehaus.groovy.control.messages.SimpleMessage: void <init>(java.lang.String,org.codehaus.groovy.control.ProcessingUnit)>(r17, r6);

        virtualinvoke $r7.<org.codehaus.groovy.control.ErrorCollector: void addFatalError(org.codehaus.groovy.control.messages.Message)>($r8);

        return;
    }

    private java.lang.String[] makeParameters(java.util.List, groovy.lang.GroovyClassLoader)
    {
        java.net.URL $r31;
        java.net.URISyntaxException $r47;
        java.net.URL[] $r27;
        java.net.URLClassLoader $r26;
        java.util.Map $r2;
        java.net.URI $r30;
        boolean $z0, $z1, z2;
        java.util.List r14, $r21;
        java.lang.ClassLoader r50;
        groovy.lang.GroovyClassLoader r24;
        java.lang.Object[] $r16;
        java.lang.String[] $r11, $r13, $r15, $r17, $r18, $r39, $r46;
        java.lang.StringBuffer $r19, $r34, $r35, $r36, $r40, $r41, $r43;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, i7;
        java.lang.String $r6, $r9, $r22, $r23, $r25, $r28, $r32, $r33, $r37, $r38, $r42, $r44, r49;
        java.util.LinkedList $r3;
        org.codehaus.groovy.tools.javac.JavacJavaCompiler r0;
        org.codehaus.groovy.control.CompilerConfiguration $r1, $r4, $r20;
        java.io.File $r5, $r8, $r29, $r45, r48;
        java.lang.Object $r7, $r10, $r12;

        r0 := @this: org.codehaus.groovy.tools.javac.JavacJavaCompiler;

        r14 := @parameter0: java.util.List;

        r24 := @parameter1: groovy.lang.GroovyClassLoader;

        $r1 = r0.<org.codehaus.groovy.tools.javac.JavacJavaCompiler: org.codehaus.groovy.control.CompilerConfiguration config>;

        $r2 = virtualinvoke $r1.<org.codehaus.groovy.control.CompilerConfiguration: java.util.Map getJointCompilationOptions()>();

        $r3 = new java.util.LinkedList;

        specialinvoke $r3.<java.util.LinkedList: void <init>()>();

        $r4 = r0.<org.codehaus.groovy.tools.javac.JavacJavaCompiler: org.codehaus.groovy.control.CompilerConfiguration config>;

        $r5 = virtualinvoke $r4.<org.codehaus.groovy.control.CompilerConfiguration: java.io.File getTargetDirectory()>();

        r48 = $r5;

        if $r5 != null goto label01;

        $r45 = new java.io.File;

        specialinvoke $r45.<java.io.File: void <init>(java.lang.String)>(".");

        r48 = $r45;

     label01:
        virtualinvoke $r3.<java.util.LinkedList: boolean add(java.lang.Object)>("-d");

        $r6 = virtualinvoke r48.<java.io.File: java.lang.String getAbsolutePath()>();

        virtualinvoke $r3.<java.util.LinkedList: boolean add(java.lang.Object)>($r6);

        virtualinvoke $r3.<java.util.LinkedList: boolean add(java.lang.Object)>("-sourcepath");

        $r7 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("stubDir");

        $r8 = (java.io.File) $r7;

        $r9 = virtualinvoke $r8.<java.io.File: java.lang.String getAbsolutePath()>();

        virtualinvoke $r3.<java.util.LinkedList: boolean add(java.lang.Object)>($r9);

        $r10 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("flags");

        $r11 = (java.lang.String[]) $r10;

        $r46 = (java.lang.String[]) $r11;

        if $r46 == null goto label03;

        i5 = 0;

     label02:
        $i4 = lengthof $r46;

        if i5 >= $i4 goto label03;

        $r40 = new java.lang.StringBuffer;

        specialinvoke $r40.<java.lang.StringBuffer: void <init>()>();

        $r41 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(45);

        $r42 = $r46[i5];

        $r43 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r42);

        $r44 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r3.<java.util.LinkedList: boolean add(java.lang.Object)>($r44);

        i5 = i5 + 1;

        goto label02;

     label03:
        z2 = 0;

        $r12 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("namedValues");

        $r13 = (java.lang.String[]) $r12;

        $r39 = (java.lang.String[]) $r13;

        if $r39 == null goto label06;

        i6 = 0;

     label04:
        $i2 = lengthof $r39;

        if i6 >= $i2 goto label06;

        r49 = $r39[i6];

        $z1 = virtualinvoke r49.<java.lang.String: boolean equals(java.lang.Object)>("classpath");

        if $z1 == 0 goto label05;

        z2 = 1;

     label05:
        $r34 = new java.lang.StringBuffer;

        specialinvoke $r34.<java.lang.StringBuffer: void <init>()>();

        $r35 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(45);

        $r36 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r49);

        $r37 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r3.<java.util.LinkedList: boolean add(java.lang.Object)>($r37);

        $i3 = i6 + 1;

        $r38 = $r39[$i3];

        virtualinvoke $r3.<java.util.LinkedList: boolean add(java.lang.Object)>($r38);

        i6 = i6 + 2;

        goto label04;

     label06:
        if z2 != 0 goto label15;

        $r19 = new java.lang.StringBuffer;

        $r20 = r0.<org.codehaus.groovy.tools.javac.JavacJavaCompiler: org.codehaus.groovy.control.CompilerConfiguration config>;

        $r21 = virtualinvoke $r20.<org.codehaus.groovy.control.CompilerConfiguration: java.util.List getClasspath()>();

        $r22 = <java.io.File: java.lang.String pathSeparator>;

        $r23 = staticinvoke <org.codehaus.groovy.runtime.DefaultGroovyMethods: java.lang.String join(java.util.Collection,java.lang.String)>($r21, $r22);

        specialinvoke $r19.<java.lang.StringBuffer: void <init>(java.lang.String)>($r23);

        r50 = r24;

     label07:
        if r50 == null goto label14;

        $z0 = r50 instanceof java.net.URLClassLoader;

        if $z0 == 0 goto label13;

        $r26 = (java.net.URLClassLoader) r50;

        $r27 = virtualinvoke $r26.<java.net.URLClassLoader: java.net.URL[] getURLs()>();

        i7 = 0;

     label08:
        $i1 = lengthof $r27;

        if i7 >= $i1 goto label13;

     label09:
        $r28 = <java.io.File: java.lang.String pathSeparator>;

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r28);

        $r29 = new java.io.File;

        $r30 = new java.net.URI;

        $r31 = $r27[i7];

        $r32 = virtualinvoke $r31.<java.net.URL: java.lang.String toExternalForm()>();

        specialinvoke $r30.<java.net.URI: void <init>(java.lang.String)>($r32);

        specialinvoke $r29.<java.io.File: void <init>(java.net.URI)>($r30);

        $r33 = virtualinvoke $r29.<java.io.File: java.lang.String getPath()>();

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r33);

     label10:
        goto label12;

     label11:
        $r47 := @caughtexception;

     label12:
        i7 = i7 + 1;

        goto label08;

     label13:
        r50 = virtualinvoke r50.<java.lang.ClassLoader: java.lang.ClassLoader getParent()>();

        goto label07;

     label14:
        virtualinvoke $r3.<java.util.LinkedList: boolean add(java.lang.Object)>("-classpath");

        $r25 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r3.<java.util.LinkedList: boolean add(java.lang.Object)>($r25);

     label15:
        virtualinvoke $r3.<java.util.LinkedList: boolean addAll(java.util.Collection)>(r14);

        $i0 = virtualinvoke $r3.<java.util.LinkedList: int size()>();

        $r15 = newarray (java.lang.String)[$i0];

        $r16 = virtualinvoke $r3.<java.util.LinkedList: java.lang.Object[] toArray(java.lang.Object[])>($r15);

        $r17 = (java.lang.String[]) $r16;

        $r18 = (java.lang.String[]) $r17;

        return $r18;

        catch java.net.URISyntaxException from label09 to label10 with label11;
    }

    private java.lang.Class findJavac(org.codehaus.groovy.control.CompilationUnit) throws java.lang.ClassNotFoundException
    {
        java.util.Locale $r3;
        boolean $z0, $z1;
        java.lang.ClassLoader $r17, $r20, $r25;
        groovy.lang.GroovyClassLoader $r12, $r16;
        org.codehaus.groovy.control.CompilationUnit r11;
        java.lang.StringBuffer $r6, $r7, $r8;
        int $i0, $i1;
        java.lang.String $r2, $r4, $r9, $r13, r27;
        org.codehaus.groovy.tools.javac.JavacJavaCompiler r23;
        java.io.File $r5;
        java.lang.Class $r0, $r14, $r18, $r21, $r24, $r26;
        java.lang.ClassNotFoundException $r1, $r10, $r15, $r19, $r22;

        r23 := @this: org.codehaus.groovy.tools.javac.JavacJavaCompiler;

        r11 := @parameter0: org.codehaus.groovy.control.CompilationUnit;

     label01:
        $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("com.sun.tools.javac.Main");

     label02:
        return $r0;

     label03:
        $r22 := @caughtexception;

     label04:
        $r24 = virtualinvoke r23.<java.lang.Object: java.lang.Class getClass()>();

        $r25 = virtualinvoke $r24.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r26 = virtualinvoke $r25.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>("com.sun.tools.javac.Main");

     label05:
        return $r26;

     label06:
        $r19 := @caughtexception;

     label07:
        $r20 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>();

        $r21 = virtualinvoke $r20.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>("com.sun.tools.javac.Main");

     label08:
        return $r21;

     label09:
        $r15 := @caughtexception;

     label10:
        $r16 = virtualinvoke r11.<org.codehaus.groovy.control.CompilationUnit: groovy.lang.GroovyClassLoader getClassLoader()>();

        $r17 = virtualinvoke $r16.<groovy.lang.GroovyClassLoader: java.lang.ClassLoader getParent()>();

        $r18 = virtualinvoke $r17.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>("com.sun.tools.javac.Main");

     label11:
        return $r18;

     label12:
        $r1 := @caughtexception;

        $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.home");

        r27 = $r2;

        $r3 = <java.util.Locale: java.util.Locale US>;

        $r4 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r3);

        $z0 = virtualinvoke $r4.<java.lang.String: boolean endsWith(java.lang.String)>("jre");

        if $z0 == 0 goto label13;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i1 = $i0 - 4;

        r27 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

     label13:
        $r5 = new java.io.File;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r27);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/lib/tools.jar");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r5.<java.io.File: void <init>(java.lang.String)>($r9);

        $z1 = virtualinvoke $r5.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label14;

        $r12 = virtualinvoke r11.<org.codehaus.groovy.control.CompilationUnit: groovy.lang.GroovyClassLoader getClassLoader()>();

        $r13 = virtualinvoke $r5.<java.io.File: java.lang.String getAbsolutePath()>();

        virtualinvoke $r12.<groovy.lang.GroovyClassLoader: void addClasspath(java.lang.String)>($r13);

        $r14 = virtualinvoke $r12.<groovy.lang.GroovyClassLoader: java.lang.Class loadClass(java.lang.String)>("com.sun.tools.javac.Main");

        return $r14;

     label14:
        $r10 = new java.lang.ClassNotFoundException;

        specialinvoke $r10.<java.lang.ClassNotFoundException: void <init>(java.lang.String)>("unable to locate the java compiler com.sun.tools.javac.Main, please change your classloader settings");

        throw $r10;

        catch java.lang.ClassNotFoundException from label01 to label02 with label03;
        catch java.lang.ClassNotFoundException from label04 to label05 with label06;
        catch java.lang.ClassNotFoundException from label07 to label08 with label09;
        catch java.lang.ClassNotFoundException from label10 to label11 with label12;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }
}
