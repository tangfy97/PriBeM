public class org.apache.batik.bridge.SVGSwitchElementBridge extends org.apache.batik.bridge.SVGGElementBridge
{
    protected org.w3c.dom.Element selectedChild;

    public void <init>()
    {
        org.apache.batik.bridge.SVGSwitchElementBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGSwitchElementBridge;

        specialinvoke r0.<org.apache.batik.bridge.SVGGElementBridge: void <init>()>();

        return;
    }

    public java.lang.String getLocalName()
    {
        org.apache.batik.bridge.SVGSwitchElementBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGSwitchElementBridge;

        return "switch";
    }

    public org.apache.batik.bridge.Bridge getInstance()
    {
        org.apache.batik.bridge.SVGSwitchElementBridge $r0, r1;

        r1 := @this: org.apache.batik.bridge.SVGSwitchElementBridge;

        $r0 = new org.apache.batik.bridge.SVGSwitchElementBridge;

        specialinvoke $r0.<org.apache.batik.bridge.SVGSwitchElementBridge: void <init>()>();

        return $r0;
    }

    public org.apache.batik.gvt.GraphicsNode createGraphicsNode(org.apache.batik.bridge.BridgeContext, org.w3c.dom.Element)
    {
        org.apache.batik.gvt.GraphicsNode $r5, r6;
        org.apache.batik.bridge.SVGSwitchElementBridge r2;
        org.apache.batik.bridge.GVTBuilder $r1;
        org.apache.batik.bridge.BridgeContext r0;
        org.apache.batik.gvt.CompositeGraphicsNode r9;
        short $s0;
        org.apache.batik.bridge.UserAgent $r4;
        org.w3c.dom.Element r3, r8;
        org.w3c.dom.Node r7;
        boolean $z0, $z1;

        r2 := @this: org.apache.batik.bridge.SVGSwitchElementBridge;

        r0 := @parameter0: org.apache.batik.bridge.BridgeContext;

        r3 := @parameter1: org.w3c.dom.Element;

        r6 = null;

        $r1 = virtualinvoke r0.<org.apache.batik.bridge.BridgeContext: org.apache.batik.bridge.GVTBuilder getGVTBuilder()>();

        r2.<org.apache.batik.bridge.SVGSwitchElementBridge: org.w3c.dom.Element selectedChild> = null;

        r7 = interfaceinvoke r3.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

        goto label3;

     label1:
        $s0 = interfaceinvoke r7.<org.w3c.dom.Node: short getNodeType()>();

        if $s0 != 1 goto label2;

        r8 = (org.w3c.dom.Element) r7;

        $z0 = r7 instanceof org.w3c.dom.svg.SVGTests;

        if $z0 == 0 goto label2;

        $r4 = virtualinvoke r0.<org.apache.batik.bridge.BridgeContext: org.apache.batik.bridge.UserAgent getUserAgent()>();

        $z1 = staticinvoke <org.apache.batik.bridge.SVGUtilities: boolean matchUserAgent(org.w3c.dom.Element,org.apache.batik.bridge.UserAgent)>(r8, $r4);

        if $z1 == 0 goto label2;

        r2.<org.apache.batik.bridge.SVGSwitchElementBridge: org.w3c.dom.Element selectedChild> = r8;

        r6 = virtualinvoke $r1.<org.apache.batik.bridge.GVTBuilder: org.apache.batik.gvt.GraphicsNode build(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)>(r0, r8);

        goto label4;

     label2:
        r7 = interfaceinvoke r7.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

     label3:
        if r7 != null goto label1;

     label4:
        if r6 != null goto label5;

        return null;

     label5:
        $r5 = specialinvoke r2.<org.apache.batik.bridge.SVGGElementBridge: org.apache.batik.gvt.GraphicsNode createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)>(r0, r3);

        r9 = (org.apache.batik.gvt.CompositeGraphicsNode) $r5;

        if r9 != null goto label6;

        return null;

     label6:
        virtualinvoke r9.<org.apache.batik.gvt.CompositeGraphicsNode: boolean add(java.lang.Object)>(r6);

        return r9;
    }

    public boolean isComposite()
    {
        org.apache.batik.bridge.SVGSwitchElementBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGSwitchElementBridge;

        return 0;
    }

    public void dispose()
    {
        org.apache.batik.bridge.SVGSwitchElementBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGSwitchElementBridge;

        r0.<org.apache.batik.bridge.SVGSwitchElementBridge: org.w3c.dom.Element selectedChild> = null;

        specialinvoke r0.<org.apache.batik.bridge.AbstractGraphicsNodeBridge: void dispose()>();

        return;
    }

    protected void handleElementAdded(org.apache.batik.gvt.CompositeGraphicsNode, org.w3c.dom.Node, org.w3c.dom.Element)
    {
        org.apache.batik.gvt.GraphicsNode $r8;
        org.apache.batik.bridge.SVGSwitchElementBridge r1;
        org.apache.batik.bridge.GVTBuilder $r6;
        org.apache.batik.bridge.BridgeContext $r2, $r5, $r7;
        org.apache.batik.gvt.CompositeGraphicsNode r9;
        org.apache.batik.bridge.UserAgent $r3;
        org.w3c.dom.Element r0, $r4, $r10;
        org.w3c.dom.Node r11, r12;
        boolean $z0, $z1;

        r1 := @this: org.apache.batik.bridge.SVGSwitchElementBridge;

        r9 := @parameter0: org.apache.batik.gvt.CompositeGraphicsNode;

        r11 := @parameter1: org.w3c.dom.Node;

        r0 := @parameter2: org.w3c.dom.Element;

        r12 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Node getPreviousSibling()>();

        goto label3;

     label1:
        if r12 != r0 goto label2;

        return;

     label2:
        r12 = interfaceinvoke r12.<org.w3c.dom.Node: org.w3c.dom.Node getPreviousSibling()>();

     label3:
        if r12 != null goto label1;

        $z0 = r0 instanceof org.w3c.dom.svg.SVGTests;

        if $z0 == 0 goto label5;

        $r2 = r1.<org.apache.batik.bridge.AnimatableSVGBridge: org.apache.batik.bridge.BridgeContext ctx>;

        $r3 = virtualinvoke $r2.<org.apache.batik.bridge.BridgeContext: org.apache.batik.bridge.UserAgent getUserAgent()>();

        $z1 = staticinvoke <org.apache.batik.bridge.SVGUtilities: boolean matchUserAgent(org.w3c.dom.Element,org.apache.batik.bridge.UserAgent)>(r0, $r3);

        if $z1 == 0 goto label5;

        $r4 = r1.<org.apache.batik.bridge.SVGSwitchElementBridge: org.w3c.dom.Element selectedChild>;

        if $r4 == null goto label4;

        virtualinvoke r9.<org.apache.batik.gvt.CompositeGraphicsNode: java.lang.Object remove(int)>(0);

        $r10 = r1.<org.apache.batik.bridge.SVGSwitchElementBridge: org.w3c.dom.Element selectedChild>;

        virtualinvoke r1.<org.apache.batik.bridge.AbstractGraphicsNodeBridge: void disposeTree(org.w3c.dom.Node)>($r10);

     label4:
        r1.<org.apache.batik.bridge.SVGSwitchElementBridge: org.w3c.dom.Element selectedChild> = r0;

        $r5 = r1.<org.apache.batik.bridge.AnimatableSVGBridge: org.apache.batik.bridge.BridgeContext ctx>;

        $r6 = virtualinvoke $r5.<org.apache.batik.bridge.BridgeContext: org.apache.batik.bridge.GVTBuilder getGVTBuilder()>();

        $r7 = r1.<org.apache.batik.bridge.AnimatableSVGBridge: org.apache.batik.bridge.BridgeContext ctx>;

        $r8 = virtualinvoke $r6.<org.apache.batik.bridge.GVTBuilder: org.apache.batik.gvt.GraphicsNode build(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)>($r7, r0);

        if $r8 == null goto label5;

        virtualinvoke r9.<org.apache.batik.gvt.CompositeGraphicsNode: boolean add(java.lang.Object)>($r8);

     label5:
        return;
    }

    protected void handleChildElementRemoved(org.w3c.dom.Element)
    {
        org.apache.batik.gvt.CompositeGraphicsNode r2;
        short $s0;
        org.w3c.dom.Node r13;
        boolean $z0, $z1;
        org.apache.batik.gvt.GraphicsNode $r1, r12;
        org.apache.batik.bridge.SVGSwitchElementBridge r0;
        org.apache.batik.bridge.GVTBuilder $r7;
        org.apache.batik.bridge.BridgeContext $r6, $r9, $r11;
        org.apache.batik.bridge.UserAgent $r10;
        org.w3c.dom.Element r3, $r4, $r5, r8;

        r0 := @this: org.apache.batik.bridge.SVGSwitchElementBridge;

        r3 := @parameter0: org.w3c.dom.Element;

        $r1 = r0.<org.apache.batik.bridge.AbstractGraphicsNodeBridge: org.apache.batik.gvt.GraphicsNode node>;

        r2 = (org.apache.batik.gvt.CompositeGraphicsNode) $r1;

        $r4 = r0.<org.apache.batik.bridge.SVGSwitchElementBridge: org.w3c.dom.Element selectedChild>;

        if $r4 != r3 goto label5;

        virtualinvoke r2.<org.apache.batik.gvt.CompositeGraphicsNode: java.lang.Object remove(int)>(0);

        $r5 = r0.<org.apache.batik.bridge.SVGSwitchElementBridge: org.w3c.dom.Element selectedChild>;

        virtualinvoke r0.<org.apache.batik.bridge.AbstractGraphicsNodeBridge: void disposeTree(org.w3c.dom.Node)>($r5);

        r0.<org.apache.batik.bridge.SVGSwitchElementBridge: org.w3c.dom.Element selectedChild> = null;

        r12 = null;

        $r6 = r0.<org.apache.batik.bridge.AnimatableSVGBridge: org.apache.batik.bridge.BridgeContext ctx>;

        $r7 = virtualinvoke $r6.<org.apache.batik.bridge.BridgeContext: org.apache.batik.bridge.GVTBuilder getGVTBuilder()>();

        r13 = interfaceinvoke r3.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        goto label3;

     label1:
        $s0 = interfaceinvoke r13.<org.w3c.dom.Node: short getNodeType()>();

        if $s0 != 1 goto label2;

        r8 = (org.w3c.dom.Element) r13;

        $z0 = r13 instanceof org.w3c.dom.svg.SVGTests;

        if $z0 == 0 goto label2;

        $r9 = r0.<org.apache.batik.bridge.AnimatableSVGBridge: org.apache.batik.bridge.BridgeContext ctx>;

        $r10 = virtualinvoke $r9.<org.apache.batik.bridge.BridgeContext: org.apache.batik.bridge.UserAgent getUserAgent()>();

        $z1 = staticinvoke <org.apache.batik.bridge.SVGUtilities: boolean matchUserAgent(org.w3c.dom.Element,org.apache.batik.bridge.UserAgent)>(r8, $r10);

        if $z1 == 0 goto label2;

        $r11 = r0.<org.apache.batik.bridge.AnimatableSVGBridge: org.apache.batik.bridge.BridgeContext ctx>;

        r12 = virtualinvoke $r7.<org.apache.batik.bridge.GVTBuilder: org.apache.batik.gvt.GraphicsNode build(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)>($r11, r8);

        r0.<org.apache.batik.bridge.SVGSwitchElementBridge: org.w3c.dom.Element selectedChild> = r8;

        goto label4;

     label2:
        r13 = interfaceinvoke r13.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

     label3:
        if r13 != null goto label1;

     label4:
        if r12 == null goto label5;

        virtualinvoke r2.<org.apache.batik.gvt.CompositeGraphicsNode: boolean add(java.lang.Object)>(r12);

     label5:
        return;
    }
}
