public class org.mortbay.util.MultiPartWriter extends java.io.FilterWriter
{
    private static final java.lang.String __CRLF;
    private static final java.lang.String __DASHDASH;
    public static java.lang.String MULTIPART_MIXED;
    public static java.lang.String MULTIPART_X_MIXED_REPLACE;
    private java.lang.String boundary;
    private boolean inPart;

    public void <init>(java.io.Writer) throws java.io.IOException
    {
        long $l1;
        org.mortbay.util.MultiPartWriter r0;
        java.lang.StringBuffer $r2, $r3, $r4, $r6;
        java.io.Writer r1;
        int $i0;
        java.lang.String $r5, $r7;

        r0 := @this: org.mortbay.util.MultiPartWriter;

        r1 := @parameter0: java.io.Writer;

        specialinvoke r0.<java.io.FilterWriter: void <init>(java.io.Writer)>(r1);

        r0.<org.mortbay.util.MultiPartWriter: boolean inPart> = 0;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("jetty");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r5 = staticinvoke <java.lang.Long: java.lang.String toString(long,int)>($l1, 36);

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        r0.<org.mortbay.util.MultiPartWriter: java.lang.String boundary> = $r7;

        r0.<org.mortbay.util.MultiPartWriter: boolean inPart> = 0;

        return;
    }

    public void close() throws java.io.IOException
    {
        org.mortbay.util.MultiPartWriter r0;
        java.io.Writer $r1, $r3, $r4, $r5, $r6;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: org.mortbay.util.MultiPartWriter;

        $z0 = r0.<org.mortbay.util.MultiPartWriter: boolean inPart>;

        if $z0 == 0 goto label1;

        $r6 = r0.<org.mortbay.util.MultiPartWriter: java.io.Writer out>;

        virtualinvoke $r6.<java.io.Writer: void write(java.lang.String)>("\r\n");

     label1:
        $r1 = r0.<org.mortbay.util.MultiPartWriter: java.io.Writer out>;

        virtualinvoke $r1.<java.io.Writer: void write(java.lang.String)>("--");

        $r3 = r0.<org.mortbay.util.MultiPartWriter: java.io.Writer out>;

        $r2 = r0.<org.mortbay.util.MultiPartWriter: java.lang.String boundary>;

        virtualinvoke $r3.<java.io.Writer: void write(java.lang.String)>($r2);

        $r4 = r0.<org.mortbay.util.MultiPartWriter: java.io.Writer out>;

        virtualinvoke $r4.<java.io.Writer: void write(java.lang.String)>("--");

        $r5 = r0.<org.mortbay.util.MultiPartWriter: java.io.Writer out>;

        virtualinvoke $r5.<java.io.Writer: void write(java.lang.String)>("\r\n");

        r0.<org.mortbay.util.MultiPartWriter: boolean inPart> = 0;

        specialinvoke r0.<java.io.FilterWriter: void close()>();

        return;
    }

    public java.lang.String getBoundary()
    {
        org.mortbay.util.MultiPartWriter r0;
        java.lang.String $r1;

        r0 := @this: org.mortbay.util.MultiPartWriter;

        $r1 = r0.<org.mortbay.util.MultiPartWriter: java.lang.String boundary>;

        return $r1;
    }

    public void startPart(java.lang.String) throws java.io.IOException
    {
        org.mortbay.util.MultiPartWriter r0;
        java.io.Writer $r1, $r3, $r4, $r5, $r7, $r8, $r9, $r10;
        java.lang.String $r2, r6;
        boolean $z0;

        r0 := @this: org.mortbay.util.MultiPartWriter;

        r6 := @parameter0: java.lang.String;

        $z0 = r0.<org.mortbay.util.MultiPartWriter: boolean inPart>;

        if $z0 == 0 goto label1;

        $r10 = r0.<org.mortbay.util.MultiPartWriter: java.io.Writer out>;

        virtualinvoke $r10.<java.io.Writer: void write(java.lang.String)>("\r\n");

     label1:
        $r1 = r0.<org.mortbay.util.MultiPartWriter: java.io.Writer out>;

        virtualinvoke $r1.<java.io.Writer: void write(java.lang.String)>("--");

        $r3 = r0.<org.mortbay.util.MultiPartWriter: java.io.Writer out>;

        $r2 = r0.<org.mortbay.util.MultiPartWriter: java.lang.String boundary>;

        virtualinvoke $r3.<java.io.Writer: void write(java.lang.String)>($r2);

        $r4 = r0.<org.mortbay.util.MultiPartWriter: java.io.Writer out>;

        virtualinvoke $r4.<java.io.Writer: void write(java.lang.String)>("\r\n");

        $r5 = r0.<org.mortbay.util.MultiPartWriter: java.io.Writer out>;

        virtualinvoke $r5.<java.io.Writer: void write(java.lang.String)>("Content-Type: ");

        $r7 = r0.<org.mortbay.util.MultiPartWriter: java.io.Writer out>;

        virtualinvoke $r7.<java.io.Writer: void write(java.lang.String)>(r6);

        $r8 = r0.<org.mortbay.util.MultiPartWriter: java.io.Writer out>;

        virtualinvoke $r8.<java.io.Writer: void write(java.lang.String)>("\r\n");

        $r9 = r0.<org.mortbay.util.MultiPartWriter: java.io.Writer out>;

        virtualinvoke $r9.<java.io.Writer: void write(java.lang.String)>("\r\n");

        r0.<org.mortbay.util.MultiPartWriter: boolean inPart> = 1;

        return;
    }

    public void endPart() throws java.io.IOException
    {
        org.mortbay.util.MultiPartWriter r0;
        java.io.Writer $r1;
        boolean $z0;

        r0 := @this: org.mortbay.util.MultiPartWriter;

        $z0 = r0.<org.mortbay.util.MultiPartWriter: boolean inPart>;

        if $z0 == 0 goto label1;

        $r1 = r0.<org.mortbay.util.MultiPartWriter: java.io.Writer out>;

        virtualinvoke $r1.<java.io.Writer: void write(java.lang.String)>("\r\n");

     label1:
        r0.<org.mortbay.util.MultiPartWriter: boolean inPart> = 0;

        return;
    }

    public void startPart(java.lang.String, java.lang.String[]) throws java.io.IOException
    {
        java.lang.String[] r9;
        org.mortbay.util.MultiPartWriter r0;
        int $i0, i1;
        java.lang.String $r2, r6, $r11;
        boolean $z0;
        java.io.Writer $r1, $r3, $r4, $r5, $r7, $r8, $r10, $r12, $r13, $r14;

        r0 := @this: org.mortbay.util.MultiPartWriter;

        r6 := @parameter0: java.lang.String;

        r9 := @parameter1: java.lang.String[];

        $z0 = r0.<org.mortbay.util.MultiPartWriter: boolean inPart>;

        if $z0 == 0 goto label1;

        $r14 = r0.<org.mortbay.util.MultiPartWriter: java.io.Writer out>;

        virtualinvoke $r14.<java.io.Writer: void write(java.lang.String)>("\r\n");

     label1:
        $r1 = r0.<org.mortbay.util.MultiPartWriter: java.io.Writer out>;

        virtualinvoke $r1.<java.io.Writer: void write(java.lang.String)>("--");

        $r3 = r0.<org.mortbay.util.MultiPartWriter: java.io.Writer out>;

        $r2 = r0.<org.mortbay.util.MultiPartWriter: java.lang.String boundary>;

        virtualinvoke $r3.<java.io.Writer: void write(java.lang.String)>($r2);

        $r4 = r0.<org.mortbay.util.MultiPartWriter: java.io.Writer out>;

        virtualinvoke $r4.<java.io.Writer: void write(java.lang.String)>("\r\n");

        $r5 = r0.<org.mortbay.util.MultiPartWriter: java.io.Writer out>;

        virtualinvoke $r5.<java.io.Writer: void write(java.lang.String)>("Content-Type: ");

        $r7 = r0.<org.mortbay.util.MultiPartWriter: java.io.Writer out>;

        virtualinvoke $r7.<java.io.Writer: void write(java.lang.String)>(r6);

        $r8 = r0.<org.mortbay.util.MultiPartWriter: java.io.Writer out>;

        virtualinvoke $r8.<java.io.Writer: void write(java.lang.String)>("\r\n");

        i1 = 0;

     label2:
        if r9 == null goto label3;

        $i0 = lengthof r9;

        if i1 >= $i0 goto label3;

        $r12 = r0.<org.mortbay.util.MultiPartWriter: java.io.Writer out>;

        $r11 = r9[i1];

        virtualinvoke $r12.<java.io.Writer: void write(java.lang.String)>($r11);

        $r13 = r0.<org.mortbay.util.MultiPartWriter: java.io.Writer out>;

        virtualinvoke $r13.<java.io.Writer: void write(java.lang.String)>("\r\n");

        i1 = i1 + 1;

        goto label2;

     label3:
        $r10 = r0.<org.mortbay.util.MultiPartWriter: java.io.Writer out>;

        virtualinvoke $r10.<java.io.Writer: void write(java.lang.String)>("\r\n");

        r0.<org.mortbay.util.MultiPartWriter: boolean inPart> = 1;

        return;
    }

    static void <clinit>()
    {
        java.lang.String $r0, $r1;

        <org.mortbay.util.MultiPartWriter: java.lang.String __DASHDASH> = "--";

        <org.mortbay.util.MultiPartWriter: java.lang.String __CRLF> = "\r\n";

        $r0 = <org.mortbay.util.MultiPartOutputStream: java.lang.String MULTIPART_MIXED>;

        <org.mortbay.util.MultiPartWriter: java.lang.String MULTIPART_MIXED> = $r0;

        $r1 = <org.mortbay.util.MultiPartOutputStream: java.lang.String MULTIPART_X_MIXED_REPLACE>;

        <org.mortbay.util.MultiPartWriter: java.lang.String MULTIPART_X_MIXED_REPLACE> = $r1;

        return;
    }
}
