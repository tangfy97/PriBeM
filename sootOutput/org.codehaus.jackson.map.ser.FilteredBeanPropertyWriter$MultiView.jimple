final class org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter$MultiView extends org.codehaus.jackson.map.ser.BeanPropertyWriter
{
    protected final org.codehaus.jackson.map.ser.BeanPropertyWriter _delegate;
    protected final java.lang.Class[] _views;

    protected void <init>(org.codehaus.jackson.map.ser.BeanPropertyWriter, java.lang.Class[])
    {
        org.codehaus.jackson.map.ser.BeanPropertyWriter r1;
        java.lang.Class[] r2;
        org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter$MultiView r0;

        r0 := @this: org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter$MultiView;

        r1 := @parameter0: org.codehaus.jackson.map.ser.BeanPropertyWriter;

        r2 := @parameter1: java.lang.Class[];

        specialinvoke r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: void <init>(org.codehaus.jackson.map.ser.BeanPropertyWriter)>(r1);

        r0.<org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter$MultiView: org.codehaus.jackson.map.ser.BeanPropertyWriter _delegate> = r1;

        r0.<org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter$MultiView: java.lang.Class[] _views> = r2;

        return;
    }

    public org.codehaus.jackson.map.ser.BeanPropertyWriter withSerializer(org.codehaus.jackson.map.JsonSerializer)
    {
        org.codehaus.jackson.map.ser.BeanPropertyWriter $r3, $r4;
        java.lang.Class[] $r5;
        org.codehaus.jackson.map.JsonSerializer r2;
        org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter$MultiView $r0, r1;

        r1 := @this: org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter$MultiView;

        r2 := @parameter0: org.codehaus.jackson.map.JsonSerializer;

        $r0 = new org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter$MultiView;

        $r3 = r1.<org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter$MultiView: org.codehaus.jackson.map.ser.BeanPropertyWriter _delegate>;

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.map.ser.BeanPropertyWriter withSerializer(org.codehaus.jackson.map.JsonSerializer)>(r2);

        $r5 = r1.<org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter$MultiView: java.lang.Class[] _views>;

        specialinvoke $r0.<org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter$MultiView: void <init>(org.codehaus.jackson.map.ser.BeanPropertyWriter,java.lang.Class[])>($r4, $r5);

        return $r0;
    }

    public void serializeAsField(java.lang.Object, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider) throws java.lang.Exception
    {
        org.codehaus.jackson.map.SerializerProvider r0;
        java.lang.Class[] $r6, $r7;
        org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter$MultiView r2;
        org.codehaus.jackson.JsonGenerator r4;
        int i0, i1;
        org.codehaus.jackson.map.ser.BeanPropertyWriter $r5;
        java.lang.Class $r1, $r8;
        java.lang.Object r3;
        boolean $z0;

        r2 := @this: org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter$MultiView;

        r3 := @parameter0: java.lang.Object;

        r4 := @parameter1: org.codehaus.jackson.JsonGenerator;

        r0 := @parameter2: org.codehaus.jackson.map.SerializerProvider;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.SerializerProvider: java.lang.Class getSerializationView()>();

        if $r1 == null goto label4;

        i1 = 0;

        $r6 = r2.<org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter$MultiView: java.lang.Class[] _views>;

        i0 = lengthof $r6;

     label1:
        if i1 >= i0 goto label3;

        $r7 = r2.<org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter$MultiView: java.lang.Class[] _views>;

        $r8 = $r7[i1];

        $z0 = virtualinvoke $r8.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r1);

        if $z0 == 0 goto label2;

        goto label3;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        if i1 != i0 goto label4;

        return;

     label4:
        $r5 = r2.<org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter$MultiView: org.codehaus.jackson.map.ser.BeanPropertyWriter _delegate>;

        virtualinvoke $r5.<org.codehaus.jackson.map.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>(r3, r4, r0);

        return;
    }
}
