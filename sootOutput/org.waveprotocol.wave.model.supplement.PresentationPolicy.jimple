public interface  org.waveprotocol.wave.model.supplement.PresentationPolicy extends java.lang.Object
{
    public static final org.waveprotocol.wave.model.supplement.PresentationPolicy DEFAULT;

    public abstract org.waveprotocol.wave.model.supplement.ThreadState getThreadState(org.waveprotocol.wave.model.conversation.ConversationThread, org.waveprotocol.wave.model.supplement.ThreadState);

    public abstract org.waveprotocol.wave.model.supplement.ThreadState expand(org.waveprotocol.wave.model.conversation.ConversationThread, org.waveprotocol.wave.model.supplement.ThreadState);

    public abstract org.waveprotocol.wave.model.supplement.ThreadState collapse(org.waveprotocol.wave.model.conversation.ConversationThread, org.waveprotocol.wave.model.supplement.ThreadState);

    static void <clinit>()
    {
        org.waveprotocol.wave.model.supplement.SimplePresentationPolicy $r0;
        org.waveprotocol.wave.model.supplement.ThreadState $r1;

        $r0 = new org.waveprotocol.wave.model.supplement.SimplePresentationPolicy;

        $r1 = <org.waveprotocol.wave.model.supplement.ThreadState: org.waveprotocol.wave.model.supplement.ThreadState EXPANDED>;

        specialinvoke $r0.<org.waveprotocol.wave.model.supplement.SimplePresentationPolicy: void <init>(org.waveprotocol.wave.model.supplement.ThreadState)>($r1);

        <org.waveprotocol.wave.model.supplement.PresentationPolicy: org.waveprotocol.wave.model.supplement.PresentationPolicy DEFAULT> = $r0;

        return;
    }
}
