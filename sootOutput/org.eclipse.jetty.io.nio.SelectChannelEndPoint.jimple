public class org.eclipse.jetty.io.nio.SelectChannelEndPoint extends org.eclipse.jetty.io.nio.ChannelEndPoint implements org.eclipse.jetty.io.AsyncEndPoint, org.eclipse.jetty.io.ConnectedEndPoint
{
    public static final org.eclipse.jetty.util.log.Logger LOG;
    private final boolean WORK_AROUND_JVM_BUG_6346658;
    private final org.eclipse.jetty.io.nio.SelectorManager$SelectSet _selectSet;
    private final org.eclipse.jetty.io.nio.SelectorManager _manager;
    private java.nio.channels.SelectionKey _key;
    private final java.lang.Runnable _handler;
    private int _interestOps;
    private volatile org.eclipse.jetty.io.nio.AsyncConnection _connection;
    private static final int STATE_NEEDS_DISPATCH;
    private static final int STATE_UNDISPATCHED;
    private static final int STATE_DISPATCHED;
    private static final int STATE_ASYNC;
    private int _state;
    private boolean _onIdle;
    private volatile boolean _writable;
    private boolean _readBlocked;
    private boolean _writeBlocked;
    private boolean _open;
    private volatile long _idleTimestamp;
    private volatile boolean _checkIdle;
    private boolean _ishut;

    public void <init>(java.nio.channels.SocketChannel, org.eclipse.jetty.io.nio.SelectorManager$SelectSet, java.nio.channels.SelectionKey, int) throws java.io.IOException
    {
        org.eclipse.jetty.io.nio.SelectChannelEndPoint$1 $r5;
        java.nio.channels.SelectionKey r8;
        org.eclipse.jetty.io.nio.SelectChannelEndPoint r0;
        org.eclipse.jetty.io.nio.SelectorManager $r7;
        org.eclipse.jetty.io.nio.SelectorManager$SelectSet r6;
        java.nio.channels.SocketChannel r1;
        java.util.Locale $r3;
        int i0;
        java.lang.String $r2, $r4;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.io.nio.SelectChannelEndPoint;

        r1 := @parameter0: java.nio.channels.SocketChannel;

        r6 := @parameter1: org.eclipse.jetty.io.nio.SelectorManager$SelectSet;

        r8 := @parameter2: java.nio.channels.SelectionKey;

        i0 := @parameter3: int;

        specialinvoke r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: void <init>(java.nio.channels.ByteChannel,int)>(r1, i0);

        $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name");

        $r3 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r4 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r3);

        $z0 = virtualinvoke $r4.<java.lang.String: boolean contains(java.lang.CharSequence)>("win");

        r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean WORK_AROUND_JVM_BUG_6346658> = $z0;

        $r5 = new org.eclipse.jetty.io.nio.SelectChannelEndPoint$1;

        specialinvoke $r5.<org.eclipse.jetty.io.nio.SelectChannelEndPoint$1: void <init>(org.eclipse.jetty.io.nio.SelectChannelEndPoint)>(r0);

        r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: java.lang.Runnable _handler> = $r5;

        r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean _writable> = 1;

        $r7 = virtualinvoke r6.<org.eclipse.jetty.io.nio.SelectorManager$SelectSet: org.eclipse.jetty.io.nio.SelectorManager getManager()>();

        r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.io.nio.SelectorManager _manager> = $r7;

        r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.io.nio.SelectorManager$SelectSet _selectSet> = r6;

        r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: int _state> = 0;

        r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean _onIdle> = 0;

        r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean _open> = 1;

        r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: java.nio.channels.SelectionKey _key> = r8;

        virtualinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void setCheckForIdle(boolean)>(1);

        return;
    }

    public java.nio.channels.SelectionKey getSelectionKey()
    {
        java.lang.Throwable $r2;
        org.eclipse.jetty.io.nio.SelectChannelEndPoint r0;
        java.nio.channels.SelectionKey $r1;

        r0 := @this: org.eclipse.jetty.io.nio.SelectChannelEndPoint;

        entermonitor r0;

     label1:
        $r1 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: java.nio.channels.SelectionKey _key>;

        exitmonitor r0;

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

     label4:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.eclipse.jetty.io.nio.SelectorManager getSelectManager()
    {
        org.eclipse.jetty.io.nio.SelectorManager $r1;
        org.eclipse.jetty.io.nio.SelectChannelEndPoint r0;

        r0 := @this: org.eclipse.jetty.io.nio.SelectChannelEndPoint;

        $r1 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.io.nio.SelectorManager _manager>;

        return $r1;
    }

    public org.eclipse.jetty.io.Connection getConnection()
    {
        org.eclipse.jetty.io.nio.SelectChannelEndPoint r0;
        org.eclipse.jetty.io.nio.AsyncConnection $r1;

        r0 := @this: org.eclipse.jetty.io.nio.SelectChannelEndPoint;

        $r1 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.io.nio.AsyncConnection _connection>;

        return $r1;
    }

    public void setConnection(org.eclipse.jetty.io.Connection)
    {
        org.eclipse.jetty.io.nio.SelectorManager $r5;
        org.eclipse.jetty.io.Connection r2;
        org.eclipse.jetty.io.nio.SelectChannelEndPoint r0;
        org.eclipse.jetty.io.nio.AsyncConnection r1, $r3, $r4;

        r0 := @this: org.eclipse.jetty.io.nio.SelectChannelEndPoint;

        r2 := @parameter0: org.eclipse.jetty.io.Connection;

        r1 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.io.nio.AsyncConnection _connection>;

        $r3 = (org.eclipse.jetty.io.nio.AsyncConnection) r2;

        r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.io.nio.AsyncConnection _connection> = $r3;

        if r1 == null goto label1;

        $r4 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.io.nio.AsyncConnection _connection>;

        if r1 == $r4 goto label1;

        $r5 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.io.nio.SelectorManager _manager>;

        virtualinvoke $r5.<org.eclipse.jetty.io.nio.SelectorManager: void endPointUpgraded(org.eclipse.jetty.io.ConnectedEndPoint,org.eclipse.jetty.io.Connection)>(r0, r1);

     label1:
        return;
    }

    public long getIdleTimestamp()
    {
        long $l0;
        org.eclipse.jetty.io.nio.SelectChannelEndPoint r0;

        r0 := @this: org.eclipse.jetty.io.nio.SelectChannelEndPoint;

        $l0 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: long _idleTimestamp>;

        return $l0;
    }

    public void schedule()
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        org.eclipse.jetty.io.nio.SelectChannelEndPoint r0;
        java.lang.Throwable $r13;
        org.eclipse.jetty.io.nio.SelectorManager $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11;
        java.nio.channels.SelectionKey $r1, $r2, $r3, $r4, $r5, $r8, $r9, $r10, $r11, $r12, $r14;
        org.eclipse.jetty.io.nio.SelectorManager$SelectSet $r6;

        r0 := @this: org.eclipse.jetty.io.nio.SelectChannelEndPoint;

        entermonitor r0;

     label01:
        $r1 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: java.nio.channels.SelectionKey _key>;

        if $r1 == null goto label02;

        $r2 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: java.nio.channels.SelectionKey _key>;

        $z0 = virtualinvoke $r2.<java.nio.channels.SelectionKey: boolean isValid()>();

        if $z0 != 0 goto label04;

     label02:
        r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean _readBlocked> = 0;

        r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean _writeBlocked> = 0;

        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        exitmonitor r0;

     label03:
        return;

     label04:
        $z1 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean _readBlocked>;

        if $z1 != 0 goto label05;

        $z5 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean _writeBlocked>;

        if $z5 == 0 goto label10;

     label05:
        $z2 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean _readBlocked>;

        if $z2 == 0 goto label06;

        $r4 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: java.nio.channels.SelectionKey _key>;

        $z4 = virtualinvoke $r4.<java.nio.channels.SelectionKey: boolean isReadable()>();

        if $z4 == 0 goto label06;

        r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean _readBlocked> = 0;

     label06:
        $z7 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean _writeBlocked>;

        if $z7 == 0 goto label07;

        $r3 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: java.nio.channels.SelectionKey _key>;

        $z3 = virtualinvoke $r3.<java.nio.channels.SelectionKey: boolean isWritable()>();

        if $z3 == 0 goto label07;

        r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean _writeBlocked> = 0;

     label07:
        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        $r14 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: java.nio.channels.SelectionKey _key>;

        virtualinvoke $r14.<java.nio.channels.SelectionKey: java.nio.channels.SelectionKey interestOps(int)>(0);

        $i8 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: int _state>;

        if $i8 >= 1 goto label08;

        specialinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void updateKey()>();

     label08:
        exitmonitor r0;

     label09:
        return;

     label10:
        $r5 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: java.nio.channels.SelectionKey _key>;

        $i0 = virtualinvoke $r5.<java.nio.channels.SelectionKey: int readyOps()>();

        $i1 = $i0 & 4;

        if $i1 != 4 goto label11;

        $r10 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: java.nio.channels.SelectionKey _key>;

        $i3 = virtualinvoke $r10.<java.nio.channels.SelectionKey: int interestOps()>();

        $i4 = $i3 & 4;

        if $i4 != 4 goto label11;

        $r11 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: java.nio.channels.SelectionKey _key>;

        $i5 = virtualinvoke $r11.<java.nio.channels.SelectionKey: int interestOps()>();

        $i11 = (int) -5;

        $i6 = $i5 & $i11;

        r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: int _interestOps> = $i6;

        $r12 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: java.nio.channels.SelectionKey _key>;

        $i7 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: int _interestOps>;

        virtualinvoke $r12.<java.nio.channels.SelectionKey: java.nio.channels.SelectionKey interestOps(int)>($i7);

        r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean _writable> = 1;

     label11:
        $i9 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: int _state>;

        if $i9 < 1 goto label12;

        $r9 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: java.nio.channels.SelectionKey _key>;

        virtualinvoke $r9.<java.nio.channels.SelectionKey: java.nio.channels.SelectionKey interestOps(int)>(0);

        goto label13;

     label12:
        virtualinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void dispatch()>();

        $i2 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: int _state>;

        if $i2 < 1 goto label13;

        $r6 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.io.nio.SelectorManager$SelectSet _selectSet>;

        $r7 = virtualinvoke $r6.<org.eclipse.jetty.io.nio.SelectorManager$SelectSet: org.eclipse.jetty.io.nio.SelectorManager getManager()>();

        $z6 = virtualinvoke $r7.<org.eclipse.jetty.io.nio.SelectorManager: boolean isDeferringInterestedOps0()>();

        if $z6 != 0 goto label13;

        $r8 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: java.nio.channels.SelectionKey _key>;

        virtualinvoke $r8.<java.nio.channels.SelectionKey: java.nio.channels.SelectionKey interestOps(int)>(0);

     label13:
        exitmonitor r0;

     label14:
        goto label17;

     label15:
        $r13 := @caughtexception;

        exitmonitor r0;

     label16:
        throw $r13;

     label17:
        return;

        catch java.lang.Throwable from label01 to label03 with label15;
        catch java.lang.Throwable from label04 to label09 with label15;
        catch java.lang.Throwable from label10 to label14 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
    }

    public void asyncDispatch()
    {
        int $i0;
        java.lang.Throwable $r1;
        org.eclipse.jetty.io.nio.SelectChannelEndPoint r0;

        r0 := @this: org.eclipse.jetty.io.nio.SelectChannelEndPoint;

        entermonitor r0;

     label1:
        $i0 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: int _state>;

        tableswitch($i0)
        {
            case -1: goto label2;
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label3;
            default: goto label4;
        };

     label2:
        virtualinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void dispatch()>();

        goto label4;

     label3:
        r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: int _state> = 2;

     label4:
        exitmonitor r0;

     label5:
        goto label8;

     label6:
        $r1 := @caughtexception;

        exitmonitor r0;

     label7:
        throw $r1;

     label8:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void dispatch()
    {
        java.lang.Throwable $r12;
        java.lang.Object[] $r11;
        java.lang.Runnable $r1;
        org.eclipse.jetty.io.nio.SelectorManager $r2, $r8;
        int $i0, $i2, $i4;
        java.lang.String $r10;
        boolean $z0, $z1;
        org.eclipse.jetty.io.nio.SelectChannelEndPoint r0;
        java.lang.StringBuilder $r5, $r6, $r7, $r9, $r13;
        org.eclipse.jetty.util.log.Logger $r4;

        r0 := @this: org.eclipse.jetty.io.nio.SelectChannelEndPoint;

        entermonitor r0;

     label1:
        $i0 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: int _state>;

        if $i0 > 0 goto label3;

        $z0 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean _onIdle>;

        if $z0 == 0 goto label2;

        $i2 = (int) -1;

        r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: int _state> = $i2;

        goto label3;

     label2:
        r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: int _state> = 1;

        $r2 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.io.nio.SelectorManager _manager>;

        $r1 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: java.lang.Runnable _handler>;

        $z1 = virtualinvoke $r2.<org.eclipse.jetty.io.nio.SelectorManager: boolean dispatch(java.lang.Runnable)>($r1);

        if $z1 != 0 goto label3;

        $i4 = (int) -1;

        r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: int _state> = $i4;

        $r4 = <org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.util.log.Logger LOG>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dispatched Failed! ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r8 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.io.nio.SelectorManager _manager>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = newarray (java.lang.Object)[0];

        interfaceinvoke $r4.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Object[])>($r10, $r11);

        specialinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void updateKey()>();

     label3:
        exitmonitor r0;

     label4:
        goto label7;

     label5:
        $r12 := @caughtexception;

        exitmonitor r0;

     label6:
        throw $r12;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    protected boolean undispatch()
    {
        int $i0;
        java.lang.Throwable $r1;
        org.eclipse.jetty.io.nio.SelectChannelEndPoint r0;

        r0 := @this: org.eclipse.jetty.io.nio.SelectChannelEndPoint;

        entermonitor r0;

     label1:
        $i0 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: int _state>;

        lookupswitch($i0)
        {
            case 2: goto label2;
            default: goto label4;
        };

     label2:
        r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: int _state> = 1;

        exitmonitor r0;

     label3:
        return 0;

     label4:
        r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: int _state> = 0;

        specialinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void updateKey()>();

        exitmonitor r0;

     label5:
        return 1;

     label6:
        $r1 := @caughtexception;

        exitmonitor r0;

     label7:
        throw $r1;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void cancelTimeout(org.eclipse.jetty.util.thread.Timeout$Task)
    {
        org.eclipse.jetty.io.nio.SelectorManager$SelectSet $r1;
        org.eclipse.jetty.io.nio.SelectChannelEndPoint r0;
        org.eclipse.jetty.util.thread.Timeout$Task r2;

        r0 := @this: org.eclipse.jetty.io.nio.SelectChannelEndPoint;

        r2 := @parameter0: org.eclipse.jetty.util.thread.Timeout$Task;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.io.nio.SelectorManager$SelectSet getSelectSet()>();

        virtualinvoke $r1.<org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void cancelTimeout(org.eclipse.jetty.util.thread.Timeout$Task)>(r2);

        return;
    }

    public void scheduleTimeout(org.eclipse.jetty.util.thread.Timeout$Task, long)
    {
        org.eclipse.jetty.io.nio.SelectorManager$SelectSet $r1;
        org.eclipse.jetty.util.thread.Timeout$Task r2;
        long l0;
        org.eclipse.jetty.io.nio.SelectChannelEndPoint r0;

        r0 := @this: org.eclipse.jetty.io.nio.SelectChannelEndPoint;

        r2 := @parameter0: org.eclipse.jetty.util.thread.Timeout$Task;

        l0 := @parameter1: long;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.io.nio.SelectorManager$SelectSet getSelectSet()>();

        virtualinvoke $r1.<org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void scheduleTimeout(org.eclipse.jetty.util.thread.Timeout$Task,long)>(r2, l0);

        return;
    }

    public void setCheckForIdle(boolean)
    {
        long $l0;
        org.eclipse.jetty.io.nio.SelectChannelEndPoint r0;
        boolean z0;

        r0 := @this: org.eclipse.jetty.io.nio.SelectChannelEndPoint;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: long _idleTimestamp> = $l0;

        r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean _checkIdle> = 1;

        goto label2;

     label1:
        r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean _checkIdle> = 0;

     label2:
        return;
    }

    public boolean isCheckForIdle()
    {
        org.eclipse.jetty.io.nio.SelectChannelEndPoint r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.io.nio.SelectChannelEndPoint;

        $z0 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean _checkIdle>;

        return $z0;
    }

    protected void notIdle()
    {
        long $l0;
        org.eclipse.jetty.io.nio.SelectChannelEndPoint r0;

        r0 := @this: org.eclipse.jetty.io.nio.SelectChannelEndPoint;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: long _idleTimestamp> = $l0;

        return;
    }

    public void checkIdleTimestamp(long)
    {
        org.eclipse.jetty.io.nio.SelectChannelEndPoint$2 $r3;
        long l1, $l2, l3, $l5;
        org.eclipse.jetty.io.nio.SelectChannelEndPoint r0;
        org.eclipse.jetty.io.nio.SelectorManager $r2;
        byte $b6;
        int $i0, $i4, $i7;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.io.nio.SelectChannelEndPoint;

        l1 := @parameter0: long;

        $z0 = virtualinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean isCheckForIdle()>();

        if $z0 == 0 goto label1;

        $i0 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: int _maxIdleTime>;

        if $i0 <= 0 goto label1;

        $l2 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: long _idleTimestamp>;

        l3 = l1 - $l2;

        $i4 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: int _maxIdleTime>;

        $l5 = (long) $i4;

        $b6 = l3 cmp $l5;

        $i7 = (int) $b6;

        if $i7 <= 0 goto label1;

        virtualinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void setCheckForIdle(boolean)>(0);

        $r2 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.io.nio.SelectorManager _manager>;

        $r3 = new org.eclipse.jetty.io.nio.SelectChannelEndPoint$2;

        specialinvoke $r3.<org.eclipse.jetty.io.nio.SelectChannelEndPoint$2: void <init>(org.eclipse.jetty.io.nio.SelectChannelEndPoint,long)>(r0, l3);

        virtualinvoke $r2.<org.eclipse.jetty.io.nio.SelectorManager: boolean dispatch(java.lang.Runnable)>($r3);

     label1:
        return;
    }

    public void onIdleExpired(long)
    {
        java.lang.Throwable $r2, $r3, $r4, $r5;
        long $l1, $l2, $l4, $l5, l7;
        byte $b6;
        int $i0, $i3, $i8, $i9, $i10, $i12, $i14;
        org.eclipse.jetty.io.nio.SelectChannelEndPoint r0;
        org.eclipse.jetty.io.nio.AsyncConnection $r1;

        r0 := @this: org.eclipse.jetty.io.nio.SelectChannelEndPoint;

        l7 := @parameter0: long;

     label01:
        entermonitor r0;

     label02:
        r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean _onIdle> = 1;

        exitmonitor r0;

     label03:
        goto label06;

     label04:
        $r5 := @caughtexception;

        exitmonitor r0;

     label05:
        throw $r5;

     label06:
        $i0 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: int _maxIdleTime>;

        if $i0 <= 0 goto label07;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l2 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: long _idleTimestamp>;

        $l5 = $l1 - $l2;

        $i3 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: int _maxIdleTime>;

        $l4 = (long) $i3;

        $b6 = $l5 cmp $l4;

        $i10 = (int) $b6;

        if $i10 <= 0 goto label07;

        $r1 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.io.nio.AsyncConnection _connection>;

        interfaceinvoke $r1.<org.eclipse.jetty.io.nio.AsyncConnection: void onIdleExpired(long)>(l7);

     label07:
        entermonitor r0;

     label08:
        r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean _onIdle> = 0;

        $i9 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: int _state>;

        $i12 = (int) -1;

        if $i9 != $i12 goto label09;

        virtualinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void dispatch()>();

     label09:
        exitmonitor r0;

     label10:
        goto label13;

     label11:
        $r4 := @caughtexception;

        exitmonitor r0;

     label12:
        throw $r4;

     label13:
        goto label22;

     label14:
        $r3 := @caughtexception;

     label15:
        entermonitor r0;

     label16:
        r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean _onIdle> = 0;

        $i8 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: int _state>;

        $i14 = (int) -1;

        if $i8 != $i14 goto label17;

        virtualinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void dispatch()>();

     label17:
        exitmonitor r0;

     label18:
        goto label21;

     label19:
        $r2 := @caughtexception;

        exitmonitor r0;

     label20:
        throw $r2;

     label21:
        throw $r3;

     label22:
        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label08 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
        catch java.lang.Throwable from label01 to label07 with label14;
        catch java.lang.Throwable from label16 to label18 with label19;
        catch java.lang.Throwable from label19 to label20 with label19;
        catch java.lang.Throwable from label14 to label15 with label14;
    }

    public int fill(org.eclipse.jetty.io.Buffer) throws java.io.IOException
    {
        int $i0;
        org.eclipse.jetty.io.nio.SelectChannelEndPoint r0;
        org.eclipse.jetty.io.Buffer r1;

        r0 := @this: org.eclipse.jetty.io.nio.SelectChannelEndPoint;

        r1 := @parameter0: org.eclipse.jetty.io.Buffer;

        $i0 = specialinvoke r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: int fill(org.eclipse.jetty.io.Buffer)>(r1);

        if $i0 <= 0 goto label1;

        virtualinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void notIdle()>();

     label1:
        return $i0;
    }

    public int flush(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer) throws java.io.IOException
    {
        java.lang.Throwable $r4;
        org.eclipse.jetty.io.nio.SelectChannelEndPoint r0;
        int $i0, $i1;
        org.eclipse.jetty.io.Buffer r1, r2, r3;
        boolean $z0, $z1, $z2;

        r0 := @this: org.eclipse.jetty.io.nio.SelectChannelEndPoint;

        r1 := @parameter0: org.eclipse.jetty.io.Buffer;

        r2 := @parameter1: org.eclipse.jetty.io.Buffer;

        r3 := @parameter2: org.eclipse.jetty.io.Buffer;

        $i0 = specialinvoke r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: int flush(org.eclipse.jetty.io.Buffer,org.eclipse.jetty.io.Buffer,org.eclipse.jetty.io.Buffer)>(r1, r2, r3);

        if $i0 != 0 goto label10;

        if r1 == null goto label01;

        $z2 = interfaceinvoke r1.<org.eclipse.jetty.io.Buffer: boolean hasContent()>();

        if $z2 != 0 goto label03;

     label01:
        if r2 == null goto label02;

        $z1 = interfaceinvoke r2.<org.eclipse.jetty.io.Buffer: boolean hasContent()>();

        if $z1 != 0 goto label03;

     label02:
        if r3 == null goto label10;

        $z0 = interfaceinvoke r3.<org.eclipse.jetty.io.Buffer: boolean hasContent()>();

        if $z0 == 0 goto label10;

     label03:
        entermonitor r0;

     label04:
        r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean _writable> = 0;

        $i1 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: int _state>;

        if $i1 >= 1 goto label05;

        specialinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void updateKey()>();

     label05:
        exitmonitor r0;

     label06:
        goto label09;

     label07:
        $r4 := @caughtexception;

        exitmonitor r0;

     label08:
        throw $r4;

     label09:
        goto label11;

     label10:
        if $i0 <= 0 goto label11;

        r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean _writable> = 1;

        virtualinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void notIdle()>();

     label11:
        return $i0;

        catch java.lang.Throwable from label04 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
    }

    public int flush(org.eclipse.jetty.io.Buffer) throws java.io.IOException
    {
        java.lang.Throwable $r2;
        int $i0, $i1;
        org.eclipse.jetty.io.nio.SelectChannelEndPoint r0;
        org.eclipse.jetty.io.Buffer r1;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.io.nio.SelectChannelEndPoint;

        r1 := @parameter0: org.eclipse.jetty.io.Buffer;

        $i0 = specialinvoke r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: int flush(org.eclipse.jetty.io.Buffer)>(r1);

        if $i0 != 0 goto label7;

        if r1 == null goto label7;

        $z0 = interfaceinvoke r1.<org.eclipse.jetty.io.Buffer: boolean hasContent()>();

        if $z0 == 0 goto label7;

        entermonitor r0;

     label1:
        r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean _writable> = 0;

        $i1 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: int _state>;

        if $i1 >= 1 goto label2;

        specialinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void updateKey()>();

     label2:
        exitmonitor r0;

     label3:
        goto label6;

     label4:
        $r2 := @caughtexception;

        exitmonitor r0;

     label5:
        throw $r2;

     label6:
        goto label8;

     label7:
        if $i0 <= 0 goto label8;

        r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean _writable> = 1;

        virtualinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void notIdle()>();

     label8:
        return $i0;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public boolean blockReadable(long) throws java.io.IOException
    {
        java.lang.Throwable $r4, $r5, $r6;
        long $l0, l1, l2, l6, $l7;
        org.eclipse.jetty.io.EofException $r11;
        byte $b3, $b4, $b5;
        int $i8, $i9, $i10;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.eclipse.jetty.io.nio.SelectChannelEndPoint r0;
        org.eclipse.jetty.io.nio.SelectorManager$SelectSet $r1, $r2, $r7, $r10;
        java.lang.InterruptedException $r8;
        org.eclipse.jetty.util.log.Logger $r9;

        r0 := @this: org.eclipse.jetty.io.nio.SelectChannelEndPoint;

        l1 := @parameter0: long;

        entermonitor r0;

     label01:
        $z0 = virtualinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean isInputShutdown()>();

        if $z0 == 0 goto label02;

        $r11 = new org.eclipse.jetty.io.EofException;

        specialinvoke $r11.<org.eclipse.jetty.io.EofException: void <init>()>();

        throw $r11;

     label02:
        $r1 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.io.nio.SelectorManager$SelectSet _selectSet>;

        $l0 = virtualinvoke $r1.<org.eclipse.jetty.io.nio.SelectorManager$SelectSet: long getNow()>();

        l6 = $l0;

        l2 = $l0 + l1;

        $z1 = virtualinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean isCheckForIdle()>();

        virtualinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void setCheckForIdle(boolean)>(1);

     label03:
        r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean _readBlocked> = 1;

     label04:
        $z4 = virtualinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean isInputShutdown()>();

        if $z4 != 0 goto label16;

        $z2 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean _readBlocked>;

        if $z2 == 0 goto label16;

     label05:
        specialinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void updateKey()>();

        $b3 = l1 cmp 0L;

        $i8 = (int) $b3;

        if $i8 <= 0 goto label06;

        $l7 = l2 - l6;

        goto label07;

     label06:
        $l7 = 10000L;

     label07:
        virtualinvoke r0.<java.lang.Object: void wait(long)>($l7);

     label08:
        $r2 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.io.nio.SelectorManager$SelectSet _selectSet>;

        l6 = virtualinvoke $r2.<org.eclipse.jetty.io.nio.SelectorManager$SelectSet: long getNow()>();

        goto label13;

     label09:
        $r8 := @caughtexception;

        $r9 = <org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r9.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.Throwable)>($r8);

     label10:
        $r10 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.io.nio.SelectorManager$SelectSet _selectSet>;

        l6 = virtualinvoke $r10.<org.eclipse.jetty.io.nio.SelectorManager$SelectSet: long getNow()>();

        goto label13;

     label11:
        $r6 := @caughtexception;

     label12:
        $r7 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.io.nio.SelectorManager$SelectSet _selectSet>;

        virtualinvoke $r7.<org.eclipse.jetty.io.nio.SelectorManager$SelectSet: long getNow()>();

        throw $r6;

     label13:
        $z3 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean _readBlocked>;

        if $z3 == 0 goto label04;

        $b4 = l1 cmp 0L;

        $i9 = (int) $b4;

        if $i9 <= 0 goto label04;

        $b5 = l6 cmp l2;

        $i10 = (int) $b5;

        if $i10 < 0 goto label04;

     label14:
        r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean _readBlocked> = 0;

        virtualinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void setCheckForIdle(boolean)>($z1);

        exitmonitor r0;

     label15:
        return 0;

     label16:
        r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean _readBlocked> = 0;

        virtualinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void setCheckForIdle(boolean)>($z1);

        goto label19;

     label17:
        $r5 := @caughtexception;

     label18:
        r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean _readBlocked> = 0;

        virtualinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void setCheckForIdle(boolean)>($z1);

        throw $r5;

     label19:
        exitmonitor r0;

     label20:
        goto label23;

     label21:
        $r4 := @caughtexception;

        exitmonitor r0;

     label22:
        throw $r4;

     label23:
        return 1;

        catch java.lang.InterruptedException from label05 to label08 with label09;
        catch java.lang.Throwable from label05 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
        catch java.lang.Throwable from label03 to label14 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
        catch java.lang.Throwable from label01 to label15 with label21;
        catch java.lang.Throwable from label16 to label20 with label21;
        catch java.lang.Throwable from label21 to label22 with label21;
    }

    public boolean blockWritable(long) throws java.io.IOException
    {
        java.lang.Throwable $r4, $r5, $r6;
        long $l0, l1, l2, l6, $l7;
        org.eclipse.jetty.io.EofException $r11;
        byte $b3, $b4, $b5;
        int $i8, $i9, $i10;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.eclipse.jetty.io.nio.SelectChannelEndPoint r0;
        org.eclipse.jetty.io.nio.SelectorManager$SelectSet $r1, $r2, $r7, $r10;
        java.lang.InterruptedException $r8;
        org.eclipse.jetty.util.log.Logger $r9;

        r0 := @this: org.eclipse.jetty.io.nio.SelectChannelEndPoint;

        l1 := @parameter0: long;

        entermonitor r0;

     label01:
        $z0 = virtualinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean isOutputShutdown()>();

        if $z0 == 0 goto label02;

        $r11 = new org.eclipse.jetty.io.EofException;

        specialinvoke $r11.<org.eclipse.jetty.io.EofException: void <init>()>();

        throw $r11;

     label02:
        $r1 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.io.nio.SelectorManager$SelectSet _selectSet>;

        $l0 = virtualinvoke $r1.<org.eclipse.jetty.io.nio.SelectorManager$SelectSet: long getNow()>();

        l6 = $l0;

        l2 = $l0 + l1;

        $z1 = virtualinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean isCheckForIdle()>();

        virtualinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void setCheckForIdle(boolean)>(1);

     label03:
        r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean _writeBlocked> = 1;

     label04:
        $z4 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean _writeBlocked>;

        if $z4 == 0 goto label16;

        $z2 = virtualinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean isOutputShutdown()>();

        if $z2 != 0 goto label16;

     label05:
        specialinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void updateKey()>();

        $b3 = l1 cmp 0L;

        $i8 = (int) $b3;

        if $i8 <= 0 goto label06;

        $l7 = l2 - l6;

        goto label07;

     label06:
        $l7 = 10000L;

     label07:
        virtualinvoke r0.<java.lang.Object: void wait(long)>($l7);

     label08:
        $r2 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.io.nio.SelectorManager$SelectSet _selectSet>;

        l6 = virtualinvoke $r2.<org.eclipse.jetty.io.nio.SelectorManager$SelectSet: long getNow()>();

        goto label13;

     label09:
        $r8 := @caughtexception;

        $r9 = <org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r9.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.Throwable)>($r8);

     label10:
        $r10 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.io.nio.SelectorManager$SelectSet _selectSet>;

        l6 = virtualinvoke $r10.<org.eclipse.jetty.io.nio.SelectorManager$SelectSet: long getNow()>();

        goto label13;

     label11:
        $r6 := @caughtexception;

     label12:
        $r7 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.io.nio.SelectorManager$SelectSet _selectSet>;

        virtualinvoke $r7.<org.eclipse.jetty.io.nio.SelectorManager$SelectSet: long getNow()>();

        throw $r6;

     label13:
        $z3 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean _writeBlocked>;

        if $z3 == 0 goto label04;

        $b4 = l1 cmp 0L;

        $i9 = (int) $b4;

        if $i9 <= 0 goto label04;

        $b5 = l6 cmp l2;

        $i10 = (int) $b5;

        if $i10 < 0 goto label04;

     label14:
        r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean _writeBlocked> = 0;

        virtualinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void setCheckForIdle(boolean)>($z1);

        exitmonitor r0;

     label15:
        return 0;

     label16:
        r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean _writeBlocked> = 0;

        virtualinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void setCheckForIdle(boolean)>($z1);

        goto label19;

     label17:
        $r5 := @caughtexception;

     label18:
        r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean _writeBlocked> = 0;

        virtualinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void setCheckForIdle(boolean)>($z1);

        throw $r5;

     label19:
        exitmonitor r0;

     label20:
        goto label23;

     label21:
        $r4 := @caughtexception;

        exitmonitor r0;

     label22:
        throw $r4;

     label23:
        return 1;

        catch java.lang.InterruptedException from label05 to label08 with label09;
        catch java.lang.Throwable from label05 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
        catch java.lang.Throwable from label03 to label14 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
        catch java.lang.Throwable from label01 to label15 with label21;
        catch java.lang.Throwable from label16 to label20 with label21;
        catch java.lang.Throwable from label21 to label22 with label21;
    }

    public void scheduleWrite()
    {
        java.lang.Object[] $r1;
        org.eclipse.jetty.util.log.Logger $r2;
        org.eclipse.jetty.io.nio.SelectChannelEndPoint r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.io.nio.SelectChannelEndPoint;

        $z0 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean _writable>;

        if $z0 == 0 goto label1;

        $r2 = <org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.util.log.Logger LOG>;

        $r1 = newarray (java.lang.Object)[1];

        $r1[0] = r0;

        interfaceinvoke $r2.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>("Required scheduleWrite {}", $r1);

     label1:
        r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean _writable> = 0;

        specialinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void updateKey()>();

        return;
    }

    public boolean isWritable()
    {
        org.eclipse.jetty.io.nio.SelectChannelEndPoint r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.io.nio.SelectChannelEndPoint;

        $z0 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean _writable>;

        return $z0;
    }

    public boolean hasProgressed()
    {
        org.eclipse.jetty.io.nio.SelectChannelEndPoint r0;

        r0 := @this: org.eclipse.jetty.io.nio.SelectChannelEndPoint;

        return 0;
    }

    private void updateKey()
    {
        byte $b3, $b4;
        java.nio.channels.ByteChannel $r1;
        boolean $z0, $z1, z2, z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        org.eclipse.jetty.io.nio.SelectChannelEndPoint r0;
        org.eclipse.jetty.io.nio.AsyncConnection $r6;
        java.lang.Exception $r8;
        java.lang.Throwable $r7;
        java.net.Socket $r10, $r11;
        int $i0, $i1, i2, $i5, $i6, $i8, $i10;
        java.nio.channels.SelectionKey $r4, $r5, $r12;
        org.eclipse.jetty.io.nio.SelectorManager$SelectSet $r2, $r3;
        org.eclipse.jetty.util.log.Logger $r9;

        r0 := @this: org.eclipse.jetty.io.nio.SelectChannelEndPoint;

        entermonitor r0;

     label01:
        $i8 = (int) -1;

        i2 = $i8;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: java.nio.channels.ByteChannel getChannel()>();

        $z0 = interfaceinvoke $r1.<java.nio.channels.ByteChannel: boolean isOpen()>();

        if $z0 == 0 goto label17;

        $z1 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean _readBlocked>;

        if $z1 != 0 goto label02;

        $i1 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: int _state>;

        if $i1 >= 1 goto label03;

        $r6 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.io.nio.AsyncConnection _connection>;

        $z6 = interfaceinvoke $r6.<org.eclipse.jetty.io.nio.AsyncConnection: boolean isSuspended()>();

        if $z6 != 0 goto label03;

     label02:
        $z7 = 1;

        goto label04;

     label03:
        $z7 = 0;

     label04:
        z2 = $z7;

        $z8 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean _writeBlocked>;

        if $z8 != 0 goto label05;

        $i0 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: int _state>;

        if $i0 >= 1 goto label06;

        $z5 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean _writable>;

        if $z5 != 0 goto label06;

     label05:
        $z9 = 1;

        goto label07;

     label06:
        $z9 = 0;

     label07:
        z3 = $z9;

        $r10 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: java.net.Socket _socket>;

        $z10 = virtualinvoke $r10.<java.net.Socket: boolean isInputShutdown()>();

        if $z10 != 0 goto label08;

        if z2 == 0 goto label08;

        $z11 = 1;

        goto label09;

     label08:
        $z11 = 0;

     label09:
        $r11 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: java.net.Socket _socket>;

        $z12 = virtualinvoke $r11.<java.net.Socket: boolean isOutputShutdown()>();

        if $z12 != 0 goto label10;

        if z3 == 0 goto label10;

        $b3 = 4;

        goto label11;

     label10:
        $b3 = 0;

     label11:
        $b4 = $z11 | $b3;

        r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: int _interestOps> = $b4;

     label12:
        $r12 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: java.nio.channels.SelectionKey _key>;

        if $r12 == null goto label13;

        $r4 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: java.nio.channels.SelectionKey _key>;

        $z4 = virtualinvoke $r4.<java.nio.channels.SelectionKey: boolean isValid()>();

        if $z4 == 0 goto label13;

        $r5 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: java.nio.channels.SelectionKey _key>;

        $i5 = virtualinvoke $r5.<java.nio.channels.SelectionKey: int interestOps()>();

        goto label14;

     label13:
        $i10 = (int) -1;

        $i5 = $i10;

     label14:
        i2 = $i5;

     label15:
        goto label17;

     label16:
        $r8 := @caughtexception;

        r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: java.nio.channels.SelectionKey _key> = null;

        $r9 = <org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r9.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r8);

     label17:
        $i6 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: int _interestOps>;

        if $i6 == i2 goto label18;

        $z13 = 1;

        goto label19;

     label18:
        $z13 = 0;

     label19:
        exitmonitor r0;

     label20:
        goto label23;

     label21:
        $r7 := @caughtexception;

        exitmonitor r0;

     label22:
        throw $r7;

     label23:
        if $z13 == 0 goto label24;

        $r2 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.io.nio.SelectorManager$SelectSet _selectSet>;

        virtualinvoke $r2.<org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void addChange(java.lang.Object)>(r0);

        $r3 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.io.nio.SelectorManager$SelectSet _selectSet>;

        virtualinvoke $r3.<org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void wakeup()>();

     label24:
        return;

        catch java.lang.Exception from label12 to label15 with label16;
        catch java.lang.Throwable from label01 to label20 with label21;
        catch java.lang.Throwable from label21 to label22 with label21;
    }

    void doUpdateKey()
    {
        java.nio.channels.ByteChannel $r1, $r10, $r11;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        org.eclipse.jetty.io.nio.SelectChannelEndPoint r0;
        java.lang.Exception $r20;
        java.lang.Throwable $r19;
        java.nio.channels.Selector $r14;
        int $i0, $i1, $i2;
        java.nio.channels.SelectionKey $r2, $r4, $r5, $r6, $r7, $r8, $r9, $r15, $r16, $r17, $r22, $r24, $r25;
        org.eclipse.jetty.io.nio.SelectorManager$SelectSet $r3, $r12, $r23;
        java.nio.channels.SelectableChannel $r13, $r18;
        org.eclipse.jetty.util.log.Logger $r21;

        r0 := @this: org.eclipse.jetty.io.nio.SelectChannelEndPoint;

        entermonitor r0;

     label01:
        $r1 = virtualinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: java.nio.channels.ByteChannel getChannel()>();

        $z0 = interfaceinvoke $r1.<java.nio.channels.ByteChannel: boolean isOpen()>();

        if $z0 == 0 goto label12;

        $i0 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: int _interestOps>;

        if $i0 <= 0 goto label10;

        $r9 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: java.nio.channels.SelectionKey _key>;

        if $r9 == null goto label02;

        $r16 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: java.nio.channels.SelectionKey _key>;

        $z4 = virtualinvoke $r16.<java.nio.channels.SelectionKey: boolean isValid()>();

        if $z4 != 0 goto label09;

     label02:
        $r10 = virtualinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: java.nio.channels.ByteChannel getChannel()>();

        $r18 = (java.nio.channels.SelectableChannel) $r10;

        $z3 = virtualinvoke $r18.<java.nio.channels.SelectableChannel: boolean isRegistered()>();

        if $z3 == 0 goto label03;

        specialinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void updateKey()>();

        goto label08;

     label03:
        $r11 = virtualinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: java.nio.channels.ByteChannel getChannel()>();

        $r13 = (java.nio.channels.SelectableChannel) $r11;

        $r12 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.io.nio.SelectorManager$SelectSet _selectSet>;

        $r14 = virtualinvoke $r12.<org.eclipse.jetty.io.nio.SelectorManager$SelectSet: java.nio.channels.Selector getSelector()>();

        $i1 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: int _interestOps>;

        $r15 = virtualinvoke $r13.<java.nio.channels.SelectableChannel: java.nio.channels.SelectionKey register(java.nio.channels.Selector,int,java.lang.Object)>($r14, $i1, r0);

        r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: java.nio.channels.SelectionKey _key> = $r15;

     label04:
        goto label08;

     label05:
        $r20 := @caughtexception;

        $r21 = <org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r21.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r20);

        $r22 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: java.nio.channels.SelectionKey _key>;

        if $r22 == null goto label06;

        $r24 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: java.nio.channels.SelectionKey _key>;

        $z5 = virtualinvoke $r24.<java.nio.channels.SelectionKey: boolean isValid()>();

        if $z5 == 0 goto label06;

        $r25 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: java.nio.channels.SelectionKey _key>;

        virtualinvoke $r25.<java.nio.channels.SelectionKey: void cancel()>();

     label06:
        $z6 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean _open>;

        if $z6 == 0 goto label07;

        $r23 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.io.nio.SelectorManager$SelectSet _selectSet>;

        virtualinvoke $r23.<org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void destroyEndPoint(org.eclipse.jetty.io.nio.SelectChannelEndPoint)>(r0);

     label07:
        r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean _open> = 0;

        r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: java.nio.channels.SelectionKey _key> = null;

     label08:
        goto label15;

     label09:
        $r17 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: java.nio.channels.SelectionKey _key>;

        $i2 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: int _interestOps>;

        virtualinvoke $r17.<java.nio.channels.SelectionKey: java.nio.channels.SelectionKey interestOps(int)>($i2);

        goto label15;

     label10:
        $r6 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: java.nio.channels.SelectionKey _key>;

        if $r6 == null goto label11;

        $r7 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: java.nio.channels.SelectionKey _key>;

        $z2 = virtualinvoke $r7.<java.nio.channels.SelectionKey: boolean isValid()>();

        if $z2 == 0 goto label11;

        $r8 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: java.nio.channels.SelectionKey _key>;

        virtualinvoke $r8.<java.nio.channels.SelectionKey: java.nio.channels.SelectionKey interestOps(int)>(0);

        goto label15;

     label11:
        r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: java.nio.channels.SelectionKey _key> = null;

        goto label15;

     label12:
        $r2 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: java.nio.channels.SelectionKey _key>;

        if $r2 == null goto label13;

        $r4 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: java.nio.channels.SelectionKey _key>;

        $z1 = virtualinvoke $r4.<java.nio.channels.SelectionKey: boolean isValid()>();

        if $z1 == 0 goto label13;

        $r5 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: java.nio.channels.SelectionKey _key>;

        virtualinvoke $r5.<java.nio.channels.SelectionKey: void cancel()>();

     label13:
        $z7 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean _open>;

        if $z7 == 0 goto label14;

        r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean _open> = 0;

        $r3 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.io.nio.SelectorManager$SelectSet _selectSet>;

        virtualinvoke $r3.<org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void destroyEndPoint(org.eclipse.jetty.io.nio.SelectChannelEndPoint)>(r0);

     label14:
        r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: java.nio.channels.SelectionKey _key> = null;

     label15:
        exitmonitor r0;

     label16:
        goto label19;

     label17:
        $r19 := @caughtexception;

        exitmonitor r0;

     label18:
        throw $r19;

     label19:
        return;

        catch java.lang.Exception from label03 to label04 with label05;
        catch java.lang.Throwable from label01 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
    }

    protected void handle()
    {
        org.eclipse.jetty.io.EofException $r52;
        org.eclipse.jetty.io.nio.SelectChannelEndPoint r0;
        org.eclipse.jetty.io.nio.AsyncConnection $r3, $r5, $r6, $r8, $r11, $r21, $r29, $r39, $r51, $r61, r67;
        java.lang.Throwable $r12, $r15, $r18, $r20, $r22, $r25, $r30, $r32, $r35, $r44, $r47, $r54, $r57, $r62, $r65;
        java.lang.Object[] $r1, $r7, $r13, $r43;
        java.lang.String $r42;
        java.nio.channels.ClosedChannelException $r59;
        java.io.IOException $r16, $r23, $r27, $r33, $r37, $r40, $r45, $r49, $r55, $r63;
        org.eclipse.jetty.io.Connection $r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, z36, $z37, $z38, z39, $z40;
        org.eclipse.jetty.io.nio.SelectorManager $r10;
        org.eclipse.jetty.util.log.Logger $r2, $r9, $r14, $r17, $r19, $r24, $r26, $r28, $r31, $r34, $r36, $r38, $r41, $r46, $r48, $r50, $r53, $r56, $r58, $r60, $r64, $r66;

        r0 := @this: org.eclipse.jetty.io.nio.SelectChannelEndPoint;

        z22 = 1;

     label001:
        if z22 == 0 goto label096;

     label002:
        $r3 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.io.nio.AsyncConnection _connection>;

        $r4 = interfaceinvoke $r3.<org.eclipse.jetty.io.nio.AsyncConnection: org.eclipse.jetty.io.Connection handle()>();

        $r11 = (org.eclipse.jetty.io.nio.AsyncConnection) $r4;

        $r5 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.io.nio.AsyncConnection _connection>;

        if $r11 == $r5 goto label003;

        $r9 = <org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.util.log.Logger LOG>;

        $r7 = newarray (java.lang.Object)[2];

        $r7[0] = $r11;

        $r8 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.io.nio.AsyncConnection _connection>;

        $r7[1] = $r8;

        interfaceinvoke $r9.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>("{} replaced {}", $r7);

        r67 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.io.nio.AsyncConnection _connection>;

        r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.io.nio.AsyncConnection _connection> = $r11;

        $r10 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.io.nio.SelectorManager _manager>;

        virtualinvoke $r10.<org.eclipse.jetty.io.nio.SelectorManager: void endPointUpgraded(org.eclipse.jetty.io.ConnectedEndPoint,org.eclipse.jetty.io.Connection)>(r0, r67);

        goto label002;

     label003:
        $z2 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean _ishut>;

        if $z2 != 0 goto label013;

        $z3 = virtualinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean isInputShutdown()>();

        if $z3 == 0 goto label013;

        $z4 = virtualinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean isOpen()>();

        if $z4 == 0 goto label013;

        r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean _ishut> = 1;

     label004:
        $r6 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.io.nio.AsyncConnection _connection>;

        interfaceinvoke $r6.<org.eclipse.jetty.io.nio.AsyncConnection: void onInputShutdown()>();

     label005:
        specialinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void updateKey()>();

        goto label013;

     label006:
        $r65 := @caughtexception;

        $r66 = <org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r66.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Throwable)>("onInputShutdown failed", $r65);

     label007:
        virtualinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void close()>();

     label008:
        goto label010;

     label009:
        $r63 := @caughtexception;

        $r64 = <org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r64.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r63);

     label010:
        specialinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void updateKey()>();

        goto label013;

     label011:
        $r62 := @caughtexception;

     label012:
        specialinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void updateKey()>();

        throw $r62;

     label013:
        $z23 = virtualinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean undispatch()>();

        if $z23 != 0 goto label014;

        $z24 = 1;

        goto label015;

     label014:
        $z24 = 0;

     label015:
        z22 = $z24;

        goto label095;

     label016:
        $r59 := @caughtexception;

        $r60 = <org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r60.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r59);

     label017:
        $z19 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean _ishut>;

        if $z19 != 0 goto label027;

        $z20 = virtualinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean isInputShutdown()>();

        if $z20 == 0 goto label027;

        $z21 = virtualinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean isOpen()>();

        if $z21 == 0 goto label027;

        r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean _ishut> = 1;

     label018:
        $r61 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.io.nio.AsyncConnection _connection>;

        interfaceinvoke $r61.<org.eclipse.jetty.io.nio.AsyncConnection: void onInputShutdown()>();

     label019:
        specialinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void updateKey()>();

        goto label027;

     label020:
        $r57 := @caughtexception;

        $r58 = <org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r58.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Throwable)>("onInputShutdown failed", $r57);

     label021:
        virtualinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void close()>();

     label022:
        goto label024;

     label023:
        $r55 := @caughtexception;

        $r56 = <org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r56.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r55);

     label024:
        specialinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void updateKey()>();

        goto label027;

     label025:
        $r54 := @caughtexception;

     label026:
        specialinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void updateKey()>();

        throw $r54;

     label027:
        $z25 = virtualinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean undispatch()>();

        if $z25 != 0 goto label028;

        $z26 = 1;

        goto label029;

     label028:
        $z26 = 0;

     label029:
        z22 = $z26;

        goto label095;

     label030:
        $r52 := @caughtexception;

        $r53 = <org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r53.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Throwable)>("EOF", $r52);

     label031:
        virtualinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void close()>();

     label032:
        goto label034;

     label033:
        $r49 := @caughtexception;

        $r50 = <org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r50.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r49);

     label034:
        $z16 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean _ishut>;

        if $z16 != 0 goto label044;

        $z17 = virtualinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean isInputShutdown()>();

        if $z17 == 0 goto label044;

        $z18 = virtualinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean isOpen()>();

        if $z18 == 0 goto label044;

        r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean _ishut> = 1;

     label035:
        $r51 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.io.nio.AsyncConnection _connection>;

        interfaceinvoke $r51.<org.eclipse.jetty.io.nio.AsyncConnection: void onInputShutdown()>();

     label036:
        specialinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void updateKey()>();

        goto label044;

     label037:
        $r47 := @caughtexception;

        $r48 = <org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r48.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Throwable)>("onInputShutdown failed", $r47);

     label038:
        virtualinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void close()>();

     label039:
        goto label041;

     label040:
        $r45 := @caughtexception;

        $r46 = <org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r46.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r45);

     label041:
        specialinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void updateKey()>();

        goto label044;

     label042:
        $r44 := @caughtexception;

     label043:
        specialinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void updateKey()>();

        throw $r44;

     label044:
        $z27 = virtualinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean undispatch()>();

        if $z27 != 0 goto label045;

        $z28 = 1;

        goto label046;

     label045:
        $z28 = 0;

     label046:
        z22 = $z28;

        goto label095;

     label047:
        $r40 := @caughtexception;

        $r41 = <org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.util.log.Logger LOG>;

        $r42 = virtualinvoke $r40.<java.io.IOException: java.lang.String toString()>();

        $r43 = newarray (java.lang.Object)[0];

        interfaceinvoke $r41.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Object[])>($r42, $r43);

     label048:
        virtualinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void close()>();

     label049:
        goto label051;

     label050:
        $r37 := @caughtexception;

        $r38 = <org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r38.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r37);

     label051:
        $z13 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean _ishut>;

        if $z13 != 0 goto label061;

        $z14 = virtualinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean isInputShutdown()>();

        if $z14 == 0 goto label061;

        $z15 = virtualinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean isOpen()>();

        if $z15 == 0 goto label061;

        r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean _ishut> = 1;

     label052:
        $r39 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.io.nio.AsyncConnection _connection>;

        interfaceinvoke $r39.<org.eclipse.jetty.io.nio.AsyncConnection: void onInputShutdown()>();

     label053:
        specialinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void updateKey()>();

        goto label061;

     label054:
        $r35 := @caughtexception;

        $r36 = <org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r36.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Throwable)>("onInputShutdown failed", $r35);

     label055:
        virtualinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void close()>();

     label056:
        goto label058;

     label057:
        $r33 := @caughtexception;

        $r34 = <org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r34.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r33);

     label058:
        specialinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void updateKey()>();

        goto label061;

     label059:
        $r32 := @caughtexception;

     label060:
        specialinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void updateKey()>();

        throw $r32;

     label061:
        $z29 = virtualinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean undispatch()>();

        if $z29 != 0 goto label062;

        $z30 = 1;

        goto label063;

     label062:
        $z30 = 0;

     label063:
        z22 = $z30;

        goto label095;

     label064:
        $r30 := @caughtexception;

        $r31 = <org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r31.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Throwable)>("handle failed", $r30);

     label065:
        virtualinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void close()>();

     label066:
        goto label068;

     label067:
        $r27 := @caughtexception;

        $r28 = <org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r28.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r27);

     label068:
        $z10 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean _ishut>;

        if $z10 != 0 goto label078;

        $z11 = virtualinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean isInputShutdown()>();

        if $z11 == 0 goto label078;

        $z12 = virtualinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean isOpen()>();

        if $z12 == 0 goto label078;

        r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean _ishut> = 1;

     label069:
        $r29 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.io.nio.AsyncConnection _connection>;

        interfaceinvoke $r29.<org.eclipse.jetty.io.nio.AsyncConnection: void onInputShutdown()>();

     label070:
        specialinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void updateKey()>();

        goto label078;

     label071:
        $r25 := @caughtexception;

        $r26 = <org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r26.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Throwable)>("onInputShutdown failed", $r25);

     label072:
        virtualinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void close()>();

     label073:
        goto label075;

     label074:
        $r23 := @caughtexception;

        $r24 = <org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r24.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r23);

     label075:
        specialinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void updateKey()>();

        goto label078;

     label076:
        $r22 := @caughtexception;

     label077:
        specialinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void updateKey()>();

        throw $r22;

     label078:
        $z31 = virtualinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean undispatch()>();

        if $z31 != 0 goto label079;

        $z32 = 1;

        goto label080;

     label079:
        $z32 = 0;

     label080:
        z22 = $z32;

        goto label095;

     label081:
        $r20 := @caughtexception;

     label082:
        $z7 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean _ishut>;

        if $z7 != 0 goto label092;

        $z8 = virtualinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean isInputShutdown()>();

        if $z8 == 0 goto label092;

        $z9 = virtualinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean isOpen()>();

        if $z9 == 0 goto label092;

        r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean _ishut> = 1;

     label083:
        $r21 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.io.nio.AsyncConnection _connection>;

        interfaceinvoke $r21.<org.eclipse.jetty.io.nio.AsyncConnection: void onInputShutdown()>();

     label084:
        specialinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void updateKey()>();

        goto label092;

     label085:
        $r18 := @caughtexception;

        $r19 = <org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r19.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Throwable)>("onInputShutdown failed", $r18);

     label086:
        virtualinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void close()>();

     label087:
        goto label089;

     label088:
        $r16 := @caughtexception;

        $r17 = <org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r17.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r16);

     label089:
        specialinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void updateKey()>();

        goto label092;

     label090:
        $r15 := @caughtexception;

     label091:
        specialinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void updateKey()>();

        throw $r15;

     label092:
        $z33 = virtualinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean undispatch()>();

        if $z33 != 0 goto label093;

        $z34 = 1;

        goto label094;

     label093:
        $z34 = 0;

     label094:
        z22 = $z34;

        throw $r20;

     label095:
        goto label001;

     label096:
        if z22 == 0 goto label110;

        $z0 = virtualinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean undispatch()>();

        if $z0 != 0 goto label097;

        $z35 = 1;

        goto label098;

     label097:
        $z35 = 0;

     label098:
        z36 = $z35;

     label099:
        if z36 == 0 goto label110;

        $r2 = <org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.util.log.Logger LOG>;

        $r1 = newarray (java.lang.Object)[0];

        interfaceinvoke $r2.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Object[])>("SCEP.run() finally DISPATCHED", $r1);

        $z1 = virtualinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean undispatch()>();

        if $z1 != 0 goto label100;

        $z37 = 1;

        goto label101;

     label100:
        $z37 = 0;

     label101:
        z36 = $z37;

        goto label099;

     label102:
        $r12 := @caughtexception;

     label103:
        if z22 == 0 goto label109;

        $z5 = virtualinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean undispatch()>();

        if $z5 != 0 goto label104;

        $z38 = 1;

        goto label105;

     label104:
        $z38 = 0;

     label105:
        z39 = $z38;

     label106:
        if z39 == 0 goto label109;

        $r14 = <org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.util.log.Logger LOG>;

        $r13 = newarray (java.lang.Object)[0];

        interfaceinvoke $r14.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Object[])>("SCEP.run() finally DISPATCHED", $r13);

        $z6 = virtualinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean undispatch()>();

        if $z6 != 0 goto label107;

        $z40 = 1;

        goto label108;

     label107:
        $z40 = 0;

     label108:
        z39 = $z40;

        goto label106;

     label109:
        throw $r12;

     label110:
        return;

        catch java.lang.Throwable from label004 to label005 with label006;
        catch java.io.IOException from label007 to label008 with label009;
        catch java.lang.Throwable from label006 to label010 with label011;
        catch java.lang.Throwable from label011 to label012 with label011;
        catch java.nio.channels.ClosedChannelException from label002 to label003 with label016;
        catch java.lang.Throwable from label018 to label019 with label020;
        catch java.io.IOException from label021 to label022 with label023;
        catch java.lang.Throwable from label020 to label024 with label025;
        catch java.lang.Throwable from label025 to label026 with label025;
        catch org.eclipse.jetty.io.EofException from label002 to label003 with label030;
        catch java.io.IOException from label031 to label032 with label033;
        catch java.lang.Throwable from label035 to label036 with label037;
        catch java.io.IOException from label038 to label039 with label040;
        catch java.lang.Throwable from label037 to label041 with label042;
        catch java.lang.Throwable from label042 to label043 with label042;
        catch java.io.IOException from label002 to label003 with label047;
        catch java.io.IOException from label048 to label049 with label050;
        catch java.lang.Throwable from label052 to label053 with label054;
        catch java.io.IOException from label055 to label056 with label057;
        catch java.lang.Throwable from label054 to label058 with label059;
        catch java.lang.Throwable from label059 to label060 with label059;
        catch java.lang.Throwable from label002 to label003 with label064;
        catch java.io.IOException from label065 to label066 with label067;
        catch java.lang.Throwable from label069 to label070 with label071;
        catch java.io.IOException from label072 to label073 with label074;
        catch java.lang.Throwable from label071 to label075 with label076;
        catch java.lang.Throwable from label076 to label077 with label076;
        catch java.lang.Throwable from label016 to label017 with label081;
        catch java.lang.Throwable from label030 to label034 with label081;
        catch java.lang.Throwable from label047 to label051 with label081;
        catch java.lang.Throwable from label064 to label068 with label081;
        catch java.lang.Throwable from label083 to label084 with label085;
        catch java.io.IOException from label086 to label087 with label088;
        catch java.lang.Throwable from label085 to label089 with label090;
        catch java.lang.Throwable from label090 to label091 with label090;
        catch java.lang.Throwable from label081 to label082 with label081;
        catch java.lang.Throwable from label001 to label096 with label102;
        catch java.lang.Throwable from label102 to label103 with label102;
    }

    public void close() throws java.io.IOException
    {
        java.lang.Throwable $r1, $r4;
        java.nio.channels.SelectionKey r6;
        java.io.IOException $r2;
        org.eclipse.jetty.io.nio.SelectChannelEndPoint r0;
        org.eclipse.jetty.util.log.Logger $r3, $r5;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.io.nio.SelectChannelEndPoint;

        $z0 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean WORK_AROUND_JVM_BUG_6346658>;

        if $z0 == 0 goto label04;

     label01:
        r6 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: java.nio.channels.SelectionKey _key>;

        if r6 == null goto label02;

        virtualinvoke r6.<java.nio.channels.SelectionKey: void cancel()>();

     label02:
        goto label04;

     label03:
        $r4 := @caughtexception;

        $r5 = <org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r5.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r4);

     label04:
        specialinvoke r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: void close()>();

     label05:
        specialinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void updateKey()>();

        goto label10;

     label06:
        $r2 := @caughtexception;

        $r3 = <org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r3.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r2);

     label07:
        specialinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void updateKey()>();

        goto label10;

     label08:
        $r1 := @caughtexception;

     label09:
        specialinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void updateKey()>();

        throw $r1;

     label10:
        return;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.io.IOException from label04 to label05 with label06;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public java.lang.String toString()
    {
        java.net.SocketAddress $r18, $r20;
        java.lang.Integer $r16, $r21, $r28;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        org.eclipse.jetty.io.nio.SelectChannelEndPoint r0;
        org.eclipse.jetty.io.nio.AsyncConnection $r29;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        java.net.Socket $r17, $r19;
        java.lang.Object[] $r15;
        int $i0, $i1, $i2;
        java.lang.Boolean $r22, $r23, $r24, $r25, $r26, $r27;
        java.lang.String r14, $r30;
        java.nio.channels.SelectionKey r1;

        r0 := @this: org.eclipse.jetty.io.nio.SelectChannelEndPoint;

        r1 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: java.nio.channels.SelectionKey _key>;

        r14 = "";

        if r1 == null goto label3;

        $z0 = virtualinvoke r1.<java.nio.channels.SelectionKey: boolean isValid()>();

        if $z0 == 0 goto label2;

        $z1 = virtualinvoke r1.<java.nio.channels.SelectionKey: boolean isReadable()>();

        if $z1 == 0 goto label1;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("r");

        r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $z2 = virtualinvoke r1.<java.nio.channels.SelectionKey: boolean isWritable()>();

        if $z2 == 0 goto label4;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("w");

        r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label4;

     label2:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        r14 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label4;

     label3:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        r14 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        $r15 = newarray (java.lang.Object)[13];

        $i0 = virtualinvoke r0.<java.lang.Object: int hashCode()>();

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r15[0] = $r16;

        $r17 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: java.net.Socket _socket>;

        $r18 = virtualinvoke $r17.<java.net.Socket: java.net.SocketAddress getRemoteSocketAddress()>();

        $r15[1] = $r18;

        $r19 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: java.net.Socket _socket>;

        $r20 = virtualinvoke $r19.<java.net.Socket: java.net.SocketAddress getLocalSocketAddress()>();

        $r15[2] = $r20;

        $i1 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: int _state>;

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r15[3] = $r21;

        $z3 = virtualinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean isOpen()>();

        $r22 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3);

        $r15[4] = $r22;

        $z4 = virtualinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean isInputShutdown()>();

        $r23 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z4);

        $r15[5] = $r23;

        $z5 = virtualinvoke r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean isOutputShutdown()>();

        $r24 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z5);

        $r15[6] = $r24;

        $z6 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean _readBlocked>;

        $r25 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z6);

        $r15[7] = $r25;

        $z7 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean _writeBlocked>;

        $r26 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z7);

        $r15[8] = $r26;

        $z8 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: boolean _writable>;

        $r27 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z8);

        $r15[9] = $r27;

        $i2 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: int _interestOps>;

        $r28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r15[10] = $r28;

        $r15[11] = r14;

        $r29 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.io.nio.AsyncConnection _connection>;

        $r15[12] = $r29;

        $r30 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("SCEP@%x{l(%s)<->r(%s),s=%d,open=%b,ishut=%b,oshut=%b,rb=%b,wb=%b,w=%b,i=%d%s}-{%s}", $r15);

        return $r30;
    }

    public org.eclipse.jetty.io.nio.SelectorManager$SelectSet getSelectSet()
    {
        org.eclipse.jetty.io.nio.SelectorManager$SelectSet $r1;
        org.eclipse.jetty.io.nio.SelectChannelEndPoint r0;

        r0 := @this: org.eclipse.jetty.io.nio.SelectChannelEndPoint;

        $r1 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.io.nio.SelectorManager$SelectSet _selectSet>;

        return $r1;
    }

    public void setMaxIdleTime(int) throws java.io.IOException
    {
        int i0;
        org.eclipse.jetty.io.nio.SelectChannelEndPoint r0;

        r0 := @this: org.eclipse.jetty.io.nio.SelectChannelEndPoint;

        i0 := @parameter0: int;

        r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: int _maxIdleTime> = i0;

        return;
    }

    static void <clinit>()
    {
        org.eclipse.jetty.util.log.Logger $r0;

        <org.eclipse.jetty.io.nio.SelectChannelEndPoint: int STATE_ASYNC> = 2;

        <org.eclipse.jetty.io.nio.SelectChannelEndPoint: int STATE_DISPATCHED> = 1;

        <org.eclipse.jetty.io.nio.SelectChannelEndPoint: int STATE_UNDISPATCHED> = 0;

        <org.eclipse.jetty.io.nio.SelectChannelEndPoint: int STATE_NEEDS_DISPATCH> = -1;

        $r0 = staticinvoke <org.eclipse.jetty.util.log.Log: org.eclipse.jetty.util.log.Logger getLogger(java.lang.String)>("org.eclipse.jetty.io.nio");

        <org.eclipse.jetty.io.nio.SelectChannelEndPoint: org.eclipse.jetty.util.log.Logger LOG> = $r0;

        return;
    }
}
