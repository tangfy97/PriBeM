public abstract class groovyjarjarantlr.InputBuffer extends java.lang.Object
{
    protected int nMarkers;
    protected int markerOffset;
    protected int numToConsume;
    protected groovyjarjarantlr.CharQueue queue;

    public void <init>()
    {
        groovyjarjarantlr.CharQueue $r1;
        groovyjarjarantlr.InputBuffer r0;

        r0 := @this: groovyjarjarantlr.InputBuffer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<groovyjarjarantlr.InputBuffer: int nMarkers> = 0;

        r0.<groovyjarjarantlr.InputBuffer: int markerOffset> = 0;

        r0.<groovyjarjarantlr.InputBuffer: int numToConsume> = 0;

        $r1 = new groovyjarjarantlr.CharQueue;

        specialinvoke $r1.<groovyjarjarantlr.CharQueue: void <init>(int)>(1);

        r0.<groovyjarjarantlr.InputBuffer: groovyjarjarantlr.CharQueue queue> = $r1;

        return;
    }

    public void commit()
    {
        int $i0, $i1;
        groovyjarjarantlr.InputBuffer r0;

        r0 := @this: groovyjarjarantlr.InputBuffer;

        $i0 = r0.<groovyjarjarantlr.InputBuffer: int nMarkers>;

        $i1 = $i0 - 1;

        r0.<groovyjarjarantlr.InputBuffer: int nMarkers> = $i1;

        return;
    }

    public void consume()
    {
        int $i0, $i1;
        groovyjarjarantlr.InputBuffer r0;

        r0 := @this: groovyjarjarantlr.InputBuffer;

        $i0 = r0.<groovyjarjarantlr.InputBuffer: int numToConsume>;

        $i1 = $i0 + 1;

        r0.<groovyjarjarantlr.InputBuffer: int numToConsume> = $i1;

        return;
    }

    public abstract void fill(int) throws groovyjarjarantlr.CharStreamException;

    public java.lang.String getLAChars()
    {
        char $c1;
        groovyjarjarantlr.InputBuffer r1;
        java.lang.StringBuffer $r0;
        groovyjarjarantlr.CharQueue $r2, $r4;
        int $i0, i2;
        java.lang.String $r3;

        r1 := @this: groovyjarjarantlr.InputBuffer;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        i2 = r1.<groovyjarjarantlr.InputBuffer: int markerOffset>;

     label1:
        $r2 = r1.<groovyjarjarantlr.InputBuffer: groovyjarjarantlr.CharQueue queue>;

        $i0 = $r2.<groovyjarjarantlr.CharQueue: int nbrEntries>;

        if i2 >= $i0 goto label2;

        $r4 = r1.<groovyjarjarantlr.InputBuffer: groovyjarjarantlr.CharQueue queue>;

        $c1 = virtualinvoke $r4.<groovyjarjarantlr.CharQueue: char elementAt(int)>(i2);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

        i2 = i2 + 1;

        goto label1;

     label2:
        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    public java.lang.String getMarkedChars()
    {
        java.lang.StringBuffer $r0;
        int $i0, i2;
        groovyjarjarantlr.CharQueue $r3;
        char $c1;
        java.lang.String $r2;
        groovyjarjarantlr.InputBuffer r1;

        r1 := @this: groovyjarjarantlr.InputBuffer;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        i2 = 0;

     label1:
        $i0 = r1.<groovyjarjarantlr.InputBuffer: int markerOffset>;

        if i2 >= $i0 goto label2;

        $r3 = r1.<groovyjarjarantlr.InputBuffer: groovyjarjarantlr.CharQueue queue>;

        $c1 = virtualinvoke $r3.<groovyjarjarantlr.CharQueue: char elementAt(int)>(i2);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

        i2 = i2 + 1;

        goto label1;

     label2:
        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    public boolean isMarked()
    {
        int $i0;
        groovyjarjarantlr.InputBuffer r0;
        boolean $z0;

        r0 := @this: groovyjarjarantlr.InputBuffer;

        $i0 = r0.<groovyjarjarantlr.InputBuffer: int nMarkers>;

        if $i0 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public char LA(int) throws groovyjarjarantlr.CharStreamException
    {
        int i0, $i1, $i2, $i3;
        groovyjarjarantlr.CharQueue $r1;
        char $c4;
        groovyjarjarantlr.InputBuffer r0;

        r0 := @this: groovyjarjarantlr.InputBuffer;

        i0 := @parameter0: int;

        virtualinvoke r0.<groovyjarjarantlr.InputBuffer: void fill(int)>(i0);

        $r1 = r0.<groovyjarjarantlr.InputBuffer: groovyjarjarantlr.CharQueue queue>;

        $i1 = r0.<groovyjarjarantlr.InputBuffer: int markerOffset>;

        $i2 = $i1 + i0;

        $i3 = $i2 - 1;

        $c4 = virtualinvoke $r1.<groovyjarjarantlr.CharQueue: char elementAt(int)>($i3);

        return $c4;
    }

    public int mark()
    {
        int $i0, $i1, $i2;
        groovyjarjarantlr.InputBuffer r0;

        r0 := @this: groovyjarjarantlr.InputBuffer;

        virtualinvoke r0.<groovyjarjarantlr.InputBuffer: void syncConsume()>();

        $i0 = r0.<groovyjarjarantlr.InputBuffer: int nMarkers>;

        $i1 = $i0 + 1;

        r0.<groovyjarjarantlr.InputBuffer: int nMarkers> = $i1;

        $i2 = r0.<groovyjarjarantlr.InputBuffer: int markerOffset>;

        return $i2;
    }

    public void rewind(int)
    {
        int i0, $i1, $i2;
        groovyjarjarantlr.InputBuffer r0;

        r0 := @this: groovyjarjarantlr.InputBuffer;

        i0 := @parameter0: int;

        virtualinvoke r0.<groovyjarjarantlr.InputBuffer: void syncConsume()>();

        r0.<groovyjarjarantlr.InputBuffer: int markerOffset> = i0;

        $i1 = r0.<groovyjarjarantlr.InputBuffer: int nMarkers>;

        $i2 = $i1 - 1;

        r0.<groovyjarjarantlr.InputBuffer: int nMarkers> = $i2;

        return;
    }

    public void reset()
    {
        groovyjarjarantlr.CharQueue $r1;
        groovyjarjarantlr.InputBuffer r0;

        r0 := @this: groovyjarjarantlr.InputBuffer;

        r0.<groovyjarjarantlr.InputBuffer: int nMarkers> = 0;

        r0.<groovyjarjarantlr.InputBuffer: int markerOffset> = 0;

        r0.<groovyjarjarantlr.InputBuffer: int numToConsume> = 0;

        $r1 = r0.<groovyjarjarantlr.InputBuffer: groovyjarjarantlr.CharQueue queue>;

        virtualinvoke $r1.<groovyjarjarantlr.CharQueue: void reset()>();

        return;
    }

    protected void syncConsume()
    {
        groovyjarjarantlr.InputBuffer r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        groovyjarjarantlr.CharQueue $r1;

        r0 := @this: groovyjarjarantlr.InputBuffer;

     label1:
        $i0 = r0.<groovyjarjarantlr.InputBuffer: int numToConsume>;

        if $i0 <= 0 goto label4;

        $i1 = r0.<groovyjarjarantlr.InputBuffer: int nMarkers>;

        if $i1 <= 0 goto label2;

        $i4 = r0.<groovyjarjarantlr.InputBuffer: int markerOffset>;

        $i5 = $i4 + 1;

        r0.<groovyjarjarantlr.InputBuffer: int markerOffset> = $i5;

        goto label3;

     label2:
        $r1 = r0.<groovyjarjarantlr.InputBuffer: groovyjarjarantlr.CharQueue queue>;

        virtualinvoke $r1.<groovyjarjarantlr.CharQueue: void removeFirst()>();

     label3:
        $i2 = r0.<groovyjarjarantlr.InputBuffer: int numToConsume>;

        $i3 = $i2 - 1;

        r0.<groovyjarjarantlr.InputBuffer: int numToConsume> = $i3;

        goto label1;

     label4:
        return;
    }
}
