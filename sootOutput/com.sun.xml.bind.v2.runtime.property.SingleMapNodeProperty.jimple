final class com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty extends com.sun.xml.bind.v2.runtime.property.PropertyImpl
{
    private final com.sun.xml.bind.v2.runtime.reflect.Accessor acc;
    private final com.sun.xml.bind.v2.runtime.Name tagName;
    private final com.sun.xml.bind.v2.runtime.Name entryTag;
    private final com.sun.xml.bind.v2.runtime.Name keyTag;
    private final com.sun.xml.bind.v2.runtime.Name valueTag;
    private final boolean nillable;
    private com.sun.xml.bind.v2.runtime.JaxBeanInfo keyBeanInfo;
    private com.sun.xml.bind.v2.runtime.JaxBeanInfo valueBeanInfo;
    private final java.lang.Class mapImplClass;
    private static final java.lang.Class[] knownImplClasses;
    private com.sun.xml.bind.v2.runtime.unmarshaller.Loader keyLoader;
    private com.sun.xml.bind.v2.runtime.unmarshaller.Loader valueLoader;
    private final com.sun.xml.bind.v2.runtime.unmarshaller.Loader itemsLoader;
    private final com.sun.xml.bind.v2.runtime.unmarshaller.Loader entryLoader;
    private static final com.sun.xml.bind.v2.runtime.unmarshaller.Receiver keyReceiver;
    private static final com.sun.xml.bind.v2.runtime.unmarshaller.Receiver valueReceiver;

    public void <init>(com.sun.xml.bind.v2.runtime.JAXBContextImpl, com.sun.xml.bind.v2.model.runtime.RuntimeMapPropertyInfo)
    {
        com.sun.xml.bind.v2.runtime.Name $r9, $r11, $r13, $r15;
        com.sun.xml.bind.v2.runtime.NameBuilder $r7, $r10, $r12, $r14;
        com.sun.xml.bind.v2.model.runtime.RuntimeMapPropertyInfo r2;
        com.sun.xml.bind.v2.model.nav.ReflectionNavigator $r20;
        com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty$1 $r3;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r1;
        com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty$2 $r4;
        boolean $z0;
        com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty r0;
        java.lang.Class[] $r23;
        com.sun.xml.bind.v2.runtime.reflect.Accessor $r5, $r6;
        com.sun.xml.bind.v2.model.runtime.RuntimeNonElement $r16, $r18;
        java.lang.reflect.Type $r21;
        java.lang.Class $r22, $r24;
        javax.xml.namespace.QName $r8;
        com.sun.xml.bind.v2.runtime.JaxBeanInfo $r17, $r19;

        r0 := @this: com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty;

        r1 := @parameter0: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        r2 := @parameter1: com.sun.xml.bind.v2.model.runtime.RuntimeMapPropertyInfo;

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.property.PropertyImpl: void <init>(com.sun.xml.bind.v2.runtime.JAXBContextImpl,com.sun.xml.bind.v2.model.runtime.RuntimePropertyInfo)>(r1, r2);

        $r3 = new com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty$1;

        specialinvoke $r3.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty$1: void <init>(com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty,boolean)>(r0, 0);

        r0.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty: com.sun.xml.bind.v2.runtime.unmarshaller.Loader itemsLoader> = $r3;

        $r4 = new com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty$2;

        specialinvoke $r4.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty$2: void <init>(com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty,boolean)>(r0, 0);

        r0.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty: com.sun.xml.bind.v2.runtime.unmarshaller.Loader entryLoader> = $r4;

        $r5 = interfaceinvoke r2.<com.sun.xml.bind.v2.model.runtime.RuntimeMapPropertyInfo: com.sun.xml.bind.v2.runtime.reflect.Accessor getAccessor()>();

        $r6 = virtualinvoke $r5.<com.sun.xml.bind.v2.runtime.reflect.Accessor: com.sun.xml.bind.v2.runtime.reflect.Accessor optimize(com.sun.xml.bind.v2.runtime.JAXBContextImpl)>(r1);

        r0.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty: com.sun.xml.bind.v2.runtime.reflect.Accessor acc> = $r6;

        $r7 = r1.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.runtime.NameBuilder nameBuilder>;

        $r8 = interfaceinvoke r2.<com.sun.xml.bind.v2.model.runtime.RuntimeMapPropertyInfo: javax.xml.namespace.QName getXmlName()>();

        $r9 = virtualinvoke $r7.<com.sun.xml.bind.v2.runtime.NameBuilder: com.sun.xml.bind.v2.runtime.Name createElementName(javax.xml.namespace.QName)>($r8);

        r0.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty: com.sun.xml.bind.v2.runtime.Name tagName> = $r9;

        $r10 = r1.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.runtime.NameBuilder nameBuilder>;

        $r11 = virtualinvoke $r10.<com.sun.xml.bind.v2.runtime.NameBuilder: com.sun.xml.bind.v2.runtime.Name createElementName(java.lang.String,java.lang.String)>("", "entry");

        r0.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty: com.sun.xml.bind.v2.runtime.Name entryTag> = $r11;

        $r12 = r1.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.runtime.NameBuilder nameBuilder>;

        $r13 = virtualinvoke $r12.<com.sun.xml.bind.v2.runtime.NameBuilder: com.sun.xml.bind.v2.runtime.Name createElementName(java.lang.String,java.lang.String)>("", "key");

        r0.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty: com.sun.xml.bind.v2.runtime.Name keyTag> = $r13;

        $r14 = r1.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.runtime.NameBuilder nameBuilder>;

        $r15 = virtualinvoke $r14.<com.sun.xml.bind.v2.runtime.NameBuilder: com.sun.xml.bind.v2.runtime.Name createElementName(java.lang.String,java.lang.String)>("", "value");

        r0.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty: com.sun.xml.bind.v2.runtime.Name valueTag> = $r15;

        $z0 = interfaceinvoke r2.<com.sun.xml.bind.v2.model.runtime.RuntimeMapPropertyInfo: boolean isCollectionNillable()>();

        r0.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty: boolean nillable> = $z0;

        $r16 = interfaceinvoke r2.<com.sun.xml.bind.v2.model.runtime.RuntimeMapPropertyInfo: com.sun.xml.bind.v2.model.runtime.RuntimeNonElement getKeyType()>();

        $r17 = virtualinvoke r1.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.runtime.JaxBeanInfo getOrCreate(com.sun.xml.bind.v2.model.runtime.RuntimeTypeInfo)>($r16);

        r0.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty: com.sun.xml.bind.v2.runtime.JaxBeanInfo keyBeanInfo> = $r17;

        $r18 = interfaceinvoke r2.<com.sun.xml.bind.v2.model.runtime.RuntimeMapPropertyInfo: com.sun.xml.bind.v2.model.runtime.RuntimeNonElement getValueType()>();

        $r19 = virtualinvoke r1.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.runtime.JaxBeanInfo getOrCreate(com.sun.xml.bind.v2.model.runtime.RuntimeTypeInfo)>($r18);

        r0.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty: com.sun.xml.bind.v2.runtime.JaxBeanInfo valueBeanInfo> = $r19;

        $r20 = <com.sun.xml.bind.v2.model.nav.ReflectionNavigator: com.sun.xml.bind.v2.model.nav.ReflectionNavigator REFLECTION>;

        $r21 = interfaceinvoke r2.<com.sun.xml.bind.v2.model.runtime.RuntimeMapPropertyInfo: java.lang.reflect.Type getRawType()>();

        $r22 = virtualinvoke $r20.<com.sun.xml.bind.v2.model.nav.ReflectionNavigator: java.lang.Class erasure(java.lang.reflect.Type)>($r21);

        $r23 = <com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty: java.lang.Class[] knownImplClasses>;

        $r24 = staticinvoke <com.sun.xml.bind.v2.ClassFactory: java.lang.Class inferImplClass(java.lang.Class,java.lang.Class[])>($r22, $r23);

        r0.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty: java.lang.Class mapImplClass> = $r24;

        return;
    }

    public void reset(java.lang.Object) throws com.sun.xml.bind.api.AccessorException
    {
        java.lang.Object r1;
        com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty r0;
        com.sun.xml.bind.v2.runtime.reflect.Accessor $r2;

        r0 := @this: com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty: com.sun.xml.bind.v2.runtime.reflect.Accessor acc>;

        virtualinvoke $r2.<com.sun.xml.bind.v2.runtime.reflect.Accessor: void set(java.lang.Object,java.lang.Object)>(r1, null);

        return;
    }

    public java.lang.String getIdValue(java.lang.Object)
    {
        java.lang.Object r1;
        com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty;

        r1 := @parameter0: java.lang.Object;

        return null;
    }

    public com.sun.xml.bind.v2.model.core.PropertyKind getKind()
    {
        com.sun.xml.bind.v2.model.core.PropertyKind $r0;
        com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty r1;

        r1 := @this: com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty;

        $r0 = <com.sun.xml.bind.v2.model.core.PropertyKind: com.sun.xml.bind.v2.model.core.PropertyKind MAP>;

        return $r0;
    }

    public void buildChildElementUnmarshallers(com.sun.xml.bind.v2.runtime.property.UnmarshallerChain, com.sun.xml.bind.v2.util.QNameMap)
    {
        com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty r0;
        com.sun.xml.bind.v2.runtime.Name $r11;
        com.sun.xml.bind.v2.runtime.unmarshaller.ChildLoader $r9;
        com.sun.xml.bind.v2.runtime.property.UnmarshallerChain r1;
        com.sun.xml.bind.v2.runtime.unmarshaller.Loader $r4, $r7, $r10;
        com.sun.xml.bind.v2.util.QNameMap r8;
        com.sun.xml.bind.v2.runtime.JaxBeanInfo $r3, $r6;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl $r2, $r5;

        r0 := @this: com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty;

        r1 := @parameter0: com.sun.xml.bind.v2.runtime.property.UnmarshallerChain;

        r8 := @parameter1: com.sun.xml.bind.v2.util.QNameMap;

        $r3 = r0.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty: com.sun.xml.bind.v2.runtime.JaxBeanInfo keyBeanInfo>;

        $r2 = r1.<com.sun.xml.bind.v2.runtime.property.UnmarshallerChain: com.sun.xml.bind.v2.runtime.JAXBContextImpl context>;

        $r4 = virtualinvoke $r3.<com.sun.xml.bind.v2.runtime.JaxBeanInfo: com.sun.xml.bind.v2.runtime.unmarshaller.Loader getLoader(com.sun.xml.bind.v2.runtime.JAXBContextImpl,boolean)>($r2, 1);

        r0.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty: com.sun.xml.bind.v2.runtime.unmarshaller.Loader keyLoader> = $r4;

        $r6 = r0.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty: com.sun.xml.bind.v2.runtime.JaxBeanInfo valueBeanInfo>;

        $r5 = r1.<com.sun.xml.bind.v2.runtime.property.UnmarshallerChain: com.sun.xml.bind.v2.runtime.JAXBContextImpl context>;

        $r7 = virtualinvoke $r6.<com.sun.xml.bind.v2.runtime.JaxBeanInfo: com.sun.xml.bind.v2.runtime.unmarshaller.Loader getLoader(com.sun.xml.bind.v2.runtime.JAXBContextImpl,boolean)>($r5, 1);

        r0.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty: com.sun.xml.bind.v2.runtime.unmarshaller.Loader valueLoader> = $r7;

        $r11 = r0.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty: com.sun.xml.bind.v2.runtime.Name tagName>;

        $r9 = new com.sun.xml.bind.v2.runtime.unmarshaller.ChildLoader;

        $r10 = r0.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty: com.sun.xml.bind.v2.runtime.unmarshaller.Loader itemsLoader>;

        specialinvoke $r9.<com.sun.xml.bind.v2.runtime.unmarshaller.ChildLoader: void <init>(com.sun.xml.bind.v2.runtime.unmarshaller.Loader,com.sun.xml.bind.v2.runtime.unmarshaller.Receiver)>($r10, null);

        virtualinvoke r8.<com.sun.xml.bind.v2.util.QNameMap: void put(com.sun.xml.bind.v2.runtime.Name,java.lang.Object)>($r11, $r9);

        return;
    }

    public void serializeBody(java.lang.Object, com.sun.xml.bind.v2.runtime.XMLSerializer, java.lang.Object) throws org.xml.sax.SAXException, com.sun.xml.bind.api.AccessorException, java.io.IOException, javax.xml.stream.XMLStreamException
    {
        com.sun.xml.bind.v2.runtime.Name $r6, $r7, $r12, $r15, $r18;
        java.util.Map r4;
        java.lang.String $r17, $r20;
        boolean $z0, $z1;
        java.util.Map$Entry r11;
        com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty r0;
        java.util.Iterator $r9;
        java.util.Set $r8;
        com.sun.xml.bind.v2.runtime.reflect.Accessor $r2;
        com.sun.xml.bind.v2.runtime.XMLSerializer r5;
        java.lang.Object r1, $r3, $r10, $r13, $r14, r21;
        com.sun.xml.bind.v2.runtime.JaxBeanInfo $r16, $r19;

        r0 := @this: com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty;

        r1 := @parameter0: java.lang.Object;

        r5 := @parameter1: com.sun.xml.bind.v2.runtime.XMLSerializer;

        r21 := @parameter2: java.lang.Object;

        $r2 = r0.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty: com.sun.xml.bind.v2.runtime.reflect.Accessor acc>;

        $r3 = virtualinvoke $r2.<com.sun.xml.bind.v2.runtime.reflect.Accessor: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.util.Map) $r3;

        if r4 == null goto label5;

        $r7 = r0.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty: com.sun.xml.bind.v2.runtime.Name tagName>;

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty: void bareStartTag(com.sun.xml.bind.v2.runtime.XMLSerializer,com.sun.xml.bind.v2.runtime.Name,java.lang.Object)>(r5, $r7, r4);

        $r8 = interfaceinvoke r4.<java.util.Map: java.util.Set entrySet()>();

        $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r11 = (java.util.Map$Entry) $r10;

        $r12 = r0.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty: com.sun.xml.bind.v2.runtime.Name entryTag>;

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty: void bareStartTag(com.sun.xml.bind.v2.runtime.XMLSerializer,com.sun.xml.bind.v2.runtime.Name,java.lang.Object)>(r5, $r12, null);

        $r13 = interfaceinvoke r11.<java.util.Map$Entry: java.lang.Object getKey()>();

        if $r13 == null goto label2;

        $r18 = r0.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty: com.sun.xml.bind.v2.runtime.Name keyTag>;

        virtualinvoke r5.<com.sun.xml.bind.v2.runtime.XMLSerializer: void startElement(com.sun.xml.bind.v2.runtime.Name,java.lang.Object)>($r18, $r13);

        $r20 = r0.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty: java.lang.String fieldName>;

        $r19 = r0.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty: com.sun.xml.bind.v2.runtime.JaxBeanInfo keyBeanInfo>;

        virtualinvoke r5.<com.sun.xml.bind.v2.runtime.XMLSerializer: void childAsXsiType(java.lang.Object,java.lang.String,com.sun.xml.bind.v2.runtime.JaxBeanInfo,boolean)>($r13, $r20, $r19, 0);

        virtualinvoke r5.<com.sun.xml.bind.v2.runtime.XMLSerializer: void endElement()>();

     label2:
        $r14 = interfaceinvoke r11.<java.util.Map$Entry: java.lang.Object getValue()>();

        if $r14 == null goto label3;

        $r15 = r0.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty: com.sun.xml.bind.v2.runtime.Name valueTag>;

        virtualinvoke r5.<com.sun.xml.bind.v2.runtime.XMLSerializer: void startElement(com.sun.xml.bind.v2.runtime.Name,java.lang.Object)>($r15, $r14);

        $r17 = r0.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty: java.lang.String fieldName>;

        $r16 = r0.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty: com.sun.xml.bind.v2.runtime.JaxBeanInfo valueBeanInfo>;

        virtualinvoke r5.<com.sun.xml.bind.v2.runtime.XMLSerializer: void childAsXsiType(java.lang.Object,java.lang.String,com.sun.xml.bind.v2.runtime.JaxBeanInfo,boolean)>($r14, $r17, $r16, 0);

        virtualinvoke r5.<com.sun.xml.bind.v2.runtime.XMLSerializer: void endElement()>();

     label3:
        virtualinvoke r5.<com.sun.xml.bind.v2.runtime.XMLSerializer: void endElement()>();

        goto label1;

     label4:
        virtualinvoke r5.<com.sun.xml.bind.v2.runtime.XMLSerializer: void endElement()>();

        goto label6;

     label5:
        $z0 = r0.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty: boolean nillable>;

        if $z0 == 0 goto label6;

        $r6 = r0.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty: com.sun.xml.bind.v2.runtime.Name tagName>;

        virtualinvoke r5.<com.sun.xml.bind.v2.runtime.XMLSerializer: void startElement(com.sun.xml.bind.v2.runtime.Name,java.lang.Object)>($r6, null);

        virtualinvoke r5.<com.sun.xml.bind.v2.runtime.XMLSerializer: void writeXsiNilTrue()>();

        virtualinvoke r5.<com.sun.xml.bind.v2.runtime.XMLSerializer: void endElement()>();

     label6:
        return;
    }

    private void bareStartTag(com.sun.xml.bind.v2.runtime.XMLSerializer, com.sun.xml.bind.v2.runtime.Name, java.lang.Object) throws java.io.IOException, javax.xml.stream.XMLStreamException, org.xml.sax.SAXException
    {
        com.sun.xml.bind.v2.runtime.XMLSerializer r0;
        com.sun.xml.bind.v2.runtime.Name r1;
        com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty r3;
        java.lang.Object r2;

        r3 := @this: com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty;

        r0 := @parameter0: com.sun.xml.bind.v2.runtime.XMLSerializer;

        r1 := @parameter1: com.sun.xml.bind.v2.runtime.Name;

        r2 := @parameter2: java.lang.Object;

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: void startElement(com.sun.xml.bind.v2.runtime.Name,java.lang.Object)>(r1, r2);

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: void endNamespaceDecls(java.lang.Object)>(r2);

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: void endAttributes()>();

        return;
    }

    public com.sun.xml.bind.v2.runtime.reflect.Accessor getElementPropertyAccessor(java.lang.String, java.lang.String)
    {
        com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty r0;
        com.sun.xml.bind.v2.runtime.Name $r3;
        com.sun.xml.bind.v2.runtime.reflect.Accessor $r4;
        java.lang.String r1, r2;
        boolean $z0;

        r0 := @this: com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty: com.sun.xml.bind.v2.runtime.Name tagName>;

        $z0 = virtualinvoke $r3.<com.sun.xml.bind.v2.runtime.Name: boolean equals(java.lang.String,java.lang.String)>(r1, r2);

        if $z0 == 0 goto label1;

        $r4 = r0.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty: com.sun.xml.bind.v2.runtime.reflect.Accessor acc>;

        return $r4;

     label1:
        return null;
    }

    static com.sun.xml.bind.v2.runtime.reflect.Accessor access$000(com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty)
    {
        com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty r0;
        com.sun.xml.bind.v2.runtime.reflect.Accessor $r1;

        r0 := @parameter0: com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty: com.sun.xml.bind.v2.runtime.reflect.Accessor acc>;

        return $r1;
    }

    static java.lang.Class access$100(com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty)
    {
        java.lang.Class $r1;
        com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty r0;

        r0 := @parameter0: com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty: java.lang.Class mapImplClass>;

        return $r1;
    }

    static com.sun.xml.bind.v2.runtime.Name access$200(com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty)
    {
        com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty r0;
        com.sun.xml.bind.v2.runtime.Name $r1;

        r0 := @parameter0: com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty: com.sun.xml.bind.v2.runtime.Name entryTag>;

        return $r1;
    }

    static com.sun.xml.bind.v2.runtime.unmarshaller.Loader access$300(com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty)
    {
        com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty r0;
        com.sun.xml.bind.v2.runtime.unmarshaller.Loader $r1;

        r0 := @parameter0: com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty: com.sun.xml.bind.v2.runtime.unmarshaller.Loader entryLoader>;

        return $r1;
    }

    static com.sun.xml.bind.v2.runtime.Name access$400(com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty)
    {
        com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty r0;
        com.sun.xml.bind.v2.runtime.Name $r1;

        r0 := @parameter0: com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty: com.sun.xml.bind.v2.runtime.Name keyTag>;

        return $r1;
    }

    static com.sun.xml.bind.v2.runtime.unmarshaller.Loader access$500(com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty)
    {
        com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty r0;
        com.sun.xml.bind.v2.runtime.unmarshaller.Loader $r1;

        r0 := @parameter0: com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty: com.sun.xml.bind.v2.runtime.unmarshaller.Loader keyLoader>;

        return $r1;
    }

    static com.sun.xml.bind.v2.runtime.unmarshaller.Receiver access$600()
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.Receiver $r0;

        $r0 = <com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty: com.sun.xml.bind.v2.runtime.unmarshaller.Receiver keyReceiver>;

        return $r0;
    }

    static com.sun.xml.bind.v2.runtime.Name access$700(com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty)
    {
        com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty r0;
        com.sun.xml.bind.v2.runtime.Name $r1;

        r0 := @parameter0: com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty: com.sun.xml.bind.v2.runtime.Name valueTag>;

        return $r1;
    }

    static com.sun.xml.bind.v2.runtime.unmarshaller.Loader access$800(com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty)
    {
        com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty r0;
        com.sun.xml.bind.v2.runtime.unmarshaller.Loader $r1;

        r0 := @parameter0: com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty: com.sun.xml.bind.v2.runtime.unmarshaller.Loader valueLoader>;

        return $r1;
    }

    static com.sun.xml.bind.v2.runtime.unmarshaller.Receiver access$900()
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.Receiver $r0;

        $r0 = <com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty: com.sun.xml.bind.v2.runtime.unmarshaller.Receiver valueReceiver>;

        return $r0;
    }

    static void <clinit>()
    {
        java.lang.Class[] $r0;
        com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty$ReceiverImpl $r1, $r2;

        $r0 = newarray (java.lang.Class)[3];

        $r0[0] = class "Ljava/util/HashMap;";

        $r0[1] = class "Ljava/util/TreeMap;";

        $r0[2] = class "Ljava/util/LinkedHashMap;";

        <com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty: java.lang.Class[] knownImplClasses> = $r0;

        $r1 = new com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty$ReceiverImpl;

        specialinvoke $r1.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty$ReceiverImpl: void <init>(int)>(0);

        <com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty: com.sun.xml.bind.v2.runtime.unmarshaller.Receiver keyReceiver> = $r1;

        $r2 = new com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty$ReceiverImpl;

        specialinvoke $r2.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty$ReceiverImpl: void <init>(int)>(1);

        <com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty: com.sun.xml.bind.v2.runtime.unmarshaller.Receiver valueReceiver> = $r2;

        return;
    }
}
