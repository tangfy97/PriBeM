public abstract class org.wiztools.restclient.bean.AbstractReqEntitySimpleBean extends java.lang.Object implements org.wiztools.restclient.bean.ReqEntitySimple
{
    protected final org.wiztools.restclient.bean.ContentType contentType;

    public void <init>(org.wiztools.restclient.bean.ContentType)
    {
        org.wiztools.restclient.bean.AbstractReqEntitySimpleBean r0;
        org.wiztools.restclient.bean.ContentType r1;

        r0 := @this: org.wiztools.restclient.bean.AbstractReqEntitySimpleBean;

        r1 := @parameter0: org.wiztools.restclient.bean.ContentType;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.wiztools.restclient.bean.AbstractReqEntitySimpleBean: org.wiztools.restclient.bean.ContentType contentType> = r1;

        return;
    }

    public org.wiztools.restclient.bean.ContentType getContentType()
    {
        org.wiztools.restclient.bean.AbstractReqEntitySimpleBean r0;
        org.wiztools.restclient.bean.ContentType $r1;

        r0 := @this: org.wiztools.restclient.bean.AbstractReqEntitySimpleBean;

        $r1 = r0.<org.wiztools.restclient.bean.AbstractReqEntitySimpleBean: org.wiztools.restclient.bean.ContentType contentType>;

        return $r1;
    }

    public java.lang.String getContentTypeCharsetFormatted()
    {
        org.wiztools.restclient.bean.AbstractReqEntitySimpleBean r0;
        org.wiztools.restclient.bean.ContentType $r1;
        java.lang.String $r2;

        r0 := @this: org.wiztools.restclient.bean.AbstractReqEntitySimpleBean;

        $r1 = r0.<org.wiztools.restclient.bean.AbstractReqEntitySimpleBean: org.wiztools.restclient.bean.ContentType contentType>;

        $r2 = staticinvoke <org.wiztools.restclient.util.HttpUtil: java.lang.String getFormattedContentType(org.wiztools.restclient.bean.ContentType)>($r1);

        return $r2;
    }

    public java.lang.Object clone()
    {
        org.wiztools.restclient.bean.AbstractReqEntitySimpleBean r0;

        r0 := @this: org.wiztools.restclient.bean.AbstractReqEntitySimpleBean;

        return null;
    }
}
