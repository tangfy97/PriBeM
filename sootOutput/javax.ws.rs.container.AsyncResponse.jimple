public interface  javax.ws.rs.container.AsyncResponse extends java.lang.Object
{
    public static final long NO_TIMEOUT;

    public abstract void resume(java.lang.Object) throws java.lang.IllegalStateException;

    public abstract void resume(java.lang.Throwable) throws java.lang.IllegalStateException;

    public abstract void cancel();

    public abstract void cancel(int);

    public abstract void cancel(java.util.Date);

    public abstract boolean isSuspended();

    public abstract boolean isCancelled();

    public abstract boolean isDone();

    public abstract void setTimeout(long, java.util.concurrent.TimeUnit) throws java.lang.IllegalStateException;

    public abstract void setTimeoutHandler(javax.ws.rs.container.TimeoutHandler);

    public abstract boolean register(java.lang.Class) throws java.lang.NullPointerException;

    public abstract transient boolean[] register(java.lang.Class, java.lang.Class[]) throws java.lang.NullPointerException;

    public abstract boolean register(java.lang.Object) throws java.lang.NullPointerException;

    public abstract transient boolean[] register(java.lang.Object, java.lang.Object[]) throws java.lang.NullPointerException;

    public static void <clinit>()
    {
        <javax.ws.rs.container.AsyncResponse: long NO_TIMEOUT> = 0L;

        return;
    }
}
