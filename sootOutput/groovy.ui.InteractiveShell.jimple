public class groovy.ui.InteractiveShell extends java.lang.Object implements java.lang.Runnable
{
    private static final java.lang.String NEW_LINE;
    private static final org.codehaus.groovy.tools.shell.util.MessageSource MESSAGES;
    private final groovy.lang.GroovyShell shell;
    private final java.io.InputStream in;
    private final java.io.PrintStream out;
    private final java.io.PrintStream err;
    private final jline.ConsoleReader reader;
    private java.lang.Object lastResult;
    private groovy.lang.Closure beforeExecution;
    private groovy.lang.Closure afterExecution;
    private java.lang.StringBuffer accepted;
    private java.lang.String pending;
    private int line;
    private boolean stale;
    private org.codehaus.groovy.control.SourceUnit parser;
    private java.lang.Exception error;
    private static final int COMMAND_ID_EXIT;
    private static final int COMMAND_ID_HELP;
    private static final int COMMAND_ID_DISCARD;
    private static final int COMMAND_ID_DISPLAY;
    private static final int COMMAND_ID_EXPLAIN;
    private static final int COMMAND_ID_EXECUTE;
    private static final int COMMAND_ID_BINDING;
    private static final int COMMAND_ID_DISCARD_LOADED_CLASSES;
    private static final int COMMAND_ID_INSPECT;
    private static final int LAST_COMMAND_ID;
    private static final java.lang.String[] COMMANDS;
    private static final java.util.Map COMMAND_MAPPINGS;
    private static final java.util.Map COMMAND_HELP;
    static java.lang.Class class$groovy$ui$InteractiveShell;
    static final boolean $assertionsDisabled;
    static java.lang.Class class$java$lang$Object;

    public static void main(java.lang.String[])
    {
        java.io.PrintStream $r4;
        java.lang.String[] r0;
        java.lang.Exception $r2;
        java.lang.StringBuffer $r3, $r5, $r6;
        groovy.ui.InteractiveShell $r1;
        java.lang.String $r7;

        r0 := @parameter0: java.lang.String[];

     label1:
        staticinvoke <groovy.ui.InteractiveShell: void processCommandLineArguments(java.lang.String[])>(r0);

        $r1 = new groovy.ui.InteractiveShell;

        specialinvoke $r1.<groovy.ui.InteractiveShell: void <init>()>();

        virtualinvoke $r1.<groovy.ui.InteractiveShell: void run()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r4 = <java.lang.System: java.io.PrintStream err>;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("FATAL: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r7);

        virtualinvoke $r2.<java.lang.Exception: void printStackTrace()>();

        staticinvoke <java.lang.System: void exit(int)>(1);

     label4:
        staticinvoke <java.lang.System: void exit(int)>(0);

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private static void processCommandLineArguments(java.lang.String[]) throws java.lang.Exception
    {
        java.lang.Object[] $r13, $r18;
        org.apache.commons.cli.Options $r25;
        java.lang.String[] r8, $r10;
        java.lang.AssertionError $r24;
        org.codehaus.groovy.tools.shell.util.MessageSource $r1, $r4, $r14, $r20;
        org.apache.commons.cli.HelpFormatter $r28;
        int $i0;
        org.apache.commons.cli.CommandLine $r9;
        java.lang.String $r2, $r5, $r15, $r16, $r21, $r22;
        org.apache.commons.cli.PosixParser $r26;
        org.apache.commons.cli.Option $r3, $r6;
        boolean $z0, $z1, $z2;
        java.io.PrintStream $r12, $r19;
        java.io.PrintWriter $r27;
        org.apache.commons.cli.CommandLineParser $r29;

        r8 := @parameter0: java.lang.String[];

        $z0 = <groovy.ui.InteractiveShell: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if r8 != null goto label1;

        $r24 = new java.lang.AssertionError;

        specialinvoke $r24.<java.lang.AssertionError: void <init>()>();

        throw $r24;

     label1:
        $r25 = new org.apache.commons.cli.Options;

        specialinvoke $r25.<org.apache.commons.cli.Options: void <init>()>();

        staticinvoke <org.apache.commons.cli.OptionBuilder: org.apache.commons.cli.OptionBuilder withLongOpt(java.lang.String)>("help");

        $r1 = <groovy.ui.InteractiveShell: org.codehaus.groovy.tools.shell.util.MessageSource MESSAGES>;

        $r2 = virtualinvoke $r1.<org.codehaus.groovy.tools.shell.util.MessageSource: java.lang.String getMessage(java.lang.String)>("cli.option.help.description");

        staticinvoke <org.apache.commons.cli.OptionBuilder: org.apache.commons.cli.OptionBuilder withDescription(java.lang.String)>($r2);

        $r3 = staticinvoke <org.apache.commons.cli.OptionBuilder: org.apache.commons.cli.Option create(char)>(104);

        virtualinvoke $r25.<org.apache.commons.cli.Options: org.apache.commons.cli.Options addOption(org.apache.commons.cli.Option)>($r3);

        staticinvoke <org.apache.commons.cli.OptionBuilder: org.apache.commons.cli.OptionBuilder withLongOpt(java.lang.String)>("version");

        $r4 = <groovy.ui.InteractiveShell: org.codehaus.groovy.tools.shell.util.MessageSource MESSAGES>;

        $r5 = virtualinvoke $r4.<org.codehaus.groovy.tools.shell.util.MessageSource: java.lang.String getMessage(java.lang.String)>("cli.option.version.description");

        staticinvoke <org.apache.commons.cli.OptionBuilder: org.apache.commons.cli.OptionBuilder withDescription(java.lang.String)>($r5);

        $r6 = staticinvoke <org.apache.commons.cli.OptionBuilder: org.apache.commons.cli.Option create(char)>(86);

        virtualinvoke $r25.<org.apache.commons.cli.Options: org.apache.commons.cli.Options addOption(org.apache.commons.cli.Option)>($r6);

        $r26 = new org.apache.commons.cli.PosixParser;

        specialinvoke $r26.<org.apache.commons.cli.PosixParser: void <init>()>();

        $r29 = (org.apache.commons.cli.CommandLineParser) $r26;

        $r9 = interfaceinvoke $r29.<org.apache.commons.cli.CommandLineParser: org.apache.commons.cli.CommandLine parse(org.apache.commons.cli.Options,java.lang.String[],boolean)>($r25, r8, 1);

        $r10 = virtualinvoke $r9.<org.apache.commons.cli.CommandLine: java.lang.String[] getArgs()>();

        $i0 = lengthof $r10;

        if $i0 == 0 goto label2;

        $r19 = <java.lang.System: java.io.PrintStream err>;

        $r20 = <groovy.ui.InteractiveShell: org.codehaus.groovy.tools.shell.util.MessageSource MESSAGES>;

        $r18 = newarray (java.lang.Object)[1];

        $r21 = staticinvoke <org.codehaus.groovy.runtime.DefaultGroovyMethods: java.lang.String join(java.lang.Object[],java.lang.String)>($r10, " ");

        $r18[0] = $r21;

        $r22 = virtualinvoke $r20.<org.codehaus.groovy.tools.shell.util.MessageSource: java.lang.String format(java.lang.String,java.lang.Object[])>("cli.info.unexpected_args", $r18);

        virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>($r22);

        staticinvoke <java.lang.System: void exit(int)>(1);

     label2:
        $r27 = new java.io.PrintWriter;

        $r12 = <java.lang.System: java.io.PrintStream out>;

        specialinvoke $r27.<java.io.PrintWriter: void <init>(java.io.OutputStream)>($r12);

        $z1 = virtualinvoke $r9.<org.apache.commons.cli.CommandLine: boolean hasOption(char)>(104);

        if $z1 == 0 goto label3;

        $r28 = new org.apache.commons.cli.HelpFormatter;

        specialinvoke $r28.<org.apache.commons.cli.HelpFormatter: void <init>()>();

        virtualinvoke $r28.<org.apache.commons.cli.HelpFormatter: void printHelp(java.io.PrintWriter,int,java.lang.String,java.lang.String,org.apache.commons.cli.Options,int,int,java.lang.String,boolean)>($r27, 80, "groovysh [options]", "", $r25, 4, 4, "", 0);

        virtualinvoke $r27.<java.io.PrintWriter: void flush()>();

        staticinvoke <java.lang.System: void exit(int)>(0);

     label3:
        $z2 = virtualinvoke $r9.<org.apache.commons.cli.CommandLine: boolean hasOption(char)>(86);

        if $z2 == 0 goto label4;

        $r14 = <groovy.ui.InteractiveShell: org.codehaus.groovy.tools.shell.util.MessageSource MESSAGES>;

        $r13 = newarray (java.lang.Object)[1];

        $r15 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.String getVersion()>();

        $r13[0] = $r15;

        $r16 = virtualinvoke $r14.<org.codehaus.groovy.tools.shell.util.MessageSource: java.lang.String format(java.lang.String,java.lang.Object[])>("cli.info.version", $r13);

        virtualinvoke $r27.<java.io.PrintWriter: void println(java.lang.String)>($r16);

        virtualinvoke $r27.<java.io.PrintWriter: void flush()>();

        staticinvoke <java.lang.System: void exit(int)>(0);

     label4:
        return;
    }

    public void <init>() throws java.io.IOException
    {
        java.io.PrintStream $r1, $r2;
        groovy.ui.InteractiveShell r0;
        java.io.InputStream $r3;

        r0 := @this: groovy.ui.InteractiveShell;

        $r3 = <java.lang.System: java.io.InputStream in>;

        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r1 = <java.lang.System: java.io.PrintStream err>;

        specialinvoke r0.<groovy.ui.InteractiveShell: void <init>(java.io.InputStream,java.io.PrintStream,java.io.PrintStream)>($r3, $r2, $r1);

        return;
    }

    public void <init>(java.io.InputStream, java.io.PrintStream, java.io.PrintStream) throws java.io.IOException
    {
        java.io.PrintStream r3, r4;
        groovy.ui.InteractiveShell r0;
        groovy.lang.Binding $r1;
        java.io.InputStream r2;

        r0 := @this: groovy.ui.InteractiveShell;

        r2 := @parameter0: java.io.InputStream;

        r3 := @parameter1: java.io.PrintStream;

        r4 := @parameter2: java.io.PrintStream;

        $r1 = new groovy.lang.Binding;

        specialinvoke $r1.<groovy.lang.Binding: void <init>()>();

        specialinvoke r0.<groovy.ui.InteractiveShell: void <init>(java.lang.ClassLoader,groovy.lang.Binding,java.io.InputStream,java.io.PrintStream,java.io.PrintStream)>(null, $r1, r2, r3, r4);

        return;
    }

    public void <init>(groovy.lang.Binding, java.io.InputStream, java.io.PrintStream, java.io.PrintStream) throws java.io.IOException
    {
        java.io.PrintStream r3, r4;
        groovy.ui.InteractiveShell r0;
        groovy.lang.Binding r1;
        java.io.InputStream r2;

        r0 := @this: groovy.ui.InteractiveShell;

        r1 := @parameter0: groovy.lang.Binding;

        r2 := @parameter1: java.io.InputStream;

        r3 := @parameter2: java.io.PrintStream;

        r4 := @parameter3: java.io.PrintStream;

        specialinvoke r0.<groovy.ui.InteractiveShell: void <init>(java.lang.ClassLoader,groovy.lang.Binding,java.io.InputStream,java.io.PrintStream,java.io.PrintStream)>(null, r1, r2, r3, r4);

        return;
    }

    public void <init>(java.lang.ClassLoader, groovy.lang.Binding, java.io.InputStream, java.io.PrintStream, java.io.PrintStream) throws java.io.IOException
    {
        java.lang.AssertionError $r24, $r25, $r26, $r27;
        jline.ConsoleReader $r7, $r9, $r29;
        java.lang.StringBuffer $r23;
        java.util.Map $r15;
        java.io.OutputStreamWriter $r28;
        groovy.lang.Binding r12, $r14;
        boolean $z0, $z1, $z2, $z3;
        java.io.PrintStream r3, r4;
        jline.Completor $r33;
        groovy.ui.InteractiveShell$CommandNameCompletor $r30;
        groovy.lang.GroovyShell $r13, $r17, $r31, $r32;
        java.lang.Object $r16;
        groovy.ui.InteractiveShell r0;
        java.lang.ClassLoader r10;
        java.io.InputStream r2;

        r0 := @this: groovy.ui.InteractiveShell;

        r10 := @parameter0: java.lang.ClassLoader;

        r12 := @parameter1: groovy.lang.Binding;

        r2 := @parameter2: java.io.InputStream;

        r3 := @parameter3: java.io.PrintStream;

        r4 := @parameter4: java.io.PrintStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r23 = new java.lang.StringBuffer;

        specialinvoke $r23.<java.lang.StringBuffer: void <init>()>();

        r0.<groovy.ui.InteractiveShell: java.lang.StringBuffer accepted> = $r23;

        r0.<groovy.ui.InteractiveShell: boolean stale> = 0;

        $z0 = <groovy.ui.InteractiveShell: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if r12 != null goto label1;

        $r24 = new java.lang.AssertionError;

        specialinvoke $r24.<java.lang.AssertionError: void <init>()>();

        throw $r24;

     label1:
        $z1 = <groovy.ui.InteractiveShell: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        if r2 != null goto label2;

        $r25 = new java.lang.AssertionError;

        specialinvoke $r25.<java.lang.AssertionError: void <init>()>();

        throw $r25;

     label2:
        $z2 = <groovy.ui.InteractiveShell: boolean $assertionsDisabled>;

        if $z2 != 0 goto label3;

        if r3 != null goto label3;

        $r26 = new java.lang.AssertionError;

        specialinvoke $r26.<java.lang.AssertionError: void <init>()>();

        throw $r26;

     label3:
        $z3 = <groovy.ui.InteractiveShell: boolean $assertionsDisabled>;

        if $z3 != 0 goto label4;

        if r4 != null goto label4;

        $r27 = new java.lang.AssertionError;

        specialinvoke $r27.<java.lang.AssertionError: void <init>()>();

        throw $r27;

     label4:
        r0.<groovy.ui.InteractiveShell: java.io.InputStream in> = r2;

        r0.<groovy.ui.InteractiveShell: java.io.PrintStream out> = r3;

        r0.<groovy.ui.InteractiveShell: java.io.PrintStream err> = r4;

        $r28 = new java.io.OutputStreamWriter;

        specialinvoke $r28.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>(r3);

        $r29 = new jline.ConsoleReader;

        specialinvoke $r29.<jline.ConsoleReader: void <init>(java.io.InputStream,java.io.Writer)>(r2, $r28);

        r0.<groovy.ui.InteractiveShell: jline.ConsoleReader reader> = $r29;

        $r7 = r0.<groovy.ui.InteractiveShell: jline.ConsoleReader reader>;

        virtualinvoke $r7.<jline.ConsoleReader: void setDefaultPrompt(java.lang.String)>("groovy> ");

        $r9 = r0.<groovy.ui.InteractiveShell: jline.ConsoleReader reader>;

        $r30 = new groovy.ui.InteractiveShell$CommandNameCompletor;

        specialinvoke $r30.<groovy.ui.InteractiveShell$CommandNameCompletor: void <init>(groovy.ui.InteractiveShell)>(r0);

        $r33 = (jline.Completor) $r30;

        virtualinvoke $r9.<jline.ConsoleReader: boolean addCompletor(jline.Completor)>($r33);

        if r10 == null goto label5;

        $r31 = new groovy.lang.GroovyShell;

        specialinvoke $r31.<groovy.lang.GroovyShell: void <init>(java.lang.ClassLoader,groovy.lang.Binding)>(r10, r12);

        r0.<groovy.ui.InteractiveShell: groovy.lang.GroovyShell shell> = $r31;

        goto label6;

     label5:
        $r32 = new groovy.lang.GroovyShell;

        specialinvoke $r32.<groovy.lang.GroovyShell: void <init>(groovy.lang.Binding)>(r12);

        r0.<groovy.ui.InteractiveShell: groovy.lang.GroovyShell shell> = $r32;

     label6:
        $r13 = r0.<groovy.ui.InteractiveShell: groovy.lang.GroovyShell shell>;

        $r14 = virtualinvoke $r13.<groovy.lang.GroovyShell: groovy.lang.Binding getContext()>();

        $r15 = virtualinvoke $r14.<groovy.lang.Binding: java.util.Map getVariables()>();

        $r16 = interfaceinvoke $r15.<java.util.Map: java.lang.Object get(java.lang.Object)>("shell");

        if $r16 == null goto label7;

        $r17 = r0.<groovy.ui.InteractiveShell: groovy.lang.GroovyShell shell>;

        interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("shell", $r17);

     label7:
        return;
    }

    public void run()
    {
        java.lang.Throwable $r20, r23;
        java.lang.Object[] $r1;
        groovy.lang.Closure $r11, $r14, $r18, $r19;
        org.codehaus.groovy.tools.shell.util.MessageSource $r3, $r7;
        int $i0;
        java.lang.String $r4, $r5, $r6, $r9, $r10;
        boolean $z0;
        java.io.PrintStream $r2, $r8, $r15, $r17, $r22;
        groovy.lang.GroovyShell $r12;
        org.codehaus.groovy.control.CompilationFailedException $r21;
        java.lang.Object $r13, $r16;
        groovy.ui.InteractiveShell r0;

        r0 := @this: groovy.ui.InteractiveShell;

        $r2 = r0.<groovy.ui.InteractiveShell: java.io.PrintStream out>;

        $r3 = <groovy.ui.InteractiveShell: org.codehaus.groovy.tools.shell.util.MessageSource MESSAGES>;

        $r1 = newarray (java.lang.Object)[2];

        $r4 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.String getVersion()>();

        $r1[0] = $r4;

        $r5 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.version");

        $r1[1] = $r5;

        $r6 = virtualinvoke $r3.<org.codehaus.groovy.tools.shell.util.MessageSource: java.lang.String format(java.lang.String,java.lang.Object[])>("startup_banner.0", $r1);

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r6);

        $r8 = r0.<groovy.ui.InteractiveShell: java.io.PrintStream out>;

        $r7 = <groovy.ui.InteractiveShell: org.codehaus.groovy.tools.shell.util.MessageSource MESSAGES>;

        $r9 = virtualinvoke $r7.<org.codehaus.groovy.tools.shell.util.MessageSource: java.lang.String getMessage(java.lang.String)>("startup_banner.1");

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r9);

     label01:
        $r10 = virtualinvoke r0.<groovy.ui.InteractiveShell: java.lang.String read()>();

        if $r10 != null goto label02;

        goto label11;

     label02:
        virtualinvoke r0.<groovy.ui.InteractiveShell: void reset()>();

        $i0 = virtualinvoke $r10.<java.lang.String: int length()>();

        if $i0 <= 0 goto label10;

     label03:
        $r11 = r0.<groovy.ui.InteractiveShell: groovy.lang.Closure beforeExecution>;

        if $r11 == null goto label04;

        $r19 = r0.<groovy.ui.InteractiveShell: groovy.lang.Closure beforeExecution>;

        virtualinvoke $r19.<groovy.lang.Closure: java.lang.Object call()>();

     label04:
        $r12 = r0.<groovy.ui.InteractiveShell: groovy.lang.GroovyShell shell>;

        $r13 = virtualinvoke $r12.<groovy.lang.GroovyShell: java.lang.Object evaluate(java.lang.String)>($r10);

        r0.<groovy.ui.InteractiveShell: java.lang.Object lastResult> = $r13;

        $r14 = r0.<groovy.ui.InteractiveShell: groovy.lang.Closure afterExecution>;

        if $r14 == null goto label05;

        $r18 = r0.<groovy.ui.InteractiveShell: groovy.lang.Closure afterExecution>;

        virtualinvoke $r18.<groovy.lang.Closure: java.lang.Object call()>();

     label05:
        $r15 = r0.<groovy.ui.InteractiveShell: java.io.PrintStream out>;

        virtualinvoke $r15.<java.io.PrintStream: void print(java.lang.String)>("===> ");

        $r17 = r0.<groovy.ui.InteractiveShell: java.io.PrintStream out>;

        $r16 = r0.<groovy.ui.InteractiveShell: java.lang.Object lastResult>;

        virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.Object)>($r16);

     label06:
        goto label10;

     label07:
        $r21 := @caughtexception;

        $r22 = r0.<groovy.ui.InteractiveShell: java.io.PrintStream err>;

        virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.Object)>($r21);

        goto label10;

     label08:
        $r20 := @caughtexception;

        r23 = $r20;

        $z0 = $r20 instanceof org.codehaus.groovy.runtime.InvokerInvocationException;

        if $z0 == 0 goto label09;

        r23 = virtualinvoke $r20.<java.lang.Throwable: java.lang.Throwable getCause()>();

     label09:
        specialinvoke r0.<groovy.ui.InteractiveShell: void filterAndPrintStackTrace(java.lang.Throwable)>(r23);

     label10:
        goto label01;

     label11:
        return;

        catch org.codehaus.groovy.control.CompilationFailedException from label03 to label06 with label07;
        catch java.lang.Throwable from label03 to label06 with label08;
    }

    public void setBeforeExecution(groovy.lang.Closure)
    {
        groovy.lang.Closure r1;
        groovy.ui.InteractiveShell r0;

        r0 := @this: groovy.ui.InteractiveShell;

        r1 := @parameter0: groovy.lang.Closure;

        r0.<groovy.ui.InteractiveShell: groovy.lang.Closure beforeExecution> = r1;

        return;
    }

    public void setAfterExecution(groovy.lang.Closure)
    {
        groovy.lang.Closure r1;
        groovy.ui.InteractiveShell r0;

        r0 := @this: groovy.ui.InteractiveShell;

        r1 := @parameter0: groovy.lang.Closure;

        r0.<groovy.ui.InteractiveShell: groovy.lang.Closure afterExecution> = r1;

        return;
    }

    private void filterAndPrintStackTrace(java.lang.Throwable)
    {
        java.io.PrintStream $r1, $r3, $r4;
        java.lang.Throwable r2;
        groovy.ui.InteractiveShell r0;
        java.lang.AssertionError $r5;
        boolean $z0;

        r0 := @this: groovy.ui.InteractiveShell;

        r2 := @parameter0: java.lang.Throwable;

        $z0 = <groovy.ui.InteractiveShell: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if r2 != null goto label1;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label1:
        $r1 = r0.<groovy.ui.InteractiveShell: java.io.PrintStream err>;

        virtualinvoke $r1.<java.io.PrintStream: void print(java.lang.String)>("ERROR: ");

        $r3 = r0.<groovy.ui.InteractiveShell: java.io.PrintStream err>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.Object)>(r2);

        $r4 = r0.<groovy.ui.InteractiveShell: java.io.PrintStream err>;

        virtualinvoke r2.<java.lang.Throwable: void printStackTrace(java.io.PrintStream)>($r4);

        return;
    }

    protected void reset()
    {
        groovy.ui.InteractiveShell r0;

        r0 := @this: groovy.ui.InteractiveShell;

        r0.<groovy.ui.InteractiveShell: boolean stale> = 1;

        r0.<groovy.ui.InteractiveShell: java.lang.String pending> = null;

        r0.<groovy.ui.InteractiveShell: int line> = 1;

        r0.<groovy.ui.InteractiveShell: org.codehaus.groovy.control.SourceUnit parser> = null;

        r0.<groovy.ui.InteractiveShell: java.lang.Exception error> = null;

        return;
    }

    protected java.lang.String read()
    {
        org.codehaus.groovy.tools.shell.util.MessageSource $r15;
        java.lang.Integer $r14;
        java.util.Map $r7, $r12;
        boolean $z0, $z1, z2, z3, z4, z5;
        java.lang.Exception $r11;
        java.lang.Error $r18;
        jline.ConsoleReader $r2;
        java.lang.StringBuffer $r19, $r20, $r21;
        int $i0, $i1;
        java.lang.String $r1, $r3, $r4, $r5, $r6, $r8, $r9, $r10, $r17, $r22;
        java.io.PrintStream $r16;
        java.io.IOException $r23;
        java.lang.Object $r13;
        groovy.ui.InteractiveShell r0;

        r0 := @this: groovy.ui.InteractiveShell;

        virtualinvoke r0.<groovy.ui.InteractiveShell: void reset()>();

        z2 = 0;

        z5 = 0;

        z4 = 0;

        z3 = 0;

     label01:
        if z3 != 0 goto label23;

     label02:
        $r2 = r0.<groovy.ui.InteractiveShell: jline.ConsoleReader reader>;

        $r3 = virtualinvoke $r2.<jline.ConsoleReader: java.lang.String readLine()>();

        r0.<groovy.ui.InteractiveShell: java.lang.String pending> = $r3;

     label03:
        goto label05;

     label04:
        $r23 := @caughtexception;

     label05:
        $r4 = r0.<groovy.ui.InteractiveShell: java.lang.String pending>;

        if $r4 != null goto label06;

        return null;

     label06:
        $r5 = r0.<groovy.ui.InteractiveShell: java.lang.String pending>;

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String trim()>();

        $r7 = <groovy.ui.InteractiveShell: java.util.Map COMMAND_MAPPINGS>;

        $z0 = interfaceinvoke $r7.<java.util.Map: boolean containsKey(java.lang.Object)>($r6);

        if $z0 == 0 goto label18;

        $r12 = <groovy.ui.InteractiveShell: java.util.Map COMMAND_MAPPINGS>;

        $r13 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        $r14 = (java.lang.Integer) $r13;

        $i1 = virtualinvoke $r14.<java.lang.Integer: int intValue()>();

        tableswitch($i1)
        {
            case 0: goto label07;
            case 1: goto label08;
            case 2: goto label09;
            case 3: goto label10;
            case 4: goto label11;
            case 5: goto label13;
            case 6: goto label12;
            case 7: goto label15;
            case 8: goto label16;
            default: goto label17;
        };

     label07:
        return null;

     label08:
        specialinvoke r0.<groovy.ui.InteractiveShell: void displayHelp()>();

        goto label01;

     label09:
        virtualinvoke r0.<groovy.ui.InteractiveShell: void reset()>();

        z3 = 1;

        goto label01;

     label10:
        specialinvoke r0.<groovy.ui.InteractiveShell: void displayStatement()>();

        goto label01;

     label11:
        specialinvoke r0.<groovy.ui.InteractiveShell: void explainStatement()>();

        goto label01;

     label12:
        specialinvoke r0.<groovy.ui.InteractiveShell: void displayBinding()>();

        goto label01;

     label13:
        if z5 == 0 goto label14;

        z3 = 1;

        goto label01;

     label14:
        $r16 = r0.<groovy.ui.InteractiveShell: java.io.PrintStream err>;

        $r15 = <groovy.ui.InteractiveShell: org.codehaus.groovy.tools.shell.util.MessageSource MESSAGES>;

        $r17 = virtualinvoke $r15.<org.codehaus.groovy.tools.shell.util.MessageSource: java.lang.String getMessage(java.lang.String)>("command.execute.not_complete");

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r17);

        goto label01;

     label15:
        specialinvoke r0.<groovy.ui.InteractiveShell: void resetLoadedClasses()>();

        goto label01;

     label16:
        specialinvoke r0.<groovy.ui.InteractiveShell: void inspect()>();

        goto label01;

     label17:
        $r18 = new java.lang.Error;

        $r19 = new java.lang.StringBuffer;

        specialinvoke $r19.<java.lang.StringBuffer: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("BUG: Unknown command for code: ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.Error: void <init>(java.lang.String)>($r22);

        throw $r18;

     label18:
        specialinvoke r0.<groovy.ui.InteractiveShell: void freshen()>();

        $r8 = r0.<groovy.ui.InteractiveShell: java.lang.String pending>;

        $r9 = virtualinvoke $r8.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r9.<java.lang.String: int length()>();

        if $i0 != 0 goto label19;

        specialinvoke r0.<groovy.ui.InteractiveShell: void accept()>();

        goto label01;

     label19:
        $r10 = specialinvoke r0.<groovy.ui.InteractiveShell: java.lang.String current()>();

        $z1 = specialinvoke r0.<groovy.ui.InteractiveShell: boolean parse(java.lang.String)>($r10);

        if $z1 == 0 goto label20;

        specialinvoke r0.<groovy.ui.InteractiveShell: void accept()>();

        z2 = 1;

        z5 = 1;

        z4 = 1;

        goto label22;

     label20:
        $r11 = r0.<groovy.ui.InteractiveShell: java.lang.Exception error>;

        if $r11 != null goto label21;

        specialinvoke r0.<groovy.ui.InteractiveShell: void accept()>();

        goto label22;

     label21:
        specialinvoke r0.<groovy.ui.InteractiveShell: void report()>();

     label22:
        goto label01;

     label23:
        $r1 = specialinvoke r0.<groovy.ui.InteractiveShell: java.lang.String accepted(boolean)>(z4);

        return $r1;

        catch java.io.IOException from label02 to label03 with label04;
    }

    private void inspect()
    {
        java.io.PrintStream $r9, $r12;
        java.lang.Object[] $r6;
        java.lang.Class[] $r3;
        org.codehaus.groovy.tools.shell.util.MessageSource $r8;
        java.lang.Exception $r11;
        java.lang.Object $r1, $r7;
        java.lang.Class $r2, $r4, $r13;
        groovy.ui.InteractiveShell r0;
        java.lang.String $r10;
        java.lang.reflect.Method $r5;

        r0 := @this: groovy.ui.InteractiveShell;

        $r1 = r0.<groovy.ui.InteractiveShell: java.lang.Object lastResult>;

        if $r1 != null goto label1;

        $r9 = r0.<groovy.ui.InteractiveShell: java.io.PrintStream err>;

        $r8 = <groovy.ui.InteractiveShell: org.codehaus.groovy.tools.shell.util.MessageSource MESSAGES>;

        $r10 = virtualinvoke $r8.<org.codehaus.groovy.tools.shell.util.MessageSource: java.lang.String getMessage(java.lang.String)>("command.inspect.no_result");

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r10);

        return;

     label1:
        $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("groovy.inspect.swingui.ObjectBrowser");

        $r3 = newarray (java.lang.Class)[1];

        $r4 = <groovy.ui.InteractiveShell: java.lang.Class class$java$lang$Object>;

        if $r4 != null goto label2;

        $r13 = staticinvoke <groovy.ui.InteractiveShell: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        <groovy.ui.InteractiveShell: java.lang.Class class$java$lang$Object> = $r13;

        goto label3;

     label2:
        $r13 = <groovy.ui.InteractiveShell: java.lang.Class class$java$lang$Object>;

     label3:
        $r3[0] = $r13;

        $r5 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("inspect", $r3);

        $r6 = newarray (java.lang.Object)[1];

        $r7 = r0.<groovy.ui.InteractiveShell: java.lang.Object lastResult>;

        $r6[0] = $r7;

        virtualinvoke $r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r2, $r6);

     label4:
        goto label6;

     label5:
        $r11 := @caughtexception;

        $r12 = r0.<groovy.ui.InteractiveShell: java.io.PrintStream err>;

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>("Cannot invoke ObjectBrowser");

        virtualinvoke $r11.<java.lang.Exception: void printStackTrace()>();

     label6:
        return;

        catch java.lang.Exception from label1 to label4 with label5;
    }

    private java.lang.String accepted(boolean)
    {
        java.lang.StringBuffer $r1;
        groovy.ui.InteractiveShell r0;
        java.lang.String $r2;
        boolean z0;

        r0 := @this: groovy.ui.InteractiveShell;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r1 = r0.<groovy.ui.InteractiveShell: java.lang.StringBuffer accepted>;

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;

     label1:
        return "";
    }

    private java.lang.String current()
    {
        java.lang.StringBuffer $r0, $r2, $r4, $r6, $r8;
        groovy.ui.InteractiveShell r1;
        java.lang.String $r3, $r5, $r7, $r9;

        r1 := @this: groovy.ui.InteractiveShell;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = r1.<groovy.ui.InteractiveShell: java.lang.StringBuffer accepted>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = r1.<groovy.ui.InteractiveShell: java.lang.String pending>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = <groovy.ui.InteractiveShell: java.lang.String NEW_LINE>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r9;
    }

    private void accept()
    {
        java.lang.StringBuffer $r2, $r3;
        int $i0, $i1;
        groovy.ui.InteractiveShell r0;
        java.lang.String $r1, $r4;

        r0 := @this: groovy.ui.InteractiveShell;

        $r2 = r0.<groovy.ui.InteractiveShell: java.lang.StringBuffer accepted>;

        $r1 = r0.<groovy.ui.InteractiveShell: java.lang.String pending>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r4 = <groovy.ui.InteractiveShell: java.lang.String NEW_LINE>;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $i0 = r0.<groovy.ui.InteractiveShell: int line>;

        $i1 = $i0 + 1;

        r0.<groovy.ui.InteractiveShell: int line> = $i1;

        return;
    }

    private void freshen()
    {
        groovy.ui.InteractiveShell r0;
        java.lang.StringBuffer $r1;
        boolean $z0;

        r0 := @this: groovy.ui.InteractiveShell;

        $z0 = r0.<groovy.ui.InteractiveShell: boolean stale>;

        if $z0 == 0 goto label1;

        $r1 = r0.<groovy.ui.InteractiveShell: java.lang.StringBuffer accepted>;

        virtualinvoke $r1.<java.lang.StringBuffer: void setLength(int)>(0);

        r0.<groovy.ui.InteractiveShell: boolean stale> = 0;

     label1:
        return;
    }

    private boolean parse(java.lang.String, int)
    {
        org.codehaus.groovy.control.ErrorCollector $r8;
        org.codehaus.groovy.control.SourceUnit $r2, $r3, $r7, $r9;
        java.lang.AssertionError $r4;
        java.lang.Exception $r5;
        int i0, $i1;
        org.codehaus.groovy.control.CompilationFailedException $r6;
        groovy.ui.InteractiveShell r0;
        java.lang.String r1;
        boolean $z0, $z1, z2;

        r0 := @this: groovy.ui.InteractiveShell;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $z0 = <groovy.ui.InteractiveShell: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if r1 != null goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label1:
        z2 = 0;

        r0.<groovy.ui.InteractiveShell: org.codehaus.groovy.control.SourceUnit parser> = null;

        r0.<groovy.ui.InteractiveShell: java.lang.Exception error> = null;

     label2:
        $r2 = staticinvoke <org.codehaus.groovy.control.SourceUnit: org.codehaus.groovy.control.SourceUnit create(java.lang.String,java.lang.String,int)>("groovysh-script", r1, i0);

        r0.<groovy.ui.InteractiveShell: org.codehaus.groovy.control.SourceUnit parser> = $r2;

        $r3 = r0.<groovy.ui.InteractiveShell: org.codehaus.groovy.control.SourceUnit parser>;

        virtualinvoke $r3.<org.codehaus.groovy.control.SourceUnit: void parse()>();

        z2 = 1;

     label3:
        goto label8;

     label4:
        $r6 := @caughtexception;

        $r7 = r0.<groovy.ui.InteractiveShell: org.codehaus.groovy.control.SourceUnit parser>;

        $r8 = virtualinvoke $r7.<org.codehaus.groovy.control.SourceUnit: org.codehaus.groovy.control.ErrorCollector getErrorCollector()>();

        $i1 = virtualinvoke $r8.<org.codehaus.groovy.control.ErrorCollector: int getErrorCount()>();

        if $i1 > 1 goto label5;

        $r9 = r0.<groovy.ui.InteractiveShell: org.codehaus.groovy.control.SourceUnit parser>;

        $z1 = virtualinvoke $r9.<org.codehaus.groovy.control.SourceUnit: boolean failedWithUnexpectedEOF()>();

        if $z1 != 0 goto label6;

     label5:
        r0.<groovy.ui.InteractiveShell: java.lang.Exception error> = $r6;

     label6:
        goto label8;

     label7:
        $r5 := @caughtexception;

        r0.<groovy.ui.InteractiveShell: java.lang.Exception error> = $r5;

     label8:
        return z2;

        catch org.codehaus.groovy.control.CompilationFailedException from label2 to label3 with label4;
        catch java.lang.Exception from label2 to label3 with label7;
    }

    private boolean parse(java.lang.String)
    {
        groovy.ui.InteractiveShell r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: groovy.ui.InteractiveShell;

        r1 := @parameter0: java.lang.String;

        $z0 = specialinvoke r0.<groovy.ui.InteractiveShell: boolean parse(java.lang.String,int)>(r1, 1);

        return $z0;
    }

    private void report()
    {
        java.io.PrintStream $r1, $r4;
        groovy.ui.InteractiveShell r0;
        java.lang.Exception $r3;
        org.codehaus.groovy.tools.ErrorReporter $r2;

        r0 := @this: groovy.ui.InteractiveShell;

        $r1 = r0.<groovy.ui.InteractiveShell: java.io.PrintStream err>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("Discarding invalid text:");

        $r2 = new org.codehaus.groovy.tools.ErrorReporter;

        $r3 = r0.<groovy.ui.InteractiveShell: java.lang.Exception error>;

        specialinvoke $r2.<org.codehaus.groovy.tools.ErrorReporter: void <init>(java.lang.Throwable,boolean)>($r3, 0);

        $r4 = r0.<groovy.ui.InteractiveShell: java.io.PrintStream err>;

        virtualinvoke $r2.<org.codehaus.groovy.tools.ErrorReporter: void write(java.io.PrintStream)>($r4);

        return;
    }

    private void displayHelp()
    {
        java.io.PrintStream $r2, $r4, $r8;
        java.lang.String[] $r5;
        org.codehaus.groovy.tools.shell.util.MessageSource $r1;
        java.util.Map $r7;
        int i0;
        java.lang.Object $r9;
        groovy.ui.InteractiveShell r0;
        java.lang.String $r3, $r6;

        r0 := @this: groovy.ui.InteractiveShell;

        $r2 = r0.<groovy.ui.InteractiveShell: java.io.PrintStream out>;

        $r1 = <groovy.ui.InteractiveShell: org.codehaus.groovy.tools.shell.util.MessageSource MESSAGES>;

        $r3 = virtualinvoke $r1.<org.codehaus.groovy.tools.shell.util.MessageSource: java.lang.String getMessage(java.lang.String)>("command.help.available_commands");

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r3);

        i0 = 0;

     label1:
        if i0 > 8 goto label2;

        $r4 = r0.<groovy.ui.InteractiveShell: java.io.PrintStream out>;

        virtualinvoke $r4.<java.io.PrintStream: void print(java.lang.String)>("    ");

        $r8 = r0.<groovy.ui.InteractiveShell: java.io.PrintStream out>;

        $r7 = <groovy.ui.InteractiveShell: java.util.Map COMMAND_HELP>;

        $r5 = <groovy.ui.InteractiveShell: java.lang.String[] COMMANDS>;

        $r6 = $r5[i0];

        $r9 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.Object)>($r9);

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    private void displayStatement()
    {
        java.lang.String[] $r4;
        org.codehaus.groovy.tools.shell.util.MessageSource $r14;
        java.lang.Integer $r6;
        java.lang.StringBuffer $r1;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, $i7;
        java.lang.String $r2, $r3, $r5, $r7, $r10, $r12, $r13, $r16;
        boolean $z0;
        java.io.PrintStream $r8, $r9, $r11, $r15;
        groovy.ui.InteractiveShell r0;

        r0 := @this: groovy.ui.InteractiveShell;

        $r1 = r0.<groovy.ui.InteractiveShell: java.lang.StringBuffer accepted>;

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        $r3 = <groovy.ui.InteractiveShell: java.lang.String NEW_LINE>;

        $r4 = virtualinvoke $r2.<java.lang.String: java.lang.String[] split(java.lang.String)>($r3);

        $i0 = lengthof $r4;

        if $i0 != 1 goto label1;

        $r12 = $r4[0];

        $r13 = virtualinvoke $r12.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label1;

        $r15 = r0.<groovy.ui.InteractiveShell: java.io.PrintStream out>;

        $r14 = <groovy.ui.InteractiveShell: org.codehaus.groovy.tools.shell.util.MessageSource MESSAGES>;

        $r16 = virtualinvoke $r14.<org.codehaus.groovy.tools.shell.util.MessageSource: java.lang.String getMessage(java.lang.String)>("command.display.buffer_empty");

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>($r16);

        goto label6;

     label1:
        i5 = 2;

        $i1 = lengthof $r4;

        if $i1 < 10 goto label2;

        i5 = 3;

     label2:
        $i2 = lengthof $r4;

        if $i2 < 100 goto label3;

        i5 = i5 + 1;

     label3:
        $i3 = lengthof $r4;

        if $i3 < 1000 goto label4;

        i5 = i5 + 1;

     label4:
        i6 = 0;

     label5:
        $i7 = lengthof $r4;

        if i6 >= $i7 goto label6;

        $i4 = i6 + 1;

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i4);

        $r6 = new java.lang.Integer;

        specialinvoke $r6.<java.lang.Integer: void <init>(int)>(i5);

        $r7 = staticinvoke <org.codehaus.groovy.runtime.DefaultGroovyMethods: java.lang.String padLeft(java.lang.String,java.lang.Number,java.lang.String)>($r5, $r6, " ");

        $r8 = r0.<groovy.ui.InteractiveShell: java.io.PrintStream out>;

        virtualinvoke $r8.<java.io.PrintStream: void print(java.lang.String)>($r7);

        $r9 = r0.<groovy.ui.InteractiveShell: java.io.PrintStream out>;

        virtualinvoke $r9.<java.io.PrintStream: void print(java.lang.String)>("> ");

        $r11 = r0.<groovy.ui.InteractiveShell: java.io.PrintStream out>;

        $r10 = $r4[i6];

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>($r10);

        i6 = i6 + 1;

        goto label5;

     label6:
        return;
    }

    private void displayBinding()
    {
        org.codehaus.groovy.tools.shell.util.MessageSource $r5, $r15;
        java.util.Map $r3;
        java.lang.String $r7, $r17;
        groovy.lang.Binding $r2;
        boolean $z0, $z1;
        java.io.PrintStream $r6, $r10, $r11, $r12, $r13, $r16;
        java.util.Iterator $r8;
        java.util.Set $r4;
        groovy.lang.GroovyShell $r1;
        java.lang.Object $r9, $r14;
        groovy.ui.InteractiveShell r0;

        r0 := @this: groovy.ui.InteractiveShell;

        $r1 = r0.<groovy.ui.InteractiveShell: groovy.lang.GroovyShell shell>;

        $r2 = virtualinvoke $r1.<groovy.lang.GroovyShell: groovy.lang.Binding getContext()>();

        $r3 = virtualinvoke $r2.<groovy.lang.Binding: java.util.Map getVariables()>();

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set keySet()>();

        $z0 = interfaceinvoke $r4.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r16 = r0.<groovy.ui.InteractiveShell: java.io.PrintStream out>;

        $r15 = <groovy.ui.InteractiveShell: org.codehaus.groovy.tools.shell.util.MessageSource MESSAGES>;

        $r17 = virtualinvoke $r15.<org.codehaus.groovy.tools.shell.util.MessageSource: java.lang.String getMessage(java.lang.String)>("command.binding.binding_empty");

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r17);

        goto label3;

     label1:
        $r6 = r0.<groovy.ui.InteractiveShell: java.io.PrintStream out>;

        $r5 = <groovy.ui.InteractiveShell: org.codehaus.groovy.tools.shell.util.MessageSource MESSAGES>;

        $r7 = virtualinvoke $r5.<org.codehaus.groovy.tools.shell.util.MessageSource: java.lang.String getMessage(java.lang.String)>("command.binding.available_variables");

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r7);

        $r8 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        $r10 = r0.<groovy.ui.InteractiveShell: java.io.PrintStream out>;

        virtualinvoke $r10.<java.io.PrintStream: void print(java.lang.String)>("    ");

        $r11 = r0.<groovy.ui.InteractiveShell: java.io.PrintStream out>;

        virtualinvoke $r11.<java.io.PrintStream: void print(java.lang.Object)>($r9);

        $r12 = r0.<groovy.ui.InteractiveShell: java.io.PrintStream out>;

        virtualinvoke $r12.<java.io.PrintStream: void print(java.lang.String)>(" = ");

        $r13 = r0.<groovy.ui.InteractiveShell: java.io.PrintStream out>;

        $r14 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r9);

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.Object)>($r14);

        goto label2;

     label3:
        return;
    }

    private void explainStatement()
    {
        java.io.PrintStream $r3, $r7;
        org.codehaus.groovy.tools.shell.util.MessageSource $r2, $r6;
        java.lang.Exception $r5;
        groovy.ui.InteractiveShell r0;
        java.lang.String $r1, $r4, $r8;
        boolean $z0;

        r0 := @this: groovy.ui.InteractiveShell;

        $r1 = specialinvoke r0.<groovy.ui.InteractiveShell: java.lang.String accepted(boolean)>(1);

        $z0 = specialinvoke r0.<groovy.ui.InteractiveShell: boolean parse(java.lang.String,int)>($r1, 10);

        if $z0 != 0 goto label1;

        $r5 = r0.<groovy.ui.InteractiveShell: java.lang.Exception error>;

        if $r5 != null goto label2;

     label1:
        $r3 = r0.<groovy.ui.InteractiveShell: java.io.PrintStream out>;

        $r2 = <groovy.ui.InteractiveShell: org.codehaus.groovy.tools.shell.util.MessageSource MESSAGES>;

        $r4 = virtualinvoke $r2.<org.codehaus.groovy.tools.shell.util.MessageSource: java.lang.String getMessage(java.lang.String)>("command.explain.tree_header");

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

        goto label3;

     label2:
        $r7 = r0.<groovy.ui.InteractiveShell: java.io.PrintStream out>;

        $r6 = <groovy.ui.InteractiveShell: org.codehaus.groovy.tools.shell.util.MessageSource MESSAGES>;

        $r8 = virtualinvoke $r6.<org.codehaus.groovy.tools.shell.util.MessageSource: java.lang.String getMessage(java.lang.String)>("command.explain.unparsable");

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r8);

     label3:
        return;
    }

    private void resetLoadedClasses()
    {
        java.io.PrintStream $r3;
        groovy.ui.InteractiveShell r0;
        java.lang.String $r4;
        org.codehaus.groovy.tools.shell.util.MessageSource $r2;
        groovy.lang.GroovyShell $r1;

        r0 := @this: groovy.ui.InteractiveShell;

        $r1 = r0.<groovy.ui.InteractiveShell: groovy.lang.GroovyShell shell>;

        virtualinvoke $r1.<groovy.lang.GroovyShell: void resetLoadedClasses()>();

        $r3 = r0.<groovy.ui.InteractiveShell: java.io.PrintStream out>;

        $r2 = <groovy.ui.InteractiveShell: org.codehaus.groovy.tools.shell.util.MessageSource MESSAGES>;

        $r4 = virtualinvoke $r2.<org.codehaus.groovy.tools.shell.util.MessageSource: java.lang.String getMessage(java.lang.String)>("command.discardclasses.classdefs_discarded");

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

        return;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static java.util.Map access$000()
    {
        java.util.Map $r0;

        $r0 = <groovy.ui.InteractiveShell: java.util.Map COMMAND_MAPPINGS>;

        return $r0;
    }

    static void <clinit>()
    {
        java.lang.Integer $r6, $r8, $r93;
        java.util.Map $r7, $r9, $r13, $r22, $r31, $r40, $r49, $r58, $r67, $r76, $r85, $r94;
        java.lang.StringBuffer $r12, $r15, $r18, $r21, $r24, $r27, $r30, $r33, $r36, $r39, $r42, $r45, $r48, $r51, $r54, $r57, $r60, $r63, $r66, $r69, $r72, $r75, $r78, $r81, $r84, $r87, $r90;
        java.lang.String $r1, $r14, $r17, $r19, $r23, $r26, $r28, $r32, $r35, $r37, $r41, $r44, $r46, $r50, $r53, $r55, $r59, $r62, $r64, $r68, $r71, $r73, $r77, $r80, $r82, $r86, $r89, $r91, $r95;
        org.codehaus.groovy.tools.shell.util.MessageSource $r2, $r16, $r25, $r34, $r43, $r52, $r61, $r70, $r79, $r88;
        boolean $z0, $z1;
        java.lang.String[] $r4, $r11, $r20, $r29, $r38, $r47, $r56, $r65, $r74, $r83, $r92;
        java.util.HashMap $r5, $r10;
        int i0;
        java.lang.Class $r0, $r3, $r96, $r97;

        <groovy.ui.InteractiveShell: int LAST_COMMAND_ID> = 8;

        <groovy.ui.InteractiveShell: int COMMAND_ID_INSPECT> = 8;

        <groovy.ui.InteractiveShell: int COMMAND_ID_DISCARD_LOADED_CLASSES> = 7;

        <groovy.ui.InteractiveShell: int COMMAND_ID_BINDING> = 6;

        <groovy.ui.InteractiveShell: int COMMAND_ID_EXECUTE> = 5;

        <groovy.ui.InteractiveShell: int COMMAND_ID_EXPLAIN> = 4;

        <groovy.ui.InteractiveShell: int COMMAND_ID_DISPLAY> = 3;

        <groovy.ui.InteractiveShell: int COMMAND_ID_DISCARD> = 2;

        <groovy.ui.InteractiveShell: int COMMAND_ID_HELP> = 1;

        <groovy.ui.InteractiveShell: int COMMAND_ID_EXIT> = 0;

        $r0 = <groovy.ui.InteractiveShell: java.lang.Class class$groovy$ui$InteractiveShell>;

        if $r0 != null goto label1;

        $r96 = staticinvoke <groovy.ui.InteractiveShell: java.lang.Class class$(java.lang.String)>("groovy.ui.InteractiveShell");

        <groovy.ui.InteractiveShell: java.lang.Class class$groovy$ui$InteractiveShell> = $r96;

        goto label2;

     label1:
        $r96 = <groovy.ui.InteractiveShell: java.lang.Class class$groovy$ui$InteractiveShell>;

     label2:
        $z0 = virtualinvoke $r96.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        <groovy.ui.InteractiveShell: boolean $assertionsDisabled> = $z1;

        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");

        <groovy.ui.InteractiveShell: java.lang.String NEW_LINE> = $r1;

        $r2 = new org.codehaus.groovy.tools.shell.util.MessageSource;

        $r3 = <groovy.ui.InteractiveShell: java.lang.Class class$groovy$ui$InteractiveShell>;

        if $r3 != null goto label5;

        $r97 = staticinvoke <groovy.ui.InteractiveShell: java.lang.Class class$(java.lang.String)>("groovy.ui.InteractiveShell");

        <groovy.ui.InteractiveShell: java.lang.Class class$groovy$ui$InteractiveShell> = $r97;

        goto label6;

     label5:
        $r97 = <groovy.ui.InteractiveShell: java.lang.Class class$groovy$ui$InteractiveShell>;

     label6:
        specialinvoke $r2.<org.codehaus.groovy.tools.shell.util.MessageSource: void <init>(java.lang.Class)>($r97);

        <groovy.ui.InteractiveShell: org.codehaus.groovy.tools.shell.util.MessageSource MESSAGES> = $r2;

        $r4 = newarray (java.lang.String)[9];

        $r4[0] = "exit";

        $r4[1] = "help";

        $r4[2] = "discard";

        $r4[3] = "display";

        $r4[4] = "explain";

        $r4[5] = "execute";

        $r4[6] = "binding";

        $r4[7] = "discardclasses";

        $r4[8] = "inspect";

        <groovy.ui.InteractiveShell: java.lang.String[] COMMANDS> = $r4;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        <groovy.ui.InteractiveShell: java.util.Map COMMAND_MAPPINGS> = $r5;

        i0 = 0;

     label7:
        if i0 > 8 goto label8;

        $r94 = <groovy.ui.InteractiveShell: java.util.Map COMMAND_MAPPINGS>;

        $r92 = <groovy.ui.InteractiveShell: java.lang.String[] COMMANDS>;

        $r95 = $r92[i0];

        $r93 = new java.lang.Integer;

        specialinvoke $r93.<java.lang.Integer: void <init>(int)>(i0);

        interfaceinvoke $r94.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r95, $r93);

        i0 = i0 + 1;

        goto label7;

     label8:
        $r7 = <groovy.ui.InteractiveShell: java.util.Map COMMAND_MAPPINGS>;

        $r6 = new java.lang.Integer;

        specialinvoke $r6.<java.lang.Integer: void <init>(int)>(0);

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("quit", $r6);

        $r9 = <groovy.ui.InteractiveShell: java.util.Map COMMAND_MAPPINGS>;

        $r8 = new java.lang.Integer;

        specialinvoke $r8.<java.lang.Integer: void <init>(int)>(5);

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("go", $r8);

        $r10 = new java.util.HashMap;

        specialinvoke $r10.<java.util.HashMap: void <init>()>();

        <groovy.ui.InteractiveShell: java.util.Map COMMAND_HELP> = $r10;

        $r13 = <groovy.ui.InteractiveShell: java.util.Map COMMAND_HELP>;

        $r11 = <groovy.ui.InteractiveShell: java.lang.String[] COMMANDS>;

        $r14 = $r11[0];

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("exit/quit         - ");

        $r16 = <groovy.ui.InteractiveShell: org.codehaus.groovy.tools.shell.util.MessageSource MESSAGES>;

        $r17 = virtualinvoke $r16.<org.codehaus.groovy.tools.shell.util.MessageSource: java.lang.String getMessage(java.lang.String)>("command.exit.descripion");

        $r18 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, $r19);

        $r22 = <groovy.ui.InteractiveShell: java.util.Map COMMAND_HELP>;

        $r20 = <groovy.ui.InteractiveShell: java.lang.String[] COMMANDS>;

        $r23 = $r20[1];

        $r21 = new java.lang.StringBuffer;

        specialinvoke $r21.<java.lang.StringBuffer: void <init>()>();

        $r24 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("help              - ");

        $r25 = <groovy.ui.InteractiveShell: org.codehaus.groovy.tools.shell.util.MessageSource MESSAGES>;

        $r26 = virtualinvoke $r25.<org.codehaus.groovy.tools.shell.util.MessageSource: java.lang.String getMessage(java.lang.String)>("command.help.descripion");

        $r27 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r23, $r28);

        $r31 = <groovy.ui.InteractiveShell: java.util.Map COMMAND_HELP>;

        $r29 = <groovy.ui.InteractiveShell: java.lang.String[] COMMANDS>;

        $r32 = $r29[2];

        $r30 = new java.lang.StringBuffer;

        specialinvoke $r30.<java.lang.StringBuffer: void <init>()>();

        $r33 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("discard           - ");

        $r34 = <groovy.ui.InteractiveShell: org.codehaus.groovy.tools.shell.util.MessageSource MESSAGES>;

        $r35 = virtualinvoke $r34.<org.codehaus.groovy.tools.shell.util.MessageSource: java.lang.String getMessage(java.lang.String)>("command.discard.descripion");

        $r36 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r31.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r32, $r37);

        $r40 = <groovy.ui.InteractiveShell: java.util.Map COMMAND_HELP>;

        $r38 = <groovy.ui.InteractiveShell: java.lang.String[] COMMANDS>;

        $r41 = $r38[3];

        $r39 = new java.lang.StringBuffer;

        specialinvoke $r39.<java.lang.StringBuffer: void <init>()>();

        $r42 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("display           - ");

        $r43 = <groovy.ui.InteractiveShell: org.codehaus.groovy.tools.shell.util.MessageSource MESSAGES>;

        $r44 = virtualinvoke $r43.<org.codehaus.groovy.tools.shell.util.MessageSource: java.lang.String getMessage(java.lang.String)>("command.display.descripion");

        $r45 = virtualinvoke $r42.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r44);

        $r46 = virtualinvoke $r45.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r40.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r41, $r46);

        $r49 = <groovy.ui.InteractiveShell: java.util.Map COMMAND_HELP>;

        $r47 = <groovy.ui.InteractiveShell: java.lang.String[] COMMANDS>;

        $r50 = $r47[4];

        $r48 = new java.lang.StringBuffer;

        specialinvoke $r48.<java.lang.StringBuffer: void <init>()>();

        $r51 = virtualinvoke $r48.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("explain           - ");

        $r52 = <groovy.ui.InteractiveShell: org.codehaus.groovy.tools.shell.util.MessageSource MESSAGES>;

        $r53 = virtualinvoke $r52.<org.codehaus.groovy.tools.shell.util.MessageSource: java.lang.String getMessage(java.lang.String)>("command.explain.descripion");

        $r54 = virtualinvoke $r51.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r53);

        $r55 = virtualinvoke $r54.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r49.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r50, $r55);

        $r58 = <groovy.ui.InteractiveShell: java.util.Map COMMAND_HELP>;

        $r56 = <groovy.ui.InteractiveShell: java.lang.String[] COMMANDS>;

        $r59 = $r56[5];

        $r57 = new java.lang.StringBuffer;

        specialinvoke $r57.<java.lang.StringBuffer: void <init>()>();

        $r60 = virtualinvoke $r57.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("execute/go        - ");

        $r61 = <groovy.ui.InteractiveShell: org.codehaus.groovy.tools.shell.util.MessageSource MESSAGES>;

        $r62 = virtualinvoke $r61.<org.codehaus.groovy.tools.shell.util.MessageSource: java.lang.String getMessage(java.lang.String)>("command.execute.descripion");

        $r63 = virtualinvoke $r60.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r62);

        $r64 = virtualinvoke $r63.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r58.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r59, $r64);

        $r67 = <groovy.ui.InteractiveShell: java.util.Map COMMAND_HELP>;

        $r65 = <groovy.ui.InteractiveShell: java.lang.String[] COMMANDS>;

        $r68 = $r65[6];

        $r66 = new java.lang.StringBuffer;

        specialinvoke $r66.<java.lang.StringBuffer: void <init>()>();

        $r69 = virtualinvoke $r66.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("binding           - ");

        $r70 = <groovy.ui.InteractiveShell: org.codehaus.groovy.tools.shell.util.MessageSource MESSAGES>;

        $r71 = virtualinvoke $r70.<org.codehaus.groovy.tools.shell.util.MessageSource: java.lang.String getMessage(java.lang.String)>("command.binding.descripion");

        $r72 = virtualinvoke $r69.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r71);

        $r73 = virtualinvoke $r72.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r67.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r68, $r73);

        $r76 = <groovy.ui.InteractiveShell: java.util.Map COMMAND_HELP>;

        $r74 = <groovy.ui.InteractiveShell: java.lang.String[] COMMANDS>;

        $r77 = $r74[7];

        $r75 = new java.lang.StringBuffer;

        specialinvoke $r75.<java.lang.StringBuffer: void <init>()>();

        $r78 = virtualinvoke $r75.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("discardclasses    - ");

        $r79 = <groovy.ui.InteractiveShell: org.codehaus.groovy.tools.shell.util.MessageSource MESSAGES>;

        $r80 = virtualinvoke $r79.<org.codehaus.groovy.tools.shell.util.MessageSource: java.lang.String getMessage(java.lang.String)>("command.discardclasses.descripion");

        $r81 = virtualinvoke $r78.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r80);

        $r82 = virtualinvoke $r81.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r76.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r77, $r82);

        $r85 = <groovy.ui.InteractiveShell: java.util.Map COMMAND_HELP>;

        $r83 = <groovy.ui.InteractiveShell: java.lang.String[] COMMANDS>;

        $r86 = $r83[8];

        $r84 = new java.lang.StringBuffer;

        specialinvoke $r84.<java.lang.StringBuffer: void <init>()>();

        $r87 = virtualinvoke $r84.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("inspect           - ");

        $r88 = <groovy.ui.InteractiveShell: org.codehaus.groovy.tools.shell.util.MessageSource MESSAGES>;

        $r89 = virtualinvoke $r88.<org.codehaus.groovy.tools.shell.util.MessageSource: java.lang.String getMessage(java.lang.String)>("command.inspect.descripion");

        $r90 = virtualinvoke $r87.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r89);

        $r91 = virtualinvoke $r90.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r85.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r86, $r91);

        return;
    }
}
