public final class org.waveprotocol.wave.communication.Blob extends java.lang.Object
{
    private final java.lang.String data;

    public void <init>(java.lang.String)
    {
        org.waveprotocol.wave.communication.Blob r0;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.communication.Blob;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.communication.Blob: java.lang.String data> = r1;

        return;
    }

    public java.lang.String getData()
    {
        org.waveprotocol.wave.communication.Blob r0;
        java.lang.String $r1;

        r0 := @this: org.waveprotocol.wave.communication.Blob;

        $r1 = r0.<org.waveprotocol.wave.communication.Blob: java.lang.String data>;

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        org.waveprotocol.wave.communication.Blob r0, $r2;
        java.lang.Object r1;
        java.lang.String $r3, $r4;
        boolean $z0, $z1, $z2;

        r0 := @this: org.waveprotocol.wave.communication.Blob;

        r1 := @parameter0: java.lang.Object;

        if r0 == r1 goto label1;

        $z0 = r1 instanceof org.waveprotocol.wave.communication.Blob;

        if $z0 == 0 goto label2;

        $r4 = r0.<org.waveprotocol.wave.communication.Blob: java.lang.String data>;

        $r2 = (org.waveprotocol.wave.communication.Blob) r1;

        $r3 = $r2.<org.waveprotocol.wave.communication.Blob: java.lang.String data>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public int hashCode()
    {
        org.waveprotocol.wave.communication.Blob r0;
        int $i0, $i1, $i2;
        java.lang.String $r1;

        r0 := @this: org.waveprotocol.wave.communication.Blob;

        $r1 = r0.<org.waveprotocol.wave.communication.Blob: java.lang.String data>;

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        $i1 = 23 * $i0;

        $i2 = 7 + $i1;

        return $i2;
    }
}
