public class org.jdesktop.swingx.image.ColorTintFilter extends org.jdesktop.swingx.image.AbstractFilter
{
    private final java.awt.Color mixColor;
    private final float mixValue;
    private int[] preMultipliedRed;
    private int[] preMultipliedGreen;
    private int[] preMultipliedBlue;

    public void <init>(java.awt.Color, float)
    {
        java.awt.Color r1;
        byte $b0, $b1;
        int[] $r2, $r3, $r4, $r6, $r7, $r8;
        float $f0, $f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;
        int i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, $i13, $i14;
        org.jdesktop.swingx.image.ColorTintFilter r0;
        java.lang.IllegalArgumentException $r9;

        r0 := @this: org.jdesktop.swingx.image.ColorTintFilter;

        r1 := @parameter0: java.awt.Color;

        f2 := @parameter1: float;

        specialinvoke r0.<org.jdesktop.swingx.image.AbstractFilter: void <init>()>();

        if r1 != null goto label1;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("mixColor cannot be null");

        throw $r9;

     label1:
        r0.<org.jdesktop.swingx.image.ColorTintFilter: java.awt.Color mixColor> = r1;

        $b0 = f2 cmpg 0.0F;

        $i13 = (int) $b0;

        if $i13 >= 0 goto label2;

        f2 = 0.0F;

        goto label3;

     label2:
        $b1 = f2 cmpl 1.0F;

        $i14 = (int) $b1;

        if $i14 <= 0 goto label3;

        f2 = 1.0F;

     label3:
        r0.<org.jdesktop.swingx.image.ColorTintFilter: float mixValue> = f2;

        $i6 = virtualinvoke r1.<java.awt.Color: int getRed()>();

        $f3 = (float) $i6;

        $f4 = $f3 * f2;

        $i7 = (int) $f4;

        $i8 = virtualinvoke r1.<java.awt.Color: int getGreen()>();

        $f5 = (float) $i8;

        $f6 = $f5 * f2;

        $i9 = (int) $f6;

        $i10 = virtualinvoke r1.<java.awt.Color: int getBlue()>();

        $f7 = (float) $i10;

        $f8 = $f7 * f2;

        $i11 = (int) $f8;

        $f9 = 1.0F - f2;

        $r6 = newarray (int)[256];

        r0.<org.jdesktop.swingx.image.ColorTintFilter: int[] preMultipliedRed> = $r6;

        $r7 = newarray (int)[256];

        r0.<org.jdesktop.swingx.image.ColorTintFilter: int[] preMultipliedGreen> = $r7;

        $r8 = newarray (int)[256];

        r0.<org.jdesktop.swingx.image.ColorTintFilter: int[] preMultipliedBlue> = $r8;

        i12 = 0;

     label4:
        if i12 >= 256 goto label5;

        $f0 = (float) i12;

        $f1 = $f0 * $f9;

        i2 = (int) $f1;

        $r2 = r0.<org.jdesktop.swingx.image.ColorTintFilter: int[] preMultipliedRed>;

        $i3 = i2 + $i7;

        $r2[i12] = $i3;

        $r3 = r0.<org.jdesktop.swingx.image.ColorTintFilter: int[] preMultipliedGreen>;

        $i4 = i2 + $i9;

        $r3[i12] = $i4;

        $r4 = r0.<org.jdesktop.swingx.image.ColorTintFilter: int[] preMultipliedBlue>;

        $i5 = i2 + $i11;

        $r4[i12] = $i5;

        i12 = i12 + 1;

        goto label4;

     label5:
        return;
    }

    public float getMixValue()
    {
        float $f0;
        org.jdesktop.swingx.image.ColorTintFilter r0;

        r0 := @this: org.jdesktop.swingx.image.ColorTintFilter;

        $f0 = r0.<org.jdesktop.swingx.image.ColorTintFilter: float mixValue>;

        return $f0;
    }

    public java.awt.Color getMixColor()
    {
        java.awt.Color $r1;
        org.jdesktop.swingx.image.ColorTintFilter r0;

        r0 := @this: org.jdesktop.swingx.image.ColorTintFilter;

        $r1 = r0.<org.jdesktop.swingx.image.ColorTintFilter: java.awt.Color mixColor>;

        return $r1;
    }

    public java.awt.image.BufferedImage filter(java.awt.image.BufferedImage, java.awt.image.BufferedImage)
    {
        org.jdesktop.swingx.image.ColorTintFilter r1;
        java.awt.image.BufferedImage r0, r3;
        int[] $r2;
        int $i0, $i1, $i2;

        r1 := @this: org.jdesktop.swingx.image.ColorTintFilter;

        r0 := @parameter0: java.awt.image.BufferedImage;

        r3 := @parameter1: java.awt.image.BufferedImage;

        if r3 != null goto label1;

        r3 = virtualinvoke r1.<org.jdesktop.swingx.image.ColorTintFilter: java.awt.image.BufferedImage createCompatibleDestImage(java.awt.image.BufferedImage,java.awt.image.ColorModel)>(r0, null);

     label1:
        $i0 = virtualinvoke r0.<java.awt.image.BufferedImage: int getWidth()>();

        $i1 = virtualinvoke r0.<java.awt.image.BufferedImage: int getHeight()>();

        $i2 = $i0 * $i1;

        $r2 = newarray (int)[$i2];

        staticinvoke <org.jdesktop.swingx.graphics.GraphicsUtilities: int[] getPixels(java.awt.image.BufferedImage,int,int,int,int,int[])>(r0, 0, 0, $i0, $i1, $r2);

        specialinvoke r1.<org.jdesktop.swingx.image.ColorTintFilter: void mixColor(int[])>($r2);

        staticinvoke <org.jdesktop.swingx.graphics.GraphicsUtilities: void setPixels(java.awt.image.BufferedImage,int,int,int,int,int[])>(r3, 0, 0, $i0, $i1, $r2);

        return r3;
    }

    private void mixColor(int[])
    {
        int[] r0, $r2, $r3, $r4;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16;
        org.jdesktop.swingx.image.ColorTintFilter r1;

        r1 := @this: org.jdesktop.swingx.image.ColorTintFilter;

        r0 := @parameter0: int[];

        i16 = 0;

     label1:
        $i0 = lengthof r0;

        if i16 >= $i0 goto label2;

        i1 = r0[i16];

        $i6 = i1 & -16777216;

        $r2 = r1.<org.jdesktop.swingx.image.ColorTintFilter: int[] preMultipliedRed>;

        $i2 = i1 >> 16;

        $i3 = $i2 & 255;

        $i4 = $r2[$i3];

        $i5 = $i4 << 16;

        $i11 = $i6 | $i5;

        $r3 = r1.<org.jdesktop.swingx.image.ColorTintFilter: int[] preMultipliedGreen>;

        $i7 = i1 >> 8;

        $i8 = $i7 & 255;

        $i9 = $r3[$i8];

        $i10 = $i9 << 8;

        $i14 = $i11 | $i10;

        $r4 = r1.<org.jdesktop.swingx.image.ColorTintFilter: int[] preMultipliedBlue>;

        $i12 = i1 & 255;

        $i13 = $r4[$i12];

        $i15 = $i14 | $i13;

        r0[i16] = $i15;

        i16 = i16 + 1;

        goto label1;

     label2:
        return;
    }
}
