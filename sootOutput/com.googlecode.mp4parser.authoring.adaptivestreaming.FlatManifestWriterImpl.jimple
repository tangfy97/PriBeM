public class com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl extends com.googlecode.mp4parser.authoring.adaptivestreaming.AbstractManifestWriter
{
    private static final java.util.logging.Logger LOG;
    static final boolean $assertionsDisabled;

    static void <clinit>()
    {
        java.lang.Class $r0, $r1;
        java.lang.String $r2;
        java.util.logging.Logger $r3;
        boolean $z0, $z1;

        $r0 = class "Lcom/googlecode/mp4parser/authoring/adaptivestreaming/FlatManifestWriterImpl;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: boolean $assertionsDisabled> = $z1;

        $r1 = class "Lcom/googlecode/mp4parser/authoring/adaptivestreaming/FlatManifestWriterImpl;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $r3 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r2);

        <com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: java.util.logging.Logger LOG> = $r3;

        return;
    }

    protected void <init>(com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder)
    {
        com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl r0;
        com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder r1;

        r0 := @this: com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder;

        specialinvoke r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.AbstractManifestWriter: void <init>(com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder)>(r1);

        return;
    }

    protected org.w3c.dom.Document customizeManifest(org.w3c.dom.Document)
    {
        com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl r1;
        org.w3c.dom.Document r0;

        r1 := @this: com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl;

        r0 := @parameter0: org.w3c.dom.Document;

        return r0;
    }

    public java.lang.String getManifest(com.googlecode.mp4parser.authoring.Movie) throws java.io.IOException
    {
        javax.xml.transform.stream.StreamResult $r57;
        byte $b0, $b2, $b3, $b5;
        org.w3c.dom.Document $r30, $r55;
        javax.xml.parsers.DocumentBuilderFactory $r28;
        com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl r7;
        javax.xml.transform.dom.DOMSource $r54;
        javax.xml.transform.TransformerException $r83;
        long $l1, $l4, $l9, $l11, $l13, $l16, $l20, $l22, $l27, l28, l29;
        java.lang.StringBuffer $r60;
        javax.xml.transform.TransformerConfigurationException $r85;
        java.io.IOException $r84, $r86, $r88;
        javax.xml.transform.TransformerFactory $r58;
        com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality $r14, r92;
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry $r13;
        long[] $r8, $r9, $r10, $r18, $r19, $r20, $r36, $r48, $r51, $r53, $r64, $r78, $r81;
        int $i6, $i7, $i8, $i10, $i12, $i14, $i15, $i17, $i18, $i19, $i21, $i23, $i24, $i25, $i26, i30, i31, i32, i33;
        java.util.LinkedList $r0, $r1;
        com.coremedia.iso.boxes.Box $r6, $r90;
        org.w3c.dom.Element $r31, $r34, $r40, $r49, $r62, $r68, $r79;
        com.googlecode.mp4parser.authoring.Movie r2;
        java.lang.Object $r5, $r39, $r67;
        com.googlecode.mp4parser.authoring.Track r89;
        com.coremedia.iso.boxes.sampleentry.AbstractSampleEntry $r12, $r22;
        java.lang.AssertionError $r16, $r26;
        java.lang.String $r32, $r35, $r37, $r38, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r50, $r52, $r61, $r63, $r65, $r66, $r69, $r70, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r80, $r82;
        java.io.StringWriter $r56;
        com.coremedia.iso.boxes.SampleDescriptionBox $r11, $r21;
        javax.xml.parsers.DocumentBuilder $r29;
        com.googlecode.mp4parser.authoring.TrackMetaData $r15, $r17, $r25, $r27;
        com.coremedia.iso.boxes.sampleentry.VisualSampleEntry $r23;
        javax.xml.transform.Transformer $r59;
        com.googlecode.mp4parser.authoring.adaptivestreaming.VideoQuality $r24, r91;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.w3c.dom.Comment $r33;
        java.util.List $r3;
        java.util.Iterator $r4;
        javax.xml.parsers.ParserConfigurationException $r87;

        r7 := @this: com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl;

        r2 := @parameter0: com.googlecode.mp4parser.authoring.Movie;

        $r0 = new java.util.LinkedList;

        specialinvoke $r0.<java.util.LinkedList: void <init>()>();

        l28 = -1L;

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        l29 = -1L;

        $r3 = virtualinvoke r2.<com.googlecode.mp4parser.authoring.Movie: java.util.List getTracks()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

        goto label05;

     label01:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r89 = (com.googlecode.mp4parser.authoring.Track) $r5;

        $r6 = interfaceinvoke r89.<com.googlecode.mp4parser.authoring.Track: com.coremedia.iso.boxes.Box getMediaHeaderBox()>();

        $z0 = $r6 instanceof com.coremedia.iso.boxes.VideoMediaHeaderBox;

        if $z0 == 0 goto label03;

        $r18 = r7.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: long[] videoFragmentsDurations>;

        $r19 = virtualinvoke r7.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: long[] calculateFragmentDurations(com.googlecode.mp4parser.authoring.Track,com.googlecode.mp4parser.authoring.Movie)>(r89, r2);

        $r20 = virtualinvoke r7.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: long[] checkFragmentsAlign(long[],long[])>($r18, $r19);

        r7.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: long[] videoFragmentsDurations> = $r20;

        $r21 = interfaceinvoke r89.<com.googlecode.mp4parser.authoring.Track: com.coremedia.iso.boxes.SampleDescriptionBox getSampleDescriptionBox()>();

        $r22 = virtualinvoke $r21.<com.coremedia.iso.boxes.SampleDescriptionBox: com.coremedia.iso.boxes.sampleentry.AbstractSampleEntry getSampleEntry()>();

        $r23 = (com.coremedia.iso.boxes.sampleentry.VisualSampleEntry) $r22;

        $r24 = specialinvoke r7.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: com.googlecode.mp4parser.authoring.adaptivestreaming.VideoQuality getVideoQuality(com.googlecode.mp4parser.authoring.Track,com.coremedia.iso.boxes.sampleentry.VisualSampleEntry)>(r89, $r23);

        virtualinvoke $r0.<java.util.LinkedList: boolean add(java.lang.Object)>($r24);

        $b3 = l28 cmp -1L;

        if $b3 != 0 goto label02;

        $r27 = interfaceinvoke r89.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        l28 = virtualinvoke $r27.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTimescale()>();

        goto label03;

     label02:
        $z2 = <com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: boolean $assertionsDisabled>;

        if $z2 != 0 goto label03;

        $r25 = interfaceinvoke r89.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $l4 = virtualinvoke $r25.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTimescale()>();

        $b5 = l28 cmp $l4;

        if $b5 == 0 goto label03;

        $r26 = new java.lang.AssertionError;

        specialinvoke $r26.<java.lang.AssertionError: void <init>()>();

        throw $r26;

     label03:
        $r90 = interfaceinvoke r89.<com.googlecode.mp4parser.authoring.Track: com.coremedia.iso.boxes.Box getMediaHeaderBox()>();

        $z3 = $r90 instanceof com.coremedia.iso.boxes.SoundMediaHeaderBox;

        if $z3 == 0 goto label05;

        $r8 = r7.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: long[] audioFragmentsDurations>;

        $r9 = virtualinvoke r7.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: long[] calculateFragmentDurations(com.googlecode.mp4parser.authoring.Track,com.googlecode.mp4parser.authoring.Movie)>(r89, r2);

        $r10 = virtualinvoke r7.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: long[] checkFragmentsAlign(long[],long[])>($r8, $r9);

        r7.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: long[] audioFragmentsDurations> = $r10;

        $r11 = interfaceinvoke r89.<com.googlecode.mp4parser.authoring.Track: com.coremedia.iso.boxes.SampleDescriptionBox getSampleDescriptionBox()>();

        $r12 = virtualinvoke $r11.<com.coremedia.iso.boxes.SampleDescriptionBox: com.coremedia.iso.boxes.sampleentry.AbstractSampleEntry getSampleEntry()>();

        $r13 = (com.coremedia.iso.boxes.sampleentry.AudioSampleEntry) $r12;

        $r14 = specialinvoke r7.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality getAudioQuality(com.googlecode.mp4parser.authoring.Track,com.coremedia.iso.boxes.sampleentry.AudioSampleEntry)>(r89, $r13);

        virtualinvoke $r1.<java.util.LinkedList: boolean add(java.lang.Object)>($r14);

        $b0 = l29 cmp -1L;

        if $b0 != 0 goto label04;

        $r17 = interfaceinvoke r89.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        l29 = virtualinvoke $r17.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTimescale()>();

        goto label05;

     label04:
        $z1 = <com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: boolean $assertionsDisabled>;

        if $z1 != 0 goto label05;

        $r15 = interfaceinvoke r89.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $l1 = virtualinvoke $r15.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTimescale()>();

        $b2 = l29 cmp $l1;

        if $b2 == 0 goto label05;

        $r16 = new java.lang.AssertionError;

        specialinvoke $r16.<java.lang.AssertionError: void <init>()>();

        throw $r16;

     label05:
        $z4 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z4 != 0 goto label01;

        $r28 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>();

     label06:
        $r29 = virtualinvoke $r28.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

     label07:
        goto label09;

     label08:
        $r87 := @caughtexception;

        $r88 = new java.io.IOException;

        specialinvoke $r88.<java.io.IOException: void <init>(java.lang.Throwable)>($r87);

        throw $r88;

     label09:
        $r30 = virtualinvoke $r29.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document newDocument()>();

        $r31 = interfaceinvoke $r30.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("SmoothStreamingMedia");

        interfaceinvoke $r30.<org.w3c.dom.Document: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r31);

        interfaceinvoke $r31.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("MajorVersion", "2");

        interfaceinvoke $r31.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("MinorVersion", "1");

        interfaceinvoke $r31.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("Duration", "0");

        $r32 = <com.googlecode.mp4parser.Version: java.lang.String VERSION>;

        $r33 = interfaceinvoke $r30.<org.w3c.dom.Document: org.w3c.dom.Comment createComment(java.lang.String)>($r32);

        interfaceinvoke $r31.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r33);

        $r34 = interfaceinvoke $r30.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("StreamIndex");

        interfaceinvoke $r34.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("Type", "video");

        $r35 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l28);

        interfaceinvoke $r34.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("TimeScale", $r35);

        $r36 = r7.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: long[] videoFragmentsDurations>;

        $i6 = lengthof $r36;

        $r37 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i6);

        interfaceinvoke $r34.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("Chunks", $r37);

        interfaceinvoke $r34.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("Url", "video/{bitrate}/{start time}");

        $i7 = virtualinvoke $r0.<java.util.LinkedList: int size()>();

        $r38 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i7);

        interfaceinvoke $r34.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("QualityLevels", $r38);

        interfaceinvoke $r31.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r34);

        i30 = 0;

        goto label11;

     label10:
        $r39 = virtualinvoke $r0.<java.util.LinkedList: java.lang.Object get(int)>(i30);

        r91 = (com.googlecode.mp4parser.authoring.adaptivestreaming.VideoQuality) $r39;

        $r40 = interfaceinvoke $r30.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("QualityLevel");

        $r41 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i30);

        interfaceinvoke $r40.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("Index", $r41);

        $l9 = r91.<com.googlecode.mp4parser.authoring.adaptivestreaming.VideoQuality: long bitrate>;

        $r42 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l9);

        interfaceinvoke $r40.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("Bitrate", $r42);

        $r43 = r91.<com.googlecode.mp4parser.authoring.adaptivestreaming.VideoQuality: java.lang.String fourCC>;

        interfaceinvoke $r40.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("FourCC", $r43);

        $i10 = r91.<com.googlecode.mp4parser.authoring.adaptivestreaming.VideoQuality: int width>;

        $l11 = (long) $i10;

        $r44 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l11);

        interfaceinvoke $r40.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("MaxWidth", $r44);

        $i12 = r91.<com.googlecode.mp4parser.authoring.adaptivestreaming.VideoQuality: int height>;

        $l13 = (long) $i12;

        $r45 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l13);

        interfaceinvoke $r40.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("MaxHeight", $r45);

        $r46 = r91.<com.googlecode.mp4parser.authoring.adaptivestreaming.VideoQuality: java.lang.String codecPrivateData>;

        interfaceinvoke $r40.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("CodecPrivateData", $r46);

        $i14 = r91.<com.googlecode.mp4parser.authoring.adaptivestreaming.VideoQuality: int nalLength>;

        $r47 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i14);

        interfaceinvoke $r40.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("NALUnitLengthField", $r47);

        interfaceinvoke $r34.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r40);

        i30 = i30 + 1;

     label11:
        $i8 = virtualinvoke $r0.<java.util.LinkedList: int size()>();

        if i30 < $i8 goto label10;

        i31 = 0;

        goto label13;

     label12:
        $r49 = interfaceinvoke $r30.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("c");

        $r50 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i31);

        interfaceinvoke $r49.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("n", $r50);

        $r51 = r7.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: long[] videoFragmentsDurations>;

        $l16 = $r51[i31];

        $r52 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l16);

        interfaceinvoke $r49.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("d", $r52);

        interfaceinvoke $r34.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r49);

        i31 = i31 + 1;

     label13:
        $r48 = r7.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: long[] videoFragmentsDurations>;

        $i15 = lengthof $r48;

        if i31 < $i15 goto label12;

        $r53 = r7.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: long[] audioFragmentsDurations>;

        if $r53 == null goto label18;

        $r62 = interfaceinvoke $r30.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("StreamIndex");

        interfaceinvoke $r62.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("Type", "audio");

        $r63 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l29);

        interfaceinvoke $r62.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("TimeScale", $r63);

        $r64 = r7.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: long[] audioFragmentsDurations>;

        $i17 = lengthof $r64;

        $r65 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i17);

        interfaceinvoke $r62.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("Chunks", $r65);

        interfaceinvoke $r62.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("Url", "audio/{bitrate}/{start time}");

        $i18 = virtualinvoke $r1.<java.util.LinkedList: int size()>();

        $r66 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i18);

        interfaceinvoke $r62.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("QualityLevels", $r66);

        interfaceinvoke $r31.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r62);

        i32 = 0;

        goto label15;

     label14:
        $r67 = virtualinvoke $r1.<java.util.LinkedList: java.lang.Object get(int)>(i32);

        r92 = (com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality) $r67;

        $r68 = interfaceinvoke $r30.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("QualityLevel");

        $r69 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i32);

        interfaceinvoke $r68.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("Index", $r69);

        $r70 = r92.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: java.lang.String fourCC>;

        interfaceinvoke $r68.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("FourCC", $r70);

        $l20 = r92.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: long bitrate>;

        $r71 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l20);

        interfaceinvoke $r68.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("Bitrate", $r71);

        $i21 = r92.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: int audioTag>;

        $r72 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i21);

        interfaceinvoke $r68.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("AudioTag", $r72);

        $l22 = r92.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: long samplingRate>;

        $r73 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l22);

        interfaceinvoke $r68.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("SamplingRate", $r73);

        $i23 = r92.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: int channels>;

        $r74 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i23);

        interfaceinvoke $r68.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("Channels", $r74);

        $i24 = r92.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: int bitPerSample>;

        $r75 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i24);

        interfaceinvoke $r68.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("BitsPerSample", $r75);

        $i25 = r92.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: int packetSize>;

        $r76 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i25);

        interfaceinvoke $r68.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("PacketSize", $r76);

        $r77 = r92.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: java.lang.String codecPrivateData>;

        interfaceinvoke $r68.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("CodecPrivateData", $r77);

        interfaceinvoke $r62.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r68);

        i32 = i32 + 1;

     label15:
        $i19 = virtualinvoke $r1.<java.util.LinkedList: int size()>();

        if i32 < $i19 goto label14;

        i33 = 0;

        goto label17;

     label16:
        $r79 = interfaceinvoke $r30.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("c");

        $r80 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i33);

        interfaceinvoke $r79.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("n", $r80);

        $r81 = r7.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: long[] audioFragmentsDurations>;

        $l27 = $r81[i33];

        $r82 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l27);

        interfaceinvoke $r79.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("d", $r82);

        interfaceinvoke $r62.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r79);

        i33 = i33 + 1;

     label17:
        $r78 = r7.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: long[] audioFragmentsDurations>;

        $i26 = lengthof $r78;

        if i33 < $i26 goto label16;

     label18:
        interfaceinvoke $r30.<org.w3c.dom.Document: void setXmlStandalone(boolean)>(1);

        $r54 = new javax.xml.transform.dom.DOMSource;

        $r55 = virtualinvoke r7.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: org.w3c.dom.Document customizeManifest(org.w3c.dom.Document)>($r30);

        specialinvoke $r54.<javax.xml.transform.dom.DOMSource: void <init>(org.w3c.dom.Node)>($r55);

        $r56 = new java.io.StringWriter;

        specialinvoke $r56.<java.io.StringWriter: void <init>()>();

        $r57 = new javax.xml.transform.stream.StreamResult;

        specialinvoke $r57.<javax.xml.transform.stream.StreamResult: void <init>(java.io.Writer)>($r56);

        $r58 = staticinvoke <javax.xml.transform.TransformerFactory: javax.xml.transform.TransformerFactory newInstance()>();

     label19:
        $r59 = virtualinvoke $r58.<javax.xml.transform.TransformerFactory: javax.xml.transform.Transformer newTransformer()>();

        virtualinvoke $r59.<javax.xml.transform.Transformer: void setOutputProperty(java.lang.String,java.lang.String)>("indent", "yes");

        virtualinvoke $r59.<javax.xml.transform.Transformer: void transform(javax.xml.transform.Source,javax.xml.transform.Result)>($r54, $r57);

     label20:
        goto label23;

     label21:
        $r85 := @caughtexception;

        $r86 = new java.io.IOException;

        specialinvoke $r86.<java.io.IOException: void <init>(java.lang.Throwable)>($r85);

        throw $r86;

     label22:
        $r83 := @caughtexception;

        $r84 = new java.io.IOException;

        specialinvoke $r84.<java.io.IOException: void <init>(java.lang.Throwable)>($r83);

        throw $r84;

     label23:
        $r60 = virtualinvoke $r56.<java.io.StringWriter: java.lang.StringBuffer getBuffer()>();

        $r61 = virtualinvoke $r60.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r61;

        catch javax.xml.parsers.ParserConfigurationException from label06 to label07 with label08;
        catch javax.xml.transform.TransformerConfigurationException from label19 to label20 with label21;
        catch javax.xml.transform.TransformerException from label19 to label20 with label22;
    }

    private com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality getAudioQuality(com.googlecode.mp4parser.authoring.Track, com.coremedia.iso.boxes.sampleentry.AudioSampleEntry)
    {
        com.googlecode.mp4parser.authoring.Track r10;
        com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl r0;
        java.lang.InternalError $r5;
        java.lang.String $r2, $r3, $r4, $r7, $r9;
        boolean $z0, $z1, $z2;
        com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality $r11, $r12, $r13;
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r1;
        java.lang.StringBuilder $r6, $r8;

        r0 := @this: com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl;

        r10 := @parameter0: com.googlecode.mp4parser.authoring.Track;

        r1 := @parameter1: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        $r2 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: java.lang.String getFormat(com.coremedia.iso.boxes.sampleentry.AbstractSampleEntry)>(r1);

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("mp4a");

        if $z0 == 0 goto label1;

        $r13 = specialinvoke r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality getAacAudioQuality(com.googlecode.mp4parser.authoring.Track,com.coremedia.iso.boxes.sampleentry.AudioSampleEntry)>(r10, r1);

        return $r13;

     label1:
        $r3 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: java.lang.String getFormat(com.coremedia.iso.boxes.sampleentry.AbstractSampleEntry)>(r1);

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("ec-3");

        if $z1 == 0 goto label2;

        $r12 = specialinvoke r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality getEc3AudioQuality(com.googlecode.mp4parser.authoring.Track,com.coremedia.iso.boxes.sampleentry.AudioSampleEntry)>(r10, r1);

        return $r12;

     label2:
        $r4 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: java.lang.String getFormat(com.coremedia.iso.boxes.sampleentry.AbstractSampleEntry)>(r1);

        $z2 = virtualinvoke $r4.<java.lang.String: boolean startsWith(java.lang.String)>("dts");

        if $z2 == 0 goto label3;

        $r11 = specialinvoke r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality getDtsAudioQuality(com.googlecode.mp4parser.authoring.Track,com.coremedia.iso.boxes.sampleentry.AudioSampleEntry)>(r10, r1);

        return $r11;

     label3:
        $r5 = new java.lang.InternalError;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("I don\'t know what to do with audio of type ");

        $r7 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: java.lang.String getFormat(com.coremedia.iso.boxes.sampleentry.AbstractSampleEntry)>(r1);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.InternalError: void <init>(java.lang.String)>($r9);

        throw $r5;
    }

    private com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality getAacAudioQuality(com.googlecode.mp4parser.authoring.Track, com.coremedia.iso.boxes.sampleentry.AudioSampleEntry)
    {
        com.googlecode.mp4parser.authoring.Track r9;
        com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl r8;
        com.googlecode.mp4parser.boxes.mp4.ESDescriptorBox r4;
        long $l2, $l3;
        int $i0, $i1, $i4, $i5;
        java.lang.String $r10;
        com.googlecode.mp4parser.boxes.mp4.objectdescriptors.AudioSpecificConfig $r7;
        com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality $r0;
        com.googlecode.mp4parser.boxes.mp4.objectdescriptors.ESDescriptor $r5;
        java.util.List $r2;
        com.googlecode.mp4parser.boxes.mp4.objectdescriptors.DecoderConfigDescriptor $r6;
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r1;
        java.lang.Object $r3;

        r8 := @this: com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl;

        r9 := @parameter0: com.googlecode.mp4parser.authoring.Track;

        r1 := @parameter1: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        $r0 = new com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality;

        specialinvoke $r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: void <init>()>();

        $r2 = virtualinvoke r1.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: java.util.List getBoxes(java.lang.Class)>(class "Lcom/googlecode/mp4parser/boxes/mp4/ESDescriptorBox;");

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        r4 = (com.googlecode.mp4parser.boxes.mp4.ESDescriptorBox) $r3;

        $r5 = virtualinvoke r4.<com.googlecode.mp4parser.boxes.mp4.ESDescriptorBox: com.googlecode.mp4parser.boxes.mp4.objectdescriptors.ESDescriptor getEsDescriptor()>();

        $r6 = virtualinvoke $r5.<com.googlecode.mp4parser.boxes.mp4.objectdescriptors.ESDescriptor: com.googlecode.mp4parser.boxes.mp4.objectdescriptors.DecoderConfigDescriptor getDecoderConfigDescriptor()>();

        $r7 = virtualinvoke $r6.<com.googlecode.mp4parser.boxes.mp4.objectdescriptors.DecoderConfigDescriptor: com.googlecode.mp4parser.boxes.mp4.objectdescriptors.AudioSpecificConfig getAudioSpecificInfo()>();

        $i0 = virtualinvoke $r7.<com.googlecode.mp4parser.boxes.mp4.objectdescriptors.AudioSpecificConfig: int getSbrPresentFlag()>();

        if $i0 != 1 goto label1;

        $r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: java.lang.String fourCC> = "AACH";

        goto label3;

     label1:
        $i1 = virtualinvoke $r7.<com.googlecode.mp4parser.boxes.mp4.objectdescriptors.AudioSpecificConfig: int getPsPresentFlag()>();

        if $i1 != 1 goto label2;

        $r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: java.lang.String fourCC> = "AACP";

        goto label3;

     label2:
        $r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: java.lang.String fourCC> = "AACL";

     label3:
        $l2 = virtualinvoke r8.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: long getBitrate(com.googlecode.mp4parser.authoring.Track)>(r9);

        $r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: long bitrate> = $l2;

        $r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: int audioTag> = 255;

        $l3 = virtualinvoke r1.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long getSampleRate()>();

        $r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: long samplingRate> = $l3;

        $i4 = virtualinvoke r1.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int getChannelCount()>();

        $r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: int channels> = $i4;

        $i5 = virtualinvoke r1.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int getSampleSize()>();

        $r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: int bitPerSample> = $i5;

        $r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: int packetSize> = 4;

        $r10 = specialinvoke r8.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: java.lang.String getAudioCodecPrivateData(com.googlecode.mp4parser.boxes.mp4.objectdescriptors.AudioSpecificConfig)>($r7);

        $r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: java.lang.String codecPrivateData> = $r10;

        return $r0;
    }

    private com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality getEc3AudioQuality(com.googlecode.mp4parser.authoring.Track, com.coremedia.iso.boxes.sampleentry.AudioSampleEntry)
    {
        byte[] $r24, $r25, $r26, $r34, $r37;
        byte $b5, $b6, $b7, $b8, $b9, $b13, $b14, $b15, $b16, $b21, $b22, $b23, $b24, $b29, $b30, $b31, $b32, $b36, $b37, $b38, $b39, $b43, $b44, $b45, $b46, $b49, $b50, $b51, $b52, $b53, b63, b64;
        com.googlecode.mp4parser.authoring.Sample $r32;
        com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r45, $r46, $r47, $r48, $r49, $r50, $r51;
        com.googlecode.mp4parser.boxes.EC3SpecificBox r3;
        java.lang.StringBuilder $r39, $r53;
        com.googlecode.mp4parser.authoring.Track r29;
        com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl r8;
        long $l54, $l56, $l57, $l59;
        short $s3, $s12, $s19, $s20, $s27, $s28, $s35, $s42, s61, s62;
        java.lang.String $r35, $r36, $r38, $r40;
        java.lang.RuntimeException $r43, $r44;
        com.googlecode.mp4parser.boxes.EC3SpecificBox$Entry r42;
        java.nio.ByteBuffer $r23, $r27;
        boolean $z0;
        com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality $r52;
        java.util.List $r1, $r4, $r30;
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r0;
        int $i0, $i1, $i2, $i4, $i10, $i11, $i17, $i18, $i25, $i26, $i33, $i34, $i40, $i41, $i47, $i48, $i55, $i58, $i60, $i65, $i67;
        java.util.Iterator $r5;
        java.lang.Object $r2, $r6, $r31;

        r8 := @this: com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl;

        r29 := @parameter0: com.googlecode.mp4parser.authoring.Track;

        r0 := @parameter1: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        $r1 = virtualinvoke r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: java.util.List getBoxes(java.lang.Class)>(class "Lcom/googlecode/mp4parser/boxes/EC3SpecificBox;");

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        r3 = (com.googlecode.mp4parser.boxes.EC3SpecificBox) $r2;

        if r3 != null goto label01;

        $r43 = new java.lang.RuntimeException;

        specialinvoke $r43.<java.lang.RuntimeException: void <init>(java.lang.String)>("EC-3 track misses EC3SpecificBox!");

        throw $r43;

     label01:
        s61 = 0;

        s62 = 0;

        b63 = 0;

        b64 = 0;

        $r4 = virtualinvoke r3.<com.googlecode.mp4parser.boxes.EC3SpecificBox: java.util.List getEntries()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

        goto label19;

     label02:
        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r42 = (com.googlecode.mp4parser.boxes.EC3SpecificBox$Entry) $r6;

        $i0 = r42.<com.googlecode.mp4parser.boxes.EC3SpecificBox$Entry: int acmod>;

        tableswitch($i0)
        {
            case 0: goto label03;
            case 1: goto label04;
            case 2: goto label06;
            case 3: goto label08;
            case 4: goto label10;
            case 5: goto label12;
            case 6: goto label14;
            case 7: goto label16;
            default: goto label18;
        };

     label03:
        $r44 = new java.lang.RuntimeException;

        specialinvoke $r44.<java.lang.RuntimeException: void <init>(java.lang.String)>("Smooth Streaming doesn\'t support DDP 1+1 mode");

        throw $r44;

     label04:
        $i47 = s61 + 1;

        s61 = (short) $i47;

        $i48 = r42.<com.googlecode.mp4parser.boxes.EC3SpecificBox$Entry: int num_dep_sub>;

        if $i48 <= 0 goto label05;

        $r45 = new com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask;

        specialinvoke $r45.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask: void <init>(com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl,byte,byte,com.googlecode.mp4parser.boxes.EC3SpecificBox$Entry)>(r8, b63, b64, r42);

        $r21 = virtualinvoke $r45.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask: com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask process()>();

        $b50 = virtualinvoke $r21.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask: byte getdWChannelMaskFirstByte()>();

        $b51 = b63 | $b50;

        b63 = (byte) $b51;

        $b52 = virtualinvoke $r21.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask: byte getdWChannelMaskSecondByte()>();

        $b53 = b64 | $b52;

        b64 = (byte) $b53;

        goto label18;

     label05:
        $b49 = b63 | 32;

        b63 = (byte) $b49;

        goto label18;

     label06:
        $i40 = s61 + 2;

        s61 = (short) $i40;

        $i41 = r42.<com.googlecode.mp4parser.boxes.EC3SpecificBox$Entry: int num_dep_sub>;

        if $i41 <= 0 goto label07;

        $r46 = new com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask;

        specialinvoke $r46.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask: void <init>(com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl,byte,byte,com.googlecode.mp4parser.boxes.EC3SpecificBox$Entry)>(r8, b63, b64, r42);

        $r19 = virtualinvoke $r46.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask: com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask process()>();

        $b43 = virtualinvoke $r19.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask: byte getdWChannelMaskFirstByte()>();

        $b44 = b63 | $b43;

        b63 = (byte) $b44;

        $b45 = virtualinvoke $r19.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask: byte getdWChannelMaskSecondByte()>();

        $b46 = b64 | $b45;

        b64 = (byte) $b46;

        goto label18;

     label07:
        $s42 = b63 | 192;

        b63 = (byte) $s42;

        goto label18;

     label08:
        $i33 = s61 + 3;

        s61 = (short) $i33;

        $i34 = r42.<com.googlecode.mp4parser.boxes.EC3SpecificBox$Entry: int num_dep_sub>;

        if $i34 <= 0 goto label09;

        $r47 = new com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask;

        specialinvoke $r47.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask: void <init>(com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl,byte,byte,com.googlecode.mp4parser.boxes.EC3SpecificBox$Entry)>(r8, b63, b64, r42);

        $r17 = virtualinvoke $r47.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask: com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask process()>();

        $b36 = virtualinvoke $r17.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask: byte getdWChannelMaskFirstByte()>();

        $b37 = b63 | $b36;

        b63 = (byte) $b37;

        $b38 = virtualinvoke $r17.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask: byte getdWChannelMaskSecondByte()>();

        $b39 = b64 | $b38;

        b64 = (byte) $b39;

        goto label18;

     label09:
        $s35 = b63 | 224;

        b63 = (byte) $s35;

        goto label18;

     label10:
        $i25 = s61 + 3;

        s61 = (short) $i25;

        $i26 = r42.<com.googlecode.mp4parser.boxes.EC3SpecificBox$Entry: int num_dep_sub>;

        if $i26 <= 0 goto label11;

        $r48 = new com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask;

        specialinvoke $r48.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask: void <init>(com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl,byte,byte,com.googlecode.mp4parser.boxes.EC3SpecificBox$Entry)>(r8, b63, b64, r42);

        $r15 = virtualinvoke $r48.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask: com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask process()>();

        $b29 = virtualinvoke $r15.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask: byte getdWChannelMaskFirstByte()>();

        $b30 = b63 | $b29;

        b63 = (byte) $b30;

        $b31 = virtualinvoke $r15.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask: byte getdWChannelMaskSecondByte()>();

        $b32 = b64 | $b31;

        b64 = (byte) $b32;

        goto label18;

     label11:
        $s27 = b63 | 192;

        b63 = (byte) $s27;

        $s28 = b64 | 128;

        b64 = (byte) $s28;

        goto label18;

     label12:
        $i17 = s61 + 4;

        s61 = (short) $i17;

        $i18 = r42.<com.googlecode.mp4parser.boxes.EC3SpecificBox$Entry: int num_dep_sub>;

        if $i18 <= 0 goto label13;

        $r49 = new com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask;

        specialinvoke $r49.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask: void <init>(com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl,byte,byte,com.googlecode.mp4parser.boxes.EC3SpecificBox$Entry)>(r8, b63, b64, r42);

        $r13 = virtualinvoke $r49.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask: com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask process()>();

        $b21 = virtualinvoke $r13.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask: byte getdWChannelMaskFirstByte()>();

        $b22 = b63 | $b21;

        b63 = (byte) $b22;

        $b23 = virtualinvoke $r13.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask: byte getdWChannelMaskSecondByte()>();

        $b24 = b64 | $b23;

        b64 = (byte) $b24;

        goto label18;

     label13:
        $s19 = b63 | 224;

        b63 = (byte) $s19;

        $s20 = b64 | 128;

        b64 = (byte) $s20;

        goto label18;

     label14:
        $i10 = s61 + 4;

        s61 = (short) $i10;

        $i11 = r42.<com.googlecode.mp4parser.boxes.EC3SpecificBox$Entry: int num_dep_sub>;

        if $i11 <= 0 goto label15;

        $r50 = new com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask;

        specialinvoke $r50.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask: void <init>(com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl,byte,byte,com.googlecode.mp4parser.boxes.EC3SpecificBox$Entry)>(r8, b63, b64, r42);

        $r11 = virtualinvoke $r50.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask: com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask process()>();

        $b13 = virtualinvoke $r11.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask: byte getdWChannelMaskFirstByte()>();

        $b14 = b63 | $b13;

        b63 = (byte) $b14;

        $b15 = virtualinvoke $r11.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask: byte getdWChannelMaskSecondByte()>();

        $b16 = b64 | $b15;

        b64 = (byte) $b16;

        goto label18;

     label15:
        $s12 = b63 | 204;

        b63 = (byte) $s12;

        goto label18;

     label16:
        $i1 = s61 + 5;

        s61 = (short) $i1;

        $i2 = r42.<com.googlecode.mp4parser.boxes.EC3SpecificBox$Entry: int num_dep_sub>;

        if $i2 <= 0 goto label17;

        $r51 = new com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask;

        specialinvoke $r51.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask: void <init>(com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl,byte,byte,com.googlecode.mp4parser.boxes.EC3SpecificBox$Entry)>(r8, b63, b64, r42);

        $r9 = virtualinvoke $r51.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask: com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask process()>();

        $b6 = virtualinvoke $r9.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask: byte getdWChannelMaskFirstByte()>();

        $b7 = b63 | $b6;

        b63 = (byte) $b7;

        $b8 = virtualinvoke $r9.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask: byte getdWChannelMaskSecondByte()>();

        $b9 = b64 | $b8;

        b64 = (byte) $b9;

        goto label18;

     label17:
        $s3 = b63 | 236;

        b63 = (byte) $s3;

     label18:
        $i65 = r42.<com.googlecode.mp4parser.boxes.EC3SpecificBox$Entry: int lfeon>;

        if $i65 != 1 goto label19;

        $i4 = s62 + 1;

        s62 = (short) $i4;

        $b5 = b63 | 16;

        b63 = (byte) $b5;

     label19:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label02;

        $r23 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(22);

        $r24 = newarray (byte)[2];

        $r24[1] = 6;

        virtualinvoke $r23.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r24);

        virtualinvoke $r23.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(b63);

        virtualinvoke $r23.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(b64);

        $r25 = newarray (byte)[2];

        virtualinvoke $r23.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r25);

        $r26 = newarray (byte)[16];

        $r26[0] = -81;

        $r26[1] = -121;

        $r26[2] = -5;

        $r26[3] = -89;

        $r26[4] = 2;

        $r26[5] = 45;

        $r26[6] = -5;

        $r26[7] = 66;

        $r26[8] = -92;

        $r26[9] = -44;

        $r26[10] = 5;

        $r26[11] = -51;

        $r26[12] = -109;

        $r26[13] = -124;

        $r26[14] = 59;

        $r26[15] = -35;

        virtualinvoke $r23.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r26);

        $l54 = virtualinvoke r3.<com.googlecode.mp4parser.boxes.EC3SpecificBox: long getContentSize()>();

        $i55 = (int) $l54;

        $r27 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>($i55);

        virtualinvoke r3.<com.googlecode.mp4parser.boxes.EC3SpecificBox: void getContent(java.nio.ByteBuffer)>($r27);

        $r52 = new com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality;

        specialinvoke $r52.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: void <init>()>();

        $r52.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: java.lang.String fourCC> = "EC-3";

        $l56 = virtualinvoke r8.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: long getBitrate(com.googlecode.mp4parser.authoring.Track)>(r29);

        $r52.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: long bitrate> = $l56;

        $i67 = (int) 65534;

        $r52.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: int audioTag> = $i67;

        $l57 = virtualinvoke r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long getSampleRate()>();

        $r52.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: long samplingRate> = $l57;

        $i58 = s61 + s62;

        $r52.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: int channels> = $i58;

        $r52.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: int bitPerSample> = 16;

        $r30 = interfaceinvoke r29.<com.googlecode.mp4parser.authoring.Track: java.util.List getSamples()>();

        $r31 = interfaceinvoke $r30.<java.util.List: java.lang.Object get(int)>(0);

        $r32 = (com.googlecode.mp4parser.authoring.Sample) $r31;

        $l59 = interfaceinvoke $r32.<com.googlecode.mp4parser.authoring.Sample: long getSize()>();

        $i60 = (int) $l59;

        $r52.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: int packetSize> = $i60;

        $r53 = new java.lang.StringBuilder;

        $r34 = virtualinvoke $r23.<java.nio.ByteBuffer: byte[] array()>();

        $r35 = staticinvoke <com.coremedia.iso.Hex: java.lang.String encodeHex(byte[])>($r34);

        $r36 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r35);

        specialinvoke $r53.<java.lang.StringBuilder: void <init>(java.lang.String)>($r36);

        $r37 = virtualinvoke $r27.<java.nio.ByteBuffer: byte[] array()>();

        $r38 = staticinvoke <com.coremedia.iso.Hex: java.lang.String encodeHex(byte[])>($r37);

        $r39 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        $r52.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: java.lang.String codecPrivateData> = $r40;

        return $r52;
    }

    private com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality getDtsAudioQuality(com.googlecode.mp4parser.authoring.Track, com.coremedia.iso.boxes.sampleentry.AudioSampleEntry)
    {
        byte[] $r9, $r11, $r19, $r22;
        byte $b3, $b5, $b8, $b10, $b12, $b14, $b16, $b19, $b21, $b23, $b25, $b28, $b31;
        com.googlecode.mp4parser.boxes.DTSSpecificBox r3;
        com.googlecode.mp4parser.authoring.Sample $r17;
        java.lang.StringBuilder $r24, $r28;
        com.googlecode.mp4parser.authoring.Track r6;
        com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl r5;
        long $l32, $l33, $l35;
        short s1, $s2, s37, s38;
        java.lang.String $r13, $r20, $r21, $r23, $r25;
        java.lang.RuntimeException $r26;
        java.nio.ByteBuffer $r4, $r10;
        int[] $r8, $r14;
        com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality $r27;
        java.util.List $r1, $r15;
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r0;
        int $i0, $i4, $i6, $i7, $i9, $i11, $i13, $i15, $i17, $i18, $i20, $i22, $i24, $i26, $i27, $i29, $i30, $i34, $i36, $i39, $i41;
        java.lang.Object $r2, $r16;

        r5 := @this: com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl;

        r6 := @parameter0: com.googlecode.mp4parser.authoring.Track;

        r0 := @parameter1: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        $r1 = virtualinvoke r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: java.util.List getBoxes(java.lang.Class)>(class "Lcom/googlecode/mp4parser/boxes/DTSSpecificBox;");

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        r3 = (com.googlecode.mp4parser.boxes.DTSSpecificBox) $r2;

        if r3 != null goto label1;

        $r26 = new java.lang.RuntimeException;

        specialinvoke $r26.<java.lang.RuntimeException: void <init>(java.lang.String)>("DTS track misses DTSSpecificBox!");

        throw $r26;

     label1:
        $r4 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(22);

        $i0 = virtualinvoke r3.<com.googlecode.mp4parser.boxes.DTSSpecificBox: int getFrameDuration()>();

        s1 = 0;

        s38 = 0;

        s37 = 0;

        tableswitch($i0)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            default: goto label6;
        };

     label2:
        s1 = 512;

        s38 = 512;

        s37 = 512;

        goto label6;

     label3:
        s1 = 1024;

        s38 = 1024;

        s37 = 1024;

        goto label6;

     label4:
        s1 = 2048;

        s38 = 2048;

        s37 = 2048;

        goto label6;

     label5:
        s1 = 4096;

        s38 = 4096;

        s37 = 4096;

     label6:
        $s2 = s37 & 255;

        $b3 = (byte) $s2;

        virtualinvoke $r4.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b3);

        $i4 = s38 >>> 8;

        $b5 = (byte) $i4;

        virtualinvoke $r4.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b5);

        $r8 = specialinvoke r5.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: int[] getNumChannelsAndMask(com.googlecode.mp4parser.boxes.DTSSpecificBox)>(r3);

        $i6 = $r8[1];

        $i7 = $i6 & 255;

        $b8 = (byte) $i7;

        virtualinvoke $r4.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b8);

        $i9 = $i6 >>> 8;

        $b10 = (byte) $i9;

        virtualinvoke $r4.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b10);

        $i11 = $i6 >>> 16;

        $b12 = (byte) $i11;

        virtualinvoke $r4.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b12);

        $i13 = $i6 >>> 24;

        $b14 = (byte) $i13;

        virtualinvoke $r4.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b14);

        $r9 = newarray (byte)[16];

        $r9[0] = -82;

        $r9[1] = -28;

        $r9[2] = -65;

        $r9[3] = 94;

        $r9[4] = 97;

        $r9[5] = 94;

        $r9[6] = 65;

        $r9[7] = -121;

        $r9[8] = -110;

        $r9[9] = -4;

        $r9[10] = -92;

        $r9[11] = -127;

        $r9[12] = 38;

        $r9[13] = -103;

        $r9[14] = 2;

        $r9[15] = 17;

        virtualinvoke $r4.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r9);

        $r10 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(8);

        $i15 = virtualinvoke r3.<com.googlecode.mp4parser.boxes.DTSSpecificBox: int getStreamConstruction()>();

        $b16 = (byte) $i15;

        virtualinvoke $r10.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b16);

        $i17 = virtualinvoke r3.<com.googlecode.mp4parser.boxes.DTSSpecificBox: int getChannelLayout()>();

        $i18 = $i17 & 255;

        $b19 = (byte) $i18;

        virtualinvoke $r10.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b19);

        $i20 = $i17 >>> 8;

        $b21 = (byte) $i20;

        virtualinvoke $r10.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b21);

        $i22 = $i17 >>> 16;

        $b23 = (byte) $i22;

        virtualinvoke $r10.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b23);

        $i24 = $i17 >>> 24;

        $b25 = (byte) $i24;

        virtualinvoke $r10.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b25);

        $i26 = virtualinvoke r3.<com.googlecode.mp4parser.boxes.DTSSpecificBox: int getMultiAssetFlag()>();

        $i27 = $i26 << 1;

        $b28 = (byte) $i27;

        $i29 = virtualinvoke r3.<com.googlecode.mp4parser.boxes.DTSSpecificBox: int getLBRDurationMod()>();

        $i39 = (int) $b28;

        $i30 = $i39 | $i29;

        $b31 = (byte) $i30;

        virtualinvoke $r10.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b31);

        $r11 = newarray (byte)[2];

        virtualinvoke $r10.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r11);

        $r27 = new com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality;

        specialinvoke $r27.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: void <init>()>();

        $r13 = virtualinvoke r5.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: java.lang.String getFormat(com.coremedia.iso.boxes.sampleentry.AbstractSampleEntry)>(r0);

        $r27.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: java.lang.String fourCC> = $r13;

        $l32 = virtualinvoke r3.<com.googlecode.mp4parser.boxes.DTSSpecificBox: long getAvgBitRate()>();

        $r27.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: long bitrate> = $l32;

        $i41 = (int) 65534;

        $r27.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: int audioTag> = $i41;

        $l33 = virtualinvoke r3.<com.googlecode.mp4parser.boxes.DTSSpecificBox: long getDTSSamplingFrequency()>();

        $r27.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: long samplingRate> = $l33;

        $r14 = specialinvoke r5.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: int[] getNumChannelsAndMask(com.googlecode.mp4parser.boxes.DTSSpecificBox)>(r3);

        $i34 = $r14[0];

        $r27.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: int channels> = $i34;

        $r27.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: int bitPerSample> = 16;

        $r15 = interfaceinvoke r6.<com.googlecode.mp4parser.authoring.Track: java.util.List getSamples()>();

        $r16 = interfaceinvoke $r15.<java.util.List: java.lang.Object get(int)>(0);

        $r17 = (com.googlecode.mp4parser.authoring.Sample) $r16;

        $l35 = interfaceinvoke $r17.<com.googlecode.mp4parser.authoring.Sample: long getSize()>();

        $i36 = (int) $l35;

        $r27.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: int packetSize> = $i36;

        $r28 = new java.lang.StringBuilder;

        $r19 = virtualinvoke $r4.<java.nio.ByteBuffer: byte[] array()>();

        $r20 = staticinvoke <com.coremedia.iso.Hex: java.lang.String encodeHex(byte[])>($r19);

        $r21 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r20);

        specialinvoke $r28.<java.lang.StringBuilder: void <init>(java.lang.String)>($r21);

        $r22 = virtualinvoke $r10.<java.nio.ByteBuffer: byte[] array()>();

        $r23 = staticinvoke <com.coremedia.iso.Hex: java.lang.String encodeHex(byte[])>($r22);

        $r24 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        $r27.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: java.lang.String codecPrivateData> = $r25;

        return $r27;
    }

    private int[] getNumChannelsAndMask(com.googlecode.mp4parser.boxes.DTSSpecificBox)
    {
        int[] $r1;
        com.googlecode.mp4parser.boxes.DTSSpecificBox r0;
        com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19, i20, i21, i22, i23, i24, i25, i26, i27, i28, i29, $i31, $i33, $i35;

        r2 := @this: com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl;

        r0 := @parameter0: com.googlecode.mp4parser.boxes.DTSSpecificBox;

        $i0 = virtualinvoke r0.<com.googlecode.mp4parser.boxes.DTSSpecificBox: int getChannelLayout()>();

        i19 = 0;

        i20 = 0;

        $i1 = $i0 & 1;

        if $i1 != 1 goto label01;

        i19 = 1;

        i20 = 4;

     label01:
        $i2 = $i0 & 2;

        if $i2 != 2 goto label02;

        i19 = i19 + 2;

        i21 = i20 | 1;

        i20 = i21 | 2;

     label02:
        $i3 = $i0 & 4;

        if $i3 != 4 goto label03;

        i19 = i19 + 2;

        i22 = i20 | 16;

        i20 = i22 | 32;

     label03:
        $i4 = $i0 & 8;

        if $i4 != 8 goto label04;

        i19 = i19 + 1;

        i20 = i20 | 8;

     label04:
        $i5 = $i0 & 16;

        if $i5 != 16 goto label05;

        i19 = i19 + 1;

        i20 = i20 | 256;

     label05:
        $i6 = $i0 & 32;

        if $i6 != 32 goto label06;

        i19 = i19 + 2;

        i23 = i20 | 4096;

        i20 = i23 | 16384;

     label06:
        $i7 = $i0 & 64;

        if $i7 != 64 goto label07;

        i19 = i19 + 2;

        i24 = i20 | 16;

        i20 = i24 | 32;

     label07:
        $i8 = $i0 & 128;

        if $i8 != 128 goto label08;

        i19 = i19 + 1;

        i20 = i20 | 8192;

     label08:
        $i9 = $i0 & 256;

        if $i9 != 256 goto label09;

        i19 = i19 + 1;

        i20 = i20 | 2048;

     label09:
        $i10 = $i0 & 512;

        if $i10 != 512 goto label10;

        i19 = i19 + 2;

        i25 = i20 | 64;

        i20 = i25 | 128;

     label10:
        $i11 = $i0 & 1024;

        if $i11 != 1024 goto label11;

        i19 = i19 + 2;

        i26 = i20 | 512;

        i20 = i26 | 1024;

     label11:
        $i12 = $i0 & 2048;

        if $i12 != 2048 goto label12;

        i19 = i19 + 2;

        i27 = i20 | 16;

        i20 = i27 | 32;

     label12:
        $i13 = $i0 & 4096;

        if $i13 != 4096 goto label13;

        i19 = i19 + 1;

        i20 = i20 | 8;

     label13:
        $i14 = $i0 & 8192;

        if $i14 != 8192 goto label14;

        i19 = i19 + 2;

        i28 = i20 | 16;

        i20 = i28 | 32;

     label14:
        $i15 = $i0 & 16384;

        if $i15 != 16384 goto label15;

        i19 = i19 + 1;

        i20 = i20 | 65536;

     label15:
        $i31 = (int) 32768;

        $i16 = $i0 & $i31;

        $i33 = (int) 32768;

        if $i16 != $i33 goto label16;

        i19 = i19 + 2;

        $i35 = (int) 32768;

        i29 = i20 | $i35;

        i20 = i29 | 131072;

     label16:
        $i17 = $i0 & 65536;

        if $i17 != 65536 goto label17;

        i19 = i19 + 1;

     label17:
        $i18 = $i0 & 131072;

        if $i18 != 131072 goto label18;

        i19 = i19 + 2;

     label18:
        $r1 = newarray (int)[2];

        $r1[0] = i19;

        $r1[1] = i20;

        return $r1;
    }

    private java.lang.String getAudioCodecPrivateData(com.googlecode.mp4parser.boxes.mp4.objectdescriptors.AudioSpecificConfig)
    {
        byte[] $r1;
        com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl r3;
        java.lang.String $r2;
        com.googlecode.mp4parser.boxes.mp4.objectdescriptors.AudioSpecificConfig r0;

        r3 := @this: com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl;

        r0 := @parameter0: com.googlecode.mp4parser.boxes.mp4.objectdescriptors.AudioSpecificConfig;

        $r1 = virtualinvoke r0.<com.googlecode.mp4parser.boxes.mp4.objectdescriptors.AudioSpecificConfig: byte[] getConfigBytes()>();

        $r2 = staticinvoke <com.coremedia.iso.Hex: java.lang.String encodeHex(byte[])>($r1);

        return $r2;
    }

    private com.googlecode.mp4parser.authoring.adaptivestreaming.VideoQuality getVideoQuality(com.googlecode.mp4parser.authoring.Track, com.coremedia.iso.boxes.sampleentry.VisualSampleEntry)
    {
        com.googlecode.mp4parser.authoring.Track r13;
        com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl r0;
        byte[] $r14;
        long $l0;
        com.coremedia.iso.boxes.h264.AvcConfigurationBox r11;
        com.googlecode.mp4parser.authoring.adaptivestreaming.VideoQuality $r12;
        int $i1, $i2, $i3, $i4;
        java.lang.InternalError $r4;
        java.lang.String $r2, $r3, $r6, $r8, $r15;
        boolean $z0;
        java.util.List $r9;
        java.lang.StringBuilder $r5, $r7;
        java.lang.Object $r10;
        com.coremedia.iso.boxes.sampleentry.VisualSampleEntry r1;

        r0 := @this: com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl;

        r13 := @parameter0: com.googlecode.mp4parser.authoring.Track;

        r1 := @parameter1: com.coremedia.iso.boxes.sampleentry.VisualSampleEntry;

        $r2 = "avc1";

        $r3 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: java.lang.String getFormat(com.coremedia.iso.boxes.sampleentry.AbstractSampleEntry)>(r1);

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $r9 = virtualinvoke r1.<com.coremedia.iso.boxes.sampleentry.VisualSampleEntry: java.util.List getBoxes(java.lang.Class)>(class "Lcom/coremedia/iso/boxes/h264/AvcConfigurationBox;");

        $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(0);

        r11 = (com.coremedia.iso.boxes.h264.AvcConfigurationBox) $r10;

        $r12 = new com.googlecode.mp4parser.authoring.adaptivestreaming.VideoQuality;

        specialinvoke $r12.<com.googlecode.mp4parser.authoring.adaptivestreaming.VideoQuality: void <init>()>();

        $l0 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: long getBitrate(com.googlecode.mp4parser.authoring.Track)>(r13);

        $r12.<com.googlecode.mp4parser.authoring.adaptivestreaming.VideoQuality: long bitrate> = $l0;

        $r14 = specialinvoke r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: byte[] getAvcCodecPrivateData(com.coremedia.iso.boxes.h264.AvcConfigurationBox)>(r11);

        $r15 = staticinvoke <com.coremedia.iso.Hex: java.lang.String encodeHex(byte[])>($r14);

        $r12.<com.googlecode.mp4parser.authoring.adaptivestreaming.VideoQuality: java.lang.String codecPrivateData> = $r15;

        $r12.<com.googlecode.mp4parser.authoring.adaptivestreaming.VideoQuality: java.lang.String fourCC> = "AVC1";

        $i1 = virtualinvoke r1.<com.coremedia.iso.boxes.sampleentry.VisualSampleEntry: int getWidth()>();

        $r12.<com.googlecode.mp4parser.authoring.adaptivestreaming.VideoQuality: int width> = $i1;

        $i2 = virtualinvoke r1.<com.coremedia.iso.boxes.sampleentry.VisualSampleEntry: int getHeight()>();

        $r12.<com.googlecode.mp4parser.authoring.adaptivestreaming.VideoQuality: int height> = $i2;

        $i3 = virtualinvoke r11.<com.coremedia.iso.boxes.h264.AvcConfigurationBox: int getLengthSizeMinusOne()>();

        $i4 = $i3 + 1;

        $r12.<com.googlecode.mp4parser.authoring.adaptivestreaming.VideoQuality: int nalLength> = $i4;

        goto label2;

     label1:
        $r4 = new java.lang.InternalError;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("I don\'t know how to handle video of type ");

        $r6 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: java.lang.String getFormat(com.coremedia.iso.boxes.sampleentry.AbstractSampleEntry)>(r1);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.InternalError: void <init>(java.lang.String)>($r8);

        throw $r4;

     label2:
        return $r12;
    }

    private byte[] getAvcCodecPrivateData(com.coremedia.iso.boxes.h264.AvcConfigurationBox)
    {
        byte[] $r4, $r7, $r10, r14, r15;
        com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl r13;
        java.io.ByteArrayOutputStream $r3;
        com.coremedia.iso.boxes.h264.AvcConfigurationBox r0;
        boolean $z0, $z1;
        java.util.Iterator $r5, $r8;
        java.io.IOException $r11;
        java.lang.RuntimeException $r12;
        java.util.List $r1, $r2;
        java.lang.Object $r6, $r9;

        r13 := @this: com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl;

        r0 := @parameter0: com.coremedia.iso.boxes.h264.AvcConfigurationBox;

        $r1 = virtualinvoke r0.<com.coremedia.iso.boxes.h264.AvcConfigurationBox: java.util.List getSequenceParameterSets()>();

        $r2 = virtualinvoke r0.<com.coremedia.iso.boxes.h264.AvcConfigurationBox: java.util.List getPictureParameterSets()>();

        $r3 = new java.io.ByteArrayOutputStream;

        specialinvoke $r3.<java.io.ByteArrayOutputStream: void <init>()>();

     label1:
        $r4 = newarray (byte)[4];

        $r4[3] = 1;

        virtualinvoke $r3.<java.io.ByteArrayOutputStream: void write(byte[])>($r4);

        $r5 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        goto label3;

     label2:
        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r14 = (byte[]) $r6;

        virtualinvoke $r3.<java.io.ByteArrayOutputStream: void write(byte[])>(r14);

     label3:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        $r7 = newarray (byte)[4];

        $r7[3] = 1;

        virtualinvoke $r3.<java.io.ByteArrayOutputStream: void write(byte[])>($r7);

        $r8 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

        goto label5;

     label4:
        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r15 = (byte[]) $r9;

        virtualinvoke $r3.<java.io.ByteArrayOutputStream: void write(byte[])>(r15);

     label5:
        $z1 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label4;

     label6:
        goto label8;

     label7:
        $r11 := @caughtexception;

        $r12 = new java.lang.RuntimeException;

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String)>("ByteArrayOutputStream do not throw IOException ?!?!?");

        throw $r12;

     label8:
        $r10 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r10;

        catch java.io.IOException from label1 to label6 with label7;
    }
}
