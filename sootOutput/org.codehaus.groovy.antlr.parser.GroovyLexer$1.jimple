class org.codehaus.groovy.antlr.parser.GroovyLexer$1 extends java.lang.Object implements groovyjarjarantlr.TokenStream
{
    private final org.codehaus.groovy.antlr.parser.GroovyLexer this$0;

    void <init>(org.codehaus.groovy.antlr.parser.GroovyLexer)
    {
        org.codehaus.groovy.antlr.parser.GroovyLexer r1;
        org.codehaus.groovy.antlr.parser.GroovyLexer$1 r0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer$1;

        r1 := @parameter0: org.codehaus.groovy.antlr.parser.GroovyLexer;

        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer$1: org.codehaus.groovy.antlr.parser.GroovyLexer this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public groovyjarjarantlr.Token nextToken() throws groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.TokenStreamIOException $r16;
        groovyjarjarantlr.Token $r3, $r23, $r25;
        boolean $z0, $z1;
        org.codehaus.groovy.antlr.parser.GroovyLexer $r1, $r2, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r21, $r22, $r24, $r26;
        groovyjarjarantlr.CharStreamException $r13;
        groovyjarjarantlr.RecognitionException $r19;
        groovyjarjarantlr.CharStreamIOException $r17;
        groovyjarjarantlr.TokenStreamRecognitionException $r20;
        java.lang.AssertionError $r12;
        org.codehaus.groovy.antlr.parser.GroovyLexer$1 r0;
        int $i0, $i1, $i2, i3, $i4, i5;
        java.lang.String $r15;
        java.io.IOException $r18;
        groovyjarjarantlr.TokenStreamException $r14;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer$1;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer$1: org.codehaus.groovy.antlr.parser.GroovyLexer this$0>;

        $i0 = $r1.<org.codehaus.groovy.antlr.parser.GroovyLexer: int stringCtorState>;

        if $i0 < 8 goto label11;

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer$1: org.codehaus.groovy.antlr.parser.GroovyLexer this$0>;

        $i2 = $r6.<org.codehaus.groovy.antlr.parser.GroovyLexer: int stringCtorState>;

        i3 = $i2 & 3;

        $r7 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer$1: org.codehaus.groovy.antlr.parser.GroovyLexer this$0>;

        $r7.<org.codehaus.groovy.antlr.parser.GroovyLexer: int stringCtorState> = 0;

        $r8 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer$1: org.codehaus.groovy.antlr.parser.GroovyLexer this$0>;

        virtualinvoke $r8.<org.codehaus.groovy.antlr.parser.GroovyLexer: void resetText()>();

     label01:
        tableswitch(i3)
        {
            case 0: goto label02;
            case 1: goto label03;
            case 2: goto label04;
            default: goto label05;
        };

     label02:
        $r11 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer$1: org.codehaus.groovy.antlr.parser.GroovyLexer this$0>;

        virtualinvoke $r11.<org.codehaus.groovy.antlr.parser.GroovyLexer: int mSTRING_CTOR_END(boolean,boolean,boolean)>(1, 0, 0);

        goto label06;

     label03:
        $r10 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer$1: org.codehaus.groovy.antlr.parser.GroovyLexer this$0>;

        virtualinvoke $r10.<org.codehaus.groovy.antlr.parser.GroovyLexer: int mSTRING_CTOR_END(boolean,boolean,boolean)>(1, 0, 1);

        goto label06;

     label04:
        $r9 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer$1: org.codehaus.groovy.antlr.parser.GroovyLexer this$0>;

        virtualinvoke $r9.<org.codehaus.groovy.antlr.parser.GroovyLexer: int mREGEXP_CTOR_END(boolean,boolean)>(1, 0);

        goto label06;

     label05:
        $r12 = new java.lang.AssertionError;

        specialinvoke $r12.<java.lang.AssertionError: void <init>(boolean)>(0);

        throw $r12;

     label06:
        $r21 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer$1: org.codehaus.groovy.antlr.parser.GroovyLexer this$0>;

        $r22 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer$1: org.codehaus.groovy.antlr.parser.GroovyLexer this$0>;

        $r23 = staticinvoke <org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token access$000(org.codehaus.groovy.antlr.parser.GroovyLexer)>($r22);

        $i4 = virtualinvoke $r23.<groovyjarjarantlr.Token: int getType()>();

        $r21.<org.codehaus.groovy.antlr.parser.GroovyLexer: int lastSigTokenType> = $i4;

        $r24 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer$1: org.codehaus.groovy.antlr.parser.GroovyLexer this$0>;

        $r25 = staticinvoke <org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token access$100(org.codehaus.groovy.antlr.parser.GroovyLexer)>($r24);

     label07:
        return $r25;

     label08:
        $r19 := @caughtexception;

        $r20 = new groovyjarjarantlr.TokenStreamRecognitionException;

        specialinvoke $r20.<groovyjarjarantlr.TokenStreamRecognitionException: void <init>(groovyjarjarantlr.RecognitionException)>($r19);

        throw $r20;

     label09:
        $r13 := @caughtexception;

        $z1 = $r13 instanceof groovyjarjarantlr.CharStreamIOException;

        if $z1 == 0 goto label10;

        $r16 = new groovyjarjarantlr.TokenStreamIOException;

        $r17 = (groovyjarjarantlr.CharStreamIOException) $r13;

        $r18 = $r17.<groovyjarjarantlr.CharStreamIOException: java.io.IOException io>;

        specialinvoke $r16.<groovyjarjarantlr.TokenStreamIOException: void <init>(java.io.IOException)>($r18);

        throw $r16;

     label10:
        $r14 = new groovyjarjarantlr.TokenStreamException;

        $r15 = virtualinvoke $r13.<groovyjarjarantlr.CharStreamException: java.lang.String getMessage()>();

        specialinvoke $r14.<groovyjarjarantlr.TokenStreamException: void <init>(java.lang.String)>($r15);

        throw $r14;

     label11:
        $r2 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer$1: org.codehaus.groovy.antlr.parser.GroovyLexer this$0>;

        $r3 = virtualinvoke $r2.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token nextToken()>();

        $i1 = virtualinvoke $r3.<groovyjarjarantlr.Token: int getType()>();

        i5 = $i1;

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer$1: org.codehaus.groovy.antlr.parser.GroovyLexer this$0>;

        $z0 = staticinvoke <org.codehaus.groovy.antlr.parser.GroovyLexer: boolean access$200(org.codehaus.groovy.antlr.parser.GroovyLexer)>($r4);

        if $z0 == 0 goto label13;

        tableswitch($i1)
        {
            case 201: goto label12;
            case 202: goto label12;
            case 203: goto label12;
            case 204: goto label12;
            default: goto label13;
        };

     label12:
        $r5 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer$1: org.codehaus.groovy.antlr.parser.GroovyLexer this$0>;

        i5 = $r5.<org.codehaus.groovy.antlr.parser.GroovyLexer: int lastSigTokenType>;

     label13:
        $r26 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer$1: org.codehaus.groovy.antlr.parser.GroovyLexer this$0>;

        $r26.<org.codehaus.groovy.antlr.parser.GroovyLexer: int lastSigTokenType> = i5;

        return $r3;

        catch groovyjarjarantlr.RecognitionException from label01 to label07 with label08;
        catch groovyjarjarantlr.CharStreamException from label01 to label07 with label09;
    }
}
