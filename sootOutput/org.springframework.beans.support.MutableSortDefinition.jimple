public class org.springframework.beans.support.MutableSortDefinition extends java.lang.Object implements org.springframework.beans.support.SortDefinition, java.io.Serializable
{
    private java.lang.String property;
    private boolean ignoreCase;
    private boolean ascending;
    private boolean toggleAscendingOnProperty;

    public void <init>()
    {
        org.springframework.beans.support.MutableSortDefinition r0;

        r0 := @this: org.springframework.beans.support.MutableSortDefinition;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.springframework.beans.support.MutableSortDefinition: java.lang.String property> = "";

        r0.<org.springframework.beans.support.MutableSortDefinition: boolean ignoreCase> = 1;

        r0.<org.springframework.beans.support.MutableSortDefinition: boolean ascending> = 1;

        r0.<org.springframework.beans.support.MutableSortDefinition: boolean toggleAscendingOnProperty> = 0;

        return;
    }

    public void <init>(org.springframework.beans.support.SortDefinition)
    {
        org.springframework.beans.support.MutableSortDefinition r0;
        java.lang.String $r2;
        org.springframework.beans.support.SortDefinition r1;
        boolean $z0, $z1;

        r0 := @this: org.springframework.beans.support.MutableSortDefinition;

        r1 := @parameter0: org.springframework.beans.support.SortDefinition;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.springframework.beans.support.MutableSortDefinition: java.lang.String property> = "";

        r0.<org.springframework.beans.support.MutableSortDefinition: boolean ignoreCase> = 1;

        r0.<org.springframework.beans.support.MutableSortDefinition: boolean ascending> = 1;

        r0.<org.springframework.beans.support.MutableSortDefinition: boolean toggleAscendingOnProperty> = 0;

        $r2 = interfaceinvoke r1.<org.springframework.beans.support.SortDefinition: java.lang.String getProperty()>();

        r0.<org.springframework.beans.support.MutableSortDefinition: java.lang.String property> = $r2;

        $z0 = interfaceinvoke r1.<org.springframework.beans.support.SortDefinition: boolean isIgnoreCase()>();

        r0.<org.springframework.beans.support.MutableSortDefinition: boolean ignoreCase> = $z0;

        $z1 = interfaceinvoke r1.<org.springframework.beans.support.SortDefinition: boolean isAscending()>();

        r0.<org.springframework.beans.support.MutableSortDefinition: boolean ascending> = $z1;

        return;
    }

    public void <init>(java.lang.String, boolean, boolean)
    {
        org.springframework.beans.support.MutableSortDefinition r0;
        java.lang.String r1;
        boolean z0, z1;

        r0 := @this: org.springframework.beans.support.MutableSortDefinition;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.springframework.beans.support.MutableSortDefinition: java.lang.String property> = "";

        r0.<org.springframework.beans.support.MutableSortDefinition: boolean ignoreCase> = 1;

        r0.<org.springframework.beans.support.MutableSortDefinition: boolean ascending> = 1;

        r0.<org.springframework.beans.support.MutableSortDefinition: boolean toggleAscendingOnProperty> = 0;

        r0.<org.springframework.beans.support.MutableSortDefinition: java.lang.String property> = r1;

        r0.<org.springframework.beans.support.MutableSortDefinition: boolean ignoreCase> = z0;

        r0.<org.springframework.beans.support.MutableSortDefinition: boolean ascending> = z1;

        return;
    }

    public void <init>(boolean)
    {
        org.springframework.beans.support.MutableSortDefinition r0;
        boolean z0;

        r0 := @this: org.springframework.beans.support.MutableSortDefinition;

        z0 := @parameter0: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.springframework.beans.support.MutableSortDefinition: java.lang.String property> = "";

        r0.<org.springframework.beans.support.MutableSortDefinition: boolean ignoreCase> = 1;

        r0.<org.springframework.beans.support.MutableSortDefinition: boolean ascending> = 1;

        r0.<org.springframework.beans.support.MutableSortDefinition: boolean toggleAscendingOnProperty> = 0;

        r0.<org.springframework.beans.support.MutableSortDefinition: boolean toggleAscendingOnProperty> = z0;

        return;
    }

    public void setProperty(java.lang.String)
    {
        org.springframework.beans.support.MutableSortDefinition r1;
        java.lang.String r0, $r2;
        boolean $z0, $z1, $z2, $z3, $z4;

        r1 := @this: org.springframework.beans.support.MutableSortDefinition;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <org.springframework.util.StringUtils: boolean hasLength(java.lang.String)>(r0);

        if $z0 != 0 goto label1;

        r1.<org.springframework.beans.support.MutableSortDefinition: java.lang.String property> = "";

        goto label5;

     label1:
        $z1 = virtualinvoke r1.<org.springframework.beans.support.MutableSortDefinition: boolean isToggleAscendingOnProperty()>();

        if $z1 == 0 goto label4;

        $r2 = r1.<org.springframework.beans.support.MutableSortDefinition: java.lang.String property>;

        $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z2 == 0 goto label2;

        $z3 = r1.<org.springframework.beans.support.MutableSortDefinition: boolean ascending>;

        if $z3 == 0 goto label2;

        $z4 = 0;

        goto label3;

     label2:
        $z4 = 1;

     label3:
        r1.<org.springframework.beans.support.MutableSortDefinition: boolean ascending> = $z4;

     label4:
        r1.<org.springframework.beans.support.MutableSortDefinition: java.lang.String property> = r0;

     label5:
        return;
    }

    public java.lang.String getProperty()
    {
        org.springframework.beans.support.MutableSortDefinition r0;
        java.lang.String $r1;

        r0 := @this: org.springframework.beans.support.MutableSortDefinition;

        $r1 = r0.<org.springframework.beans.support.MutableSortDefinition: java.lang.String property>;

        return $r1;
    }

    public void setIgnoreCase(boolean)
    {
        org.springframework.beans.support.MutableSortDefinition r0;
        boolean z0;

        r0 := @this: org.springframework.beans.support.MutableSortDefinition;

        z0 := @parameter0: boolean;

        r0.<org.springframework.beans.support.MutableSortDefinition: boolean ignoreCase> = z0;

        return;
    }

    public boolean isIgnoreCase()
    {
        org.springframework.beans.support.MutableSortDefinition r0;
        boolean $z0;

        r0 := @this: org.springframework.beans.support.MutableSortDefinition;

        $z0 = r0.<org.springframework.beans.support.MutableSortDefinition: boolean ignoreCase>;

        return $z0;
    }

    public void setAscending(boolean)
    {
        org.springframework.beans.support.MutableSortDefinition r0;
        boolean z0;

        r0 := @this: org.springframework.beans.support.MutableSortDefinition;

        z0 := @parameter0: boolean;

        r0.<org.springframework.beans.support.MutableSortDefinition: boolean ascending> = z0;

        return;
    }

    public boolean isAscending()
    {
        org.springframework.beans.support.MutableSortDefinition r0;
        boolean $z0;

        r0 := @this: org.springframework.beans.support.MutableSortDefinition;

        $z0 = r0.<org.springframework.beans.support.MutableSortDefinition: boolean ascending>;

        return $z0;
    }

    public void setToggleAscendingOnProperty(boolean)
    {
        org.springframework.beans.support.MutableSortDefinition r0;
        boolean z0;

        r0 := @this: org.springframework.beans.support.MutableSortDefinition;

        z0 := @parameter0: boolean;

        r0.<org.springframework.beans.support.MutableSortDefinition: boolean toggleAscendingOnProperty> = z0;

        return;
    }

    public boolean isToggleAscendingOnProperty()
    {
        org.springframework.beans.support.MutableSortDefinition r0;
        boolean $z0;

        r0 := @this: org.springframework.beans.support.MutableSortDefinition;

        $z0 = r0.<org.springframework.beans.support.MutableSortDefinition: boolean toggleAscendingOnProperty>;

        return $z0;
    }

    public boolean equals(java.lang.Object)
    {
        org.springframework.beans.support.MutableSortDefinition r0;
        org.springframework.beans.support.SortDefinition r2;
        java.lang.Object r1;
        java.lang.String $r3, $r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r0 := @this: org.springframework.beans.support.MutableSortDefinition;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof org.springframework.beans.support.SortDefinition;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (org.springframework.beans.support.SortDefinition) r1;

        $r3 = virtualinvoke r0.<org.springframework.beans.support.MutableSortDefinition: java.lang.String getProperty()>();

        $r4 = interfaceinvoke r2.<org.springframework.beans.support.SortDefinition: java.lang.String getProperty()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z1 == 0 goto label3;

        $z2 = virtualinvoke r0.<org.springframework.beans.support.MutableSortDefinition: boolean isAscending()>();

        $z3 = interfaceinvoke r2.<org.springframework.beans.support.SortDefinition: boolean isAscending()>();

        if $z2 != $z3 goto label3;

        $z4 = virtualinvoke r0.<org.springframework.beans.support.MutableSortDefinition: boolean isIgnoreCase()>();

        $z5 = interfaceinvoke r2.<org.springframework.beans.support.SortDefinition: boolean isIgnoreCase()>();

        if $z4 != $z5 goto label3;

        return 1;

     label3:
        return 0;
    }

    public int hashCode()
    {
        org.springframework.beans.support.MutableSortDefinition r0;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r1;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.springframework.beans.support.MutableSortDefinition;

        $r1 = virtualinvoke r0.<org.springframework.beans.support.MutableSortDefinition: java.lang.String getProperty()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        $i1 = 29 * $i0;

        $z0 = virtualinvoke r0.<org.springframework.beans.support.MutableSortDefinition: boolean isIgnoreCase()>();

        if $z0 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        $i4 = $i1 + $z2;

        $i2 = 29 * $i4;

        $z1 = virtualinvoke r0.<org.springframework.beans.support.MutableSortDefinition: boolean isAscending()>();

        if $z1 == 0 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        $i3 = $i2 + $z3;

        return $i3;
    }
}
