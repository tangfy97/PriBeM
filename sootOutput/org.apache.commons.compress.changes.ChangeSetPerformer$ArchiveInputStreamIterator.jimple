class org.apache.commons.compress.changes.ChangeSetPerformer$ArchiveInputStreamIterator extends java.lang.Object implements org.apache.commons.compress.changes.ChangeSetPerformer$ArchiveEntryIterator
{
    private final org.apache.commons.compress.archivers.ArchiveInputStream in;
    private org.apache.commons.compress.archivers.ArchiveEntry next;

    void <init>(org.apache.commons.compress.archivers.ArchiveInputStream)
    {
        org.apache.commons.compress.archivers.ArchiveInputStream r1;
        org.apache.commons.compress.changes.ChangeSetPerformer$ArchiveInputStreamIterator r0;

        r0 := @this: org.apache.commons.compress.changes.ChangeSetPerformer$ArchiveInputStreamIterator;

        r1 := @parameter0: org.apache.commons.compress.archivers.ArchiveInputStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.compress.changes.ChangeSetPerformer$ArchiveInputStreamIterator: org.apache.commons.compress.archivers.ArchiveInputStream in> = r1;

        return;
    }

    public boolean hasNext() throws java.io.IOException
    {
        org.apache.commons.compress.archivers.ArchiveEntry $r2;
        org.apache.commons.compress.archivers.ArchiveInputStream $r1;
        org.apache.commons.compress.changes.ChangeSetPerformer$ArchiveInputStreamIterator r0;
        boolean $z0;

        r0 := @this: org.apache.commons.compress.changes.ChangeSetPerformer$ArchiveInputStreamIterator;

        $r1 = r0.<org.apache.commons.compress.changes.ChangeSetPerformer$ArchiveInputStreamIterator: org.apache.commons.compress.archivers.ArchiveInputStream in>;

        $r2 = virtualinvoke $r1.<org.apache.commons.compress.archivers.ArchiveInputStream: org.apache.commons.compress.archivers.ArchiveEntry getNextEntry()>();

        r0.<org.apache.commons.compress.changes.ChangeSetPerformer$ArchiveInputStreamIterator: org.apache.commons.compress.archivers.ArchiveEntry next> = $r2;

        if $r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public org.apache.commons.compress.archivers.ArchiveEntry next()
    {
        org.apache.commons.compress.archivers.ArchiveEntry $r1;
        org.apache.commons.compress.changes.ChangeSetPerformer$ArchiveInputStreamIterator r0;

        r0 := @this: org.apache.commons.compress.changes.ChangeSetPerformer$ArchiveInputStreamIterator;

        $r1 = r0.<org.apache.commons.compress.changes.ChangeSetPerformer$ArchiveInputStreamIterator: org.apache.commons.compress.archivers.ArchiveEntry next>;

        return $r1;
    }

    public java.io.InputStream getInputStream()
    {
        org.apache.commons.compress.archivers.ArchiveInputStream $r1;
        org.apache.commons.compress.changes.ChangeSetPerformer$ArchiveInputStreamIterator r0;

        r0 := @this: org.apache.commons.compress.changes.ChangeSetPerformer$ArchiveInputStreamIterator;

        $r1 = r0.<org.apache.commons.compress.changes.ChangeSetPerformer$ArchiveInputStreamIterator: org.apache.commons.compress.archivers.ArchiveInputStream in>;

        return $r1;
    }
}
