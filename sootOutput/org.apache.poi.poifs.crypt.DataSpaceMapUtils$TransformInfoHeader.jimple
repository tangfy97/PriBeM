public class org.apache.poi.poifs.crypt.DataSpaceMapUtils$TransformInfoHeader extends java.lang.Object implements org.apache.poi.poifs.crypt.standard.EncryptionRecord
{
    int transformType;
    java.lang.String transformerId;
    java.lang.String transformerName;
    int readerVersionMajor;
    int readerVersionMinor;
    int updaterVersionMajor;
    int updaterVersionMinor;
    int writerVersionMajor;
    int writerVersionMinor;

    public void <init>(int, java.lang.String, java.lang.String, int, int, int, int, int, int)
    {
        org.apache.poi.poifs.crypt.DataSpaceMapUtils$TransformInfoHeader r0;
        int i0, i1, i2, i3, i4, i5, i6;
        java.lang.String r1, r2;

        r0 := @this: org.apache.poi.poifs.crypt.DataSpaceMapUtils$TransformInfoHeader;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        i4 := @parameter6: int;

        i5 := @parameter7: int;

        i6 := @parameter8: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.poi.poifs.crypt.DataSpaceMapUtils$TransformInfoHeader: int readerVersionMajor> = 1;

        r0.<org.apache.poi.poifs.crypt.DataSpaceMapUtils$TransformInfoHeader: int readerVersionMinor> = 0;

        r0.<org.apache.poi.poifs.crypt.DataSpaceMapUtils$TransformInfoHeader: int updaterVersionMajor> = 1;

        r0.<org.apache.poi.poifs.crypt.DataSpaceMapUtils$TransformInfoHeader: int updaterVersionMinor> = 0;

        r0.<org.apache.poi.poifs.crypt.DataSpaceMapUtils$TransformInfoHeader: int writerVersionMajor> = 1;

        r0.<org.apache.poi.poifs.crypt.DataSpaceMapUtils$TransformInfoHeader: int writerVersionMinor> = 0;

        r0.<org.apache.poi.poifs.crypt.DataSpaceMapUtils$TransformInfoHeader: int transformType> = i0;

        r0.<org.apache.poi.poifs.crypt.DataSpaceMapUtils$TransformInfoHeader: java.lang.String transformerId> = r1;

        r0.<org.apache.poi.poifs.crypt.DataSpaceMapUtils$TransformInfoHeader: java.lang.String transformerName> = r2;

        r0.<org.apache.poi.poifs.crypt.DataSpaceMapUtils$TransformInfoHeader: int readerVersionMajor> = i1;

        r0.<org.apache.poi.poifs.crypt.DataSpaceMapUtils$TransformInfoHeader: int readerVersionMinor> = i2;

        r0.<org.apache.poi.poifs.crypt.DataSpaceMapUtils$TransformInfoHeader: int updaterVersionMajor> = i3;

        r0.<org.apache.poi.poifs.crypt.DataSpaceMapUtils$TransformInfoHeader: int updaterVersionMinor> = i4;

        r0.<org.apache.poi.poifs.crypt.DataSpaceMapUtils$TransformInfoHeader: int writerVersionMajor> = i5;

        r0.<org.apache.poi.poifs.crypt.DataSpaceMapUtils$TransformInfoHeader: int writerVersionMinor> = i6;

        return;
    }

    public void <init>(org.apache.poi.util.LittleEndianInput)
    {
        org.apache.poi.poifs.crypt.DataSpaceMapUtils$TransformInfoHeader r0;
        short $s1, $s2, $s3, $s4, $s5, $s6;
        org.apache.poi.util.LittleEndianInput r1;
        int $i0, $i7, $i8, $i9, $i10, $i11, $i12;
        java.lang.String $r2, $r3;

        r0 := @this: org.apache.poi.poifs.crypt.DataSpaceMapUtils$TransformInfoHeader;

        r1 := @parameter0: org.apache.poi.util.LittleEndianInput;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.poi.poifs.crypt.DataSpaceMapUtils$TransformInfoHeader: int readerVersionMajor> = 1;

        r0.<org.apache.poi.poifs.crypt.DataSpaceMapUtils$TransformInfoHeader: int readerVersionMinor> = 0;

        r0.<org.apache.poi.poifs.crypt.DataSpaceMapUtils$TransformInfoHeader: int updaterVersionMajor> = 1;

        r0.<org.apache.poi.poifs.crypt.DataSpaceMapUtils$TransformInfoHeader: int updaterVersionMinor> = 0;

        r0.<org.apache.poi.poifs.crypt.DataSpaceMapUtils$TransformInfoHeader: int writerVersionMajor> = 1;

        r0.<org.apache.poi.poifs.crypt.DataSpaceMapUtils$TransformInfoHeader: int writerVersionMinor> = 0;

        interfaceinvoke r1.<org.apache.poi.util.LittleEndianInput: int readInt()>();

        $i0 = interfaceinvoke r1.<org.apache.poi.util.LittleEndianInput: int readInt()>();

        r0.<org.apache.poi.poifs.crypt.DataSpaceMapUtils$TransformInfoHeader: int transformType> = $i0;

        $r2 = staticinvoke <org.apache.poi.poifs.crypt.DataSpaceMapUtils: java.lang.String readUnicodeLPP4(org.apache.poi.util.LittleEndianInput)>(r1);

        r0.<org.apache.poi.poifs.crypt.DataSpaceMapUtils$TransformInfoHeader: java.lang.String transformerId> = $r2;

        $r3 = staticinvoke <org.apache.poi.poifs.crypt.DataSpaceMapUtils: java.lang.String readUnicodeLPP4(org.apache.poi.util.LittleEndianInput)>(r1);

        r0.<org.apache.poi.poifs.crypt.DataSpaceMapUtils$TransformInfoHeader: java.lang.String transformerName> = $r3;

        $s1 = interfaceinvoke r1.<org.apache.poi.util.LittleEndianInput: short readShort()>();

        $i7 = (int) $s1;

        r0.<org.apache.poi.poifs.crypt.DataSpaceMapUtils$TransformInfoHeader: int readerVersionMajor> = $i7;

        $s2 = interfaceinvoke r1.<org.apache.poi.util.LittleEndianInput: short readShort()>();

        $i8 = (int) $s2;

        r0.<org.apache.poi.poifs.crypt.DataSpaceMapUtils$TransformInfoHeader: int readerVersionMinor> = $i8;

        $s3 = interfaceinvoke r1.<org.apache.poi.util.LittleEndianInput: short readShort()>();

        $i9 = (int) $s3;

        r0.<org.apache.poi.poifs.crypt.DataSpaceMapUtils$TransformInfoHeader: int updaterVersionMajor> = $i9;

        $s4 = interfaceinvoke r1.<org.apache.poi.util.LittleEndianInput: short readShort()>();

        $i10 = (int) $s4;

        r0.<org.apache.poi.poifs.crypt.DataSpaceMapUtils$TransformInfoHeader: int updaterVersionMinor> = $i10;

        $s5 = interfaceinvoke r1.<org.apache.poi.util.LittleEndianInput: short readShort()>();

        $i11 = (int) $s5;

        r0.<org.apache.poi.poifs.crypt.DataSpaceMapUtils$TransformInfoHeader: int writerVersionMajor> = $i11;

        $s6 = interfaceinvoke r1.<org.apache.poi.util.LittleEndianInput: short readShort()>();

        $i12 = (int) $s6;

        r0.<org.apache.poi.poifs.crypt.DataSpaceMapUtils$TransformInfoHeader: int writerVersionMinor> = $i12;

        return;
    }

    public void write(org.apache.poi.util.LittleEndianByteArrayOutputStream)
    {
        org.apache.poi.poifs.crypt.DataSpaceMapUtils$TransformInfoHeader r2;
        org.apache.poi.util.LittleEndianByteArrayOutputStream r0;
        org.apache.poi.util.LittleEndianOutput $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.String $r3, $r4;

        r2 := @this: org.apache.poi.poifs.crypt.DataSpaceMapUtils$TransformInfoHeader;

        r0 := @parameter0: org.apache.poi.util.LittleEndianByteArrayOutputStream;

        $i0 = virtualinvoke r0.<org.apache.poi.util.LittleEndianByteArrayOutputStream: int getWriteIndex()>();

        $r1 = virtualinvoke r0.<org.apache.poi.util.LittleEndianByteArrayOutputStream: org.apache.poi.util.LittleEndianOutput createDelayedOutput(int)>(4);

        $i1 = r2.<org.apache.poi.poifs.crypt.DataSpaceMapUtils$TransformInfoHeader: int transformType>;

        virtualinvoke r0.<org.apache.poi.util.LittleEndianByteArrayOutputStream: void writeInt(int)>($i1);

        $r3 = r2.<org.apache.poi.poifs.crypt.DataSpaceMapUtils$TransformInfoHeader: java.lang.String transformerId>;

        staticinvoke <org.apache.poi.poifs.crypt.DataSpaceMapUtils: void writeUnicodeLPP4(org.apache.poi.util.LittleEndianOutput,java.lang.String)>(r0, $r3);

        $i2 = virtualinvoke r0.<org.apache.poi.util.LittleEndianByteArrayOutputStream: int getWriteIndex()>();

        $i3 = $i2 - $i0;

        interfaceinvoke $r1.<org.apache.poi.util.LittleEndianOutput: void writeInt(int)>($i3);

        $r4 = r2.<org.apache.poi.poifs.crypt.DataSpaceMapUtils$TransformInfoHeader: java.lang.String transformerName>;

        staticinvoke <org.apache.poi.poifs.crypt.DataSpaceMapUtils: void writeUnicodeLPP4(org.apache.poi.util.LittleEndianOutput,java.lang.String)>(r0, $r4);

        $i4 = r2.<org.apache.poi.poifs.crypt.DataSpaceMapUtils$TransformInfoHeader: int readerVersionMajor>;

        virtualinvoke r0.<org.apache.poi.util.LittleEndianByteArrayOutputStream: void writeShort(int)>($i4);

        $i5 = r2.<org.apache.poi.poifs.crypt.DataSpaceMapUtils$TransformInfoHeader: int readerVersionMinor>;

        virtualinvoke r0.<org.apache.poi.util.LittleEndianByteArrayOutputStream: void writeShort(int)>($i5);

        $i6 = r2.<org.apache.poi.poifs.crypt.DataSpaceMapUtils$TransformInfoHeader: int updaterVersionMajor>;

        virtualinvoke r0.<org.apache.poi.util.LittleEndianByteArrayOutputStream: void writeShort(int)>($i6);

        $i7 = r2.<org.apache.poi.poifs.crypt.DataSpaceMapUtils$TransformInfoHeader: int updaterVersionMinor>;

        virtualinvoke r0.<org.apache.poi.util.LittleEndianByteArrayOutputStream: void writeShort(int)>($i7);

        $i8 = r2.<org.apache.poi.poifs.crypt.DataSpaceMapUtils$TransformInfoHeader: int writerVersionMajor>;

        virtualinvoke r0.<org.apache.poi.util.LittleEndianByteArrayOutputStream: void writeShort(int)>($i8);

        $i9 = r2.<org.apache.poi.poifs.crypt.DataSpaceMapUtils$TransformInfoHeader: int writerVersionMinor>;

        virtualinvoke r0.<org.apache.poi.util.LittleEndianByteArrayOutputStream: void writeShort(int)>($i9);

        return;
    }
}
