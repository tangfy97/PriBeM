class org.springframework.aop.aspectj.AspectJExpressionPointcut$BeanNameContextMatcher extends java.lang.Object implements org.aspectj.weaver.tools.ContextBasedMatcher
{
    private final org.aspectj.weaver.patterns.NamePattern expressionPattern;
    final org.springframework.aop.aspectj.AspectJExpressionPointcut this$0;

    public void <init>(org.springframework.aop.aspectj.AspectJExpressionPointcut, java.lang.String)
    {
        org.springframework.aop.aspectj.AspectJExpressionPointcut$BeanNameContextMatcher r0;
        java.lang.String r3;
        org.springframework.aop.aspectj.AspectJExpressionPointcut r1;
        org.aspectj.weaver.patterns.NamePattern $r2;

        r0 := @this: org.springframework.aop.aspectj.AspectJExpressionPointcut$BeanNameContextMatcher;

        r1 := @parameter0: org.springframework.aop.aspectj.AspectJExpressionPointcut;

        r3 := @parameter1: java.lang.String;

        r0.<org.springframework.aop.aspectj.AspectJExpressionPointcut$BeanNameContextMatcher: org.springframework.aop.aspectj.AspectJExpressionPointcut this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new org.aspectj.weaver.patterns.NamePattern;

        specialinvoke $r2.<org.aspectj.weaver.patterns.NamePattern: void <init>(java.lang.String)>(r3);

        r0.<org.springframework.aop.aspectj.AspectJExpressionPointcut$BeanNameContextMatcher: org.aspectj.weaver.patterns.NamePattern expressionPattern> = $r2;

        return;
    }

    public boolean couldMatchJoinPointsInType(java.lang.Class)
    {
        org.springframework.aop.aspectj.AspectJExpressionPointcut$BeanNameContextMatcher r0;
        org.aspectj.weaver.tools.FuzzyBoolean $r2, $r3;
        java.lang.Class r1;

        r0 := @this: org.springframework.aop.aspectj.AspectJExpressionPointcut$BeanNameContextMatcher;

        r1 := @parameter0: java.lang.Class;

        $r2 = specialinvoke r0.<org.springframework.aop.aspectj.AspectJExpressionPointcut$BeanNameContextMatcher: org.aspectj.weaver.tools.FuzzyBoolean contextMatch(java.lang.Class)>(r1);

        $r3 = <org.aspectj.weaver.tools.FuzzyBoolean: org.aspectj.weaver.tools.FuzzyBoolean YES>;

        if $r2 != $r3 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean couldMatchJoinPointsInType(java.lang.Class, org.aspectj.weaver.tools.MatchingContext)
    {
        org.springframework.aop.aspectj.AspectJExpressionPointcut$BeanNameContextMatcher r0;
        org.aspectj.weaver.tools.FuzzyBoolean $r2, $r3;
        java.lang.Class r1;
        org.aspectj.weaver.tools.MatchingContext r4;

        r0 := @this: org.springframework.aop.aspectj.AspectJExpressionPointcut$BeanNameContextMatcher;

        r1 := @parameter0: java.lang.Class;

        r4 := @parameter1: org.aspectj.weaver.tools.MatchingContext;

        $r2 = specialinvoke r0.<org.springframework.aop.aspectj.AspectJExpressionPointcut$BeanNameContextMatcher: org.aspectj.weaver.tools.FuzzyBoolean contextMatch(java.lang.Class)>(r1);

        $r3 = <org.aspectj.weaver.tools.FuzzyBoolean: org.aspectj.weaver.tools.FuzzyBoolean YES>;

        if $r2 != $r3 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean matchesDynamically(org.aspectj.weaver.tools.MatchingContext)
    {
        org.aspectj.weaver.tools.MatchingContext r1;
        org.springframework.aop.aspectj.AspectJExpressionPointcut$BeanNameContextMatcher r0;

        r0 := @this: org.springframework.aop.aspectj.AspectJExpressionPointcut$BeanNameContextMatcher;

        r1 := @parameter0: org.aspectj.weaver.tools.MatchingContext;

        return 1;
    }

    public org.aspectj.weaver.tools.FuzzyBoolean matchesStatically(org.aspectj.weaver.tools.MatchingContext)
    {
        org.aspectj.weaver.tools.FuzzyBoolean $r1;
        org.aspectj.weaver.tools.MatchingContext r2;
        org.springframework.aop.aspectj.AspectJExpressionPointcut$BeanNameContextMatcher r0;

        r0 := @this: org.springframework.aop.aspectj.AspectJExpressionPointcut$BeanNameContextMatcher;

        r2 := @parameter0: org.aspectj.weaver.tools.MatchingContext;

        $r1 = specialinvoke r0.<org.springframework.aop.aspectj.AspectJExpressionPointcut$BeanNameContextMatcher: org.aspectj.weaver.tools.FuzzyBoolean contextMatch(java.lang.Class)>(null);

        return $r1;
    }

    public boolean mayNeedDynamicTest()
    {
        org.springframework.aop.aspectj.AspectJExpressionPointcut$BeanNameContextMatcher r0;

        r0 := @this: org.springframework.aop.aspectj.AspectJExpressionPointcut$BeanNameContextMatcher;

        return 0;
    }

    private org.aspectj.weaver.tools.FuzzyBoolean contextMatch(java.lang.Class)
    {
        org.aspectj.weaver.tools.FuzzyBoolean $r8, $r11, $r12, $r14;
        java.lang.String $r2, $r6, $r13;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.springframework.aop.aspectj.AspectJExpressionPointcut$BeanNameContextMatcher r0;
        java.lang.Class r3, $r7;
        java.lang.StringBuilder $r4, $r5, $r9, $r10;
        org.springframework.aop.aspectj.AspectJExpressionPointcut $r1;

        r0 := @this: org.springframework.aop.aspectj.AspectJExpressionPointcut$BeanNameContextMatcher;

        r3 := @parameter0: java.lang.Class;

        $r1 = r0.<org.springframework.aop.aspectj.AspectJExpressionPointcut$BeanNameContextMatcher: org.springframework.aop.aspectj.AspectJExpressionPointcut this$0>;

        $r2 = virtualinvoke $r1.<org.springframework.aop.aspectj.AspectJExpressionPointcut: java.lang.String getCurrentProxiedBeanName()>();

        if $r2 != null goto label1;

        $r12 = <org.aspectj.weaver.tools.FuzzyBoolean: org.aspectj.weaver.tools.FuzzyBoolean MAYBE>;

        return $r12;

     label1:
        $z0 = staticinvoke <org.springframework.beans.factory.BeanFactoryUtils: boolean isGeneratedBeanName(java.lang.String)>($r2);

        if $z0 == 0 goto label2;

        $r11 = <org.aspectj.weaver.tools.FuzzyBoolean: org.aspectj.weaver.tools.FuzzyBoolean NO>;

        return $r11;

     label2:
        if r3 == null goto label5;

        $r7 = class "Lorg/springframework/beans/factory/FactoryBean;";

        $z3 = virtualinvoke $r7.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r3);

        if $z3 == 0 goto label3;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("&");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label4;

     label3:
        $r13 = $r2;

     label4:
        $z4 = specialinvoke r0.<org.springframework.aop.aspectj.AspectJExpressionPointcut$BeanNameContextMatcher: boolean matchesBeanName(java.lang.String)>($r13);

        $r8 = staticinvoke <org.aspectj.weaver.tools.FuzzyBoolean: org.aspectj.weaver.tools.FuzzyBoolean fromBoolean(boolean)>($z4);

        return $r8;

     label5:
        $z1 = specialinvoke r0.<org.springframework.aop.aspectj.AspectJExpressionPointcut$BeanNameContextMatcher: boolean matchesBeanName(java.lang.String)>($r2);

        if $z1 != 0 goto label6;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("&");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $z2 = specialinvoke r0.<org.springframework.aop.aspectj.AspectJExpressionPointcut$BeanNameContextMatcher: boolean matchesBeanName(java.lang.String)>($r6);

        if $z2 != 0 goto label6;

        $z5 = 0;

        goto label7;

     label6:
        $z5 = 1;

     label7:
        $r14 = staticinvoke <org.aspectj.weaver.tools.FuzzyBoolean: org.aspectj.weaver.tools.FuzzyBoolean fromBoolean(boolean)>($z5);

        return $r14;
    }

    private boolean matchesBeanName(java.lang.String)
    {
        java.lang.String[] $r7;
        org.springframework.aop.aspectj.AspectJExpressionPointcut$BeanNameContextMatcher r0;
        org.springframework.beans.factory.BeanFactory $r4, $r6;
        int i0, i1;
        java.lang.String r1, r8;
        org.aspectj.weaver.patterns.NamePattern $r2, $r9;
        org.springframework.aop.aspectj.AspectJExpressionPointcut $r3, $r5;
        boolean $z0, $z1;

        r0 := @this: org.springframework.aop.aspectj.AspectJExpressionPointcut$BeanNameContextMatcher;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.springframework.aop.aspectj.AspectJExpressionPointcut$BeanNameContextMatcher: org.aspectj.weaver.patterns.NamePattern expressionPattern>;

        $z0 = virtualinvoke $r2.<org.aspectj.weaver.patterns.NamePattern: boolean matches(java.lang.String)>(r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r3 = r0.<org.springframework.aop.aspectj.AspectJExpressionPointcut$BeanNameContextMatcher: org.springframework.aop.aspectj.AspectJExpressionPointcut this$0>;

        $r4 = staticinvoke <org.springframework.aop.aspectj.AspectJExpressionPointcut: org.springframework.beans.factory.BeanFactory access$0(org.springframework.aop.aspectj.AspectJExpressionPointcut)>($r3);

        if $r4 == null goto label5;

        $r5 = r0.<org.springframework.aop.aspectj.AspectJExpressionPointcut$BeanNameContextMatcher: org.springframework.aop.aspectj.AspectJExpressionPointcut this$0>;

        $r6 = staticinvoke <org.springframework.aop.aspectj.AspectJExpressionPointcut: org.springframework.beans.factory.BeanFactory access$0(org.springframework.aop.aspectj.AspectJExpressionPointcut)>($r5);

        $r7 = interfaceinvoke $r6.<org.springframework.beans.factory.BeanFactory: java.lang.String[] getAliases(java.lang.String)>(r1);

        i0 = lengthof $r7;

        i1 = 0;

        goto label4;

     label2:
        r8 = $r7[i1];

        $r9 = r0.<org.springframework.aop.aspectj.AspectJExpressionPointcut$BeanNameContextMatcher: org.aspectj.weaver.patterns.NamePattern expressionPattern>;

        $z1 = virtualinvoke $r9.<org.aspectj.weaver.patterns.NamePattern: boolean matches(java.lang.String)>(r8);

        if $z1 == 0 goto label3;

        return 1;

     label3:
        i1 = i1 + 1;

     label4:
        if i1 < i0 goto label2;

     label5:
        return 0;
    }
}
