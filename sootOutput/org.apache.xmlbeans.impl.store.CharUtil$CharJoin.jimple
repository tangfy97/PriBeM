public final class org.apache.xmlbeans.impl.store.CharUtil$CharJoin extends java.lang.Object
{
    public final java.lang.Object _srcLeft;
    public final int _offLeft;
    public final int _cchLeft;
    public final java.lang.Object _srcRight;
    public final int _offRight;
    public final int _depth;
    static final int MAX_DEPTH;
    static final boolean $assertionsDisabled;

    public void <init>(java.lang.Object, int, int, java.lang.Object, int)
    {
        java.lang.AssertionError $r3;
        int i0, i1, i2, $i3, i4, i5, $i6;
        boolean $z0, $z1, $z2;
        org.apache.xmlbeans.impl.store.CharUtil$CharJoin r0, $r4, $r5;
        java.lang.Object r1, r2;

        r0 := @this: org.apache.xmlbeans.impl.store.CharUtil$CharJoin;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.Object;

        i2 := @parameter4: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: java.lang.Object _srcLeft> = r1;

        r0.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: int _offLeft> = i0;

        r0.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: int _cchLeft> = i1;

        r0.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: java.lang.Object _srcRight> = r2;

        r0.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: int _offRight> = i2;

        i5 = 0;

        $z0 = r1 instanceof org.apache.xmlbeans.impl.store.CharUtil$CharJoin;

        if $z0 == 0 goto label1;

        $r5 = (org.apache.xmlbeans.impl.store.CharUtil$CharJoin) r1;

        i5 = $r5.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: int _depth>;

     label1:
        $z1 = r2 instanceof org.apache.xmlbeans.impl.store.CharUtil$CharJoin;

        if $z1 == 0 goto label2;

        $r4 = (org.apache.xmlbeans.impl.store.CharUtil$CharJoin) r2;

        i4 = $r4.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: int _depth>;

        if i4 <= i5 goto label2;

        i5 = i4;

     label2:
        $i6 = i5 + 1;

        r0.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: int _depth> = $i6;

        $z2 = <org.apache.xmlbeans.impl.store.CharUtil$CharJoin: boolean $assertionsDisabled>;

        if $z2 != 0 goto label3;

        $i3 = r0.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: int _depth>;

        if $i3 <= 66 goto label3;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label3:
        return;
    }

    private int cchRight(int, int)
    {
        int i0, $i1, i2, $i3, $i4, $i5;
        org.apache.xmlbeans.impl.store.CharUtil$CharJoin r0;

        r0 := @this: org.apache.xmlbeans.impl.store.CharUtil$CharJoin;

        i2 := @parameter0: int;

        i0 := @parameter1: int;

        $i1 = r0.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: int _cchLeft>;

        $i3 = i0 - $i1;

        $i4 = $i3 - i2;

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i4);

        return $i5;
    }

    public int depth()
    {
        org.apache.xmlbeans.impl.store.CharUtil$CharJoin r0, $r4, $r6;
        int $i0, $i1, i2;
        java.lang.Object $r1, $r2, $r3, $r5;
        boolean $z0, $z1;

        r0 := @this: org.apache.xmlbeans.impl.store.CharUtil$CharJoin;

        i2 = 0;

        $r1 = r0.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: java.lang.Object _srcLeft>;

        $z0 = $r1 instanceof org.apache.xmlbeans.impl.store.CharUtil$CharJoin;

        if $z0 == 0 goto label1;

        $r5 = r0.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: java.lang.Object _srcLeft>;

        $r6 = (org.apache.xmlbeans.impl.store.CharUtil$CharJoin) $r5;

        i2 = virtualinvoke $r6.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: int depth()>();

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: java.lang.Object _srcRight>;

        $z1 = $r2 instanceof org.apache.xmlbeans.impl.store.CharUtil$CharJoin;

        if $z1 == 0 goto label2;

        $r3 = r0.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: java.lang.Object _srcRight>;

        $r4 = (org.apache.xmlbeans.impl.store.CharUtil$CharJoin) $r3;

        $i1 = virtualinvoke $r4.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: int depth()>();

        i2 = staticinvoke <java.lang.Math: int max(int,int)>($i1, i2);

     label2:
        $i0 = i2 + 1;

        return $i0;
    }

    public boolean isValid(int, int)
    {
        java.lang.AssertionError $r3;
        int $i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean $z0, $z1, $z2;
        org.apache.xmlbeans.impl.store.CharUtil$CharJoin r0;
        java.lang.Object $r1, $r2;

        r0 := @this: org.apache.xmlbeans.impl.store.CharUtil$CharJoin;

        i1 := @parameter0: int;

        i2 := @parameter1: int;

        $i0 = r0.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: int _depth>;

        if $i0 <= 2 goto label1;

        return 1;

     label1:
        $z0 = <org.apache.xmlbeans.impl.store.CharUtil$CharJoin: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $i7 = r0.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: int _depth>;

        $i8 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: int depth()>();

        if $i7 == $i8 goto label2;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label2:
        if i1 < 0 goto label3;

        if i2 >= 0 goto label4;

     label3:
        return 0;

     label4:
        $r1 = r0.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: java.lang.Object _srcLeft>;

        $i4 = r0.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: int _offLeft>;

        $i3 = r0.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: int _cchLeft>;

        $z1 = staticinvoke <org.apache.xmlbeans.impl.store.CharUtil: boolean isValid(java.lang.Object,int,int)>($r1, $i4, $i3);

        if $z1 != 0 goto label5;

        return 0;

     label5:
        $r2 = r0.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: java.lang.Object _srcRight>;

        $i5 = r0.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: int _offRight>;

        $i6 = specialinvoke r0.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: int cchRight(int,int)>(i1, i2);

        $z2 = staticinvoke <org.apache.xmlbeans.impl.store.CharUtil: boolean isValid(java.lang.Object,int,int)>($r2, $i5, $i6);

        if $z2 != 0 goto label6;

        return 0;

     label6:
        return 1;
    }

    private void getString(java.lang.StringBuffer, int, int)
    {
        java.lang.AssertionError $r5;
        java.lang.StringBuffer r1;
        int i0, $i1, $i2, $i3, $i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        boolean $z0;
        org.apache.xmlbeans.impl.store.CharUtil$CharJoin r0;
        java.lang.Object $r2, $r3, $r4;

        r0 := @this: org.apache.xmlbeans.impl.store.CharUtil$CharJoin;

        r1 := @parameter0: java.lang.StringBuffer;

        i0 := @parameter1: int;

        i5 := @parameter2: int;

        $z0 = <org.apache.xmlbeans.impl.store.CharUtil$CharJoin: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if i5 > 0 goto label1;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label1:
        $i1 = r0.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: int _cchLeft>;

        if i0 >= $i1 goto label3;

        $i7 = r0.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: int _cchLeft>;

        $i8 = $i7 - i0;

        $i9 = staticinvoke <java.lang.Math: int min(int,int)>($i8, i5);

        $r3 = r0.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: java.lang.Object _srcLeft>;

        $i10 = r0.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: int _offLeft>;

        $i11 = $i10 + i0;

        staticinvoke <org.apache.xmlbeans.impl.store.CharUtil: void getString(java.lang.StringBuffer,java.lang.Object,int,int)>(r1, $r3, $i11, $i9);

        if i5 <= $i9 goto label2;

        $r4 = r0.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: java.lang.Object _srcRight>;

        $i13 = r0.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: int _offRight>;

        $i12 = i5 - $i9;

        staticinvoke <org.apache.xmlbeans.impl.store.CharUtil: void getString(java.lang.StringBuffer,java.lang.Object,int,int)>(r1, $r4, $i13, $i12);

     label2:
        goto label4;

     label3:
        $r2 = r0.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: java.lang.Object _srcRight>;

        $i2 = r0.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: int _offRight>;

        $i4 = $i2 + i0;

        $i3 = r0.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: int _cchLeft>;

        $i6 = $i4 - $i3;

        staticinvoke <org.apache.xmlbeans.impl.store.CharUtil: void getString(java.lang.StringBuffer,java.lang.Object,int,int)>(r1, $r2, $i6, i5);

     label4:
        return;
    }

    private void getChars(char[], int, int, int)
    {
        java.lang.AssertionError $r5;
        int i0, $i1, i2, $i3, $i4, $i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        boolean $z0;
        org.apache.xmlbeans.impl.store.CharUtil$CharJoin r0;
        char[] r1;
        java.lang.Object $r2, $r3, $r4;

        r0 := @this: org.apache.xmlbeans.impl.store.CharUtil$CharJoin;

        r1 := @parameter0: char[];

        i2 := @parameter1: int;

        i0 := @parameter2: int;

        i6 := @parameter3: int;

        $z0 = <org.apache.xmlbeans.impl.store.CharUtil$CharJoin: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if i6 > 0 goto label1;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label1:
        $i1 = r0.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: int _cchLeft>;

        if i0 >= $i1 goto label3;

        $i8 = r0.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: int _cchLeft>;

        $i9 = $i8 - i0;

        $i10 = staticinvoke <java.lang.Math: int min(int,int)>($i9, i6);

        $r3 = r0.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: java.lang.Object _srcLeft>;

        $i11 = r0.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: int _offLeft>;

        $i12 = $i11 + i0;

        staticinvoke <org.apache.xmlbeans.impl.store.CharUtil: void getChars(char[],int,java.lang.Object,int,int)>(r1, i2, $r3, $i12, $i10);

        if i6 <= $i10 goto label2;

        $i15 = i2 + $i10;

        $r4 = r0.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: java.lang.Object _srcRight>;

        $i14 = r0.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: int _offRight>;

        $i13 = i6 - $i10;

        staticinvoke <org.apache.xmlbeans.impl.store.CharUtil: void getChars(char[],int,java.lang.Object,int,int)>(r1, $i15, $r4, $i14, $i13);

     label2:
        goto label4;

     label3:
        $r2 = r0.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: java.lang.Object _srcRight>;

        $i3 = r0.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: int _offRight>;

        $i5 = $i3 + i0;

        $i4 = r0.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: int _cchLeft>;

        $i7 = $i5 - $i4;

        staticinvoke <org.apache.xmlbeans.impl.store.CharUtil: void getChars(char[],int,java.lang.Object,int,int)>(r1, i2, $r2, $i7, i6);

     label4:
        return;
    }

    private void dumpChars(int, int)
    {
        java.io.PrintStream $r1;
        org.apache.xmlbeans.impl.store.CharUtil$CharJoin r0;
        int i0, i1;

        r0 := @this: org.apache.xmlbeans.impl.store.CharUtil$CharJoin;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        specialinvoke r0.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: void dumpChars(java.io.PrintStream,int,int)>($r1, i0, i1);

        return;
    }

    private void dumpChars(java.io.PrintStream, int, int)
    {
        java.io.PrintStream r0;
        org.apache.xmlbeans.impl.store.CharUtil$CharJoin r1;
        int $i0, $i1, i2, i3, $i4, $i5;
        java.lang.Object $r2, $r3;

        r1 := @this: org.apache.xmlbeans.impl.store.CharUtil$CharJoin;

        r0 := @parameter0: java.io.PrintStream;

        i2 := @parameter1: int;

        i3 := @parameter2: int;

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>("( ");

        $r2 = r1.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: java.lang.Object _srcLeft>;

        $i1 = r1.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: int _offLeft>;

        $i0 = r1.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: int _cchLeft>;

        staticinvoke <org.apache.xmlbeans.impl.store.CharUtil: void dumpChars(java.io.PrintStream,java.lang.Object,int,int)>(r0, $r2, $i1, $i0);

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>(", ");

        $r3 = r1.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: java.lang.Object _srcRight>;

        $i4 = r1.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: int _offRight>;

        $i5 = specialinvoke r1.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: int cchRight(int,int)>(i2, i3);

        staticinvoke <org.apache.xmlbeans.impl.store.CharUtil: void dumpChars(java.io.PrintStream,java.lang.Object,int,int)>(r0, $r3, $i4, $i5);

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>(" )");

        return;
    }

    static void access$000(org.apache.xmlbeans.impl.store.CharUtil$CharJoin, java.lang.StringBuffer, int, int)
    {
        java.lang.StringBuffer r1;
        org.apache.xmlbeans.impl.store.CharUtil$CharJoin r0;
        int i0, i1;

        r0 := @parameter0: org.apache.xmlbeans.impl.store.CharUtil$CharJoin;

        r1 := @parameter1: java.lang.StringBuffer;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: void getString(java.lang.StringBuffer,int,int)>(r1, i0, i1);

        return;
    }

    static void access$100(org.apache.xmlbeans.impl.store.CharUtil$CharJoin, char[], int, int, int)
    {
        org.apache.xmlbeans.impl.store.CharUtil$CharJoin r0;
        int i0, i1, i2;
        char[] r1;

        r0 := @parameter0: org.apache.xmlbeans.impl.store.CharUtil$CharJoin;

        r1 := @parameter1: char[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        specialinvoke r0.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: void getChars(char[],int,int,int)>(r1, i0, i1, i2);

        return;
    }

    static void access$200(org.apache.xmlbeans.impl.store.CharUtil$CharJoin, java.io.PrintStream, int, int)
    {
        java.io.PrintStream r1;
        org.apache.xmlbeans.impl.store.CharUtil$CharJoin r0;
        int i0, i1;

        r0 := @parameter0: org.apache.xmlbeans.impl.store.CharUtil$CharJoin;

        r1 := @parameter1: java.io.PrintStream;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<org.apache.xmlbeans.impl.store.CharUtil$CharJoin: void dumpChars(java.io.PrintStream,int,int)>(r1, i0, i1);

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0, $r1;
        boolean $z0, $z1;

        <org.apache.xmlbeans.impl.store.CharUtil$CharJoin: int MAX_DEPTH> = 64;

        $r0 = <org.apache.xmlbeans.impl.store.CharUtil: java.lang.Class class$org$apache$xmlbeans$impl$store$CharUtil>;

        if $r0 != null goto label1;

        $r1 = staticinvoke <org.apache.xmlbeans.impl.store.CharUtil: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.impl.store.CharUtil");

        <org.apache.xmlbeans.impl.store.CharUtil: java.lang.Class class$org$apache$xmlbeans$impl$store$CharUtil> = $r1;

        goto label2;

     label1:
        $r1 = <org.apache.xmlbeans.impl.store.CharUtil: java.lang.Class class$org$apache$xmlbeans$impl$store$CharUtil>;

     label2:
        $z0 = virtualinvoke $r1.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        <org.apache.xmlbeans.impl.store.CharUtil$CharJoin: boolean $assertionsDisabled> = $z1;

        return;
    }
}
