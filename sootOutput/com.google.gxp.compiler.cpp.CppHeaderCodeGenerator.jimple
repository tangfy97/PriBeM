public class com.google.gxp.compiler.cpp.CppHeaderCodeGenerator extends com.google.gxp.compiler.cpp.BaseCppCodeGenerator
{
    private final com.google.gxp.com.google.common.collect.ImmutableSet extraIncludess;

    public void <init>(com.google.gxp.compiler.msgextract.MessageExtractedTree, java.util.Set)
    {
        com.google.gxp.com.google.common.collect.ImmutableSet $r5;
        com.google.gxp.compiler.cpp.CppHeaderCodeGenerator r0;
        java.util.Set r2;
        com.google.gxp.compiler.msgextract.MessageExtractedTree r1;
        com.google.gxp.compiler.cpp.CppHeaderCodeGenerator$1 $r3;
        java.lang.Iterable $r4;

        r0 := @this: com.google.gxp.compiler.cpp.CppHeaderCodeGenerator;

        r1 := @parameter0: com.google.gxp.compiler.msgextract.MessageExtractedTree;

        r2 := @parameter1: java.util.Set;

        specialinvoke r0.<com.google.gxp.compiler.cpp.BaseCppCodeGenerator: void <init>(com.google.gxp.compiler.base.Tree)>(r1);

        $r3 = new com.google.gxp.compiler.cpp.CppHeaderCodeGenerator$1;

        specialinvoke $r3.<com.google.gxp.compiler.cpp.CppHeaderCodeGenerator$1: void <init>(com.google.gxp.compiler.cpp.CppHeaderCodeGenerator)>(r0);

        $r4 = staticinvoke <com.google.gxp.com.google.common.collect.Iterables: java.lang.Iterable transform(java.lang.Iterable,com.google.gxp.com.google.common.base.Function)>(r2, $r3);

        $r5 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableSet: com.google.gxp.com.google.common.collect.ImmutableSet copyOf(java.lang.Iterable)>($r4);

        r0.<com.google.gxp.compiler.cpp.CppHeaderCodeGenerator: com.google.gxp.com.google.common.collect.ImmutableSet extraIncludess> = $r5;

        return;
    }

    protected com.google.gxp.compiler.cpp.CppHeaderCodeGenerator$InterfaceWorker createInterfaceWorker(java.lang.Appendable, com.google.gxp.compiler.alerts.AlertSink, com.google.gxp.compiler.base.Interface)
    {
        com.google.gxp.com.google.common.collect.ImmutableSet $r5;
        com.google.gxp.compiler.cpp.CppHeaderCodeGenerator r4;
        com.google.gxp.compiler.cpp.CppHeaderCodeGenerator$InterfaceWorker $r0;
        com.google.gxp.compiler.alerts.AlertSink r2;
        java.lang.Appendable r1;
        com.google.gxp.compiler.base.Interface r3;

        r4 := @this: com.google.gxp.compiler.cpp.CppHeaderCodeGenerator;

        r1 := @parameter0: java.lang.Appendable;

        r2 := @parameter1: com.google.gxp.compiler.alerts.AlertSink;

        r3 := @parameter2: com.google.gxp.compiler.base.Interface;

        $r0 = new com.google.gxp.compiler.cpp.CppHeaderCodeGenerator$InterfaceWorker;

        $r5 = r4.<com.google.gxp.compiler.cpp.CppHeaderCodeGenerator: com.google.gxp.com.google.common.collect.ImmutableSet extraIncludess>;

        specialinvoke $r0.<com.google.gxp.compiler.cpp.CppHeaderCodeGenerator$InterfaceWorker: void <init>(java.lang.Appendable,com.google.gxp.compiler.alerts.AlertSink,com.google.gxp.compiler.base.Interface,java.util.Set)>(r1, r2, r3, $r5);

        return $r0;
    }

    protected com.google.gxp.compiler.cpp.CppHeaderCodeGenerator$TemplateWorker createTemplateWorker(java.lang.Appendable, com.google.gxp.compiler.alerts.AlertSink, com.google.gxp.compiler.base.Template)
    {
        com.google.gxp.com.google.common.collect.ImmutableSet $r5;
        com.google.gxp.compiler.cpp.CppHeaderCodeGenerator r4;
        com.google.gxp.compiler.alerts.AlertSink r2;
        com.google.gxp.compiler.cpp.CppHeaderCodeGenerator$TemplateWorker $r0;
        java.lang.Appendable r1;
        com.google.gxp.compiler.base.Template r3;

        r4 := @this: com.google.gxp.compiler.cpp.CppHeaderCodeGenerator;

        r1 := @parameter0: java.lang.Appendable;

        r2 := @parameter1: com.google.gxp.compiler.alerts.AlertSink;

        r3 := @parameter2: com.google.gxp.compiler.base.Template;

        $r0 = new com.google.gxp.compiler.cpp.CppHeaderCodeGenerator$TemplateWorker;

        $r5 = r4.<com.google.gxp.compiler.cpp.CppHeaderCodeGenerator: com.google.gxp.com.google.common.collect.ImmutableSet extraIncludess>;

        specialinvoke $r0.<com.google.gxp.compiler.cpp.CppHeaderCodeGenerator$TemplateWorker: void <init>(java.lang.Appendable,com.google.gxp.compiler.alerts.AlertSink,com.google.gxp.compiler.base.Template,java.util.Set)>(r1, r2, r3, $r5);

        return $r0;
    }

    protected volatile com.google.gxp.compiler.cpp.BaseCppCodeGenerator$TemplateWorker createTemplateWorker(java.lang.Appendable, com.google.gxp.compiler.alerts.AlertSink, com.google.gxp.compiler.base.Template)
    {
        com.google.gxp.compiler.cpp.CppHeaderCodeGenerator r0;
        com.google.gxp.compiler.alerts.AlertSink r2;
        java.lang.Appendable r1;
        com.google.gxp.compiler.cpp.CppHeaderCodeGenerator$TemplateWorker $r4;
        com.google.gxp.compiler.base.Template r3;

        r0 := @this: com.google.gxp.compiler.cpp.CppHeaderCodeGenerator;

        r1 := @parameter0: java.lang.Appendable;

        r2 := @parameter1: com.google.gxp.compiler.alerts.AlertSink;

        r3 := @parameter2: com.google.gxp.compiler.base.Template;

        $r4 = virtualinvoke r0.<com.google.gxp.compiler.cpp.CppHeaderCodeGenerator: com.google.gxp.compiler.cpp.CppHeaderCodeGenerator$TemplateWorker createTemplateWorker(java.lang.Appendable,com.google.gxp.compiler.alerts.AlertSink,com.google.gxp.compiler.base.Template)>(r1, r2, r3);

        return $r4;
    }

    protected volatile com.google.gxp.compiler.cpp.BaseCppCodeGenerator$InterfaceWorker createInterfaceWorker(java.lang.Appendable, com.google.gxp.compiler.alerts.AlertSink, com.google.gxp.compiler.base.Interface)
    {
        com.google.gxp.compiler.cpp.CppHeaderCodeGenerator r0;
        com.google.gxp.compiler.cpp.CppHeaderCodeGenerator$InterfaceWorker $r4;
        com.google.gxp.compiler.alerts.AlertSink r2;
        java.lang.Appendable r1;
        com.google.gxp.compiler.base.Interface r3;

        r0 := @this: com.google.gxp.compiler.cpp.CppHeaderCodeGenerator;

        r1 := @parameter0: java.lang.Appendable;

        r2 := @parameter1: com.google.gxp.compiler.alerts.AlertSink;

        r3 := @parameter2: com.google.gxp.compiler.base.Interface;

        $r4 = virtualinvoke r0.<com.google.gxp.compiler.cpp.CppHeaderCodeGenerator: com.google.gxp.compiler.cpp.CppHeaderCodeGenerator$InterfaceWorker createInterfaceWorker(java.lang.Appendable,com.google.gxp.compiler.alerts.AlertSink,com.google.gxp.compiler.base.Interface)>(r1, r2, r3);

        return $r4;
    }
}
