public class org.apache.batik.gvt.CanvasGraphicsNode extends org.apache.batik.gvt.CompositeGraphicsNode
{
    protected java.awt.geom.AffineTransform positionTransform;
    protected java.awt.geom.AffineTransform viewingTransform;
    protected java.awt.Paint backgroundPaint;

    public void <init>()
    {
        org.apache.batik.gvt.CanvasGraphicsNode r0;

        r0 := @this: org.apache.batik.gvt.CanvasGraphicsNode;

        specialinvoke r0.<org.apache.batik.gvt.CompositeGraphicsNode: void <init>()>();

        return;
    }

    public void setBackgroundPaint(java.awt.Paint)
    {
        java.awt.Paint r1;
        org.apache.batik.gvt.CanvasGraphicsNode r0;

        r0 := @this: org.apache.batik.gvt.CanvasGraphicsNode;

        r1 := @parameter0: java.awt.Paint;

        r0.<org.apache.batik.gvt.CanvasGraphicsNode: java.awt.Paint backgroundPaint> = r1;

        return;
    }

    public java.awt.Paint getBackgroundPaint()
    {
        java.awt.Paint $r1;
        org.apache.batik.gvt.CanvasGraphicsNode r0;

        r0 := @this: org.apache.batik.gvt.CanvasGraphicsNode;

        $r1 = r0.<org.apache.batik.gvt.CanvasGraphicsNode: java.awt.Paint backgroundPaint>;

        return $r1;
    }

    public void setPositionTransform(java.awt.geom.AffineTransform)
    {
        org.apache.batik.gvt.CanvasGraphicsNode r0;
        java.lang.Error $r16;
        byte $b0;
        java.awt.geom.NoninvertibleTransformException $r15;
        java.lang.String $r17;
        double $d0;
        java.awt.geom.AffineTransform r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r18;

        r0 := @this: org.apache.batik.gvt.CanvasGraphicsNode;

        r1 := @parameter0: java.awt.geom.AffineTransform;

        virtualinvoke r0.<org.apache.batik.gvt.AbstractGraphicsNode: void fireGraphicsNodeChangeStarted()>();

        virtualinvoke r0.<org.apache.batik.gvt.CompositeGraphicsNode: void invalidateGeometryCache()>();

        r0.<org.apache.batik.gvt.CanvasGraphicsNode: java.awt.geom.AffineTransform positionTransform> = r1;

        $r2 = r0.<org.apache.batik.gvt.CanvasGraphicsNode: java.awt.geom.AffineTransform positionTransform>;

        if $r2 == null goto label1;

        $r10 = new java.awt.geom.AffineTransform;

        $r11 = r0.<org.apache.batik.gvt.CanvasGraphicsNode: java.awt.geom.AffineTransform positionTransform>;

        specialinvoke $r10.<java.awt.geom.AffineTransform: void <init>(java.awt.geom.AffineTransform)>($r11);

        r0.<org.apache.batik.gvt.AbstractGraphicsNode: java.awt.geom.AffineTransform transform> = $r10;

        $r12 = r0.<org.apache.batik.gvt.CanvasGraphicsNode: java.awt.geom.AffineTransform viewingTransform>;

        if $r12 == null goto label3;

        $r14 = r0.<org.apache.batik.gvt.AbstractGraphicsNode: java.awt.geom.AffineTransform transform>;

        $r13 = r0.<org.apache.batik.gvt.CanvasGraphicsNode: java.awt.geom.AffineTransform viewingTransform>;

        virtualinvoke $r14.<java.awt.geom.AffineTransform: void concatenate(java.awt.geom.AffineTransform)>($r13);

        goto label3;

     label1:
        $r3 = r0.<org.apache.batik.gvt.CanvasGraphicsNode: java.awt.geom.AffineTransform viewingTransform>;

        if $r3 == null goto label2;

        $r8 = new java.awt.geom.AffineTransform;

        $r9 = r0.<org.apache.batik.gvt.CanvasGraphicsNode: java.awt.geom.AffineTransform viewingTransform>;

        specialinvoke $r8.<java.awt.geom.AffineTransform: void <init>(java.awt.geom.AffineTransform)>($r9);

        r0.<org.apache.batik.gvt.AbstractGraphicsNode: java.awt.geom.AffineTransform transform> = $r8;

        goto label3;

     label2:
        $r4 = new java.awt.geom.AffineTransform;

        specialinvoke $r4.<java.awt.geom.AffineTransform: void <init>()>();

        r0.<org.apache.batik.gvt.AbstractGraphicsNode: java.awt.geom.AffineTransform transform> = $r4;

     label3:
        $r18 = r0.<org.apache.batik.gvt.AbstractGraphicsNode: java.awt.geom.AffineTransform transform>;

        $d0 = virtualinvoke $r18.<java.awt.geom.AffineTransform: double getDeterminant()>();

        $b0 = $d0 cmpl 0.0;

        if $b0 == 0 goto label8;

     label4:
        $r6 = r0.<org.apache.batik.gvt.AbstractGraphicsNode: java.awt.geom.AffineTransform transform>;

        $r7 = virtualinvoke $r6.<java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>();

        r0.<org.apache.batik.gvt.AbstractGraphicsNode: java.awt.geom.AffineTransform inverseTransform> = $r7;

     label5:
        goto label7;

     label6:
        $r15 := @caughtexception;

        $r16 = new java.lang.Error;

        $r17 = virtualinvoke $r15.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r16.<java.lang.Error: void <init>(java.lang.String)>($r17);

        throw $r16;

     label7:
        goto label9;

     label8:
        $r5 = r0.<org.apache.batik.gvt.AbstractGraphicsNode: java.awt.geom.AffineTransform transform>;

        r0.<org.apache.batik.gvt.AbstractGraphicsNode: java.awt.geom.AffineTransform inverseTransform> = $r5;

     label9:
        virtualinvoke r0.<org.apache.batik.gvt.AbstractGraphicsNode: void fireGraphicsNodeChangeCompleted()>();

        return;

        catch java.awt.geom.NoninvertibleTransformException from label4 to label5 with label6;
    }

    public java.awt.geom.AffineTransform getPositionTransform()
    {
        java.awt.geom.AffineTransform $r1;
        org.apache.batik.gvt.CanvasGraphicsNode r0;

        r0 := @this: org.apache.batik.gvt.CanvasGraphicsNode;

        $r1 = r0.<org.apache.batik.gvt.CanvasGraphicsNode: java.awt.geom.AffineTransform positionTransform>;

        return $r1;
    }

    public void setViewingTransform(java.awt.geom.AffineTransform)
    {
        org.apache.batik.gvt.CanvasGraphicsNode r0;
        java.lang.Error $r16;
        byte $b0;
        java.awt.geom.NoninvertibleTransformException $r15;
        java.lang.String $r17;
        double $d0;
        java.awt.geom.AffineTransform r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r18;

        r0 := @this: org.apache.batik.gvt.CanvasGraphicsNode;

        r1 := @parameter0: java.awt.geom.AffineTransform;

        virtualinvoke r0.<org.apache.batik.gvt.AbstractGraphicsNode: void fireGraphicsNodeChangeStarted()>();

        virtualinvoke r0.<org.apache.batik.gvt.CompositeGraphicsNode: void invalidateGeometryCache()>();

        r0.<org.apache.batik.gvt.CanvasGraphicsNode: java.awt.geom.AffineTransform viewingTransform> = r1;

        $r2 = r0.<org.apache.batik.gvt.CanvasGraphicsNode: java.awt.geom.AffineTransform positionTransform>;

        if $r2 == null goto label1;

        $r10 = new java.awt.geom.AffineTransform;

        $r11 = r0.<org.apache.batik.gvt.CanvasGraphicsNode: java.awt.geom.AffineTransform positionTransform>;

        specialinvoke $r10.<java.awt.geom.AffineTransform: void <init>(java.awt.geom.AffineTransform)>($r11);

        r0.<org.apache.batik.gvt.AbstractGraphicsNode: java.awt.geom.AffineTransform transform> = $r10;

        $r12 = r0.<org.apache.batik.gvt.CanvasGraphicsNode: java.awt.geom.AffineTransform viewingTransform>;

        if $r12 == null goto label3;

        $r14 = r0.<org.apache.batik.gvt.AbstractGraphicsNode: java.awt.geom.AffineTransform transform>;

        $r13 = r0.<org.apache.batik.gvt.CanvasGraphicsNode: java.awt.geom.AffineTransform viewingTransform>;

        virtualinvoke $r14.<java.awt.geom.AffineTransform: void concatenate(java.awt.geom.AffineTransform)>($r13);

        goto label3;

     label1:
        $r3 = r0.<org.apache.batik.gvt.CanvasGraphicsNode: java.awt.geom.AffineTransform viewingTransform>;

        if $r3 == null goto label2;

        $r8 = new java.awt.geom.AffineTransform;

        $r9 = r0.<org.apache.batik.gvt.CanvasGraphicsNode: java.awt.geom.AffineTransform viewingTransform>;

        specialinvoke $r8.<java.awt.geom.AffineTransform: void <init>(java.awt.geom.AffineTransform)>($r9);

        r0.<org.apache.batik.gvt.AbstractGraphicsNode: java.awt.geom.AffineTransform transform> = $r8;

        goto label3;

     label2:
        $r4 = new java.awt.geom.AffineTransform;

        specialinvoke $r4.<java.awt.geom.AffineTransform: void <init>()>();

        r0.<org.apache.batik.gvt.AbstractGraphicsNode: java.awt.geom.AffineTransform transform> = $r4;

     label3:
        $r18 = r0.<org.apache.batik.gvt.AbstractGraphicsNode: java.awt.geom.AffineTransform transform>;

        $d0 = virtualinvoke $r18.<java.awt.geom.AffineTransform: double getDeterminant()>();

        $b0 = $d0 cmpl 0.0;

        if $b0 == 0 goto label8;

     label4:
        $r6 = r0.<org.apache.batik.gvt.AbstractGraphicsNode: java.awt.geom.AffineTransform transform>;

        $r7 = virtualinvoke $r6.<java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>();

        r0.<org.apache.batik.gvt.AbstractGraphicsNode: java.awt.geom.AffineTransform inverseTransform> = $r7;

     label5:
        goto label7;

     label6:
        $r15 := @caughtexception;

        $r16 = new java.lang.Error;

        $r17 = virtualinvoke $r15.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r16.<java.lang.Error: void <init>(java.lang.String)>($r17);

        throw $r16;

     label7:
        goto label9;

     label8:
        $r5 = r0.<org.apache.batik.gvt.AbstractGraphicsNode: java.awt.geom.AffineTransform transform>;

        r0.<org.apache.batik.gvt.AbstractGraphicsNode: java.awt.geom.AffineTransform inverseTransform> = $r5;

     label9:
        virtualinvoke r0.<org.apache.batik.gvt.AbstractGraphicsNode: void fireGraphicsNodeChangeCompleted()>();

        return;

        catch java.awt.geom.NoninvertibleTransformException from label4 to label5 with label6;
    }

    public java.awt.geom.AffineTransform getViewingTransform()
    {
        java.awt.geom.AffineTransform $r1;
        org.apache.batik.gvt.CanvasGraphicsNode r0;

        r0 := @this: org.apache.batik.gvt.CanvasGraphicsNode;

        $r1 = r0.<org.apache.batik.gvt.CanvasGraphicsNode: java.awt.geom.AffineTransform viewingTransform>;

        return $r1;
    }

    public void primitivePaint(java.awt.Graphics2D)
    {
        java.awt.Shape $r4;
        java.awt.Paint $r1, $r3;
        java.awt.Graphics2D r2;
        org.apache.batik.gvt.CanvasGraphicsNode r0;

        r0 := @this: org.apache.batik.gvt.CanvasGraphicsNode;

        r2 := @parameter0: java.awt.Graphics2D;

        $r1 = r0.<org.apache.batik.gvt.CanvasGraphicsNode: java.awt.Paint backgroundPaint>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.batik.gvt.CanvasGraphicsNode: java.awt.Paint backgroundPaint>;

        virtualinvoke r2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r3);

        $r4 = virtualinvoke r2.<java.awt.Graphics: java.awt.Shape getClip()>();

        virtualinvoke r2.<java.awt.Graphics2D: void fill(java.awt.Shape)>($r4);

     label1:
        specialinvoke r0.<org.apache.batik.gvt.CompositeGraphicsNode: void primitivePaint(java.awt.Graphics2D)>(r2);

        return;
    }
}
