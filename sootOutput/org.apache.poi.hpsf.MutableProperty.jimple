public class org.apache.poi.hpsf.MutableProperty extends org.apache.poi.hpsf.Property
{

    public void <init>()
    {
        org.apache.poi.hpsf.MutableProperty r0;

        r0 := @this: org.apache.poi.hpsf.MutableProperty;

        specialinvoke r0.<org.apache.poi.hpsf.Property: void <init>()>();

        return;
    }

    public void <init>(org.apache.poi.hpsf.Property)
    {
        org.apache.poi.hpsf.MutableProperty r0;
        org.apache.poi.hpsf.Property r1;
        long $l0, $l1;
        java.lang.Object $r2;

        r0 := @this: org.apache.poi.hpsf.MutableProperty;

        r1 := @parameter0: org.apache.poi.hpsf.Property;

        specialinvoke r0.<org.apache.poi.hpsf.Property: void <init>()>();

        $l0 = virtualinvoke r1.<org.apache.poi.hpsf.Property: long getID()>();

        virtualinvoke r0.<org.apache.poi.hpsf.MutableProperty: void setID(long)>($l0);

        $l1 = virtualinvoke r1.<org.apache.poi.hpsf.Property: long getType()>();

        virtualinvoke r0.<org.apache.poi.hpsf.MutableProperty: void setType(long)>($l1);

        $r2 = virtualinvoke r1.<org.apache.poi.hpsf.Property: java.lang.Object getValue()>();

        virtualinvoke r0.<org.apache.poi.hpsf.MutableProperty: void setValue(java.lang.Object)>($r2);

        return;
    }

    public void setID(long)
    {
        long l0;
        org.apache.poi.hpsf.MutableProperty r0;

        r0 := @this: org.apache.poi.hpsf.MutableProperty;

        l0 := @parameter0: long;

        r0.<org.apache.poi.hpsf.MutableProperty: long id> = l0;

        return;
    }

    public void setType(long)
    {
        long l0;
        org.apache.poi.hpsf.MutableProperty r0;

        r0 := @this: org.apache.poi.hpsf.MutableProperty;

        l0 := @parameter0: long;

        r0.<org.apache.poi.hpsf.MutableProperty: long type> = l0;

        return;
    }

    public void setValue(java.lang.Object)
    {
        java.lang.Object r1;
        org.apache.poi.hpsf.MutableProperty r0;

        r0 := @this: org.apache.poi.hpsf.MutableProperty;

        r1 := @parameter0: java.lang.Object;

        r0.<org.apache.poi.hpsf.MutableProperty: java.lang.Object value> = r1;

        return;
    }

    public int write(java.io.OutputStream, int) throws java.io.IOException, org.apache.poi.hpsf.WritingNotSupportedException
    {
        java.io.OutputStream r1;
        org.apache.poi.hpsf.MutableProperty r0;
        long $l0, l3;
        byte $b2;
        int i1, $i4, $i5, $i6, $i7;
        java.lang.Object $r2;

        r0 := @this: org.apache.poi.hpsf.MutableProperty;

        r1 := @parameter0: java.io.OutputStream;

        i1 := @parameter1: int;

        $l0 = virtualinvoke r0.<org.apache.poi.hpsf.MutableProperty: long getType()>();

        l3 = $l0;

        if i1 != 1200 goto label1;

        $b2 = $l0 cmp 30L;

        if $b2 != 0 goto label1;

        l3 = 31L;

     label1:
        $i4 = staticinvoke <org.apache.poi.hpsf.TypeWriter: int writeUIntToStream(java.io.OutputStream,long)>(r1, l3);

        $i5 = 0 + $i4;

        $r2 = virtualinvoke r0.<org.apache.poi.hpsf.MutableProperty: java.lang.Object getValue()>();

        $i6 = staticinvoke <org.apache.poi.hpsf.VariantSupport: int write(java.io.OutputStream,long,java.lang.Object,int)>(r1, l3, $r2, i1);

        $i7 = $i5 + $i6;

        return $i7;
    }
}
