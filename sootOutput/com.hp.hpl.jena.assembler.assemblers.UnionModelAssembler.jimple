public class com.hp.hpl.jena.assembler.assemblers.UnionModelAssembler extends com.hp.hpl.jena.assembler.assemblers.ModelAssembler implements com.hp.hpl.jena.assembler.Assembler
{
    private static final com.hp.hpl.jena.graph.Graph immutable;

    public void <init>()
    {
        com.hp.hpl.jena.assembler.assemblers.UnionModelAssembler r0;

        r0 := @this: com.hp.hpl.jena.assembler.assemblers.UnionModelAssembler;

        specialinvoke r0.<com.hp.hpl.jena.assembler.assemblers.ModelAssembler: void <init>()>();

        return;
    }

    protected com.hp.hpl.jena.rdf.model.Model openEmptyModel(com.hp.hpl.jena.assembler.Assembler, com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.assembler.Mode)
    {
        com.hp.hpl.jena.assembler.Assembler r4;
        com.hp.hpl.jena.assembler.Mode r5;
        com.hp.hpl.jena.assembler.assemblers.UnionModelAssembler r0;
        com.hp.hpl.jena.rdf.model.Resource r1, $r2;
        com.hp.hpl.jena.graph.compose.MultiUnion $r3;
        com.hp.hpl.jena.rdf.model.Model $r7;
        com.hp.hpl.jena.graph.Graph $r6;

        r0 := @this: com.hp.hpl.jena.assembler.assemblers.UnionModelAssembler;

        r4 := @parameter0: com.hp.hpl.jena.assembler.Assembler;

        r1 := @parameter1: com.hp.hpl.jena.rdf.model.Resource;

        r5 := @parameter2: com.hp.hpl.jena.assembler.Mode;

        $r2 = <com.hp.hpl.jena.assembler.JA: com.hp.hpl.jena.rdf.model.Resource UnionModel>;

        virtualinvoke r0.<com.hp.hpl.jena.assembler.assemblers.UnionModelAssembler: void checkType(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Resource)>(r1, $r2);

        $r3 = new com.hp.hpl.jena.graph.compose.MultiUnion;

        specialinvoke $r3.<com.hp.hpl.jena.graph.compose.MultiUnion: void <init>()>();

        $r6 = specialinvoke r0.<com.hp.hpl.jena.assembler.assemblers.UnionModelAssembler: com.hp.hpl.jena.graph.Graph getRootModel(com.hp.hpl.jena.assembler.Assembler,com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.assembler.Mode)>(r4, r1, r5);

        virtualinvoke $r3.<com.hp.hpl.jena.graph.compose.MultiUnion: void addGraph(com.hp.hpl.jena.graph.Graph)>($r6);

        specialinvoke r0.<com.hp.hpl.jena.assembler.assemblers.UnionModelAssembler: void addSubModels(com.hp.hpl.jena.assembler.Assembler,com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.graph.compose.MultiUnion,com.hp.hpl.jena.assembler.Mode)>(r4, r1, $r3, r5);

        $r7 = staticinvoke <com.hp.hpl.jena.rdf.model.ModelFactory: com.hp.hpl.jena.rdf.model.Model createModelForGraph(com.hp.hpl.jena.graph.Graph)>($r3);

        return $r7;
    }

    private com.hp.hpl.jena.graph.Graph getRootModel(com.hp.hpl.jena.assembler.Assembler, com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.assembler.Mode)
    {
        com.hp.hpl.jena.assembler.Assembler r3;
        com.hp.hpl.jena.assembler.Mode r4;
        com.hp.hpl.jena.assembler.assemblers.UnionModelAssembler r6;
        com.hp.hpl.jena.rdf.model.Resource r0, $r2;
        com.hp.hpl.jena.rdf.model.Property $r1;
        com.hp.hpl.jena.rdf.model.Model $r5;
        com.hp.hpl.jena.graph.Graph $r7;

        r6 := @this: com.hp.hpl.jena.assembler.assemblers.UnionModelAssembler;

        r3 := @parameter0: com.hp.hpl.jena.assembler.Assembler;

        r0 := @parameter1: com.hp.hpl.jena.rdf.model.Resource;

        r4 := @parameter2: com.hp.hpl.jena.assembler.Mode;

        $r1 = <com.hp.hpl.jena.assembler.JA: com.hp.hpl.jena.rdf.model.Property rootModel>;

        $r2 = staticinvoke <com.hp.hpl.jena.assembler.assemblers.UnionModelAssembler: com.hp.hpl.jena.rdf.model.Resource getUniqueResource(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property)>(r0, $r1);

        if $r2 != null goto label1;

        $r7 = <com.hp.hpl.jena.assembler.assemblers.UnionModelAssembler: com.hp.hpl.jena.graph.Graph immutable>;

        goto label2;

     label1:
        $r5 = interfaceinvoke r3.<com.hp.hpl.jena.assembler.Assembler: com.hp.hpl.jena.rdf.model.Model openModel(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.assembler.Mode)>($r2, r4);

        $r7 = interfaceinvoke $r5.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.graph.Graph getGraph()>();

     label2:
        return $r7;
    }

    private void addSubModels(com.hp.hpl.jena.assembler.Assembler, com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.graph.compose.MultiUnion, com.hp.hpl.jena.assembler.Mode)
    {
        com.hp.hpl.jena.assembler.Assembler r6;
        com.hp.hpl.jena.assembler.Mode r7;
        com.hp.hpl.jena.assembler.assemblers.UnionModelAssembler r10;
        com.hp.hpl.jena.rdf.model.Statement $r3;
        com.hp.hpl.jena.rdf.model.Resource r0, $r4;
        com.hp.hpl.jena.rdf.model.StmtIterator $r2;
        com.hp.hpl.jena.rdf.model.Property $r1;
        com.hp.hpl.jena.graph.compose.MultiUnion r5;
        com.hp.hpl.jena.rdf.model.Model $r8;
        com.hp.hpl.jena.graph.Graph $r9;
        boolean $z0;

        r10 := @this: com.hp.hpl.jena.assembler.assemblers.UnionModelAssembler;

        r6 := @parameter0: com.hp.hpl.jena.assembler.Assembler;

        r0 := @parameter1: com.hp.hpl.jena.rdf.model.Resource;

        r5 := @parameter2: com.hp.hpl.jena.graph.compose.MultiUnion;

        r7 := @parameter3: com.hp.hpl.jena.assembler.Mode;

        $r1 = <com.hp.hpl.jena.assembler.JA: com.hp.hpl.jena.rdf.model.Property subModel>;

        $r2 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.StmtIterator listProperties(com.hp.hpl.jena.rdf.model.Property)>($r1);

     label1:
        $z0 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.StmtIterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.StmtIterator: com.hp.hpl.jena.rdf.model.Statement nextStatement()>();

        $r4 = staticinvoke <com.hp.hpl.jena.assembler.assemblers.UnionModelAssembler: com.hp.hpl.jena.rdf.model.Resource getResource(com.hp.hpl.jena.rdf.model.Statement)>($r3);

        $r8 = interfaceinvoke r6.<com.hp.hpl.jena.assembler.Assembler: com.hp.hpl.jena.rdf.model.Model openModel(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.assembler.Mode)>($r4, r7);

        $r9 = interfaceinvoke $r8.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.graph.Graph getGraph()>();

        virtualinvoke r5.<com.hp.hpl.jena.graph.compose.MultiUnion: void addGraph(com.hp.hpl.jena.graph.Graph)>($r9);

        goto label1;

     label2:
        return;
    }

    static void <clinit>()
    {
        com.hp.hpl.jena.assembler.assemblers.UnionModelAssembler$1 $r0;

        $r0 = new com.hp.hpl.jena.assembler.assemblers.UnionModelAssembler$1;

        specialinvoke $r0.<com.hp.hpl.jena.assembler.assemblers.UnionModelAssembler$1: void <init>()>();

        <com.hp.hpl.jena.assembler.assemblers.UnionModelAssembler: com.hp.hpl.jena.graph.Graph immutable> = $r0;

        return;
    }
}
