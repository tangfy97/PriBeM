public class com.pff.PSTAttachment extends com.pff.PSTObject
{
    public static final int ATTACHMENT_METHOD_NONE;
    public static final int ATTACHMENT_METHOD_BY_VALUE;
    public static final int ATTACHMENT_METHOD_BY_REFERENCE;
    public static final int ATTACHMENT_METHOD_BY_REFERENCE_RESOLVE;
    public static final int ATTACHMENT_METHOD_BY_REFERENCE_ONLY;
    public static final int ATTACHMENT_METHOD_EMBEDDED;
    public static final int ATTACHMENT_METHOD_OLE;

    void <init>(com.pff.PSTFile, com.pff.PSTTableBC, java.util.HashMap)
    {
        com.pff.PSTAttachment r0;
        com.pff.PSTFile r1;
        java.util.HashMap r3;
        com.pff.PSTTableBC r2;

        r0 := @this: com.pff.PSTAttachment;

        r1 := @parameter0: com.pff.PSTFile;

        r2 := @parameter1: com.pff.PSTTableBC;

        r3 := @parameter2: java.util.HashMap;

        specialinvoke r0.<com.pff.PSTObject: void <init>(com.pff.PSTFile,com.pff.DescriptorIndexNode,com.pff.PSTTableBC,java.util.HashMap)>(r1, null, r2, r3);

        return;
    }

    public int getSize()
    {
        com.pff.PSTAttachment r0;
        int $i0;

        r0 := @this: com.pff.PSTAttachment;

        $i0 = virtualinvoke r0.<com.pff.PSTAttachment: int getIntItem(int)>(3616);

        return $i0;
    }

    public java.util.Date getCreationTime()
    {
        com.pff.PSTAttachment r0;
        java.util.Date $r1;

        r0 := @this: com.pff.PSTAttachment;

        $r1 = virtualinvoke r0.<com.pff.PSTAttachment: java.util.Date getDateItem(int)>(12295);

        return $r1;
    }

    public java.util.Date getModificationTime()
    {
        com.pff.PSTAttachment r0;
        java.util.Date $r1;

        r0 := @this: com.pff.PSTAttachment;

        $r1 = virtualinvoke r0.<com.pff.PSTAttachment: java.util.Date getDateItem(int)>(12296);

        return $r1;
    }

    public com.pff.PSTMessage getEmbeddedPSTMessage() throws java.io.IOException, com.pff.PSTException
    {
        byte[] $r10, $r22;
        java.lang.Integer $r2, $r12;
        boolean $z0;
        com.pff.PSTException $r20, $r24;
        com.pff.PSTFile $r8, $r16, $r17, $r23;
        com.pff.PSTNodeInputStream $r15, $r21, r25;
        com.pff.PSTMessage $r9;
        java.util.HashMap $r1, $r6, $r11, $r18, $r19;
        long $l3, $l5;
        com.pff.PSTTableBC $r5;
        com.pff.PSTTableBCItem r4;
        int $i0, $i1, $i2, $i4, i6;
        com.pff.DescriptorIndexNode $r7;
        com.pff.PSTAttachment r0;
        com.pff.PSTDescriptorItem r14;
        java.lang.Object $r3, $r13;

        r0 := @this: com.pff.PSTAttachment;

        r25 = null;

        $i0 = virtualinvoke r0.<com.pff.PSTAttachment: int getIntItem(int)>(14085);

        if $i0 != 5 goto label7;

        $r1 = r0.<com.pff.PSTAttachment: java.util.HashMap items>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(14081);

        $r3 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        r4 = (com.pff.PSTTableBCItem) $r3;

        $i1 = r4.<com.pff.PSTTableBCItem: int entryValueType>;

        if $i1 != 258 goto label2;

        $z0 = r4.<com.pff.PSTTableBCItem: boolean isExternalValueReference>;

        if $z0 != 0 goto label1;

        $r21 = new com.pff.PSTNodeInputStream;

        $r23 = r0.<com.pff.PSTAttachment: com.pff.PSTFile pstFile>;

        $r22 = r4.<com.pff.PSTTableBCItem: byte[] data>;

        specialinvoke $r21.<com.pff.PSTNodeInputStream: void <init>(com.pff.PSTFile,byte[])>($r23, $r22);

        r25 = $r21;

        goto label3;

     label1:
        $r20 = new com.pff.PSTException;

        specialinvoke $r20.<com.pff.PSTException: void <init>(java.lang.String)>("External reference in getEmbeddedPSTMessage()!\n");

        throw $r20;

     label2:
        $i2 = r4.<com.pff.PSTTableBCItem: int entryValueType>;

        if $i2 != 13 goto label3;

        $r10 = r4.<com.pff.PSTTableBCItem: byte[] data>;

        $l3 = staticinvoke <com.pff.PSTObject: long convertLittleEndianBytesToLong(byte[],int,int)>($r10, 0, 4);

        i6 = (int) $l3;

        $r11 = r0.<com.pff.PSTAttachment: java.util.HashMap localDescriptorItems>;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6);

        $r13 = virtualinvoke $r11.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r12);

        r14 = (com.pff.PSTDescriptorItem) $r13;

        $r15 = new com.pff.PSTNodeInputStream;

        $r16 = r0.<com.pff.PSTAttachment: com.pff.PSTFile pstFile>;

        specialinvoke $r15.<com.pff.PSTNodeInputStream: void <init>(com.pff.PSTFile,com.pff.PSTDescriptorItem)>($r16, r14);

        r25 = $r15;

        $r18 = r0.<com.pff.PSTAttachment: java.util.HashMap localDescriptorItems>;

        $r17 = r0.<com.pff.PSTAttachment: com.pff.PSTFile pstFile>;

        $i4 = r14.<com.pff.PSTDescriptorItem: int subNodeOffsetIndexIdentifier>;

        $l5 = (long) $i4;

        $r19 = virtualinvoke $r17.<com.pff.PSTFile: java.util.HashMap getPSTDescriptorItems(long)>($l5);

        virtualinvoke $r18.<java.util.HashMap: void putAll(java.util.Map)>($r19);

     label3:
        if r25 != null goto label4;

        return null;

     label4:
        $r5 = new com.pff.PSTTableBC;

        specialinvoke $r5.<com.pff.PSTTableBC: void <init>(com.pff.PSTNodeInputStream)>(r25);

        $r8 = r0.<com.pff.PSTAttachment: com.pff.PSTFile pstFile>;

        $r7 = r0.<com.pff.PSTAttachment: com.pff.DescriptorIndexNode descriptorIndexNode>;

        $r6 = r0.<com.pff.PSTAttachment: java.util.HashMap localDescriptorItems>;

        $r9 = staticinvoke <com.pff.PSTObject: com.pff.PSTMessage createAppropriatePSTMessageObject(com.pff.PSTFile,com.pff.DescriptorIndexNode,com.pff.PSTTableBC,java.util.HashMap)>($r8, $r7, $r5, $r6);

     label5:
        return $r9;

     label6:
        $r24 := @caughtexception;

        virtualinvoke $r24.<com.pff.PSTException: void printStackTrace()>();

        return null;

     label7:
        return null;

        catch com.pff.PSTException from label4 to label5 with label6;
    }

    public java.io.InputStream getFileInputStream() throws java.io.IOException, com.pff.PSTException
    {
        byte[] $r6;
        java.util.HashMap $r1, $r8;
        java.lang.Integer $r2, $r9;
        com.pff.PSTTableBCItem r4;
        int $i0;
        boolean $z0;
        com.pff.PSTAttachment r0;
        com.pff.PSTDescriptorItem r11;
        com.pff.PSTFile $r7, $r13;
        java.lang.Object $r3, $r10;
        com.pff.PSTNodeInputStream $r5, $r12;

        r0 := @this: com.pff.PSTAttachment;

        $r1 = r0.<com.pff.PSTAttachment: java.util.HashMap items>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(14081);

        $r3 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        r4 = (com.pff.PSTTableBCItem) $r3;

        $z0 = r4.<com.pff.PSTTableBCItem: boolean isExternalValueReference>;

        if $z0 == 0 goto label1;

        $r8 = r0.<com.pff.PSTAttachment: java.util.HashMap localDescriptorItems>;

        $i0 = r4.<com.pff.PSTTableBCItem: int entryValueReference>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r10 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r9);

        r11 = (com.pff.PSTDescriptorItem) $r10;

        $r12 = new com.pff.PSTNodeInputStream;

        $r13 = r0.<com.pff.PSTAttachment: com.pff.PSTFile pstFile>;

        specialinvoke $r12.<com.pff.PSTNodeInputStream: void <init>(com.pff.PSTFile,com.pff.PSTDescriptorItem)>($r13, r11);

        return $r12;

     label1:
        $r5 = new com.pff.PSTNodeInputStream;

        $r7 = r0.<com.pff.PSTAttachment: com.pff.PSTFile pstFile>;

        $r6 = r4.<com.pff.PSTTableBCItem: byte[] data>;

        specialinvoke $r5.<com.pff.PSTNodeInputStream: void <init>(com.pff.PSTFile,byte[],boolean)>($r7, $r6, 0);

        return $r5;
    }

    public int getFilesize() throws com.pff.PSTException, java.io.IOException
    {
        byte[] $r5;
        java.util.HashMap $r1, $r6;
        java.lang.Integer $r2, $r7;
        com.pff.PSTTableBCItem r4;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r14;
        boolean $z0;
        com.pff.PSTAttachment r0;
        com.pff.PSTDescriptorItem r9;
        com.pff.PSTException $r10;
        java.lang.Object $r3, $r8;
        java.lang.StringBuilder $r11, $r12, $r13;

        r0 := @this: com.pff.PSTAttachment;

        $r1 = r0.<com.pff.PSTAttachment: java.util.HashMap items>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(14081);

        $r3 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        r4 = (com.pff.PSTTableBCItem) $r3;

        $z0 = r4.<com.pff.PSTTableBCItem: boolean isExternalValueReference>;

        if $z0 == 0 goto label2;

        $r6 = r0.<com.pff.PSTAttachment: java.util.HashMap localDescriptorItems>;

        $i1 = r4.<com.pff.PSTTableBCItem: int entryValueReference>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r8 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r7);

        r9 = (com.pff.PSTDescriptorItem) $r8;

        if r9 != null goto label1;

        $r10 = new com.pff.PSTException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("missing attachment descriptor item for: ");

        $i3 = r4.<com.pff.PSTTableBCItem: int entryValueReference>;

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<com.pff.PSTException: void <init>(java.lang.String)>($r14);

        throw $r10;

     label1:
        $i2 = virtualinvoke r9.<com.pff.PSTDescriptorItem: int getDataSize()>();

        return $i2;

     label2:
        $r5 = r4.<com.pff.PSTTableBCItem: byte[] data>;

        $i0 = lengthof $r5;

        return $i0;
    }

    public java.lang.String getFilename()
    {
        com.pff.PSTAttachment r0;
        java.lang.String $r1;

        r0 := @this: com.pff.PSTAttachment;

        $r1 = virtualinvoke r0.<com.pff.PSTAttachment: java.lang.String getStringItem(int)>(14084);

        return $r1;
    }

    public int getAttachMethod()
    {
        com.pff.PSTAttachment r0;
        int $i0;

        r0 := @this: com.pff.PSTAttachment;

        $i0 = virtualinvoke r0.<com.pff.PSTAttachment: int getIntItem(int)>(14085);

        return $i0;
    }

    public int getAttachSize()
    {
        com.pff.PSTAttachment r0;
        int $i0;

        r0 := @this: com.pff.PSTAttachment;

        $i0 = virtualinvoke r0.<com.pff.PSTAttachment: int getIntItem(int)>(3616);

        return $i0;
    }

    public int getAttachNum()
    {
        com.pff.PSTAttachment r0;
        int $i0;

        r0 := @this: com.pff.PSTAttachment;

        $i0 = virtualinvoke r0.<com.pff.PSTAttachment: int getIntItem(int)>(3617);

        return $i0;
    }

    public java.lang.String getLongFilename()
    {
        com.pff.PSTAttachment r0;
        java.lang.String $r1;

        r0 := @this: com.pff.PSTAttachment;

        $r1 = virtualinvoke r0.<com.pff.PSTAttachment: java.lang.String getStringItem(int)>(14087);

        return $r1;
    }

    public java.lang.String getPathname()
    {
        com.pff.PSTAttachment r0;
        java.lang.String $r1;

        r0 := @this: com.pff.PSTAttachment;

        $r1 = virtualinvoke r0.<com.pff.PSTAttachment: java.lang.String getStringItem(int)>(14088);

        return $r1;
    }

    public int getRenderingPosition()
    {
        com.pff.PSTAttachment r0;
        int $i0;

        r0 := @this: com.pff.PSTAttachment;

        $i0 = virtualinvoke r0.<com.pff.PSTAttachment: int getIntItem(int)>(14091);

        return $i0;
    }

    public java.lang.String getLongPathname()
    {
        com.pff.PSTAttachment r0;
        java.lang.String $r1;

        r0 := @this: com.pff.PSTAttachment;

        $r1 = virtualinvoke r0.<com.pff.PSTAttachment: java.lang.String getStringItem(int)>(14093);

        return $r1;
    }

    public java.lang.String getMimeTag()
    {
        com.pff.PSTAttachment r0;
        java.lang.String $r1;

        r0 := @this: com.pff.PSTAttachment;

        $r1 = virtualinvoke r0.<com.pff.PSTAttachment: java.lang.String getStringItem(int)>(14094);

        return $r1;
    }

    public int getMimeSequence()
    {
        com.pff.PSTAttachment r0;
        int $i0;

        r0 := @this: com.pff.PSTAttachment;

        $i0 = virtualinvoke r0.<com.pff.PSTAttachment: int getIntItem(int)>(14096);

        return $i0;
    }

    public java.lang.String getContentId()
    {
        com.pff.PSTAttachment r0;
        java.lang.String $r1;

        r0 := @this: com.pff.PSTAttachment;

        $r1 = virtualinvoke r0.<com.pff.PSTAttachment: java.lang.String getStringItem(int)>(14098);

        return $r1;
    }

    public boolean isAttachmentInvisibleInHtml()
    {
        com.pff.PSTAttachment r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.pff.PSTAttachment;

        $i0 = virtualinvoke r0.<com.pff.PSTAttachment: int getIntItem(int)>(14100);

        $i1 = $i0 & 1;

        if $i1 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isAttachmentInvisibleInRTF()
    {
        com.pff.PSTAttachment r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.pff.PSTAttachment;

        $i0 = virtualinvoke r0.<com.pff.PSTAttachment: int getIntItem(int)>(14100);

        $i1 = $i0 & 2;

        if $i1 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isAttachmentMhtmlRef()
    {
        com.pff.PSTAttachment r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.pff.PSTAttachment;

        $i0 = virtualinvoke r0.<com.pff.PSTAttachment: int getIntItem(int)>(14100);

        $i1 = $i0 & 4;

        if $i1 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.String getAttachmentContentDisposition()
    {
        com.pff.PSTAttachment r0;
        java.lang.String $r1;

        r0 := @this: com.pff.PSTAttachment;

        $r1 = virtualinvoke r0.<com.pff.PSTAttachment: java.lang.String getStringItem(int)>(14102);

        return $r1;
    }

    public static void <clinit>()
    {
        <com.pff.PSTAttachment: int ATTACHMENT_METHOD_OLE> = 6;

        <com.pff.PSTAttachment: int ATTACHMENT_METHOD_EMBEDDED> = 5;

        <com.pff.PSTAttachment: int ATTACHMENT_METHOD_BY_REFERENCE_ONLY> = 4;

        <com.pff.PSTAttachment: int ATTACHMENT_METHOD_BY_REFERENCE_RESOLVE> = 3;

        <com.pff.PSTAttachment: int ATTACHMENT_METHOD_BY_REFERENCE> = 2;

        <com.pff.PSTAttachment: int ATTACHMENT_METHOD_BY_VALUE> = 1;

        <com.pff.PSTAttachment: int ATTACHMENT_METHOD_NONE> = 0;

        return;
    }
}
