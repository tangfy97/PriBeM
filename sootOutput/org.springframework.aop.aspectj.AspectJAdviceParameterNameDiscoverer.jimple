public class org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer extends java.lang.Object implements org.springframework.core.ParameterNameDiscoverer
{
    private static final java.lang.String THIS_JOIN_POINT;
    private static final java.lang.String THIS_JOIN_POINT_STATIC_PART;
    private static final int STEP_JOIN_POINT_BINDING;
    private static final int STEP_THROWING_BINDING;
    private static final int STEP_ANNOTATION_BINDING;
    private static final int STEP_RETURNING_BINDING;
    private static final int STEP_PRIMITIVE_ARGS_BINDING;
    private static final int STEP_THIS_TARGET_ARGS_BINDING;
    private static final int STEP_REFERENCE_PCUT_BINDING;
    private static final int STEP_FINISHED;
    private static final java.util.Set singleValuedAnnotationPcds;
    private static final java.util.Set nonReferencePointcutTokens;
    private boolean raiseExceptions;
    private java.lang.String returningName;
    private java.lang.String throwingName;
    private java.lang.String pointcutExpression;
    private java.lang.Class[] argumentTypes;
    private java.lang.String[] parameterNameBindings;
    private int numberOfRemainingUnboundArguments;

    static void <clinit>()
    {
        java.util.HashSet $r0, $r1;
        java.lang.String $r12;
        boolean $z0;
        org.aspectj.weaver.tools.PointcutPrimitive r10;
        java.util.Iterator $r8;
        java.util.Set $r2, $r3, $r4, $r5, $r6, $r7, $r11, $r13, $r14, $r15, $r16, $r17, $r18;
        java.lang.Object $r9;

        <org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: int STEP_FINISHED> = 8;

        <org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: int STEP_REFERENCE_PCUT_BINDING> = 7;

        <org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: int STEP_THIS_TARGET_ARGS_BINDING> = 6;

        <org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: int STEP_PRIMITIVE_ARGS_BINDING> = 5;

        <org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: int STEP_RETURNING_BINDING> = 4;

        <org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: int STEP_ANNOTATION_BINDING> = 3;

        <org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: int STEP_THROWING_BINDING> = 2;

        <org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: int STEP_JOIN_POINT_BINDING> = 1;

        <org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: java.lang.String THIS_JOIN_POINT_STATIC_PART> = "thisJoinPointStaticPart";

        <org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: java.lang.String THIS_JOIN_POINT> = "thisJoinPoint";

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        <org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: java.util.Set singleValuedAnnotationPcds> = $r0;

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        <org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: java.util.Set nonReferencePointcutTokens> = $r1;

        $r2 = <org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: java.util.Set singleValuedAnnotationPcds>;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>("@this");

        $r3 = <org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: java.util.Set singleValuedAnnotationPcds>;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>("@target");

        $r4 = <org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: java.util.Set singleValuedAnnotationPcds>;

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>("@within");

        $r5 = <org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: java.util.Set singleValuedAnnotationPcds>;

        interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>("@withincode");

        $r6 = <org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: java.util.Set singleValuedAnnotationPcds>;

        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>("@annotation");

        $r7 = staticinvoke <org.aspectj.weaver.tools.PointcutParser: java.util.Set getAllSupportedPointcutPrimitives()>();

        $r8 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (org.aspectj.weaver.tools.PointcutPrimitive) $r9;

        $r11 = <org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: java.util.Set nonReferencePointcutTokens>;

        $r12 = virtualinvoke r10.<org.aspectj.weaver.tools.PointcutPrimitive: java.lang.String getName()>();

        interfaceinvoke $r11.<java.util.Set: boolean add(java.lang.Object)>($r12);

     label2:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r13 = <org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: java.util.Set nonReferencePointcutTokens>;

        interfaceinvoke $r13.<java.util.Set: boolean add(java.lang.Object)>("&&");

        $r14 = <org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: java.util.Set nonReferencePointcutTokens>;

        interfaceinvoke $r14.<java.util.Set: boolean add(java.lang.Object)>("!");

        $r15 = <org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: java.util.Set nonReferencePointcutTokens>;

        interfaceinvoke $r15.<java.util.Set: boolean add(java.lang.Object)>("||");

        $r16 = <org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: java.util.Set nonReferencePointcutTokens>;

        interfaceinvoke $r16.<java.util.Set: boolean add(java.lang.Object)>("and");

        $r17 = <org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: java.util.Set nonReferencePointcutTokens>;

        interfaceinvoke $r17.<java.util.Set: boolean add(java.lang.Object)>("or");

        $r18 = <org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: java.util.Set nonReferencePointcutTokens>;

        interfaceinvoke $r18.<java.util.Set: boolean add(java.lang.Object)>("not");

        return;
    }

    public void <init>(java.lang.String)
    {
        org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer r0;
        java.lang.String r1;

        r0 := @this: org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: java.lang.String pointcutExpression> = r1;

        return;
    }

    public void setRaiseExceptions(boolean)
    {
        org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer r0;
        boolean z0;

        r0 := @this: org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer;

        z0 := @parameter0: boolean;

        r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: boolean raiseExceptions> = z0;

        return;
    }

    public void setReturningName(java.lang.String)
    {
        org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer r0;
        java.lang.String r1;

        r0 := @this: org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer;

        r1 := @parameter0: java.lang.String;

        r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: java.lang.String returningName> = r1;

        return;
    }

    public void setThrowingName(java.lang.String)
    {
        org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer r0;
        java.lang.String r1;

        r0 := @this: org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer;

        r1 := @parameter0: java.lang.String;

        r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: java.lang.String throwingName> = r1;

        return;
    }

    public java.lang.String[] getParameterNames(java.lang.reflect.Method)
    {
        java.lang.IllegalStateException $r7, $r13, $r17;
        java.lang.reflect.Method r1;
        boolean $z0, $z1, $z2, $z3;
        org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer r0;
        java.lang.StringBuilder $r8, $r9, $r10, $r14, $r15;
        java.lang.String[] $r4, $r12;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8, $i9;
        java.lang.String $r5, $r6, $r11, $r16;
        java.lang.Class[] $r2, $r3;
        java.lang.IllegalArgumentException $r18;
        org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$AmbiguousBindingException $r19;

        r0 := @this: org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer;

        r1 := @parameter0: java.lang.reflect.Method;

        $r2 = virtualinvoke r1.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: java.lang.Class[] argumentTypes> = $r2;

        $r3 = r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: java.lang.Class[] argumentTypes>;

        $i0 = lengthof $r3;

        r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: int numberOfRemainingUnboundArguments> = $i0;

        $i1 = r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: int numberOfRemainingUnboundArguments>;

        $r4 = newarray (java.lang.String)[$i1];

        r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: java.lang.String[] parameterNameBindings> = $r4;

        i7 = 0;

        $r5 = r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: java.lang.String returningName>;

        if $r5 == null goto label01;

        i7 = 1;

     label01:
        $r6 = r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: java.lang.String throwingName>;

        if $r6 == null goto label02;

        i7 = i7 + 1;

     label02:
        $i2 = r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: int numberOfRemainingUnboundArguments>;

        if $i2 >= i7 goto label03;

        $r17 = new java.lang.IllegalStateException;

        specialinvoke $r17.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not enough arguments in method to satisfy binding of returning and throwing variables");

        throw $r17;

     label03:
        i8 = 1;

        goto label13;

     label04:
        $i5 = i8;

        i8 = i8 + 1;

        tableswitch($i5)
        {
            case 1: goto label05;
            case 2: goto label06;
            case 3: goto label07;
            case 4: goto label08;
            case 5: goto label09;
            case 6: goto label10;
            case 7: goto label11;
            default: goto label12;
        };

     label05:
        $z1 = specialinvoke r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: boolean maybeBindThisJoinPoint()>();

        if $z1 != 0 goto label13;

        specialinvoke r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: void maybeBindThisJoinPointStaticPart()>();

        goto label13;

     label06:
        specialinvoke r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: void maybeBindThrowingVariable()>();

        goto label13;

     label07:
        specialinvoke r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: void maybeBindAnnotationsFromPointcutExpression()>();

        goto label13;

     label08:
        specialinvoke r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: void maybeBindReturningVariable()>();

        goto label13;

     label09:
        specialinvoke r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: void maybeBindPrimitiveArgsFromPointcutExpression()>();

        goto label13;

     label10:
        specialinvoke r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: void maybeBindThisOrTargetOrArgsFromPointcutExpression()>();

        goto label13;

     label11:
        specialinvoke r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: void maybeBindReferencePointcutParameter()>();

        goto label13;

     label12:
        $r13 = new java.lang.IllegalStateException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>("Unknown algorithmic step: ");

        $i6 = i8 - 1;

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r16);

        throw $r13;

     label13:
        $i9 = r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: int numberOfRemainingUnboundArguments>;

        if $i9 <= 0 goto label19;

        if i8 < 8 goto label04;

     label14:
        goto label19;

     label15:
        $r19 := @caughtexception;

        $z3 = r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: boolean raiseExceptions>;

        if $z3 == 0 goto label16;

        throw $r19;

     label16:
        return null;

     label17:
        $r18 := @caughtexception;

        $z2 = r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: boolean raiseExceptions>;

        if $z2 == 0 goto label18;

        throw $r18;

     label18:
        return null;

     label19:
        $i3 = r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: int numberOfRemainingUnboundArguments>;

        if $i3 != 0 goto label20;

        $r12 = r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: java.lang.String[] parameterNameBindings>;

        return $r12;

     label20:
        $z0 = r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: boolean raiseExceptions>;

        if $z0 == 0 goto label21;

        $r7 = new java.lang.IllegalStateException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("Failed to bind all argument names: ");

        $i4 = r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: int numberOfRemainingUnboundArguments>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" argument(s) could not be bound");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        throw $r7;

     label21:
        return null;

        catch org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$AmbiguousBindingException from label03 to label14 with label15;
        catch java.lang.IllegalArgumentException from label03 to label14 with label17;
    }

    public java.lang.String[] getParameterNames(java.lang.reflect.Constructor)
    {
        org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer r0;
        java.lang.UnsupportedOperationException $r1;
        java.lang.reflect.Constructor r2;
        boolean $z0;

        r0 := @this: org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer;

        r2 := @parameter0: java.lang.reflect.Constructor;

        $z0 = r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: boolean raiseExceptions>;

        if $z0 == 0 goto label1;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("An advice method can never be a constructor");

        throw $r1;

     label1:
        return null;
    }

    private void bindParameterName(int, java.lang.String)
    {
        org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer r0;
        int i0, $i1, $i2;
        java.lang.String[] $r2;
        java.lang.String r1;

        r0 := @this: org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r2 = r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: java.lang.String[] parameterNameBindings>;

        $r2[i0] = r1;

        $i1 = r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: int numberOfRemainingUnboundArguments>;

        $i2 = $i1 - 1;

        r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: int numberOfRemainingUnboundArguments> = $i2;

        return;
    }

    private boolean maybeBindThisJoinPoint()
    {
        org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer r0;
        java.lang.Class[] $r1, $r3;
        java.lang.Class $r2, $r4;

        r0 := @this: org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer;

        $r1 = r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: java.lang.Class[] argumentTypes>;

        $r2 = $r1[0];

        if $r2 == class "Lorg/aspectj/lang/JoinPoint;" goto label1;

        $r3 = r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: java.lang.Class[] argumentTypes>;

        $r4 = $r3[0];

        if $r4 != class "Lorg/aspectj/lang/ProceedingJoinPoint;" goto label2;

     label1:
        specialinvoke r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: void bindParameterName(int,java.lang.String)>(0, "thisJoinPoint");

        return 1;

     label2:
        return 0;
    }

    private void maybeBindThisJoinPointStaticPart()
    {
        org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer r0;
        java.lang.Class[] $r1;
        java.lang.Class $r2;

        r0 := @this: org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer;

        $r1 = r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: java.lang.Class[] argumentTypes>;

        $r2 = $r1[0];

        if $r2 != class "Lorg/aspectj/lang/JoinPoint$StaticPart;" goto label1;

        specialinvoke r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: void bindParameterName(int,java.lang.String)>(0, "thisJoinPointStaticPart");

     label1:
        return;
    }

    private void maybeBindThrowingVariable()
    {
        java.lang.IllegalStateException $r22;
        int i0, i1, $i2, $i4, $i6, $i8;
        java.lang.String $r1, $r4, $r10, $r11, $r14, $r17;
        boolean $z0, $z1;
        org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer r0;
        java.lang.Class[] $r18;
        org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$AmbiguousBindingException $r20;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9, $r15, $r16, $r19, $r21;

        r0 := @this: org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer;

        $r1 = r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: java.lang.String throwingName>;

        if $r1 != null goto label1;

        return;

     label1:
        $i4 = (int) -1;

        i0 = $i4;

        i1 = 0;

        goto label5;

     label2:
        $z0 = specialinvoke r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: boolean isUnbound(int)>(i1);

        if $z0 == 0 goto label4;

        $z1 = specialinvoke r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: boolean isSubtypeOf(java.lang.Class,int)>(class "Ljava/lang/Throwable;", i1);

        if $z1 == 0 goto label4;

        $i6 = (int) -1;

        if i0 != $i6 goto label3;

        i0 = i1;

        goto label4;

     label3:
        $r20 = new org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$AmbiguousBindingException;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>(java.lang.String)>("Binding of throwing parameter \'");

        $r4 = r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: java.lang.String throwingName>;

        $r5 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' is ambiguous: could be bound to argument ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" or argument ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$AmbiguousBindingException: void <init>(java.lang.String)>($r10);

        throw $r20;

     label4:
        i1 = i1 + 1;

     label5:
        $r18 = r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: java.lang.Class[] argumentTypes>;

        $i2 = lengthof $r18;

        if i1 < $i2 goto label2;

        $i8 = (int) -1;

        if i0 != $i8 goto label6;

        $r22 = new java.lang.IllegalStateException;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>(java.lang.String)>("Binding of throwing parameter \'");

        $r14 = r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: java.lang.String throwingName>;

        $r15 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' could not be completed as no available arguments are a subtype of Throwable");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r17);

        throw $r22;

     label6:
        $r11 = r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: java.lang.String throwingName>;

        specialinvoke r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: void bindParameterName(int,java.lang.String)>(i0, $r11);

        return;
    }

    private void maybeBindReturningVariable()
    {
        java.lang.IllegalStateException $r14;
        java.lang.String[] $r2, $r3;
        int $i0, $i1, $i2, $i3, i4;
        java.lang.String $r1, $r4, $r5, $r8, $r13;
        org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer r0;
        org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$AmbiguousBindingException $r6;
        java.lang.StringBuilder $r7, $r9, $r10, $r11, $r12;

        r0 := @this: org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer;

        $i0 = r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: int numberOfRemainingUnboundArguments>;

        if $i0 != 0 goto label1;

        $r14 = new java.lang.IllegalStateException;

        specialinvoke $r14.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Algorithm assumes that there must be at least one unbound parameter on entry to this method");

        throw $r14;

     label1:
        $r1 = r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: java.lang.String returningName>;

        if $r1 == null goto label6;

        $i1 = r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: int numberOfRemainingUnboundArguments>;

        if $i1 <= 1 goto label2;

        $r6 = new org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$AmbiguousBindingException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("Binding of returning parameter \'");

        $r8 = r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: java.lang.String returningName>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' is ambiguous, there are ");

        $i3 = r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: int numberOfRemainingUnboundArguments>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" candidates.");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$AmbiguousBindingException: void <init>(java.lang.String)>($r13);

        throw $r6;

     label2:
        i4 = 0;

        goto label5;

     label3:
        $r3 = r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: java.lang.String[] parameterNameBindings>;

        $r4 = $r3[i4];

        if $r4 != null goto label4;

        $r5 = r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: java.lang.String returningName>;

        specialinvoke r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: void bindParameterName(int,java.lang.String)>(i4, $r5);

        goto label6;

     label4:
        i4 = i4 + 1;

     label5:
        $r2 = r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: java.lang.String[] parameterNameBindings>;

        $i2 = lengthof $r2;

        if i4 < $i2 goto label3;

     label6:
        return;
    }

    private void maybeBindAnnotationsFromPointcutExpression()
    {
        java.lang.String[] $r3;
        java.util.ArrayList $r13;
        int $i0, $i1, $i2, i3, $i4, $i6;
        java.lang.String $r2, $r5, $r7, $r8, $r10, $r11, r12;
        org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$PointcutBody $r6, $r9;
        boolean $z0, $z1, $z2;
        org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer r1;
        java.util.Set $r4;

        r1 := @this: org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer;

        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>()>();

        $r2 = r1.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: java.lang.String pointcutExpression>;

        $r3 = staticinvoke <org.springframework.util.StringUtils: java.lang.String[] tokenizeToStringArray(java.lang.String,java.lang.String)>($r2, " ");

        i3 = 0;

        goto label6;

     label1:
        r12 = $r3[i3];

        $i0 = virtualinvoke r12.<java.lang.String: int indexOf(java.lang.String)>("(");

        $i6 = (int) -1;

        if $i0 == $i6 goto label2;

        r12 = virtualinvoke r12.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

     label2:
        $r4 = <org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: java.util.Set singleValuedAnnotationPcds>;

        $z0 = interfaceinvoke $r4.<java.util.Set: boolean contains(java.lang.Object)>(r12);

        if $z0 == 0 goto label3;

        $r9 = specialinvoke r1.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$PointcutBody getPointcutBody(java.lang.String[],int)>($r3, i3);

        $i2 = staticinvoke <org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$PointcutBody: int access$0(org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$PointcutBody)>($r9);

        i3 = i3 + $i2;

        $r10 = staticinvoke <org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$PointcutBody: java.lang.String access$1(org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$PointcutBody)>($r9);

        $r11 = specialinvoke r1.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: java.lang.String maybeExtractVariableName(java.lang.String)>($r10);

        if $r11 == null goto label5;

        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>($r11);

        goto label5;

     label3:
        $r5 = $r3[i3];

        $z1 = virtualinvoke $r5.<java.lang.String: boolean startsWith(java.lang.String)>("@args(");

        if $z1 != 0 goto label4;

        $r8 = $r3[i3];

        $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("@args");

        if $z2 == 0 goto label5;

     label4:
        $r6 = specialinvoke r1.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$PointcutBody getPointcutBody(java.lang.String[],int)>($r3, i3);

        $i1 = staticinvoke <org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$PointcutBody: int access$0(org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$PointcutBody)>($r6);

        i3 = i3 + $i1;

        $r7 = staticinvoke <org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$PointcutBody: java.lang.String access$1(org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$PointcutBody)>($r6);

        specialinvoke r1.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: void maybeExtractVariableNamesFromArgs(java.lang.String,java.util.List)>($r7, $r13);

     label5:
        i3 = i3 + 1;

     label6:
        $i4 = lengthof $r3;

        if i3 < $i4 goto label1;

        specialinvoke r1.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: void bindAnnotationsFromVarNames(java.util.List)>($r13);

        return;
    }

    private void bindAnnotationsFromVarNames(java.util.List)
    {
        int $i0, $i1, $i2, $i3;
        java.lang.String $r7, $r9, $r16;
        boolean $z0;
        org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer r1;
        java.lang.IllegalArgumentException $r2;
        java.util.List r0;
        org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$AmbiguousBindingException $r10;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r11, $r12, $r13, $r14, $r15;
        java.lang.Object $r8;

        r1 := @this: org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer;

        r0 := @parameter0: java.util.List;

        $z0 = interfaceinvoke r0.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label3;

        $i0 = specialinvoke r1.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: int countNumberOfUnboundAnnotationArguments()>();

        if $i0 <= 1 goto label1;

        $r10 = new org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$AmbiguousBindingException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("Found ");

        $i3 = interfaceinvoke r0.<java.util.List: int size()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" potential annotation variable(s), and ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" potential argument slots");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$AmbiguousBindingException: void <init>(java.lang.String)>($r16);

        throw $r10;

     label1:
        if $i0 != 1 goto label3;

        $i1 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i1 != 1 goto label2;

        $r8 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(0);

        $r9 = (java.lang.String) $r8;

        specialinvoke r1.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: void findAndBind(java.lang.Class,java.lang.String)>(class "Ljava/lang/annotation/Annotation;", $r9);

        goto label3;

     label2:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("Found ");

        $i2 = interfaceinvoke r0.<java.util.List: int size()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" candidate annotation binding variables");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but only one potential argument binding slot");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label3:
        return;
    }

    private java.lang.String maybeExtractVariableName(java.lang.String)
    {
        org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer r2;
        char $c0, $c1, c3;
        int i2, i4;
        char[] $r1;
        java.lang.String r0;
        boolean $z0, $z1, $z2, $z3;

        r2 := @this: org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label2;

     label1:
        return null;

     label2:
        $c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $z1 = staticinvoke <java.lang.Character: boolean isJavaIdentifierStart(char)>($c0);

        if $z1 == 0 goto label6;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $z2 = staticinvoke <java.lang.Character: boolean isLowerCase(char)>($c1);

        if $z2 == 0 goto label6;

        $r1 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();

        i2 = lengthof $r1;

        i4 = 0;

        goto label5;

     label3:
        c3 = $r1[i4];

        $z3 = staticinvoke <java.lang.Character: boolean isJavaIdentifierPart(char)>(c3);

        if $z3 != 0 goto label4;

        return null;

     label4:
        i4 = i4 + 1;

     label5:
        if i4 < i2 goto label3;

        return r0;

     label6:
        return null;
    }

    private void maybeExtractVariableNamesFromArgs(java.lang.String, java.util.List)
    {
        org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer r4;
        java.lang.String[] $r1;
        java.util.List r7;
        int i0, $i1;
        java.lang.String r0, $r2, $r3, $r5, $r6;

        r4 := @this: org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer;

        r0 := @parameter0: java.lang.String;

        r7 := @parameter1: java.util.List;

        if r0 != null goto label1;

        return;

     label1:
        $r1 = staticinvoke <org.springframework.util.StringUtils: java.lang.String[] tokenizeToStringArray(java.lang.String,java.lang.String)>(r0, ",");

        i0 = 0;

        goto label4;

     label2:
        $r2 = $r1[i0];

        $r3 = staticinvoke <org.springframework.util.StringUtils: java.lang.String trimWhitespace(java.lang.String)>($r2);

        $r1[i0] = $r3;

        $r5 = $r1[i0];

        $r6 = specialinvoke r4.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: java.lang.String maybeExtractVariableName(java.lang.String)>($r5);

        if $r6 == null goto label3;

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r6);

     label3:
        i0 = i0 + 1;

     label4:
        $i1 = lengthof $r1;

        if i0 < $i1 goto label2;

        return;
    }

    private void maybeBindThisOrTargetOrArgsFromPointcutExpression()
    {
        org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$PointcutBody $r9, $r29;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer r0;
        java.lang.StringBuilder $r20, $r21, $r22, $r25, $r26, $r27;
        java.lang.String[] $r3, $r16;
        java.util.ArrayList $r1, $r10;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, $i8, $i9, i10;
        java.lang.String $r2, $r4, $r5, $r6, $r7, $r8, $r11, r14, $r15, $r18, $r23, $r28, $r30, $r31;
        java.util.Iterator $r12;
        org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$AmbiguousBindingException $r19, $r24;
        java.lang.Object $r13, $r17;

        r0 := @this: org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer;

        $i0 = r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: int numberOfRemainingUnboundArguments>;

        if $i0 <= 1 goto label01;

        $r24 = new org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$AmbiguousBindingException;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>(java.lang.String)>("Still ");

        $i6 = r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: int numberOfRemainingUnboundArguments>;

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" unbound args at this(),target(),args() binding stage, with no way to determine between them");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$AmbiguousBindingException: void <init>(java.lang.String)>($r28);

        throw $r24;

     label01:
        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r2 = r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: java.lang.String pointcutExpression>;

        $r3 = staticinvoke <org.springframework.util.StringUtils: java.lang.String[] tokenizeToStringArray(java.lang.String,java.lang.String)>($r2, " ");

        i7 = 0;

        goto label09;

     label02:
        $r4 = $r3[i7];

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("this");

        if $z0 != 0 goto label03;

        $r5 = $r3[i7];

        $z1 = virtualinvoke $r5.<java.lang.String: boolean startsWith(java.lang.String)>("this(");

        if $z1 != 0 goto label03;

        $r6 = $r3[i7];

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("target");

        if $z2 != 0 goto label03;

        $r7 = $r3[i7];

        $z3 = virtualinvoke $r7.<java.lang.String: boolean startsWith(java.lang.String)>("target(");

        if $z3 == 0 goto label04;

     label03:
        $r29 = specialinvoke r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$PointcutBody getPointcutBody(java.lang.String[],int)>($r3, i7);

        $i8 = staticinvoke <org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$PointcutBody: int access$0(org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$PointcutBody)>($r29);

        i7 = i7 + $i8;

        $r30 = staticinvoke <org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$PointcutBody: java.lang.String access$1(org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$PointcutBody)>($r29);

        $r31 = specialinvoke r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: java.lang.String maybeExtractVariableName(java.lang.String)>($r30);

        if $r31 == null goto label08;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r31);

        goto label08;

     label04:
        $r8 = $r3[i7];

        $z4 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("args");

        if $z4 != 0 goto label05;

        $r15 = $r3[i7];

        $z6 = virtualinvoke $r15.<java.lang.String: boolean startsWith(java.lang.String)>("args(");

        if $z6 == 0 goto label08;

     label05:
        $r9 = specialinvoke r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$PointcutBody getPointcutBody(java.lang.String[],int)>($r3, i7);

        $i1 = staticinvoke <org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$PointcutBody: int access$0(org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$PointcutBody)>($r9);

        i7 = i7 + $i1;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        $r11 = staticinvoke <org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$PointcutBody: java.lang.String access$1(org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$PointcutBody)>($r9);

        specialinvoke r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: void maybeExtractVariableNamesFromArgs(java.lang.String,java.util.List)>($r11, $r10);

        $r12 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

        goto label07;

     label06:
        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r14 = (java.lang.String) $r13;

        $z5 = specialinvoke r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: boolean alreadyBound(java.lang.String)>(r14);

        if $z5 != 0 goto label07;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>(r14);

     label07:
        $z8 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z8 != 0 goto label06;

     label08:
        i7 = i7 + 1;

     label09:
        $i9 = lengthof $r3;

        if i7 < $i9 goto label02;

        $i2 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i2 <= 1 goto label10;

        $r19 = new org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$AmbiguousBindingException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>(java.lang.String)>("Found ");

        $i5 = interfaceinvoke $r1.<java.util.List: int size()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" candidate this(), target() or args() variables but only one unbound argument slot");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$AmbiguousBindingException: void <init>(java.lang.String)>($r23);

        throw $r19;

     label10:
        $i3 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i3 != 1 goto label14;

        i10 = 0;

        goto label13;

     label11:
        $z7 = specialinvoke r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: boolean isUnbound(int)>(i10);

        if $z7 == 0 goto label12;

        $r17 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        $r18 = (java.lang.String) $r17;

        specialinvoke r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: void bindParameterName(int,java.lang.String)>(i10, $r18);

        goto label14;

     label12:
        i10 = i10 + 1;

     label13:
        $r16 = r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: java.lang.String[] parameterNameBindings>;

        $i4 = lengthof $r16;

        if i10 < $i4 goto label11;

     label14:
        return;
    }

    private void maybeBindReferencePointcutParameter()
    {
        org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$PointcutBody $r4;
        boolean $z0, $z1, $z2;
        org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer r0;
        java.util.Set $r5;
        java.lang.StringBuilder $r13, $r14, $r18, $r19, $r23, $r26;
        java.lang.String[] $r3, $r8;
        java.util.ArrayList $r25;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7, $i8, $i9, $i10, $i11, i12, $i13, i14, $i16, $i17;
        java.lang.String $r2, $r6, $r7, $r10, $r15, $r20, r21, r22;
        char $c5;
        org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$AmbiguousBindingException $r24, $r27;
        java.lang.Object $r9;

        r0 := @this: org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer;

        $i0 = r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: int numberOfRemainingUnboundArguments>;

        if $i0 <= 1 goto label01;

        $r24 = new org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$AmbiguousBindingException;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>(java.lang.String)>("Still ");

        $i11 = r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: int numberOfRemainingUnboundArguments>;

        $r18 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" unbound args at reference pointcut binding stage, with no way to determine between them");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$AmbiguousBindingException: void <init>(java.lang.String)>($r20);

        throw $r24;

     label01:
        $r25 = new java.util.ArrayList;

        specialinvoke $r25.<java.util.ArrayList: void <init>()>();

        $r2 = r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: java.lang.String pointcutExpression>;

        $r3 = staticinvoke <org.springframework.util.StringUtils: java.lang.String[] tokenizeToStringArray(java.lang.String,java.lang.String)>($r2, " ");

        i12 = 0;

        goto label08;

     label02:
        r21 = $r3[i12];

        $z0 = virtualinvoke r21.<java.lang.String: boolean startsWith(java.lang.String)>("!");

        if $z0 == 0 goto label03;

        r21 = virtualinvoke r21.<java.lang.String: java.lang.String substring(int)>(1);

     label03:
        $i1 = virtualinvoke r21.<java.lang.String: int indexOf(java.lang.String)>("(");

        $i16 = (int) -1;

        if $i1 == $i16 goto label04;

        r21 = virtualinvoke r21.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        goto label06;

     label04:
        $i3 = lengthof $r3;

        $i2 = i12 + 2;

        if $i3 >= $i2 goto label05;

        goto label07;

     label05:
        $i4 = i12 + 1;

        r22 = $r3[$i4];

        $c5 = virtualinvoke r22.<java.lang.String: char charAt(int)>(0);

        $i17 = (int) $c5;

        if $i17 == 40 goto label06;

        goto label07;

     label06:
        $r4 = specialinvoke r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$PointcutBody getPointcutBody(java.lang.String[],int)>($r3, i12);

        $i6 = staticinvoke <org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$PointcutBody: int access$0(org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$PointcutBody)>($r4);

        i12 = i12 + $i6;

        $r5 = <org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: java.util.Set nonReferencePointcutTokens>;

        $z1 = interfaceinvoke $r5.<java.util.Set: boolean contains(java.lang.Object)>(r21);

        if $z1 != 0 goto label07;

        $r6 = staticinvoke <org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$PointcutBody: java.lang.String access$1(org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$PointcutBody)>($r4);

        $r7 = specialinvoke r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: java.lang.String maybeExtractVariableName(java.lang.String)>($r6);

        if $r7 == null goto label07;

        interfaceinvoke $r25.<java.util.List: boolean add(java.lang.Object)>($r7);

     label07:
        i12 = i12 + 1;

     label08:
        $i13 = lengthof $r3;

        if i12 < $i13 goto label02;

        $i7 = interfaceinvoke $r25.<java.util.List: int size()>();

        if $i7 <= 1 goto label09;

        $r27 = new org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$AmbiguousBindingException;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>(java.lang.String)>("Found ");

        $i10 = interfaceinvoke $r25.<java.util.List: int size()>();

        $r13 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" candidate reference pointcut variables but only one unbound argument slot");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r27.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$AmbiguousBindingException: void <init>(java.lang.String)>($r15);

        throw $r27;

     label09:
        $i8 = interfaceinvoke $r25.<java.util.List: int size()>();

        if $i8 != 1 goto label13;

        i14 = 0;

        goto label12;

     label10:
        $z2 = specialinvoke r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: boolean isUnbound(int)>(i14);

        if $z2 == 0 goto label11;

        $r9 = interfaceinvoke $r25.<java.util.List: java.lang.Object get(int)>(0);

        $r10 = (java.lang.String) $r9;

        specialinvoke r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: void bindParameterName(int,java.lang.String)>(i14, $r10);

        goto label13;

     label11:
        i14 = i14 + 1;

     label12:
        $r8 = r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: java.lang.String[] parameterNameBindings>;

        $i9 = lengthof $r8;

        if i14 < $i9 goto label10;

     label13:
        return;
    }

    private org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$PointcutBody getPointcutBody(java.lang.String[], int)
    {
        org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$PointcutBody $r17, $r19, $r20;
        boolean $z0, $z1, $z2;
        org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer r15;
        java.lang.StringBuilder $r18;
        java.lang.String[] r0;
        int i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14, $i15, $i16;
        java.lang.String r1, $r3, $r4, $r5, $r6, $r7, $r9, $r10, $r12, $r14, r16;
        char $c4;

        r15 := @this: org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer;

        r0 := @parameter0: java.lang.String[];

        i0 := @parameter1: int;

        r1 = r0[i0];

        $i1 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(40);

        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        $i3 = $i2 - 1;

        $c4 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i3);

        $i16 = (int) $c4;

        if $i16 != 41 goto label1;

        $r17 = new org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$PointcutBody;

        $i10 = $i1 + 1;

        $i11 = virtualinvoke r1.<java.lang.String: int length()>();

        $i12 = $i11 - 1;

        $r14 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>($i10, $i12);

        specialinvoke $r17.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$PointcutBody: void <init>(int,java.lang.String)>(0, $r14);

        return $r17;

     label1:
        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        if $i1 < 0 goto label2;

        $i7 = virtualinvoke r1.<java.lang.String: int length()>();

        $i8 = $i7 - 1;

        if $i1 == $i8 goto label2;

        $i9 = $i1 + 1;

        $r12 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i9);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

     label2:
        i13 = 1;

        i14 = i0 + 1;

        goto label7;

     label3:
        $r3 = r0[i14];

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("(");

        if $z0 == 0 goto label4;

        i14 = i14 + 1;

        goto label7;

     label4:
        $r4 = r0[i14];

        $z1 = virtualinvoke $r4.<java.lang.String: boolean endsWith(java.lang.String)>(")");

        if $z1 == 0 goto label5;

        $r6 = r0[i14];

        $r5 = r0[i14];

        $i5 = virtualinvoke $r5.<java.lang.String: int length()>();

        $i6 = $i5 - 1;

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int,int)>(0, $i6);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r19 = new org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$PointcutBody;

        $r9 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String trim()>();

        specialinvoke $r19.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$PointcutBody: void <init>(int,java.lang.String)>(i13, $r10);

        return $r19;

     label5:
        r16 = r0[i14];

        $z2 = virtualinvoke r16.<java.lang.String: boolean startsWith(java.lang.String)>("(");

        if $z2 == 0 goto label6;

        r16 = virtualinvoke r16.<java.lang.String: java.lang.String substring(int)>(1);

     label6:
        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        i14 = i14 + 1;

        i13 = i13 + 1;

     label7:
        $i15 = lengthof r0;

        if i14 < $i15 goto label3;

        $r20 = new org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$PointcutBody;

        specialinvoke $r20.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$PointcutBody: void <init>(int,java.lang.String)>(i13, null);

        return $r20;
    }

    private void maybeBindPrimitiveArgsFromPointcutExpression()
    {
        org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$PointcutBody $r5;
        boolean $z0, $z1, $z2, $z3;
        org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer r0;
        java.lang.StringBuilder $r13, $r14, $r15, $r18, $r19, $r20;
        java.lang.String[] $r3;
        java.util.ArrayList $r1;
        int $i0, $i1, $i2, $i3, $i4, i5, $i6, i7, $i8;
        java.lang.String $r2, $r4, $r6, $r7, $r11, $r16, $r21;
        java.lang.Class[] $r8, $r22;
        org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$AmbiguousBindingException $r12, $r17;
        java.lang.Class $r9;
        java.lang.Object $r10;

        r0 := @this: org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer;

        $i0 = specialinvoke r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: int countNumberOfUnboundPrimitiveArguments()>();

        if $i0 <= 1 goto label01;

        $r17 = new org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$AmbiguousBindingException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>(java.lang.String)>("Found \'");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' unbound primitive arguments with no way to distinguish between them.");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$AmbiguousBindingException: void <init>(java.lang.String)>($r21);

        throw $r17;

     label01:
        if $i0 != 1 goto label10;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r2 = r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: java.lang.String pointcutExpression>;

        $r3 = staticinvoke <org.springframework.util.StringUtils: java.lang.String[] tokenizeToStringArray(java.lang.String,java.lang.String)>($r2, " ");

        i5 = 0;

        goto label05;

     label02:
        $r4 = $r3[i5];

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("args");

        if $z0 != 0 goto label03;

        $r7 = $r3[i5];

        $z1 = virtualinvoke $r7.<java.lang.String: boolean startsWith(java.lang.String)>("args(");

        if $z1 == 0 goto label04;

     label03:
        $r5 = specialinvoke r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$PointcutBody getPointcutBody(java.lang.String[],int)>($r3, i5);

        $i1 = staticinvoke <org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$PointcutBody: int access$0(org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$PointcutBody)>($r5);

        i5 = i5 + $i1;

        $r6 = staticinvoke <org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$PointcutBody: java.lang.String access$1(org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$PointcutBody)>($r5);

        specialinvoke r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: void maybeExtractVariableNamesFromArgs(java.lang.String,java.util.List)>($r6, $r1);

     label04:
        i5 = i5 + 1;

     label05:
        $i6 = lengthof $r3;

        if i5 < $i6 goto label02;

        $i2 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i2 <= 1 goto label06;

        $r12 = new org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$AmbiguousBindingException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>("Found ");

        $i4 = interfaceinvoke $r1.<java.util.List: int size()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" candidate variable names but only one candidate binding slot when matching primitive args");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$AmbiguousBindingException: void <init>(java.lang.String)>($r16);

        throw $r12;

     label06:
        $i3 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i3 != 1 goto label10;

        i7 = 0;

        goto label09;

     label07:
        $z2 = specialinvoke r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: boolean isUnbound(int)>(i7);

        if $z2 == 0 goto label08;

        $r8 = r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: java.lang.Class[] argumentTypes>;

        $r9 = $r8[i7];

        $z3 = virtualinvoke $r9.<java.lang.Class: boolean isPrimitive()>();

        if $z3 == 0 goto label08;

        $r10 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        $r11 = (java.lang.String) $r10;

        specialinvoke r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: void bindParameterName(int,java.lang.String)>(i7, $r11);

        goto label10;

     label08:
        i7 = i7 + 1;

     label09:
        $r22 = r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: java.lang.Class[] argumentTypes>;

        $i8 = lengthof $r22;

        if i7 < $i8 goto label07;

     label10:
        return;
    }

    private boolean isUnbound(int)
    {
        org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer r0;
        int i0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer;

        i0 := @parameter0: int;

        $r1 = r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: java.lang.String[] parameterNameBindings>;

        $r2 = $r1[i0];

        if $r2 != null goto label1;

        return 1;

     label1:
        return 0;
    }

    private boolean alreadyBound(java.lang.String)
    {
        org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer r0;
        java.lang.String[] $r2, $r4;
        int i0, $i1;
        java.lang.String r1, $r3;
        boolean $z0, $z1;

        r0 := @this: org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer;

        r1 := @parameter0: java.lang.String;

        i0 = 0;

        goto label3;

     label1:
        $z0 = specialinvoke r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: boolean isUnbound(int)>(i0);

        if $z0 != 0 goto label2;

        $r2 = r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: java.lang.String[] parameterNameBindings>;

        $r3 = $r2[i0];

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        i0 = i0 + 1;

     label3:
        $r4 = r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: java.lang.String[] parameterNameBindings>;

        $i1 = lengthof $r4;

        if i0 < $i1 goto label1;

        return 0;
    }

    private boolean isSubtypeOf(java.lang.Class, int)
    {
        org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer r1;
        int i0;
        java.lang.Class[] $r2;
        java.lang.Class r0, $r3;
        boolean $z0;

        r1 := @this: org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer;

        r0 := @parameter0: java.lang.Class;

        i0 := @parameter1: int;

        $r2 = r1.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: java.lang.Class[] argumentTypes>;

        $r3 = $r2[i0];

        $z0 = virtualinvoke r0.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r3);

        return $z0;
    }

    private int countNumberOfUnboundAnnotationArguments()
    {
        org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer r0;
        int i0, i1, $i2;
        java.lang.Class[] $r1;
        boolean $z0, $z1;

        r0 := @this: org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer;

        i0 = 0;

        i1 = 0;

        goto label3;

     label1:
        $z0 = specialinvoke r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: boolean isUnbound(int)>(i1);

        if $z0 == 0 goto label2;

        $z1 = specialinvoke r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: boolean isSubtypeOf(java.lang.Class,int)>(class "Ljava/lang/annotation/Annotation;", i1);

        if $z1 == 0 goto label2;

        i0 = i0 + 1;

     label2:
        i1 = i1 + 1;

     label3:
        $r1 = r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: java.lang.Class[] argumentTypes>;

        $i2 = lengthof $r1;

        if i1 < $i2 goto label1;

        return i0;
    }

    private int countNumberOfUnboundPrimitiveArguments()
    {
        org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer r0;
        java.lang.Class[] $r1, $r3;
        int i0, i1, $i2;
        java.lang.Class $r2;
        boolean $z0, $z1;

        r0 := @this: org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer;

        i0 = 0;

        i1 = 0;

        goto label3;

     label1:
        $z0 = specialinvoke r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: boolean isUnbound(int)>(i1);

        if $z0 == 0 goto label2;

        $r1 = r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: java.lang.Class[] argumentTypes>;

        $r2 = $r1[i1];

        $z1 = virtualinvoke $r2.<java.lang.Class: boolean isPrimitive()>();

        if $z1 == 0 goto label2;

        i0 = i0 + 1;

     label2:
        i1 = i1 + 1;

     label3:
        $r3 = r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: java.lang.Class[] argumentTypes>;

        $i2 = lengthof $r3;

        if i1 < $i2 goto label1;

        return i0;
    }

    private void findAndBind(java.lang.Class, java.lang.String)
    {
        org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer r0;
        java.lang.IllegalStateException $r3;
        java.lang.Class[] $r9;
        int i0, $i1;
        java.lang.Class r1;
        java.lang.StringBuilder $r4, $r6, $r7;
        java.lang.String r2, $r5, $r8;
        boolean $z0, $z1;

        r0 := @this: org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.String;

        i0 = 0;

        goto label3;

     label1:
        $z0 = specialinvoke r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: boolean isUnbound(int)>(i0);

        if $z0 == 0 goto label2;

        $z1 = specialinvoke r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: boolean isSubtypeOf(java.lang.Class,int)>(r1, i0);

        if $z1 == 0 goto label2;

        specialinvoke r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: void bindParameterName(int,java.lang.String)>(i0, r2);

        return;

     label2:
        i0 = i0 + 1;

     label3:
        $r9 = r0.<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: java.lang.Class[] argumentTypes>;

        $i1 = lengthof $r9;

        if i0 < $i1 goto label1;

        $r3 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("Expected to find an unbound argument of type \'");

        $r5 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        throw $r3;
    }
}
