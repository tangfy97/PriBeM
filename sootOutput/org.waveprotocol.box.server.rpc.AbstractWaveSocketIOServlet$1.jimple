class org.waveprotocol.box.server.rpc.AbstractWaveSocketIOServlet$1 extends java.lang.Object implements com.glines.socketio.server.Transport$InboundFactory
{
    final org.waveprotocol.box.server.rpc.AbstractWaveSocketIOServlet this$0;

    void <init>(org.waveprotocol.box.server.rpc.AbstractWaveSocketIOServlet)
    {
        org.waveprotocol.box.server.rpc.AbstractWaveSocketIOServlet$1 r0;
        org.waveprotocol.box.server.rpc.AbstractWaveSocketIOServlet r1;

        r0 := @this: org.waveprotocol.box.server.rpc.AbstractWaveSocketIOServlet$1;

        r1 := @parameter0: org.waveprotocol.box.server.rpc.AbstractWaveSocketIOServlet;

        r0.<org.waveprotocol.box.server.rpc.AbstractWaveSocketIOServlet$1: org.waveprotocol.box.server.rpc.AbstractWaveSocketIOServlet this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.glines.socketio.server.SocketIOInbound getInbound(javax.servlet.http.HttpServletRequest)
    {
        javax.servlet.http.HttpServletRequest r1;
        org.waveprotocol.box.server.rpc.AbstractWaveSocketIOServlet $r2;
        com.glines.socketio.server.SocketIOInbound $r3;
        org.waveprotocol.box.server.rpc.AbstractWaveSocketIOServlet$1 r0;

        r0 := @this: org.waveprotocol.box.server.rpc.AbstractWaveSocketIOServlet$1;

        r1 := @parameter0: javax.servlet.http.HttpServletRequest;

        $r2 = r0.<org.waveprotocol.box.server.rpc.AbstractWaveSocketIOServlet$1: org.waveprotocol.box.server.rpc.AbstractWaveSocketIOServlet this$0>;

        $r3 = virtualinvoke $r2.<org.waveprotocol.box.server.rpc.AbstractWaveSocketIOServlet: com.glines.socketio.server.SocketIOInbound doSocketIOConnect(javax.servlet.http.HttpServletRequest)>(r1);

        return $r3;
    }
}
