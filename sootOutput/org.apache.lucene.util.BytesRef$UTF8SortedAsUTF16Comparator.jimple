class org.apache.lucene.util.BytesRef$UTF8SortedAsUTF16Comparator extends java.lang.Object implements java.util.Comparator
{

    private void <init>()
    {
        org.apache.lucene.util.BytesRef$UTF8SortedAsUTF16Comparator r0;

        r0 := @this: org.apache.lucene.util.BytesRef$UTF8SortedAsUTF16Comparator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(org.apache.lucene.util.BytesRef, org.apache.lucene.util.BytesRef)
    {
        byte[] r1, r3;
        byte $b7, $b9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8, $i10, $i11, $i12, i13, i14, i15, i16, i17, $i18, $i19, $i20;
        org.apache.lucene.util.BytesRef r0, r2;
        org.apache.lucene.util.BytesRef$UTF8SortedAsUTF16Comparator r4;

        r4 := @this: org.apache.lucene.util.BytesRef$UTF8SortedAsUTF16Comparator;

        r0 := @parameter0: org.apache.lucene.util.BytesRef;

        r2 := @parameter1: org.apache.lucene.util.BytesRef;

        r1 = r0.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        i13 = r0.<org.apache.lucene.util.BytesRef: int offset>;

        r3 = r2.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        i14 = r2.<org.apache.lucene.util.BytesRef: int offset>;

        $i1 = r0.<org.apache.lucene.util.BytesRef: int length>;

        $i0 = r2.<org.apache.lucene.util.BytesRef: int length>;

        if $i1 >= $i0 goto label1;

        $i12 = r0.<org.apache.lucene.util.BytesRef: int length>;

        i15 = i13 + $i12;

        goto label2;

     label1:
        $i2 = r2.<org.apache.lucene.util.BytesRef: int length>;

        i15 = i13 + $i2;

     label2:
        if i13 >= i15 goto label6;

        $i6 = i13;

        i13 = i13 + 1;

        $b7 = r1[$i6];

        $i19 = (int) $b7;

        i16 = $i19 & 255;

        $i8 = i14;

        i14 = i14 + 1;

        $b9 = r3[$i8];

        $i20 = (int) $b9;

        i17 = $i20 & 255;

        if i16 == i17 goto label5;

        if i16 < 238 goto label4;

        if i17 < 238 goto label4;

        $i10 = i16 & 254;

        if $i10 != 238 goto label3;

        i16 = i16 + 14;

     label3:
        $i11 = i17 & 254;

        if $i11 != 238 goto label4;

        i17 = i17 + 14;

     label4:
        $i18 = i16 - i17;

        return $i18;

     label5:
        goto label2;

     label6:
        $i4 = r0.<org.apache.lucene.util.BytesRef: int length>;

        $i3 = r2.<org.apache.lucene.util.BytesRef: int length>;

        $i5 = $i4 - $i3;

        return $i5;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        org.apache.lucene.util.BytesRef $r3, $r4;
        int $i0;
        java.lang.Object r1, r2;
        org.apache.lucene.util.BytesRef$UTF8SortedAsUTF16Comparator r0;

        r0 := @this: org.apache.lucene.util.BytesRef$UTF8SortedAsUTF16Comparator;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (org.apache.lucene.util.BytesRef) r1;

        $r3 = (org.apache.lucene.util.BytesRef) r2;

        $i0 = virtualinvoke r0.<org.apache.lucene.util.BytesRef$UTF8SortedAsUTF16Comparator: int compare(org.apache.lucene.util.BytesRef,org.apache.lucene.util.BytesRef)>($r4, $r3);

        return $i0;
    }

    void <init>(org.apache.lucene.util.BytesRef$1)
    {
        org.apache.lucene.util.BytesRef$UTF8SortedAsUTF16Comparator r0;
        org.apache.lucene.util.BytesRef$1 r1;

        r0 := @this: org.apache.lucene.util.BytesRef$UTF8SortedAsUTF16Comparator;

        r1 := @parameter0: org.apache.lucene.util.BytesRef$1;

        specialinvoke r0.<org.apache.lucene.util.BytesRef$UTF8SortedAsUTF16Comparator: void <init>()>();

        return;
    }
}
