class org.apache.lucene.store.SimpleFSLock extends org.apache.lucene.store.Lock
{
    java.io.File lockFile;
    java.io.File lockDir;

    public void <init>(java.io.File, java.lang.String)
    {
        java.lang.String r3;
        org.apache.lucene.store.SimpleFSLock r0;
        java.io.File r1, $r2;

        r0 := @this: org.apache.lucene.store.SimpleFSLock;

        r1 := @parameter0: java.io.File;

        r3 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.lucene.store.Lock: void <init>()>();

        r0.<org.apache.lucene.store.SimpleFSLock: java.io.File lockDir> = r1;

        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, r3);

        r0.<org.apache.lucene.store.SimpleFSLock: java.io.File lockFile> = $r2;

        return;
    }

    public boolean obtain() throws java.io.IOException
    {
        java.lang.String $r8, $r10, $r16, $r18;
        boolean $z0, $z1, $z2, $z3;
        java.io.IOException $r4, $r12;
        java.io.File $r1, $r2, $r3, $r7, $r11, $r15;
        java.lang.StringBuilder $r5, $r6, $r9, $r13, $r14, $r17;
        org.apache.lucene.store.SimpleFSLock r0;

        r0 := @this: org.apache.lucene.store.SimpleFSLock;

        $r1 = r0.<org.apache.lucene.store.SimpleFSLock: java.io.File lockDir>;

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        $r11 = r0.<org.apache.lucene.store.SimpleFSLock: java.io.File lockDir>;

        $z3 = virtualinvoke $r11.<java.io.File: boolean mkdirs()>();

        if $z3 != 0 goto label2;

        $r12 = new java.io.IOException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot create directory: ");

        $r15 = r0.<org.apache.lucene.store.SimpleFSLock: java.io.File lockDir>;

        $r16 = virtualinvoke $r15.<java.io.File: java.lang.String getAbsolutePath()>();

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.io.IOException: void <init>(java.lang.String)>($r18);

        throw $r12;

     label1:
        $r2 = r0.<org.apache.lucene.store.SimpleFSLock: java.io.File lockDir>;

        $z1 = virtualinvoke $r2.<java.io.File: boolean isDirectory()>();

        if $z1 != 0 goto label2;

        $r4 = new java.io.IOException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found regular file where directory expected: ");

        $r7 = r0.<org.apache.lucene.store.SimpleFSLock: java.io.File lockDir>;

        $r8 = virtualinvoke $r7.<java.io.File: java.lang.String getAbsolutePath()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>($r10);

        throw $r4;

     label2:
        $r3 = r0.<org.apache.lucene.store.SimpleFSLock: java.io.File lockFile>;

        $z2 = virtualinvoke $r3.<java.io.File: boolean createNewFile()>();

        return $z2;
    }

    public void release() throws org.apache.lucene.store.LockReleaseFailedException
    {
        org.apache.lucene.store.LockReleaseFailedException $r3;
        java.io.File $r1, $r2, $r6;
        java.lang.StringBuilder $r4, $r5, $r7;
        java.lang.String $r8;
        org.apache.lucene.store.SimpleFSLock r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.store.SimpleFSLock;

        $r1 = r0.<org.apache.lucene.store.SimpleFSLock: java.io.File lockFile>;

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<org.apache.lucene.store.SimpleFSLock: java.io.File lockFile>;

        $z1 = virtualinvoke $r2.<java.io.File: boolean delete()>();

        if $z1 != 0 goto label1;

        $r3 = new org.apache.lucene.store.LockReleaseFailedException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to delete ");

        $r6 = r0.<org.apache.lucene.store.SimpleFSLock: java.io.File lockFile>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<org.apache.lucene.store.LockReleaseFailedException: void <init>(java.lang.String)>($r8);

        throw $r3;

     label1:
        return;
    }

    public boolean isLocked()
    {
        org.apache.lucene.store.SimpleFSLock r0;
        java.io.File $r1;
        boolean $z0;

        r0 := @this: org.apache.lucene.store.SimpleFSLock;

        $r1 = r0.<org.apache.lucene.store.SimpleFSLock: java.io.File lockFile>;

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        return $z0;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r1, $r4;
        java.lang.String $r5;
        org.apache.lucene.store.SimpleFSLock r2;
        java.io.File $r3;

        r2 := @this: org.apache.lucene.store.SimpleFSLock;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SimpleFSLock@");

        $r3 = r2.<org.apache.lucene.store.SimpleFSLock: java.io.File lockFile>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }
}
