public class org.springframework.util.xml.SimpleSaxErrorHandler extends java.lang.Object implements org.xml.sax.ErrorHandler
{
    private final org.apache.commons.logging.Log logger;

    public void <init>(org.apache.commons.logging.Log)
    {
        org.apache.commons.logging.Log r1;
        org.springframework.util.xml.SimpleSaxErrorHandler r0;

        r0 := @this: org.springframework.util.xml.SimpleSaxErrorHandler;

        r1 := @parameter0: org.apache.commons.logging.Log;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.springframework.util.xml.SimpleSaxErrorHandler: org.apache.commons.logging.Log logger> = r1;

        return;
    }

    public void warning(org.xml.sax.SAXParseException) throws org.xml.sax.SAXException
    {
        org.xml.sax.SAXParseException r1;
        org.apache.commons.logging.Log $r2;
        org.springframework.util.xml.SimpleSaxErrorHandler r0;

        r0 := @this: org.springframework.util.xml.SimpleSaxErrorHandler;

        r1 := @parameter0: org.xml.sax.SAXParseException;

        $r2 = r0.<org.springframework.util.xml.SimpleSaxErrorHandler: org.apache.commons.logging.Log logger>;

        interfaceinvoke $r2.<org.apache.commons.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>("Ignored XML validation warning", r1);

        return;
    }

    public void error(org.xml.sax.SAXParseException) throws org.xml.sax.SAXException
    {
        org.xml.sax.SAXParseException r0;
        org.springframework.util.xml.SimpleSaxErrorHandler r1;

        r1 := @this: org.springframework.util.xml.SimpleSaxErrorHandler;

        r0 := @parameter0: org.xml.sax.SAXParseException;

        throw r0;
    }

    public void fatalError(org.xml.sax.SAXParseException) throws org.xml.sax.SAXException
    {
        org.xml.sax.SAXParseException r0;
        org.springframework.util.xml.SimpleSaxErrorHandler r1;

        r1 := @this: org.springframework.util.xml.SimpleSaxErrorHandler;

        r0 := @parameter0: org.xml.sax.SAXParseException;

        throw r0;
    }
}
