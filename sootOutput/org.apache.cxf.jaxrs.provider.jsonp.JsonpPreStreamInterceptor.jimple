public class org.apache.cxf.jaxrs.provider.jsonp.JsonpPreStreamInterceptor extends org.apache.cxf.jaxrs.provider.jsonp.AbstractJsonpOutInterceptor
{
    private java.lang.String mediaType;
    private java.lang.String paddingEnd;

    public void <init>()
    {
        org.apache.cxf.jaxrs.provider.jsonp.JsonpPreStreamInterceptor r0;

        r0 := @this: org.apache.cxf.jaxrs.provider.jsonp.JsonpPreStreamInterceptor;

        specialinvoke r0.<org.apache.cxf.jaxrs.provider.jsonp.AbstractJsonpOutInterceptor: void <init>(java.lang.String)>("pre-stream");

        r0.<org.apache.cxf.jaxrs.provider.jsonp.JsonpPreStreamInterceptor: java.lang.String mediaType> = "application/x-javascript";

        r0.<org.apache.cxf.jaxrs.provider.jsonp.JsonpPreStreamInterceptor: java.lang.String paddingEnd> = "(";

        return;
    }

    public void handleMessage(org.apache.cxf.message.Message) throws org.apache.cxf.interceptor.Fault
    {
        org.apache.cxf.message.Message r1;
        org.apache.cxf.jaxrs.provider.jsonp.JsonpPreStreamInterceptor r0;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.String $r2, $r5, $r7;
        boolean $z0;

        r0 := @this: org.apache.cxf.jaxrs.provider.jsonp.JsonpPreStreamInterceptor;

        r1 := @parameter0: org.apache.cxf.message.Message;

        $r2 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.jsonp.JsonpPreStreamInterceptor: java.lang.String getCallbackValue(org.apache.cxf.message.Message)>(r1);

        $z0 = staticinvoke <org.apache.cxf.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r2);

        if $z0 != 0 goto label1;

        virtualinvoke r0.<org.apache.cxf.jaxrs.provider.jsonp.JsonpPreStreamInterceptor: void setContentType(org.apache.cxf.message.Message)>(r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.jsonp.JsonpPreStreamInterceptor: java.lang.String getPaddingEnd()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.cxf.jaxrs.provider.jsonp.JsonpPreStreamInterceptor: void writeValue(org.apache.cxf.message.Message,java.lang.String)>(r1, $r7);

     label1:
        return;
    }

    protected void setContentType(org.apache.cxf.message.Message)
    {
        org.apache.cxf.message.Message r0;
        java.util.HashMap $r6;
        org.apache.cxf.jaxrs.provider.jsonp.JsonpPreStreamInterceptor r3;
        java.util.List $r5;
        java.util.Map r8;
        java.lang.Object $r2;
        java.lang.String $r1, $r4, $r7;

        r3 := @this: org.apache.cxf.jaxrs.provider.jsonp.JsonpPreStreamInterceptor;

        r0 := @parameter0: org.apache.cxf.message.Message;

        $r1 = <org.apache.cxf.message.Message: java.lang.String PROTOCOL_HEADERS>;

        $r2 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>($r1);

        r8 = (java.util.Map) $r2;

        if r8 != null goto label1;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        r8 = $r6;

        $r7 = <org.apache.cxf.message.Message: java.lang.String PROTOCOL_HEADERS>;

        interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r6);

     label1:
        $r4 = virtualinvoke r3.<org.apache.cxf.jaxrs.provider.jsonp.JsonpPreStreamInterceptor: java.lang.String getMediaType()>();

        $r5 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r4);

        interfaceinvoke r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Content-Type", $r5);

        return;
    }

    public void setMediaType(java.lang.String)
    {
        java.lang.String r1;
        org.apache.cxf.jaxrs.provider.jsonp.JsonpPreStreamInterceptor r0;

        r0 := @this: org.apache.cxf.jaxrs.provider.jsonp.JsonpPreStreamInterceptor;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.cxf.jaxrs.provider.jsonp.JsonpPreStreamInterceptor: java.lang.String mediaType> = r1;

        return;
    }

    public java.lang.String getMediaType()
    {
        java.lang.String $r1;
        org.apache.cxf.jaxrs.provider.jsonp.JsonpPreStreamInterceptor r0;

        r0 := @this: org.apache.cxf.jaxrs.provider.jsonp.JsonpPreStreamInterceptor;

        $r1 = r0.<org.apache.cxf.jaxrs.provider.jsonp.JsonpPreStreamInterceptor: java.lang.String mediaType>;

        return $r1;
    }

    public void setPaddingEnd(java.lang.String)
    {
        java.lang.String r1;
        org.apache.cxf.jaxrs.provider.jsonp.JsonpPreStreamInterceptor r0;

        r0 := @this: org.apache.cxf.jaxrs.provider.jsonp.JsonpPreStreamInterceptor;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.cxf.jaxrs.provider.jsonp.JsonpPreStreamInterceptor: java.lang.String paddingEnd> = r1;

        return;
    }

    public java.lang.String getPaddingEnd()
    {
        java.lang.String $r1;
        org.apache.cxf.jaxrs.provider.jsonp.JsonpPreStreamInterceptor r0;

        r0 := @this: org.apache.cxf.jaxrs.provider.jsonp.JsonpPreStreamInterceptor;

        $r1 = r0.<org.apache.cxf.jaxrs.provider.jsonp.JsonpPreStreamInterceptor: java.lang.String paddingEnd>;

        return $r1;
    }
}
