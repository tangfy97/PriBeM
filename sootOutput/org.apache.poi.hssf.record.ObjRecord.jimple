public final class org.apache.poi.hssf.record.ObjRecord extends org.apache.poi.hssf.record.Record
{
    public static final short sid;
    private static final int NORMAL_PAD_ALIGNMENT;
    private static int MAX_PAD_ALIGNMENT;
    private java.util.List subrecords;
    private final byte[] _uninterpretedData;
    private boolean _isPaddedToQuadByteMultiple;

    public void <init>()
    {
        org.apache.poi.hssf.record.ObjRecord r0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.poi.hssf.record.ObjRecord;

        specialinvoke r0.<org.apache.poi.hssf.record.Record: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(2);

        r0.<org.apache.poi.hssf.record.ObjRecord: java.util.List subrecords> = $r1;

        r0.<org.apache.poi.hssf.record.ObjRecord: byte[] _uninterpretedData> = null;

        return;
    }

    public void <init>(org.apache.poi.hssf.record.RecordInputStream)
    {
        byte[] $r2;
        org.apache.poi.util.LittleEndianInputStream $r21;
        java.util.ArrayList $r19;
        short $s1;
        org.apache.poi.hssf.record.RecordInputStream r1;
        java.io.ByteArrayInputStream $r20;
        org.apache.poi.hssf.record.RecordFormatException $r23;
        int $i0, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String $r15, $r17;
        boolean $z0, $z1, $z2, $z3;
        org.apache.poi.hssf.record.ObjRecord r0;
        org.apache.poi.hssf.record.SubRecord $r6, $r9;
        java.util.List $r8, $r10;
        java.lang.StringBuilder $r12, $r13, $r14, $r16, $r22;
        org.apache.poi.hssf.record.CommonObjectDataSubRecord r7;

        r0 := @this: org.apache.poi.hssf.record.ObjRecord;

        r1 := @parameter0: org.apache.poi.hssf.record.RecordInputStream;

        specialinvoke r0.<org.apache.poi.hssf.record.Record: void <init>()>();

        $r2 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: byte[] readRemainder()>();

        $i0 = staticinvoke <org.apache.poi.util.LittleEndian: int getUShort(byte[],int)>($r2, 0);

        if $i0 == 21 goto label01;

        r0.<org.apache.poi.hssf.record.ObjRecord: byte[] _uninterpretedData> = $r2;

        r0.<org.apache.poi.hssf.record.ObjRecord: java.util.List subrecords> = null;

        return;

     label01:
        $r19 = new java.util.ArrayList;

        specialinvoke $r19.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.hssf.record.ObjRecord: java.util.List subrecords> = $r19;

        $r20 = new java.io.ByteArrayInputStream;

        specialinvoke $r20.<java.io.ByteArrayInputStream: void <init>(byte[])>($r2);

        $r21 = new org.apache.poi.util.LittleEndianInputStream;

        specialinvoke $r21.<org.apache.poi.util.LittleEndianInputStream: void <init>(java.io.InputStream)>($r20);

        $r6 = staticinvoke <org.apache.poi.hssf.record.SubRecord: org.apache.poi.hssf.record.SubRecord createSubRecord(org.apache.poi.util.LittleEndianInput,int)>($r21, 0);

        r7 = (org.apache.poi.hssf.record.CommonObjectDataSubRecord) $r6;

        $r8 = r0.<org.apache.poi.hssf.record.ObjRecord: java.util.List subrecords>;

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>(r7);

     label02:
        $s1 = virtualinvoke r7.<org.apache.poi.hssf.record.CommonObjectDataSubRecord: short getObjectType()>();

        $i7 = (int) $s1;

        $r9 = staticinvoke <org.apache.poi.hssf.record.SubRecord: org.apache.poi.hssf.record.SubRecord createSubRecord(org.apache.poi.util.LittleEndianInput,int)>($r21, $i7);

        $r10 = r0.<org.apache.poi.hssf.record.ObjRecord: java.util.List subrecords>;

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r9);

        $z0 = virtualinvoke $r9.<org.apache.poi.hssf.record.SubRecord: boolean isTerminating()>();

        if $z0 == 0 goto label03;

        goto label04;

     label03:
        goto label02;

     label04:
        $i2 = virtualinvoke $r20.<java.io.ByteArrayInputStream: int available()>();

        if $i2 <= 0 goto label10;

        $i4 = lengthof $r2;

        $i3 = <org.apache.poi.hssf.record.ObjRecord: int MAX_PAD_ALIGNMENT>;

        $i5 = $i4 % $i3;

        if $i5 != 0 goto label05;

        $z3 = 1;

        goto label06;

     label05:
        $z3 = 0;

     label06:
        r0.<org.apache.poi.hssf.record.ObjRecord: boolean _isPaddedToQuadByteMultiple> = $z3;

        $z1 = r0.<org.apache.poi.hssf.record.ObjRecord: boolean _isPaddedToQuadByteMultiple>;

        if $z1 == 0 goto label07;

        $i6 = <org.apache.poi.hssf.record.ObjRecord: int MAX_PAD_ALIGNMENT>;

        goto label08;

     label07:
        $i6 = 2;

     label08:
        if $i2 < $i6 goto label11;

        $z2 = staticinvoke <org.apache.poi.hssf.record.ObjRecord: boolean canPaddingBeDiscarded(byte[],int)>($r2, $i2);

        if $z2 != 0 goto label09;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Leftover ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes in subrecord data ");

        $r15 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(byte[])>($r2);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        $r23 = new org.apache.poi.hssf.record.RecordFormatException;

        specialinvoke $r23.<org.apache.poi.hssf.record.RecordFormatException: void <init>(java.lang.String)>($r17);

        throw $r23;

     label09:
        r0.<org.apache.poi.hssf.record.ObjRecord: boolean _isPaddedToQuadByteMultiple> = 0;

        goto label11;

     label10:
        r0.<org.apache.poi.hssf.record.ObjRecord: boolean _isPaddedToQuadByteMultiple> = 0;

     label11:
        r0.<org.apache.poi.hssf.record.ObjRecord: byte[] _uninterpretedData> = null;

        return;
    }

    private static boolean canPaddingBeDiscarded(byte[], int)
    {
        byte[] r0;
        byte $b3;
        int i0, $i1, $i2, i4;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $i1 = lengthof r0;

        i4 = $i1 - i0;

     label1:
        $i2 = lengthof r0;

        if i4 >= $i2 goto label3;

        $b3 = r0[i4];

        if $b3 == 0 goto label2;

        return 0;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        return 1;
    }

    public java.lang.String toString()
    {
        org.apache.poi.hssf.record.ObjRecord r1;
        org.apache.poi.hssf.record.SubRecord r7;
        java.util.List $r2, $r4, $r5;
        java.lang.StringBuffer $r0, $r8;
        int $i0, i1;
        java.lang.Object $r6;
        java.lang.String $r3, $r9;

        r1 := @this: org.apache.poi.hssf.record.ObjRecord;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[OBJ]\n");

        $r2 = r1.<org.apache.poi.hssf.record.ObjRecord: java.util.List subrecords>;

        if $r2 == null goto label2;

        i1 = 0;

     label1:
        $r4 = r1.<org.apache.poi.hssf.record.ObjRecord: java.util.List subrecords>;

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        if i1 >= $i0 goto label2;

        $r5 = r1.<org.apache.poi.hssf.record.ObjRecord: java.util.List subrecords>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i1);

        r7 = (org.apache.poi.hssf.record.SubRecord) $r6;

        $r8 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("SUBRECORD: ");

        $r9 = virtualinvoke r7.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        i1 = i1 + 1;

        goto label1;

     label2:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[/OBJ]\n");

        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    public int getRecordSize()
    {
        byte[] $r1, $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, $i12;
        boolean $z0;
        org.apache.poi.hssf.record.ObjRecord r0;
        org.apache.poi.hssf.record.SubRecord r5;
        java.util.List $r2, $r3;
        java.lang.Object $r4;

        r0 := @this: org.apache.poi.hssf.record.ObjRecord;

        $r1 = r0.<org.apache.poi.hssf.record.ObjRecord: byte[] _uninterpretedData>;

        if $r1 == null goto label1;

        $r6 = r0.<org.apache.poi.hssf.record.ObjRecord: byte[] _uninterpretedData>;

        $i7 = lengthof $r6;

        $i8 = $i7 + 4;

        return $i8;

     label1:
        i9 = 0;

        $r2 = r0.<org.apache.poi.hssf.record.ObjRecord: java.util.List subrecords>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        i10 = $i0 - 1;

     label2:
        if i10 < 0 goto label3;

        $r3 = r0.<org.apache.poi.hssf.record.ObjRecord: java.util.List subrecords>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i10);

        r5 = (org.apache.poi.hssf.record.SubRecord) $r4;

        $i5 = virtualinvoke r5.<org.apache.poi.hssf.record.SubRecord: int getDataSize()>();

        $i6 = $i5 + 4;

        i9 = i9 + $i6;

        $i12 = (int) -1;

        i10 = i10 + $i12;

        goto label2;

     label3:
        $z0 = r0.<org.apache.poi.hssf.record.ObjRecord: boolean _isPaddedToQuadByteMultiple>;

        if $z0 == 0 goto label5;

     label4:
        $i3 = <org.apache.poi.hssf.record.ObjRecord: int MAX_PAD_ALIGNMENT>;

        $i4 = i9 % $i3;

        if $i4 == 0 goto label6;

        i9 = i9 + 1;

        goto label4;

     label5:
        $i1 = i9 % 2;

        if $i1 == 0 goto label6;

        i9 = i9 + 1;

        goto label5;

     label6:
        $i2 = i9 + 4;

        return $i2;
    }

    public int serialize(int, byte[])
    {
        byte[] r2, $r3, $r4;
        int $i0, i1, i2, $i3, $i4, i5, i6;
        org.apache.poi.hssf.record.ObjRecord r0;
        org.apache.poi.util.LittleEndianByteArrayOutputStream $r1;
        org.apache.poi.hssf.record.SubRecord r8;
        java.util.List $r5, $r6;
        java.lang.Object $r7;

        r0 := @this: org.apache.poi.hssf.record.ObjRecord;

        i2 := @parameter0: int;

        r2 := @parameter1: byte[];

        $i0 = virtualinvoke r0.<org.apache.poi.hssf.record.ObjRecord: int getRecordSize()>();

        i1 = $i0 - 4;

        $r1 = new org.apache.poi.util.LittleEndianByteArrayOutputStream;

        specialinvoke $r1.<org.apache.poi.util.LittleEndianByteArrayOutputStream: void <init>(byte[],int,int)>(r2, i2, $i0);

        virtualinvoke $r1.<org.apache.poi.util.LittleEndianByteArrayOutputStream: void writeShort(int)>(93);

        virtualinvoke $r1.<org.apache.poi.util.LittleEndianByteArrayOutputStream: void writeShort(int)>(i1);

        $r3 = r0.<org.apache.poi.hssf.record.ObjRecord: byte[] _uninterpretedData>;

        if $r3 != null goto label5;

        i5 = 0;

     label1:
        $r5 = r0.<org.apache.poi.hssf.record.ObjRecord: java.util.List subrecords>;

        $i3 = interfaceinvoke $r5.<java.util.List: int size()>();

        if i5 >= $i3 goto label2;

        $r6 = r0.<org.apache.poi.hssf.record.ObjRecord: java.util.List subrecords>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i5);

        r8 = (org.apache.poi.hssf.record.SubRecord) $r7;

        virtualinvoke r8.<org.apache.poi.hssf.record.SubRecord: void serialize(org.apache.poi.util.LittleEndianOutput)>($r1);

        i5 = i5 + 1;

        goto label1;

     label2:
        i6 = i2 + i1;

     label3:
        $i4 = virtualinvoke $r1.<org.apache.poi.util.LittleEndianByteArrayOutputStream: int getWriteIndex()>();

        if $i4 >= i6 goto label4;

        virtualinvoke $r1.<org.apache.poi.util.LittleEndianByteArrayOutputStream: void writeByte(int)>(0);

        goto label3;

     label4:
        goto label6;

     label5:
        $r4 = r0.<org.apache.poi.hssf.record.ObjRecord: byte[] _uninterpretedData>;

        virtualinvoke $r1.<org.apache.poi.util.LittleEndianByteArrayOutputStream: void write(byte[])>($r4);

     label6:
        return $i0;
    }

    public short getSid()
    {
        org.apache.poi.hssf.record.ObjRecord r0;

        r0 := @this: org.apache.poi.hssf.record.ObjRecord;

        return 93;
    }

    public java.util.List getSubRecords()
    {
        java.util.List $r1;
        org.apache.poi.hssf.record.ObjRecord r0;

        r0 := @this: org.apache.poi.hssf.record.ObjRecord;

        $r1 = r0.<org.apache.poi.hssf.record.ObjRecord: java.util.List subrecords>;

        return $r1;
    }

    public void clearSubRecords()
    {
        java.util.List $r1;
        org.apache.poi.hssf.record.ObjRecord r0;

        r0 := @this: org.apache.poi.hssf.record.ObjRecord;

        $r1 = r0.<org.apache.poi.hssf.record.ObjRecord: java.util.List subrecords>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        return;
    }

    public void addSubRecord(int, org.apache.poi.hssf.record.SubRecord)
    {
        org.apache.poi.hssf.record.SubRecord r1;
        java.util.List $r2;
        org.apache.poi.hssf.record.ObjRecord r0;
        int i0;

        r0 := @this: org.apache.poi.hssf.record.ObjRecord;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.poi.hssf.record.SubRecord;

        $r2 = r0.<org.apache.poi.hssf.record.ObjRecord: java.util.List subrecords>;

        interfaceinvoke $r2.<java.util.List: void add(int,java.lang.Object)>(i0, r1);

        return;
    }

    public boolean addSubRecord(org.apache.poi.hssf.record.SubRecord)
    {
        org.apache.poi.hssf.record.SubRecord r1;
        java.util.List $r2;
        org.apache.poi.hssf.record.ObjRecord r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hssf.record.ObjRecord;

        r1 := @parameter0: org.apache.poi.hssf.record.SubRecord;

        $r2 = r0.<org.apache.poi.hssf.record.ObjRecord: java.util.List subrecords>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return $z0;
    }

    public java.lang.Object clone()
    {
        org.apache.poi.hssf.record.ObjRecord $r0, r1;
        org.apache.poi.hssf.record.SubRecord r5, $r7;
        java.util.List $r2, $r3;
        int $i0, i1;
        java.lang.Object $r4, $r6;

        r1 := @this: org.apache.poi.hssf.record.ObjRecord;

        $r0 = new org.apache.poi.hssf.record.ObjRecord;

        specialinvoke $r0.<org.apache.poi.hssf.record.ObjRecord: void <init>()>();

        i1 = 0;

     label1:
        $r2 = r1.<org.apache.poi.hssf.record.ObjRecord: java.util.List subrecords>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if i1 >= $i0 goto label2;

        $r3 = r1.<org.apache.poi.hssf.record.ObjRecord: java.util.List subrecords>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i1);

        r5 = (org.apache.poi.hssf.record.SubRecord) $r4;

        $r6 = virtualinvoke r5.<org.apache.poi.hssf.record.SubRecord: java.lang.Object clone()>();

        $r7 = (org.apache.poi.hssf.record.SubRecord) $r6;

        virtualinvoke $r0.<org.apache.poi.hssf.record.ObjRecord: boolean addSubRecord(org.apache.poi.hssf.record.SubRecord)>($r7);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r0;
    }

    static void <clinit>()
    {
        <org.apache.poi.hssf.record.ObjRecord: int NORMAL_PAD_ALIGNMENT> = 2;

        <org.apache.poi.hssf.record.ObjRecord: short sid> = 93;

        <org.apache.poi.hssf.record.ObjRecord: int MAX_PAD_ALIGNMENT> = 4;

        return;
    }
}
