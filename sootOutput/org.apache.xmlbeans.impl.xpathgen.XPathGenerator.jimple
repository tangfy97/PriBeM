public class org.apache.xmlbeans.impl.xpathgen.XPathGenerator extends java.lang.Object
{
    static final boolean $assertionsDisabled;
    static java.lang.Class class$org$apache$xmlbeans$impl$xpathgen$XPathGenerator;

    public void <init>()
    {
        org.apache.xmlbeans.impl.xpathgen.XPathGenerator r0;

        r0 := @this: org.apache.xmlbeans.impl.xpathgen.XPathGenerator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String generateXPath(org.apache.xmlbeans.XmlCursor, org.apache.xmlbeans.XmlCursor, javax.xml.namespace.NamespaceContext) throws org.apache.xmlbeans.impl.xpathgen.XPathGenerationException
    {
        javax.xml.namespace.NamespaceContext r1;
        boolean $z0;
        javax.xml.namespace.QName $r4, $r16;
        org.apache.xmlbeans.XmlCursor r0, r3;
        org.apache.xmlbeans.impl.xpathgen.XPathGenerationException $r37;
        org.apache.xmlbeans.XmlCursor$TokenType $r2;
        java.lang.StringBuffer $r7, $r8, $r9, $r10, $r12, $r13, $r14, $r18, $r19, $r20, $r21, $r23, $r26, $r27, $r28, $r29, $r30, $r32, $r33, $r34, $r38, $r39, $r41;
        int $i0, $i1, $i2;
        java.lang.String $r5, $r6, $r11, $r15, $r17, $r22, $r24, $r25, $r31, $r35, $r36, $r40, $r42;
        java.lang.IllegalArgumentException $r43, $r44;

        r0 := @parameter0: org.apache.xmlbeans.XmlCursor;

        r3 := @parameter1: org.apache.xmlbeans.XmlCursor;

        r1 := @parameter2: javax.xml.namespace.NamespaceContext;

        if r0 != null goto label01;

        $r44 = new java.lang.IllegalArgumentException;

        specialinvoke $r44.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null node");

        throw $r44;

     label01:
        if r1 != null goto label02;

        $r43 = new java.lang.IllegalArgumentException;

        specialinvoke $r43.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null namespace context");

        throw $r43;

     label02:
        $r2 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType currentTokenType()>();

        if r3 == null goto label03;

        $z0 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: boolean isAtSamePositionAs(org.apache.xmlbeans.XmlCursor)>(r3);

        if $z0 == 0 goto label03;

        return ".";

     label03:
        $i0 = virtualinvoke $r2.<org.apache.xmlbeans.XmlCursor$TokenType: int intValue()>();

        tableswitch($i0)
        {
            case 1: goto label07;
            case 2: goto label10;
            case 3: goto label07;
            case 4: goto label10;
            case 5: goto label08;
            case 6: goto label04;
            case 7: goto label05;
            default: goto label10;
        };

     label04:
        $r16 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: javax.xml.namespace.QName getName()>();

        interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: boolean toParent()>();

        $r17 = staticinvoke <org.apache.xmlbeans.impl.xpathgen.XPathGenerator: java.lang.String generateInternal(org.apache.xmlbeans.XmlCursor,org.apache.xmlbeans.XmlCursor,javax.xml.namespace.NamespaceContext)>(r0, r3, r1);

        $r18 = new java.lang.StringBuffer;

        specialinvoke $r18.<java.lang.StringBuffer: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(47);

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(64);

        $r22 = staticinvoke <org.apache.xmlbeans.impl.xpathgen.XPathGenerator: java.lang.String qnameToString(javax.xml.namespace.QName,javax.xml.namespace.NamespaceContext)>($r16, r1);

        $r23 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r24;

     label05:
        $r4 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: javax.xml.namespace.QName getName()>();

        interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: boolean toParent()>();

        $r5 = staticinvoke <org.apache.xmlbeans.impl.xpathgen.XPathGenerator: java.lang.String generateInternal(org.apache.xmlbeans.XmlCursor,org.apache.xmlbeans.XmlCursor,javax.xml.namespace.NamespaceContext)>(r0, r3, r1);

        $r6 = virtualinvoke $r4.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $i1 = virtualinvoke $r6.<java.lang.String: int length()>();

        if $i1 != 0 goto label06;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/@xmlns");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r15;

     label06:
        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/@xmlns:");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r11;

     label07:
        $r36 = staticinvoke <org.apache.xmlbeans.impl.xpathgen.XPathGenerator: java.lang.String generateInternal(org.apache.xmlbeans.XmlCursor,org.apache.xmlbeans.XmlCursor,javax.xml.namespace.NamespaceContext)>(r0, r3, r1);

        return $r36;

     label08:
        $i2 = staticinvoke <org.apache.xmlbeans.impl.xpathgen.XPathGenerator: int countTextTokens(org.apache.xmlbeans.XmlCursor)>(r0);

        interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: boolean toParent()>();

        $r25 = staticinvoke <org.apache.xmlbeans.impl.xpathgen.XPathGenerator: java.lang.String generateInternal(org.apache.xmlbeans.XmlCursor,org.apache.xmlbeans.XmlCursor,javax.xml.namespace.NamespaceContext)>(r0, r3, r1);

        if $i2 != 0 goto label09;

        $r32 = new java.lang.StringBuffer;

        specialinvoke $r32.<java.lang.StringBuffer: void <init>()>();

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r25);

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/text()");

        $r35 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r35;

     label09:
        $r26 = new java.lang.StringBuffer;

        specialinvoke $r26.<java.lang.StringBuffer: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r25);

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/text()[position()=");

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(93);

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r31;

     label10:
        $r37 = new org.apache.xmlbeans.impl.xpathgen.XPathGenerationException;

        $r38 = new java.lang.StringBuffer;

        specialinvoke $r38.<java.lang.StringBuffer: void <init>()>();

        $r39 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Cannot generate XPath for cursor position: ");

        $r40 = virtualinvoke $r2.<org.apache.xmlbeans.XmlCursor$TokenType: java.lang.String toString()>();

        $r41 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r40);

        $r42 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r37.<org.apache.xmlbeans.impl.xpathgen.XPathGenerationException: void <init>(java.lang.String)>($r42);

        throw $r37;
    }

    private static java.lang.String generateInternal(org.apache.xmlbeans.XmlCursor, org.apache.xmlbeans.XmlCursor, javax.xml.namespace.NamespaceContext) throws org.apache.xmlbeans.impl.xpathgen.XPathGenerationException
    {
        java.lang.IllegalStateException $r19;
        javax.xml.namespace.NamespaceContext r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        javax.xml.namespace.QName $r2;
        org.apache.xmlbeans.XmlCursor r0, r1, $r3;
        java.lang.AssertionError $r28;
        java.lang.StringBuffer $r6, $r7, $r8, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r18, $r20, $r21, $r22, $r24, $r25, $r26;
        int i0, i1;
        java.lang.String $r5, $r9, $r17, $r23, $r27, $r29;

        r0 := @parameter0: org.apache.xmlbeans.XmlCursor;

        r1 := @parameter1: org.apache.xmlbeans.XmlCursor;

        r4 := @parameter2: javax.xml.namespace.NamespaceContext;

        $z0 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: boolean isStartdoc()>();

        if $z0 == 0 goto label1;

        return "";

     label1:
        if r1 == null goto label2;

        $z7 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: boolean isAtSamePositionAs(org.apache.xmlbeans.XmlCursor)>(r1);

        if $z7 == 0 goto label2;

        return ".";

     label2:
        $z1 = <org.apache.xmlbeans.impl.xpathgen.XPathGenerator: boolean $assertionsDisabled>;

        if $z1 != 0 goto label3;

        $z6 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: boolean isStart()>();

        if $z6 != 0 goto label3;

        $r28 = new java.lang.AssertionError;

        specialinvoke $r28.<java.lang.AssertionError: void <init>()>();

        throw $r28;

     label3:
        $r2 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: javax.xml.namespace.QName getName()>();

        $r3 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor newCursor()>();

        $z2 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: boolean toParent()>();

        if $z2 != 0 goto label4;

        $r24 = new java.lang.StringBuffer;

        specialinvoke $r24.<java.lang.StringBuffer: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r2);

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r27;

     label4:
        i0 = 0;

        i1 = 1;

        interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: void push()>();

        $z3 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: boolean toChild(javax.xml.namespace.QName)>($r2);

        if $z3 != 0 goto label5;

        $r19 = new java.lang.IllegalStateException;

        $r20 = new java.lang.StringBuffer;

        specialinvoke $r20.<java.lang.StringBuffer: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Must have at least one child with name: ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r2);

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r23);

        throw $r19;

     label5:
        $z4 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: boolean isAtSamePositionAs(org.apache.xmlbeans.XmlCursor)>($r3);

        if $z4 == 0 goto label6;

        i0 = i1;

        goto label7;

     label6:
        i1 = i1 + 1;

     label7:
        $z5 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: boolean toNextSibling(javax.xml.namespace.QName)>($r2);

        if $z5 != 0 goto label5;

        interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: boolean pop()>();

        interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        $r5 = staticinvoke <org.apache.xmlbeans.impl.xpathgen.XPathGenerator: java.lang.String generateInternal(org.apache.xmlbeans.XmlCursor,org.apache.xmlbeans.XmlCursor,javax.xml.namespace.NamespaceContext)>(r0, r1, r4);

        if i1 != 1 goto label8;

        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(47);

        $r17 = staticinvoke <org.apache.xmlbeans.impl.xpathgen.XPathGenerator: java.lang.String qnameToString(javax.xml.namespace.QName,javax.xml.namespace.NamespaceContext)>($r2, r4);

        $r18 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        $r29 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label9;

     label8:
        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(47);

        $r9 = staticinvoke <org.apache.xmlbeans.impl.xpathgen.XPathGenerator: java.lang.String qnameToString(javax.xml.namespace.QName,javax.xml.namespace.NamespaceContext)>($r2, r4);

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(91);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(93);

        $r29 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

     label9:
        return $r29;
    }

    private static java.lang.String qnameToString(javax.xml.namespace.QName, javax.xml.namespace.NamespaceContext) throws org.apache.xmlbeans.impl.xpathgen.XPathGenerationException
    {
        org.apache.xmlbeans.impl.xpathgen.XPathGenerationException $r10, $r15;
        java.lang.StringBuffer $r5, $r6, $r7, $r8, $r11, $r12, $r13, $r16, $r17, $r18, $r21, $r22, $r23, $r24;
        int $i0, $i1, $i2;
        javax.xml.namespace.NamespaceContext r4;
        java.lang.String $r1, $r2, $r3, $r9, $r14, $r19, $r20, $r25, $r26;
        boolean $z0;
        javax.xml.namespace.QName r0;

        r0 := @parameter0: javax.xml.namespace.QName;

        r4 := @parameter1: javax.xml.namespace.NamespaceContext;

        $r1 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r2 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        return $r1;

     label1:
        $r3 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getPrefix()>();

        if $r3 == null goto label2;

        $i2 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i2 <= 0 goto label2;

        $r20 = interfaceinvoke r4.<javax.xml.namespace.NamespaceContext: java.lang.String getNamespaceURI(java.lang.String)>($r3);

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r20);

        if $z0 == 0 goto label2;

        $r21 = new java.lang.StringBuffer;

        specialinvoke $r21.<java.lang.StringBuffer: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r25;

     label2:
        $r26 = interfaceinvoke r4.<javax.xml.namespace.NamespaceContext: java.lang.String getPrefix(java.lang.String)>($r2);

        if $r26 != null goto label3;

        $r15 = new org.apache.xmlbeans.impl.xpathgen.XPathGenerationException;

        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Could not obtain a prefix for URI: ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r15.<org.apache.xmlbeans.impl.xpathgen.XPathGenerationException: void <init>(java.lang.String)>($r19);

        throw $r15;

     label3:
        $i1 = virtualinvoke $r26.<java.lang.String: int length()>();

        if $i1 != 0 goto label4;

        $r10 = new org.apache.xmlbeans.impl.xpathgen.XPathGenerationException;

        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Can not use default prefix in XPath for URI: ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r10.<org.apache.xmlbeans.impl.xpathgen.XPathGenerationException: void <init>(java.lang.String)>($r14);

        throw $r10;

     label4:
        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r26);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r9;
    }

    private static int countTextTokens(org.apache.xmlbeans.XmlCursor)
    {
        org.apache.xmlbeans.XmlCursor r0, $r1;
        org.apache.xmlbeans.XmlCursor$TokenType r2;
        int $i0, i1, i2, $i3;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: org.apache.xmlbeans.XmlCursor;

        i1 = 0;

        i2 = 0;

        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor newCursor()>();

        interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: void push()>();

        interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: boolean toParent()>();

        r2 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toFirstContentToken()>();

     label1:
        $z0 = virtualinvoke r2.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isEnd()>();

        if $z0 != 0 goto label5;

        $z1 = virtualinvoke r2.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isText()>();

        if $z1 == 0 goto label3;

        $i0 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: int comparePosition(org.apache.xmlbeans.XmlCursor)>($r1);

        if $i0 <= 0 goto label2;

        i2 = i2 + 1;

        goto label4;

     label2:
        i1 = i1 + 1;

        goto label4;

     label3:
        $z2 = virtualinvoke r2.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isStart()>();

        if $z2 == 0 goto label4;

        interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toEndToken()>();

     label4:
        r2 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toNextToken()>();

        goto label1;

     label5:
        interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: boolean pop()>();

        if i2 != 0 goto label6;

        $i3 = 0;

        goto label7;

     label6:
        $i3 = i1;

     label7:
        return $i3;
    }

    public static void main(java.lang.String[]) throws org.apache.xmlbeans.XmlException
    {
        org.apache.xmlbeans.XmlCursor $r2, $r7;
        java.lang.String[] r24;
        org.apache.xmlbeans.impl.xpathgen.XPathGenerator$1 $r0;
        org.apache.xmlbeans.XmlObject $r1;
        java.lang.String $r4, $r6, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23;
        java.io.PrintStream $r3, $r5, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22;

        r24 := @parameter0: java.lang.String[];

        $r0 = new org.apache.xmlbeans.impl.xpathgen.XPathGenerator$1;

        specialinvoke $r0.<org.apache.xmlbeans.impl.xpathgen.XPathGenerator$1: void <init>()>();

        $r1 = staticinvoke <org.apache.xmlbeans.XmlObject$Factory: org.apache.xmlbeans.XmlObject parse(java.lang.String)>("<root>\n<ns:a xmlns:ns=\"http://a.com\"><b foo=\"value\">text1<c/>text2<c/>text3<c>text</c>text4</b></ns:a>\n</root>");

        $r2 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlObject: org.apache.xmlbeans.XmlCursor newCursor()>();

        interfaceinvoke $r2.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toFirstContentToken()>();

        interfaceinvoke $r2.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toFirstContentToken()>();

        interfaceinvoke $r2.<org.apache.xmlbeans.XmlCursor: boolean toFirstChild()>();

        interfaceinvoke $r2.<org.apache.xmlbeans.XmlCursor: boolean toFirstChild()>();

        interfaceinvoke $r2.<org.apache.xmlbeans.XmlCursor: void push()>();

        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r4 = staticinvoke <org.apache.xmlbeans.impl.xpathgen.XPathGenerator: java.lang.String generateXPath(org.apache.xmlbeans.XmlCursor,org.apache.xmlbeans.XmlCursor,javax.xml.namespace.NamespaceContext)>($r2, null, $r0);

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

        interfaceinvoke $r2.<org.apache.xmlbeans.XmlCursor: boolean pop()>();

        interfaceinvoke $r2.<org.apache.xmlbeans.XmlCursor: boolean toNextSibling()>();

        interfaceinvoke $r2.<org.apache.xmlbeans.XmlCursor: boolean toNextSibling()>();

        interfaceinvoke $r2.<org.apache.xmlbeans.XmlCursor: void push()>();

        $r5 = <java.lang.System: java.io.PrintStream out>;

        $r6 = staticinvoke <org.apache.xmlbeans.impl.xpathgen.XPathGenerator: java.lang.String generateXPath(org.apache.xmlbeans.XmlCursor,org.apache.xmlbeans.XmlCursor,javax.xml.namespace.NamespaceContext)>($r2, null, $r0);

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r6);

        interfaceinvoke $r2.<org.apache.xmlbeans.XmlCursor: boolean pop()>();

        $r7 = interfaceinvoke $r2.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor newCursor()>();

        interfaceinvoke $r7.<org.apache.xmlbeans.XmlCursor: boolean toParent()>();

        interfaceinvoke $r2.<org.apache.xmlbeans.XmlCursor: void push()>();

        $r8 = <java.lang.System: java.io.PrintStream out>;

        $r9 = staticinvoke <org.apache.xmlbeans.impl.xpathgen.XPathGenerator: java.lang.String generateXPath(org.apache.xmlbeans.XmlCursor,org.apache.xmlbeans.XmlCursor,javax.xml.namespace.NamespaceContext)>($r2, $r7, $r0);

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r9);

        interfaceinvoke $r2.<org.apache.xmlbeans.XmlCursor: boolean pop()>();

        interfaceinvoke $r7.<org.apache.xmlbeans.XmlCursor: boolean toParent()>();

        interfaceinvoke $r2.<org.apache.xmlbeans.XmlCursor: void push()>();

        $r10 = <java.lang.System: java.io.PrintStream out>;

        $r11 = staticinvoke <org.apache.xmlbeans.impl.xpathgen.XPathGenerator: java.lang.String generateXPath(org.apache.xmlbeans.XmlCursor,org.apache.xmlbeans.XmlCursor,javax.xml.namespace.NamespaceContext)>($r2, $r7, $r0);

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r11);

        interfaceinvoke $r2.<org.apache.xmlbeans.XmlCursor: boolean pop()>();

        interfaceinvoke $r2.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toFirstContentToken()>();

        interfaceinvoke $r2.<org.apache.xmlbeans.XmlCursor: void push()>();

        $r12 = <java.lang.System: java.io.PrintStream out>;

        $r13 = staticinvoke <org.apache.xmlbeans.impl.xpathgen.XPathGenerator: java.lang.String generateXPath(org.apache.xmlbeans.XmlCursor,org.apache.xmlbeans.XmlCursor,javax.xml.namespace.NamespaceContext)>($r2, $r7, $r0);

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r13);

        interfaceinvoke $r2.<org.apache.xmlbeans.XmlCursor: boolean pop()>();

        interfaceinvoke $r2.<org.apache.xmlbeans.XmlCursor: boolean toParent()>();

        interfaceinvoke $r2.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toPrevToken()>();

        interfaceinvoke $r2.<org.apache.xmlbeans.XmlCursor: void push()>();

        $r14 = <java.lang.System: java.io.PrintStream out>;

        $r15 = staticinvoke <org.apache.xmlbeans.impl.xpathgen.XPathGenerator: java.lang.String generateXPath(org.apache.xmlbeans.XmlCursor,org.apache.xmlbeans.XmlCursor,javax.xml.namespace.NamespaceContext)>($r2, $r7, $r0);

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r15);

        interfaceinvoke $r2.<org.apache.xmlbeans.XmlCursor: boolean pop()>();

        interfaceinvoke $r2.<org.apache.xmlbeans.XmlCursor: boolean toParent()>();

        interfaceinvoke $r2.<org.apache.xmlbeans.XmlCursor: void push()>();

        $r16 = <java.lang.System: java.io.PrintStream out>;

        $r17 = staticinvoke <org.apache.xmlbeans.impl.xpathgen.XPathGenerator: java.lang.String generateXPath(org.apache.xmlbeans.XmlCursor,org.apache.xmlbeans.XmlCursor,javax.xml.namespace.NamespaceContext)>($r2, $r7, $r0);

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r17);

        interfaceinvoke $r2.<org.apache.xmlbeans.XmlCursor: boolean pop()>();

        interfaceinvoke $r2.<org.apache.xmlbeans.XmlCursor: boolean toFirstAttribute()>();

        interfaceinvoke $r2.<org.apache.xmlbeans.XmlCursor: void push()>();

        $r18 = <java.lang.System: java.io.PrintStream out>;

        $r19 = staticinvoke <org.apache.xmlbeans.impl.xpathgen.XPathGenerator: java.lang.String generateXPath(org.apache.xmlbeans.XmlCursor,org.apache.xmlbeans.XmlCursor,javax.xml.namespace.NamespaceContext)>($r2, $r7, $r0);

        virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>($r19);

        interfaceinvoke $r2.<org.apache.xmlbeans.XmlCursor: boolean pop()>();

        interfaceinvoke $r2.<org.apache.xmlbeans.XmlCursor: boolean toParent()>();

        interfaceinvoke $r2.<org.apache.xmlbeans.XmlCursor: boolean toParent()>();

        interfaceinvoke $r2.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toNextToken()>();

        interfaceinvoke $r2.<org.apache.xmlbeans.XmlCursor: void push()>();

        $r20 = <java.lang.System: java.io.PrintStream out>;

        $r21 = staticinvoke <org.apache.xmlbeans.impl.xpathgen.XPathGenerator: java.lang.String generateXPath(org.apache.xmlbeans.XmlCursor,org.apache.xmlbeans.XmlCursor,javax.xml.namespace.NamespaceContext)>($r2, $r7, $r0);

        virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>($r21);

        interfaceinvoke $r2.<org.apache.xmlbeans.XmlCursor: boolean pop()>();

        interfaceinvoke $r2.<org.apache.xmlbeans.XmlCursor: void push()>();

        $r22 = <java.lang.System: java.io.PrintStream out>;

        $r23 = staticinvoke <org.apache.xmlbeans.impl.xpathgen.XPathGenerator: java.lang.String generateXPath(org.apache.xmlbeans.XmlCursor,org.apache.xmlbeans.XmlCursor,javax.xml.namespace.NamespaceContext)>($r2, null, $r0);

        virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>($r23);

        interfaceinvoke $r2.<org.apache.xmlbeans.XmlCursor: boolean pop()>();

        return;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.lang.Class $r0, $r1;
        boolean $z0, $z1;

        $r0 = <org.apache.xmlbeans.impl.xpathgen.XPathGenerator: java.lang.Class class$org$apache$xmlbeans$impl$xpathgen$XPathGenerator>;

        if $r0 != null goto label1;

        $r1 = staticinvoke <org.apache.xmlbeans.impl.xpathgen.XPathGenerator: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.impl.xpathgen.XPathGenerator");

        <org.apache.xmlbeans.impl.xpathgen.XPathGenerator: java.lang.Class class$org$apache$xmlbeans$impl$xpathgen$XPathGenerator> = $r1;

        goto label2;

     label1:
        $r1 = <org.apache.xmlbeans.impl.xpathgen.XPathGenerator: java.lang.Class class$org$apache$xmlbeans$impl$xpathgen$XPathGenerator>;

     label2:
        $z0 = virtualinvoke $r1.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        <org.apache.xmlbeans.impl.xpathgen.XPathGenerator: boolean $assertionsDisabled> = $z1;

        return;
    }
}
