public class org.apache.pdfbox.io.ASCII85InputStream extends java.io.FilterInputStream
{
    private int index;
    private int n;
    private boolean eof;
    private byte[] ascii;
    private byte[] b;
    private static final char TERMINATOR;
    private static final char OFFSET;
    private static final char NEWLINE;
    private static final char RETURN;
    private static final char SPACE;
    private static final char PADDING_U;
    private static final char Z;

    public void <init>(java.io.InputStream)
    {
        org.apache.pdfbox.io.ASCII85InputStream r0;
        byte[] $r2, $r3;
        java.io.InputStream r1;

        r0 := @this: org.apache.pdfbox.io.ASCII85InputStream;

        r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<java.io.FilterInputStream: void <init>(java.io.InputStream)>(r1);

        r0.<org.apache.pdfbox.io.ASCII85InputStream: int index> = 0;

        r0.<org.apache.pdfbox.io.ASCII85InputStream: int n> = 0;

        r0.<org.apache.pdfbox.io.ASCII85InputStream: boolean eof> = 0;

        $r2 = newarray (byte)[5];

        r0.<org.apache.pdfbox.io.ASCII85InputStream: byte[] ascii> = $r2;

        $r3 = newarray (byte)[4];

        r0.<org.apache.pdfbox.io.ASCII85InputStream: byte[] b> = $r3;

        return;
    }

    public final int read() throws java.io.IOException
    {
        byte[] $r1, $r2, $r3, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r14;
        org.apache.pdfbox.io.ASCII85InputStream r0;
        byte $b6, $b7, $b12, b13, $b16, b17, b21, $b25;
        long $l4, $l9, $l10, l19;
        short $s26, $s57;
        java.io.IOException $r15;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i5, $i8, $i11, i14, $i15, i18, i20, i22, $i23, $i24, $i28, $i29, $i31, $i33, $i34, $i35, $i36, $i37, $i39, $i40, $i41, $i43, $i45, $i46, $i47, $i48, $i49, $i51, $i52, $i53, $i54, $i56, $i58;
        java.io.InputStream $r12, $r13;

        r0 := @this: org.apache.pdfbox.io.ASCII85InputStream;

        $i1 = r0.<org.apache.pdfbox.io.ASCII85InputStream: int index>;

        $i0 = r0.<org.apache.pdfbox.io.ASCII85InputStream: int n>;

        if $i1 < $i0 goto label20;

        $z0 = r0.<org.apache.pdfbox.io.ASCII85InputStream: boolean eof>;

        if $z0 == 0 goto label01;

        $i28 = (int) -1;

        return $i28;

     label01:
        r0.<org.apache.pdfbox.io.ASCII85InputStream: int index> = 0;

     label02:
        $r12 = r0.<org.apache.pdfbox.io.ASCII85InputStream: java.io.InputStream in>;

        $i11 = virtualinvoke $r12.<java.io.InputStream: int read()>();

        $b12 = (byte) $i11;

        $i29 = (int) $b12;

        $i31 = (int) -1;

        if $i29 != $i31 goto label03;

        r0.<org.apache.pdfbox.io.ASCII85InputStream: boolean eof> = 1;

        $i33 = (int) -1;

        return $i33;

     label03:
        b13 = (byte) $b12;

        $i34 = (int) b13;

        if $i34 == 10 goto label02;

        $i35 = (int) b13;

        if $i35 == 13 goto label02;

        $i36 = (int) b13;

        if $i36 == 32 goto label02;

        $i37 = (int) b13;

        if $i37 != 126 goto label04;

        r0.<org.apache.pdfbox.io.ASCII85InputStream: boolean eof> = 1;

        r0.<org.apache.pdfbox.io.ASCII85InputStream: byte[] b> = null;

        r0.<org.apache.pdfbox.io.ASCII85InputStream: byte[] ascii> = null;

        r0.<org.apache.pdfbox.io.ASCII85InputStream: int n> = 0;

        $i39 = (int) -1;

        return $i39;

     label04:
        $i40 = (int) b13;

        if $i40 != 122 goto label05;

        $r11 = r0.<org.apache.pdfbox.io.ASCII85InputStream: byte[] b>;

        $r10 = r0.<org.apache.pdfbox.io.ASCII85InputStream: byte[] b>;

        $r9 = r0.<org.apache.pdfbox.io.ASCII85InputStream: byte[] b>;

        $r8 = r0.<org.apache.pdfbox.io.ASCII85InputStream: byte[] b>;

        $r8[3] = 0;

        $r9[2] = 0;

        $r10[1] = 0;

        $r11[0] = 0;

        r0.<org.apache.pdfbox.io.ASCII85InputStream: int n> = 4;

        goto label20;

     label05:
        $r1 = r0.<org.apache.pdfbox.io.ASCII85InputStream: byte[] ascii>;

        $r1[0] = b13;

        i14 = 1;

     label06:
        if i14 >= 5 goto label10;

     label07:
        $r13 = r0.<org.apache.pdfbox.io.ASCII85InputStream: java.io.InputStream in>;

        $i15 = virtualinvoke $r13.<java.io.InputStream: int read()>();

        $b16 = (byte) $i15;

        $i41 = (int) $b16;

        $i43 = (int) -1;

        if $i41 != $i43 goto label08;

        r0.<org.apache.pdfbox.io.ASCII85InputStream: boolean eof> = 1;

        $i45 = (int) -1;

        return $i45;

     label08:
        b17 = (byte) $b16;

        $i46 = (int) b17;

        if $i46 == 10 goto label07;

        $i47 = (int) b17;

        if $i47 == 13 goto label07;

        $i48 = (int) b17;

        if $i48 == 32 goto label07;

        $r6 = r0.<org.apache.pdfbox.io.ASCII85InputStream: byte[] ascii>;

        $r6[i14] = b17;

        $i49 = (int) b17;

        if $i49 != 126 goto label09;

        $r7 = r0.<org.apache.pdfbox.io.ASCII85InputStream: byte[] ascii>;

        $r7[i14] = 117;

        goto label10;

     label09:
        i14 = i14 + 1;

        goto label06;

     label10:
        $i2 = i14 - 1;

        r0.<org.apache.pdfbox.io.ASCII85InputStream: int n> = $i2;

        $i3 = r0.<org.apache.pdfbox.io.ASCII85InputStream: int n>;

        if $i3 != 0 goto label11;

        r0.<org.apache.pdfbox.io.ASCII85InputStream: boolean eof> = 1;

        r0.<org.apache.pdfbox.io.ASCII85InputStream: byte[] ascii> = null;

        r0.<org.apache.pdfbox.io.ASCII85InputStream: byte[] b> = null;

        $i51 = (int) -1;

        return $i51;

     label11:
        if i14 >= 5 goto label14;

        i18 = i14 + 1;

     label12:
        if i18 >= 5 goto label13;

        $r5 = r0.<org.apache.pdfbox.io.ASCII85InputStream: byte[] ascii>;

        $r5[i18] = 117;

        i18 = i18 + 1;

        goto label12;

     label13:
        r0.<org.apache.pdfbox.io.ASCII85InputStream: boolean eof> = 1;

     label14:
        l19 = 0L;

        i20 = 0;

     label15:
        if i20 >= 5 goto label18;

        $r3 = r0.<org.apache.pdfbox.io.ASCII85InputStream: byte[] ascii>;

        $b7 = $r3[i20];

        $i52 = (int) $b7;

        $i8 = $i52 - 33;

        b21 = (byte) $i8;

        $i53 = (int) b21;

        if $i53 < 0 goto label16;

        $i54 = (int) b21;

        if $i54 <= 93 goto label17;

     label16:
        r0.<org.apache.pdfbox.io.ASCII85InputStream: int n> = 0;

        r0.<org.apache.pdfbox.io.ASCII85InputStream: boolean eof> = 1;

        r0.<org.apache.pdfbox.io.ASCII85InputStream: byte[] ascii> = null;

        r0.<org.apache.pdfbox.io.ASCII85InputStream: byte[] b> = null;

        $r15 = new java.io.IOException;

        specialinvoke $r15.<java.io.IOException: void <init>(java.lang.String)>("Invalid data in Ascii85 stream");

        throw $r15;

     label17:
        $l10 = l19 * 85L;

        $l9 = (long) b21;

        l19 = $l10 + $l9;

        i20 = i20 + 1;

        goto label15;

     label18:
        i22 = 3;

     label19:
        if i22 < 0 goto label20;

        $r2 = r0.<org.apache.pdfbox.io.ASCII85InputStream: byte[] b>;

        $l4 = l19 & 255L;

        $i5 = (int) $l4;

        $b6 = (byte) $i5;

        $r2[i22] = $b6;

        l19 = l19 >>> 8;

        $i56 = (int) -1;

        i22 = i22 + $i56;

        goto label19;

     label20:
        $r14 = r0.<org.apache.pdfbox.io.ASCII85InputStream: byte[] b>;

        $i23 = r0.<org.apache.pdfbox.io.ASCII85InputStream: int index>;

        $i24 = $i23 + 1;

        r0.<org.apache.pdfbox.io.ASCII85InputStream: int index> = $i24;

        $b25 = $r14[$i23];

        $s57 = (short) $b25;

        $s26 = $s57 & 255;

        $i58 = (int) $s26;

        return $i58;
    }

    public final int read(byte[], int, int) throws java.io.IOException
    {
        byte[] r1, $r2;
        org.apache.pdfbox.io.ASCII85InputStream r0;
        byte $b5, $b10;
        int i0, $i1, $i2, $i3, i4, $i6, $i7, $i8, $i9, $i11, $i12, i13, $i15, $i17;
        boolean $z0;

        r0 := @this: org.apache.pdfbox.io.ASCII85InputStream;

        r1 := @parameter0: byte[];

        i4 := @parameter1: int;

        i0 := @parameter2: int;

        $z0 = r0.<org.apache.pdfbox.io.ASCII85InputStream: boolean eof>;

        if $z0 == 0 goto label1;

        $i12 = r0.<org.apache.pdfbox.io.ASCII85InputStream: int index>;

        $i11 = r0.<org.apache.pdfbox.io.ASCII85InputStream: int n>;

        if $i12 < $i11 goto label1;

        $i15 = (int) -1;

        return $i15;

     label1:
        i13 = 0;

     label2:
        if i13 >= i0 goto label6;

        $i2 = r0.<org.apache.pdfbox.io.ASCII85InputStream: int index>;

        $i1 = r0.<org.apache.pdfbox.io.ASCII85InputStream: int n>;

        if $i2 >= $i1 goto label3;

        $i9 = i13 + i4;

        $r2 = r0.<org.apache.pdfbox.io.ASCII85InputStream: byte[] b>;

        $i7 = r0.<org.apache.pdfbox.io.ASCII85InputStream: int index>;

        $i8 = $i7 + 1;

        r0.<org.apache.pdfbox.io.ASCII85InputStream: int index> = $i8;

        $b10 = $r2[$i7];

        r1[$i9] = $b10;

        goto label5;

     label3:
        $i3 = virtualinvoke r0.<org.apache.pdfbox.io.ASCII85InputStream: int read()>();

        $i17 = (int) -1;

        if $i3 != $i17 goto label4;

        return i13;

     label4:
        $i6 = i13 + i4;

        $b5 = (byte) $i3;

        r1[$i6] = $b5;

     label5:
        i13 = i13 + 1;

        goto label2;

     label6:
        return i0;
    }

    public void close() throws java.io.IOException
    {
        org.apache.pdfbox.io.ASCII85InputStream r0;

        r0 := @this: org.apache.pdfbox.io.ASCII85InputStream;

        r0.<org.apache.pdfbox.io.ASCII85InputStream: byte[] ascii> = null;

        r0.<org.apache.pdfbox.io.ASCII85InputStream: boolean eof> = 1;

        r0.<org.apache.pdfbox.io.ASCII85InputStream: byte[] b> = null;

        specialinvoke r0.<java.io.FilterInputStream: void close()>();

        return;
    }

    public boolean markSupported()
    {
        org.apache.pdfbox.io.ASCII85InputStream r0;

        r0 := @this: org.apache.pdfbox.io.ASCII85InputStream;

        return 0;
    }

    public long skip(long)
    {
        org.apache.pdfbox.io.ASCII85InputStream r0;
        long l0;

        r0 := @this: org.apache.pdfbox.io.ASCII85InputStream;

        l0 := @parameter0: long;

        return 0L;
    }

    public int available()
    {
        org.apache.pdfbox.io.ASCII85InputStream r0;

        r0 := @this: org.apache.pdfbox.io.ASCII85InputStream;

        return 0;
    }

    public void mark(int)
    {
        org.apache.pdfbox.io.ASCII85InputStream r0;
        int i0;

        r0 := @this: org.apache.pdfbox.io.ASCII85InputStream;

        i0 := @parameter0: int;

        return;
    }

    public void reset() throws java.io.IOException
    {
        org.apache.pdfbox.io.ASCII85InputStream r1;
        java.io.IOException $r0;

        r1 := @this: org.apache.pdfbox.io.ASCII85InputStream;

        $r0 = new java.io.IOException;

        specialinvoke $r0.<java.io.IOException: void <init>(java.lang.String)>("Reset is not supported");

        throw $r0;
    }

    public static void <clinit>()
    {
        <org.apache.pdfbox.io.ASCII85InputStream: char Z> = 122;

        <org.apache.pdfbox.io.ASCII85InputStream: char PADDING_U> = 117;

        <org.apache.pdfbox.io.ASCII85InputStream: char SPACE> = 32;

        <org.apache.pdfbox.io.ASCII85InputStream: char RETURN> = 13;

        <org.apache.pdfbox.io.ASCII85InputStream: char NEWLINE> = 10;

        <org.apache.pdfbox.io.ASCII85InputStream: char OFFSET> = 33;

        <org.apache.pdfbox.io.ASCII85InputStream: char TERMINATOR> = 126;

        return;
    }
}
