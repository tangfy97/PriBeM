final class com.mycila.inject.internal.cglib.core.EmitUtils$4 extends java.lang.Object implements com.mycila.inject.internal.cglib.core.ProcessSwitchCallback
{
    private final java.util.Map val$buckets;
    private final int val$index;
    private final int val$len;
    private final com.mycila.inject.internal.cglib.core.CodeEmitter val$e;
    private final com.mycila.inject.internal.cglib.core.ObjectSwitchCallback val$callback;
    private final com.mycila.inject.internal.asm.Label val$end;
    private final com.mycila.inject.internal.asm.Label val$def;

    void <init>(java.util.Map, int, int, com.mycila.inject.internal.cglib.core.CodeEmitter, com.mycila.inject.internal.cglib.core.ObjectSwitchCallback, com.mycila.inject.internal.asm.Label, com.mycila.inject.internal.asm.Label)
    {
        com.mycila.inject.internal.cglib.core.CodeEmitter r2;
        com.mycila.inject.internal.cglib.core.EmitUtils$4 r0;
        com.mycila.inject.internal.cglib.core.ObjectSwitchCallback r3;
        java.util.Map r1;
        int i0, i1;
        com.mycila.inject.internal.asm.Label r4, r5;

        r0 := @this: com.mycila.inject.internal.cglib.core.EmitUtils$4;

        r1 := @parameter0: java.util.Map;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: com.mycila.inject.internal.cglib.core.CodeEmitter;

        r3 := @parameter4: com.mycila.inject.internal.cglib.core.ObjectSwitchCallback;

        r4 := @parameter5: com.mycila.inject.internal.asm.Label;

        r5 := @parameter6: com.mycila.inject.internal.asm.Label;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.mycila.inject.internal.cglib.core.EmitUtils$4: java.util.Map val$buckets> = r1;

        r0.<com.mycila.inject.internal.cglib.core.EmitUtils$4: int val$index> = i0;

        r0.<com.mycila.inject.internal.cglib.core.EmitUtils$4: int val$len> = i1;

        r0.<com.mycila.inject.internal.cglib.core.EmitUtils$4: com.mycila.inject.internal.cglib.core.CodeEmitter val$e> = r2;

        r0.<com.mycila.inject.internal.cglib.core.EmitUtils$4: com.mycila.inject.internal.cglib.core.ObjectSwitchCallback val$callback> = r3;

        r0.<com.mycila.inject.internal.cglib.core.EmitUtils$4: com.mycila.inject.internal.asm.Label val$end> = r4;

        r0.<com.mycila.inject.internal.cglib.core.EmitUtils$4: com.mycila.inject.internal.asm.Label val$def> = r5;

        return;
    }

    public void processCase(int, com.mycila.inject.internal.asm.Label) throws java.lang.Exception
    {
        com.mycila.inject.internal.cglib.core.CodeEmitter $r8, $r9;
        java.lang.Integer $r1;
        java.util.Map $r2;
        int i0, $i1, $i2, $i3, $i4, $i5;
        com.mycila.inject.internal.cglib.core.EmitUtils$4 r0;
        java.util.List r4;
        com.mycila.inject.internal.cglib.core.ObjectSwitchCallback $r7, $r10;
        com.mycila.inject.internal.asm.Label $r5, $r6, $r12, r13;
        java.lang.Object $r3, $r11;

        r0 := @this: com.mycila.inject.internal.cglib.core.EmitUtils$4;

        i0 := @parameter0: int;

        r13 := @parameter1: com.mycila.inject.internal.asm.Label;

        $r2 = r0.<com.mycila.inject.internal.cglib.core.EmitUtils$4: java.util.Map val$buckets>;

        $r1 = new java.lang.Integer;

        specialinvoke $r1.<java.lang.Integer: void <init>(int)>(i0);

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        r4 = (java.util.List) $r3;

        $i1 = r0.<com.mycila.inject.internal.cglib.core.EmitUtils$4: int val$index>;

        $i3 = $i1 + 1;

        $i2 = r0.<com.mycila.inject.internal.cglib.core.EmitUtils$4: int val$len>;

        if $i3 != $i2 goto label1;

        $r9 = r0.<com.mycila.inject.internal.cglib.core.EmitUtils$4: com.mycila.inject.internal.cglib.core.CodeEmitter val$e>;

        virtualinvoke $r9.<com.mycila.inject.internal.cglib.core.CodeEmitter: void pop()>();

        $r10 = r0.<com.mycila.inject.internal.cglib.core.EmitUtils$4: com.mycila.inject.internal.cglib.core.ObjectSwitchCallback val$callback>;

        $r11 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(0);

        $r12 = r0.<com.mycila.inject.internal.cglib.core.EmitUtils$4: com.mycila.inject.internal.asm.Label val$end>;

        interfaceinvoke $r10.<com.mycila.inject.internal.cglib.core.ObjectSwitchCallback: void processCase(java.lang.Object,com.mycila.inject.internal.asm.Label)>($r11, $r12);

        goto label2;

     label1:
        $r8 = r0.<com.mycila.inject.internal.cglib.core.EmitUtils$4: com.mycila.inject.internal.cglib.core.CodeEmitter val$e>;

        $r7 = r0.<com.mycila.inject.internal.cglib.core.EmitUtils$4: com.mycila.inject.internal.cglib.core.ObjectSwitchCallback val$callback>;

        $r6 = r0.<com.mycila.inject.internal.cglib.core.EmitUtils$4: com.mycila.inject.internal.asm.Label val$def>;

        $r5 = r0.<com.mycila.inject.internal.cglib.core.EmitUtils$4: com.mycila.inject.internal.asm.Label val$end>;

        $i4 = r0.<com.mycila.inject.internal.cglib.core.EmitUtils$4: int val$index>;

        $i5 = $i4 + 1;

        staticinvoke <com.mycila.inject.internal.cglib.core.EmitUtils: void access$000(com.mycila.inject.internal.cglib.core.CodeEmitter,java.util.List,com.mycila.inject.internal.cglib.core.ObjectSwitchCallback,com.mycila.inject.internal.asm.Label,com.mycila.inject.internal.asm.Label,int)>($r8, r4, $r7, $r6, $r5, $i5);

     label2:
        return;
    }

    public void processDefault()
    {
        com.mycila.inject.internal.asm.Label $r1;
        com.mycila.inject.internal.cglib.core.CodeEmitter $r2;
        com.mycila.inject.internal.cglib.core.EmitUtils$4 r0;

        r0 := @this: com.mycila.inject.internal.cglib.core.EmitUtils$4;

        $r2 = r0.<com.mycila.inject.internal.cglib.core.EmitUtils$4: com.mycila.inject.internal.cglib.core.CodeEmitter val$e>;

        $r1 = r0.<com.mycila.inject.internal.cglib.core.EmitUtils$4: com.mycila.inject.internal.asm.Label val$def>;

        virtualinvoke $r2.<com.mycila.inject.internal.cglib.core.CodeEmitter: void goTo(com.mycila.inject.internal.asm.Label)>($r1);

        return;
    }
}
