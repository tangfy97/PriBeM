public class com.hp.hpl.jena.sparql.sse.lang.SSE_Parser extends java.lang.Object
{

    public void <init>()
    {
        com.hp.hpl.jena.sparql.sse.lang.SSE_Parser r0;

        r0 := @this: com.hp.hpl.jena.sparql.sse.lang.SSE_Parser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void term(java.io.Reader, com.hp.hpl.jena.sparql.sse.lang.ParseHandler)
    {
        com.hp.hpl.jena.sparql.sse.lang.ParseHandler r2;
        com.hp.hpl.jena.sparql.sse.lang.parser.ParseException $r8;
        com.hp.hpl.jena.sparql.sse.lang.parser.Token $r4, $r5, $r11, $r12;
        com.hp.hpl.jena.sparql.sse.SSEParseException $r6, $r9;
        int i0, i1, $i2, $i3;
        java.lang.String $r7, $r10;
        com.hp.hpl.jena.sparql.sse.lang.parser.TokenMgrError $r3;
        java.io.Reader r1;
        com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore $r0;

        r1 := @parameter0: java.io.Reader;

        r2 := @parameter1: com.hp.hpl.jena.sparql.sse.lang.ParseHandler;

        $r0 = new com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: void <init>(java.io.Reader)>(r1);

        virtualinvoke $r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: void setHandler(com.hp.hpl.jena.sparql.sse.lang.ParseHandler)>(r2);

     label1:
        virtualinvoke $r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: void term()>();

     label2:
        goto label5;

     label3:
        $r8 := @caughtexception;

        $r9 = new com.hp.hpl.jena.sparql.sse.SSEParseException;

        $r10 = virtualinvoke $r8.<com.hp.hpl.jena.sparql.sse.lang.parser.ParseException: java.lang.String getMessage()>();

        $r11 = $r8.<com.hp.hpl.jena.sparql.sse.lang.parser.ParseException: com.hp.hpl.jena.sparql.sse.lang.parser.Token currentToken>;

        $i3 = $r11.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: int beginLine>;

        $r12 = $r8.<com.hp.hpl.jena.sparql.sse.lang.parser.ParseException: com.hp.hpl.jena.sparql.sse.lang.parser.Token currentToken>;

        $i2 = $r12.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: int beginColumn>;

        specialinvoke $r9.<com.hp.hpl.jena.sparql.sse.SSEParseException: void <init>(java.lang.String,int,int)>($r10, $i3, $i2);

        throw $r9;

     label4:
        $r3 := @caughtexception;

        $r4 = $r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token token>;

        i0 = $r4.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: int endColumn>;

        $r5 = $r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token token>;

        i1 = $r5.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: int endLine>;

        $r6 = new com.hp.hpl.jena.sparql.sse.SSEParseException;

        $r7 = virtualinvoke $r3.<com.hp.hpl.jena.sparql.sse.lang.parser.TokenMgrError: java.lang.String getMessage()>();

        specialinvoke $r6.<com.hp.hpl.jena.sparql.sse.SSEParseException: void <init>(java.lang.String,int,int)>($r7, i1, i0);

        throw $r6;

     label5:
        return;

        catch com.hp.hpl.jena.sparql.sse.lang.parser.ParseException from label1 to label2 with label3;
        catch com.hp.hpl.jena.sparql.sse.lang.parser.TokenMgrError from label1 to label2 with label4;
    }

    public static void parse(java.io.Reader, com.hp.hpl.jena.sparql.sse.lang.ParseHandler)
    {
        com.hp.hpl.jena.sparql.sse.lang.ParseHandler r2;
        com.hp.hpl.jena.sparql.sse.lang.parser.ParseException $r8;
        com.hp.hpl.jena.sparql.sse.lang.parser.Token $r4, $r5, $r11, $r12;
        com.hp.hpl.jena.sparql.sse.SSEParseException $r6, $r9;
        int i0, i1, $i2, $i3;
        java.lang.String $r7, $r10;
        com.hp.hpl.jena.sparql.sse.lang.parser.TokenMgrError $r3;
        java.io.Reader r1;
        com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore $r0;

        r1 := @parameter0: java.io.Reader;

        r2 := @parameter1: com.hp.hpl.jena.sparql.sse.lang.ParseHandler;

        $r0 = new com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: void <init>(java.io.Reader)>(r1);

        virtualinvoke $r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: void setHandler(com.hp.hpl.jena.sparql.sse.lang.ParseHandler)>(r2);

     label1:
        virtualinvoke $r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: void parse()>();

     label2:
        goto label5;

     label3:
        $r8 := @caughtexception;

        $r9 = new com.hp.hpl.jena.sparql.sse.SSEParseException;

        $r10 = virtualinvoke $r8.<com.hp.hpl.jena.sparql.sse.lang.parser.ParseException: java.lang.String getMessage()>();

        $r11 = $r8.<com.hp.hpl.jena.sparql.sse.lang.parser.ParseException: com.hp.hpl.jena.sparql.sse.lang.parser.Token currentToken>;

        $i3 = $r11.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: int beginLine>;

        $r12 = $r8.<com.hp.hpl.jena.sparql.sse.lang.parser.ParseException: com.hp.hpl.jena.sparql.sse.lang.parser.Token currentToken>;

        $i2 = $r12.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: int beginColumn>;

        specialinvoke $r9.<com.hp.hpl.jena.sparql.sse.SSEParseException: void <init>(java.lang.String,int,int)>($r10, $i3, $i2);

        throw $r9;

     label4:
        $r3 := @caughtexception;

        $r4 = $r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token token>;

        i0 = $r4.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: int endColumn>;

        $r5 = $r0.<com.hp.hpl.jena.sparql.sse.lang.parser.SSE_ParserCore: com.hp.hpl.jena.sparql.sse.lang.parser.Token token>;

        i1 = $r5.<com.hp.hpl.jena.sparql.sse.lang.parser.Token: int endLine>;

        $r6 = new com.hp.hpl.jena.sparql.sse.SSEParseException;

        $r7 = virtualinvoke $r3.<com.hp.hpl.jena.sparql.sse.lang.parser.TokenMgrError: java.lang.String getMessage()>();

        specialinvoke $r6.<com.hp.hpl.jena.sparql.sse.SSEParseException: void <init>(java.lang.String,int,int)>($r7, i1, i0);

        throw $r6;

     label5:
        return;

        catch com.hp.hpl.jena.sparql.sse.lang.parser.ParseException from label1 to label2 with label3;
        catch com.hp.hpl.jena.sparql.sse.lang.parser.TokenMgrError from label1 to label2 with label4;
    }
}
