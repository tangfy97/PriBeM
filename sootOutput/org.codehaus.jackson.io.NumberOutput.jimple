public final class org.codehaus.jackson.io.NumberOutput extends java.lang.Object
{
    private static final char NULL_CHAR;
    private static int MILLION;
    private static int BILLION;
    private static long TEN_BILLION_L;
    private static long THOUSAND_L;
    private static long MIN_INT_AS_LONG;
    private static long MAX_INT_AS_LONG;
    static final java.lang.String SMALLEST_LONG;
    static final char[] LEADING_TRIPLETS;
    static final char[] FULL_TRIPLETS;
    static final java.lang.String[] sSmallIntStrs;
    static final java.lang.String[] sSmallIntStrs2;

    public void <init>()
    {
        org.codehaus.jackson.io.NumberOutput r0;

        r0 := @this: org.codehaus.jackson.io.NumberOutput;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int outputInt(int, char[], int)
    {
        boolean z1, $z2, $z3;
        long $l14;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i13, $i15, i16, i17, i18, i19, i20, $i21, $i22, $i23, $i24, $i25, $i26, i27;
        char $c12;
        char[] r0;

        i16 := @parameter0: int;

        r0 := @parameter1: char[];

        i17 := @parameter2: int;

        if i16 >= 0 goto label02;

        if i16 != -2147483648 goto label01;

        $l14 = (long) i16;

        $i15 = staticinvoke <org.codehaus.jackson.io.NumberOutput: int outputLong(long,char[],int)>($l14, r0, i17);

        return $i15;

     label01:
        $i13 = i17;

        i17 = i17 + 1;

        r0[$i13] = 45;

        i16 = neg i16;

     label02:
        $i0 = <org.codehaus.jackson.io.NumberOutput: int MILLION>;

        if i16 >= $i0 goto label06;

        if i16 >= 1000 goto label04;

        if i16 >= 10 goto label03;

        i18 = i17 + 1;

        $i11 = 48 + i16;

        $c12 = (char) $i11;

        r0[i17] = $c12;

        goto label05;

     label03:
        i18 = staticinvoke <org.codehaus.jackson.io.NumberOutput: int outputLeadingTriplet(int,char[],int)>(i16, r0, i17);

        goto label05;

     label04:
        i19 = i16 / 1000;

        $i9 = i19 * 1000;

        i20 = i16 - $i9;

        $i10 = staticinvoke <org.codehaus.jackson.io.NumberOutput: int outputLeadingTriplet(int,char[],int)>(i19, r0, i17);

        i18 = staticinvoke <org.codehaus.jackson.io.NumberOutput: int outputFullTriplet(int,char[],int)>(i20, r0, $i10);

     label05:
        return i18;

     label06:
        $i1 = <org.codehaus.jackson.io.NumberOutput: int BILLION>;

        if i16 < $i1 goto label07;

        $z3 = 1;

        $z2 = 1;

        goto label08;

     label07:
        $z3 = 0;

        $z2 = 0;

     label08:
        z1 = $z2;

        if $z3 == 0 goto label10;

        $i4 = <org.codehaus.jackson.io.NumberOutput: int BILLION>;

        i16 = i16 - $i4;

        $i5 = <org.codehaus.jackson.io.NumberOutput: int BILLION>;

        if i16 < $i5 goto label09;

        $i7 = <org.codehaus.jackson.io.NumberOutput: int BILLION>;

        i16 = i16 - $i7;

        $i8 = i17;

        i17 = i17 + 1;

        r0[$i8] = 50;

        goto label10;

     label09:
        $i6 = i17;

        i17 = i17 + 1;

        r0[$i6] = 49;

     label10:
        $i21 = i16 / 1000;

        $i22 = $i21 * 1000;

        $i23 = i16 - $i22;

        $i24 = $i21 / 1000;

        $i25 = $i24 * 1000;

        $i26 = $i21 - $i25;

        if z1 == 0 goto label11;

        i27 = staticinvoke <org.codehaus.jackson.io.NumberOutput: int outputFullTriplet(int,char[],int)>($i24, r0, i17);

        goto label12;

     label11:
        i27 = staticinvoke <org.codehaus.jackson.io.NumberOutput: int outputLeadingTriplet(int,char[],int)>($i24, r0, i17);

     label12:
        $i2 = staticinvoke <org.codehaus.jackson.io.NumberOutput: int outputFullTriplet(int,char[],int)>($i26, r0, i27);

        $i3 = staticinvoke <org.codehaus.jackson.io.NumberOutput: int outputFullTriplet(int,char[],int)>($i23, r0, $i2);

        return $i3;
    }

    public static int outputLong(long, char[], int)
    {
        byte $b0, $b2, $b13, $b14, $b26;
        long $l1, $l6, $l7, $l8, $l9, $l12, l21, $l25, l27;
        int $i3, i4, $i5, $i10, $i11, $i15, $i16, $i17, $i18, $i19, $i20, i22, i23, i24, i28, i29, i30, $i31, $i32, $i33, $i34, $i36, $i38;
        java.lang.String $r1, $r2;
        char[] r0;

        l21 := @parameter0: long;

        r0 := @parameter1: char[];

        i22 := @parameter2: int;

        $b0 = l21 cmp 0L;

        $i31 = (int) $b0;

        if $i31 >= 0 goto label3;

        $l12 = <org.codehaus.jackson.io.NumberOutput: long MIN_INT_AS_LONG>;

        $b13 = l21 cmp $l12;

        $i32 = (int) $b13;

        if $i32 <= 0 goto label1;

        $i19 = (int) l21;

        $i20 = staticinvoke <org.codehaus.jackson.io.NumberOutput: int outputInt(int,char[],int)>($i19, r0, i22);

        return $i20;

     label1:
        $b14 = l21 cmp -9223372036854775808L;

        if $b14 != 0 goto label2;

        $r1 = <org.codehaus.jackson.io.NumberOutput: java.lang.String SMALLEST_LONG>;

        $i17 = virtualinvoke $r1.<java.lang.String: int length()>();

        $r2 = <org.codehaus.jackson.io.NumberOutput: java.lang.String SMALLEST_LONG>;

        virtualinvoke $r2.<java.lang.String: void getChars(int,int,char[],int)>(0, $i17, r0, i22);

        $i18 = i22 + $i17;

        return $i18;

     label2:
        $i15 = i22;

        i22 = i22 + 1;

        r0[$i15] = 45;

        l21 = neg l21;

        goto label4;

     label3:
        $l1 = <org.codehaus.jackson.io.NumberOutput: long MAX_INT_AS_LONG>;

        $b2 = l21 cmp $l1;

        $i33 = (int) $b2;

        if $i33 > 0 goto label4;

        $i10 = (int) l21;

        $i11 = staticinvoke <org.codehaus.jackson.io.NumberOutput: int outputInt(int,char[],int)>($i10, r0, i22);

        return $i11;

     label4:
        i23 = i22;

        $i3 = staticinvoke <org.codehaus.jackson.io.NumberOutput: int calcLongStrLength(long)>(l21);

        $i16 = i22 + $i3;

        i24 = $i16;

     label5:
        $l25 = <org.codehaus.jackson.io.NumberOutput: long MAX_INT_AS_LONG>;

        $b26 = l21 cmp $l25;

        $i34 = (int) $b26;

        if $i34 <= 0 goto label6;

        $i36 = (int) -3;

        i24 = i24 + $i36;

        $l6 = <org.codehaus.jackson.io.NumberOutput: long THOUSAND_L>;

        l27 = l21 / $l6;

        $l7 = <org.codehaus.jackson.io.NumberOutput: long THOUSAND_L>;

        $l8 = l27 * $l7;

        $l9 = l21 - $l8;

        i28 = (int) $l9;

        staticinvoke <org.codehaus.jackson.io.NumberOutput: int outputFullTriplet(int,char[],int)>(i28, r0, i24);

        l21 = l27;

        goto label5;

     label6:
        i29 = (int) l21;

     label7:
        if i29 < 1000 goto label8;

        $i38 = (int) -3;

        i24 = i24 + $i38;

        i4 = i29 / 1000;

        $i5 = i4 * 1000;

        i30 = i29 - $i5;

        staticinvoke <org.codehaus.jackson.io.NumberOutput: int outputFullTriplet(int,char[],int)>(i30, r0, i24);

        i29 = i4;

        goto label7;

     label8:
        staticinvoke <org.codehaus.jackson.io.NumberOutput: int outputLeadingTriplet(int,char[],int)>(i29, r0, i23);

        return $i16;
    }

    public static java.lang.String toString(int)
    {
        java.lang.String[] $r0, $r2, $r3, $r5;
        int i0, $i1, $i2, i3, $i4;
        java.lang.String $r1, $r4, $r6;

        i0 := @parameter0: int;

        $r0 = <org.codehaus.jackson.io.NumberOutput: java.lang.String[] sSmallIntStrs>;

        $i1 = lengthof $r0;

        if i0 >= $i1 goto label2;

        if i0 < 0 goto label1;

        $r5 = <org.codehaus.jackson.io.NumberOutput: java.lang.String[] sSmallIntStrs>;

        $r6 = $r5[i0];

        return $r6;

     label1:
        $i2 = neg i0;

        i3 = $i2 - 1;

        $r2 = <org.codehaus.jackson.io.NumberOutput: java.lang.String[] sSmallIntStrs2>;

        $i4 = lengthof $r2;

        if i3 >= $i4 goto label2;

        $r3 = <org.codehaus.jackson.io.NumberOutput: java.lang.String[] sSmallIntStrs2>;

        $r4 = $r3[i3];

        return $r4;

     label2:
        $r1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        return $r1;
    }

    public static java.lang.String toString(long)
    {
        long l0;
        byte $b1, $b2;
        int $i3, $i4, $i5;
        java.lang.String $r0, $r1;

        l0 := @parameter0: long;

        $b1 = l0 cmp 2147483647L;

        $i4 = (int) $b1;

        if $i4 > 0 goto label1;

        $b2 = l0 cmp -2147483648L;

        $i5 = (int) $b2;

        if $i5 < 0 goto label1;

        $i3 = (int) l0;

        $r1 = staticinvoke <org.codehaus.jackson.io.NumberOutput: java.lang.String toString(int)>($i3);

        return $r1;

     label1:
        $r0 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        return $r0;
    }

    public static java.lang.String toString(double)
    {
        java.lang.String $r0;
        double d0;

        d0 := @parameter0: double;

        $r0 = staticinvoke <java.lang.Double: java.lang.String toString(double)>(d0);

        return $r0;
    }

    private static int outputLeadingTriplet(int, char[], int)
    {
        char $c1, $c4, c8;
        int i0, $i2, $i3, i5, i6, i7, i9, i10;
        char[] $r0, $r1, r2, $r3;

        i0 := @parameter0: int;

        r2 := @parameter1: char[];

        i5 := @parameter2: int;

        i6 = i0 << 2;

        $r0 = <org.codehaus.jackson.io.NumberOutput: char[] LEADING_TRIPLETS>;

        i7 = i6 + 1;

        c8 = $r0[i6];

        if c8 == 0 goto label1;

        $i3 = i5;

        i5 = i5 + 1;

        r2[$i3] = c8;

     label1:
        $r1 = <org.codehaus.jackson.io.NumberOutput: char[] LEADING_TRIPLETS>;

        i9 = i7 + 1;

        $c4 = $r1[i7];

        if $c4 == 0 goto label2;

        $i2 = i5;

        i5 = i5 + 1;

        r2[$i2] = $c4;

     label2:
        i10 = i5 + 1;

        $r3 = <org.codehaus.jackson.io.NumberOutput: char[] LEADING_TRIPLETS>;

        $c1 = $r3[i9];

        r2[i5] = $c1;

        return i10;
    }

    private static int outputFullTriplet(int, char[], int)
    {
        char $c1, $c2, $c3;
        int i0, i4, i5, i6, i7, i8, i9, i10;
        char[] r0, $r1, $r2, $r3;

        i0 := @parameter0: int;

        r0 := @parameter1: char[];

        i4 := @parameter2: int;

        i5 = i0 << 2;

        i6 = i4 + 1;

        $r1 = <org.codehaus.jackson.io.NumberOutput: char[] FULL_TRIPLETS>;

        i7 = i5 + 1;

        $c1 = $r1[i5];

        r0[i4] = $c1;

        i8 = i6 + 1;

        $r2 = <org.codehaus.jackson.io.NumberOutput: char[] FULL_TRIPLETS>;

        i9 = i7 + 1;

        $c2 = $r2[i7];

        r0[i6] = $c2;

        i10 = i8 + 1;

        $r3 = <org.codehaus.jackson.io.NumberOutput: char[] FULL_TRIPLETS>;

        $c3 = $r3[i9];

        r0[i8] = $c3;

        return i10;
    }

    private static int calcLongStrLength(long)
    {
        byte $b1;
        int i4, $i6;
        long l0, $l2, $l3, l5;

        l0 := @parameter0: long;

        i4 = 10;

        l5 = <org.codehaus.jackson.io.NumberOutput: long TEN_BILLION_L>;

     label1:
        $b1 = l0 cmp l5;

        $i6 = (int) $b1;

        if $i6 < 0 goto label3;

        if i4 != 19 goto label2;

        goto label3;

     label2:
        i4 = i4 + 1;

        $l3 = l5 << 3;

        $l2 = l5 << 1;

        l5 = $l3 + $l2;

        goto label1;

     label3:
        return i4;
    }

    static void <clinit>()
    {
        java.lang.String[] $r3, $r4;
        int $i0, $i3, $i6, $i8, $i9, $i10, $i11, i12, i13, i15, i17;
        java.lang.String $r0;
        char c1, c2, c4, c5, c7, $c14, $c16;
        char[] $r1, $r2, $r5, $r6, $r7, $r8, $r9, $r10;

        <org.codehaus.jackson.io.NumberOutput: char NULL_CHAR> = 0;

        <org.codehaus.jackson.io.NumberOutput: int MILLION> = 1000000;

        <org.codehaus.jackson.io.NumberOutput: int BILLION> = 1000000000;

        <org.codehaus.jackson.io.NumberOutput: long TEN_BILLION_L> = 10000000000L;

        <org.codehaus.jackson.io.NumberOutput: long THOUSAND_L> = 1000L;

        <org.codehaus.jackson.io.NumberOutput: long MIN_INT_AS_LONG> = -2147483648L;

        <org.codehaus.jackson.io.NumberOutput: long MAX_INT_AS_LONG> = 2147483647L;

        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(-9223372036854775808L);

        <org.codehaus.jackson.io.NumberOutput: java.lang.String SMALLEST_LONG> = $r0;

        $r1 = newarray (char)[4000];

        <org.codehaus.jackson.io.NumberOutput: char[] LEADING_TRIPLETS> = $r1;

        $r2 = newarray (char)[4000];

        <org.codehaus.jackson.io.NumberOutput: char[] FULL_TRIPLETS> = $r2;

        i12 = 0;

        i13 = 0;

     label01:
        if i13 >= 10 goto label10;

        $i0 = 48 + i13;

        c1 = (char) $i0;

        if i13 != 0 goto label02;

        $c14 = 0;

        goto label03;

     label02:
        $c14 = c1;

     label03:
        c2 = $c14;

        i15 = 0;

     label04:
        if i15 >= 10 goto label09;

        $i3 = 48 + i15;

        c4 = (char) $i3;

        if i13 != 0 goto label05;

        if i15 != 0 goto label05;

        $c16 = 0;

        goto label06;

     label05:
        $c16 = c4;

     label06:
        c5 = $c16;

        i17 = 0;

     label07:
        if i17 >= 10 goto label08;

        $i6 = 48 + i17;

        c7 = (char) $i6;

        $r5 = <org.codehaus.jackson.io.NumberOutput: char[] LEADING_TRIPLETS>;

        $r5[i12] = c2;

        $r6 = <org.codehaus.jackson.io.NumberOutput: char[] LEADING_TRIPLETS>;

        $i8 = i12 + 1;

        $r6[$i8] = c5;

        $r7 = <org.codehaus.jackson.io.NumberOutput: char[] LEADING_TRIPLETS>;

        $i9 = i12 + 2;

        $r7[$i9] = c7;

        $r8 = <org.codehaus.jackson.io.NumberOutput: char[] FULL_TRIPLETS>;

        $r8[i12] = c1;

        $r9 = <org.codehaus.jackson.io.NumberOutput: char[] FULL_TRIPLETS>;

        $i10 = i12 + 1;

        $r9[$i10] = c4;

        $r10 = <org.codehaus.jackson.io.NumberOutput: char[] FULL_TRIPLETS>;

        $i11 = i12 + 2;

        $r10[$i11] = c7;

        i12 = i12 + 4;

        i17 = i17 + 1;

        goto label07;

     label08:
        i15 = i15 + 1;

        goto label04;

     label09:
        i13 = i13 + 1;

        goto label01;

     label10:
        $r3 = newarray (java.lang.String)[11];

        $r3[0] = "0";

        $r3[1] = "1";

        $r3[2] = "2";

        $r3[3] = "3";

        $r3[4] = "4";

        $r3[5] = "5";

        $r3[6] = "6";

        $r3[7] = "7";

        $r3[8] = "8";

        $r3[9] = "9";

        $r3[10] = "10";

        <org.codehaus.jackson.io.NumberOutput: java.lang.String[] sSmallIntStrs> = $r3;

        $r4 = newarray (java.lang.String)[10];

        $r4[0] = "-1";

        $r4[1] = "-2";

        $r4[2] = "-3";

        $r4[3] = "-4";

        $r4[4] = "-5";

        $r4[5] = "-6";

        $r4[6] = "-7";

        $r4[7] = "-8";

        $r4[8] = "-9";

        $r4[9] = "-10";

        <org.codehaus.jackson.io.NumberOutput: java.lang.String[] sSmallIntStrs2> = $r4;

        return;
    }
}
