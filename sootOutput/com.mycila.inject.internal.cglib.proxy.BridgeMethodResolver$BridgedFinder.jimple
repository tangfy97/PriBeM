class com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder extends java.lang.Object implements com.mycila.inject.internal.asm.ClassVisitor, com.mycila.inject.internal.asm.MethodVisitor
{
    private java.util.Map resolved;
    private java.util.Set eligableMethods;
    private com.mycila.inject.internal.cglib.core.Signature currentMethod;

    void <init>(java.util.Set, java.util.Map)
    {
        java.util.Set r2;
        com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder r0;
        java.util.Map r1;

        r0 := @this: com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder;

        r2 := @parameter0: java.util.Set;

        r1 := @parameter1: java.util.Map;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder: com.mycila.inject.internal.cglib.core.Signature currentMethod> = null;

        r0.<com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder: java.util.Map resolved> = r1;

        r0.<com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder: java.util.Set eligableMethods> = r2;

        return;
    }

    public void visit(int, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])
    {
        com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder r0;
        int i0, i1;
        java.lang.String[] r4;
        java.lang.String r1, r2, r3;

        r0 := @this: com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        r4 := @parameter5: java.lang.String[];

        return;
    }

    public com.mycila.inject.internal.asm.MethodVisitor visitMethod(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])
    {
        com.mycila.inject.internal.cglib.core.Signature $r0;
        java.util.Set $r4;
        java.lang.String[] r6;
        com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder r3;
        int i0;
        java.lang.String r1, r2, r5;
        boolean $z0;

        r3 := @this: com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r5 := @parameter3: java.lang.String;

        r6 := @parameter4: java.lang.String[];

        $r0 = new com.mycila.inject.internal.cglib.core.Signature;

        specialinvoke $r0.<com.mycila.inject.internal.cglib.core.Signature: void <init>(java.lang.String,java.lang.String)>(r1, r2);

        $r4 = r3.<com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder: java.util.Set eligableMethods>;

        $z0 = interfaceinvoke $r4.<java.util.Set: boolean remove(java.lang.Object)>($r0);

        if $z0 == 0 goto label1;

        r3.<com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder: com.mycila.inject.internal.cglib.core.Signature currentMethod> = $r0;

        return r3;

     label1:
        return null;
    }

    public void visitSource(java.lang.String, java.lang.String)
    {
        java.lang.String r1, r2;
        com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder r0;

        r0 := @this: com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        return;
    }

    public void visitLineNumber(int, com.mycila.inject.internal.asm.Label)
    {
        int i0;
        com.mycila.inject.internal.asm.Label r1;
        com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder r0;

        r0 := @this: com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder;

        i0 := @parameter0: int;

        r1 := @parameter1: com.mycila.inject.internal.asm.Label;

        return;
    }

    public void visitFieldInsn(int, java.lang.String, java.lang.String, java.lang.String)
    {
        com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder r0;
        int i0;
        java.lang.String r1, r2, r3;

        r0 := @this: com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        return;
    }

    public void visitEnd()
    {
        com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder r0;

        r0 := @this: com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder;

        return;
    }

    public void visitInnerClass(java.lang.String, java.lang.String, java.lang.String, int)
    {
        com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder r0;
        int i0;
        java.lang.String r1, r2, r3;

        r0 := @this: com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        return;
    }

    public void visitOuterClass(java.lang.String, java.lang.String, java.lang.String)
    {
        com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder r0;
        java.lang.String r1, r2, r3;

        r0 := @this: com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        return;
    }

    public void visitAttribute(com.mycila.inject.internal.asm.Attribute)
    {
        com.mycila.inject.internal.asm.Attribute r1;
        com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder r0;

        r0 := @this: com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder;

        r1 := @parameter0: com.mycila.inject.internal.asm.Attribute;

        return;
    }

    public com.mycila.inject.internal.asm.FieldVisitor visitField(int, java.lang.String, java.lang.String, java.lang.String, java.lang.Object)
    {
        com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder r0;
        int i0;
        java.lang.Object r4;
        java.lang.String r1, r2, r3;

        r0 := @this: com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.Object;

        return null;
    }

    public com.mycila.inject.internal.asm.AnnotationVisitor visitAnnotation(java.lang.String, boolean)
    {
        java.lang.String r1;
        com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder r0;
        boolean z0;

        r0 := @this: com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        return null;
    }

    public com.mycila.inject.internal.asm.AnnotationVisitor visitAnnotationDefault()
    {
        com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder r0;

        r0 := @this: com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder;

        return null;
    }

    public com.mycila.inject.internal.asm.AnnotationVisitor visitParameterAnnotation(int, java.lang.String, boolean)
    {
        com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder r0;
        int i0;
        java.lang.String r1;
        boolean z0;

        r0 := @this: com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        return null;
    }

    public void visitCode()
    {
        com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder r0;

        r0 := @this: com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder;

        return;
    }

    public void visitFrame(int, int, java.lang.Object[], int, java.lang.Object[])
    {
        java.lang.Object[] r1, r2;
        com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder r0;
        int i0, i1, i2;

        r0 := @this: com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.Object[];

        i2 := @parameter3: int;

        r2 := @parameter4: java.lang.Object[];

        return;
    }

    public void visitIincInsn(int, int)
    {
        int i0, i1;
        com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder r0;

        r0 := @this: com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return;
    }

    public void visitInsn(int)
    {
        int i0;
        com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder r0;

        r0 := @this: com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder;

        i0 := @parameter0: int;

        return;
    }

    public void visitIntInsn(int, int)
    {
        int i0, i1;
        com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder r0;

        r0 := @this: com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return;
    }

    public void visitJumpInsn(int, com.mycila.inject.internal.asm.Label)
    {
        int i0;
        com.mycila.inject.internal.asm.Label r1;
        com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder r0;

        r0 := @this: com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder;

        i0 := @parameter0: int;

        r1 := @parameter1: com.mycila.inject.internal.asm.Label;

        return;
    }

    public void visitLabel(com.mycila.inject.internal.asm.Label)
    {
        com.mycila.inject.internal.asm.Label r1;
        com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder r0;

        r0 := @this: com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder;

        r1 := @parameter0: com.mycila.inject.internal.asm.Label;

        return;
    }

    public void visitLdcInsn(java.lang.Object)
    {
        java.lang.Object r1;
        com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder r0;

        r0 := @this: com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder;

        r1 := @parameter0: java.lang.Object;

        return;
    }

    public void visitLocalVariable(java.lang.String, java.lang.String, java.lang.String, com.mycila.inject.internal.asm.Label, com.mycila.inject.internal.asm.Label, int)
    {
        com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder r0;
        com.mycila.inject.internal.asm.Label r4, r5;
        int i0;
        java.lang.String r1, r2, r3;

        r0 := @this: com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: com.mycila.inject.internal.asm.Label;

        r5 := @parameter4: com.mycila.inject.internal.asm.Label;

        i0 := @parameter5: int;

        return;
    }

    public void visitLookupSwitchInsn(com.mycila.inject.internal.asm.Label, int[], com.mycila.inject.internal.asm.Label[])
    {
        int[] r2;
        com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder r0;
        com.mycila.inject.internal.asm.Label r1;
        com.mycila.inject.internal.asm.Label[] r3;

        r0 := @this: com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder;

        r1 := @parameter0: com.mycila.inject.internal.asm.Label;

        r2 := @parameter1: int[];

        r3 := @parameter2: com.mycila.inject.internal.asm.Label[];

        return;
    }

    public void visitMaxs(int, int)
    {
        int i0, i1;
        com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder r0;

        r0 := @this: com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return;
    }

    public void visitMethodInsn(int, java.lang.String, java.lang.String, java.lang.String)
    {
        com.mycila.inject.internal.cglib.core.Signature $r1, $r2, $r5, $r6;
        com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder r0;
        java.util.Map $r7;
        int i0;
        java.lang.String r3, r4, r8;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder;

        i0 := @parameter0: int;

        r8 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        if i0 != 183 goto label2;

        $r1 = r0.<com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder: com.mycila.inject.internal.cglib.core.Signature currentMethod>;

        if $r1 == null goto label2;

        $r2 = new com.mycila.inject.internal.cglib.core.Signature;

        specialinvoke $r2.<com.mycila.inject.internal.cglib.core.Signature: void <init>(java.lang.String,java.lang.String)>(r3, r4);

        $r5 = r0.<com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder: com.mycila.inject.internal.cglib.core.Signature currentMethod>;

        $z0 = virtualinvoke $r2.<com.mycila.inject.internal.cglib.core.Signature: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label1;

        $r7 = r0.<com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder: java.util.Map resolved>;

        $r6 = r0.<com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder: com.mycila.inject.internal.cglib.core.Signature currentMethod>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r2);

     label1:
        r0.<com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder: com.mycila.inject.internal.cglib.core.Signature currentMethod> = null;

     label2:
        return;
    }

    public void visitMultiANewArrayInsn(java.lang.String, int)
    {
        int i0;
        java.lang.String r1;
        com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder r0;

        r0 := @this: com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        return;
    }

    public void visitTableSwitchInsn(int, int, com.mycila.inject.internal.asm.Label, com.mycila.inject.internal.asm.Label[])
    {
        com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder r0;
        int i0, i1;
        com.mycila.inject.internal.asm.Label r1;
        com.mycila.inject.internal.asm.Label[] r2;

        r0 := @this: com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: com.mycila.inject.internal.asm.Label;

        r2 := @parameter3: com.mycila.inject.internal.asm.Label[];

        return;
    }

    public void visitTryCatchBlock(com.mycila.inject.internal.asm.Label, com.mycila.inject.internal.asm.Label, com.mycila.inject.internal.asm.Label, java.lang.String)
    {
        com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder r0;
        com.mycila.inject.internal.asm.Label r1, r2, r3;
        java.lang.String r4;

        r0 := @this: com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder;

        r1 := @parameter0: com.mycila.inject.internal.asm.Label;

        r2 := @parameter1: com.mycila.inject.internal.asm.Label;

        r3 := @parameter2: com.mycila.inject.internal.asm.Label;

        r4 := @parameter3: java.lang.String;

        return;
    }

    public void visitTypeInsn(int, java.lang.String)
    {
        int i0;
        java.lang.String r1;
        com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder r0;

        r0 := @this: com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        return;
    }

    public void visitVarInsn(int, int)
    {
        int i0, i1;
        com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder r0;

        r0 := @this: com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return;
    }
}
