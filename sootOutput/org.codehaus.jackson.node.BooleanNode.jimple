public final class org.codehaus.jackson.node.BooleanNode extends org.codehaus.jackson.node.ValueNode
{
    public static final org.codehaus.jackson.node.BooleanNode TRUE;
    public static final org.codehaus.jackson.node.BooleanNode FALSE;

    private void <init>()
    {
        org.codehaus.jackson.node.BooleanNode r0;

        r0 := @this: org.codehaus.jackson.node.BooleanNode;

        specialinvoke r0.<org.codehaus.jackson.node.ValueNode: void <init>()>();

        return;
    }

    public static org.codehaus.jackson.node.BooleanNode getTrue()
    {
        org.codehaus.jackson.node.BooleanNode $r0;

        $r0 = <org.codehaus.jackson.node.BooleanNode: org.codehaus.jackson.node.BooleanNode TRUE>;

        return $r0;
    }

    public static org.codehaus.jackson.node.BooleanNode getFalse()
    {
        org.codehaus.jackson.node.BooleanNode $r0;

        $r0 = <org.codehaus.jackson.node.BooleanNode: org.codehaus.jackson.node.BooleanNode FALSE>;

        return $r0;
    }

    public static org.codehaus.jackson.node.BooleanNode valueOf(boolean)
    {
        org.codehaus.jackson.node.BooleanNode $r0;
        boolean z0;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r0 = <org.codehaus.jackson.node.BooleanNode: org.codehaus.jackson.node.BooleanNode TRUE>;

        goto label2;

     label1:
        $r0 = <org.codehaus.jackson.node.BooleanNode: org.codehaus.jackson.node.BooleanNode FALSE>;

     label2:
        return $r0;
    }

    public org.codehaus.jackson.JsonToken asToken()
    {
        org.codehaus.jackson.node.BooleanNode r0, $r1;
        org.codehaus.jackson.JsonToken $r2;

        r0 := @this: org.codehaus.jackson.node.BooleanNode;

        $r1 = <org.codehaus.jackson.node.BooleanNode: org.codehaus.jackson.node.BooleanNode TRUE>;

        if r0 != $r1 goto label1;

        $r2 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken VALUE_TRUE>;

        goto label2;

     label1:
        $r2 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken VALUE_FALSE>;

     label2:
        return $r2;
    }

    public boolean isBoolean()
    {
        org.codehaus.jackson.node.BooleanNode r0;

        r0 := @this: org.codehaus.jackson.node.BooleanNode;

        return 1;
    }

    public boolean getBooleanValue()
    {
        org.codehaus.jackson.node.BooleanNode r0, $r1;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.node.BooleanNode;

        $r1 = <org.codehaus.jackson.node.BooleanNode: org.codehaus.jackson.node.BooleanNode TRUE>;

        if r0 != $r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.String asText()
    {
        org.codehaus.jackson.node.BooleanNode r0, $r1;
        java.lang.String $r2;

        r0 := @this: org.codehaus.jackson.node.BooleanNode;

        $r1 = <org.codehaus.jackson.node.BooleanNode: org.codehaus.jackson.node.BooleanNode TRUE>;

        if r0 != $r1 goto label1;

        $r2 = "true";

        goto label2;

     label1:
        $r2 = "false";

     label2:
        return $r2;
    }

    public boolean asBoolean()
    {
        org.codehaus.jackson.node.BooleanNode r0, $r1;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.node.BooleanNode;

        $r1 = <org.codehaus.jackson.node.BooleanNode: org.codehaus.jackson.node.BooleanNode TRUE>;

        if r0 != $r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean asBoolean(boolean)
    {
        org.codehaus.jackson.node.BooleanNode r0, $r1;
        boolean z0, $z1;

        r0 := @this: org.codehaus.jackson.node.BooleanNode;

        z0 := @parameter0: boolean;

        $r1 = <org.codehaus.jackson.node.BooleanNode: org.codehaus.jackson.node.BooleanNode TRUE>;

        if r0 != $r1 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public int asInt(int)
    {
        org.codehaus.jackson.node.BooleanNode r0, $r1;
        byte $b1;
        int i0;

        r0 := @this: org.codehaus.jackson.node.BooleanNode;

        i0 := @parameter0: int;

        $r1 = <org.codehaus.jackson.node.BooleanNode: org.codehaus.jackson.node.BooleanNode TRUE>;

        if r0 != $r1 goto label1;

        $b1 = 1;

        goto label2;

     label1:
        $b1 = 0;

     label2:
        return $b1;
    }

    public long asLong(long)
    {
        org.codehaus.jackson.node.BooleanNode r0, $r1;
        long l0, $l1;

        r0 := @this: org.codehaus.jackson.node.BooleanNode;

        l0 := @parameter0: long;

        $r1 = <org.codehaus.jackson.node.BooleanNode: org.codehaus.jackson.node.BooleanNode TRUE>;

        if r0 != $r1 goto label1;

        $l1 = 1L;

        goto label2;

     label1:
        $l1 = 0L;

     label2:
        return $l1;
    }

    public double asDouble(double)
    {
        org.codehaus.jackson.node.BooleanNode r0, $r1;
        double d0, $d1;

        r0 := @this: org.codehaus.jackson.node.BooleanNode;

        d0 := @parameter0: double;

        $r1 = <org.codehaus.jackson.node.BooleanNode: org.codehaus.jackson.node.BooleanNode TRUE>;

        if r0 != $r1 goto label1;

        $d1 = 1.0;

        goto label2;

     label1:
        $d1 = 0.0;

     label2:
        return $d1;
    }

    public final void serialize(org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.node.BooleanNode r1, $r2;
        org.codehaus.jackson.JsonGenerator r0;
        org.codehaus.jackson.map.SerializerProvider r3;
        boolean $z0;

        r1 := @this: org.codehaus.jackson.node.BooleanNode;

        r0 := @parameter0: org.codehaus.jackson.JsonGenerator;

        r3 := @parameter1: org.codehaus.jackson.map.SerializerProvider;

        $r2 = <org.codehaus.jackson.node.BooleanNode: org.codehaus.jackson.node.BooleanNode TRUE>;

        if r1 != $r2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        virtualinvoke r0.<org.codehaus.jackson.JsonGenerator: void writeBoolean(boolean)>($z0);

        return;
    }

    public boolean equals(java.lang.Object)
    {
        org.codehaus.jackson.node.BooleanNode r1;
        java.lang.Object r0;
        boolean $z0;

        r1 := @this: org.codehaus.jackson.node.BooleanNode;

        r0 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    static void <clinit>()
    {
        org.codehaus.jackson.node.BooleanNode $r0, $r1;

        $r0 = new org.codehaus.jackson.node.BooleanNode;

        specialinvoke $r0.<org.codehaus.jackson.node.BooleanNode: void <init>()>();

        <org.codehaus.jackson.node.BooleanNode: org.codehaus.jackson.node.BooleanNode TRUE> = $r0;

        $r1 = new org.codehaus.jackson.node.BooleanNode;

        specialinvoke $r1.<org.codehaus.jackson.node.BooleanNode: void <init>()>();

        <org.codehaus.jackson.node.BooleanNode: org.codehaus.jackson.node.BooleanNode FALSE> = $r1;

        return;
    }
}
