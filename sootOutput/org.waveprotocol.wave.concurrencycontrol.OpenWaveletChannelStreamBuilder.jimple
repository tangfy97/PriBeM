public final class org.waveprotocol.wave.concurrencycontrol.OpenWaveletChannelStreamBuilder extends java.lang.Object
{
    private java.lang.String channelId;
    private org.waveprotocol.wave.concurrencycontrol.WaveletUpdate delta;
    private org.waveprotocol.wave.federation.ProtocolHashedVersion commitVersion;
    private org.waveprotocol.wave.concurrencycontrol.WaveletChannelTerminator terminator;

    public void <init>()
    {
        org.waveprotocol.wave.concurrencycontrol.OpenWaveletChannelStreamBuilder r0;

        r0 := @this: org.waveprotocol.wave.concurrencycontrol.OpenWaveletChannelStreamBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.waveprotocol.wave.concurrencycontrol.OpenWaveletChannelStreamBuilder clearChannelId()
    {
        org.waveprotocol.wave.concurrencycontrol.OpenWaveletChannelStreamBuilder r0;

        r0 := @this: org.waveprotocol.wave.concurrencycontrol.OpenWaveletChannelStreamBuilder;

        r0.<org.waveprotocol.wave.concurrencycontrol.OpenWaveletChannelStreamBuilder: java.lang.String channelId> = null;

        return r0;
    }

    public org.waveprotocol.wave.concurrencycontrol.OpenWaveletChannelStreamBuilder setChannelId(java.lang.String)
    {
        org.waveprotocol.wave.concurrencycontrol.OpenWaveletChannelStreamBuilder r0;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.concurrencycontrol.OpenWaveletChannelStreamBuilder;

        r1 := @parameter0: java.lang.String;

        r0.<org.waveprotocol.wave.concurrencycontrol.OpenWaveletChannelStreamBuilder: java.lang.String channelId> = r1;

        return r0;
    }

    public org.waveprotocol.wave.concurrencycontrol.OpenWaveletChannelStreamBuilder clearDelta()
    {
        org.waveprotocol.wave.concurrencycontrol.OpenWaveletChannelStreamBuilder r0;

        r0 := @this: org.waveprotocol.wave.concurrencycontrol.OpenWaveletChannelStreamBuilder;

        r0.<org.waveprotocol.wave.concurrencycontrol.OpenWaveletChannelStreamBuilder: org.waveprotocol.wave.concurrencycontrol.WaveletUpdate delta> = null;

        return r0;
    }

    public org.waveprotocol.wave.concurrencycontrol.OpenWaveletChannelStreamBuilder setDelta(org.waveprotocol.wave.concurrencycontrol.WaveletUpdate)
    {
        org.waveprotocol.wave.concurrencycontrol.OpenWaveletChannelStreamBuilder r0;
        org.waveprotocol.wave.concurrencycontrol.WaveletUpdate r1;

        r0 := @this: org.waveprotocol.wave.concurrencycontrol.OpenWaveletChannelStreamBuilder;

        r1 := @parameter0: org.waveprotocol.wave.concurrencycontrol.WaveletUpdate;

        r0.<org.waveprotocol.wave.concurrencycontrol.OpenWaveletChannelStreamBuilder: org.waveprotocol.wave.concurrencycontrol.WaveletUpdate delta> = r1;

        return r0;
    }

    public org.waveprotocol.wave.concurrencycontrol.OpenWaveletChannelStreamBuilder clearCommitVersion()
    {
        org.waveprotocol.wave.concurrencycontrol.OpenWaveletChannelStreamBuilder r0;

        r0 := @this: org.waveprotocol.wave.concurrencycontrol.OpenWaveletChannelStreamBuilder;

        r0.<org.waveprotocol.wave.concurrencycontrol.OpenWaveletChannelStreamBuilder: org.waveprotocol.wave.federation.ProtocolHashedVersion commitVersion> = null;

        return r0;
    }

    public org.waveprotocol.wave.concurrencycontrol.OpenWaveletChannelStreamBuilder setCommitVersion(org.waveprotocol.wave.federation.ProtocolHashedVersion)
    {
        org.waveprotocol.wave.concurrencycontrol.OpenWaveletChannelStreamBuilder r0;
        org.waveprotocol.wave.federation.ProtocolHashedVersion r1;

        r0 := @this: org.waveprotocol.wave.concurrencycontrol.OpenWaveletChannelStreamBuilder;

        r1 := @parameter0: org.waveprotocol.wave.federation.ProtocolHashedVersion;

        r0.<org.waveprotocol.wave.concurrencycontrol.OpenWaveletChannelStreamBuilder: org.waveprotocol.wave.federation.ProtocolHashedVersion commitVersion> = r1;

        return r0;
    }

    public org.waveprotocol.wave.concurrencycontrol.OpenWaveletChannelStreamBuilder clearTerminator()
    {
        org.waveprotocol.wave.concurrencycontrol.OpenWaveletChannelStreamBuilder r0;

        r0 := @this: org.waveprotocol.wave.concurrencycontrol.OpenWaveletChannelStreamBuilder;

        r0.<org.waveprotocol.wave.concurrencycontrol.OpenWaveletChannelStreamBuilder: org.waveprotocol.wave.concurrencycontrol.WaveletChannelTerminator terminator> = null;

        return r0;
    }

    public org.waveprotocol.wave.concurrencycontrol.OpenWaveletChannelStreamBuilder setTerminator(org.waveprotocol.wave.concurrencycontrol.WaveletChannelTerminator)
    {
        org.waveprotocol.wave.concurrencycontrol.WaveletChannelTerminator r1;
        org.waveprotocol.wave.concurrencycontrol.OpenWaveletChannelStreamBuilder r0;

        r0 := @this: org.waveprotocol.wave.concurrencycontrol.OpenWaveletChannelStreamBuilder;

        r1 := @parameter0: org.waveprotocol.wave.concurrencycontrol.WaveletChannelTerminator;

        r0.<org.waveprotocol.wave.concurrencycontrol.OpenWaveletChannelStreamBuilder: org.waveprotocol.wave.concurrencycontrol.WaveletChannelTerminator terminator> = r1;

        return r0;
    }

    public org.waveprotocol.wave.concurrencycontrol.OpenWaveletChannelStream build(org.waveprotocol.wave.concurrencycontrol.OpenWaveletChannelStreamBuilder$Factory)
    {
        org.waveprotocol.wave.concurrencycontrol.OpenWaveletChannelStreamBuilder$Factory r0;
        org.waveprotocol.wave.concurrencycontrol.OpenWaveletChannelStreamBuilder r2;
        org.waveprotocol.wave.concurrencycontrol.WaveletChannelTerminator $r6;
        java.lang.String $r3;
        org.waveprotocol.wave.concurrencycontrol.WaveletUpdate $r4;
        org.waveprotocol.wave.federation.ProtocolHashedVersion $r5;
        org.waveprotocol.wave.concurrencycontrol.OpenWaveletChannelStream $r1;

        r2 := @this: org.waveprotocol.wave.concurrencycontrol.OpenWaveletChannelStreamBuilder;

        r0 := @parameter0: org.waveprotocol.wave.concurrencycontrol.OpenWaveletChannelStreamBuilder$Factory;

        $r1 = interfaceinvoke r0.<org.waveprotocol.wave.concurrencycontrol.OpenWaveletChannelStreamBuilder$Factory: org.waveprotocol.wave.concurrencycontrol.OpenWaveletChannelStream create()>();

        $r3 = r2.<org.waveprotocol.wave.concurrencycontrol.OpenWaveletChannelStreamBuilder: java.lang.String channelId>;

        interfaceinvoke $r1.<org.waveprotocol.wave.concurrencycontrol.OpenWaveletChannelStream: void setChannelId(java.lang.String)>($r3);

        $r4 = r2.<org.waveprotocol.wave.concurrencycontrol.OpenWaveletChannelStreamBuilder: org.waveprotocol.wave.concurrencycontrol.WaveletUpdate delta>;

        interfaceinvoke $r1.<org.waveprotocol.wave.concurrencycontrol.OpenWaveletChannelStream: void setDelta(org.waveprotocol.wave.concurrencycontrol.WaveletUpdate)>($r4);

        $r5 = r2.<org.waveprotocol.wave.concurrencycontrol.OpenWaveletChannelStreamBuilder: org.waveprotocol.wave.federation.ProtocolHashedVersion commitVersion>;

        interfaceinvoke $r1.<org.waveprotocol.wave.concurrencycontrol.OpenWaveletChannelStream: void setCommitVersion(org.waveprotocol.wave.federation.ProtocolHashedVersion)>($r5);

        $r6 = r2.<org.waveprotocol.wave.concurrencycontrol.OpenWaveletChannelStreamBuilder: org.waveprotocol.wave.concurrencycontrol.WaveletChannelTerminator terminator>;

        interfaceinvoke $r1.<org.waveprotocol.wave.concurrencycontrol.OpenWaveletChannelStream: void setTerminator(org.waveprotocol.wave.concurrencycontrol.WaveletChannelTerminator)>($r6);

        return $r1;
    }
}
