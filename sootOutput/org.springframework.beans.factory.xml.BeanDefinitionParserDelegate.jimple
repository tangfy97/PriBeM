public class org.springframework.beans.factory.xml.BeanDefinitionParserDelegate extends java.lang.Object
{
    public static final java.lang.String BEANS_NAMESPACE_URI;
    public static final java.lang.String BEAN_NAME_DELIMITERS;
    public static final java.lang.String TRUE_VALUE;
    public static final java.lang.String DEFAULT_VALUE;
    public static final java.lang.String DESCRIPTION_ELEMENT;
    public static final java.lang.String AUTOWIRE_BY_NAME_VALUE;
    public static final java.lang.String AUTOWIRE_BY_TYPE_VALUE;
    public static final java.lang.String AUTOWIRE_CONSTRUCTOR_VALUE;
    public static final java.lang.String AUTOWIRE_AUTODETECT_VALUE;
    public static final java.lang.String DEPENDENCY_CHECK_ALL_ATTRIBUTE_VALUE;
    public static final java.lang.String DEPENDENCY_CHECK_SIMPLE_ATTRIBUTE_VALUE;
    public static final java.lang.String DEPENDENCY_CHECK_OBJECTS_ATTRIBUTE_VALUE;
    public static final java.lang.String NAME_ATTRIBUTE;
    public static final java.lang.String BEAN_ELEMENT;
    public static final java.lang.String META_ELEMENT;
    public static final java.lang.String ID_ATTRIBUTE;
    public static final java.lang.String PARENT_ATTRIBUTE;
    public static final java.lang.String CLASS_ATTRIBUTE;
    public static final java.lang.String ABSTRACT_ATTRIBUTE;
    public static final java.lang.String SCOPE_ATTRIBUTE;
    public static final java.lang.String SINGLETON_ATTRIBUTE;
    public static final java.lang.String LAZY_INIT_ATTRIBUTE;
    public static final java.lang.String AUTOWIRE_ATTRIBUTE;
    public static final java.lang.String AUTOWIRE_CANDIDATE_ATTRIBUTE;
    public static final java.lang.String PRIMARY_ATTRIBUTE;
    public static final java.lang.String DEPENDENCY_CHECK_ATTRIBUTE;
    public static final java.lang.String DEPENDS_ON_ATTRIBUTE;
    public static final java.lang.String INIT_METHOD_ATTRIBUTE;
    public static final java.lang.String DESTROY_METHOD_ATTRIBUTE;
    public static final java.lang.String FACTORY_METHOD_ATTRIBUTE;
    public static final java.lang.String FACTORY_BEAN_ATTRIBUTE;
    public static final java.lang.String CONSTRUCTOR_ARG_ELEMENT;
    public static final java.lang.String INDEX_ATTRIBUTE;
    public static final java.lang.String TYPE_ATTRIBUTE;
    public static final java.lang.String VALUE_TYPE_ATTRIBUTE;
    public static final java.lang.String KEY_TYPE_ATTRIBUTE;
    public static final java.lang.String PROPERTY_ELEMENT;
    public static final java.lang.String REF_ATTRIBUTE;
    public static final java.lang.String VALUE_ATTRIBUTE;
    public static final java.lang.String LOOKUP_METHOD_ELEMENT;
    public static final java.lang.String REPLACED_METHOD_ELEMENT;
    public static final java.lang.String REPLACER_ATTRIBUTE;
    public static final java.lang.String ARG_TYPE_ELEMENT;
    public static final java.lang.String ARG_TYPE_MATCH_ATTRIBUTE;
    public static final java.lang.String REF_ELEMENT;
    public static final java.lang.String IDREF_ELEMENT;
    public static final java.lang.String BEAN_REF_ATTRIBUTE;
    public static final java.lang.String LOCAL_REF_ATTRIBUTE;
    public static final java.lang.String PARENT_REF_ATTRIBUTE;
    public static final java.lang.String VALUE_ELEMENT;
    public static final java.lang.String NULL_ELEMENT;
    public static final java.lang.String ARRAY_ELEMENT;
    public static final java.lang.String LIST_ELEMENT;
    public static final java.lang.String SET_ELEMENT;
    public static final java.lang.String MAP_ELEMENT;
    public static final java.lang.String ENTRY_ELEMENT;
    public static final java.lang.String KEY_ELEMENT;
    public static final java.lang.String KEY_ATTRIBUTE;
    public static final java.lang.String KEY_REF_ATTRIBUTE;
    public static final java.lang.String VALUE_REF_ATTRIBUTE;
    public static final java.lang.String PROPS_ELEMENT;
    public static final java.lang.String PROP_ELEMENT;
    public static final java.lang.String MERGE_ATTRIBUTE;
    public static final java.lang.String QUALIFIER_ELEMENT;
    public static final java.lang.String QUALIFIER_ATTRIBUTE_ELEMENT;
    public static final java.lang.String DEFAULT_LAZY_INIT_ATTRIBUTE;
    public static final java.lang.String DEFAULT_MERGE_ATTRIBUTE;
    public static final java.lang.String DEFAULT_AUTOWIRE_ATTRIBUTE;
    public static final java.lang.String DEFAULT_DEPENDENCY_CHECK_ATTRIBUTE;
    public static final java.lang.String DEFAULT_AUTOWIRE_CANDIDATES_ATTRIBUTE;
    public static final java.lang.String DEFAULT_INIT_METHOD_ATTRIBUTE;
    public static final java.lang.String DEFAULT_DESTROY_METHOD_ATTRIBUTE;
    protected final org.apache.commons.logging.Log logger;
    private final org.springframework.beans.factory.xml.XmlReaderContext readerContext;
    private final org.springframework.beans.factory.xml.DocumentDefaultsDefinition defaults;
    private final org.springframework.beans.factory.parsing.ParseState parseState;
    private final java.util.Set usedNames;

    public void <init>(org.springframework.beans.factory.xml.XmlReaderContext)
    {
        java.util.HashSet $r5;
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate r0;
        org.springframework.beans.factory.xml.XmlReaderContext r6;
        java.lang.Class $r1;
        org.apache.commons.logging.Log $r2;
        org.springframework.beans.factory.parsing.ParseState $r4;
        org.springframework.beans.factory.xml.DocumentDefaultsDefinition $r3;

        r0 := @this: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate;

        r6 := @parameter0: org.springframework.beans.factory.xml.XmlReaderContext;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r1);

        r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.apache.commons.logging.Log logger> = $r2;

        $r3 = new org.springframework.beans.factory.xml.DocumentDefaultsDefinition;

        specialinvoke $r3.<org.springframework.beans.factory.xml.DocumentDefaultsDefinition: void <init>()>();

        r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.xml.DocumentDefaultsDefinition defaults> = $r3;

        $r4 = new org.springframework.beans.factory.parsing.ParseState;

        specialinvoke $r4.<org.springframework.beans.factory.parsing.ParseState: void <init>()>();

        r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.parsing.ParseState parseState> = $r4;

        $r5 = new java.util.HashSet;

        specialinvoke $r5.<java.util.HashSet: void <init>()>();

        r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.util.Set usedNames> = $r5;

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r6, "XmlReaderContext must not be null");

        r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.xml.XmlReaderContext readerContext> = r6;

        return;
    }

    public final org.springframework.beans.factory.xml.XmlReaderContext getReaderContext()
    {
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate r0;
        org.springframework.beans.factory.xml.XmlReaderContext $r1;

        r0 := @this: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate;

        $r1 = r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.xml.XmlReaderContext readerContext>;

        return $r1;
    }

    protected java.lang.Object extractSource(org.w3c.dom.Element)
    {
        org.w3c.dom.Element r1;
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate r0;
        org.springframework.beans.factory.xml.XmlReaderContext $r2;
        java.lang.Object $r3;

        r0 := @this: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate;

        r1 := @parameter0: org.w3c.dom.Element;

        $r2 = r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.xml.XmlReaderContext readerContext>;

        $r3 = virtualinvoke $r2.<org.springframework.beans.factory.xml.XmlReaderContext: java.lang.Object extractSource(java.lang.Object)>(r1);

        return $r3;
    }

    protected void error(java.lang.String, org.w3c.dom.Node)
    {
        org.w3c.dom.Node r2;
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate r0;
        org.springframework.beans.factory.xml.XmlReaderContext $r4;
        java.lang.String r1;
        org.springframework.beans.factory.parsing.ParseState $r3, $r5;

        r0 := @this: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.w3c.dom.Node;

        $r4 = r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.xml.XmlReaderContext readerContext>;

        $r3 = r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.parsing.ParseState parseState>;

        $r5 = virtualinvoke $r3.<org.springframework.beans.factory.parsing.ParseState: org.springframework.beans.factory.parsing.ParseState snapshot()>();

        virtualinvoke $r4.<org.springframework.beans.factory.xml.XmlReaderContext: void error(java.lang.String,java.lang.Object,org.springframework.beans.factory.parsing.ParseState)>(r1, r2, $r5);

        return;
    }

    protected void error(java.lang.String, org.w3c.dom.Element)
    {
        org.w3c.dom.Element r2;
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate r0;
        org.springframework.beans.factory.xml.XmlReaderContext $r4;
        java.lang.String r1;
        org.springframework.beans.factory.parsing.ParseState $r3, $r5;

        r0 := @this: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.w3c.dom.Element;

        $r4 = r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.xml.XmlReaderContext readerContext>;

        $r3 = r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.parsing.ParseState parseState>;

        $r5 = virtualinvoke $r3.<org.springframework.beans.factory.parsing.ParseState: org.springframework.beans.factory.parsing.ParseState snapshot()>();

        virtualinvoke $r4.<org.springframework.beans.factory.xml.XmlReaderContext: void error(java.lang.String,java.lang.Object,org.springframework.beans.factory.parsing.ParseState)>(r1, r2, $r5);

        return;
    }

    protected void error(java.lang.String, org.w3c.dom.Element, java.lang.Throwable)
    {
        java.lang.Throwable r6;
        org.w3c.dom.Element r2;
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate r0;
        org.springframework.beans.factory.xml.XmlReaderContext $r4;
        java.lang.String r1;
        org.springframework.beans.factory.parsing.ParseState $r3, $r5;

        r0 := @this: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.w3c.dom.Element;

        r6 := @parameter2: java.lang.Throwable;

        $r4 = r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.xml.XmlReaderContext readerContext>;

        $r3 = r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.parsing.ParseState parseState>;

        $r5 = virtualinvoke $r3.<org.springframework.beans.factory.parsing.ParseState: org.springframework.beans.factory.parsing.ParseState snapshot()>();

        virtualinvoke $r4.<org.springframework.beans.factory.xml.XmlReaderContext: void error(java.lang.String,java.lang.Object,org.springframework.beans.factory.parsing.ParseState,java.lang.Throwable)>(r1, r2, $r5, r6);

        return;
    }

    public void initDefaults(org.w3c.dom.Element)
    {
        org.w3c.dom.Element r1;
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate r0;
        org.springframework.beans.factory.xml.XmlReaderContext $r4;
        org.springframework.beans.factory.xml.DocumentDefaultsDefinition $r2, $r3;

        r0 := @this: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate;

        r1 := @parameter0: org.w3c.dom.Element;

        $r2 = r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.xml.DocumentDefaultsDefinition defaults>;

        virtualinvoke r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: void populateDefaults(org.springframework.beans.factory.xml.DocumentDefaultsDefinition,org.w3c.dom.Element)>($r2, r1);

        $r4 = r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.xml.XmlReaderContext readerContext>;

        $r3 = r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.xml.DocumentDefaultsDefinition defaults>;

        virtualinvoke $r4.<org.springframework.beans.factory.xml.XmlReaderContext: void fireDefaultsRegistered(org.springframework.beans.factory.parsing.DefaultsDefinition)>($r3);

        return;
    }

    protected void populateDefaults(org.springframework.beans.factory.xml.DocumentDefaultsDefinition, org.w3c.dom.Element)
    {
        org.springframework.beans.factory.xml.XmlReaderContext $r7;
        org.springframework.beans.factory.xml.DocumentDefaultsDefinition r0;
        org.w3c.dom.Element r1;
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate r6;
        java.lang.Object $r8;
        java.lang.String $r2, $r3, $r4, $r5, $r9, $r10, $r11;
        boolean $z0, $z1, $z2;

        r6 := @this: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate;

        r0 := @parameter0: org.springframework.beans.factory.xml.DocumentDefaultsDefinition;

        r1 := @parameter1: org.w3c.dom.Element;

        $r2 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("default-lazy-init");

        virtualinvoke r0.<org.springframework.beans.factory.xml.DocumentDefaultsDefinition: void setLazyInit(java.lang.String)>($r2);

        $r3 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("default-merge");

        virtualinvoke r0.<org.springframework.beans.factory.xml.DocumentDefaultsDefinition: void setMerge(java.lang.String)>($r3);

        $r4 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("default-autowire");

        virtualinvoke r0.<org.springframework.beans.factory.xml.DocumentDefaultsDefinition: void setAutowire(java.lang.String)>($r4);

        $r5 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("default-dependency-check");

        virtualinvoke r0.<org.springframework.beans.factory.xml.DocumentDefaultsDefinition: void setDependencyCheck(java.lang.String)>($r5);

        $z0 = interfaceinvoke r1.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("default-autowire-candidates");

        if $z0 == 0 goto label1;

        $r11 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("default-autowire-candidates");

        virtualinvoke r0.<org.springframework.beans.factory.xml.DocumentDefaultsDefinition: void setAutowireCandidates(java.lang.String)>($r11);

     label1:
        $z1 = interfaceinvoke r1.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("default-init-method");

        if $z1 == 0 goto label2;

        $r10 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("default-init-method");

        virtualinvoke r0.<org.springframework.beans.factory.xml.DocumentDefaultsDefinition: void setInitMethod(java.lang.String)>($r10);

     label2:
        $z2 = interfaceinvoke r1.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("default-destroy-method");

        if $z2 == 0 goto label3;

        $r9 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("default-destroy-method");

        virtualinvoke r0.<org.springframework.beans.factory.xml.DocumentDefaultsDefinition: void setDestroyMethod(java.lang.String)>($r9);

     label3:
        $r7 = r6.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.xml.XmlReaderContext readerContext>;

        $r8 = virtualinvoke $r7.<org.springframework.beans.factory.xml.XmlReaderContext: java.lang.Object extractSource(java.lang.Object)>(r1);

        virtualinvoke r0.<org.springframework.beans.factory.xml.DocumentDefaultsDefinition: void setSource(java.lang.Object)>($r8);

        return;
    }

    public org.springframework.beans.factory.xml.DocumentDefaultsDefinition getDefaults()
    {
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate r0;
        org.springframework.beans.factory.xml.DocumentDefaultsDefinition $r1;

        r0 := @this: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate;

        $r1 = r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.xml.DocumentDefaultsDefinition defaults>;

        return $r1;
    }

    public org.springframework.beans.factory.support.BeanDefinitionDefaults getBeanDefinitionDefaults()
    {
        org.springframework.beans.factory.support.BeanDefinitionDefaults $r0;
        org.springframework.beans.factory.xml.DocumentDefaultsDefinition $r2, $r5, $r7;
        int $i0, $i1;
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate r1;
        java.lang.String $r3, $r4, $r6, $r8;
        boolean $z0;

        r1 := @this: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate;

        $r0 = new org.springframework.beans.factory.support.BeanDefinitionDefaults;

        specialinvoke $r0.<org.springframework.beans.factory.support.BeanDefinitionDefaults: void <init>()>();

        $r3 = "TRUE";

        $r2 = r1.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.xml.DocumentDefaultsDefinition defaults>;

        $r4 = virtualinvoke $r2.<org.springframework.beans.factory.xml.DocumentDefaultsDefinition: java.lang.String getLazyInit()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r4);

        virtualinvoke $r0.<org.springframework.beans.factory.support.BeanDefinitionDefaults: void setLazyInit(boolean)>($z0);

        $i0 = virtualinvoke r1.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: int getDependencyCheck(java.lang.String)>("default");

        virtualinvoke $r0.<org.springframework.beans.factory.support.BeanDefinitionDefaults: void setDependencyCheck(int)>($i0);

        $i1 = virtualinvoke r1.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: int getAutowireMode(java.lang.String)>("default");

        virtualinvoke $r0.<org.springframework.beans.factory.support.BeanDefinitionDefaults: void setAutowireMode(int)>($i1);

        $r5 = r1.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.xml.DocumentDefaultsDefinition defaults>;

        $r6 = virtualinvoke $r5.<org.springframework.beans.factory.xml.DocumentDefaultsDefinition: java.lang.String getInitMethod()>();

        virtualinvoke $r0.<org.springframework.beans.factory.support.BeanDefinitionDefaults: void setInitMethodName(java.lang.String)>($r6);

        $r7 = r1.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.xml.DocumentDefaultsDefinition defaults>;

        $r8 = virtualinvoke $r7.<org.springframework.beans.factory.xml.DocumentDefaultsDefinition: java.lang.String getDestroyMethod()>();

        virtualinvoke $r0.<org.springframework.beans.factory.support.BeanDefinitionDefaults: void setDestroyMethodName(java.lang.String)>($r8);

        return $r0;
    }

    public java.lang.String[] getAutowireCandidatePatterns()
    {
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate r0;
        java.lang.String[] $r3;
        java.lang.String $r2;
        org.springframework.beans.factory.xml.DocumentDefaultsDefinition $r1;

        r0 := @this: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate;

        $r1 = r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.xml.DocumentDefaultsDefinition defaults>;

        $r2 = virtualinvoke $r1.<org.springframework.beans.factory.xml.DocumentDefaultsDefinition: java.lang.String getAutowireCandidates()>();

        if $r2 == null goto label1;

        $r3 = staticinvoke <org.springframework.util.StringUtils: java.lang.String[] commaDelimitedListToStringArray(java.lang.String)>($r2);

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    public org.springframework.beans.factory.config.BeanDefinitionHolder parseBeanDefinitionElement(org.w3c.dom.Element)
    {
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate r0;
        org.springframework.beans.factory.config.BeanDefinitionHolder $r2;
        org.w3c.dom.Element r1;

        r0 := @this: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate;

        r1 := @parameter0: org.w3c.dom.Element;

        $r2 = virtualinvoke r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.config.BeanDefinitionHolder parseBeanDefinitionElement(org.w3c.dom.Element,org.springframework.beans.factory.config.BeanDefinition)>(r1, null);

        return $r2;
    }

    public org.springframework.beans.factory.config.BeanDefinitionHolder parseBeanDefinitionElement(org.w3c.dom.Element, org.springframework.beans.factory.config.BeanDefinition)
    {
        org.springframework.beans.factory.xml.XmlReaderContext $r7, $r15, $r17;
        org.springframework.beans.factory.support.AbstractBeanDefinition $r6;
        org.springframework.beans.factory.support.BeanDefinitionRegistry $r16, $r18;
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.util.Collection $r30;
        java.lang.Exception $r31;
        java.util.List $r29;
        java.lang.StringBuilder $r10, $r12, $r13, $r21, $r23, $r24, $r25, $r26;
        java.lang.String[] $r28, $r35;
        java.util.ArrayList $r3;
        org.springframework.beans.factory.config.BeanDefinitionHolder $r36;
        int $i0, $i1;
        org.springframework.beans.factory.config.BeanDefinition r4;
        java.lang.String $r1, $r2, $r8, $r9, $r14, $r27, $r32, r33;
        org.w3c.dom.Element r0;
        org.apache.commons.logging.Log $r11, $r20, $r22, $r34;
        java.lang.Object $r19;

        r5 := @this: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate;

        r0 := @parameter0: org.w3c.dom.Element;

        r4 := @parameter1: org.springframework.beans.factory.config.BeanDefinition;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("id");

        $r2 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("name");

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $z0 = staticinvoke <org.springframework.util.StringUtils: boolean hasLength(java.lang.String)>($r2);

        if $z0 == 0 goto label01;

        $r28 = staticinvoke <org.springframework.util.StringUtils: java.lang.String[] tokenizeToStringArray(java.lang.String,java.lang.String)>($r2, ",; ");

        $r29 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r28);

        $r30 = (java.util.Collection) $r29;

        interfaceinvoke $r3.<java.util.List: boolean addAll(java.util.Collection)>($r30);

     label01:
        r33 = $r1;

        $z1 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>($r1);

        if $z1 != 0 goto label02;

        $z5 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z5 != 0 goto label02;

        $r19 = interfaceinvoke $r3.<java.util.List: java.lang.Object remove(int)>(0);

        r33 = (java.lang.String) $r19;

        $r20 = r5.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.apache.commons.logging.Log logger>;

        $z6 = interfaceinvoke $r20.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z6 == 0 goto label02;

        $r22 = r5.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.apache.commons.logging.Log logger>;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>(java.lang.String)>("No XML \'id\' specified - using \'");

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r33);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' as bean name and ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as aliases");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r22.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r27);

     label02:
        if r4 != null goto label03;

        virtualinvoke r5.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: void checkNameUniqueness(java.lang.String,java.util.List,org.w3c.dom.Element)>(r33, $r3, r0);

     label03:
        $r6 = virtualinvoke r5.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.support.AbstractBeanDefinition parseBeanDefinitionElement(org.w3c.dom.Element,java.lang.String,org.springframework.beans.factory.config.BeanDefinition)>(r0, r33, r4);

        if $r6 == null goto label10;

        $z2 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>(r33);

        if $z2 != 0 goto label09;

     label04:
        if r4 == null goto label05;

        $r17 = r5.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.xml.XmlReaderContext readerContext>;

        $r18 = virtualinvoke $r17.<org.springframework.beans.factory.xml.XmlReaderContext: org.springframework.beans.factory.support.BeanDefinitionRegistry getRegistry()>();

        r33 = staticinvoke <org.springframework.beans.factory.support.BeanDefinitionReaderUtils: java.lang.String generateBeanName(org.springframework.beans.factory.config.BeanDefinition,org.springframework.beans.factory.support.BeanDefinitionRegistry,boolean)>($r6, $r18, 1);

        goto label06;

     label05:
        $r7 = r5.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.xml.XmlReaderContext readerContext>;

        $r8 = virtualinvoke $r7.<org.springframework.beans.factory.xml.XmlReaderContext: java.lang.String generateBeanName(org.springframework.beans.factory.config.BeanDefinition)>($r6);

        r33 = $r8;

        $r9 = virtualinvoke $r6.<org.springframework.beans.factory.support.AbstractBeanDefinition: java.lang.String getBeanClassName()>();

        if $r9 == null goto label06;

        $z3 = virtualinvoke $r8.<java.lang.String: boolean startsWith(java.lang.String)>($r9);

        if $z3 == 0 goto label06;

        $i0 = virtualinvoke $r8.<java.lang.String: int length()>();

        $i1 = virtualinvoke $r9.<java.lang.String: int length()>();

        if $i0 <= $i1 goto label06;

        $r15 = r5.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.xml.XmlReaderContext readerContext>;

        $r16 = virtualinvoke $r15.<org.springframework.beans.factory.xml.XmlReaderContext: org.springframework.beans.factory.support.BeanDefinitionRegistry getRegistry()>();

        $z4 = interfaceinvoke $r16.<org.springframework.beans.factory.support.BeanDefinitionRegistry: boolean isBeanNameInUse(java.lang.String)>($r9);

        if $z4 != 0 goto label06;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r9);

     label06:
        $r34 = r5.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.apache.commons.logging.Log logger>;

        $z7 = interfaceinvoke $r34.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z7 == 0 goto label09;

        $r11 = r5.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.apache.commons.logging.Log logger>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("Neither XML \'id\' nor \'name\' specified - using generated bean name [");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r33);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r11.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r14);

     label07:
        goto label09;

     label08:
        $r31 := @caughtexception;

        $r32 = virtualinvoke $r31.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke r5.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: void error(java.lang.String,org.w3c.dom.Element)>($r32, r0);

        return null;

     label09:
        $r35 = staticinvoke <org.springframework.util.StringUtils: java.lang.String[] toStringArray(java.util.Collection)>($r3);

        $r36 = new org.springframework.beans.factory.config.BeanDefinitionHolder;

        specialinvoke $r36.<org.springframework.beans.factory.config.BeanDefinitionHolder: void <init>(org.springframework.beans.factory.config.BeanDefinition,java.lang.String,java.lang.String[])>($r6, r33, $r35);

        return $r36;

     label10:
        return null;

        catch java.lang.Exception from label04 to label07 with label08;
    }

    protected void checkNameUniqueness(java.lang.String, java.util.List, org.w3c.dom.Element)
    {
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate r1;
        java.lang.String r0, $r8, r13;
        boolean $z0, $z1;
        java.util.Set $r2, $r4, $r10, $r12;
        java.util.List r3;
        org.w3c.dom.Element r9;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.Object $r11;

        r1 := @this: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate;

        r0 := @parameter0: java.lang.String;

        r3 := @parameter1: java.util.List;

        r9 := @parameter2: org.w3c.dom.Element;

        r13 = null;

        $z0 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>(r0);

        if $z0 == 0 goto label1;

        $r12 = r1.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.util.Set usedNames>;

        $z1 = interfaceinvoke $r12.<java.util.Set: boolean contains(java.lang.Object)>(r0);

        if $z1 == 0 goto label1;

        r13 = r0;

     label1:
        if r13 != null goto label2;

        $r10 = r1.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.util.Set usedNames>;

        $r11 = staticinvoke <org.springframework.util.CollectionUtils: java.lang.Object findFirstMatch(java.util.Collection,java.util.Collection)>($r10, r3);

        r13 = (java.lang.String) $r11;

     label2:
        if r13 == null goto label3;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Bean name \'");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' is already used in this file");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: void error(java.lang.String,org.w3c.dom.Element)>($r8, r9);

     label3:
        $r2 = r1.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.util.Set usedNames>;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r0);

        $r4 = r1.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.util.Set usedNames>;

        interfaceinvoke $r4.<java.util.Set: boolean addAll(java.util.Collection)>(r3);

        return;
    }

    public org.springframework.beans.factory.support.AbstractBeanDefinition parseBeanDefinitionElement(org.w3c.dom.Element, java.lang.String, org.springframework.beans.factory.config.BeanDefinition)
    {
        org.springframework.beans.factory.xml.XmlReaderContext $r10;
        org.springframework.beans.factory.support.AbstractBeanDefinition $r5;
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate r0;
        boolean $z0, $z1;
        org.springframework.core.io.Resource $r11;
        org.springframework.beans.factory.parsing.BeanEntry $r1;
        java.lang.StringBuilder $r20, $r21, $r22, $r26, $r27, $r28;
        java.lang.Throwable $r15, $r17;
        org.springframework.beans.factory.support.MethodOverrides $r8, $r9;
        org.springframework.beans.factory.config.BeanDefinition r6;
        java.lang.String r2, $r7, $r14, $r23, $r29, r31, r32;
        java.lang.NoClassDefFoundError $r19;
        org.springframework.beans.factory.parsing.ParseState $r3, $r13, $r16, $r18, $r24, $r30;
        org.w3c.dom.Element r4;
        java.lang.Object $r12;
        java.lang.ClassNotFoundException $r25;

        r0 := @this: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate;

        r4 := @parameter0: org.w3c.dom.Element;

        r2 := @parameter1: java.lang.String;

        r6 := @parameter2: org.springframework.beans.factory.config.BeanDefinition;

        $r3 = r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.parsing.ParseState parseState>;

        $r1 = new org.springframework.beans.factory.parsing.BeanEntry;

        specialinvoke $r1.<org.springframework.beans.factory.parsing.BeanEntry: void <init>(java.lang.String)>(r2);

        virtualinvoke $r3.<org.springframework.beans.factory.parsing.ParseState: void push(org.springframework.beans.factory.parsing.ParseState$Entry)>($r1);

        r31 = null;

        $z0 = interfaceinvoke r4.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("class");

        if $z0 == 0 goto label01;

        $r14 = interfaceinvoke r4.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("class");

        r31 = virtualinvoke $r14.<java.lang.String: java.lang.String trim()>();

     label01:
        r32 = null;

        $z1 = interfaceinvoke r4.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("parent");

        if $z1 == 0 goto label02;

        r32 = interfaceinvoke r4.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("parent");

     label02:
        $r5 = virtualinvoke r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.support.AbstractBeanDefinition createBeanDefinition(java.lang.String,java.lang.String)>(r31, r32);

        virtualinvoke r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.support.AbstractBeanDefinition parseBeanDefinitionAttributes(org.w3c.dom.Element,java.lang.String,org.springframework.beans.factory.config.BeanDefinition,org.springframework.beans.factory.support.AbstractBeanDefinition)>(r4, r2, r6, $r5);

        $r7 = staticinvoke <org.springframework.util.xml.DomUtils: java.lang.String getChildElementValueByTagName(org.w3c.dom.Element,java.lang.String)>(r4, "description");

        virtualinvoke $r5.<org.springframework.beans.factory.support.AbstractBeanDefinition: void setDescription(java.lang.String)>($r7);

        virtualinvoke r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: void parseMetaElements(org.w3c.dom.Element,org.springframework.beans.BeanMetadataAttributeAccessor)>(r4, $r5);

        $r8 = virtualinvoke $r5.<org.springframework.beans.factory.support.AbstractBeanDefinition: org.springframework.beans.factory.support.MethodOverrides getMethodOverrides()>();

        virtualinvoke r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: void parseLookupOverrideSubElements(org.w3c.dom.Element,org.springframework.beans.factory.support.MethodOverrides)>(r4, $r8);

        $r9 = virtualinvoke $r5.<org.springframework.beans.factory.support.AbstractBeanDefinition: org.springframework.beans.factory.support.MethodOverrides getMethodOverrides()>();

        virtualinvoke r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: void parseReplacedMethodSubElements(org.w3c.dom.Element,org.springframework.beans.factory.support.MethodOverrides)>(r4, $r9);

        virtualinvoke r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: void parseConstructorArgElements(org.w3c.dom.Element,org.springframework.beans.factory.config.BeanDefinition)>(r4, $r5);

        virtualinvoke r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: void parsePropertyElements(org.w3c.dom.Element,org.springframework.beans.factory.config.BeanDefinition)>(r4, $r5);

        virtualinvoke r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: void parseQualifierElements(org.w3c.dom.Element,org.springframework.beans.factory.support.AbstractBeanDefinition)>(r4, $r5);

        $r10 = r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.xml.XmlReaderContext readerContext>;

        $r11 = virtualinvoke $r10.<org.springframework.beans.factory.xml.XmlReaderContext: org.springframework.core.io.Resource getResource()>();

        virtualinvoke $r5.<org.springframework.beans.factory.support.AbstractBeanDefinition: void setResource(org.springframework.core.io.Resource)>($r11);

        $r12 = virtualinvoke r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.Object extractSource(org.w3c.dom.Element)>(r4);

        virtualinvoke $r5.<org.springframework.beans.factory.support.AbstractBeanDefinition: void setSource(java.lang.Object)>($r12);

     label03:
        $r13 = r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.parsing.ParseState parseState>;

        virtualinvoke $r13.<org.springframework.beans.factory.parsing.ParseState: void pop()>();

        return $r5;

     label04:
        $r25 := @caughtexception;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>(java.lang.String)>("Bean class [");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] not found");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: void error(java.lang.String,org.w3c.dom.Element,java.lang.Throwable)>($r29, r4, $r25);

     label05:
        $r30 = r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.parsing.ParseState parseState>;

        virtualinvoke $r30.<org.springframework.beans.factory.parsing.ParseState: void pop()>();

        goto label11;

     label06:
        $r19 := @caughtexception;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>(java.lang.String)>("Class that bean class [");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] depends on not found");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: void error(java.lang.String,org.w3c.dom.Element,java.lang.Throwable)>($r23, r4, $r19);

     label07:
        $r24 = r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.parsing.ParseState parseState>;

        virtualinvoke $r24.<org.springframework.beans.factory.parsing.ParseState: void pop()>();

        goto label11;

     label08:
        $r17 := @caughtexception;

        virtualinvoke r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: void error(java.lang.String,org.w3c.dom.Element,java.lang.Throwable)>("Unexpected failure during bean definition parsing", r4, $r17);

     label09:
        $r18 = r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.parsing.ParseState parseState>;

        virtualinvoke $r18.<org.springframework.beans.factory.parsing.ParseState: void pop()>();

        goto label11;

     label10:
        $r15 := @caughtexception;

        $r16 = r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.parsing.ParseState parseState>;

        virtualinvoke $r16.<org.springframework.beans.factory.parsing.ParseState: void pop()>();

        throw $r15;

     label11:
        return null;

        catch java.lang.ClassNotFoundException from label01 to label03 with label04;
        catch java.lang.NoClassDefFoundError from label01 to label03 with label06;
        catch java.lang.Throwable from label01 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public org.springframework.beans.factory.support.AbstractBeanDefinition parseBeanDefinitionAttributes(org.w3c.dom.Element, java.lang.String, org.springframework.beans.factory.config.BeanDefinition, org.springframework.beans.factory.support.AbstractBeanDefinition)
    {
        org.springframework.beans.factory.support.AbstractBeanDefinition r4;
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate r7;
        org.springframework.beans.factory.xml.DocumentDefaultsDefinition $r11, $r13, $r15, $r19, $r23, $r35;
        org.springframework.beans.factory.config.BeanDefinition r1;
        java.lang.String $r2, $r3, $r5, $r6, $r8, $r9, $r10, $r12, $r14, $r16, $r17, $r18, $r20, $r21, $r22, $r24, $r25, $r26, $r27, $r28, r30, $r31, $r32, $r33, $r36, $r37, $r38, $r39, $r40, $r41, $r42, r43;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20;
        java.lang.String[] $r29, $r34;
        int $i0, $i1;
        org.w3c.dom.Element r0;

        r7 := @this: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate;

        r0 := @parameter0: org.w3c.dom.Element;

        r30 := @parameter1: java.lang.String;

        r1 := @parameter2: org.springframework.beans.factory.config.BeanDefinition;

        r4 := @parameter3: org.springframework.beans.factory.support.AbstractBeanDefinition;

        $z0 = interfaceinvoke r0.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("scope");

        if $z0 == 0 goto label01;

        $r41 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("scope");

        virtualinvoke r4.<org.springframework.beans.factory.support.AbstractBeanDefinition: void setScope(java.lang.String)>($r41);

        $z16 = interfaceinvoke r0.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("singleton");

        if $z16 == 0 goto label05;

        virtualinvoke r7.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: void error(java.lang.String,org.w3c.dom.Element)>("Specify either \'scope\' or \'singleton\', not both", r0);

        goto label05;

     label01:
        $z1 = interfaceinvoke r0.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("singleton");

        if $z1 == 0 goto label04;

        $r39 = "true";

        $r40 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("singleton");

        $z15 = virtualinvoke $r39.<java.lang.String: boolean equals(java.lang.Object)>($r40);

        if $z15 == 0 goto label02;

        $r42 = "singleton";

        goto label03;

     label02:
        $r42 = "prototype";

     label03:
        virtualinvoke r4.<org.springframework.beans.factory.support.AbstractBeanDefinition: void setScope(java.lang.String)>($r42);

        goto label05;

     label04:
        if r1 == null goto label05;

        $r38 = interfaceinvoke r1.<org.springframework.beans.factory.config.BeanDefinition: java.lang.String getScope()>();

        virtualinvoke r4.<org.springframework.beans.factory.support.AbstractBeanDefinition: void setScope(java.lang.String)>($r38);

     label05:
        $z17 = interfaceinvoke r0.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("abstract");

        if $z17 == 0 goto label06;

        $r36 = "true";

        $r37 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("abstract");

        $z14 = virtualinvoke $r36.<java.lang.String: boolean equals(java.lang.Object)>($r37);

        virtualinvoke r4.<org.springframework.beans.factory.support.AbstractBeanDefinition: void setAbstract(boolean)>($z14);

     label06:
        $r2 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("lazy-init");

        r43 = $r2;

        $r3 = "default";

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z2 == 0 goto label07;

        $r35 = r7.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.xml.DocumentDefaultsDefinition defaults>;

        r43 = virtualinvoke $r35.<org.springframework.beans.factory.xml.DocumentDefaultsDefinition: java.lang.String getLazyInit()>();

     label07:
        $r5 = "true";

        $z3 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r43);

        virtualinvoke r4.<org.springframework.beans.factory.support.AbstractBeanDefinition: void setLazyInit(boolean)>($z3);

        $r6 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("autowire");

        $i0 = virtualinvoke r7.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: int getAutowireMode(java.lang.String)>($r6);

        virtualinvoke r4.<org.springframework.beans.factory.support.AbstractBeanDefinition: void setAutowireMode(int)>($i0);

        $r8 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("dependency-check");

        $i1 = virtualinvoke r7.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: int getDependencyCheck(java.lang.String)>($r8);

        virtualinvoke r4.<org.springframework.beans.factory.support.AbstractBeanDefinition: void setDependencyCheck(int)>($i1);

        $z4 = interfaceinvoke r0.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("depends-on");

        if $z4 == 0 goto label08;

        $r33 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("depends-on");

        $r34 = staticinvoke <org.springframework.util.StringUtils: java.lang.String[] tokenizeToStringArray(java.lang.String,java.lang.String)>($r33, ",; ");

        virtualinvoke r4.<org.springframework.beans.factory.support.AbstractBeanDefinition: void setDependsOn(java.lang.String[])>($r34);

     label08:
        $r9 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("autowire-candidate");

        $r10 = "";

        $z5 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z5 != 0 goto label09;

        $r31 = "default";

        $z12 = virtualinvoke $r31.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z12 == 0 goto label10;

     label09:
        $r11 = r7.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.xml.DocumentDefaultsDefinition defaults>;

        $r12 = virtualinvoke $r11.<org.springframework.beans.factory.xml.DocumentDefaultsDefinition: java.lang.String getAutowireCandidates()>();

        if $r12 == null goto label11;

        $r29 = staticinvoke <org.springframework.util.StringUtils: java.lang.String[] commaDelimitedListToStringArray(java.lang.String)>($r12);

        $z11 = staticinvoke <org.springframework.util.PatternMatchUtils: boolean simpleMatch(java.lang.String[],java.lang.String)>($r29, r30);

        virtualinvoke r4.<org.springframework.beans.factory.support.AbstractBeanDefinition: void setAutowireCandidate(boolean)>($z11);

        goto label11;

     label10:
        $r32 = "true";

        $z13 = virtualinvoke $r32.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        virtualinvoke r4.<org.springframework.beans.factory.support.AbstractBeanDefinition: void setAutowireCandidate(boolean)>($z13);

     label11:
        $z18 = interfaceinvoke r0.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("primary");

        if $z18 == 0 goto label12;

        $r27 = "true";

        $r28 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("primary");

        $z10 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>($r28);

        virtualinvoke r4.<org.springframework.beans.factory.support.AbstractBeanDefinition: void setPrimary(boolean)>($z10);

     label12:
        $z6 = interfaceinvoke r0.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("init-method");

        if $z6 == 0 goto label13;

        $r25 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("init-method");

        $r26 = "";

        $z9 = virtualinvoke $r26.<java.lang.String: boolean equals(java.lang.Object)>($r25);

        if $z9 != 0 goto label14;

        virtualinvoke r4.<org.springframework.beans.factory.support.AbstractBeanDefinition: void setInitMethodName(java.lang.String)>($r25);

        goto label14;

     label13:
        $r13 = r7.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.xml.DocumentDefaultsDefinition defaults>;

        $r14 = virtualinvoke $r13.<org.springframework.beans.factory.xml.DocumentDefaultsDefinition: java.lang.String getInitMethod()>();

        if $r14 == null goto label14;

        $r23 = r7.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.xml.DocumentDefaultsDefinition defaults>;

        $r24 = virtualinvoke $r23.<org.springframework.beans.factory.xml.DocumentDefaultsDefinition: java.lang.String getInitMethod()>();

        virtualinvoke r4.<org.springframework.beans.factory.support.AbstractBeanDefinition: void setInitMethodName(java.lang.String)>($r24);

        virtualinvoke r4.<org.springframework.beans.factory.support.AbstractBeanDefinition: void setEnforceInitMethod(boolean)>(0);

     label14:
        $z19 = interfaceinvoke r0.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("destroy-method");

        if $z19 == 0 goto label15;

        $r21 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("destroy-method");

        $r22 = "";

        $z8 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>($r21);

        if $z8 != 0 goto label16;

        virtualinvoke r4.<org.springframework.beans.factory.support.AbstractBeanDefinition: void setDestroyMethodName(java.lang.String)>($r21);

        goto label16;

     label15:
        $r15 = r7.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.xml.DocumentDefaultsDefinition defaults>;

        $r16 = virtualinvoke $r15.<org.springframework.beans.factory.xml.DocumentDefaultsDefinition: java.lang.String getDestroyMethod()>();

        if $r16 == null goto label16;

        $r19 = r7.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.xml.DocumentDefaultsDefinition defaults>;

        $r20 = virtualinvoke $r19.<org.springframework.beans.factory.xml.DocumentDefaultsDefinition: java.lang.String getDestroyMethod()>();

        virtualinvoke r4.<org.springframework.beans.factory.support.AbstractBeanDefinition: void setDestroyMethodName(java.lang.String)>($r20);

        virtualinvoke r4.<org.springframework.beans.factory.support.AbstractBeanDefinition: void setEnforceDestroyMethod(boolean)>(0);

     label16:
        $z20 = interfaceinvoke r0.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("factory-method");

        if $z20 == 0 goto label17;

        $r18 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("factory-method");

        virtualinvoke r4.<org.springframework.beans.factory.support.AbstractBeanDefinition: void setFactoryMethodName(java.lang.String)>($r18);

     label17:
        $z7 = interfaceinvoke r0.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("factory-bean");

        if $z7 == 0 goto label18;

        $r17 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("factory-bean");

        virtualinvoke r4.<org.springframework.beans.factory.support.AbstractBeanDefinition: void setFactoryBeanName(java.lang.String)>($r17);

     label18:
        return r4;
    }

    protected org.springframework.beans.factory.support.AbstractBeanDefinition createBeanDefinition(java.lang.String, java.lang.String) throws java.lang.ClassNotFoundException
    {
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate r2;
        org.springframework.beans.factory.xml.XmlReaderContext $r3;
        org.springframework.beans.factory.support.AbstractBeanDefinition $r5;
        java.lang.String r0, r1;
        java.lang.ClassLoader $r4;

        r2 := @this: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate;

        r1 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        $r3 = r2.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.xml.XmlReaderContext readerContext>;

        $r4 = virtualinvoke $r3.<org.springframework.beans.factory.xml.XmlReaderContext: java.lang.ClassLoader getBeanClassLoader()>();

        $r5 = staticinvoke <org.springframework.beans.factory.support.BeanDefinitionReaderUtils: org.springframework.beans.factory.support.AbstractBeanDefinition createBeanDefinition(java.lang.String,java.lang.String,java.lang.ClassLoader)>(r0, r1, $r4);

        return $r5;
    }

    public void parseMetaElements(org.w3c.dom.Element, org.springframework.beans.BeanMetadataAttributeAccessor)
    {
        org.w3c.dom.NodeList $r1;
        org.springframework.beans.BeanMetadataAttribute $r7;
        org.w3c.dom.Element r0, r4;
        org.springframework.beans.BeanMetadataAttributeAccessor r9;
        org.w3c.dom.Node $r2;
        int i0, $i1;
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate r3;
        java.lang.Object $r8;
        java.lang.String $r5, $r6;
        boolean $z0, $z1;

        r3 := @this: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate;

        r0 := @parameter0: org.w3c.dom.Element;

        r9 := @parameter1: org.springframework.beans.BeanMetadataAttributeAccessor;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.NodeList getChildNodes()>();

        i0 = 0;

        goto label3;

     label1:
        $r2 = interfaceinvoke $r1.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i0);

        $z0 = specialinvoke r3.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: boolean isCandidateElement(org.w3c.dom.Node)>($r2);

        if $z0 == 0 goto label2;

        $z1 = virtualinvoke r3.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: boolean nodeNameEquals(org.w3c.dom.Node,java.lang.String)>($r2, "meta");

        if $z1 == 0 goto label2;

        r4 = (org.w3c.dom.Element) $r2;

        $r5 = interfaceinvoke r4.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("key");

        $r6 = interfaceinvoke r4.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("value");

        $r7 = new org.springframework.beans.BeanMetadataAttribute;

        specialinvoke $r7.<org.springframework.beans.BeanMetadataAttribute: void <init>(java.lang.String,java.lang.Object)>($r5, $r6);

        $r8 = virtualinvoke r3.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.Object extractSource(org.w3c.dom.Element)>(r4);

        virtualinvoke $r7.<org.springframework.beans.BeanMetadataAttribute: void setSource(java.lang.Object)>($r8);

        virtualinvoke r9.<org.springframework.beans.BeanMetadataAttributeAccessor: void addMetadataAttribute(org.springframework.beans.BeanMetadataAttribute)>($r7);

     label2:
        i0 = i0 + 1;

     label3:
        $i1 = interfaceinvoke $r1.<org.w3c.dom.NodeList: int getLength()>();

        if i0 < $i1 goto label1;

        return;
    }

    public int getAutowireMode(java.lang.String)
    {
        org.springframework.beans.factory.xml.DocumentDefaultsDefinition $r7;
        byte b0;
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate r6;
        java.lang.String r0, $r1, $r2, $r3, $r4, $r5, r8;
        boolean $z0, $z1, $z2, $z3, $z4;

        r6 := @this: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate;

        r0 := @parameter0: java.lang.String;

        r8 = r0;

        $r1 = "default";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        $r7 = r6.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.xml.DocumentDefaultsDefinition defaults>;

        r8 = virtualinvoke $r7.<org.springframework.beans.factory.xml.DocumentDefaultsDefinition: java.lang.String getAutowire()>();

     label1:
        b0 = 0;

        $r2 = "byName";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r8);

        if $z1 == 0 goto label2;

        b0 = 1;

        goto label5;

     label2:
        $r3 = "byType";

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r8);

        if $z2 == 0 goto label3;

        b0 = 2;

        goto label5;

     label3:
        $r4 = "constructor";

        $z3 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r8);

        if $z3 == 0 goto label4;

        b0 = 3;

        goto label5;

     label4:
        $r5 = "autodetect";

        $z4 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r8);

        if $z4 == 0 goto label5;

        b0 = 4;

     label5:
        return b0;
    }

    public int getDependencyCheck(java.lang.String)
    {
        org.springframework.beans.factory.xml.DocumentDefaultsDefinition $r6;
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate r5;
        java.lang.String r0, $r1, $r2, $r3, $r4, r7;
        boolean $z0, $z1, $z2, $z3;

        r5 := @this: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate;

        r0 := @parameter0: java.lang.String;

        r7 = r0;

        $r1 = "default";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        $r6 = r5.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.xml.DocumentDefaultsDefinition defaults>;

        r7 = virtualinvoke $r6.<org.springframework.beans.factory.xml.DocumentDefaultsDefinition: java.lang.String getDependencyCheck()>();

     label1:
        $r2 = "all";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r7);

        if $z1 == 0 goto label2;

        return 3;

     label2:
        $r3 = "objects";

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r7);

        if $z2 == 0 goto label3;

        return 1;

     label3:
        $r4 = "simple";

        $z3 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r7);

        if $z3 == 0 goto label4;

        return 2;

     label4:
        return 0;
    }

    public void parseConstructorArgElements(org.w3c.dom.Element, org.springframework.beans.factory.config.BeanDefinition)
    {
        org.w3c.dom.NodeList $r1;
        org.w3c.dom.Element r0, $r5;
        org.w3c.dom.Node $r2;
        int i0, $i1;
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate r3;
        org.springframework.beans.factory.config.BeanDefinition r4;
        boolean $z0, $z1;

        r3 := @this: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate;

        r0 := @parameter0: org.w3c.dom.Element;

        r4 := @parameter1: org.springframework.beans.factory.config.BeanDefinition;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.NodeList getChildNodes()>();

        i0 = 0;

        goto label3;

     label1:
        $r2 = interfaceinvoke $r1.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i0);

        $z0 = specialinvoke r3.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: boolean isCandidateElement(org.w3c.dom.Node)>($r2);

        if $z0 == 0 goto label2;

        $z1 = virtualinvoke r3.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: boolean nodeNameEquals(org.w3c.dom.Node,java.lang.String)>($r2, "constructor-arg");

        if $z1 == 0 goto label2;

        $r5 = (org.w3c.dom.Element) $r2;

        virtualinvoke r3.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: void parseConstructorArgElement(org.w3c.dom.Element,org.springframework.beans.factory.config.BeanDefinition)>($r5, r4);

     label2:
        i0 = i0 + 1;

     label3:
        $i1 = interfaceinvoke $r1.<org.w3c.dom.NodeList: int getLength()>();

        if i0 < $i1 goto label1;

        return;
    }

    public void parsePropertyElements(org.w3c.dom.Element, org.springframework.beans.factory.config.BeanDefinition)
    {
        org.w3c.dom.NodeList $r1;
        org.w3c.dom.Element r0, $r5;
        org.w3c.dom.Node $r2;
        int i0, $i1;
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate r3;
        org.springframework.beans.factory.config.BeanDefinition r4;
        boolean $z0, $z1;

        r3 := @this: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate;

        r0 := @parameter0: org.w3c.dom.Element;

        r4 := @parameter1: org.springframework.beans.factory.config.BeanDefinition;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.NodeList getChildNodes()>();

        i0 = 0;

        goto label3;

     label1:
        $r2 = interfaceinvoke $r1.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i0);

        $z0 = specialinvoke r3.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: boolean isCandidateElement(org.w3c.dom.Node)>($r2);

        if $z0 == 0 goto label2;

        $z1 = virtualinvoke r3.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: boolean nodeNameEquals(org.w3c.dom.Node,java.lang.String)>($r2, "property");

        if $z1 == 0 goto label2;

        $r5 = (org.w3c.dom.Element) $r2;

        virtualinvoke r3.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: void parsePropertyElement(org.w3c.dom.Element,org.springframework.beans.factory.config.BeanDefinition)>($r5, r4);

     label2:
        i0 = i0 + 1;

     label3:
        $i1 = interfaceinvoke $r1.<org.w3c.dom.NodeList: int getLength()>();

        if i0 < $i1 goto label1;

        return;
    }

    public void parseQualifierElements(org.w3c.dom.Element, org.springframework.beans.factory.support.AbstractBeanDefinition)
    {
        org.w3c.dom.NodeList $r1;
        org.springframework.beans.factory.support.AbstractBeanDefinition r4;
        org.w3c.dom.Element r0, $r5;
        org.w3c.dom.Node $r2;
        int i0, $i1;
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate r3;
        boolean $z0, $z1;

        r3 := @this: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate;

        r0 := @parameter0: org.w3c.dom.Element;

        r4 := @parameter1: org.springframework.beans.factory.support.AbstractBeanDefinition;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.NodeList getChildNodes()>();

        i0 = 0;

        goto label3;

     label1:
        $r2 = interfaceinvoke $r1.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i0);

        $z0 = specialinvoke r3.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: boolean isCandidateElement(org.w3c.dom.Node)>($r2);

        if $z0 == 0 goto label2;

        $z1 = virtualinvoke r3.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: boolean nodeNameEquals(org.w3c.dom.Node,java.lang.String)>($r2, "qualifier");

        if $z1 == 0 goto label2;

        $r5 = (org.w3c.dom.Element) $r2;

        virtualinvoke r3.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: void parseQualifierElement(org.w3c.dom.Element,org.springframework.beans.factory.support.AbstractBeanDefinition)>($r5, r4);

     label2:
        i0 = i0 + 1;

     label3:
        $i1 = interfaceinvoke $r1.<org.w3c.dom.NodeList: int getLength()>();

        if i0 < $i1 goto label1;

        return;
    }

    public void parseLookupOverrideSubElements(org.w3c.dom.Element, org.springframework.beans.factory.support.MethodOverrides)
    {
        org.w3c.dom.NodeList $r1;
        org.springframework.beans.factory.support.MethodOverrides r9;
        org.springframework.beans.factory.support.LookupOverride $r7;
        org.w3c.dom.Element r0, r4;
        org.w3c.dom.Node $r2;
        int i0, $i1;
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate r3;
        java.lang.Object $r8;
        java.lang.String $r5, $r6;
        boolean $z0, $z1;

        r3 := @this: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate;

        r0 := @parameter0: org.w3c.dom.Element;

        r9 := @parameter1: org.springframework.beans.factory.support.MethodOverrides;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.NodeList getChildNodes()>();

        i0 = 0;

        goto label3;

     label1:
        $r2 = interfaceinvoke $r1.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i0);

        $z0 = specialinvoke r3.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: boolean isCandidateElement(org.w3c.dom.Node)>($r2);

        if $z0 == 0 goto label2;

        $z1 = virtualinvoke r3.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: boolean nodeNameEquals(org.w3c.dom.Node,java.lang.String)>($r2, "lookup-method");

        if $z1 == 0 goto label2;

        r4 = (org.w3c.dom.Element) $r2;

        $r5 = interfaceinvoke r4.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("name");

        $r6 = interfaceinvoke r4.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("bean");

        $r7 = new org.springframework.beans.factory.support.LookupOverride;

        specialinvoke $r7.<org.springframework.beans.factory.support.LookupOverride: void <init>(java.lang.String,java.lang.String)>($r5, $r6);

        $r8 = virtualinvoke r3.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.Object extractSource(org.w3c.dom.Element)>(r4);

        virtualinvoke $r7.<org.springframework.beans.factory.support.LookupOverride: void setSource(java.lang.Object)>($r8);

        virtualinvoke r9.<org.springframework.beans.factory.support.MethodOverrides: void addOverride(org.springframework.beans.factory.support.MethodOverride)>($r7);

     label2:
        i0 = i0 + 1;

     label3:
        $i1 = interfaceinvoke $r1.<org.w3c.dom.NodeList: int getLength()>();

        if i0 < $i1 goto label1;

        return;
    }

    public void parseReplacedMethodSubElements(org.w3c.dom.Element, org.springframework.beans.factory.support.MethodOverrides)
    {
        org.springframework.beans.factory.support.MethodOverrides r14;
        org.w3c.dom.Node $r2;
        int i0, $i1;
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate r3;
        java.lang.String $r5, $r6, $r12;
        boolean $z0, $z1, $z2;
        org.w3c.dom.NodeList $r1;
        java.util.Iterator $r9;
        org.springframework.beans.factory.support.ReplaceOverride $r7;
        java.util.List $r8;
        org.w3c.dom.Element r0, r4, r11;
        java.lang.Object $r10, $r13;

        r3 := @this: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate;

        r0 := @parameter0: org.w3c.dom.Element;

        r14 := @parameter1: org.springframework.beans.factory.support.MethodOverrides;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.NodeList getChildNodes()>();

        i0 = 0;

        goto label5;

     label1:
        $r2 = interfaceinvoke $r1.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i0);

        $z0 = specialinvoke r3.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: boolean isCandidateElement(org.w3c.dom.Node)>($r2);

        if $z0 == 0 goto label4;

        $z1 = virtualinvoke r3.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: boolean nodeNameEquals(org.w3c.dom.Node,java.lang.String)>($r2, "replaced-method");

        if $z1 == 0 goto label4;

        r4 = (org.w3c.dom.Element) $r2;

        $r5 = interfaceinvoke r4.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("name");

        $r6 = interfaceinvoke r4.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("replacer");

        $r7 = new org.springframework.beans.factory.support.ReplaceOverride;

        specialinvoke $r7.<org.springframework.beans.factory.support.ReplaceOverride: void <init>(java.lang.String,java.lang.String)>($r5, $r6);

        $r8 = staticinvoke <org.springframework.util.xml.DomUtils: java.util.List getChildElementsByTagName(org.w3c.dom.Element,java.lang.String)>(r4, "arg-type");

        $r9 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

        goto label3;

     label2:
        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r11 = (org.w3c.dom.Element) $r10;

        $r12 = interfaceinvoke r11.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("match");

        virtualinvoke $r7.<org.springframework.beans.factory.support.ReplaceOverride: void addTypeIdentifier(java.lang.String)>($r12);

     label3:
        $z2 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z2 != 0 goto label2;

        $r13 = virtualinvoke r3.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.Object extractSource(org.w3c.dom.Element)>(r4);

        virtualinvoke $r7.<org.springframework.beans.factory.support.ReplaceOverride: void setSource(java.lang.Object)>($r13);

        virtualinvoke r14.<org.springframework.beans.factory.support.MethodOverrides: void addOverride(org.springframework.beans.factory.support.MethodOverride)>($r7);

     label4:
        i0 = i0 + 1;

     label5:
        $i1 = interfaceinvoke $r1.<org.w3c.dom.NodeList: int getLength()>();

        if i0 < $i1 goto label1;

        return;
    }

    public void parseConstructorArgElement(org.w3c.dom.Element, org.springframework.beans.factory.config.BeanDefinition)
    {
        org.springframework.beans.factory.parsing.ConstructorArgumentEntry $r5, $r13;
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.StringBuilder $r21, $r22;
        java.lang.Throwable $r24, $r27;
        org.springframework.beans.factory.config.ConstructorArgumentValues $r11, $r18, $r19;
        org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder $r9, $r16;
        int $i0;
        org.springframework.beans.factory.config.BeanDefinition r7;
        java.lang.String $r1, $r2, $r3, $r23;
        java.lang.NumberFormatException $r26;
        org.springframework.beans.factory.parsing.ParseState $r6, $r12, $r14, $r20, $r25, $r28;
        org.w3c.dom.Element r0;
        java.lang.Object $r8, $r10, $r15, $r17;

        r4 := @this: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate;

        r0 := @parameter0: org.w3c.dom.Element;

        r7 := @parameter1: org.springframework.beans.factory.config.BeanDefinition;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("index");

        $r2 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("type");

        $r3 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("name");

        $z0 = staticinvoke <org.springframework.util.StringUtils: boolean hasLength(java.lang.String)>($r1);

        if $z0 == 0 goto label10;

     label01:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

        if $i0 >= 0 goto label02;

        virtualinvoke r4.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: void error(java.lang.String,org.w3c.dom.Element)>("\'index\' cannot be lower than 0", r0);

        goto label15;

     label02:
        $r14 = r4.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.parsing.ParseState parseState>;

        $r13 = new org.springframework.beans.factory.parsing.ConstructorArgumentEntry;

        specialinvoke $r13.<org.springframework.beans.factory.parsing.ConstructorArgumentEntry: void <init>(int)>($i0);

        virtualinvoke $r14.<org.springframework.beans.factory.parsing.ParseState: void push(org.springframework.beans.factory.parsing.ParseState$Entry)>($r13);

        $r15 = virtualinvoke r4.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.Object parsePropertyValue(org.w3c.dom.Element,org.springframework.beans.factory.config.BeanDefinition,java.lang.String)>(r0, r7, null);

        $r16 = new org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder;

        specialinvoke $r16.<org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder: void <init>(java.lang.Object)>($r15);

        $z3 = staticinvoke <org.springframework.util.StringUtils: boolean hasLength(java.lang.String)>($r2);

        if $z3 == 0 goto label03;

        virtualinvoke $r16.<org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder: void setType(java.lang.String)>($r2);

     label03:
        $z4 = staticinvoke <org.springframework.util.StringUtils: boolean hasLength(java.lang.String)>($r3);

        if $z4 == 0 goto label04;

        virtualinvoke $r16.<org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder: void setName(java.lang.String)>($r3);

     label04:
        $r17 = virtualinvoke r4.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.Object extractSource(org.w3c.dom.Element)>(r0);

        virtualinvoke $r16.<org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder: void setSource(java.lang.Object)>($r17);

        $r18 = interfaceinvoke r7.<org.springframework.beans.factory.config.BeanDefinition: org.springframework.beans.factory.config.ConstructorArgumentValues getConstructorArgumentValues()>();

        $z5 = virtualinvoke $r18.<org.springframework.beans.factory.config.ConstructorArgumentValues: boolean hasIndexedArgumentValue(int)>($i0);

        if $z5 == 0 goto label05;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>(java.lang.String)>("Ambiguous constructor-arg entries for index ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: void error(java.lang.String,org.w3c.dom.Element)>($r23, r0);

        goto label07;

     label05:
        $r19 = interfaceinvoke r7.<org.springframework.beans.factory.config.BeanDefinition: org.springframework.beans.factory.config.ConstructorArgumentValues getConstructorArgumentValues()>();

        virtualinvoke $r19.<org.springframework.beans.factory.config.ConstructorArgumentValues: void addIndexedArgumentValue(int,org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder)>($i0, $r16);

        goto label07;

     label06:
        $r27 := @caughtexception;

        $r28 = r4.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.parsing.ParseState parseState>;

        virtualinvoke $r28.<org.springframework.beans.factory.parsing.ParseState: void pop()>();

        throw $r27;

     label07:
        $r20 = r4.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.parsing.ParseState parseState>;

        virtualinvoke $r20.<org.springframework.beans.factory.parsing.ParseState: void pop()>();

     label08:
        goto label15;

     label09:
        $r26 := @caughtexception;

        virtualinvoke r4.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: void error(java.lang.String,org.w3c.dom.Element)>("Attribute \'index\' of tag \'constructor-arg\' must be an integer", r0);

        goto label15;

     label10:
        $r6 = r4.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.parsing.ParseState parseState>;

        $r5 = new org.springframework.beans.factory.parsing.ConstructorArgumentEntry;

        specialinvoke $r5.<org.springframework.beans.factory.parsing.ConstructorArgumentEntry: void <init>()>();

        virtualinvoke $r6.<org.springframework.beans.factory.parsing.ParseState: void push(org.springframework.beans.factory.parsing.ParseState$Entry)>($r5);

        $r8 = virtualinvoke r4.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.Object parsePropertyValue(org.w3c.dom.Element,org.springframework.beans.factory.config.BeanDefinition,java.lang.String)>(r0, r7, null);

        $r9 = new org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder;

        specialinvoke $r9.<org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder: void <init>(java.lang.Object)>($r8);

        $z1 = staticinvoke <org.springframework.util.StringUtils: boolean hasLength(java.lang.String)>($r2);

        if $z1 == 0 goto label11;

        virtualinvoke $r9.<org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder: void setType(java.lang.String)>($r2);

     label11:
        $z2 = staticinvoke <org.springframework.util.StringUtils: boolean hasLength(java.lang.String)>($r3);

        if $z2 == 0 goto label12;

        virtualinvoke $r9.<org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder: void setName(java.lang.String)>($r3);

     label12:
        $r10 = virtualinvoke r4.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.Object extractSource(org.w3c.dom.Element)>(r0);

        virtualinvoke $r9.<org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder: void setSource(java.lang.Object)>($r10);

        $r11 = interfaceinvoke r7.<org.springframework.beans.factory.config.BeanDefinition: org.springframework.beans.factory.config.ConstructorArgumentValues getConstructorArgumentValues()>();

        virtualinvoke $r11.<org.springframework.beans.factory.config.ConstructorArgumentValues: void addGenericArgumentValue(org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder)>($r9);

        goto label14;

     label13:
        $r24 := @caughtexception;

        $r25 = r4.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.parsing.ParseState parseState>;

        virtualinvoke $r25.<org.springframework.beans.factory.parsing.ParseState: void pop()>();

        throw $r24;

     label14:
        $r12 = r4.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.parsing.ParseState parseState>;

        virtualinvoke $r12.<org.springframework.beans.factory.parsing.ParseState: void pop()>();

     label15:
        return;

        catch java.lang.Throwable from label02 to label06 with label06;
        catch java.lang.NumberFormatException from label01 to label08 with label09;
        catch java.lang.Throwable from label10 to label13 with label13;
    }

    public void parsePropertyElement(org.w3c.dom.Element, org.springframework.beans.factory.config.BeanDefinition)
    {
        java.lang.Throwable $r17;
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate r2;
        org.springframework.beans.factory.config.BeanDefinition r5;
        java.lang.String $r1, $r15;
        boolean $z0, $z1;
        org.springframework.beans.factory.parsing.PropertyEntry $r3;
        org.springframework.beans.PropertyValue $r8;
        org.springframework.beans.MutablePropertyValues $r6, $r10;
        org.springframework.beans.factory.parsing.ParseState $r4, $r11, $r16, $r18;
        org.w3c.dom.Element r0;
        java.lang.Object $r7, $r9;
        java.lang.StringBuilder $r12, $r13, $r14;

        r2 := @this: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate;

        r0 := @parameter0: org.w3c.dom.Element;

        r5 := @parameter1: org.springframework.beans.factory.config.BeanDefinition;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("name");

        $z0 = staticinvoke <org.springframework.util.StringUtils: boolean hasLength(java.lang.String)>($r1);

        if $z0 != 0 goto label1;

        virtualinvoke r2.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: void error(java.lang.String,org.w3c.dom.Element)>("Tag \'property\' must have a \'name\' attribute", r0);

        return;

     label1:
        $r4 = r2.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.parsing.ParseState parseState>;

        $r3 = new org.springframework.beans.factory.parsing.PropertyEntry;

        specialinvoke $r3.<org.springframework.beans.factory.parsing.PropertyEntry: void <init>(java.lang.String)>($r1);

        virtualinvoke $r4.<org.springframework.beans.factory.parsing.ParseState: void push(org.springframework.beans.factory.parsing.ParseState$Entry)>($r3);

     label2:
        $r6 = interfaceinvoke r5.<org.springframework.beans.factory.config.BeanDefinition: org.springframework.beans.MutablePropertyValues getPropertyValues()>();

        $z1 = virtualinvoke $r6.<org.springframework.beans.MutablePropertyValues: boolean contains(java.lang.String)>($r1);

        if $z1 == 0 goto label4;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("Multiple \'property\' definitions for property \'");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: void error(java.lang.String,org.w3c.dom.Element)>($r15, r0);

     label3:
        $r16 = r2.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.parsing.ParseState parseState>;

        virtualinvoke $r16.<org.springframework.beans.factory.parsing.ParseState: void pop()>();

        return;

     label4:
        $r7 = virtualinvoke r2.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.Object parsePropertyValue(org.w3c.dom.Element,org.springframework.beans.factory.config.BeanDefinition,java.lang.String)>(r0, r5, $r1);

        $r8 = new org.springframework.beans.PropertyValue;

        specialinvoke $r8.<org.springframework.beans.PropertyValue: void <init>(java.lang.String,java.lang.Object)>($r1, $r7);

        virtualinvoke r2.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: void parseMetaElements(org.w3c.dom.Element,org.springframework.beans.BeanMetadataAttributeAccessor)>(r0, $r8);

        $r9 = virtualinvoke r2.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.Object extractSource(org.w3c.dom.Element)>(r0);

        virtualinvoke $r8.<org.springframework.beans.PropertyValue: void setSource(java.lang.Object)>($r9);

        $r10 = interfaceinvoke r5.<org.springframework.beans.factory.config.BeanDefinition: org.springframework.beans.MutablePropertyValues getPropertyValues()>();

        virtualinvoke $r10.<org.springframework.beans.MutablePropertyValues: org.springframework.beans.MutablePropertyValues addPropertyValue(org.springframework.beans.PropertyValue)>($r8);

        goto label6;

     label5:
        $r17 := @caughtexception;

        $r18 = r2.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.parsing.ParseState parseState>;

        virtualinvoke $r18.<org.springframework.beans.factory.parsing.ParseState: void pop()>();

        throw $r17;

     label6:
        $r11 = r2.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.parsing.ParseState parseState>;

        virtualinvoke $r11.<org.springframework.beans.factory.parsing.ParseState: void pop()>();

        return;

        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label4 to label5 with label5;
    }

    public void parseQualifierElement(org.w3c.dom.Element, org.springframework.beans.factory.support.AbstractBeanDefinition)
    {
        java.lang.Throwable $r19;
        org.springframework.beans.factory.support.AutowireCandidateQualifier $r5;
        org.springframework.beans.factory.support.AbstractBeanDefinition r16;
        org.springframework.beans.BeanMetadataAttribute $r14;
        org.springframework.beans.factory.parsing.QualifierEntry $r3;
        org.w3c.dom.Node $r9;
        int i0, $i1;
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate r2;
        java.lang.String $r1, $r7, $r11, $r12, $r18;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.w3c.dom.NodeList $r8;
        org.springframework.beans.factory.parsing.ParseState $r4, $r13, $r17, $r20;
        org.w3c.dom.Element r0, r10;
        java.lang.Object $r6, $r15;

        r2 := @this: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate;

        r0 := @parameter0: org.w3c.dom.Element;

        r16 := @parameter1: org.springframework.beans.factory.support.AbstractBeanDefinition;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("type");

        $z0 = staticinvoke <org.springframework.util.StringUtils: boolean hasLength(java.lang.String)>($r1);

        if $z0 != 0 goto label01;

        virtualinvoke r2.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: void error(java.lang.String,org.w3c.dom.Element)>("Tag \'qualifier\' must have a \'type\' attribute", r0);

        return;

     label01:
        $r4 = r2.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.parsing.ParseState parseState>;

        $r3 = new org.springframework.beans.factory.parsing.QualifierEntry;

        specialinvoke $r3.<org.springframework.beans.factory.parsing.QualifierEntry: void <init>(java.lang.String)>($r1);

        virtualinvoke $r4.<org.springframework.beans.factory.parsing.ParseState: void push(org.springframework.beans.factory.parsing.ParseState$Entry)>($r3);

     label02:
        $r5 = new org.springframework.beans.factory.support.AutowireCandidateQualifier;

        specialinvoke $r5.<org.springframework.beans.factory.support.AutowireCandidateQualifier: void <init>(java.lang.String)>($r1);

        $r6 = virtualinvoke r2.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.Object extractSource(org.w3c.dom.Element)>(r0);

        virtualinvoke $r5.<org.springframework.beans.factory.support.AutowireCandidateQualifier: void setSource(java.lang.Object)>($r6);

        $r7 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("value");

        $z1 = staticinvoke <org.springframework.util.StringUtils: boolean hasLength(java.lang.String)>($r7);

        if $z1 == 0 goto label03;

        $r18 = <org.springframework.beans.factory.support.AutowireCandidateQualifier: java.lang.String VALUE_KEY>;

        virtualinvoke $r5.<org.springframework.beans.factory.support.AutowireCandidateQualifier: void setAttribute(java.lang.String,java.lang.Object)>($r18, $r7);

     label03:
        $r8 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.NodeList getChildNodes()>();

        i0 = 0;

        goto label08;

     label04:
        $r9 = interfaceinvoke $r8.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i0);

        $z2 = specialinvoke r2.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: boolean isCandidateElement(org.w3c.dom.Node)>($r9);

        if $z2 == 0 goto label07;

        $z3 = virtualinvoke r2.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: boolean nodeNameEquals(org.w3c.dom.Node,java.lang.String)>($r9, "attribute");

        if $z3 == 0 goto label07;

        r10 = (org.w3c.dom.Element) $r9;

        $r11 = interfaceinvoke r10.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("key");

        $r12 = interfaceinvoke r10.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("value");

        $z4 = staticinvoke <org.springframework.util.StringUtils: boolean hasLength(java.lang.String)>($r11);

        if $z4 == 0 goto label05;

        $z5 = staticinvoke <org.springframework.util.StringUtils: boolean hasLength(java.lang.String)>($r12);

        if $z5 == 0 goto label05;

        $r14 = new org.springframework.beans.BeanMetadataAttribute;

        specialinvoke $r14.<org.springframework.beans.BeanMetadataAttribute: void <init>(java.lang.String,java.lang.Object)>($r11, $r12);

        $r15 = virtualinvoke r2.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.Object extractSource(org.w3c.dom.Element)>(r10);

        virtualinvoke $r14.<org.springframework.beans.BeanMetadataAttribute: void setSource(java.lang.Object)>($r15);

        virtualinvoke $r5.<org.springframework.beans.factory.support.AutowireCandidateQualifier: void addMetadataAttribute(org.springframework.beans.BeanMetadataAttribute)>($r14);

        goto label07;

     label05:
        virtualinvoke r2.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: void error(java.lang.String,org.w3c.dom.Element)>("Qualifier \'attribute\' tag must have a \'name\' and \'value\'", r10);

     label06:
        $r13 = r2.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.parsing.ParseState parseState>;

        virtualinvoke $r13.<org.springframework.beans.factory.parsing.ParseState: void pop()>();

        return;

     label07:
        i0 = i0 + 1;

     label08:
        $i1 = interfaceinvoke $r8.<org.w3c.dom.NodeList: int getLength()>();

        if i0 < $i1 goto label04;

        virtualinvoke r16.<org.springframework.beans.factory.support.AbstractBeanDefinition: void addQualifier(org.springframework.beans.factory.support.AutowireCandidateQualifier)>($r5);

        goto label10;

     label09:
        $r19 := @caughtexception;

        $r20 = r2.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.parsing.ParseState parseState>;

        virtualinvoke $r20.<org.springframework.beans.factory.parsing.ParseState: void pop()>();

        throw $r19;

     label10:
        $r17 = r2.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.parsing.ParseState parseState>;

        virtualinvoke $r17.<org.springframework.beans.factory.parsing.ParseState: void pop()>();

        return;

        catch java.lang.Throwable from label02 to label06 with label09;
        catch java.lang.Throwable from label07 to label09 with label09;
    }

    public java.lang.Object parsePropertyValue(org.w3c.dom.Element, org.springframework.beans.factory.config.BeanDefinition, java.lang.String)
    {
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.springframework.beans.factory.config.RuntimeBeanReference $r20;
        java.lang.StringBuilder $r6, $r8, $r10, $r12, $r22, $r24, $r26, $r28, $r30, $r31, $r32;
        org.w3c.dom.Node $r4;
        int i0, $i1;
        org.springframework.beans.factory.config.BeanDefinition r14;
        java.lang.String r0, r1, $r7, $r9, $r11, $r13, $r17, $r19, $r23, $r25, $r27, $r29, $r33;
        org.w3c.dom.NodeList $r3;
        org.w3c.dom.Element r2, r34;
        org.springframework.beans.factory.config.TypedStringValue $r16;
        java.lang.Object $r15, $r18, $r21;

        r5 := @this: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate;

        r2 := @parameter0: org.w3c.dom.Element;

        r14 := @parameter1: org.springframework.beans.factory.config.BeanDefinition;

        r0 := @parameter2: java.lang.String;

        if r0 == null goto label01;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>(java.lang.String)>("<property> element for property \'");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label02;

     label01:
        $r33 = "<constructor-arg> element";

     label02:
        r1 = $r33;

        $r3 = interfaceinvoke r2.<org.w3c.dom.Element: org.w3c.dom.NodeList getChildNodes()>();

        r34 = null;

        i0 = 0;

        goto label06;

     label03:
        $r4 = interfaceinvoke $r3.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i0);

        $z0 = $r4 instanceof org.w3c.dom.Element;

        if $z0 == 0 goto label05;

        $z1 = virtualinvoke r5.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: boolean nodeNameEquals(org.w3c.dom.Node,java.lang.String)>($r4, "description");

        if $z1 != 0 goto label05;

        $z2 = virtualinvoke r5.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: boolean nodeNameEquals(org.w3c.dom.Node,java.lang.String)>($r4, "meta");

        if $z2 != 0 goto label05;

        if r34 == null goto label04;

        $r6 = new java.lang.StringBuilder;

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>($r7);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" must not contain more than one sub-element");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r5.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: void error(java.lang.String,org.w3c.dom.Element)>($r9, r2);

        goto label05;

     label04:
        r34 = (org.w3c.dom.Element) $r4;

     label05:
        i0 = i0 + 1;

     label06:
        $i1 = interfaceinvoke $r3.<org.w3c.dom.NodeList: int getLength()>();

        if i0 < $i1 goto label03;

        $z3 = interfaceinvoke r2.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("ref");

        $z4 = interfaceinvoke r2.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("value");

        if $z3 == 0 goto label07;

        if $z4 != 0 goto label09;

     label07:
        if $z3 != 0 goto label08;

        if $z4 == 0 goto label10;

     label08:
        if r34 == null goto label10;

     label09:
        $r26 = new java.lang.StringBuilder;

        $r27 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        specialinvoke $r26.<java.lang.StringBuilder: void <init>(java.lang.String)>($r27);

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is only allowed to contain either \'ref\' attribute OR \'value\' attribute OR sub-element");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r5.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: void error(java.lang.String,org.w3c.dom.Element)>($r29, r2);

     label10:
        if $z3 == 0 goto label12;

        $r19 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("ref");

        $z5 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>($r19);

        if $z5 != 0 goto label11;

        $r22 = new java.lang.StringBuilder;

        $r23 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        specialinvoke $r22.<java.lang.StringBuilder: void <init>(java.lang.String)>($r23);

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" contains empty \'ref\' attribute");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r5.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: void error(java.lang.String,org.w3c.dom.Element)>($r25, r2);

     label11:
        $r20 = new org.springframework.beans.factory.config.RuntimeBeanReference;

        specialinvoke $r20.<org.springframework.beans.factory.config.RuntimeBeanReference: void <init>(java.lang.String)>($r19);

        $r21 = virtualinvoke r5.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.Object extractSource(org.w3c.dom.Element)>(r2);

        virtualinvoke $r20.<org.springframework.beans.factory.config.RuntimeBeanReference: void setSource(java.lang.Object)>($r21);

        return $r20;

     label12:
        if $z4 == 0 goto label13;

        $r16 = new org.springframework.beans.factory.config.TypedStringValue;

        $r17 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("value");

        specialinvoke $r16.<org.springframework.beans.factory.config.TypedStringValue: void <init>(java.lang.String)>($r17);

        $r18 = virtualinvoke r5.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.Object extractSource(org.w3c.dom.Element)>(r2);

        virtualinvoke $r16.<org.springframework.beans.factory.config.TypedStringValue: void setSource(java.lang.Object)>($r18);

        return $r16;

     label13:
        if r34 == null goto label14;

        $r15 = virtualinvoke r5.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.Object parsePropertySubElement(org.w3c.dom.Element,org.springframework.beans.factory.config.BeanDefinition)>(r34, r14);

        return $r15;

     label14:
        $r10 = new java.lang.StringBuilder;

        $r11 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>($r11);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" must specify a ref or value");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r5.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: void error(java.lang.String,org.w3c.dom.Element)>($r13, r2);

        return null;
    }

    public java.lang.Object parsePropertySubElement(org.w3c.dom.Element, org.springframework.beans.factory.config.BeanDefinition)
    {
        org.w3c.dom.Element r1;
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate r0;
        org.springframework.beans.factory.config.BeanDefinition r2;
        java.lang.Object $r3;

        r0 := @this: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate;

        r1 := @parameter0: org.w3c.dom.Element;

        r2 := @parameter1: org.springframework.beans.factory.config.BeanDefinition;

        $r3 = virtualinvoke r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.Object parsePropertySubElement(org.w3c.dom.Element,org.springframework.beans.factory.config.BeanDefinition,java.lang.String)>(r1, r2, null);

        return $r3;
    }

    public java.lang.Object parsePropertySubElement(org.w3c.dom.Element, org.springframework.beans.factory.config.BeanDefinition, java.lang.String)
    {
        java.util.Map $r9;
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, z14, $z15;
        org.springframework.beans.factory.config.RuntimeBeanReference $r19;
        java.util.Set $r10;
        java.util.List $r11;
        java.lang.StringBuilder $r2, $r4, $r5;
        org.springframework.beans.factory.config.BeanDefinitionHolder $r23, $r24, r25;
        org.springframework.beans.factory.config.BeanDefinition r8;
        java.lang.String $r3, $r6, r15, $r18, $r21, $r22, r26;
        java.util.Properties $r7;
        org.w3c.dom.Element r1;
        org.springframework.beans.factory.config.TypedStringValue $r13;
        java.lang.Object $r12, $r14, $r16, $r17, $r20;

        r0 := @this: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate;

        r1 := @parameter0: org.w3c.dom.Element;

        r8 := @parameter1: org.springframework.beans.factory.config.BeanDefinition;

        r15 := @parameter2: java.lang.String;

        $z0 = virtualinvoke r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: boolean isDefaultNamespace(org.w3c.dom.Node)>(r1);

        if $z0 != 0 goto label01;

        $r24 = specialinvoke r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.config.BeanDefinitionHolder parseNestedCustomElement(org.w3c.dom.Element,org.springframework.beans.factory.config.BeanDefinition)>(r1, r8);

        return $r24;

     label01:
        $z1 = virtualinvoke r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: boolean nodeNameEquals(org.w3c.dom.Node,java.lang.String)>(r1, "bean");

        if $z1 == 0 goto label03;

        $r23 = virtualinvoke r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.config.BeanDefinitionHolder parseBeanDefinitionElement(org.w3c.dom.Element,org.springframework.beans.factory.config.BeanDefinition)>(r1, r8);

        r25 = $r23;

        if $r23 == null goto label02;

        r25 = virtualinvoke r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.config.BeanDefinitionHolder decorateBeanDefinitionIfRequired(org.w3c.dom.Element,org.springframework.beans.factory.config.BeanDefinitionHolder,org.springframework.beans.factory.config.BeanDefinition)>(r1, $r23, r8);

     label02:
        return r25;

     label03:
        $z2 = virtualinvoke r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: boolean nodeNameEquals(org.w3c.dom.Node,java.lang.String)>(r1, "ref");

        if $z2 == 0 goto label06;

        $r18 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("bean");

        r26 = $r18;

        z14 = 0;

        $z11 = staticinvoke <org.springframework.util.StringUtils: boolean hasLength(java.lang.String)>($r18);

        if $z11 != 0 goto label04;

        $r21 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("local");

        r26 = $r21;

        $z12 = staticinvoke <org.springframework.util.StringUtils: boolean hasLength(java.lang.String)>($r21);

        if $z12 != 0 goto label04;

        $r22 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("parent");

        r26 = $r22;

        z14 = 1;

        $z13 = staticinvoke <org.springframework.util.StringUtils: boolean hasLength(java.lang.String)>($r22);

        if $z13 != 0 goto label04;

        virtualinvoke r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: void error(java.lang.String,org.w3c.dom.Element)>("\'bean\', \'local\' or \'parent\' is required for <ref> element", r1);

        return null;

     label04:
        $z15 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>(r26);

        if $z15 != 0 goto label05;

        virtualinvoke r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: void error(java.lang.String,org.w3c.dom.Element)>("<ref> element contains empty target attribute", r1);

        return null;

     label05:
        $r19 = new org.springframework.beans.factory.config.RuntimeBeanReference;

        specialinvoke $r19.<org.springframework.beans.factory.config.RuntimeBeanReference: void <init>(java.lang.String,boolean)>(r26, z14);

        $r20 = virtualinvoke r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.Object extractSource(org.w3c.dom.Element)>(r1);

        virtualinvoke $r19.<org.springframework.beans.factory.config.RuntimeBeanReference: void setSource(java.lang.Object)>($r20);

        return $r19;

     label06:
        $z3 = virtualinvoke r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: boolean nodeNameEquals(org.w3c.dom.Node,java.lang.String)>(r1, "idref");

        if $z3 == 0 goto label07;

        $r17 = virtualinvoke r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.Object parseIdRefElement(org.w3c.dom.Element)>(r1);

        return $r17;

     label07:
        $z4 = virtualinvoke r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: boolean nodeNameEquals(org.w3c.dom.Node,java.lang.String)>(r1, "value");

        if $z4 == 0 goto label08;

        $r16 = virtualinvoke r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.Object parseValueElement(org.w3c.dom.Element,java.lang.String)>(r1, r15);

        return $r16;

     label08:
        $z5 = virtualinvoke r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: boolean nodeNameEquals(org.w3c.dom.Node,java.lang.String)>(r1, "null");

        if $z5 == 0 goto label09;

        $r13 = new org.springframework.beans.factory.config.TypedStringValue;

        specialinvoke $r13.<org.springframework.beans.factory.config.TypedStringValue: void <init>(java.lang.String)>(null);

        $r14 = virtualinvoke r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.Object extractSource(org.w3c.dom.Element)>(r1);

        virtualinvoke $r13.<org.springframework.beans.factory.config.TypedStringValue: void setSource(java.lang.Object)>($r14);

        return $r13;

     label09:
        $z6 = virtualinvoke r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: boolean nodeNameEquals(org.w3c.dom.Node,java.lang.String)>(r1, "array");

        if $z6 == 0 goto label10;

        $r12 = virtualinvoke r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.Object parseArrayElement(org.w3c.dom.Element,org.springframework.beans.factory.config.BeanDefinition)>(r1, r8);

        return $r12;

     label10:
        $z7 = virtualinvoke r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: boolean nodeNameEquals(org.w3c.dom.Node,java.lang.String)>(r1, "list");

        if $z7 == 0 goto label11;

        $r11 = virtualinvoke r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.util.List parseListElement(org.w3c.dom.Element,org.springframework.beans.factory.config.BeanDefinition)>(r1, r8);

        return $r11;

     label11:
        $z8 = virtualinvoke r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: boolean nodeNameEquals(org.w3c.dom.Node,java.lang.String)>(r1, "set");

        if $z8 == 0 goto label12;

        $r10 = virtualinvoke r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.util.Set parseSetElement(org.w3c.dom.Element,org.springframework.beans.factory.config.BeanDefinition)>(r1, r8);

        return $r10;

     label12:
        $z9 = virtualinvoke r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: boolean nodeNameEquals(org.w3c.dom.Node,java.lang.String)>(r1, "map");

        if $z9 == 0 goto label13;

        $r9 = virtualinvoke r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.util.Map parseMapElement(org.w3c.dom.Element,org.springframework.beans.factory.config.BeanDefinition)>(r1, r8);

        return $r9;

     label13:
        $z10 = virtualinvoke r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: boolean nodeNameEquals(org.w3c.dom.Node,java.lang.String)>(r1, "props");

        if $z10 == 0 goto label14;

        $r7 = virtualinvoke r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.util.Properties parsePropsElement(org.w3c.dom.Element)>(r1);

        return $r7;

     label14:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("Unknown property sub-element: [");

        $r3 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getNodeName()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: void error(java.lang.String,org.w3c.dom.Element)>($r6, r1);

        return null;
    }

    public java.lang.Object parseIdRefElement(org.w3c.dom.Element)
    {
        org.w3c.dom.Element r0;
        org.springframework.beans.factory.config.RuntimeBeanNameReference $r2;
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate r3;
        java.lang.Object $r4;
        java.lang.String $r1, $r5, r6;
        boolean $z0, $z1, $z2;

        r3 := @this: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate;

        r0 := @parameter0: org.w3c.dom.Element;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("bean");

        r6 = $r1;

        $z0 = staticinvoke <org.springframework.util.StringUtils: boolean hasLength(java.lang.String)>($r1);

        if $z0 != 0 goto label1;

        $r5 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("local");

        r6 = $r5;

        $z2 = staticinvoke <org.springframework.util.StringUtils: boolean hasLength(java.lang.String)>($r5);

        if $z2 != 0 goto label1;

        virtualinvoke r3.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: void error(java.lang.String,org.w3c.dom.Element)>("Either \'bean\' or \'local\' is required for <idref> element", r0);

        return null;

     label1:
        $z1 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>(r6);

        if $z1 != 0 goto label2;

        virtualinvoke r3.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: void error(java.lang.String,org.w3c.dom.Element)>("<idref> element contains empty target attribute", r0);

        return null;

     label2:
        $r2 = new org.springframework.beans.factory.config.RuntimeBeanNameReference;

        specialinvoke $r2.<org.springframework.beans.factory.config.RuntimeBeanNameReference: void <init>(java.lang.String)>(r6);

        $r4 = virtualinvoke r3.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.Object extractSource(org.w3c.dom.Element)>(r0);

        virtualinvoke $r2.<org.springframework.beans.factory.config.RuntimeBeanNameReference: void setSource(java.lang.Object)>($r4);

        return $r2;
    }

    public java.lang.Object parseValueElement(org.w3c.dom.Element, java.lang.String)
    {
        org.w3c.dom.Element r0;
        org.springframework.beans.factory.config.TypedStringValue $r4;
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate r3;
        java.lang.Object $r5;
        java.lang.ClassNotFoundException $r7;
        java.lang.StringBuilder $r8, $r9, $r10;
        java.lang.String $r1, $r2, r6, $r11, r12;
        boolean $z0;

        r3 := @this: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate;

        r0 := @parameter0: org.w3c.dom.Element;

        r6 := @parameter1: java.lang.String;

        $r1 = staticinvoke <org.springframework.util.xml.DomUtils: java.lang.String getTextValue(org.w3c.dom.Element)>(r0);

        $r2 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("type");

        r12 = $r2;

        $z0 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>($r2);

        if $z0 != 0 goto label1;

        r12 = r6;

     label1:
        $r4 = virtualinvoke r3.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.config.TypedStringValue buildTypedStringValue(java.lang.String,java.lang.String)>($r1, r12);

        $r5 = virtualinvoke r3.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.Object extractSource(org.w3c.dom.Element)>(r0);

        virtualinvoke $r4.<org.springframework.beans.factory.config.TypedStringValue: void setSource(java.lang.Object)>($r5);

        virtualinvoke $r4.<org.springframework.beans.factory.config.TypedStringValue: void setSpecifiedTypeName(java.lang.String)>($r2);

     label2:
        return $r4;

     label3:
        $r7 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("Type class [");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] not found for <value> element");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: void error(java.lang.String,org.w3c.dom.Element,java.lang.Throwable)>($r11, r0, $r7);

        return $r1;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    protected org.springframework.beans.factory.config.TypedStringValue buildTypedStringValue(java.lang.String, java.lang.String) throws java.lang.ClassNotFoundException
    {
        org.springframework.beans.factory.xml.XmlReaderContext $r1;
        org.springframework.beans.factory.config.TypedStringValue $r4, $r7, $r8, r9;
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate r0;
        java.lang.Class $r6;
        java.lang.ClassLoader $r2;
        java.lang.String r3, r5;
        boolean $z0;

        r0 := @this: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate;

        r5 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r1 = r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.xml.XmlReaderContext readerContext>;

        $r2 = virtualinvoke $r1.<org.springframework.beans.factory.xml.XmlReaderContext: java.lang.ClassLoader getBeanClassLoader()>();

        $z0 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>(r3);

        if $z0 != 0 goto label1;

        $r8 = new org.springframework.beans.factory.config.TypedStringValue;

        specialinvoke $r8.<org.springframework.beans.factory.config.TypedStringValue: void <init>(java.lang.String)>(r5);

        r9 = $r8;

        goto label3;

     label1:
        if $r2 == null goto label2;

        $r6 = staticinvoke <org.springframework.util.ClassUtils: java.lang.Class forName(java.lang.String,java.lang.ClassLoader)>(r3, $r2);

        $r7 = new org.springframework.beans.factory.config.TypedStringValue;

        specialinvoke $r7.<org.springframework.beans.factory.config.TypedStringValue: void <init>(java.lang.String,java.lang.Class)>(r5, $r6);

        r9 = $r7;

        goto label3;

     label2:
        $r4 = new org.springframework.beans.factory.config.TypedStringValue;

        specialinvoke $r4.<org.springframework.beans.factory.config.TypedStringValue: void <init>(java.lang.String,java.lang.String)>(r5, r3);

        r9 = $r4;

     label3:
        return r9;
    }

    public java.lang.Object parseArrayElement(org.w3c.dom.Element, org.springframework.beans.factory.config.BeanDefinition)
    {
        org.w3c.dom.NodeList $r2;
        org.w3c.dom.Element r0;
        org.springframework.beans.factory.support.ManagedArray $r3;
        int $i0;
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate r4;
        org.springframework.beans.factory.config.BeanDefinition r6;
        java.lang.Object $r5;
        java.lang.String $r1;
        boolean $z0;

        r4 := @this: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate;

        r0 := @parameter0: org.w3c.dom.Element;

        r6 := @parameter1: org.springframework.beans.factory.config.BeanDefinition;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("value-type");

        $r2 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.NodeList getChildNodes()>();

        $r3 = new org.springframework.beans.factory.support.ManagedArray;

        $i0 = interfaceinvoke $r2.<org.w3c.dom.NodeList: int getLength()>();

        specialinvoke $r3.<org.springframework.beans.factory.support.ManagedArray: void <init>(java.lang.String,int)>($r1, $i0);

        $r5 = virtualinvoke r4.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.Object extractSource(org.w3c.dom.Element)>(r0);

        virtualinvoke $r3.<org.springframework.beans.factory.support.ManagedArray: void setSource(java.lang.Object)>($r5);

        virtualinvoke $r3.<org.springframework.beans.factory.support.ManagedArray: void setElementTypeName(java.lang.String)>($r1);

        $z0 = virtualinvoke r4.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: boolean parseMergeAttribute(org.w3c.dom.Element)>(r0);

        virtualinvoke $r3.<org.springframework.beans.factory.support.ManagedArray: void setMergeEnabled(boolean)>($z0);

        virtualinvoke r4.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: void parseCollectionElements(org.w3c.dom.NodeList,java.util.Collection,org.springframework.beans.factory.config.BeanDefinition,java.lang.String)>($r2, $r3, r6, $r1);

        return $r3;
    }

    public java.util.List parseListElement(org.w3c.dom.Element, org.springframework.beans.factory.config.BeanDefinition)
    {
        org.w3c.dom.NodeList $r2;
        org.springframework.beans.factory.support.ManagedList $r3;
        org.w3c.dom.Element r0;
        int $i0;
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate r4;
        org.springframework.beans.factory.config.BeanDefinition r6;
        java.lang.Object $r5;
        java.lang.String $r1;
        boolean $z0;

        r4 := @this: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate;

        r0 := @parameter0: org.w3c.dom.Element;

        r6 := @parameter1: org.springframework.beans.factory.config.BeanDefinition;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("value-type");

        $r2 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.NodeList getChildNodes()>();

        $r3 = new org.springframework.beans.factory.support.ManagedList;

        $i0 = interfaceinvoke $r2.<org.w3c.dom.NodeList: int getLength()>();

        specialinvoke $r3.<org.springframework.beans.factory.support.ManagedList: void <init>(int)>($i0);

        $r5 = virtualinvoke r4.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.Object extractSource(org.w3c.dom.Element)>(r0);

        virtualinvoke $r3.<org.springframework.beans.factory.support.ManagedList: void setSource(java.lang.Object)>($r5);

        virtualinvoke $r3.<org.springframework.beans.factory.support.ManagedList: void setElementTypeName(java.lang.String)>($r1);

        $z0 = virtualinvoke r4.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: boolean parseMergeAttribute(org.w3c.dom.Element)>(r0);

        virtualinvoke $r3.<org.springframework.beans.factory.support.ManagedList: void setMergeEnabled(boolean)>($z0);

        virtualinvoke r4.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: void parseCollectionElements(org.w3c.dom.NodeList,java.util.Collection,org.springframework.beans.factory.config.BeanDefinition,java.lang.String)>($r2, $r3, r6, $r1);

        return $r3;
    }

    public java.util.Set parseSetElement(org.w3c.dom.Element, org.springframework.beans.factory.config.BeanDefinition)
    {
        org.w3c.dom.NodeList $r2;
        org.springframework.beans.factory.support.ManagedSet $r3;
        org.w3c.dom.Element r0;
        int $i0;
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate r4;
        org.springframework.beans.factory.config.BeanDefinition r6;
        java.lang.Object $r5;
        java.lang.String $r1;
        boolean $z0;

        r4 := @this: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate;

        r0 := @parameter0: org.w3c.dom.Element;

        r6 := @parameter1: org.springframework.beans.factory.config.BeanDefinition;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("value-type");

        $r2 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.NodeList getChildNodes()>();

        $r3 = new org.springframework.beans.factory.support.ManagedSet;

        $i0 = interfaceinvoke $r2.<org.w3c.dom.NodeList: int getLength()>();

        specialinvoke $r3.<org.springframework.beans.factory.support.ManagedSet: void <init>(int)>($i0);

        $r5 = virtualinvoke r4.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.Object extractSource(org.w3c.dom.Element)>(r0);

        virtualinvoke $r3.<org.springframework.beans.factory.support.ManagedSet: void setSource(java.lang.Object)>($r5);

        virtualinvoke $r3.<org.springframework.beans.factory.support.ManagedSet: void setElementTypeName(java.lang.String)>($r1);

        $z0 = virtualinvoke r4.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: boolean parseMergeAttribute(org.w3c.dom.Element)>(r0);

        virtualinvoke $r3.<org.springframework.beans.factory.support.ManagedSet: void setMergeEnabled(boolean)>($z0);

        virtualinvoke r4.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: void parseCollectionElements(org.w3c.dom.NodeList,java.util.Collection,org.springframework.beans.factory.config.BeanDefinition,java.lang.String)>($r2, $r3, r6, $r1);

        return $r3;
    }

    protected void parseCollectionElements(org.w3c.dom.NodeList, java.util.Collection, org.springframework.beans.factory.config.BeanDefinition, java.lang.String)
    {
        org.w3c.dom.NodeList r0;
        java.util.Collection r3;
        org.w3c.dom.Element $r6;
        org.w3c.dom.Node $r1;
        int i0, $i1;
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate r2;
        org.springframework.beans.factory.config.BeanDefinition r4;
        java.lang.Object $r7;
        java.lang.String r5;
        boolean $z0, $z1;

        r2 := @this: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate;

        r0 := @parameter0: org.w3c.dom.NodeList;

        r3 := @parameter1: java.util.Collection;

        r4 := @parameter2: org.springframework.beans.factory.config.BeanDefinition;

        r5 := @parameter3: java.lang.String;

        i0 = 0;

        goto label3;

     label1:
        $r1 = interfaceinvoke r0.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i0);

        $z0 = $r1 instanceof org.w3c.dom.Element;

        if $z0 == 0 goto label2;

        $z1 = virtualinvoke r2.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: boolean nodeNameEquals(org.w3c.dom.Node,java.lang.String)>($r1, "description");

        if $z1 != 0 goto label2;

        $r6 = (org.w3c.dom.Element) $r1;

        $r7 = virtualinvoke r2.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.Object parsePropertySubElement(org.w3c.dom.Element,org.springframework.beans.factory.config.BeanDefinition,java.lang.String)>($r6, r4, r5);

        interfaceinvoke r3.<java.util.Collection: boolean add(java.lang.Object)>($r7);

     label2:
        i0 = i0 + 1;

     label3:
        $i1 = interfaceinvoke r0.<org.w3c.dom.NodeList: int getLength()>();

        if i0 < $i1 goto label1;

        return;
    }

    public java.util.Map parseMapElement(org.w3c.dom.Element, org.springframework.beans.factory.config.BeanDefinition)
    {
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        org.springframework.beans.factory.config.RuntimeBeanReference $r14, $r18;
        java.util.List $r3;
        org.w3c.dom.Node $r11;
        int $i0, i1, $i2;
        org.springframework.beans.factory.config.BeanDefinition r12;
        java.lang.String $r1, $r2, $r13, $r16, $r17, $r20;
        org.springframework.beans.factory.support.ManagedMap $r4;
        org.w3c.dom.NodeList $r10;
        java.util.Iterator $r7;
        org.w3c.dom.Element r0, r9, r21, r22, r23;
        java.lang.Object $r6, $r8, $r15, $r19, r24, r25;

        r5 := @this: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate;

        r0 := @parameter0: org.w3c.dom.Element;

        r12 := @parameter1: org.springframework.beans.factory.config.BeanDefinition;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("key-type");

        $r2 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("value-type");

        $r3 = staticinvoke <org.springframework.util.xml.DomUtils: java.util.List getChildElementsByTagName(org.w3c.dom.Element,java.lang.String)>(r0, "entry");

        $r4 = new org.springframework.beans.factory.support.ManagedMap;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        specialinvoke $r4.<org.springframework.beans.factory.support.ManagedMap: void <init>(int)>($i0);

        $r6 = virtualinvoke r5.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.Object extractSource(org.w3c.dom.Element)>(r0);

        virtualinvoke $r4.<org.springframework.beans.factory.support.ManagedMap: void setSource(java.lang.Object)>($r6);

        virtualinvoke $r4.<org.springframework.beans.factory.support.ManagedMap: void setKeyTypeName(java.lang.String)>($r1);

        virtualinvoke $r4.<org.springframework.beans.factory.support.ManagedMap: void setValueTypeName(java.lang.String)>($r2);

        $z0 = virtualinvoke r5.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: boolean parseMergeAttribute(org.w3c.dom.Element)>(r0);

        virtualinvoke $r4.<org.springframework.beans.factory.support.ManagedMap: void setMergeEnabled(boolean)>($z0);

        $r7 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

        goto label26;

     label01:
        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (org.w3c.dom.Element) $r8;

        $r10 = interfaceinvoke r9.<org.w3c.dom.Element: org.w3c.dom.NodeList getChildNodes()>();

        r21 = null;

        r22 = null;

        i1 = 0;

        goto label07;

     label02:
        $r11 = interfaceinvoke $r10.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i1);

        $z1 = $r11 instanceof org.w3c.dom.Element;

        if $z1 == 0 goto label06;

        r23 = (org.w3c.dom.Element) $r11;

        $z2 = virtualinvoke r5.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: boolean nodeNameEquals(org.w3c.dom.Node,java.lang.String)>(r23, "key");

        if $z2 == 0 goto label04;

        if r21 == null goto label03;

        virtualinvoke r5.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: void error(java.lang.String,org.w3c.dom.Element)>("<entry> element is only allowed to contain one <key> sub-element", r9);

        goto label06;

     label03:
        r21 = r23;

        goto label06;

     label04:
        $z3 = virtualinvoke r5.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: boolean nodeNameEquals(org.w3c.dom.Node,java.lang.String)>(r23, "description");

        if $z3 != 0 goto label06;

        if r22 == null goto label05;

        virtualinvoke r5.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: void error(java.lang.String,org.w3c.dom.Element)>("<entry> element must not contain more than one value sub-element", r9);

        goto label06;

     label05:
        r22 = r23;

     label06:
        i1 = i1 + 1;

     label07:
        $i2 = interfaceinvoke $r10.<org.w3c.dom.NodeList: int getLength()>();

        if i1 < $i2 goto label02;

        r24 = null;

        $z4 = interfaceinvoke r9.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("key");

        $z5 = interfaceinvoke r9.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("key-ref");

        if $z4 == 0 goto label08;

        if $z5 != 0 goto label10;

     label08:
        if $z4 != 0 goto label09;

        if $z5 == 0 goto label11;

     label09:
        if r21 == null goto label11;

     label10:
        virtualinvoke r5.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: void error(java.lang.String,org.w3c.dom.Element)>("<entry> element is only allowed to contain either a \'key\' attribute OR a \'key-ref\' attribute OR a <key> sub-element", r9);

     label11:
        if $z4 == 0 goto label12;

        $r20 = interfaceinvoke r9.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("key");

        r24 = virtualinvoke r5.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.Object buildTypedStringValueForMap(java.lang.String,java.lang.String,org.w3c.dom.Element)>($r20, $r1, r9);

        goto label16;

     label12:
        if $z5 == 0 goto label14;

        $r17 = interfaceinvoke r9.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("key-ref");

        $z7 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>($r17);

        if $z7 != 0 goto label13;

        virtualinvoke r5.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: void error(java.lang.String,org.w3c.dom.Element)>("<entry> element contains empty \'key-ref\' attribute", r9);

     label13:
        $r18 = new org.springframework.beans.factory.config.RuntimeBeanReference;

        specialinvoke $r18.<org.springframework.beans.factory.config.RuntimeBeanReference: void <init>(java.lang.String)>($r17);

        $r19 = virtualinvoke r5.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.Object extractSource(org.w3c.dom.Element)>(r9);

        virtualinvoke $r18.<org.springframework.beans.factory.config.RuntimeBeanReference: void setSource(java.lang.Object)>($r19);

        r24 = $r18;

        goto label16;

     label14:
        if r21 == null goto label15;

        r24 = virtualinvoke r5.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.Object parseKeyElement(org.w3c.dom.Element,org.springframework.beans.factory.config.BeanDefinition,java.lang.String)>(r21, r12, $r1);

        goto label16;

     label15:
        virtualinvoke r5.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: void error(java.lang.String,org.w3c.dom.Element)>("<entry> element must specify a key", r9);

     label16:
        r25 = null;

        $z8 = interfaceinvoke r9.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("value");

        $z9 = interfaceinvoke r9.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("value-ref");

        if $z8 == 0 goto label17;

        if $z9 != 0 goto label19;

     label17:
        if $z8 != 0 goto label18;

        if $z9 == 0 goto label20;

     label18:
        if r22 == null goto label20;

     label19:
        virtualinvoke r5.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: void error(java.lang.String,org.w3c.dom.Element)>("<entry> element is only allowed to contain either \'value\' attribute OR \'value-ref\' attribute OR <value> sub-element", r9);

     label20:
        if $z8 == 0 goto label21;

        $r16 = interfaceinvoke r9.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("value");

        r25 = virtualinvoke r5.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.Object buildTypedStringValueForMap(java.lang.String,java.lang.String,org.w3c.dom.Element)>($r16, $r2, r9);

        goto label25;

     label21:
        if $z9 == 0 goto label23;

        $r13 = interfaceinvoke r9.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("value-ref");

        $z6 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>($r13);

        if $z6 != 0 goto label22;

        virtualinvoke r5.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: void error(java.lang.String,org.w3c.dom.Element)>("<entry> element contains empty \'value-ref\' attribute", r9);

     label22:
        $r14 = new org.springframework.beans.factory.config.RuntimeBeanReference;

        specialinvoke $r14.<org.springframework.beans.factory.config.RuntimeBeanReference: void <init>(java.lang.String)>($r13);

        $r15 = virtualinvoke r5.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.Object extractSource(org.w3c.dom.Element)>(r9);

        virtualinvoke $r14.<org.springframework.beans.factory.config.RuntimeBeanReference: void setSource(java.lang.Object)>($r15);

        r25 = $r14;

        goto label25;

     label23:
        if r22 == null goto label24;

        r25 = virtualinvoke r5.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.Object parsePropertySubElement(org.w3c.dom.Element,org.springframework.beans.factory.config.BeanDefinition,java.lang.String)>(r22, r12, $r2);

        goto label25;

     label24:
        virtualinvoke r5.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: void error(java.lang.String,org.w3c.dom.Element)>("<entry> element must specify a value", r9);

     label25:
        virtualinvoke $r4.<org.springframework.beans.factory.support.ManagedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r24, r25);

     label26:
        $z10 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z10 != 0 goto label01;

        return $r4;
    }

    protected final java.lang.Object buildTypedStringValueForMap(java.lang.String, java.lang.String, org.w3c.dom.Element)
    {
        org.w3c.dom.Element r4;
        org.springframework.beans.factory.config.TypedStringValue $r3;
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate r0;
        java.lang.Object $r5;
        java.lang.ClassNotFoundException $r6;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String r1, r2, $r10;

        r0 := @this: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r4 := @parameter2: org.w3c.dom.Element;

     label1:
        $r3 = virtualinvoke r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.config.TypedStringValue buildTypedStringValue(java.lang.String,java.lang.String)>(r1, r2);

        $r5 = virtualinvoke r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.Object extractSource(org.w3c.dom.Element)>(r4);

        virtualinvoke $r3.<org.springframework.beans.factory.config.TypedStringValue: void setSource(java.lang.Object)>($r5);

     label2:
        return $r3;

     label3:
        $r6 := @caughtexception;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("Type class [");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] not found for Map key/value type");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: void error(java.lang.String,org.w3c.dom.Element,java.lang.Throwable)>($r10, r4, $r6);

        return r1;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    protected java.lang.Object parseKeyElement(org.w3c.dom.Element, org.springframework.beans.factory.config.BeanDefinition, java.lang.String)
    {
        org.w3c.dom.NodeList $r1;
        org.w3c.dom.Element r0, r7;
        org.w3c.dom.Node $r2;
        int i0, $i1;
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate r3;
        org.springframework.beans.factory.config.BeanDefinition r4;
        java.lang.Object $r6;
        java.lang.String r5;
        boolean $z0;

        r3 := @this: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate;

        r0 := @parameter0: org.w3c.dom.Element;

        r4 := @parameter1: org.springframework.beans.factory.config.BeanDefinition;

        r5 := @parameter2: java.lang.String;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.NodeList getChildNodes()>();

        r7 = null;

        i0 = 0;

        goto label4;

     label1:
        $r2 = interfaceinvoke $r1.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i0);

        $z0 = $r2 instanceof org.w3c.dom.Element;

        if $z0 == 0 goto label3;

        if r7 == null goto label2;

        virtualinvoke r3.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: void error(java.lang.String,org.w3c.dom.Element)>("<key> element must not contain more than one value sub-element", r0);

        goto label3;

     label2:
        r7 = (org.w3c.dom.Element) $r2;

     label3:
        i0 = i0 + 1;

     label4:
        $i1 = interfaceinvoke $r1.<org.w3c.dom.NodeList: int getLength()>();

        if i0 < $i1 goto label1;

        $r6 = virtualinvoke r3.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.Object parsePropertySubElement(org.w3c.dom.Element,org.springframework.beans.factory.config.BeanDefinition,java.lang.String)>(r7, r4, r5);

        return $r6;
    }

    public java.util.Properties parsePropsElement(org.w3c.dom.Element)
    {
        org.springframework.beans.factory.support.ManagedProperties $r0;
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate r1;
        java.lang.String $r8, $r9, $r10;
        boolean $z0, $z1;
        java.util.Iterator $r5;
        java.util.List $r4;
        org.w3c.dom.Element r2, r7;
        org.springframework.beans.factory.config.TypedStringValue $r11, $r13;
        java.lang.Object $r3, $r6, $r12, $r14;

        r1 := @this: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate;

        r2 := @parameter0: org.w3c.dom.Element;

        $r0 = new org.springframework.beans.factory.support.ManagedProperties;

        specialinvoke $r0.<org.springframework.beans.factory.support.ManagedProperties: void <init>()>();

        $r3 = virtualinvoke r1.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.Object extractSource(org.w3c.dom.Element)>(r2);

        virtualinvoke $r0.<org.springframework.beans.factory.support.ManagedProperties: void setSource(java.lang.Object)>($r3);

        $z0 = virtualinvoke r1.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: boolean parseMergeAttribute(org.w3c.dom.Element)>(r2);

        virtualinvoke $r0.<org.springframework.beans.factory.support.ManagedProperties: void setMergeEnabled(boolean)>($z0);

        $r4 = staticinvoke <org.springframework.util.xml.DomUtils: java.util.List getChildElementsByTagName(org.w3c.dom.Element,java.lang.String)>(r2, "prop");

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.w3c.dom.Element) $r6;

        $r8 = interfaceinvoke r7.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("key");

        $r9 = staticinvoke <org.springframework.util.xml.DomUtils: java.lang.String getTextValue(org.w3c.dom.Element)>(r7);

        $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String trim()>();

        $r11 = new org.springframework.beans.factory.config.TypedStringValue;

        specialinvoke $r11.<org.springframework.beans.factory.config.TypedStringValue: void <init>(java.lang.String)>($r8);

        $r12 = virtualinvoke r1.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.Object extractSource(org.w3c.dom.Element)>(r7);

        virtualinvoke $r11.<org.springframework.beans.factory.config.TypedStringValue: void setSource(java.lang.Object)>($r12);

        $r13 = new org.springframework.beans.factory.config.TypedStringValue;

        specialinvoke $r13.<org.springframework.beans.factory.config.TypedStringValue: void <init>(java.lang.String)>($r10);

        $r14 = virtualinvoke r1.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.Object extractSource(org.w3c.dom.Element)>(r7);

        virtualinvoke $r13.<org.springframework.beans.factory.config.TypedStringValue: void setSource(java.lang.Object)>($r14);

        virtualinvoke $r0.<org.springframework.beans.factory.support.ManagedProperties: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r13);

     label2:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label1;

        return $r0;
    }

    public boolean parseMergeAttribute(org.w3c.dom.Element)
    {
        org.springframework.beans.factory.xml.DocumentDefaultsDefinition $r5;
        org.w3c.dom.Element r0;
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate r4;
        java.lang.String $r1, $r2, $r3, r6;
        boolean $z0, $z1;

        r4 := @this: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate;

        r0 := @parameter0: org.w3c.dom.Element;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("merge");

        r6 = $r1;

        $r2 = "default";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $r5 = r4.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.xml.DocumentDefaultsDefinition defaults>;

        r6 = virtualinvoke $r5.<org.springframework.beans.factory.xml.DocumentDefaultsDefinition: java.lang.String getMerge()>();

     label1:
        $r3 = "true";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        return $z1;
    }

    public org.springframework.beans.factory.config.BeanDefinition parseCustomElement(org.w3c.dom.Element)
    {
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate r0;
        org.springframework.beans.factory.config.BeanDefinition $r2;
        org.w3c.dom.Element r1;

        r0 := @this: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate;

        r1 := @parameter0: org.w3c.dom.Element;

        $r2 = virtualinvoke r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.config.BeanDefinition parseCustomElement(org.w3c.dom.Element,org.springframework.beans.factory.config.BeanDefinition)>(r1, null);

        return $r2;
    }

    public org.springframework.beans.factory.config.BeanDefinition parseCustomElement(org.w3c.dom.Element, org.springframework.beans.factory.config.BeanDefinition)
    {
        org.springframework.beans.factory.xml.NamespaceHandlerResolver $r4;
        org.springframework.beans.factory.xml.XmlReaderContext $r3, $r8;
        org.w3c.dom.Element r1;
        org.springframework.beans.factory.xml.ParserContext $r6;
        org.springframework.beans.factory.xml.NamespaceHandler $r5;
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate r0;
        org.springframework.beans.factory.config.BeanDefinition r7, $r9;
        java.lang.StringBuilder $r10, $r11, $r12;
        java.lang.String $r2, $r13;

        r0 := @this: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate;

        r1 := @parameter0: org.w3c.dom.Element;

        r7 := @parameter1: org.springframework.beans.factory.config.BeanDefinition;

        $r2 = virtualinvoke r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String getNamespaceURI(org.w3c.dom.Node)>(r1);

        $r3 = r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.xml.XmlReaderContext readerContext>;

        $r4 = virtualinvoke $r3.<org.springframework.beans.factory.xml.XmlReaderContext: org.springframework.beans.factory.xml.NamespaceHandlerResolver getNamespaceHandlerResolver()>();

        $r5 = interfaceinvoke $r4.<org.springframework.beans.factory.xml.NamespaceHandlerResolver: org.springframework.beans.factory.xml.NamespaceHandler resolve(java.lang.String)>($r2);

        if $r5 != null goto label1;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("Unable to locate Spring NamespaceHandler for XML schema namespace [");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: void error(java.lang.String,org.w3c.dom.Element)>($r13, r1);

        return null;

     label1:
        $r6 = new org.springframework.beans.factory.xml.ParserContext;

        $r8 = r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.xml.XmlReaderContext readerContext>;

        specialinvoke $r6.<org.springframework.beans.factory.xml.ParserContext: void <init>(org.springframework.beans.factory.xml.XmlReaderContext,org.springframework.beans.factory.xml.BeanDefinitionParserDelegate,org.springframework.beans.factory.config.BeanDefinition)>($r8, r0, r7);

        $r9 = interfaceinvoke $r5.<org.springframework.beans.factory.xml.NamespaceHandler: org.springframework.beans.factory.config.BeanDefinition parse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)>(r1, $r6);

        return $r9;
    }

    public org.springframework.beans.factory.config.BeanDefinitionHolder decorateBeanDefinitionIfRequired(org.w3c.dom.Element, org.springframework.beans.factory.config.BeanDefinitionHolder)
    {
        org.springframework.beans.factory.config.BeanDefinitionHolder r2, $r3;
        org.w3c.dom.Element r1;
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate r0;

        r0 := @this: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate;

        r1 := @parameter0: org.w3c.dom.Element;

        r2 := @parameter1: org.springframework.beans.factory.config.BeanDefinitionHolder;

        $r3 = virtualinvoke r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.config.BeanDefinitionHolder decorateBeanDefinitionIfRequired(org.w3c.dom.Element,org.springframework.beans.factory.config.BeanDefinitionHolder,org.springframework.beans.factory.config.BeanDefinition)>(r1, r2, null);

        return $r3;
    }

    public org.springframework.beans.factory.config.BeanDefinitionHolder decorateBeanDefinitionIfRequired(org.w3c.dom.Element, org.springframework.beans.factory.config.BeanDefinitionHolder, org.springframework.beans.factory.config.BeanDefinition)
    {
        org.w3c.dom.NodeList $r6;
        org.springframework.beans.factory.config.BeanDefinitionHolder r0, r8;
        short $s1;
        org.w3c.dom.Element r1;
        org.w3c.dom.Node $r3, $r7;
        int $i0, i2, i3, $i4;
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate r4;
        org.springframework.beans.factory.config.BeanDefinition r5;
        org.w3c.dom.NamedNodeMap $r2;

        r4 := @this: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate;

        r1 := @parameter0: org.w3c.dom.Element;

        r0 := @parameter1: org.springframework.beans.factory.config.BeanDefinitionHolder;

        r5 := @parameter2: org.springframework.beans.factory.config.BeanDefinition;

        r8 = r0;

        $r2 = interfaceinvoke r1.<org.w3c.dom.Element: org.w3c.dom.NamedNodeMap getAttributes()>();

        i2 = 0;

        goto label2;

     label1:
        $r3 = interfaceinvoke $r2.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node item(int)>(i2);

        r8 = specialinvoke r4.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.config.BeanDefinitionHolder decorateIfRequired(org.w3c.dom.Node,org.springframework.beans.factory.config.BeanDefinitionHolder,org.springframework.beans.factory.config.BeanDefinition)>($r3, r8, r5);

        i2 = i2 + 1;

     label2:
        $i0 = interfaceinvoke $r2.<org.w3c.dom.NamedNodeMap: int getLength()>();

        if i2 < $i0 goto label1;

        $r6 = interfaceinvoke r1.<org.w3c.dom.Element: org.w3c.dom.NodeList getChildNodes()>();

        i3 = 0;

        goto label5;

     label3:
        $r7 = interfaceinvoke $r6.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i3);

        $s1 = interfaceinvoke $r7.<org.w3c.dom.Node: short getNodeType()>();

        if $s1 != 1 goto label4;

        r8 = specialinvoke r4.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.config.BeanDefinitionHolder decorateIfRequired(org.w3c.dom.Node,org.springframework.beans.factory.config.BeanDefinitionHolder,org.springframework.beans.factory.config.BeanDefinition)>($r7, r8, r5);

     label4:
        i3 = i3 + 1;

     label5:
        $i4 = interfaceinvoke $r6.<org.w3c.dom.NodeList: int getLength()>();

        if i3 < $i4 goto label3;

        return r8;
    }

    private org.springframework.beans.factory.config.BeanDefinitionHolder decorateIfRequired(org.w3c.dom.Node, org.springframework.beans.factory.config.BeanDefinitionHolder, org.springframework.beans.factory.config.BeanDefinition)
    {
        org.springframework.beans.factory.xml.NamespaceHandlerResolver $r5;
        org.springframework.beans.factory.xml.XmlReaderContext $r4, $r19;
        org.springframework.beans.factory.config.BeanDefinitionHolder r3, $r20;
        org.w3c.dom.Node r1;
        org.springframework.beans.factory.xml.ParserContext $r17;
        org.springframework.beans.factory.xml.NamespaceHandler $r6;
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate r0;
        org.springframework.beans.factory.config.BeanDefinition r18;
        java.lang.String $r2, $r12, $r16;
        boolean $z0, $z1, $z2;
        org.apache.commons.logging.Log $r7, $r9;
        java.lang.StringBuilder $r8, $r10, $r11, $r13, $r14, $r15;

        r0 := @this: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate;

        r1 := @parameter0: org.w3c.dom.Node;

        r3 := @parameter1: org.springframework.beans.factory.config.BeanDefinitionHolder;

        r18 := @parameter2: org.springframework.beans.factory.config.BeanDefinition;

        $r2 = virtualinvoke r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String getNamespaceURI(org.w3c.dom.Node)>(r1);

        $z0 = virtualinvoke r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: boolean isDefaultNamespace(java.lang.String)>($r2);

        if $z0 != 0 goto label3;

        $r4 = r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.xml.XmlReaderContext readerContext>;

        $r5 = virtualinvoke $r4.<org.springframework.beans.factory.xml.XmlReaderContext: org.springframework.beans.factory.xml.NamespaceHandlerResolver getNamespaceHandlerResolver()>();

        $r6 = interfaceinvoke $r5.<org.springframework.beans.factory.xml.NamespaceHandlerResolver: org.springframework.beans.factory.xml.NamespaceHandler resolve(java.lang.String)>($r2);

        if $r6 == null goto label1;

        $r17 = new org.springframework.beans.factory.xml.ParserContext;

        $r19 = r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.xml.XmlReaderContext readerContext>;

        specialinvoke $r17.<org.springframework.beans.factory.xml.ParserContext: void <init>(org.springframework.beans.factory.xml.XmlReaderContext,org.springframework.beans.factory.xml.BeanDefinitionParserDelegate,org.springframework.beans.factory.config.BeanDefinition)>($r19, r0, r18);

        $r20 = interfaceinvoke $r6.<org.springframework.beans.factory.xml.NamespaceHandler: org.springframework.beans.factory.config.BeanDefinitionHolder decorate(org.w3c.dom.Node,org.springframework.beans.factory.config.BeanDefinitionHolder,org.springframework.beans.factory.xml.ParserContext)>(r1, r3, $r17);

        return $r20;

     label1:
        if $r2 == null goto label2;

        $z2 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("http://www.springframework.org/");

        if $z2 == 0 goto label2;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>("Unable to locate Spring NamespaceHandler for XML schema namespace [");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: void error(java.lang.String,org.w3c.dom.Node)>($r16, r1);

        goto label3;

     label2:
        $r7 = r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.apache.commons.logging.Log logger>;

        $z1 = interfaceinvoke $r7.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z1 == 0 goto label3;

        $r9 = r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.apache.commons.logging.Log logger>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("No Spring NamespaceHandler found for XML schema namespace [");

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r9.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r12);

     label3:
        return r3;
    }

    private org.springframework.beans.factory.config.BeanDefinitionHolder parseNestedCustomElement(org.w3c.dom.Element, org.springframework.beans.factory.config.BeanDefinition)
    {
        org.springframework.beans.factory.config.BeanDefinitionHolder $r12;
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate r0;
        org.springframework.beans.factory.config.BeanDefinition r2, $r3;
        java.lang.String $r5, $r6, $r8, $r10, $r17, $r20, $r22, $r26;
        boolean $z0;
        org.w3c.dom.Element r1;
        java.lang.StringBuilder $r4, $r7, $r9, $r13, $r15, $r16, $r18, $r19, $r21, $r23, $r24, $r25;
        org.apache.commons.logging.Log $r11, $r14;

        r0 := @this: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate;

        r1 := @parameter0: org.w3c.dom.Element;

        r2 := @parameter1: org.springframework.beans.factory.config.BeanDefinition;

        $r3 = virtualinvoke r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.config.BeanDefinition parseCustomElement(org.w3c.dom.Element,org.springframework.beans.factory.config.BeanDefinition)>(r1, r2);

        if $r3 != null goto label1;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>(java.lang.String)>("Incorrect usage of element \'");

        $r22 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getNodeName()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' in a nested manner. ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("This tag cannot be used nested inside <property>.");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: void error(java.lang.String,org.w3c.dom.Element)>($r26, r1);

        return null;

     label1:
        $r4 = new java.lang.StringBuilder;

        $r5 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getNodeName()>();

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#");

        $r8 = staticinvoke <org.springframework.util.ObjectUtils: java.lang.String getIdentityHexString(java.lang.Object)>($r3);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.apache.commons.logging.Log logger>;

        $z0 = interfaceinvoke $r11.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label2;

        $r14 = r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.apache.commons.logging.Log logger>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>("Using generated bean name [");

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] for nested custom element \'");

        $r17 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getNodeName()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r14.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r20);

     label2:
        $r12 = new org.springframework.beans.factory.config.BeanDefinitionHolder;

        specialinvoke $r12.<org.springframework.beans.factory.config.BeanDefinitionHolder: void <init>(org.springframework.beans.factory.config.BeanDefinition,java.lang.String)>($r3, $r10);

        return $r12;
    }

    public java.lang.String getNamespaceURI(org.w3c.dom.Node)
    {
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate r2;
        java.lang.String $r1;
        org.w3c.dom.Node r0;

        r2 := @this: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate;

        r0 := @parameter0: org.w3c.dom.Node;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Node: java.lang.String getNamespaceURI()>();

        return $r1;
    }

    public java.lang.String getLocalName(org.w3c.dom.Node)
    {
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate r2;
        java.lang.String $r1;
        org.w3c.dom.Node r0;

        r2 := @this: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate;

        r0 := @parameter0: org.w3c.dom.Node;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Node: java.lang.String getLocalName()>();

        return $r1;
    }

    public boolean nodeNameEquals(org.w3c.dom.Node, java.lang.String)
    {
        org.w3c.dom.Node r1;
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate r3;
        java.lang.String r0, $r2, $r4;
        boolean $z0, $z1;

        r3 := @this: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate;

        r1 := @parameter0: org.w3c.dom.Node;

        r0 := @parameter1: java.lang.String;

        $r2 = interfaceinvoke r1.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label1;

        $r4 = virtualinvoke r3.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String getLocalName(org.w3c.dom.Node)>(r1);

        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z1 != 0 goto label1;

        return 0;

     label1:
        return 1;
    }

    public boolean isDefaultNamespace(java.lang.String)
    {
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate r2;
        java.lang.String r0, $r1;
        boolean $z0, $z1;

        r2 := @this: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <org.springframework.util.StringUtils: boolean hasLength(java.lang.String)>(r0);

        if $z0 == 0 goto label1;

        $r1 = "http://www.springframework.org/schema/beans";

        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 != 0 goto label1;

        return 0;

     label1:
        return 1;
    }

    public boolean isDefaultNamespace(org.w3c.dom.Node)
    {
        org.w3c.dom.Node r1;
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate r0;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate;

        r1 := @parameter0: org.w3c.dom.Node;

        $r2 = virtualinvoke r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String getNamespaceURI(org.w3c.dom.Node)>(r1);

        $z0 = virtualinvoke r0.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: boolean isDefaultNamespace(java.lang.String)>($r2);

        return $z0;
    }

    private boolean isCandidateElement(org.w3c.dom.Node)
    {
        org.w3c.dom.Node r0, $r2;
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate r1;
        boolean $z0, $z1, $z2;

        r1 := @this: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate;

        r0 := @parameter0: org.w3c.dom.Node;

        $z0 = r0 instanceof org.w3c.dom.Element;

        if $z0 == 0 goto label2;

        $z1 = virtualinvoke r1.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: boolean isDefaultNamespace(org.w3c.dom.Node)>(r0);

        if $z1 != 0 goto label1;

        $r2 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

        $z2 = virtualinvoke r1.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: boolean isDefaultNamespace(org.w3c.dom.Node)>($r2);

        if $z2 != 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public static void <clinit>()
    {
        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String DEFAULT_DESTROY_METHOD_ATTRIBUTE> = "default-destroy-method";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String DEFAULT_INIT_METHOD_ATTRIBUTE> = "default-init-method";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String DEFAULT_AUTOWIRE_CANDIDATES_ATTRIBUTE> = "default-autowire-candidates";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String DEFAULT_DEPENDENCY_CHECK_ATTRIBUTE> = "default-dependency-check";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String DEFAULT_AUTOWIRE_ATTRIBUTE> = "default-autowire";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String DEFAULT_MERGE_ATTRIBUTE> = "default-merge";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String DEFAULT_LAZY_INIT_ATTRIBUTE> = "default-lazy-init";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String QUALIFIER_ATTRIBUTE_ELEMENT> = "attribute";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String QUALIFIER_ELEMENT> = "qualifier";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String MERGE_ATTRIBUTE> = "merge";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String PROP_ELEMENT> = "prop";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String PROPS_ELEMENT> = "props";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String VALUE_REF_ATTRIBUTE> = "value-ref";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String KEY_REF_ATTRIBUTE> = "key-ref";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String KEY_ATTRIBUTE> = "key";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String KEY_ELEMENT> = "key";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String ENTRY_ELEMENT> = "entry";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String MAP_ELEMENT> = "map";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String SET_ELEMENT> = "set";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String LIST_ELEMENT> = "list";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String ARRAY_ELEMENT> = "array";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String NULL_ELEMENT> = "null";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String VALUE_ELEMENT> = "value";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String PARENT_REF_ATTRIBUTE> = "parent";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String LOCAL_REF_ATTRIBUTE> = "local";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String BEAN_REF_ATTRIBUTE> = "bean";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String IDREF_ELEMENT> = "idref";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String REF_ELEMENT> = "ref";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String ARG_TYPE_MATCH_ATTRIBUTE> = "match";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String ARG_TYPE_ELEMENT> = "arg-type";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String REPLACER_ATTRIBUTE> = "replacer";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String REPLACED_METHOD_ELEMENT> = "replaced-method";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String LOOKUP_METHOD_ELEMENT> = "lookup-method";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String VALUE_ATTRIBUTE> = "value";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String REF_ATTRIBUTE> = "ref";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String PROPERTY_ELEMENT> = "property";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String KEY_TYPE_ATTRIBUTE> = "key-type";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String VALUE_TYPE_ATTRIBUTE> = "value-type";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String TYPE_ATTRIBUTE> = "type";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String INDEX_ATTRIBUTE> = "index";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String CONSTRUCTOR_ARG_ELEMENT> = "constructor-arg";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String FACTORY_BEAN_ATTRIBUTE> = "factory-bean";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String FACTORY_METHOD_ATTRIBUTE> = "factory-method";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String DESTROY_METHOD_ATTRIBUTE> = "destroy-method";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String INIT_METHOD_ATTRIBUTE> = "init-method";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String DEPENDS_ON_ATTRIBUTE> = "depends-on";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String DEPENDENCY_CHECK_ATTRIBUTE> = "dependency-check";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String PRIMARY_ATTRIBUTE> = "primary";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String AUTOWIRE_CANDIDATE_ATTRIBUTE> = "autowire-candidate";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String AUTOWIRE_ATTRIBUTE> = "autowire";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String LAZY_INIT_ATTRIBUTE> = "lazy-init";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String SINGLETON_ATTRIBUTE> = "singleton";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String SCOPE_ATTRIBUTE> = "scope";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String ABSTRACT_ATTRIBUTE> = "abstract";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String CLASS_ATTRIBUTE> = "class";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String PARENT_ATTRIBUTE> = "parent";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String ID_ATTRIBUTE> = "id";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String META_ELEMENT> = "meta";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String BEAN_ELEMENT> = "bean";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String NAME_ATTRIBUTE> = "name";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String DEPENDENCY_CHECK_OBJECTS_ATTRIBUTE_VALUE> = "objects";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String DEPENDENCY_CHECK_SIMPLE_ATTRIBUTE_VALUE> = "simple";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String DEPENDENCY_CHECK_ALL_ATTRIBUTE_VALUE> = "all";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String AUTOWIRE_AUTODETECT_VALUE> = "autodetect";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String AUTOWIRE_CONSTRUCTOR_VALUE> = "constructor";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String AUTOWIRE_BY_TYPE_VALUE> = "byType";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String AUTOWIRE_BY_NAME_VALUE> = "byName";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String DESCRIPTION_ELEMENT> = "description";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String DEFAULT_VALUE> = "default";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String TRUE_VALUE> = "true";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String BEAN_NAME_DELIMITERS> = ",; ";

        <org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String BEANS_NAMESPACE_URI> = "http://www.springframework.org/schema/beans";

        return;
    }
}
