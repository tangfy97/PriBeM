public class org.apache.poi.util.ArrayUtil extends java.lang.Object
{

    public void <init>()
    {
        org.apache.poi.util.ArrayUtil r0;

        r0 := @this: org.apache.poi.util.ArrayUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void arraycopy(byte[], int, byte[], int, int)
    {
        byte[] r0, r1;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r10, $r11, $r12, $r13, $r14, $r17, $r18, $r19, $r22, $r23, $r24, $r25, $r26, $r29, $r30, $r31, $r32, $r33, $r36, $r37, $r38;
        int i0, $i1, i2, $i3, $i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        java.lang.String $r8, $r15, $r20, $r27, $r34, $r39;
        java.lang.IllegalArgumentException $r2, $r9, $r16, $r21, $r28, $r35;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        r1 := @parameter2: byte[];

        i5 := @parameter3: int;

        i2 := @parameter4: int;

        if i0 >= 0 goto label1;

        $r35 = new java.lang.IllegalArgumentException;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("src_position was less than 0.  Actual value ");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r35.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r39);

        throw $r35;

     label1:
        $i1 = lengthof r0;

        if i0 < $i1 goto label2;

        $r28 = new java.lang.IllegalArgumentException;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("src_position was greater than src array size.  Tried to write starting at position ");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but the array length is ");

        $i14 = lengthof r0;

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r28.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r34);

        throw $r28;

     label2:
        $i4 = i0 + i2;

        $i3 = lengthof r0;

        if $i4 <= $i3 goto label3;

        $r21 = new java.lang.IllegalArgumentException;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("src_position + length would overrun the src array.  Expected end at ");

        $i12 = i0 + i2;

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" actual end at ");

        $i13 = lengthof r0;

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r27);

        throw $r21;

     label3:
        if i5 >= 0 goto label4;

        $r16 = new java.lang.IllegalArgumentException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dst_position was less than 0.  Actual value ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r20);

        throw $r16;

     label4:
        $i6 = lengthof r1;

        if i5 < $i6 goto label5;

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dst_position was greater than dst array size.  Tried to write starting at position ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but the array length is ");

        $i11 = lengthof r1;

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw $r9;

     label5:
        $i8 = i5 + i2;

        $i7 = lengthof r1;

        if $i8 <= $i7 goto label6;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dst_position + length would overrun the dst array.  Expected end at ");

        $i9 = i5 + i2;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" actual end at ");

        $i10 = lengthof r1;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r2;

     label6:
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, i0, r1, i5, i2);

        return;
    }

    public static void arrayMoveWithin(java.lang.Object[], int, int, int)
    {
        java.lang.Object[] r1, r3, r6;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16;
        java.lang.IllegalArgumentException $r0, $r2, $r4, $r5;

        r1 := @parameter0: java.lang.Object[];

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i0 := @parameter3: int;

        if i0 > 0 goto label01;

        return;

     label01:
        if i1 != i2 goto label02;

        return;

     label02:
        if i1 < 0 goto label03;

        $i3 = lengthof r1;

        if i1 < $i3 goto label04;

     label03:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The moveFrom must be a valid array index");

        throw $r0;

     label04:
        if i2 < 0 goto label05;

        $i4 = lengthof r1;

        if i2 < $i4 goto label06;

     label05:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The moveTo must be a valid array index");

        throw $r2;

     label06:
        $i6 = i1 + i0;

        $i5 = lengthof r1;

        if $i6 <= $i5 goto label07;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Asked to move more entries than the array has");

        throw $r5;

     label07:
        $i8 = i2 + i0;

        $i7 = lengthof r1;

        if $i8 <= $i7 goto label08;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Asked to move to a position that doesn\'t have enough space");

        throw $r4;

     label08:
        r3 = newarray (java.lang.Object)[i0];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i1, r3, 0, i0);

        if i1 <= i2 goto label09;

        $i14 = i1 - i2;

        r6 = newarray (java.lang.Object)[$i14];

        $i15 = lengthof r6;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i2, r6, 0, $i15);

        i16 = i2 + i0;

        goto label10;

     label09:
        $i9 = i2 - i1;

        r6 = newarray (java.lang.Object)[$i9];

        $i11 = i1 + i0;

        $i10 = lengthof r6;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, $i11, r6, 0, $i10);

        i16 = i1;

     label10:
        $i12 = lengthof r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, 0, r1, i2, $i12);

        $i13 = lengthof r6;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r6, 0, r1, i16, $i13);

        return;
    }

    public static byte[] copyOf(byte[], int)
    {
        byte[] r0, r1;
        int i0, $i1, $i2;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        r0 = newarray (byte)[i0];

        $i1 = lengthof r1;

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i1, i0);

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r0, 0, $i2);

        return r0;
    }

    public static java.lang.Object[] copyOf(java.lang.Object[], java.lang.Object[])
    {
        java.lang.Object[] r0, r1;
        int $i0, $i1, $i2;

        r0 := @parameter0: java.lang.Object[];

        r1 := @parameter1: java.lang.Object[];

        $i1 = lengthof r0;

        $i0 = lengthof r1;

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i0);

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r1, 0, $i2);

        return r1;
    }

    public static byte[] copyOfRange(byte[], int, int)
    {
        byte[] r0, r1;
        java.lang.IllegalArgumentException $r2;
        int i0, i1, i2, $i3, $i4, $i5;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;
        java.lang.String $r7;

        r1 := @parameter0: byte[];

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        i2 = i0 - i1;

        if i2 >= 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" > ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label1:
        r0 = newarray (byte)[i2];

        $i3 = lengthof r1;

        $i4 = $i3 - i1;

        $i5 = staticinvoke <java.lang.Math: int min(int,int)>($i4, i2);

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i1, r0, 0, $i5);

        return r0;
    }
}
