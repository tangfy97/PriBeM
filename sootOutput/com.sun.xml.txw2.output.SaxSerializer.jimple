public class com.sun.xml.txw2.output.SaxSerializer extends java.lang.Object implements com.sun.xml.txw2.output.XmlSerializer
{
    private final org.xml.sax.ContentHandler writer;
    private final org.xml.sax.ext.LexicalHandler lexical;
    private final java.util.Stack prefixBindings;
    private final java.util.Stack elementBindings;
    private final org.xml.sax.helpers.AttributesImpl attrs;

    public void <init>(org.xml.sax.ContentHandler)
    {
        org.xml.sax.ContentHandler r1;
        com.sun.xml.txw2.output.SaxSerializer r0;

        r0 := @this: com.sun.xml.txw2.output.SaxSerializer;

        r1 := @parameter0: org.xml.sax.ContentHandler;

        specialinvoke r0.<com.sun.xml.txw2.output.SaxSerializer: void <init>(org.xml.sax.ContentHandler,org.xml.sax.ext.LexicalHandler,boolean)>(r1, null, 1);

        return;
    }

    public void <init>(org.xml.sax.ContentHandler, org.xml.sax.ext.LexicalHandler)
    {
        org.xml.sax.ext.LexicalHandler r2;
        org.xml.sax.ContentHandler r1;
        com.sun.xml.txw2.output.SaxSerializer r0;

        r0 := @this: com.sun.xml.txw2.output.SaxSerializer;

        r1 := @parameter0: org.xml.sax.ContentHandler;

        r2 := @parameter1: org.xml.sax.ext.LexicalHandler;

        specialinvoke r0.<com.sun.xml.txw2.output.SaxSerializer: void <init>(org.xml.sax.ContentHandler,org.xml.sax.ext.LexicalHandler,boolean)>(r1, r2, 1);

        return;
    }

    public void <init>(org.xml.sax.ContentHandler, org.xml.sax.ext.LexicalHandler, boolean)
    {
        org.xml.sax.helpers.AttributesImpl $r3;
        com.sun.xml.txw2.output.IndentingXMLFilter $r4;
        com.sun.xml.txw2.output.SaxSerializer r0;
        java.util.Stack $r1, $r2;
        org.xml.sax.ext.LexicalHandler r6;
        org.xml.sax.ContentHandler r5;
        boolean z0;

        r0 := @this: com.sun.xml.txw2.output.SaxSerializer;

        r5 := @parameter0: org.xml.sax.ContentHandler;

        r6 := @parameter1: org.xml.sax.ext.LexicalHandler;

        z0 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.Stack;

        specialinvoke $r1.<java.util.Stack: void <init>()>();

        r0.<com.sun.xml.txw2.output.SaxSerializer: java.util.Stack prefixBindings> = $r1;

        $r2 = new java.util.Stack;

        specialinvoke $r2.<java.util.Stack: void <init>()>();

        r0.<com.sun.xml.txw2.output.SaxSerializer: java.util.Stack elementBindings> = $r2;

        $r3 = new org.xml.sax.helpers.AttributesImpl;

        specialinvoke $r3.<org.xml.sax.helpers.AttributesImpl: void <init>()>();

        r0.<com.sun.xml.txw2.output.SaxSerializer: org.xml.sax.helpers.AttributesImpl attrs> = $r3;

        if z0 != 0 goto label1;

        r0.<com.sun.xml.txw2.output.SaxSerializer: org.xml.sax.ContentHandler writer> = r5;

        r0.<com.sun.xml.txw2.output.SaxSerializer: org.xml.sax.ext.LexicalHandler lexical> = r6;

        goto label2;

     label1:
        $r4 = new com.sun.xml.txw2.output.IndentingXMLFilter;

        specialinvoke $r4.<com.sun.xml.txw2.output.IndentingXMLFilter: void <init>(org.xml.sax.ContentHandler,org.xml.sax.ext.LexicalHandler)>(r5, r6);

        r0.<com.sun.xml.txw2.output.SaxSerializer: org.xml.sax.ContentHandler writer> = $r4;

        r0.<com.sun.xml.txw2.output.SaxSerializer: org.xml.sax.ext.LexicalHandler lexical> = $r4;

     label2:
        return;
    }

    public void <init>(javax.xml.transform.sax.SAXResult)
    {
        org.xml.sax.ext.LexicalHandler $r3;
        com.sun.xml.txw2.output.SaxSerializer r0;
        org.xml.sax.ContentHandler $r2;
        javax.xml.transform.sax.SAXResult r1;

        r0 := @this: com.sun.xml.txw2.output.SaxSerializer;

        r1 := @parameter0: javax.xml.transform.sax.SAXResult;

        $r2 = virtualinvoke r1.<javax.xml.transform.sax.SAXResult: org.xml.sax.ContentHandler getHandler()>();

        $r3 = virtualinvoke r1.<javax.xml.transform.sax.SAXResult: org.xml.sax.ext.LexicalHandler getLexicalHandler()>();

        specialinvoke r0.<com.sun.xml.txw2.output.SaxSerializer: void <init>(org.xml.sax.ContentHandler,org.xml.sax.ext.LexicalHandler)>($r2, $r3);

        return;
    }

    public void startDocument()
    {
        com.sun.xml.txw2.TxwException $r3;
        com.sun.xml.txw2.output.SaxSerializer r0;
        org.xml.sax.SAXException $r2;
        org.xml.sax.ContentHandler $r1;

        r0 := @this: com.sun.xml.txw2.output.SaxSerializer;

     label1:
        $r1 = r0.<com.sun.xml.txw2.output.SaxSerializer: org.xml.sax.ContentHandler writer>;

        interfaceinvoke $r1.<org.xml.sax.ContentHandler: void startDocument()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = new com.sun.xml.txw2.TxwException;

        specialinvoke $r3.<com.sun.xml.txw2.TxwException: void <init>(java.lang.Throwable)>($r2);

        throw $r3;

     label4:
        return;

        catch org.xml.sax.SAXException from label1 to label2 with label3;
    }

    public void writeXmlns(java.lang.String, java.lang.String)
    {
        com.sun.xml.txw2.output.SaxSerializer r0;
        java.lang.String r1, r4;
        java.util.Stack $r2, $r3;
        boolean $z0;

        r0 := @this: com.sun.xml.txw2.output.SaxSerializer;

        r4 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        if r4 != null goto label1;

        r4 = "";

     label1:
        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("xml");

        if $z0 == 0 goto label2;

        return;

     label2:
        $r2 = r0.<com.sun.xml.txw2.output.SaxSerializer: java.util.Stack prefixBindings>;

        virtualinvoke $r2.<java.util.Stack: boolean add(java.lang.Object)>(r1);

        $r3 = r0.<com.sun.xml.txw2.output.SaxSerializer: java.util.Stack prefixBindings>;

        virtualinvoke $r3.<java.util.Stack: boolean add(java.lang.Object)>(r4);

        return;
    }

    public void beginStartTag(java.lang.String, java.lang.String, java.lang.String)
    {
        com.sun.xml.txw2.output.SaxSerializer r0;
        java.util.Stack $r3, $r5, $r7;
        java.lang.String r1, r2, $r4, r6;

        r0 := @this: com.sun.xml.txw2.output.SaxSerializer;

        r6 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        $r3 = r0.<com.sun.xml.txw2.output.SaxSerializer: java.util.Stack elementBindings>;

        $r4 = staticinvoke <com.sun.xml.txw2.output.SaxSerializer: java.lang.String getQName(java.lang.String,java.lang.String)>(r1, r2);

        virtualinvoke $r3.<java.util.Stack: boolean add(java.lang.Object)>($r4);

        $r5 = r0.<com.sun.xml.txw2.output.SaxSerializer: java.util.Stack elementBindings>;

        virtualinvoke $r5.<java.util.Stack: boolean add(java.lang.Object)>(r2);

        $r7 = r0.<com.sun.xml.txw2.output.SaxSerializer: java.util.Stack elementBindings>;

        virtualinvoke $r7.<java.util.Stack: boolean add(java.lang.Object)>(r6);

        return;
    }

    public void writeAttribute(java.lang.String, java.lang.String, java.lang.String, java.lang.StringBuilder)
    {
        org.xml.sax.helpers.AttributesImpl $r4;
        com.sun.xml.txw2.output.SaxSerializer r0;
        java.lang.StringBuilder r6;
        java.lang.String r1, r2, r3, $r5, $r7;

        r0 := @this: com.sun.xml.txw2.output.SaxSerializer;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r6 := @parameter3: java.lang.StringBuilder;

        $r4 = r0.<com.sun.xml.txw2.output.SaxSerializer: org.xml.sax.helpers.AttributesImpl attrs>;

        $r5 = staticinvoke <com.sun.xml.txw2.output.SaxSerializer: java.lang.String getQName(java.lang.String,java.lang.String)>(r3, r2);

        $r7 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<org.xml.sax.helpers.AttributesImpl: void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, $r5, "CDATA", $r7);

        return;
    }

    public void endStartTag(java.lang.String, java.lang.String, java.lang.String)
    {
        com.sun.xml.txw2.output.SaxSerializer r0;
        java.util.Stack $r1, $r9, $r12;
        int $i0;
        java.lang.String r2, r3, r4, $r6, $r13, $r15;
        org.xml.sax.ContentHandler $r5, $r10;
        org.xml.sax.helpers.AttributesImpl $r7, $r8;
        com.sun.xml.txw2.TxwException $r17;
        org.xml.sax.SAXException $r16;
        java.lang.Object $r11, $r14;

        r0 := @this: com.sun.xml.txw2.output.SaxSerializer;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

     label1:
        $r1 = r0.<com.sun.xml.txw2.output.SaxSerializer: java.util.Stack prefixBindings>;

        $i0 = virtualinvoke $r1.<java.util.Stack: int size()>();

        if $i0 == 0 goto label2;

        $r10 = r0.<com.sun.xml.txw2.output.SaxSerializer: org.xml.sax.ContentHandler writer>;

        $r9 = r0.<com.sun.xml.txw2.output.SaxSerializer: java.util.Stack prefixBindings>;

        $r11 = virtualinvoke $r9.<java.util.Stack: java.lang.Object pop()>();

        $r13 = (java.lang.String) $r11;

        $r12 = r0.<com.sun.xml.txw2.output.SaxSerializer: java.util.Stack prefixBindings>;

        $r14 = virtualinvoke $r12.<java.util.Stack: java.lang.Object pop()>();

        $r15 = (java.lang.String) $r14;

        interfaceinvoke $r10.<org.xml.sax.ContentHandler: void startPrefixMapping(java.lang.String,java.lang.String)>($r13, $r15);

        goto label1;

     label2:
        $r5 = r0.<com.sun.xml.txw2.output.SaxSerializer: org.xml.sax.ContentHandler writer>;

        $r6 = staticinvoke <com.sun.xml.txw2.output.SaxSerializer: java.lang.String getQName(java.lang.String,java.lang.String)>(r4, r3);

        $r7 = r0.<com.sun.xml.txw2.output.SaxSerializer: org.xml.sax.helpers.AttributesImpl attrs>;

        interfaceinvoke $r5.<org.xml.sax.ContentHandler: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>(r2, r3, $r6, $r7);

        $r8 = r0.<com.sun.xml.txw2.output.SaxSerializer: org.xml.sax.helpers.AttributesImpl attrs>;

        virtualinvoke $r8.<org.xml.sax.helpers.AttributesImpl: void clear()>();

     label3:
        goto label5;

     label4:
        $r16 := @caughtexception;

        $r17 = new com.sun.xml.txw2.TxwException;

        specialinvoke $r17.<com.sun.xml.txw2.TxwException: void <init>(java.lang.Throwable)>($r16);

        throw $r17;

     label5:
        return;

        catch org.xml.sax.SAXException from label1 to label3 with label4;
    }

    public void endTag()
    {
        com.sun.xml.txw2.TxwException $r12;
        com.sun.xml.txw2.output.SaxSerializer r0;
        java.util.Stack $r1, $r4, $r7;
        org.xml.sax.SAXException $r11;
        java.lang.Object $r3, $r6, $r9;
        org.xml.sax.ContentHandler $r2;
        java.lang.String $r5, $r8, $r10;

        r0 := @this: com.sun.xml.txw2.output.SaxSerializer;

     label1:
        $r2 = r0.<com.sun.xml.txw2.output.SaxSerializer: org.xml.sax.ContentHandler writer>;

        $r1 = r0.<com.sun.xml.txw2.output.SaxSerializer: java.util.Stack elementBindings>;

        $r3 = virtualinvoke $r1.<java.util.Stack: java.lang.Object pop()>();

        $r5 = (java.lang.String) $r3;

        $r4 = r0.<com.sun.xml.txw2.output.SaxSerializer: java.util.Stack elementBindings>;

        $r6 = virtualinvoke $r4.<java.util.Stack: java.lang.Object pop()>();

        $r8 = (java.lang.String) $r6;

        $r7 = r0.<com.sun.xml.txw2.output.SaxSerializer: java.util.Stack elementBindings>;

        $r9 = virtualinvoke $r7.<java.util.Stack: java.lang.Object pop()>();

        $r10 = (java.lang.String) $r9;

        interfaceinvoke $r2.<org.xml.sax.ContentHandler: void endElement(java.lang.String,java.lang.String,java.lang.String)>($r5, $r8, $r10);

     label2:
        goto label4;

     label3:
        $r11 := @caughtexception;

        $r12 = new com.sun.xml.txw2.TxwException;

        specialinvoke $r12.<com.sun.xml.txw2.TxwException: void <init>(java.lang.Throwable)>($r11);

        throw $r12;

     label4:
        return;

        catch org.xml.sax.SAXException from label1 to label2 with label3;
    }

    public void text(java.lang.StringBuilder)
    {
        com.sun.xml.txw2.TxwException $r6;
        com.sun.xml.txw2.output.SaxSerializer r0;
        org.xml.sax.SAXException $r5;
        int $i0;
        char[] $r4;
        java.lang.StringBuilder r1;
        org.xml.sax.ContentHandler $r2;
        java.lang.String $r3;

        r0 := @this: com.sun.xml.txw2.output.SaxSerializer;

        r1 := @parameter0: java.lang.StringBuilder;

     label1:
        $r2 = r0.<com.sun.xml.txw2.output.SaxSerializer: org.xml.sax.ContentHandler writer>;

        $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = virtualinvoke $r3.<java.lang.String: char[] toCharArray()>();

        $i0 = virtualinvoke r1.<java.lang.StringBuilder: int length()>();

        interfaceinvoke $r2.<org.xml.sax.ContentHandler: void characters(char[],int,int)>($r4, 0, $i0);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = new com.sun.xml.txw2.TxwException;

        specialinvoke $r6.<com.sun.xml.txw2.TxwException: void <init>(java.lang.Throwable)>($r5);

        throw $r6;

     label4:
        return;

        catch org.xml.sax.SAXException from label1 to label2 with label3;
    }

    public void cdata(java.lang.StringBuilder)
    {
        java.lang.UnsupportedOperationException $r5;
        com.sun.xml.txw2.TxwException $r7;
        com.sun.xml.txw2.output.SaxSerializer r0;
        org.xml.sax.ext.LexicalHandler $r1, $r2, $r4;
        org.xml.sax.SAXException $r6;
        java.lang.StringBuilder r3;

        r0 := @this: com.sun.xml.txw2.output.SaxSerializer;

        r3 := @parameter0: java.lang.StringBuilder;

        $r1 = r0.<com.sun.xml.txw2.output.SaxSerializer: org.xml.sax.ext.LexicalHandler lexical>;

        if $r1 != null goto label1;

        $r5 = new java.lang.UnsupportedOperationException;

        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("LexicalHandler is needed to write PCDATA");

        throw $r5;

     label1:
        $r2 = r0.<com.sun.xml.txw2.output.SaxSerializer: org.xml.sax.ext.LexicalHandler lexical>;

        interfaceinvoke $r2.<org.xml.sax.ext.LexicalHandler: void startCDATA()>();

        virtualinvoke r0.<com.sun.xml.txw2.output.SaxSerializer: void text(java.lang.StringBuilder)>(r3);

        $r4 = r0.<com.sun.xml.txw2.output.SaxSerializer: org.xml.sax.ext.LexicalHandler lexical>;

        interfaceinvoke $r4.<org.xml.sax.ext.LexicalHandler: void endCDATA()>();

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        $r7 = new com.sun.xml.txw2.TxwException;

        specialinvoke $r7.<com.sun.xml.txw2.TxwException: void <init>(java.lang.Throwable)>($r6);

        throw $r7;

     label4:
        return;

        catch org.xml.sax.SAXException from label1 to label2 with label3;
    }

    public void comment(java.lang.StringBuilder)
    {
        java.lang.UnsupportedOperationException $r6;
        com.sun.xml.txw2.TxwException $r8;
        com.sun.xml.txw2.output.SaxSerializer r0;
        org.xml.sax.ext.LexicalHandler $r1, $r3;
        org.xml.sax.SAXException $r7;
        int $i0;
        char[] $r5;
        java.lang.StringBuilder r2;
        java.lang.String $r4;

        r0 := @this: com.sun.xml.txw2.output.SaxSerializer;

        r2 := @parameter0: java.lang.StringBuilder;

     label1:
        $r1 = r0.<com.sun.xml.txw2.output.SaxSerializer: org.xml.sax.ext.LexicalHandler lexical>;

        if $r1 != null goto label2;

        $r6 = new java.lang.UnsupportedOperationException;

        specialinvoke $r6.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("LexicalHandler is needed to write comments");

        throw $r6;

     label2:
        $r3 = r0.<com.sun.xml.txw2.output.SaxSerializer: org.xml.sax.ext.LexicalHandler lexical>;

        $r4 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = virtualinvoke $r4.<java.lang.String: char[] toCharArray()>();

        $i0 = virtualinvoke r2.<java.lang.StringBuilder: int length()>();

        interfaceinvoke $r3.<org.xml.sax.ext.LexicalHandler: void comment(char[],int,int)>($r5, 0, $i0);

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

        $r8 = new com.sun.xml.txw2.TxwException;

        specialinvoke $r8.<com.sun.xml.txw2.TxwException: void <init>(java.lang.Throwable)>($r7);

        throw $r8;

     label5:
        return;

        catch org.xml.sax.SAXException from label1 to label3 with label4;
    }

    public void endDocument()
    {
        com.sun.xml.txw2.TxwException $r3;
        com.sun.xml.txw2.output.SaxSerializer r0;
        org.xml.sax.SAXException $r2;
        org.xml.sax.ContentHandler $r1;

        r0 := @this: com.sun.xml.txw2.output.SaxSerializer;

     label1:
        $r1 = r0.<com.sun.xml.txw2.output.SaxSerializer: org.xml.sax.ContentHandler writer>;

        interfaceinvoke $r1.<org.xml.sax.ContentHandler: void endDocument()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = new com.sun.xml.txw2.TxwException;

        specialinvoke $r3.<com.sun.xml.txw2.TxwException: void <init>(java.lang.Throwable)>($r2);

        throw $r3;

     label4:
        return;

        catch org.xml.sax.SAXException from label1 to label2 with label3;
    }

    public void flush()
    {
        com.sun.xml.txw2.output.SaxSerializer r0;

        r0 := @this: com.sun.xml.txw2.output.SaxSerializer;

        return;
    }

    private static java.lang.String getQName(java.lang.String, java.lang.String)
    {
        int $i0;
        java.lang.StringBuilder $r2, $r3, $r4, $r5;
        java.lang.String r0, r1, r6;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        if r0 == null goto label1;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        r6 = r1;

        goto label3;

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        return r6;
    }
}
