public class ucar.nc2.dt.point.NdbcDataset extends ucar.nc2.dt.point.StationObsDatasetImpl implements ucar.nc2.dt.TypedDatasetFactoryIF
{
    private ucar.ma2.ArrayInt$D1 dates;
    private ucar.nc2.dt.point.RecordDatasetHelper recordHelper;
    private ucar.nc2.dt.StationImpl station;

    public static boolean isValidFile(ucar.nc2.NetcdfFile)
    {
        ucar.nc2.Variable $r5, $r6;
        ucar.nc2.NetcdfFile r0;
        java.lang.String $r1, $r2, $r3, $r4;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: ucar.nc2.NetcdfFile;

        $r1 = virtualinvoke r0.<ucar.nc2.NetcdfFile: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "Conventions", "");

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("COARDS");

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = virtualinvoke r0.<ucar.nc2.NetcdfFile: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "data_provider", "");

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("National Data Buoy Center");

        if $z1 != 0 goto label2;

        return 0;

     label2:
        $r3 = virtualinvoke r0.<ucar.nc2.NetcdfFile: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "station", null);

        if null != $r3 goto label3;

        return 0;

     label3:
        $r4 = virtualinvoke r0.<ucar.nc2.NetcdfFile: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "location", null);

        if null != $r4 goto label4;

        return 0;

     label4:
        $r5 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Variable findVariable(java.lang.String)>("lat");

        if $r5 != null goto label5;

        return 0;

     label5:
        $r6 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Variable findVariable(java.lang.String)>("lon");

        if $r6 != null goto label6;

        return 0;

     label6:
        $z2 = virtualinvoke r0.<ucar.nc2.NetcdfFile: boolean hasUnlimitedDimension()>();

        if $z2 != 0 goto label7;

        return 0;

     label7:
        return 1;
    }

    public boolean isMine(ucar.nc2.dataset.NetcdfDataset)
    {
        ucar.nc2.dt.point.NdbcDataset r1;
        ucar.nc2.dataset.NetcdfDataset r0;
        boolean $z0;

        r1 := @this: ucar.nc2.dt.point.NdbcDataset;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        $z0 = staticinvoke <ucar.nc2.dt.point.NdbcDataset: boolean isValidFile(ucar.nc2.NetcdfFile)>(r0);

        return $z0;
    }

    public ucar.nc2.dt.TypedDataset open(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.util.CancelTask, java.lang.StringBuilder) throws java.io.IOException
    {
        ucar.nc2.dt.point.NdbcDataset $r0, r2;
        ucar.nc2.util.CancelTask r3;
        java.lang.StringBuilder r4;
        ucar.nc2.dataset.NetcdfDataset r1;

        r2 := @this: ucar.nc2.dt.point.NdbcDataset;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r3 := @parameter1: ucar.nc2.util.CancelTask;

        r4 := @parameter2: java.lang.StringBuilder;

        $r0 = new ucar.nc2.dt.point.NdbcDataset;

        specialinvoke $r0.<ucar.nc2.dt.point.NdbcDataset: void <init>(ucar.nc2.dataset.NetcdfDataset)>(r1);

        return $r0;
    }

    public void <init>()
    {
        ucar.nc2.dt.point.NdbcDataset r0;

        r0 := @this: ucar.nc2.dt.point.NdbcDataset;

        specialinvoke r0.<ucar.nc2.dt.point.StationObsDatasetImpl: void <init>()>();

        return;
    }

    public void <init>(ucar.nc2.dataset.NetcdfDataset) throws java.io.IOException
    {
        ucar.nc2.dt.point.NdbcDataset r0;
        java.util.Date $r15, $r17;
        java.util.List $r3, $r22;
        java.lang.StringBuilder $r23, $r25, $r26, $r27, $r29, $r31, $r32, $r34;
        long $l0;
        int i1, $i2, $i3, $i4;
        ucar.nc2.Variable $r6, $r7, $r8;
        java.lang.String $r18, $r19, $r24, $r28, $r30, $r33, $r35;
        ucar.nc2.dt.StationImpl $r20, $r21;
        double $d0, $d1, $d2, $d3;
        ucar.nc2.units.DateUnit $r5, $r14, $r16;
        ucar.ma2.Array $r9;
        ucar.nc2.dt.point.RecordDatasetHelper $r2, $r4;
        ucar.ma2.ArrayInt$D1 $r10, $r11, $r12, $r13;
        ucar.nc2.dataset.NetcdfDataset r1;

        r0 := @this: ucar.nc2.dt.point.NdbcDataset;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        specialinvoke r0.<ucar.nc2.dt.point.StationObsDatasetImpl: void <init>(ucar.nc2.dataset.NetcdfDataset)>(r1);

        $r2 = new ucar.nc2.dt.point.RecordDatasetHelper;

        $r3 = r0.<ucar.nc2.dt.point.NdbcDataset: java.util.List dataVariables>;

        specialinvoke $r2.<ucar.nc2.dt.point.RecordDatasetHelper: void <init>(ucar.nc2.dataset.NetcdfDataset,java.lang.String,java.lang.String,java.util.List)>(r1, "time", null, $r3);

        r0.<ucar.nc2.dt.point.NdbcDataset: ucar.nc2.dt.point.RecordDatasetHelper recordHelper> = $r2;

        virtualinvoke r0.<ucar.nc2.dt.point.NdbcDataset: void removeDataVariable(java.lang.String)>("time");

        $r4 = r0.<ucar.nc2.dt.point.NdbcDataset: ucar.nc2.dt.point.RecordDatasetHelper recordHelper>;

        $r5 = $r4.<ucar.nc2.dt.point.RecordDatasetHelper: ucar.nc2.units.DateUnit timeUnit>;

        r0.<ucar.nc2.dt.point.NdbcDataset: ucar.nc2.units.DateUnit timeUnit> = $r5;

        $r6 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("lat");

        $d0 = virtualinvoke $r6.<ucar.nc2.Variable: double readScalarDouble()>();

        $r7 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("lon");

        $d1 = virtualinvoke $r7.<ucar.nc2.Variable: double readScalarDouble()>();

        $r8 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("time");

        $r9 = virtualinvoke $r8.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        $r10 = (ucar.ma2.ArrayInt$D1) $r9;

        r0.<ucar.nc2.dt.point.NdbcDataset: ucar.ma2.ArrayInt$D1 dates> = $r10;

        $r11 = r0.<ucar.nc2.dt.point.NdbcDataset: ucar.ma2.ArrayInt$D1 dates>;

        $l0 = virtualinvoke $r11.<ucar.ma2.ArrayInt$D1: long getSize()>();

        i1 = (int) $l0;

        $r12 = r0.<ucar.nc2.dt.point.NdbcDataset: ucar.ma2.ArrayInt$D1 dates>;

        $i2 = virtualinvoke $r12.<ucar.ma2.ArrayInt$D1: int get(int)>(0);

        $r13 = r0.<ucar.nc2.dt.point.NdbcDataset: ucar.ma2.ArrayInt$D1 dates>;

        $i3 = i1 - 1;

        $i4 = virtualinvoke $r13.<ucar.ma2.ArrayInt$D1: int get(int)>($i3);

        $r14 = r0.<ucar.nc2.dt.point.NdbcDataset: ucar.nc2.units.DateUnit timeUnit>;

        $d2 = (double) $i2;

        $r15 = virtualinvoke $r14.<ucar.nc2.units.DateUnit: java.util.Date makeDate(double)>($d2);

        r0.<ucar.nc2.dt.point.NdbcDataset: java.util.Date startDate> = $r15;

        $r16 = r0.<ucar.nc2.dt.point.NdbcDataset: ucar.nc2.units.DateUnit timeUnit>;

        $d3 = (double) $i4;

        $r17 = virtualinvoke $r16.<ucar.nc2.units.DateUnit: java.util.Date makeDate(double)>($d3);

        r0.<ucar.nc2.dt.point.NdbcDataset: java.util.Date endDate> = $r17;

        $r18 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "station", null);

        $r19 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "description", null);

        $r20 = new ucar.nc2.dt.StationImpl;

        specialinvoke $r20.<ucar.nc2.dt.StationImpl: void <init>(java.lang.String,java.lang.String,double,double,double,int)>($r18, $r19, $d0, $d1, #NaN, i1);

        r0.<ucar.nc2.dt.point.NdbcDataset: ucar.nc2.dt.StationImpl station> = $r20;

        $r22 = r0.<ucar.nc2.dt.point.NdbcDataset: java.util.List stations>;

        $r21 = r0.<ucar.nc2.dt.point.NdbcDataset: ucar.nc2.dt.StationImpl station>;

        interfaceinvoke $r22.<java.util.List: boolean add(java.lang.Object)>($r21);

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "data_provider", null);

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Station ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<ucar.nc2.dt.point.NdbcDataset: java.lang.String title> = $r28;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r30 = r0.<ucar.nc2.dt.point.NdbcDataset: java.lang.String title>;

        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r33 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "data_quality", null);

        $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<ucar.nc2.dt.point.NdbcDataset: java.lang.String desc> = $r35;

        virtualinvoke r0.<ucar.nc2.dt.point.NdbcDataset: void setBoundingBox()>();

        return;
    }

    protected void setTimeUnits()
    {
        ucar.nc2.dt.point.NdbcDataset r0;

        r0 := @this: ucar.nc2.dt.point.NdbcDataset;

        return;
    }

    protected void setStartDate()
    {
        ucar.nc2.dt.point.NdbcDataset r0;

        r0 := @this: ucar.nc2.dt.point.NdbcDataset;

        return;
    }

    protected void setEndDate()
    {
        ucar.nc2.dt.point.NdbcDataset r0;

        r0 := @this: ucar.nc2.dt.point.NdbcDataset;

        return;
    }

    protected void setBoundingBox()
    {
        ucar.unidata.geoloc.LatLonRect $r2;
        ucar.nc2.dt.point.StationDatasetHelper $r1;
        ucar.nc2.dt.point.NdbcDataset r0;

        r0 := @this: ucar.nc2.dt.point.NdbcDataset;

        $r1 = r0.<ucar.nc2.dt.point.NdbcDataset: ucar.nc2.dt.point.StationDatasetHelper stationHelper>;

        $r2 = virtualinvoke $r1.<ucar.nc2.dt.point.StationDatasetHelper: ucar.unidata.geoloc.LatLonRect getBoundingBox()>();

        r0.<ucar.nc2.dt.point.NdbcDataset: ucar.unidata.geoloc.LatLonRect boundingBox> = $r2;

        return;
    }

    public java.util.List getData(ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        java.util.List $r3;
        ucar.nc2.dt.point.NdbcDataset r0;
        ucar.nc2.util.CancelTask r1;
        ucar.nc2.dt.StationImpl $r2;

        r0 := @this: ucar.nc2.dt.point.NdbcDataset;

        r1 := @parameter0: ucar.nc2.util.CancelTask;

        $r2 = r0.<ucar.nc2.dt.point.NdbcDataset: ucar.nc2.dt.StationImpl station>;

        $r3 = virtualinvoke r0.<ucar.nc2.dt.point.NdbcDataset: java.util.List getData(ucar.unidata.geoloc.Station,ucar.nc2.util.CancelTask)>($r2, r1);

        return $r3;
    }

    public int getDataCount()
    {
        ucar.nc2.dt.point.NdbcDataset r0;
        int $i0;
        ucar.nc2.Dimension $r2;
        ucar.nc2.dataset.NetcdfDataset $r1;

        r0 := @this: ucar.nc2.dt.point.NdbcDataset;

        $r1 = r0.<ucar.nc2.dt.point.NdbcDataset: ucar.nc2.dataset.NetcdfDataset ncfile>;

        $r2 = virtualinvoke $r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension getUnlimitedDimension()>();

        $i0 = virtualinvoke $r2.<ucar.nc2.Dimension: int getLength()>();

        return $i0;
    }

    public java.util.List getData(ucar.unidata.geoloc.Station, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        ucar.nc2.dt.point.NdbcDataset r2;
        ucar.unidata.geoloc.Station r0;
        ucar.nc2.dt.point.RecordDatasetHelper$RecordStationObs $r6;
        ucar.nc2.dt.point.RecordDatasetHelper $r7;
        ucar.ma2.ArrayInt$D1 $r5;
        java.util.List $r3, $r4;
        ucar.nc2.util.CancelTask r8;
        int $i0, $i1, i2;
        ucar.nc2.dt.StationImpl r1;
        double d0;
        boolean $z0;

        r2 := @this: ucar.nc2.dt.point.NdbcDataset;

        r0 := @parameter0: ucar.unidata.geoloc.Station;

        r8 := @parameter1: ucar.nc2.util.CancelTask;

        r1 = (ucar.nc2.dt.StationImpl) r0;

        $i0 = virtualinvoke r2.<ucar.nc2.dt.point.NdbcDataset: int getDataCount()>();

        $r3 = virtualinvoke r1.<ucar.nc2.dt.StationImpl: java.util.List getObservations()>();

        if null != $r3 goto label3;

        i2 = 0;

     label1:
        if i2 >= $i0 goto label3;

        $r5 = r2.<ucar.nc2.dt.point.NdbcDataset: ucar.ma2.ArrayInt$D1 dates>;

        $i1 = virtualinvoke $r5.<ucar.ma2.ArrayInt$D1: int get(int)>(i2);

        d0 = (double) $i1;

        $r6 = new ucar.nc2.dt.point.RecordDatasetHelper$RecordStationObs;

        $r7 = r2.<ucar.nc2.dt.point.NdbcDataset: ucar.nc2.dt.point.RecordDatasetHelper recordHelper>;

        virtualinvoke $r7.<java.lang.Object: java.lang.Class getClass()>();

        specialinvoke $r6.<ucar.nc2.dt.point.RecordDatasetHelper$RecordStationObs: void <init>(ucar.nc2.dt.point.RecordDatasetHelper,ucar.unidata.geoloc.Station,double,double,int)>($r7, r0, d0, d0, i2);

        virtualinvoke r1.<ucar.nc2.dt.StationImpl: void addObs(ucar.nc2.dt.StationObsDatatype)>($r6);

        if r8 == null goto label2;

        $z0 = interfaceinvoke r8.<ucar.nc2.util.CancelTask: boolean isCancel()>();

        if $z0 == 0 goto label2;

        return null;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $r4 = virtualinvoke r1.<ucar.nc2.dt.StationImpl: java.util.List getObservations()>();

        return $r4;
    }

    public ucar.nc2.dt.DataIterator getDataIterator(int) throws java.io.IOException
    {
        ucar.nc2.dt.point.NdbcDataset r1;
        ucar.nc2.dataset.StructureDS $r3;
        int i0;
        ucar.nc2.dt.point.NdbcDataset$NdbcDatatypeIterator $r0;
        ucar.nc2.dt.point.RecordDatasetHelper $r2;

        r1 := @this: ucar.nc2.dt.point.NdbcDataset;

        i0 := @parameter0: int;

        $r0 = new ucar.nc2.dt.point.NdbcDataset$NdbcDatatypeIterator;

        $r2 = r1.<ucar.nc2.dt.point.NdbcDataset: ucar.nc2.dt.point.RecordDatasetHelper recordHelper>;

        $r3 = $r2.<ucar.nc2.dt.point.RecordDatasetHelper: ucar.nc2.dataset.StructureDS recordVar>;

        specialinvoke $r0.<ucar.nc2.dt.point.NdbcDataset$NdbcDatatypeIterator: void <init>(ucar.nc2.dt.point.NdbcDataset,ucar.nc2.Structure,int)>(r1, $r3, i0);

        return $r0;
    }

    static ucar.nc2.dt.StationImpl access$000(ucar.nc2.dt.point.NdbcDataset)
    {
        ucar.nc2.dt.point.NdbcDataset r0;
        ucar.nc2.dt.StationImpl $r1;

        r0 := @parameter0: ucar.nc2.dt.point.NdbcDataset;

        $r1 = r0.<ucar.nc2.dt.point.NdbcDataset: ucar.nc2.dt.StationImpl station>;

        return $r1;
    }

    static ucar.nc2.dt.point.RecordDatasetHelper access$100(ucar.nc2.dt.point.NdbcDataset)
    {
        ucar.nc2.dt.point.NdbcDataset r0;
        ucar.nc2.dt.point.RecordDatasetHelper $r1;

        r0 := @parameter0: ucar.nc2.dt.point.NdbcDataset;

        $r1 = r0.<ucar.nc2.dt.point.NdbcDataset: ucar.nc2.dt.point.RecordDatasetHelper recordHelper>;

        return $r1;
    }
}
