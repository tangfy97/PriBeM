public abstract class org.apache.tika.parser.image.MetadataFields extends java.lang.Object
{
    private static java.util.HashSet known;

    public void <init>()
    {
        org.apache.tika.parser.image.MetadataFields r0;

        r0 := @this: org.apache.tika.parser.image.MetadataFields;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static void setKnownForClass(java.lang.Class)
    {
        java.util.HashSet $r6, $r9;
        org.apache.tika.metadata.Property r16;
        int i0, $i1, i2;
        java.lang.String $r7, r14;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.IllegalAccessException $r10, $r12;
        java.lang.reflect.Field r2;
        java.lang.IllegalArgumentException $r11, $r13;
        java.lang.reflect.Field[] $r1;
        java.lang.Class r0, $r3, $r4, $r15;
        java.lang.Object $r5, $r8;

        r0 := @parameter0: java.lang.Class;

        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Field[] getFields()>();

        i0 = lengthof $r1;

        i2 = 0;

     label01:
        if i2 >= i0 goto label12;

        r2 = $r1[i2];

        $i1 = virtualinvoke r2.<java.lang.reflect.Field: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isPublic(int)>($i1);

        if $z0 == 0 goto label11;

        $z1 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>($i1);

        if $z1 == 0 goto label11;

        $z2 = staticinvoke <java.lang.reflect.Modifier: boolean isFinal(int)>($i1);

        if $z2 == 0 goto label11;

        $r3 = virtualinvoke r2.<java.lang.reflect.Field: java.lang.Class getType()>();

        $r4 = class "Ljava/lang/String;";

        $z3 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z3 == 0 goto label06;

     label02:
        $r8 = virtualinvoke r2.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);

        r14 = (java.lang.String) $r8;

        if r14 == null goto label03;

        $r9 = <org.apache.tika.parser.image.MetadataFields: java.util.HashSet known>;

        virtualinvoke $r9.<java.util.HashSet: boolean add(java.lang.Object)>(r14);

     label03:
        goto label06;

     label04:
        $r13 := @caughtexception;

        virtualinvoke $r13.<java.lang.IllegalArgumentException: void printStackTrace()>();

        goto label06;

     label05:
        $r12 := @caughtexception;

        virtualinvoke $r12.<java.lang.IllegalAccessException: void printStackTrace()>();

     label06:
        $r15 = class "Lorg/apache/tika/metadata/Property;";

        $z4 = virtualinvoke $r15.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r3);

        if $z4 == 0 goto label11;

     label07:
        $r5 = virtualinvoke r2.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);

        r16 = (org.apache.tika.metadata.Property) $r5;

        if r16 == null goto label08;

        $r6 = <org.apache.tika.parser.image.MetadataFields: java.util.HashSet known>;

        $r7 = virtualinvoke r16.<org.apache.tika.metadata.Property: java.lang.String getName()>();

        virtualinvoke $r6.<java.util.HashSet: boolean add(java.lang.Object)>($r7);

     label08:
        goto label11;

     label09:
        $r11 := @caughtexception;

        virtualinvoke $r11.<java.lang.IllegalArgumentException: void printStackTrace()>();

        goto label11;

     label10:
        $r10 := @caughtexception;

        virtualinvoke $r10.<java.lang.IllegalAccessException: void printStackTrace()>();

     label11:
        i2 = i2 + 1;

        goto label01;

     label12:
        return;

        catch java.lang.IllegalArgumentException from label02 to label03 with label04;
        catch java.lang.IllegalAccessException from label02 to label03 with label05;
        catch java.lang.IllegalArgumentException from label07 to label08 with label09;
        catch java.lang.IllegalAccessException from label07 to label08 with label10;
    }

    public static boolean isMetadataField(java.lang.String)
    {
        java.util.HashSet $r1;
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.apache.tika.parser.image.MetadataFields: java.util.HashSet known>;

        $z0 = virtualinvoke $r1.<java.util.HashSet: boolean contains(java.lang.Object)>(r0);

        return $z0;
    }

    public static boolean isMetadataField(org.apache.tika.metadata.Property)
    {
        java.util.HashSet $r1;
        org.apache.tika.metadata.Property r0;
        java.lang.String $r2;
        boolean $z0;

        r0 := @parameter0: org.apache.tika.metadata.Property;

        $r1 = <org.apache.tika.parser.image.MetadataFields: java.util.HashSet known>;

        $r2 = virtualinvoke r0.<org.apache.tika.metadata.Property: java.lang.String getName()>();

        $z0 = virtualinvoke $r1.<java.util.HashSet: boolean contains(java.lang.Object)>($r2);

        return $z0;
    }

    static void <clinit>()
    {
        java.util.HashSet $r0;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        <org.apache.tika.parser.image.MetadataFields: java.util.HashSet known> = $r0;

        staticinvoke <org.apache.tika.parser.image.MetadataFields: void setKnownForClass(java.lang.Class)>(class "Lorg/apache/tika/metadata/TikaCoreProperties;");

        staticinvoke <org.apache.tika.parser.image.MetadataFields: void setKnownForClass(java.lang.Class)>(class "Lorg/apache/tika/metadata/Metadata;");

        return;
    }
}
