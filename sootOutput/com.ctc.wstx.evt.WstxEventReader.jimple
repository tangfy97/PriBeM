public class com.ctc.wstx.evt.WstxEventReader extends java.lang.Object implements org.codehaus.stax2.XMLEventReader2, javax.xml.stream.XMLStreamConstants
{
    protected static final int STATE_INITIAL;
    protected static final int STATE_EOD;
    protected static final int STATE_CONTENT;
    private final javax.xml.stream.util.XMLEventAllocator mAllocator;
    private final javax.xml.stream.XMLStreamReader mReader;
    private javax.xml.stream.events.XMLEvent mPeekedEvent;
    protected int mState;
    protected int mPrePeekEvent;

    public void <init>(javax.xml.stream.util.XMLEventAllocator, javax.xml.stream.XMLStreamReader)
    {
        javax.xml.stream.util.XMLEventAllocator r1;
        com.ctc.wstx.evt.WstxEventReader r0;
        javax.xml.stream.XMLStreamReader r2;

        r0 := @this: com.ctc.wstx.evt.WstxEventReader;

        r1 := @parameter0: javax.xml.stream.util.XMLEventAllocator;

        r2 := @parameter1: javax.xml.stream.XMLStreamReader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.ctc.wstx.evt.WstxEventReader: javax.xml.stream.events.XMLEvent mPeekedEvent> = null;

        r0.<com.ctc.wstx.evt.WstxEventReader: int mState> = 1;

        r0.<com.ctc.wstx.evt.WstxEventReader: int mPrePeekEvent> = 7;

        r0.<com.ctc.wstx.evt.WstxEventReader: javax.xml.stream.util.XMLEventAllocator mAllocator> = r1;

        r0.<com.ctc.wstx.evt.WstxEventReader: javax.xml.stream.XMLStreamReader mReader> = r2;

        return;
    }

    public void close() throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.evt.WstxEventReader r0;
        javax.xml.stream.XMLStreamReader $r1;

        r0 := @this: com.ctc.wstx.evt.WstxEventReader;

        $r1 = r0.<com.ctc.wstx.evt.WstxEventReader: javax.xml.stream.XMLStreamReader mReader>;

        interfaceinvoke $r1.<javax.xml.stream.XMLStreamReader: void close()>();

        return;
    }

    public java.lang.String getElementText() throws javax.xml.stream.XMLStreamException
    {
        javax.xml.stream.events.XMLEvent $r1, r18;
        javax.xml.stream.XMLStreamReader $r16;
        java.lang.StringBuffer $r4, $r6, $r7, $r9, r20;
        com.ctc.wstx.exc.WstxParsingException $r5, $r13;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r3, $r8, $r10, $r12, $r14, $r17, r19, $r21;
        boolean $z0, $z1;
        com.ctc.wstx.evt.WstxEventReader r0;
        javax.xml.stream.events.Characters $r2;
        javax.xml.stream.Location $r11, $r15;

        r0 := @this: com.ctc.wstx.evt.WstxEventReader;

        $r1 = r0.<com.ctc.wstx.evt.WstxEventReader: javax.xml.stream.events.XMLEvent mPeekedEvent>;

        if $r1 != null goto label01;

        $r16 = r0.<com.ctc.wstx.evt.WstxEventReader: javax.xml.stream.XMLStreamReader mReader>;

        $r17 = interfaceinvoke $r16.<javax.xml.stream.XMLStreamReader: java.lang.String getElementText()>();

        return $r17;

     label01:
        r18 = r0.<com.ctc.wstx.evt.WstxEventReader: javax.xml.stream.events.XMLEvent mPeekedEvent>;

        r0.<com.ctc.wstx.evt.WstxEventReader: javax.xml.stream.events.XMLEvent mPeekedEvent> = null;

        $i0 = r0.<com.ctc.wstx.evt.WstxEventReader: int mPrePeekEvent>;

        if $i0 == 1 goto label02;

        $r13 = new com.ctc.wstx.exc.WstxParsingException;

        $r14 = <com.ctc.wstx.cfg.ErrorConsts: java.lang.String ERR_STATE_NOT_STELEM>;

        $r15 = interfaceinvoke r18.<javax.xml.stream.events.XMLEvent: javax.xml.stream.Location getLocation()>();

        specialinvoke $r13.<com.ctc.wstx.exc.WstxParsingException: void <init>(java.lang.String,javax.xml.stream.Location)>($r14, $r15);

        throw $r13;

     label02:
        r19 = null;

        r20 = null;

     label03:
        $z0 = interfaceinvoke r18.<javax.xml.stream.events.XMLEvent: boolean isEndElement()>();

        if $z0 == 0 goto label04;

        goto label10;

     label04:
        $i1 = interfaceinvoke r18.<javax.xml.stream.events.XMLEvent: int getEventType()>();

        if $i1 == 5 goto label09;

        if $i1 != 3 goto label05;

        goto label09;

     label05:
        $z1 = interfaceinvoke r18.<javax.xml.stream.events.XMLEvent: boolean isCharacters()>();

        if $z1 != 0 goto label06;

        $r5 = new com.ctc.wstx.exc.WstxParsingException;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Expected a text token, got ");

        $r8 = staticinvoke <com.ctc.wstx.cfg.ErrorConsts: java.lang.String tokenTypeDesc(int)>($i1);

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        $r11 = interfaceinvoke r18.<javax.xml.stream.events.XMLEvent: javax.xml.stream.Location getLocation()>();

        specialinvoke $r5.<com.ctc.wstx.exc.WstxParsingException: void <init>(java.lang.String,javax.xml.stream.Location)>($r10, $r11);

        throw $r5;

     label06:
        $r2 = interfaceinvoke r18.<javax.xml.stream.events.XMLEvent: javax.xml.stream.events.Characters asCharacters()>();

        $r3 = interfaceinvoke $r2.<javax.xml.stream.events.Characters: java.lang.String getData()>();

        if r19 != null goto label07;

        r19 = $r3;

        goto label09;

     label07:
        if r20 != null goto label08;

        $r4 = new java.lang.StringBuffer;

        $i2 = virtualinvoke r19.<java.lang.String: int length()>();

        $i3 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i4 = $i2 + $i3;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>(int)>($i4);

        r20 = $r4;

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r19);

     label08:
        virtualinvoke r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

     label09:
        r18 = virtualinvoke r0.<com.ctc.wstx.evt.WstxEventReader: javax.xml.stream.events.XMLEvent nextEvent()>();

        goto label03;

     label10:
        if r20 == null goto label11;

        $r12 = virtualinvoke r20.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r12;

     label11:
        if r19 != null goto label12;

        $r21 = "";

        goto label13;

     label12:
        $r21 = r19;

     label13:
        return $r21;
    }

    public java.lang.Object getProperty(java.lang.String)
    {
        com.ctc.wstx.evt.WstxEventReader r0;
        javax.xml.stream.XMLStreamReader $r2;
        java.lang.Object $r3;
        java.lang.String r1;

        r0 := @this: com.ctc.wstx.evt.WstxEventReader;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.ctc.wstx.evt.WstxEventReader: javax.xml.stream.XMLStreamReader mReader>;

        $r3 = interfaceinvoke $r2.<javax.xml.stream.XMLStreamReader: java.lang.Object getProperty(java.lang.String)>(r1);

        return $r3;
    }

    public boolean hasNext()
    {
        int $i0;
        com.ctc.wstx.evt.WstxEventReader r0;
        boolean $z0;

        r0 := @this: com.ctc.wstx.evt.WstxEventReader;

        $i0 = r0.<com.ctc.wstx.evt.WstxEventReader: int mState>;

        if $i0 == 2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public javax.xml.stream.events.XMLEvent nextEvent() throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.evt.WstxEventReader r0;
        javax.xml.stream.events.XMLEvent $r1, $r3, r4, $r5;
        javax.xml.stream.XMLStreamReader $r2;
        int $i0, $i1, $i2;
        java.util.NoSuchElementException $r6;
        boolean $z0;

        r0 := @this: com.ctc.wstx.evt.WstxEventReader;

        $i0 = r0.<com.ctc.wstx.evt.WstxEventReader: int mState>;

        if $i0 != 2 goto label1;

        $r6 = new java.util.NoSuchElementException;

        specialinvoke $r6.<java.util.NoSuchElementException: void <init>()>();

        throw $r6;

     label1:
        $i1 = r0.<com.ctc.wstx.evt.WstxEventReader: int mState>;

        if $i1 != 1 goto label2;

        r0.<com.ctc.wstx.evt.WstxEventReader: int mState> = 3;

        $r5 = virtualinvoke r0.<com.ctc.wstx.evt.WstxEventReader: javax.xml.stream.events.XMLEvent createStartEvent()>();

        return $r5;

     label2:
        $r1 = r0.<com.ctc.wstx.evt.WstxEventReader: javax.xml.stream.events.XMLEvent mPeekedEvent>;

        if $r1 == null goto label4;

        r4 = r0.<com.ctc.wstx.evt.WstxEventReader: javax.xml.stream.events.XMLEvent mPeekedEvent>;

        r0.<com.ctc.wstx.evt.WstxEventReader: javax.xml.stream.events.XMLEvent mPeekedEvent> = null;

        $z0 = interfaceinvoke r4.<javax.xml.stream.events.XMLEvent: boolean isEndDocument()>();

        if $z0 == 0 goto label3;

        r0.<com.ctc.wstx.evt.WstxEventReader: int mState> = 2;

     label3:
        return r4;

     label4:
        $r2 = r0.<com.ctc.wstx.evt.WstxEventReader: javax.xml.stream.XMLStreamReader mReader>;

        $i2 = interfaceinvoke $r2.<javax.xml.stream.XMLStreamReader: int next()>();

        $r3 = virtualinvoke r0.<com.ctc.wstx.evt.WstxEventReader: javax.xml.stream.events.XMLEvent createNextEvent(boolean,int)>(1, $i2);

        return $r3;
    }

    public java.lang.Object next()
    {
        com.ctc.wstx.evt.WstxEventReader r0;
        javax.xml.stream.events.XMLEvent $r1;
        javax.xml.stream.XMLStreamException $r2;

        r0 := @this: com.ctc.wstx.evt.WstxEventReader;

     label1:
        $r1 = virtualinvoke r0.<com.ctc.wstx.evt.WstxEventReader: javax.xml.stream.events.XMLEvent nextEvent()>();

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        virtualinvoke r0.<com.ctc.wstx.evt.WstxEventReader: void throwFromSex(javax.xml.stream.XMLStreamException)>($r2);

        return null;

        catch javax.xml.stream.XMLStreamException from label1 to label2 with label3;
    }

    public javax.xml.stream.events.XMLEvent nextTag() throws javax.xml.stream.XMLStreamException
    {
        javax.xml.stream.events.XMLEvent $r1, $r3, r15;
        javax.xml.stream.XMLStreamReader $r2, $r16;
        java.lang.StringBuffer $r4, $r5, $r6, $r7, $r10, $r11, $r12, $r13;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r8, $r14;
        boolean $z0, $z1;
        com.ctc.wstx.evt.WstxEventReader r0;
        javax.xml.stream.events.Characters $r9;

        r0 := @this: com.ctc.wstx.evt.WstxEventReader;

        $r1 = r0.<com.ctc.wstx.evt.WstxEventReader: javax.xml.stream.events.XMLEvent mPeekedEvent>;

        if $r1 == null goto label09;

        r15 = r0.<com.ctc.wstx.evt.WstxEventReader: javax.xml.stream.events.XMLEvent mPeekedEvent>;

        r0.<com.ctc.wstx.evt.WstxEventReader: javax.xml.stream.events.XMLEvent mPeekedEvent> = null;

        $i1 = interfaceinvoke r15.<javax.xml.stream.events.XMLEvent: int getEventType()>();

        tableswitch($i1)
        {
            case 1: goto label06;
            case 2: goto label06;
            case 3: goto label03;
            case 4: goto label04;
            case 5: goto label03;
            case 6: goto label03;
            case 7: goto label02;
            case 8: goto label01;
            case 9: goto label07;
            case 10: goto label07;
            case 11: goto label07;
            case 12: goto label04;
            default: goto label07;
        };

     label01:
        return null;

     label02:
        goto label08;

     label03:
        goto label08;

     label04:
        $r9 = (javax.xml.stream.events.Characters) r15;

        $z1 = interfaceinvoke $r9.<javax.xml.stream.events.Characters: boolean isWhiteSpace()>();

        if $z1 == 0 goto label05;

        goto label08;

     label05:
        virtualinvoke r0.<com.ctc.wstx.evt.WstxEventReader: void throwParseError(java.lang.String)>("Received non-all-whitespace CHARACTERS or CDATA event in nextTag().");

        goto label08;

     label06:
        return r15;

     label07:
        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Received event ");

        $i2 = interfaceinvoke r15.<javax.xml.stream.events.XMLEvent: int getEventType()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", instead of START_ELEMENT or END_ELEMENT.");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<com.ctc.wstx.evt.WstxEventReader: void throwParseError(java.lang.String)>($r14);

     label08:
        goto label10;

     label09:
        $i0 = r0.<com.ctc.wstx.evt.WstxEventReader: int mState>;

        if $i0 != 1 goto label10;

        r0.<com.ctc.wstx.evt.WstxEventReader: int mState> = 3;

     label10:
        $r16 = r0.<com.ctc.wstx.evt.WstxEventReader: javax.xml.stream.XMLStreamReader mReader>;

        $i3 = interfaceinvoke $r16.<javax.xml.stream.XMLStreamReader: int next()>();

        tableswitch($i3)
        {
            case 1: goto label15;
            case 2: goto label15;
            case 3: goto label12;
            case 4: goto label13;
            case 5: goto label12;
            case 6: goto label12;
            case 7: goto label16;
            case 8: goto label11;
            case 9: goto label16;
            case 10: goto label16;
            case 11: goto label16;
            case 12: goto label13;
            default: goto label16;
        };

     label11:
        return null;

     label12:
        goto label10;

     label13:
        $r2 = r0.<com.ctc.wstx.evt.WstxEventReader: javax.xml.stream.XMLStreamReader mReader>;

        $z0 = interfaceinvoke $r2.<javax.xml.stream.XMLStreamReader: boolean isWhiteSpace()>();

        if $z0 == 0 goto label14;

        goto label10;

     label14:
        virtualinvoke r0.<com.ctc.wstx.evt.WstxEventReader: void throwParseError(java.lang.String)>("Received non-all-whitespace CHARACTERS or CDATA event in nextTag().");

        goto label17;

     label15:
        $r3 = virtualinvoke r0.<com.ctc.wstx.evt.WstxEventReader: javax.xml.stream.events.XMLEvent createNextEvent(boolean,int)>(0, $i3);

        return $r3;

     label16:
        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Received event ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i3);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", instead of START_ELEMENT or END_ELEMENT.");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<com.ctc.wstx.evt.WstxEventReader: void throwParseError(java.lang.String)>($r8);

     label17:
        goto label10;
    }

    public javax.xml.stream.events.XMLEvent peek() throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.evt.WstxEventReader r0;
        javax.xml.stream.events.XMLEvent $r1, $r4, $r5, $r6;
        javax.xml.stream.XMLStreamReader $r2, $r3;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.ctc.wstx.evt.WstxEventReader;

        $r1 = r0.<com.ctc.wstx.evt.WstxEventReader: javax.xml.stream.events.XMLEvent mPeekedEvent>;

        if $r1 != null goto label3;

        $i0 = r0.<com.ctc.wstx.evt.WstxEventReader: int mState>;

        if $i0 != 2 goto label1;

        return null;

     label1:
        $i1 = r0.<com.ctc.wstx.evt.WstxEventReader: int mState>;

        if $i1 != 1 goto label2;

        r0.<com.ctc.wstx.evt.WstxEventReader: int mPrePeekEvent> = 7;

        $r5 = virtualinvoke r0.<com.ctc.wstx.evt.WstxEventReader: javax.xml.stream.events.XMLEvent createStartEvent()>();

        r0.<com.ctc.wstx.evt.WstxEventReader: javax.xml.stream.events.XMLEvent mPeekedEvent> = $r5;

        r0.<com.ctc.wstx.evt.WstxEventReader: int mState> = 3;

        goto label3;

     label2:
        $r2 = r0.<com.ctc.wstx.evt.WstxEventReader: javax.xml.stream.XMLStreamReader mReader>;

        $i2 = interfaceinvoke $r2.<javax.xml.stream.XMLStreamReader: int getEventType()>();

        r0.<com.ctc.wstx.evt.WstxEventReader: int mPrePeekEvent> = $i2;

        $r3 = r0.<com.ctc.wstx.evt.WstxEventReader: javax.xml.stream.XMLStreamReader mReader>;

        $i3 = interfaceinvoke $r3.<javax.xml.stream.XMLStreamReader: int next()>();

        $r4 = virtualinvoke r0.<com.ctc.wstx.evt.WstxEventReader: javax.xml.stream.events.XMLEvent createNextEvent(boolean,int)>(0, $i3);

        r0.<com.ctc.wstx.evt.WstxEventReader: javax.xml.stream.events.XMLEvent mPeekedEvent> = $r4;

     label3:
        $r6 = r0.<com.ctc.wstx.evt.WstxEventReader: javax.xml.stream.events.XMLEvent mPeekedEvent>;

        return $r6;
    }

    public void remove()
    {
        java.lang.UnsupportedOperationException $r0;
        com.ctc.wstx.evt.WstxEventReader r1;

        r1 := @this: com.ctc.wstx.evt.WstxEventReader;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Can not remove events from XMLEventReader.");

        throw $r0;
    }

    public boolean hasNextEvent() throws javax.xml.stream.XMLStreamException
    {
        int $i0;
        com.ctc.wstx.evt.WstxEventReader r0;
        boolean $z0;

        r0 := @this: com.ctc.wstx.evt.WstxEventReader;

        $i0 = r0.<com.ctc.wstx.evt.WstxEventReader: int mState>;

        if $i0 == 2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    protected javax.xml.stream.events.XMLEvent createNextEvent(boolean, int) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.evt.WstxEventReader r0;
        javax.xml.stream.events.XMLEvent $r3;
        javax.xml.stream.XMLStreamReader $r1;
        javax.xml.stream.util.XMLEventAllocator $r2;
        int i0;
        boolean z0;

        r0 := @this: com.ctc.wstx.evt.WstxEventReader;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        $r2 = r0.<com.ctc.wstx.evt.WstxEventReader: javax.xml.stream.util.XMLEventAllocator mAllocator>;

        $r1 = r0.<com.ctc.wstx.evt.WstxEventReader: javax.xml.stream.XMLStreamReader mReader>;

        $r3 = interfaceinvoke $r2.<javax.xml.stream.util.XMLEventAllocator: javax.xml.stream.events.XMLEvent allocate(javax.xml.stream.XMLStreamReader)>($r1);

        if z0 == 0 goto label1;

        if i0 != 8 goto label1;

        r0.<com.ctc.wstx.evt.WstxEventReader: int mState> = 2;

     label1:
        return $r3;
    }

    protected javax.xml.stream.events.XMLEvent createStartEvent() throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.evt.WstxEventReader r0;
        javax.xml.stream.events.XMLEvent $r3;
        javax.xml.stream.XMLStreamReader $r1;
        javax.xml.stream.util.XMLEventAllocator $r2;

        r0 := @this: com.ctc.wstx.evt.WstxEventReader;

        $r2 = r0.<com.ctc.wstx.evt.WstxEventReader: javax.xml.stream.util.XMLEventAllocator mAllocator>;

        $r1 = r0.<com.ctc.wstx.evt.WstxEventReader: javax.xml.stream.XMLStreamReader mReader>;

        $r3 = interfaceinvoke $r2.<javax.xml.stream.util.XMLEventAllocator: javax.xml.stream.events.XMLEvent allocate(javax.xml.stream.XMLStreamReader)>($r1);

        return $r3;
    }

    private void throwEOD()
    {
        com.ctc.wstx.evt.WstxEventReader r1;
        java.util.NoSuchElementException $r0;

        r1 := @this: com.ctc.wstx.evt.WstxEventReader;

        $r0 = new java.util.NoSuchElementException;

        specialinvoke $r0.<java.util.NoSuchElementException: void <init>()>();

        throw $r0;
    }

    protected void throwFromSex(javax.xml.stream.XMLStreamException)
    {
        com.ctc.wstx.evt.WstxEventReader r1;
        javax.xml.stream.XMLStreamException r0;

        r1 := @this: com.ctc.wstx.evt.WstxEventReader;

        r0 := @parameter0: javax.xml.stream.XMLStreamException;

        staticinvoke <com.ctc.wstx.util.ExceptionUtil: void throwRuntimeException(java.lang.Throwable)>(r0);

        return;
    }

    protected void throwParseError(java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.evt.WstxEventReader r0;
        javax.xml.stream.XMLStreamReader $r2;
        javax.xml.stream.Location $r3;
        java.lang.String r1;

        r0 := @this: com.ctc.wstx.evt.WstxEventReader;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.ctc.wstx.evt.WstxEventReader: javax.xml.stream.XMLStreamReader mReader>;

        $r3 = interfaceinvoke $r2.<javax.xml.stream.XMLStreamReader: javax.xml.stream.Location getLocation()>();

        virtualinvoke r0.<com.ctc.wstx.evt.WstxEventReader: void throwParseError(java.lang.String,javax.xml.stream.Location)>(r1, $r3);

        return;
    }

    protected void throwParseError(java.lang.String, javax.xml.stream.Location) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.evt.WstxEventReader r3;
        com.ctc.wstx.exc.WstxParsingException $r0;
        javax.xml.stream.Location r2;
        java.lang.String r1;

        r3 := @this: com.ctc.wstx.evt.WstxEventReader;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: javax.xml.stream.Location;

        $r0 = new com.ctc.wstx.exc.WstxParsingException;

        specialinvoke $r0.<com.ctc.wstx.exc.WstxParsingException: void <init>(java.lang.String,javax.xml.stream.Location)>(r1, r2);

        throw $r0;
    }

    public static void <clinit>()
    {
        <com.ctc.wstx.evt.WstxEventReader: int STATE_CONTENT> = 3;

        <com.ctc.wstx.evt.WstxEventReader: int STATE_EOD> = 2;

        <com.ctc.wstx.evt.WstxEventReader: int STATE_INITIAL> = 1;

        return;
    }
}
