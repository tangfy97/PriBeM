public class org.sat4j.tools.DimacsStringSolver extends org.sat4j.tools.AbstractOutputSolver
{
    private static final long serialVersionUID;
    private java.lang.StringBuffer out;
    private int firstCharPos;
    private final int initBuilderSize;
    private int maxvarid;
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        org.sat4j.tools.DimacsStringSolver r0;

        r0 := @this: org.sat4j.tools.DimacsStringSolver;

        specialinvoke r0.<org.sat4j.tools.DimacsStringSolver: void <init>(int)>(16);

        return;
    }

    public void <init>(int)
    {
        int i0;
        org.sat4j.tools.DimacsStringSolver r0;
        java.lang.StringBuffer $r1;

        r0 := @this: org.sat4j.tools.DimacsStringSolver;

        i0 := @parameter0: int;

        specialinvoke r0.<org.sat4j.tools.AbstractOutputSolver: void <init>()>();

        r0.<org.sat4j.tools.DimacsStringSolver: int maxvarid> = 0;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>(int)>(i0);

        r0.<org.sat4j.tools.DimacsStringSolver: java.lang.StringBuffer out> = $r1;

        r0.<org.sat4j.tools.DimacsStringSolver: int initBuilderSize> = i0;

        return;
    }

    public java.lang.StringBuffer getOut()
    {
        org.sat4j.tools.DimacsStringSolver r0;
        java.lang.StringBuffer $r1;

        r0 := @this: org.sat4j.tools.DimacsStringSolver;

        $r1 = r0.<org.sat4j.tools.DimacsStringSolver: java.lang.StringBuffer out>;

        return $r1;
    }

    public int newVar()
    {
        org.sat4j.tools.DimacsStringSolver r0;

        r0 := @this: org.sat4j.tools.DimacsStringSolver;

        return 0;
    }

    public int newVar(int)
    {
        int i0;
        org.sat4j.tools.DimacsStringSolver r0;

        r0 := @this: org.sat4j.tools.DimacsStringSolver;

        i0 := @parameter0: int;

        virtualinvoke r0.<org.sat4j.tools.DimacsStringSolver: void setNbVars(int)>(i0);

        return i0;
    }

    protected void setNbVars(int)
    {
        int i0;
        org.sat4j.tools.DimacsStringSolver r0;

        r0 := @this: org.sat4j.tools.DimacsStringSolver;

        i0 := @parameter0: int;

        r0.<org.sat4j.tools.DimacsStringSolver: int nbvars> = i0;

        r0.<org.sat4j.tools.DimacsStringSolver: int maxvarid> = i0;

        return;
    }

    public void setExpectedNumberOfClauses(int)
    {
        org.sat4j.tools.DimacsStringSolver r0;
        java.lang.StringBuffer $r1, $r2;
        int i0;

        r0 := @this: org.sat4j.tools.DimacsStringSolver;

        i0 := @parameter0: int;

        $r1 = r0.<org.sat4j.tools.DimacsStringSolver: java.lang.StringBuffer out>;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r2 = r0.<org.sat4j.tools.DimacsStringSolver: java.lang.StringBuffer out>;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        r0.<org.sat4j.tools.DimacsStringSolver: int nbclauses> = i0;

        r0.<org.sat4j.tools.DimacsStringSolver: boolean fixedNbClauses> = 1;

        return;
    }

    public org.sat4j.specs.IConstr addClause(org.sat4j.specs.IVecInt) throws org.sat4j.specs.ContradictionException
    {
        org.sat4j.specs.IteratorInt $r2;
        java.lang.StringBuffer $r3, $r4, $r5, $r7, $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r6;
        boolean $z0, $z1, $z2, $z3;
        org.sat4j.specs.IVecInt r1;
        org.sat4j.tools.DimacsStringSolver r0;

        r0 := @this: org.sat4j.tools.DimacsStringSolver;

        r1 := @parameter0: org.sat4j.specs.IVecInt;

        $z0 = r0.<org.sat4j.tools.DimacsStringSolver: boolean firstConstr>;

        if $z0 == 0 goto label2;

        $z1 = r0.<org.sat4j.tools.DimacsStringSolver: boolean fixedNbClauses>;

        if $z1 != 0 goto label1;

        $i3 = r0.<org.sat4j.tools.DimacsStringSolver: int nbvars>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i3);

        $i4 = virtualinvoke $r6.<java.lang.String: int length()>();

        $i5 = 7 + $i4;

        r0.<org.sat4j.tools.DimacsStringSolver: int firstCharPos> = $i5;

        $r7 = r0.<org.sat4j.tools.DimacsStringSolver: java.lang.StringBuffer out>;

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("                    ");

        $r8 = r0.<org.sat4j.tools.DimacsStringSolver: java.lang.StringBuffer out>;

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        r0.<org.sat4j.tools.DimacsStringSolver: int nbclauses> = 0;

     label1:
        r0.<org.sat4j.tools.DimacsStringSolver: boolean firstConstr> = 0;

     label2:
        $z2 = r0.<org.sat4j.tools.DimacsStringSolver: boolean fixedNbClauses>;

        if $z2 != 0 goto label3;

        $i1 = r0.<org.sat4j.tools.DimacsStringSolver: int nbclauses>;

        $i2 = $i1 + 1;

        r0.<org.sat4j.tools.DimacsStringSolver: int nbclauses> = $i2;

     label3:
        $r2 = interfaceinvoke r1.<org.sat4j.specs.IVecInt: org.sat4j.specs.IteratorInt iterator()>();

     label4:
        $z3 = interfaceinvoke $r2.<org.sat4j.specs.IteratorInt: boolean hasNext()>();

        if $z3 == 0 goto label5;

        $r4 = r0.<org.sat4j.tools.DimacsStringSolver: java.lang.StringBuffer out>;

        $i0 = interfaceinvoke $r2.<org.sat4j.specs.IteratorInt: int next()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        goto label4;

     label5:
        $r3 = r0.<org.sat4j.tools.DimacsStringSolver: java.lang.StringBuffer out>;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("0\n");

        return null;
    }

    public org.sat4j.specs.IConstr addAtMost(org.sat4j.specs.IVecInt, int) throws org.sat4j.specs.ContradictionException
    {
        java.lang.AssertionError $r8;
        java.lang.StringBuffer $r2, $r3, $r4, $r5, $r6, $r7;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i9, i10;
        java.lang.String $r13;
        boolean $z0, $z1, $z2;
        java.lang.UnsupportedOperationException $r9;
        org.sat4j.specs.IVecInt r1;
        org.sat4j.tools.DimacsStringSolver r0;
        java.lang.StringBuilder $r10, $r11, $r12;

        r0 := @this: org.sat4j.tools.DimacsStringSolver;

        r1 := @parameter0: org.sat4j.specs.IVecInt;

        i0 := @parameter1: int;

        if i0 <= 1 goto label1;

        $r9 = new java.lang.UnsupportedOperationException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not a clausal problem! degree ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r13);

        throw $r9;

     label1:
        $z0 = <org.sat4j.tools.DimacsStringSolver: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        if i0 == 1 goto label2;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label2:
        $z1 = r0.<org.sat4j.tools.DimacsStringSolver: boolean firstConstr>;

        if $z1 == 0 goto label3;

        r0.<org.sat4j.tools.DimacsStringSolver: int firstCharPos> = 0;

        $r6 = r0.<org.sat4j.tools.DimacsStringSolver: java.lang.StringBuffer out>;

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("                    ");

        $r7 = r0.<org.sat4j.tools.DimacsStringSolver: java.lang.StringBuffer out>;

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        r0.<org.sat4j.tools.DimacsStringSolver: int nbclauses> = 0;

        r0.<org.sat4j.tools.DimacsStringSolver: boolean firstConstr> = 0;

     label3:
        i8 = 0;

     label4:
        $i9 = interfaceinvoke r1.<org.sat4j.specs.IVecInt: int size()>();

        if i8 > $i9 goto label8;

        i10 = i8 + 1;

     label5:
        $i1 = interfaceinvoke r1.<org.sat4j.specs.IVecInt: int size()>();

        if i10 >= $i1 goto label7;

        $z2 = r0.<org.sat4j.tools.DimacsStringSolver: boolean fixedNbClauses>;

        if $z2 != 0 goto label6;

        $i6 = r0.<org.sat4j.tools.DimacsStringSolver: int nbclauses>;

        $i7 = $i6 + 1;

        r0.<org.sat4j.tools.DimacsStringSolver: int nbclauses> = $i7;

     label6:
        $r2 = r0.<org.sat4j.tools.DimacsStringSolver: java.lang.StringBuffer out>;

        $i2 = interfaceinvoke r1.<org.sat4j.specs.IVecInt: int get(int)>(i8);

        $i3 = neg $i2;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i3);

        $r3 = r0.<org.sat4j.tools.DimacsStringSolver: java.lang.StringBuffer out>;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r4 = r0.<org.sat4j.tools.DimacsStringSolver: java.lang.StringBuffer out>;

        $i4 = interfaceinvoke r1.<org.sat4j.specs.IVecInt: int get(int)>(i10);

        $i5 = neg $i4;

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i5);

        $r5 = r0.<org.sat4j.tools.DimacsStringSolver: java.lang.StringBuffer out>;

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" 0\n");

        i10 = i10 + 1;

        goto label5;

     label7:
        i8 = i8 + 1;

        goto label4;

     label8:
        return null;
    }

    public org.sat4j.specs.IConstr addExactly(org.sat4j.specs.IVecInt, int) throws org.sat4j.specs.ContradictionException
    {
        java.lang.UnsupportedOperationException $r3;
        org.sat4j.specs.IVecInt r1;
        java.lang.AssertionError $r2;
        org.sat4j.tools.DimacsStringSolver r0;
        int i0;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;
        boolean $z0;

        r0 := @this: org.sat4j.tools.DimacsStringSolver;

        r1 := @parameter0: org.sat4j.specs.IVecInt;

        i0 := @parameter1: int;

        if i0 <= 1 goto label1;

        $r3 = new java.lang.UnsupportedOperationException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not a clausal problem! degree ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label1:
        $z0 = <org.sat4j.tools.DimacsStringSolver: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        if i0 == 1 goto label2;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label2:
        virtualinvoke r0.<org.sat4j.tools.DimacsStringSolver: org.sat4j.specs.IConstr addAtMost(org.sat4j.specs.IVecInt,int)>(r1, i0);

        virtualinvoke r0.<org.sat4j.tools.DimacsStringSolver: org.sat4j.specs.IConstr addAtLeast(org.sat4j.specs.IVecInt,int)>(r1, i0);

        return null;
    }

    public org.sat4j.specs.IConstr addAtLeast(org.sat4j.specs.IVecInt, int) throws org.sat4j.specs.ContradictionException
    {
        java.lang.UnsupportedOperationException $r4;
        org.sat4j.specs.IConstr $r2;
        org.sat4j.specs.IVecInt r1;
        java.lang.AssertionError $r3;
        org.sat4j.tools.DimacsStringSolver r0;
        int i0;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8;
        boolean $z0;

        r0 := @this: org.sat4j.tools.DimacsStringSolver;

        r1 := @parameter0: org.sat4j.specs.IVecInt;

        i0 := @parameter1: int;

        if i0 <= 1 goto label1;

        $r4 = new java.lang.UnsupportedOperationException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not a clausal problem! degree ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label1:
        $z0 = <org.sat4j.tools.DimacsStringSolver: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        if i0 == 1 goto label2;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label2:
        $r2 = virtualinvoke r0.<org.sat4j.tools.DimacsStringSolver: org.sat4j.specs.IConstr addClause(org.sat4j.specs.IVecInt)>(r1);

        return $r2;
    }

    public void reset()
    {
        int $i0;
        org.sat4j.tools.DimacsStringSolver r0;
        java.lang.StringBuffer $r1;

        r0 := @this: org.sat4j.tools.DimacsStringSolver;

        r0.<org.sat4j.tools.DimacsStringSolver: boolean fixedNbClauses> = 0;

        r0.<org.sat4j.tools.DimacsStringSolver: boolean firstConstr> = 1;

        $r1 = new java.lang.StringBuffer;

        $i0 = r0.<org.sat4j.tools.DimacsStringSolver: int initBuilderSize>;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>(int)>($i0);

        r0.<org.sat4j.tools.DimacsStringSolver: java.lang.StringBuffer out> = $r1;

        r0.<org.sat4j.tools.DimacsStringSolver: int maxvarid> = 0;

        return;
    }

    public java.lang.String toString(java.lang.String)
    {
        org.sat4j.tools.DimacsStringSolver r0;
        java.lang.String r1;

        r0 := @this: org.sat4j.tools.DimacsStringSolver;

        r1 := @parameter0: java.lang.String;

        return "Dimacs output solver";
    }

    public int nConstraints()
    {
        int $i0;
        org.sat4j.tools.DimacsStringSolver r0;

        r0 := @this: org.sat4j.tools.DimacsStringSolver;

        $i0 = r0.<org.sat4j.tools.DimacsStringSolver: int nbclauses>;

        return $i0;
    }

    public int nVars()
    {
        int $i0;
        org.sat4j.tools.DimacsStringSolver r0;

        r0 := @this: org.sat4j.tools.DimacsStringSolver;

        $i0 = r0.<org.sat4j.tools.DimacsStringSolver: int maxvarid>;

        return $i0;
    }

    public java.lang.String toString()
    {
        org.sat4j.tools.DimacsStringSolver r0;
        java.lang.StringBuffer $r2, $r8;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r1, $r3, $r4, $r5, $r6;
        java.lang.String $r7, $r9;

        r0 := @this: org.sat4j.tools.DimacsStringSolver;

        $r2 = r0.<org.sat4j.tools.DimacsStringSolver: java.lang.StringBuffer out>;

        $i0 = r0.<org.sat4j.tools.DimacsStringSolver: int firstCharPos>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("p cnf ");

        $i1 = r0.<org.sat4j.tools.DimacsStringSolver: int maxvarid>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i2 = r0.<org.sat4j.tools.DimacsStringSolver: int nbclauses>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer insert(int,java.lang.String)>($i0, $r7);

        $r8 = r0.<org.sat4j.tools.DimacsStringSolver: java.lang.StringBuffer out>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r9;
    }

    public int nextFreeVarId(boolean)
    {
        org.sat4j.tools.DimacsStringSolver r0;
        int $i0, $i1, $i2, $i3;
        boolean z0;

        r0 := @this: org.sat4j.tools.DimacsStringSolver;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $i2 = r0.<org.sat4j.tools.DimacsStringSolver: int maxvarid>;

        $i3 = $i2 + 1;

        r0.<org.sat4j.tools.DimacsStringSolver: int maxvarid> = $i3;

        return $i3;

     label1:
        $i0 = r0.<org.sat4j.tools.DimacsStringSolver: int maxvarid>;

        $i1 = $i0 + 1;

        return $i1;
    }

    public int[] modelWithInternalVariables()
    {
        java.lang.UnsupportedOperationException $r0;
        org.sat4j.tools.DimacsStringSolver r1;

        r1 := @this: org.sat4j.tools.DimacsStringSolver;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public int realNumberOfVariables()
    {
        int $i0;
        org.sat4j.tools.DimacsStringSolver r0;

        r0 := @this: org.sat4j.tools.DimacsStringSolver;

        $i0 = r0.<org.sat4j.tools.DimacsStringSolver: int maxvarid>;

        return $i0;
    }

    public void registerLiteral(int)
    {
        int i0;
        java.lang.UnsupportedOperationException $r0;
        org.sat4j.tools.DimacsStringSolver r1;

        r1 := @this: org.sat4j.tools.DimacsStringSolver;

        i0 := @parameter0: int;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public boolean primeImplicant(int)
    {
        int i0;
        java.lang.UnsupportedOperationException $r0;
        org.sat4j.tools.DimacsStringSolver r1;

        r1 := @this: org.sat4j.tools.DimacsStringSolver;

        i0 := @parameter0: int;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        <org.sat4j.tools.DimacsStringSolver: long serialVersionUID> = 1L;

        $r0 = class "Lorg/sat4j/tools/DimacsStringSolver;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.sat4j.tools.DimacsStringSolver: boolean $assertionsDisabled> = $z1;

        return;
    }
}
