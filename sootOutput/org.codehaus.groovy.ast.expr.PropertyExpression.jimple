public class org.codehaus.groovy.ast.expr.PropertyExpression extends org.codehaus.groovy.ast.expr.Expression
{
    private org.codehaus.groovy.ast.expr.Expression objectExpression;
    private org.codehaus.groovy.ast.expr.Expression property;
    private boolean spreadSafe;
    private boolean safe;
    private boolean isStatic;
    private boolean implicitThis;

    public boolean isStatic()
    {
        org.codehaus.groovy.ast.expr.PropertyExpression r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.ast.expr.PropertyExpression;

        $z0 = r0.<org.codehaus.groovy.ast.expr.PropertyExpression: boolean isStatic>;

        return $z0;
    }

    public void <init>(org.codehaus.groovy.ast.expr.Expression, java.lang.String)
    {
        org.codehaus.groovy.ast.expr.PropertyExpression r0;
        org.codehaus.groovy.ast.expr.Expression r1;
        org.codehaus.groovy.ast.expr.ConstantExpression $r2;
        java.lang.String r3;

        r0 := @this: org.codehaus.groovy.ast.expr.PropertyExpression;

        r1 := @parameter0: org.codehaus.groovy.ast.expr.Expression;

        r3 := @parameter1: java.lang.String;

        $r2 = new org.codehaus.groovy.ast.expr.ConstantExpression;

        specialinvoke $r2.<org.codehaus.groovy.ast.expr.ConstantExpression: void <init>(java.lang.Object)>(r3);

        specialinvoke r0.<org.codehaus.groovy.ast.expr.PropertyExpression: void <init>(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression,boolean)>(r1, $r2, 0);

        return;
    }

    public void <init>(org.codehaus.groovy.ast.expr.Expression, org.codehaus.groovy.ast.expr.Expression)
    {
        org.codehaus.groovy.ast.expr.Expression r1, r2;
        org.codehaus.groovy.ast.expr.PropertyExpression r0;

        r0 := @this: org.codehaus.groovy.ast.expr.PropertyExpression;

        r1 := @parameter0: org.codehaus.groovy.ast.expr.Expression;

        r2 := @parameter1: org.codehaus.groovy.ast.expr.Expression;

        specialinvoke r0.<org.codehaus.groovy.ast.expr.PropertyExpression: void <init>(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression,boolean)>(r1, r2, 0);

        return;
    }

    public void <init>(org.codehaus.groovy.ast.expr.Expression, org.codehaus.groovy.ast.expr.Expression, boolean)
    {
        org.codehaus.groovy.ast.expr.PropertyExpression r0;
        org.codehaus.groovy.ast.expr.Expression r1, r2;
        boolean z0;

        r0 := @this: org.codehaus.groovy.ast.expr.PropertyExpression;

        r1 := @parameter0: org.codehaus.groovy.ast.expr.Expression;

        r2 := @parameter1: org.codehaus.groovy.ast.expr.Expression;

        z0 := @parameter2: boolean;

        specialinvoke r0.<org.codehaus.groovy.ast.expr.Expression: void <init>()>();

        r0.<org.codehaus.groovy.ast.expr.PropertyExpression: boolean spreadSafe> = 0;

        r0.<org.codehaus.groovy.ast.expr.PropertyExpression: boolean safe> = 0;

        r0.<org.codehaus.groovy.ast.expr.PropertyExpression: boolean isStatic> = 0;

        r0.<org.codehaus.groovy.ast.expr.PropertyExpression: boolean implicitThis> = 0;

        r0.<org.codehaus.groovy.ast.expr.PropertyExpression: org.codehaus.groovy.ast.expr.Expression objectExpression> = r1;

        r0.<org.codehaus.groovy.ast.expr.PropertyExpression: org.codehaus.groovy.ast.expr.Expression property> = r2;

        r0.<org.codehaus.groovy.ast.expr.PropertyExpression: boolean safe> = z0;

        return;
    }

    public void visit(org.codehaus.groovy.ast.GroovyCodeVisitor)
    {
        org.codehaus.groovy.ast.expr.PropertyExpression r1;
        org.codehaus.groovy.ast.GroovyCodeVisitor r0;

        r1 := @this: org.codehaus.groovy.ast.expr.PropertyExpression;

        r0 := @parameter0: org.codehaus.groovy.ast.GroovyCodeVisitor;

        interfaceinvoke r0.<org.codehaus.groovy.ast.GroovyCodeVisitor: void visitPropertyExpression(org.codehaus.groovy.ast.expr.PropertyExpression)>(r1);

        return;
    }

    public boolean isDynamic()
    {
        org.codehaus.groovy.ast.expr.PropertyExpression r0;

        r0 := @this: org.codehaus.groovy.ast.expr.PropertyExpression;

        return 1;
    }

    public org.codehaus.groovy.ast.expr.Expression transformExpression(org.codehaus.groovy.ast.expr.ExpressionTransformer)
    {
        org.codehaus.groovy.ast.expr.PropertyExpression r0;
        org.codehaus.groovy.ast.expr.ExpressionTransformer r1;

        r0 := @this: org.codehaus.groovy.ast.expr.PropertyExpression;

        r1 := @parameter0: org.codehaus.groovy.ast.expr.ExpressionTransformer;

        return r0;
    }

    public org.codehaus.groovy.ast.expr.Expression getObjectExpression()
    {
        org.codehaus.groovy.ast.expr.Expression $r1;
        org.codehaus.groovy.ast.expr.PropertyExpression r0;

        r0 := @this: org.codehaus.groovy.ast.expr.PropertyExpression;

        $r1 = r0.<org.codehaus.groovy.ast.expr.PropertyExpression: org.codehaus.groovy.ast.expr.Expression objectExpression>;

        return $r1;
    }

    public void setObjectExpression(org.codehaus.groovy.ast.expr.Expression)
    {
        org.codehaus.groovy.ast.expr.Expression r1;
        org.codehaus.groovy.ast.expr.PropertyExpression r0;

        r0 := @this: org.codehaus.groovy.ast.expr.PropertyExpression;

        r1 := @parameter0: org.codehaus.groovy.ast.expr.Expression;

        r0.<org.codehaus.groovy.ast.expr.PropertyExpression: org.codehaus.groovy.ast.expr.Expression objectExpression> = r1;

        return;
    }

    public org.codehaus.groovy.ast.expr.Expression getProperty()
    {
        org.codehaus.groovy.ast.expr.Expression $r1;
        org.codehaus.groovy.ast.expr.PropertyExpression r0;

        r0 := @this: org.codehaus.groovy.ast.expr.PropertyExpression;

        $r1 = r0.<org.codehaus.groovy.ast.expr.PropertyExpression: org.codehaus.groovy.ast.expr.Expression property>;

        return $r1;
    }

    public java.lang.String getPropertyAsString()
    {
        org.codehaus.groovy.ast.expr.PropertyExpression r0;
        org.codehaus.groovy.ast.expr.Expression $r1, $r2, $r3;
        org.codehaus.groovy.ast.expr.ConstantExpression r4;
        java.lang.String $r5;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.ast.expr.PropertyExpression;

        $r1 = r0.<org.codehaus.groovy.ast.expr.PropertyExpression: org.codehaus.groovy.ast.expr.Expression property>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<org.codehaus.groovy.ast.expr.PropertyExpression: org.codehaus.groovy.ast.expr.Expression property>;

        $z0 = $r2 instanceof org.codehaus.groovy.ast.expr.ConstantExpression;

        if $z0 != 0 goto label2;

        return null;

     label2:
        $r3 = r0.<org.codehaus.groovy.ast.expr.PropertyExpression: org.codehaus.groovy.ast.expr.Expression property>;

        r4 = (org.codehaus.groovy.ast.expr.ConstantExpression) $r3;

        $r5 = virtualinvoke r4.<org.codehaus.groovy.ast.expr.ConstantExpression: java.lang.String getText()>();

        return $r5;
    }

    public java.lang.String getText()
    {
        org.codehaus.groovy.ast.expr.PropertyExpression r1;
        java.lang.StringBuffer $r0, $r4, $r5, $r8;
        org.codehaus.groovy.ast.expr.Expression $r2, $r6;
        java.lang.String $r3, $r7, $r9;

        r1 := @this: org.codehaus.groovy.ast.expr.PropertyExpression;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = r1.<org.codehaus.groovy.ast.expr.PropertyExpression: org.codehaus.groovy.ast.expr.Expression objectExpression>;

        $r3 = virtualinvoke $r2.<org.codehaus.groovy.ast.expr.Expression: java.lang.String getText()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r6 = r1.<org.codehaus.groovy.ast.expr.PropertyExpression: org.codehaus.groovy.ast.expr.Expression property>;

        $r7 = virtualinvoke $r6.<org.codehaus.groovy.ast.expr.Expression: java.lang.String getText()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r9;
    }

    public boolean isSafe()
    {
        org.codehaus.groovy.ast.expr.PropertyExpression r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.ast.expr.PropertyExpression;

        $z0 = r0.<org.codehaus.groovy.ast.expr.PropertyExpression: boolean safe>;

        return $z0;
    }

    public boolean isSpreadSafe()
    {
        org.codehaus.groovy.ast.expr.PropertyExpression r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.ast.expr.PropertyExpression;

        $z0 = r0.<org.codehaus.groovy.ast.expr.PropertyExpression: boolean spreadSafe>;

        return $z0;
    }

    public void setSpreadSafe(boolean)
    {
        org.codehaus.groovy.ast.expr.PropertyExpression r0;
        boolean z0;

        r0 := @this: org.codehaus.groovy.ast.expr.PropertyExpression;

        z0 := @parameter0: boolean;

        r0.<org.codehaus.groovy.ast.expr.PropertyExpression: boolean spreadSafe> = z0;

        return;
    }

    public java.lang.String toString()
    {
        org.codehaus.groovy.ast.expr.PropertyExpression r1;
        java.lang.StringBuffer $r0, $r3, $r4, $r6, $r7, $r9, $r10;
        java.lang.String $r2, $r11;
        org.codehaus.groovy.ast.expr.Expression $r5, $r8;

        r1 := @this: org.codehaus.groovy.ast.expr.PropertyExpression;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = specialinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[object: ");

        $r5 = r1.<org.codehaus.groovy.ast.expr.PropertyExpression: org.codehaus.groovy.ast.expr.Expression objectExpression>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" property: ");

        $r8 = r1.<org.codehaus.groovy.ast.expr.PropertyExpression: org.codehaus.groovy.ast.expr.Expression property>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r11;
    }

    public void setStatic(boolean)
    {
        org.codehaus.groovy.ast.expr.PropertyExpression r0;
        boolean z0;

        r0 := @this: org.codehaus.groovy.ast.expr.PropertyExpression;

        z0 := @parameter0: boolean;

        r0.<org.codehaus.groovy.ast.expr.PropertyExpression: boolean isStatic> = z0;

        return;
    }

    public boolean isImplicitThis()
    {
        org.codehaus.groovy.ast.expr.PropertyExpression r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.ast.expr.PropertyExpression;

        $z0 = r0.<org.codehaus.groovy.ast.expr.PropertyExpression: boolean implicitThis>;

        return $z0;
    }

    public void setImplicitThis(boolean)
    {
        org.codehaus.groovy.ast.expr.PropertyExpression r0;
        boolean z0;

        r0 := @this: org.codehaus.groovy.ast.expr.PropertyExpression;

        z0 := @parameter0: boolean;

        r0.<org.codehaus.groovy.ast.expr.PropertyExpression: boolean implicitThis> = z0;

        return;
    }
}
