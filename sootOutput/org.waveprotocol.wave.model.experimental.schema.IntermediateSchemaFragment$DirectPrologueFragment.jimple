final class org.waveprotocol.wave.model.experimental.schema.IntermediateSchemaFragment$DirectPrologueFragment extends org.waveprotocol.wave.model.experimental.schema.IntermediateSchemaFragment$IntermediatePrologueFragment
{
    private final java.util.List prologueEntries;

    void <init>(java.util.List)
    {
        java.util.List r1;
        org.waveprotocol.wave.model.experimental.schema.IntermediateSchemaFragment$DirectPrologueFragment r0;

        r0 := @this: org.waveprotocol.wave.model.experimental.schema.IntermediateSchemaFragment$DirectPrologueFragment;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<org.waveprotocol.wave.model.experimental.schema.IntermediateSchemaFragment$IntermediatePrologueFragment: void <init>()>();

        r0.<org.waveprotocol.wave.model.experimental.schema.IntermediateSchemaFragment$DirectPrologueFragment: java.util.List prologueEntries> = r1;

        return;
    }

    java.util.List resolveTopLevel(org.waveprotocol.wave.model.experimental.schema.IntermediateSchemaFragment$CompilerState)
    {
        org.waveprotocol.wave.model.experimental.schema.IntermediateSchemaFragment$DeferredCompile $r11;
        java.util.Iterator $r3;
        org.waveprotocol.wave.model.experimental.schema.SchemaPattern$PrologueEntry $r8;
        org.waveprotocol.wave.model.experimental.schema.IntermediateSchemaFragment$IntermediatePrologueEntry r5;
        java.util.ArrayList $r0;
        org.waveprotocol.wave.model.experimental.schema.IntermediateSchemaFragment$CompilerState r10;
        java.util.List $r2, $r12;
        org.waveprotocol.wave.model.experimental.schema.SchemaPattern $r6;
        org.waveprotocol.wave.model.experimental.schema.IntermediateSchemaFragment $r7;
        java.lang.Object $r4;
        java.lang.String $r9;
        org.waveprotocol.wave.model.experimental.schema.IntermediateSchemaFragment$DirectPrologueFragment r1;
        boolean $z0;

        r1 := @this: org.waveprotocol.wave.model.experimental.schema.IntermediateSchemaFragment$DirectPrologueFragment;

        r10 := @parameter0: org.waveprotocol.wave.model.experimental.schema.IntermediateSchemaFragment$CompilerState;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = r1.<org.waveprotocol.wave.model.experimental.schema.IntermediateSchemaFragment$DirectPrologueFragment: java.util.List prologueEntries>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.waveprotocol.wave.model.experimental.schema.IntermediateSchemaFragment$IntermediatePrologueEntry) $r4;

        $r6 = new org.waveprotocol.wave.model.experimental.schema.SchemaPattern;

        specialinvoke $r6.<org.waveprotocol.wave.model.experimental.schema.SchemaPattern: void <init>()>();

        $r7 = virtualinvoke r5.<org.waveprotocol.wave.model.experimental.schema.IntermediateSchemaFragment$IntermediatePrologueEntry: org.waveprotocol.wave.model.experimental.schema.IntermediateSchemaFragment fragment()>();

        $r8 = new org.waveprotocol.wave.model.experimental.schema.SchemaPattern$PrologueEntry;

        $r9 = virtualinvoke r5.<org.waveprotocol.wave.model.experimental.schema.IntermediateSchemaFragment$IntermediatePrologueEntry: java.lang.String elementType()>();

        specialinvoke $r8.<org.waveprotocol.wave.model.experimental.schema.SchemaPattern$PrologueEntry: void <init>(java.lang.String,org.waveprotocol.wave.model.experimental.schema.SchemaPattern)>($r9, $r6);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r8);

        $r12 = r10.<org.waveprotocol.wave.model.experimental.schema.IntermediateSchemaFragment$CompilerState: java.util.List deferredCompiles>;

        $r11 = new org.waveprotocol.wave.model.experimental.schema.IntermediateSchemaFragment$DeferredCompile;

        specialinvoke $r11.<org.waveprotocol.wave.model.experimental.schema.IntermediateSchemaFragment$DeferredCompile: void <init>(org.waveprotocol.wave.model.experimental.schema.IntermediateSchemaFragment,org.waveprotocol.wave.model.experimental.schema.SchemaPattern)>($r7, $r6);

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r11);

        goto label1;

     label2:
        return $r0;
    }

    java.util.List compile(org.waveprotocol.wave.model.experimental.schema.IntermediateSchemaFragment$CompilerState) throws org.waveprotocol.wave.model.experimental.schema.InvalidSchemaException
    {
        java.util.Iterator $r3;
        org.waveprotocol.wave.model.experimental.schema.SchemaPattern$PrologueEntry $r6;
        org.waveprotocol.wave.model.experimental.schema.IntermediateSchemaFragment$IntermediatePrologueEntry r5;
        java.util.ArrayList $r0;
        org.waveprotocol.wave.model.experimental.schema.IntermediateSchemaFragment$CompilerState r9;
        java.util.List $r2;
        org.waveprotocol.wave.model.experimental.schema.SchemaPattern $r10;
        org.waveprotocol.wave.model.experimental.schema.IntermediateSchemaFragment $r8;
        java.lang.Object $r4;
        java.lang.String $r7;
        org.waveprotocol.wave.model.experimental.schema.IntermediateSchemaFragment$DirectPrologueFragment r1;
        boolean $z0;

        r1 := @this: org.waveprotocol.wave.model.experimental.schema.IntermediateSchemaFragment$DirectPrologueFragment;

        r9 := @parameter0: org.waveprotocol.wave.model.experimental.schema.IntermediateSchemaFragment$CompilerState;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = r1.<org.waveprotocol.wave.model.experimental.schema.IntermediateSchemaFragment$DirectPrologueFragment: java.util.List prologueEntries>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.waveprotocol.wave.model.experimental.schema.IntermediateSchemaFragment$IntermediatePrologueEntry) $r4;

        $r6 = new org.waveprotocol.wave.model.experimental.schema.SchemaPattern$PrologueEntry;

        $r7 = staticinvoke <org.waveprotocol.wave.model.experimental.schema.IntermediateSchemaFragment$IntermediatePrologueEntry: java.lang.String access$000(org.waveprotocol.wave.model.experimental.schema.IntermediateSchemaFragment$IntermediatePrologueEntry)>(r5);

        $r8 = virtualinvoke r5.<org.waveprotocol.wave.model.experimental.schema.IntermediateSchemaFragment$IntermediatePrologueEntry: org.waveprotocol.wave.model.experimental.schema.IntermediateSchemaFragment fragment()>();

        $r10 = staticinvoke <org.waveprotocol.wave.model.experimental.schema.IntermediateSchemaFragment: org.waveprotocol.wave.model.experimental.schema.SchemaPattern access$100(org.waveprotocol.wave.model.experimental.schema.IntermediateSchemaFragment,org.waveprotocol.wave.model.experimental.schema.IntermediateSchemaFragment$CompilerState)>($r8, r9);

        specialinvoke $r6.<org.waveprotocol.wave.model.experimental.schema.SchemaPattern$PrologueEntry: void <init>(java.lang.String,org.waveprotocol.wave.model.experimental.schema.SchemaPattern)>($r7, $r10);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r6);

        goto label1;

     label2:
        return $r0;
    }
}
