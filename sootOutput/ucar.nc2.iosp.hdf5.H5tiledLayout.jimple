class ucar.nc2.iosp.hdf5.H5tiledLayout extends java.lang.Object implements ucar.nc2.iosp.Layout
{
    private ucar.nc2.iosp.LayoutTiled delegate;
    private ucar.ma2.Section want;
    private int[] chunkSize;
    private int elemSize;
    private boolean debug;
    static final boolean $assertionsDisabled;

    void <init>(ucar.nc2.iosp.hdf5.H5header$Vinfo, ucar.ma2.DataType, ucar.ma2.Section) throws ucar.ma2.InvalidRangeException, java.io.IOException
    {
        int[] $r5, $r6, $r7, $r8, $r9, $r10, $r16, $r22, $r23;
        ucar.nc2.iosp.hdf5.H5header$Vinfo r4;
        ucar.nc2.iosp.LayoutTiled $r14;
        boolean $z0, $z1, $z2, $z3;
        ucar.nc2.iosp.hdf5.H5tiledLayout r0;
        ucar.ma2.DataType r1, $r2, $r29;
        java.lang.StringBuilder $r17, $r19, $r20;
        ucar.ma2.Section r3, $r11, $r15, $r24, $r25;
        java.lang.AssertionError $r27, $r28;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.String $r21;
        java.io.PrintStream $r18;
        ucar.nc2.iosp.hdf5.H5header$DataBTree $r12, $r26;
        ucar.nc2.iosp.LayoutTiled$DataChunkIterator $r13;

        r0 := @this: ucar.nc2.iosp.hdf5.H5tiledLayout;

        r4 := @parameter0: ucar.nc2.iosp.hdf5.H5header$Vinfo;

        r1 := @parameter1: ucar.ma2.DataType;

        r3 := @parameter2: ucar.ma2.Section;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.iosp.hdf5.H5tiledLayout: boolean debug> = 0;

        $z0 = <ucar.nc2.iosp.hdf5.H5tiledLayout: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z3 = r4.<ucar.nc2.iosp.hdf5.H5header$Vinfo: boolean isChunked>;

        if $z3 != 0 goto label1;

        $r28 = new java.lang.AssertionError;

        specialinvoke $r28.<java.lang.AssertionError: void <init>()>();

        throw $r28;

     label1:
        $z1 = <ucar.nc2.iosp.hdf5.H5tiledLayout: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $r26 = r4.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$DataBTree btree>;

        if $r26 != null goto label2;

        $r27 = new java.lang.AssertionError;

        specialinvoke $r27.<java.lang.AssertionError: void <init>()>();

        throw $r27;

     label2:
        $r2 = <ucar.ma2.DataType: ucar.ma2.DataType CHAR>;

        if r1 != $r2 goto label3;

        $i6 = virtualinvoke r3.<ucar.ma2.Section: int getRank()>();

        $r23 = r4.<ucar.nc2.iosp.hdf5.H5header$Vinfo: int[] storageSize>;

        $i7 = lengthof $r23;

        if $i6 >= $i7 goto label3;

        $r24 = new ucar.ma2.Section;

        specialinvoke $r24.<ucar.ma2.Section: void <init>(ucar.ma2.Section)>(r3);

        $r25 = virtualinvoke $r24.<ucar.ma2.Section: ucar.ma2.Section appendRange(int)>(1);

        r0.<ucar.nc2.iosp.hdf5.H5tiledLayout: ucar.ma2.Section want> = $r25;

        goto label4;

     label3:
        r0.<ucar.nc2.iosp.hdf5.H5tiledLayout: ucar.ma2.Section want> = r3;

     label4:
        $r29 = <ucar.ma2.DataType: ucar.ma2.DataType CHAR>;

        if r1 != $r29 goto label5;

        $r22 = r4.<ucar.nc2.iosp.hdf5.H5header$Vinfo: int[] storageSize>;

        $i8 = lengthof $r22;

        goto label6;

     label5:
        $r5 = r4.<ucar.nc2.iosp.hdf5.H5header$Vinfo: int[] storageSize>;

        $i0 = lengthof $r5;

        $i8 = $i0 - 1;

     label6:
        i1 = $i8;

        $r6 = newarray (int)[$i8];

        r0.<ucar.nc2.iosp.hdf5.H5tiledLayout: int[] chunkSize> = $r6;

        $r8 = r4.<ucar.nc2.iosp.hdf5.H5header$Vinfo: int[] storageSize>;

        $r7 = r0.<ucar.nc2.iosp.hdf5.H5tiledLayout: int[] chunkSize>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, 0, $r7, 0, $i8);

        $r10 = r4.<ucar.nc2.iosp.hdf5.H5header$Vinfo: int[] storageSize>;

        $r9 = r4.<ucar.nc2.iosp.hdf5.H5header$Vinfo: int[] storageSize>;

        $i2 = lengthof $r9;

        $i3 = $i2 - 1;

        $i4 = $r10[$i3];

        r0.<ucar.nc2.iosp.hdf5.H5tiledLayout: int elemSize> = $i4;

        $z2 = r0.<ucar.nc2.iosp.hdf5.H5tiledLayout: boolean debug>;

        if $z2 == 0 goto label7;

        $r18 = <java.lang.System: java.io.PrintStream out>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" H5tiledLayout: ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>($r21);

     label7:
        $r12 = r4.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$DataBTree btree>;

        $r11 = r0.<ucar.nc2.iosp.hdf5.H5tiledLayout: ucar.ma2.Section want>;

        $r13 = virtualinvoke $r12.<ucar.nc2.iosp.hdf5.H5header$DataBTree: ucar.nc2.iosp.LayoutTiled$DataChunkIterator getDataChunkIterator2(ucar.ma2.Section,int)>($r11, i1);

        $r14 = new ucar.nc2.iosp.LayoutTiled;

        $r16 = r0.<ucar.nc2.iosp.hdf5.H5tiledLayout: int[] chunkSize>;

        $i5 = r0.<ucar.nc2.iosp.hdf5.H5tiledLayout: int elemSize>;

        $r15 = r0.<ucar.nc2.iosp.hdf5.H5tiledLayout: ucar.ma2.Section want>;

        specialinvoke $r14.<ucar.nc2.iosp.LayoutTiled: void <init>(ucar.nc2.iosp.LayoutTiled$DataChunkIterator,int[],int,ucar.ma2.Section)>($r13, $r16, $i5, $r15);

        r0.<ucar.nc2.iosp.hdf5.H5tiledLayout: ucar.nc2.iosp.LayoutTiled delegate> = $r14;

        return;
    }

    public long getTotalNelems()
    {
        ucar.nc2.iosp.hdf5.H5tiledLayout r0;
        ucar.nc2.iosp.LayoutTiled $r1;
        long $l0;

        r0 := @this: ucar.nc2.iosp.hdf5.H5tiledLayout;

        $r1 = r0.<ucar.nc2.iosp.hdf5.H5tiledLayout: ucar.nc2.iosp.LayoutTiled delegate>;

        $l0 = virtualinvoke $r1.<ucar.nc2.iosp.LayoutTiled: long getTotalNelems()>();

        return $l0;
    }

    public int getElemSize()
    {
        int $i0;
        ucar.nc2.iosp.hdf5.H5tiledLayout r0;
        ucar.nc2.iosp.LayoutTiled $r1;

        r0 := @this: ucar.nc2.iosp.hdf5.H5tiledLayout;

        $r1 = r0.<ucar.nc2.iosp.hdf5.H5tiledLayout: ucar.nc2.iosp.LayoutTiled delegate>;

        $i0 = virtualinvoke $r1.<ucar.nc2.iosp.LayoutTiled: int getElemSize()>();

        return $i0;
    }

    public boolean hasNext()
    {
        ucar.nc2.iosp.hdf5.H5tiledLayout r0;
        ucar.nc2.iosp.LayoutTiled $r1;
        boolean $z0;

        r0 := @this: ucar.nc2.iosp.hdf5.H5tiledLayout;

        $r1 = r0.<ucar.nc2.iosp.hdf5.H5tiledLayout: ucar.nc2.iosp.LayoutTiled delegate>;

        $z0 = virtualinvoke $r1.<ucar.nc2.iosp.LayoutTiled: boolean hasNext()>();

        return $z0;
    }

    public ucar.nc2.iosp.Layout$Chunk next() throws java.io.IOException
    {
        ucar.nc2.iosp.hdf5.H5tiledLayout r0;
        ucar.nc2.iosp.LayoutTiled $r1;
        ucar.nc2.iosp.Layout$Chunk $r2;

        r0 := @this: ucar.nc2.iosp.hdf5.H5tiledLayout;

        $r1 = r0.<ucar.nc2.iosp.hdf5.H5tiledLayout: ucar.nc2.iosp.LayoutTiled delegate>;

        $r2 = virtualinvoke $r1.<ucar.nc2.iosp.LayoutTiled: ucar.nc2.iosp.Layout$Chunk next()>();

        return $r2;
    }

    public java.lang.String toString()
    {
        ucar.nc2.iosp.hdf5.H5tiledLayout r2;
        ucar.ma2.Section $r3;
        long $l1;
        int[] $r5, $r9;
        int $i0, $i2, $i3, i4;
        java.lang.StringBuilder $r0, $r1, $r4, $r6, $r7;
        java.lang.String $r8;

        r2 := @this: ucar.nc2.iosp.hdf5.H5tiledLayout;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("want=");

        $r3 = r2.<ucar.nc2.iosp.hdf5.H5tiledLayout: ucar.ma2.Section want>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("chunkSize=[");

        i4 = 0;

     label1:
        $r5 = r2.<ucar.nc2.iosp.hdf5.H5tiledLayout: int[] chunkSize>;

        $i0 = lengthof $r5;

        if i4 >= $i0 goto label3;

        if i4 <= 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

     label2:
        $r9 = r2.<ucar.nc2.iosp.hdf5.H5tiledLayout: int[] chunkSize>;

        $i3 = $r9[i4];

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        i4 = i4 + 1;

        goto label1;

     label3:
        $r6 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] totalNelems=");

        $l1 = virtualinvoke r2.<ucar.nc2.iosp.hdf5.H5tiledLayout: long getTotalNelems()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r7 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" elemSize=");

        $i2 = r2.<ucar.nc2.iosp.hdf5.H5tiledLayout: int elemSize>;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r8 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lucar/nc2/iosp/hdf5/H5tiledLayout;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <ucar.nc2.iosp.hdf5.H5tiledLayout: boolean $assertionsDisabled> = $z1;

        return;
    }
}
