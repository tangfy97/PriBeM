public final class org.codehaus.jackson.node.LongNode extends org.codehaus.jackson.node.NumericNode
{
    final long _value;

    public void <init>(long)
    {
        org.codehaus.jackson.node.LongNode r0;
        long l0;

        r0 := @this: org.codehaus.jackson.node.LongNode;

        l0 := @parameter0: long;

        specialinvoke r0.<org.codehaus.jackson.node.NumericNode: void <init>()>();

        r0.<org.codehaus.jackson.node.LongNode: long _value> = l0;

        return;
    }

    public static org.codehaus.jackson.node.LongNode valueOf(long)
    {
        org.codehaus.jackson.node.LongNode $r0;
        long l0;

        l0 := @parameter0: long;

        $r0 = new org.codehaus.jackson.node.LongNode;

        specialinvoke $r0.<org.codehaus.jackson.node.LongNode: void <init>(long)>(l0);

        return $r0;
    }

    public org.codehaus.jackson.JsonToken asToken()
    {
        org.codehaus.jackson.node.LongNode r1;
        org.codehaus.jackson.JsonToken $r0;

        r1 := @this: org.codehaus.jackson.node.LongNode;

        $r0 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken VALUE_NUMBER_INT>;

        return $r0;
    }

    public org.codehaus.jackson.JsonParser$NumberType getNumberType()
    {
        org.codehaus.jackson.node.LongNode r1;
        org.codehaus.jackson.JsonParser$NumberType $r0;

        r1 := @this: org.codehaus.jackson.node.LongNode;

        $r0 = <org.codehaus.jackson.JsonParser$NumberType: org.codehaus.jackson.JsonParser$NumberType LONG>;

        return $r0;
    }

    public boolean isIntegralNumber()
    {
        org.codehaus.jackson.node.LongNode r0;

        r0 := @this: org.codehaus.jackson.node.LongNode;

        return 1;
    }

    public boolean isLong()
    {
        org.codehaus.jackson.node.LongNode r0;

        r0 := @this: org.codehaus.jackson.node.LongNode;

        return 1;
    }

    public java.lang.Number getNumberValue()
    {
        org.codehaus.jackson.node.LongNode r0;
        long $l0;
        java.lang.Long $r1;

        r0 := @this: org.codehaus.jackson.node.LongNode;

        $l0 = r0.<org.codehaus.jackson.node.LongNode: long _value>;

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        return $r1;
    }

    public int getIntValue()
    {
        int $i1;
        org.codehaus.jackson.node.LongNode r0;
        long $l0;

        r0 := @this: org.codehaus.jackson.node.LongNode;

        $l0 = r0.<org.codehaus.jackson.node.LongNode: long _value>;

        $i1 = (int) $l0;

        return $i1;
    }

    public long getLongValue()
    {
        org.codehaus.jackson.node.LongNode r0;
        long $l0;

        r0 := @this: org.codehaus.jackson.node.LongNode;

        $l0 = r0.<org.codehaus.jackson.node.LongNode: long _value>;

        return $l0;
    }

    public double getDoubleValue()
    {
        org.codehaus.jackson.node.LongNode r0;
        long $l0;
        double $d0;

        r0 := @this: org.codehaus.jackson.node.LongNode;

        $l0 = r0.<org.codehaus.jackson.node.LongNode: long _value>;

        $d0 = (double) $l0;

        return $d0;
    }

    public java.math.BigDecimal getDecimalValue()
    {
        java.math.BigDecimal $r1;
        org.codehaus.jackson.node.LongNode r0;
        long $l0;

        r0 := @this: org.codehaus.jackson.node.LongNode;

        $l0 = r0.<org.codehaus.jackson.node.LongNode: long _value>;

        $r1 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>($l0);

        return $r1;
    }

    public java.math.BigInteger getBigIntegerValue()
    {
        org.codehaus.jackson.node.LongNode r0;
        long $l0;
        java.math.BigInteger $r1;

        r0 := @this: org.codehaus.jackson.node.LongNode;

        $l0 = r0.<org.codehaus.jackson.node.LongNode: long _value>;

        $r1 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l0);

        return $r1;
    }

    public java.lang.String asText()
    {
        org.codehaus.jackson.node.LongNode r0;
        long $l0;
        java.lang.String $r1;

        r0 := @this: org.codehaus.jackson.node.LongNode;

        $l0 = r0.<org.codehaus.jackson.node.LongNode: long _value>;

        $r1 = staticinvoke <org.codehaus.jackson.io.NumberOutput: java.lang.String toString(long)>($l0);

        return $r1;
    }

    public boolean asBoolean(boolean)
    {
        byte $b1;
        org.codehaus.jackson.node.LongNode r0;
        long $l0;
        boolean z0, $z1;

        r0 := @this: org.codehaus.jackson.node.LongNode;

        z0 := @parameter0: boolean;

        $l0 = r0.<org.codehaus.jackson.node.LongNode: long _value>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public final void serialize(org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.JsonGenerator r0;
        org.codehaus.jackson.map.SerializerProvider r2;
        org.codehaus.jackson.node.LongNode r1;
        long $l0;

        r1 := @this: org.codehaus.jackson.node.LongNode;

        r0 := @parameter0: org.codehaus.jackson.JsonGenerator;

        r2 := @parameter1: org.codehaus.jackson.map.SerializerProvider;

        $l0 = r1.<org.codehaus.jackson.node.LongNode: long _value>;

        virtualinvoke r0.<org.codehaus.jackson.JsonGenerator: void writeNumber(long)>($l0);

        return;
    }

    public boolean equals(java.lang.Object)
    {
        long $l0, $l1;
        byte $b2;
        java.lang.Object r0;
        org.codehaus.jackson.node.LongNode r1, $r4;
        java.lang.Class $r2, $r3;
        boolean $z0;

        r1 := @this: org.codehaus.jackson.node.LongNode;

        r0 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r0 != null goto label2;

        return 0;

     label2:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label3;

        return 0;

     label3:
        $r4 = (org.codehaus.jackson.node.LongNode) r0;

        $l1 = $r4.<org.codehaus.jackson.node.LongNode: long _value>;

        $l0 = r1.<org.codehaus.jackson.node.LongNode: long _value>;

        $b2 = $l1 cmp $l0;

        if $b2 != 0 goto label4;

        $z0 = 1;

        goto label5;

     label4:
        $z0 = 0;

     label5:
        return $z0;
    }

    public int hashCode()
    {
        int $i3, $i4, $i5;
        org.codehaus.jackson.node.LongNode r0;
        long $l0, $l1, $l2;

        r0 := @this: org.codehaus.jackson.node.LongNode;

        $l0 = r0.<org.codehaus.jackson.node.LongNode: long _value>;

        $i4 = (int) $l0;

        $l1 = r0.<org.codehaus.jackson.node.LongNode: long _value>;

        $l2 = $l1 >> 32;

        $i3 = (int) $l2;

        $i5 = $i4 ^ $i3;

        return $i5;
    }
}
