class org.apache.solr.common.util.NamedList$1 extends java.lang.Object implements java.util.Iterator
{
    int idx;
    final org.apache.solr.common.util.NamedList val$list;
    final org.apache.solr.common.util.NamedList this$0;

    void <init>(org.apache.solr.common.util.NamedList, org.apache.solr.common.util.NamedList)
    {
        org.apache.solr.common.util.NamedList$1 r0;
        org.apache.solr.common.util.NamedList r1, r2;

        r0 := @this: org.apache.solr.common.util.NamedList$1;

        r1 := @parameter0: org.apache.solr.common.util.NamedList;

        r2 := @parameter1: org.apache.solr.common.util.NamedList;

        r0.<org.apache.solr.common.util.NamedList$1: org.apache.solr.common.util.NamedList this$0> = r1;

        r0.<org.apache.solr.common.util.NamedList$1: org.apache.solr.common.util.NamedList val$list> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.solr.common.util.NamedList$1: int idx> = 0;

        return;
    }

    public boolean hasNext()
    {
        int $i0, $i1;
        org.apache.solr.common.util.NamedList$1 r0;
        org.apache.solr.common.util.NamedList $r1;
        boolean $z0;

        r0 := @this: org.apache.solr.common.util.NamedList$1;

        $i0 = r0.<org.apache.solr.common.util.NamedList$1: int idx>;

        $r1 = r0.<org.apache.solr.common.util.NamedList$1: org.apache.solr.common.util.NamedList val$list>;

        $i1 = virtualinvoke $r1.<org.apache.solr.common.util.NamedList: int size()>();

        if $i0 >= $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.util.Map$Entry next()
    {
        int $i0, $i1;
        org.apache.solr.common.util.NamedList$1$1 $r1;
        org.apache.solr.common.util.NamedList$1 r0;

        r0 := @this: org.apache.solr.common.util.NamedList$1;

        $i0 = r0.<org.apache.solr.common.util.NamedList$1: int idx>;

        $i1 = $i0 + 1;

        r0.<org.apache.solr.common.util.NamedList$1: int idx> = $i1;

        $r1 = new org.apache.solr.common.util.NamedList$1$1;

        specialinvoke $r1.<org.apache.solr.common.util.NamedList$1$1: void <init>(org.apache.solr.common.util.NamedList$1,int)>(r0, $i0);

        return $r1;
    }

    public void remove()
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.solr.common.util.NamedList$1 r1;

        r1 := @this: org.apache.solr.common.util.NamedList$1;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public volatile java.lang.Object next()
    {
        java.util.Map$Entry $r1;
        org.apache.solr.common.util.NamedList$1 r0;

        r0 := @this: org.apache.solr.common.util.NamedList$1;

        $r1 = virtualinvoke r0.<org.apache.solr.common.util.NamedList$1: java.util.Map$Entry next()>();

        return $r1;
    }
}
