public class org.waveprotocol.box.server.util.RandomBase64Generator extends java.lang.Object
{
    static final char[] WEB64_ALPHABET;
    private final java.util.Random random;

    public void <init>(java.util.Random)
    {
        org.waveprotocol.box.server.util.RandomBase64Generator r0;
        java.util.Random r1;

        r0 := @this: org.waveprotocol.box.server.util.RandomBase64Generator;

        r1 := @parameter0: java.util.Random;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.box.server.util.RandomBase64Generator: java.util.Random random> = r1;

        return;
    }

    public void <init>()
    {
        org.waveprotocol.box.server.util.RandomBase64Generator r0;
        java.security.SecureRandom $r1;

        r0 := @this: org.waveprotocol.box.server.util.RandomBase64Generator;

        $r1 = new java.security.SecureRandom;

        specialinvoke $r1.<java.security.SecureRandom: void <init>()>();

        specialinvoke r0.<org.waveprotocol.box.server.util.RandomBase64Generator: void <init>(java.util.Random)>($r1);

        return;
    }

    public java.lang.String next(int)
    {
        char $c3;
        java.util.Random $r4;
        int i0, $i1, $i2, i4, i5, $i7;
        org.waveprotocol.box.server.util.RandomBase64Generator r3;
        char[] $r2;
        java.lang.StringBuilder $r5;
        java.lang.String $r1;

        r3 := @this: org.waveprotocol.box.server.util.RandomBase64Generator;

        i0 := @parameter0: int;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(int)>(i0);

        i4 = 0;

        i5 = 0;

     label1:
        $i1 = virtualinvoke $r5.<java.lang.StringBuilder: int length()>();

        if $i1 >= i0 goto label3;

        if i5 >= 6 goto label2;

        $r4 = r3.<org.waveprotocol.box.server.util.RandomBase64Generator: java.util.Random random>;

        i4 = virtualinvoke $r4.<java.util.Random: int nextInt()>();

        i5 = 32;

     label2:
        $r2 = <org.waveprotocol.box.server.util.RandomBase64Generator: char[] WEB64_ALPHABET>;

        $i2 = i4 & 63;

        $c3 = $r2[$i2];

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

        i4 = i4 >> 6;

        $i7 = (int) -6;

        i5 = i5 + $i7;

        goto label1;

     label3:
        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    static void <clinit>()
    {
        char[] $r1;
        java.lang.String $r0;

        $r0 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_";

        $r1 = virtualinvoke $r0.<java.lang.String: char[] toCharArray()>();

        <org.waveprotocol.box.server.util.RandomBase64Generator: char[] WEB64_ALPHABET> = $r1;

        return;
    }
}
