public class org.apache.commons.compress.utils.CRC32VerifyingInputStream extends org.apache.commons.compress.utils.ChecksumVerifyingInputStream
{

    public void <init>(java.io.InputStream, long, int)
    {
        org.apache.commons.compress.utils.CRC32VerifyingInputStream r0;
        int i1;
        long l0, $l2, $l3;
        java.io.InputStream r1;

        r0 := @this: org.apache.commons.compress.utils.CRC32VerifyingInputStream;

        r1 := @parameter0: java.io.InputStream;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        $l2 = (long) i1;

        $l3 = $l2 & 4294967295L;

        specialinvoke r0.<org.apache.commons.compress.utils.CRC32VerifyingInputStream: void <init>(java.io.InputStream,long,long)>(r1, l0, $l3);

        return;
    }

    public void <init>(java.io.InputStream, long, long)
    {
        org.apache.commons.compress.utils.CRC32VerifyingInputStream r0;
        java.util.zip.CRC32 $r1;
        long l0, l1;
        java.io.InputStream r2;

        r0 := @this: org.apache.commons.compress.utils.CRC32VerifyingInputStream;

        r2 := @parameter0: java.io.InputStream;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        $r1 = new java.util.zip.CRC32;

        specialinvoke $r1.<java.util.zip.CRC32: void <init>()>();

        specialinvoke r0.<org.apache.commons.compress.utils.ChecksumVerifyingInputStream: void <init>(java.util.zip.Checksum,java.io.InputStream,long,long)>($r1, r2, l0, l1);

        return;
    }
}
