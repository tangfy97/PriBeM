public abstract class org.sat4j.reader.Reader extends java.lang.Object
{
    private boolean verbose;

    public void <init>()
    {
        org.sat4j.reader.Reader r0;

        r0 := @this: org.sat4j.reader.Reader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.sat4j.reader.Reader: boolean verbose> = 0;

        return;
    }

    public org.sat4j.specs.IProblem parseInstance(java.lang.String) throws java.io.FileNotFoundException, org.sat4j.reader.ParseFormatException, java.io.IOException, org.sat4j.specs.ContradictionException
    {
        java.lang.Throwable $r11;
        java.util.zip.GZIPInputStream $r9;
        java.net.URL $r10;
        java.lang.String r0, $r7;
        boolean $z0, $z1, $z2;
        org.sat4j.specs.ContradictionException $r12;
        java.lang.Process $r8;
        java.lang.Runtime $r3;
        java.io.IOException $r13;
        java.io.FileInputStream $r1;
        org.sat4j.reader.ParseFormatException $r14;
        java.io.FileNotFoundException $r15;
        org.sat4j.reader.Reader r2;
        org.sat4j.specs.IProblem $r17;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.io.InputStream r16;

        r2 := @this: org.sat4j.reader.Reader;

        r0 := @parameter0: java.lang.String;

        r16 = null;

     label01:
        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("http://");

        if $z0 == 0 goto label02;

        $r10 = new java.net.URL;

        specialinvoke $r10.<java.net.URL: void <init>(java.lang.String)>(r0);

        r16 = virtualinvoke $r10.<java.net.URL: java.io.InputStream openStream()>();

        goto label03;

     label02:
        $r1 = new java.io.FileInputStream;

        specialinvoke $r1.<java.io.FileInputStream: void <init>(java.lang.String)>(r0);

        r16 = $r1;

     label03:
        $z1 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>(".gz");

        if $z1 == 0 goto label04;

        $r9 = new java.util.zip.GZIPInputStream;

        specialinvoke $r9.<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>(r16);

        r16 = $r9;

        goto label05;

     label04:
        $z2 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>(".bz2");

        if $z2 == 0 goto label05;

        $r3 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bunzip2 -c ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = virtualinvoke $r3.<java.lang.Runtime: java.lang.Process exec(java.lang.String)>($r7);

        r16 = virtualinvoke $r8.<java.lang.Process: java.io.InputStream getInputStream()>();

     label05:
        $r17 = virtualinvoke r2.<org.sat4j.reader.Reader: org.sat4j.specs.IProblem parseInstance(java.io.InputStream)>(r16);

     label06:
        if r16 == null goto label07;

        virtualinvoke r16.<java.io.InputStream: void close()>();

     label07:
        return $r17;

     label08:
        $r15 := @caughtexception;

        throw $r15;

     label09:
        $r14 := @caughtexception;

        throw $r14;

     label10:
        $r13 := @caughtexception;

        throw $r13;

     label11:
        $r12 := @caughtexception;

        throw $r12;

     label12:
        $r11 := @caughtexception;

     label13:
        if r16 == null goto label14;

        virtualinvoke r16.<java.io.InputStream: void close()>();

     label14:
        throw $r11;

        catch java.io.FileNotFoundException from label01 to label06 with label08;
        catch org.sat4j.reader.ParseFormatException from label01 to label06 with label09;
        catch java.io.IOException from label01 to label06 with label10;
        catch org.sat4j.specs.ContradictionException from label01 to label06 with label11;
        catch java.lang.Throwable from label01 to label06 with label12;
        catch java.lang.Throwable from label08 to label13 with label12;
    }

    public abstract org.sat4j.specs.IProblem parseInstance(java.io.InputStream) throws org.sat4j.reader.ParseFormatException, org.sat4j.specs.ContradictionException, java.io.IOException;

    public org.sat4j.specs.IProblem parseInstance(java.io.Reader) throws org.sat4j.reader.ParseFormatException, org.sat4j.specs.ContradictionException, java.io.IOException
    {
        org.sat4j.reader.Reader r1;
        java.lang.UnsupportedOperationException $r0;
        java.io.Reader r2;

        r1 := @this: org.sat4j.reader.Reader;

        r2 := @parameter0: java.io.Reader;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Use #parseInstance(InputStream) instead");

        throw $r0;
    }

    public abstract java.lang.String decode(int[]);

    public abstract void decode(int[], java.io.PrintWriter);

    public boolean isVerbose()
    {
        org.sat4j.reader.Reader r0;
        boolean $z0;

        r0 := @this: org.sat4j.reader.Reader;

        $z0 = r0.<org.sat4j.reader.Reader: boolean verbose>;

        return $z0;
    }

    public void setVerbosity(boolean)
    {
        org.sat4j.reader.Reader r0;
        boolean z0;

        r0 := @this: org.sat4j.reader.Reader;

        z0 := @parameter0: boolean;

        r0.<org.sat4j.reader.Reader: boolean verbose> = z0;

        return;
    }
}
