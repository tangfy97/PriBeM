class org.apache.lucene.queries.function.valuesource.QueryDocValues extends org.apache.lucene.queries.function.docvalues.FloatDocValues
{
    final org.apache.lucene.index.AtomicReaderContext readerContext;
    final org.apache.lucene.util.Bits acceptDocs;
    final org.apache.lucene.search.Weight weight;
    final float defVal;
    final java.util.Map fcontext;
    final org.apache.lucene.search.Query q;
    org.apache.lucene.search.Scorer scorer;
    int scorerDoc;
    boolean noMatches;
    int lastDocRequested;

    public void <init>(org.apache.lucene.queries.function.valuesource.QueryValueSource, org.apache.lucene.index.AtomicReaderContext, java.util.Map) throws java.io.IOException
    {
        org.apache.lucene.search.Query $r5;
        org.apache.lucene.search.Weight $r13, r14;
        java.util.Map r6;
        org.apache.lucene.queries.function.valuesource.QueryDocValues r0;
        org.apache.lucene.queries.function.valuesource.QueryValueSource r1;
        org.apache.lucene.util.Bits $r4;
        float $f0;
        java.lang.Object $r7, $r8, $r16;
        org.apache.lucene.index.AtomicReaderContext r2;
        org.apache.lucene.index.AtomicReader $r3;
        org.apache.lucene.search.IndexSearcher $r9, $r11, r15;
        org.apache.lucene.index.IndexReaderContext $r10, $r12;

        r0 := @this: org.apache.lucene.queries.function.valuesource.QueryDocValues;

        r1 := @parameter0: org.apache.lucene.queries.function.valuesource.QueryValueSource;

        r2 := @parameter1: org.apache.lucene.index.AtomicReaderContext;

        r6 := @parameter2: java.util.Map;

        specialinvoke r0.<org.apache.lucene.queries.function.docvalues.FloatDocValues: void <init>(org.apache.lucene.queries.function.ValueSource)>(r1);

        r0.<org.apache.lucene.queries.function.valuesource.QueryDocValues: boolean noMatches> = 0;

        r0.<org.apache.lucene.queries.function.valuesource.QueryDocValues: int lastDocRequested> = 2147483647;

        r0.<org.apache.lucene.queries.function.valuesource.QueryDocValues: org.apache.lucene.index.AtomicReaderContext readerContext> = r2;

        $r3 = virtualinvoke r2.<org.apache.lucene.index.AtomicReaderContext: org.apache.lucene.index.AtomicReader reader()>();

        $r4 = virtualinvoke $r3.<org.apache.lucene.index.AtomicReader: org.apache.lucene.util.Bits getLiveDocs()>();

        r0.<org.apache.lucene.queries.function.valuesource.QueryDocValues: org.apache.lucene.util.Bits acceptDocs> = $r4;

        $f0 = r1.<org.apache.lucene.queries.function.valuesource.QueryValueSource: float defVal>;

        r0.<org.apache.lucene.queries.function.valuesource.QueryDocValues: float defVal> = $f0;

        $r5 = r1.<org.apache.lucene.queries.function.valuesource.QueryValueSource: org.apache.lucene.search.Query q>;

        r0.<org.apache.lucene.queries.function.valuesource.QueryDocValues: org.apache.lucene.search.Query q> = $r5;

        r0.<org.apache.lucene.queries.function.valuesource.QueryDocValues: java.util.Map fcontext> = r6;

        if r6 != null goto label1;

        $r13 = null;

        goto label2;

     label1:
        $r7 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r13 = (org.apache.lucene.search.Weight) $r7;

     label2:
        r14 = $r13;

        if $r13 != null goto label5;

        if r6 != null goto label3;

        $r11 = new org.apache.lucene.search.IndexSearcher;

        $r12 = staticinvoke <org.apache.lucene.index.ReaderUtil: org.apache.lucene.index.IndexReaderContext getTopLevelContext(org.apache.lucene.index.IndexReaderContext)>(r2);

        specialinvoke $r11.<org.apache.lucene.search.IndexSearcher: void <init>(org.apache.lucene.index.IndexReaderContext)>($r12);

        r15 = $r11;

        goto label4;

     label3:
        $r8 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>("searcher");

        r15 = (org.apache.lucene.search.IndexSearcher) $r8;

        if r15 != null goto label4;

        $r9 = new org.apache.lucene.search.IndexSearcher;

        $r10 = staticinvoke <org.apache.lucene.index.ReaderUtil: org.apache.lucene.index.IndexReaderContext getTopLevelContext(org.apache.lucene.index.IndexReaderContext)>(r2);

        specialinvoke $r9.<org.apache.lucene.search.IndexSearcher: void <init>(org.apache.lucene.index.IndexReaderContext)>($r10);

        r15 = $r9;

     label4:
        virtualinvoke r1.<org.apache.lucene.queries.function.valuesource.QueryValueSource: void createWeight(java.util.Map,org.apache.lucene.search.IndexSearcher)>(r6, r15);

        $r16 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r14 = (org.apache.lucene.search.Weight) $r16;

     label5:
        r0.<org.apache.lucene.queries.function.valuesource.QueryDocValues: org.apache.lucene.search.Weight weight> = r14;

        return;
    }

    public float floatVal(int)
    {
        org.apache.lucene.search.Query $r12;
        org.apache.lucene.search.Weight $r5;
        int i0, $i1, $i2, $i3, $i4, $i6;
        org.apache.lucene.queries.function.valuesource.QueryDocValues r0;
        java.lang.String $r16;
        org.apache.lucene.util.Bits $r3;
        boolean $z0;
        org.apache.lucene.search.Scorer $r1, $r2, $r6, $r7;
        java.io.IOException $r8;
        java.lang.RuntimeException $r18;
        float $f0, $f1, $f2, $f3;
        java.lang.StringBuilder $r11, $r13, $r14, $r15, $r17;
        org.apache.lucene.index.AtomicReaderContext $r4;

        r0 := @this: org.apache.lucene.queries.function.valuesource.QueryDocValues;

        i0 := @parameter0: int;

     label01:
        $i1 = r0.<org.apache.lucene.queries.function.valuesource.QueryDocValues: int lastDocRequested>;

        if i0 >= $i1 goto label06;

        $z0 = r0.<org.apache.lucene.queries.function.valuesource.QueryDocValues: boolean noMatches>;

        if $z0 == 0 goto label03;

        $f3 = r0.<org.apache.lucene.queries.function.valuesource.QueryDocValues: float defVal>;

     label02:
        return $f3;

     label03:
        $r5 = r0.<org.apache.lucene.queries.function.valuesource.QueryDocValues: org.apache.lucene.search.Weight weight>;

        $r4 = r0.<org.apache.lucene.queries.function.valuesource.QueryDocValues: org.apache.lucene.index.AtomicReaderContext readerContext>;

        $r3 = r0.<org.apache.lucene.queries.function.valuesource.QueryDocValues: org.apache.lucene.util.Bits acceptDocs>;

        $r6 = virtualinvoke $r5.<org.apache.lucene.search.Weight: org.apache.lucene.search.Scorer scorer(org.apache.lucene.index.AtomicReaderContext,boolean,boolean,org.apache.lucene.util.Bits)>($r4, 1, 0, $r3);

        r0.<org.apache.lucene.queries.function.valuesource.QueryDocValues: org.apache.lucene.search.Scorer scorer> = $r6;

        $r7 = r0.<org.apache.lucene.queries.function.valuesource.QueryDocValues: org.apache.lucene.search.Scorer scorer>;

        if $r7 != null goto label05;

        r0.<org.apache.lucene.queries.function.valuesource.QueryDocValues: boolean noMatches> = 1;

        $f2 = r0.<org.apache.lucene.queries.function.valuesource.QueryDocValues: float defVal>;

     label04:
        return $f2;

     label05:
        $i6 = (int) -1;

        r0.<org.apache.lucene.queries.function.valuesource.QueryDocValues: int scorerDoc> = $i6;

     label06:
        r0.<org.apache.lucene.queries.function.valuesource.QueryDocValues: int lastDocRequested> = i0;

        $i2 = r0.<org.apache.lucene.queries.function.valuesource.QueryDocValues: int scorerDoc>;

        if $i2 >= i0 goto label07;

        $r2 = r0.<org.apache.lucene.queries.function.valuesource.QueryDocValues: org.apache.lucene.search.Scorer scorer>;

        $i4 = virtualinvoke $r2.<org.apache.lucene.search.Scorer: int advance(int)>(i0);

        r0.<org.apache.lucene.queries.function.valuesource.QueryDocValues: int scorerDoc> = $i4;

     label07:
        $i3 = r0.<org.apache.lucene.queries.function.valuesource.QueryDocValues: int scorerDoc>;

        if $i3 <= i0 goto label09;

        $f1 = r0.<org.apache.lucene.queries.function.valuesource.QueryDocValues: float defVal>;

     label08:
        return $f1;

     label09:
        $r1 = r0.<org.apache.lucene.queries.function.valuesource.QueryDocValues: org.apache.lucene.search.Scorer scorer>;

        $f0 = virtualinvoke $r1.<org.apache.lucene.search.Scorer: float score()>();

     label10:
        return $f0;

     label11:
        $r8 := @caughtexception;

        $r18 = new java.lang.RuntimeException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("caught exception in QueryDocVals(");

        $r12 = r0.<org.apache.lucene.queries.function.valuesource.QueryDocValues: org.apache.lucene.search.Query q>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") doc=");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r16, $r8);

        throw $r18;

        catch java.io.IOException from label01 to label02 with label11;
        catch java.io.IOException from label03 to label04 with label11;
        catch java.io.IOException from label05 to label08 with label11;
        catch java.io.IOException from label09 to label10 with label11;
    }

    public boolean exists(int)
    {
        org.apache.lucene.search.Query $r11;
        org.apache.lucene.search.Weight $r4;
        int i0, $i1, $i2, $i3, $i4, $i6;
        org.apache.lucene.queries.function.valuesource.QueryDocValues r0;
        java.lang.String $r15;
        org.apache.lucene.util.Bits $r2;
        boolean $z0;
        org.apache.lucene.search.Scorer $r1, $r5, $r6;
        java.io.IOException $r7;
        java.lang.RuntimeException $r17;
        java.lang.StringBuilder $r10, $r12, $r13, $r14, $r16;
        org.apache.lucene.index.AtomicReaderContext $r3;

        r0 := @this: org.apache.lucene.queries.function.valuesource.QueryDocValues;

        i0 := @parameter0: int;

     label1:
        $i1 = r0.<org.apache.lucene.queries.function.valuesource.QueryDocValues: int lastDocRequested>;

        if i0 >= $i1 goto label5;

        $z0 = r0.<org.apache.lucene.queries.function.valuesource.QueryDocValues: boolean noMatches>;

        if $z0 == 0 goto label3;

     label2:
        return 0;

     label3:
        $r4 = r0.<org.apache.lucene.queries.function.valuesource.QueryDocValues: org.apache.lucene.search.Weight weight>;

        $r3 = r0.<org.apache.lucene.queries.function.valuesource.QueryDocValues: org.apache.lucene.index.AtomicReaderContext readerContext>;

        $r2 = r0.<org.apache.lucene.queries.function.valuesource.QueryDocValues: org.apache.lucene.util.Bits acceptDocs>;

        $r5 = virtualinvoke $r4.<org.apache.lucene.search.Weight: org.apache.lucene.search.Scorer scorer(org.apache.lucene.index.AtomicReaderContext,boolean,boolean,org.apache.lucene.util.Bits)>($r3, 1, 0, $r2);

        r0.<org.apache.lucene.queries.function.valuesource.QueryDocValues: org.apache.lucene.search.Scorer scorer> = $r5;

        $i6 = (int) -1;

        r0.<org.apache.lucene.queries.function.valuesource.QueryDocValues: int scorerDoc> = $i6;

        $r6 = r0.<org.apache.lucene.queries.function.valuesource.QueryDocValues: org.apache.lucene.search.Scorer scorer>;

        if $r6 != null goto label5;

        r0.<org.apache.lucene.queries.function.valuesource.QueryDocValues: boolean noMatches> = 1;

     label4:
        return 0;

     label5:
        r0.<org.apache.lucene.queries.function.valuesource.QueryDocValues: int lastDocRequested> = i0;

        $i2 = r0.<org.apache.lucene.queries.function.valuesource.QueryDocValues: int scorerDoc>;

        if $i2 >= i0 goto label6;

        $r1 = r0.<org.apache.lucene.queries.function.valuesource.QueryDocValues: org.apache.lucene.search.Scorer scorer>;

        $i4 = virtualinvoke $r1.<org.apache.lucene.search.Scorer: int advance(int)>(i0);

        r0.<org.apache.lucene.queries.function.valuesource.QueryDocValues: int scorerDoc> = $i4;

     label6:
        $i3 = r0.<org.apache.lucene.queries.function.valuesource.QueryDocValues: int scorerDoc>;

        if $i3 <= i0 goto label8;

     label7:
        return 0;

     label8:
        return 1;

     label9:
        $r7 := @caughtexception;

        $r17 = new java.lang.RuntimeException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("caught exception in QueryDocVals(");

        $r11 = r0.<org.apache.lucene.queries.function.valuesource.QueryDocValues: org.apache.lucene.search.Query q>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") doc=");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r15, $r7);

        throw $r17;

        catch java.io.IOException from label1 to label2 with label9;
        catch java.io.IOException from label3 to label4 with label9;
        catch java.io.IOException from label5 to label7 with label9;
    }

    public java.lang.Object objectVal(int)
    {
        org.apache.lucene.search.Query $r6;
        java.lang.Float $r11;
        org.apache.lucene.search.Scorer $r1;
        java.io.IOException $r2;
        java.lang.RuntimeException $r3;
        int i0;
        float $f0;
        java.lang.StringBuilder $r4, $r5, $r7, $r8, $r9;
        org.apache.lucene.queries.function.valuesource.QueryDocValues r0;
        java.lang.String $r10;
        boolean $z0;

        r0 := @this: org.apache.lucene.queries.function.valuesource.QueryDocValues;

        i0 := @parameter0: int;

     label1:
        $z0 = virtualinvoke r0.<org.apache.lucene.queries.function.valuesource.QueryDocValues: boolean exists(int)>(i0);

        if $z0 == 0 goto label2;

        $r1 = r0.<org.apache.lucene.queries.function.valuesource.QueryDocValues: org.apache.lucene.search.Scorer scorer>;

        $f0 = virtualinvoke $r1.<org.apache.lucene.search.Scorer: float score()>();

        $r11 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        goto label3;

     label2:
        $r11 = null;

     label3:
        return $r11;

     label4:
        $r2 := @caughtexception;

        $r3 = new java.lang.RuntimeException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("caught exception in QueryDocVals(");

        $r6 = r0.<org.apache.lucene.queries.function.valuesource.QueryDocValues: org.apache.lucene.search.Query q>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") doc=");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r10, $r2);

        throw $r3;

        catch java.io.IOException from label1 to label3 with label4;
    }

    public org.apache.lucene.queries.function.FunctionValues$ValueFiller getValueFiller()
    {
        org.apache.lucene.queries.function.valuesource.QueryDocValues$1 $r0;
        org.apache.lucene.queries.function.valuesource.QueryDocValues r1;

        r1 := @this: org.apache.lucene.queries.function.valuesource.QueryDocValues;

        $r0 = new org.apache.lucene.queries.function.valuesource.QueryDocValues$1;

        specialinvoke $r0.<org.apache.lucene.queries.function.valuesource.QueryDocValues$1: void <init>(org.apache.lucene.queries.function.valuesource.QueryDocValues)>(r1);

        return $r0;
    }

    public java.lang.String toString(int)
    {
        org.apache.lucene.search.Query $r3;
        int i0;
        float $f0, $f1;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r6, $r7, $r8;
        org.apache.lucene.queries.function.valuesource.QueryDocValues r2;
        java.lang.String $r9;

        r2 := @this: org.apache.lucene.queries.function.valuesource.QueryDocValues;

        i0 := @parameter0: int;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("query(");

        $r3 = r2.<org.apache.lucene.queries.function.valuesource.QueryDocValues: org.apache.lucene.search.Query q>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",def=");

        $f0 = r2.<org.apache.lucene.queries.function.valuesource.QueryDocValues: float defVal>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")=");

        $f1 = virtualinvoke r2.<org.apache.lucene.queries.function.valuesource.QueryDocValues: float floatVal(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }
}
