public class com.hp.hpl.jena.rdf.arp.impl.URIReference extends com.hp.hpl.jena.rdf.arp.impl.TaintImpl implements com.hp.hpl.jena.rdf.arp.impl.AResourceInternal, com.hp.hpl.jena.rdf.arp.ARPErrorNumbers
{
    private final java.lang.String uri;

    protected void <init>(java.lang.String)
    {
        com.hp.hpl.jena.rdf.arp.impl.URIReference r0;
        java.lang.String r1;
        java.lang.NullPointerException $r2;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.URIReference;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.TaintImpl: void <init>()>();

        r0.<com.hp.hpl.jena.rdf.arp.impl.URIReference: java.lang.String uri> = r1;

        if r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>()>();

        throw $r2;

     label1:
        return;
    }

    public java.lang.String toString()
    {
        com.hp.hpl.jena.rdf.arp.impl.URIReference r0;
        java.lang.String $r1;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.URIReference;

        $r1 = r0.<com.hp.hpl.jena.rdf.arp.impl.URIReference: java.lang.String uri>;

        return $r1;
    }

    public boolean isAnonymous()
    {
        com.hp.hpl.jena.rdf.arp.impl.URIReference r0;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.URIReference;

        return 0;
    }

    public java.lang.String getAnonymousID()
    {
        com.hp.hpl.jena.rdf.arp.impl.URIReference r0;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.URIReference;

        return null;
    }

    public java.lang.String getURI()
    {
        com.hp.hpl.jena.rdf.arp.impl.URIReference r0;
        java.lang.String $r1;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.URIReference;

        $r1 = r0.<com.hp.hpl.jena.rdf.arp.impl.URIReference: java.lang.String uri>;

        return $r1;
    }

    public java.lang.Object getUserData()
    {
        com.hp.hpl.jena.rdf.arp.impl.URIReference r1;
        java.lang.IllegalStateException $r0;

        r1 := @this: com.hp.hpl.jena.rdf.arp.impl.URIReference;

        $r0 = new java.lang.IllegalStateException;

        specialinvoke $r0.<java.lang.IllegalStateException: void <init>(java.lang.String)>("User data only supported on blank nodes");

        throw $r0;
    }

    public void setUserData(java.lang.Object)
    {
        com.hp.hpl.jena.rdf.arp.impl.URIReference r1;
        java.lang.IllegalStateException $r0;
        java.lang.Object r2;

        r1 := @this: com.hp.hpl.jena.rdf.arp.impl.URIReference;

        r2 := @parameter0: java.lang.Object;

        $r0 = new java.lang.IllegalStateException;

        specialinvoke $r0.<java.lang.IllegalStateException: void <init>(java.lang.String)>("User data only supported on blank nodes");

        throw $r0;
    }

    public boolean equals(java.lang.Object)
    {
        com.hp.hpl.jena.rdf.arp.impl.URIReference r1, $r2;
        java.lang.Object r0;
        java.lang.String $r3, $r4;
        boolean $z0, $z1, $z2;

        r1 := @this: com.hp.hpl.jena.rdf.arp.impl.URIReference;

        r0 := @parameter0: java.lang.Object;

        if r0 == null goto label1;

        $z0 = r0 instanceof com.hp.hpl.jena.rdf.arp.impl.URIReference;

        if $z0 == 0 goto label1;

        $r4 = r1.<com.hp.hpl.jena.rdf.arp.impl.URIReference: java.lang.String uri>;

        $r2 = (com.hp.hpl.jena.rdf.arp.impl.URIReference) r0;

        $r3 = $r2.<com.hp.hpl.jena.rdf.arp.impl.URIReference: java.lang.String uri>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public int hashCode()
    {
        com.hp.hpl.jena.rdf.arp.impl.URIReference r0;
        int $i0;
        java.lang.String $r1;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.URIReference;

        $r1 = r0.<com.hp.hpl.jena.rdf.arp.impl.URIReference: java.lang.String uri>;

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        return $i0;
    }

    public boolean hasNodeID()
    {
        com.hp.hpl.jena.rdf.arp.impl.URIReference r0;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.URIReference;

        return 0;
    }

    public void setHasBeenUsed()
    {
        com.hp.hpl.jena.rdf.arp.impl.URIReference r0;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.URIReference;

        return;
    }

    public boolean getHasBeenUsed()
    {
        com.hp.hpl.jena.rdf.arp.impl.URIReference r1;
        java.lang.UnsupportedOperationException $r0;

        r1 := @this: com.hp.hpl.jena.rdf.arp.impl.URIReference;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Internal error");

        throw $r0;
    }

    public static com.hp.hpl.jena.rdf.arp.impl.URIReference fromID(com.hp.hpl.jena.rdf.arp.states.Frame, com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext, java.lang.String) throws org.xml.sax.SAXParseException
    {
        com.hp.hpl.jena.rdf.arp.states.Frame r0;
        com.hp.hpl.jena.rdf.arp.impl.URIReference $r7;
        java.lang.StringBuilder $r2, $r3, $r5;
        java.lang.String r4, $r6;
        com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext r1;

        r0 := @parameter0: com.hp.hpl.jena.rdf.arp.states.Frame;

        r1 := @parameter1: com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext;

        r4 := @parameter2: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = staticinvoke <com.hp.hpl.jena.rdf.arp.impl.URIReference: com.hp.hpl.jena.rdf.arp.impl.URIReference resolve(com.hp.hpl.jena.rdf.arp.states.Frame,com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext,java.lang.String)>(r0, r1, $r6);

        virtualinvoke r0.<com.hp.hpl.jena.rdf.arp.states.Frame: void checkIdSymbol(com.hp.hpl.jena.rdf.arp.impl.Taint,com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext,java.lang.String)>($r7, r1, r4);

        return $r7;
    }

    public static com.hp.hpl.jena.rdf.arp.impl.URIReference resolve(com.hp.hpl.jena.rdf.arp.states.Frame, com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext, java.lang.String) throws org.xml.sax.SAXParseException
    {
        com.hp.hpl.jena.rdf.arp.states.Frame r2;
        com.hp.hpl.jena.rdf.arp.impl.URIReference $r6;
        com.hp.hpl.jena.rdf.arp.impl.TaintImpl $r0;
        java.lang.String r3, $r7;
        com.hp.hpl.jena.rdf.arp.impl.XMLHandler $r4;
        org.apache.jena.iri.IRI $r5;
        com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext r1;
        boolean $z0;

        r2 := @parameter0: com.hp.hpl.jena.rdf.arp.states.Frame;

        r1 := @parameter1: com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext;

        r3 := @parameter2: java.lang.String;

        $r0 = new com.hp.hpl.jena.rdf.arp.impl.TaintImpl;

        specialinvoke $r0.<com.hp.hpl.jena.rdf.arp.impl.TaintImpl: void <init>()>();

        $r4 = r2.<com.hp.hpl.jena.rdf.arp.states.Frame: com.hp.hpl.jena.rdf.arp.impl.XMLHandler arp>;

        $r5 = virtualinvoke r1.<com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext: org.apache.jena.iri.IRI resolveAsURI(com.hp.hpl.jena.rdf.arp.impl.XMLHandler,com.hp.hpl.jena.rdf.arp.impl.Taint,java.lang.String)>($r4, $r0, r3);

        virtualinvoke r2.<com.hp.hpl.jena.rdf.arp.states.Frame: void checkEncoding(com.hp.hpl.jena.rdf.arp.impl.Taint,java.lang.String)>($r0, r3);

        $r6 = new com.hp.hpl.jena.rdf.arp.impl.URIReference;

        $r7 = virtualinvoke $r5.<org.apache.jena.iri.IRI: java.lang.String toString()>();

        specialinvoke $r6.<com.hp.hpl.jena.rdf.arp.impl.URIReference: void <init>(java.lang.String)>($r7);

        $z0 = interfaceinvoke $r0.<com.hp.hpl.jena.rdf.arp.impl.Taint: boolean isTainted()>();

        if $z0 == 0 goto label1;

        virtualinvoke $r6.<com.hp.hpl.jena.rdf.arp.impl.URIReference: void taint()>();

     label1:
        return $r6;
    }

    public static com.hp.hpl.jena.rdf.arp.impl.URIReference fromQName(com.hp.hpl.jena.rdf.arp.states.Frame, java.lang.String, java.lang.String) throws org.xml.sax.SAXParseException
    {
        org.apache.jena.iri.IRIFactory $r9;
        java.lang.String r2, r4, $r6, $r13;
        com.hp.hpl.jena.rdf.arp.impl.XMLHandler $r8, $r15;
        org.apache.jena.iri.IRI $r14;
        com.hp.hpl.jena.rdf.arp.impl.URIReference $r0;
        com.hp.hpl.jena.rdf.arp.states.Frame r7;
        java.lang.StringBuilder $r1, $r3, $r5, $r10, $r11, $r12;

        r7 := @parameter0: com.hp.hpl.jena.rdf.arp.states.Frame;

        r2 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        $r0 = new com.hp.hpl.jena.rdf.arp.impl.URIReference;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<com.hp.hpl.jena.rdf.arp.impl.URIReference: void <init>(java.lang.String)>($r6);

        virtualinvoke r7.<com.hp.hpl.jena.rdf.arp.states.Frame: void checkEncoding(com.hp.hpl.jena.rdf.arp.impl.Taint,java.lang.String)>($r0, r4);

        $r8 = r7.<com.hp.hpl.jena.rdf.arp.states.Frame: com.hp.hpl.jena.rdf.arp.impl.XMLHandler arp>;

        $r9 = virtualinvoke $r8.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: org.apache.jena.iri.IRIFactory iriFactory()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = virtualinvoke $r9.<org.apache.jena.iri.IRIFactory: org.apache.jena.iri.IRI create(java.lang.String)>($r13);

        $r15 = r7.<com.hp.hpl.jena.rdf.arp.states.Frame: com.hp.hpl.jena.rdf.arp.impl.XMLHandler arp>;

        staticinvoke <com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext: void checkURI(com.hp.hpl.jena.rdf.arp.impl.XMLHandler,com.hp.hpl.jena.rdf.arp.impl.Taint,org.apache.jena.iri.IRI)>($r15, $r0, $r14);

        return $r0;
    }

    public static com.hp.hpl.jena.rdf.arp.impl.URIReference createNoChecks(java.lang.String)
    {
        java.lang.String r1;
        com.hp.hpl.jena.rdf.arp.impl.UntaintableURIReference $r0;

        r1 := @parameter0: java.lang.String;

        $r0 = new com.hp.hpl.jena.rdf.arp.impl.UntaintableURIReference;

        specialinvoke $r0.<com.hp.hpl.jena.rdf.arp.impl.UntaintableURIReference: void <init>(java.lang.String)>(r1);

        return $r0;
    }
}
