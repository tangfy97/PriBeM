public final class org.apache.lucene.search.NumericRangeFilter extends org.apache.lucene.search.MultiTermQueryWrapperFilter
{

    private void <init>(org.apache.lucene.search.NumericRangeQuery)
    {
        org.apache.lucene.search.NumericRangeFilter r0;
        org.apache.lucene.search.NumericRangeQuery r1;

        r0 := @this: org.apache.lucene.search.NumericRangeFilter;

        r1 := @parameter0: org.apache.lucene.search.NumericRangeQuery;

        specialinvoke r0.<org.apache.lucene.search.MultiTermQueryWrapperFilter: void <init>(org.apache.lucene.search.MultiTermQuery)>(r1);

        return;
    }

    public static org.apache.lucene.search.NumericRangeFilter newLongRange(java.lang.String, int, java.lang.Long, java.lang.Long, boolean, boolean)
    {
        org.apache.lucene.search.NumericRangeQuery $r4;
        org.apache.lucene.search.NumericRangeFilter $r0;
        java.lang.Long r2, r3;
        int i0;
        java.lang.String r1;
        boolean z0, z1;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Long;

        r3 := @parameter3: java.lang.Long;

        z0 := @parameter4: boolean;

        z1 := @parameter5: boolean;

        $r0 = new org.apache.lucene.search.NumericRangeFilter;

        $r4 = staticinvoke <org.apache.lucene.search.NumericRangeQuery: org.apache.lucene.search.NumericRangeQuery newLongRange(java.lang.String,int,java.lang.Long,java.lang.Long,boolean,boolean)>(r1, i0, r2, r3, z0, z1);

        specialinvoke $r0.<org.apache.lucene.search.NumericRangeFilter: void <init>(org.apache.lucene.search.NumericRangeQuery)>($r4);

        return $r0;
    }

    public static org.apache.lucene.search.NumericRangeFilter newLongRange(java.lang.String, java.lang.Long, java.lang.Long, boolean, boolean)
    {
        org.apache.lucene.search.NumericRangeFilter $r0;
        org.apache.lucene.search.NumericRangeQuery $r4;
        java.lang.Long r2, r3;
        java.lang.String r1;
        boolean z0, z1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Long;

        r3 := @parameter2: java.lang.Long;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        $r0 = new org.apache.lucene.search.NumericRangeFilter;

        $r4 = staticinvoke <org.apache.lucene.search.NumericRangeQuery: org.apache.lucene.search.NumericRangeQuery newLongRange(java.lang.String,java.lang.Long,java.lang.Long,boolean,boolean)>(r1, r2, r3, z0, z1);

        specialinvoke $r0.<org.apache.lucene.search.NumericRangeFilter: void <init>(org.apache.lucene.search.NumericRangeQuery)>($r4);

        return $r0;
    }

    public static org.apache.lucene.search.NumericRangeFilter newIntRange(java.lang.String, int, java.lang.Integer, java.lang.Integer, boolean, boolean)
    {
        org.apache.lucene.search.NumericRangeQuery $r4;
        java.lang.Integer r2, r3;
        org.apache.lucene.search.NumericRangeFilter $r0;
        int i0;
        java.lang.String r1;
        boolean z0, z1;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Integer;

        r3 := @parameter3: java.lang.Integer;

        z0 := @parameter4: boolean;

        z1 := @parameter5: boolean;

        $r0 = new org.apache.lucene.search.NumericRangeFilter;

        $r4 = staticinvoke <org.apache.lucene.search.NumericRangeQuery: org.apache.lucene.search.NumericRangeQuery newIntRange(java.lang.String,int,java.lang.Integer,java.lang.Integer,boolean,boolean)>(r1, i0, r2, r3, z0, z1);

        specialinvoke $r0.<org.apache.lucene.search.NumericRangeFilter: void <init>(org.apache.lucene.search.NumericRangeQuery)>($r4);

        return $r0;
    }

    public static org.apache.lucene.search.NumericRangeFilter newIntRange(java.lang.String, java.lang.Integer, java.lang.Integer, boolean, boolean)
    {
        org.apache.lucene.search.NumericRangeFilter $r0;
        org.apache.lucene.search.NumericRangeQuery $r4;
        java.lang.String r1;
        java.lang.Integer r2, r3;
        boolean z0, z1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Integer;

        r3 := @parameter2: java.lang.Integer;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        $r0 = new org.apache.lucene.search.NumericRangeFilter;

        $r4 = staticinvoke <org.apache.lucene.search.NumericRangeQuery: org.apache.lucene.search.NumericRangeQuery newIntRange(java.lang.String,java.lang.Integer,java.lang.Integer,boolean,boolean)>(r1, r2, r3, z0, z1);

        specialinvoke $r0.<org.apache.lucene.search.NumericRangeFilter: void <init>(org.apache.lucene.search.NumericRangeQuery)>($r4);

        return $r0;
    }

    public static org.apache.lucene.search.NumericRangeFilter newDoubleRange(java.lang.String, int, java.lang.Double, java.lang.Double, boolean, boolean)
    {
        org.apache.lucene.search.NumericRangeQuery $r4;
        java.lang.Double r2, r3;
        org.apache.lucene.search.NumericRangeFilter $r0;
        int i0;
        java.lang.String r1;
        boolean z0, z1;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Double;

        r3 := @parameter3: java.lang.Double;

        z0 := @parameter4: boolean;

        z1 := @parameter5: boolean;

        $r0 = new org.apache.lucene.search.NumericRangeFilter;

        $r4 = staticinvoke <org.apache.lucene.search.NumericRangeQuery: org.apache.lucene.search.NumericRangeQuery newDoubleRange(java.lang.String,int,java.lang.Double,java.lang.Double,boolean,boolean)>(r1, i0, r2, r3, z0, z1);

        specialinvoke $r0.<org.apache.lucene.search.NumericRangeFilter: void <init>(org.apache.lucene.search.NumericRangeQuery)>($r4);

        return $r0;
    }

    public static org.apache.lucene.search.NumericRangeFilter newDoubleRange(java.lang.String, java.lang.Double, java.lang.Double, boolean, boolean)
    {
        org.apache.lucene.search.NumericRangeFilter $r0;
        org.apache.lucene.search.NumericRangeQuery $r4;
        java.lang.Double r2, r3;
        java.lang.String r1;
        boolean z0, z1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Double;

        r3 := @parameter2: java.lang.Double;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        $r0 = new org.apache.lucene.search.NumericRangeFilter;

        $r4 = staticinvoke <org.apache.lucene.search.NumericRangeQuery: org.apache.lucene.search.NumericRangeQuery newDoubleRange(java.lang.String,java.lang.Double,java.lang.Double,boolean,boolean)>(r1, r2, r3, z0, z1);

        specialinvoke $r0.<org.apache.lucene.search.NumericRangeFilter: void <init>(org.apache.lucene.search.NumericRangeQuery)>($r4);

        return $r0;
    }

    public static org.apache.lucene.search.NumericRangeFilter newFloatRange(java.lang.String, int, java.lang.Float, java.lang.Float, boolean, boolean)
    {
        java.lang.Float r2, r3;
        org.apache.lucene.search.NumericRangeQuery $r4;
        org.apache.lucene.search.NumericRangeFilter $r0;
        int i0;
        java.lang.String r1;
        boolean z0, z1;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Float;

        r3 := @parameter3: java.lang.Float;

        z0 := @parameter4: boolean;

        z1 := @parameter5: boolean;

        $r0 = new org.apache.lucene.search.NumericRangeFilter;

        $r4 = staticinvoke <org.apache.lucene.search.NumericRangeQuery: org.apache.lucene.search.NumericRangeQuery newFloatRange(java.lang.String,int,java.lang.Float,java.lang.Float,boolean,boolean)>(r1, i0, r2, r3, z0, z1);

        specialinvoke $r0.<org.apache.lucene.search.NumericRangeFilter: void <init>(org.apache.lucene.search.NumericRangeQuery)>($r4);

        return $r0;
    }

    public static org.apache.lucene.search.NumericRangeFilter newFloatRange(java.lang.String, java.lang.Float, java.lang.Float, boolean, boolean)
    {
        org.apache.lucene.search.NumericRangeFilter $r0;
        java.lang.Float r2, r3;
        org.apache.lucene.search.NumericRangeQuery $r4;
        java.lang.String r1;
        boolean z0, z1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Float;

        r3 := @parameter2: java.lang.Float;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        $r0 = new org.apache.lucene.search.NumericRangeFilter;

        $r4 = staticinvoke <org.apache.lucene.search.NumericRangeQuery: org.apache.lucene.search.NumericRangeQuery newFloatRange(java.lang.String,java.lang.Float,java.lang.Float,boolean,boolean)>(r1, r2, r3, z0, z1);

        specialinvoke $r0.<org.apache.lucene.search.NumericRangeFilter: void <init>(org.apache.lucene.search.NumericRangeQuery)>($r4);

        return $r0;
    }

    public boolean includesMin()
    {
        org.apache.lucene.search.NumericRangeFilter r0;
        org.apache.lucene.search.NumericRangeQuery $r2;
        org.apache.lucene.search.MultiTermQuery $r1;
        boolean $z0;

        r0 := @this: org.apache.lucene.search.NumericRangeFilter;

        $r1 = r0.<org.apache.lucene.search.NumericRangeFilter: org.apache.lucene.search.MultiTermQuery query>;

        $r2 = (org.apache.lucene.search.NumericRangeQuery) $r1;

        $z0 = virtualinvoke $r2.<org.apache.lucene.search.NumericRangeQuery: boolean includesMin()>();

        return $z0;
    }

    public boolean includesMax()
    {
        org.apache.lucene.search.NumericRangeFilter r0;
        org.apache.lucene.search.NumericRangeQuery $r2;
        org.apache.lucene.search.MultiTermQuery $r1;
        boolean $z0;

        r0 := @this: org.apache.lucene.search.NumericRangeFilter;

        $r1 = r0.<org.apache.lucene.search.NumericRangeFilter: org.apache.lucene.search.MultiTermQuery query>;

        $r2 = (org.apache.lucene.search.NumericRangeQuery) $r1;

        $z0 = virtualinvoke $r2.<org.apache.lucene.search.NumericRangeQuery: boolean includesMax()>();

        return $z0;
    }

    public java.lang.Number getMin()
    {
        org.apache.lucene.search.NumericRangeFilter r0;
        org.apache.lucene.search.NumericRangeQuery $r2;
        org.apache.lucene.search.MultiTermQuery $r1;
        java.lang.Number $r3;

        r0 := @this: org.apache.lucene.search.NumericRangeFilter;

        $r1 = r0.<org.apache.lucene.search.NumericRangeFilter: org.apache.lucene.search.MultiTermQuery query>;

        $r2 = (org.apache.lucene.search.NumericRangeQuery) $r1;

        $r3 = virtualinvoke $r2.<org.apache.lucene.search.NumericRangeQuery: java.lang.Number getMin()>();

        return $r3;
    }

    public java.lang.Number getMax()
    {
        org.apache.lucene.search.NumericRangeFilter r0;
        org.apache.lucene.search.NumericRangeQuery $r2;
        org.apache.lucene.search.MultiTermQuery $r1;
        java.lang.Number $r3;

        r0 := @this: org.apache.lucene.search.NumericRangeFilter;

        $r1 = r0.<org.apache.lucene.search.NumericRangeFilter: org.apache.lucene.search.MultiTermQuery query>;

        $r2 = (org.apache.lucene.search.NumericRangeQuery) $r1;

        $r3 = virtualinvoke $r2.<org.apache.lucene.search.NumericRangeQuery: java.lang.Number getMax()>();

        return $r3;
    }

    public int getPrecisionStep()
    {
        org.apache.lucene.search.NumericRangeFilter r0;
        org.apache.lucene.search.NumericRangeQuery $r2;
        org.apache.lucene.search.MultiTermQuery $r1;
        int $i0;

        r0 := @this: org.apache.lucene.search.NumericRangeFilter;

        $r1 = r0.<org.apache.lucene.search.NumericRangeFilter: org.apache.lucene.search.MultiTermQuery query>;

        $r2 = (org.apache.lucene.search.NumericRangeQuery) $r1;

        $i0 = virtualinvoke $r2.<org.apache.lucene.search.NumericRangeQuery: int getPrecisionStep()>();

        return $i0;
    }
}
