final class org.objectweb.asm.xml.ASMContentHandler$ClassRule extends org.objectweb.asm.xml.ASMContentHandler$Rule
{
    final org.objectweb.asm.xml.ASMContentHandler this$0;

    void <init>(org.objectweb.asm.xml.ASMContentHandler)
    {
        org.objectweb.asm.xml.ASMContentHandler r1;
        org.objectweb.asm.xml.ASMContentHandler$ClassRule r0;

        r0 := @this: org.objectweb.asm.xml.ASMContentHandler$ClassRule;

        r1 := @parameter0: org.objectweb.asm.xml.ASMContentHandler;

        r0.<org.objectweb.asm.xml.ASMContentHandler$ClassRule: org.objectweb.asm.xml.ASMContentHandler this$0> = r1;

        specialinvoke r0.<org.objectweb.asm.xml.ASMContentHandler$Rule: void <init>(org.objectweb.asm.xml.ASMContentHandler)>(r1);

        return;
    }

    public final void begin(java.lang.String, org.xml.sax.Attributes)
    {
        java.util.HashMap $r3;
        org.objectweb.asm.xml.ASMContentHandler$ClassRule r11;
        java.lang.Integer $r4;
        java.util.ArrayList $r10;
        org.xml.sax.Attributes r0;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r1, $r2, $r5, $r6, $r7, $r8, $r9, r13;
        org.objectweb.asm.xml.ASMContentHandler $r12;

        r11 := @this: org.objectweb.asm.xml.ASMContentHandler$ClassRule;

        r13 := @parameter0: java.lang.String;

        r0 := @parameter1: org.xml.sax.Attributes;

        $r1 = interfaceinvoke r0.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("major");

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

        $r2 = interfaceinvoke r0.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("minor");

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        $r4 = new java.lang.Integer;

        $i2 = $i1 << 16;

        $i3 = $i2 | $i0;

        specialinvoke $r4.<java.lang.Integer: void <init>(int)>($i3);

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("version", $r4);

        $r5 = interfaceinvoke r0.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("access");

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("access", $r5);

        $r6 = interfaceinvoke r0.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("name");

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("name", $r6);

        $r7 = interfaceinvoke r0.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("parent");

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("parent", $r7);

        $r8 = interfaceinvoke r0.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("source");

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("source", $r8);

        $r9 = interfaceinvoke r0.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("signature");

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("signature", $r9);

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("interfaces", $r10);

        $r12 = r11.<org.objectweb.asm.xml.ASMContentHandler$ClassRule: org.objectweb.asm.xml.ASMContentHandler this$0>;

        virtualinvoke $r12.<org.objectweb.asm.xml.ASMContentHandler: void push(java.lang.Object)>($r3);

        return;
    }
}
