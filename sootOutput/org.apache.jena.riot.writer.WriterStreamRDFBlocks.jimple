public class org.apache.jena.riot.writer.WriterStreamRDFBlocks extends org.apache.jena.riot.writer.WriterStreamRDFBatched
{
    protected static final boolean NL_GDFT_START;
    protected static final boolean NL_GNMD_START;
    protected static final boolean NL_GDFT_END;
    protected static final boolean NL_GNMD_END;
    protected static final int INDENT_PREDICATE;
    protected static final int MIN_PREDICATE;
    protected static final int LONG_PREDICATE;
    protected static final int LONG_SUBJECT;
    protected static final int INDENT_MIN_S;
    protected static final int INDENT_MAX_S;
    protected static final int GAP_S_P;
    protected static final int GAP_P_O;
    protected static final int INDENT_GDFT;
    protected static final int INDENT_GNMD;
    protected com.hp.hpl.jena.graph.Node lastGraph;
    protected com.hp.hpl.jena.graph.Node lastSubject;
    protected boolean firstGraph;
    protected int currentGraphIndent;

    public void <init>(java.io.OutputStream)
    {
        java.io.OutputStream r1;
        org.apache.jena.riot.writer.WriterStreamRDFBlocks r0;

        r0 := @this: org.apache.jena.riot.writer.WriterStreamRDFBlocks;

        r1 := @parameter0: java.io.OutputStream;

        specialinvoke r0.<org.apache.jena.riot.writer.WriterStreamRDFBatched: void <init>(java.io.OutputStream)>(r1);

        r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: com.hp.hpl.jena.graph.Node lastGraph> = null;

        r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: com.hp.hpl.jena.graph.Node lastSubject> = null;

        r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: boolean firstGraph> = 1;

        r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: int currentGraphIndent> = 0;

        return;
    }

    public void <init>(java.io.Writer)
    {
        java.io.Writer r1;
        org.apache.jena.riot.writer.WriterStreamRDFBlocks r0;

        r0 := @this: org.apache.jena.riot.writer.WriterStreamRDFBlocks;

        r1 := @parameter0: java.io.Writer;

        specialinvoke r0.<org.apache.jena.riot.writer.WriterStreamRDFBatched: void <init>(java.io.Writer)>(r1);

        r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: com.hp.hpl.jena.graph.Node lastGraph> = null;

        r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: com.hp.hpl.jena.graph.Node lastSubject> = null;

        r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: boolean firstGraph> = 1;

        r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: int currentGraphIndent> = 0;

        return;
    }

    public void <init>(org.apache.jena.atlas.io.IndentedWriter)
    {
        org.apache.jena.riot.writer.WriterStreamRDFBlocks r0;
        org.apache.jena.atlas.io.IndentedWriter r1;

        r0 := @this: org.apache.jena.riot.writer.WriterStreamRDFBlocks;

        r1 := @parameter0: org.apache.jena.atlas.io.IndentedWriter;

        specialinvoke r0.<org.apache.jena.riot.writer.WriterStreamRDFBatched: void <init>(org.apache.jena.atlas.io.IndentedWriter)>(r1);

        r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: com.hp.hpl.jena.graph.Node lastGraph> = null;

        r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: com.hp.hpl.jena.graph.Node lastSubject> = null;

        r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: boolean firstGraph> = 1;

        r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: int currentGraphIndent> = 0;

        return;
    }

    protected void printBatchQuads(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, java.util.List)
    {
        java.util.Iterator $r3;
        com.hp.hpl.jena.graph.Node $r1, r6, r9;
        org.apache.jena.atlas.io.IndentedWriter $r7, $r8;
        org.apache.jena.riot.writer.WriterStreamRDFBlocks r0;
        java.util.List r2, $r5;
        org.apache.jena.atlas.iterator.Iter $r4;
        boolean $z0;

        r0 := @this: org.apache.jena.riot.writer.WriterStreamRDFBlocks;

        r9 := @parameter0: com.hp.hpl.jena.graph.Node;

        r6 := @parameter1: com.hp.hpl.jena.graph.Node;

        r2 := @parameter2: java.util.List;

        if r9 != null goto label1;

        r9 = <com.hp.hpl.jena.sparql.core.Quad: com.hp.hpl.jena.graph.Node defaultGraphNodeGenerated>;

     label1:
        $r1 = r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: com.hp.hpl.jena.graph.Node lastGraph>;

        $z0 = staticinvoke <org.apache.jena.atlas.lib.Lib: boolean equal(java.lang.Object,java.lang.Object)>(r9, $r1);

        if $z0 == 0 goto label2;

        $r7 = r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r7.<org.apache.jena.atlas.io.IndentedWriter: void println(java.lang.String)>(" .");

        $r8 = r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r8.<org.apache.jena.atlas.io.IndentedWriter: void println()>();

        goto label3;

     label2:
        virtualinvoke r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: void endGraph(com.hp.hpl.jena.graph.Node)>(r9);

        virtualinvoke r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: void startGraph(com.hp.hpl.jena.graph.Node)>(r9);

        r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: com.hp.hpl.jena.graph.Node lastGraph> = r9;

     label3:
        $r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

        $r4 = staticinvoke <org.apache.jena.riot.other.GLib: org.apache.jena.atlas.iterator.Iter quads2triples(java.util.Iterator)>($r3);

        $r5 = virtualinvoke $r4.<org.apache.jena.atlas.iterator.Iter: java.util.List toList()>();

        specialinvoke r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: void printBatch(com.hp.hpl.jena.graph.Node,java.util.List)>(r6, $r5);

        r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: com.hp.hpl.jena.graph.Node lastSubject> = r6;

        return;
    }

    private void gap(int)
    {
        int i0;
        org.apache.jena.riot.writer.WriterStreamRDFBlocks r0;
        org.apache.jena.atlas.io.IndentedWriter $r1;

        r0 := @this: org.apache.jena.riot.writer.WriterStreamRDFBlocks;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r1.<org.apache.jena.atlas.io.IndentedWriter: void print(char,int)>(32, i0);

        return;
    }

    protected void printBatchTriples(com.hp.hpl.jena.graph.Node, java.util.List)
    {
        com.hp.hpl.jena.graph.Node r2;
        org.apache.jena.atlas.io.IndentedWriter $r1, $r4, $r5, $r6;
        org.apache.jena.riot.writer.WriterStreamRDFBlocks r0;
        java.util.List r3;
        int $i0;

        r0 := @this: org.apache.jena.riot.writer.WriterStreamRDFBlocks;

        r2 := @parameter0: com.hp.hpl.jena.graph.Node;

        r3 := @parameter1: java.util.List;

        $r1 = r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: org.apache.jena.atlas.io.IndentedWriter out>;

        $i0 = virtualinvoke $r1.<org.apache.jena.atlas.io.IndentedWriter: int getRow()>();

        if $i0 <= 1 goto label1;

        $r6 = r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r6.<org.apache.jena.atlas.io.IndentedWriter: void println()>();

     label1:
        specialinvoke r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: void printBatch(com.hp.hpl.jena.graph.Node,java.util.List)>(r2, r3);

        $r4 = r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r4.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>(" .");

        $r5 = r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r5.<org.apache.jena.atlas.io.IndentedWriter: void println()>();

        return;
    }

    private void printBatch(com.hp.hpl.jena.graph.Node, java.util.List)
    {
        com.hp.hpl.jena.graph.Node r1;
        org.apache.jena.atlas.io.IndentedWriter $r2, $r3, $r4, $r6, $r7;
        org.apache.jena.riot.writer.WriterStreamRDFBlocks r0;
        java.util.List r5;
        int $i0;

        r0 := @this: org.apache.jena.riot.writer.WriterStreamRDFBlocks;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        r5 := @parameter1: java.util.List;

        virtualinvoke r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: void outputNode(com.hp.hpl.jena.graph.Node)>(r1);

        $r2 = r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: org.apache.jena.atlas.io.IndentedWriter out>;

        $i0 = virtualinvoke $r2.<org.apache.jena.atlas.io.IndentedWriter: int getCol()>();

        if $i0 <= 20 goto label1;

        $r7 = r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r7.<org.apache.jena.atlas.io.IndentedWriter: void println()>();

        goto label2;

     label1:
        specialinvoke r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: void gap(int)>(2);

     label2:
        $r3 = r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r3.<org.apache.jena.atlas.io.IndentedWriter: void incIndent(int)>(8);

        $r4 = r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r4.<org.apache.jena.atlas.io.IndentedWriter: void pad()>();

        specialinvoke r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: void writePredicateObjectList(java.util.Collection)>(r5);

        $r6 = r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r6.<org.apache.jena.atlas.io.IndentedWriter: void decIndent(int)>(8);

        return;
    }

    private void writePredicateObjectList(java.util.Collection)
    {
        java.util.Iterator $r4;
        java.util.Collection r1;
        com.hp.hpl.jena.graph.Node $r7, $r10;
        org.apache.jena.atlas.io.IndentedWriter $r8, $r9, $r11;
        com.hp.hpl.jena.graph.Triple r6;
        org.apache.jena.riot.writer.WriterStreamRDFBlocks r0;
        org.apache.jena.riot.system.PrefixMap $r3;
        int $i0;
        java.lang.Object $r5;
        java.lang.String $r2;
        boolean $z0, z1;

        r0 := @this: org.apache.jena.riot.writer.WriterStreamRDFBlocks;

        r1 := @parameter0: java.util.Collection;

        $r3 = r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: org.apache.jena.riot.system.PrefixMap pMap>;

        $r2 = r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: java.lang.String baseURI>;

        $i0 = staticinvoke <org.apache.jena.riot.system.RiotLib: int calcWidthTriples(org.apache.jena.riot.system.PrefixMap,java.lang.String,java.util.Collection,int,int)>($r3, $r2, r1, 6, 30);

        z1 = 1;

        $r4 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.hp.hpl.jena.graph.Triple) $r5;

        if z1 != 0 goto label2;

        $r11 = r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r11.<org.apache.jena.atlas.io.IndentedWriter: void println(java.lang.String)>(" ;");

        goto label3;

     label2:
        z1 = 0;

     label3:
        $r7 = virtualinvoke r6.<com.hp.hpl.jena.graph.Triple: com.hp.hpl.jena.graph.Node getPredicate()>();

        virtualinvoke r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: void outputNode(com.hp.hpl.jena.graph.Node)>($r7);

        $r8 = r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r8.<org.apache.jena.atlas.io.IndentedWriter: void pad(int)>($i0);

        $r9 = r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r9.<org.apache.jena.atlas.io.IndentedWriter: void print(char,int)>(32, 2);

        $r10 = virtualinvoke r6.<com.hp.hpl.jena.graph.Triple: com.hp.hpl.jena.graph.Node getObject()>();

        virtualinvoke r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: void outputNode(com.hp.hpl.jena.graph.Node)>($r10);

        goto label1;

     label4:
        return;
    }

    protected void finalizeRun()
    {
        org.apache.jena.riot.writer.WriterStreamRDFBlocks r0;
        com.hp.hpl.jena.graph.Node $r1;

        r0 := @this: org.apache.jena.riot.writer.WriterStreamRDFBlocks;

        $r1 = r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: com.hp.hpl.jena.graph.Node lastGraph>;

        if $r1 == null goto label1;

        virtualinvoke r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: void endGraph(com.hp.hpl.jena.graph.Node)>(null);

     label1:
        return;
    }

    protected boolean dftGraph()
    {
        org.apache.jena.riot.writer.WriterStreamRDFBlocks r0;
        com.hp.hpl.jena.graph.Node $r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.jena.riot.writer.WriterStreamRDFBlocks;

        $r2 = r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: com.hp.hpl.jena.graph.Node lastGraph>;

        $r1 = <com.hp.hpl.jena.sparql.core.Quad: com.hp.hpl.jena.graph.Node defaultGraphNodeGenerated>;

        if $r2 != $r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    protected boolean dftGraph(com.hp.hpl.jena.graph.Node)
    {
        org.apache.jena.riot.writer.WriterStreamRDFBlocks r2;
        com.hp.hpl.jena.graph.Node r0, $r1;
        boolean $z0;

        r2 := @this: org.apache.jena.riot.writer.WriterStreamRDFBlocks;

        r0 := @parameter0: com.hp.hpl.jena.graph.Node;

        $r1 = <com.hp.hpl.jena.sparql.core.Quad: com.hp.hpl.jena.graph.Node defaultGraphNodeGenerated>;

        if r0 != $r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    protected void startGraph(com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.graph.Node $r1, r2;
        int $i0, $i1;
        boolean $z0, z1, $z2, $z3, $z4, $z5;
        org.apache.jena.atlas.io.IndentedWriter $r3, $r4, $r5, $r6, $r7, $r8;
        org.apache.jena.riot.writer.WriterStreamRDFBlocks r0;

        r0 := @this: org.apache.jena.riot.writer.WriterStreamRDFBlocks;

        r2 := @parameter0: com.hp.hpl.jena.graph.Node;

        $r1 = r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: com.hp.hpl.jena.graph.Node lastGraph>;

        if $r1 != null goto label11;

        $z0 = virtualinvoke r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: boolean dftGraph(com.hp.hpl.jena.graph.Node)>(r2);

        if $z0 == 0 goto label01;

        $z5 = 0;

        goto label02;

     label01:
        $z5 = 1;

     label02:
        z1 = $z5;

        $z2 = r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: boolean firstGraph>;

        if $z2 != 0 goto label03;

        $r7 = r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r7.<org.apache.jena.atlas.io.IndentedWriter: void println()>();

     label03:
        r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: boolean firstGraph> = 0;

        r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: com.hp.hpl.jena.graph.Node lastSubject> = null;

        $z3 = virtualinvoke r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: boolean dftGraph(com.hp.hpl.jena.graph.Node)>(r2);

        if $z3 != 0 goto label04;

        virtualinvoke r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: void outputNode(com.hp.hpl.jena.graph.Node)>(r2);

        $r6 = r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r6.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>(" ");

     label04:
        if z1 == 0 goto label05;

        $r5 = r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r5.<org.apache.jena.atlas.io.IndentedWriter: void println(java.lang.String)>("{");

        goto label06;

     label05:
        $r3 = r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r3.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>("{ ");

     label06:
        $z4 = virtualinvoke r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: boolean dftGraph()>();

        if $z4 == 0 goto label07;

        virtualinvoke r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: void setGraphIndent(int)>(2);

        goto label10;

     label07:
        if z1 == 0 goto label08;

        $i0 = 4;

        goto label09;

     label08:
        $r4 = r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: org.apache.jena.atlas.io.IndentedWriter out>;

        $i0 = virtualinvoke $r4.<org.apache.jena.atlas.io.IndentedWriter: int getCol()>();

     label09:
        virtualinvoke r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: void setGraphIndent(int)>($i0);

     label10:
        $r8 = r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: org.apache.jena.atlas.io.IndentedWriter out>;

        $i1 = virtualinvoke r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: int graphIndent()>();

        virtualinvoke $r8.<org.apache.jena.atlas.io.IndentedWriter: void incIndent(int)>($i1);

     label11:
        r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: com.hp.hpl.jena.graph.Node lastGraph> = r2;

        return;
    }

    protected void endGraph(com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.graph.Node $r1, r2, $r3, $r4;
        int $i0, $i1;
        boolean $z0, $z1, $z2;
        org.apache.jena.atlas.io.IndentedWriter $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        org.apache.jena.riot.writer.WriterStreamRDFBlocks r0;

        r0 := @this: org.apache.jena.riot.writer.WriterStreamRDFBlocks;

        r2 := @parameter0: com.hp.hpl.jena.graph.Node;

        $r1 = r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: com.hp.hpl.jena.graph.Node lastGraph>;

        if $r1 != null goto label1;

        return;

     label1:
        $r3 = r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: com.hp.hpl.jena.graph.Node lastGraph>;

        $z0 = staticinvoke <org.apache.jena.atlas.lib.Lib: boolean equal(java.lang.Object,java.lang.Object)>($r3, r2);

        if $z0 != 0 goto label7;

        $z1 = virtualinvoke r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: boolean dftGraph(com.hp.hpl.jena.graph.Node)>(r2);

        if $z1 == 0 goto label2;

        goto label2;

     label2:
        $r4 = r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: com.hp.hpl.jena.graph.Node lastSubject>;

        if $r4 == null goto label3;

        $r12 = r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r12.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>(" .");

     label3:
        if 1 == 0 goto label4;

        $r9 = r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: org.apache.jena.atlas.io.IndentedWriter out>;

        $i1 = virtualinvoke r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: int graphIndent()>();

        virtualinvoke $r9.<org.apache.jena.atlas.io.IndentedWriter: void decIndent(int)>($i1);

        $r10 = r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r10.<org.apache.jena.atlas.io.IndentedWriter: void println()>();

        $r11 = r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r11.<org.apache.jena.atlas.io.IndentedWriter: void println(java.lang.String)>("}");

        goto label6;

     label4:
        $r5 = r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: org.apache.jena.atlas.io.IndentedWriter out>;

        $i0 = virtualinvoke r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: int graphIndent()>();

        virtualinvoke $r5.<org.apache.jena.atlas.io.IndentedWriter: void decIndent(int)>($i0);

        $r6 = r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: org.apache.jena.atlas.io.IndentedWriter out>;

        $z2 = virtualinvoke $r6.<org.apache.jena.atlas.io.IndentedWriter: boolean atLineStart()>();

        if $z2 == 0 goto label5;

        $r8 = r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r8.<org.apache.jena.atlas.io.IndentedWriter: void println(java.lang.String)>("}");

        goto label6;

     label5:
        $r7 = r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r7.<org.apache.jena.atlas.io.IndentedWriter: void println(java.lang.String)>(" }");

     label6:
        r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: com.hp.hpl.jena.graph.Node lastSubject> = null;

        r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: com.hp.hpl.jena.graph.Node lastGraph> = null;

     label7:
        return;
    }

    protected void setGraphIndent(int)
    {
        int i0;
        org.apache.jena.riot.writer.WriterStreamRDFBlocks r0;

        r0 := @this: org.apache.jena.riot.writer.WriterStreamRDFBlocks;

        i0 := @parameter0: int;

        r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: int currentGraphIndent> = i0;

        return;
    }

    protected int graphIndent()
    {
        int $i0;
        org.apache.jena.riot.writer.WriterStreamRDFBlocks r0;

        r0 := @this: org.apache.jena.riot.writer.WriterStreamRDFBlocks;

        $i0 = r0.<org.apache.jena.riot.writer.WriterStreamRDFBlocks: int currentGraphIndent>;

        return $i0;
    }

    public static void <clinit>()
    {
        <org.apache.jena.riot.writer.WriterStreamRDFBlocks: int INDENT_GNMD> = 4;

        <org.apache.jena.riot.writer.WriterStreamRDFBlocks: int INDENT_GDFT> = 2;

        <org.apache.jena.riot.writer.WriterStreamRDFBlocks: int GAP_P_O> = 2;

        <org.apache.jena.riot.writer.WriterStreamRDFBlocks: int GAP_S_P> = 2;

        <org.apache.jena.riot.writer.WriterStreamRDFBlocks: int INDENT_MAX_S> = 14;

        <org.apache.jena.riot.writer.WriterStreamRDFBlocks: int INDENT_MIN_S> = 6;

        <org.apache.jena.riot.writer.WriterStreamRDFBlocks: int LONG_SUBJECT> = 20;

        <org.apache.jena.riot.writer.WriterStreamRDFBlocks: int LONG_PREDICATE> = 30;

        <org.apache.jena.riot.writer.WriterStreamRDFBlocks: int MIN_PREDICATE> = 6;

        <org.apache.jena.riot.writer.WriterStreamRDFBlocks: int INDENT_PREDICATE> = 8;

        <org.apache.jena.riot.writer.WriterStreamRDFBlocks: boolean NL_GNMD_END> = 1;

        <org.apache.jena.riot.writer.WriterStreamRDFBlocks: boolean NL_GDFT_END> = 1;

        <org.apache.jena.riot.writer.WriterStreamRDFBlocks: boolean NL_GNMD_START> = 1;

        <org.apache.jena.riot.writer.WriterStreamRDFBlocks: boolean NL_GDFT_START> = 0;

        return;
    }
}
