public class org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine extends org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine implements org.springframework.context.ApplicationContextAware, org.springframework.beans.factory.InitializingBean
{
    java.lang.String threadingRef;
    java.lang.String tlsRef;
    org.apache.cxf.Bus bus;
    org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory factory;

    public void <init>(org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory, org.apache.cxf.Bus, java.lang.String, int)
    {
        org.apache.cxf.Bus r4;
        org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine r0;
        org.eclipse.jetty.util.component.Container$Listener $r2;
        int i0;
        java.lang.String r3;
        org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory r1;

        r0 := @this: org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine;

        r1 := @parameter0: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory;

        r4 := @parameter1: org.apache.cxf.Bus;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        $r2 = virtualinvoke r1.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory: org.eclipse.jetty.util.component.Container$Listener getMBeanContainer()>();

        specialinvoke r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: void <init>(org.eclipse.jetty.util.component.Container$Listener,java.lang.String,int)>($r2, r3, i0);

        r0.<org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine: org.apache.cxf.Bus bus> = r4;

        r0.<org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory factory> = r1;

        return;
    }

    public void <init>()
    {
        org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine r0;

        r0 := @this: org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine;

        specialinvoke r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: void <init>()>();

        return;
    }

    public void setBus(org.apache.cxf.Bus)
    {
        org.apache.cxf.Bus r1, $r2, $r4;
        org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine r0;
        java.lang.Object $r5;
        org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory $r3, $r6;

        r0 := @this: org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine;

        r1 := @parameter0: org.apache.cxf.Bus;

        r0.<org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine: org.apache.cxf.Bus bus> = r1;

        $r2 = r0.<org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine: org.apache.cxf.Bus bus>;

        if null == $r2 goto label1;

        $r3 = r0.<org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory factory>;

        if null != $r3 goto label1;

        $r4 = r0.<org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine: org.apache.cxf.Bus bus>;

        $r5 = interfaceinvoke $r4.<org.apache.cxf.Bus: java.lang.Object getExtension(java.lang.Class)>(class "Lorg/apache/cxf/transport/http_jetty/JettyHTTPServerEngineFactory;");

        $r6 = (org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory) $r5;

        r0.<org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory factory> = $r6;

     label1:
        return;
    }

    public void setApplicationContext(org.springframework.context.ApplicationContext) throws org.springframework.beans.BeansException
    {
        org.apache.cxf.Bus $r1, $r3;
        org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine r0;
        org.springframework.context.ApplicationContext r2;

        r0 := @this: org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine;

        r2 := @parameter0: org.springframework.context.ApplicationContext;

        $r1 = r0.<org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine: org.apache.cxf.Bus bus>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor: org.apache.cxf.Bus addDefaultBus(org.springframework.context.ApplicationContext)>(r2);

        r0.<org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine: org.apache.cxf.Bus bus> = $r3;

     label1:
        return;
    }

    public void setThreadingParametersRef(java.lang.String)
    {
        org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine r0;
        java.lang.String r1;

        r0 := @this: org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine: java.lang.String threadingRef> = r1;

        return;
    }

    public void setTlsServerParametersRef(java.lang.String)
    {
        org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine r0;
        java.lang.String r1;

        r0 := @this: org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine: java.lang.String tlsRef> = r1;

        return;
    }

    public void finalizeConfig() throws java.security.GeneralSecurityException, java.io.IOException
    {
        org.apache.cxf.configuration.jsse.TLSServerParameters $r8;
        org.apache.cxf.transport.http_jetty.ThreadingParameters $r13;
        org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine r0;
        java.util.Map $r5, $r10;
        java.lang.Object $r7, $r12;
        java.lang.String $r1, $r2, $r3, $r6, $r11, $r14;
        org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory $r4, $r9;

        r0 := @this: org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine;

        $r1 = r0.<org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine: java.lang.String tlsRef>;

        if $r1 != null goto label1;

        $r14 = r0.<org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine: java.lang.String threadingRef>;

        if $r14 == null goto label3;

     label1:
        $r2 = r0.<org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine: java.lang.String threadingRef>;

        if $r2 == null goto label2;

        $r9 = r0.<org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory factory>;

        $r10 = virtualinvoke $r9.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory: java.util.Map getThreadingParametersMap()>();

        $r11 = r0.<org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine: java.lang.String threadingRef>;

        $r12 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>($r11);

        $r13 = (org.apache.cxf.transport.http_jetty.ThreadingParameters) $r12;

        virtualinvoke r0.<org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine: void setThreadingParameters(org.apache.cxf.transport.http_jetty.ThreadingParameters)>($r13);

     label2:
        $r3 = r0.<org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine: java.lang.String tlsRef>;

        if $r3 == null goto label3;

        $r4 = r0.<org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory factory>;

        $r5 = virtualinvoke $r4.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory: java.util.Map getTlsServerParametersMap()>();

        $r6 = r0.<org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine: java.lang.String tlsRef>;

        $r7 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        $r8 = (org.apache.cxf.configuration.jsse.TLSServerParameters) $r7;

        virtualinvoke r0.<org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine: void setTlsServerParameters(org.apache.cxf.configuration.jsse.TLSServerParameters)>($r8);

     label3:
        specialinvoke r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: void finalizeConfig()>();

        return;
    }

    public void afterPropertiesSet() throws java.lang.Exception
    {
        org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine r0;

        r0 := @this: org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine;

        virtualinvoke r0.<org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine: void finalizeConfig()>();

        return;
    }
}
