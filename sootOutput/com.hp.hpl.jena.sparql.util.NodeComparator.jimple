public class com.hp.hpl.jena.sparql.util.NodeComparator extends java.lang.Object implements java.util.Comparator
{

    public void <init>()
    {
        com.hp.hpl.jena.sparql.util.NodeComparator r0;

        r0 := @this: com.hp.hpl.jena.sparql.util.NodeComparator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node)
    {
        int $i0;
        com.hp.hpl.jena.graph.Node r0, r1;
        com.hp.hpl.jena.sparql.util.NodeComparator r2;

        r2 := @this: com.hp.hpl.jena.sparql.util.NodeComparator;

        r0 := @parameter0: com.hp.hpl.jena.graph.Node;

        r1 := @parameter1: com.hp.hpl.jena.graph.Node;

        $i0 = staticinvoke <com.hp.hpl.jena.sparql.util.NodeUtils: int compareRDFTerms(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r0, r1);

        return $i0;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        int $i0;
        java.lang.Object r1, r2;
        com.hp.hpl.jena.graph.Node $r3, $r4;
        com.hp.hpl.jena.sparql.util.NodeComparator r0;

        r0 := @this: com.hp.hpl.jena.sparql.util.NodeComparator;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (com.hp.hpl.jena.graph.Node) r1;

        $r3 = (com.hp.hpl.jena.graph.Node) r2;

        $i0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.util.NodeComparator: int compare(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>($r4, $r3);

        return $i0;
    }
}
