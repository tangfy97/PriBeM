public class org.apache.commons.io.FilenameUtils extends java.lang.Object
{
    public static final char EXTENSION_SEPARATOR;
    public static final java.lang.String EXTENSION_SEPARATOR_STR;
    private static final char UNIX_SEPARATOR;
    private static final char WINDOWS_SEPARATOR;
    private static final char SYSTEM_SEPARATOR;
    private static final char OTHER_SEPARATOR;

    public void <init>()
    {
        org.apache.commons.io.FilenameUtils r0;

        r0 := @this: org.apache.commons.io.FilenameUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static boolean isSystemWindows()
    {
        int $i1;
        char $c0;
        boolean $z0;

        $c0 = <org.apache.commons.io.FilenameUtils: char SYSTEM_SEPARATOR>;

        $i1 = (int) $c0;

        if $i1 != 92 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static boolean isSeparator(char)
    {
        int $i1, $i2;
        char c0;
        boolean $z0;

        c0 := @parameter0: char;

        $i1 = (int) c0;

        if $i1 == 47 goto label1;

        $i2 = (int) c0;

        if $i2 != 92 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public static java.lang.String normalize(java.lang.String)
    {
        char $c0;
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $c0 = <org.apache.commons.io.FilenameUtils: char SYSTEM_SEPARATOR>;

        $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 1);

        return $r1;
    }

    public static java.lang.String normalize(java.lang.String, boolean)
    {
        char $c0;
        java.lang.String r0, $r1;
        boolean z0;

        r0 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $c0 = 47;

        goto label2;

     label1:
        $c0 = 92;

     label2:
        $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 1);

        return $r1;
    }

    public static java.lang.String normalizeNoEndSeparator(java.lang.String)
    {
        char $c0;
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $c0 = <org.apache.commons.io.FilenameUtils: char SYSTEM_SEPARATOR>;

        $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 0);

        return $r1;
    }

    public static java.lang.String normalizeNoEndSeparator(java.lang.String, boolean)
    {
        char $c0;
        java.lang.String r0, $r1;
        boolean z0;

        r0 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $c0 = 47;

        goto label2;

     label1:
        $c0 = 92;

     label2:
        $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 0);

        return $r1;
    }

    private static java.lang.String doNormalize(java.lang.String, char, boolean)
    {
        java.lang.String r0, $r5, $r6, $r7;
        char[] r1;
        boolean z0, z1;
        int $i0, $i1, $i2, $i3, $i7, $i9, $i11, $i13, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i23, $i24, $i25, $i26, $i27, $i30, $i32, $i33, $i34, $i35, $i36, $i37, $i40, $i42, $i43, i45, i47, $i48, i49, i50, i51, i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i64, $i66, $i67, $i68, $i69, $i70, $i71, $i73, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i85;
        char c4, $c5, c6, $c8, $c10, $c12, $c14, $c22, $c28, $c29, $c31, $c38, $c39, $c41, $c44, $c46;

        r0 := @parameter0: java.lang.String;

        c4 := @parameter1: char;

        z0 := @parameter2: boolean;

        if r0 != null goto label01;

        return null;

     label01:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        i45 = $i0;

        if $i0 != 0 goto label02;

        return r0;

     label02:
        $i1 = staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(r0);

        if $i1 >= 0 goto label03;

        return null;

     label03:
        $i2 = $i0 + 2;

        r1 = newarray (char)[$i2];

        $i3 = virtualinvoke r0.<java.lang.String: int length()>();

        virtualinvoke r0.<java.lang.String: void getChars(int,int,char[],int)>(0, $i3, r1, 0);

        $c5 = <org.apache.commons.io.FilenameUtils: char SYSTEM_SEPARATOR>;

        $i53 = (int) c4;

        $i54 = (int) $c5;

        if $i53 != $i54 goto label04;

        $c46 = <org.apache.commons.io.FilenameUtils: char OTHER_SEPARATOR>;

        goto label05;

     label04:
        $c46 = <org.apache.commons.io.FilenameUtils: char SYSTEM_SEPARATOR>;

     label05:
        c6 = $c46;

        i47 = 0;

     label06:
        $i48 = lengthof r1;

        if i47 >= $i48 goto label08;

        $c44 = r1[i47];

        $i55 = (int) $c44;

        $i56 = (int) c6;

        if $i55 != $i56 goto label07;

        r1[i47] = c4;

     label07:
        i47 = i47 + 1;

        goto label06;

     label08:
        z1 = 1;

        $i7 = $i0 - 1;

        $c8 = r1[$i7];

        $i57 = (int) $c8;

        $i58 = (int) c4;

        if $i57 == $i58 goto label09;

        i45 = $i0 + 1;

        r1[$i0] = c4;

        z1 = 0;

     label09:
        i49 = $i1 + 1;

     label10:
        if i49 >= i45 goto label12;

        $c39 = r1[i49];

        $i59 = (int) $c39;

        $i60 = (int) c4;

        if $i59 != $i60 goto label11;

        $i40 = i49 - 1;

        $c41 = r1[$i40];

        $i61 = (int) $c41;

        $i62 = (int) c4;

        if $i61 != $i62 goto label11;

        $i43 = i49 - 1;

        $i42 = i45 - i49;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i49, r1, $i43, $i42);

        $i64 = (int) -1;

        i45 = i45 + $i64;

        $i66 = (int) -1;

        i49 = i49 + $i66;

     label11:
        i49 = i49 + 1;

        goto label10;

     label12:
        i50 = $i1 + 1;

     label13:
        if i50 >= i45 goto label17;

        $c29 = r1[i50];

        $i67 = (int) $c29;

        $i68 = (int) c4;

        if $i67 != $i68 goto label16;

        $i30 = i50 - 1;

        $c31 = r1[$i30];

        $i69 = (int) $c31;

        if $i69 != 46 goto label16;

        $i32 = $i1 + 1;

        if i50 == $i32 goto label14;

        $i37 = i50 - 2;

        $c38 = r1[$i37];

        $i70 = (int) $c38;

        $i71 = (int) c4;

        if $i70 != $i71 goto label16;

     label14:
        $i33 = i45 - 1;

        if i50 != $i33 goto label15;

        z1 = 1;

     label15:
        $i36 = i50 + 1;

        $i35 = i50 - 1;

        $i34 = i45 - i50;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, $i36, r1, $i35, $i34);

        $i73 = (int) -2;

        i45 = i45 + $i73;

        $i75 = (int) -1;

        i50 = i50 + $i75;

     label16:
        i50 = i50 + 1;

        goto label13;

     label17:
        i51 = $i1 + 2;

     label18:
        if i51 >= i45 goto label26;

        $c10 = r1[i51];

        $i76 = (int) $c10;

        $i77 = (int) c4;

        if $i76 != $i77 goto label25;

        $i11 = i51 - 1;

        $c12 = r1[$i11];

        $i78 = (int) $c12;

        if $i78 != 46 goto label25;

        $i13 = i51 - 2;

        $c14 = r1[$i13];

        $i79 = (int) $c14;

        if $i79 != 46 goto label25;

        $i15 = $i1 + 2;

        if i51 == $i15 goto label19;

        $i27 = i51 - 3;

        $c28 = r1[$i27];

        $i80 = (int) $c28;

        $i81 = (int) c4;

        if $i80 != $i81 goto label25;

     label19:
        $i16 = $i1 + 2;

        if i51 != $i16 goto label20;

        return null;

     label20:
        $i17 = i45 - 1;

        if i51 != $i17 goto label21;

        z1 = 1;

     label21:
        i52 = i51 - 4;

     label22:
        if i52 < $i1 goto label24;

        $c22 = r1[i52];

        $i82 = (int) $c22;

        $i83 = (int) c4;

        if $i82 != $i83 goto label23;

        $i25 = i51 + 1;

        $i24 = i52 + 1;

        $i23 = i45 - i51;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, $i25, r1, $i24, $i23);

        $i26 = i51 - i52;

        i45 = i45 - $i26;

        i51 = i52 + 1;

        goto label25;

     label23:
        $i85 = (int) -1;

        i52 = i52 + $i85;

        goto label22;

     label24:
        $i19 = i51 + 1;

        $i18 = i45 - i51;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, $i19, r1, $i1, $i18);

        $i20 = i51 + 1;

        $i21 = $i20 - $i1;

        i45 = i45 - $i21;

        i51 = $i1 + 1;

     label25:
        i51 = i51 + 1;

        goto label18;

     label26:
        if i45 > 0 goto label27;

        return "";

     label27:
        if i45 > $i1 goto label28;

        $r5 = new java.lang.String;

        specialinvoke $r5.<java.lang.String: void <init>(char[],int,int)>(r1, 0, i45);

        return $r5;

     label28:
        if z1 == 0 goto label29;

        if z0 == 0 goto label29;

        $r6 = new java.lang.String;

        specialinvoke $r6.<java.lang.String: void <init>(char[],int,int)>(r1, 0, i45);

        return $r6;

     label29:
        $r7 = new java.lang.String;

        $i9 = i45 - 1;

        specialinvoke $r7.<java.lang.String: void <init>(char[],int,int)>(r1, 0, $i9);

        return $r7;
    }

    public static java.lang.String concat(java.lang.String, java.lang.String)
    {
        int $i0, $i1, $i2;
        java.lang.String r0, r1, $r6, $r7, $r11, $r12, $r13, $r14;
        boolean $z0;
        char $c3;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r8, $r9, $r10;

        r1 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        $i0 = staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(r0);

        if $i0 >= 0 goto label1;

        return null;

     label1:
        if $i0 <= 0 goto label2;

        $r14 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(r0);

        return $r14;

     label2:
        if r1 != null goto label3;

        return null;

     label3:
        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i1 != 0 goto label4;

        $r13 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(r0);

        return $r13;

     label4:
        $i2 = $i1 - 1;

        $c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i2);

        $z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isSeparator(char)>($c3);

        if $z0 == 0 goto label5;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>($r11);

        return $r12;

     label5:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>($r6);

        return $r7;
    }

    public static java.lang.String separatorsToUnix(java.lang.String)
    {
        int $i0, $i2;
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(92);

        $i2 = (int) -1;

        if $i0 != $i2 goto label2;

     label1:
        return r0;

     label2:
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String replace(char,char)>(92, 47);

        return $r1;
    }

    public static java.lang.String separatorsToWindows(java.lang.String)
    {
        int $i0, $i2;
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(47);

        $i2 = (int) -1;

        if $i0 != $i2 goto label2;

     label1:
        return r0;

     label2:
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String replace(char,char)>(47, 92);

        return $r1;
    }

    public static java.lang.String separatorsToSystem(java.lang.String)
    {
        java.lang.String r0, $r1, $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isSystemWindows()>();

        if $z0 == 0 goto label2;

        $r2 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String separatorsToWindows(java.lang.String)>(r0);

        return $r2;

     label2:
        $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String separatorsToUnix(java.lang.String)>(r0);

        return $r1;
    }

    public static int getPrefixLength(java.lang.String)
    {
        byte $b14, $b21;
        boolean $z0, $z1, $z2, $z3, $z4;
        int $i0, $i3, $i4, $i5, $i6, $i9, $i10, $i11, $i12, $i13, $i15, i16, $i17, $i18, i19, $i20, $i23, $i24, $i26, $i27, $i28, $i30, $i32, $i34, $i36, $i37, $i38, $i39, $i41, $i43, $i45, $i47, $i49, $i51;
        java.lang.String r0;
        char $c1, $c2, $c7, $c8;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label01;

        $i23 = (int) -1;

        return $i23;

     label01:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label02;

        return 0;

     label02:
        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i24 = (int) $c1;

        if $i24 != 58 goto label03;

        $i26 = (int) -1;

        return $i26;

     label03:
        if $i0 != 1 goto label07;

        $i27 = (int) $c1;

        if $i27 != 126 goto label04;

        return 2;

     label04:
        $z4 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isSeparator(char)>($c1);

        if $z4 == 0 goto label05;

        $b14 = 1;

        goto label06;

     label05:
        $b14 = 0;

     label06:
        return $b14;

     label07:
        $i28 = (int) $c1;

        if $i28 != 126 goto label13;

        $i9 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(47, 1);

        $i10 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(92, 1);

        $i30 = (int) -1;

        if $i9 != $i30 goto label08;

        $i32 = (int) -1;

        if $i10 != $i32 goto label08;

        $i13 = $i0 + 1;

        return $i13;

     label08:
        $i34 = (int) -1;

        if $i9 != $i34 goto label09;

        $i15 = $i10;

        goto label10;

     label09:
        $i15 = $i9;

     label10:
        i16 = $i15;

        $i36 = (int) -1;

        if $i10 != $i36 goto label11;

        $i17 = $i15;

        goto label12;

     label11:
        $i17 = $i10;

     label12:
        $i11 = staticinvoke <java.lang.Math: int min(int,int)>(i16, $i17);

        $i12 = $i11 + 1;

        return $i12;

     label13:
        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        $i37 = (int) $c2;

        if $i37 != 58 goto label17;

        $c7 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c1);

        $i38 = (int) $c7;

        if $i38 < 65 goto label16;

        $i39 = (int) $c7;

        if $i39 > 90 goto label16;

        if $i0 == 2 goto label14;

        $c8 = virtualinvoke r0.<java.lang.String: char charAt(int)>(2);

        $z3 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isSeparator(char)>($c8);

        if $z3 != 0 goto label15;

     label14:
        return 2;

     label15:
        return 3;

     label16:
        $i41 = (int) -1;

        return $i41;

     label17:
        $z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isSeparator(char)>($c1);

        if $z0 == 0 goto label25;

        $z2 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isSeparator(char)>($c2);

        if $z2 == 0 goto label25;

        $i3 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(47, 2);

        $i4 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(92, 2);

        $i43 = (int) -1;

        if $i3 != $i43 goto label18;

        $i45 = (int) -1;

        if $i4 == $i45 goto label19;

     label18:
        if $i3 == 2 goto label19;

        if $i4 != 2 goto label20;

     label19:
        $i47 = (int) -1;

        return $i47;

     label20:
        $i49 = (int) -1;

        if $i3 != $i49 goto label21;

        $i18 = $i4;

        goto label22;

     label21:
        $i18 = $i3;

     label22:
        i19 = $i18;

        $i51 = (int) -1;

        if $i4 != $i51 goto label23;

        $i20 = $i18;

        goto label24;

     label23:
        $i20 = $i4;

     label24:
        $i5 = staticinvoke <java.lang.Math: int min(int,int)>(i19, $i20);

        $i6 = $i5 + 1;

        return $i6;

     label25:
        $z1 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isSeparator(char)>($c1);

        if $z1 == 0 goto label26;

        $b21 = 1;

        goto label27;

     label26:
        $b21 = 0;

     label27:
        return $b21;
    }

    public static int indexOfLastSeparator(java.lang.String)
    {
        int $i0, $i1, $i2, $i4;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $i4 = (int) -1;

        return $i4;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(47);

        $i1 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(92);

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i1);

        return $i2;
    }

    public static int indexOfExtension(java.lang.String)
    {
        int $i0, $i1, $i2, $i4, $i6;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $i4 = (int) -1;

        return $i4;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(46);

        $i1 = staticinvoke <org.apache.commons.io.FilenameUtils: int indexOfLastSeparator(java.lang.String)>(r0);

        if $i1 <= $i0 goto label2;

        $i6 = (int) -1;

        $i2 = $i6;

        goto label3;

     label2:
        $i2 = $i0;

     label3:
        return $i2;
    }

    public static java.lang.String getPrefix(java.lang.String)
    {
        int $i0, $i1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String r0, $r1, $r5;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $i0 = staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(r0);

        if $i0 >= 0 goto label2;

        return null;

     label2:
        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 <= $i1 goto label3;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;

     label3:
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        return $r1;
    }

    public static java.lang.String getPath(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doGetPath(java.lang.String,int)>(r0, 1);

        return $r1;
    }

    public static java.lang.String getPathNoEndSeparator(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doGetPath(java.lang.String,int)>(r0, 0);

        return $r1;
    }

    private static java.lang.String doGetPath(java.lang.String, int)
    {
        int $i0, $i1, i2, i3, $i4;
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        i2 := @parameter1: int;

        if r0 != null goto label1;

        return null;

     label1:
        $i0 = staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(r0);

        if $i0 >= 0 goto label2;

        return null;

     label2:
        $i1 = staticinvoke <org.apache.commons.io.FilenameUtils: int indexOfLastSeparator(java.lang.String)>(r0);

        i3 = $i1 + i2;

        $i4 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 >= $i4 goto label3;

        if $i1 < 0 goto label3;

        if $i0 < i3 goto label4;

     label3:
        return "";

     label4:
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i0, i3);

        return $r1;
    }

    public static java.lang.String getFullPath(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doGetFullPath(java.lang.String,boolean)>(r0, 1);

        return $r1;
    }

    public static java.lang.String getFullPathNoEndSeparator(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doGetFullPath(java.lang.String,boolean)>(r0, 0);

        return $r1;
    }

    private static java.lang.String doGetFullPath(java.lang.String, boolean)
    {
        int $i0, $i1, $i2, $i3, i4;
        java.lang.String r0, $r1, $r2, $r3;
        boolean z0, $z1;

        r0 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        if r0 != null goto label1;

        return null;

     label1:
        $i0 = staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(r0);

        if $i0 >= 0 goto label2;

        return null;

     label2:
        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 < $i1 goto label4;

        if z0 == 0 goto label3;

        $r3 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPrefix(java.lang.String)>(r0);

        return $r3;

     label3:
        return r0;

     label4:
        $i2 = staticinvoke <org.apache.commons.io.FilenameUtils: int indexOfLastSeparator(java.lang.String)>(r0);

        if $i2 >= 0 goto label5;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        return $r2;

     label5:
        if z0 == 0 goto label6;

        $z1 = 1;

        goto label7;

     label6:
        $z1 = 0;

     label7:
        $i3 = $i2 + $z1;

        i4 = $i3;

        if $i3 != 0 goto label8;

        i4 = $i3 + 1;

     label8:
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i4);

        return $r1;
    }

    public static java.lang.String getName(java.lang.String)
    {
        int $i0, $i1;
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $i0 = staticinvoke <org.apache.commons.io.FilenameUtils: int indexOfLastSeparator(java.lang.String)>(r0);

        $i1 = $i0 + 1;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i1);

        return $r1;
    }

    public static java.lang.String getBaseName(java.lang.String)
    {
        java.lang.String r0, $r1, $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getName(java.lang.String)>(r0);

        $r2 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String removeExtension(java.lang.String)>($r1);

        return $r2;
    }

    public static java.lang.String getExtension(java.lang.String)
    {
        int $i0, $i1, $i3;
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $i0 = staticinvoke <org.apache.commons.io.FilenameUtils: int indexOfExtension(java.lang.String)>(r0);

        $i3 = (int) -1;

        if $i0 != $i3 goto label2;

        return "";

     label2:
        $i1 = $i0 + 1;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i1);

        return $r1;
    }

    public static java.lang.String removeExtension(java.lang.String)
    {
        int $i0, $i2;
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $i0 = staticinvoke <org.apache.commons.io.FilenameUtils: int indexOfExtension(java.lang.String)>(r0);

        $i2 = (int) -1;

        if $i0 != $i2 goto label2;

        return r0;

     label2:
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        return $r1;
    }

    public static boolean equals(java.lang.String, java.lang.String)
    {
        org.apache.commons.io.IOCase $r2;
        java.lang.String r0, r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase SENSITIVE>;

        $z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 0, $r2);

        return $z0;
    }

    public static boolean equalsOnSystem(java.lang.String, java.lang.String)
    {
        org.apache.commons.io.IOCase $r2;
        java.lang.String r0, r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase SYSTEM>;

        $z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 0, $r2);

        return $z0;
    }

    public static boolean equalsNormalized(java.lang.String, java.lang.String)
    {
        org.apache.commons.io.IOCase $r2;
        java.lang.String r0, r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase SENSITIVE>;

        $z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 1, $r2);

        return $z0;
    }

    public static boolean equalsNormalizedOnSystem(java.lang.String, java.lang.String)
    {
        org.apache.commons.io.IOCase $r2;
        java.lang.String r0, r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase SYSTEM>;

        $z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 1, $r2);

        return $z0;
    }

    public static boolean equals(java.lang.String, java.lang.String, boolean, org.apache.commons.io.IOCase)
    {
        org.apache.commons.io.IOCase r5;
        java.lang.NullPointerException $r2;
        java.lang.String $r0, $r1, r3, r4;
        boolean z0, $z1, $z2;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        r5 := @parameter3: org.apache.commons.io.IOCase;

        if r3 == null goto label1;

        if r4 != null goto label4;

     label1:
        if r3 != null goto label2;

        if r4 != null goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;

     label4:
        if z0 == 0 goto label6;

        $r0 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(r3);

        r3 = $r0;

        $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(r4);

        r4 = $r1;

        if $r0 == null goto label5;

        if $r1 != null goto label6;

     label5:
        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("Error normalizing one or both of the file names");

        throw $r2;

     label6:
        if r5 != null goto label7;

        r5 = <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase SENSITIVE>;

     label7:
        $z1 = virtualinvoke r5.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>(r3, r4);

        return $z1;
    }

    public static boolean isExtension(java.lang.String, java.lang.String)
    {
        int $i0, $i1, $i3;
        java.lang.String r0, r1, $r2;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        return 0;

     label1:
        if r1 == null goto label2;

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i1 != 0 goto label5;

     label2:
        $i0 = staticinvoke <org.apache.commons.io.FilenameUtils: int indexOfExtension(java.lang.String)>(r0);

        $i3 = (int) -1;

        if $i0 != $i3 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;

     label5:
        $r2 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getExtension(java.lang.String)>(r0);

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    public static boolean isExtension(java.lang.String, java.lang.String[])
    {
        java.lang.String[] r1;
        int $i0, $i1, i2, i3, $i5;
        java.lang.String r0, $r2, r3;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String[];

        if r0 != null goto label1;

        return 0;

     label1:
        if r1 == null goto label2;

        $i1 = lengthof r1;

        if $i1 != 0 goto label5;

     label2:
        $i0 = staticinvoke <org.apache.commons.io.FilenameUtils: int indexOfExtension(java.lang.String)>(r0);

        $i5 = (int) -1;

        if $i0 != $i5 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;

     label5:
        $r2 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getExtension(java.lang.String)>(r0);

        i2 = lengthof r1;

        i3 = 0;

     label6:
        if i3 >= i2 goto label8;

        r3 = r1[i3];

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z0 == 0 goto label7;

        return 1;

     label7:
        i3 = i3 + 1;

        goto label6;

     label8:
        return 0;
    }

    public static boolean isExtension(java.lang.String, java.util.Collection)
    {
        java.util.Iterator $r3;
        java.util.Collection r1;
        int $i0, $i2;
        java.lang.Object $r4;
        java.lang.String r0, $r2, r5;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.Collection;

        if r0 != null goto label1;

        return 0;

     label1:
        if r1 == null goto label2;

        $z0 = interfaceinvoke r1.<java.util.Collection: boolean isEmpty()>();

        if $z0 == 0 goto label5;

     label2:
        $i0 = staticinvoke <org.apache.commons.io.FilenameUtils: int indexOfExtension(java.lang.String)>(r0);

        $i2 = (int) -1;

        if $i0 != $i2 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        return $z3;

     label5:
        $r2 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getExtension(java.lang.String)>(r0);

        $r3 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label6:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label8;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r4;

        $z2 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z2 == 0 goto label7;

        return 1;

     label7:
        goto label6;

     label8:
        return 0;
    }

    public static boolean wildcardMatch(java.lang.String, java.lang.String)
    {
        org.apache.commons.io.IOCase $r2;
        java.lang.String r0, r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase SENSITIVE>;

        $z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean wildcardMatch(java.lang.String,java.lang.String,org.apache.commons.io.IOCase)>(r0, r1, $r2);

        return $z0;
    }

    public static boolean wildcardMatchOnSystem(java.lang.String, java.lang.String)
    {
        org.apache.commons.io.IOCase $r2;
        java.lang.String r0, r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase SYSTEM>;

        $z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean wildcardMatch(java.lang.String,java.lang.String,org.apache.commons.io.IOCase)>(r0, r1, $r2);

        return $z0;
    }

    public static boolean wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
    {
        int[] $r10, r13;
        boolean $z0, $z1, $z2, z3;
        org.apache.commons.io.IOCase r12;
        java.lang.String[] $r2;
        java.util.Stack $r14;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, $i11, $i12, $i13, $i15;
        java.lang.String r0, r1, $r4, $r5, $r6, $r7, $r8, $r9;
        java.lang.Object $r11;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r12 := @parameter2: org.apache.commons.io.IOCase;

        if r0 != null goto label01;

        if r1 != null goto label01;

        return 1;

     label01:
        if r0 == null goto label02;

        if r1 != null goto label03;

     label02:
        return 0;

     label03:
        if r12 != null goto label04;

        r12 = <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase SENSITIVE>;

     label04:
        $r2 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String[] splitOnTokens(java.lang.String)>(r1);

        z3 = 0;

        i9 = 0;

        i10 = 0;

        $r14 = new java.util.Stack;

        specialinvoke $r14.<java.util.Stack: void <init>()>();

     label05:
        $i11 = virtualinvoke $r14.<java.util.Stack: int size()>();

        if $i11 <= 0 goto label06;

        $r11 = virtualinvoke $r14.<java.util.Stack: java.lang.Object pop()>();

        r13 = (int[]) $r11;

        i10 = r13[0];

        i9 = r13[1];

        z3 = 1;

     label06:
        $i12 = lengthof $r2;

        if i10 >= $i12 goto label15;

        $r4 = $r2[i10];

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("?");

        if $z0 == 0 goto label08;

        i9 = i9 + 1;

        $i8 = virtualinvoke r0.<java.lang.String: int length()>();

        if i9 <= $i8 goto label07;

        goto label15;

     label07:
        z3 = 0;

        goto label14;

     label08:
        $r5 = $r2[i10];

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("*");

        if $z1 == 0 goto label09;

        z3 = 1;

        $i6 = lengthof $r2;

        $i7 = $i6 - 1;

        if i10 != $i7 goto label14;

        i9 = virtualinvoke r0.<java.lang.String: int length()>();

        goto label14;

     label09:
        if z3 == 0 goto label12;

        $r8 = $r2[i10];

        $i3 = virtualinvoke r12.<org.apache.commons.io.IOCase: int checkIndexOf(java.lang.String,int,java.lang.String)>(r0, i9, $r8);

        i9 = $i3;

        $i15 = (int) -1;

        if $i3 != $i15 goto label10;

        goto label15;

     label10:
        $i4 = $i3 + 1;

        $r9 = $r2[i10];

        $i5 = virtualinvoke r12.<org.apache.commons.io.IOCase: int checkIndexOf(java.lang.String,int,java.lang.String)>(r0, $i4, $r9);

        if $i5 < 0 goto label11;

        $r10 = newarray (int)[2];

        $r10[0] = i10;

        $r10[1] = $i5;

        virtualinvoke $r14.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r10);

     label11:
        goto label13;

     label12:
        $r6 = $r2[i10];

        $z2 = virtualinvoke r12.<org.apache.commons.io.IOCase: boolean checkRegionMatches(java.lang.String,int,java.lang.String)>(r0, i9, $r6);

        if $z2 != 0 goto label13;

        goto label15;

     label13:
        $r7 = $r2[i10];

        $i2 = virtualinvoke $r7.<java.lang.String: int length()>();

        i9 = i9 + $i2;

        z3 = 0;

     label14:
        i10 = i10 + 1;

        goto label06;

     label15:
        $i13 = lengthof $r2;

        if i10 != $i13 goto label16;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if i9 != $i1 goto label16;

        return 1;

     label16:
        $i0 = virtualinvoke $r14.<java.util.Stack: int size()>();

        if $i0 > 0 goto label05;

        return 0;
    }

    static java.lang.String[] splitOnTokens(java.lang.String)
    {
        boolean $z0;
        java.lang.StringBuilder $r13;
        java.lang.Object[] $r5;
        java.lang.String[] $r4, $r6, $r11;
        java.util.ArrayList $r12;
        int $i0, $i1, $i2, $i4, $i6, $i7, $i8, $i11, i12, $i13, $i15, $i17, $i18, $i19, $i20;
        java.lang.String r0, $r7, $r9, $r10;
        char $c3, $c5, $c9, $c10;
        char[] $r1;
        java.lang.Object $r8;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(63);

        $i15 = (int) -1;

        if $i0 != $i15 goto label01;

        $i11 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(42);

        $i17 = (int) -1;

        if $i11 != $i17 goto label01;

        $r11 = newarray (java.lang.String)[1];

        $r11[0] = r0;

        return $r11;

     label01:
        $r1 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        i12 = 0;

     label02:
        $i13 = lengthof $r1;

        if i12 >= $i13 goto label09;

        $c3 = $r1[i12];

        $i18 = (int) $c3;

        if $i18 == 63 goto label03;

        $c9 = $r1[i12];

        $i19 = (int) $c9;

        if $i19 != 42 goto label07;

     label03:
        $i4 = virtualinvoke $r13.<java.lang.StringBuilder: int length()>();

        if $i4 == 0 goto label04;

        $r10 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

        virtualinvoke $r13.<java.lang.StringBuilder: void setLength(int)>(0);

     label04:
        $c5 = $r1[i12];

        $i20 = (int) $c5;

        if $i20 != 63 goto label05;

        virtualinvoke $r12.<java.util.ArrayList: boolean add(java.lang.Object)>("?");

        goto label08;

     label05:
        $i6 = virtualinvoke $r12.<java.util.ArrayList: int size()>();

        if $i6 == 0 goto label06;

        if i12 <= 0 goto label08;

        $i7 = virtualinvoke $r12.<java.util.ArrayList: int size()>();

        $i8 = $i7 - 1;

        $r8 = virtualinvoke $r12.<java.util.ArrayList: java.lang.Object get(int)>($i8);

        $r9 = (java.lang.String) $r8;

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("*");

        if $z0 != 0 goto label08;

     label06:
        virtualinvoke $r12.<java.util.ArrayList: boolean add(java.lang.Object)>("*");

        goto label08;

     label07:
        $c10 = $r1[i12];

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c10);

     label08:
        i12 = i12 + 1;

        goto label02;

     label09:
        $i1 = virtualinvoke $r13.<java.lang.StringBuilder: int length()>();

        if $i1 == 0 goto label10;

        $r7 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

     label10:
        $i2 = virtualinvoke $r12.<java.util.ArrayList: int size()>();

        $r4 = newarray (java.lang.String)[$i2];

        $r5 = virtualinvoke $r12.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r6 = (java.lang.String[]) $r5;

        return $r6;
    }

    static void <clinit>()
    {
        char $c0;
        java.lang.String $r0;
        boolean $z0;

        <org.apache.commons.io.FilenameUtils: char WINDOWS_SEPARATOR> = 92;

        <org.apache.commons.io.FilenameUtils: char UNIX_SEPARATOR> = 47;

        <org.apache.commons.io.FilenameUtils: char EXTENSION_SEPARATOR> = 46;

        $r0 = staticinvoke <java.lang.Character: java.lang.String toString(char)>(46);

        <org.apache.commons.io.FilenameUtils: java.lang.String EXTENSION_SEPARATOR_STR> = $r0;

        $c0 = <java.io.File: char separatorChar>;

        <org.apache.commons.io.FilenameUtils: char SYSTEM_SEPARATOR> = $c0;

        $z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isSystemWindows()>();

        if $z0 == 0 goto label1;

        <org.apache.commons.io.FilenameUtils: char OTHER_SEPARATOR> = 47;

        goto label2;

     label1:
        <org.apache.commons.io.FilenameUtils: char OTHER_SEPARATOR> = 92;

     label2:
        return;
    }
}
