class org.waveprotocol.wave.client.editor.EditorImpl$9 extends java.lang.Object implements org.waveprotocol.wave.model.util.ReadableIdentitySet$Proc
{
    final org.waveprotocol.wave.client.editor.EditorImpl this$0;

    void <init>(org.waveprotocol.wave.client.editor.EditorImpl)
    {
        org.waveprotocol.wave.client.editor.EditorImpl$9 r0;
        org.waveprotocol.wave.client.editor.EditorImpl r1;

        r0 := @this: org.waveprotocol.wave.client.editor.EditorImpl$9;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.EditorImpl;

        r0.<org.waveprotocol.wave.client.editor.EditorImpl$9: org.waveprotocol.wave.client.editor.EditorImpl this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void apply(org.waveprotocol.wave.client.common.util.DomHelper$HandlerReference)
    {
        org.waveprotocol.wave.client.editor.EditorImpl$9 r1;
        org.waveprotocol.wave.client.common.util.DomHelper$HandlerReference r0;

        r1 := @this: org.waveprotocol.wave.client.editor.EditorImpl$9;

        r0 := @parameter0: org.waveprotocol.wave.client.common.util.DomHelper$HandlerReference;

        virtualinvoke r0.<org.waveprotocol.wave.client.common.util.DomHelper$HandlerReference: boolean unregister()>();

        return;
    }

    public volatile void apply(java.lang.Object)
    {
        java.lang.Object r1;
        org.waveprotocol.wave.client.editor.EditorImpl$9 r0;
        org.waveprotocol.wave.client.common.util.DomHelper$HandlerReference $r2;

        r0 := @this: org.waveprotocol.wave.client.editor.EditorImpl$9;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.client.common.util.DomHelper$HandlerReference) r1;

        virtualinvoke r0.<org.waveprotocol.wave.client.editor.EditorImpl$9: void apply(org.waveprotocol.wave.client.common.util.DomHelper$HandlerReference)>($r2);

        return;
    }
}
