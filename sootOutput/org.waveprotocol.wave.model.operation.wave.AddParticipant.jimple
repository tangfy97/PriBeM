public final class org.waveprotocol.wave.model.operation.wave.AddParticipant extends org.waveprotocol.wave.model.operation.wave.WaveletOperation
{
    private static final int END_POSITION;
    private final org.waveprotocol.wave.model.wave.ParticipantId participant;
    private final int position;

    public void <init>(org.waveprotocol.wave.model.operation.wave.WaveletOperationContext, org.waveprotocol.wave.model.wave.ParticipantId)
    {
        int $i1;
        org.waveprotocol.wave.model.operation.wave.WaveletOperationContext r1;
        org.waveprotocol.wave.model.wave.ParticipantId r2;
        org.waveprotocol.wave.model.operation.wave.AddParticipant r0;

        r0 := @this: org.waveprotocol.wave.model.operation.wave.AddParticipant;

        r1 := @parameter0: org.waveprotocol.wave.model.operation.wave.WaveletOperationContext;

        r2 := @parameter1: org.waveprotocol.wave.model.wave.ParticipantId;

        specialinvoke r0.<org.waveprotocol.wave.model.operation.wave.WaveletOperation: void <init>(org.waveprotocol.wave.model.operation.wave.WaveletOperationContext)>(r1);

        staticinvoke <org.waveprotocol.wave.model.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r2, "Null participant ID");

        r0.<org.waveprotocol.wave.model.operation.wave.AddParticipant: org.waveprotocol.wave.model.wave.ParticipantId participant> = r2;

        $i1 = (int) -1;

        r0.<org.waveprotocol.wave.model.operation.wave.AddParticipant: int position> = $i1;

        return;
    }

    void <init>(org.waveprotocol.wave.model.operation.wave.WaveletOperationContext, org.waveprotocol.wave.model.wave.ParticipantId, int)
    {
        int i0;
        org.waveprotocol.wave.model.operation.wave.WaveletOperationContext r1;
        org.waveprotocol.wave.model.wave.ParticipantId r2;
        org.waveprotocol.wave.model.operation.wave.AddParticipant r0;

        r0 := @this: org.waveprotocol.wave.model.operation.wave.AddParticipant;

        r1 := @parameter0: org.waveprotocol.wave.model.operation.wave.WaveletOperationContext;

        r2 := @parameter1: org.waveprotocol.wave.model.wave.ParticipantId;

        i0 := @parameter2: int;

        specialinvoke r0.<org.waveprotocol.wave.model.operation.wave.WaveletOperation: void <init>(org.waveprotocol.wave.model.operation.wave.WaveletOperationContext)>(r1);

        staticinvoke <org.waveprotocol.wave.model.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r2, "Null participant ID");

        staticinvoke <org.waveprotocol.wave.model.util.Preconditions: void checkPositionIndex(int,int)>(i0, 2147483647);

        r0.<org.waveprotocol.wave.model.operation.wave.AddParticipant: org.waveprotocol.wave.model.wave.ParticipantId participant> = r2;

        r0.<org.waveprotocol.wave.model.operation.wave.AddParticipant: int position> = i0;

        return;
    }

    public org.waveprotocol.wave.model.wave.ParticipantId getParticipantId()
    {
        org.waveprotocol.wave.model.wave.ParticipantId $r1;
        org.waveprotocol.wave.model.operation.wave.AddParticipant r0;

        r0 := @this: org.waveprotocol.wave.model.operation.wave.AddParticipant;

        $r1 = r0.<org.waveprotocol.wave.model.operation.wave.AddParticipant: org.waveprotocol.wave.model.wave.ParticipantId participant>;

        return $r1;
    }

    public void doApply(org.waveprotocol.wave.model.wave.data.WaveletData) throws org.waveprotocol.wave.model.operation.OperationException
    {
        org.waveprotocol.wave.model.wave.ParticipantId $r2, $r6, $r9;
        org.waveprotocol.wave.model.operation.OperationException $r11;
        int $i0, $i1, $i3;
        java.lang.StringBuilder $r5, $r7, $r10;
        java.lang.String $r8;
        org.waveprotocol.wave.model.wave.data.WaveletData r1;
        org.waveprotocol.wave.model.operation.wave.AddParticipant r0;
        boolean $z0, $z1;

        r0 := @this: org.waveprotocol.wave.model.operation.wave.AddParticipant;

        r1 := @parameter0: org.waveprotocol.wave.model.wave.data.WaveletData;

        $i0 = r0.<org.waveprotocol.wave.model.operation.wave.AddParticipant: int position>;

        $i3 = (int) -1;

        if $i0 != $i3 goto label1;

        $r9 = r0.<org.waveprotocol.wave.model.operation.wave.AddParticipant: org.waveprotocol.wave.model.wave.ParticipantId participant>;

        $z1 = interfaceinvoke r1.<org.waveprotocol.wave.model.wave.data.WaveletData: boolean addParticipant(org.waveprotocol.wave.model.wave.ParticipantId)>($r9);

        if $z1 == 0 goto label2;

        goto label3;

     label1:
        $r2 = r0.<org.waveprotocol.wave.model.operation.wave.AddParticipant: org.waveprotocol.wave.model.wave.ParticipantId participant>;

        $i1 = r0.<org.waveprotocol.wave.model.operation.wave.AddParticipant: int position>;

        $z0 = interfaceinvoke r1.<org.waveprotocol.wave.model.wave.data.WaveletData: boolean addParticipant(org.waveprotocol.wave.model.wave.ParticipantId,int)>($r2, $i1);

        if $z0 != 0 goto label3;

     label2:
        $r11 = new org.waveprotocol.wave.model.operation.OperationException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempt to add a duplicate participant ");

        $r6 = r0.<org.waveprotocol.wave.model.operation.wave.AddParticipant: org.waveprotocol.wave.model.wave.ParticipantId participant>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<org.waveprotocol.wave.model.operation.OperationException: void <init>(java.lang.String)>($r8);

        throw $r11;

     label3:
        return;
    }

    public void acceptVisitor(org.waveprotocol.wave.model.operation.wave.WaveletOperationVisitor)
    {
        org.waveprotocol.wave.model.operation.wave.WaveletOperationVisitor r0;
        org.waveprotocol.wave.model.operation.wave.AddParticipant r1;

        r1 := @this: org.waveprotocol.wave.model.operation.wave.AddParticipant;

        r0 := @parameter0: org.waveprotocol.wave.model.operation.wave.WaveletOperationVisitor;

        interfaceinvoke r0.<org.waveprotocol.wave.model.operation.wave.WaveletOperationVisitor: void visitAddParticipant(org.waveprotocol.wave.model.operation.wave.AddParticipant)>(r1);

        return;
    }

    public java.lang.String toString()
    {
        org.waveprotocol.wave.model.wave.ParticipantId $r3;
        int $i0, $i1, $i3;
        java.lang.String $r7, $r9, $r13;
        java.lang.StringBuilder $r1, $r4, $r5, $r6, $r8, $r11, $r12, $r14, $r15;
        org.waveprotocol.wave.model.operation.wave.AddParticipant r2;

        r2 := @this: org.waveprotocol.wave.model.operation.wave.AddParticipant;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("add participant ");

        $r3 = r2.<org.waveprotocol.wave.model.operation.wave.AddParticipant: org.waveprotocol.wave.model.wave.ParticipantId participant>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $i0 = r2.<org.waveprotocol.wave.model.operation.wave.AddParticipant: int position>;

        $i3 = (int) -1;

        if $i0 == $i3 goto label1;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at position ");

        $i1 = r2.<org.waveprotocol.wave.model.operation.wave.AddParticipant: int position>;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

     label1:
        $r13 = "";

     label2:
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r7 = virtualinvoke r2.<org.waveprotocol.wave.model.operation.wave.AddParticipant: java.lang.String suffixForToString()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public java.util.List applyAndReturnReverse(org.waveprotocol.wave.model.wave.data.WaveletData) throws org.waveprotocol.wave.model.operation.OperationException
    {
        org.waveprotocol.wave.model.operation.wave.RemoveParticipant $r3;
        java.util.List $r5;
        org.waveprotocol.wave.model.operation.wave.WaveletOperationContext $r2;
        org.waveprotocol.wave.model.wave.ParticipantId $r4;
        org.waveprotocol.wave.model.wave.data.WaveletData r1;
        org.waveprotocol.wave.model.operation.wave.AddParticipant r0;

        r0 := @this: org.waveprotocol.wave.model.operation.wave.AddParticipant;

        r1 := @parameter0: org.waveprotocol.wave.model.wave.data.WaveletData;

        $r2 = virtualinvoke r0.<org.waveprotocol.wave.model.operation.wave.AddParticipant: org.waveprotocol.wave.model.operation.wave.WaveletOperationContext createReverseContext(org.waveprotocol.wave.model.wave.data.WaveletData)>(r1);

        virtualinvoke r0.<org.waveprotocol.wave.model.operation.wave.AddParticipant: void doApply(org.waveprotocol.wave.model.wave.data.WaveletData)>(r1);

        virtualinvoke r0.<org.waveprotocol.wave.model.operation.wave.AddParticipant: void update(org.waveprotocol.wave.model.wave.data.WaveletData)>(r1);

        $r3 = new org.waveprotocol.wave.model.operation.wave.RemoveParticipant;

        $r4 = r0.<org.waveprotocol.wave.model.operation.wave.AddParticipant: org.waveprotocol.wave.model.wave.ParticipantId participant>;

        specialinvoke $r3.<org.waveprotocol.wave.model.operation.wave.RemoveParticipant: void <init>(org.waveprotocol.wave.model.operation.wave.WaveletOperationContext,org.waveprotocol.wave.model.wave.ParticipantId)>($r2, $r4);

        $r5 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r3);

        return $r5;
    }

    public int hashCode()
    {
        int $i0, $i1, $i2, $i3;
        org.waveprotocol.wave.model.wave.ParticipantId $r1;
        org.waveprotocol.wave.model.operation.wave.AddParticipant r0;

        r0 := @this: org.waveprotocol.wave.model.operation.wave.AddParticipant;

        $r1 = r0.<org.waveprotocol.wave.model.operation.wave.AddParticipant: org.waveprotocol.wave.model.wave.ParticipantId participant>;

        $i0 = virtualinvoke $r1.<org.waveprotocol.wave.model.wave.ParticipantId: int hashCode()>();

        $i1 = r0.<org.waveprotocol.wave.model.operation.wave.AddParticipant: int position>;

        $i2 = 31 * $i1;

        $i3 = $i0 + $i2;

        return $i3;
    }

    public boolean equals(java.lang.Object)
    {
        org.waveprotocol.wave.model.wave.ParticipantId $r3, $r4;
        int $i0, $i1;
        java.lang.Object r0;
        org.waveprotocol.wave.model.operation.wave.AddParticipant r1, r2;
        boolean $z0, $z1, $z2;

        r2 := @this: org.waveprotocol.wave.model.operation.wave.AddParticipant;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.waveprotocol.wave.model.operation.wave.AddParticipant;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r1 = (org.waveprotocol.wave.model.operation.wave.AddParticipant) r0;

        $r4 = r2.<org.waveprotocol.wave.model.operation.wave.AddParticipant: org.waveprotocol.wave.model.wave.ParticipantId participant>;

        $r3 = r1.<org.waveprotocol.wave.model.operation.wave.AddParticipant: org.waveprotocol.wave.model.wave.ParticipantId participant>;

        $z1 = virtualinvoke $r4.<org.waveprotocol.wave.model.wave.ParticipantId: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label2;

        $i1 = r2.<org.waveprotocol.wave.model.operation.wave.AddParticipant: int position>;

        $i0 = r1.<org.waveprotocol.wave.model.operation.wave.AddParticipant: int position>;

        if $i1 != $i0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public volatile java.util.List applyAndReturnReverse(java.lang.Object) throws org.waveprotocol.wave.model.operation.OperationException
    {
        java.util.List $r3;
        java.lang.Object r1;
        org.waveprotocol.wave.model.wave.data.WaveletData $r2;
        org.waveprotocol.wave.model.operation.wave.AddParticipant r0;

        r0 := @this: org.waveprotocol.wave.model.operation.wave.AddParticipant;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.model.wave.data.WaveletData) r1;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.model.operation.wave.AddParticipant: java.util.List applyAndReturnReverse(org.waveprotocol.wave.model.wave.data.WaveletData)>($r2);

        return $r3;
    }

    public volatile void acceptVisitor(org.waveprotocol.wave.model.operation.Visitor)
    {
        org.waveprotocol.wave.model.operation.wave.WaveletOperationVisitor $r2;
        org.waveprotocol.wave.model.operation.Visitor r1;
        org.waveprotocol.wave.model.operation.wave.AddParticipant r0;

        r0 := @this: org.waveprotocol.wave.model.operation.wave.AddParticipant;

        r1 := @parameter0: org.waveprotocol.wave.model.operation.Visitor;

        $r2 = (org.waveprotocol.wave.model.operation.wave.WaveletOperationVisitor) r1;

        virtualinvoke r0.<org.waveprotocol.wave.model.operation.wave.AddParticipant: void acceptVisitor(org.waveprotocol.wave.model.operation.wave.WaveletOperationVisitor)>($r2);

        return;
    }

    public static void <clinit>()
    {
        <org.waveprotocol.wave.model.operation.wave.AddParticipant: int END_POSITION> = -1;

        return;
    }
}
