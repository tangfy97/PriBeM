public class org.jdesktop.swingx.action.OpenBrowserAction extends javax.swing.AbstractAction
{
    private static java.util.logging.Logger log;
    private java.net.URI uri;

    public void <init>()
    {
        org.jdesktop.swingx.action.OpenBrowserAction r0;

        r0 := @this: org.jdesktop.swingx.action.OpenBrowserAction;

        specialinvoke r0.<org.jdesktop.swingx.action.OpenBrowserAction: void <init>(java.net.URI)>(null);

        return;
    }

    public void <init>(java.lang.String)
    {
        java.lang.String r1;
        java.net.URI $r2;
        org.jdesktop.swingx.action.OpenBrowserAction r0;

        r0 := @this: org.jdesktop.swingx.action.OpenBrowserAction;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>(r1);

        specialinvoke r0.<org.jdesktop.swingx.action.OpenBrowserAction: void <init>(java.net.URI)>($r2);

        return;
    }

    public void <init>(java.net.URL) throws java.net.URISyntaxException
    {
        java.net.URI $r2;
        java.net.URL r1;
        org.jdesktop.swingx.action.OpenBrowserAction r0;

        r0 := @this: org.jdesktop.swingx.action.OpenBrowserAction;

        r1 := @parameter0: java.net.URL;

        $r2 = virtualinvoke r1.<java.net.URL: java.net.URI toURI()>();

        specialinvoke r0.<org.jdesktop.swingx.action.OpenBrowserAction: void <init>(java.net.URI)>($r2);

        return;
    }

    public void <init>(java.net.URI)
    {
        java.net.URI r1;
        org.jdesktop.swingx.action.OpenBrowserAction r0;

        r0 := @this: org.jdesktop.swingx.action.OpenBrowserAction;

        r1 := @parameter0: java.net.URI;

        specialinvoke r0.<javax.swing.AbstractAction: void <init>()>();

        virtualinvoke r0.<org.jdesktop.swingx.action.OpenBrowserAction: void setURI(java.net.URI)>(r1);

        return;
    }

    public java.net.URI getURI()
    {
        java.net.URI $r1;
        org.jdesktop.swingx.action.OpenBrowserAction r0;

        r0 := @this: org.jdesktop.swingx.action.OpenBrowserAction;

        $r1 = r0.<org.jdesktop.swingx.action.OpenBrowserAction: java.net.URI uri>;

        return $r1;
    }

    public void setURI(java.net.URI)
    {
        java.net.URI r1;
        org.jdesktop.swingx.action.OpenBrowserAction r0;

        r0 := @this: org.jdesktop.swingx.action.OpenBrowserAction;

        r1 := @parameter0: java.net.URI;

        r0.<org.jdesktop.swingx.action.OpenBrowserAction: java.net.URI uri> = r1;

        return;
    }

    public void actionPerformed(java.awt.event.ActionEvent)
    {
        java.util.logging.Level $r9;
        java.net.URI $r1, $r5, $r11;
        java.lang.String $r13;
        org.jdesktop.swingx.action.OpenBrowserAction r0;
        boolean $z0, $z1;
        java.awt.Desktop $r2, $r4;
        java.awt.Desktop$Action $r3;
        java.io.IOException $r6;
        java.util.logging.Logger $r8;
        java.awt.event.ActionEvent r14;
        java.lang.StringBuilder $r7, $r10, $r12;

        r0 := @this: org.jdesktop.swingx.action.OpenBrowserAction;

        r14 := @parameter0: java.awt.event.ActionEvent;

        $r1 = r0.<org.jdesktop.swingx.action.OpenBrowserAction: java.net.URI uri>;

        if $r1 == null goto label1;

        $z0 = staticinvoke <java.awt.Desktop: boolean isDesktopSupported()>();

        if $z0 != 0 goto label2;

     label1:
        return;

     label2:
        $r2 = staticinvoke <java.awt.Desktop: java.awt.Desktop getDesktop()>();

        $r3 = <java.awt.Desktop$Action: java.awt.Desktop$Action BROWSE>;

        $z1 = virtualinvoke $r2.<java.awt.Desktop: boolean isSupported(java.awt.Desktop$Action)>($r3);

        if $z1 == 0 goto label6;

     label3:
        $r4 = staticinvoke <java.awt.Desktop: java.awt.Desktop getDesktop()>();

        $r5 = r0.<org.jdesktop.swingx.action.OpenBrowserAction: java.net.URI uri>;

        virtualinvoke $r4.<java.awt.Desktop: void browse(java.net.URI)>($r5);

     label4:
        goto label6;

     label5:
        $r6 := @caughtexception;

        $r8 = <org.jdesktop.swingx.action.OpenBrowserAction: java.util.logging.Logger log>;

        $r9 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unable to browse: ");

        $r11 = r0.<org.jdesktop.swingx.action.OpenBrowserAction: java.net.URI uri>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r9, $r13, $r6);

     label6:
        return;

        catch java.io.IOException from label3 to label4 with label5;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;

        $r0 = class "Lorg/jdesktop/swingx/action/OpenBrowserAction;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <org.jdesktop.swingx.action.OpenBrowserAction: java.util.logging.Logger log> = $r2;

        return;
    }
}
