public class net.oauth.server.OAuthServlet extends java.lang.Object
{
    private static final java.lang.Integer SC_FORBIDDEN;
    private static final java.util.Map PROBLEM_TO_HTTP_CODE;

    public void <init>()
    {
        net.oauth.server.OAuthServlet r0;

        r0 := @this: net.oauth.server.OAuthServlet;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static net.oauth.OAuthMessage getMessage(javax.servlet.http.HttpServletRequest, java.lang.String)
    {
        net.oauth.server.HttpRequestMessage $r0;
        javax.servlet.http.HttpServletRequest r1;
        java.lang.StringBuffer $r2;
        int $i0;
        java.lang.String r3;

        r1 := @parameter0: javax.servlet.http.HttpServletRequest;

        r3 := @parameter1: java.lang.String;

        if r3 != null goto label1;

        $r2 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.StringBuffer getRequestURL()>();

        r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

     label1:
        $i0 = virtualinvoke r3.<java.lang.String: int indexOf(int)>(63);

        if $i0 < 0 goto label2;

        r3 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

     label2:
        $r0 = new net.oauth.server.HttpRequestMessage;

        specialinvoke $r0.<net.oauth.server.HttpRequestMessage: void <init>(javax.servlet.http.HttpServletRequest,java.lang.String)>(r1, r3);

        return $r0;
    }

    public static java.lang.String getRequestURL(javax.servlet.http.HttpServletRequest)
    {
        javax.servlet.http.HttpServletRequest r0;
        java.lang.StringBuffer $r1, $r4;
        java.lang.String $r2, $r3;

        r0 := @parameter0: javax.servlet.http.HttpServletRequest;

        $r1 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.StringBuffer getRequestURL()>();

        $r2 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getQueryString()>();

        if $r2 == null goto label1;

        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("?");

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

     label1:
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    public static void handleException(javax.servlet.http.HttpServletResponse, java.lang.Exception, java.lang.String) throws java.io.IOException, javax.servlet.ServletException
    {
        javax.servlet.http.HttpServletResponse r0;
        java.lang.String r2;
        java.lang.Exception r1;

        r0 := @parameter0: javax.servlet.http.HttpServletResponse;

        r1 := @parameter1: java.lang.Exception;

        r2 := @parameter2: java.lang.String;

        staticinvoke <net.oauth.server.OAuthServlet: void handleException(javax.servlet.http.HttpServletResponse,java.lang.Exception,java.lang.String,boolean)>(r0, r1, r2, 1);

        return;
    }

    public static void handleException(javax.servlet.http.HttpServletResponse, java.lang.Exception, java.lang.String, boolean) throws java.io.IOException, javax.servlet.ServletException
    {
        javax.servlet.ServletException $r1, $r3;
        net.oauth.OAuthProblemException r5;
        java.util.Map $r6, $r11, $r16;
        int $i0;
        java.lang.String $r9, r13, $r14, $r17;
        boolean $z0, $z1, $z2, $z3, z4;
        javax.servlet.http.HttpServletResponse r8;
        java.util.Set $r12;
        java.io.IOException $r4;
        java.lang.RuntimeException $r2;
        java.lang.Exception r0;
        java.util.List $r15;
        net.oauth.OAuthMessage $r10;
        java.lang.Object $r7, r18;

        r8 := @parameter0: javax.servlet.http.HttpServletResponse;

        r0 := @parameter1: java.lang.Exception;

        r13 := @parameter2: java.lang.String;

        z4 := @parameter3: boolean;

        $z0 = r0 instanceof net.oauth.OAuthProblemException;

        if $z0 == 0 goto label4;

        r5 = (net.oauth.OAuthProblemException) r0;

        $r6 = virtualinvoke r5.<net.oauth.OAuthProblemException: java.util.Map getParameters()>();

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>("HTTP status");

        r18 = $r7;

        if $r7 != null goto label1;

        $r16 = <net.oauth.server.OAuthServlet: java.util.Map PROBLEM_TO_HTTP_CODE>;

        $r17 = virtualinvoke r5.<net.oauth.OAuthProblemException: java.lang.String getProblem()>();

        r18 = interfaceinvoke $r16.<java.util.Map: java.lang.Object get(java.lang.Object)>($r17);

     label1:
        if r18 != null goto label2;

        r18 = <net.oauth.server.OAuthServlet: java.lang.Integer SC_FORBIDDEN>;

     label2:
        interfaceinvoke r8.<javax.servlet.http.HttpServletResponse: void reset()>();

        $r9 = virtualinvoke r18.<java.lang.Object: java.lang.String toString()>();

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r9);

        interfaceinvoke r8.<javax.servlet.http.HttpServletResponse: void setStatus(int)>($i0);

        $r10 = new net.oauth.OAuthMessage;

        $r11 = virtualinvoke r5.<net.oauth.OAuthProblemException: java.util.Map getParameters()>();

        $r12 = interfaceinvoke $r11.<java.util.Map: java.util.Set entrySet()>();

        specialinvoke $r10.<net.oauth.OAuthMessage: void <init>(java.lang.String,java.lang.String,java.util.Collection)>(null, null, $r12);

        $r14 = virtualinvoke $r10.<net.oauth.OAuthMessage: java.lang.String getAuthorizationHeader(java.lang.String)>(r13);

        interfaceinvoke r8.<javax.servlet.http.HttpServletResponse: void addHeader(java.lang.String,java.lang.String)>("WWW-Authenticate", $r14);

        if z4 == 0 goto label3;

        $r15 = virtualinvoke $r10.<net.oauth.OAuthMessage: java.util.List getParameters()>();

        staticinvoke <net.oauth.server.OAuthServlet: void sendForm(javax.servlet.http.HttpServletResponse,java.lang.Iterable)>(r8, $r15);

     label3:
        goto label8;

     label4:
        $z1 = r0 instanceof java.io.IOException;

        if $z1 == 0 goto label5;

        $r4 = (java.io.IOException) r0;

        throw $r4;

     label5:
        $z2 = r0 instanceof javax.servlet.ServletException;

        if $z2 == 0 goto label6;

        $r3 = (javax.servlet.ServletException) r0;

        throw $r3;

     label6:
        $z3 = r0 instanceof java.lang.RuntimeException;

        if $z3 == 0 goto label7;

        $r2 = (java.lang.RuntimeException) r0;

        throw $r2;

     label7:
        $r1 = new javax.servlet.ServletException;

        specialinvoke $r1.<javax.servlet.ServletException: void <init>(java.lang.Throwable)>(r0);

        throw $r1;

     label8:
        return;
    }

    public static void sendForm(javax.servlet.http.HttpServletResponse, java.lang.Iterable) throws java.io.IOException
    {
        javax.servlet.http.HttpServletResponse r0;
        javax.servlet.ServletOutputStream $r2;
        java.lang.Iterable r1;

        r0 := @parameter0: javax.servlet.http.HttpServletResponse;

        r1 := @parameter1: java.lang.Iterable;

        interfaceinvoke r0.<javax.servlet.http.HttpServletResponse: void resetBuffer()>();

        interfaceinvoke r0.<javax.servlet.http.HttpServletResponse: void setContentType(java.lang.String)>("application/x-www-form-urlencoded;charset=UTF-8");

        $r2 = interfaceinvoke r0.<javax.servlet.http.HttpServletResponse: javax.servlet.ServletOutputStream getOutputStream()>();

        staticinvoke <net.oauth.OAuth: void formEncode(java.lang.Iterable,java.io.OutputStream)>(r1, $r2);

        return;
    }

    public static java.lang.String htmlEncode(java.lang.String)
    {
        char c2;
        int $i0, i1, i3, $i4;
        char[] $r2;
        java.lang.StringBuilder $r4;
        java.lang.String r0, $r3;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $r4 = new java.lang.StringBuilder;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(int)>($i0);

        $r2 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();

        i1 = lengthof $r2;

        i3 = 0;

     label2:
        if i3 >= i1 goto label9;

        c2 = $r2[i3];

        $i4 = (int) c2;

        lookupswitch($i4)
        {
            case 34: goto label6;
            case 38: goto label5;
            case 60: goto label3;
            case 62: goto label4;
            default: goto label7;
        };

     label3:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&lt;");

        goto label8;

     label4:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&gt;");

        goto label8;

     label5:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&amp;");

        goto label8;

     label6:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&quot;");

        goto label8;

     label7:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c2);

     label8:
        i3 = i3 + 1;

        goto label2;

     label9:
        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    static void <clinit>()
    {
        java.lang.Integer $r0;
        java.util.Map $r1;

        $r0 = new java.lang.Integer;

        specialinvoke $r0.<java.lang.Integer: void <init>(int)>(403);

        <net.oauth.server.OAuthServlet: java.lang.Integer SC_FORBIDDEN> = $r0;

        $r1 = <net.oauth.OAuth$Problems: java.util.Map TO_HTTP_CODE>;

        <net.oauth.server.OAuthServlet: java.util.Map PROBLEM_TO_HTTP_CODE> = $r1;

        return;
    }
}
