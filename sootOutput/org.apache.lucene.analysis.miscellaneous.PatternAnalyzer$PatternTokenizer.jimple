final class org.apache.lucene.analysis.miscellaneous.PatternAnalyzer$PatternTokenizer extends org.apache.lucene.analysis.Tokenizer
{
    private final java.util.regex.Pattern pattern;
    private java.lang.String str;
    private final boolean toLowerCase;
    private java.util.regex.Matcher matcher;
    private int pos;
    private static final java.util.Locale locale;
    private final org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt;
    private final org.apache.lucene.analysis.tokenattributes.OffsetAttribute offsetAtt;

    public void <init>(java.io.Reader, java.util.regex.Pattern, boolean)
    {
        org.apache.lucene.analysis.tokenattributes.CharTermAttribute $r3;
        org.apache.lucene.analysis.miscellaneous.PatternAnalyzer$PatternTokenizer r0;
        java.io.Reader r1;
        org.apache.lucene.analysis.tokenattributes.OffsetAttribute $r5;
        java.util.regex.Matcher $r7;
        org.apache.lucene.util.Attribute $r2, $r4;
        java.util.regex.Pattern r6;
        boolean z0;

        r0 := @this: org.apache.lucene.analysis.miscellaneous.PatternAnalyzer$PatternTokenizer;

        r1 := @parameter0: java.io.Reader;

        r6 := @parameter1: java.util.regex.Pattern;

        z0 := @parameter2: boolean;

        specialinvoke r0.<org.apache.lucene.analysis.Tokenizer: void <init>(java.io.Reader)>(r1);

        r0.<org.apache.lucene.analysis.miscellaneous.PatternAnalyzer$PatternTokenizer: int pos> = 0;

        $r2 = virtualinvoke r0.<org.apache.lucene.analysis.miscellaneous.PatternAnalyzer$PatternTokenizer: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/CharTermAttribute;");

        $r3 = (org.apache.lucene.analysis.tokenattributes.CharTermAttribute) $r2;

        r0.<org.apache.lucene.analysis.miscellaneous.PatternAnalyzer$PatternTokenizer: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt> = $r3;

        $r4 = virtualinvoke r0.<org.apache.lucene.analysis.miscellaneous.PatternAnalyzer$PatternTokenizer: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/OffsetAttribute;");

        $r5 = (org.apache.lucene.analysis.tokenattributes.OffsetAttribute) $r4;

        r0.<org.apache.lucene.analysis.miscellaneous.PatternAnalyzer$PatternTokenizer: org.apache.lucene.analysis.tokenattributes.OffsetAttribute offsetAtt> = $r5;

        r0.<org.apache.lucene.analysis.miscellaneous.PatternAnalyzer$PatternTokenizer: java.util.regex.Pattern pattern> = r6;

        $r7 = virtualinvoke r6.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>("");

        r0.<org.apache.lucene.analysis.miscellaneous.PatternAnalyzer$PatternTokenizer: java.util.regex.Matcher matcher> = $r7;

        r0.<org.apache.lucene.analysis.miscellaneous.PatternAnalyzer$PatternTokenizer: boolean toLowerCase> = z0;

        return;
    }

    public final boolean incrementToken()
    {
        org.apache.lucene.analysis.miscellaneous.PatternAnalyzer$PatternTokenizer r0;
        java.util.regex.Matcher $r1, $r2, $r10, $r11;
        java.util.Locale $r9;
        int $i0, $i1, $i2, $i3, i4;
        java.lang.String $r3, $r4, $r5, r12;
        boolean $z0, $z1;
        org.apache.lucene.analysis.tokenattributes.CharTermAttribute $r6, $r7;
        org.apache.lucene.analysis.tokenattributes.OffsetAttribute $r8;

        r0 := @this: org.apache.lucene.analysis.miscellaneous.PatternAnalyzer$PatternTokenizer;

        $r1 = r0.<org.apache.lucene.analysis.miscellaneous.PatternAnalyzer$PatternTokenizer: java.util.regex.Matcher matcher>;

        if $r1 != null goto label1;

        return 0;

     label1:
        virtualinvoke r0.<org.apache.lucene.analysis.miscellaneous.PatternAnalyzer$PatternTokenizer: void clearAttributes()>();

     label2:
        $i0 = r0.<org.apache.lucene.analysis.miscellaneous.PatternAnalyzer$PatternTokenizer: int pos>;

        $r2 = r0.<org.apache.lucene.analysis.miscellaneous.PatternAnalyzer$PatternTokenizer: java.util.regex.Matcher matcher>;

        $z0 = virtualinvoke $r2.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label3;

        $r10 = r0.<org.apache.lucene.analysis.miscellaneous.PatternAnalyzer$PatternTokenizer: java.util.regex.Matcher matcher>;

        i4 = virtualinvoke $r10.<java.util.regex.Matcher: int start()>();

        $r11 = r0.<org.apache.lucene.analysis.miscellaneous.PatternAnalyzer$PatternTokenizer: java.util.regex.Matcher matcher>;

        $i3 = virtualinvoke $r11.<java.util.regex.Matcher: int end()>();

        r0.<org.apache.lucene.analysis.miscellaneous.PatternAnalyzer$PatternTokenizer: int pos> = $i3;

        goto label4;

     label3:
        $r3 = r0.<org.apache.lucene.analysis.miscellaneous.PatternAnalyzer$PatternTokenizer: java.lang.String str>;

        i4 = virtualinvoke $r3.<java.lang.String: int length()>();

        r0.<org.apache.lucene.analysis.miscellaneous.PatternAnalyzer$PatternTokenizer: java.util.regex.Matcher matcher> = null;

     label4:
        if $i0 == i4 goto label6;

        $r4 = r0.<org.apache.lucene.analysis.miscellaneous.PatternAnalyzer$PatternTokenizer: java.lang.String str>;

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int,int)>($i0, i4);

        r12 = $r5;

        $z1 = r0.<org.apache.lucene.analysis.miscellaneous.PatternAnalyzer$PatternTokenizer: boolean toLowerCase>;

        if $z1 == 0 goto label5;

        $r9 = <org.apache.lucene.analysis.miscellaneous.PatternAnalyzer$PatternTokenizer: java.util.Locale locale>;

        r12 = virtualinvoke $r5.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r9);

     label5:
        $r6 = r0.<org.apache.lucene.analysis.miscellaneous.PatternAnalyzer$PatternTokenizer: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt>;

        $r7 = interfaceinvoke $r6.<org.apache.lucene.analysis.tokenattributes.CharTermAttribute: org.apache.lucene.analysis.tokenattributes.CharTermAttribute setEmpty()>();

        interfaceinvoke $r7.<org.apache.lucene.analysis.tokenattributes.CharTermAttribute: org.apache.lucene.analysis.tokenattributes.CharTermAttribute append(java.lang.String)>(r12);

        $r8 = r0.<org.apache.lucene.analysis.miscellaneous.PatternAnalyzer$PatternTokenizer: org.apache.lucene.analysis.tokenattributes.OffsetAttribute offsetAtt>;

        $i1 = virtualinvoke r0.<org.apache.lucene.analysis.miscellaneous.PatternAnalyzer$PatternTokenizer: int correctOffset(int)>($i0);

        $i2 = virtualinvoke r0.<org.apache.lucene.analysis.miscellaneous.PatternAnalyzer$PatternTokenizer: int correctOffset(int)>(i4);

        interfaceinvoke $r8.<org.apache.lucene.analysis.tokenattributes.OffsetAttribute: void setOffset(int,int)>($i1, $i2);

        return 1;

     label6:
        if $z0 != 0 goto label7;

        return 0;

     label7:
        goto label2;
    }

    public final void end()
    {
        int $i0, $i1;
        org.apache.lucene.analysis.miscellaneous.PatternAnalyzer$PatternTokenizer r0;
        java.lang.String $r1;
        org.apache.lucene.analysis.tokenattributes.OffsetAttribute $r2;

        r0 := @this: org.apache.lucene.analysis.miscellaneous.PatternAnalyzer$PatternTokenizer;

        $r1 = r0.<org.apache.lucene.analysis.miscellaneous.PatternAnalyzer$PatternTokenizer: java.lang.String str>;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i1 = virtualinvoke r0.<org.apache.lucene.analysis.miscellaneous.PatternAnalyzer$PatternTokenizer: int correctOffset(int)>($i0);

        $r2 = r0.<org.apache.lucene.analysis.miscellaneous.PatternAnalyzer$PatternTokenizer: org.apache.lucene.analysis.tokenattributes.OffsetAttribute offsetAtt>;

        interfaceinvoke $r2.<org.apache.lucene.analysis.tokenattributes.OffsetAttribute: void setOffset(int,int)>($i1, $i1);

        return;
    }

    public void reset() throws java.io.IOException
    {
        java.util.regex.Matcher $r5;
        org.apache.lucene.analysis.miscellaneous.PatternAnalyzer$PatternTokenizer r0;
        java.io.Reader $r1;
        java.lang.String $r2, $r3;
        java.util.regex.Pattern $r4;

        r0 := @this: org.apache.lucene.analysis.miscellaneous.PatternAnalyzer$PatternTokenizer;

        specialinvoke r0.<org.apache.lucene.analysis.Tokenizer: void reset()>();

        $r1 = r0.<org.apache.lucene.analysis.miscellaneous.PatternAnalyzer$PatternTokenizer: java.io.Reader input>;

        $r2 = staticinvoke <org.apache.lucene.analysis.miscellaneous.PatternAnalyzer: java.lang.String access$000(java.io.Reader)>($r1);

        r0.<org.apache.lucene.analysis.miscellaneous.PatternAnalyzer$PatternTokenizer: java.lang.String str> = $r2;

        $r4 = r0.<org.apache.lucene.analysis.miscellaneous.PatternAnalyzer$PatternTokenizer: java.util.regex.Pattern pattern>;

        $r3 = r0.<org.apache.lucene.analysis.miscellaneous.PatternAnalyzer$PatternTokenizer: java.lang.String str>;

        $r5 = virtualinvoke $r4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r3);

        r0.<org.apache.lucene.analysis.miscellaneous.PatternAnalyzer$PatternTokenizer: java.util.regex.Matcher matcher> = $r5;

        r0.<org.apache.lucene.analysis.miscellaneous.PatternAnalyzer$PatternTokenizer: int pos> = 0;

        return;
    }

    static void <clinit>()
    {
        java.util.Locale $r0;

        $r0 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        <org.apache.lucene.analysis.miscellaneous.PatternAnalyzer$PatternTokenizer: java.util.Locale locale> = $r0;

        return;
    }
}
