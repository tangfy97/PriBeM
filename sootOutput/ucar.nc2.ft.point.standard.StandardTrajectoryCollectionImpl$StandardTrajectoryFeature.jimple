class ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl$StandardTrajectoryFeature extends ucar.nc2.ft.point.TrajectoryFeatureImpl
{
    ucar.nc2.ft.point.standard.Cursor cursor;
    final ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl this$0;

    void <init>(ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl, ucar.nc2.ft.point.standard.Cursor)
    {
        int $i1;
        ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl$StandardTrajectoryFeature r0;
        ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl r1;
        ucar.nc2.ft.point.standard.Cursor r3;
        java.lang.String $r4;
        ucar.nc2.ft.point.standard.NestedTable $r2;

        r0 := @this: ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl$StandardTrajectoryFeature;

        r1 := @parameter0: ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl;

        r3 := @parameter1: ucar.nc2.ft.point.standard.Cursor;

        r0.<ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl$StandardTrajectoryFeature: ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl this$0> = r1;

        $r2 = staticinvoke <ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl: ucar.nc2.ft.point.standard.NestedTable access$000(ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl)>(r1);

        $r4 = virtualinvoke $r2.<ucar.nc2.ft.point.standard.NestedTable: java.lang.String getFeatureName(ucar.nc2.ft.point.standard.Cursor)>(r3);

        $i1 = (int) -1;

        specialinvoke r0.<ucar.nc2.ft.point.TrajectoryFeatureImpl: void <init>(java.lang.String,int)>($r4, $i1);

        r0.<ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl$StandardTrajectoryFeature: ucar.nc2.ft.point.standard.Cursor cursor> = r3;

        return;
    }

    public ucar.nc2.ft.PointFeatureIterator getPointFeatureIterator(int) throws java.io.IOException
    {
        ucar.nc2.ft.point.standard.StandardPointFeatureIterator $r6;
        ucar.ma2.StructureDataIterator $r5;
        ucar.nc2.units.DateUnit $r10;
        ucar.unidata.geoloc.LatLonRect $r11;
        ucar.nc2.units.DateRange $r12;
        int i0, $i1;
        ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl$StandardTrajectoryFeature r0;
        ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl $r3, $r7, $r9;
        ucar.nc2.ft.point.standard.Cursor $r1, $r2;
        ucar.nc2.ft.point.standard.NestedTable $r4, $r8;

        r0 := @this: ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl$StandardTrajectoryFeature;

        i0 := @parameter0: int;

        $r1 = r0.<ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl$StandardTrajectoryFeature: ucar.nc2.ft.point.standard.Cursor cursor>;

        $r2 = virtualinvoke $r1.<ucar.nc2.ft.point.standard.Cursor: ucar.nc2.ft.point.standard.Cursor copy()>();

        $r3 = r0.<ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl$StandardTrajectoryFeature: ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl this$0>;

        $r4 = staticinvoke <ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl: ucar.nc2.ft.point.standard.NestedTable access$000(ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl)>($r3);

        $r5 = virtualinvoke $r4.<ucar.nc2.ft.point.standard.NestedTable: ucar.ma2.StructureDataIterator getLeafFeatureDataIterator(ucar.nc2.ft.point.standard.Cursor,int)>($r2, i0);

        $r6 = new ucar.nc2.ft.point.standard.StandardPointFeatureIterator;

        $r7 = r0.<ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl$StandardTrajectoryFeature: ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl this$0>;

        $r8 = staticinvoke <ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl: ucar.nc2.ft.point.standard.NestedTable access$000(ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl)>($r7);

        $r9 = r0.<ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl$StandardTrajectoryFeature: ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl this$0>;

        $r10 = staticinvoke <ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl: ucar.nc2.units.DateUnit access$100(ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl)>($r9);

        specialinvoke $r6.<ucar.nc2.ft.point.standard.StandardPointFeatureIterator: void <init>(ucar.nc2.ft.point.standard.NestedTable,ucar.nc2.units.DateUnit,ucar.ma2.StructureDataIterator,ucar.nc2.ft.point.standard.Cursor)>($r8, $r10, $r5, $r2);

        $r11 = r0.<ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl$StandardTrajectoryFeature: ucar.unidata.geoloc.LatLonRect boundingBox>;

        if $r11 == null goto label1;

        $r12 = r0.<ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl$StandardTrajectoryFeature: ucar.nc2.units.DateRange dateRange>;

        if $r12 == null goto label1;

        $i1 = r0.<ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl$StandardTrajectoryFeature: int npts>;

        if $i1 >= 0 goto label2;

     label1:
        virtualinvoke $r6.<ucar.nc2.ft.point.standard.StandardPointFeatureIterator: void setCalculateBounds(ucar.nc2.ft.PointFeatureCollection)>(r0);

     label2:
        return $r6;
    }
}
