class com.google.inject.servlet.UriPatternType$RegexUriPatternMatcher extends java.lang.Object implements com.google.inject.servlet.UriPatternMatcher
{
    private final java.util.regex.Pattern pattern;

    public void <init>(java.lang.String)
    {
        com.google.inject.servlet.UriPatternType$RegexUriPatternMatcher r0;
        java.lang.String r1;
        java.util.regex.Pattern $r2;

        r0 := @this: com.google.inject.servlet.UriPatternType$RegexUriPatternMatcher;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(r1);

        r0.<com.google.inject.servlet.UriPatternType$RegexUriPatternMatcher: java.util.regex.Pattern pattern> = $r2;

        return;
    }

    public boolean matches(java.lang.String)
    {
        com.google.inject.servlet.UriPatternType$RegexUriPatternMatcher r1;
        java.util.regex.Matcher $r3;
        java.lang.String r0;
        java.util.regex.Pattern $r2;
        boolean $z0, $z1;

        r1 := @this: com.google.inject.servlet.UriPatternType$RegexUriPatternMatcher;

        r0 := @parameter0: java.lang.String;

        if null == r0 goto label1;

        $r2 = r1.<com.google.inject.servlet.UriPatternType$RegexUriPatternMatcher: java.util.regex.Pattern pattern>;

        $r3 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

        $z0 = virtualinvoke $r3.<java.util.regex.Matcher: boolean matches()>();

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public java.lang.String extractPath(java.lang.String)
    {
        com.google.inject.servlet.UriPatternType$RegexUriPatternMatcher r0;
        java.util.regex.Matcher $r3;
        int $i0, $i1, $i2;
        java.lang.String r1, $r4;
        java.util.regex.Pattern $r2;
        boolean $z0;

        r0 := @this: com.google.inject.servlet.UriPatternType$RegexUriPatternMatcher;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.google.inject.servlet.UriPatternType$RegexUriPatternMatcher: java.util.regex.Pattern pattern>;

        $r3 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1);

        $z0 = virtualinvoke $r3.<java.util.regex.Matcher: boolean matches()>();

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke $r3.<java.util.regex.Matcher: int groupCount()>();

        if $i0 < 1 goto label1;

        $i1 = virtualinvoke $r3.<java.util.regex.Matcher: int start(int)>(1);

        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i1 >= $i2 goto label1;

        $r4 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        return $r4;

     label1:
        return null;
    }

    public com.google.inject.servlet.UriPatternType getPatternType()
    {
        com.google.inject.servlet.UriPatternType$RegexUriPatternMatcher r1;
        com.google.inject.servlet.UriPatternType $r0;

        r1 := @this: com.google.inject.servlet.UriPatternType$RegexUriPatternMatcher;

        $r0 = <com.google.inject.servlet.UriPatternType: com.google.inject.servlet.UriPatternType REGEX>;

        return $r0;
    }
}
