class org.apache.log4j.spi.VectorWriter extends java.io.PrintWriter
{
    private java.util.Vector v;

    void <init>()
    {
        org.apache.log4j.spi.VectorWriter r0;
        java.util.Vector $r2;
        org.apache.log4j.spi.NullWriter $r1;

        r0 := @this: org.apache.log4j.spi.VectorWriter;

        $r1 = new org.apache.log4j.spi.NullWriter;

        specialinvoke $r1.<org.apache.log4j.spi.NullWriter: void <init>()>();

        specialinvoke r0.<java.io.PrintWriter: void <init>(java.io.Writer)>($r1);

        $r2 = new java.util.Vector;

        specialinvoke $r2.<java.util.Vector: void <init>()>();

        r0.<org.apache.log4j.spi.VectorWriter: java.util.Vector v> = $r2;

        return;
    }

    public void print(java.lang.Object)
    {
        java.util.Vector $r2;
        org.apache.log4j.spi.VectorWriter r0;
        java.lang.Object r1;
        java.lang.String $r3;

        r0 := @this: org.apache.log4j.spi.VectorWriter;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.log4j.spi.VectorWriter: java.util.Vector v>;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        virtualinvoke $r2.<java.util.Vector: void addElement(java.lang.Object)>($r3);

        return;
    }

    public void print(char[])
    {
        java.util.Vector $r3;
        org.apache.log4j.spi.VectorWriter r0;
        char[] r2;
        java.lang.String $r1;

        r0 := @this: org.apache.log4j.spi.VectorWriter;

        r2 := @parameter0: char[];

        $r3 = r0.<org.apache.log4j.spi.VectorWriter: java.util.Vector v>;

        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(char[])>(r2);

        virtualinvoke $r3.<java.util.Vector: void addElement(java.lang.Object)>($r1);

        return;
    }

    public void print(java.lang.String)
    {
        org.apache.log4j.spi.VectorWriter r0;
        java.lang.String r1;
        java.util.Vector $r2;

        r0 := @this: org.apache.log4j.spi.VectorWriter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.log4j.spi.VectorWriter: java.util.Vector v>;

        virtualinvoke $r2.<java.util.Vector: void addElement(java.lang.Object)>(r1);

        return;
    }

    public void println(java.lang.Object)
    {
        java.util.Vector $r2;
        org.apache.log4j.spi.VectorWriter r0;
        java.lang.Object r1;
        java.lang.String $r3;

        r0 := @this: org.apache.log4j.spi.VectorWriter;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.log4j.spi.VectorWriter: java.util.Vector v>;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        virtualinvoke $r2.<java.util.Vector: void addElement(java.lang.Object)>($r3);

        return;
    }

    public void println(char[])
    {
        java.util.Vector $r3;
        org.apache.log4j.spi.VectorWriter r0;
        char[] r2;
        java.lang.String $r1;

        r0 := @this: org.apache.log4j.spi.VectorWriter;

        r2 := @parameter0: char[];

        $r3 = r0.<org.apache.log4j.spi.VectorWriter: java.util.Vector v>;

        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(char[])>(r2);

        virtualinvoke $r3.<java.util.Vector: void addElement(java.lang.Object)>($r1);

        return;
    }

    public void println(java.lang.String)
    {
        org.apache.log4j.spi.VectorWriter r0;
        java.lang.String r1;
        java.util.Vector $r2;

        r0 := @this: org.apache.log4j.spi.VectorWriter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.log4j.spi.VectorWriter: java.util.Vector v>;

        virtualinvoke $r2.<java.util.Vector: void addElement(java.lang.Object)>(r1);

        return;
    }

    public void write(char[])
    {
        java.util.Vector $r3;
        org.apache.log4j.spi.VectorWriter r0;
        char[] r2;
        java.lang.String $r1;

        r0 := @this: org.apache.log4j.spi.VectorWriter;

        r2 := @parameter0: char[];

        $r3 = r0.<org.apache.log4j.spi.VectorWriter: java.util.Vector v>;

        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(char[])>(r2);

        virtualinvoke $r3.<java.util.Vector: void addElement(java.lang.Object)>($r1);

        return;
    }

    public void write(char[], int, int)
    {
        java.util.Vector $r3;
        int i0, i1;
        org.apache.log4j.spi.VectorWriter r0;
        char[] r2;
        java.lang.String $r1;

        r0 := @this: org.apache.log4j.spi.VectorWriter;

        r2 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r3 = r0.<org.apache.log4j.spi.VectorWriter: java.util.Vector v>;

        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(char[],int,int)>(r2, i0, i1);

        virtualinvoke $r3.<java.util.Vector: void addElement(java.lang.Object)>($r1);

        return;
    }

    public void write(java.lang.String, int, int)
    {
        java.util.Vector $r2;
        int i0, i1, $i2;
        org.apache.log4j.spi.VectorWriter r0;
        java.lang.String r1, $r3;

        r0 := @this: org.apache.log4j.spi.VectorWriter;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.apache.log4j.spi.VectorWriter: java.util.Vector v>;

        $i2 = i0 + i1;

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i0, $i2);

        virtualinvoke $r2.<java.util.Vector: void addElement(java.lang.Object)>($r3);

        return;
    }

    public void write(java.lang.String)
    {
        org.apache.log4j.spi.VectorWriter r0;
        java.lang.String r1;
        java.util.Vector $r2;

        r0 := @this: org.apache.log4j.spi.VectorWriter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.log4j.spi.VectorWriter: java.util.Vector v>;

        virtualinvoke $r2.<java.util.Vector: void addElement(java.lang.Object)>(r1);

        return;
    }

    public java.lang.String[] toStringArray()
    {
        org.apache.log4j.spi.VectorWriter r0;
        java.lang.String[] r2;
        java.util.Vector $r1, $r3;
        int $i0, i1;
        java.lang.Object $r4;
        java.lang.String $r5;

        r0 := @this: org.apache.log4j.spi.VectorWriter;

        $r1 = r0.<org.apache.log4j.spi.VectorWriter: java.util.Vector v>;

        $i0 = virtualinvoke $r1.<java.util.Vector: int size()>();

        r2 = newarray (java.lang.String)[$i0];

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        $r3 = r0.<org.apache.log4j.spi.VectorWriter: java.util.Vector v>;

        $r4 = virtualinvoke $r3.<java.util.Vector: java.lang.Object elementAt(int)>(i1);

        $r5 = (java.lang.String) $r4;

        r2[i1] = $r5;

        i1 = i1 + 1;

        goto label1;

     label2:
        return r2;
    }
}
