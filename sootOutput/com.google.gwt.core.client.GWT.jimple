public final class com.google.gwt.core.client.GWT extends java.lang.Object
{
    public static final java.lang.String HOSTED_MODE_PERMUTATION_STRONG_NAME;
    private static com.google.gwt.core.client.GWTBridge sGWTBridge;
    private static com.google.gwt.core.client.GWT$UncaughtExceptionHandler sUncaughtExceptionHandler;

    public void <init>()
    {
        com.google.gwt.core.client.GWT r0;

        r0 := @this: com.google.gwt.core.client.GWT;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.Object create(java.lang.Class)
    {
        java.lang.UnsupportedOperationException $r4;
        java.lang.Class r1;
        java.lang.Object $r3;
        com.google.gwt.core.client.GWTBridge $r0, $r2;

        r1 := @parameter0: java.lang.Class;

        $r0 = <com.google.gwt.core.client.GWT: com.google.gwt.core.client.GWTBridge sGWTBridge>;

        if $r0 != null goto label1;

        $r4 = new java.lang.UnsupportedOperationException;

        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("ERROR: GWT.create() is only usable in client code!  It cannot be called, for example, from server code.  If you are running a unit test, check that your test case extends GWTTestCase and that GWT.create() is not called from within an initializer or constructor.");

        throw $r4;

     label1:
        $r2 = <com.google.gwt.core.client.GWT: com.google.gwt.core.client.GWTBridge sGWTBridge>;

        $r3 = virtualinvoke $r2.<com.google.gwt.core.client.GWTBridge: java.lang.Object create(java.lang.Class)>(r1);

        return $r3;
    }

    public static java.lang.String getHostPageBaseURL()
    {
        java.lang.String $r0;

        $r0 = staticinvoke <com.google.gwt.core.client.impl.Impl: java.lang.String getHostPageBaseURL()>();

        return $r0;
    }

    public static java.lang.String getModuleBaseURL()
    {
        java.lang.String $r0;

        $r0 = staticinvoke <com.google.gwt.core.client.impl.Impl: java.lang.String getModuleBaseURL()>();

        return $r0;
    }

    public static java.lang.String getModuleName()
    {
        java.lang.String $r0;

        $r0 = staticinvoke <com.google.gwt.core.client.impl.Impl: java.lang.String getModuleName()>();

        return $r0;
    }

    public static java.lang.String getPermutationStrongName()
    {
        java.lang.String $r0;
        boolean $z0;

        $z0 = staticinvoke <com.google.gwt.core.client.GWT: boolean isScript()>();

        if $z0 == 0 goto label1;

        $r0 = staticinvoke <com.google.gwt.core.client.impl.Impl: java.lang.String getPermutationStrongName()>();

        return $r0;

     label1:
        return "HostedMode";
    }

    public static java.lang.String getTypeName(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.Class $r1;
        java.lang.String $r2;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

     label2:
        return $r2;
    }

    public static com.google.gwt.core.client.GWT$UncaughtExceptionHandler getUncaughtExceptionHandler()
    {
        com.google.gwt.core.client.GWT$UncaughtExceptionHandler $r0;

        $r0 = <com.google.gwt.core.client.GWT: com.google.gwt.core.client.GWT$UncaughtExceptionHandler sUncaughtExceptionHandler>;

        return $r0;
    }

    public static java.lang.String getUniqueThreadId()
    {
        java.lang.String $r2;
        com.google.gwt.core.client.GWTBridge $r0, $r1;

        $r0 = <com.google.gwt.core.client.GWT: com.google.gwt.core.client.GWTBridge sGWTBridge>;

        if $r0 == null goto label1;

        $r1 = <com.google.gwt.core.client.GWT: com.google.gwt.core.client.GWTBridge sGWTBridge>;

        $r2 = virtualinvoke $r1.<com.google.gwt.core.client.GWTBridge: java.lang.String getThreadUniqueID()>();

        return $r2;

     label1:
        return "";
    }

    public static java.lang.String getVersion()
    {
        java.lang.String $r2, $r3;
        com.google.gwt.core.client.GWTBridge $r0, $r1;

        $r0 = <com.google.gwt.core.client.GWT: com.google.gwt.core.client.GWTBridge sGWTBridge>;

        if $r0 != null goto label1;

        $r3 = staticinvoke <com.google.gwt.core.client.GWT: java.lang.String getVersion0()>();

        return $r3;

     label1:
        $r1 = <com.google.gwt.core.client.GWT: com.google.gwt.core.client.GWTBridge sGWTBridge>;

        $r2 = virtualinvoke $r1.<com.google.gwt.core.client.GWTBridge: java.lang.String getVersion()>();

        return $r2;
    }

    public static boolean isClient()
    {
        com.google.gwt.core.client.GWTBridge $r0, $r1;
        boolean $z0, $z1;

        $r0 = <com.google.gwt.core.client.GWT: com.google.gwt.core.client.GWTBridge sGWTBridge>;

        if $r0 == null goto label1;

        $r1 = <com.google.gwt.core.client.GWT: com.google.gwt.core.client.GWTBridge sGWTBridge>;

        $z0 = virtualinvoke $r1.<com.google.gwt.core.client.GWTBridge: boolean isClient()>();

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public static boolean isProdMode()
    {
        return 0;
    }

    public static boolean isScript()
    {
        return 0;
    }

    public static void log(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        staticinvoke <com.google.gwt.core.client.GWT: void log(java.lang.String,java.lang.Throwable)>(r0, null);

        return;
    }

    public static void log(java.lang.String, java.lang.Throwable)
    {
        java.lang.Throwable r2;
        java.lang.String r1;
        com.google.gwt.core.client.GWTBridge $r0, $r3;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        $r0 = <com.google.gwt.core.client.GWT: com.google.gwt.core.client.GWTBridge sGWTBridge>;

        if $r0 == null goto label1;

        $r3 = <com.google.gwt.core.client.GWT: com.google.gwt.core.client.GWTBridge sGWTBridge>;

        virtualinvoke $r3.<com.google.gwt.core.client.GWTBridge: void log(java.lang.String,java.lang.Throwable)>(r1, r2);

     label1:
        return;
    }

    public static void runAsync(java.lang.Class, com.google.gwt.core.client.RunAsyncCallback)
    {
        com.google.gwt.core.client.RunAsyncCallback r0;
        java.lang.Class r1;

        r1 := @parameter0: java.lang.Class;

        r0 := @parameter1: com.google.gwt.core.client.RunAsyncCallback;

        staticinvoke <com.google.gwt.core.client.GWT: void runAsyncWithoutCodeSplitting(com.google.gwt.core.client.RunAsyncCallback)>(r0);

        return;
    }

    public static void runAsync(com.google.gwt.core.client.RunAsyncCallback)
    {
        com.google.gwt.core.client.RunAsyncCallback r0;

        r0 := @parameter0: com.google.gwt.core.client.RunAsyncCallback;

        staticinvoke <com.google.gwt.core.client.GWT: void runAsyncWithoutCodeSplitting(com.google.gwt.core.client.RunAsyncCallback)>(r0);

        return;
    }

    public static void setUncaughtExceptionHandler(com.google.gwt.core.client.GWT$UncaughtExceptionHandler)
    {
        com.google.gwt.core.client.GWT$UncaughtExceptionHandler r0;

        r0 := @parameter0: com.google.gwt.core.client.GWT$UncaughtExceptionHandler;

        <com.google.gwt.core.client.GWT: com.google.gwt.core.client.GWT$UncaughtExceptionHandler sUncaughtExceptionHandler> = r0;

        return;
    }

    static void setBridge(com.google.gwt.core.client.GWTBridge)
    {
        com.google.gwt.core.client.GWT$DefaultUncaughtExceptionHandler $r1;
        com.google.gwt.core.client.GWTBridge r0;

        r0 := @parameter0: com.google.gwt.core.client.GWTBridge;

        <com.google.gwt.core.client.GWT: com.google.gwt.core.client.GWTBridge sGWTBridge> = r0;

        if r0 == null goto label1;

        $r1 = new com.google.gwt.core.client.GWT$DefaultUncaughtExceptionHandler;

        specialinvoke $r1.<com.google.gwt.core.client.GWT$DefaultUncaughtExceptionHandler: void <init>(com.google.gwt.core.client.GWT$1)>(null);

        staticinvoke <com.google.gwt.core.client.GWT: void setUncaughtExceptionHandler(com.google.gwt.core.client.GWT$UncaughtExceptionHandler)>($r1);

     label1:
        return;
    }

    private static native java.lang.String getVersion0();

    private static void runAsyncWithoutCodeSplitting(com.google.gwt.core.client.RunAsyncCallback)
    {
        java.lang.Throwable $r4;
        com.google.gwt.core.client.impl.AsyncFragmentLoader $r1, $r2;
        com.google.gwt.core.client.GWT$UncaughtExceptionHandler $r3;
        com.google.gwt.core.client.RunAsyncCallback r0;
        boolean $z0;

        r0 := @parameter0: com.google.gwt.core.client.RunAsyncCallback;

        $z0 = staticinvoke <com.google.gwt.core.client.GWT: boolean isScript()>();

        if $z0 == 0 goto label1;

        $r1 = <com.google.gwt.core.client.impl.AsyncFragmentLoader: com.google.gwt.core.client.impl.AsyncFragmentLoader BROWSER_LOADER>;

        virtualinvoke $r1.<com.google.gwt.core.client.impl.AsyncFragmentLoader: void logEventProgress(java.lang.String,java.lang.String)>("noDownloadNeeded", "begin");

        $r2 = <com.google.gwt.core.client.impl.AsyncFragmentLoader: com.google.gwt.core.client.impl.AsyncFragmentLoader BROWSER_LOADER>;

        virtualinvoke $r2.<com.google.gwt.core.client.impl.AsyncFragmentLoader: void logEventProgress(java.lang.String,java.lang.String)>("noDownloadNeeded", "end");

     label1:
        $r3 = <com.google.gwt.core.client.GWT: com.google.gwt.core.client.GWT$UncaughtExceptionHandler sUncaughtExceptionHandler>;

        if $r3 != null goto label2;

        interfaceinvoke r0.<com.google.gwt.core.client.RunAsyncCallback: void onSuccess()>();

        goto label5;

     label2:
        interfaceinvoke r0.<com.google.gwt.core.client.RunAsyncCallback: void onSuccess()>();

     label3:
        goto label5;

     label4:
        $r4 := @caughtexception;

        interfaceinvoke $r3.<com.google.gwt.core.client.GWT$UncaughtExceptionHandler: void onUncaughtException(java.lang.Throwable)>($r4);

     label5:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    static void <clinit>()
    {
        <com.google.gwt.core.client.GWT: java.lang.String HOSTED_MODE_PERMUTATION_STRONG_NAME> = "HostedMode";

        <com.google.gwt.core.client.GWT: com.google.gwt.core.client.GWTBridge sGWTBridge> = null;

        <com.google.gwt.core.client.GWT: com.google.gwt.core.client.GWT$UncaughtExceptionHandler sUncaughtExceptionHandler> = null;

        return;
    }
}
