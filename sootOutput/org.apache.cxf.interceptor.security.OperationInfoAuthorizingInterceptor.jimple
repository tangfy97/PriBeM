public class org.apache.cxf.interceptor.security.OperationInfoAuthorizingInterceptor extends org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor
{
    private static final java.util.logging.Logger LOG;

    public void <init>()
    {
        org.apache.cxf.interceptor.security.OperationInfoAuthorizingInterceptor r0;

        r0 := @this: org.apache.cxf.interceptor.security.OperationInfoAuthorizingInterceptor;

        specialinvoke r0.<org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor: void <init>()>();

        return;
    }

    public void handleMessage(org.apache.cxf.message.Message) throws org.apache.cxf.interceptor.Fault
    {
        org.apache.cxf.security.SecurityContext r2;
        org.apache.cxf.interceptor.security.OperationInfoAuthorizingInterceptor r4;
        org.apache.cxf.message.Message r0;
        org.apache.cxf.service.model.OperationInfo $r5;
        org.apache.cxf.interceptor.security.AccessDeniedException $r9;
        java.security.Principal $r3;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r6, $r7;
        java.lang.String $r8;
        boolean $z0;

        r4 := @this: org.apache.cxf.interceptor.security.OperationInfoAuthorizingInterceptor;

        r0 := @parameter0: org.apache.cxf.message.Message;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Class)>(class "Lorg/apache/cxf/security/SecurityContext;");

        r2 = (org.apache.cxf.security.SecurityContext) $r1;

        if r2 == null goto label1;

        $r3 = interfaceinvoke r2.<org.apache.cxf.security.SecurityContext: java.security.Principal getUserPrincipal()>();

        if $r3 == null goto label1;

        $r5 = virtualinvoke r4.<org.apache.cxf.interceptor.security.OperationInfoAuthorizingInterceptor: org.apache.cxf.service.model.OperationInfo getTargetOperationInfo(org.apache.cxf.message.Message)>(r0);

        if $r5 == null goto label1;

        $r6 = virtualinvoke $r5.<org.apache.cxf.service.model.OperationInfo: javax.xml.namespace.QName getName()>();

        if $r6 == null goto label1;

        $r7 = virtualinvoke $r5.<org.apache.cxf.service.model.OperationInfo: javax.xml.namespace.QName getName()>();

        $r8 = virtualinvoke $r7.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $z0 = virtualinvoke r4.<org.apache.cxf.interceptor.security.OperationInfoAuthorizingInterceptor: boolean authorize(org.apache.cxf.security.SecurityContext,java.lang.String)>(r2, $r8);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r9 = new org.apache.cxf.interceptor.security.AccessDeniedException;

        specialinvoke $r9.<org.apache.cxf.interceptor.security.AccessDeniedException: void <init>(java.lang.String)>("Unauthorized");

        throw $r9;
    }

    protected boolean authorize(org.apache.cxf.security.SecurityContext, java.lang.String)
    {
        java.util.logging.Level $r4;
        java.lang.String r1, $r9, $r12;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.cxf.security.SecurityContext r3;
        org.apache.cxf.interceptor.security.OperationInfoAuthorizingInterceptor r0;
        java.util.logging.Logger $r5, $r7;
        java.util.List $r2, $r13;
        java.security.Principal $r8;
        java.lang.StringBuilder $r6, $r10, $r11;

        r0 := @this: org.apache.cxf.interceptor.security.OperationInfoAuthorizingInterceptor;

        r3 := @parameter0: org.apache.cxf.security.SecurityContext;

        r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.cxf.interceptor.security.OperationInfoAuthorizingInterceptor: java.util.List getExpectedRoles(java.lang.String)>(r1);

        $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label3;

        $r13 = virtualinvoke r0.<org.apache.cxf.interceptor.security.OperationInfoAuthorizingInterceptor: java.util.List getDenyRoles(java.lang.String)>(r1);

        $z3 = interfaceinvoke $r13.<java.util.List: boolean isEmpty()>();

        if $z3 == 0 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = virtualinvoke r0.<org.apache.cxf.interceptor.security.OperationInfoAuthorizingInterceptor: boolean isUserInRole(org.apache.cxf.security.SecurityContext,java.util.List,boolean)>(r3, $r13, 1);

     label2:
        return $z4;

     label3:
        $z1 = virtualinvoke r0.<org.apache.cxf.interceptor.security.OperationInfoAuthorizingInterceptor: boolean isUserInRole(org.apache.cxf.security.SecurityContext,java.util.List,boolean)>(r3, $r2, 0);

        if $z1 == 0 goto label4;

        return 1;

     label4:
        $r5 = <org.apache.cxf.interceptor.security.OperationInfoAuthorizingInterceptor: java.util.logging.Logger LOG>;

        $r4 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z2 = virtualinvoke $r5.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r4);

        if $z2 == 0 goto label5;

        $r7 = <org.apache.cxf.interceptor.security.OperationInfoAuthorizingInterceptor: java.util.logging.Logger LOG>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = interfaceinvoke r3.<org.apache.cxf.security.SecurityContext: java.security.Principal getUserPrincipal()>();

        $r9 = interfaceinvoke $r8.<java.security.Principal: java.lang.String getName()>();

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not authorized");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.util.logging.Logger: void fine(java.lang.String)>($r12);

     label5:
        return 0;
    }

    protected org.apache.cxf.service.model.OperationInfo getTargetOperationInfo(org.apache.cxf.message.Message)
    {
        org.apache.cxf.interceptor.security.OperationInfoAuthorizingInterceptor r4;
        org.apache.cxf.message.Message r0;
        org.apache.cxf.service.model.OperationInfo $r5;
        org.apache.cxf.service.model.BindingOperationInfo r3;
        java.lang.Object $r2;
        org.apache.cxf.message.Exchange $r1;

        r4 := @this: org.apache.cxf.interceptor.security.OperationInfoAuthorizingInterceptor;

        r0 := @parameter0: org.apache.cxf.message.Message;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r2 = interfaceinvoke $r1.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Class)>(class "Lorg/apache/cxf/service/model/BindingOperationInfo;");

        r3 = (org.apache.cxf.service.model.BindingOperationInfo) $r2;

        if r3 == null goto label1;

        $r5 = virtualinvoke r3.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.OperationInfo getOperationInfo()>();

        goto label2;

     label1:
        $r5 = null;

     label2:
        return $r5;
    }

    protected java.util.List getExpectedRoles(java.lang.String)
    {
        java.util.List r4, $r5;
        org.apache.cxf.interceptor.security.OperationInfoAuthorizingInterceptor r0;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String r1;

        r0 := @this: org.apache.cxf.interceptor.security.OperationInfoAuthorizingInterceptor;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.cxf.interceptor.security.OperationInfoAuthorizingInterceptor: java.util.Map methodRolesMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.util.List) $r3;

        if r4 == null goto label1;

        return r4;

     label1:
        $r5 = r0.<org.apache.cxf.interceptor.security.OperationInfoAuthorizingInterceptor: java.util.List globalRoles>;

        return $r5;
    }

    protected java.util.List getDenyRoles(java.lang.String)
    {
        java.util.List $r0;
        java.lang.String r2;
        org.apache.cxf.interceptor.security.OperationInfoAuthorizingInterceptor r1;

        r1 := @this: org.apache.cxf.interceptor.security.OperationInfoAuthorizingInterceptor;

        r2 := @parameter0: java.lang.String;

        $r0 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r0;
    }

    static void <clinit>()
    {
        java.util.logging.Logger $r0;

        $r0 = staticinvoke <org.apache.cxf.common.logging.LogUtils: java.util.logging.Logger getL7dLogger(java.lang.Class)>(class "Lorg/apache/cxf/interceptor/security/OperationInfoAuthorizingInterceptor;");

        <org.apache.cxf.interceptor.security.OperationInfoAuthorizingInterceptor: java.util.logging.Logger LOG> = $r0;

        return;
    }
}
