public class org.bouncycastle.x509.X509V3CertificateGenerator extends java.lang.Object
{
    private org.bouncycastle.asn1.x509.V3TBSCertificateGenerator tbsGen;
    private org.bouncycastle.asn1.DERObjectIdentifier sigOID;
    private org.bouncycastle.asn1.x509.AlgorithmIdentifier sigAlgId;
    private java.lang.String signatureAlgorithm;
    private org.bouncycastle.asn1.x509.X509ExtensionsGenerator extGenerator;

    public void <init>()
    {
        org.bouncycastle.asn1.x509.V3TBSCertificateGenerator $r1;
        org.bouncycastle.asn1.x509.X509ExtensionsGenerator $r2;
        org.bouncycastle.x509.X509V3CertificateGenerator r0;

        r0 := @this: org.bouncycastle.x509.X509V3CertificateGenerator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.bouncycastle.asn1.x509.V3TBSCertificateGenerator;

        specialinvoke $r1.<org.bouncycastle.asn1.x509.V3TBSCertificateGenerator: void <init>()>();

        r0.<org.bouncycastle.x509.X509V3CertificateGenerator: org.bouncycastle.asn1.x509.V3TBSCertificateGenerator tbsGen> = $r1;

        $r2 = new org.bouncycastle.asn1.x509.X509ExtensionsGenerator;

        specialinvoke $r2.<org.bouncycastle.asn1.x509.X509ExtensionsGenerator: void <init>()>();

        r0.<org.bouncycastle.x509.X509V3CertificateGenerator: org.bouncycastle.asn1.x509.X509ExtensionsGenerator extGenerator> = $r2;

        return;
    }

    public void reset()
    {
        org.bouncycastle.asn1.x509.V3TBSCertificateGenerator $r1;
        org.bouncycastle.asn1.x509.X509ExtensionsGenerator $r2;
        org.bouncycastle.x509.X509V3CertificateGenerator r0;

        r0 := @this: org.bouncycastle.x509.X509V3CertificateGenerator;

        $r1 = new org.bouncycastle.asn1.x509.V3TBSCertificateGenerator;

        specialinvoke $r1.<org.bouncycastle.asn1.x509.V3TBSCertificateGenerator: void <init>()>();

        r0.<org.bouncycastle.x509.X509V3CertificateGenerator: org.bouncycastle.asn1.x509.V3TBSCertificateGenerator tbsGen> = $r1;

        $r2 = r0.<org.bouncycastle.x509.X509V3CertificateGenerator: org.bouncycastle.asn1.x509.X509ExtensionsGenerator extGenerator>;

        virtualinvoke $r2.<org.bouncycastle.asn1.x509.X509ExtensionsGenerator: void reset()>();

        return;
    }

    public void setSerialNumber(java.math.BigInteger)
    {
        org.bouncycastle.asn1.x509.V3TBSCertificateGenerator $r4;
        org.bouncycastle.x509.X509V3CertificateGenerator r2;
        int $i0;
        java.math.BigInteger r0, $r1;
        org.bouncycastle.asn1.DERInteger $r3;
        java.lang.IllegalArgumentException $r5;

        r2 := @this: org.bouncycastle.x509.X509V3CertificateGenerator;

        r0 := @parameter0: java.math.BigInteger;

        $r1 = <java.math.BigInteger: java.math.BigInteger ZERO>;

        $i0 = virtualinvoke r0.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r1);

        if $i0 > 0 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("serial number must be a positive integer");

        throw $r5;

     label1:
        $r4 = r2.<org.bouncycastle.x509.X509V3CertificateGenerator: org.bouncycastle.asn1.x509.V3TBSCertificateGenerator tbsGen>;

        $r3 = new org.bouncycastle.asn1.DERInteger;

        specialinvoke $r3.<org.bouncycastle.asn1.DERInteger: void <init>(java.math.BigInteger)>(r0);

        virtualinvoke $r4.<org.bouncycastle.asn1.x509.V3TBSCertificateGenerator: void setSerialNumber(org.bouncycastle.asn1.DERInteger)>($r3);

        return;
    }

    public void setIssuerDN(javax.security.auth.x500.X500Principal)
    {
        org.bouncycastle.asn1.x509.V3TBSCertificateGenerator $r3;
        byte[] $r4;
        org.bouncycastle.jce.X509Principal $r1;
        javax.security.auth.x500.X500Principal r2;
        org.bouncycastle.x509.X509V3CertificateGenerator r0;
        java.io.IOException $r5;
        java.lang.IllegalArgumentException $r6;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r10;

        r0 := @this: org.bouncycastle.x509.X509V3CertificateGenerator;

        r2 := @parameter0: javax.security.auth.x500.X500Principal;

     label1:
        $r3 = r0.<org.bouncycastle.x509.X509V3CertificateGenerator: org.bouncycastle.asn1.x509.V3TBSCertificateGenerator tbsGen>;

        $r1 = new org.bouncycastle.jce.X509Principal;

        $r4 = virtualinvoke r2.<javax.security.auth.x500.X500Principal: byte[] getEncoded()>();

        specialinvoke $r1.<org.bouncycastle.jce.X509Principal: void <init>(byte[])>($r4);

        virtualinvoke $r3.<org.bouncycastle.asn1.x509.V3TBSCertificateGenerator: void setIssuer(org.bouncycastle.asn1.x509.X509Name)>($r1);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("can\'t process principal: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r6;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void setIssuerDN(org.bouncycastle.asn1.x509.X509Name)
    {
        org.bouncycastle.asn1.x509.V3TBSCertificateGenerator $r2;
        org.bouncycastle.x509.X509V3CertificateGenerator r0;
        org.bouncycastle.asn1.x509.X509Name r1;

        r0 := @this: org.bouncycastle.x509.X509V3CertificateGenerator;

        r1 := @parameter0: org.bouncycastle.asn1.x509.X509Name;

        $r2 = r0.<org.bouncycastle.x509.X509V3CertificateGenerator: org.bouncycastle.asn1.x509.V3TBSCertificateGenerator tbsGen>;

        virtualinvoke $r2.<org.bouncycastle.asn1.x509.V3TBSCertificateGenerator: void setIssuer(org.bouncycastle.asn1.x509.X509Name)>(r1);

        return;
    }

    public void setNotBefore(java.util.Date)
    {
        org.bouncycastle.asn1.x509.V3TBSCertificateGenerator $r3;
        org.bouncycastle.x509.X509V3CertificateGenerator r0;
        java.util.Date r2;
        org.bouncycastle.asn1.x509.Time $r1;

        r0 := @this: org.bouncycastle.x509.X509V3CertificateGenerator;

        r2 := @parameter0: java.util.Date;

        $r3 = r0.<org.bouncycastle.x509.X509V3CertificateGenerator: org.bouncycastle.asn1.x509.V3TBSCertificateGenerator tbsGen>;

        $r1 = new org.bouncycastle.asn1.x509.Time;

        specialinvoke $r1.<org.bouncycastle.asn1.x509.Time: void <init>(java.util.Date)>(r2);

        virtualinvoke $r3.<org.bouncycastle.asn1.x509.V3TBSCertificateGenerator: void setStartDate(org.bouncycastle.asn1.x509.Time)>($r1);

        return;
    }

    public void setNotAfter(java.util.Date)
    {
        org.bouncycastle.asn1.x509.V3TBSCertificateGenerator $r3;
        org.bouncycastle.x509.X509V3CertificateGenerator r0;
        java.util.Date r2;
        org.bouncycastle.asn1.x509.Time $r1;

        r0 := @this: org.bouncycastle.x509.X509V3CertificateGenerator;

        r2 := @parameter0: java.util.Date;

        $r3 = r0.<org.bouncycastle.x509.X509V3CertificateGenerator: org.bouncycastle.asn1.x509.V3TBSCertificateGenerator tbsGen>;

        $r1 = new org.bouncycastle.asn1.x509.Time;

        specialinvoke $r1.<org.bouncycastle.asn1.x509.Time: void <init>(java.util.Date)>(r2);

        virtualinvoke $r3.<org.bouncycastle.asn1.x509.V3TBSCertificateGenerator: void setEndDate(org.bouncycastle.asn1.x509.Time)>($r1);

        return;
    }

    public void setSubjectDN(javax.security.auth.x500.X500Principal)
    {
        org.bouncycastle.asn1.x509.V3TBSCertificateGenerator $r3;
        byte[] $r4;
        org.bouncycastle.jce.X509Principal $r1;
        javax.security.auth.x500.X500Principal r2;
        org.bouncycastle.x509.X509V3CertificateGenerator r0;
        java.io.IOException $r5;
        java.lang.IllegalArgumentException $r6;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r10;

        r0 := @this: org.bouncycastle.x509.X509V3CertificateGenerator;

        r2 := @parameter0: javax.security.auth.x500.X500Principal;

     label1:
        $r3 = r0.<org.bouncycastle.x509.X509V3CertificateGenerator: org.bouncycastle.asn1.x509.V3TBSCertificateGenerator tbsGen>;

        $r1 = new org.bouncycastle.jce.X509Principal;

        $r4 = virtualinvoke r2.<javax.security.auth.x500.X500Principal: byte[] getEncoded()>();

        specialinvoke $r1.<org.bouncycastle.jce.X509Principal: void <init>(byte[])>($r4);

        virtualinvoke $r3.<org.bouncycastle.asn1.x509.V3TBSCertificateGenerator: void setSubject(org.bouncycastle.asn1.x509.X509Name)>($r1);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("can\'t process principal: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r6;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void setSubjectDN(org.bouncycastle.asn1.x509.X509Name)
    {
        org.bouncycastle.asn1.x509.V3TBSCertificateGenerator $r2;
        org.bouncycastle.x509.X509V3CertificateGenerator r0;
        org.bouncycastle.asn1.x509.X509Name r1;

        r0 := @this: org.bouncycastle.x509.X509V3CertificateGenerator;

        r1 := @parameter0: org.bouncycastle.asn1.x509.X509Name;

        $r2 = r0.<org.bouncycastle.x509.X509V3CertificateGenerator: org.bouncycastle.asn1.x509.V3TBSCertificateGenerator tbsGen>;

        virtualinvoke $r2.<org.bouncycastle.asn1.x509.V3TBSCertificateGenerator: void setSubject(org.bouncycastle.asn1.x509.X509Name)>(r1);

        return;
    }

    public void setPublicKey(java.security.PublicKey) throws java.lang.IllegalArgumentException
    {
        org.bouncycastle.asn1.x509.V3TBSCertificateGenerator $r3;
        byte[] $r4;
        org.bouncycastle.asn1.x509.SubjectPublicKeyInfo $r6;
        org.bouncycastle.asn1.DERObject $r5;
        org.bouncycastle.x509.X509V3CertificateGenerator r0;
        java.security.PublicKey r2;
        org.bouncycastle.asn1.ASN1InputStream $r1;
        java.lang.IllegalArgumentException $r8;
        java.lang.Exception $r7;
        java.lang.StringBuilder $r9, $r10, $r12;
        java.lang.String $r11, $r13;

        r0 := @this: org.bouncycastle.x509.X509V3CertificateGenerator;

        r2 := @parameter0: java.security.PublicKey;

     label1:
        $r3 = r0.<org.bouncycastle.x509.X509V3CertificateGenerator: org.bouncycastle.asn1.x509.V3TBSCertificateGenerator tbsGen>;

        $r1 = new org.bouncycastle.asn1.ASN1InputStream;

        $r4 = interfaceinvoke r2.<java.security.PublicKey: byte[] getEncoded()>();

        specialinvoke $r1.<org.bouncycastle.asn1.ASN1InputStream: void <init>(byte[])>($r4);

        $r5 = virtualinvoke $r1.<org.bouncycastle.asn1.ASN1InputStream: org.bouncycastle.asn1.DERObject readObject()>();

        $r6 = staticinvoke <org.bouncycastle.asn1.x509.SubjectPublicKeyInfo: org.bouncycastle.asn1.x509.SubjectPublicKeyInfo getInstance(java.lang.Object)>($r5);

        virtualinvoke $r3.<org.bouncycastle.asn1.x509.V3TBSCertificateGenerator: void setSubjectPublicKeyInfo(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)>($r6);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unable to process key - ");

        $r11 = virtualinvoke $r7.<java.lang.Exception: java.lang.String toString()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r8;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void setSignatureAlgorithm(java.lang.String)
    {
        org.bouncycastle.asn1.x509.V3TBSCertificateGenerator $r6;
        org.bouncycastle.x509.X509V3CertificateGenerator r0;
        java.lang.IllegalArgumentException $r8;
        java.lang.Exception $r7;
        java.lang.StringBuilder $r9, $r10, $r11;
        java.lang.String r1, $r12;
        org.bouncycastle.asn1.x509.AlgorithmIdentifier $r4, $r5;
        org.bouncycastle.asn1.DERObjectIdentifier $r2, $r3;

        r0 := @this: org.bouncycastle.x509.X509V3CertificateGenerator;

        r1 := @parameter0: java.lang.String;

        r0.<org.bouncycastle.x509.X509V3CertificateGenerator: java.lang.String signatureAlgorithm> = r1;

     label1:
        $r2 = staticinvoke <org.bouncycastle.x509.X509Util: org.bouncycastle.asn1.DERObjectIdentifier getAlgorithmOID(java.lang.String)>(r1);

        r0.<org.bouncycastle.x509.X509V3CertificateGenerator: org.bouncycastle.asn1.DERObjectIdentifier sigOID> = $r2;

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown signature type requested: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r8;

     label4:
        $r3 = r0.<org.bouncycastle.x509.X509V3CertificateGenerator: org.bouncycastle.asn1.DERObjectIdentifier sigOID>;

        $r4 = staticinvoke <org.bouncycastle.x509.X509Util: org.bouncycastle.asn1.x509.AlgorithmIdentifier getSigAlgID(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String)>($r3, r1);

        r0.<org.bouncycastle.x509.X509V3CertificateGenerator: org.bouncycastle.asn1.x509.AlgorithmIdentifier sigAlgId> = $r4;

        $r6 = r0.<org.bouncycastle.x509.X509V3CertificateGenerator: org.bouncycastle.asn1.x509.V3TBSCertificateGenerator tbsGen>;

        $r5 = r0.<org.bouncycastle.x509.X509V3CertificateGenerator: org.bouncycastle.asn1.x509.AlgorithmIdentifier sigAlgId>;

        virtualinvoke $r6.<org.bouncycastle.asn1.x509.V3TBSCertificateGenerator: void setSignature(org.bouncycastle.asn1.x509.AlgorithmIdentifier)>($r5);

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void setSubjectUniqueID(boolean[])
    {
        org.bouncycastle.asn1.x509.V3TBSCertificateGenerator $r2;
        org.bouncycastle.x509.X509V3CertificateGenerator r0;
        boolean[] r1;
        org.bouncycastle.asn1.DERBitString $r3;

        r0 := @this: org.bouncycastle.x509.X509V3CertificateGenerator;

        r1 := @parameter0: boolean[];

        $r2 = r0.<org.bouncycastle.x509.X509V3CertificateGenerator: org.bouncycastle.asn1.x509.V3TBSCertificateGenerator tbsGen>;

        $r3 = specialinvoke r0.<org.bouncycastle.x509.X509V3CertificateGenerator: org.bouncycastle.asn1.DERBitString booleanToBitString(boolean[])>(r1);

        virtualinvoke $r2.<org.bouncycastle.asn1.x509.V3TBSCertificateGenerator: void setSubjectUniqueID(org.bouncycastle.asn1.DERBitString)>($r3);

        return;
    }

    public void setIssuerUniqueID(boolean[])
    {
        org.bouncycastle.asn1.x509.V3TBSCertificateGenerator $r2;
        org.bouncycastle.x509.X509V3CertificateGenerator r0;
        boolean[] r1;
        org.bouncycastle.asn1.DERBitString $r3;

        r0 := @this: org.bouncycastle.x509.X509V3CertificateGenerator;

        r1 := @parameter0: boolean[];

        $r2 = r0.<org.bouncycastle.x509.X509V3CertificateGenerator: org.bouncycastle.asn1.x509.V3TBSCertificateGenerator tbsGen>;

        $r3 = specialinvoke r0.<org.bouncycastle.x509.X509V3CertificateGenerator: org.bouncycastle.asn1.DERBitString booleanToBitString(boolean[])>(r1);

        virtualinvoke $r2.<org.bouncycastle.asn1.x509.V3TBSCertificateGenerator: void setIssuerUniqueID(org.bouncycastle.asn1.DERBitString)>($r3);

        return;
    }

    private org.bouncycastle.asn1.DERBitString booleanToBitString(boolean[])
    {
        byte[] r1;
        org.bouncycastle.asn1.DERBitString $r5, $r6;
        byte $b7, $b9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8, $i10, $i11, i12, $i13, i14, $i15;
        boolean $z0;
        org.bouncycastle.x509.X509V3CertificateGenerator r4;
        boolean[] r0;

        r4 := @this: org.bouncycastle.x509.X509V3CertificateGenerator;

        r0 := @parameter0: boolean[];

        $i0 = lengthof r0;

        $i1 = $i0 + 7;

        $i2 = $i1 / 8;

        r1 = newarray (byte)[$i2];

        i12 = 0;

     label1:
        $i3 = lengthof r0;

        if i12 == $i3 goto label4;

        $i6 = i12 / 8;

        $b7 = r1[$i6];

        $z0 = r0[i12];

        if $z0 == 0 goto label2;

        $i10 = i12 % 8;

        $i11 = 7 - $i10;

        $i13 = 1 << $i11;

        goto label3;

     label2:
        $i13 = 0;

     label3:
        $i15 = (int) $b7;

        $i8 = $i15 | $i13;

        $b9 = (byte) $i8;

        r1[$i6] = $b9;

        i12 = i12 + 1;

        goto label1;

     label4:
        $i4 = lengthof r0;

        i14 = $i4 % 8;

        if i14 != 0 goto label5;

        $r5 = new org.bouncycastle.asn1.DERBitString;

        specialinvoke $r5.<org.bouncycastle.asn1.DERBitString: void <init>(byte[])>(r1);

        return $r5;

     label5:
        $r6 = new org.bouncycastle.asn1.DERBitString;

        $i5 = 8 - i14;

        specialinvoke $r6.<org.bouncycastle.asn1.DERBitString: void <init>(byte[],int)>(r1, $i5);

        return $r6;
    }

    public void addExtension(java.lang.String, boolean, org.bouncycastle.asn1.DEREncodable)
    {
        org.bouncycastle.x509.X509V3CertificateGenerator r0;
        org.bouncycastle.asn1.DEREncodable r3;
        java.lang.String r2;
        org.bouncycastle.asn1.DERObjectIdentifier $r1;
        boolean z0;

        r0 := @this: org.bouncycastle.x509.X509V3CertificateGenerator;

        r2 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r3 := @parameter2: org.bouncycastle.asn1.DEREncodable;

        $r1 = new org.bouncycastle.asn1.DERObjectIdentifier;

        specialinvoke $r1.<org.bouncycastle.asn1.DERObjectIdentifier: void <init>(java.lang.String)>(r2);

        virtualinvoke r0.<org.bouncycastle.x509.X509V3CertificateGenerator: void addExtension(org.bouncycastle.asn1.DERObjectIdentifier,boolean,org.bouncycastle.asn1.DEREncodable)>($r1, z0, r3);

        return;
    }

    public void addExtension(org.bouncycastle.asn1.DERObjectIdentifier, boolean, org.bouncycastle.asn1.DEREncodable)
    {
        org.bouncycastle.x509.X509V3CertificateGenerator r0;
        org.bouncycastle.asn1.DEREncodable r2;
        org.bouncycastle.asn1.x509.X509ExtensionsGenerator $r3;
        org.bouncycastle.asn1.DERObjectIdentifier r1;
        boolean z0;

        r0 := @this: org.bouncycastle.x509.X509V3CertificateGenerator;

        r1 := @parameter0: org.bouncycastle.asn1.DERObjectIdentifier;

        z0 := @parameter1: boolean;

        r2 := @parameter2: org.bouncycastle.asn1.DEREncodable;

        $r3 = r0.<org.bouncycastle.x509.X509V3CertificateGenerator: org.bouncycastle.asn1.x509.X509ExtensionsGenerator extGenerator>;

        virtualinvoke $r3.<org.bouncycastle.asn1.x509.X509ExtensionsGenerator: void addExtension(org.bouncycastle.asn1.DERObjectIdentifier,boolean,org.bouncycastle.asn1.DEREncodable)>(r1, z0, r2);

        return;
    }

    public void addExtension(java.lang.String, boolean, byte[])
    {
        byte[] r3;
        org.bouncycastle.x509.X509V3CertificateGenerator r0;
        java.lang.String r2;
        org.bouncycastle.asn1.DERObjectIdentifier $r1;
        boolean z0;

        r0 := @this: org.bouncycastle.x509.X509V3CertificateGenerator;

        r2 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r3 := @parameter2: byte[];

        $r1 = new org.bouncycastle.asn1.DERObjectIdentifier;

        specialinvoke $r1.<org.bouncycastle.asn1.DERObjectIdentifier: void <init>(java.lang.String)>(r2);

        virtualinvoke r0.<org.bouncycastle.x509.X509V3CertificateGenerator: void addExtension(org.bouncycastle.asn1.DERObjectIdentifier,boolean,byte[])>($r1, z0, r3);

        return;
    }

    public void addExtension(org.bouncycastle.asn1.DERObjectIdentifier, boolean, byte[])
    {
        byte[] r2;
        org.bouncycastle.x509.X509V3CertificateGenerator r0;
        org.bouncycastle.asn1.x509.X509ExtensionsGenerator $r3;
        org.bouncycastle.asn1.DERObjectIdentifier r1;
        boolean z0;

        r0 := @this: org.bouncycastle.x509.X509V3CertificateGenerator;

        r1 := @parameter0: org.bouncycastle.asn1.DERObjectIdentifier;

        z0 := @parameter1: boolean;

        r2 := @parameter2: byte[];

        $r3 = r0.<org.bouncycastle.x509.X509V3CertificateGenerator: org.bouncycastle.asn1.x509.X509ExtensionsGenerator extGenerator>;

        virtualinvoke $r3.<org.bouncycastle.asn1.x509.X509ExtensionsGenerator: void addExtension(org.bouncycastle.asn1.DERObjectIdentifier,boolean,byte[])>(r1, z0, r2);

        return;
    }

    public void copyAndAddExtension(java.lang.String, boolean, java.security.cert.X509Certificate) throws java.security.cert.CertificateParsingException
    {
        java.security.cert.X509Certificate r0;
        byte[] $r2;
        org.bouncycastle.x509.X509V3CertificateGenerator r4;
        java.security.cert.CertificateParsingException $r5, $r12;
        java.io.IOException $r11;
        java.lang.StringBuilder $r6, $r7, $r8, $r9;
        java.lang.String r1, $r10, $r13;
        org.bouncycastle.asn1.ASN1Object $r3;
        boolean z0;

        r4 := @this: org.bouncycastle.x509.X509V3CertificateGenerator;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r0 := @parameter2: java.security.cert.X509Certificate;

        $r2 = virtualinvoke r0.<java.security.cert.X509Certificate: byte[] getExtensionValue(java.lang.String)>(r1);

        if $r2 != null goto label1;

        $r5 = new java.security.cert.CertificateParsingException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("extension ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not present");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.security.cert.CertificateParsingException: void <init>(java.lang.String)>($r10);

        throw $r5;

     label1:
        $r3 = staticinvoke <org.bouncycastle.x509.extension.X509ExtensionUtil: org.bouncycastle.asn1.ASN1Object fromExtensionValue(byte[])>($r2);

        virtualinvoke r4.<org.bouncycastle.x509.X509V3CertificateGenerator: void addExtension(java.lang.String,boolean,org.bouncycastle.asn1.DEREncodable)>(r1, z0, $r3);

     label2:
        goto label4;

     label3:
        $r11 := @caughtexception;

        $r12 = new java.security.cert.CertificateParsingException;

        $r13 = virtualinvoke $r11.<java.io.IOException: java.lang.String toString()>();

        specialinvoke $r12.<java.security.cert.CertificateParsingException: void <init>(java.lang.String)>($r13);

        throw $r12;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void copyAndAddExtension(org.bouncycastle.asn1.DERObjectIdentifier, boolean, java.security.cert.X509Certificate) throws java.security.cert.CertificateParsingException
    {
        java.security.cert.X509Certificate r3;
        org.bouncycastle.x509.X509V3CertificateGenerator r0;
        java.lang.String $r2;
        org.bouncycastle.asn1.DERObjectIdentifier r1;
        boolean z0;

        r0 := @this: org.bouncycastle.x509.X509V3CertificateGenerator;

        r1 := @parameter0: org.bouncycastle.asn1.DERObjectIdentifier;

        z0 := @parameter1: boolean;

        r3 := @parameter2: java.security.cert.X509Certificate;

        $r2 = virtualinvoke r1.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        virtualinvoke r0.<org.bouncycastle.x509.X509V3CertificateGenerator: void copyAndAddExtension(java.lang.String,boolean,java.security.cert.X509Certificate)>($r2, z0, r3);

        return;
    }

    public java.security.cert.X509Certificate generateX509Certificate(java.security.PrivateKey) throws java.lang.SecurityException, java.security.SignatureException, java.security.InvalidKeyException
    {
        java.security.cert.X509Certificate $r2;
        org.bouncycastle.x509.X509V3CertificateGenerator r0;
        java.security.PrivateKey r1;
        java.lang.SecurityException $r4;
        java.security.NoSuchProviderException $r3;

        r0 := @this: org.bouncycastle.x509.X509V3CertificateGenerator;

        r1 := @parameter0: java.security.PrivateKey;

     label1:
        $r2 = virtualinvoke r0.<org.bouncycastle.x509.X509V3CertificateGenerator: java.security.cert.X509Certificate generateX509Certificate(java.security.PrivateKey,java.lang.String,java.security.SecureRandom)>(r1, "BC", null);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.SecurityException;

        specialinvoke $r4.<java.lang.SecurityException: void <init>(java.lang.String)>("BC provider not installed!");

        throw $r4;

        catch java.security.NoSuchProviderException from label1 to label2 with label3;
    }

    public java.security.cert.X509Certificate generateX509Certificate(java.security.PrivateKey, java.security.SecureRandom) throws java.lang.SecurityException, java.security.SignatureException, java.security.InvalidKeyException
    {
        java.security.SecureRandom r2;
        java.security.cert.X509Certificate $r3;
        org.bouncycastle.x509.X509V3CertificateGenerator r0;
        java.security.PrivateKey r1;
        java.lang.SecurityException $r5;
        java.security.NoSuchProviderException $r4;

        r0 := @this: org.bouncycastle.x509.X509V3CertificateGenerator;

        r1 := @parameter0: java.security.PrivateKey;

        r2 := @parameter1: java.security.SecureRandom;

     label1:
        $r3 = virtualinvoke r0.<org.bouncycastle.x509.X509V3CertificateGenerator: java.security.cert.X509Certificate generateX509Certificate(java.security.PrivateKey,java.lang.String,java.security.SecureRandom)>(r1, "BC", r2);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.SecurityException;

        specialinvoke $r5.<java.lang.SecurityException: void <init>(java.lang.String)>("BC provider not installed!");

        throw $r5;

        catch java.security.NoSuchProviderException from label1 to label2 with label3;
    }

    public java.security.cert.X509Certificate generateX509Certificate(java.security.PrivateKey, java.lang.String) throws java.security.NoSuchProviderException, java.lang.SecurityException, java.security.SignatureException, java.security.InvalidKeyException
    {
        java.security.cert.X509Certificate $r3;
        org.bouncycastle.x509.X509V3CertificateGenerator r0;
        java.security.PrivateKey r1;
        java.lang.String r2;

        r0 := @this: org.bouncycastle.x509.X509V3CertificateGenerator;

        r1 := @parameter0: java.security.PrivateKey;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<org.bouncycastle.x509.X509V3CertificateGenerator: java.security.cert.X509Certificate generateX509Certificate(java.security.PrivateKey,java.lang.String,java.security.SecureRandom)>(r1, r2, null);

        return $r3;
    }

    public java.security.cert.X509Certificate generateX509Certificate(java.security.PrivateKey, java.lang.String, java.security.SecureRandom) throws java.security.NoSuchProviderException, java.lang.SecurityException, java.security.SignatureException, java.security.InvalidKeyException
    {
        java.security.cert.X509Certificate $r4;
        org.bouncycastle.x509.X509V3CertificateGenerator r0;
        java.security.SignatureException $r12;
        java.security.SecureRandom r3;
        java.security.GeneralSecurityException $r5;
        java.security.PrivateKey r1;
        java.lang.SecurityException $r6;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.security.InvalidKeyException $r11;
        java.lang.String r2, $r10;
        java.security.NoSuchProviderException $r13;

        r0 := @this: org.bouncycastle.x509.X509V3CertificateGenerator;

        r1 := @parameter0: java.security.PrivateKey;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.security.SecureRandom;

     label1:
        $r4 = virtualinvoke r0.<org.bouncycastle.x509.X509V3CertificateGenerator: java.security.cert.X509Certificate generate(java.security.PrivateKey,java.lang.String,java.security.SecureRandom)>(r1, r2, r3);

     label2:
        return $r4;

     label3:
        $r13 := @caughtexception;

        throw $r13;

     label4:
        $r12 := @caughtexception;

        throw $r12;

     label5:
        $r11 := @caughtexception;

        throw $r11;

     label6:
        $r5 := @caughtexception;

        $r6 = new java.lang.SecurityException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exception: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.SecurityException: void <init>(java.lang.String)>($r10);

        throw $r6;

        catch java.security.NoSuchProviderException from label1 to label2 with label3;
        catch java.security.SignatureException from label1 to label2 with label4;
        catch java.security.InvalidKeyException from label1 to label2 with label5;
        catch java.security.GeneralSecurityException from label1 to label2 with label6;
    }

    public java.security.cert.X509Certificate generate(java.security.PrivateKey) throws java.security.cert.CertificateEncodingException, java.lang.IllegalStateException, java.security.NoSuchAlgorithmException, java.security.SignatureException, java.security.InvalidKeyException
    {
        java.security.cert.X509Certificate $r2;
        org.bouncycastle.x509.X509V3CertificateGenerator r0;
        java.security.PrivateKey r1;

        r0 := @this: org.bouncycastle.x509.X509V3CertificateGenerator;

        r1 := @parameter0: java.security.PrivateKey;

        $r2 = virtualinvoke r0.<org.bouncycastle.x509.X509V3CertificateGenerator: java.security.cert.X509Certificate generate(java.security.PrivateKey,java.security.SecureRandom)>(r1, null);

        return $r2;
    }

    public java.security.cert.X509Certificate generate(java.security.PrivateKey, java.security.SecureRandom) throws java.security.cert.CertificateEncodingException, java.lang.IllegalStateException, java.security.NoSuchAlgorithmException, java.security.SignatureException, java.security.InvalidKeyException
    {
        java.security.cert.X509Certificate $r7;
        byte[] $r6;
        org.bouncycastle.x509.X509V3CertificateGenerator r0;
        org.bouncycastle.asn1.x509.TBSCertificateStructure $r1;
        java.security.cert.CertificateParsingException $r8;
        java.io.IOException $r10;
        java.security.SecureRandom r3;
        java.security.PrivateKey r2;
        java.lang.String $r4;
        org.bouncycastle.asn1.DERObjectIdentifier $r5;
        org.bouncycastle.x509.ExtCertificateEncodingException $r9, $r11;

        r0 := @this: org.bouncycastle.x509.X509V3CertificateGenerator;

        r2 := @parameter0: java.security.PrivateKey;

        r3 := @parameter1: java.security.SecureRandom;

        $r1 = specialinvoke r0.<org.bouncycastle.x509.X509V3CertificateGenerator: org.bouncycastle.asn1.x509.TBSCertificateStructure generateTbsCert()>();

     label1:
        $r5 = r0.<org.bouncycastle.x509.X509V3CertificateGenerator: org.bouncycastle.asn1.DERObjectIdentifier sigOID>;

        $r4 = r0.<org.bouncycastle.x509.X509V3CertificateGenerator: java.lang.String signatureAlgorithm>;

        $r6 = staticinvoke <org.bouncycastle.x509.X509Util: byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)>($r5, $r4, r2, r3, $r1);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        $r11 = new org.bouncycastle.x509.ExtCertificateEncodingException;

        specialinvoke $r11.<org.bouncycastle.x509.ExtCertificateEncodingException: void <init>(java.lang.String,java.lang.Throwable)>("exception encoding TBS cert", $r10);

        throw $r11;

     label4:
        $r7 = specialinvoke r0.<org.bouncycastle.x509.X509V3CertificateGenerator: java.security.cert.X509Certificate generateJcaObject(org.bouncycastle.asn1.x509.TBSCertificateStructure,byte[])>($r1, $r6);

     label5:
        return $r7;

     label6:
        $r8 := @caughtexception;

        $r9 = new org.bouncycastle.x509.ExtCertificateEncodingException;

        specialinvoke $r9.<org.bouncycastle.x509.ExtCertificateEncodingException: void <init>(java.lang.String,java.lang.Throwable)>("exception producing certificate object", $r8);

        throw $r9;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.security.cert.CertificateParsingException from label4 to label5 with label6;
    }

    public java.security.cert.X509Certificate generate(java.security.PrivateKey, java.lang.String) throws java.security.cert.CertificateEncodingException, java.lang.IllegalStateException, java.security.NoSuchProviderException, java.security.NoSuchAlgorithmException, java.security.SignatureException, java.security.InvalidKeyException
    {
        java.security.cert.X509Certificate $r3;
        org.bouncycastle.x509.X509V3CertificateGenerator r0;
        java.security.PrivateKey r1;
        java.lang.String r2;

        r0 := @this: org.bouncycastle.x509.X509V3CertificateGenerator;

        r1 := @parameter0: java.security.PrivateKey;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<org.bouncycastle.x509.X509V3CertificateGenerator: java.security.cert.X509Certificate generate(java.security.PrivateKey,java.lang.String,java.security.SecureRandom)>(r1, r2, null);

        return $r3;
    }

    public java.security.cert.X509Certificate generate(java.security.PrivateKey, java.lang.String, java.security.SecureRandom) throws java.security.cert.CertificateEncodingException, java.lang.IllegalStateException, java.security.NoSuchProviderException, java.security.NoSuchAlgorithmException, java.security.SignatureException, java.security.InvalidKeyException
    {
        java.security.cert.X509Certificate $r8;
        byte[] $r7;
        org.bouncycastle.x509.X509V3CertificateGenerator r0;
        org.bouncycastle.asn1.x509.TBSCertificateStructure $r1;
        java.security.cert.CertificateParsingException $r9;
        java.io.IOException $r11;
        java.security.SecureRandom r4;
        java.security.PrivateKey r3;
        java.lang.String r2, $r5;
        org.bouncycastle.asn1.DERObjectIdentifier $r6;
        org.bouncycastle.x509.ExtCertificateEncodingException $r10, $r12;

        r0 := @this: org.bouncycastle.x509.X509V3CertificateGenerator;

        r3 := @parameter0: java.security.PrivateKey;

        r2 := @parameter1: java.lang.String;

        r4 := @parameter2: java.security.SecureRandom;

        $r1 = specialinvoke r0.<org.bouncycastle.x509.X509V3CertificateGenerator: org.bouncycastle.asn1.x509.TBSCertificateStructure generateTbsCert()>();

     label1:
        $r6 = r0.<org.bouncycastle.x509.X509V3CertificateGenerator: org.bouncycastle.asn1.DERObjectIdentifier sigOID>;

        $r5 = r0.<org.bouncycastle.x509.X509V3CertificateGenerator: java.lang.String signatureAlgorithm>;

        $r7 = staticinvoke <org.bouncycastle.x509.X509Util: byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)>($r6, $r5, r2, r3, r4, $r1);

     label2:
        goto label4;

     label3:
        $r11 := @caughtexception;

        $r12 = new org.bouncycastle.x509.ExtCertificateEncodingException;

        specialinvoke $r12.<org.bouncycastle.x509.ExtCertificateEncodingException: void <init>(java.lang.String,java.lang.Throwable)>("exception encoding TBS cert", $r11);

        throw $r12;

     label4:
        $r8 = specialinvoke r0.<org.bouncycastle.x509.X509V3CertificateGenerator: java.security.cert.X509Certificate generateJcaObject(org.bouncycastle.asn1.x509.TBSCertificateStructure,byte[])>($r1, $r7);

     label5:
        return $r8;

     label6:
        $r9 := @caughtexception;

        $r10 = new org.bouncycastle.x509.ExtCertificateEncodingException;

        specialinvoke $r10.<org.bouncycastle.x509.ExtCertificateEncodingException: void <init>(java.lang.String,java.lang.Throwable)>("exception producing certificate object", $r9);

        throw $r10;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.security.cert.CertificateParsingException from label4 to label5 with label6;
    }

    private org.bouncycastle.asn1.x509.TBSCertificateStructure generateTbsCert()
    {
        org.bouncycastle.asn1.x509.V3TBSCertificateGenerator $r2, $r5;
        org.bouncycastle.x509.X509V3CertificateGenerator r0;
        org.bouncycastle.asn1.x509.TBSCertificateStructure $r3;
        org.bouncycastle.asn1.x509.X509Extensions $r6;
        org.bouncycastle.asn1.x509.X509ExtensionsGenerator $r1, $r4;
        boolean $z0;

        r0 := @this: org.bouncycastle.x509.X509V3CertificateGenerator;

        $r1 = r0.<org.bouncycastle.x509.X509V3CertificateGenerator: org.bouncycastle.asn1.x509.X509ExtensionsGenerator extGenerator>;

        $z0 = virtualinvoke $r1.<org.bouncycastle.asn1.x509.X509ExtensionsGenerator: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r5 = r0.<org.bouncycastle.x509.X509V3CertificateGenerator: org.bouncycastle.asn1.x509.V3TBSCertificateGenerator tbsGen>;

        $r4 = r0.<org.bouncycastle.x509.X509V3CertificateGenerator: org.bouncycastle.asn1.x509.X509ExtensionsGenerator extGenerator>;

        $r6 = virtualinvoke $r4.<org.bouncycastle.asn1.x509.X509ExtensionsGenerator: org.bouncycastle.asn1.x509.X509Extensions generate()>();

        virtualinvoke $r5.<org.bouncycastle.asn1.x509.V3TBSCertificateGenerator: void setExtensions(org.bouncycastle.asn1.x509.X509Extensions)>($r6);

     label1:
        $r2 = r0.<org.bouncycastle.x509.X509V3CertificateGenerator: org.bouncycastle.asn1.x509.V3TBSCertificateGenerator tbsGen>;

        $r3 = virtualinvoke $r2.<org.bouncycastle.asn1.x509.V3TBSCertificateGenerator: org.bouncycastle.asn1.x509.TBSCertificateStructure generateTBSCertificate()>();

        return $r3;
    }

    private java.security.cert.X509Certificate generateJcaObject(org.bouncycastle.asn1.x509.TBSCertificateStructure, byte[]) throws java.security.cert.CertificateParsingException
    {
        byte[] r5;
        org.bouncycastle.x509.X509V3CertificateGenerator r2;
        org.bouncycastle.asn1.ASN1EncodableVector $r0;
        org.bouncycastle.asn1.x509.TBSCertificateStructure r1;
        org.bouncycastle.asn1.DERBitString $r4;
        org.bouncycastle.asn1.DERSequence $r8;
        org.bouncycastle.asn1.x509.X509CertificateStructure $r7;
        org.bouncycastle.asn1.x509.AlgorithmIdentifier $r3;
        org.bouncycastle.jce.provider.X509CertificateObject $r6;

        r2 := @this: org.bouncycastle.x509.X509V3CertificateGenerator;

        r1 := @parameter0: org.bouncycastle.asn1.x509.TBSCertificateStructure;

        r5 := @parameter1: byte[];

        $r0 = new org.bouncycastle.asn1.ASN1EncodableVector;

        specialinvoke $r0.<org.bouncycastle.asn1.ASN1EncodableVector: void <init>()>();

        virtualinvoke $r0.<org.bouncycastle.asn1.ASN1EncodableVector: void add(org.bouncycastle.asn1.DEREncodable)>(r1);

        $r3 = r2.<org.bouncycastle.x509.X509V3CertificateGenerator: org.bouncycastle.asn1.x509.AlgorithmIdentifier sigAlgId>;

        virtualinvoke $r0.<org.bouncycastle.asn1.ASN1EncodableVector: void add(org.bouncycastle.asn1.DEREncodable)>($r3);

        $r4 = new org.bouncycastle.asn1.DERBitString;

        specialinvoke $r4.<org.bouncycastle.asn1.DERBitString: void <init>(byte[])>(r5);

        virtualinvoke $r0.<org.bouncycastle.asn1.ASN1EncodableVector: void add(org.bouncycastle.asn1.DEREncodable)>($r4);

        $r6 = new org.bouncycastle.jce.provider.X509CertificateObject;

        $r7 = new org.bouncycastle.asn1.x509.X509CertificateStructure;

        $r8 = new org.bouncycastle.asn1.DERSequence;

        specialinvoke $r8.<org.bouncycastle.asn1.DERSequence: void <init>(org.bouncycastle.asn1.DEREncodableVector)>($r0);

        specialinvoke $r7.<org.bouncycastle.asn1.x509.X509CertificateStructure: void <init>(org.bouncycastle.asn1.ASN1Sequence)>($r8);

        specialinvoke $r6.<org.bouncycastle.jce.provider.X509CertificateObject: void <init>(org.bouncycastle.asn1.x509.X509CertificateStructure)>($r7);

        return $r6;
    }

    public java.util.Iterator getSignatureAlgNames()
    {
        java.util.Iterator $r0;
        org.bouncycastle.x509.X509V3CertificateGenerator r1;

        r1 := @this: org.bouncycastle.x509.X509V3CertificateGenerator;

        $r0 = staticinvoke <org.bouncycastle.x509.X509Util: java.util.Iterator getAlgNames()>();

        return $r0;
    }
}
