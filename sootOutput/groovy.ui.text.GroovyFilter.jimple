public class groovy.ui.text.GroovyFilter extends groovy.ui.text.StructuredSyntaxDocumentFilter
{
    private static final javax.swing.Action AUTO_TAB_ACTION;
    public static final java.lang.String COMMENT;
    public static final java.lang.String SLASH_STAR_COMMENT;
    public static final java.lang.String SLASH_SLASH_COMMENT;
    public static final java.lang.String QUOTES;
    public static final java.lang.String SINGLE_QUOTES;
    public static final java.lang.String SLASHY_QUOTES;
    public static final java.lang.String DIGIT;
    public static final java.lang.String IDENT;
    public static final java.lang.String OPERATION;
    public static final java.lang.String LEFT_PARENS;
    private static final java.awt.Color COMMENT_COLOR;
    public static final java.lang.String RESERVED_WORD;
    public static final java.lang.String[] RESERVED_WORDS;

    public void <init>(javax.swing.text.DefaultStyledDocument)
    {
        groovy.ui.text.GroovyFilter r0;
        javax.swing.text.DefaultStyledDocument r1;

        r0 := @this: groovy.ui.text.GroovyFilter;

        r1 := @parameter0: javax.swing.text.DefaultStyledDocument;

        specialinvoke r0.<groovy.ui.text.StructuredSyntaxDocumentFilter: void <init>(javax.swing.text.DefaultStyledDocument)>(r1);

        specialinvoke r0.<groovy.ui.text.GroovyFilter: void init()>();

        return;
    }

    private void init()
    {
        java.awt.Color $r3, $r5, $r6, $r7, $r9, $r10, $r11, $r13, $r14, $r16, $r17, $r21, $r22, $r23;
        groovy.ui.text.StructuredSyntaxDocumentFilter$LexerNode $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r35, $r36, $r37, $r39;
        java.lang.String[] $r34, $r38;
        javax.swing.text.StyleContext $r0;
        groovy.ui.text.GroovyFilter r25;
        javax.swing.text.Style $r1, $r2, $r4, $r8, $r12, $r15, $r18, $r19, $r20, $r24;

        r25 := @this: groovy.ui.text.GroovyFilter;

        $r0 = staticinvoke <javax.swing.text.StyleContext: javax.swing.text.StyleContext getDefaultStyleContext()>();

        $r1 = virtualinvoke $r0.<javax.swing.text.StyleContext: javax.swing.text.Style getStyle(java.lang.String)>("default");

        $r2 = virtualinvoke $r0.<javax.swing.text.StyleContext: javax.swing.text.Style addStyle(java.lang.String,javax.swing.text.Style)>("comment", $r1);

        $r3 = <groovy.ui.text.GroovyFilter: java.awt.Color COMMENT_COLOR>;

        staticinvoke <javax.swing.text.StyleConstants: void setForeground(javax.swing.text.MutableAttributeSet,java.awt.Color)>($r2, $r3);

        staticinvoke <javax.swing.text.StyleConstants: void setItalic(javax.swing.text.MutableAttributeSet,boolean)>($r2, 1);

        $r4 = virtualinvoke $r0.<javax.swing.text.StyleContext: javax.swing.text.Style addStyle(java.lang.String,javax.swing.text.Style)>("(?ms:\"{3}(?!\\\"{1,3}).*?(?:\"{3}|\\z))|(?:\"{1}(?!\\\").*?(?:\"|\\Z))", $r1);

        $r5 = <java.awt.Color: java.awt.Color MAGENTA>;

        $r6 = virtualinvoke $r5.<java.awt.Color: java.awt.Color darker()>();

        $r7 = virtualinvoke $r6.<java.awt.Color: java.awt.Color darker()>();

        staticinvoke <javax.swing.text.StyleConstants: void setForeground(javax.swing.text.MutableAttributeSet,java.awt.Color)>($r4, $r7);

        $r8 = virtualinvoke $r0.<javax.swing.text.StyleContext: javax.swing.text.Style addStyle(java.lang.String,javax.swing.text.Style)>("(?ms:\'{3}(?!\'{1,3}).*?(?:\'{3}|\\z))|(?:\'[^\'].*?(?:\'|\\z))", $r1);

        $r9 = <java.awt.Color: java.awt.Color GREEN>;

        $r10 = virtualinvoke $r9.<java.awt.Color: java.awt.Color darker()>();

        $r11 = virtualinvoke $r10.<java.awt.Color: java.awt.Color darker()>();

        staticinvoke <javax.swing.text.StyleConstants: void setForeground(javax.swing.text.MutableAttributeSet,java.awt.Color)>($r8, $r11);

        $r12 = virtualinvoke $r0.<javax.swing.text.StyleContext: javax.swing.text.Style addStyle(java.lang.String,javax.swing.text.Style)>("/[^/*].*?/", $r1);

        $r13 = <java.awt.Color: java.awt.Color ORANGE>;

        $r14 = virtualinvoke $r13.<java.awt.Color: java.awt.Color darker()>();

        staticinvoke <javax.swing.text.StyleConstants: void setForeground(javax.swing.text.MutableAttributeSet,java.awt.Color)>($r12, $r14);

        $r15 = virtualinvoke $r0.<javax.swing.text.StyleContext: javax.swing.text.Style addStyle(java.lang.String,javax.swing.text.Style)>("\\d+?[efld]?", $r1);

        $r16 = <java.awt.Color: java.awt.Color RED>;

        $r17 = virtualinvoke $r16.<java.awt.Color: java.awt.Color darker()>();

        staticinvoke <javax.swing.text.StyleConstants: void setForeground(javax.swing.text.MutableAttributeSet,java.awt.Color)>($r15, $r17);

        $r18 = virtualinvoke $r0.<javax.swing.text.StyleContext: javax.swing.text.Style addStyle(java.lang.String,javax.swing.text.Style)>("[\\w\\$&&[\\D]][\\w\\$]* *\\(", $r1);

        staticinvoke <javax.swing.text.StyleConstants: void setBold(javax.swing.text.MutableAttributeSet,boolean)>($r18, 1);

        $r19 = virtualinvoke $r0.<javax.swing.text.StyleContext: javax.swing.text.Style addStyle(java.lang.String,javax.swing.text.Style)>("[\\w\\$&&[\\D]][\\w\\$]*", $r1);

        $r20 = virtualinvoke $r0.<javax.swing.text.StyleContext: javax.swing.text.Style addStyle(java.lang.String,javax.swing.text.Style)>("reserved", $r1);

        staticinvoke <javax.swing.text.StyleConstants: void setBold(javax.swing.text.MutableAttributeSet,boolean)>($r20, 1);

        $r21 = <java.awt.Color: java.awt.Color BLUE>;

        $r22 = virtualinvoke $r21.<java.awt.Color: java.awt.Color darker()>();

        $r23 = virtualinvoke $r22.<java.awt.Color: java.awt.Color darker()>();

        staticinvoke <javax.swing.text.StyleConstants: void setForeground(javax.swing.text.MutableAttributeSet,java.awt.Color)>($r20, $r23);

        $r24 = virtualinvoke $r0.<javax.swing.text.StyleContext: javax.swing.text.Style addStyle(java.lang.String,javax.swing.text.Style)>("[\\w\\$&&[\\D]][\\w\\$]*", $r1);

        $r26 = virtualinvoke r25.<groovy.ui.text.GroovyFilter: groovy.ui.text.StructuredSyntaxDocumentFilter$LexerNode getRootNode()>();

        virtualinvoke $r26.<groovy.ui.text.StructuredSyntaxDocumentFilter$LexerNode: void putStyle(java.lang.String,javax.swing.text.Style)>("/\\*(?s:.)*?(?:\\*/|\\z)", $r2);

        $r27 = virtualinvoke r25.<groovy.ui.text.GroovyFilter: groovy.ui.text.StructuredSyntaxDocumentFilter$LexerNode getRootNode()>();

        virtualinvoke $r27.<groovy.ui.text.StructuredSyntaxDocumentFilter$LexerNode: void putStyle(java.lang.String,javax.swing.text.Style)>("//.*", $r2);

        $r28 = virtualinvoke r25.<groovy.ui.text.GroovyFilter: groovy.ui.text.StructuredSyntaxDocumentFilter$LexerNode getRootNode()>();

        virtualinvoke $r28.<groovy.ui.text.StructuredSyntaxDocumentFilter$LexerNode: void putStyle(java.lang.String,javax.swing.text.Style)>("(?ms:\"{3}(?!\\\"{1,3}).*?(?:\"{3}|\\z))|(?:\"{1}(?!\\\").*?(?:\"|\\Z))", $r4);

        $r29 = virtualinvoke r25.<groovy.ui.text.GroovyFilter: groovy.ui.text.StructuredSyntaxDocumentFilter$LexerNode getRootNode()>();

        virtualinvoke $r29.<groovy.ui.text.StructuredSyntaxDocumentFilter$LexerNode: void putStyle(java.lang.String,javax.swing.text.Style)>("(?ms:\'{3}(?!\'{1,3}).*?(?:\'{3}|\\z))|(?:\'[^\'].*?(?:\'|\\z))", $r8);

        $r30 = virtualinvoke r25.<groovy.ui.text.GroovyFilter: groovy.ui.text.StructuredSyntaxDocumentFilter$LexerNode getRootNode()>();

        virtualinvoke $r30.<groovy.ui.text.StructuredSyntaxDocumentFilter$LexerNode: void putStyle(java.lang.String,javax.swing.text.Style)>("/[^/*].*?/", $r12);

        $r31 = virtualinvoke r25.<groovy.ui.text.GroovyFilter: groovy.ui.text.StructuredSyntaxDocumentFilter$LexerNode getRootNode()>();

        virtualinvoke $r31.<groovy.ui.text.StructuredSyntaxDocumentFilter$LexerNode: void putStyle(java.lang.String,javax.swing.text.Style)>("\\d+?[efld]?", $r15);

        $r32 = virtualinvoke r25.<groovy.ui.text.GroovyFilter: groovy.ui.text.StructuredSyntaxDocumentFilter$LexerNode getRootNode()>();

        virtualinvoke $r32.<groovy.ui.text.StructuredSyntaxDocumentFilter$LexerNode: void putStyle(java.lang.String,javax.swing.text.Style)>("[\\w\\$&&[\\D]][\\w\\$]* *\\(", $r18);

        $r33 = virtualinvoke r25.<groovy.ui.text.GroovyFilter: groovy.ui.text.StructuredSyntaxDocumentFilter$LexerNode createLexerNode()>();

        $r34 = <groovy.ui.text.GroovyFilter: java.lang.String[] RESERVED_WORDS>;

        virtualinvoke $r33.<groovy.ui.text.StructuredSyntaxDocumentFilter$LexerNode: void putStyle(java.lang.String[],javax.swing.text.Style)>($r34, $r20);

        virtualinvoke $r33.<groovy.ui.text.StructuredSyntaxDocumentFilter$LexerNode: void putStyle(java.lang.String,javax.swing.text.Style)>("\\(", $r24);

        $r35 = virtualinvoke r25.<groovy.ui.text.GroovyFilter: groovy.ui.text.StructuredSyntaxDocumentFilter$LexerNode getRootNode()>();

        virtualinvoke $r35.<groovy.ui.text.StructuredSyntaxDocumentFilter$LexerNode: void putChild(java.lang.String,groovy.ui.text.StructuredSyntaxDocumentFilter$LexerNode)>("[\\w\\$&&[\\D]][\\w\\$]* *\\(", $r33);

        $r36 = virtualinvoke r25.<groovy.ui.text.GroovyFilter: groovy.ui.text.StructuredSyntaxDocumentFilter$LexerNode getRootNode()>();

        virtualinvoke $r36.<groovy.ui.text.StructuredSyntaxDocumentFilter$LexerNode: void putStyle(java.lang.String,javax.swing.text.Style)>("[\\w\\$&&[\\D]][\\w\\$]*", $r19);

        $r37 = virtualinvoke r25.<groovy.ui.text.GroovyFilter: groovy.ui.text.StructuredSyntaxDocumentFilter$LexerNode createLexerNode()>();

        $r38 = <groovy.ui.text.GroovyFilter: java.lang.String[] RESERVED_WORDS>;

        virtualinvoke $r37.<groovy.ui.text.StructuredSyntaxDocumentFilter$LexerNode: void putStyle(java.lang.String[],javax.swing.text.Style)>($r38, $r20);

        $r39 = virtualinvoke r25.<groovy.ui.text.GroovyFilter: groovy.ui.text.StructuredSyntaxDocumentFilter$LexerNode getRootNode()>();

        virtualinvoke $r39.<groovy.ui.text.StructuredSyntaxDocumentFilter$LexerNode: void putChild(java.lang.String,groovy.ui.text.StructuredSyntaxDocumentFilter$LexerNode)>("[\\w\\$&&[\\D]][\\w\\$]*", $r37);

        return;
    }

    public static void installAutoTabAction(javax.swing.text.JTextComponent)
    {
        javax.swing.KeyStroke $r3;
        javax.swing.Action $r2;
        javax.swing.InputMap $r4;
        javax.swing.text.JTextComponent r0;
        javax.swing.ActionMap $r1;

        r0 := @parameter0: javax.swing.text.JTextComponent;

        $r1 = virtualinvoke r0.<javax.swing.text.JTextComponent: javax.swing.ActionMap getActionMap()>();

        $r2 = <groovy.ui.text.GroovyFilter: javax.swing.Action AUTO_TAB_ACTION>;

        virtualinvoke $r1.<javax.swing.ActionMap: void put(java.lang.Object,javax.swing.Action)>("GroovyFilter-autoTab", $r2);

        $r3 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int,boolean)>(10, 0, 0);

        $r4 = virtualinvoke r0.<javax.swing.text.JTextComponent: javax.swing.InputMap getInputMap()>();

        virtualinvoke $r4.<javax.swing.InputMap: void put(javax.swing.KeyStroke,java.lang.Object)>($r3, "GroovyFilter-autoTab");

        return;
    }

    static java.awt.Color access$100()
    {
        java.awt.Color $r0;

        $r0 = <groovy.ui.text.GroovyFilter: java.awt.Color COMMENT_COLOR>;

        return $r0;
    }

    static void <clinit>()
    {
        java.awt.Color $r1, $r2, $r3;
        groovy.ui.text.GroovyFilter$AutoTabAction $r0;
        java.lang.String[] $r4;

        <groovy.ui.text.GroovyFilter: java.lang.String RESERVED_WORD> = "reserved";

        <groovy.ui.text.GroovyFilter: java.lang.String LEFT_PARENS> = "\\(";

        <groovy.ui.text.GroovyFilter: java.lang.String OPERATION> = "[\\w\\$&&[\\D]][\\w\\$]* *\\(";

        <groovy.ui.text.GroovyFilter: java.lang.String IDENT> = "[\\w\\$&&[\\D]][\\w\\$]*";

        <groovy.ui.text.GroovyFilter: java.lang.String DIGIT> = "\\d+?[efld]?";

        <groovy.ui.text.GroovyFilter: java.lang.String SLASHY_QUOTES> = "/[^/*].*?/";

        <groovy.ui.text.GroovyFilter: java.lang.String SINGLE_QUOTES> = "(?ms:\'{3}(?!\'{1,3}).*?(?:\'{3}|\\z))|(?:\'[^\'].*?(?:\'|\\z))";

        <groovy.ui.text.GroovyFilter: java.lang.String QUOTES> = "(?ms:\"{3}(?!\\\"{1,3}).*?(?:\"{3}|\\z))|(?:\"{1}(?!\\\").*?(?:\"|\\Z))";

        <groovy.ui.text.GroovyFilter: java.lang.String SLASH_SLASH_COMMENT> = "//.*";

        <groovy.ui.text.GroovyFilter: java.lang.String SLASH_STAR_COMMENT> = "/\\*(?s:.)*?(?:\\*/|\\z)";

        <groovy.ui.text.GroovyFilter: java.lang.String COMMENT> = "comment";

        $r0 = new groovy.ui.text.GroovyFilter$AutoTabAction;

        specialinvoke $r0.<groovy.ui.text.GroovyFilter$AutoTabAction: void <init>(groovy.ui.text.GroovyFilter$1)>(null);

        <groovy.ui.text.GroovyFilter: javax.swing.Action AUTO_TAB_ACTION> = $r0;

        $r1 = <java.awt.Color: java.awt.Color LIGHT_GRAY>;

        $r2 = virtualinvoke $r1.<java.awt.Color: java.awt.Color darker()>();

        $r3 = virtualinvoke $r2.<java.awt.Color: java.awt.Color darker()>();

        <groovy.ui.text.GroovyFilter: java.awt.Color COMMENT_COLOR> = $r3;

        $r4 = newarray (java.lang.String)[54];

        $r4[0] = "\\babstract\\b";

        $r4[1] = "\\bassert\\b";

        $r4[2] = "\\bdefault\\b";

        $r4[3] = "\\bif\\b";

        $r4[4] = "\\bprivate\\b";

        $r4[5] = "\\bthis\\b";

        $r4[6] = "\\bboolean\\b";

        $r4[7] = "\\bdo\\b";

        $r4[8] = "\\bimplements\\b";

        $r4[9] = "\\bprotected\\b";

        $r4[10] = "\\bthrow\\b";

        $r4[11] = "\\bbreak\\b";

        $r4[12] = "\\bdouble\\b";

        $r4[13] = "\\bimport\\b";

        $r4[14] = "\\bpublic\\b";

        $r4[15] = "\\bthrows\\b";

        $r4[16] = "\\bbyte\\b";

        $r4[17] = "\\belse\\b";

        $r4[18] = "\\binstanceof\\b";

        $r4[19] = "\\breturn\\b";

        $r4[20] = "\\btransient\\b";

        $r4[21] = "\\bcase\\b";

        $r4[22] = "\\bextends\\b";

        $r4[23] = "\\bint\\b";

        $r4[24] = "\\bshort\\b";

        $r4[25] = "\\btry\\b";

        $r4[26] = "\\bcatch\\b";

        $r4[27] = "\\bfinal\\b";

        $r4[28] = "\\binterface\\b";

        $r4[29] = "\\benum\\b";

        $r4[30] = "\\bstatic\\b";

        $r4[31] = "\\bvoid\\b";

        $r4[32] = "\\bchar\\b";

        $r4[33] = "\\bfinally\\b";

        $r4[34] = "\\blong\\b";

        $r4[35] = "\\bstrictfp\\b";

        $r4[36] = "\\bvolatile\\b";

        $r4[37] = "\\bclass\\b";

        $r4[38] = "\\bfloat\\b";

        $r4[39] = "\\bnative\\b";

        $r4[40] = "\\bsuper\\b";

        $r4[41] = "\\bwhile\\b";

        $r4[42] = "\\bconst\\b";

        $r4[43] = "\\bfor\\b";

        $r4[44] = "\\bnew\\b";

        $r4[45] = "\\bswitch\\b";

        $r4[46] = "\\bcontinue\\b";

        $r4[47] = "\\bgoto\\b";

        $r4[48] = "\\bpackage\\b";

        $r4[49] = "\\bdef\\b";

        $r4[50] = "\\bas\\b";

        $r4[51] = "\\bin\\b";

        $r4[52] = "\\bsynchronized\\b";

        $r4[53] = "\\bnull\\b";

        <groovy.ui.text.GroovyFilter: java.lang.String[] RESERVED_WORDS> = $r4;

        return;
    }
}
