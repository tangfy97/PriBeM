public class tdb.tdbdump extends tdb.cmdline.CmdTDB
{

    public static transient void main(java.lang.String[])
    {
        java.lang.String[] r1;
        tdb.tdbdump $r0;

        r1 := @parameter0: java.lang.String[];

        staticinvoke <tdb.cmdline.CmdTDB: void init()>();

        $r0 = new tdb.tdbdump;

        specialinvoke $r0.<tdb.tdbdump: void <init>(java.lang.String[])>(r1);

        virtualinvoke $r0.<tdb.tdbdump: void mainRun()>();

        return;
    }

    protected void <init>(java.lang.String[])
    {
        java.lang.String[] r1;
        tdb.tdbdump r0;

        r0 := @this: tdb.tdbdump;

        r1 := @parameter0: java.lang.String[];

        specialinvoke r0.<tdb.cmdline.CmdTDB: void <init>(java.lang.String[])>(r1);

        return;
    }

    protected java.lang.String getSummary()
    {
        java.lang.StringBuilder $r0, $r3, $r4;
        java.lang.String $r2, $r5;
        tdb.tdbdump r1;

        r1 := @this: tdb.tdbdump;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<tdb.tdbdump: java.lang.String getCommandName()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : Write N-Quads to stdout");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    protected void exec()
    {
        java.io.PrintStream $r3;
        org.apache.jena.riot.Lang $r2;
        com.hp.hpl.jena.tdb.store.DatasetGraphTDB $r1;
        tdb.tdbdump r0;

        r0 := @this: tdb.tdbdump;

        $r1 = specialinvoke r0.<tdb.cmdline.CmdTDB: com.hp.hpl.jena.tdb.store.DatasetGraphTDB getDatasetGraphTDB()>();

        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r2 = <org.apache.jena.riot.Lang: org.apache.jena.riot.Lang NQUADS>;

        staticinvoke <org.apache.jena.riot.RDFDataMgr: void write(java.io.OutputStream,com.hp.hpl.jena.sparql.core.DatasetGraph,org.apache.jena.riot.Lang)>($r3, $r1, $r2);

        return;
    }
}
