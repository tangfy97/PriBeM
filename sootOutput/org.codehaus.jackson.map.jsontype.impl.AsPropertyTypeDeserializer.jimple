public class org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeDeserializer extends org.codehaus.jackson.map.jsontype.impl.AsArrayTypeDeserializer
{
    protected final java.lang.String _typePropertyName;

    public void <init>(org.codehaus.jackson.type.JavaType, org.codehaus.jackson.map.jsontype.TypeIdResolver, org.codehaus.jackson.map.BeanProperty, java.lang.String)
    {
        org.codehaus.jackson.map.jsontype.TypeIdResolver r2;
        org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeDeserializer r0;
        org.codehaus.jackson.type.JavaType r1;
        java.lang.String r4;
        org.codehaus.jackson.map.BeanProperty r3;

        r0 := @this: org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeDeserializer;

        r1 := @parameter0: org.codehaus.jackson.type.JavaType;

        r2 := @parameter1: org.codehaus.jackson.map.jsontype.TypeIdResolver;

        r3 := @parameter2: org.codehaus.jackson.map.BeanProperty;

        r4 := @parameter3: java.lang.String;

        specialinvoke r0.<org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeDeserializer: void <init>(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.jsontype.TypeIdResolver,org.codehaus.jackson.map.BeanProperty,java.lang.Class,java.lang.String)>(r1, r2, r3, null, r4);

        return;
    }

    public void <init>(org.codehaus.jackson.type.JavaType, org.codehaus.jackson.map.jsontype.TypeIdResolver, org.codehaus.jackson.map.BeanProperty, java.lang.Class, java.lang.String)
    {
        org.codehaus.jackson.map.jsontype.TypeIdResolver r2;
        org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeDeserializer r0;
        org.codehaus.jackson.type.JavaType r1;
        java.lang.Class r4;
        java.lang.String r5;
        org.codehaus.jackson.map.BeanProperty r3;

        r0 := @this: org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeDeserializer;

        r1 := @parameter0: org.codehaus.jackson.type.JavaType;

        r2 := @parameter1: org.codehaus.jackson.map.jsontype.TypeIdResolver;

        r3 := @parameter2: org.codehaus.jackson.map.BeanProperty;

        r4 := @parameter3: java.lang.Class;

        r5 := @parameter4: java.lang.String;

        specialinvoke r0.<org.codehaus.jackson.map.jsontype.impl.AsArrayTypeDeserializer: void <init>(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.jsontype.TypeIdResolver,org.codehaus.jackson.map.BeanProperty,java.lang.Class)>(r1, r2, r3, r4);

        r0.<org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeDeserializer: java.lang.String _typePropertyName> = r5;

        return;
    }

    public org.codehaus.jackson.annotate.JsonTypeInfo$As getTypeInclusion()
    {
        org.codehaus.jackson.annotate.JsonTypeInfo$As $r0;
        org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeDeserializer r1;

        r1 := @this: org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeDeserializer;

        $r0 = <org.codehaus.jackson.annotate.JsonTypeInfo$As: org.codehaus.jackson.annotate.JsonTypeInfo$As PROPERTY>;

        return $r0;
    }

    public java.lang.String getPropertyName()
    {
        java.lang.String $r1;
        org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeDeserializer r0;

        r0 := @this: org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeDeserializer;

        $r1 = r0.<org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeDeserializer: java.lang.String _typePropertyName>;

        return $r1;
    }

    public java.lang.Object deserializeTypedFromObject(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.JsonToken $r0, $r1, $r2, $r3, r17, $r19;
        org.codehaus.jackson.util.TokenBuffer $r9, r18;
        org.codehaus.jackson.map.DeserializationContext r5;
        org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeDeserializer r4;
        org.codehaus.jackson.map.JsonDeserializer $r11;
        java.lang.String $r7, $r8, $r10;
        org.codehaus.jackson.JsonParser $r13, r16;
        boolean $z0;
        java.lang.Object $r6, $r12, $r14, $r15;

        r4 := @this: org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeDeserializer;

        r16 := @parameter0: org.codehaus.jackson.JsonParser;

        r5 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r0 = virtualinvoke r16.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken getCurrentToken()>();

        r17 = $r0;

        $r1 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken START_OBJECT>;

        if $r0 != $r1 goto label1;

        r17 = virtualinvoke r16.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        goto label3;

     label1:
        $r2 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken START_ARRAY>;

        if $r0 != $r2 goto label2;

        $r15 = virtualinvoke r4.<org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeDeserializer: java.lang.Object _deserializeTypedUsingDefaultImpl(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.util.TokenBuffer)>(r16, r5, null);

        return $r15;

     label2:
        $r3 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken FIELD_NAME>;

        if $r0 == $r3 goto label3;

        $r14 = virtualinvoke r4.<org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeDeserializer: java.lang.Object _deserializeTypedUsingDefaultImpl(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.util.TokenBuffer)>(r16, r5, null);

        return $r14;

     label3:
        r18 = null;

     label4:
        $r19 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken FIELD_NAME>;

        if r17 != $r19 goto label8;

        $r7 = virtualinvoke r16.<org.codehaus.jackson.JsonParser: java.lang.String getCurrentName()>();

        virtualinvoke r16.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        $r8 = r4.<org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeDeserializer: java.lang.String _typePropertyName>;

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label6;

        $r10 = virtualinvoke r16.<org.codehaus.jackson.JsonParser: java.lang.String getText()>();

        $r11 = virtualinvoke r4.<org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeDeserializer: org.codehaus.jackson.map.JsonDeserializer _findDeserializer(org.codehaus.jackson.map.DeserializationContext,java.lang.String)>(r5, $r10);

        if r18 == null goto label5;

        $r13 = virtualinvoke r18.<org.codehaus.jackson.util.TokenBuffer: org.codehaus.jackson.JsonParser asParser(org.codehaus.jackson.JsonParser)>(r16);

        r16 = staticinvoke <org.codehaus.jackson.util.JsonParserSequence: org.codehaus.jackson.util.JsonParserSequence createFlattened(org.codehaus.jackson.JsonParser,org.codehaus.jackson.JsonParser)>($r13, r16);

     label5:
        virtualinvoke r16.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        $r12 = virtualinvoke $r11.<org.codehaus.jackson.map.JsonDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r16, r5);

        return $r12;

     label6:
        if r18 != null goto label7;

        $r9 = new org.codehaus.jackson.util.TokenBuffer;

        specialinvoke $r9.<org.codehaus.jackson.util.TokenBuffer: void <init>(org.codehaus.jackson.ObjectCodec)>(null);

        r18 = $r9;

     label7:
        virtualinvoke r18.<org.codehaus.jackson.util.TokenBuffer: void writeFieldName(java.lang.String)>($r7);

        virtualinvoke r18.<org.codehaus.jackson.util.TokenBuffer: void copyCurrentStructure(org.codehaus.jackson.JsonParser)>(r16);

        r17 = virtualinvoke r16.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        goto label4;

     label8:
        $r6 = virtualinvoke r4.<org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeDeserializer: java.lang.Object _deserializeTypedUsingDefaultImpl(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.util.TokenBuffer)>(r16, r5, r18);

        return $r6;
    }

    protected java.lang.Object _deserializeTypedUsingDefaultImpl(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext, org.codehaus.jackson.util.TokenBuffer) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.JsonToken $r4, $r5, $r7;
        org.codehaus.jackson.util.TokenBuffer r19;
        org.codehaus.jackson.map.DeserializationContext r2;
        org.codehaus.jackson.map.JsonMappingException $r16;
        org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeDeserializer r0;
        org.codehaus.jackson.type.JavaType $r1;
        org.codehaus.jackson.map.JsonDeserializer $r18;
        java.lang.String $r9, $r12, $r15;
        org.codehaus.jackson.JsonParser $r21, r22;
        java.lang.Object $r3, $r17, $r20;
        java.lang.StringBuilder $r6, $r8, $r10, $r11, $r13, $r14;

        r0 := @this: org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeDeserializer;

        r22 := @parameter0: org.codehaus.jackson.JsonParser;

        r2 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        r19 := @parameter2: org.codehaus.jackson.util.TokenBuffer;

        $r1 = r0.<org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeDeserializer: org.codehaus.jackson.type.JavaType _defaultImpl>;

        if $r1 == null goto label2;

        $r18 = virtualinvoke r0.<org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeDeserializer: org.codehaus.jackson.map.JsonDeserializer _findDefaultImplDeserializer(org.codehaus.jackson.map.DeserializationContext)>(r2);

        if r19 == null goto label1;

        virtualinvoke r19.<org.codehaus.jackson.util.TokenBuffer: void writeEndObject()>();

        $r21 = virtualinvoke r19.<org.codehaus.jackson.util.TokenBuffer: org.codehaus.jackson.JsonParser asParser(org.codehaus.jackson.JsonParser)>(r22);

        r22 = $r21;

        virtualinvoke $r21.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

     label1:
        $r20 = virtualinvoke $r18.<org.codehaus.jackson.map.JsonDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r22, r2);

        return $r20;

     label2:
        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeDeserializer: java.lang.Object _deserializeIfNatural(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r22, r2);

        if $r3 == null goto label3;

        return $r3;

     label3:
        $r4 = virtualinvoke r22.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken getCurrentToken()>();

        $r5 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken START_ARRAY>;

        if $r4 != $r5 goto label4;

        $r17 = specialinvoke r0.<org.codehaus.jackson.map.jsontype.impl.AsArrayTypeDeserializer: java.lang.Object deserializeTypedFromAny(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r22, r2);

        return $r17;

     label4:
        $r7 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken FIELD_NAME>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("missing property \'");

        $r9 = r0.<org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeDeserializer: java.lang.String _typePropertyName>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' that is to contain type id  (for class ");

        $r12 = virtualinvoke r0.<org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeDeserializer: java.lang.String baseTypeName()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = virtualinvoke r2.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.JsonMappingException wrongTokenException(org.codehaus.jackson.JsonParser,org.codehaus.jackson.JsonToken,java.lang.String)>(r22, $r7, $r15);

        throw $r16;
    }

    public java.lang.Object deserializeTypedFromAny(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.JsonToken $r1, $r2;
        org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeDeserializer r3;
        java.lang.Object $r5, $r6;
        org.codehaus.jackson.JsonParser r0;
        org.codehaus.jackson.map.DeserializationContext r4;

        r3 := @this: org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeDeserializer;

        r0 := @parameter0: org.codehaus.jackson.JsonParser;

        r4 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken getCurrentToken()>();

        $r2 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken START_ARRAY>;

        if $r1 != $r2 goto label1;

        $r6 = specialinvoke r3.<org.codehaus.jackson.map.jsontype.impl.AsArrayTypeDeserializer: java.lang.Object deserializeTypedFromArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r0, r4);

        return $r6;

     label1:
        $r5 = virtualinvoke r3.<org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeDeserializer: java.lang.Object deserializeTypedFromObject(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r0, r4);

        return $r5;
    }

    protected java.lang.Object _deserializeIfNatural(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.JsonToken $r2;
        java.lang.Double $r12;
        java.lang.Integer $r15;
        org.codehaus.jackson.map.DeserializationContext r19;
        org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeDeserializer r3;
        int[] $r1;
        int $i0, $i1, $i2;
        org.codehaus.jackson.type.JavaType $r4, $r7, $r10, $r13, $r16;
        java.lang.Boolean $r6, $r9;
        java.lang.String $r18;
        org.codehaus.jackson.JsonParser r0;
        boolean $z0, $z1, $z2, $z3, $z4;
        double $d0;
        java.lang.Class $r5, $r8, $r11, $r14, $r17;

        r3 := @this: org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeDeserializer;

        r0 := @parameter0: org.codehaus.jackson.JsonParser;

        r19 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r1 = <org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeDeserializer$1: int[] $SwitchMap$org$codehaus$jackson$JsonToken>;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken getCurrentToken()>();

        $i0 = virtualinvoke $r2.<org.codehaus.jackson.JsonToken: int ordinal()>();

        $i1 = $r1[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            case 5: goto label5;
            default: goto label6;
        };

     label1:
        $r16 = r3.<org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeDeserializer: org.codehaus.jackson.type.JavaType _baseType>;

        $r17 = virtualinvoke $r16.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        $z4 = virtualinvoke $r17.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(class "Ljava/lang/String;");

        if $z4 == 0 goto label6;

        $r18 = virtualinvoke r0.<org.codehaus.jackson.JsonParser: java.lang.String getText()>();

        return $r18;

     label2:
        $r13 = r3.<org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeDeserializer: org.codehaus.jackson.type.JavaType _baseType>;

        $r14 = virtualinvoke $r13.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        $z3 = virtualinvoke $r14.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(class "Ljava/lang/Integer;");

        if $z3 == 0 goto label6;

        $i2 = virtualinvoke r0.<org.codehaus.jackson.JsonParser: int getIntValue()>();

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        return $r15;

     label3:
        $r10 = r3.<org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeDeserializer: org.codehaus.jackson.type.JavaType _baseType>;

        $r11 = virtualinvoke $r10.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        $z2 = virtualinvoke $r11.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(class "Ljava/lang/Double;");

        if $z2 == 0 goto label6;

        $d0 = virtualinvoke r0.<org.codehaus.jackson.JsonParser: double getDoubleValue()>();

        $r12 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r12;

     label4:
        $r7 = r3.<org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeDeserializer: org.codehaus.jackson.type.JavaType _baseType>;

        $r8 = virtualinvoke $r7.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        $z1 = virtualinvoke $r8.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(class "Ljava/lang/Boolean;");

        if $z1 == 0 goto label6;

        $r9 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        return $r9;

     label5:
        $r4 = r3.<org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeDeserializer: org.codehaus.jackson.type.JavaType _baseType>;

        $r5 = virtualinvoke $r4.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        $z0 = virtualinvoke $r5.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(class "Ljava/lang/Boolean;");

        if $z0 == 0 goto label6;

        $r6 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        return $r6;

     label6:
        return null;
    }
}
