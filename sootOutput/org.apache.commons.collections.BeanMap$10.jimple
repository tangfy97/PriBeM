class org.apache.commons.collections.BeanMap$10 extends java.lang.Object implements java.util.Iterator
{
    private final java.util.Iterator val$iter;
    private final org.apache.commons.collections.BeanMap this$0;

    void <init>(org.apache.commons.collections.BeanMap, java.util.Iterator)
    {
        org.apache.commons.collections.BeanMap$10 r0;
        java.util.Iterator r2;
        org.apache.commons.collections.BeanMap r1;

        r0 := @this: org.apache.commons.collections.BeanMap$10;

        r1 := @parameter0: org.apache.commons.collections.BeanMap;

        r2 := @parameter1: java.util.Iterator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.collections.BeanMap$10: org.apache.commons.collections.BeanMap this$0> = r1;

        r0.<org.apache.commons.collections.BeanMap$10: java.util.Iterator val$iter> = r2;

        return;
    }

    public boolean hasNext()
    {
        org.apache.commons.collections.BeanMap$10 r0;
        java.util.Iterator $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.BeanMap$10;

        $r1 = r0.<org.apache.commons.collections.BeanMap$10: java.util.Iterator val$iter>;

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        return $z0;
    }

    public java.lang.Object next()
    {
        org.apache.commons.collections.BeanMap$10 r0;
        java.util.Iterator $r1;
        java.lang.Object $r2, $r4;
        org.apache.commons.collections.BeanMap $r3;

        r0 := @this: org.apache.commons.collections.BeanMap$10;

        $r1 = r0.<org.apache.commons.collections.BeanMap$10: java.util.Iterator val$iter>;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r3 = r0.<org.apache.commons.collections.BeanMap$10: org.apache.commons.collections.BeanMap this$0>;

        $r4 = virtualinvoke $r3.<org.apache.commons.collections.BeanMap: java.lang.Object get(java.lang.Object)>($r2);

        return $r4;
    }

    public void remove()
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.commons.collections.BeanMap$10 r1;

        r1 := @this: org.apache.commons.collections.BeanMap$10;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("remove() not supported for BeanMap");

        throw $r0;
    }
}
