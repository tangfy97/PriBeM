public final class org.waveprotocol.wave.model.testing.Response$ResponseAnswer extends java.lang.Object implements org.mockito.stubbing.Answer
{
    private final java.lang.Object response;

    void <init>(java.lang.Object)
    {
        java.lang.Object r1;
        org.waveprotocol.wave.model.testing.Response$ResponseAnswer r0;

        r0 := @this: org.waveprotocol.wave.model.testing.Response$ResponseAnswer;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.model.testing.Response$ResponseAnswer: java.lang.Object response> = r1;

        return;
    }

    public java.lang.Object answer(org.mockito.invocation.InvocationOnMock) throws java.lang.Throwable
    {
        java.lang.Object $r1;
        org.mockito.invocation.InvocationOnMock r2;
        org.waveprotocol.wave.model.testing.Response$ResponseAnswer r0;

        r0 := @this: org.waveprotocol.wave.model.testing.Response$ResponseAnswer;

        r2 := @parameter0: org.mockito.invocation.InvocationOnMock;

        $r1 = r0.<org.waveprotocol.wave.model.testing.Response$ResponseAnswer: java.lang.Object response>;

        return $r1;
    }
}
