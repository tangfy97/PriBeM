public abstract class kodkod.ast.LeafExpression extends kodkod.ast.Expression
{
    private final int arity;
    private final java.lang.String name;

    void <init>(java.lang.String, int)
    {
        int i0;
        kodkod.ast.LeafExpression r0;
        java.lang.StringBuilder $r3, $r4;
        java.lang.String r1, $r5;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: kodkod.ast.LeafExpression;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<kodkod.ast.Expression: void <init>()>();

        if i0 >= 1 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("Arity must be at least 1: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r2;

     label1:
        r0.<kodkod.ast.LeafExpression: java.lang.String name> = r1;

        r0.<kodkod.ast.LeafExpression: int arity> = i0;

        return;
    }

    public final int arity()
    {
        int $i0;
        kodkod.ast.LeafExpression r0;

        r0 := @this: kodkod.ast.LeafExpression;

        $i0 = r0.<kodkod.ast.LeafExpression: int arity>;

        return $i0;
    }

    public final java.lang.String name()
    {
        kodkod.ast.LeafExpression r0;
        java.lang.String $r1;

        r0 := @this: kodkod.ast.LeafExpression;

        $r1 = r0.<kodkod.ast.LeafExpression: java.lang.String name>;

        return $r1;
    }

    public java.lang.String toString()
    {
        kodkod.ast.LeafExpression r0;
        java.lang.String $r1;

        r0 := @this: kodkod.ast.LeafExpression;

        $r1 = r0.<kodkod.ast.LeafExpression: java.lang.String name>;

        return $r1;
    }
}
