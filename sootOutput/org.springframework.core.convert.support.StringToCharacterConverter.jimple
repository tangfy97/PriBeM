final class org.springframework.core.convert.support.StringToCharacterConverter extends java.lang.Object implements org.springframework.core.convert.converter.Converter
{

    void <init>()
    {
        org.springframework.core.convert.support.StringToCharacterConverter r0;

        r0 := @this: org.springframework.core.convert.support.StringToCharacterConverter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Character convert(java.lang.String)
    {
        char $c2;
        org.springframework.core.convert.support.StringToCharacterConverter r8;
        java.lang.IllegalArgumentException $r2;
        java.lang.Character $r1;
        int $i0, $i1, $i3;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;
        java.lang.String r0, $r7;

        r8 := @this: org.springframework.core.convert.support.StringToCharacterConverter;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i1 <= 1 goto label2;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("Can only convert a [String] with length of 1 to a [Character]; string value \'");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'  has length of ");

        $i3 = virtualinvoke r0.<java.lang.String: int length()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label2:
        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $r1 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        return $r1;
    }

    public volatile java.lang.Object convert(java.lang.Object)
    {
        java.lang.Character $r3;
        java.lang.Object r1;
        org.springframework.core.convert.support.StringToCharacterConverter r0;
        java.lang.String $r2;

        r0 := @this: org.springframework.core.convert.support.StringToCharacterConverter;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.String) r1;

        $r3 = virtualinvoke r0.<org.springframework.core.convert.support.StringToCharacterConverter: java.lang.Character convert(java.lang.String)>($r2);

        return $r3;
    }
}
