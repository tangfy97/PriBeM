public class org.jdesktop.swingx.util.Utilities extends java.lang.Object
{
    private static final int CTRL_WILDCARD_MASK;
    private static final int ALT_WILDCARD_MASK;
    public static final int OS_WINNT;
    public static final int OS_WIN95;
    public static final int OS_WIN98;
    public static final int OS_SOLARIS;
    public static final int OS_LINUX;
    public static final int OS_HP;
    public static final int OS_AIX;
    public static final int OS_IRIX;
    public static final int OS_SUNOS;
    public static final int OS_TRU64;
    public static final int OS_OS2;
    public static final int OS_MAC;
    public static final int OS_WIN2000;
    public static final int OS_VMS;
    public static final int OS_WIN_OTHER;
    public static final int OS_OTHER;
    public static final int OS_FREEBSD;
    public static final int OS_WINDOWS_MASK;
    public static final int OS_UNIX_MASK;
    public static final int TYPICAL_WINDOWS_TASKBAR_HEIGHT;
    private static final int TYPICAL_MACOSX_MENU_HEIGHT;
    private static int operatingSystem;
    private static java.lang.ref.Reference namesAndValues;

    private void <init>()
    {
        org.jdesktop.swingx.util.Utilities r0;

        r0 := @this: org.jdesktop.swingx.util.Utilities;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int getOperatingSystem()
    {
        java.util.Locale $r13;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17;
        int $i0, $i1, $i3, $i5;
        java.lang.String $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r14;

        $i0 = <org.jdesktop.swingx.util.Utilities: int operatingSystem>;

        $i3 = (int) -1;

        if $i0 != $i3 goto label19;

        $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name");

        $r1 = "Windows NT";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label01;

        <org.jdesktop.swingx.util.Utilities: int operatingSystem> = 1;

        goto label19;

     label01:
        $r2 = "Windows 95";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z1 == 0 goto label02;

        <org.jdesktop.swingx.util.Utilities: int operatingSystem> = 2;

        goto label19;

     label02:
        $r3 = "Windows 98";

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z2 == 0 goto label03;

        <org.jdesktop.swingx.util.Utilities: int operatingSystem> = 4;

        goto label19;

     label03:
        $r4 = "Windows 2000";

        $z3 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z3 == 0 goto label04;

        <org.jdesktop.swingx.util.Utilities: int operatingSystem> = 8192;

        goto label19;

     label04:
        $z4 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("Windows ");

        if $z4 == 0 goto label05;

        $i5 = (int) 32768;

        <org.jdesktop.swingx.util.Utilities: int operatingSystem> = $i5;

        goto label19;

     label05:
        $r5 = "Solaris";

        $z5 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z5 == 0 goto label06;

        <org.jdesktop.swingx.util.Utilities: int operatingSystem> = 8;

        goto label19;

     label06:
        $z6 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("SunOS");

        if $z6 == 0 goto label07;

        <org.jdesktop.swingx.util.Utilities: int operatingSystem> = 8;

        goto label19;

     label07:
        $z7 = virtualinvoke $r0.<java.lang.String: boolean endsWith(java.lang.String)>("Linux");

        if $z7 == 0 goto label08;

        <org.jdesktop.swingx.util.Utilities: int operatingSystem> = 16;

        goto label19;

     label08:
        $r6 = "HP-UX";

        $z8 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z8 == 0 goto label09;

        <org.jdesktop.swingx.util.Utilities: int operatingSystem> = 32;

        goto label19;

     label09:
        $r7 = "AIX";

        $z9 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z9 == 0 goto label10;

        <org.jdesktop.swingx.util.Utilities: int operatingSystem> = 64;

        goto label19;

     label10:
        $r8 = "Irix";

        $z10 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z10 == 0 goto label11;

        <org.jdesktop.swingx.util.Utilities: int operatingSystem> = 128;

        goto label19;

     label11:
        $r9 = "SunOS";

        $z11 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z11 == 0 goto label12;

        <org.jdesktop.swingx.util.Utilities: int operatingSystem> = 256;

        goto label19;

     label12:
        $r10 = "Digital UNIX";

        $z12 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z12 == 0 goto label13;

        <org.jdesktop.swingx.util.Utilities: int operatingSystem> = 512;

        goto label19;

     label13:
        $r11 = "OS/2";

        $z13 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z13 == 0 goto label14;

        <org.jdesktop.swingx.util.Utilities: int operatingSystem> = 2048;

        goto label19;

     label14:
        $r12 = "OpenVMS";

        $z14 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z14 == 0 goto label15;

        <org.jdesktop.swingx.util.Utilities: int operatingSystem> = 16384;

        goto label19;

     label15:
        $z15 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("Mac OS X");

        if $z15 == 0 goto label16;

        <org.jdesktop.swingx.util.Utilities: int operatingSystem> = 4096;

        goto label19;

     label16:
        $z16 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("Darwin");

        if $z16 == 0 goto label17;

        <org.jdesktop.swingx.util.Utilities: int operatingSystem> = 4096;

        goto label19;

     label17:
        $r13 = <java.util.Locale: java.util.Locale US>;

        $r14 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r13);

        $z17 = virtualinvoke $r14.<java.lang.String: boolean startsWith(java.lang.String)>("freebsd");

        if $z17 == 0 goto label18;

        <org.jdesktop.swingx.util.Utilities: int operatingSystem> = 131072;

        goto label19;

     label18:
        <org.jdesktop.swingx.util.Utilities: int operatingSystem> = 65536;

     label19:
        $i1 = <org.jdesktop.swingx.util.Utilities: int operatingSystem>;

        return $i1;
    }

    public static boolean isWindows()
    {
        int $i0, $i1, $i3;
        boolean $z0;

        $i0 = staticinvoke <org.jdesktop.swingx.util.Utilities: int getOperatingSystem()>();

        $i3 = (int) 40967;

        $i1 = $i0 & $i3;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isUnix()
    {
        int $i0, $i1;
        boolean $z0;

        $i0 = staticinvoke <org.jdesktop.swingx.util.Utilities: int getOperatingSystem()>();

        $i1 = $i0 & 136184;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isLargeFrameIcons()
    {
        int $i0, $i1;
        boolean $z0;

        $i0 = staticinvoke <org.jdesktop.swingx.util.Utilities: int getOperatingSystem()>();

        if $i0 == 8 goto label1;

        $i1 = staticinvoke <org.jdesktop.swingx.util.Utilities: int getOperatingSystem()>();

        if $i1 != 32 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    private static java.awt.GraphicsConfiguration getCurrentGraphicsConfiguration()
    {
        java.awt.GraphicsConfiguration $r4, $r6;
        java.awt.KeyboardFocusManager $r0;
        java.awt.GraphicsDevice $r3;
        java.awt.Window $r5;
        java.awt.Component $r1;
        java.awt.GraphicsEnvironment $r2;

        $r0 = staticinvoke <java.awt.KeyboardFocusManager: java.awt.KeyboardFocusManager getCurrentKeyboardFocusManager()>();

        $r1 = virtualinvoke $r0.<java.awt.KeyboardFocusManager: java.awt.Component getFocusOwner()>();

        if $r1 == null goto label1;

        $r5 = staticinvoke <javax.swing.SwingUtilities: java.awt.Window getWindowAncestor(java.awt.Component)>($r1);

        if $r5 == null goto label1;

        $r6 = virtualinvoke $r5.<java.awt.Window: java.awt.GraphicsConfiguration getGraphicsConfiguration()>();

        return $r6;

     label1:
        $r2 = staticinvoke <java.awt.GraphicsEnvironment: java.awt.GraphicsEnvironment getLocalGraphicsEnvironment()>();

        $r3 = virtualinvoke $r2.<java.awt.GraphicsEnvironment: java.awt.GraphicsDevice getDefaultScreenDevice()>();

        $r4 = virtualinvoke $r3.<java.awt.GraphicsDevice: java.awt.GraphicsConfiguration getDefaultConfiguration()>();

        return $r4;
    }

    public static java.awt.Rectangle getUsableScreenBounds()
    {
        java.awt.Rectangle $r1;
        java.awt.GraphicsConfiguration $r0;

        $r0 = staticinvoke <org.jdesktop.swingx.util.Utilities: java.awt.GraphicsConfiguration getCurrentGraphicsConfiguration()>();

        $r1 = staticinvoke <org.jdesktop.swingx.util.Utilities: java.awt.Rectangle getUsableScreenBounds(java.awt.GraphicsConfiguration)>($r0);

        return $r1;
    }

    public static java.awt.Rectangle getUsableScreenBounds(java.awt.GraphicsConfiguration)
    {
        java.lang.Integer $r6;
        java.awt.GraphicsEnvironment $r12;
        java.awt.GraphicsConfiguration r20;
        java.util.logging.Logger $r15, $r18;
        java.lang.Exception $r14;
        java.awt.Toolkit $r4;
        java.awt.Rectangle $r0, $r1;
        java.awt.Insets $r5;
        java.awt.GraphicsDevice $r13;
        java.util.logging.Level $r16, $r19;
        java.util.StringTokenizer $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31;
        java.lang.String $r2, $r3, $r8, $r9, $r10, $r11;
        java.lang.NumberFormatException $r17;

        r20 := @parameter0: java.awt.GraphicsConfiguration;

        if r20 != null goto label01;

        $r12 = staticinvoke <java.awt.GraphicsEnvironment: java.awt.GraphicsEnvironment getLocalGraphicsEnvironment()>();

        $r13 = virtualinvoke $r12.<java.awt.GraphicsEnvironment: java.awt.GraphicsDevice getDefaultScreenDevice()>();

        r20 = virtualinvoke $r13.<java.awt.GraphicsDevice: java.awt.GraphicsConfiguration getDefaultConfiguration()>();

     label01:
        $r0 = new java.awt.Rectangle;

        $r1 = virtualinvoke r20.<java.awt.GraphicsConfiguration: java.awt.Rectangle getBounds()>();

        specialinvoke $r0.<java.awt.Rectangle: void <init>(java.awt.Rectangle)>($r1);

        $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("netbeans.screen.insets");

        if $r2 == null goto label06;

        $r7 = new java.util.StringTokenizer;

        specialinvoke $r7.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r2, ", ");

        $i19 = virtualinvoke $r7.<java.util.StringTokenizer: int countTokens()>();

        if $i19 != 4 goto label05;

     label02:
        $r8 = virtualinvoke $r7.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $i20 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r8);

        $r0.<java.awt.Rectangle: int y> = $i20;

        $r9 = virtualinvoke $r7.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $i21 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r9);

        $r0.<java.awt.Rectangle: int x> = $i21;

        $i22 = $r0.<java.awt.Rectangle: int height>;

        $i23 = $r0.<java.awt.Rectangle: int y>;

        $r10 = virtualinvoke $r7.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $i24 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r10);

        $i25 = $i23 + $i24;

        $i26 = $i22 - $i25;

        $r0.<java.awt.Rectangle: int height> = $i26;

        $i27 = $r0.<java.awt.Rectangle: int width>;

        $i28 = $r0.<java.awt.Rectangle: int x>;

        $r11 = virtualinvoke $r7.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $i29 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r11);

        $i30 = $i28 + $i29;

        $i31 = $i27 - $i30;

        $r0.<java.awt.Rectangle: int width> = $i31;

     label03:
        goto label05;

     label04:
        $r17 := @caughtexception;

        $r18 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getAnonymousLogger()>();

        $r19 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        virtualinvoke $r18.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r19, null, $r17);

     label05:
        return $r0;

     label06:
        $r3 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("netbeans.taskbar.height");

        if $r3 == null goto label07;

        $i16 = $r0.<java.awt.Rectangle: int height>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,int)>($r3, 0);

        $i17 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

        $i18 = $i16 - $i17;

        $r0.<java.awt.Rectangle: int height> = $i18;

        return $r0;

     label07:
        $r4 = staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>();

        $r5 = virtualinvoke $r4.<java.awt.Toolkit: java.awt.Insets getScreenInsets(java.awt.GraphicsConfiguration)>(r20);

        $i1 = $r0.<java.awt.Rectangle: int y>;

        $i0 = $r5.<java.awt.Insets: int top>;

        $i2 = $i1 + $i0;

        $r0.<java.awt.Rectangle: int y> = $i2;

        $i4 = $r0.<java.awt.Rectangle: int x>;

        $i3 = $r5.<java.awt.Insets: int left>;

        $i5 = $i4 + $i3;

        $r0.<java.awt.Rectangle: int x> = $i5;

        $i9 = $r0.<java.awt.Rectangle: int height>;

        $i7 = $r5.<java.awt.Insets: int top>;

        $i6 = $r5.<java.awt.Insets: int bottom>;

        $i8 = $i7 + $i6;

        $i10 = $i9 - $i8;

        $r0.<java.awt.Rectangle: int height> = $i10;

        $i14 = $r0.<java.awt.Rectangle: int width>;

        $i12 = $r5.<java.awt.Insets: int left>;

        $i11 = $r5.<java.awt.Insets: int right>;

        $i13 = $i12 + $i11;

        $i15 = $i14 - $i13;

        $r0.<java.awt.Rectangle: int width> = $i15;

     label08:
        goto label10;

     label09:
        $r14 := @caughtexception;

        $r15 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getAnonymousLogger()>();

        $r16 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        virtualinvoke $r15.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r16, null, $r14);

     label10:
        return $r0;

        catch java.lang.NumberFormatException from label02 to label03 with label04;
        catch java.lang.Exception from label07 to label08 with label09;
    }

    private static synchronized java.util.HashMap[] initNameAndValues()
    {
        java.lang.Integer $r7, $r8, $r14;
        java.lang.SecurityException $r20;
        boolean $z0, $z1;
        java.lang.IllegalAccessException $r18;
        java.lang.ref.Reference $r0, $r15;
        java.util.HashMap $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, $i11;
        java.lang.ref.SoftReference $r6;
        java.lang.String $r11, $r12;
        java.lang.reflect.Field $r9, $r10, $r13;
        java.lang.IllegalArgumentException $r19;
        java.lang.reflect.Field[] r22;
        java.lang.Class $r1;
        java.lang.Object $r4, $r16;
        java.util.HashMap[] $r5, $r17, r21;

        $r0 = <org.jdesktop.swingx.util.Utilities: java.lang.ref.Reference namesAndValues>;

        if $r0 == null goto label01;

        $r15 = <org.jdesktop.swingx.util.Utilities: java.lang.ref.Reference namesAndValues>;

        $r16 = virtualinvoke $r15.<java.lang.ref.Reference: java.lang.Object get()>();

        $r17 = (java.util.HashMap[]) $r16;

        r21 = (java.util.HashMap[]) $r17;

        if r21 == null goto label01;

        return r21;

     label01:
        $r1 = class "Ljava/awt/event/KeyEvent;";

        r22 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

     label02:
        goto label04;

     label03:
        $r20 := @caughtexception;

        r22 = newarray (java.lang.reflect.Field)[0];

     label04:
        $r2 = new java.util.HashMap;

        $i0 = lengthof r22;

        $i1 = $i0 * 4;

        $i2 = $i1 / 3;

        $i3 = $i2 + 5;

        specialinvoke $r2.<java.util.HashMap: void <init>(int,float)>($i3, 0.75F);

        $r3 = new java.util.HashMap;

        $i4 = lengthof r22;

        $i5 = $i4 * 4;

        $i6 = $i5 / 3;

        $i7 = $i6 + 5;

        specialinvoke $r3.<java.util.HashMap: void <init>(int,float)>($i7, 0.75F);

        i10 = 0;

     label05:
        $i11 = lengthof r22;

        if i10 >= $i11 goto label11;

        $r9 = r22[i10];

        $i8 = virtualinvoke $r9.<java.lang.reflect.Field: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>($i8);

        if $z0 == 0 goto label10;

        $r10 = r22[i10];

        $r11 = virtualinvoke $r10.<java.lang.reflect.Field: java.lang.String getName()>();

        $z1 = virtualinvoke $r11.<java.lang.String: boolean startsWith(java.lang.String)>("VK_");

        if $z1 == 0 goto label10;

        $r12 = virtualinvoke $r11.<java.lang.String: java.lang.String substring(int)>(3);

     label06:
        $r13 = r22[i10];

        $i9 = virtualinvoke $r13.<java.lang.reflect.Field: int getInt(java.lang.Object)>(null);

        $r14 = new java.lang.Integer;

        specialinvoke $r14.<java.lang.Integer: void <init>(int)>($i9);

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, $r14);

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, $r12);

     label07:
        goto label10;

     label08:
        $r19 := @caughtexception;

        goto label10;

     label09:
        $r18 := @caughtexception;

     label10:
        i10 = i10 + 1;

        goto label05;

     label11:
        $r4 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("CONTEXT_MENU");

        if $r4 != null goto label12;

        $r7 = new java.lang.Integer;

        specialinvoke $r7.<java.lang.Integer: void <init>(int)>(524);

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CONTEXT_MENU", $r7);

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, "CONTEXT_MENU");

        $r8 = new java.lang.Integer;

        specialinvoke $r8.<java.lang.Integer: void <init>(int)>(525);

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("WINDOWS", $r8);

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, "WINDOWS");

     label12:
        $r5 = newarray (java.util.HashMap)[2];

        $r5[0] = $r2;

        $r5[1] = $r3;

        $r6 = new java.lang.ref.SoftReference;

        specialinvoke $r6.<java.lang.ref.SoftReference: void <init>(java.lang.Object)>($r5);

        <org.jdesktop.swingx.util.Utilities: java.lang.ref.Reference namesAndValues> = $r6;

        return $r5;

        catch java.lang.SecurityException from label01 to label02 with label03;
        catch java.lang.IllegalArgumentException from label06 to label07 with label08;
        catch java.lang.IllegalAccessException from label06 to label07 with label09;
    }

    public static java.lang.String keyToString(javax.swing.KeyStroke)
    {
        javax.swing.KeyStroke r1;
        java.util.HashMap $r4;
        char $c2;
        java.lang.Integer $r3;
        java.lang.StringBuffer $r0;
        int $i0, $i1;
        java.lang.Object $r5;
        java.lang.String $r6, $r7;
        java.util.HashMap[] $r2;
        boolean $z0;

        r1 := @parameter0: javax.swing.KeyStroke;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $i0 = virtualinvoke r1.<javax.swing.KeyStroke: int getModifiers()>();

        $z0 = staticinvoke <org.jdesktop.swingx.util.Utilities: boolean addModifiers(java.lang.StringBuffer,int)>($r0, $i0);

        if $z0 == 0 goto label1;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(45);

     label1:
        $r2 = staticinvoke <org.jdesktop.swingx.util.Utilities: java.util.HashMap[] initNameAndValues()>();

        $r4 = $r2[1];

        $r3 = new java.lang.Integer;

        $i1 = virtualinvoke r1.<javax.swing.KeyStroke: int getKeyCode()>();

        specialinvoke $r3.<java.lang.Integer: void <init>(int)>($i1);

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

        $r7 = (java.lang.String) $r5;

        if $r7 != null goto label2;

        $c2 = virtualinvoke r1.<javax.swing.KeyStroke: char getKeyChar()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label3;

     label2:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

     label3:
        $r6 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r6;
    }

    public static javax.swing.KeyStroke stringToKey(java.lang.String)
    {
        java.lang.Integer r7;
        java.util.Locale $r2;
        boolean $z0, z1, z2, $z3, $z4, $z5, $z6;
        javax.swing.KeyStroke $r10;
        java.util.HashMap r5;
        java.util.StringTokenizer $r11;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, i13, i14, $i15, $i17, $i19, $i21, $i23, $i25;
        java.lang.String r1, $r3, $r9;
        java.util.NoSuchElementException $r8;
        java.lang.Object $r6;
        java.util.HashMap[] $r4;

        r1 := @parameter0: java.lang.String;

        $r11 = new java.util.StringTokenizer;

        $r2 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r2);

        specialinvoke $r11.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String,boolean)>($r3, "-", 1);

        i11 = 0;

        $r4 = staticinvoke <org.jdesktop.swingx.util.Utilities: java.util.HashMap[] initNameAndValues()>();

        r5 = $r4[0];

        $i17 = (int) -1;

        i12 = $i17;

     label01:
        $r9 = virtualinvoke $r11.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $z4 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("-");

        if $z4 == 0 goto label02;

        $i19 = (int) -1;

        if i12 == $i19 goto label01;

        i11 = i11 | i12;

        $i21 = (int) -1;

        i12 = $i21;

        goto label01;

     label02:
        $z0 = virtualinvoke $r11.<java.util.StringTokenizer: boolean hasMoreElements()>();

        if $z0 == 0 goto label03;

        i12 = staticinvoke <org.jdesktop.swingx.util.Utilities: int readModifiers(java.lang.String)>($r9);

        goto label13;

     label03:
        $r6 = virtualinvoke r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r9);

        r7 = (java.lang.Integer) $r6;

        $i23 = (int) 32768;

        $i0 = i11 & $i23;

        if $i0 == 0 goto label04;

        $z5 = 1;

        goto label05;

     label04:
        $z5 = 0;

     label05:
        z1 = $z5;

        $i10 = i11 & -32769;

        $i1 = $i10 & 65536;

        if $i1 == 0 goto label06;

        $z6 = 1;

        goto label07;

     label06:
        $z6 = 0;

     label07:
        z2 = $z6;

        $i9 = $i10 & -65537;

        i13 = $i9;

        if r7 == null goto label12;

        if z1 == 0 goto label08;

        $i3 = staticinvoke <org.jdesktop.swingx.util.Utilities: int getMenuShortCutKeyMask()>();

        i13 = $i9 | $i3;

        $i4 = staticinvoke <org.jdesktop.swingx.util.Utilities: int getOperatingSystem()>();

        $i5 = $i4 & 4096;

        if $i5 == 0 goto label08;

        $i6 = virtualinvoke r7.<java.lang.Integer: int intValue()>();

        $z3 = staticinvoke <org.jdesktop.swingx.util.Utilities: boolean usableKeyOnMac(int,int)>($i6, i13);

        if $z3 != 0 goto label08;

        $i7 = staticinvoke <org.jdesktop.swingx.util.Utilities: int getMenuShortCutKeyMask()>();

        $i25 = (int) -1;

        $i8 = $i7 ^ $i25;

        i14 = i13 & $i8;

        i13 = i14 | 2;

     label08:
        if z2 == 0 goto label10;

        $i2 = staticinvoke <org.jdesktop.swingx.util.Utilities: int getOperatingSystem()>();

        if $i2 != 4096 goto label09;

        i13 = i13 | 2;

        goto label10;

     label09:
        i13 = i13 | 8;

     label10:
        $i15 = virtualinvoke r7.<java.lang.Integer: int intValue()>();

        $r10 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int)>($i15, i13);

     label11:
        return $r10;

     label12:
        return null;

     label13:
        goto label01;

     label14:
        $r8 := @caughtexception;

        return null;

        catch java.util.NoSuchElementException from label01 to label11 with label14;
        catch java.util.NoSuchElementException from label13 to label14 with label14;
    }

    private static int getMenuShortCutKeyMask()
    {
        byte $b3;
        int $i0, $i1, $i2;
        boolean $z0;
        java.awt.Toolkit $r0;

        $z0 = staticinvoke <java.awt.GraphicsEnvironment: boolean isHeadless()>();

        if $z0 == 0 goto label3;

        $i1 = staticinvoke <org.jdesktop.swingx.util.Utilities: int getOperatingSystem()>();

        $i2 = $i1 & 4096;

        if $i2 == 0 goto label1;

        $b3 = 4;

        goto label2;

     label1:
        $b3 = 2;

     label2:
        return $b3;

     label3:
        $r0 = staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>();

        $i0 = virtualinvoke $r0.<java.awt.Toolkit: int getMenuShortcutKeyMask()>();

        return $i0;
    }

    private static boolean usableKeyOnMac(int, int)
    {
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i8;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 != 81 goto label01;

        return 0;

     label01:
        $i2 = i1 & 4;

        if $i2 != 0 goto label02;

        $i6 = i1 & 128;

        if $i6 == 0 goto label03;

     label02:
        $z2 = 1;

        goto label04;

     label03:
        $z2 = 0;

     label04:
        z0 = $z2;

        $i3 = i1 & 8;

        if $i3 != 0 goto label05;

        $i5 = i1 & 512;

        if $i5 == 0 goto label06;

     label05:
        $z3 = 1;

        goto label07;

     label06:
        $z3 = 0;

     label07:
        z1 = $z3;

        if z0 == 0 goto label08;

        $i8 = (int) -261;

        $i4 = i1 & $i8;

        if $i4 != 0 goto label08;

        $z4 = 1;

        goto label09;

     label08:
        $z4 = 0;

     label09:
        if $z4 == 0 goto label12;

        if i0 == 72 goto label10;

        if i0 == 32 goto label10;

        if i0 == 9 goto label10;

        $z5 = 1;

        goto label11;

     label10:
        $z5 = 0;

     label11:
        return $z5;

     label12:
        if i0 != 68 goto label13;

        if z0 == 0 goto label13;

        if z1 != 0 goto label14;

     label13:
        $z6 = 1;

        goto label15;

     label14:
        $z6 = 0;

     label15:
        return $z6;
    }

    public static javax.swing.KeyStroke[] stringToKeys(java.lang.String)
    {
        javax.swing.KeyStroke $r8;
        java.lang.Object[] $r5;
        javax.swing.KeyStroke[] $r4, $r6;
        java.util.ArrayList $r3;
        java.util.StringTokenizer $r0;
        java.util.Locale $r1;
        int $i0;
        java.lang.String $r2, $r7, r9;
        boolean $z0;

        r9 := @parameter0: java.lang.String;

        $r0 = new java.util.StringTokenizer;

        $r1 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r2 = virtualinvoke r9.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r1);

        specialinvoke $r0.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r2, " ");

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

     label1:
        $z0 = virtualinvoke $r0.<java.util.StringTokenizer: boolean hasMoreElements()>();

        if $z0 == 0 goto label3;

        $r7 = virtualinvoke $r0.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r8 = staticinvoke <org.jdesktop.swingx.util.Utilities: javax.swing.KeyStroke stringToKey(java.lang.String)>($r7);

        if $r8 != null goto label2;

        return null;

     label2:
        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

        goto label1;

     label3:
        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        $r4 = newarray (javax.swing.KeyStroke)[$i0];

        $r5 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r6 = (javax.swing.KeyStroke[]) $r5;

        return $r6;
    }

    private static boolean addModifiers(java.lang.StringBuffer, int)
    {
        java.lang.StringBuffer r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8;
        boolean z0;

        r0 := @parameter0: java.lang.StringBuffer;

        i0 := @parameter1: int;

        z0 = 0;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("C");

        z0 = 1;

     label1:
        $i2 = i0 & 8;

        if $i2 == 0 goto label2;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("A");

        z0 = 1;

     label2:
        $i3 = i0 & 1;

        if $i3 == 0 goto label3;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("S");

        z0 = 1;

     label3:
        $i4 = i0 & 4;

        if $i4 == 0 goto label4;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("M");

        z0 = 1;

     label4:
        $i8 = (int) 32768;

        $i5 = i0 & $i8;

        if $i5 == 0 goto label5;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("D");

        z0 = 1;

     label5:
        $i6 = i0 & 65536;

        if $i6 == 0 goto label6;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("O");

        z0 = 1;

     label6:
        return z0;
    }

    private static int readModifiers(java.lang.String) throws java.util.NoSuchElementException
    {
        char $c1;
        int $i0, i2, i3, $i4, $i6;
        java.lang.String r0;
        java.util.NoSuchElementException $r2;

        r0 := @parameter0: java.lang.String;

        i2 = 0;

        i3 = 0;

     label01:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i3 >= $i0 goto label10;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);

        $i4 = (int) $c1;

        tableswitch($i4)
        {
            case 65: goto label03;
            case 66: goto label08;
            case 67: goto label02;
            case 68: goto label06;
            case 69: goto label08;
            case 70: goto label08;
            case 71: goto label08;
            case 72: goto label08;
            case 73: goto label08;
            case 74: goto label08;
            case 75: goto label08;
            case 76: goto label08;
            case 77: goto label04;
            case 78: goto label08;
            case 79: goto label07;
            case 80: goto label08;
            case 81: goto label08;
            case 82: goto label08;
            case 83: goto label05;
            default: goto label08;
        };

     label02:
        i2 = i2 | 2;

        goto label09;

     label03:
        i2 = i2 | 8;

        goto label09;

     label04:
        i2 = i2 | 4;

        goto label09;

     label05:
        i2 = i2 | 1;

        goto label09;

     label06:
        $i6 = (int) 32768;

        i2 = i2 | $i6;

        goto label09;

     label07:
        i2 = i2 | 65536;

        goto label09;

     label08:
        $r2 = new java.util.NoSuchElementException;

        specialinvoke $r2.<java.util.NoSuchElementException: void <init>(java.lang.String)>(r0);

        throw $r2;

     label09:
        i3 = i3 + 1;

        goto label01;

     label10:
        return i2;
    }

    public static java.lang.Object toPrimitiveArray(java.lang.Object[])
    {
        java.lang.Float $r10;
        byte[] r28;
        java.lang.Integer $r25;
        java.lang.Character $r16;
        byte $b23;
        java.lang.Long $r7;
        java.lang.Object[] r0;
        java.lang.Double $r13;
        double[] r30;
        float[] r31;
        long $l33;
        short $s36;
        boolean[] r27;
        char[] r29;
        int[] r26;
        java.lang.Short $r4;
        java.lang.Byte $r19;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        float $f0;
        short[] r33;
        long[] r32;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16, $i17, i18, i19, $i20, i21, i22, i24, i25, i27, i28, i29, i30, i31, i32, i34, i35;
        java.lang.Boolean $r22;
        double $d0;
        char $c26;
        java.lang.IllegalArgumentException $r1;
        java.lang.Object $r2, $r3, $r5, $r6, $r8, $r9, $r11, $r12, $r14, $r15, $r17, $r18, $r20, $r21, $r23, $r24;

        r0 := @parameter0: java.lang.Object[];

        $z0 = r0 instanceof java.lang.Integer[];

        if $z0 == 0 goto label05;

        $i13 = lengthof r0;

        r26 = newarray (int)[$i13];

        i15 = lengthof r0;

        i16 = 0;

     label01:
        if i16 >= i15 goto label04;

        $i14 = i16;

        $r23 = r0[i16];

        if $r23 != null goto label02;

        $i17 = 0;

        goto label03;

     label02:
        $r24 = r0[i16];

        $r25 = (java.lang.Integer) $r24;

        $i17 = virtualinvoke $r25.<java.lang.Integer: int intValue()>();

     label03:
        r26[$i14] = $i17;

        i16 = i16 + 1;

        goto label01;

     label04:
        return r26;

     label05:
        $z1 = r0 instanceof java.lang.Boolean[];

        if $z1 == 0 goto label10;

        $i12 = lengthof r0;

        r27 = newarray (boolean)[$i12];

        i18 = lengthof r0;

        i19 = 0;

     label06:
        if i19 >= i18 goto label09;

        $i20 = i19;

        $r20 = r0[i19];

        if $r20 == null goto label07;

        $r21 = r0[i19];

        $r22 = (java.lang.Boolean) $r21;

        $z8 = virtualinvoke $r22.<java.lang.Boolean: boolean booleanValue()>();

        if $z8 == 0 goto label07;

        $z9 = 1;

        goto label08;

     label07:
        $z9 = 0;

     label08:
        r27[$i20] = $z9;

        i19 = i19 + 1;

        goto label06;

     label09:
        return r27;

     label10:
        $z2 = r0 instanceof java.lang.Byte[];

        if $z2 == 0 goto label15;

        $i10 = lengthof r0;

        r28 = newarray (byte)[$i10];

        i21 = lengthof r0;

        i22 = 0;

     label11:
        if i22 >= i21 goto label14;

        $i11 = i22;

        $r17 = r0[i22];

        if $r17 != null goto label12;

        $b23 = 0;

        goto label13;

     label12:
        $r18 = r0[i22];

        $r19 = (java.lang.Byte) $r18;

        $b23 = virtualinvoke $r19.<java.lang.Byte: byte byteValue()>();

     label13:
        r28[$i11] = $b23;

        i22 = i22 + 1;

        goto label11;

     label14:
        return r28;

     label15:
        $z3 = r0 instanceof java.lang.Character[];

        if $z3 == 0 goto label20;

        $i8 = lengthof r0;

        r29 = newarray (char)[$i8];

        i24 = lengthof r0;

        i25 = 0;

     label16:
        if i25 >= i24 goto label19;

        $i9 = i25;

        $r14 = r0[i25];

        if $r14 != null goto label17;

        $c26 = 0;

        goto label18;

     label17:
        $r15 = r0[i25];

        $r16 = (java.lang.Character) $r15;

        $c26 = virtualinvoke $r16.<java.lang.Character: char charValue()>();

     label18:
        r29[$i9] = $c26;

        i25 = i25 + 1;

        goto label16;

     label19:
        return r29;

     label20:
        $z4 = r0 instanceof java.lang.Double[];

        if $z4 == 0 goto label25;

        $i6 = lengthof r0;

        r30 = newarray (double)[$i6];

        i27 = lengthof r0;

        i28 = 0;

     label21:
        if i28 >= i27 goto label24;

        $i7 = i28;

        $r11 = r0[i28];

        if $r11 != null goto label22;

        $d0 = 0.0;

        goto label23;

     label22:
        $r12 = r0[i28];

        $r13 = (java.lang.Double) $r12;

        $d0 = virtualinvoke $r13.<java.lang.Double: double doubleValue()>();

     label23:
        r30[$i7] = $d0;

        i28 = i28 + 1;

        goto label21;

     label24:
        return r30;

     label25:
        $z5 = r0 instanceof java.lang.Float[];

        if $z5 == 0 goto label30;

        $i4 = lengthof r0;

        r31 = newarray (float)[$i4];

        i29 = lengthof r0;

        i30 = 0;

     label26:
        if i30 >= i29 goto label29;

        $i5 = i30;

        $r8 = r0[i30];

        if $r8 != null goto label27;

        $f0 = 0.0F;

        goto label28;

     label27:
        $r9 = r0[i30];

        $r10 = (java.lang.Float) $r9;

        $f0 = virtualinvoke $r10.<java.lang.Float: float floatValue()>();

     label28:
        r31[$i5] = $f0;

        i30 = i30 + 1;

        goto label26;

     label29:
        return r31;

     label30:
        $z6 = r0 instanceof java.lang.Long[];

        if $z6 == 0 goto label35;

        $i2 = lengthof r0;

        r32 = newarray (long)[$i2];

        i31 = lengthof r0;

        i32 = 0;

     label31:
        if i32 >= i31 goto label34;

        $i3 = i32;

        $r5 = r0[i32];

        if $r5 != null goto label32;

        $l33 = 0L;

        goto label33;

     label32:
        $r6 = r0[i32];

        $r7 = (java.lang.Long) $r6;

        $l33 = virtualinvoke $r7.<java.lang.Long: long longValue()>();

     label33:
        r32[$i3] = $l33;

        i32 = i32 + 1;

        goto label31;

     label34:
        return r32;

     label35:
        $z7 = r0 instanceof java.lang.Short[];

        if $z7 == 0 goto label40;

        $i0 = lengthof r0;

        r33 = newarray (short)[$i0];

        i34 = lengthof r0;

        i35 = 0;

     label36:
        if i35 >= i34 goto label39;

        $i1 = i35;

        $r2 = r0[i35];

        if $r2 != null goto label37;

        $s36 = 0;

        goto label38;

     label37:
        $r3 = r0[i35];

        $r4 = (java.lang.Short) $r3;

        $s36 = virtualinvoke $r4.<java.lang.Short: short shortValue()>();

     label38:
        r33[$i1] = $s36;

        i35 = i35 + 1;

        goto label36;

     label39:
        return r33;

     label40:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r1;
    }

    public static java.lang.Object[] toObjectArray(java.lang.Object)
    {
        java.lang.Float $r14;
        byte[] $r27, $r28, $r30, $r31;
        java.lang.Integer $r38;
        java.lang.Character $r24;
        byte $b3;
        java.lang.Long $r9;
        java.lang.Boolean[] r44;
        java.lang.Integer[] r43;
        java.lang.Object[] $r41, $r42;
        java.lang.Double $r19;
        double[] $r17, $r18, $r20, $r21;
        long $l1;
        float[] $r12, $r13, $r15, $r16;
        short $s0;
        boolean[] $r32, $r33, $r34, $r35;
        java.lang.Byte[] r46;
        char[] $r22, $r23, $r25, $r26;
        java.lang.Float[] r49;
        java.lang.Short[] r51;
        int[] $r36, $r37, $r39, $r40;
        java.lang.Short $r4;
        java.lang.Byte $r29;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        float $f0;
        short[] $r2, $r3, $r5, $r6;
        long[] $r7, $r8, $r10, $r11;
        int $i4, $i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21;
        java.lang.Boolean $r45;
        double $d0;
        java.lang.Long[] r50;
        java.lang.Double[] r48;
        char $c2;
        java.lang.IllegalArgumentException $r1;
        java.lang.Character[] r47;
        java.lang.Object r0;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.lang.Object[];

        if $z0 == 0 goto label01;

        $r41 = (java.lang.Object[]) r0;

        $r42 = (java.lang.Object[]) $r41;

        return $r42;

     label01:
        $z1 = r0 instanceof int[];

        if $z1 == 0 goto label04;

        $r36 = (int[]) r0;

        $r37 = (int[]) $r36;

        i6 = lengthof $r37;

        r43 = newarray (java.lang.Integer)[i6];

        i7 = 0;

     label02:
        if i7 >= i6 goto label03;

        $r38 = new java.lang.Integer;

        $r39 = (int[]) r0;

        $r40 = (int[]) $r39;

        $i5 = $r40[i7];

        specialinvoke $r38.<java.lang.Integer: void <init>(int)>($i5);

        r43[i7] = $r38;

        i7 = i7 + 1;

        goto label02;

     label03:
        return r43;

     label04:
        $z2 = r0 instanceof boolean[];

        if $z2 == 0 goto label09;

        $r32 = (boolean[]) r0;

        $r33 = (boolean[]) $r32;

        i8 = lengthof $r33;

        r44 = newarray (java.lang.Boolean)[i8];

        i9 = 0;

     label05:
        if i9 >= i8 goto label08;

        $i4 = i9;

        $r34 = (boolean[]) r0;

        $r35 = (boolean[]) $r34;

        $z9 = $r35[i9];

        if $z9 == 0 goto label06;

        $r45 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label07;

     label06:
        $r45 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label07:
        r44[$i4] = $r45;

        i9 = i9 + 1;

        goto label05;

     label08:
        return r44;

     label09:
        $z3 = r0 instanceof byte[];

        if $z3 == 0 goto label12;

        $r27 = (byte[]) r0;

        $r28 = (byte[]) $r27;

        i10 = lengthof $r28;

        r46 = newarray (java.lang.Byte)[i10];

        i11 = 0;

     label10:
        if i11 >= i10 goto label11;

        $r29 = new java.lang.Byte;

        $r30 = (byte[]) r0;

        $r31 = (byte[]) $r30;

        $b3 = $r31[i11];

        specialinvoke $r29.<java.lang.Byte: void <init>(byte)>($b3);

        r46[i11] = $r29;

        i11 = i11 + 1;

        goto label10;

     label11:
        return r46;

     label12:
        $z4 = r0 instanceof char[];

        if $z4 == 0 goto label15;

        $r22 = (char[]) r0;

        $r23 = (char[]) $r22;

        i12 = lengthof $r23;

        r47 = newarray (java.lang.Character)[i12];

        i13 = 0;

     label13:
        if i13 >= i12 goto label14;

        $r24 = new java.lang.Character;

        $r25 = (char[]) r0;

        $r26 = (char[]) $r25;

        $c2 = $r26[i13];

        specialinvoke $r24.<java.lang.Character: void <init>(char)>($c2);

        r47[i13] = $r24;

        i13 = i13 + 1;

        goto label13;

     label14:
        return r47;

     label15:
        $z5 = r0 instanceof double[];

        if $z5 == 0 goto label18;

        $r17 = (double[]) r0;

        $r18 = (double[]) $r17;

        i14 = lengthof $r18;

        r48 = newarray (java.lang.Double)[i14];

        i15 = 0;

     label16:
        if i15 >= i14 goto label17;

        $r19 = new java.lang.Double;

        $r20 = (double[]) r0;

        $r21 = (double[]) $r20;

        $d0 = $r21[i15];

        specialinvoke $r19.<java.lang.Double: void <init>(double)>($d0);

        r48[i15] = $r19;

        i15 = i15 + 1;

        goto label16;

     label17:
        return r48;

     label18:
        $z6 = r0 instanceof float[];

        if $z6 == 0 goto label21;

        $r12 = (float[]) r0;

        $r13 = (float[]) $r12;

        i16 = lengthof $r13;

        r49 = newarray (java.lang.Float)[i16];

        i17 = 0;

     label19:
        if i17 >= i16 goto label20;

        $r14 = new java.lang.Float;

        $r15 = (float[]) r0;

        $r16 = (float[]) $r15;

        $f0 = $r16[i17];

        specialinvoke $r14.<java.lang.Float: void <init>(float)>($f0);

        r49[i17] = $r14;

        i17 = i17 + 1;

        goto label19;

     label20:
        return r49;

     label21:
        $z7 = r0 instanceof long[];

        if $z7 == 0 goto label24;

        $r7 = (long[]) r0;

        $r8 = (long[]) $r7;

        i18 = lengthof $r8;

        r50 = newarray (java.lang.Long)[i18];

        i19 = 0;

     label22:
        if i19 >= i18 goto label23;

        $r9 = new java.lang.Long;

        $r10 = (long[]) r0;

        $r11 = (long[]) $r10;

        $l1 = $r11[i19];

        specialinvoke $r9.<java.lang.Long: void <init>(long)>($l1);

        r50[i19] = $r9;

        i19 = i19 + 1;

        goto label22;

     label23:
        return r50;

     label24:
        $z8 = r0 instanceof short[];

        if $z8 == 0 goto label27;

        $r2 = (short[]) r0;

        $r3 = (short[]) $r2;

        i20 = lengthof $r3;

        r51 = newarray (java.lang.Short)[i20];

        i21 = 0;

     label25:
        if i21 >= i20 goto label26;

        $r4 = new java.lang.Short;

        $r5 = (short[]) r0;

        $r6 = (short[]) $r5;

        $s0 = $r6[i21];

        specialinvoke $r4.<java.lang.Short: void <init>(short)>($s0);

        r51[i21] = $r4;

        i21 = i21 + 1;

        goto label25;

     label26:
        return r51;

     label27:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r1;
    }

    public static java.lang.String[] wrapStringToArray(java.lang.String, int, java.text.BreakIterator, boolean)
    {
        boolean z0, z1, $z3, $z4;
        java.lang.Object[] $r2;
        java.lang.String[] $r3, $r4, $r17, $r18, r20, r21;
        java.util.ArrayList $r23;
        java.util.StringTokenizer $r22;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12, i13, i14, i15, i16, $i17, $i19, $i21;
        java.lang.String $r5, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, r19;
        java.text.BreakIterator r6;

        r19 := @parameter0: java.lang.String;

        i10 := @parameter1: int;

        r6 := @parameter2: java.text.BreakIterator;

        z0 := @parameter3: boolean;

        $i0 = virtualinvoke r19.<java.lang.String: int length()>();

        if $i0 != 0 goto label01;

        $r18 = newarray (java.lang.String)[1];

        $r18[0] = r19;

        return $r18;

     label01:
        if z0 == 0 goto label02;

        $r15 = staticinvoke <org.jdesktop.swingx.util.Utilities: java.lang.String trimString(java.lang.String)>(r19);

        $r16 = virtualinvoke $r15.<java.lang.String: java.lang.String replace(char,char)>(10, 32);

        r19 = $r16;

        $r17 = newarray (java.lang.String)[1];

        $r17[0] = $r16;

        r20 = $r17;

        goto label04;

     label02:
        $r22 = new java.util.StringTokenizer;

        specialinvoke $r22.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r19, "\n");

        $i1 = virtualinvoke $r22.<java.util.StringTokenizer: int countTokens()>();

        r20 = newarray (java.lang.String)[$i1];

        i11 = 0;

     label03:
        if i11 >= $i1 goto label04;

        $r14 = virtualinvoke $r22.<java.util.StringTokenizer: java.lang.String nextToken()>();

        r20[i11] = $r14;

        i11 = i11 + 1;

        goto label03;

     label04:
        if i10 >= 1 goto label05;

        i10 = 1;

     label05:
        $i2 = virtualinvoke r19.<java.lang.String: int length()>();

        if $i2 > i10 goto label06;

        return r20;

     label06:
        z1 = 1;

        i12 = 0;

     label07:
        $i3 = lengthof r20;

        if i12 >= $i3 goto label11;

        if z1 == 0 goto label08;

        $r13 = r20[i12];

        $i9 = virtualinvoke $r13.<java.lang.String: int length()>();

        if $i9 >= i10 goto label08;

        $z4 = 1;

        $z3 = 1;

        goto label09;

     label08:
        $z4 = 0;

        $z3 = 0;

     label09:
        z1 = $z3;

        if $z4 != 0 goto label10;

        goto label12;

     label10:
        i12 = i12 + 1;

        goto label07;

     label11:
        return r20;

     label12:
        $r23 = new java.util.ArrayList;

        specialinvoke $r23.<java.util.ArrayList: void <init>()>();

        i13 = 0;

        i14 = 0;

     label13:
        $i4 = lengthof r20;

        if i14 >= $i4 goto label20;

        $r5 = r20[i14];

        $i6 = virtualinvoke $r5.<java.lang.String: int length()>();

        if $i6 >= i10 goto label14;

        $r12 = r20[i14];

        virtualinvoke $r23.<java.util.ArrayList: boolean add(java.lang.Object)>($r12);

        goto label19;

     label14:
        $r7 = r20[i14];

        virtualinvoke r6.<java.text.BreakIterator: void setText(java.lang.String)>($r7);

        i15 = virtualinvoke r6.<java.text.BreakIterator: int next()>();

        i16 = 0;

     label15:
        $i17 = i15 - i13;

        if $i17 >= i10 goto label16;

        $i19 = (int) -1;

        if i15 == $i19 goto label16;

        i16 = i15;

        i15 = virtualinvoke r6.<java.text.BreakIterator: int next()>();

        goto label15;

     label16:
        $i21 = (int) -1;

        if i15 != $i21 goto label17;

        $r11 = r20[i14];

        $i8 = virtualinvoke $r11.<java.lang.String: int length()>();

        i16 = $i8;

        i15 = $i8;

     label17:
        if i16 != 0 goto label18;

        i16 = i15;

     label18:
        $r8 = r20[i14];

        $r9 = virtualinvoke $r8.<java.lang.String: java.lang.String substring(int,int)>(i13, i16);

        virtualinvoke $r23.<java.util.ArrayList: boolean add(java.lang.Object)>($r9);

        i13 = i16;

        i16 = 0;

        $r10 = r20[i14];

        $i7 = virtualinvoke $r10.<java.lang.String: int length()>();

        if i13 < $i7 goto label15;

        i13 = 0;

     label19:
        i14 = i14 + 1;

        goto label13;

     label20:
        $i5 = virtualinvoke $r23.<java.util.ArrayList: int size()>();

        r21 = newarray (java.lang.String)[$i5];

        $r2 = virtualinvoke $r23.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>(r21);

        $r3 = (java.lang.String[]) $r2;

        $r4 = (java.lang.String[]) $r3;

        return $r4;
    }

    private static java.lang.String trimString(java.lang.String)
    {
        int $i0, $i1, $i3, $i4, $i6, $i7, i8, i9, i10, $i11, $i12, $i14, $i16, $i17, $i18;
        java.lang.String $r0, $r1, r2;
        char $c2, $c5;

        r2 := @parameter0: java.lang.String;

        i8 = 0;

        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        return r2;

     label1:
        $i1 = i8;

        i8 = i8 + 1;

        $c2 = virtualinvoke r2.<java.lang.String: char charAt(int)>($i1);

        $i11 = (int) $c2;

        if $i11 == 10 goto label2;

        $i12 = (int) $c2;

        if $i12 != 13 goto label3;

     label2:
        if i8 < $i0 goto label1;

     label3:
        $i14 = (int) -1;

        i9 = i8 + $i14;

        $r0 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>(i9);

        $i3 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i7 = $i3 - 1;

        i10 = $i7;

        if $i7 >= 0 goto label4;

        return $r0;

     label4:
        $i4 = i10;

        $i16 = (int) -1;

        i10 = i10 + $i16;

        $c5 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i4);

        $i17 = (int) $c5;

        if $i17 == 10 goto label5;

        $i18 = (int) $c5;

        if $i18 != 13 goto label6;

     label5:
        if i10 >= 0 goto label4;

     label6:
        $i6 = i10 + 2;

        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i6);

        return $r1;
    }

    static void <clinit>()
    {
        <org.jdesktop.swingx.util.Utilities: int TYPICAL_MACOSX_MENU_HEIGHT> = 24;

        <org.jdesktop.swingx.util.Utilities: int TYPICAL_WINDOWS_TASKBAR_HEIGHT> = 27;

        <org.jdesktop.swingx.util.Utilities: int OS_UNIX_MASK> = 136184;

        <org.jdesktop.swingx.util.Utilities: int OS_WINDOWS_MASK> = 40967;

        <org.jdesktop.swingx.util.Utilities: int OS_FREEBSD> = 131072;

        <org.jdesktop.swingx.util.Utilities: int OS_OTHER> = 65536;

        <org.jdesktop.swingx.util.Utilities: int OS_WIN_OTHER> = 32768;

        <org.jdesktop.swingx.util.Utilities: int OS_VMS> = 16384;

        <org.jdesktop.swingx.util.Utilities: int OS_WIN2000> = 8192;

        <org.jdesktop.swingx.util.Utilities: int OS_MAC> = 4096;

        <org.jdesktop.swingx.util.Utilities: int OS_OS2> = 2048;

        <org.jdesktop.swingx.util.Utilities: int OS_TRU64> = 512;

        <org.jdesktop.swingx.util.Utilities: int OS_SUNOS> = 256;

        <org.jdesktop.swingx.util.Utilities: int OS_IRIX> = 128;

        <org.jdesktop.swingx.util.Utilities: int OS_AIX> = 64;

        <org.jdesktop.swingx.util.Utilities: int OS_HP> = 32;

        <org.jdesktop.swingx.util.Utilities: int OS_LINUX> = 16;

        <org.jdesktop.swingx.util.Utilities: int OS_SOLARIS> = 8;

        <org.jdesktop.swingx.util.Utilities: int OS_WIN98> = 4;

        <org.jdesktop.swingx.util.Utilities: int OS_WIN95> = 2;

        <org.jdesktop.swingx.util.Utilities: int OS_WINNT> = 1;

        <org.jdesktop.swingx.util.Utilities: int ALT_WILDCARD_MASK> = 65536;

        <org.jdesktop.swingx.util.Utilities: int CTRL_WILDCARD_MASK> = 32768;

        <org.jdesktop.swingx.util.Utilities: int operatingSystem> = -1;

        return;
    }
}
