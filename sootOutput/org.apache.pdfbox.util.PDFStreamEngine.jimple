public class org.apache.pdfbox.util.PDFStreamEngine extends java.lang.Object
{
    private static final org.apache.commons.logging.Log LOG;
    private final java.util.Set unsupportedOperators;
    private org.apache.pdfbox.pdmodel.graphics.PDGraphicsState graphicsState;
    private org.apache.pdfbox.util.Matrix textMatrix;
    private org.apache.pdfbox.util.Matrix textLineMatrix;
    private java.util.Stack graphicsStack;
    private java.util.Map operators;
    private java.util.Stack streamResourcesStack;
    private org.apache.pdfbox.pdmodel.PDPage page;
    private int validCharCnt;
    private int totalCharCnt;
    private boolean forceParsing;

    public void <init>()
    {
        java.util.HashSet $r1;
        org.apache.pdfbox.util.PDFStreamEngine r0;
        java.util.HashMap $r3;
        java.util.Stack $r2, $r4;

        r0 := @this: org.apache.pdfbox.util.PDFStreamEngine;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        r0.<org.apache.pdfbox.util.PDFStreamEngine: java.util.Set unsupportedOperators> = $r1;

        r0.<org.apache.pdfbox.util.PDFStreamEngine: org.apache.pdfbox.pdmodel.graphics.PDGraphicsState graphicsState> = null;

        r0.<org.apache.pdfbox.util.PDFStreamEngine: org.apache.pdfbox.util.Matrix textMatrix> = null;

        r0.<org.apache.pdfbox.util.PDFStreamEngine: org.apache.pdfbox.util.Matrix textLineMatrix> = null;

        $r2 = new java.util.Stack;

        specialinvoke $r2.<java.util.Stack: void <init>()>();

        r0.<org.apache.pdfbox.util.PDFStreamEngine: java.util.Stack graphicsStack> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<org.apache.pdfbox.util.PDFStreamEngine: java.util.Map operators> = $r3;

        $r4 = new java.util.Stack;

        specialinvoke $r4.<java.util.Stack: void <init>()>();

        r0.<org.apache.pdfbox.util.PDFStreamEngine: java.util.Stack streamResourcesStack> = $r4;

        r0.<org.apache.pdfbox.util.PDFStreamEngine: boolean forceParsing> = 0;

        r0.<org.apache.pdfbox.util.PDFStreamEngine: int validCharCnt> = 0;

        r0.<org.apache.pdfbox.util.PDFStreamEngine: int totalCharCnt> = 0;

        return;
    }

    public void <init>(java.util.Properties) throws java.io.IOException
    {
        java.util.Enumeration $r6;
        java.util.HashMap $r3;
        java.util.Stack $r2, $r4;
        java.lang.NullPointerException $r17;
        java.util.ArrayList $r7;
        java.util.HashSet $r1;
        org.apache.pdfbox.util.operator.OperatorProcessor r15;
        java.lang.String $r10, $r11, $r12, $r24;
        boolean $z0, $z1;
        java.util.Properties r5;
        java.util.Iterator $r8;
        java.util.Set $r16;
        org.apache.pdfbox.exceptions.WrappedIOException $r19;
        java.lang.Exception $r18;
        org.apache.pdfbox.util.PDFStreamEngine r0;
        java.lang.Object $r9, $r14;
        java.lang.Class $r13;
        java.lang.StringBuilder $r20, $r21, $r22, $r23;

        r0 := @this: org.apache.pdfbox.util.PDFStreamEngine;

        r5 := @parameter0: java.util.Properties;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        r0.<org.apache.pdfbox.util.PDFStreamEngine: java.util.Set unsupportedOperators> = $r1;

        r0.<org.apache.pdfbox.util.PDFStreamEngine: org.apache.pdfbox.pdmodel.graphics.PDGraphicsState graphicsState> = null;

        r0.<org.apache.pdfbox.util.PDFStreamEngine: org.apache.pdfbox.util.Matrix textMatrix> = null;

        r0.<org.apache.pdfbox.util.PDFStreamEngine: org.apache.pdfbox.util.Matrix textLineMatrix> = null;

        $r2 = new java.util.Stack;

        specialinvoke $r2.<java.util.Stack: void <init>()>();

        r0.<org.apache.pdfbox.util.PDFStreamEngine: java.util.Stack graphicsStack> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<org.apache.pdfbox.util.PDFStreamEngine: java.util.Map operators> = $r3;

        $r4 = new java.util.Stack;

        specialinvoke $r4.<java.util.Stack: void <init>()>();

        r0.<org.apache.pdfbox.util.PDFStreamEngine: java.util.Stack streamResourcesStack> = $r4;

        r0.<org.apache.pdfbox.util.PDFStreamEngine: boolean forceParsing> = 0;

        if r5 != null goto label1;

        $r17 = new java.lang.NullPointerException;

        specialinvoke $r17.<java.lang.NullPointerException: void <init>(java.lang.String)>("properties cannot be null");

        throw $r17;

     label1:
        $r6 = virtualinvoke r5.<java.util.Properties: java.util.Enumeration propertyNames()>();

        $r7 = staticinvoke <java.util.Collections: java.util.ArrayList list(java.util.Enumeration)>($r6);

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        $r10 = virtualinvoke $r9.<java.lang.Object: java.lang.String toString()>();

        $r11 = virtualinvoke r5.<java.util.Properties: java.lang.String getProperty(java.lang.String)>($r10);

        $r12 = "";

        $z1 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z1 == 0 goto label3;

        $r16 = r0.<org.apache.pdfbox.util.PDFStreamEngine: java.util.Set unsupportedOperators>;

        interfaceinvoke $r16.<java.util.Set: boolean add(java.lang.Object)>($r10);

        goto label6;

     label3:
        $r13 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r11);

        $r14 = virtualinvoke $r13.<java.lang.Class: java.lang.Object newInstance()>();

        r15 = (org.apache.pdfbox.util.operator.OperatorProcessor) $r14;

        virtualinvoke r0.<org.apache.pdfbox.util.PDFStreamEngine: void registerOperatorProcessor(java.lang.String,org.apache.pdfbox.util.operator.OperatorProcessor)>($r10, r15);

     label4:
        goto label6;

     label5:
        $r18 := @caughtexception;

        $r19 = new org.apache.pdfbox.exceptions.WrappedIOException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("OperatorProcessor class ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" could not be instantiated");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<org.apache.pdfbox.exceptions.WrappedIOException: void <init>(java.lang.String,java.lang.Throwable)>($r24, $r18);

        throw $r19;

     label6:
        goto label2;

     label7:
        r0.<org.apache.pdfbox.util.PDFStreamEngine: int validCharCnt> = 0;

        r0.<org.apache.pdfbox.util.PDFStreamEngine: int totalCharCnt> = 0;

        return;

        catch java.lang.Exception from label3 to label4 with label5;
    }

    public boolean isForceParsing()
    {
        org.apache.pdfbox.util.PDFStreamEngine r0;
        boolean $z0;

        r0 := @this: org.apache.pdfbox.util.PDFStreamEngine;

        $z0 = r0.<org.apache.pdfbox.util.PDFStreamEngine: boolean forceParsing>;

        return $z0;
    }

    public void setForceParsing(boolean)
    {
        org.apache.pdfbox.util.PDFStreamEngine r0;
        boolean z0;

        r0 := @this: org.apache.pdfbox.util.PDFStreamEngine;

        z0 := @parameter0: boolean;

        r0.<org.apache.pdfbox.util.PDFStreamEngine: boolean forceParsing> = z0;

        return;
    }

    public void registerOperatorProcessor(java.lang.String, org.apache.pdfbox.util.operator.OperatorProcessor)
    {
        org.apache.pdfbox.util.PDFStreamEngine r1;
        org.apache.pdfbox.util.operator.OperatorProcessor r0;
        java.util.Map $r3;
        java.lang.String r2;

        r1 := @this: org.apache.pdfbox.util.PDFStreamEngine;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: org.apache.pdfbox.util.operator.OperatorProcessor;

        virtualinvoke r0.<org.apache.pdfbox.util.operator.OperatorProcessor: void setContext(org.apache.pdfbox.util.PDFStreamEngine)>(r1);

        $r3 = r1.<org.apache.pdfbox.util.PDFStreamEngine: java.util.Map operators>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r0);

        return;
    }

    public void resetEngine()
    {
        org.apache.pdfbox.util.PDFStreamEngine r0;

        r0 := @this: org.apache.pdfbox.util.PDFStreamEngine;

        r0.<org.apache.pdfbox.util.PDFStreamEngine: int validCharCnt> = 0;

        r0.<org.apache.pdfbox.util.PDFStreamEngine: int totalCharCnt> = 0;

        return;
    }

    public void processStream(org.apache.pdfbox.pdmodel.PDPage, org.apache.pdfbox.pdmodel.PDResources, org.apache.pdfbox.cos.COSStream) throws java.io.IOException
    {
        org.apache.pdfbox.pdmodel.graphics.PDGraphicsState $r1;
        org.apache.pdfbox.pdmodel.PDResources r6;
        java.util.Stack $r4, $r5;
        org.apache.pdfbox.pdmodel.common.PDRectangle $r3;
        org.apache.pdfbox.util.PDFStreamEngine r0;
        org.apache.pdfbox.pdmodel.PDPage r2;
        org.apache.pdfbox.cos.COSStream r7;

        r0 := @this: org.apache.pdfbox.util.PDFStreamEngine;

        r2 := @parameter0: org.apache.pdfbox.pdmodel.PDPage;

        r6 := @parameter1: org.apache.pdfbox.pdmodel.PDResources;

        r7 := @parameter2: org.apache.pdfbox.cos.COSStream;

        $r1 = new org.apache.pdfbox.pdmodel.graphics.PDGraphicsState;

        $r3 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.pdmodel.common.PDRectangle findCropBox()>();

        specialinvoke $r1.<org.apache.pdfbox.pdmodel.graphics.PDGraphicsState: void <init>(org.apache.pdfbox.pdmodel.common.PDRectangle)>($r3);

        r0.<org.apache.pdfbox.util.PDFStreamEngine: org.apache.pdfbox.pdmodel.graphics.PDGraphicsState graphicsState> = $r1;

        r0.<org.apache.pdfbox.util.PDFStreamEngine: org.apache.pdfbox.util.Matrix textMatrix> = null;

        r0.<org.apache.pdfbox.util.PDFStreamEngine: org.apache.pdfbox.util.Matrix textLineMatrix> = null;

        $r4 = r0.<org.apache.pdfbox.util.PDFStreamEngine: java.util.Stack graphicsStack>;

        virtualinvoke $r4.<java.util.Stack: void clear()>();

        $r5 = r0.<org.apache.pdfbox.util.PDFStreamEngine: java.util.Stack streamResourcesStack>;

        virtualinvoke $r5.<java.util.Stack: void clear()>();

        virtualinvoke r0.<org.apache.pdfbox.util.PDFStreamEngine: void processSubStream(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.cos.COSStream)>(r2, r6, r7);

        return;
    }

    public void processSubStream(org.apache.pdfbox.pdmodel.PDPage, org.apache.pdfbox.pdmodel.PDResources, org.apache.pdfbox.cos.COSStream) throws java.io.IOException
    {
        java.lang.Throwable $r8;
        org.apache.pdfbox.pdmodel.PDResources r2, $r7, $r11;
        java.util.Stack $r4, $r5, $r9;
        org.apache.pdfbox.util.PDFStreamEngine r0;
        org.apache.pdfbox.pdmodel.PDPage r1;
        java.lang.Object $r6, $r10;
        org.apache.pdfbox.cos.COSStream r3;

        r0 := @this: org.apache.pdfbox.util.PDFStreamEngine;

        r1 := @parameter0: org.apache.pdfbox.pdmodel.PDPage;

        r2 := @parameter1: org.apache.pdfbox.pdmodel.PDResources;

        r3 := @parameter2: org.apache.pdfbox.cos.COSStream;

        r0.<org.apache.pdfbox.util.PDFStreamEngine: org.apache.pdfbox.pdmodel.PDPage page> = r1;

        if r2 == null goto label6;

        $r4 = r0.<org.apache.pdfbox.util.PDFStreamEngine: java.util.Stack streamResourcesStack>;

        virtualinvoke $r4.<java.util.Stack: java.lang.Object push(java.lang.Object)>(r2);

     label1:
        specialinvoke r0.<org.apache.pdfbox.util.PDFStreamEngine: void processSubStream(org.apache.pdfbox.cos.COSStream)>(r3);

     label2:
        $r5 = r0.<org.apache.pdfbox.util.PDFStreamEngine: java.util.Stack streamResourcesStack>;

        $r6 = virtualinvoke $r5.<java.util.Stack: java.lang.Object pop()>();

        $r7 = (org.apache.pdfbox.pdmodel.PDResources) $r6;

        virtualinvoke $r7.<org.apache.pdfbox.pdmodel.PDResources: void clear()>();

        goto label5;

     label3:
        $r8 := @caughtexception;

     label4:
        $r9 = r0.<org.apache.pdfbox.util.PDFStreamEngine: java.util.Stack streamResourcesStack>;

        $r10 = virtualinvoke $r9.<java.util.Stack: java.lang.Object pop()>();

        $r11 = (org.apache.pdfbox.pdmodel.PDResources) $r10;

        virtualinvoke $r11.<org.apache.pdfbox.pdmodel.PDResources: void clear()>();

        throw $r8;

     label5:
        goto label7;

     label6:
        specialinvoke r0.<org.apache.pdfbox.util.PDFStreamEngine: void processSubStream(org.apache.pdfbox.cos.COSStream)>(r3);

     label7:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private void processSubStream(org.apache.pdfbox.cos.COSStream) throws java.io.IOException
    {
        java.lang.Throwable $r17;
        org.apache.pdfbox.cos.COSObject $r10;
        java.util.ArrayList $r0, $r9, r18;
        java.lang.String $r16;
        org.apache.pdfbox.cos.COSStream r2;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.Iterator $r4;
        org.apache.pdfbox.pdfparser.PDFStreamParser $r1;
        org.apache.pdfbox.util.PDFStreamEngine r3;
        org.apache.pdfbox.cos.COSBase $r7, $r11;
        java.lang.Object $r5;
        org.apache.commons.logging.Log $r6, $r13;
        java.lang.StringBuilder $r12, $r14, $r15;
        org.apache.pdfbox.util.PDFOperator $r8;

        r3 := @this: org.apache.pdfbox.util.PDFStreamEngine;

        r2 := @parameter0: org.apache.pdfbox.cos.COSStream;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        r18 = $r0;

        $r1 = new org.apache.pdfbox.pdfparser.PDFStreamParser;

        $z0 = r3.<org.apache.pdfbox.util.PDFStreamEngine: boolean forceParsing>;

        specialinvoke $r1.<org.apache.pdfbox.pdfparser.PDFStreamParser: void <init>(org.apache.pdfbox.cos.COSStream,boolean)>(r2, $z0);

     label01:
        $r4 = virtualinvoke $r1.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.util.Iterator getTokenIterator()>();

     label02:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label07;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = <org.apache.pdfbox.util.PDFStreamEngine: org.apache.commons.logging.Log LOG>;

        $z2 = interfaceinvoke $r6.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z2 == 0 goto label03;

        $r13 = <org.apache.pdfbox.util.PDFStreamEngine: org.apache.commons.logging.Log LOG>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("processing substream token: ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r13.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r16);

     label03:
        $z3 = $r5 instanceof org.apache.pdfbox.cos.COSObject;

        if $z3 == 0 goto label04;

        $r10 = (org.apache.pdfbox.cos.COSObject) $r5;

        $r11 = virtualinvoke $r10.<org.apache.pdfbox.cos.COSObject: org.apache.pdfbox.cos.COSBase getObject()>();

        interfaceinvoke r18.<java.util.List: boolean add(java.lang.Object)>($r11);

        goto label06;

     label04:
        $z4 = $r5 instanceof org.apache.pdfbox.util.PDFOperator;

        if $z4 == 0 goto label05;

        $r8 = (org.apache.pdfbox.util.PDFOperator) $r5;

        virtualinvoke r3.<org.apache.pdfbox.util.PDFStreamEngine: void processOperator(org.apache.pdfbox.util.PDFOperator,java.util.List)>($r8, r18);

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r18 = $r9;

        goto label06;

     label05:
        $r7 = (org.apache.pdfbox.cos.COSBase) $r5;

        interfaceinvoke r18.<java.util.List: boolean add(java.lang.Object)>($r7);

     label06:
        goto label02;

     label07:
        virtualinvoke $r1.<org.apache.pdfbox.pdfparser.PDFStreamParser: void close()>();

        goto label10;

     label08:
        $r17 := @caughtexception;

     label09:
        virtualinvoke $r1.<org.apache.pdfbox.pdfparser.PDFStreamParser: void close()>();

        throw $r17;

     label10:
        return;

        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    protected void processTextPosition(org.apache.pdfbox.util.TextPosition)
    {
        org.apache.pdfbox.util.PDFStreamEngine r0;
        org.apache.pdfbox.util.TextPosition r1;

        r0 := @this: org.apache.pdfbox.util.PDFStreamEngine;

        r1 := @parameter0: org.apache.pdfbox.util.TextPosition;

        return;
    }

    protected java.lang.String inspectFontEncoding(java.lang.String)
    {
        org.apache.pdfbox.util.PDFStreamEngine r1;
        java.lang.String r0;

        r1 := @this: org.apache.pdfbox.util.PDFStreamEngine;

        r0 := @parameter0: java.lang.String;

        return r0;
    }

    public void processEncodedText(byte[]) throws java.io.IOException
    {
        byte[] r26;
        byte $b0, $b1, b13, $b14, b15, b16, b17, b18;
        org.apache.pdfbox.pdmodel.text.PDTextState $r2, $r4, $r6, $r8, $r10, $r12;
        org.apache.pdfbox.pdmodel.PDPage $r15, $r16, $r18;
        java.lang.Throwable $r32;
        org.apache.pdfbox.pdmodel.font.PDFont $r13;
        java.lang.String $r27, r34;
        org.apache.pdfbox.pdmodel.common.PDMatrix $r31;
        int[] $r30, r35;
        boolean $z0;
        org.apache.pdfbox.pdmodel.graphics.PDGraphicsState $r1, $r3, $r5, $r7, $r9, $r11, $r20;
        org.apache.pdfbox.util.TextPosition $r46;
        float $f0, $f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, f17, f18, f19, f20, f21, f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, f34, $f35, $f36, $f37, $f38, $f39, $f40, $f41, $f42, $f43, $f44;
        int $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, $i12, $i19;
        org.apache.pdfbox.pdmodel.common.PDRectangle $r17, $r19;
        org.apache.pdfbox.util.PDFStreamEngine r0;
        org.apache.pdfbox.util.Matrix $r21, $r29, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45;
        org.apache.commons.logging.Log $r33;

        r0 := @this: org.apache.pdfbox.util.PDFStreamEngine;

        r26 := @parameter0: byte[];

        $r1 = r0.<org.apache.pdfbox.util.PDFStreamEngine: org.apache.pdfbox.pdmodel.graphics.PDGraphicsState graphicsState>;

        $r2 = virtualinvoke $r1.<org.apache.pdfbox.pdmodel.graphics.PDGraphicsState: org.apache.pdfbox.pdmodel.text.PDTextState getTextState()>();

        $f0 = virtualinvoke $r2.<org.apache.pdfbox.pdmodel.text.PDTextState: float getFontSize()>();

        $r3 = r0.<org.apache.pdfbox.util.PDFStreamEngine: org.apache.pdfbox.pdmodel.graphics.PDGraphicsState graphicsState>;

        $r4 = virtualinvoke $r3.<org.apache.pdfbox.pdmodel.graphics.PDGraphicsState: org.apache.pdfbox.pdmodel.text.PDTextState getTextState()>();

        $f1 = virtualinvoke $r4.<org.apache.pdfbox.pdmodel.text.PDTextState: float getHorizontalScalingPercent()>();

        f2 = $f1 / 100.0F;

        $r5 = r0.<org.apache.pdfbox.util.PDFStreamEngine: org.apache.pdfbox.pdmodel.graphics.PDGraphicsState graphicsState>;

        $r6 = virtualinvoke $r5.<org.apache.pdfbox.pdmodel.graphics.PDGraphicsState: org.apache.pdfbox.pdmodel.text.PDTextState getTextState()>();

        $f3 = virtualinvoke $r6.<org.apache.pdfbox.pdmodel.text.PDTextState: float getRise()>();

        $r7 = r0.<org.apache.pdfbox.util.PDFStreamEngine: org.apache.pdfbox.pdmodel.graphics.PDGraphicsState graphicsState>;

        $r8 = virtualinvoke $r7.<org.apache.pdfbox.pdmodel.graphics.PDGraphicsState: org.apache.pdfbox.pdmodel.text.PDTextState getTextState()>();

        $f4 = virtualinvoke $r8.<org.apache.pdfbox.pdmodel.text.PDTextState: float getWordSpacing()>();

        $r9 = r0.<org.apache.pdfbox.util.PDFStreamEngine: org.apache.pdfbox.pdmodel.graphics.PDGraphicsState graphicsState>;

        $r10 = virtualinvoke $r9.<org.apache.pdfbox.pdmodel.graphics.PDGraphicsState: org.apache.pdfbox.pdmodel.text.PDTextState getTextState()>();

        $f5 = virtualinvoke $r10.<org.apache.pdfbox.pdmodel.text.PDTextState: float getCharacterSpacing()>();

        $r11 = r0.<org.apache.pdfbox.util.PDFStreamEngine: org.apache.pdfbox.pdmodel.graphics.PDGraphicsState graphicsState>;

        $r12 = virtualinvoke $r11.<org.apache.pdfbox.pdmodel.graphics.PDGraphicsState: org.apache.pdfbox.pdmodel.text.PDTextState getTextState()>();

        $r13 = virtualinvoke $r12.<org.apache.pdfbox.pdmodel.text.PDTextState: org.apache.pdfbox.pdmodel.font.PDFont getFont()>();

        f17 = 0.001F;

        f18 = 0.001F;

        f19 = 0.001F;

        $z0 = $r13 instanceof org.apache.pdfbox.pdmodel.font.PDType3Font;

        if $z0 == 0 goto label01;

        $r31 = virtualinvoke $r13.<org.apache.pdfbox.pdmodel.font.PDFont: org.apache.pdfbox.pdmodel.common.PDMatrix getFontMatrix()>();

        f17 = virtualinvoke $r31.<org.apache.pdfbox.pdmodel.common.PDMatrix: float getValue(int,int)>(0, 0);

        f18 = virtualinvoke $r31.<org.apache.pdfbox.pdmodel.common.PDMatrix: float getValue(int,int)>(1, 1);

        $f16 = virtualinvoke $r31.<org.apache.pdfbox.pdmodel.common.PDMatrix: float getValue(int,int)>(0, 0);

        f19 = 1.0F / $f16;

     label01:
        f20 = 0.0F;

     label02:
        $f6 = virtualinvoke $r13.<org.apache.pdfbox.pdmodel.font.PDFont: float getSpaceWidth()>();

        f20 = $f6 * f19;

     label03:
        goto label05;

     label04:
        $r32 := @caughtexception;

        $r33 = <org.apache.pdfbox.util.PDFStreamEngine: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r33.<org.apache.commons.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r32, $r32);

     label05:
        $b0 = f20 cmpl 0.0F;

        if $b0 != 0 goto label06;

        $f15 = virtualinvoke $r13.<org.apache.pdfbox.pdmodel.font.PDFont: float getAverageFontWidth()>();

        f21 = $f15 * f19;

        f20 = f21 * 0.8F;

     label06:
        $b1 = f20 cmpl 0.0F;

        if $b1 != 0 goto label07;

        f20 = 1.0F;

     label07:
        f22 = 0.0F;

        $r41 = new org.apache.pdfbox.util.Matrix;

        specialinvoke $r41.<org.apache.pdfbox.util.Matrix: void <init>()>();

        $f7 = $f0 * f2;

        virtualinvoke $r41.<org.apache.pdfbox.util.Matrix: void setValue(int,int,float)>(0, 0, $f7);

        virtualinvoke $r41.<org.apache.pdfbox.util.Matrix: void setValue(int,int,float)>(1, 1, $f0);

        virtualinvoke $r41.<org.apache.pdfbox.util.Matrix: void setValue(int,int,float)>(2, 1, $f3);

        $r15 = r0.<org.apache.pdfbox.util.PDFStreamEngine: org.apache.pdfbox.pdmodel.PDPage page>;

        $i2 = virtualinvoke $r15.<org.apache.pdfbox.pdmodel.PDPage: int findRotation()>();

        $r16 = r0.<org.apache.pdfbox.util.PDFStreamEngine: org.apache.pdfbox.pdmodel.PDPage page>;

        $r17 = virtualinvoke $r16.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.pdmodel.common.PDRectangle findCropBox()>();

        $f8 = virtualinvoke $r17.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getHeight()>();

        $r18 = r0.<org.apache.pdfbox.util.PDFStreamEngine: org.apache.pdfbox.pdmodel.PDPage page>;

        $r19 = virtualinvoke $r18.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.pdmodel.common.PDRectangle findCropBox()>();

        $f9 = virtualinvoke $r19.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getWidth()>();

        $r20 = virtualinvoke r0.<org.apache.pdfbox.util.PDFStreamEngine: org.apache.pdfbox.pdmodel.graphics.PDGraphicsState getGraphicsState()>();

        $r21 = virtualinvoke $r20.<org.apache.pdfbox.pdmodel.graphics.PDGraphicsState: org.apache.pdfbox.util.Matrix getCurrentTransformationMatrix()>();

        $r42 = new org.apache.pdfbox.util.Matrix;

        specialinvoke $r42.<org.apache.pdfbox.util.Matrix: void <init>()>();

        $r43 = new org.apache.pdfbox.util.Matrix;

        specialinvoke $r43.<org.apache.pdfbox.util.Matrix: void <init>()>();

        $r44 = new org.apache.pdfbox.util.Matrix;

        specialinvoke $r44.<org.apache.pdfbox.util.Matrix: void <init>()>();

        $r45 = new org.apache.pdfbox.util.Matrix;

        specialinvoke $r45.<org.apache.pdfbox.util.Matrix: void <init>()>();

        i11 = 0;

     label08:
        $i12 = lengthof r26;

        if i11 >= $i12 goto label13;

        b13 = 1;

        b18 = 1;

        b17 = 1;

        b16 = 1;

        b15 = 1;

        $r27 = virtualinvoke $r13.<org.apache.pdfbox.pdmodel.font.PDFont: java.lang.String encode(byte[],int,int)>(r26, i11, 1);

        r34 = $r27;

        r35 = null;

        if $r27 != null goto label09;

        $i9 = i11 + 1;

        $i8 = lengthof r26;

        if $i9 >= $i8 goto label09;

        b13 = 2;

        b18 = 2;

        b17 = 2;

        b16 = 2;

        b15 = 2;

        r34 = virtualinvoke $r13.<org.apache.pdfbox.pdmodel.font.PDFont: java.lang.String encode(byte[],int,int)>(r26, i11, 2);

        $r30 = newarray (int)[1];

        $i10 = virtualinvoke $r13.<org.apache.pdfbox.pdmodel.font.PDFont: int getCodeFromArray(byte[],int,int)>(r26, i11, 2);

        $r30[0] = $i10;

        r35 = $r30;

     label09:
        $f23 = f20 * $f0;

        $f24 = $f23 * f2;

        $r36 = r0.<org.apache.pdfbox.util.PDFStreamEngine: org.apache.pdfbox.util.Matrix textMatrix>;

        $f25 = virtualinvoke $r36.<org.apache.pdfbox.util.Matrix: float getXScale()>();

        $f26 = $f24 * $f25;

        $f27 = virtualinvoke $r21.<org.apache.pdfbox.util.Matrix: float getXScale()>();

        $f28 = $f26 * $f27;

        $f29 = virtualinvoke $r13.<org.apache.pdfbox.pdmodel.font.PDFont: float getFontWidth(byte[],int,int)>(r26, i11, b17);

        $f30 = virtualinvoke $r13.<org.apache.pdfbox.pdmodel.font.PDFont: float getFontHeight(byte[],int,int)>(r26, i11, b16);

        $f31 = $f29 * f17;

        $f32 = $f30 * f18;

        $f33 = staticinvoke <java.lang.Math: float max(float,float)>(f22, $f32);

        f22 = $f33;

        f34 = 0.0F;

        $b14 = r26[i11];

        $i19 = (int) $b14;

        if $i19 != 32 goto label10;

        if b15 != 1 goto label10;

        f34 = 0.0F + $f4;

     label10:
        $r37 = r0.<org.apache.pdfbox.util.PDFStreamEngine: org.apache.pdfbox.util.Matrix textMatrix>;

        virtualinvoke $r37.<org.apache.pdfbox.util.Matrix: org.apache.pdfbox.util.Matrix multiply(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.util.Matrix)>($r21, $r42);

        $r38 = virtualinvoke $r41.<org.apache.pdfbox.util.Matrix: org.apache.pdfbox.util.Matrix multiply(org.apache.pdfbox.util.Matrix)>($r42);

        $f35 = $f31 * $f0;

        $f36 = $f35 * f2;

        virtualinvoke $r44.<org.apache.pdfbox.util.Matrix: void reset()>();

        virtualinvoke $r44.<org.apache.pdfbox.util.Matrix: void setValue(int,int,float)>(2, 0, $f36);

        virtualinvoke $r44.<org.apache.pdfbox.util.Matrix: void setValue(int,int,float)>(2, 1, 0.0F);

        virtualinvoke $r41.<org.apache.pdfbox.util.Matrix: org.apache.pdfbox.util.Matrix multiply(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.util.Matrix)>($r44, $r45);

        virtualinvoke $r45.<org.apache.pdfbox.util.Matrix: org.apache.pdfbox.util.Matrix multiply(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.util.Matrix)>($r42, $r43);

        $f37 = virtualinvoke $r43.<org.apache.pdfbox.util.Matrix: float getXPosition()>();

        $f38 = virtualinvoke $r43.<org.apache.pdfbox.util.Matrix: float getYPosition()>();

        $f39 = $f31 * $f0;

        $f40 = $f39 + $f5;

        $f41 = $f40 + f34;

        $f42 = $f41 * f2;

        virtualinvoke $r44.<org.apache.pdfbox.util.Matrix: void setValue(int,int,float)>(2, 0, $f42);

        $r39 = r0.<org.apache.pdfbox.util.PDFStreamEngine: org.apache.pdfbox.util.Matrix textMatrix>;

        $r40 = r0.<org.apache.pdfbox.util.PDFStreamEngine: org.apache.pdfbox.util.Matrix textMatrix>;

        virtualinvoke $r44.<org.apache.pdfbox.util.Matrix: org.apache.pdfbox.util.Matrix multiply(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.util.Matrix)>($r39, $r40);

        $f43 = virtualinvoke $r38.<org.apache.pdfbox.util.Matrix: float getXPosition()>();

        $f44 = $f37 - $f43;

        if r34 == null goto label11;

        $i6 = r0.<org.apache.pdfbox.util.PDFStreamEngine: int validCharCnt>;

        $i7 = $i6 + 1;

        r0.<org.apache.pdfbox.util.PDFStreamEngine: int validCharCnt> = $i7;

        goto label12;

     label11:
        r34 = "?";

     label12:
        $i3 = r0.<org.apache.pdfbox.util.PDFStreamEngine: int totalCharCnt>;

        $i4 = $i3 + 1;

        r0.<org.apache.pdfbox.util.PDFStreamEngine: int totalCharCnt> = $i4;

        $f10 = $f33 * $f0;

        $f11 = virtualinvoke $r42.<org.apache.pdfbox.util.Matrix: float getYScale()>();

        $f14 = $f10 * $f11;

        $r46 = new org.apache.pdfbox.util.TextPosition;

        $r29 = r0.<org.apache.pdfbox.util.PDFStreamEngine: org.apache.pdfbox.util.Matrix textMatrix>;

        $f12 = virtualinvoke $r29.<org.apache.pdfbox.util.Matrix: float getXScale()>();

        $f13 = $f0 * $f12;

        $i5 = (int) $f13;

        specialinvoke $r46.<org.apache.pdfbox.util.TextPosition: void <init>(int,float,float,org.apache.pdfbox.util.Matrix,float,float,float,float,float,java.lang.String,int[],org.apache.pdfbox.pdmodel.font.PDFont,float,int)>($i2, $f9, $f8, $r38, $f37, $f38, $f14, $f44, $f28, r34, r35, $r13, $f0, $i5);

        virtualinvoke r0.<org.apache.pdfbox.util.PDFStreamEngine: void processTextPosition(org.apache.pdfbox.util.TextPosition)>($r46);

        i11 = i11 + b18;

        goto label08;

     label13:
        return;

        catch java.lang.Throwable from label02 to label03 with label04;
    }

    public void processOperator(java.lang.String, java.util.List) throws java.io.IOException
    {
        org.apache.pdfbox.util.PDFStreamEngine r2;
        java.util.List r3;
        java.io.IOException $r4;
        org.apache.commons.logging.Log $r5;
        java.lang.String r0;
        org.apache.pdfbox.util.PDFOperator $r1;

        r2 := @this: org.apache.pdfbox.util.PDFStreamEngine;

        r0 := @parameter0: java.lang.String;

        r3 := @parameter1: java.util.List;

     label1:
        $r1 = staticinvoke <org.apache.pdfbox.util.PDFOperator: org.apache.pdfbox.util.PDFOperator getOperator(java.lang.String)>(r0);

        virtualinvoke r2.<org.apache.pdfbox.util.PDFStreamEngine: void processOperator(org.apache.pdfbox.util.PDFOperator,java.util.List)>($r1, r3);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = <org.apache.pdfbox.util.PDFStreamEngine: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r5.<org.apache.commons.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r4, $r4);

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    protected void processOperator(org.apache.pdfbox.util.PDFOperator, java.util.List) throws java.io.IOException
    {
        org.apache.pdfbox.util.operator.OperatorProcessor r5;
        java.util.Map $r3;
        java.lang.String $r1, $r11;
        boolean $z0;
        java.util.Set $r6, $r12;
        java.lang.Exception $r14;
        org.apache.pdfbox.util.PDFStreamEngine r2;
        java.util.List r13;
        java.lang.Object $r4;
        java.lang.StringBuilder $r7, $r9, $r10;
        org.apache.commons.logging.Log $r8, $r15;
        org.apache.pdfbox.util.PDFOperator r0;

        r2 := @this: org.apache.pdfbox.util.PDFStreamEngine;

        r0 := @parameter0: org.apache.pdfbox.util.PDFOperator;

        r13 := @parameter1: java.util.List;

     label1:
        $r1 = virtualinvoke r0.<org.apache.pdfbox.util.PDFOperator: java.lang.String getOperation()>();

        $r3 = r2.<org.apache.pdfbox.util.PDFStreamEngine: java.util.Map operators>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        r5 = (org.apache.pdfbox.util.operator.OperatorProcessor) $r4;

        if r5 == null goto label2;

        virtualinvoke r5.<org.apache.pdfbox.util.operator.OperatorProcessor: void setContext(org.apache.pdfbox.util.PDFStreamEngine)>(r2);

        virtualinvoke r5.<org.apache.pdfbox.util.operator.OperatorProcessor: void process(org.apache.pdfbox.util.PDFOperator,java.util.List)>(r0, r13);

        goto label3;

     label2:
        $r6 = r2.<org.apache.pdfbox.util.PDFStreamEngine: java.util.Set unsupportedOperators>;

        $z0 = interfaceinvoke $r6.<java.util.Set: boolean contains(java.lang.Object)>($r1);

        if $z0 != 0 goto label3;

        $r8 = <org.apache.pdfbox.util.PDFStreamEngine: org.apache.commons.logging.Log LOG>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unsupported/disabled operation: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r8.<org.apache.commons.logging.Log: void info(java.lang.Object)>($r11);

        $r12 = r2.<org.apache.pdfbox.util.PDFStreamEngine: java.util.Set unsupportedOperators>;

        interfaceinvoke $r12.<java.util.Set: boolean add(java.lang.Object)>($r1);

     label3:
        goto label5;

     label4:
        $r14 := @caughtexception;

        $r15 = <org.apache.pdfbox.util.PDFStreamEngine: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r15.<org.apache.commons.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r14, $r14);

     label5:
        return;

        catch java.lang.Exception from label1 to label3 with label4;
    }

    public java.util.Map getColorSpaces()
    {
        org.apache.pdfbox.util.PDFStreamEngine r0;
        java.util.Map $r4;
        java.lang.Object $r2;
        org.apache.pdfbox.pdmodel.PDResources $r3;
        java.util.Stack $r1;

        r0 := @this: org.apache.pdfbox.util.PDFStreamEngine;

        $r1 = r0.<org.apache.pdfbox.util.PDFStreamEngine: java.util.Stack streamResourcesStack>;

        $r2 = virtualinvoke $r1.<java.util.Stack: java.lang.Object peek()>();

        $r3 = (org.apache.pdfbox.pdmodel.PDResources) $r2;

        $r4 = virtualinvoke $r3.<org.apache.pdfbox.pdmodel.PDResources: java.util.Map getColorSpaces()>();

        return $r4;
    }

    public java.util.Map getXObjects()
    {
        org.apache.pdfbox.util.PDFStreamEngine r0;
        java.util.Map $r4;
        java.lang.Object $r2;
        org.apache.pdfbox.pdmodel.PDResources $r3;
        java.util.Stack $r1;

        r0 := @this: org.apache.pdfbox.util.PDFStreamEngine;

        $r1 = r0.<org.apache.pdfbox.util.PDFStreamEngine: java.util.Stack streamResourcesStack>;

        $r2 = virtualinvoke $r1.<java.util.Stack: java.lang.Object peek()>();

        $r3 = (org.apache.pdfbox.pdmodel.PDResources) $r2;

        $r4 = virtualinvoke $r3.<org.apache.pdfbox.pdmodel.PDResources: java.util.Map getXObjects()>();

        return $r4;
    }

    public void setColorSpaces(java.util.Map)
    {
        org.apache.pdfbox.util.PDFStreamEngine r0;
        java.util.Map r3;
        java.lang.Object $r2;
        org.apache.pdfbox.pdmodel.PDResources $r4;
        java.util.Stack $r1;

        r0 := @this: org.apache.pdfbox.util.PDFStreamEngine;

        r3 := @parameter0: java.util.Map;

        $r1 = r0.<org.apache.pdfbox.util.PDFStreamEngine: java.util.Stack streamResourcesStack>;

        $r2 = virtualinvoke $r1.<java.util.Stack: java.lang.Object peek()>();

        $r4 = (org.apache.pdfbox.pdmodel.PDResources) $r2;

        virtualinvoke $r4.<org.apache.pdfbox.pdmodel.PDResources: void setColorSpaces(java.util.Map)>(r3);

        return;
    }

    public java.util.Map getFonts()
    {
        org.apache.pdfbox.pdmodel.PDResources $r4;
        java.util.Stack $r1, $r2;
        org.apache.pdfbox.util.PDFStreamEngine r0;
        java.util.Map $r5, $r6;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: org.apache.pdfbox.util.PDFStreamEngine;

        $r1 = r0.<org.apache.pdfbox.util.PDFStreamEngine: java.util.Stack streamResourcesStack>;

        $z0 = virtualinvoke $r1.<java.util.Stack: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r6 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        return $r6;

     label1:
        $r2 = r0.<org.apache.pdfbox.util.PDFStreamEngine: java.util.Stack streamResourcesStack>;

        $r3 = virtualinvoke $r2.<java.util.Stack: java.lang.Object peek()>();

        $r4 = (org.apache.pdfbox.pdmodel.PDResources) $r3;

        $r5 = virtualinvoke $r4.<org.apache.pdfbox.pdmodel.PDResources: java.util.Map getFonts()>();

        return $r5;
    }

    public void setFonts(java.util.Map)
    {
        org.apache.pdfbox.util.PDFStreamEngine r0;
        java.util.Map r3;
        java.lang.Object $r2;
        org.apache.pdfbox.pdmodel.PDResources $r4;
        java.util.Stack $r1;

        r0 := @this: org.apache.pdfbox.util.PDFStreamEngine;

        r3 := @parameter0: java.util.Map;

        $r1 = r0.<org.apache.pdfbox.util.PDFStreamEngine: java.util.Stack streamResourcesStack>;

        $r2 = virtualinvoke $r1.<java.util.Stack: java.lang.Object peek()>();

        $r4 = (org.apache.pdfbox.pdmodel.PDResources) $r2;

        virtualinvoke $r4.<org.apache.pdfbox.pdmodel.PDResources: void setFonts(java.util.Map)>(r3);

        return;
    }

    public java.util.Stack getGraphicsStack()
    {
        org.apache.pdfbox.util.PDFStreamEngine r0;
        java.util.Stack $r1;

        r0 := @this: org.apache.pdfbox.util.PDFStreamEngine;

        $r1 = r0.<org.apache.pdfbox.util.PDFStreamEngine: java.util.Stack graphicsStack>;

        return $r1;
    }

    public void setGraphicsStack(java.util.Stack)
    {
        org.apache.pdfbox.util.PDFStreamEngine r0;
        java.util.Stack r1;

        r0 := @this: org.apache.pdfbox.util.PDFStreamEngine;

        r1 := @parameter0: java.util.Stack;

        r0.<org.apache.pdfbox.util.PDFStreamEngine: java.util.Stack graphicsStack> = r1;

        return;
    }

    public org.apache.pdfbox.pdmodel.graphics.PDGraphicsState getGraphicsState()
    {
        org.apache.pdfbox.util.PDFStreamEngine r0;
        org.apache.pdfbox.pdmodel.graphics.PDGraphicsState $r1;

        r0 := @this: org.apache.pdfbox.util.PDFStreamEngine;

        $r1 = r0.<org.apache.pdfbox.util.PDFStreamEngine: org.apache.pdfbox.pdmodel.graphics.PDGraphicsState graphicsState>;

        return $r1;
    }

    public void setGraphicsState(org.apache.pdfbox.pdmodel.graphics.PDGraphicsState)
    {
        org.apache.pdfbox.util.PDFStreamEngine r0;
        org.apache.pdfbox.pdmodel.graphics.PDGraphicsState r1;

        r0 := @this: org.apache.pdfbox.util.PDFStreamEngine;

        r1 := @parameter0: org.apache.pdfbox.pdmodel.graphics.PDGraphicsState;

        r0.<org.apache.pdfbox.util.PDFStreamEngine: org.apache.pdfbox.pdmodel.graphics.PDGraphicsState graphicsState> = r1;

        return;
    }

    public java.util.Map getGraphicsStates()
    {
        org.apache.pdfbox.util.PDFStreamEngine r0;
        java.util.Map $r4;
        java.lang.Object $r2;
        org.apache.pdfbox.pdmodel.PDResources $r3;
        java.util.Stack $r1;

        r0 := @this: org.apache.pdfbox.util.PDFStreamEngine;

        $r1 = r0.<org.apache.pdfbox.util.PDFStreamEngine: java.util.Stack streamResourcesStack>;

        $r2 = virtualinvoke $r1.<java.util.Stack: java.lang.Object peek()>();

        $r3 = (org.apache.pdfbox.pdmodel.PDResources) $r2;

        $r4 = virtualinvoke $r3.<org.apache.pdfbox.pdmodel.PDResources: java.util.Map getGraphicsStates()>();

        return $r4;
    }

    public void setGraphicsStates(java.util.Map)
    {
        org.apache.pdfbox.util.PDFStreamEngine r0;
        java.util.Map r3;
        java.lang.Object $r2;
        org.apache.pdfbox.pdmodel.PDResources $r4;
        java.util.Stack $r1;

        r0 := @this: org.apache.pdfbox.util.PDFStreamEngine;

        r3 := @parameter0: java.util.Map;

        $r1 = r0.<org.apache.pdfbox.util.PDFStreamEngine: java.util.Stack streamResourcesStack>;

        $r2 = virtualinvoke $r1.<java.util.Stack: java.lang.Object peek()>();

        $r4 = (org.apache.pdfbox.pdmodel.PDResources) $r2;

        virtualinvoke $r4.<org.apache.pdfbox.pdmodel.PDResources: void setGraphicsStates(java.util.Map)>(r3);

        return;
    }

    public org.apache.pdfbox.util.Matrix getTextLineMatrix()
    {
        org.apache.pdfbox.util.PDFStreamEngine r0;
        org.apache.pdfbox.util.Matrix $r1;

        r0 := @this: org.apache.pdfbox.util.PDFStreamEngine;

        $r1 = r0.<org.apache.pdfbox.util.PDFStreamEngine: org.apache.pdfbox.util.Matrix textLineMatrix>;

        return $r1;
    }

    public void setTextLineMatrix(org.apache.pdfbox.util.Matrix)
    {
        org.apache.pdfbox.util.PDFStreamEngine r0;
        org.apache.pdfbox.util.Matrix r1;

        r0 := @this: org.apache.pdfbox.util.PDFStreamEngine;

        r1 := @parameter0: org.apache.pdfbox.util.Matrix;

        r0.<org.apache.pdfbox.util.PDFStreamEngine: org.apache.pdfbox.util.Matrix textLineMatrix> = r1;

        return;
    }

    public org.apache.pdfbox.util.Matrix getTextMatrix()
    {
        org.apache.pdfbox.util.PDFStreamEngine r0;
        org.apache.pdfbox.util.Matrix $r1;

        r0 := @this: org.apache.pdfbox.util.PDFStreamEngine;

        $r1 = r0.<org.apache.pdfbox.util.PDFStreamEngine: org.apache.pdfbox.util.Matrix textMatrix>;

        return $r1;
    }

    public void setTextMatrix(org.apache.pdfbox.util.Matrix)
    {
        org.apache.pdfbox.util.PDFStreamEngine r0;
        org.apache.pdfbox.util.Matrix r1;

        r0 := @this: org.apache.pdfbox.util.PDFStreamEngine;

        r1 := @parameter0: org.apache.pdfbox.util.Matrix;

        r0.<org.apache.pdfbox.util.PDFStreamEngine: org.apache.pdfbox.util.Matrix textMatrix> = r1;

        return;
    }

    public org.apache.pdfbox.pdmodel.PDResources getResources()
    {
        org.apache.pdfbox.util.PDFStreamEngine r0;
        java.lang.Object $r2;
        org.apache.pdfbox.pdmodel.PDResources $r3;
        java.util.Stack $r1;

        r0 := @this: org.apache.pdfbox.util.PDFStreamEngine;

        $r1 = r0.<org.apache.pdfbox.util.PDFStreamEngine: java.util.Stack streamResourcesStack>;

        $r2 = virtualinvoke $r1.<java.util.Stack: java.lang.Object peek()>();

        $r3 = (org.apache.pdfbox.pdmodel.PDResources) $r2;

        return $r3;
    }

    public org.apache.pdfbox.pdmodel.PDPage getCurrentPage()
    {
        org.apache.pdfbox.util.PDFStreamEngine r0;
        org.apache.pdfbox.pdmodel.PDPage $r1;

        r0 := @this: org.apache.pdfbox.util.PDFStreamEngine;

        $r1 = r0.<org.apache.pdfbox.util.PDFStreamEngine: org.apache.pdfbox.pdmodel.PDPage page>;

        return $r1;
    }

    public int getValidCharCnt()
    {
        int $i0;
        org.apache.pdfbox.util.PDFStreamEngine r0;

        r0 := @this: org.apache.pdfbox.util.PDFStreamEngine;

        $i0 = r0.<org.apache.pdfbox.util.PDFStreamEngine: int validCharCnt>;

        return $i0;
    }

    public int getTotalCharCnt()
    {
        int $i0;
        org.apache.pdfbox.util.PDFStreamEngine r0;

        r0 := @this: org.apache.pdfbox.util.PDFStreamEngine;

        $i0 = r0.<org.apache.pdfbox.util.PDFStreamEngine: int totalCharCnt>;

        return $i0;
    }

    static void <clinit>()
    {
        org.apache.commons.logging.Log $r0;

        $r0 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>(class "Lorg/apache/pdfbox/util/PDFStreamEngine;");

        <org.apache.pdfbox.util.PDFStreamEngine: org.apache.commons.logging.Log LOG> = $r0;

        return;
    }
}
