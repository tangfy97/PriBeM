public class org.wiztools.restclient.ui.resbody.ResBodyTextPanel extends org.wiztools.restclient.ui.resbody.AbstractResBody implements org.wiztools.restclient.ui.FontableEditor
{
    org.wiztools.restclient.ui.RESTView view;
    private final java.util.concurrent.ExecutorService xmlIndentThreadPool;
    private java.util.concurrent.Future xmlIndentFuture;
    private final org.wiztools.restclient.ui.ScriptEditor se_response;

    public void <init>()
    {
        org.wiztools.restclient.ui.resbody.ResBodyTextPanel r0;
        org.wiztools.restclient.ui.ScriptEditor $r2;
        java.util.concurrent.ExecutorService $r1;

        r0 := @this: org.wiztools.restclient.ui.resbody.ResBodyTextPanel;

        specialinvoke r0.<org.wiztools.restclient.ui.resbody.AbstractResBody: void <init>()>();

        $r1 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newSingleThreadExecutor()>();

        r0.<org.wiztools.restclient.ui.resbody.ResBodyTextPanel: java.util.concurrent.ExecutorService xmlIndentThreadPool> = $r1;

        $r2 = staticinvoke <org.wiztools.restclient.ui.ScriptEditorFactory: org.wiztools.restclient.ui.ScriptEditor getXMLScriptEditor()>();

        r0.<org.wiztools.restclient.ui.resbody.ResBodyTextPanel: org.wiztools.restclient.ui.ScriptEditor se_response> = $r2;

        return;
    }

    private void actionTextEditorSyntaxChange(org.wiztools.restclient.ui.ScriptEditor, org.wiztools.restclient.ui.TextEditorSyntax)
    {
        org.wiztools.restclient.ui.resbody.ResBodyTextPanel r2;
        org.wiztools.restclient.ui.ScriptEditor r0;
        org.wiztools.restclient.ui.TextEditorSyntax r1;

        r2 := @this: org.wiztools.restclient.ui.resbody.ResBodyTextPanel;

        r0 := @parameter0: org.wiztools.restclient.ui.ScriptEditor;

        r1 := @parameter1: org.wiztools.restclient.ui.TextEditorSyntax;

        interfaceinvoke r0.<org.wiztools.restclient.ui.ScriptEditor: void setSyntax(org.wiztools.restclient.ui.TextEditorSyntax)>(r1);

        return;
    }

    protected void init()
    {
        org.wiztools.restclient.ui.ScriptEditor $r1, $r15, $r19, $r21;
        javax.swing.border.Border $r17;
        java.awt.GridLayout $r18;
        javax.swing.JMenuItem $r4, $r6, $r9, $r11, $r13;
        boolean $z0;
        org.wiztools.restclient.ui.resbody.ResBodyTextPanel r0;
        javax.swing.JComponent $r20;
        javax.swing.JPopupMenu $r2;
        javax.swing.JMenu $r3, $r8;
        javax.swing.text.JTextComponent $r16, $r22;
        org.wiztools.restclient.ui.resbody.ResBodyTextPanel$2 $r7;
        org.wiztools.restclient.ui.resbody.ResBodyTextPanel$1 $r5;
        org.wiztools.restclient.ui.resbody.ResBodyTextPanel$4 $r12;
        org.wiztools.restclient.ui.resbody.ResBodyTextPanel$3 $r10;
        org.wiztools.restclient.ui.resbody.ResBodyTextPanel$6 $r23;
        org.wiztools.restclient.ui.resbody.ResBodyTextPanel$5 $r14;

        r0 := @this: org.wiztools.restclient.ui.resbody.ResBodyTextPanel;

        $r1 = r0.<org.wiztools.restclient.ui.resbody.ResBodyTextPanel: org.wiztools.restclient.ui.ScriptEditor se_response>;

        interfaceinvoke $r1.<org.wiztools.restclient.ui.ScriptEditor: void setEditable(boolean)>(0);

        $r2 = new javax.swing.JPopupMenu;

        specialinvoke $r2.<javax.swing.JPopupMenu: void <init>()>();

        $r3 = new javax.swing.JMenu;

        specialinvoke $r3.<javax.swing.JMenu: void <init>(java.lang.String)>("Indent");

        $r4 = new javax.swing.JMenuItem;

        specialinvoke $r4.<javax.swing.JMenuItem: void <init>(java.lang.String)>("Indent XML");

        $r5 = new org.wiztools.restclient.ui.resbody.ResBodyTextPanel$1;

        specialinvoke $r5.<org.wiztools.restclient.ui.resbody.ResBodyTextPanel$1: void <init>(org.wiztools.restclient.ui.resbody.ResBodyTextPanel)>(r0);

        virtualinvoke $r4.<javax.swing.JMenuItem: void addActionListener(java.awt.event.ActionListener)>($r5);

        virtualinvoke $r3.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r4);

        $r6 = new javax.swing.JMenuItem;

        specialinvoke $r6.<javax.swing.JMenuItem: void <init>(java.lang.String)>("Indent JSON");

        $r7 = new org.wiztools.restclient.ui.resbody.ResBodyTextPanel$2;

        specialinvoke $r7.<org.wiztools.restclient.ui.resbody.ResBodyTextPanel$2: void <init>(org.wiztools.restclient.ui.resbody.ResBodyTextPanel)>(r0);

        virtualinvoke $r6.<javax.swing.JMenuItem: void addActionListener(java.awt.event.ActionListener)>($r7);

        virtualinvoke $r3.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r6);

        virtualinvoke $r2.<javax.swing.JPopupMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r3);

        $r8 = new javax.swing.JMenu;

        specialinvoke $r8.<javax.swing.JMenu: void <init>(java.lang.String)>("Syntax Color");

        $r9 = new javax.swing.JMenuItem;

        specialinvoke $r9.<javax.swing.JMenuItem: void <init>(java.lang.String)>("XML");

        $r10 = new org.wiztools.restclient.ui.resbody.ResBodyTextPanel$3;

        specialinvoke $r10.<org.wiztools.restclient.ui.resbody.ResBodyTextPanel$3: void <init>(org.wiztools.restclient.ui.resbody.ResBodyTextPanel)>(r0);

        virtualinvoke $r9.<javax.swing.JMenuItem: void addActionListener(java.awt.event.ActionListener)>($r10);

        virtualinvoke $r8.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r9);

        $r11 = new javax.swing.JMenuItem;

        specialinvoke $r11.<javax.swing.JMenuItem: void <init>(java.lang.String)>("JSON");

        $r12 = new org.wiztools.restclient.ui.resbody.ResBodyTextPanel$4;

        specialinvoke $r12.<org.wiztools.restclient.ui.resbody.ResBodyTextPanel$4: void <init>(org.wiztools.restclient.ui.resbody.ResBodyTextPanel)>(r0);

        virtualinvoke $r11.<javax.swing.JMenuItem: void addActionListener(java.awt.event.ActionListener)>($r12);

        virtualinvoke $r8.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r11);

        $r13 = new javax.swing.JMenuItem;

        specialinvoke $r13.<javax.swing.JMenuItem: void <init>(java.lang.String)>("None");

        $r14 = new org.wiztools.restclient.ui.resbody.ResBodyTextPanel$5;

        specialinvoke $r14.<org.wiztools.restclient.ui.resbody.ResBodyTextPanel$5: void <init>(org.wiztools.restclient.ui.resbody.ResBodyTextPanel)>(r0);

        virtualinvoke $r13.<javax.swing.JMenuItem: void addActionListener(java.awt.event.ActionListener)>($r14);

        virtualinvoke $r8.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r13);

        virtualinvoke $r2.<javax.swing.JPopupMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r8);

        $r15 = r0.<org.wiztools.restclient.ui.resbody.ResBodyTextPanel: org.wiztools.restclient.ui.ScriptEditor se_response>;

        $r16 = interfaceinvoke $r15.<org.wiztools.restclient.ui.ScriptEditor: javax.swing.text.JTextComponent getEditorComponent()>();

        $z0 = $r16 instanceof org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;

        if $z0 == 0 goto label1;

        $r21 = r0.<org.wiztools.restclient.ui.resbody.ResBodyTextPanel: org.wiztools.restclient.ui.ScriptEditor se_response>;

        $r22 = interfaceinvoke $r21.<org.wiztools.restclient.ui.ScriptEditor: javax.swing.text.JTextComponent getEditorComponent()>();

        $r23 = new org.wiztools.restclient.ui.resbody.ResBodyTextPanel$6;

        specialinvoke $r23.<org.wiztools.restclient.ui.resbody.ResBodyTextPanel$6: void <init>(org.wiztools.restclient.ui.resbody.ResBodyTextPanel,javax.swing.JPopupMenu)>(r0, $r2);

        virtualinvoke $r22.<javax.swing.text.JTextComponent: void addMouseListener(java.awt.event.MouseListener)>($r23);

     label1:
        $r17 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder()>();

        virtualinvoke r0.<org.wiztools.restclient.ui.resbody.ResBodyTextPanel: void setBorder(javax.swing.border.Border)>($r17);

        $r18 = new java.awt.GridLayout;

        specialinvoke $r18.<java.awt.GridLayout: void <init>()>();

        virtualinvoke r0.<org.wiztools.restclient.ui.resbody.ResBodyTextPanel: void setLayout(java.awt.LayoutManager)>($r18);

        $r19 = r0.<org.wiztools.restclient.ui.resbody.ResBodyTextPanel: org.wiztools.restclient.ui.ScriptEditor se_response>;

        $r20 = interfaceinvoke $r19.<org.wiztools.restclient.ui.ScriptEditor: javax.swing.JComponent getEditorView()>();

        virtualinvoke r0.<org.wiztools.restclient.ui.resbody.ResBodyTextPanel: java.awt.Component add(java.awt.Component)>($r20);

        return;
    }

    public void setEditorFont(java.awt.Font)
    {
        org.wiztools.restclient.ui.resbody.ResBodyTextPanel r0;
        java.awt.Font r3;
        org.wiztools.restclient.ui.ScriptEditor $r1;
        javax.swing.text.JTextComponent $r2;

        r0 := @this: org.wiztools.restclient.ui.resbody.ResBodyTextPanel;

        r3 := @parameter0: java.awt.Font;

        $r1 = r0.<org.wiztools.restclient.ui.resbody.ResBodyTextPanel: org.wiztools.restclient.ui.ScriptEditor se_response>;

        $r2 = interfaceinvoke $r1.<org.wiztools.restclient.ui.ScriptEditor: javax.swing.text.JTextComponent getEditorComponent()>();

        virtualinvoke $r2.<javax.swing.text.JTextComponent: void setFont(java.awt.Font)>(r3);

        return;
    }

    public java.awt.Font getEditorFont()
    {
        org.wiztools.restclient.ui.resbody.ResBodyTextPanel r0;
        java.awt.Font $r3;
        org.wiztools.restclient.ui.ScriptEditor $r1;
        javax.swing.text.JTextComponent $r2;

        r0 := @this: org.wiztools.restclient.ui.resbody.ResBodyTextPanel;

        $r1 = r0.<org.wiztools.restclient.ui.resbody.ResBodyTextPanel: org.wiztools.restclient.ui.ScriptEditor se_response>;

        $r2 = interfaceinvoke $r1.<org.wiztools.restclient.ui.ScriptEditor: javax.swing.text.JTextComponent getEditorComponent()>();

        $r3 = virtualinvoke $r2.<javax.swing.text.JTextComponent: java.awt.Font getFont()>();

        return $r3;
    }

    public void setBody(byte[], org.wiztools.restclient.bean.ContentType)
    {
        byte[] r1, $r33;
        org.wiztools.restclient.util.JSONUtil$JSONParseException $r21;
        org.wiztools.restclient.ui.RESTView $r7, $r22, $r25, $r28;
        java.util.concurrent.Future $r3, $r19, $r20;
        boolean $z0, $z1, $z2, z3, z4, $z5, $z6, z7, z8, z9, z10;
        org.wiztools.restclient.ui.TextEditorSyntax $r4, $r13, $r15;
        org.wiztools.restclient.ui.ScriptEditor $r5, $r6, $r8, $r10, $r12, $r14, $r16, $r23, $r26, $r29, $r35;
        org.wiztools.restclient.XMLException $r24;
        java.nio.charset.Charset $r34;
        java.lang.String $r9, $r11, $r17, $r18, $r32;
        org.wiztools.restclient.IGlobalOptions $r31;
        org.wiztools.restclient.ui.resbody.ResBodyTextPanel r0;
        java.io.IOException $r27;
        java.lang.Object $r30;
        org.wiztools.restclient.bean.ContentType r2;

        r0 := @this: org.wiztools.restclient.ui.resbody.ResBodyTextPanel;

        r1 := @parameter0: byte[];

        r2 := @parameter1: org.wiztools.restclient.bean.ContentType;

        specialinvoke r0.<org.wiztools.restclient.ui.resbody.AbstractResBody: void setBody(byte[],org.wiztools.restclient.bean.ContentType)>(r1, r2);

        $r3 = r0.<org.wiztools.restclient.ui.resbody.ResBodyTextPanel: java.util.concurrent.Future xmlIndentFuture>;

        if $r3 == null goto label01;

        $r19 = r0.<org.wiztools.restclient.ui.resbody.ResBodyTextPanel: java.util.concurrent.Future xmlIndentFuture>;

        $z2 = interfaceinvoke $r19.<java.util.concurrent.Future: boolean isDone()>();

        if $z2 != 0 goto label01;

        $r20 = r0.<org.wiztools.restclient.ui.resbody.ResBodyTextPanel: java.util.concurrent.Future xmlIndentFuture>;

        interfaceinvoke $r20.<java.util.concurrent.Future: boolean cancel(boolean)>(1);

     label01:
        z3 = 0;

        z10 = 0;

        z9 = 0;

        z4 = 0;

        z8 = 0;

        z7 = 0;

        if r2 == null goto label03;

        $r17 = interfaceinvoke r2.<org.wiztools.restclient.bean.ContentType: java.lang.String getContentType()>();

        $z0 = staticinvoke <org.wiztools.restclient.util.HttpUtil: boolean isXmlContentType(java.lang.String)>($r17);

        if $z0 == 0 goto label02;

        z3 = 1;

        z10 = 1;

        z9 = 1;

        goto label03;

     label02:
        $r18 = interfaceinvoke r2.<org.wiztools.restclient.bean.ContentType: java.lang.String getContentType()>();

        $z1 = staticinvoke <org.wiztools.restclient.util.HttpUtil: boolean isJsonContentType(java.lang.String)>($r18);

        if $z1 == 0 goto label03;

        z4 = 1;

        z8 = 1;

        z7 = 1;

     label03:
        $r30 = staticinvoke <org.wiztools.restclient.ServiceLocator: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/wiztools/restclient/IGlobalOptions;");

        $r31 = (org.wiztools.restclient.IGlobalOptions) $r30;

        $z5 = interfaceinvoke $r31.<org.wiztools.restclient.IGlobalOptions: boolean isPropertyTrue(java.lang.String)>("response.body.syntax.color");

        if $z5 == 0 goto label05;

        if z10 == 0 goto label04;

        $r16 = r0.<org.wiztools.restclient.ui.resbody.ResBodyTextPanel: org.wiztools.restclient.ui.ScriptEditor se_response>;

        $r15 = <org.wiztools.restclient.ui.TextEditorSyntax: org.wiztools.restclient.ui.TextEditorSyntax XML>;

        interfaceinvoke $r16.<org.wiztools.restclient.ui.ScriptEditor: void setSyntax(org.wiztools.restclient.ui.TextEditorSyntax)>($r15);

     label04:
        if z8 == 0 goto label06;

        $r14 = r0.<org.wiztools.restclient.ui.resbody.ResBodyTextPanel: org.wiztools.restclient.ui.ScriptEditor se_response>;

        $r13 = <org.wiztools.restclient.ui.TextEditorSyntax: org.wiztools.restclient.ui.TextEditorSyntax JSON>;

        interfaceinvoke $r14.<org.wiztools.restclient.ui.ScriptEditor: void setSyntax(org.wiztools.restclient.ui.TextEditorSyntax)>($r13);

        goto label06;

     label05:
        $r5 = r0.<org.wiztools.restclient.ui.resbody.ResBodyTextPanel: org.wiztools.restclient.ui.ScriptEditor se_response>;

        $r4 = <org.wiztools.restclient.ui.TextEditorSyntax: org.wiztools.restclient.ui.TextEditorSyntax NONE>;

        interfaceinvoke $r5.<org.wiztools.restclient.ui.ScriptEditor: void setSyntax(org.wiztools.restclient.ui.TextEditorSyntax)>($r4);

     label06:
        $r32 = new java.lang.String;

        $r33 = virtualinvoke r0.<org.wiztools.restclient.ui.resbody.ResBodyTextPanel: byte[] getBody()>();

        $r34 = staticinvoke <org.wiztools.restclient.util.HttpUtil: java.nio.charset.Charset getCharsetDefault(org.wiztools.restclient.bean.ContentType)>(r2);

        specialinvoke $r32.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>($r33, $r34);

        $z6 = interfaceinvoke $r31.<org.wiztools.restclient.IGlobalOptions: boolean isPropertyTrue(java.lang.String)>("response.body.indent");

        if $z6 == 0 goto label16;

        if z9 == 0 goto label11;

     label07:
        $r11 = staticinvoke <org.wiztools.restclient.util.XMLIndentUtil: java.lang.String getIndented(java.lang.String)>($r32);

        $r12 = r0.<org.wiztools.restclient.ui.resbody.ResBodyTextPanel: org.wiztools.restclient.ui.ScriptEditor se_response>;

        interfaceinvoke $r12.<org.wiztools.restclient.ui.ScriptEditor: void setText(java.lang.String)>($r11);

     label08:
        goto label17;

     label09:
        $r27 := @caughtexception;

        $r28 = r0.<org.wiztools.restclient.ui.resbody.ResBodyTextPanel: org.wiztools.restclient.ui.RESTView view>;

        interfaceinvoke $r28.<org.wiztools.restclient.ui.RESTView: void setStatusMessage(java.lang.String)>("XML indentation failed.");

        $r29 = r0.<org.wiztools.restclient.ui.resbody.ResBodyTextPanel: org.wiztools.restclient.ui.ScriptEditor se_response>;

        interfaceinvoke $r29.<org.wiztools.restclient.ui.ScriptEditor: void setText(java.lang.String)>($r32);

        goto label17;

     label10:
        $r24 := @caughtexception;

        $r25 = r0.<org.wiztools.restclient.ui.resbody.ResBodyTextPanel: org.wiztools.restclient.ui.RESTView view>;

        interfaceinvoke $r25.<org.wiztools.restclient.ui.RESTView: void setStatusMessage(java.lang.String)>("XML indentation failed.");

        $r26 = r0.<org.wiztools.restclient.ui.resbody.ResBodyTextPanel: org.wiztools.restclient.ui.ScriptEditor se_response>;

        interfaceinvoke $r26.<org.wiztools.restclient.ui.ScriptEditor: void setText(java.lang.String)>($r32);

        goto label17;

     label11:
        if z7 == 0 goto label15;

     label12:
        $r9 = staticinvoke <org.wiztools.restclient.util.JSONUtil: java.lang.String indentJSON(java.lang.String)>($r32);

        $r10 = r0.<org.wiztools.restclient.ui.resbody.ResBodyTextPanel: org.wiztools.restclient.ui.ScriptEditor se_response>;

        interfaceinvoke $r10.<org.wiztools.restclient.ui.ScriptEditor: void setText(java.lang.String)>($r9);

     label13:
        goto label17;

     label14:
        $r21 := @caughtexception;

        $r22 = r0.<org.wiztools.restclient.ui.resbody.ResBodyTextPanel: org.wiztools.restclient.ui.RESTView view>;

        interfaceinvoke $r22.<org.wiztools.restclient.ui.RESTView: void setStatusMessage(java.lang.String)>("JSON indentation failed.");

        $r23 = r0.<org.wiztools.restclient.ui.resbody.ResBodyTextPanel: org.wiztools.restclient.ui.ScriptEditor se_response>;

        interfaceinvoke $r23.<org.wiztools.restclient.ui.ScriptEditor: void setText(java.lang.String)>($r32);

        goto label17;

     label15:
        $r7 = r0.<org.wiztools.restclient.ui.resbody.ResBodyTextPanel: org.wiztools.restclient.ui.RESTView view>;

        interfaceinvoke $r7.<org.wiztools.restclient.ui.RESTView: void setStatusMessage(java.lang.String)>("Response body neither XML nor JSON. No indentation.");

        $r8 = r0.<org.wiztools.restclient.ui.resbody.ResBodyTextPanel: org.wiztools.restclient.ui.ScriptEditor se_response>;

        interfaceinvoke $r8.<org.wiztools.restclient.ui.ScriptEditor: void setText(java.lang.String)>($r32);

        goto label17;

     label16:
        $r6 = r0.<org.wiztools.restclient.ui.resbody.ResBodyTextPanel: org.wiztools.restclient.ui.ScriptEditor se_response>;

        interfaceinvoke $r6.<org.wiztools.restclient.ui.ScriptEditor: void setText(java.lang.String)>($r32);

     label17:
        $r35 = r0.<org.wiztools.restclient.ui.resbody.ResBodyTextPanel: org.wiztools.restclient.ui.ScriptEditor se_response>;

        interfaceinvoke $r35.<org.wiztools.restclient.ui.ScriptEditor: void setCaretPosition(int)>(0);

        return;

        catch java.io.IOException from label07 to label08 with label09;
        catch org.wiztools.restclient.XMLException from label07 to label08 with label10;
        catch org.wiztools.restclient.util.JSONUtil$JSONParseException from label12 to label13 with label14;
    }

    public void clearUI()
    {
        org.wiztools.restclient.ui.resbody.ResBodyTextPanel r0;
        org.wiztools.restclient.ui.ScriptEditor $r1;

        r0 := @this: org.wiztools.restclient.ui.resbody.ResBodyTextPanel;

        $r1 = r0.<org.wiztools.restclient.ui.resbody.ResBodyTextPanel: org.wiztools.restclient.ui.ScriptEditor se_response>;

        interfaceinvoke $r1.<org.wiztools.restclient.ui.ScriptEditor: void setText(java.lang.String)>("");

        return;
    }

    static org.wiztools.restclient.ui.ScriptEditor access$000(org.wiztools.restclient.ui.resbody.ResBodyTextPanel)
    {
        org.wiztools.restclient.ui.resbody.ResBodyTextPanel r0;
        org.wiztools.restclient.ui.ScriptEditor $r1;

        r0 := @parameter0: org.wiztools.restclient.ui.resbody.ResBodyTextPanel;

        $r1 = r0.<org.wiztools.restclient.ui.resbody.ResBodyTextPanel: org.wiztools.restclient.ui.ScriptEditor se_response>;

        return $r1;
    }

    static java.util.concurrent.Future access$100(org.wiztools.restclient.ui.resbody.ResBodyTextPanel)
    {
        org.wiztools.restclient.ui.resbody.ResBodyTextPanel r0;
        java.util.concurrent.Future $r1;

        r0 := @parameter0: org.wiztools.restclient.ui.resbody.ResBodyTextPanel;

        $r1 = r0.<org.wiztools.restclient.ui.resbody.ResBodyTextPanel: java.util.concurrent.Future xmlIndentFuture>;

        return $r1;
    }

    static java.util.concurrent.Future access$102(org.wiztools.restclient.ui.resbody.ResBodyTextPanel, java.util.concurrent.Future)
    {
        org.wiztools.restclient.ui.resbody.ResBodyTextPanel r0;
        java.util.concurrent.Future r1;

        r0 := @parameter0: org.wiztools.restclient.ui.resbody.ResBodyTextPanel;

        r1 := @parameter1: java.util.concurrent.Future;

        r0.<org.wiztools.restclient.ui.resbody.ResBodyTextPanel: java.util.concurrent.Future xmlIndentFuture> = r1;

        return r1;
    }

    static java.util.concurrent.ExecutorService access$200(org.wiztools.restclient.ui.resbody.ResBodyTextPanel)
    {
        org.wiztools.restclient.ui.resbody.ResBodyTextPanel r0;
        java.util.concurrent.ExecutorService $r1;

        r0 := @parameter0: org.wiztools.restclient.ui.resbody.ResBodyTextPanel;

        $r1 = r0.<org.wiztools.restclient.ui.resbody.ResBodyTextPanel: java.util.concurrent.ExecutorService xmlIndentThreadPool>;

        return $r1;
    }

    static void access$300(org.wiztools.restclient.ui.resbody.ResBodyTextPanel, org.wiztools.restclient.ui.ScriptEditor, org.wiztools.restclient.ui.TextEditorSyntax)
    {
        org.wiztools.restclient.ui.resbody.ResBodyTextPanel r0;
        org.wiztools.restclient.ui.ScriptEditor r1;
        org.wiztools.restclient.ui.TextEditorSyntax r2;

        r0 := @parameter0: org.wiztools.restclient.ui.resbody.ResBodyTextPanel;

        r1 := @parameter1: org.wiztools.restclient.ui.ScriptEditor;

        r2 := @parameter2: org.wiztools.restclient.ui.TextEditorSyntax;

        specialinvoke r0.<org.wiztools.restclient.ui.resbody.ResBodyTextPanel: void actionTextEditorSyntaxChange(org.wiztools.restclient.ui.ScriptEditor,org.wiztools.restclient.ui.TextEditorSyntax)>(r1, r2);

        return;
    }
}
