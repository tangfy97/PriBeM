public final class org.apache.poi.hdf.model.HDFObjectFactory extends java.lang.Object
{
    private org.apache.poi.poifs.filesystem.POIFSFileSystem _filesystem;
    private org.apache.poi.hdf.model.hdftypes.FileInformationBlock _fib;
    private org.apache.poi.hdf.event.HDFLowLevelParsingListener _listener;
    private org.apache.poi.hdf.model.util.ParsingState _charParsingState;
    private org.apache.poi.hdf.model.util.ParsingState _parParsingState;
    byte[] _mainDocument;
    byte[] _tableBuffer;

    public static void main(java.lang.String[])
    {
        java.lang.Throwable $r2;
        org.apache.poi.hdf.model.HDFObjectFactory $r0;
        java.lang.String[] r3;
        java.io.FileInputStream $r1;

        r3 := @parameter0: java.lang.String[];

     label1:
        $r0 = new org.apache.poi.hdf.model.HDFObjectFactory;

        $r1 = new java.io.FileInputStream;

        specialinvoke $r1.<java.io.FileInputStream: void <init>(java.lang.String)>("c:\\test.doc");

        specialinvoke $r0.<org.apache.poi.hdf.model.HDFObjectFactory: void <init>(java.io.InputStream)>($r1);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        virtualinvoke $r2.<java.lang.Throwable: void printStackTrace()>();

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    protected void <init>(java.io.InputStream, org.apache.poi.hdf.event.HDFLowLevelParsingListener) throws java.io.IOException
    {
        byte[] $r7, $r10, $r12;
        org.apache.poi.hdf.event.HDFLowLevelParsingListener r1;
        org.apache.poi.poifs.filesystem.Entry $r6;
        org.apache.poi.poifs.filesystem.POIFSFileSystem $r2, $r4, $r8;
        org.apache.poi.hdf.model.HDFObjectFactory r0;
        int $i0;
        org.apache.poi.poifs.filesystem.DocumentEntry $r14;
        org.apache.poi.hdf.model.hdftypes.FileInformationBlock $r11;
        org.apache.poi.hdf.model.HDFObjectModel $r13;
        org.apache.poi.poifs.filesystem.DirectoryNode $r5;
        org.apache.poi.poifs.filesystem.DocumentInputStream $r9;
        java.io.InputStream r3;

        r0 := @this: org.apache.poi.hdf.model.HDFObjectFactory;

        r3 := @parameter0: java.io.InputStream;

        r1 := @parameter1: org.apache.poi.hdf.event.HDFLowLevelParsingListener;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r13 = new org.apache.poi.hdf.model.HDFObjectModel;

        specialinvoke $r13.<org.apache.poi.hdf.model.HDFObjectModel: void <init>()>();

        r0.<org.apache.poi.hdf.model.HDFObjectFactory: org.apache.poi.hdf.event.HDFLowLevelParsingListener _listener> = $r13;

        goto label2;

     label1:
        r0.<org.apache.poi.hdf.model.HDFObjectFactory: org.apache.poi.hdf.event.HDFLowLevelParsingListener _listener> = r1;

     label2:
        $r2 = new org.apache.poi.poifs.filesystem.POIFSFileSystem;

        specialinvoke $r2.<org.apache.poi.poifs.filesystem.POIFSFileSystem: void <init>(java.io.InputStream)>(r3);

        r0.<org.apache.poi.hdf.model.HDFObjectFactory: org.apache.poi.poifs.filesystem.POIFSFileSystem _filesystem> = $r2;

        $r4 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: org.apache.poi.poifs.filesystem.POIFSFileSystem _filesystem>;

        $r5 = virtualinvoke $r4.<org.apache.poi.poifs.filesystem.POIFSFileSystem: org.apache.poi.poifs.filesystem.DirectoryNode getRoot()>();

        $r6 = virtualinvoke $r5.<org.apache.poi.poifs.filesystem.DirectoryNode: org.apache.poi.poifs.filesystem.Entry getEntry(java.lang.String)>("WordDocument");

        $r14 = (org.apache.poi.poifs.filesystem.DocumentEntry) $r6;

        $i0 = interfaceinvoke $r14.<org.apache.poi.poifs.filesystem.DocumentEntry: int getSize()>();

        $r7 = newarray (byte)[$i0];

        r0.<org.apache.poi.hdf.model.HDFObjectFactory: byte[] _mainDocument> = $r7;

        $r8 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: org.apache.poi.poifs.filesystem.POIFSFileSystem _filesystem>;

        $r9 = virtualinvoke $r8.<org.apache.poi.poifs.filesystem.POIFSFileSystem: org.apache.poi.poifs.filesystem.DocumentInputStream createDocumentInputStream(java.lang.String)>("WordDocument");

        $r10 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: byte[] _mainDocument>;

        virtualinvoke $r9.<org.apache.poi.poifs.filesystem.DocumentInputStream: int read(byte[])>($r10);

        $r11 = new org.apache.poi.hdf.model.hdftypes.FileInformationBlock;

        $r12 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: byte[] _mainDocument>;

        specialinvoke $r11.<org.apache.poi.hdf.model.hdftypes.FileInformationBlock: void <init>(byte[])>($r12);

        r0.<org.apache.poi.hdf.model.HDFObjectFactory: org.apache.poi.hdf.model.hdftypes.FileInformationBlock _fib> = $r11;

        specialinvoke r0.<org.apache.poi.hdf.model.HDFObjectFactory: void initTableStream()>();

        specialinvoke r0.<org.apache.poi.hdf.model.HDFObjectFactory: void initTextPieces()>();

        specialinvoke r0.<org.apache.poi.hdf.model.HDFObjectFactory: void initFormattingProperties()>();

        return;
    }

    public void <init>(java.io.InputStream) throws java.io.IOException
    {
        org.apache.poi.hdf.model.HDFObjectFactory r0;
        java.io.InputStream r1;

        r0 := @this: org.apache.poi.hdf.model.HDFObjectFactory;

        r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<org.apache.poi.hdf.model.HDFObjectFactory: void <init>(java.io.InputStream,org.apache.poi.hdf.event.HDFLowLevelParsingListener)>(r1, null);

        return;
    }

    public static java.util.List getTypes(java.io.InputStream) throws java.io.IOException
    {
        byte[] r6;
        org.apache.poi.poifs.filesystem.Entry $r4;
        org.apache.poi.hdf.model.hdftypes.FileInformationBlock $r8;
        java.util.ArrayList $r0;
        org.apache.poi.poifs.filesystem.DirectoryNode $r3;
        org.apache.poi.poifs.filesystem.POIFSFileSystem $r1;
        int $i0;
        org.apache.poi.poifs.filesystem.DocumentEntry r5;
        org.apache.poi.poifs.filesystem.DocumentInputStream $r7;
        java.io.InputStream r2;

        r2 := @parameter0: java.io.InputStream;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>(int)>(1);

        $r1 = new org.apache.poi.poifs.filesystem.POIFSFileSystem;

        specialinvoke $r1.<org.apache.poi.poifs.filesystem.POIFSFileSystem: void <init>(java.io.InputStream)>(r2);

        $r3 = virtualinvoke $r1.<org.apache.poi.poifs.filesystem.POIFSFileSystem: org.apache.poi.poifs.filesystem.DirectoryNode getRoot()>();

        $r4 = virtualinvoke $r3.<org.apache.poi.poifs.filesystem.DirectoryNode: org.apache.poi.poifs.filesystem.Entry getEntry(java.lang.String)>("WordDocument");

        r5 = (org.apache.poi.poifs.filesystem.DocumentEntry) $r4;

        $i0 = interfaceinvoke r5.<org.apache.poi.poifs.filesystem.DocumentEntry: int getSize()>();

        r6 = newarray (byte)[$i0];

        $r7 = virtualinvoke $r1.<org.apache.poi.poifs.filesystem.POIFSFileSystem: org.apache.poi.poifs.filesystem.DocumentInputStream createDocumentInputStream(java.lang.String)>("WordDocument");

        virtualinvoke $r7.<org.apache.poi.poifs.filesystem.DocumentInputStream: int read(byte[])>(r6);

        $r8 = new org.apache.poi.hdf.model.hdftypes.FileInformationBlock;

        specialinvoke $r8.<org.apache.poi.hdf.model.hdftypes.FileInformationBlock: void <init>(byte[])>(r6);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r8);

        return $r0;
    }

    private void initTableStream() throws java.io.IOException
    {
        byte[] $r5, $r8;
        org.apache.poi.poifs.filesystem.Entry $r4;
        org.apache.poi.hdf.model.hdftypes.FileInformationBlock $r1;
        org.apache.poi.poifs.filesystem.DirectoryNode $r3;
        org.apache.poi.poifs.filesystem.POIFSFileSystem $r2, $r6;
        org.apache.poi.hdf.model.HDFObjectFactory r0;
        int $i0;
        java.lang.String r10, r11, r12;
        org.apache.poi.poifs.filesystem.DocumentEntry $r9;
        org.apache.poi.poifs.filesystem.DocumentInputStream $r7;
        boolean $z0;

        r0 := @this: org.apache.poi.hdf.model.HDFObjectFactory;

        $r1 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: org.apache.poi.hdf.model.hdftypes.FileInformationBlock _fib>;

        $z0 = virtualinvoke $r1.<org.apache.poi.hdf.model.hdftypes.FileInformationBlock: boolean isFWhichTblStm()>();

        if $z0 == 0 goto label1;

        r10 = "1Table";

        r12 = "1Table";

        r11 = "1Table";

        goto label2;

     label1:
        r10 = "0Table";

        r12 = "0Table";

        r11 = "0Table";

     label2:
        $r2 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: org.apache.poi.poifs.filesystem.POIFSFileSystem _filesystem>;

        $r3 = virtualinvoke $r2.<org.apache.poi.poifs.filesystem.POIFSFileSystem: org.apache.poi.poifs.filesystem.DirectoryNode getRoot()>();

        $r4 = virtualinvoke $r3.<org.apache.poi.poifs.filesystem.DirectoryNode: org.apache.poi.poifs.filesystem.Entry getEntry(java.lang.String)>(r11);

        $r9 = (org.apache.poi.poifs.filesystem.DocumentEntry) $r4;

        $i0 = interfaceinvoke $r9.<org.apache.poi.poifs.filesystem.DocumentEntry: int getSize()>();

        $r5 = newarray (byte)[$i0];

        r0.<org.apache.poi.hdf.model.HDFObjectFactory: byte[] _tableBuffer> = $r5;

        $r6 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: org.apache.poi.poifs.filesystem.POIFSFileSystem _filesystem>;

        $r7 = virtualinvoke $r6.<org.apache.poi.poifs.filesystem.POIFSFileSystem: org.apache.poi.poifs.filesystem.DocumentInputStream createDocumentInputStream(java.lang.String)>(r12);

        $r8 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: byte[] _tableBuffer>;

        virtualinvoke $r7.<org.apache.poi.poifs.filesystem.DocumentInputStream: int read(byte[])>($r8);

        return;
    }

    private void initTextPieces() throws java.io.IOException
    {
        byte[] $r2, $r3, $r4, $r5, $r6, $r7, $r11;
        org.apache.poi.hdf.event.HDFLowLevelParsingListener $r9;
        byte $b0, $b1;
        org.apache.poi.hdf.model.hdftypes.TextPiece $r13;
        boolean z0;
        org.apache.poi.hdf.model.hdftypes.FileInformationBlock $r1;
        short $s21;
        org.apache.poi.hdf.model.HDFObjectFactory r0;
        int $i2, $i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i22, i23, i24, i25, i26, i27, i28, i29, $i30, $i31;
        java.io.IOException $r12;

        r0 := @this: org.apache.poi.hdf.model.HDFObjectFactory;

        $r1 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: org.apache.poi.hdf.model.hdftypes.FileInformationBlock _fib>;

        i23 = virtualinvoke $r1.<org.apache.poi.hdf.model.hdftypes.FileInformationBlock: int getFcClx()>();

     label1:
        $r2 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: byte[] _tableBuffer>;

        $b0 = $r2[i23];

        if $b0 != 1 goto label2;

        i24 = i23 + 1;

        $r11 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: byte[] _tableBuffer>;

        $s21 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>($r11, i24);

        $i30 = (int) $s21;

        $i22 = 2 + $i30;

        i23 = i24 + $i22;

        goto label1;

     label2:
        $r3 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: byte[] _tableBuffer>;

        $b1 = $r3[i23];

        $i31 = (int) $b1;

        if $i31 == 2 goto label3;

        $r12 = new java.io.IOException;

        specialinvoke $r12.<java.io.IOException: void <init>(java.lang.String)>("The text piece table is corrupted");

        throw $r12;

     label3:
        $r4 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: byte[] _tableBuffer>;

        i25 = i23 + 1;

        $i2 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>($r4, i25);

        i26 = i25 + 4;

        $i3 = $i2 - 4;

        i4 = $i3 / 12;

        i27 = 0;

     label4:
        if i27 >= i4 goto label7;

        $r5 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: byte[] _tableBuffer>;

        $i5 = i4 + 1;

        $i6 = $i5 * 4;

        $i8 = i26 + $i6;

        $i7 = i27 * 8;

        $i9 = $i8 + $i7;

        $i10 = $i9 + 2;

        $i11 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>($r5, $i10);

        i28 = $i11;

        $i12 = $i11 & 1073741824;

        if $i12 != 0 goto label5;

        z0 = 1;

        goto label6;

     label5:
        z0 = 0;

        i29 = $i11 & -1073741825;

        i28 = i29 / 2;

     label6:
        $r6 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: byte[] _tableBuffer>;

        $i13 = i27 + 1;

        $i14 = $i13 * 4;

        $i15 = i26 + $i14;

        $i16 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>($r6, $i15);

        $r7 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: byte[] _tableBuffer>;

        $i17 = i27 * 4;

        $i18 = i26 + $i17;

        $i19 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>($r7, $i18);

        $i20 = $i16 - $i19;

        $r13 = new org.apache.poi.hdf.model.hdftypes.TextPiece;

        specialinvoke $r13.<org.apache.poi.hdf.model.hdftypes.TextPiece: void <init>(int,int,boolean)>(i28, $i20, z0);

        $r9 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: org.apache.poi.hdf.event.HDFLowLevelParsingListener _listener>;

        interfaceinvoke $r9.<org.apache.poi.hdf.event.HDFLowLevelParsingListener: void text(org.apache.poi.hdf.model.hdftypes.TextPiece)>($r13);

        i27 = i27 + 1;

        goto label4;

     label7:
        return;
    }

    private void initFormattingProperties()
    {
        org.apache.poi.hdf.model.HDFObjectFactory r0;

        r0 := @this: org.apache.poi.hdf.model.HDFObjectFactory;

        specialinvoke r0.<org.apache.poi.hdf.model.HDFObjectFactory: void createStyleSheet()>();

        specialinvoke r0.<org.apache.poi.hdf.model.HDFObjectFactory: void createListTables()>();

        specialinvoke r0.<org.apache.poi.hdf.model.HDFObjectFactory: void createFontTable()>();

        specialinvoke r0.<org.apache.poi.hdf.model.HDFObjectFactory: void initDocumentProperties()>();

        specialinvoke r0.<org.apache.poi.hdf.model.HDFObjectFactory: void initSectionProperties()>();

        return;
    }

    private void initCharacterProperties(int, org.apache.poi.hdf.model.hdftypes.PlexOfCps, int, int)
    {
        byte[] $r6, r7, $r8, $r10;
        org.apache.poi.hdf.event.HDFLowLevelParsingListener $r12;
        org.apache.poi.hdf.model.HDFObjectFactory r1;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i9, i10, $i11, i12, i13, i14;
        org.apache.poi.hdf.model.hdftypes.ChpxNode $r11;
        org.apache.poi.hdf.model.util.ParsingState $r2, $r3, $r5, $r13;
        org.apache.poi.hdf.model.hdftypes.CHPFormattedDiskPage $r9;
        org.apache.poi.hdf.model.hdftypes.PlexOfCps r0;
        org.apache.poi.hdf.model.hdftypes.FormattedDiskPage $r4, r14;

        r1 := @this: org.apache.poi.hdf.model.HDFObjectFactory;

        i1 := @parameter0: int;

        r0 := @parameter1: org.apache.poi.hdf.model.hdftypes.PlexOfCps;

        i8 := @parameter2: int;

        i10 := @parameter3: int;

        $i0 = virtualinvoke r0.<org.apache.poi.hdf.model.hdftypes.PlexOfCps: int length()>();

        $r2 = r1.<org.apache.poi.hdf.model.HDFObjectFactory: org.apache.poi.hdf.model.util.ParsingState _charParsingState>;

        i12 = virtualinvoke $r2.<org.apache.poi.hdf.model.util.ParsingState: int getCurrentPageIndex()>();

        $r3 = r1.<org.apache.poi.hdf.model.HDFObjectFactory: org.apache.poi.hdf.model.util.ParsingState _charParsingState>;

        $r4 = virtualinvoke $r3.<org.apache.poi.hdf.model.util.ParsingState: org.apache.poi.hdf.model.hdftypes.FormattedDiskPage getFkp()>();

        r14 = $r4;

        $r5 = r1.<org.apache.poi.hdf.model.HDFObjectFactory: org.apache.poi.hdf.model.util.ParsingState _charParsingState>;

        i13 = virtualinvoke $r5.<org.apache.poi.hdf.model.util.ParsingState: int getCurrentPropIndex()>();

        i14 = virtualinvoke $r4.<org.apache.poi.hdf.model.hdftypes.FormattedDiskPage: int size()>();

     label1:
        if i13 >= i14 goto label4;

        $i6 = virtualinvoke r14.<org.apache.poi.hdf.model.hdftypes.FormattedDiskPage: int getStart(int)>(i13);

        $i7 = virtualinvoke r14.<org.apache.poi.hdf.model.hdftypes.FormattedDiskPage: int getEnd(int)>(i13);

        $r10 = virtualinvoke r14.<org.apache.poi.hdf.model.hdftypes.FormattedDiskPage: byte[] getGrpprl(int)>(i13);

        $r12 = r1.<org.apache.poi.hdf.model.HDFObjectFactory: org.apache.poi.hdf.event.HDFLowLevelParsingListener _listener>;

        $r11 = new org.apache.poi.hdf.model.hdftypes.ChpxNode;

        $i9 = staticinvoke <java.lang.Math: int max(int,int)>($i6, i8);

        $i11 = staticinvoke <java.lang.Math: int min(int,int)>($i7, i10);

        specialinvoke $r11.<org.apache.poi.hdf.model.hdftypes.ChpxNode: void <init>(int,int,byte[])>($i9, $i11, $r10);

        interfaceinvoke $r12.<org.apache.poi.hdf.event.HDFLowLevelParsingListener: void characterRun(org.apache.poi.hdf.model.hdftypes.ChpxNode)>($r11);

        if $i7 >= i10 goto label2;

        i13 = i13 + 1;

        goto label3;

     label2:
        $r13 = r1.<org.apache.poi.hdf.model.HDFObjectFactory: org.apache.poi.hdf.model.util.ParsingState _charParsingState>;

        virtualinvoke $r13.<org.apache.poi.hdf.model.util.ParsingState: void setState(int,org.apache.poi.hdf.model.hdftypes.FormattedDiskPage,int)>(i12, r14, i13);

        goto label6;

     label3:
        goto label5;

     label4:
        $r6 = r1.<org.apache.poi.hdf.model.HDFObjectFactory: byte[] _tableBuffer>;

        i12 = i12 + 1;

        $i2 = virtualinvoke r0.<org.apache.poi.hdf.model.hdftypes.PlexOfCps: int getStructOffset(int)>(i12);

        $i3 = i1 + $i2;

        $i4 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>($r6, $i3);

        r7 = newarray (byte)[512];

        $r8 = r1.<org.apache.poi.hdf.model.HDFObjectFactory: byte[] _mainDocument>;

        $i5 = $i4 * 512;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, $i5, r7, 0, 512);

        $r9 = new org.apache.poi.hdf.model.hdftypes.CHPFormattedDiskPage;

        specialinvoke $r9.<org.apache.poi.hdf.model.hdftypes.CHPFormattedDiskPage: void <init>(byte[])>(r7);

        r14 = $r9;

        i13 = 0;

        i14 = virtualinvoke $r9.<org.apache.poi.hdf.model.hdftypes.FormattedDiskPage: int size()>();

     label5:
        if i12 < $i0 goto label1;

     label6:
        return;
    }

    private void initParagraphProperties(int, org.apache.poi.hdf.model.hdftypes.PlexOfCps, int, org.apache.poi.hdf.model.hdftypes.PlexOfCps, int, int)
    {
        byte[] $r6, $r7, $r9, r15;
        org.apache.poi.hdf.event.HDFLowLevelParsingListener $r11;
        org.apache.poi.hdf.model.hdftypes.PAPFormattedDiskPage $r8;
        org.apache.poi.hdf.model.hdftypes.PlexOfCps r0, r12;
        org.apache.poi.hdf.model.HDFObjectFactory r1;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i9, i10, $i11, i12, $i13, $i14, i15, i16, i17;
        org.apache.poi.hdf.model.util.ParsingState $r2, $r3, $r5, $r13;
        org.apache.poi.hdf.model.hdftypes.PapxNode $r10;
        org.apache.poi.hdf.model.hdftypes.FormattedDiskPage $r4, r14;

        r1 := @this: org.apache.poi.hdf.model.HDFObjectFactory;

        i1 := @parameter0: int;

        r0 := @parameter1: org.apache.poi.hdf.model.hdftypes.PlexOfCps;

        i12 := @parameter2: int;

        r12 := @parameter3: org.apache.poi.hdf.model.hdftypes.PlexOfCps;

        i8 := @parameter4: int;

        i10 := @parameter5: int;

        $i0 = virtualinvoke r0.<org.apache.poi.hdf.model.hdftypes.PlexOfCps: int length()>();

        $r2 = r1.<org.apache.poi.hdf.model.HDFObjectFactory: org.apache.poi.hdf.model.util.ParsingState _parParsingState>;

        i15 = virtualinvoke $r2.<org.apache.poi.hdf.model.util.ParsingState: int getCurrentPageIndex()>();

        $r3 = r1.<org.apache.poi.hdf.model.HDFObjectFactory: org.apache.poi.hdf.model.util.ParsingState _parParsingState>;

        $r4 = virtualinvoke $r3.<org.apache.poi.hdf.model.util.ParsingState: org.apache.poi.hdf.model.hdftypes.FormattedDiskPage getFkp()>();

        r14 = $r4;

        $r5 = r1.<org.apache.poi.hdf.model.HDFObjectFactory: org.apache.poi.hdf.model.util.ParsingState _parParsingState>;

        i16 = virtualinvoke $r5.<org.apache.poi.hdf.model.util.ParsingState: int getCurrentPropIndex()>();

        i17 = virtualinvoke $r4.<org.apache.poi.hdf.model.hdftypes.FormattedDiskPage: int size()>();

     label1:
        if i16 >= i17 goto label4;

        $i6 = virtualinvoke r14.<org.apache.poi.hdf.model.hdftypes.FormattedDiskPage: int getStart(int)>(i16);

        $i7 = virtualinvoke r14.<org.apache.poi.hdf.model.hdftypes.FormattedDiskPage: int getEnd(int)>(i16);

        $r9 = virtualinvoke r14.<org.apache.poi.hdf.model.hdftypes.FormattedDiskPage: byte[] getGrpprl(int)>(i16);

        $r11 = r1.<org.apache.poi.hdf.model.HDFObjectFactory: org.apache.poi.hdf.event.HDFLowLevelParsingListener _listener>;

        $r10 = new org.apache.poi.hdf.model.hdftypes.PapxNode;

        $i9 = staticinvoke <java.lang.Math: int max(int,int)>($i6, i8);

        $i11 = staticinvoke <java.lang.Math: int min(int,int)>($i7, i10);

        specialinvoke $r10.<org.apache.poi.hdf.model.hdftypes.PapxNode: void <init>(int,int,byte[])>($i9, $i11, $r9);

        interfaceinvoke $r11.<org.apache.poi.hdf.event.HDFLowLevelParsingListener: void paragraph(org.apache.poi.hdf.model.hdftypes.PapxNode)>($r10);

        $i13 = staticinvoke <java.lang.Math: int max(int,int)>(i8, $i6);

        $i14 = staticinvoke <java.lang.Math: int min(int,int)>($i7, i10);

        specialinvoke r1.<org.apache.poi.hdf.model.HDFObjectFactory: void initCharacterProperties(int,org.apache.poi.hdf.model.hdftypes.PlexOfCps,int,int)>(i12, r12, $i13, $i14);

        if $i7 >= i10 goto label2;

        i16 = i16 + 1;

        goto label3;

     label2:
        $r13 = r1.<org.apache.poi.hdf.model.HDFObjectFactory: org.apache.poi.hdf.model.util.ParsingState _parParsingState>;

        virtualinvoke $r13.<org.apache.poi.hdf.model.util.ParsingState: void setState(int,org.apache.poi.hdf.model.hdftypes.FormattedDiskPage,int)>(i15, r14, i16);

        goto label6;

     label3:
        goto label5;

     label4:
        $r6 = r1.<org.apache.poi.hdf.model.HDFObjectFactory: byte[] _tableBuffer>;

        i15 = i15 + 1;

        $i2 = virtualinvoke r0.<org.apache.poi.hdf.model.hdftypes.PlexOfCps: int getStructOffset(int)>(i15);

        $i3 = i1 + $i2;

        $i4 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>($r6, $i3);

        r15 = newarray (byte)[512];

        $r7 = r1.<org.apache.poi.hdf.model.HDFObjectFactory: byte[] _mainDocument>;

        $i5 = $i4 * 512;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, $i5, r15, 0, 512);

        $r8 = new org.apache.poi.hdf.model.hdftypes.PAPFormattedDiskPage;

        specialinvoke $r8.<org.apache.poi.hdf.model.hdftypes.PAPFormattedDiskPage: void <init>(byte[])>(r15);

        r14 = $r8;

        i16 = 0;

        i17 = virtualinvoke $r8.<org.apache.poi.hdf.model.hdftypes.FormattedDiskPage: int size()>();

     label5:
        if i15 < $i0 goto label1;

     label6:
        return;
    }

    private void initParagraphProperties()
    {
        byte[] $r7, $r8, $r10, $r11, $r13, $r16, $r17, $r19, r22, r24, r25;
        org.apache.poi.hdf.event.HDFLowLevelParsingListener $r15, $r21;
        org.apache.poi.hdf.model.hdftypes.ChpxNode $r20;
        org.apache.poi.hdf.model.hdftypes.PAPFormattedDiskPage $r12;
        org.apache.poi.hdf.model.hdftypes.FileInformationBlock $r1, $r2, $r3, $r4;
        org.apache.poi.hdf.model.hdftypes.PlexOfCps $r5, $r6;
        org.apache.poi.hdf.model.HDFObjectFactory r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, i24, i25, i26, i27, i28, i29;
        org.apache.poi.hdf.model.hdftypes.CHPFormattedDiskPage $r9, $r18, r23;
        org.apache.poi.hdf.model.hdftypes.PapxNode $r14;

        r0 := @this: org.apache.poi.hdf.model.HDFObjectFactory;

        $r1 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: org.apache.poi.hdf.model.hdftypes.FileInformationBlock _fib>;

        $i0 = virtualinvoke $r1.<org.apache.poi.hdf.model.hdftypes.FileInformationBlock: int getFcPlcfbtePapx()>();

        $r2 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: org.apache.poi.hdf.model.hdftypes.FileInformationBlock _fib>;

        $i1 = virtualinvoke $r2.<org.apache.poi.hdf.model.hdftypes.FileInformationBlock: int getLcbPlcfbtePapx()>();

        $r3 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: org.apache.poi.hdf.model.hdftypes.FileInformationBlock _fib>;

        $i2 = virtualinvoke $r3.<org.apache.poi.hdf.model.hdftypes.FileInformationBlock: int getFcPlcfbteChpx()>();

        $r4 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: org.apache.poi.hdf.model.hdftypes.FileInformationBlock _fib>;

        $i3 = virtualinvoke $r4.<org.apache.poi.hdf.model.hdftypes.FileInformationBlock: int getLcbPlcfbteChpx()>();

        $r5 = new org.apache.poi.hdf.model.hdftypes.PlexOfCps;

        specialinvoke $r5.<org.apache.poi.hdf.model.hdftypes.PlexOfCps: void <init>(int,int)>($i3, 4);

        $r6 = new org.apache.poi.hdf.model.hdftypes.PlexOfCps;

        specialinvoke $r6.<org.apache.poi.hdf.model.hdftypes.PlexOfCps: void <init>(int,int)>($i1, 4);

        $r7 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: byte[] _tableBuffer>;

        $i4 = virtualinvoke $r5.<org.apache.poi.hdf.model.hdftypes.PlexOfCps: int getStructOffset(int)>(0);

        $i5 = $i2 + $i4;

        $i6 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>($r7, $i5);

        i24 = $i6;

        $i7 = virtualinvoke $r5.<org.apache.poi.hdf.model.hdftypes.PlexOfCps: int length()>();

        i25 = 0;

        r22 = newarray (byte)[512];

        $r8 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: byte[] _mainDocument>;

        $i8 = $i6 * 512;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, $i8, r22, 0, 512);

        $r9 = new org.apache.poi.hdf.model.hdftypes.CHPFormattedDiskPage;

        specialinvoke $r9.<org.apache.poi.hdf.model.hdftypes.CHPFormattedDiskPage: void <init>(byte[])>(r22);

        r23 = $r9;

        i26 = 0;

        i27 = virtualinvoke $r9.<org.apache.poi.hdf.model.hdftypes.CHPFormattedDiskPage: int size()>();

        $i9 = virtualinvoke $r6.<org.apache.poi.hdf.model.hdftypes.PlexOfCps: int length()>();

        i28 = 0;

     label1:
        if i28 >= $i9 goto label8;

        $r10 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: byte[] _tableBuffer>;

        $i10 = virtualinvoke $r6.<org.apache.poi.hdf.model.hdftypes.PlexOfCps: int getStructOffset(int)>(i28);

        $i11 = $i0 + $i10;

        $i12 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>($r10, $i11);

        r24 = newarray (byte)[512];

        $r11 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: byte[] _mainDocument>;

        $i13 = $i12 * 512;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r11, $i13, r24, 0, 512);

        $r12 = new org.apache.poi.hdf.model.hdftypes.PAPFormattedDiskPage;

        specialinvoke $r12.<org.apache.poi.hdf.model.hdftypes.PAPFormattedDiskPage: void <init>(byte[])>(r24);

        $i14 = virtualinvoke $r12.<org.apache.poi.hdf.model.hdftypes.PAPFormattedDiskPage: int size()>();

        i29 = 0;

     label2:
        if i29 >= $i14 goto label7;

        $i15 = virtualinvoke $r12.<org.apache.poi.hdf.model.hdftypes.PAPFormattedDiskPage: int getStart(int)>(i29);

        $i16 = virtualinvoke $r12.<org.apache.poi.hdf.model.hdftypes.PAPFormattedDiskPage: int getEnd(int)>(i29);

        $r13 = virtualinvoke $r12.<org.apache.poi.hdf.model.hdftypes.PAPFormattedDiskPage: byte[] getGrpprl(int)>(i29);

        $r15 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: org.apache.poi.hdf.event.HDFLowLevelParsingListener _listener>;

        $r14 = new org.apache.poi.hdf.model.hdftypes.PapxNode;

        specialinvoke $r14.<org.apache.poi.hdf.model.hdftypes.PapxNode: void <init>(int,int,byte[])>($i15, $i16, $r13);

        interfaceinvoke $r15.<org.apache.poi.hdf.event.HDFLowLevelParsingListener: void paragraph(org.apache.poi.hdf.model.hdftypes.PapxNode)>($r14);

     label3:
        if i26 >= i27 goto label4;

        $i22 = virtualinvoke r23.<org.apache.poi.hdf.model.hdftypes.CHPFormattedDiskPage: int getStart(int)>(i26);

        $i23 = virtualinvoke r23.<org.apache.poi.hdf.model.hdftypes.CHPFormattedDiskPage: int getEnd(int)>(i26);

        $r19 = virtualinvoke r23.<org.apache.poi.hdf.model.hdftypes.CHPFormattedDiskPage: byte[] getGrpprl(int)>(i26);

        $r21 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: org.apache.poi.hdf.event.HDFLowLevelParsingListener _listener>;

        $r20 = new org.apache.poi.hdf.model.hdftypes.ChpxNode;

        specialinvoke $r20.<org.apache.poi.hdf.model.hdftypes.ChpxNode: void <init>(int,int,byte[])>($i22, $i23, $r19);

        interfaceinvoke $r21.<org.apache.poi.hdf.event.HDFLowLevelParsingListener: void characterRun(org.apache.poi.hdf.model.hdftypes.ChpxNode)>($r20);

        if $i23 >= $i16 goto label6;

        i26 = i26 + 1;

        goto label5;

     label4:
        $r16 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: byte[] _tableBuffer>;

        i25 = i25 + 1;

        $i17 = virtualinvoke $r5.<org.apache.poi.hdf.model.hdftypes.PlexOfCps: int getStructOffset(int)>(i25);

        $i18 = $i2 + $i17;

        $i19 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>($r16, $i18);

        i24 = $i19;

        r25 = newarray (byte)[512];

        $r17 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: byte[] _mainDocument>;

        $i20 = $i19 * 512;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r17, $i20, r25, 0, 512);

        $r18 = new org.apache.poi.hdf.model.hdftypes.CHPFormattedDiskPage;

        specialinvoke $r18.<org.apache.poi.hdf.model.hdftypes.CHPFormattedDiskPage: void <init>(byte[])>(r25);

        r23 = $r18;

        i26 = 0;

        i27 = virtualinvoke $r18.<org.apache.poi.hdf.model.hdftypes.CHPFormattedDiskPage: int size()>();

     label5:
        $i21 = $i7 + 1;

        if i24 <= $i21 goto label3;

     label6:
        i29 = i29 + 1;

        goto label2;

     label7:
        i28 = i28 + 1;

        goto label1;

     label8:
        return;
    }

    private void initParsingStates(int, org.apache.poi.hdf.model.hdftypes.PlexOfCps, int, org.apache.poi.hdf.model.hdftypes.PlexOfCps)
    {
        byte[] $r2, $r3, $r7, $r8, r11, r12;
        org.apache.poi.hdf.model.HDFObjectFactory r0;
        int i0, $i1, $i2, $i3, $i4, i5, $i6, $i7, $i8, $i9;
        org.apache.poi.hdf.model.util.ParsingState $r5, $r10;
        org.apache.poi.hdf.model.hdftypes.CHPFormattedDiskPage $r4;
        org.apache.poi.hdf.model.hdftypes.PAPFormattedDiskPage $r9;
        org.apache.poi.hdf.model.hdftypes.PlexOfCps r1, r6;

        r0 := @this: org.apache.poi.hdf.model.HDFObjectFactory;

        i5 := @parameter0: int;

        r6 := @parameter1: org.apache.poi.hdf.model.hdftypes.PlexOfCps;

        i0 := @parameter2: int;

        r1 := @parameter3: org.apache.poi.hdf.model.hdftypes.PlexOfCps;

        $r2 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: byte[] _tableBuffer>;

        $i1 = virtualinvoke r1.<org.apache.poi.hdf.model.hdftypes.PlexOfCps: int getStructOffset(int)>(0);

        $i2 = i0 + $i1;

        $i3 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>($r2, $i2);

        r11 = newarray (byte)[512];

        $r3 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: byte[] _mainDocument>;

        $i4 = $i3 * 512;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, $i4, r11, 0, 512);

        $r4 = new org.apache.poi.hdf.model.hdftypes.CHPFormattedDiskPage;

        specialinvoke $r4.<org.apache.poi.hdf.model.hdftypes.CHPFormattedDiskPage: void <init>(byte[])>(r11);

        $r5 = new org.apache.poi.hdf.model.util.ParsingState;

        specialinvoke $r5.<org.apache.poi.hdf.model.util.ParsingState: void <init>(int,org.apache.poi.hdf.model.hdftypes.FormattedDiskPage)>($i3, $r4);

        r0.<org.apache.poi.hdf.model.HDFObjectFactory: org.apache.poi.hdf.model.util.ParsingState _charParsingState> = $r5;

        $r7 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: byte[] _tableBuffer>;

        $i6 = virtualinvoke r6.<org.apache.poi.hdf.model.hdftypes.PlexOfCps: int getStructOffset(int)>(0);

        $i7 = i5 + $i6;

        $i8 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>($r7, $i7);

        r12 = newarray (byte)[512];

        $r8 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: byte[] _mainDocument>;

        $i9 = $i8 * 512;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, $i9, r12, 0, 512);

        $r9 = new org.apache.poi.hdf.model.hdftypes.PAPFormattedDiskPage;

        specialinvoke $r9.<org.apache.poi.hdf.model.hdftypes.PAPFormattedDiskPage: void <init>(byte[])>(r12);

        $r10 = new org.apache.poi.hdf.model.util.ParsingState;

        specialinvoke $r10.<org.apache.poi.hdf.model.util.ParsingState: void <init>(int,org.apache.poi.hdf.model.hdftypes.FormattedDiskPage)>($i8, $r9);

        r0.<org.apache.poi.hdf.model.HDFObjectFactory: org.apache.poi.hdf.model.util.ParsingState _parParsingState> = $r10;

        return;
    }

    private void initSectionProperties()
    {
        byte[] $r14, $r15, $r16, $r17, $r18, $r21, $r22, $r23, $r24, $r25, r28, r29;
        org.apache.poi.hdf.model.hdftypes.PlexOfCps $r30, $r31, $r32;
        org.apache.poi.hdf.model.hdftypes.SepxNode $r33, $r34;
        short $s21, $s36;
        org.apache.poi.hdf.event.HDFLowLevelParsingListener $r13, $r20, $r27;
        org.apache.poi.hdf.model.hdftypes.FileInformationBlock $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        org.apache.poi.hdf.model.HDFObjectFactory r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i37, $i38, $i39, i40, i41, i42, i43, i44, $i45, $i46, $i47, $i48;

        r0 := @this: org.apache.poi.hdf.model.HDFObjectFactory;

        $r1 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: org.apache.poi.hdf.model.hdftypes.FileInformationBlock _fib>;

        $i0 = virtualinvoke $r1.<org.apache.poi.hdf.model.hdftypes.FileInformationBlock: int getCcpText()>();

        $r2 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: org.apache.poi.hdf.model.hdftypes.FileInformationBlock _fib>;

        virtualinvoke $r2.<org.apache.poi.hdf.model.hdftypes.FileInformationBlock: int getCcpFtn()>();

        $r3 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: org.apache.poi.hdf.model.hdftypes.FileInformationBlock _fib>;

        $i1 = virtualinvoke $r3.<org.apache.poi.hdf.model.hdftypes.FileInformationBlock: int getFcMin()>();

        $r4 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: org.apache.poi.hdf.model.hdftypes.FileInformationBlock _fib>;

        $i2 = virtualinvoke $r4.<org.apache.poi.hdf.model.hdftypes.FileInformationBlock: int getFcPlcfsed()>();

        $r5 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: org.apache.poi.hdf.model.hdftypes.FileInformationBlock _fib>;

        $i3 = virtualinvoke $r5.<org.apache.poi.hdf.model.hdftypes.FileInformationBlock: int getLcbPlcfsed()>();

        $r6 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: org.apache.poi.hdf.model.hdftypes.FileInformationBlock _fib>;

        $i4 = virtualinvoke $r6.<org.apache.poi.hdf.model.hdftypes.FileInformationBlock: int getFcPlcfbtePapx()>();

        $r7 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: org.apache.poi.hdf.model.hdftypes.FileInformationBlock _fib>;

        $i5 = virtualinvoke $r7.<org.apache.poi.hdf.model.hdftypes.FileInformationBlock: int getLcbPlcfbtePapx()>();

        $r8 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: org.apache.poi.hdf.model.hdftypes.FileInformationBlock _fib>;

        $i6 = virtualinvoke $r8.<org.apache.poi.hdf.model.hdftypes.FileInformationBlock: int getFcPlcfbteChpx()>();

        $r9 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: org.apache.poi.hdf.model.hdftypes.FileInformationBlock _fib>;

        $i7 = virtualinvoke $r9.<org.apache.poi.hdf.model.hdftypes.FileInformationBlock: int getLcbPlcfbteChpx()>();

        $r30 = new org.apache.poi.hdf.model.hdftypes.PlexOfCps;

        specialinvoke $r30.<org.apache.poi.hdf.model.hdftypes.PlexOfCps: void <init>(int,int)>($i7, 4);

        $r31 = new org.apache.poi.hdf.model.hdftypes.PlexOfCps;

        specialinvoke $r31.<org.apache.poi.hdf.model.hdftypes.PlexOfCps: void <init>(int,int)>($i5, 4);

        specialinvoke r0.<org.apache.poi.hdf.model.HDFObjectFactory: void initParsingStates(int,org.apache.poi.hdf.model.hdftypes.PlexOfCps,int,org.apache.poi.hdf.model.hdftypes.PlexOfCps)>($i4, $r31, $i6, $r30);

        $r32 = new org.apache.poi.hdf.model.hdftypes.PlexOfCps;

        specialinvoke $r32.<org.apache.poi.hdf.model.hdftypes.PlexOfCps: void <init>(int,int)>($i3, 12);

        $i8 = virtualinvoke $r32.<org.apache.poi.hdf.model.hdftypes.PlexOfCps: int length()>();

        i9 = $i1 + $i0;

        i40 = 0;

     label1:
        if i40 >= $i8 goto label3;

        $r21 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: byte[] _tableBuffer>;

        $i25 = virtualinvoke $r32.<org.apache.poi.hdf.model.hdftypes.PlexOfCps: int getIntOffset(int)>(i40);

        $i26 = $i2 + $i25;

        $i27 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>($r21, $i26);

        i41 = $i27 + $i1;

        $r22 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: byte[] _tableBuffer>;

        $i28 = i40 + 1;

        $i29 = virtualinvoke $r32.<org.apache.poi.hdf.model.hdftypes.PlexOfCps: int getIntOffset(int)>($i28);

        $i30 = $i2 + $i29;

        $i31 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>($r22, $i30);

        i42 = $i31 + $i1;

        $r23 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: byte[] _tableBuffer>;

        $i32 = virtualinvoke $r32.<org.apache.poi.hdf.model.hdftypes.PlexOfCps: int getStructOffset(int)>(i40);

        $i33 = $i2 + $i32;

        $i34 = $i33 + 2;

        $i35 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>($r23, $i34);

        $r24 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: byte[] _mainDocument>;

        $s36 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>($r24, $i35);

        $i45 = (int) $s36;

        r28 = newarray (byte)[$i45];

        $r25 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: byte[] _mainDocument>;

        $i37 = $i35 + 2;

        $i46 = (int) $s36;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r25, $i37, r28, 0, $i46);

        $r33 = new org.apache.poi.hdf.model.hdftypes.SepxNode;

        $i38 = i40 + 1;

        specialinvoke $r33.<org.apache.poi.hdf.model.hdftypes.SepxNode: void <init>(int,int,int,byte[])>($i38, i41, i42, r28);

        $r27 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: org.apache.poi.hdf.event.HDFLowLevelParsingListener _listener>;

        interfaceinvoke $r27.<org.apache.poi.hdf.event.HDFLowLevelParsingListener: void bodySection(org.apache.poi.hdf.model.hdftypes.SepxNode)>($r33);

        $i39 = staticinvoke <java.lang.Math: int min(int,int)>(i9, i42);

        specialinvoke r0.<org.apache.poi.hdf.model.HDFObjectFactory: void initParagraphProperties(int,org.apache.poi.hdf.model.hdftypes.PlexOfCps,int,org.apache.poi.hdf.model.hdftypes.PlexOfCps,int,int)>($i4, $r31, $i6, $r30, i41, $i39);

        if i42 <= i9 goto label2;

        goto label3;

     label2:
        i40 = i40 + 1;

        goto label1;

     label3:
        if i40 >= $i8 goto label4;

        $r14 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: byte[] _tableBuffer>;

        $i10 = virtualinvoke $r32.<org.apache.poi.hdf.model.hdftypes.PlexOfCps: int getIntOffset(int)>(i40);

        $i11 = $i2 + $i10;

        $i12 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>($r14, $i11);

        i43 = $i12 + $i1;

        $r15 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: byte[] _tableBuffer>;

        $i13 = i40 + 1;

        $i14 = virtualinvoke $r32.<org.apache.poi.hdf.model.hdftypes.PlexOfCps: int getIntOffset(int)>($i13);

        $i15 = $i2 + $i14;

        $i16 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>($r15, $i15);

        i44 = $i16 + $i1;

        $r16 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: byte[] _tableBuffer>;

        $i17 = virtualinvoke $r32.<org.apache.poi.hdf.model.hdftypes.PlexOfCps: int getStructOffset(int)>(i40);

        $i18 = $i2 + $i17;

        $i19 = $i18 + 2;

        $i20 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>($r16, $i19);

        $r17 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: byte[] _mainDocument>;

        $s21 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>($r17, $i20);

        $i47 = (int) $s21;

        r29 = newarray (byte)[$i47];

        $r18 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: byte[] _mainDocument>;

        $i22 = $i20 + 2;

        $i48 = (int) $s21;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r18, $i22, r29, 0, $i48);

        $r34 = new org.apache.poi.hdf.model.hdftypes.SepxNode;

        $i23 = i40 + 1;

        specialinvoke $r34.<org.apache.poi.hdf.model.hdftypes.SepxNode: void <init>(int,int,int,byte[])>($i23, i43, i44, r29);

        $r20 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: org.apache.poi.hdf.event.HDFLowLevelParsingListener _listener>;

        interfaceinvoke $r20.<org.apache.poi.hdf.event.HDFLowLevelParsingListener: void hdrSection(org.apache.poi.hdf.model.hdftypes.SepxNode)>($r34);

        $i24 = staticinvoke <java.lang.Math: int max(int,int)>(i43, i9);

        specialinvoke r0.<org.apache.poi.hdf.model.HDFObjectFactory: void initParagraphProperties(int,org.apache.poi.hdf.model.hdftypes.PlexOfCps,int,org.apache.poi.hdf.model.hdftypes.PlexOfCps,int,int)>($i4, $r31, $i6, $r30, $i24, i44);

        i40 = i40 + 1;

        goto label3;

     label4:
        $r13 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: org.apache.poi.hdf.event.HDFLowLevelParsingListener _listener>;

        interfaceinvoke $r13.<org.apache.poi.hdf.event.HDFLowLevelParsingListener: void endSections()>();

        return;
    }

    private void initDocumentProperties()
    {
        byte[] r3, $r4;
        org.apache.poi.hdf.event.HDFLowLevelParsingListener $r6;
        org.apache.poi.hdf.model.hdftypes.FileInformationBlock $r1, $r2;
        org.apache.poi.hdf.model.hdftypes.DocumentProperties $r5;
        org.apache.poi.hdf.model.HDFObjectFactory r0;
        int $i0, $i1;

        r0 := @this: org.apache.poi.hdf.model.HDFObjectFactory;

        $r1 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: org.apache.poi.hdf.model.hdftypes.FileInformationBlock _fib>;

        $i0 = virtualinvoke $r1.<org.apache.poi.hdf.model.hdftypes.FileInformationBlock: int getFcDop()>();

        $r2 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: org.apache.poi.hdf.model.hdftypes.FileInformationBlock _fib>;

        $i1 = virtualinvoke $r2.<org.apache.poi.hdf.model.hdftypes.FileInformationBlock: int getLcbDop()>();

        r3 = newarray (byte)[$i1];

        $r4 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: byte[] _tableBuffer>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, $i0, r3, 0, $i1);

        $r6 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: org.apache.poi.hdf.event.HDFLowLevelParsingListener _listener>;

        $r5 = new org.apache.poi.hdf.model.hdftypes.DocumentProperties;

        specialinvoke $r5.<org.apache.poi.hdf.model.hdftypes.DocumentProperties: void <init>(byte[])>(r3);

        interfaceinvoke $r6.<org.apache.poi.hdf.event.HDFLowLevelParsingListener: void document(org.apache.poi.hdf.model.hdftypes.DocumentProperties)>($r5);

        return;
    }

    private void createStyleSheet()
    {
        byte[] r3, $r4;
        org.apache.poi.hdf.event.HDFLowLevelParsingListener $r6;
        org.apache.poi.hdf.model.hdftypes.FileInformationBlock $r1, $r2;
        org.apache.poi.hdf.model.HDFObjectFactory r0;
        int $i0, $i1;
        org.apache.poi.hdf.model.hdftypes.StyleSheet $r5;

        r0 := @this: org.apache.poi.hdf.model.HDFObjectFactory;

        $r1 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: org.apache.poi.hdf.model.hdftypes.FileInformationBlock _fib>;

        $i0 = virtualinvoke $r1.<org.apache.poi.hdf.model.hdftypes.FileInformationBlock: int getFcStshf()>();

        $r2 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: org.apache.poi.hdf.model.hdftypes.FileInformationBlock _fib>;

        $i1 = virtualinvoke $r2.<org.apache.poi.hdf.model.hdftypes.FileInformationBlock: int getLcbStshf()>();

        r3 = newarray (byte)[$i1];

        $r4 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: byte[] _tableBuffer>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, $i0, r3, 0, $i1);

        $r6 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: org.apache.poi.hdf.event.HDFLowLevelParsingListener _listener>;

        $r5 = new org.apache.poi.hdf.model.hdftypes.StyleSheet;

        specialinvoke $r5.<org.apache.poi.hdf.model.hdftypes.StyleSheet: void <init>(byte[])>(r3);

        interfaceinvoke $r6.<org.apache.poi.hdf.event.HDFLowLevelParsingListener: void styleSheet(org.apache.poi.hdf.model.hdftypes.StyleSheet)>($r5);

        return;
    }

    private void createListTables()
    {
        byte[] r3, $r4, r7, $r8;
        org.apache.poi.hdf.event.HDFLowLevelParsingListener $r10;
        org.apache.poi.hdf.model.HDFObjectFactory r0;
        int $i0, $i1, $i2, $i3, i4;
        org.apache.poi.hdf.model.hdftypes.FileInformationBlock $r1, $r2, $r5, $r6;
        org.apache.poi.hdf.model.hdftypes.ListTables $r9;

        r0 := @this: org.apache.poi.hdf.model.HDFObjectFactory;

        $r1 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: org.apache.poi.hdf.model.hdftypes.FileInformationBlock _fib>;

        $i0 = virtualinvoke $r1.<org.apache.poi.hdf.model.hdftypes.FileInformationBlock: int getFcPlfLfo()>();

        $r2 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: org.apache.poi.hdf.model.hdftypes.FileInformationBlock _fib>;

        $i1 = virtualinvoke $r2.<org.apache.poi.hdf.model.hdftypes.FileInformationBlock: int getLcbPlfLfo()>();

        r3 = newarray (byte)[$i1];

        $r4 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: byte[] _tableBuffer>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, $i0, r3, 0, $i1);

        $r5 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: org.apache.poi.hdf.model.hdftypes.FileInformationBlock _fib>;

        $i2 = virtualinvoke $r5.<org.apache.poi.hdf.model.hdftypes.FileInformationBlock: int getFcPlcfLst()>();

        $r6 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: org.apache.poi.hdf.model.hdftypes.FileInformationBlock _fib>;

        $i3 = virtualinvoke $r6.<org.apache.poi.hdf.model.hdftypes.FileInformationBlock: int getLcbPlcfLst()>();

        if $i2 <= 0 goto label1;

        if $i3 <= 0 goto label1;

        i4 = $i0 - $i2;

        r7 = newarray (byte)[i4];

        $r8 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: byte[] _tableBuffer>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, $i2, r7, 0, i4);

        $r10 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: org.apache.poi.hdf.event.HDFLowLevelParsingListener _listener>;

        $r9 = new org.apache.poi.hdf.model.hdftypes.ListTables;

        specialinvoke $r9.<org.apache.poi.hdf.model.hdftypes.ListTables: void <init>(byte[],byte[])>(r7, r3);

        interfaceinvoke $r10.<org.apache.poi.hdf.event.HDFLowLevelParsingListener: void lists(org.apache.poi.hdf.model.hdftypes.ListTables)>($r9);

     label1:
        return;
    }

    private void createFontTable()
    {
        byte[] r3, $r4;
        org.apache.poi.hdf.event.HDFLowLevelParsingListener $r6;
        org.apache.poi.hdf.model.hdftypes.FileInformationBlock $r1, $r2;
        org.apache.poi.hdf.model.HDFObjectFactory r0;
        int $i0, $i1;
        org.apache.poi.hdf.model.hdftypes.FontTable $r5;

        r0 := @this: org.apache.poi.hdf.model.HDFObjectFactory;

        $r1 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: org.apache.poi.hdf.model.hdftypes.FileInformationBlock _fib>;

        $i0 = virtualinvoke $r1.<org.apache.poi.hdf.model.hdftypes.FileInformationBlock: int getFcSttbfffn()>();

        $r2 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: org.apache.poi.hdf.model.hdftypes.FileInformationBlock _fib>;

        $i1 = virtualinvoke $r2.<org.apache.poi.hdf.model.hdftypes.FileInformationBlock: int getLcbSttbfffn()>();

        r3 = newarray (byte)[$i1];

        $r4 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: byte[] _tableBuffer>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, $i0, r3, 0, $i1);

        $r6 = r0.<org.apache.poi.hdf.model.HDFObjectFactory: org.apache.poi.hdf.event.HDFLowLevelParsingListener _listener>;

        $r5 = new org.apache.poi.hdf.model.hdftypes.FontTable;

        specialinvoke $r5.<org.apache.poi.hdf.model.hdftypes.FontTable: void <init>(byte[])>(r3);

        interfaceinvoke $r6.<org.apache.poi.hdf.event.HDFLowLevelParsingListener: void fonts(org.apache.poi.hdf.model.hdftypes.FontTable)>($r5);

        return;
    }
}
