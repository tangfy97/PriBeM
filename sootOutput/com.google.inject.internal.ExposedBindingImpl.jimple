public final class com.google.inject.internal.ExposedBindingImpl extends com.google.inject.internal.BindingImpl implements com.google.inject.spi.ExposedBinding
{
    private final com.google.inject.spi.PrivateElements privateElements;

    public void <init>(com.google.inject.internal.InjectorImpl, java.lang.Object, com.google.inject.Key, com.google.inject.internal.InternalFactory, com.google.inject.spi.PrivateElements)
    {
        com.google.inject.internal.InjectorImpl r1;
        com.google.inject.internal.Scoping $r5;
        com.google.inject.internal.InternalFactory r4;
        com.google.inject.Key r2;
        java.lang.Object r3;
        com.google.inject.spi.PrivateElements r6;
        com.google.inject.internal.ExposedBindingImpl r0;

        r0 := @this: com.google.inject.internal.ExposedBindingImpl;

        r1 := @parameter0: com.google.inject.internal.InjectorImpl;

        r3 := @parameter1: java.lang.Object;

        r2 := @parameter2: com.google.inject.Key;

        r4 := @parameter3: com.google.inject.internal.InternalFactory;

        r6 := @parameter4: com.google.inject.spi.PrivateElements;

        $r5 = <com.google.inject.internal.Scoping: com.google.inject.internal.Scoping UNSCOPED>;

        specialinvoke r0.<com.google.inject.internal.BindingImpl: void <init>(com.google.inject.internal.InjectorImpl,com.google.inject.Key,java.lang.Object,com.google.inject.internal.InternalFactory,com.google.inject.internal.Scoping)>(r1, r2, r3, r4, $r5);

        r0.<com.google.inject.internal.ExposedBindingImpl: com.google.inject.spi.PrivateElements privateElements> = r6;

        return;
    }

    public java.lang.Object acceptTargetVisitor(com.google.inject.spi.BindingTargetVisitor)
    {
        java.lang.Object $r2;
        com.google.inject.internal.ExposedBindingImpl r1;
        com.google.inject.spi.BindingTargetVisitor r0;

        r1 := @this: com.google.inject.internal.ExposedBindingImpl;

        r0 := @parameter0: com.google.inject.spi.BindingTargetVisitor;

        $r2 = interfaceinvoke r0.<com.google.inject.spi.BindingTargetVisitor: java.lang.Object visit(com.google.inject.spi.ExposedBinding)>(r1);

        return $r2;
    }

    public java.util.Set getDependencies()
    {
        com.google.inject.internal.util.$ImmutableSet $r2;
        com.google.inject.spi.Dependency $r1;
        com.google.inject.Key $r0;
        com.google.inject.internal.ExposedBindingImpl r3;

        r3 := @this: com.google.inject.internal.ExposedBindingImpl;

        $r0 = staticinvoke <com.google.inject.Key: com.google.inject.Key get(java.lang.Class)>(class "Lcom/google/inject/Injector;");

        $r1 = staticinvoke <com.google.inject.spi.Dependency: com.google.inject.spi.Dependency get(com.google.inject.Key)>($r0);

        $r2 = staticinvoke <com.google.inject.internal.util.$ImmutableSet: com.google.inject.internal.util.$ImmutableSet of(java.lang.Object)>($r1);

        return $r2;
    }

    public com.google.inject.spi.PrivateElements getPrivateElements()
    {
        com.google.inject.spi.PrivateElements $r1;
        com.google.inject.internal.ExposedBindingImpl r0;

        r0 := @this: com.google.inject.internal.ExposedBindingImpl;

        $r1 = r0.<com.google.inject.internal.ExposedBindingImpl: com.google.inject.spi.PrivateElements privateElements>;

        return $r1;
    }

    public java.lang.String toString()
    {
        com.google.inject.Key $r2;
        com.google.inject.internal.util.$ToStringBuilder $r0, $r3, $r5, $r7;
        java.lang.Object $r4;
        java.lang.String $r8;
        com.google.inject.spi.PrivateElements $r6;
        com.google.inject.internal.ExposedBindingImpl r1;

        r1 := @this: com.google.inject.internal.ExposedBindingImpl;

        $r0 = new com.google.inject.internal.util.$ToStringBuilder;

        specialinvoke $r0.<com.google.inject.internal.util.$ToStringBuilder: void <init>(java.lang.Class)>(class "Lcom/google/inject/spi/ExposedBinding;");

        $r2 = virtualinvoke r1.<com.google.inject.internal.ExposedBindingImpl: com.google.inject.Key getKey()>();

        $r3 = virtualinvoke $r0.<com.google.inject.internal.util.$ToStringBuilder: com.google.inject.internal.util.$ToStringBuilder add(java.lang.String,java.lang.Object)>("key", $r2);

        $r4 = virtualinvoke r1.<com.google.inject.internal.ExposedBindingImpl: java.lang.Object getSource()>();

        $r5 = virtualinvoke $r3.<com.google.inject.internal.util.$ToStringBuilder: com.google.inject.internal.util.$ToStringBuilder add(java.lang.String,java.lang.Object)>("source", $r4);

        $r6 = r1.<com.google.inject.internal.ExposedBindingImpl: com.google.inject.spi.PrivateElements privateElements>;

        $r7 = virtualinvoke $r5.<com.google.inject.internal.util.$ToStringBuilder: com.google.inject.internal.util.$ToStringBuilder add(java.lang.String,java.lang.Object)>("privateElements", $r6);

        $r8 = virtualinvoke $r7.<com.google.inject.internal.util.$ToStringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public void applyTo(com.google.inject.Binder)
    {
        java.lang.UnsupportedOperationException $r0;
        com.google.inject.Binder r2;
        com.google.inject.internal.ExposedBindingImpl r1;

        r1 := @this: com.google.inject.internal.ExposedBindingImpl;

        r2 := @parameter0: com.google.inject.Binder;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("This element represents a synthetic binding.");

        throw $r0;
    }
}
