final class org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$1 extends java.lang.Object implements org.waveprotocol.wave.model.util.DataDomain
{

    void <init>()
    {
        org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$1 r0;

        r0 := @this: org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void compose(org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$HandlerData, org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$HandlerData, org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$HandlerData)
    {
        org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$HandlerData r0, r3, r4;
        org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$1 r2;
        org.waveprotocol.wave.model.util.StringMap $r1;

        r2 := @this: org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$1;

        r0 := @parameter0: org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$HandlerData;

        r4 := @parameter1: org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$HandlerData;

        r3 := @parameter2: org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$HandlerData;

        $r1 = r0.<org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$HandlerData: org.waveprotocol.wave.model.util.StringMap handlers>;

        interfaceinvoke $r1.<org.waveprotocol.wave.model.util.StringMap: void clear()>();

        specialinvoke r2.<org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$1: void copyInto(org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$HandlerData,org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$HandlerData)>(r0, r3);

        specialinvoke r2.<org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$1: void copyInto(org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$HandlerData,org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$HandlerData)>(r0, r4);

        return;
    }

    private void copyInto(org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$HandlerData, org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$HandlerData)
    {
        org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$HandlerData r0, r1;
        org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$1 r6;
        org.waveprotocol.wave.model.util.StringMap $r2, $r3, $r4, $r5;

        r6 := @this: org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$1;

        r0 := @parameter0: org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$HandlerData;

        r1 := @parameter1: org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$HandlerData;

        $r3 = r0.<org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$HandlerData: org.waveprotocol.wave.model.util.StringMap handlers>;

        $r2 = r1.<org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$HandlerData: org.waveprotocol.wave.model.util.StringMap handlers>;

        interfaceinvoke $r3.<org.waveprotocol.wave.model.util.StringMap: void putAll(org.waveprotocol.wave.model.util.ReadableStringMap)>($r2);

        $r5 = r0.<org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$HandlerData: org.waveprotocol.wave.model.util.StringMap behaviours>;

        $r4 = r1.<org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$HandlerData: org.waveprotocol.wave.model.util.StringMap behaviours>;

        interfaceinvoke $r5.<org.waveprotocol.wave.model.util.StringMap: void putAll(org.waveprotocol.wave.model.util.ReadableStringMap)>($r4);

        return;
    }

    public org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$HandlerData empty()
    {
        org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$1 r1;
        org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$HandlerData $r0;

        r1 := @this: org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$1;

        $r0 = new org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$HandlerData;

        specialinvoke $r0.<org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$HandlerData: void <init>(org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$1)>(null);

        return $r0;
    }

    public org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$HandlerData readOnlyView(org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$HandlerData)
    {
        org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$1 r1;
        org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$HandlerData r0;

        r1 := @this: org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$1;

        r0 := @parameter0: org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$HandlerData;

        return r0;
    }

    public volatile java.lang.Object readOnlyView(java.lang.Object)
    {
        org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$HandlerData $r2, $r3;
        org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$1 r0;
        java.lang.Object r1;

        r0 := @this: org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$HandlerData) r1;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$1: org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$HandlerData readOnlyView(org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$HandlerData)>($r2);

        return $r3;
    }

    public volatile void compose(java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$HandlerData $r4, $r5, $r6;
        org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$1 r0;
        java.lang.Object r1, r2, r3;

        r0 := @this: org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        $r6 = (org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$HandlerData) r1;

        $r5 = (org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$HandlerData) r2;

        $r4 = (org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$HandlerData) r3;

        virtualinvoke r0.<org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$1: void compose(org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$HandlerData,org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$HandlerData,org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$HandlerData)>($r6, $r5, $r4);

        return;
    }

    public volatile java.lang.Object empty()
    {
        org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$1 r0;
        org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$HandlerData $r1;

        r0 := @this: org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$1;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$1: org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$HandlerData empty()>();

        return $r1;
    }
}
