class org.apache.lucene.search.SearcherLifetimeManager$SearcherTracker extends java.lang.Object implements java.lang.Comparable, java.io.Closeable
{
    public final org.apache.lucene.search.IndexSearcher searcher;
    public final double recordTimeSec;
    public final long version;

    public void <init>(org.apache.lucene.search.IndexSearcher)
    {
        org.apache.lucene.index.DirectoryReader $r3;
        long $l0, $l1;
        org.apache.lucene.search.SearcherLifetimeManager$SearcherTracker r0;
        org.apache.lucene.index.IndexReader $r2, $r4;
        org.apache.lucene.search.IndexSearcher r1;
        double $d0, $d1;

        r0 := @this: org.apache.lucene.search.SearcherLifetimeManager$SearcherTracker;

        r1 := @parameter0: org.apache.lucene.search.IndexSearcher;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.lucene.search.SearcherLifetimeManager$SearcherTracker: org.apache.lucene.search.IndexSearcher searcher> = r1;

        $r2 = virtualinvoke r1.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.index.IndexReader getIndexReader()>();

        $r3 = (org.apache.lucene.index.DirectoryReader) $r2;

        $l0 = virtualinvoke $r3.<org.apache.lucene.index.DirectoryReader: long getVersion()>();

        r0.<org.apache.lucene.search.SearcherLifetimeManager$SearcherTracker: long version> = $l0;

        $r4 = virtualinvoke r1.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.index.IndexReader getIndexReader()>();

        virtualinvoke $r4.<org.apache.lucene.index.IndexReader: void incRef()>();

        $l1 = staticinvoke <java.lang.System: long nanoTime()>();

        $d0 = (double) $l1;

        $d1 = $d0 / 1.0E9;

        r0.<org.apache.lucene.search.SearcherLifetimeManager$SearcherTracker: double recordTimeSec> = $d1;

        return;
    }

    public int compareTo(org.apache.lucene.search.SearcherLifetimeManager$SearcherTracker)
    {
        int $i0;
        org.apache.lucene.search.SearcherLifetimeManager$SearcherTracker r0, r1;
        double $d0, $d1;

        r1 := @this: org.apache.lucene.search.SearcherLifetimeManager$SearcherTracker;

        r0 := @parameter0: org.apache.lucene.search.SearcherLifetimeManager$SearcherTracker;

        $d1 = r0.<org.apache.lucene.search.SearcherLifetimeManager$SearcherTracker: double recordTimeSec>;

        $d0 = r1.<org.apache.lucene.search.SearcherLifetimeManager$SearcherTracker: double recordTimeSec>;

        $i0 = staticinvoke <java.lang.Double: int compare(double,double)>($d1, $d0);

        return $i0;
    }

    public synchronized void close() throws java.io.IOException
    {
        org.apache.lucene.search.SearcherLifetimeManager$SearcherTracker r0;
        org.apache.lucene.index.IndexReader $r2;
        org.apache.lucene.search.IndexSearcher $r1;

        r0 := @this: org.apache.lucene.search.SearcherLifetimeManager$SearcherTracker;

        $r1 = r0.<org.apache.lucene.search.SearcherLifetimeManager$SearcherTracker: org.apache.lucene.search.IndexSearcher searcher>;

        $r2 = virtualinvoke $r1.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.index.IndexReader getIndexReader()>();

        virtualinvoke $r2.<org.apache.lucene.index.IndexReader: void decRef()>();

        return;
    }

    public volatile int compareTo(java.lang.Object)
    {
        int $i0;
        java.lang.Object r1;
        org.apache.lucene.search.SearcherLifetimeManager$SearcherTracker r0, $r2;

        r0 := @this: org.apache.lucene.search.SearcherLifetimeManager$SearcherTracker;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.apache.lucene.search.SearcherLifetimeManager$SearcherTracker) r1;

        $i0 = virtualinvoke r0.<org.apache.lucene.search.SearcherLifetimeManager$SearcherTracker: int compareTo(org.apache.lucene.search.SearcherLifetimeManager$SearcherTracker)>($r2);

        return $i0;
    }
}
