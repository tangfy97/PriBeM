public class nu.xom.jaxen.function.TranslateFunction extends java.lang.Object implements nu.xom.jaxen.Function
{

    public void <init>()
    {
        nu.xom.jaxen.function.TranslateFunction r0;

        r0 := @this: nu.xom.jaxen.function.TranslateFunction;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object call(nu.xom.jaxen.Context, java.util.List) throws nu.xom.jaxen.FunctionCallException
    {
        nu.xom.jaxen.FunctionCallException $r1;
        nu.xom.jaxen.function.TranslateFunction r8;
        java.util.List r0;
        int $i0;
        java.lang.Object $r2, $r3, $r4;
        java.lang.String $r7;
        nu.xom.jaxen.Context r5;
        nu.xom.jaxen.Navigator $r6;

        r8 := @this: nu.xom.jaxen.function.TranslateFunction;

        r5 := @parameter0: nu.xom.jaxen.Context;

        r0 := @parameter1: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i0 != 3 goto label1;

        $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(0);

        $r3 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(1);

        $r4 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(2);

        $r6 = virtualinvoke r5.<nu.xom.jaxen.Context: nu.xom.jaxen.Navigator getNavigator()>();

        $r7 = staticinvoke <nu.xom.jaxen.function.TranslateFunction: java.lang.String evaluate(java.lang.Object,java.lang.Object,java.lang.Object,nu.xom.jaxen.Navigator)>($r2, $r3, $r4, $r6);

        return $r7;

     label1:
        $r1 = new nu.xom.jaxen.FunctionCallException;

        specialinvoke $r1.<nu.xom.jaxen.FunctionCallException: void <init>(java.lang.String)>("translate() requires three arguments.");

        throw $r1;
    }

    public static java.lang.String evaluate(java.lang.Object, java.lang.Object, java.lang.Object, nu.xom.jaxen.Navigator) throws nu.xom.jaxen.FunctionCallException
    {
        java.util.HashMap $r7;
        java.lang.String[] $r8, $r9, $r11;
        java.lang.StringBuffer $r10;
        int i0, i1, $i2, i3, i4, i5;
        java.lang.String $r2, $r4, $r6, $r12, r13, r15, $r16, r17;
        nu.xom.jaxen.Navigator r1;
        boolean $z0, $z1;
        java.lang.Object r0, r3, r5, $r14;

        r0 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Object;

        r5 := @parameter2: java.lang.Object;

        r1 := @parameter3: nu.xom.jaxen.Navigator;

        $r2 = staticinvoke <nu.xom.jaxen.function.StringFunction: java.lang.String evaluate(java.lang.Object,nu.xom.jaxen.Navigator)>(r0, r1);

        $r4 = staticinvoke <nu.xom.jaxen.function.StringFunction: java.lang.String evaluate(java.lang.Object,nu.xom.jaxen.Navigator)>(r3, r1);

        $r6 = staticinvoke <nu.xom.jaxen.function.StringFunction: java.lang.String evaluate(java.lang.Object,nu.xom.jaxen.Navigator)>(r5, r1);

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        $r8 = staticinvoke <nu.xom.jaxen.function.TranslateFunction: java.lang.String[] toUnicodeCharacters(java.lang.String)>($r4);

        $r9 = staticinvoke <nu.xom.jaxen.function.TranslateFunction: java.lang.String[] toUnicodeCharacters(java.lang.String)>($r6);

        i0 = lengthof $r8;

        i1 = lengthof $r9;

        i4 = 0;

     label01:
        if i4 >= i0 goto label05;

        r17 = $r8[i4];

        $z1 = interfaceinvoke $r7.<java.util.Map: boolean containsKey(java.lang.Object)>(r17);

        if $z1 == 0 goto label02;

        goto label04;

     label02:
        if i4 >= i1 goto label03;

        $r16 = $r9[i4];

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r17, $r16);

        goto label04;

     label03:
        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r17, null);

     label04:
        i4 = i4 + 1;

        goto label01;

     label05:
        $r10 = new java.lang.StringBuffer;

        $i2 = virtualinvoke $r2.<java.lang.String: int length()>();

        specialinvoke $r10.<java.lang.StringBuffer: void <init>(int)>($i2);

        $r11 = staticinvoke <nu.xom.jaxen.function.TranslateFunction: java.lang.String[] toUnicodeCharacters(java.lang.String)>($r2);

        i3 = lengthof $r11;

        i5 = 0;

     label06:
        if i5 >= i3 goto label10;

        r13 = $r11[i5];

        $z0 = interfaceinvoke $r7.<java.util.Map: boolean containsKey(java.lang.Object)>(r13);

        if $z0 == 0 goto label08;

        $r14 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r13);

        r15 = (java.lang.String) $r14;

        if r15 == null goto label07;

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r15);

     label07:
        goto label09;

     label08:
        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r13);

     label09:
        i5 = i5 + 1;

        goto label06;

     label10:
        $r12 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r12;
    }

    private static java.lang.String[] toUnicodeCharacters(java.lang.String) throws nu.xom.jaxen.FunctionCallException
    {
        java.lang.String[] r1, r13;
        java.lang.StringBuffer $r5, $r6, $r7, $r8;
        int $i0, $i1, $i2, $i4, i6, i7;
        java.lang.String r0, $r2, $r3, $r9, $r10;
        boolean $z0, $z1;
        nu.xom.jaxen.FunctionCallException $r4, $r12;
        java.lang.StringIndexOutOfBoundsException $r11;
        char $c3, $c5;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        r1 = newarray (java.lang.String)[$i0];

        i6 = 0;

        i7 = 0;

     label1:
        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if i7 >= $i1 goto label8;

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i7);

        $z0 = staticinvoke <nu.xom.jaxen.function.TranslateFunction: boolean isHighSurrogate(char)>($c3);

        if $z0 == 0 goto label6;

     label2:
        $i4 = i7 + 1;

        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i4);

        $z1 = staticinvoke <nu.xom.jaxen.function.TranslateFunction: boolean isLowSurrogate(char)>($c5);

        if $z1 == 0 goto label3;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c5);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String intern()>();

        r1[i6] = $r10;

        i7 = i7 + 1;

        goto label4;

     label3:
        $r4 = new nu.xom.jaxen.FunctionCallException;

        specialinvoke $r4.<nu.xom.jaxen.FunctionCallException: void <init>(java.lang.String)>("Mismatched surrogate pair in translate function");

        throw $r4;

     label4:
        goto label7;

     label5:
        $r11 := @caughtexception;

        $r12 = new nu.xom.jaxen.FunctionCallException;

        specialinvoke $r12.<nu.xom.jaxen.FunctionCallException: void <init>(java.lang.String)>("High surrogate without low surrogate at end of string passed to translate function");

        throw $r12;

     label6:
        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c3);

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String intern()>();

        r1[i6] = $r3;

     label7:
        i6 = i6 + 1;

        i7 = i7 + 1;

        goto label1;

     label8:
        $i2 = lengthof r1;

        if i6 != $i2 goto label9;

        return r1;

     label9:
        r13 = newarray (java.lang.String)[i6];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r13, 0, i6);

        return r13;

        catch java.lang.StringIndexOutOfBoundsException from label2 to label4 with label5;
    }

    private static boolean isHighSurrogate(char)
    {
        int $i1, $i3, $i4, $i6;
        char c0;
        boolean $z0;

        c0 := @parameter0: char;

        $i1 = (int) c0;

        $i3 = (int) 55296;

        if $i1 < $i3 goto label1;

        $i4 = (int) c0;

        $i6 = (int) 56319;

        if $i4 > $i6 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static boolean isLowSurrogate(char)
    {
        int $i1, $i3, $i4, $i6;
        char c0;
        boolean $z0;

        c0 := @parameter0: char;

        $i1 = (int) c0;

        $i3 = (int) 56320;

        if $i1 < $i3 goto label1;

        $i4 = (int) c0;

        $i6 = (int) 57343;

        if $i4 > $i6 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }
}
