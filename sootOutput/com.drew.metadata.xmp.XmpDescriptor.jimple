public class com.drew.metadata.xmp.XmpDescriptor extends com.drew.metadata.TagDescriptor
{
    private static final java.text.DecimalFormat SimpleDecimalFormatter;

    public void <init>(com.drew.metadata.xmp.XmpDirectory)
    {
        com.drew.metadata.xmp.XmpDirectory r1;
        com.drew.metadata.xmp.XmpDescriptor r0;

        r0 := @this: com.drew.metadata.xmp.XmpDescriptor;

        r1 := @parameter0: com.drew.metadata.xmp.XmpDirectory;

        specialinvoke r0.<com.drew.metadata.TagDescriptor: void <init>(com.drew.metadata.Directory)>(r1);

        return;
    }

    public java.lang.String getDescription(int)
    {
        com.drew.metadata.xmp.XmpDescriptor r0;
        com.drew.metadata.Directory $r4, $r10;
        com.drew.metadata.xmp.XmpDirectory $r5, $r11;
        int i0;
        java.lang.String $r1, $r2, $r3, $r6, $r7, $r8, $r9, $r12, $r13;

        r0 := @this: com.drew.metadata.xmp.XmpDescriptor;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label1;
            case 2: goto label1;
            case 3: goto label2;
            case 4: goto label4;
            case 5: goto label5;
            case 6: goto label6;
            case 7: goto label6;
            case 8: goto label6;
            case 9: goto label6;
            case 10: goto label7;
            case 11: goto label8;
            case 12: goto label3;
            default: goto label9;
        };

     label1:
        $r10 = r0.<com.drew.metadata.xmp.XmpDescriptor: com.drew.metadata.Directory _directory>;

        $r11 = (com.drew.metadata.xmp.XmpDirectory) $r10;

        $r12 = virtualinvoke $r11.<com.drew.metadata.xmp.XmpDirectory: java.lang.String getString(int)>(i0);

        return $r12;

     label2:
        $r9 = virtualinvoke r0.<com.drew.metadata.xmp.XmpDescriptor: java.lang.String getExposureTimeDescription()>();

        return $r9;

     label3:
        $r1 = virtualinvoke r0.<com.drew.metadata.xmp.XmpDescriptor: java.lang.String getExposureProgramDescription()>();

        return $r1;

     label4:
        $r8 = virtualinvoke r0.<com.drew.metadata.xmp.XmpDescriptor: java.lang.String getShutterSpeedDescription()>();

        return $r8;

     label5:
        $r7 = virtualinvoke r0.<com.drew.metadata.xmp.XmpDescriptor: java.lang.String getFNumberDescription()>();

        return $r7;

     label6:
        $r4 = r0.<com.drew.metadata.xmp.XmpDescriptor: com.drew.metadata.Directory _directory>;

        $r5 = (com.drew.metadata.xmp.XmpDirectory) $r4;

        $r6 = virtualinvoke $r5.<com.drew.metadata.xmp.XmpDirectory: java.lang.String getString(int)>(i0);

        return $r6;

     label7:
        $r3 = virtualinvoke r0.<com.drew.metadata.xmp.XmpDescriptor: java.lang.String getFocalLengthDescription()>();

        return $r3;

     label8:
        $r2 = virtualinvoke r0.<com.drew.metadata.xmp.XmpDescriptor: java.lang.String getApertureValueDescription()>();

        return $r2;

     label9:
        $r13 = specialinvoke r0.<com.drew.metadata.TagDescriptor: java.lang.String getDescription(int)>(i0);

        return $r13;
    }

    public java.lang.String getExposureTimeDescription()
    {
        com.drew.metadata.xmp.XmpDescriptor r0;
        com.drew.metadata.Directory $r1;
        com.drew.metadata.xmp.XmpDirectory $r2;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r3, $r7;

        r0 := @this: com.drew.metadata.xmp.XmpDescriptor;

        $r1 = r0.<com.drew.metadata.xmp.XmpDescriptor: com.drew.metadata.Directory _directory>;

        $r2 = (com.drew.metadata.xmp.XmpDirectory) $r1;

        $r3 = virtualinvoke $r2.<com.drew.metadata.xmp.XmpDirectory: java.lang.String getString(int)>(3);

        if $r3 != null goto label1;

        return null;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" sec");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public java.lang.String getExposureProgramDescription()
    {
        com.drew.metadata.xmp.XmpDescriptor r0;
        java.lang.Integer $r3;
        com.drew.metadata.Directory $r1;
        com.drew.metadata.xmp.XmpDirectory $r2;
        int $i0;
        java.lang.StringBuilder $r4, $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @this: com.drew.metadata.xmp.XmpDescriptor;

        $r1 = r0.<com.drew.metadata.xmp.XmpDescriptor: com.drew.metadata.Directory _directory>;

        $r2 = (com.drew.metadata.xmp.XmpDirectory) $r1;

        $r3 = virtualinvoke $r2.<com.drew.metadata.xmp.XmpDirectory: java.lang.Integer getInteger(int)>(12);

        if $r3 != null goto label01;

        return null;

     label01:
        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        tableswitch($i0)
        {
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label04;
            case 4: goto label05;
            case 5: goto label06;
            case 6: goto label07;
            case 7: goto label08;
            case 8: goto label09;
            default: goto label10;
        };

     label02:
        return "Manual control";

     label03:
        return "Program normal";

     label04:
        return "Aperture priority";

     label05:
        return "Shutter priority";

     label06:
        return "Program creative (slow program)";

     label07:
        return "Program action (high-speed program)";

     label08:
        return "Portrait mode";

     label09:
        return "Landscape mode";

     label10:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown program (");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public java.lang.String getShutterSpeedDescription()
    {
        java.lang.Float $r3;
        byte $b0;
        com.drew.metadata.xmp.XmpDescriptor r0;
        com.drew.metadata.xmp.XmpDirectory $r2;
        float $f0, $f1, $f2, $f3, f4, f5;
        java.lang.StringBuilder $r5, $r6, $r7, $r10, $r11, $r13, $r14;
        long $l1;
        com.drew.metadata.Directory $r1;
        int i2, $i3;
        java.lang.String $r8, $r12;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10;

        r0 := @this: com.drew.metadata.xmp.XmpDescriptor;

        $r1 = r0.<com.drew.metadata.xmp.XmpDescriptor: com.drew.metadata.Directory _directory>;

        $r2 = (com.drew.metadata.xmp.XmpDirectory) $r1;

        $r3 = virtualinvoke $r2.<com.drew.metadata.xmp.XmpDirectory: java.lang.Float getFloatObject(int)>(4);

        if $r3 != null goto label1;

        return null;

     label1:
        $f0 = virtualinvoke $r3.<java.lang.Float: float floatValue()>();

        $b0 = $f0 cmpg 1.0F;

        $i3 = (int) $b0;

        if $i3 > 0 goto label2;

        $f2 = virtualinvoke $r3.<java.lang.Float: float floatValue()>();

        $d4 = (double) $f2;

        $d5 = staticinvoke <java.lang.Math: double log(double)>(2.0);

        $d6 = $d4 * $d5;

        $d7 = staticinvoke <java.lang.Math: double exp(double)>($d6);

        $d8 = 1.0 / $d7;

        f5 = (float) $d8;

        $d9 = (double) f5;

        $d10 = $d9 * 10.0;

        $l1 = staticinvoke <java.lang.Math: long round(double)>($d10);

        $f3 = (float) $l1;

        f4 = $f3 / 10.0F;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f4);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" sec");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;

     label2:
        $f1 = virtualinvoke $r3.<java.lang.Float: float floatValue()>();

        $d0 = (double) $f1;

        $d1 = staticinvoke <java.lang.Math: double log(double)>(2.0);

        $d2 = $d0 * $d1;

        $d3 = staticinvoke <java.lang.Math: double exp(double)>($d2);

        i2 = (int) $d3;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("1/");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" sec");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public java.lang.String getFNumberDescription()
    {
        com.drew.metadata.xmp.XmpDescriptor r0;
        java.text.DecimalFormat $r6;
        com.drew.metadata.Directory $r1;
        com.drew.metadata.xmp.XmpDirectory $r2;
        com.drew.lang.Rational $r3;
        java.lang.StringBuilder $r4, $r5, $r8;
        java.lang.String $r7, $r9;
        double $d0;

        r0 := @this: com.drew.metadata.xmp.XmpDescriptor;

        $r1 = r0.<com.drew.metadata.xmp.XmpDescriptor: com.drew.metadata.Directory _directory>;

        $r2 = (com.drew.metadata.xmp.XmpDirectory) $r1;

        $r3 = virtualinvoke $r2.<com.drew.metadata.xmp.XmpDirectory: com.drew.lang.Rational getRational(int)>(5);

        if $r3 != null goto label1;

        return null;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("F");

        $r6 = <com.drew.metadata.xmp.XmpDescriptor: java.text.DecimalFormat SimpleDecimalFormatter>;

        $d0 = virtualinvoke $r3.<com.drew.lang.Rational: double doubleValue()>();

        $r7 = virtualinvoke $r6.<java.text.DecimalFormat: java.lang.String format(double)>($d0);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public java.lang.String getFocalLengthDescription()
    {
        com.drew.metadata.xmp.XmpDescriptor r0;
        java.text.DecimalFormat $r4;
        com.drew.metadata.Directory $r1;
        com.drew.metadata.xmp.XmpDirectory $r2;
        com.drew.lang.Rational $r3;
        java.lang.StringBuilder $r5, $r7, $r8;
        java.lang.String $r6, $r9;
        double $d0;

        r0 := @this: com.drew.metadata.xmp.XmpDescriptor;

        $r1 = r0.<com.drew.metadata.xmp.XmpDescriptor: com.drew.metadata.Directory _directory>;

        $r2 = (com.drew.metadata.xmp.XmpDirectory) $r1;

        $r3 = virtualinvoke $r2.<com.drew.metadata.xmp.XmpDirectory: com.drew.lang.Rational getRational(int)>(10);

        if $r3 != null goto label1;

        return null;

     label1:
        $r4 = new java.text.DecimalFormat;

        specialinvoke $r4.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.0##");

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $d0 = virtualinvoke $r3.<com.drew.lang.Rational: double doubleValue()>();

        $r6 = virtualinvoke $r4.<java.text.DecimalFormat: java.lang.String format(double)>($d0);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mm");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public java.lang.String getApertureValueDescription()
    {
        com.drew.metadata.xmp.XmpDescriptor r0;
        java.lang.Double $r3;
        java.text.DecimalFormat $r6;
        com.drew.metadata.Directory $r1;
        com.drew.metadata.xmp.XmpDirectory $r2;
        java.lang.StringBuilder $r4, $r5, $r8;
        java.lang.String $r7, $r9;
        double $d0, $d1;

        r0 := @this: com.drew.metadata.xmp.XmpDescriptor;

        $r1 = r0.<com.drew.metadata.xmp.XmpDescriptor: com.drew.metadata.Directory _directory>;

        $r2 = (com.drew.metadata.xmp.XmpDirectory) $r1;

        $r3 = virtualinvoke $r2.<com.drew.metadata.xmp.XmpDirectory: java.lang.Double getDoubleObject(int)>(11);

        if $r3 != null goto label1;

        return null;

     label1:
        $d0 = virtualinvoke $r3.<java.lang.Double: double doubleValue()>();

        $d1 = staticinvoke <com.drew.imaging.PhotographicConversions: double apertureToFStop(double)>($d0);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("F");

        $r6 = <com.drew.metadata.xmp.XmpDescriptor: java.text.DecimalFormat SimpleDecimalFormatter>;

        $r7 = virtualinvoke $r6.<java.text.DecimalFormat: java.lang.String format(double)>($d1);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    static void <clinit>()
    {
        java.text.DecimalFormat $r0;

        $r0 = new java.text.DecimalFormat;

        specialinvoke $r0.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.#");

        <com.drew.metadata.xmp.XmpDescriptor: java.text.DecimalFormat SimpleDecimalFormatter> = $r0;

        return;
    }
}
