class org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner$1 extends java.lang.Object implements org.apache.http.entity.ContentProducer
{
    final boolean val$isXml;
    final org.apache.solr.client.solrj.request.UpdateRequest val$updateRequest;
    final org.apache.solr.common.params.ModifiableSolrParams val$origParams;
    final org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner this$1;

    void <init>(org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner, boolean, org.apache.solr.client.solrj.request.UpdateRequest, org.apache.solr.common.params.ModifiableSolrParams)
    {
        org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner r1;
        org.apache.solr.common.params.ModifiableSolrParams r3;
        org.apache.solr.client.solrj.request.UpdateRequest r2;
        org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner$1 r0;
        boolean z0;

        r0 := @this: org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner$1;

        r1 := @parameter0: org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner;

        z0 := @parameter1: boolean;

        r2 := @parameter2: org.apache.solr.client.solrj.request.UpdateRequest;

        r3 := @parameter3: org.apache.solr.common.params.ModifiableSolrParams;

        r0.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner$1: org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner this$1> = r1;

        r0.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner$1: boolean val$isXml> = z0;

        r0.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner$1: org.apache.solr.client.solrj.request.UpdateRequest val$updateRequest> = r2;

        r0.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner$1: org.apache.solr.common.params.ModifiableSolrParams val$origParams> = r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void writeTo(java.io.OutputStream) throws java.io.IOException
    {
        byte[] $r3, $r21, $r26;
        java.util.Locale $r16;
        org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner$1 r0;
        org.apache.solr.client.solrj.impl.HttpSolrServer $r11;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.apache.solr.common.params.ModifiableSolrParams $r4, $r5, $r6, $r13;
        org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer $r10, $r23, $r31;
        java.util.concurrent.BlockingQueue $r24, $r32;
        java.lang.StringBuilder $r15, $r17, $r18;
        java.lang.Object[] $r14;
        org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner $r9, $r22, $r30;
        java.lang.String $r2, $r19, $r20, $r25, r29, r35, r36;
        java.io.OutputStream r1;
        org.apache.solr.client.solrj.request.RequestWriter $r12;
        org.apache.solr.common.util.NamedList $r7, $r8;
        java.util.concurrent.TimeUnit $r33;
        java.lang.InterruptedException $r27;
        org.apache.solr.client.solrj.request.UpdateRequest r28;
        java.lang.Object $r34;

        r0 := @this: org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner$1;

        r1 := @parameter0: java.io.OutputStream;

     label01:
        $z0 = r0.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner$1: boolean val$isXml>;

        if $z0 == 0 goto label02;

        $r25 = "<stream>";

        $r26 = virtualinvoke $r25.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        virtualinvoke r1.<java.io.OutputStream: void write(byte[])>($r26);

     label02:
        r28 = r0.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner$1: org.apache.solr.client.solrj.request.UpdateRequest val$updateRequest>;

     label03:
        if r28 == null goto label08;

        $r4 = new org.apache.solr.common.params.ModifiableSolrParams;

        $r5 = virtualinvoke r28.<org.apache.solr.client.solrj.request.UpdateRequest: org.apache.solr.common.params.ModifiableSolrParams getParams()>();

        specialinvoke $r4.<org.apache.solr.common.params.ModifiableSolrParams: void <init>(org.apache.solr.common.params.SolrParams)>($r5);

        $r6 = r0.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner$1: org.apache.solr.common.params.ModifiableSolrParams val$origParams>;

        $r7 = virtualinvoke $r6.<org.apache.solr.common.params.ModifiableSolrParams: org.apache.solr.common.util.NamedList toNamedList()>();

        $r8 = virtualinvoke $r4.<org.apache.solr.common.params.SolrParams: org.apache.solr.common.util.NamedList toNamedList()>();

        $z2 = virtualinvoke $r7.<org.apache.solr.common.util.NamedList: boolean equals(java.lang.Object)>($r8);

        if $z2 != 0 goto label04;

        $r22 = r0.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner$1: org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner this$1>;

        $r23 = $r22.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner: org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer this$0>;

        $r24 = $r23.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer: java.util.concurrent.BlockingQueue queue>;

        interfaceinvoke $r24.<java.util.concurrent.BlockingQueue: boolean add(java.lang.Object)>(r28);

        goto label08;

     label04:
        $r9 = r0.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner$1: org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner this$1>;

        $r10 = $r9.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner: org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer this$0>;

        $r11 = staticinvoke <org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer: org.apache.solr.client.solrj.impl.HttpSolrServer access$000(org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer)>($r10);

        $r12 = $r11.<org.apache.solr.client.solrj.impl.HttpSolrServer: org.apache.solr.client.solrj.request.RequestWriter requestWriter>;

        virtualinvoke $r12.<org.apache.solr.client.solrj.request.RequestWriter: void write(org.apache.solr.client.solrj.SolrRequest,java.io.OutputStream)>(r28, r1);

        $z3 = r0.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner$1: boolean val$isXml>;

        if $z3 == 0 goto label07;

        $r13 = virtualinvoke r28.<org.apache.solr.client.solrj.request.UpdateRequest: org.apache.solr.common.params.ModifiableSolrParams getParams()>();

        if $r13 == null goto label07;

        r29 = null;

        r36 = null;

        r35 = null;

        $z4 = virtualinvoke $r13.<org.apache.solr.common.params.SolrParams: boolean getBool(java.lang.String,boolean)>("optimize", 0);

        if $z4 == 0 goto label05;

        r29 = "<optimize waitSearcher=\"%s\" />";

        r36 = "<optimize waitSearcher=\"%s\" />";

        r35 = "<optimize waitSearcher=\"%s\" />";

        goto label06;

     label05:
        $z5 = virtualinvoke $r13.<org.apache.solr.common.params.SolrParams: boolean getBool(java.lang.String,boolean)>("commit", 0);

        if $z5 == 0 goto label06;

        r29 = "<commit waitSearcher=\"%s\" />";

        r36 = "<commit waitSearcher=\"%s\" />";

        r35 = "<commit waitSearcher=\"%s\" />";

     label06:
        if r36 == null goto label07;

        $r16 = <java.util.Locale: java.util.Locale ROOT>;

        $r14 = newarray (java.lang.Object)[1];

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $z6 = virtualinvoke $r13.<org.apache.solr.common.params.SolrParams: boolean getBool(java.lang.String,boolean)>("waitSearcher", 0);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z6);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14[0] = $r19;

        $r20 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r16, r35, $r14);

        $r21 = virtualinvoke $r20.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        virtualinvoke r1.<java.io.OutputStream: void write(byte[])>($r21);

     label07:
        virtualinvoke r1.<java.io.OutputStream: void flush()>();

        $r30 = r0.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner$1: org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner this$1>;

        $r31 = $r30.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner: org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer this$0>;

        $r32 = $r31.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer: java.util.concurrent.BlockingQueue queue>;

        $r33 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        $r34 = interfaceinvoke $r32.<java.util.concurrent.BlockingQueue: java.lang.Object poll(long,java.util.concurrent.TimeUnit)>(250L, $r33);

        r28 = (org.apache.solr.client.solrj.request.UpdateRequest) $r34;

        goto label03;

     label08:
        $z1 = r0.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner$1: boolean val$isXml>;

        if $z1 == 0 goto label09;

        $r2 = "</stream>";

        $r3 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        virtualinvoke r1.<java.io.OutputStream: void write(byte[])>($r3);

     label09:
        goto label11;

     label10:
        $r27 := @caughtexception;

        virtualinvoke $r27.<java.lang.InterruptedException: void printStackTrace()>();

     label11:
        return;

        catch java.lang.InterruptedException from label01 to label09 with label10;
    }
}
