public class com.hp.hpl.jena.util.iterator.WrappedIterator extends com.hp.hpl.jena.util.iterator.NiceIterator
{
    protected boolean removeDenied;
    protected final java.util.Iterator base;

    public static com.hp.hpl.jena.util.iterator.ExtendedIterator create(java.util.Iterator)
    {
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r1;
        java.util.Iterator r0;
        com.hp.hpl.jena.util.iterator.WrappedIterator $r2;
        boolean $z0;

        r0 := @parameter0: java.util.Iterator;

        $z0 = r0 instanceof com.hp.hpl.jena.util.iterator.ExtendedIterator;

        if $z0 == 0 goto label1;

        $r1 = (com.hp.hpl.jena.util.iterator.ExtendedIterator) r0;

        goto label2;

     label1:
        $r2 = new com.hp.hpl.jena.util.iterator.WrappedIterator;

        $r1 = $r2;

        specialinvoke $r2.<com.hp.hpl.jena.util.iterator.WrappedIterator: void <init>(java.util.Iterator,boolean)>(r0, 0);

     label2:
        return $r1;
    }

    public static com.hp.hpl.jena.util.iterator.WrappedIterator createNoRemove(java.util.Iterator)
    {
        java.util.Iterator r1;
        com.hp.hpl.jena.util.iterator.WrappedIterator $r0;

        r1 := @parameter0: java.util.Iterator;

        $r0 = new com.hp.hpl.jena.util.iterator.WrappedIterator;

        specialinvoke $r0.<com.hp.hpl.jena.util.iterator.WrappedIterator: void <init>(java.util.Iterator,boolean)>(r1, 1);

        return $r0;
    }

    public static com.hp.hpl.jena.util.iterator.ExtendedIterator createIteratorIterator(java.util.Iterator)
    {
        com.hp.hpl.jena.util.iterator.ExtendedIterator r3;
        java.util.Iterator r0, $r2;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @parameter0: java.util.Iterator;

        r3 = staticinvoke <com.hp.hpl.jena.util.iterator.NullIterator: com.hp.hpl.jena.util.iterator.NullIterator instance()>();

     label1:
        $z0 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r1 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        $r2 = (java.util.Iterator) $r1;

        r3 = interfaceinvoke r3.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator andThen(java.util.Iterator)>($r2);

        goto label1;

     label2:
        return r3;
    }

    public java.util.Iterator forTestingOnly_getBase()
    {
        java.util.Iterator $r1;
        com.hp.hpl.jena.util.iterator.WrappedIterator r0;

        r0 := @this: com.hp.hpl.jena.util.iterator.WrappedIterator;

        $r1 = r0.<com.hp.hpl.jena.util.iterator.WrappedIterator: java.util.Iterator base>;

        return $r1;
    }

    protected void <init>(java.util.Iterator)
    {
        java.util.Iterator r1;
        com.hp.hpl.jena.util.iterator.WrappedIterator r0;

        r0 := @this: com.hp.hpl.jena.util.iterator.WrappedIterator;

        r1 := @parameter0: java.util.Iterator;

        specialinvoke r0.<com.hp.hpl.jena.util.iterator.WrappedIterator: void <init>(java.util.Iterator,boolean)>(r1, 0);

        return;
    }

    protected void <init>(java.util.Iterator, boolean)
    {
        java.util.Iterator r1;
        com.hp.hpl.jena.util.iterator.WrappedIterator r0;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.util.iterator.WrappedIterator;

        r1 := @parameter0: java.util.Iterator;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.hp.hpl.jena.util.iterator.NiceIterator: void <init>()>();

        r0.<com.hp.hpl.jena.util.iterator.WrappedIterator: java.util.Iterator base> = r1;

        r0.<com.hp.hpl.jena.util.iterator.WrappedIterator: boolean removeDenied> = z0;

        return;
    }

    public boolean hasNext()
    {
        java.util.Iterator $r1;
        com.hp.hpl.jena.util.iterator.WrappedIterator r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.util.iterator.WrappedIterator;

        $r1 = r0.<com.hp.hpl.jena.util.iterator.WrappedIterator: java.util.Iterator base>;

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        return $z0;
    }

    public java.lang.Object next()
    {
        java.lang.Object $r2;
        java.util.Iterator $r1;
        com.hp.hpl.jena.util.iterator.WrappedIterator r0;

        r0 := @this: com.hp.hpl.jena.util.iterator.WrappedIterator;

        $r1 = r0.<com.hp.hpl.jena.util.iterator.WrappedIterator: java.util.Iterator base>;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        return $r2;
    }

    public void remove()
    {
        java.lang.UnsupportedOperationException $r2;
        java.util.Iterator $r1;
        com.hp.hpl.jena.util.iterator.WrappedIterator r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.util.iterator.WrappedIterator;

        $z0 = r0.<com.hp.hpl.jena.util.iterator.WrappedIterator: boolean removeDenied>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;

     label1:
        $r1 = r0.<com.hp.hpl.jena.util.iterator.WrappedIterator: java.util.Iterator base>;

        interfaceinvoke $r1.<java.util.Iterator: void remove()>();

        return;
    }

    public void close()
    {
        java.util.Iterator $r1;
        com.hp.hpl.jena.util.iterator.WrappedIterator r0;

        r0 := @this: com.hp.hpl.jena.util.iterator.WrappedIterator;

        $r1 = r0.<com.hp.hpl.jena.util.iterator.WrappedIterator: java.util.Iterator base>;

        staticinvoke <com.hp.hpl.jena.util.iterator.WrappedIterator: void close(java.util.Iterator)>($r1);

        return;
    }

    public static void close(java.util.Iterator)
    {
        java.util.Iterator r0;

        r0 := @parameter0: java.util.Iterator;

        staticinvoke <com.hp.hpl.jena.util.iterator.NiceIterator: void close(java.util.Iterator)>(r0);

        return;
    }
}
