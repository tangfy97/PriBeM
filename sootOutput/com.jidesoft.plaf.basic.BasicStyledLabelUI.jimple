public class com.jidesoft.plaf.basic.BasicStyledLabelUI extends javax.swing.plaf.basic.BasicLabelUI implements javax.swing.SwingConstants
{
    public static java.util.Comparator _comparator;
    protected static com.jidesoft.plaf.basic.BasicStyledLabelUI styledLabelUI;
    private final java.util.List _styledTexts;
    private int _preferredRowCount;
    private boolean _gettingPreferredSize;

    public void <init>()
    {
        com.jidesoft.plaf.basic.BasicStyledLabelUI r0;
        java.util.ArrayList $r1;

        r0 := @this: com.jidesoft.plaf.basic.BasicStyledLabelUI;

        specialinvoke r0.<javax.swing.plaf.basic.BasicLabelUI: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<com.jidesoft.plaf.basic.BasicStyledLabelUI: java.util.List _styledTexts> = $r1;

        r0.<com.jidesoft.plaf.basic.BasicStyledLabelUI: int _preferredRowCount> = 1;

        return;
    }

    public static javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)
    {
        javax.swing.JComponent r1;
        com.jidesoft.plaf.basic.BasicStyledLabelUI $r0;

        r1 := @parameter0: javax.swing.JComponent;

        $r0 = <com.jidesoft.plaf.basic.BasicStyledLabelUI: com.jidesoft.plaf.basic.BasicStyledLabelUI styledLabelUI>;

        return $r0;
    }

    public void propertyChange(java.beans.PropertyChangeEvent)
    {
        java.lang.Throwable $r16;
        java.lang.String $r2, $r3, $r4, $r5;
        java.beans.PropertyChangeEvent r1;
        boolean $z0, $z1, $z2, $z3;
        java.util.List $r9, $r10;
        com.jidesoft.plaf.basic.BasicStyledLabelUI r0;
        java.lang.Object $r6, $r7, $r11, $r12, $r14;
        com.jidesoft.swing.StyledLabel $r8, $r13, $r15;

        r0 := @this: com.jidesoft.plaf.basic.BasicStyledLabelUI;

        r1 := @parameter0: java.beans.PropertyChangeEvent;

        specialinvoke r0.<javax.swing.plaf.basic.BasicLabelUI: void propertyChange(java.beans.PropertyChangeEvent)>(r1);

        $r2 = "styleRange";

        $r3 = virtualinvoke r1.<java.beans.PropertyChangeEvent: java.lang.String getPropertyName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label6;

        $r9 = r0.<com.jidesoft.plaf.basic.BasicStyledLabelUI: java.util.List _styledTexts>;

        entermonitor $r9;

     label1:
        $r10 = r0.<com.jidesoft.plaf.basic.BasicStyledLabelUI: java.util.List _styledTexts>;

        interfaceinvoke $r10.<java.util.List: void clear()>();

        exitmonitor $r9;

     label2:
        goto label5;

     label3:
        $r16 := @caughtexception;

        exitmonitor $r9;

     label4:
        throw $r16;

     label5:
        $r11 = virtualinvoke r1.<java.beans.PropertyChangeEvent: java.lang.Object getSource()>();

        $z3 = $r11 instanceof com.jidesoft.swing.StyledLabel;

        if $z3 == 0 goto label7;

        $r12 = virtualinvoke r1.<java.beans.PropertyChangeEvent: java.lang.Object getSource()>();

        $r13 = (com.jidesoft.swing.StyledLabel) $r12;

        virtualinvoke $r13.<com.jidesoft.swing.StyledLabel: void revalidate()>();

        $r14 = virtualinvoke r1.<java.beans.PropertyChangeEvent: java.lang.Object getSource()>();

        $r15 = (com.jidesoft.swing.StyledLabel) $r14;

        virtualinvoke $r15.<com.jidesoft.swing.StyledLabel: void repaint()>();

        goto label7;

     label6:
        $r4 = "ignoreColorSettings";

        $r5 = virtualinvoke r1.<java.beans.PropertyChangeEvent: java.lang.String getPropertyName()>();

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z1 == 0 goto label7;

        $r6 = virtualinvoke r1.<java.beans.PropertyChangeEvent: java.lang.Object getSource()>();

        $z2 = $r6 instanceof com.jidesoft.swing.StyledLabel;

        if $z2 == 0 goto label7;

        $r7 = virtualinvoke r1.<java.beans.PropertyChangeEvent: java.lang.Object getSource()>();

        $r8 = (com.jidesoft.swing.StyledLabel) $r7;

        virtualinvoke $r8.<com.jidesoft.swing.StyledLabel: void repaint()>();

     label7:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    protected void paintEnabledText(javax.swing.JLabel, java.awt.Graphics, java.lang.String, int, int)
    {
        com.jidesoft.plaf.basic.BasicStyledLabelUI r1;
        javax.swing.JLabel r0;
        java.awt.Graphics r2;
        int i0, i1;
        javax.swing.text.View $r6;
        java.lang.Object $r5;
        java.lang.String r4;
        com.jidesoft.swing.StyledLabel $r3;

        r1 := @this: com.jidesoft.plaf.basic.BasicStyledLabelUI;

        r0 := @parameter0: javax.swing.JLabel;

        r2 := @parameter1: java.awt.Graphics;

        r4 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        if r0 == null goto label1;

        $r5 = virtualinvoke r0.<javax.swing.JLabel: java.lang.Object getClientProperty(java.lang.Object)>("html");

        $r6 = (javax.swing.text.View) $r5;

        goto label2;

     label1:
        $r6 = null;

     label2:
        if $r6 == null goto label3;

        specialinvoke r1.<javax.swing.plaf.basic.BasicLabelUI: void paintEnabledText(javax.swing.JLabel,java.awt.Graphics,java.lang.String,int,int)>(r0, r2, r4, i0, i1);

        goto label4;

     label3:
        $r3 = (com.jidesoft.swing.StyledLabel) r0;

        virtualinvoke r1.<com.jidesoft.plaf.basic.BasicStyledLabelUI: void paintStyledText(com.jidesoft.swing.StyledLabel,java.awt.Graphics,int,int)>($r3, r2, i0, i1);

     label4:
        return;
    }

    protected void paintDisabledText(javax.swing.JLabel, java.awt.Graphics, java.lang.String, int, int)
    {
        com.jidesoft.plaf.basic.BasicStyledLabelUI r1;
        javax.swing.JLabel r0;
        java.awt.Graphics r2;
        int i0, i1;
        javax.swing.text.View $r6;
        java.lang.Object $r5;
        java.lang.String r4;
        com.jidesoft.swing.StyledLabel $r3;

        r1 := @this: com.jidesoft.plaf.basic.BasicStyledLabelUI;

        r0 := @parameter0: javax.swing.JLabel;

        r2 := @parameter1: java.awt.Graphics;

        r4 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        if r0 == null goto label1;

        $r5 = virtualinvoke r0.<javax.swing.JLabel: java.lang.Object getClientProperty(java.lang.Object)>("html");

        $r6 = (javax.swing.text.View) $r5;

        goto label2;

     label1:
        $r6 = null;

     label2:
        if $r6 == null goto label3;

        specialinvoke r1.<javax.swing.plaf.basic.BasicLabelUI: void paintDisabledText(javax.swing.JLabel,java.awt.Graphics,java.lang.String,int,int)>(r0, r2, r4, i0, i1);

        goto label4;

     label3:
        $r3 = (com.jidesoft.swing.StyledLabel) r0;

        virtualinvoke r1.<com.jidesoft.plaf.basic.BasicStyledLabelUI: void paintStyledText(com.jidesoft.swing.StyledLabel,java.awt.Graphics,int,int)>($r3, r2, i0, i1);

     label4:
        return;
    }

    protected void buildStyledText(com.jidesoft.swing.StyledLabel)
    {
        java.util.List $r1, $r2;
        com.jidesoft.swing.StyleRange r10, $r18, $r19;
        java.lang.Throwable $r16;
        com.jidesoft.plaf.basic.BasicStyledLabelUI$1 $r17;
        com.jidesoft.swing.StyleRange[] $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, i20, i21, i22, $i24, $i26, $i28;
        java.lang.String $r7, $r8, $r11, $r12, $r13;
        com.jidesoft.plaf.basic.BasicStyledLabelUI r0;
        java.util.Comparator $r5, $r6;
        com.jidesoft.swing.StyledLabel r3;

        r0 := @this: com.jidesoft.plaf.basic.BasicStyledLabelUI;

        r3 := @parameter0: com.jidesoft.swing.StyledLabel;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicStyledLabelUI: java.util.List _styledTexts>;

        entermonitor $r1;

     label01:
        $r2 = r0.<com.jidesoft.plaf.basic.BasicStyledLabelUI: java.util.List _styledTexts>;

        interfaceinvoke $r2.<java.util.List: void clear()>();

        $r4 = virtualinvoke r3.<com.jidesoft.swing.StyledLabel: com.jidesoft.swing.StyleRange[] getStyleRanges()>();

        $r5 = <com.jidesoft.plaf.basic.BasicStyledLabelUI: java.util.Comparator _comparator>;

        if $r5 != null goto label02;

        $r17 = new com.jidesoft.plaf.basic.BasicStyledLabelUI$1;

        specialinvoke $r17.<com.jidesoft.plaf.basic.BasicStyledLabelUI$1: void <init>(com.jidesoft.plaf.basic.BasicStyledLabelUI)>(r0);

        <com.jidesoft.plaf.basic.BasicStyledLabelUI: java.util.Comparator _comparator> = $r17;

     label02:
        $r6 = <com.jidesoft.plaf.basic.BasicStyledLabelUI: java.util.Comparator _comparator>;

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>($r4, $r6);

        $r7 = virtualinvoke r3.<com.jidesoft.swing.StyledLabel: java.lang.String getText()>();

        if $r7 == null goto label10;

        $i0 = virtualinvoke $r7.<java.lang.String: int length()>();

        if $i0 <= 0 goto label10;

        i20 = 0;

        i21 = lengthof $r4;

        i22 = 0;

     label03:
        if i22 >= i21 goto label09;

        r10 = $r4[i22];

        $i5 = virtualinvoke $r7.<java.lang.String: int length()>();

        if i20 < $i5 goto label04;

        goto label09;

     label04:
        $i6 = virtualinvoke r10.<com.jidesoft.swing.StyleRange: int getStart()>();

        if $i6 <= i20 goto label05;

        $i15 = virtualinvoke r10.<com.jidesoft.swing.StyleRange: int getStart()>();

        $i16 = virtualinvoke $r7.<java.lang.String: int length()>();

        $i17 = staticinvoke <java.lang.Math: int min(int,int)>($i15, $i16);

        $r13 = virtualinvoke $r7.<java.lang.String: java.lang.String substring(int,int)>(i20, $i17);

        $r18 = new com.jidesoft.swing.StyleRange;

        $i18 = virtualinvoke r10.<com.jidesoft.swing.StyleRange: int getStart()>();

        $i19 = $i18 - i20;

        $i24 = (int) -1;

        specialinvoke $r18.<com.jidesoft.swing.StyleRange: void <init>(int,int,int)>(i20, $i19, $i24);

        specialinvoke r0.<com.jidesoft.plaf.basic.BasicStyledLabelUI: void addStyledTexts(java.lang.String,com.jidesoft.swing.StyleRange,com.jidesoft.swing.StyledLabel)>($r13, $r18, r3);

        i20 = virtualinvoke r10.<com.jidesoft.swing.StyleRange: int getStart()>();

     label05:
        $i7 = virtualinvoke r10.<com.jidesoft.swing.StyleRange: int getStart()>();

        if $i7 != i20 goto label07;

        $i9 = virtualinvoke r10.<com.jidesoft.swing.StyleRange: int getLength()>();

        $i26 = (int) -1;

        if $i9 != $i26 goto label06;

        $r12 = virtualinvoke $r7.<java.lang.String: java.lang.String substring(int)>(i20);

        specialinvoke r0.<com.jidesoft.plaf.basic.BasicStyledLabelUI: void addStyledTexts(java.lang.String,com.jidesoft.swing.StyleRange,com.jidesoft.swing.StyledLabel)>($r12, r10, r3);

        i20 = virtualinvoke $r7.<java.lang.String: int length()>();

        goto label08;

     label06:
        $i10 = virtualinvoke r10.<com.jidesoft.swing.StyleRange: int getLength()>();

        $i11 = i20 + $i10;

        $i12 = virtualinvoke $r7.<java.lang.String: int length()>();

        $i13 = staticinvoke <java.lang.Math: int min(int,int)>($i11, $i12);

        $r11 = virtualinvoke $r7.<java.lang.String: java.lang.String substring(int,int)>(i20, $i13);

        specialinvoke r0.<com.jidesoft.plaf.basic.BasicStyledLabelUI: void addStyledTexts(java.lang.String,com.jidesoft.swing.StyleRange,com.jidesoft.swing.StyledLabel)>($r11, r10, r3);

        $i14 = virtualinvoke r10.<com.jidesoft.swing.StyleRange: int getLength()>();

        i20 = i20 + $i14;

        goto label08;

     label07:
        $i8 = virtualinvoke r10.<com.jidesoft.swing.StyleRange: int getStart()>();

        if $i8 >= i20 goto label08;

     label08:
        i22 = i22 + 1;

        goto label03;

     label09:
        $i1 = virtualinvoke $r7.<java.lang.String: int length()>();

        if i20 >= $i1 goto label10;

        $i2 = virtualinvoke $r7.<java.lang.String: int length()>();

        $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String substring(int,int)>(i20, $i2);

        $r19 = new com.jidesoft.swing.StyleRange;

        $i3 = virtualinvoke $r7.<java.lang.String: int length()>();

        $i4 = $i3 - i20;

        $i28 = (int) -1;

        specialinvoke $r19.<com.jidesoft.swing.StyleRange: void <init>(int,int,int)>(i20, $i4, $i28);

        specialinvoke r0.<com.jidesoft.plaf.basic.BasicStyledLabelUI: void addStyledTexts(java.lang.String,com.jidesoft.swing.StyleRange,com.jidesoft.swing.StyledLabel)>($r8, $r19, r3);

     label10:
        exitmonitor $r1;

     label11:
        goto label14;

     label12:
        $r16 := @caughtexception;

        exitmonitor $r1;

     label13:
        throw $r16;

     label14:
        return;

        catch java.lang.Throwable from label01 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    private void addStyledTexts(java.lang.String, com.jidesoft.swing.StyleRange, com.jidesoft.swing.StyledLabel)
    {
        byte b10, b22, b23, b24, b25, b26;
        java.util.List $r3, $r9, $r12;
        com.jidesoft.swing.StyleRange r6, $r16, $r17, $r19;
        com.jidesoft.plaf.basic.BasicStyledLabelUI$StyledText $r18, $r20, $r21;
        int $i0, $i1, $i2, $i4, i5, i6, $i7, i8, $i9, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i28, $i29, $i30;
        java.lang.String r5, $r7, $r14, $r15;
        char $c3, $c11;
        com.jidesoft.plaf.basic.BasicStyledLabelUI r1;
        com.jidesoft.swing.StyledLabel r4;

        r1 := @this: com.jidesoft.plaf.basic.BasicStyledLabelUI;

        r5 := @parameter0: java.lang.String;

        r6 := @parameter1: com.jidesoft.swing.StyleRange;

        r4 := @parameter2: com.jidesoft.swing.StyledLabel;

        $r16 = new com.jidesoft.swing.StyleRange;

        specialinvoke $r16.<com.jidesoft.swing.StyleRange: void <init>(com.jidesoft.swing.StyleRange)>(r6);

        i5 = virtualinvoke r5.<java.lang.String: int indexOf(int)>(13);

        i6 = virtualinvoke r5.<java.lang.String: int indexOf(int)>(10);

     label1:
        if i5 >= 0 goto label2;

        if i6 < 0 goto label8;

     label2:
        if i5 < 0 goto label3;

        $i7 = i5;

        goto label4;

     label3:
        $i28 = (int) -1;

        $i7 = $i28;

     label4:
        i8 = $i7;

        if i6 < 0 goto label6;

        if i6 < i5 goto label5;

        if $i7 >= 0 goto label6;

     label5:
        i8 = i6;

     label6:
        $r7 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int,int)>(0, i8);

        $r17 = new com.jidesoft.swing.StyleRange;

        specialinvoke $r17.<com.jidesoft.swing.StyleRange: void <init>(com.jidesoft.swing.StyleRange)>($r16);

        $i9 = virtualinvoke $r16.<com.jidesoft.swing.StyleRange: int getStart()>();

        virtualinvoke $r17.<com.jidesoft.swing.StyleRange: void setStart(int)>($i9);

        virtualinvoke $r17.<com.jidesoft.swing.StyleRange: void setLength(int)>(i8);

        $r9 = r1.<com.jidesoft.plaf.basic.BasicStyledLabelUI: java.util.List _styledTexts>;

        $r18 = new com.jidesoft.plaf.basic.BasicStyledLabelUI$StyledText;

        specialinvoke $r18.<com.jidesoft.plaf.basic.BasicStyledLabelUI$StyledText: void <init>(com.jidesoft.plaf.basic.BasicStyledLabelUI,java.lang.String,com.jidesoft.swing.StyleRange)>(r1, $r7, $r17);

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r18);

        b10 = 1;

        b26 = 1;

        b25 = 1;

        b24 = 1;

        b23 = 1;

        b22 = 1;

        $c11 = virtualinvoke r5.<java.lang.String: char charAt(int)>(i8);

        $i29 = (int) $c11;

        if $i29 != 13 goto label7;

        $i0 = i8 + 1;

        $i1 = virtualinvoke r5.<java.lang.String: int length()>();

        if $i0 >= $i1 goto label7;

        $i2 = i8 + 1;

        $c3 = virtualinvoke r5.<java.lang.String: char charAt(int)>($i2);

        $i30 = (int) $c3;

        if $i30 != 10 goto label7;

        b10 = 2;

        b26 = 2;

        b25 = 2;

        b24 = 2;

        b23 = 2;

        b22 = 2;

     label7:
        $r19 = new com.jidesoft.swing.StyleRange;

        specialinvoke $r19.<com.jidesoft.swing.StyleRange: void <init>(com.jidesoft.swing.StyleRange)>($r16);

        $i12 = virtualinvoke $r16.<com.jidesoft.swing.StyleRange: int getStart()>();

        $i13 = $i12 + i8;

        virtualinvoke $r19.<com.jidesoft.swing.StyleRange: void setStart(int)>($i13);

        virtualinvoke $r19.<com.jidesoft.swing.StyleRange: void setLength(int)>(b22);

        $r12 = r1.<com.jidesoft.plaf.basic.BasicStyledLabelUI: java.util.List _styledTexts>;

        $r20 = new com.jidesoft.plaf.basic.BasicStyledLabelUI$StyledText;

        $i14 = i8 + b24;

        $r14 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int,int)>(i8, $i14);

        specialinvoke $r20.<com.jidesoft.plaf.basic.BasicStyledLabelUI$StyledText: void <init>(com.jidesoft.plaf.basic.BasicStyledLabelUI,java.lang.String,com.jidesoft.swing.StyleRange)>(r1, $r14, $r19);

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r20);

        $i15 = i8 + b25;

        $r15 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int)>($i15);

        r5 = $r15;

        $i16 = virtualinvoke $r16.<com.jidesoft.swing.StyleRange: int getStart()>();

        $i17 = $i16 + i8;

        $i18 = $i17 + b23;

        virtualinvoke $r16.<com.jidesoft.swing.StyleRange: void setStart(int)>($i18);

        $i19 = virtualinvoke $r16.<com.jidesoft.swing.StyleRange: int getLength()>();

        $i20 = $i19 - i8;

        $i21 = $i20 - b26;

        virtualinvoke $r16.<com.jidesoft.swing.StyleRange: void setLength(int)>($i21);

        i5 = virtualinvoke $r15.<java.lang.String: int indexOf(int)>(13);

        i6 = virtualinvoke $r15.<java.lang.String: int indexOf(int)>(10);

        goto label1;

     label8:
        $i4 = virtualinvoke r5.<java.lang.String: int length()>();

        if $i4 <= 0 goto label9;

        $r3 = r1.<com.jidesoft.plaf.basic.BasicStyledLabelUI: java.util.List _styledTexts>;

        $r21 = new com.jidesoft.plaf.basic.BasicStyledLabelUI$StyledText;

        specialinvoke $r21.<com.jidesoft.plaf.basic.BasicStyledLabelUI$StyledText: void <init>(com.jidesoft.plaf.basic.BasicStyledLabelUI,java.lang.String,com.jidesoft.swing.StyleRange)>(r1, r5, $r16);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r21);

     label9:
        return;
    }

    public java.awt.Dimension getPreferredSize(javax.swing.JComponent)
    {
        javax.swing.JComponent r1;
        java.lang.Throwable $r3;
        java.awt.Dimension $r2;
        com.jidesoft.plaf.basic.BasicStyledLabelUI r0;

        r0 := @this: com.jidesoft.plaf.basic.BasicStyledLabelUI;

        r1 := @parameter0: javax.swing.JComponent;

        r0.<com.jidesoft.plaf.basic.BasicStyledLabelUI: boolean _gettingPreferredSize> = 1;

     label1:
        $r2 = specialinvoke r0.<javax.swing.plaf.basic.BasicLabelUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)>(r1);

     label2:
        r0.<com.jidesoft.plaf.basic.BasicStyledLabelUI: boolean _gettingPreferredSize> = 0;

        goto label5;

     label3:
        $r3 := @caughtexception;

     label4:
        r0.<com.jidesoft.plaf.basic.BasicStyledLabelUI: boolean _gettingPreferredSize> = 0;

        throw $r3;

     label5:
        return $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    protected java.lang.String layoutCL(javax.swing.JLabel, java.awt.FontMetrics, java.lang.String, javax.swing.Icon, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle)
    {
        boolean $z0, $z1, $z2;
        javax.swing.Icon $r2, r5, $r9;
        java.awt.Dimension $r19, $r27, r28;
        java.lang.Throwable $r23;
        java.awt.Rectangle r1, r6, r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        java.lang.String r4, $r8;
        java.awt.FontMetrics r3;
        com.jidesoft.plaf.basic.BasicStyledLabelUI r13;
        javax.swing.JLabel r0;
        com.jidesoft.swing.StyledLabel $r10, $r11, $r12, $r14, $r15, $r16, $r17, $r18, $r20, $r21, $r22, $r24, $r25, $r26, $r29, $r30;

        r13 := @this: com.jidesoft.plaf.basic.BasicStyledLabelUI;

        r0 := @parameter0: javax.swing.JLabel;

        r3 := @parameter1: java.awt.FontMetrics;

        r4 := @parameter2: java.lang.String;

        r5 := @parameter3: javax.swing.Icon;

        r6 := @parameter4: java.awt.Rectangle;

        r7 := @parameter5: java.awt.Rectangle;

        r1 := @parameter6: java.awt.Rectangle;

        $z0 = r0 instanceof com.jidesoft.swing.StyledLabel;

        if $z0 == 0 goto label08;

        $r10 = (com.jidesoft.swing.StyledLabel) r0;

        $i12 = virtualinvoke $r10.<com.jidesoft.swing.StyledLabel: int getPreferredWidth()>();

        $r11 = (com.jidesoft.swing.StyledLabel) r0;

        $i13 = virtualinvoke $r11.<com.jidesoft.swing.StyledLabel: int getRows()>();

     label01:
        $r12 = (com.jidesoft.swing.StyledLabel) r0;

        $z1 = virtualinvoke $r12.<com.jidesoft.swing.StyledLabel: boolean isLineWrap()>();

        if $z1 == 0 goto label02;

        $i18 = virtualinvoke r0.<javax.swing.JLabel: int getWidth()>();

        if $i18 <= 0 goto label02;

        $r22 = (com.jidesoft.swing.StyledLabel) r0;

        $i19 = virtualinvoke r0.<javax.swing.JLabel: int getWidth()>();

        virtualinvoke $r22.<com.jidesoft.swing.StyledLabel: void setPreferredWidth(int)>($i19);

     label02:
        $r26 = (com.jidesoft.swing.StyledLabel) r0;

        $r27 = virtualinvoke r13.<com.jidesoft.plaf.basic.BasicStyledLabelUI: java.awt.Dimension getPreferredSize(com.jidesoft.swing.StyledLabel)>($r26);

        r28 = $r27;

        if $i12 <= 0 goto label03;

        $i17 = virtualinvoke r0.<javax.swing.JLabel: int getWidth()>();

        if $i12 >= $i17 goto label03;

        $r20 = (com.jidesoft.swing.StyledLabel) r0;

        virtualinvoke $r20.<com.jidesoft.swing.StyledLabel: void setPreferredWidth(int)>($i12);

        $r21 = (com.jidesoft.swing.StyledLabel) r0;

        r28 = virtualinvoke r13.<com.jidesoft.plaf.basic.BasicStyledLabelUI: java.awt.Dimension getPreferredSize(com.jidesoft.swing.StyledLabel)>($r21);

        goto label04;

     label03:
        $r14 = (com.jidesoft.swing.StyledLabel) r0;

        $z2 = virtualinvoke $r14.<com.jidesoft.swing.StyledLabel: boolean isLineWrap()>();

        if $z2 == 0 goto label04;

        $r15 = (com.jidesoft.swing.StyledLabel) r0;

        $i14 = virtualinvoke $r15.<com.jidesoft.swing.StyledLabel: int getMinRows()>();

        if $i14 <= 0 goto label04;

        $r16 = (com.jidesoft.swing.StyledLabel) r0;

        virtualinvoke $r16.<com.jidesoft.swing.StyledLabel: void setPreferredWidth(int)>(0);

        $r17 = (com.jidesoft.swing.StyledLabel) r0;

        virtualinvoke $r17.<com.jidesoft.swing.StyledLabel: void setRows(int)>(0);

        $r18 = (com.jidesoft.swing.StyledLabel) r0;

        $r19 = virtualinvoke r13.<com.jidesoft.plaf.basic.BasicStyledLabelUI: java.awt.Dimension getPreferredSize(com.jidesoft.swing.StyledLabel)>($r18);

        $i16 = $r19.<java.awt.Dimension: int height>;

        $i15 = $r27.<java.awt.Dimension: int height>;

        if $i16 <= $i15 goto label04;

        r28 = $r19;

     label04:
        $r29 = (com.jidesoft.swing.StyledLabel) r0;

        virtualinvoke $r29.<com.jidesoft.swing.StyledLabel: void setPreferredWidth(int)>($i12);

        $r30 = (com.jidesoft.swing.StyledLabel) r0;

        virtualinvoke $r30.<com.jidesoft.swing.StyledLabel: void setRows(int)>($i13);

        goto label07;

     label05:
        $r23 := @caughtexception;

     label06:
        $r24 = (com.jidesoft.swing.StyledLabel) r0;

        virtualinvoke $r24.<com.jidesoft.swing.StyledLabel: void setPreferredWidth(int)>($i12);

        $r25 = (com.jidesoft.swing.StyledLabel) r0;

        virtualinvoke $r25.<com.jidesoft.swing.StyledLabel: void setRows(int)>($i13);

        throw $r23;

     label07:
        goto label09;

     label08:
        r28 = virtualinvoke r0.<javax.swing.JLabel: java.awt.Dimension getPreferredSize()>();

     label09:
        $i0 = r28.<java.awt.Dimension: int width>;

        r1.<java.awt.Rectangle: int width> = $i0;

        $i1 = r28.<java.awt.Dimension: int height>;

        r1.<java.awt.Rectangle: int height> = $i1;

        $r2 = virtualinvoke r0.<javax.swing.JLabel: javax.swing.Icon getIcon()>();

        if $r2 == null goto label10;

        $i7 = r1.<java.awt.Rectangle: int width>;

        $r9 = virtualinvoke r0.<javax.swing.JLabel: javax.swing.Icon getIcon()>();

        $i8 = interfaceinvoke $r9.<javax.swing.Icon: int getIconWidth()>();

        $i9 = virtualinvoke r0.<javax.swing.JLabel: int getIconTextGap()>();

        $i10 = $i8 + $i9;

        $i11 = $i7 - $i10;

        r1.<java.awt.Rectangle: int width> = $i11;

     label10:
        $i2 = virtualinvoke r0.<javax.swing.JLabel: int getVerticalAlignment()>();

        $i3 = virtualinvoke r0.<javax.swing.JLabel: int getHorizontalAlignment()>();

        $i4 = virtualinvoke r0.<javax.swing.JLabel: int getVerticalTextPosition()>();

        $i5 = virtualinvoke r0.<javax.swing.JLabel: int getHorizontalTextPosition()>();

        $i6 = virtualinvoke r0.<javax.swing.JLabel: int getIconTextGap()>();

        $r8 = staticinvoke <com.jidesoft.plaf.basic.BasicStyledLabelUI: java.lang.String layoutCompoundLabel(javax.swing.JComponent,java.awt.FontMetrics,java.lang.String,javax.swing.Icon,int,int,int,int,java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle,int)>(r0, r3, r4, r5, $i2, $i3, $i4, $i5, r6, r7, r1, $i6);

        return $r8;

        catch java.lang.Throwable from label01 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
    }

    protected java.awt.Dimension getPreferredSize(com.jidesoft.swing.StyledLabel)
    {
        java.lang.Integer $r7, $r11, $r17;
        com.jidesoft.swing.StyleRange r33, r36;
        java.lang.Object[] $r30;
        com.jidesoft.plaf.basic.BasicStyledLabelUI r0;
        com.jidesoft.swing.StyledLabel r1;
        java.awt.Insets $r13, $r14, $r15;
        com.jidesoft.plaf.basic.BasicStyledLabelUI$StyledText r32, r35;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, i53, $i54, i55, $i56, i57, i58, $i59, i60, i61, i62, i63, $i64, $i65, i66, i67, $i68, i69, $i70, i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i80, $i82, $i84, $i86;
        java.lang.Object $r10, $r16;
        com.jidesoft.plaf.basic.BasicStyledLabelUI$StyledText[] $r29, $r31;
        java.lang.Throwable $r25;
        java.util.ArrayList $r44;
        java.lang.String $r22, $r23, $r24, $r38, $r39;
        java.awt.FontMetrics $r3, $r19, $r21;
        boolean $z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        java.awt.Font $r2, $r18, $r20, $r34, $r37;
        javax.swing.Icon $r9, $r12, $r40, $r43;
        java.util.List $r5, $r26, $r27, $r28;
        java.awt.Dimension r42, $r45, $r46;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        java.util.Iterator $r6;

        r0 := @this: com.jidesoft.plaf.basic.BasicStyledLabelUI;

        r1 := @parameter0: com.jidesoft.swing.StyledLabel;

        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicStyledLabelUI: void buildStyledText(com.jidesoft.swing.StyledLabel)>(r1);

        $r2 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicStyledLabelUI: java.awt.Font getFont(com.jidesoft.swing.StyledLabel)>(r1);

        $r3 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: java.awt.FontMetrics getFontMetrics(java.awt.Font)>($r2);

        $i0 = virtualinvoke $r2.<java.awt.Font: int getSize()>();

        $z0 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: boolean isLineWrap()>();

        if $z0 != 0 goto label01;

        $r22 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: java.lang.String getText()>();

        if $r22 == null goto label02;

        $r23 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: java.lang.String getText()>();

        $z7 = virtualinvoke $r23.<java.lang.String: boolean contains(java.lang.CharSequence)>("\r");

        if $z7 != 0 goto label01;

        $r24 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: java.lang.String getText()>();

        $z8 = virtualinvoke $r24.<java.lang.String: boolean contains(java.lang.CharSequence)>("\n");

        if $z8 == 0 goto label02;

     label01:
        $z9 = 1;

        goto label03;

     label02:
        $z9 = 0;

     label03:
        z1 = $z9;

        $r26 = r0.<com.jidesoft.plaf.basic.BasicStyledLabelUI: java.util.List _styledTexts>;

        entermonitor $r26;

     label04:
        $r27 = r0.<com.jidesoft.plaf.basic.BasicStyledLabelUI: java.util.List _styledTexts>;

        $r28 = r0.<com.jidesoft.plaf.basic.BasicStyledLabelUI: java.util.List _styledTexts>;

        $i52 = interfaceinvoke $r28.<java.util.List: int size()>();

        $r29 = newarray (com.jidesoft.plaf.basic.BasicStyledLabelUI$StyledText)[$i52];

        $r30 = interfaceinvoke $r27.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r29);

        $r31 = (com.jidesoft.plaf.basic.BasicStyledLabelUI$StyledText[]) $r30;

        i53 = virtualinvoke $r3.<java.awt.FontMetrics: int getHeight()>();

        $i54 = lengthof $r31;

        i55 = 0;

     label05:
        if i55 >= $i54 goto label14;

        r32 = $r31[i55];

        r33 = r32.<com.jidesoft.plaf.basic.BasicStyledLabelUI$StyledText: com.jidesoft.swing.StyleRange styleRange>;

        if r33 == null goto label07;

        $z5 = virtualinvoke r33.<com.jidesoft.swing.StyleRange: boolean isSuperscript()>();

        if $z5 != 0 goto label06;

        $z6 = virtualinvoke r33.<com.jidesoft.swing.StyleRange: boolean isSubscript()>();

        if $z6 == 0 goto label07;

     label06:
        $f3 = (float) $i0;

        $f4 = virtualinvoke r33.<com.jidesoft.swing.StyleRange: float getFontShrinkRatio()>();

        $f5 = $f3 / $f4;

        $i56 = staticinvoke <java.lang.Math: int round(float)>($f5);

        goto label08;

     label07:
        $i56 = $i0;

     label08:
        i57 = $i56;

        $r34 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicStyledLabelUI: java.awt.Font getFont(com.jidesoft.swing.StyledLabel)>(r1);

        i58 = virtualinvoke $r3.<java.awt.FontMetrics: int getHeight()>();

        if r33 == null goto label13;

        $i47 = virtualinvoke r33.<com.jidesoft.swing.StyleRange: int getFontStyle()>();

        $i80 = (int) -1;

        if $i47 == $i80 goto label09;

        $i50 = virtualinvoke $r34.<java.awt.Font: int getStyle()>();

        $i51 = virtualinvoke r33.<com.jidesoft.swing.StyleRange: int getFontStyle()>();

        if $i50 != $i51 goto label10;

     label09:
        $i48 = virtualinvoke $r34.<java.awt.Font: int getSize()>();

        if $i48 == i57 goto label13;

     label10:
        $i49 = virtualinvoke r33.<com.jidesoft.swing.StyleRange: int getFontStyle()>();

        $i82 = (int) -1;

        if $i49 != $i82 goto label11;

        $i59 = virtualinvoke $r34.<java.awt.Font: int getStyle()>();

        goto label12;

     label11:
        $i59 = virtualinvoke r33.<com.jidesoft.swing.StyleRange: int getFontStyle()>();

     label12:
        $r20 = staticinvoke <com.jidesoft.swing.FontUtils: java.awt.Font getCachedDerivedFont(java.awt.Font,int,int)>($r34, $i59, i57);

        $r21 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: java.awt.FontMetrics getFontMetrics(java.awt.Font)>($r20);

        i58 = virtualinvoke $r21.<java.awt.FontMetrics: int getHeight()>();

     label13:
        i60 = i58 + 1;

        i53 = staticinvoke <java.lang.Math: int max(int,int)>(i53, i60);

        i55 = i55 + 1;

        goto label05;

     label14:
        i61 = 1;

        i62 = 0;

        i63 = 0;

        $r44 = new java.util.ArrayList;

        specialinvoke $r44.<java.util.ArrayList: void <init>()>();

        $r5 = r0.<com.jidesoft.plaf.basic.BasicStyledLabelUI: java.util.List _styledTexts>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label15:
        $z10 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z10 == 0 goto label27;

        $r16 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r35 = (com.jidesoft.plaf.basic.BasicStyledLabelUI$StyledText) $r16;

        r36 = r35.<com.jidesoft.plaf.basic.BasicStyledLabelUI$StyledText: com.jidesoft.swing.StyleRange styleRange>;

        if r36 == null goto label17;

        $z3 = virtualinvoke r36.<com.jidesoft.swing.StyleRange: boolean isSuperscript()>();

        if $z3 != 0 goto label16;

        $z4 = virtualinvoke r36.<com.jidesoft.swing.StyleRange: boolean isSubscript()>();

        if $z4 == 0 goto label17;

     label16:
        $f0 = (float) $i0;

        $f1 = virtualinvoke r36.<com.jidesoft.swing.StyleRange: float getFontShrinkRatio()>();

        $f2 = $f0 / $f1;

        $i64 = staticinvoke <java.lang.Math: int round(float)>($f2);

        goto label18;

     label17:
        $i64 = $i0;

     label18:
        i37 = $i64;

        $r37 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicStyledLabelUI: java.awt.Font getFont(com.jidesoft.swing.StyledLabel)>(r1);

        $r38 = r35.<com.jidesoft.plaf.basic.BasicStyledLabelUI$StyledText: java.lang.String text>;

        $r39 = virtualinvoke $r38.<java.lang.String: java.lang.String substring(int)>(0);

        $z11 = virtualinvoke $r39.<java.lang.String: boolean startsWith(java.lang.String)>("\r");

        if $z11 != 0 goto label19;

        $z2 = virtualinvoke $r39.<java.lang.String: boolean startsWith(java.lang.String)>("\n");

        if $z2 == 0 goto label20;

     label19:
        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i62);

        interfaceinvoke $r44.<java.util.List: boolean add(java.lang.Object)>($r17);

        i63 = staticinvoke <java.lang.Math: int max(int,int)>(i62, i63);

        i62 = 0;

        i61 = i61 + 1;

        $i38 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: int getMaxRows()>();

        if $i38 <= 0 goto label15;

        $i39 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: int getMaxRows()>();

        if i61 < $i39 goto label15;

        goto label27;

     label20:
        if r36 == null goto label25;

        $i41 = virtualinvoke r36.<com.jidesoft.swing.StyleRange: int getFontStyle()>();

        $i84 = (int) -1;

        if $i41 == $i84 goto label21;

        $i45 = virtualinvoke $r37.<java.awt.Font: int getStyle()>();

        $i46 = virtualinvoke r36.<com.jidesoft.swing.StyleRange: int getFontStyle()>();

        if $i45 != $i46 goto label22;

     label21:
        $i42 = virtualinvoke $r37.<java.awt.Font: int getSize()>();

        if $i42 == i37 goto label25;

     label22:
        $i43 = virtualinvoke r36.<com.jidesoft.swing.StyleRange: int getFontStyle()>();

        $i86 = (int) -1;

        if $i43 != $i86 goto label23;

        $i65 = virtualinvoke $r37.<java.awt.Font: int getStyle()>();

        goto label24;

     label23:
        $i65 = virtualinvoke r36.<com.jidesoft.swing.StyleRange: int getFontStyle()>();

     label24:
        $r18 = staticinvoke <com.jidesoft.swing.FontUtils: java.awt.Font getCachedDerivedFont(java.awt.Font,int,int)>($r37, $i65, i37);

        $r19 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: java.awt.FontMetrics getFontMetrics(java.awt.Font)>($r18);

        $i44 = virtualinvoke $r19.<java.awt.FontMetrics: int stringWidth(java.lang.String)>($r39);

        i62 = i62 + $i44;

        goto label26;

     label25:
        $i40 = virtualinvoke $r3.<java.awt.FontMetrics: int stringWidth(java.lang.String)>($r39);

        i62 = i62 + $i40;

     label26:
        goto label15;

     label27:
        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i62);

        interfaceinvoke $r44.<java.util.List: boolean add(java.lang.Object)>($r7);

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>(i62, i63);

        i66 = $i1;

        i67 = $i1;

        r0.<com.jidesoft.plaf.basic.BasicStyledLabelUI: int _preferredRowCount> = i61;

        if z1 == 0 goto label28;

        $i34 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: int getPreferredWidth()>();

        if $i34 > 0 goto label28;

        $i35 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: int getRows()>();

        if $i35 <= 0 goto label28;

        $i36 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: int getRows()>();

        i66 = specialinvoke r0.<com.jidesoft.plaf.basic.BasicStyledLabelUI: int getMaximumWidth(com.jidesoft.swing.StyledLabel,int,int,int)>(r1, $i1, i61, $i36);

     label28:
        $i68 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: int getPreferredWidth()>();

        i69 = $i68;

        if $i68 <= 0 goto label29;

        $r13 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: java.awt.Insets getInsets()>();

        if $r13 == null goto label29;

        $r14 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: java.awt.Insets getInsets()>();

        $i31 = $r14.<java.awt.Insets: int left>;

        $r15 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: java.awt.Insets getInsets()>();

        $i32 = $r15.<java.awt.Insets: int right>;

        $i33 = $i31 + $i32;

        i69 = $i68 - $i33;

     label29:
        $r40 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: javax.swing.Icon getIcon()>();

        if $r40 == null goto label30;

        $i27 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: int getHorizontalTextPosition()>();

        if $i27 == 0 goto label30;

        $r12 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: javax.swing.Icon getIcon()>();

        $i28 = interfaceinvoke $r12.<javax.swing.Icon: int getIconWidth()>();

        $i29 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: int getIconTextGap()>();

        $i30 = $i28 + $i29;

        i69 = i69 - $i30;

     label30:
        if z1 == 0 goto label31;

        if i69 <= 0 goto label31;

        if i66 <= i69 goto label31;

        i66 = specialinvoke r0.<com.jidesoft.plaf.basic.BasicStyledLabelUI: int getLayoutWidth(com.jidesoft.swing.StyledLabel,int)>(r1, i69);

     label31:
        if z1 == 0 goto label33;

        $i21 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: int getMaxRows()>();

        if $i21 <= 0 goto label33;

        $i22 = r0.<com.jidesoft.plaf.basic.BasicStyledLabelUI: int _preferredRowCount>;

        $i23 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: int getMaxRows()>();

        if $i22 <= $i23 goto label33;

        $i24 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: int getPreferredWidth()>();

        if $i24 > 0 goto label32;

        $i26 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: int getMaxRows()>();

        i66 = specialinvoke r0.<com.jidesoft.plaf.basic.BasicStyledLabelUI: int getMaximumWidth(com.jidesoft.swing.StyledLabel,int,int,int)>(r1, i66, i61, $i26);

        goto label33;

     label32:
        $i25 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: int getMaxRows()>();

        r0.<com.jidesoft.plaf.basic.BasicStyledLabelUI: int _preferredRowCount> = $i25;

     label33:
        if z1 == 0 goto label34;

        $i16 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: int getPreferredWidth()>();

        if $i16 > 0 goto label34;

        $i17 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: int getMinRows()>();

        if $i17 <= 0 goto label34;

        $i18 = r0.<com.jidesoft.plaf.basic.BasicStyledLabelUI: int _preferredRowCount>;

        $i19 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: int getMinRows()>();

        if $i18 >= $i19 goto label34;

        $i20 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: int getMinRows()>();

        i66 = specialinvoke r0.<com.jidesoft.plaf.basic.BasicStyledLabelUI: int getMaximumWidth(com.jidesoft.swing.StyledLabel,int,int,int)>(r1, i66, i61, $i20);

     label34:
        $z12 = r0.<com.jidesoft.plaf.basic.BasicStyledLabelUI: boolean _gettingPreferredSize>;

        if $z12 == 0 goto label37;

        $i8 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: int getRows()>();

        if $i8 <= 0 goto label37;

        $i9 = r0.<com.jidesoft.plaf.basic.BasicStyledLabelUI: int _preferredRowCount>;

        $i10 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: int getRows()>();

        if $i9 <= $i10 goto label37;

        $i11 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: int getPreferredWidth()>();

        if $i11 <= 0 goto label35;

        $i14 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: int getPreferredWidth()>();

        if $i14 >= $i1 goto label35;

        $i15 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: int getRows()>();

        if i61 <= $i15 goto label37;

     label35:
        $i70 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: int getRows()>();

        r0.<com.jidesoft.plaf.basic.BasicStyledLabelUI: int _preferredRowCount> = $i70;

        i67 = 0;

        i71 = 0;

     label36:
        $i72 = interfaceinvoke $r44.<java.util.List: int size()>();

        if i71 >= $i72 goto label37;

        $i12 = r0.<com.jidesoft.plaf.basic.BasicStyledLabelUI: int _preferredRowCount>;

        if i71 >= $i12 goto label37;

        $r10 = interfaceinvoke $r44.<java.util.List: java.lang.Object get(int)>(i71);

        $r11 = (java.lang.Integer) $r10;

        $i13 = virtualinvoke $r11.<java.lang.Integer: int intValue()>();

        i67 = staticinvoke <java.lang.Math: int max(int,int)>(i67, $i13);

        i71 = i71 + 1;

        goto label36;

     label37:
        $r45 = new java.awt.Dimension;

        $i73 = staticinvoke <java.lang.Math: int min(int,int)>(i66, i67);

        $i74 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: int getRowGap()>();

        $i75 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i74);

        $i76 = i53 + $i75;

        $i77 = r0.<com.jidesoft.plaf.basic.BasicStyledLabelUI: int _preferredRowCount>;

        $i78 = $i76 * $i77;

        specialinvoke $r45.<java.awt.Dimension: void <init>(int,int)>($i73, $i78);

        r42 = $r45;

        $r43 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: javax.swing.Icon getIcon()>();

        if $r43 == null goto label38;

        $r46 = new java.awt.Dimension;

        $i2 = $r45.<java.awt.Dimension: int width>;

        $i3 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: int getIconTextGap()>();

        $i4 = $i2 + $i3;

        $r9 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: javax.swing.Icon getIcon()>();

        $i5 = interfaceinvoke $r9.<javax.swing.Icon: int getIconWidth()>();

        $i7 = $i4 + $i5;

        $i6 = $r45.<java.awt.Dimension: int height>;

        specialinvoke $r46.<java.awt.Dimension: void <init>(int,int)>($i7, $i6);

        r42 = $r46;

     label38:
        exitmonitor $r26;

     label39:
        return r42;

     label40:
        $r25 := @caughtexception;

        exitmonitor $r26;

     label41:
        throw $r25;

        catch java.lang.Throwable from label04 to label39 with label40;
        catch java.lang.Throwable from label40 to label41 with label40;
    }

    private int getLayoutWidth(com.jidesoft.swing.StyledLabel, int)
    {
        com.jidesoft.swing.StyleRange r8;
        java.lang.StringBuilder $r17, $r18, $r25;
        java.lang.String $r9, $r10, $r11, $r12, $r13, $r14, $r19, $r23, $r24;
        com.jidesoft.plaf.basic.BasicStyledLabelUI r0;
        java.awt.FontMetrics $r3, r22;
        com.jidesoft.swing.StyledLabel r1;
        boolean $z0, $z1, $z2, $z3, z4, z5, z6;
        java.awt.Font $r2, $r20, $r21;
        java.util.List $r4, $r5;
        float $f0, $f1, $f2;
        com.jidesoft.plaf.basic.BasicStyledLabelUI$StyledText r7;
        int $i0, $i1, i2, $i3, $i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i22, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, i39, i40, i41, $i42, $i43, $i44, i45, $i46, i47, i48, i49, i50, $i51, i52, i53, $i55, $i57, $i59, $i61;
        java.io.PrintStream $r16;
        char $c21, $c23;
        java.lang.Object $r6;

        r0 := @this: com.jidesoft.plaf.basic.BasicStyledLabelUI;

        r1 := @parameter0: com.jidesoft.swing.StyledLabel;

        i2 := @parameter1: int;

        $r2 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicStyledLabelUI: java.awt.Font getFont(com.jidesoft.swing.StyledLabel)>(r1);

        $i0 = virtualinvoke $r2.<java.awt.Font: int getSize()>();

        $r3 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: java.awt.FontMetrics getFontMetrics(java.awt.Font)>($r2);

        i39 = 0;

        i40 = 0;

        r0.<com.jidesoft.plaf.basic.BasicStyledLabelUI: int _preferredRowCount> = 1;

        i41 = 0;

     label01:
        $r4 = r0.<com.jidesoft.plaf.basic.BasicStyledLabelUI: java.util.List _styledTexts>;

        $i1 = interfaceinvoke $r4.<java.util.List: int size()>();

        if i41 >= $i1 goto label33;

        $r5 = r0.<com.jidesoft.plaf.basic.BasicStyledLabelUI: java.util.List _styledTexts>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i41);

        r7 = (com.jidesoft.plaf.basic.BasicStyledLabelUI$StyledText) $r6;

        r8 = r7.<com.jidesoft.plaf.basic.BasicStyledLabelUI$StyledText: com.jidesoft.swing.StyleRange styleRange>;

        $r9 = r7.<com.jidesoft.plaf.basic.BasicStyledLabelUI$StyledText: java.lang.String text>;

        $z0 = virtualinvoke $r9.<java.lang.String: boolean contains(java.lang.CharSequence)>("\r");

        if $z0 != 0 goto label02;

        $r10 = r7.<com.jidesoft.plaf.basic.BasicStyledLabelUI$StyledText: java.lang.String text>;

        $z1 = virtualinvoke $r10.<java.lang.String: boolean contains(java.lang.CharSequence)>("\n");

        if $z1 == 0 goto label03;

     label02:
        i40 = 0;

        $i3 = r0.<com.jidesoft.plaf.basic.BasicStyledLabelUI: int _preferredRowCount>;

        $i4 = $i3 + 1;

        r0.<com.jidesoft.plaf.basic.BasicStyledLabelUI: int _preferredRowCount> = $i4;

        goto label32;

     label03:
        if r8 == null goto label05;

        $z2 = virtualinvoke r8.<com.jidesoft.swing.StyleRange: boolean isSuperscript()>();

        if $z2 != 0 goto label04;

        $z3 = virtualinvoke r8.<com.jidesoft.swing.StyleRange: boolean isSubscript()>();

        if $z3 == 0 goto label05;

     label04:
        $f0 = (float) $i0;

        $f1 = virtualinvoke r8.<com.jidesoft.swing.StyleRange: float getFontShrinkRatio()>();

        $f2 = $f0 / $f1;

        $i42 = staticinvoke <java.lang.Math: int round(float)>($f2);

        goto label06;

     label05:
        $i42 = $i0;

     label06:
        i5 = $i42;

        $r21 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicStyledLabelUI: java.awt.Font getFont(com.jidesoft.swing.StyledLabel)>(r1);

        if r8 == null goto label11;

        $i34 = virtualinvoke r8.<com.jidesoft.swing.StyleRange: int getFontStyle()>();

        $i55 = (int) -1;

        if $i34 == $i55 goto label07;

        $i37 = virtualinvoke $r21.<java.awt.Font: int getStyle()>();

        $i38 = virtualinvoke r8.<com.jidesoft.swing.StyleRange: int getFontStyle()>();

        if $i37 != $i38 goto label08;

     label07:
        $i35 = virtualinvoke $r21.<java.awt.Font: int getSize()>();

        if $i35 == i5 goto label11;

     label08:
        $i36 = virtualinvoke r8.<com.jidesoft.swing.StyleRange: int getFontStyle()>();

        $i57 = (int) -1;

        if $i36 != $i57 goto label09;

        $i43 = virtualinvoke $r21.<java.awt.Font: int getStyle()>();

        goto label10;

     label09:
        $i43 = virtualinvoke r8.<com.jidesoft.swing.StyleRange: int getFontStyle()>();

     label10:
        $r20 = staticinvoke <com.jidesoft.swing.FontUtils: java.awt.Font getCachedDerivedFont(java.awt.Font,int,int)>($r21, $i43, i5);

        r22 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: java.awt.FontMetrics getFontMetrics(java.awt.Font)>($r20);

        goto label12;

     label11:
        r22 = $r3;

     label12:
        $r23 = r7.<com.jidesoft.plaf.basic.BasicStyledLabelUI$StyledText: java.lang.String text>;

        $r24 = virtualinvoke $r23.<java.lang.String: java.lang.String substring(int)>(i39);

        $i44 = virtualinvoke r22.<java.awt.FontMetrics: int stringWidth(java.lang.String)>($r24);

        i45 = $i44;

        z4 = 0;

        $i46 = i2 - i40;

        if $i46 >= $i44 goto label29;

        z4 = 1;

        $i8 = virtualinvoke $r24.<java.lang.String: int length()>();

        $i9 = $i8 * $i46;

        $i10 = $i9 / $i44;

        i47 = $i10 + 1;

        i48 = 0;

        z5 = 0;

        z6 = 0;

        i49 = 0;

     label13:
        $i11 = virtualinvoke $r24.<java.lang.String: int length()>();

        $i12 = staticinvoke <java.lang.Math: int min(int,int)>(i47, $i11);

        $r11 = virtualinvoke $r24.<java.lang.String: java.lang.String substring(int,int)>(0, $i12);

        $i13 = specialinvoke r0.<com.jidesoft.plaf.basic.BasicStyledLabelUI: int findFirstRowWordEndIndex(java.lang.String)>($r11);

        i50 = $i13;

        if $i13 >= 0 goto label14;

        $i51 = 0;

        goto label15;

     label14:
        $i51 = specialinvoke r0.<com.jidesoft.plaf.basic.BasicStyledLabelUI: int findNextWordStartIndex(java.lang.String,int)>($r24, $i13);

     label15:
        i52 = $i51;

        if $i13 >= 0 goto label18;

        if i40 == 0 goto label17;

        i40 = 0;

        $i59 = (int) -1;

        i41 = i41 + $i59;

        $i29 = r0.<com.jidesoft.plaf.basic.BasicStyledLabelUI: int _preferredRowCount>;

        $i30 = $i29 + 1;

        r0.<com.jidesoft.plaf.basic.BasicStyledLabelUI: int _preferredRowCount> = $i30;

        $i31 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: int getMaxRows()>();

        if $i31 <= 0 goto label16;

        $i32 = r0.<com.jidesoft.plaf.basic.BasicStyledLabelUI: int _preferredRowCount>;

        $i33 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: int getMaxRows()>();

        if $i32 < $i33 goto label16;

        z5 = 1;

     label16:
        z6 = 1;

        goto label21;

     label17:
        i50 = 0;

        $i27 = virtualinvoke $r24.<java.lang.String: int length()>();

        i52 = staticinvoke <java.lang.Math: int min(int,int)>($i27, i47);

     label18:
        $i28 = i50 + 1;

        i48 = $i28;

        $i14 = virtualinvoke $r24.<java.lang.String: int length()>();

        $i15 = staticinvoke <java.lang.Math: int min(int,int)>($i28, $i14);

        $r12 = virtualinvoke $r24.<java.lang.String: java.lang.String substring(int,int)>(0, $i15);

        $i16 = virtualinvoke r22.<java.awt.FontMetrics: int stringWidth(java.lang.String)>($r12);

        i45 = $i16;

        if $i16 <= $i46 goto label19;

        $i25 = virtualinvoke $r11.<java.lang.String: int length()>();

        $i26 = $i25 * $i46;

        i47 = $i26 / $i16;

     label19:
        i49 = i49 + 1;

        if i49 <= 50 goto label20;

        $r16 = <java.lang.System: java.io.PrintStream err>;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Painting Styled Label Error: ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r19);

        goto label21;

     label20:
        if $i16 <= $i46 goto label21;

        if i47 > 0 goto label13;

     label21:
        if z5 == 0 goto label22;

        goto label33;

     label22:
        if z6 == 0 goto label23;

        goto label32;

     label23:
        if i48 >= i52 goto label25;

        $c23 = virtualinvoke $r24.<java.lang.String: char charAt(int)>(i48);

        $i24 = virtualinvoke r22.<java.awt.FontMetrics: int charWidth(char)>($c23);

        i45 = i45 + $i24;

        if i45 < $i46 goto label24;

        goto label25;

     label24:
        i48 = i48 + 1;

        goto label23;

     label25:
        $i17 = virtualinvoke $r24.<java.lang.String: int length()>();

        $i18 = staticinvoke <java.lang.Math: int min(int,int)>(i48, $i17);

        $r13 = virtualinvoke $r24.<java.lang.String: java.lang.String substring(int,int)>(0, $i18);

        i53 = virtualinvoke r22.<java.awt.FontMetrics: int stringWidth(java.lang.String)>($r13);

     label26:
        if i48 >= i52 goto label28;

        $c21 = virtualinvoke $r24.<java.lang.String: char charAt(int)>(i48);

        $i22 = virtualinvoke r22.<java.awt.FontMetrics: int charWidth(char)>($c21);

        i53 = i53 + $i22;

        if i53 < $i46 goto label27;

        goto label28;

     label27:
        i48 = i48 + 1;

        goto label26;

     label28:
        $i19 = virtualinvoke $r24.<java.lang.String: int length()>();

        $i20 = staticinvoke <java.lang.Math: int min(int,int)>(i48, $i19);

        $r14 = virtualinvoke $r24.<java.lang.String: java.lang.String substring(int,int)>(0, $i20);

        i45 = virtualinvoke r22.<java.awt.FontMetrics: int stringWidth(java.lang.String)>($r14);

        i39 = i39 + i48;

        goto label30;

     label29:
        i39 = 0;

     label30:
        if z4 == 0 goto label31;

        $i6 = r0.<com.jidesoft.plaf.basic.BasicStyledLabelUI: int _preferredRowCount>;

        $i7 = $i6 + 1;

        r0.<com.jidesoft.plaf.basic.BasicStyledLabelUI: int _preferredRowCount> = $i7;

        i40 = 0;

        $i61 = (int) -1;

        i41 = i41 + $i61;

        goto label32;

     label31:
        i40 = i40 + i45;

     label32:
        i41 = i41 + 1;

        goto label01;

     label33:
        return i2;
    }

    private int getMaximumWidth(com.jidesoft.swing.StyledLabel, int, int, int)
    {
        com.jidesoft.swing.StyleRange r15;
        java.lang.String $r16, $r17, $r18, $r24, $r25, $r26;
        com.jidesoft.plaf.basic.BasicStyledLabelUI r4;
        java.awt.FontMetrics $r6, r23;
        com.jidesoft.swing.StyledLabel r0;
        boolean $z0, $z1;
        java.awt.Font $r5, $r19, $r22;
        javax.swing.Icon $r3, $r20;
        java.util.List $r7, $r13;
        float $f0, $f1, $f2;
        java.awt.Insets $r1, $r2, $r8, $r9, $r10, $r11, $r12, $r27;
        com.jidesoft.plaf.basic.BasicStyledLabelUI$StyledText r21;
        int $i0, $i1, $i2, $i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17, $i18, $i19, $i20, i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, i46, i47, i48, i49, i50, i51, i52, i53, i54, $i55, $i56, $i57, i58, $i59, i60, $i61, i62, $i63, $i64, i65, i66, i67, $i69, $i71, $i73, $i75;
        char $c31;
        java.lang.Object $r14;

        r4 := @this: com.jidesoft.plaf.basic.BasicStyledLabelUI;

        r0 := @parameter0: com.jidesoft.swing.StyledLabel;

        i46 := @parameter1: int;

        i4 := @parameter2: int;

        i5 := @parameter3: int;

        $i0 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: int getWidth()>();

        $r1 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: java.awt.Insets getInsets()>();

        $i1 = $r1.<java.awt.Insets: int left>;

        $i2 = $i0 - $i1;

        $r2 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: java.awt.Insets getInsets()>();

        $i3 = $r2.<java.awt.Insets: int right>;

        i47 = $i2 - $i3;

        $r3 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: javax.swing.Icon getIcon()>();

        if $r3 == null goto label01;

        $r20 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: javax.swing.Icon getIcon()>();

        $i43 = interfaceinvoke $r20.<javax.swing.Icon: int getIconWidth()>();

        $i44 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: int getIconTextGap()>();

        $i45 = $i43 + $i44;

        i47 = i47 - $i45;

     label01:
        if i4 <= 1 goto label06;

        i48 = 1;

        i49 = i46;

        r4.<com.jidesoft.plaf.basic.BasicStyledLabelUI: int _preferredRowCount> = i4;

     label02:
        if i48 >= i49 goto label05;

        $i41 = i49 + i48;

        i50 = $i41 / 2;

        i46 = specialinvoke r4.<com.jidesoft.plaf.basic.BasicStyledLabelUI: int getLayoutWidth(com.jidesoft.swing.StyledLabel,int)>(r0, i50);

        $i42 = r4.<com.jidesoft.plaf.basic.BasicStyledLabelUI: int _preferredRowCount>;

        if $i42 <= i5 goto label03;

        i48 = i50 + 1;

        r4.<com.jidesoft.plaf.basic.BasicStyledLabelUI: int _preferredRowCount> = i4;

        goto label04;

     label03:
        i49 = i50 - 1;

     label04:
        goto label02;

     label05:
        $i39 = i46 / 20;

        $i40 = i46 + $i39;

        return $i40;

     label06:
        $i6 = i46 / i5;

        i51 = $i6 + 1;

        i52 = 0;

        i53 = 0;

        $r5 = virtualinvoke r4.<com.jidesoft.plaf.basic.BasicStyledLabelUI: java.awt.Font getFont(com.jidesoft.swing.StyledLabel)>(r0);

        $r6 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: java.awt.FontMetrics getFontMetrics(java.awt.Font)>($r5);

        $i7 = virtualinvoke $r5.<java.awt.Font: int getSize()>();

        i54 = 0;

     label07:
        $r7 = r4.<com.jidesoft.plaf.basic.BasicStyledLabelUI: java.util.List _styledTexts>;

        $i8 = interfaceinvoke $r7.<java.util.List: int size()>();

        if i54 >= $i8 goto label24;

        $r13 = r4.<com.jidesoft.plaf.basic.BasicStyledLabelUI: java.util.List _styledTexts>;

        $r14 = interfaceinvoke $r13.<java.util.List: java.lang.Object get(int)>(i54);

        r21 = (com.jidesoft.plaf.basic.BasicStyledLabelUI$StyledText) $r14;

        r15 = r21.<com.jidesoft.plaf.basic.BasicStyledLabelUI$StyledText: com.jidesoft.swing.StyleRange styleRange>;

        if r15 == null goto label09;

        $z0 = virtualinvoke r15.<com.jidesoft.swing.StyleRange: boolean isSuperscript()>();

        if $z0 != 0 goto label08;

        $z1 = virtualinvoke r15.<com.jidesoft.swing.StyleRange: boolean isSubscript()>();

        if $z1 == 0 goto label09;

     label08:
        $f0 = (float) $i7;

        $f1 = virtualinvoke r15.<com.jidesoft.swing.StyleRange: float getFontShrinkRatio()>();

        $f2 = $f0 / $f1;

        $i55 = staticinvoke <java.lang.Math: int round(float)>($f2);

        goto label10;

     label09:
        $i55 = $i7;

     label10:
        i17 = $i55;

        $r22 = virtualinvoke r4.<com.jidesoft.plaf.basic.BasicStyledLabelUI: java.awt.Font getFont(com.jidesoft.swing.StyledLabel)>(r0);

        if r15 == null goto label15;

        $i34 = virtualinvoke r15.<com.jidesoft.swing.StyleRange: int getFontStyle()>();

        $i69 = (int) -1;

        if $i34 == $i69 goto label11;

        $i37 = virtualinvoke $r22.<java.awt.Font: int getStyle()>();

        $i38 = virtualinvoke r15.<com.jidesoft.swing.StyleRange: int getFontStyle()>();

        if $i37 != $i38 goto label12;

     label11:
        $i35 = virtualinvoke $r22.<java.awt.Font: int getSize()>();

        if $i35 == i17 goto label15;

     label12:
        $i36 = virtualinvoke r15.<com.jidesoft.swing.StyleRange: int getFontStyle()>();

        $i71 = (int) -1;

        if $i36 != $i71 goto label13;

        $i56 = virtualinvoke $r22.<java.awt.Font: int getStyle()>();

        goto label14;

     label13:
        $i56 = virtualinvoke r15.<com.jidesoft.swing.StyleRange: int getFontStyle()>();

     label14:
        $r19 = staticinvoke <com.jidesoft.swing.FontUtils: java.awt.Font getCachedDerivedFont(java.awt.Font,int,int)>($r22, $i56, i17);

        r23 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: java.awt.FontMetrics getFontMetrics(java.awt.Font)>($r19);

        goto label16;

     label15:
        r23 = $r6;

     label16:
        $r24 = r21.<com.jidesoft.plaf.basic.BasicStyledLabelUI$StyledText: java.lang.String text>;

        $r25 = virtualinvoke $r24.<java.lang.String: java.lang.String substring(int)>(i53);

        $i57 = virtualinvoke r23.<java.awt.FontMetrics: int stringWidth(java.lang.String)>($r25);

        i58 = $i57;

        $i59 = i51 - i52;

        if $i59 >= $i57 goto label23;

        $i18 = virtualinvoke $r25.<java.lang.String: int length()>();

        $i19 = $i18 * $i59;

        $i20 = $i19 / $i57;

        i21 = $i20 + 1;

        $i22 = virtualinvoke $r25.<java.lang.String: int length()>();

        $i23 = staticinvoke <java.lang.Math: int min(int,int)>(i21, $i22);

        $r16 = virtualinvoke $r25.<java.lang.String: java.lang.String substring(int,int)>(0, $i23);

        $i24 = specialinvoke r4.<com.jidesoft.plaf.basic.BasicStyledLabelUI: int findFirstRowWordEndIndex(java.lang.String)>($r16);

        i60 = $i24;

        $i25 = specialinvoke r4.<com.jidesoft.plaf.basic.BasicStyledLabelUI: int findNextWordStartIndex(java.lang.String,int)>($r25, $i24);

        if $i24 >= 0 goto label18;

        $i33 = virtualinvoke $r25.<java.lang.String: int length()>();

        if $i25 >= $i33 goto label17;

        $r18 = virtualinvoke $r25.<java.lang.String: java.lang.String substring(int,int)>(0, $i25);

        i60 = specialinvoke r4.<com.jidesoft.plaf.basic.BasicStyledLabelUI: int findFirstRowWordEndIndex(java.lang.String)>($r18);

        goto label18;

     label17:
        i60 = $i25;

     label18:
        $i61 = i60 + 1;

        i62 = $i61;

        $i63 = virtualinvoke $r25.<java.lang.String: int length()>();

        $i64 = staticinvoke <java.lang.Math: int min(int,int)>($i61, $i63);

        $r26 = virtualinvoke $r25.<java.lang.String: java.lang.String substring(int,int)>(0, $i64);

        i65 = virtualinvoke r23.<java.awt.FontMetrics: int stringWidth(java.lang.String)>($r26);

     label19:
        if i62 >= $i25 goto label20;

        $c31 = virtualinvoke $r25.<java.lang.String: char charAt(int)>(i62);

        $i32 = virtualinvoke r23.<java.awt.FontMetrics: int charWidth(char)>($c31);

        i65 = i65 + $i32;

        i62 = i62 + 1;

        if i65 < $i59 goto label19;

        goto label20;

     label20:
        $i26 = virtualinvoke $r25.<java.lang.String: int length()>();

        $i27 = staticinvoke <java.lang.Math: int min(int,int)>(i62, $i26);

        $r17 = virtualinvoke $r25.<java.lang.String: java.lang.String substring(int,int)>(0, $i27);

        $i28 = virtualinvoke r23.<java.awt.FontMetrics: int stringWidth(java.lang.String)>($r17);

        i58 = $i28;

        i53 = i53 + i62;

        $i29 = i52 + $i28;

        if $i29 < i46 goto label21;

        i52 = staticinvoke <java.lang.Math: int max(int,int)>(i52, $i28);

        goto label24;

     label21:
        $i30 = i52 + $i28;

        if $i30 < i51 goto label22;

        i52 = i52 + $i28;

        goto label24;

     label22:
        $i73 = (int) -1;

        i54 = i54 + $i73;

     label23:
        i52 = i52 + i58;

        i54 = i54 + 1;

        goto label07;

     label24:
        i66 = i52;

        $r27 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: java.awt.Insets getInsets()>();

        if $r27 == null goto label25;

        $r11 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: java.awt.Insets getInsets()>();

        $i14 = $r11.<java.awt.Insets: int left>;

        $r12 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: java.awt.Insets getInsets()>();

        $i15 = $r12.<java.awt.Insets: int right>;

        $i16 = $i14 + $i15;

        i66 = i52 + $i16;

     label25:
        $i9 = specialinvoke r4.<com.jidesoft.plaf.basic.BasicStyledLabelUI: int internalPaintStyledText(com.jidesoft.swing.StyledLabel,java.awt.Graphics,int,int,int)>(r0, null, 0, 0, i66);

        i67 = $i9;

        if $i9 == i5 goto label29;

        $i10 = staticinvoke <java.lang.Math: int min(int,int)>(i46, i47);

     label26:
        if i67 <= i5 goto label27;

        if i66 >= $i10 goto label27;

        i66 = i66 + 2;

        i67 = specialinvoke r4.<com.jidesoft.plaf.basic.BasicStyledLabelUI: int internalPaintStyledText(com.jidesoft.swing.StyledLabel,java.awt.Graphics,int,int,int)>(r0, null, 0, 0, i66);

        goto label26;

     label27:
        if i67 >= i5 goto label28;

        if i66 <= 0 goto label28;

        $i75 = (int) -2;

        i66 = i66 + $i75;

        i67 = specialinvoke r4.<com.jidesoft.plaf.basic.BasicStyledLabelUI: int internalPaintStyledText(com.jidesoft.swing.StyledLabel,java.awt.Graphics,int,int,int)>(r0, null, 0, 0, i66);

        goto label27;

     label28:
        i52 = i66;

        $r8 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: java.awt.Insets getInsets()>();

        if $r8 == null goto label29;

        $r9 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: java.awt.Insets getInsets()>();

        $i11 = $r9.<java.awt.Insets: int left>;

        $r10 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: java.awt.Insets getInsets()>();

        $i12 = $r10.<java.awt.Insets: int right>;

        $i13 = $i11 + $i12;

        i52 = i66 - $i13;

     label29:
        r4.<com.jidesoft.plaf.basic.BasicStyledLabelUI: int _preferredRowCount> = i5;

        return i52;
    }

    protected java.awt.Font getFont(com.jidesoft.swing.StyledLabel)
    {
        com.jidesoft.plaf.basic.BasicStyledLabelUI r2;
        java.awt.Font $r1, r3;
        com.jidesoft.swing.StyledLabel r0;

        r2 := @this: com.jidesoft.plaf.basic.BasicStyledLabelUI;

        r0 := @parameter0: com.jidesoft.swing.StyledLabel;

        $r1 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: java.awt.Font getFont()>();

        r3 = $r1;

        if $r1 != null goto label1;

        r3 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Font getFont(java.lang.Object)>("Label.font");

     label1:
        return r3;
    }

    protected void paintStyledText(com.jidesoft.swing.StyledLabel, java.awt.Graphics, int, int)
    {
        java.awt.Color $r2;
        java.lang.Throwable $r11;
        java.awt.Insets $r3, $r7, $r8;
        int $i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, $i15, i16, $i17;
        boolean $z0;
        javax.swing.Icon $r4, $r6;
        java.awt.Dimension $r9, $r10;
        com.jidesoft.plaf.basic.BasicStyledLabelUI r5;
        java.awt.Graphics r1;
        com.jidesoft.swing.StyledLabel r0;

        r5 := @this: com.jidesoft.plaf.basic.BasicStyledLabelUI;

        r0 := @parameter0: com.jidesoft.swing.StyledLabel;

        r1 := @parameter1: java.awt.Graphics;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        virtualinvoke r0.<com.jidesoft.swing.StyledLabel: void setTruncated(boolean)>(0);

        i14 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: int getWidth()>();

        $z0 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: boolean isLineWrap()>();

        if $z0 == 0 goto label7;

        $i10 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: int getPreferredWidth()>();

        $i11 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: int getRows()>();

     label1:
        virtualinvoke r0.<com.jidesoft.swing.StyledLabel: void setRows(int)>(0);

        $r9 = virtualinvoke r5.<com.jidesoft.plaf.basic.BasicStyledLabelUI: java.awt.Dimension getPreferredSize(com.jidesoft.swing.StyledLabel)>(r0);

        i14 = $r9.<java.awt.Dimension: int width>;

        if $i10 <= 0 goto label2;

        $i13 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: int getWidth()>();

        $i15 = staticinvoke <java.lang.Math: int min(int,int)>($i13, $i10);

        goto label3;

     label2:
        $i15 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: int getWidth()>();

     label3:
        virtualinvoke r0.<com.jidesoft.swing.StyledLabel: void setPreferredWidth(int)>($i15);

        $r10 = virtualinvoke r5.<com.jidesoft.plaf.basic.BasicStyledLabelUI: java.awt.Dimension getPreferredSize(com.jidesoft.swing.StyledLabel)>(r0);

        $i12 = $r10.<java.awt.Dimension: int width>;

        if $i12 >= i14 goto label4;

        i14 = $r10.<java.awt.Dimension: int width>;

     label4:
        virtualinvoke r0.<com.jidesoft.swing.StyledLabel: void setPreferredWidth(int)>($i10);

        virtualinvoke r0.<com.jidesoft.swing.StyledLabel: void setRows(int)>($i11);

        goto label7;

     label5:
        $r11 := @caughtexception;

     label6:
        virtualinvoke r0.<com.jidesoft.swing.StyledLabel: void setPreferredWidth(int)>($i10);

        virtualinvoke r0.<com.jidesoft.swing.StyledLabel: void setRows(int)>($i11);

        throw $r11;

     label7:
        $r2 = virtualinvoke r1.<java.awt.Graphics: java.awt.Color getColor()>();

        $i0 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: int getWidth()>();

        i16 = $i0;

        $r3 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: java.awt.Insets getInsets()>();

        if $r3 == null goto label8;

        $r7 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: java.awt.Insets getInsets()>();

        $i7 = $r7.<java.awt.Insets: int left>;

        $r8 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: java.awt.Insets getInsets()>();

        $i8 = $r8.<java.awt.Insets: int right>;

        $i9 = $i7 + $i8;

        i16 = $i0 - $i9;

     label8:
        $r4 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: javax.swing.Icon getIcon()>();

        if $r4 == null goto label9;

        $i3 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: int getHorizontalTextPosition()>();

        if $i3 == 0 goto label9;

        $r6 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: javax.swing.Icon getIcon()>();

        $i4 = interfaceinvoke $r6.<javax.swing.Icon: int getIconWidth()>();

        $i5 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: int getIconTextGap()>();

        $i6 = $i4 + $i5;

        i16 = i16 - $i6;

     label9:
        $i17 = staticinvoke <java.lang.Math: int min(int,int)>(i14, i16);

        specialinvoke r5.<com.jidesoft.plaf.basic.BasicStyledLabelUI: int internalPaintStyledText(com.jidesoft.swing.StyledLabel,java.awt.Graphics,int,int,int)>(r0, r1, i1, i2, $i17);

        virtualinvoke r1.<java.awt.Graphics: void setColor(java.awt.Color)>($r2);

        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private int internalPaintStyledText(com.jidesoft.swing.StyledLabel, java.awt.Graphics, int, int, int)
    {
        java.awt.Color $r23, $r24, $r27, $r28, $r29, $r95, r96;
        com.jidesoft.swing.StyleRange r9, r76, r93;
        java.awt.Insets $r1;
        java.awt.Graphics2D $r18, $r22, $r25;
        int $i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $i105, $i106, $i107, $i108, $i109, $i110, $i111, $i112, $i113, $i114, $i116, $i117, $i118, $i119, $i120, $i121, $i122, $i123, $i124, $i125, $i126, $i127, $i128, $i129, $i130, $i131, $i132, $i133, $i134, $i135, $i136, $i137, $i138, $i139, $i140, $i141, $i142, $i143, $i144, $i145, $i146, $i147, $i148, $i149, $i150, $i151, $i152, $i153, $i154, $i155, $i156, $i157, $i158, $i159, $i160, $i161, $i162, $i163, i164, i165, i166, i167, $i168, i169, i170, i171, i172, i173, $i174, i175, i176, $i177, i178, $i181, i182, $i183, i184, i185, i186, i187, $i188, $i189, $i190, $i191, $i192, $i193, $i194, $i195, i196, $i197, i198, $i199, $i200, i201, $i202, i203, i204, i205, i206, $i207, i208, $i209, $i210, $i211, $i212, $i213, $i214, $i215, $i216, $i217, $i218, $i219, $i220, i221, $i222, $i223, $i224, i225, i226, i227, i228, i229, i230, i231, i232, i233, $i234, $i235, $i236, $i237, $i238, $i239, $i240, $i242, $i244, $i246, $i248, $i250, $i252, $i254, $i256, $i258, $i260;
        java.io.PrintStream $r47;
        java.lang.String $r11, $r12, $r13, $r16, $r17, $r30, $r36, $r40, $r42, $r43, $r44, $r45, $r50, $r51, $r54, $r55, $r59, $r80, $r81, $r82, r85, $r86, $r90, r92, $r97;
        java.awt.FontMetrics $r62, $r70, r71, r84;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, z28, z29, $z30, z32, z33, z34, z35, z36, z38, $z39, $z40, $z41, z43, z44, z45, $z46, $z47, $z48, $z49, $z50, $z51;
        java.awt.Font $r41, $r52, $r61, $r68, r69, $r77, $r83, $r94;
        java.util.List $r6, $r14, $r15, $r31, $r53, $r56, $r72, $r73, $r79;
        java.awt.Graphics r10;
        java.awt.Rectangle $r99, $r100, $r101, $r102, $r103, $r104, $r105, $r106, $r107;
        double $d0, $d1, $d2, $d3;
        byte $b179, $b180;
        java.lang.StringBuilder $r48, $r49, $r98;
        java.awt.Stroke $r19, $r20, $r21, $r26;
        javax.swing.LookAndFeel $r3;
        java.awt.ComponentOrientation $r5, $r63, $r65, $r66;
        com.jidesoft.plaf.basic.BasicStyledLabelUI r4;
        com.jidesoft.swing.StyledLabel r0;
        com.jidesoft.plaf.basic.BasicStyledLabelUI$StyledText r8, r75, r78, r91;
        java.lang.Object $r7, $r32, $r58, $r60;
        java.lang.Throwable $r67;
        javax.swing.Icon $r2, $r64;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;
        java.util.Iterator $r57, $r74;
        char $c115;

        r4 := @this: com.jidesoft.plaf.basic.BasicStyledLabelUI;

        r0 := @parameter0: com.jidesoft.swing.StyledLabel;

        r10 := @parameter1: java.awt.Graphics;

        i1 := @parameter2: int;

        i164 := @parameter3: int;

        i2 := @parameter4: int;

        $i0 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: int getHeight()>();

        i165 = $i0;

        if $i0 > 0 goto label001;

        i165 = 2147483647;

     label001:
        $r1 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: java.awt.Insets getInsets()>();

        if $r1 == null goto label002;

        $i162 = $r1.<java.awt.Insets: int top>;

        $i161 = $r1.<java.awt.Insets: int bottom>;

        $i163 = $i162 + $i161;

        i165 = i165 - $i163;

     label002:
        i166 = 0;

        if $r1 == null goto label003;

        $i160 = $r1.<java.awt.Insets: int left>;

        i166 = 0 + $i160;

     label003:
        $r2 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: javax.swing.Icon getIcon()>();

        if $r2 == null goto label007;

        $i156 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: int getHorizontalTextPosition()>();

        i167 = $i156;

        if $i156 != 11 goto label004;

        $r66 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: java.awt.ComponentOrientation getComponentOrientation()>();

        $z26 = virtualinvoke $r66.<java.awt.ComponentOrientation: boolean isLeftToRight()>();

        if $z26 != 0 goto label005;

     label004:
        if $i156 != 10 goto label006;

        $r65 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: java.awt.ComponentOrientation getComponentOrientation()>();

        $z25 = virtualinvoke $r65.<java.awt.ComponentOrientation: boolean isLeftToRight()>();

        if $z25 != 0 goto label006;

     label005:
        i167 = 4;

     label006:
        if i167 != 4 goto label007;

        $r64 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: javax.swing.Icon getIcon()>();

        $i157 = interfaceinvoke $r64.<javax.swing.Icon: int getIconWidth()>();

        $i158 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: int getIconTextGap()>();

        $i159 = $i157 + $i158;

        i166 = i166 + $i159;

     label007:
        if i1 >= i166 goto label008;

        $i168 = i166;

        goto label009;

     label008:
        $i168 = i1;

     label009:
        i169 = $i168;

        $i155 = i2 + $i168;

        i170 = $i168;

        i171 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: int getDisplayedMnemonicIndex()>();

        $r3 = staticinvoke <javax.swing.UIManager: javax.swing.LookAndFeel getLookAndFeel()>();

        $z0 = $r3 instanceof com.sun.java.swing.plaf.windows.WindowsLookAndFeel;

        if $z0 == 0 goto label010;

        $z24 = staticinvoke <com.sun.java.swing.plaf.windows.WindowsLookAndFeel: boolean isMnemonicHidden()>();

        if $z24 == 0 goto label010;

        $i242 = (int) -1;

        i171 = $i242;

     label010:
        i172 = 0;

        i173 = 0;

        $r68 = virtualinvoke r4.<com.jidesoft.plaf.basic.BasicStyledLabelUI: java.awt.Font getFont(com.jidesoft.swing.StyledLabel)>(r0);

        r69 = $r68;

        $r70 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: java.awt.FontMetrics getFontMetrics(java.awt.Font)>($r68);

        r71 = null;

        $i174 = virtualinvoke $r68.<java.awt.Font: int getSize()>();

        $r72 = r4.<com.jidesoft.plaf.basic.BasicStyledLabelUI: java.util.List _styledTexts>;

        entermonitor $r72;

     label011:
        i175 = virtualinvoke $r70.<java.awt.FontMetrics: int getHeight()>();

        i176 = virtualinvoke $r70.<java.awt.FontMetrics: int getAscent()>();

        $i177 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: int getHorizontalAlignment()>();

        i178 = $i177;

        lookupswitch($i177)
        {
            case 10: goto label012;
            case 11: goto label015;
            default: goto label018;
        };

     label012:
        $r63 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: java.awt.ComponentOrientation getComponentOrientation()>();

        $z23 = virtualinvoke $r63.<java.awt.ComponentOrientation: boolean isLeftToRight()>();

        if $z23 == 0 goto label013;

        $b179 = 2;

        goto label014;

     label013:
        $b179 = 4;

     label014:
        i178 = $b179;

        goto label018;

     label015:
        $r5 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: java.awt.ComponentOrientation getComponentOrientation()>();

        $z1 = virtualinvoke $r5.<java.awt.ComponentOrientation: boolean isLeftToRight()>();

        if $z1 == 0 goto label016;

        $b180 = 4;

        goto label017;

     label016:
        $b180 = 2;

     label017:
        i178 = $b180;

     label018:
        $r73 = r4.<com.jidesoft.plaf.basic.BasicStyledLabelUI: java.util.List _styledTexts>;

        $r74 = interfaceinvoke $r73.<java.util.List: java.util.Iterator iterator()>();

     label019:
        $z27 = interfaceinvoke $r74.<java.util.Iterator: boolean hasNext()>();

        if $z27 == 0 goto label028;

        $r60 = interfaceinvoke $r74.<java.util.Iterator: java.lang.Object next()>();

        r75 = (com.jidesoft.plaf.basic.BasicStyledLabelUI$StyledText) $r60;

        r76 = r75.<com.jidesoft.plaf.basic.BasicStyledLabelUI$StyledText: com.jidesoft.swing.StyleRange styleRange>;

        if r76 == null goto label021;

        $z21 = virtualinvoke r76.<com.jidesoft.swing.StyleRange: boolean isSuperscript()>();

        if $z21 != 0 goto label020;

        $z22 = virtualinvoke r76.<com.jidesoft.swing.StyleRange: boolean isSubscript()>();

        if $z22 == 0 goto label021;

     label020:
        $f6 = (float) $i174;

        $f7 = virtualinvoke r76.<com.jidesoft.swing.StyleRange: float getFontShrinkRatio()>();

        $f8 = $f6 / $f7;

        $i181 = staticinvoke <java.lang.Math: int round(float)>($f8);

        goto label022;

     label021:
        $i181 = $i174;

     label022:
        i182 = $i181;

        $r77 = virtualinvoke r4.<com.jidesoft.plaf.basic.BasicStyledLabelUI: java.awt.Font getFont(com.jidesoft.swing.StyledLabel)>(r0);

        r69 = $r77;

        if r76 == null goto label027;

        $i148 = virtualinvoke r76.<com.jidesoft.swing.StyleRange: int getFontStyle()>();

        $i244 = (int) -1;

        if $i148 == $i244 goto label023;

        $i153 = virtualinvoke $r77.<java.awt.Font: int getStyle()>();

        $i154 = virtualinvoke r76.<com.jidesoft.swing.StyleRange: int getFontStyle()>();

        if $i153 != $i154 goto label024;

     label023:
        $i149 = virtualinvoke $r77.<java.awt.Font: int getSize()>();

        if $i149 == i182 goto label027;

     label024:
        $i150 = virtualinvoke r76.<com.jidesoft.swing.StyleRange: int getFontStyle()>();

        $i246 = (int) -1;

        if $i150 != $i246 goto label025;

        $i183 = virtualinvoke $r77.<java.awt.Font: int getStyle()>();

        goto label026;

     label025:
        $i183 = virtualinvoke r76.<com.jidesoft.swing.StyleRange: int getFontStyle()>();

     label026:
        $r61 = staticinvoke <com.jidesoft.swing.FontUtils: java.awt.Font getCachedDerivedFont(java.awt.Font,int,int)>($r77, $i183, i182);

        r69 = $r61;

        $r62 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: java.awt.FontMetrics getFontMetrics(java.awt.Font)>($r61);

        $i151 = virtualinvoke $r62.<java.awt.FontMetrics: int getHeight()>();

        i175 = staticinvoke <java.lang.Math: int max(int,int)>(i175, $i151);

        $i152 = virtualinvoke $r62.<java.awt.FontMetrics: int getAscent()>();

        i176 = staticinvoke <java.lang.Math: int max(int,int)>(i176, $i152);

     label027:
        goto label019;

     label028:
        $z2 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: boolean isLineWrap()>();

        z28 = $z2;

        if $z2 != 0 goto label031;

        $r56 = r4.<com.jidesoft.plaf.basic.BasicStyledLabelUI: java.util.List _styledTexts>;

        $r57 = interfaceinvoke $r56.<java.util.List: java.util.Iterator iterator()>();

     label029:
        $z19 = interfaceinvoke $r57.<java.util.Iterator: boolean hasNext()>();

        if $z19 == 0 goto label031;

        $r58 = interfaceinvoke $r57.<java.util.Iterator: java.lang.Object next()>();

        r78 = (com.jidesoft.plaf.basic.BasicStyledLabelUI$StyledText) $r58;

        $r59 = r78.<com.jidesoft.plaf.basic.BasicStyledLabelUI$StyledText: java.lang.String text>;

        $z20 = virtualinvoke $r59.<java.lang.String: boolean endsWith(java.lang.String)>("\n");

        if $z20 == 0 goto label030;

        z28 = 1;

        goto label031;

     label030:
        goto label029;

     label031:
        if z28 == 0 goto label032;

        if i164 >= i176 goto label032;

        i164 = i176;

     label032:
        i184 = 0;

        i185 = 0;

        i186 = 0;

        i187 = 0;

     label033:
        $r79 = r4.<com.jidesoft.plaf.basic.BasicStyledLabelUI: java.util.List _styledTexts>;

        $i188 = interfaceinvoke $r79.<java.util.List: int size()>();

        if i187 >= $i188 goto label127;

        $r6 = r4.<com.jidesoft.plaf.basic.BasicStyledLabelUI: java.util.List _styledTexts>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i187);

        r8 = (com.jidesoft.plaf.basic.BasicStyledLabelUI$StyledText) $r7;

        r9 = r8.<com.jidesoft.plaf.basic.BasicStyledLabelUI$StyledText: com.jidesoft.swing.StyleRange styleRange>;

        if i171 < 0 goto label034;

        $r55 = r8.<com.jidesoft.plaf.basic.BasicStyledLabelUI$StyledText: java.lang.String text>;

        $i145 = virtualinvoke $r55.<java.lang.String: int length()>();

        $i147 = $i145 - i184;

        $i146 = i171 - i172;

        if $i147 <= $i146 goto label034;

        z29 = 1;

        z45 = 1;

        z44 = 1;

        i173 = i171 - i172;

        goto label035;

     label034:
        z29 = 0;

        z45 = 0;

        z44 = 0;

     label035:
        $r80 = r8.<com.jidesoft.plaf.basic.BasicStyledLabelUI$StyledText: java.lang.String text>;

        $i189 = virtualinvoke $r80.<java.lang.String: int length()>();

        $i190 = $i189 - i184;

        $i191 = i172 + $i190;

        i172 = $i191;

        $r81 = r8.<com.jidesoft.plaf.basic.BasicStyledLabelUI$StyledText: java.lang.String text>;

        $z30 = virtualinvoke $r81.<java.lang.String: boolean contains(java.lang.CharSequence)>("\r");

        if $z30 != 0 goto label036;

        $r54 = r8.<com.jidesoft.plaf.basic.BasicStyledLabelUI$StyledText: java.lang.String text>;

        $z18 = virtualinvoke $r54.<java.lang.String: boolean contains(java.lang.CharSequence)>("\n");

        if $z18 == 0 goto label044;

     label036:
        $i3 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: int getMaxRows()>();

        if $i3 <= 0 goto label037;

        $i143 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: int getMaxRows()>();

        $i144 = $i143 - 1;

        if i185 >= $i144 goto label038;

     label037:
        $i4 = i164 + i175;

        $i5 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: int getRowGap()>();

        $i6 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i5);

        $i7 = $i4 + $i6;

        if $i7 <= i165 goto label039;

     label038:
        $z49 = 1;

        $z48 = 1;

        goto label040;

     label039:
        $z49 = 0;

        $z48 = 0;

     label040:
        z32 = $z48;

        if i178 == 2 goto label042;

        if r10 == null goto label042;

        if $z49 == 0 goto label041;

        $r53 = r4.<com.jidesoft.plaf.basic.BasicStyledLabelUI: java.util.List _styledTexts>;

        $i140 = interfaceinvoke $r53.<java.util.List: int size()>();

        $i141 = $i140 - 1;

        if i187 == $i141 goto label041;

        $i142 = virtualinvoke $r70.<java.awt.FontMetrics: int stringWidth(java.lang.String)>("...");

        i170 = i170 + $i142;

     label041:
        $i192 = virtualinvoke r9.<com.jidesoft.swing.StyleRange: int getStart()>();

        $r82 = r8.<com.jidesoft.plaf.basic.BasicStyledLabelUI$StyledText: java.lang.String text>;

        $i193 = virtualinvoke $r82.<java.lang.String: int length()>();

        $i194 = $i192 + $i193;

        specialinvoke r4.<com.jidesoft.plaf.basic.BasicStyledLabelUI: void paintRow(com.jidesoft.swing.StyledLabel,java.awt.Graphics,int,int,int,int,int,int,boolean)>(r0, r10, i169, i170, $i155, i164, i186, $i194, z32);

     label042:
        $i195 = virtualinvoke r9.<com.jidesoft.swing.StyleRange: int getStart()>();

        i186 = $i195;

        i184 = 0;

        r71 = null;

        if z32 != 0 goto label043;

        $i136 = virtualinvoke r9.<com.jidesoft.swing.StyleRange: int getLength()>();

        i186 = $i195 + $i136;

        i185 = i185 + 1;

        i170 = i169;

        $i137 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: int getRowGap()>();

        $i138 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i137);

        $i139 = i175 + $i138;

        i164 = i164 + $i139;

        goto label126;

     label043:
        if i178 == 2 goto label044;

        if r10 == null goto label044;

        goto label127;

     label044:
        i196 = i164;

        if r71 != null goto label054;

        if r9 == null goto label046;

        $z16 = virtualinvoke r9.<com.jidesoft.swing.StyleRange: boolean isSuperscript()>();

        if $z16 != 0 goto label045;

        $z17 = virtualinvoke r9.<com.jidesoft.swing.StyleRange: boolean isSubscript()>();

        if $z17 == 0 goto label046;

     label045:
        $f3 = (float) $i174;

        $f4 = virtualinvoke r9.<com.jidesoft.swing.StyleRange: float getFontShrinkRatio()>();

        $f5 = $f3 / $f4;

        $i197 = staticinvoke <java.lang.Math: int round(float)>($f5);

        goto label047;

     label046:
        $i197 = $i174;

     label047:
        i198 = $i197;

        $r83 = virtualinvoke r4.<com.jidesoft.plaf.basic.BasicStyledLabelUI: java.awt.Font getFont(com.jidesoft.swing.StyledLabel)>(r0);

        r69 = $r83;

        if r9 == null goto label052;

        $i131 = virtualinvoke r9.<com.jidesoft.swing.StyleRange: int getFontStyle()>();

        $i248 = (int) -1;

        if $i131 == $i248 goto label048;

        $i134 = virtualinvoke $r83.<java.awt.Font: int getStyle()>();

        $i135 = virtualinvoke r9.<com.jidesoft.swing.StyleRange: int getFontStyle()>();

        if $i134 != $i135 goto label049;

     label048:
        $i132 = virtualinvoke $r83.<java.awt.Font: int getSize()>();

        if $i132 == i198 goto label052;

     label049:
        $i133 = virtualinvoke r9.<com.jidesoft.swing.StyleRange: int getFontStyle()>();

        $i250 = (int) -1;

        if $i133 != $i250 goto label050;

        $i199 = virtualinvoke $r83.<java.awt.Font: int getStyle()>();

        goto label051;

     label050:
        $i199 = virtualinvoke r9.<com.jidesoft.swing.StyleRange: int getFontStyle()>();

     label051:
        $r52 = staticinvoke <com.jidesoft.swing.FontUtils: java.awt.Font getCachedDerivedFont(java.awt.Font,int,int)>($r83, $i199, i198);

        r69 = $r52;

        r84 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: java.awt.FontMetrics getFontMetrics(java.awt.Font)>($r52);

        goto label053;

     label052:
        r84 = $r70;

     label053:
        goto label055;

     label054:
        r84 = r71;

     label055:
        if r10 == null goto label056;

        virtualinvoke r10.<java.awt.Graphics: void setFont(java.awt.Font)>(r69);

     label056:
        z33 = 0;

        $r12 = r8.<com.jidesoft.plaf.basic.BasicStyledLabelUI$StyledText: java.lang.String text>;

        $r11 = r8.<com.jidesoft.plaf.basic.BasicStyledLabelUI$StyledText: java.lang.String text>;

        $i8 = virtualinvoke $r11.<java.lang.String: int length()>();

        $i9 = staticinvoke <java.lang.Math: int min(int,int)>(i184, $i8);

        $r13 = virtualinvoke $r12.<java.lang.String: java.lang.String substring(int)>($i9);

        r85 = $r13;

        $z3 = virtualinvoke $r13.<java.lang.String: boolean contains(java.lang.CharSequence)>("\r");

        if $z3 != 0 goto label057;

        $z15 = virtualinvoke $r13.<java.lang.String: boolean contains(java.lang.CharSequence)>("\n");

        if $z15 == 0 goto label058;

     label057:
        r85 = "...";

        z33 = 1;

     label058:
        $i200 = virtualinvoke r84.<java.awt.FontMetrics: int stringWidth(java.lang.String)>(r85);

        i201 = $i200;

        z34 = 0;

        $i202 = $i155 - i170;

        if $i202 >= $i200 goto label084;

        if $i202 < 0 goto label084;

        $z14 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: boolean isLineWrap()>();

        if $z14 == 0 goto label079;

        $i93 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: int getMaxRows()>();

        if $i93 <= 0 goto label059;

        $i129 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: int getMaxRows()>();

        $i130 = $i129 - 1;

        if i185 < $i130 goto label060;

     label059:
        $i94 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: int getMaxRows()>();

        if $i94 > 0 goto label079;

     label060:
        $i95 = i196 + i175;

        $i96 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: int getRowGap()>();

        $i97 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i96);

        $i98 = $i95 + $i97;

        if $i98 > i165 goto label079;

        z34 = 1;

        $i99 = virtualinvoke r85.<java.lang.String: int length()>();

        $i100 = $i99 * $i202;

        $i101 = $i100 / $i200;

        i203 = $i101 + 1;

        i204 = 0;

        z35 = 0;

        z36 = 0;

        i205 = 0;

     label061:
        $i102 = virtualinvoke r85.<java.lang.String: int length()>();

        $i103 = staticinvoke <java.lang.Math: int min(int,int)>(i203, $i102);

        $i104 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i103);

        $r42 = virtualinvoke r85.<java.lang.String: java.lang.String substring(int,int)>(0, $i104);

        $i105 = specialinvoke r4.<com.jidesoft.plaf.basic.BasicStyledLabelUI: int findFirstRowWordEndIndex(java.lang.String)>($r42);

        i206 = $i105;

        if $i105 >= 0 goto label062;

        $i207 = 0;

        goto label063;

     label062:
        $i207 = specialinvoke r4.<com.jidesoft.plaf.basic.BasicStyledLabelUI: int findNextWordStartIndex(java.lang.String,int)>(r85, $i105);

     label063:
        i208 = $i207;

        if $i105 >= 0 goto label069;

        if i170 == i169 goto label068;

        $i122 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: int getMaxRows()>();

        if $i122 <= 0 goto label064;

        $i127 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: int getMaxRows()>();

        $i128 = $i127 - 1;

        if i185 < $i128 goto label064;

        $z47 = 1;

        $z46 = 1;

        goto label065;

     label064:
        $z47 = 0;

        $z46 = 0;

     label065:
        z38 = $z46;

        if i178 == 2 goto label066;

        if r10 == null goto label066;

        $i123 = virtualinvoke r9.<com.jidesoft.swing.StyleRange: int getStart()>();

        $r51 = r8.<com.jidesoft.plaf.basic.BasicStyledLabelUI$StyledText: java.lang.String text>;

        $i124 = virtualinvoke $r51.<java.lang.String: int length()>();

        $i125 = staticinvoke <java.lang.Math: int min(int,int)>(i184, $i124);

        $i126 = $i123 + $i125;

        specialinvoke r4.<com.jidesoft.plaf.basic.BasicStyledLabelUI: void paintRow(com.jidesoft.swing.StyledLabel,java.awt.Graphics,int,int,int,int,int,int,boolean)>(r0, r10, i169, i170, $i155, i164, i186, $i126, $z47);

     label066:
        $i209 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: int getRowGap()>();

        $i210 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i209);

        $i211 = i175 + $i210;

        i164 = i164 + $i211;

        i170 = i169;

        $i252 = (int) -1;

        i187 = i187 + $i252;

        i185 = i185 + 1;

        $i212 = virtualinvoke r9.<com.jidesoft.swing.StyleRange: int getStart()>();

        $r86 = r8.<com.jidesoft.plaf.basic.BasicStyledLabelUI$StyledText: java.lang.String text>;

        $i213 = virtualinvoke $r86.<java.lang.String: int length()>();

        $i214 = staticinvoke <java.lang.Math: int min(int,int)>(i184, $i213);

        i186 = $i212 + $i214;

        if z38 == 0 goto label067;

        z35 = 1;

     label067:
        z36 = 1;

        goto label072;

     label068:
        i206 = 0;

        $i120 = virtualinvoke r85.<java.lang.String: int length()>();

        i208 = staticinvoke <java.lang.Math: int min(int,int)>($i120, i203);

     label069:
        $i121 = i206 + 1;

        i204 = $i121;

        $i106 = virtualinvoke r85.<java.lang.String: int length()>();

        $i107 = staticinvoke <java.lang.Math: int min(int,int)>($i121, $i106);

        $r43 = virtualinvoke r85.<java.lang.String: java.lang.String substring(int,int)>(0, $i107);

        $i108 = virtualinvoke r84.<java.awt.FontMetrics: int stringWidth(java.lang.String)>($r43);

        i201 = $i108;

        if $i108 <= $i202 goto label070;

        $i118 = virtualinvoke $r42.<java.lang.String: int length()>();

        $i119 = $i118 * $i202;

        i203 = $i119 / $i108;

     label070:
        i205 = i205 + 1;

        if i205 <= 15 goto label071;

        $r47 = <java.lang.System: java.io.PrintStream err>;

        $r98 = new java.lang.StringBuilder;

        specialinvoke $r98.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Painting Styled Label Error: ");

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r47.<java.io.PrintStream: void println(java.lang.String)>($r50);

        goto label072;

     label071:
        if $i108 <= $i202 goto label072;

        if i203 > 0 goto label061;

     label072:
        if z35 == 0 goto label073;

        goto label127;

     label073:
        if z36 == 0 goto label074;

        goto label126;

     label074:
        if i204 >= i208 goto label076;

        $c115 = virtualinvoke r85.<java.lang.String: char charAt(int)>(i204);

        $i116 = virtualinvoke r84.<java.awt.FontMetrics: int charWidth(char)>($c115);

        i201 = i201 + $i116;

        if i201 < $i202 goto label075;

        goto label076;

     label075:
        i204 = i204 + 1;

        goto label074;

     label076:
        $i109 = virtualinvoke r85.<java.lang.String: int length()>();

        $i110 = staticinvoke <java.lang.Math: int min(int,int)>(i204, $i109);

        $r44 = virtualinvoke r85.<java.lang.String: java.lang.String substring(int,int)>(0, $i110);

        r85 = $r44;

        i201 = virtualinvoke r84.<java.awt.FontMetrics: int stringWidth(java.lang.String)>($r44);

        $r45 = r8.<com.jidesoft.plaf.basic.BasicStyledLabelUI$StyledText: java.lang.String text>;

        $i111 = virtualinvoke $r45.<java.lang.String: int length()>();

        $i112 = $i111 - i184;

        $i117 = $i191 - $i112;

        if z44 == 0 goto label078;

        if i171 < 0 goto label077;

        $i113 = virtualinvoke $r44.<java.lang.String: int length()>();

        $i114 = i171 - $i117;

        if $i113 <= $i114 goto label077;

        z29 = 1;

        z45 = 1;

        i173 = i171 - $i117;

        goto label078;

     label077:
        z29 = 0;

        z45 = 0;

     label078:
        $i215 = virtualinvoke $r44.<java.lang.String: int length()>();

        i172 = $i117 + $i215;

        i184 = i184 + i204;

        goto label080;

     label079:
        $i216 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: int getVerticalAlignment()>();

        $i217 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: int getHorizontalAlignment()>();

        $i218 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: int getVerticalTextPosition()>();

        $i219 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: int getHorizontalTextPosition()>();

        $r99 = new java.awt.Rectangle;

        specialinvoke $r99.<java.awt.Rectangle: void <init>(int,int,int,int)>(i170, i196, $i202, i165);

        $r100 = new java.awt.Rectangle;

        specialinvoke $r100.<java.awt.Rectangle: void <init>()>();

        $r101 = new java.awt.Rectangle;

        specialinvoke $r101.<java.awt.Rectangle: void <init>()>();

        $r90 = staticinvoke <javax.swing.SwingUtilities: java.lang.String layoutCompoundLabel(javax.swing.JComponent,java.awt.FontMetrics,java.lang.String,javax.swing.Icon,int,int,int,int,java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle,int)>(r0, r84, r85, null, $i216, $i217, $i218, $i219, $r99, $r100, $r101, 0);

        r85 = $r90;

        i201 = virtualinvoke r84.<java.awt.FontMetrics: int stringWidth(java.lang.String)>($r90);

     label080:
        if z28 == 0 goto label081;

        $i86 = i196 + i175;

        $i87 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: int getRowGap()>();

        $i88 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i87);

        $i89 = $i86 + $i88;

        if $i89 > i165 goto label081;

        $i90 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: int getMaxRows()>();

        if $i90 <= 0 goto label082;

        $i91 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: int getMaxRows()>();

        $i92 = $i91 - 1;

        if i185 < $i92 goto label082;

     label081:
        $z39 = 1;

        goto label083;

     label082:
        $z39 = 0;

     label083:
        z33 = $z39;

        goto label095;

     label084:
        if z28 == 0 goto label085;

        i184 = 0;

        goto label095;

     label085:
        $r14 = r4.<com.jidesoft.plaf.basic.BasicStyledLabelUI: java.util.List _styledTexts>;

        $i10 = interfaceinvoke $r14.<java.util.List: int size()>();

        $i11 = $i10 - 1;

        if i187 >= $i11 goto label095;

        $r31 = r4.<com.jidesoft.plaf.basic.BasicStyledLabelUI: java.util.List _styledTexts>;

        $i67 = i187 + 1;

        $r32 = interfaceinvoke $r31.<java.util.List: java.lang.Object get(int)>($i67);

        r91 = (com.jidesoft.plaf.basic.BasicStyledLabelUI$StyledText) $r32;

        r92 = r91.<com.jidesoft.plaf.basic.BasicStyledLabelUI$StyledText: java.lang.String text>;

        r93 = r91.<com.jidesoft.plaf.basic.BasicStyledLabelUI$StyledText: com.jidesoft.swing.StyleRange styleRange>;

        if r93 == null goto label087;

        $z12 = virtualinvoke r93.<com.jidesoft.swing.StyleRange: boolean isSuperscript()>();

        if $z12 != 0 goto label086;

        $z13 = virtualinvoke r93.<com.jidesoft.swing.StyleRange: boolean isSubscript()>();

        if $z13 == 0 goto label087;

     label086:
        $f0 = (float) $i174;

        $f1 = virtualinvoke r93.<com.jidesoft.swing.StyleRange: float getFontShrinkRatio()>();

        $f2 = $f0 / $f1;

        $i220 = staticinvoke <java.lang.Math: int round(float)>($f2);

        goto label088;

     label087:
        $i220 = $i174;

     label088:
        i221 = $i220;

        $r94 = virtualinvoke r4.<com.jidesoft.plaf.basic.BasicStyledLabelUI: java.awt.Font getFont(com.jidesoft.swing.StyledLabel)>(r0);

        r69 = $r94;

        if r93 == null goto label093;

        $i81 = virtualinvoke r93.<com.jidesoft.swing.StyleRange: int getFontStyle()>();

        $i254 = (int) -1;

        if $i81 == $i254 goto label089;

        $i84 = virtualinvoke $r94.<java.awt.Font: int getStyle()>();

        $i85 = virtualinvoke r93.<com.jidesoft.swing.StyleRange: int getFontStyle()>();

        if $i84 != $i85 goto label090;

     label089:
        $i82 = virtualinvoke $r94.<java.awt.Font: int getSize()>();

        if $i82 == i221 goto label093;

     label090:
        $i83 = virtualinvoke r93.<com.jidesoft.swing.StyleRange: int getFontStyle()>();

        $i256 = (int) -1;

        if $i83 != $i256 goto label091;

        $i222 = virtualinvoke $r94.<java.awt.Font: int getStyle()>();

        goto label092;

     label091:
        $i222 = virtualinvoke r93.<com.jidesoft.swing.StyleRange: int getFontStyle()>();

     label092:
        $r41 = staticinvoke <com.jidesoft.swing.FontUtils: java.awt.Font getCachedDerivedFont(java.awt.Font,int,int)>($r94, $i222, i221);

        r69 = $r41;

        r71 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: java.awt.FontMetrics getFontMetrics(java.awt.Font)>($r41);

        goto label094;

     label093:
        r71 = $r70;

     label094:
        $i223 = virtualinvoke r71.<java.awt.FontMetrics: int stringWidth(java.lang.String)>(r92);

        $i224 = $i202 - $i200;

        if $i223 <= $i224 goto label095;

        $i68 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: int getVerticalAlignment()>();

        $i69 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: int getHorizontalAlignment()>();

        $i70 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: int getVerticalTextPosition()>();

        $i71 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: int getHorizontalTextPosition()>();

        $r102 = new java.awt.Rectangle;

        $i73 = i170 + $i200;

        $i72 = $i202 - $i200;

        specialinvoke $r102.<java.awt.Rectangle: void <init>(int,int,int,int)>($i73, i196, $i72, i165);

        $r103 = new java.awt.Rectangle;

        specialinvoke $r103.<java.awt.Rectangle: void <init>()>();

        $r104 = new java.awt.Rectangle;

        specialinvoke $r104.<java.awt.Rectangle: void <init>()>();

        $r36 = staticinvoke <javax.swing.SwingUtilities: java.lang.String layoutCompoundLabel(javax.swing.JComponent,java.awt.FontMetrics,java.lang.String,javax.swing.Icon,int,int,int,int,java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle,int)>(r0, r71, r92, null, $i68, $i69, $i70, $i71, $r102, $r103, $r104, 0);

        $i74 = virtualinvoke r71.<java.awt.FontMetrics: int stringWidth(java.lang.String)>($r36);

        $i75 = $i202 - $i200;

        if $i74 <= $i75 goto label095;

        $i76 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: int getVerticalAlignment()>();

        $i77 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: int getHorizontalAlignment()>();

        $i78 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: int getVerticalTextPosition()>();

        $i79 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: int getHorizontalTextPosition()>();

        $r105 = new java.awt.Rectangle;

        $i80 = $i200 - 1;

        specialinvoke $r105.<java.awt.Rectangle: void <init>(int,int,int,int)>(i170, i196, $i80, i165);

        $r106 = new java.awt.Rectangle;

        specialinvoke $r106.<java.awt.Rectangle: void <init>()>();

        $r107 = new java.awt.Rectangle;

        specialinvoke $r107.<java.awt.Rectangle: void <init>()>();

        $r40 = staticinvoke <javax.swing.SwingUtilities: java.lang.String layoutCompoundLabel(javax.swing.JComponent,java.awt.FontMetrics,java.lang.String,javax.swing.Icon,int,int,int,int,java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle,int)>(r0, r84, r85, null, $i76, $i77, $i78, $i79, $r105, $r106, $r107, 0);

        r85 = $r40;

        i201 = virtualinvoke r84.<java.awt.FontMetrics: int stringWidth(java.lang.String)>($r40);

        z33 = 1;

     label095:
        if i185 <= 0 goto label096;

        if i170 != i169 goto label096;

        $z11 = virtualinvoke r85.<java.lang.String: boolean startsWith(java.lang.String)>(" ");

        if $z11 == 0 goto label096;

        $r30 = virtualinvoke r85.<java.lang.String: java.lang.String substring(int)>(1);

        r85 = $r30;

        i201 = virtualinvoke r84.<java.awt.FontMetrics: int stringWidth(java.lang.String)>($r30);

     label096:
        if i178 != 2 goto label115;

        if r10 == null goto label115;

        if r9 == null goto label097;

        $z10 = virtualinvoke r9.<com.jidesoft.swing.StyleRange: boolean isSuperscript()>();

        if $z10 == 0 goto label097;

        $i64 = virtualinvoke $r70.<java.awt.FontMetrics: int getHeight()>();

        $i65 = virtualinvoke r84.<java.awt.FontMetrics: int getHeight()>();

        $i66 = $i64 - $i65;

        i196 = i196 - $i66;

     label097:
        if r9 == null goto label098;

        $r28 = virtualinvoke r9.<com.jidesoft.swing.StyleRange: java.awt.Color getBackgroundColor()>();

        if $r28 == null goto label098;

        $r29 = virtualinvoke r9.<com.jidesoft.swing.StyleRange: java.awt.Color getBackgroundColor()>();

        virtualinvoke r10.<java.awt.Graphics: void setColor(java.awt.Color)>($r29);

        $i60 = virtualinvoke r84.<java.awt.FontMetrics: int getHeight()>();

        $i61 = i196 - $i60;

        $i62 = virtualinvoke r84.<java.awt.FontMetrics: int getHeight()>();

        $i63 = $i62 + 4;

        virtualinvoke r10.<java.awt.Graphics: void fillRect(int,int,int,int)>(i170, $i61, i201, $i63);

     label098:
        if r9 == null goto label099;

        $z9 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: boolean isIgnoreColorSettings()>();

        if $z9 != 0 goto label099;

        $r27 = virtualinvoke r9.<com.jidesoft.swing.StyleRange: java.awt.Color getFontColor()>();

        if $r27 == null goto label099;

        $r95 = virtualinvoke r9.<com.jidesoft.swing.StyleRange: java.awt.Color getFontColor()>();

        goto label100;

     label099:
        $r95 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: java.awt.Color getForeground()>();

     label100:
        r96 = $r95;

        $z40 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: boolean isEnabled()>();

        if $z40 != 0 goto label101;

        r96 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("Label.disabledForeground");

     label101:
        virtualinvoke r10.<java.awt.Graphics: void setColor(java.awt.Color)>(r96);

        if z45 == 0 goto label102;

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void drawStringUnderlineCharAt(javax.swing.JComponent,java.awt.Graphics,java.lang.String,int,int,int)>(r0, r10, r85, i173, i170, i196);

        goto label103;

     label102:
        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void drawString(javax.swing.JComponent,java.awt.Graphics,java.lang.String,int,int)>(r0, r10, r85, i170, i196);

     label103:
        if r9 == null goto label115;

        $r18 = (java.awt.Graphics2D) r10;

        $r19 = virtualinvoke $r18.<java.awt.Graphics2D: java.awt.Stroke getStroke()>();

        $r20 = virtualinvoke r9.<com.jidesoft.swing.StyleRange: java.awt.Stroke getLineStroke()>();

        if $r20 == null goto label104;

        $r25 = (java.awt.Graphics2D) r10;

        $r26 = virtualinvoke r9.<com.jidesoft.swing.StyleRange: java.awt.Stroke getLineStroke()>();

        virtualinvoke $r25.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r26);

     label104:
        $z4 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: boolean isIgnoreColorSettings()>();

        if $z4 != 0 goto label105;

        $r23 = virtualinvoke r9.<com.jidesoft.swing.StyleRange: java.awt.Color getLineColor()>();

        if $r23 == null goto label105;

        $r24 = virtualinvoke r9.<com.jidesoft.swing.StyleRange: java.awt.Color getLineColor()>();

        virtualinvoke r10.<java.awt.Graphics: void setColor(java.awt.Color)>($r24);

     label105:
        $z41 = virtualinvoke r9.<com.jidesoft.swing.StyleRange: boolean isStrikethrough()>();

        if $z41 == 0 goto label106;

        $i54 = virtualinvoke r84.<java.awt.FontMetrics: int getDescent()>();

        $i55 = virtualinvoke r84.<java.awt.FontMetrics: int getAscent()>();

        $i56 = $i54 - $i55;

        $i57 = $i56 / 2;

        i225 = i196 + $i57;

        $i58 = i170 + i201;

        $i59 = $i58 - 1;

        virtualinvoke r10.<java.awt.Graphics: void drawLine(int,int,int,int)>(i170, i225, $i59, i225);

     label106:
        $z5 = virtualinvoke r9.<com.jidesoft.swing.StyleRange: boolean isDoublestrikethrough()>();

        if $z5 == 0 goto label107;

        $i42 = virtualinvoke r84.<java.awt.FontMetrics: int getDescent()>();

        $i43 = virtualinvoke r84.<java.awt.FontMetrics: int getAscent()>();

        $i44 = $i42 - $i43;

        $i45 = $i44 / 2;

        i226 = i196 + $i45;

        $i49 = i226 - 1;

        $i46 = i170 + i201;

        $i48 = $i46 - 1;

        $i47 = i226 - 1;

        virtualinvoke r10.<java.awt.Graphics: void drawLine(int,int,int,int)>(i170, $i49, $i48, $i47);

        $i53 = i226 + 1;

        $i50 = i170 + i201;

        $i52 = $i50 - 1;

        $i51 = i226 + 1;

        virtualinvoke r10.<java.awt.Graphics: void drawLine(int,int,int,int)>(i170, $i53, $i52, $i51);

     label107:
        $z6 = virtualinvoke r9.<com.jidesoft.swing.StyleRange: boolean isUnderlined()>();

        if $z6 == 0 goto label108;

        i227 = i196 + 1;

        $i40 = i170 + i201;

        $i41 = $i40 - 1;

        virtualinvoke r10.<java.awt.Graphics: void drawLine(int,int,int,int)>(i170, i227, $i41, i227);

     label108:
        $z7 = virtualinvoke r9.<com.jidesoft.swing.StyleRange: boolean isDotted()>();

        if $z7 == 0 goto label110;

        i228 = i196 + 1;

        i229 = i170;

     label109:
        $i39 = i170 + i201;

        if i229 >= $i39 goto label110;

        virtualinvoke r10.<java.awt.Graphics: void drawRect(int,int,int,int)>(i229, i228, 1, 1);

        i229 = i229 + 4;

        goto label109;

     label110:
        $z8 = virtualinvoke r9.<com.jidesoft.swing.StyleRange: boolean isWaved()>();

        if $z8 == 0 goto label114;

        i230 = i196 + 1;

        i231 = i170;

     label111:
        $i26 = i170 + i201;

        if i231 >= $i26 goto label114;

        $i29 = i231 + 2;

        $i27 = i170 + i201;

        $i28 = $i27 - 1;

        if $i29 > $i28 goto label112;

        $i38 = i230 + 2;

        $i37 = i231 + 2;

        virtualinvoke r10.<java.awt.Graphics: void drawLine(int,int,int,int)>(i231, $i38, $i37, i230);

     label112:
        $i32 = i231 + 4;

        $i30 = i170 + i201;

        $i31 = $i30 - 1;

        if $i32 > $i31 goto label113;

        $i36 = i231 + 3;

        $i35 = i230 + 1;

        $i34 = i231 + 4;

        $i33 = i230 + 2;

        virtualinvoke r10.<java.awt.Graphics: void drawLine(int,int,int,int)>($i36, $i35, $i34, $i33);

     label113:
        i231 = i231 + 4;

        goto label111;

     label114:
        $r21 = virtualinvoke r9.<com.jidesoft.swing.StyleRange: java.awt.Stroke getLineStroke()>();

        if $r21 == null goto label115;

        $r22 = (java.awt.Graphics2D) r10;

        virtualinvoke $r22.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r19);

     label115:
        if z33 == 0 goto label117;

        if i178 == 2 goto label116;

        if r10 == null goto label116;

        i232 = i170 + i201;

        $r17 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: java.lang.String getText()>();

        $i25 = virtualinvoke $r17.<java.lang.String: int length()>();

        specialinvoke r4.<com.jidesoft.plaf.basic.BasicStyledLabelUI: void paintRow(com.jidesoft.swing.StyledLabel,java.awt.Graphics,int,int,int,int,int,int,boolean)>(r0, r10, i169, i232, $i155, i164, i186, $i25, 1);

     label116:
        virtualinvoke r0.<com.jidesoft.swing.StyledLabel: void setTruncated(boolean)>(1);

        goto label127;

     label117:
        if z34 == 0 goto label124;

        $i14 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: int getMaxRows()>();

        if $i14 <= 0 goto label118;

        $i23 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: int getMaxRows()>();

        $i24 = $i23 - 1;

        if i185 >= $i24 goto label119;

     label118:
        $i15 = i164 + i175;

        $i16 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: int getRowGap()>();

        $i17 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i16);

        $i18 = $i15 + $i17;

        if $i18 <= i165 goto label120;

     label119:
        $z51 = 1;

        $z50 = 1;

        goto label121;

     label120:
        $z51 = 0;

        $z50 = 0;

     label121:
        z43 = $z50;

        if i178 == 2 goto label122;

        if r10 == null goto label122;

        i233 = i170 + i201;

        $i19 = virtualinvoke r9.<com.jidesoft.swing.StyleRange: int getStart()>();

        $r16 = r8.<com.jidesoft.plaf.basic.BasicStyledLabelUI$StyledText: java.lang.String text>;

        $i20 = virtualinvoke $r16.<java.lang.String: int length()>();

        $i21 = staticinvoke <java.lang.Math: int min(int,int)>(i184, $i20);

        $i22 = $i19 + $i21;

        specialinvoke r4.<com.jidesoft.plaf.basic.BasicStyledLabelUI: void paintRow(com.jidesoft.swing.StyledLabel,java.awt.Graphics,int,int,int,int,int,int,boolean)>(r0, r10, i169, i233, $i155, i164, i186, $i22, $z51);

     label122:
        $i234 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: int getRowGap()>();

        $i235 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i234);

        $i236 = i175 + $i235;

        i164 = i164 + $i236;

        i170 = i169;

        $i258 = (int) -1;

        i187 = i187 + $i258;

        i185 = i185 + 1;

        $i237 = virtualinvoke r9.<com.jidesoft.swing.StyleRange: int getStart()>();

        $r97 = r8.<com.jidesoft.plaf.basic.BasicStyledLabelUI$StyledText: java.lang.String text>;

        $i238 = virtualinvoke $r97.<java.lang.String: int length()>();

        $i239 = staticinvoke <java.lang.Math: int min(int,int)>(i184, $i238);

        i186 = $i237 + $i239;

        if z43 == 0 goto label123;

        goto label127;

     label123:
        goto label125;

     label124:
        i170 = i170 + i201;

     label125:
        $r15 = r4.<com.jidesoft.plaf.basic.BasicStyledLabelUI: java.util.List _styledTexts>;

        $i12 = interfaceinvoke $r15.<java.util.List: int size()>();

        $i13 = $i12 - 1;

        if i187 != $i13 goto label126;

        if i178 == 2 goto label126;

        if r10 == null goto label126;

        $i260 = (int) -1;

        specialinvoke r4.<com.jidesoft.plaf.basic.BasicStyledLabelUI: void paintRow(com.jidesoft.swing.StyledLabel,java.awt.Graphics,int,int,int,int,int,int,boolean)>(r0, r10, i169, i170, $i155, i164, i186, $i260, 1);

     label126:
        i187 = i187 + 1;

        goto label033;

     label127:
        $d0 = (double) i164;

        $d1 = (double) i175;

        $d2 = $d0 / $d1;

        $d3 = staticinvoke <java.lang.Math: double ceil(double)>($d2);

        $i240 = (int) $d3;

        exitmonitor $r72;

     label128:
        return $i240;

     label129:
        $r67 := @caughtexception;

        exitmonitor $r72;

     label130:
        throw $r67;

        catch java.lang.Throwable from label011 to label128 with label129;
        catch java.lang.Throwable from label129 to label130 with label129;
    }

    private void paintRow(com.jidesoft.swing.StyledLabel, java.awt.Graphics, int, int, int, int, int, int, boolean)
    {
        java.awt.Color $r16, $r17, $r20, $r21, $r22, $r81, r82;
        com.jidesoft.swing.StyleRange $r8, $r9, $r50, r79;
        java.awt.Insets $r65;
        java.awt.Graphics2D $r11, $r15, $r18;
        int $i0, $i1, i2, i3, i4, i5, $i6, $i7, i8, $i9, $i10, $i11, i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i103, $i104, $i105, $i106, $i107, $i108, $i109, $i110, $i111, $i112, $i113, $i114, $i115, $i116, $i117, $i118, $i119, $i120, $i121, $i122, $i123, $i124, $i125, $i126, $i127, $i128, $i129, $i130, $i131, $i132, $i133, i134, i135, i136, $i137, i138, i139, $i140, i141, $i142, $i143, $i144, $i145, i146, i147, i148, $i149, i150, i151, $i152, i153, $i154, i155, $i156, $i157, i158, $i159, i160, $i161, i162, $i163, $i164, i165, i166, i167, i168, $i169, i170, $i171, i172, $i173, $i174, $i175, i176, $i177, $i178, i179, $i180, $i181, $i182, i183, i184, i185, i186, i187, i188, i189, $i191, $i193, $i195, $i197, $i199;
        java.io.PrintStream $r42;
        java.lang.String $r5, $r6, $r7, $r28, $r32, $r37, $r38, $r39, $r40, $r45, $r47, $r48, $r72, r75, $r76, r78;
        java.awt.FontMetrics $r69, r70, r74;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, z27, $z28, $z29, z30, z31;
        java.awt.Font $r33, $r46, $r67, r68, $r73, $r80;
        java.util.List $r3, $r10, $r23, $r71;
        java.awt.Graphics r0;
        java.awt.Rectangle $r84, $r85, $r86, $r87, $r88, $r89, $r90, $r91, $r92;
        java.lang.StringBuilder $r43, $r44, $r83;
        java.awt.Stroke $r12, $r13, $r14, $r19;
        javax.swing.LookAndFeel $r66;
        java.awt.ComponentOrientation $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64;
        com.jidesoft.plaf.basic.BasicStyledLabelUI r2;
        com.jidesoft.swing.StyledLabel r1;
        com.jidesoft.plaf.basic.BasicStyledLabelUI$StyledText $r49, r77;
        java.lang.Object $r4, $r24;
        javax.swing.Icon $r51, $r52, $r53, $r54, $r55, $r56;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        char $c102;

        r2 := @this: com.jidesoft.plaf.basic.BasicStyledLabelUI;

        r1 := @parameter0: com.jidesoft.swing.StyledLabel;

        r0 := @parameter1: java.awt.Graphics;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i12 := @parameter5: int;

        i8 := @parameter6: int;

        i5 := @parameter7: int;

        z12 := @parameter8: boolean;

        if r0 != null goto label01;

        return;

     label01:
        $i0 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: int getHorizontalTextPosition()>();

        i134 = $i0;

        $i1 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: int getHorizontalAlignment()>();

        i135 = $i1;

        if $i0 != 11 goto label02;

        $r64 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: java.awt.ComponentOrientation getComponentOrientation()>();

        $z25 = virtualinvoke $r64.<java.awt.ComponentOrientation: boolean isLeftToRight()>();

        if $z25 == 0 goto label03;

     label02:
        if $i0 != 10 goto label04;

        $r63 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: java.awt.ComponentOrientation getComponentOrientation()>();

        $z24 = virtualinvoke $r63.<java.awt.ComponentOrientation: boolean isLeftToRight()>();

        if $z24 == 0 goto label04;

     label03:
        i134 = 2;

     label04:
        if i134 != 10 goto label05;

        $r62 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: java.awt.ComponentOrientation getComponentOrientation()>();

        $z23 = virtualinvoke $r62.<java.awt.ComponentOrientation: boolean isLeftToRight()>();

        if $z23 == 0 goto label06;

     label05:
        if i134 != 11 goto label07;

        $r61 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: java.awt.ComponentOrientation getComponentOrientation()>();

        $z22 = virtualinvoke $r61.<java.awt.ComponentOrientation: boolean isLeftToRight()>();

        if $z22 == 0 goto label07;

     label06:
        i134 = 4;

     label07:
        if $i1 != 11 goto label08;

        $r60 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: java.awt.ComponentOrientation getComponentOrientation()>();

        $z21 = virtualinvoke $r60.<java.awt.ComponentOrientation: boolean isLeftToRight()>();

        if $z21 == 0 goto label09;

     label08:
        if $i1 != 10 goto label10;

        $r59 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: java.awt.ComponentOrientation getComponentOrientation()>();

        $z20 = virtualinvoke $r59.<java.awt.ComponentOrientation: boolean isLeftToRight()>();

        if $z20 == 0 goto label10;

     label09:
        i135 = 2;

     label10:
        if i135 != 10 goto label11;

        $r58 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: java.awt.ComponentOrientation getComponentOrientation()>();

        $z19 = virtualinvoke $r58.<java.awt.ComponentOrientation: boolean isLeftToRight()>();

        if $z19 == 0 goto label12;

     label11:
        if i135 != 11 goto label13;

        $r57 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: java.awt.ComponentOrientation getComponentOrientation()>();

        $z18 = virtualinvoke $r57.<java.awt.ComponentOrientation: boolean isLeftToRight()>();

        if $z18 == 0 goto label13;

     label12:
        i135 = 4;

     label13:
        $r65 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: java.awt.Insets getInsets()>();

        i136 = i2;

        $i137 = i3 - i2;

        i138 = $i137;

        if i135 != 4 goto label15;

        i138 = i3 - i2;

        $i129 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: int getWidth()>();

        i136 = $i129 - i138;

        if $r65 == null goto label14;

        $i133 = $r65.<java.awt.Insets: int right>;

        i136 = i136 - $i133;

     label14:
        $r55 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: javax.swing.Icon getIcon()>();

        if $r55 == null goto label19;

        if i134 != 2 goto label19;

        $r56 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: javax.swing.Icon getIcon()>();

        $i130 = interfaceinvoke $r56.<javax.swing.Icon: int getIconWidth()>();

        $i131 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: int getIconTextGap()>();

        $i132 = $i130 + $i131;

        i136 = i136 - $i132;

        goto label19;

     label15:
        if i135 != 0 goto label19;

        i139 = 0;

        if i134 != 4 goto label16;

        $r53 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: javax.swing.Icon getIcon()>();

        if $r53 == null goto label16;

        $r54 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: javax.swing.Icon getIcon()>();

        $i126 = interfaceinvoke $r54.<javax.swing.Icon: int getIconWidth()>();

        $i127 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: int getIconTextGap()>();

        $i128 = $i126 + $i127;

        i139 = 0 + $i128;

     label16:
        $i140 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: int getWidth()>();

        i141 = $i140;

        if $r65 == null goto label17;

        $i123 = $r65.<java.awt.Insets: int right>;

        $i122 = $r65.<java.awt.Insets: int left>;

        $i124 = $i123 + $i122;

        i141 = $i140 - $i124;

        $i125 = $r65.<java.awt.Insets: int left>;

        i139 = i139 + $i125;

     label17:
        $r51 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: javax.swing.Icon getIcon()>();

        if $r51 == null goto label18;

        if i134 == 0 goto label18;

        $r52 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: javax.swing.Icon getIcon()>();

        $i119 = interfaceinvoke $r52.<javax.swing.Icon: int getIconWidth()>();

        $i120 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: int getIconTextGap()>();

        $i121 = $i119 + $i120;

        i141 = i141 - $i121;

     label18:
        $i142 = i141 - $i137;

        $i143 = $i142 / 2;

        i136 = i139 + $i143;

     label19:
        $i144 = i4 - i2;

        $i145 = staticinvoke <java.lang.Math: int min(int,int)>(i138, $i144);

        i146 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: int getDisplayedMnemonicIndex()>();

        $r66 = staticinvoke <javax.swing.UIManager: javax.swing.LookAndFeel getLookAndFeel()>();

        $z26 = $r66 instanceof com.sun.java.swing.plaf.windows.WindowsLookAndFeel;

        if $z26 == 0 goto label20;

        $z17 = staticinvoke <com.sun.java.swing.plaf.windows.WindowsLookAndFeel: boolean isMnemonicHidden()>();

        if $z17 == 0 goto label20;

        $i191 = (int) -1;

        i146 = $i191;

     label20:
        i147 = 0;

        i148 = 0;

        $r67 = virtualinvoke r2.<com.jidesoft.plaf.basic.BasicStyledLabelUI: java.awt.Font getFont(com.jidesoft.swing.StyledLabel)>(r1);

        r68 = $r67;

        $r69 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: java.awt.FontMetrics getFontMetrics(java.awt.Font)>($r67);

        r70 = null;

        $i149 = virtualinvoke $r67.<java.awt.Font: int getSize()>();

        i150 = i136;

        i151 = 0;

     label21:
        $r71 = r2.<com.jidesoft.plaf.basic.BasicStyledLabelUI: java.util.List _styledTexts>;

        $i152 = interfaceinvoke $r71.<java.util.List: int size()>();

        if i151 >= $i152 goto label91;

        if i5 < 0 goto label22;

        if i147 >= i5 goto label91;

     label22:
        $r3 = r2.<com.jidesoft.plaf.basic.BasicStyledLabelUI: java.util.List _styledTexts>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i151);

        $r49 = (com.jidesoft.plaf.basic.BasicStyledLabelUI$StyledText) $r4;

        $r50 = $r49.<com.jidesoft.plaf.basic.BasicStyledLabelUI$StyledText: com.jidesoft.swing.StyleRange styleRange>;

        $i6 = virtualinvoke $r50.<com.jidesoft.swing.StyleRange: int getLength()>();

        i153 = $i6;

        if $i6 >= 0 goto label23;

        $r48 = $r49.<com.jidesoft.plaf.basic.BasicStyledLabelUI$StyledText: java.lang.String text>;

        i153 = virtualinvoke $r48.<java.lang.String: int length()>();

     label23:
        $i7 = virtualinvoke $r50.<com.jidesoft.swing.StyleRange: int getStart()>();

        $i9 = $i7 + i153;

        if $i9 > i8 goto label24;

        i147 = i147 + i153;

        goto label90;

     label24:
        $i10 = virtualinvoke $r50.<com.jidesoft.swing.StyleRange: int getStart()>();

        if $i10 < i8 goto label25;

        $i154 = 0;

        goto label26;

     label25:
        $i11 = virtualinvoke $r50.<com.jidesoft.swing.StyleRange: int getStart()>();

        $i154 = i8 - $i11;

     label26:
        i155 = $i154;

        $i118 = i147 + $i154;

        if i146 < 0 goto label27;

        $r47 = $r49.<com.jidesoft.plaf.basic.BasicStyledLabelUI$StyledText: java.lang.String text>;

        $i115 = virtualinvoke $r47.<java.lang.String: int length()>();

        $i117 = $i115 - $i154;

        $i116 = i146 - $i118;

        if $i117 <= $i116 goto label27;

        z27 = 1;

        z31 = 1;

        z30 = 1;

        i148 = i146 - $i118;

        goto label28;

     label27:
        z27 = 0;

        z31 = 0;

        z30 = 0;

     label28:
        $r72 = $r49.<com.jidesoft.plaf.basic.BasicStyledLabelUI$StyledText: java.lang.String text>;

        $i156 = virtualinvoke $r72.<java.lang.String: int length()>();

        $i157 = $i156 - i155;

        i158 = $i157;

        if i5 < 0 goto label29;

        $i114 = $i118 + $i157;

        if $i114 < i5 goto label29;

        i158 = i5 - $i118;

     label29:
        $i159 = $i118 + i158;

        i147 = $i159;

        i160 = i12;

        if r70 != null goto label39;

        if $r50 == null goto label31;

        $z15 = virtualinvoke $r50.<com.jidesoft.swing.StyleRange: boolean isSuperscript()>();

        if $z15 != 0 goto label30;

        $z16 = virtualinvoke $r50.<com.jidesoft.swing.StyleRange: boolean isSubscript()>();

        if $z16 == 0 goto label31;

     label30:
        $f3 = (float) $i149;

        $f4 = virtualinvoke $r50.<com.jidesoft.swing.StyleRange: float getFontShrinkRatio()>();

        $f5 = $f3 / $f4;

        $i161 = staticinvoke <java.lang.Math: int round(float)>($f5);

        goto label32;

     label31:
        $i161 = $i149;

     label32:
        i162 = $i161;

        $r73 = virtualinvoke r2.<com.jidesoft.plaf.basic.BasicStyledLabelUI: java.awt.Font getFont(com.jidesoft.swing.StyledLabel)>(r1);

        r68 = $r73;

        if $r50 == null goto label37;

        $i109 = virtualinvoke $r50.<com.jidesoft.swing.StyleRange: int getFontStyle()>();

        $i193 = (int) -1;

        if $i109 == $i193 goto label33;

        $i112 = virtualinvoke $r73.<java.awt.Font: int getStyle()>();

        $i113 = virtualinvoke $r50.<com.jidesoft.swing.StyleRange: int getFontStyle()>();

        if $i112 != $i113 goto label34;

     label33:
        $i110 = virtualinvoke $r73.<java.awt.Font: int getSize()>();

        if $i110 == i162 goto label37;

     label34:
        $i111 = virtualinvoke $r50.<com.jidesoft.swing.StyleRange: int getFontStyle()>();

        $i195 = (int) -1;

        if $i111 != $i195 goto label35;

        $i163 = virtualinvoke $r73.<java.awt.Font: int getStyle()>();

        goto label36;

     label35:
        $i163 = virtualinvoke $r50.<com.jidesoft.swing.StyleRange: int getFontStyle()>();

     label36:
        $r46 = staticinvoke <com.jidesoft.swing.FontUtils: java.awt.Font getCachedDerivedFont(java.awt.Font,int,int)>($r73, $i163, i162);

        r68 = $r46;

        r74 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: java.awt.FontMetrics getFontMetrics(java.awt.Font)>($r46);

        goto label38;

     label37:
        r74 = $r69;

     label38:
        goto label40;

     label39:
        r74 = r70;

     label40:
        virtualinvoke r0.<java.awt.Graphics: void setFont(java.awt.Font)>(r68);

        $r6 = $r49.<com.jidesoft.plaf.basic.BasicStyledLabelUI$StyledText: java.lang.String text>;

        $r5 = $r49.<com.jidesoft.plaf.basic.BasicStyledLabelUI$StyledText: java.lang.String text>;

        $i13 = virtualinvoke $r5.<java.lang.String: int length()>();

        $i14 = staticinvoke <java.lang.Math: int min(int,int)>(i155, $i13);

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int)>($i14);

        r75 = $r7;

        if i8 <= 0 goto label41;

        if i150 != i136 goto label41;

        $z14 = virtualinvoke $r7.<java.lang.String: boolean startsWith(java.lang.String)>(" ");

        if $z14 == 0 goto label41;

        r75 = virtualinvoke $r7.<java.lang.String: java.lang.String substring(int)>(1);

     label41:
        $i164 = virtualinvoke r75.<java.lang.String: int length()>();

        if $i164 <= i158 goto label42;

        r75 = virtualinvoke r75.<java.lang.String: java.lang.String substring(int,int)>(0, i158);

     label42:
        $z0 = virtualinvoke r75.<java.lang.String: boolean contains(java.lang.CharSequence)>("\r");

        if $z0 != 0 goto label43;

        $z13 = virtualinvoke r75.<java.lang.String: boolean contains(java.lang.CharSequence)>("\n");

        if $z13 == 0 goto label45;

     label43:
        $r8 = $r49.<com.jidesoft.plaf.basic.BasicStyledLabelUI$StyledText: com.jidesoft.swing.StyleRange styleRange>;

        $i15 = virtualinvoke $r8.<com.jidesoft.swing.StyleRange: int getStart()>();

        $r9 = $r49.<com.jidesoft.plaf.basic.BasicStyledLabelUI$StyledText: com.jidesoft.swing.StyleRange styleRange>;

        $i16 = virtualinvoke $r9.<com.jidesoft.swing.StyleRange: int getLength()>();

        $i17 = $i15 + $i16;

        if $i17 < i5 goto label44;

        goto label91;

     label44:
        r75 = "...";

     label45:
        $i18 = virtualinvoke r74.<java.awt.FontMetrics: int stringWidth(java.lang.String)>(r75);

        i165 = $i18;

        $i19 = $i145 + i136;

        $i108 = $i19 - i150;

        if $i108 >= $i18 goto label59;

        if $i18 > 0 goto label46;

        return;

     label46:
        $z11 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: boolean isLineWrap()>();

        if $z11 == 0 goto label58;

        if z12 != 0 goto label58;

        $i89 = virtualinvoke r75.<java.lang.String: int length()>();

        $i90 = $i89 * $i108;

        $i91 = $i90 / $i18;

        i166 = $i91 + 1;

        i167 = 0;

     label47:
        $i92 = virtualinvoke r75.<java.lang.String: int length()>();

        $i93 = staticinvoke <java.lang.Math: int min(int,int)>(i166, $i92);

        $i94 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i93);

        $r38 = virtualinvoke r75.<java.lang.String: java.lang.String substring(int,int)>(0, $i94);

        $i95 = specialinvoke r2.<com.jidesoft.plaf.basic.BasicStyledLabelUI: int findFirstRowWordEndIndex(java.lang.String)>($r38);

        i168 = $i95;

        if $i95 >= 0 goto label48;

        $i169 = 0;

        goto label49;

     label48:
        $i169 = specialinvoke r2.<com.jidesoft.plaf.basic.BasicStyledLabelUI: int findNextWordStartIndex(java.lang.String,int)>(r75, $i95);

     label49:
        i170 = $i169;

        if $i95 >= 0 goto label50;

        if i150 != i136 goto label50;

        i168 = 0;

        $i107 = virtualinvoke r75.<java.lang.String: int length()>();

        i170 = staticinvoke <java.lang.Math: int min(int,int)>($i107, i166);

     label50:
        $i171 = i168 + 1;

        i172 = $i171;

        $i173 = virtualinvoke r75.<java.lang.String: int length()>();

        $i174 = staticinvoke <java.lang.Math: int min(int,int)>($i171, $i173);

        $r76 = virtualinvoke r75.<java.lang.String: java.lang.String substring(int,int)>(0, $i174);

        $i175 = virtualinvoke r74.<java.awt.FontMetrics: int stringWidth(java.lang.String)>($r76);

        i176 = $i175;

        if $i175 <= $i108 goto label51;

        $i105 = virtualinvoke $r38.<java.lang.String: int length()>();

        $i106 = $i105 * $i108;

        i166 = $i106 / $i175;

     label51:
        i167 = i167 + 1;

        if i167 <= 50 goto label52;

        $r42 = <java.lang.System: java.io.PrintStream err>;

        $r83 = new java.lang.StringBuilder;

        specialinvoke $r83.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Painting Styled Label Error: ");

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r49);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r42.<java.io.PrintStream: void println(java.lang.String)>($r45);

        goto label53;

     label52:
        if $i175 <= $i108 goto label53;

        if i166 > 0 goto label47;

     label53:
        if i172 >= i170 goto label55;

        $c102 = virtualinvoke r75.<java.lang.String: char charAt(int)>(i172);

        $i103 = virtualinvoke r74.<java.awt.FontMetrics: int charWidth(char)>($c102);

        i176 = i176 + $i103;

        if i176 < $i108 goto label54;

        goto label55;

     label54:
        i172 = i172 + 1;

        goto label53;

     label55:
        $i96 = virtualinvoke r75.<java.lang.String: int length()>();

        $i97 = staticinvoke <java.lang.Math: int min(int,int)>(i172, $i96);

        $r39 = virtualinvoke r75.<java.lang.String: java.lang.String substring(int,int)>(0, $i97);

        r75 = $r39;

        i165 = virtualinvoke r74.<java.awt.FontMetrics: int stringWidth(java.lang.String)>($r39);

        $r40 = $r49.<com.jidesoft.plaf.basic.BasicStyledLabelUI$StyledText: java.lang.String text>;

        $i98 = virtualinvoke $r40.<java.lang.String: int length()>();

        $i99 = $i98 - i155;

        $i104 = $i159 - $i99;

        if z30 == 0 goto label57;

        if i146 < 0 goto label56;

        $i100 = virtualinvoke $r39.<java.lang.String: int length()>();

        $i101 = i146 - $i104;

        if $i100 <= $i101 goto label56;

        z27 = 1;

        z31 = 1;

        i148 = i146 - $i104;

        goto label57;

     label56:
        z27 = 0;

        z31 = 0;

     label57:
        $i177 = virtualinvoke $r39.<java.lang.String: int length()>();

        i147 = $i104 + $i177;

        goto label70;

     label58:
        $i84 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: int getVerticalAlignment()>();

        $i85 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: int getHorizontalAlignment()>();

        $i86 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: int getVerticalTextPosition()>();

        $i87 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: int getHorizontalTextPosition()>();

        $r84 = new java.awt.Rectangle;

        $i88 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: int getHeight()>();

        specialinvoke $r84.<java.awt.Rectangle: void <init>(int,int,int,int)>(i150, i12, $i108, $i88);

        $r85 = new java.awt.Rectangle;

        specialinvoke $r85.<java.awt.Rectangle: void <init>()>();

        $r86 = new java.awt.Rectangle;

        specialinvoke $r86.<java.awt.Rectangle: void <init>()>();

        $r37 = staticinvoke <javax.swing.SwingUtilities: java.lang.String layoutCompoundLabel(javax.swing.JComponent,java.awt.FontMetrics,java.lang.String,javax.swing.Icon,int,int,int,int,java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle,int)>(r1, r74, r75, null, $i84, $i85, $i86, $i87, $r84, $r85, $r86, 0);

        r75 = $r37;

        i165 = virtualinvoke r74.<java.awt.FontMetrics: int stringWidth(java.lang.String)>($r37);

        goto label70;

     label59:
        $z1 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: boolean isLineWrap()>();

        if $z1 == 0 goto label60;

        goto label70;

     label60:
        $r10 = r2.<com.jidesoft.plaf.basic.BasicStyledLabelUI: java.util.List _styledTexts>;

        $i20 = interfaceinvoke $r10.<java.util.List: int size()>();

        $i21 = $i20 - 1;

        if i151 >= $i21 goto label70;

        $r23 = r2.<com.jidesoft.plaf.basic.BasicStyledLabelUI: java.util.List _styledTexts>;

        $i63 = i151 + 1;

        $r24 = interfaceinvoke $r23.<java.util.List: java.lang.Object get(int)>($i63);

        r77 = (com.jidesoft.plaf.basic.BasicStyledLabelUI$StyledText) $r24;

        r78 = r77.<com.jidesoft.plaf.basic.BasicStyledLabelUI$StyledText: java.lang.String text>;

        r79 = r77.<com.jidesoft.plaf.basic.BasicStyledLabelUI$StyledText: com.jidesoft.swing.StyleRange styleRange>;

        if r79 == null goto label62;

        $z9 = virtualinvoke r79.<com.jidesoft.swing.StyleRange: boolean isSuperscript()>();

        if $z9 != 0 goto label61;

        $z10 = virtualinvoke r79.<com.jidesoft.swing.StyleRange: boolean isSubscript()>();

        if $z10 == 0 goto label62;

     label61:
        $f0 = (float) $i149;

        $f1 = virtualinvoke r79.<com.jidesoft.swing.StyleRange: float getFontShrinkRatio()>();

        $f2 = $f0 / $f1;

        $i178 = staticinvoke <java.lang.Math: int round(float)>($f2);

        goto label63;

     label62:
        $i178 = $i149;

     label63:
        i179 = $i178;

        $r80 = virtualinvoke r2.<com.jidesoft.plaf.basic.BasicStyledLabelUI: java.awt.Font getFont(com.jidesoft.swing.StyledLabel)>(r1);

        r68 = $r80;

        if r79 == null goto label68;

        $i79 = virtualinvoke r79.<com.jidesoft.swing.StyleRange: int getFontStyle()>();

        $i197 = (int) -1;

        if $i79 == $i197 goto label64;

        $i82 = virtualinvoke $r80.<java.awt.Font: int getStyle()>();

        $i83 = virtualinvoke r79.<com.jidesoft.swing.StyleRange: int getFontStyle()>();

        if $i82 != $i83 goto label65;

     label64:
        $i80 = virtualinvoke $r80.<java.awt.Font: int getSize()>();

        if $i80 == i179 goto label68;

     label65:
        $i81 = virtualinvoke r79.<com.jidesoft.swing.StyleRange: int getFontStyle()>();

        $i199 = (int) -1;

        if $i81 != $i199 goto label66;

        $i180 = virtualinvoke $r80.<java.awt.Font: int getStyle()>();

        goto label67;

     label66:
        $i180 = virtualinvoke r79.<com.jidesoft.swing.StyleRange: int getFontStyle()>();

     label67:
        $r33 = staticinvoke <com.jidesoft.swing.FontUtils: java.awt.Font getCachedDerivedFont(java.awt.Font,int,int)>($r80, $i180, i179);

        r68 = $r33;

        r70 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: java.awt.FontMetrics getFontMetrics(java.awt.Font)>($r33);

        goto label69;

     label68:
        r70 = $r69;

     label69:
        $i181 = virtualinvoke r70.<java.awt.FontMetrics: int stringWidth(java.lang.String)>(r78);

        $i182 = $i108 - $i18;

        if $i181 <= $i182 goto label70;

        $i64 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: int getVerticalAlignment()>();

        $i65 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: int getHorizontalAlignment()>();

        $i66 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: int getVerticalTextPosition()>();

        $i67 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: int getHorizontalTextPosition()>();

        $r87 = new java.awt.Rectangle;

        $i68 = i150 + $i18;

        $i69 = $i108 - $i18;

        $i70 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: int getHeight()>();

        specialinvoke $r87.<java.awt.Rectangle: void <init>(int,int,int,int)>($i68, i12, $i69, $i70);

        $r88 = new java.awt.Rectangle;

        specialinvoke $r88.<java.awt.Rectangle: void <init>()>();

        $r89 = new java.awt.Rectangle;

        specialinvoke $r89.<java.awt.Rectangle: void <init>()>();

        $r28 = staticinvoke <javax.swing.SwingUtilities: java.lang.String layoutCompoundLabel(javax.swing.JComponent,java.awt.FontMetrics,java.lang.String,javax.swing.Icon,int,int,int,int,java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle,int)>(r1, r70, r78, null, $i64, $i65, $i66, $i67, $r87, $r88, $r89, 0);

        $i71 = virtualinvoke r70.<java.awt.FontMetrics: int stringWidth(java.lang.String)>($r28);

        $i72 = $i108 - $i18;

        if $i71 <= $i72 goto label70;

        $i73 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: int getVerticalAlignment()>();

        $i74 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: int getHorizontalAlignment()>();

        $i75 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: int getVerticalTextPosition()>();

        $i76 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: int getHorizontalTextPosition()>();

        $r90 = new java.awt.Rectangle;

        $i77 = $i18 - 1;

        $i78 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: int getHeight()>();

        specialinvoke $r90.<java.awt.Rectangle: void <init>(int,int,int,int)>(i150, i12, $i77, $i78);

        $r91 = new java.awt.Rectangle;

        specialinvoke $r91.<java.awt.Rectangle: void <init>()>();

        $r92 = new java.awt.Rectangle;

        specialinvoke $r92.<java.awt.Rectangle: void <init>()>();

        $r32 = staticinvoke <javax.swing.SwingUtilities: java.lang.String layoutCompoundLabel(javax.swing.JComponent,java.awt.FontMetrics,java.lang.String,javax.swing.Icon,int,int,int,int,java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle,int)>(r1, r74, r75, null, $i73, $i74, $i75, $i76, $r90, $r91, $r92, 0);

        r75 = $r32;

        i165 = virtualinvoke r74.<java.awt.FontMetrics: int stringWidth(java.lang.String)>($r32);

     label70:
        if $r50 == null goto label71;

        $z8 = virtualinvoke $r50.<com.jidesoft.swing.StyleRange: boolean isSuperscript()>();

        if $z8 == 0 goto label71;

        $i60 = virtualinvoke $r69.<java.awt.FontMetrics: int getHeight()>();

        $i61 = virtualinvoke r74.<java.awt.FontMetrics: int getHeight()>();

        $i62 = $i60 - $i61;

        i160 = i12 - $i62;

     label71:
        if $r50 == null goto label72;

        $r21 = virtualinvoke $r50.<com.jidesoft.swing.StyleRange: java.awt.Color getBackgroundColor()>();

        if $r21 == null goto label72;

        $r22 = virtualinvoke $r50.<com.jidesoft.swing.StyleRange: java.awt.Color getBackgroundColor()>();

        virtualinvoke r0.<java.awt.Graphics: void setColor(java.awt.Color)>($r22);

        $i56 = virtualinvoke r74.<java.awt.FontMetrics: int getHeight()>();

        $i57 = i160 - $i56;

        $i58 = virtualinvoke r74.<java.awt.FontMetrics: int getHeight()>();

        $i59 = $i58 + 4;

        virtualinvoke r0.<java.awt.Graphics: void fillRect(int,int,int,int)>(i150, $i57, i165, $i59);

     label72:
        if $r50 == null goto label73;

        $z7 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: boolean isIgnoreColorSettings()>();

        if $z7 != 0 goto label73;

        $r20 = virtualinvoke $r50.<com.jidesoft.swing.StyleRange: java.awt.Color getFontColor()>();

        if $r20 == null goto label73;

        $r81 = virtualinvoke $r50.<com.jidesoft.swing.StyleRange: java.awt.Color getFontColor()>();

        goto label74;

     label73:
        $r81 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: java.awt.Color getForeground()>();

     label74:
        r82 = $r81;

        $z28 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: boolean isEnabled()>();

        if $z28 != 0 goto label75;

        r82 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("Label.disabledForeground");

     label75:
        virtualinvoke r0.<java.awt.Graphics: void setColor(java.awt.Color)>(r82);

        if z31 == 0 goto label76;

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void drawStringUnderlineCharAt(javax.swing.JComponent,java.awt.Graphics,java.lang.String,int,int,int)>(r1, r0, r75, i148, i150, i160);

        goto label77;

     label76:
        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void drawString(javax.swing.JComponent,java.awt.Graphics,java.lang.String,int,int)>(r1, r0, r75, i150, i160);

     label77:
        if $r50 == null goto label89;

        $r11 = (java.awt.Graphics2D) r0;

        $r12 = virtualinvoke $r11.<java.awt.Graphics2D: java.awt.Stroke getStroke()>();

        $r13 = virtualinvoke $r50.<com.jidesoft.swing.StyleRange: java.awt.Stroke getLineStroke()>();

        if $r13 == null goto label78;

        $r18 = (java.awt.Graphics2D) r0;

        $r19 = virtualinvoke $r50.<com.jidesoft.swing.StyleRange: java.awt.Stroke getLineStroke()>();

        virtualinvoke $r18.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r19);

     label78:
        $z2 = virtualinvoke r1.<com.jidesoft.swing.StyledLabel: boolean isIgnoreColorSettings()>();

        if $z2 != 0 goto label79;

        $r16 = virtualinvoke $r50.<com.jidesoft.swing.StyleRange: java.awt.Color getLineColor()>();

        if $r16 == null goto label79;

        $r17 = virtualinvoke $r50.<com.jidesoft.swing.StyleRange: java.awt.Color getLineColor()>();

        virtualinvoke r0.<java.awt.Graphics: void setColor(java.awt.Color)>($r17);

     label79:
        $z29 = virtualinvoke $r50.<com.jidesoft.swing.StyleRange: boolean isStrikethrough()>();

        if $z29 == 0 goto label80;

        $i50 = virtualinvoke r74.<java.awt.FontMetrics: int getDescent()>();

        $i51 = virtualinvoke r74.<java.awt.FontMetrics: int getAscent()>();

        $i52 = $i50 - $i51;

        $i53 = $i52 / 2;

        i183 = i160 + $i53;

        $i54 = i150 + i165;

        $i55 = $i54 - 1;

        virtualinvoke r0.<java.awt.Graphics: void drawLine(int,int,int,int)>(i150, i183, $i55, i183);

     label80:
        $z3 = virtualinvoke $r50.<com.jidesoft.swing.StyleRange: boolean isDoublestrikethrough()>();

        if $z3 == 0 goto label81;

        $i38 = virtualinvoke r74.<java.awt.FontMetrics: int getDescent()>();

        $i39 = virtualinvoke r74.<java.awt.FontMetrics: int getAscent()>();

        $i40 = $i38 - $i39;

        $i41 = $i40 / 2;

        i184 = i160 + $i41;

        $i45 = i184 - 1;

        $i42 = i150 + i165;

        $i44 = $i42 - 1;

        $i43 = i184 - 1;

        virtualinvoke r0.<java.awt.Graphics: void drawLine(int,int,int,int)>(i150, $i45, $i44, $i43);

        $i49 = i184 + 1;

        $i46 = i150 + i165;

        $i48 = $i46 - 1;

        $i47 = i184 + 1;

        virtualinvoke r0.<java.awt.Graphics: void drawLine(int,int,int,int)>(i150, $i49, $i48, $i47);

     label81:
        $z4 = virtualinvoke $r50.<com.jidesoft.swing.StyleRange: boolean isUnderlined()>();

        if $z4 == 0 goto label82;

        i185 = i160 + 1;

        $i36 = i150 + i165;

        $i37 = $i36 - 1;

        virtualinvoke r0.<java.awt.Graphics: void drawLine(int,int,int,int)>(i150, i185, $i37, i185);

     label82:
        $z5 = virtualinvoke $r50.<com.jidesoft.swing.StyleRange: boolean isDotted()>();

        if $z5 == 0 goto label84;

        i186 = i160 + 1;

        i187 = i150;

     label83:
        $i35 = i150 + i165;

        if i187 >= $i35 goto label84;

        virtualinvoke r0.<java.awt.Graphics: void drawRect(int,int,int,int)>(i187, i186, 1, 1);

        i187 = i187 + 4;

        goto label83;

     label84:
        $z6 = virtualinvoke $r50.<com.jidesoft.swing.StyleRange: boolean isWaved()>();

        if $z6 == 0 goto label88;

        i188 = i160 + 1;

        i189 = i150;

     label85:
        $i22 = i150 + i165;

        if i189 >= $i22 goto label88;

        $i25 = i189 + 2;

        $i23 = i150 + i165;

        $i24 = $i23 - 1;

        if $i25 > $i24 goto label86;

        $i34 = i188 + 2;

        $i33 = i189 + 2;

        virtualinvoke r0.<java.awt.Graphics: void drawLine(int,int,int,int)>(i189, $i34, $i33, i188);

     label86:
        $i28 = i189 + 4;

        $i26 = i150 + i165;

        $i27 = $i26 - 1;

        if $i28 > $i27 goto label87;

        $i32 = i189 + 3;

        $i31 = i188 + 1;

        $i30 = i189 + 4;

        $i29 = i188 + 2;

        virtualinvoke r0.<java.awt.Graphics: void drawLine(int,int,int,int)>($i32, $i31, $i30, $i29);

     label87:
        i189 = i189 + 4;

        goto label85;

     label88:
        $r14 = virtualinvoke $r50.<com.jidesoft.swing.StyleRange: java.awt.Stroke getLineStroke()>();

        if $r14 == null goto label89;

        $r15 = (java.awt.Graphics2D) r0;

        virtualinvoke $r15.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r12);

     label89:
        i150 = i150 + i165;

     label90:
        i151 = i151 + 1;

        goto label21;

     label91:
        return;
    }

    private int findNextWordStartIndex(java.lang.String, int)
    {
        char $c2;
        com.jidesoft.plaf.basic.BasicStyledLabelUI r1;
        int i0, $i1, i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.String r0;
        boolean $z0, z1;

        r1 := @this: com.jidesoft.plaf.basic.BasicStyledLabelUI;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        if i0 >= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        z1 = $z0;

        i3 = i0 + 1;

     label3:
        $i4 = virtualinvoke r0.<java.lang.String: int length()>();

        if i3 >= $i4 goto label6;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);

        $i5 = (int) $c2;

        if $i5 == 32 goto label4;

        $i6 = (int) $c2;

        if $i6 == 9 goto label4;

        $i7 = (int) $c2;

        if $i7 == 13 goto label4;

        $i8 = (int) $c2;

        if $i8 == 10 goto label4;

        if z1 != 0 goto label5;

        return i3;

     label4:
        z1 = 0;

     label5:
        i3 = i3 + 1;

        goto label3;

     label6:
        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        return $i1;
    }

    private int findFirstRowWordEndIndex(java.lang.String)
    {
        int $i0, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12, $i14;
        java.lang.String r0;
        boolean z0;
        char $c1;
        com.jidesoft.plaf.basic.BasicStyledLabelUI r1;

        r1 := @this: com.jidesoft.plaf.basic.BasicStyledLabelUI;

        r0 := @parameter0: java.lang.String;

        z0 = 0;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        i2 = $i0 - 1;

     label1:
        if i2 < 0 goto label5;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i2);

        if z0 != 0 goto label3;

        $i3 = (int) $c1;

        if $i3 == 32 goto label2;

        $i4 = (int) $c1;

        if $i4 == 9 goto label2;

        $i5 = (int) $c1;

        if $i5 == 13 goto label2;

        $i6 = (int) $c1;

        if $i6 != 10 goto label4;

     label2:
        z0 = 1;

        goto label4;

     label3:
        $i7 = (int) $c1;

        if $i7 == 32 goto label4;

        $i8 = (int) $c1;

        if $i8 == 9 goto label4;

        $i9 = (int) $c1;

        if $i9 == 13 goto label4;

        $i10 = (int) $c1;

        if $i10 == 10 goto label4;

        return i2;

     label4:
        $i12 = (int) -1;

        i2 = i2 + $i12;

        goto label1;

     label5:
        $i14 = (int) -1;

        return $i14;
    }

    public static java.lang.String layoutCompoundLabel(javax.swing.JComponent, java.awt.FontMetrics, java.lang.String, javax.swing.Icon, int, int, int, int, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, int)
    {
        java.awt.Rectangle r4, r5, r6;
        byte $b7, $b8, $b9, $b10;
        int i0, i1, i2, i3, i4, i5, i6;
        java.lang.String r2, $r8;
        boolean $z0, z1, z2, z3, z4, z5;
        javax.swing.JComponent r0;
        javax.swing.Icon r3;
        java.awt.ComponentOrientation $r7;
        java.awt.FontMetrics r1;

        r0 := @parameter0: javax.swing.JComponent;

        r1 := @parameter1: java.awt.FontMetrics;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: javax.swing.Icon;

        i2 := @parameter4: int;

        i0 := @parameter5: int;

        i3 := @parameter6: int;

        i1 := @parameter7: int;

        r4 := @parameter8: java.awt.Rectangle;

        r5 := @parameter9: java.awt.Rectangle;

        r6 := @parameter10: java.awt.Rectangle;

        i4 := @parameter11: int;

        z1 = 1;

        z5 = 1;

        z4 = 1;

        z3 = 1;

        z2 = 1;

        i5 = i0;

        i6 = i1;

        if r0 == null goto label01;

        $r7 = virtualinvoke r0.<javax.swing.JComponent: java.awt.ComponentOrientation getComponentOrientation()>();

        $z0 = virtualinvoke $r7.<java.awt.ComponentOrientation: boolean isLeftToRight()>();

        if $z0 != 0 goto label01;

        z1 = 0;

        z5 = 0;

        z4 = 0;

        z3 = 0;

        z2 = 0;

     label01:
        lookupswitch(i0)
        {
            case 10: goto label02;
            case 11: goto label05;
            default: goto label08;
        };

     label02:
        if z5 == 0 goto label03;

        $b7 = 2;

        goto label04;

     label03:
        $b7 = 4;

     label04:
        i5 = $b7;

        goto label08;

     label05:
        if z2 == 0 goto label06;

        $b8 = 4;

        goto label07;

     label06:
        $b8 = 2;

     label07:
        i5 = $b8;

     label08:
        lookupswitch(i1)
        {
            case 10: goto label09;
            case 11: goto label12;
            default: goto label15;
        };

     label09:
        if z3 == 0 goto label10;

        $b9 = 2;

        goto label11;

     label10:
        $b9 = 4;

     label11:
        i6 = $b9;

        goto label15;

     label12:
        if z4 == 0 goto label13;

        $b10 = 4;

        goto label14;

     label13:
        $b10 = 2;

     label14:
        i6 = $b10;

     label15:
        $r8 = staticinvoke <com.jidesoft.plaf.basic.BasicStyledLabelUI: java.lang.String layoutCompoundLabelImpl(javax.swing.JComponent,java.awt.FontMetrics,java.lang.String,javax.swing.Icon,int,int,int,int,java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle,int)>(r0, r1, r2, r3, i2, i5, i3, i6, r4, r5, r6, i4);

        return $r8;
    }

    public static java.lang.String layoutCompoundLabel(java.awt.FontMetrics, java.lang.String, javax.swing.Icon, int, int, int, int, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, int)
    {
        java.awt.Rectangle r3, r4, r5;
        javax.swing.Icon r2;
        java.awt.FontMetrics r0;
        int i0, i1, i2, i3, i4;
        java.lang.String r1, $r6;

        r0 := @parameter0: java.awt.FontMetrics;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: javax.swing.Icon;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        i3 := @parameter6: int;

        r3 := @parameter7: java.awt.Rectangle;

        r4 := @parameter8: java.awt.Rectangle;

        r5 := @parameter9: java.awt.Rectangle;

        i4 := @parameter10: int;

        $r6 = staticinvoke <com.jidesoft.plaf.basic.BasicStyledLabelUI: java.lang.String layoutCompoundLabelImpl(javax.swing.JComponent,java.awt.FontMetrics,java.lang.String,javax.swing.Icon,int,int,int,int,java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle,int)>(null, r0, r1, r2, i0, i1, i2, i3, r3, r4, r5, i4);

        return $r6;
    }

    private static java.lang.String layoutCompoundLabelImpl(javax.swing.JComponent, java.awt.FontMetrics, java.lang.String, javax.swing.Icon, int, int, int, int, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, int)
    {
        java.awt.Insets $r5;
        int i0, i1, $i2, $i3, $i4, i5, $i6, $i7, $i8, $i9, i10, $i11, $i12, $i13, $i14, i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, i100, $i101, i102, $i103, $i104, $i105, $i106, $i107, $i108, $i109, $i110, $i111, $i112, $i113, $i114, $i115, $i116, $i117, $i118, $i119, $i120, $i121, $i122, $i123, $i124, i125, i126, $i127, $i128, $i129, $i130, $i131, $i132, $i133, $i134, i135;
        java.lang.Object $r6;
        javax.swing.text.View $r9;
        java.lang.String r8;
        java.awt.FontMetrics r7;
        boolean $z0, $z1;
        javax.swing.Icon r0;
        float $f0, $f1;
        java.awt.Rectangle r1, r2, r4;
        javax.swing.JComponent r3;

        r3 := @parameter0: javax.swing.JComponent;

        r7 := @parameter1: java.awt.FontMetrics;

        r8 := @parameter2: java.lang.String;

        r0 := @parameter3: javax.swing.Icon;

        i10 := @parameter4: int;

        i15 := @parameter5: int;

        i5 := @parameter6: int;

        i1 := @parameter7: int;

        r2 := @parameter8: java.awt.Rectangle;

        r1 := @parameter9: java.awt.Rectangle;

        r4 := @parameter10: java.awt.Rectangle;

        i0 := @parameter11: int;

        if r0 == null goto label01;

        $i98 = interfaceinvoke r0.<javax.swing.Icon: int getIconWidth()>();

        r1.<java.awt.Rectangle: int width> = $i98;

        $i99 = interfaceinvoke r0.<javax.swing.Icon: int getIconHeight()>();

        r1.<java.awt.Rectangle: int height> = $i99;

        goto label02;

     label01:
        r1.<java.awt.Rectangle: int height> = 0;

        r1.<java.awt.Rectangle: int width> = 0;

     label02:
        if r8 == null goto label03;

        $z0 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label04;

     label03:
        $z1 = 1;

        goto label05;

     label04:
        $z1 = 0;

     label05:
        if $z1 == 0 goto label06;

        r4.<java.awt.Rectangle: int height> = 0;

        r4.<java.awt.Rectangle: int width> = 0;

        r8 = "";

        i100 = 0;

        goto label13;

     label06:
        if r0 != null goto label07;

        $i101 = 0;

        goto label08;

     label07:
        $i101 = i0;

     label08:
        i100 = $i101;

        if i1 != 0 goto label09;

        i102 = r2.<java.awt.Rectangle: int width>;

        goto label10;

     label09:
        $i4 = r2.<java.awt.Rectangle: int width>;

        $i2 = r1.<java.awt.Rectangle: int width>;

        $i3 = $i2 + $i101;

        i102 = $i4 - $i3;

     label10:
        if r3 == null goto label11;

        $r6 = virtualinvoke r3.<javax.swing.JComponent: java.lang.Object getClientProperty(java.lang.Object)>("html");

        $r9 = (javax.swing.text.View) $r6;

        goto label12;

     label11:
        $r9 = null;

     label12:
        if $r9 == null goto label13;

        $f0 = virtualinvoke $r9.<javax.swing.text.View: float getPreferredSpan(int)>(0);

        $i95 = (int) $f0;

        $i96 = staticinvoke <java.lang.Math: int min(int,int)>(i102, $i95);

        r4.<java.awt.Rectangle: int width> = $i96;

        $f1 = virtualinvoke $r9.<javax.swing.text.View: float getPreferredSpan(int)>(1);

        $i97 = (int) $f1;

        r4.<java.awt.Rectangle: int height> = $i97;

     label13:
        if i5 != 1 goto label15;

        if i1 == 0 goto label14;

        r4.<java.awt.Rectangle: int y> = 0;

        goto label18;

     label14:
        $i92 = r4.<java.awt.Rectangle: int height>;

        $i93 = $i92 + i100;

        $i94 = neg $i93;

        r4.<java.awt.Rectangle: int y> = $i94;

        goto label18;

     label15:
        if i5 != 0 goto label16;

        $i87 = r1.<java.awt.Rectangle: int height>;

        $i90 = $i87 / 2;

        $i88 = r4.<java.awt.Rectangle: int height>;

        $i89 = $i88 / 2;

        $i91 = $i90 - $i89;

        r4.<java.awt.Rectangle: int y> = $i91;

        goto label18;

     label16:
        if i1 == 0 goto label17;

        $i85 = r1.<java.awt.Rectangle: int height>;

        $i84 = r4.<java.awt.Rectangle: int height>;

        $i86 = $i85 - $i84;

        r4.<java.awt.Rectangle: int y> = $i86;

        goto label18;

     label17:
        $i6 = r1.<java.awt.Rectangle: int height>;

        $i7 = $i6 + i100;

        r4.<java.awt.Rectangle: int y> = $i7;

     label18:
        if i1 != 2 goto label19;

        $i81 = r4.<java.awt.Rectangle: int width>;

        $i82 = $i81 + i100;

        $i83 = neg $i82;

        r4.<java.awt.Rectangle: int x> = $i83;

        goto label21;

     label19:
        if i1 != 0 goto label20;

        $i76 = r1.<java.awt.Rectangle: int width>;

        $i79 = $i76 / 2;

        $i77 = r4.<java.awt.Rectangle: int width>;

        $i78 = $i77 / 2;

        $i80 = $i79 - $i78;

        r4.<java.awt.Rectangle: int x> = $i80;

        goto label21;

     label20:
        $i8 = r1.<java.awt.Rectangle: int width>;

        $i9 = $i8 + i100;

        r4.<java.awt.Rectangle: int x> = $i9;

     label21:
        $i103 = r1.<java.awt.Rectangle: int x>;

        $i104 = r4.<java.awt.Rectangle: int x>;

        $i105 = staticinvoke <java.lang.Math: int min(int,int)>($i103, $i104);

        $i106 = r1.<java.awt.Rectangle: int x>;

        $i107 = r1.<java.awt.Rectangle: int width>;

        $i108 = $i106 + $i107;

        $i109 = r4.<java.awt.Rectangle: int x>;

        $i110 = r4.<java.awt.Rectangle: int width>;

        $i111 = $i109 + $i110;

        $i112 = staticinvoke <java.lang.Math: int max(int,int)>($i108, $i111);

        $i113 = $i112 - $i105;

        $i114 = r1.<java.awt.Rectangle: int y>;

        $i115 = r4.<java.awt.Rectangle: int y>;

        $i116 = staticinvoke <java.lang.Math: int min(int,int)>($i114, $i115);

        $i117 = r1.<java.awt.Rectangle: int y>;

        $i118 = r1.<java.awt.Rectangle: int height>;

        $i119 = $i117 + $i118;

        $i120 = r4.<java.awt.Rectangle: int y>;

        $i121 = r4.<java.awt.Rectangle: int height>;

        $i122 = $i120 + $i121;

        $i123 = staticinvoke <java.lang.Math: int max(int,int)>($i119, $i122);

        $i124 = $i123 - $i116;

        if i10 != 1 goto label22;

        $i75 = r2.<java.awt.Rectangle: int y>;

        i125 = $i75 - $i116;

        goto label24;

     label22:
        if i10 != 0 goto label23;

        $i71 = r2.<java.awt.Rectangle: int y>;

        $i69 = r2.<java.awt.Rectangle: int height>;

        $i70 = $i69 / 2;

        $i74 = $i71 + $i70;

        $i72 = $i124 / 2;

        $i73 = $i116 + $i72;

        i125 = $i74 - $i73;

        goto label24;

     label23:
        $i12 = r2.<java.awt.Rectangle: int y>;

        $i11 = r2.<java.awt.Rectangle: int height>;

        $i14 = $i12 + $i11;

        $i13 = $i116 + $i124;

        i125 = $i14 - $i13;

     label24:
        if i15 != 2 goto label25;

        $i68 = r2.<java.awt.Rectangle: int x>;

        i126 = $i68 - $i105;

        goto label27;

     label25:
        if i15 != 4 goto label26;

        $i65 = r2.<java.awt.Rectangle: int x>;

        $i64 = r2.<java.awt.Rectangle: int width>;

        $i67 = $i65 + $i64;

        $i66 = $i105 + $i113;

        i126 = $i67 - $i66;

        goto label27;

     label26:
        $i18 = r2.<java.awt.Rectangle: int x>;

        $i16 = r2.<java.awt.Rectangle: int width>;

        $i17 = $i16 / 2;

        $i21 = $i18 + $i17;

        $i19 = $i113 / 2;

        $i20 = $i105 + $i19;

        i126 = $i21 - $i20;

     label27:
        $i127 = r4.<java.awt.Rectangle: int x>;

        $i128 = $i127 + i126;

        r4.<java.awt.Rectangle: int x> = $i128;

        $i129 = r4.<java.awt.Rectangle: int y>;

        $i130 = $i129 + i125;

        r4.<java.awt.Rectangle: int y> = $i130;

        $i131 = r1.<java.awt.Rectangle: int x>;

        $i132 = $i131 + i126;

        r1.<java.awt.Rectangle: int x> = $i132;

        $i133 = r1.<java.awt.Rectangle: int y>;

        $i134 = $i133 + i125;

        r1.<java.awt.Rectangle: int y> = $i134;

        if 0 >= 0 goto label28;

        $i58 = r4.<java.awt.Rectangle: int x>;

        $i59 = $i58 - 0;

        r4.<java.awt.Rectangle: int x> = $i59;

     label28:
        $i22 = r2.<java.awt.Rectangle: int height>;

        $i60 = $i22 / 2;

        i135 = $i60;

        $r5 = virtualinvoke r3.<javax.swing.JComponent: java.awt.Insets getInsets()>();

        $i61 = r2.<java.awt.Rectangle: int x>;

        $i62 = r2.<java.awt.Rectangle: int width>;

        $i23 = r1.<java.awt.Rectangle: int width>;

        $i63 = $i62 - $i23;

        if i1 != 0 goto label30;

        $i45 = r2.<java.awt.Rectangle: int width>;

        $i44 = r4.<java.awt.Rectangle: int width>;

        if $i45 >= $i44 goto label29;

        $i56 = $i61 + $i63;

        $i57 = $i56 / 2;

        r1.<java.awt.Rectangle: int x> = $i57;

        goto label32;

     label29:
        i46 = r4.<java.awt.Rectangle: int x>;

        $i48 = r4.<java.awt.Rectangle: int x>;

        $i47 = r4.<java.awt.Rectangle: int width>;

        $i49 = r1.<java.awt.Rectangle: int width>;

        $i54 = r4.<java.awt.Rectangle: int x>;

        $i51 = r4.<java.awt.Rectangle: int width>;

        $i50 = r1.<java.awt.Rectangle: int width>;

        $i52 = $i51 - $i50;

        $i53 = $i52 / 2;

        $i55 = $i54 + $i53;

        r1.<java.awt.Rectangle: int x> = $i55;

        goto label32;

     label30:
        $i24 = r1.<java.awt.Rectangle: int x>;

        if $i24 >= $i61 goto label31;

        $i42 = r4.<java.awt.Rectangle: int x>;

        $i40 = r1.<java.awt.Rectangle: int x>;

        $i41 = $i61 - $i40;

        $i43 = $i42 + $i41;

        r4.<java.awt.Rectangle: int x> = $i43;

        r1.<java.awt.Rectangle: int x> = $i61;

        goto label32;

     label31:
        $i25 = r1.<java.awt.Rectangle: int x>;

        if $i25 <= $i63 goto label32;

        if i15 == 2 goto label32;

        r1.<java.awt.Rectangle: int x> = $i63;

        $i38 = r4.<java.awt.Rectangle: int x>;

        $i36 = r1.<java.awt.Rectangle: int x>;

        $i37 = $i36 - $i63;

        $i39 = $i38 - $i37;

        r4.<java.awt.Rectangle: int x> = $i39;

     label32:
        if $r5 == null goto label33;

        $i33 = $r5.<java.awt.Insets: int bottom>;

        $i32 = $r5.<java.awt.Insets: int top>;

        $i34 = $i33 + $i32;

        $i35 = $i34 / 2;

        i135 = $i60 - $i35;

     label33:
        if r0 == null goto label34;

        $i30 = interfaceinvoke r0.<javax.swing.Icon: int getIconHeight()>();

        $i31 = $i30 / 2;

        i135 = i135 - $i31;

     label34:
        if i10 != 1 goto label35;

        $i28 = r1.<java.awt.Rectangle: int y>;

        $i29 = staticinvoke <java.lang.Math: int min(int,int)>(i135, $i28);

        r1.<java.awt.Rectangle: int y> = $i29;

        goto label36;

     label35:
        if i10 != 3 goto label36;

        $i26 = r1.<java.awt.Rectangle: int y>;

        $i27 = staticinvoke <java.lang.Math: int max(int,int)>(i135, $i26);

        r1.<java.awt.Rectangle: int y> = $i27;

     label36:
        return r8;
    }

    static void <clinit>()
    {
        com.jidesoft.plaf.basic.BasicStyledLabelUI $r0;

        $r0 = new com.jidesoft.plaf.basic.BasicStyledLabelUI;

        specialinvoke $r0.<com.jidesoft.plaf.basic.BasicStyledLabelUI: void <init>()>();

        <com.jidesoft.plaf.basic.BasicStyledLabelUI: com.jidesoft.plaf.basic.BasicStyledLabelUI styledLabelUI> = $r0;

        return;
    }
}
