public class org.apache.lucene.index.CheckIndex extends java.lang.Object
{
    private java.io.PrintStream infoStream;
    private org.apache.lucene.store.Directory dir;
    private boolean crossCheckTermVectors;
    private boolean verbose;
    private static boolean assertsOn;
    static final boolean $assertionsDisabled;

    public void <init>(org.apache.lucene.store.Directory)
    {
        org.apache.lucene.index.CheckIndex r0;
        org.apache.lucene.store.Directory r1;

        r0 := @this: org.apache.lucene.index.CheckIndex;

        r1 := @parameter0: org.apache.lucene.store.Directory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.lucene.index.CheckIndex: org.apache.lucene.store.Directory dir> = r1;

        r0.<org.apache.lucene.index.CheckIndex: java.io.PrintStream infoStream> = null;

        return;
    }

    public void setCrossCheckTermVectors(boolean)
    {
        org.apache.lucene.index.CheckIndex r0;
        boolean z0;

        r0 := @this: org.apache.lucene.index.CheckIndex;

        z0 := @parameter0: boolean;

        r0.<org.apache.lucene.index.CheckIndex: boolean crossCheckTermVectors> = z0;

        return;
    }

    public boolean getCrossCheckTermVectors()
    {
        org.apache.lucene.index.CheckIndex r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.CheckIndex;

        $z0 = r0.<org.apache.lucene.index.CheckIndex: boolean crossCheckTermVectors>;

        return $z0;
    }

    public void setInfoStream(java.io.PrintStream, boolean)
    {
        java.io.PrintStream r1;
        org.apache.lucene.index.CheckIndex r0;
        boolean z0;

        r0 := @this: org.apache.lucene.index.CheckIndex;

        r1 := @parameter0: java.io.PrintStream;

        z0 := @parameter1: boolean;

        r0.<org.apache.lucene.index.CheckIndex: java.io.PrintStream infoStream> = r1;

        r0.<org.apache.lucene.index.CheckIndex: boolean verbose> = z0;

        return;
    }

    public void setInfoStream(java.io.PrintStream)
    {
        java.io.PrintStream r1;
        org.apache.lucene.index.CheckIndex r0;

        r0 := @this: org.apache.lucene.index.CheckIndex;

        r1 := @parameter0: java.io.PrintStream;

        virtualinvoke r0.<org.apache.lucene.index.CheckIndex: void setInfoStream(java.io.PrintStream,boolean)>(r1, 0);

        return;
    }

    private static void msg(java.io.PrintStream, java.lang.String)
    {
        java.io.PrintStream r0;
        java.lang.String r1;

        r0 := @parameter0: java.io.PrintStream;

        r1 := @parameter1: java.lang.String;

        if r0 == null goto label1;

        virtualinvoke r0.<java.io.PrintStream: void println(java.lang.String)>(r1);

     label1:
        return;
    }

    public org.apache.lucene.index.CheckIndex$Status checkIndex() throws java.io.IOException
    {
        org.apache.lucene.index.CheckIndex r0;
        org.apache.lucene.index.CheckIndex$Status $r1;

        r0 := @this: org.apache.lucene.index.CheckIndex;

        $r1 = virtualinvoke r0.<org.apache.lucene.index.CheckIndex: org.apache.lucene.index.CheckIndex$Status checkIndex(java.util.List)>(null);

        return $r1;
    }

    public org.apache.lucene.index.CheckIndex$Status checkIndex(java.util.List) throws java.io.IOException
    {
        org.apache.lucene.index.FieldInfos $r105;
        org.apache.lucene.store.IOContext $r10, $r101;
        org.apache.lucene.index.CheckIndex$Status$DocValuesStatus $r121, $r130;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i19, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, i64, i65, i66, i67, i68, $i69, $i70, $i72;
        java.io.PrintStream $r25, $r32, $r35, $r48, $r68, $r73, $r80, $r94, $r99, $r103, $r104, $r107, $r112, $r114, $r116, $r118, $r120, $r132, $r140, $r169, $r206, $r207, $r209, $r214, $r219, $r226, $r227, $r230, $r232, $r234, $r238, $r260, $r262, $r267, $r268, $r269, $r272, $r273, $r274, $r276, $r277, $r278, $r280, $r281, $r282, $r290;
        org.apache.lucene.codecs.Codec $r66;
        org.apache.lucene.index.CheckIndex$Status$TermVectorStatus $r119, $r128;
        java.text.NumberFormat $r1;
        java.lang.String $r9, $r31, $r40, $r43, $r44, $r55, $r60, $r62, $r71, $r77, $r84, $r86, $r88, $r98, $r111, $r148, $r154, $r162, $r173, $r180, $r189, $r197, $r205, $r212, $r217, $r221, $r223, $r225, $r237, $r257, $r266, r283, r284, r285, r287, r288, $r289, $r301, r302, r305, r306, r307;
        java.lang.RuntimeException $r328, $r330, $r332, $r333, $r335, $r338, $r340, $r342, $r344, $r345, $r346, $r347, $r348;
        org.apache.lucene.index.CheckIndex$Status$TermIndexStatus $r115, $r124;
        org.apache.lucene.store.Directory $r5, $r6, $r11;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, z13, $z14, $z15, $z17, $z18;
        java.util.List r21, $r46, $r229;
        org.apache.lucene.index.CheckIndex$Status $r309;
        org.apache.lucene.index.CheckIndex$Status$SegmentInfoStatus $r317;
        org.apache.lucene.index.SegmentReader r303, $r326;
        double $d0, $d1, $d2;
        org.apache.lucene.index.SegmentInfoPerCommit $r41, $r134, r286;
        java.util.Map $r13, $r14, $r90, $r92, $r253;
        org.apache.lucene.index.SegmentInfo $r42, $r54, $r58, $r61, $r63, $r64, $r65, $r75, $r78, $r87, $r89, $r91, $r146, $r160, $r163, $r164, $r165, $r167, $r187, $r195, $r201, $r224, $r256, $r304;
        java.lang.StringBuilder $r16, $r17, $r18, $r19, $r20, $r26, $r27, $r28, $r29, $r30, $r36, $r37, $r38, $r39, $r49, $r50, $r51, $r52, $r53, $r56, $r57, $r59, $r69, $r70, $r74, $r76, $r81, $r83, $r95, $r96, $r97, $r108, $r109, $r110, $r143, $r144, $r145, $r147, $r151, $r152, $r153, $r157, $r158, $r159, $r161, $r170, $r171, $r172, $r176, $r177, $r178, $r179, $r184, $r185, $r186, $r188, $r192, $r193, $r194, $r196, $r200, $r202, $r203, $r204, $r210, $r211, $r215, $r216, $r220, $r222, $r235, $r236, $r240, $r241, $r243, $r244, $r246, $r247, $r248, $r249, $r250, $r252, $r254, $r263, $r264, $r265, $r292, $r293, $r294, $r295, $r296, $r297, $r298, $r299, $r300, $r310, $r311, $r312, $r313, $r314, $r315, $r316, $r318, $r319, $r320, $r321, $r322, $r323, $r324, $r325, $r327, $r329, $r331, $r334, $r336, $r337, $r339, $r341, $r343, $r349, $r350, $r351;
        long $l18, $l20, $l21;
        org.apache.lucene.util.Bits $r102, $r166;
        org.apache.lucene.store.IndexInput $r12;
        java.util.Locale $r0;
        java.util.Collection $r82, $r85;
        org.apache.lucene.index.CheckIndex$Status$FieldNormStatus $r113, $r122;
        java.lang.Object $r231, $r255;
        java.util.Comparator $r7;
        org.apache.lucene.index.CheckIndex$Status$StoredFieldStatus $r117, $r126;
        java.lang.Throwable $r123, $r125, $r127, $r129, $r131, $r258, $r259, $r270, $r271, $r275, $r279;
        org.apache.lucene.index.CheckIndex r4;
        org.apache.lucene.index.SegmentInfos $r22, $r23, $r33, $r133, $r308;
        java.util.Iterator $r8, $r228;

        r4 := @this: org.apache.lucene.index.CheckIndex;

        r21 := @parameter0: java.util.List;

        $r0 = <java.util.Locale: java.util.Locale ROOT>;

        $r1 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getInstance(java.util.Locale)>($r0);

        $r308 = new org.apache.lucene.index.SegmentInfos;

        specialinvoke $r308.<org.apache.lucene.index.SegmentInfos: void <init>()>();

        $r309 = new org.apache.lucene.index.CheckIndex$Status;

        specialinvoke $r309.<org.apache.lucene.index.CheckIndex$Status: void <init>()>();

        $r5 = r4.<org.apache.lucene.index.CheckIndex: org.apache.lucene.store.Directory dir>;

        $r309.<org.apache.lucene.index.CheckIndex$Status: org.apache.lucene.store.Directory dir> = $r5;

     label01:
        $r6 = r4.<org.apache.lucene.index.CheckIndex: org.apache.lucene.store.Directory dir>;

        virtualinvoke $r308.<org.apache.lucene.index.SegmentInfos: void read(org.apache.lucene.store.Directory)>($r6);

     label02:
        goto label05;

     label03:
        $r279 := @caughtexception;

        $r280 = r4.<org.apache.lucene.index.CheckIndex: java.io.PrintStream infoStream>;

        staticinvoke <org.apache.lucene.index.CheckIndex: void msg(java.io.PrintStream,java.lang.String)>($r280, "ERROR: could not read any segments file in directory");

        $r309.<org.apache.lucene.index.CheckIndex$Status: boolean missingSegments> = 1;

        $r281 = r4.<org.apache.lucene.index.CheckIndex: java.io.PrintStream infoStream>;

        if $r281 == null goto label04;

        $r282 = r4.<org.apache.lucene.index.CheckIndex: java.io.PrintStream infoStream>;

        virtualinvoke $r279.<java.lang.Throwable: void printStackTrace(java.io.PrintStream)>($r282);

     label04:
        return $r309;

     label05:
        r283 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(2147483647);

        r284 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(-2147483648);

        r285 = null;

        r307 = null;

        r306 = null;

        r305 = null;

        z13 = 0;

        $r7 = staticinvoke <org.apache.lucene.util.StringHelper: java.util.Comparator getVersionComparator()>();

        $r8 = virtualinvoke $r308.<org.apache.lucene.index.SegmentInfos: java.util.Iterator iterator()>();

     label06:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r255 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r286 = (org.apache.lucene.index.SegmentInfoPerCommit) $r255;

        $r256 = r286.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        $r257 = virtualinvoke $r256.<org.apache.lucene.index.SegmentInfo: java.lang.String getVersion()>();

        if $r257 != null goto label07;

        r285 = "pre-3.1";

        r307 = "pre-3.1";

        r306 = "pre-3.1";

        r305 = "pre-3.1";

        goto label09;

     label07:
        z13 = 1;

        $i58 = interfaceinvoke $r7.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r257, r283);

        if $i58 >= 0 goto label08;

        r283 = $r257;

     label08:
        $i59 = interfaceinvoke $r7.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r257, r284);

        if $i59 <= 0 goto label09;

        r284 = $r257;

     label09:
        goto label06;

     label10:
        $i0 = virtualinvoke $r308.<org.apache.lucene.index.SegmentInfos: int size()>();

        $r9 = virtualinvoke $r308.<org.apache.lucene.index.SegmentInfos: java.lang.String getSegmentsFileName()>();

     label11:
        $r11 = r4.<org.apache.lucene.index.CheckIndex: org.apache.lucene.store.Directory dir>;

        $r10 = <org.apache.lucene.store.IOContext: org.apache.lucene.store.IOContext DEFAULT>;

        $r12 = virtualinvoke $r11.<org.apache.lucene.store.Directory: org.apache.lucene.store.IndexInput openInput(java.lang.String,org.apache.lucene.store.IOContext)>($r9, $r10);

     label12:
        goto label15;

     label13:
        $r275 := @caughtexception;

        $r276 = r4.<org.apache.lucene.index.CheckIndex: java.io.PrintStream infoStream>;

        staticinvoke <org.apache.lucene.index.CheckIndex: void msg(java.io.PrintStream,java.lang.String)>($r276, "ERROR: could not open segments file in directory");

        $r277 = r4.<org.apache.lucene.index.CheckIndex: java.io.PrintStream infoStream>;

        if $r277 == null goto label14;

        $r278 = r4.<org.apache.lucene.index.CheckIndex: java.io.PrintStream infoStream>;

        virtualinvoke $r275.<java.lang.Throwable: void printStackTrace(java.io.PrintStream)>($r278);

     label14:
        $r309.<org.apache.lucene.index.CheckIndex$Status: boolean cantOpenSegments> = 1;

        return $r309;

     label15:
        virtualinvoke $r12.<org.apache.lucene.store.IndexInput: int readInt()>();

     label16:
        if $r12 == null goto label24;

        virtualinvoke $r12.<org.apache.lucene.store.IndexInput: void close()>();

        goto label24;

     label17:
        $r271 := @caughtexception;

        $r272 = r4.<org.apache.lucene.index.CheckIndex: java.io.PrintStream infoStream>;

        staticinvoke <org.apache.lucene.index.CheckIndex: void msg(java.io.PrintStream,java.lang.String)>($r272, "ERROR: could not read segment file version in directory");

        $r273 = r4.<org.apache.lucene.index.CheckIndex: java.io.PrintStream infoStream>;

        if $r273 == null goto label18;

        $r274 = r4.<org.apache.lucene.index.CheckIndex: java.io.PrintStream infoStream>;

        virtualinvoke $r271.<java.lang.Throwable: void printStackTrace(java.io.PrintStream)>($r274);

     label18:
        $r309.<org.apache.lucene.index.CheckIndex$Status: boolean missingSegmentVersion> = 1;

     label19:
        if $r12 == null goto label20;

        virtualinvoke $r12.<org.apache.lucene.store.IndexInput: void close()>();

     label20:
        return $r309;

     label21:
        $r270 := @caughtexception;

     label22:
        if $r12 == null goto label23;

        virtualinvoke $r12.<org.apache.lucene.store.IndexInput: void close()>();

     label23:
        throw $r270;

     label24:
        $r309.<org.apache.lucene.index.CheckIndex$Status: java.lang.String segmentsFileName> = $r9;

        $r309.<org.apache.lucene.index.CheckIndex$Status: int numSegments> = $i0;

        $r13 = virtualinvoke $r308.<org.apache.lucene.index.SegmentInfos: java.util.Map getUserData()>();

        $r309.<org.apache.lucene.index.CheckIndex$Status: java.util.Map userData> = $r13;

        $r14 = virtualinvoke $r308.<org.apache.lucene.index.SegmentInfos: java.util.Map getUserData()>();

        $i1 = interfaceinvoke $r14.<java.util.Map: int size()>();

        if $i1 <= 0 goto label25;

        $r310 = new java.lang.StringBuilder;

        specialinvoke $r310.<java.lang.StringBuilder: void <init>()>();

        $r252 = virtualinvoke $r310.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" userData=");

        $r253 = virtualinvoke $r308.<org.apache.lucene.index.SegmentInfos: java.util.Map getUserData()>();

        $r254 = virtualinvoke $r252.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r253);

        r287 = virtualinvoke $r254.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label26;

     label25:
        r287 = "";

     label26:
        if r306 == null goto label28;

        if z13 == 0 goto label27;

        $r311 = new java.lang.StringBuilder;

        specialinvoke $r311.<java.lang.StringBuilder: void <init>()>();

        $r246 = virtualinvoke $r311.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("versions=[");

        $r247 = virtualinvoke $r246.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r307);

        $r248 = virtualinvoke $r247.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" .. ");

        $r249 = virtualinvoke $r248.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r284);

        $r250 = virtualinvoke $r249.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        r288 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label31;

     label27:
        $r312 = new java.lang.StringBuilder;

        specialinvoke $r312.<java.lang.StringBuilder: void <init>()>();

        $r243 = virtualinvoke $r312.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("version=");

        $r244 = virtualinvoke $r243.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r305);

        r288 = virtualinvoke $r244.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label31;

     label28:
        $z1 = virtualinvoke r283.<java.lang.String: boolean equals(java.lang.Object)>(r284);

        if $z1 == 0 goto label29;

        $r313 = new java.lang.StringBuilder;

        specialinvoke $r313.<java.lang.StringBuilder: void <init>()>();

        $r240 = virtualinvoke $r313.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("version=");

        $r241 = virtualinvoke $r240.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r283);

        $r289 = virtualinvoke $r241.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label30;

     label29:
        $r314 = new java.lang.StringBuilder;

        specialinvoke $r314.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r314.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("versions=[");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r283);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" .. ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r284);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r289 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

     label30:
        r288 = $r289;

     label31:
        $r290 = r4.<org.apache.lucene.index.CheckIndex: java.io.PrintStream infoStream>;

        $r315 = new java.lang.StringBuilder;

        specialinvoke $r315.<java.lang.StringBuilder: void <init>()>();

        $r292 = virtualinvoke $r315.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Segments file=");

        $r293 = virtualinvoke $r292.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r294 = virtualinvoke $r293.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" numSegments=");

        $r295 = virtualinvoke $r294.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r296 = virtualinvoke $r295.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r297 = virtualinvoke $r296.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r288);

        $r298 = virtualinvoke $r297.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" format=");

        $r299 = virtualinvoke $r298.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r300 = virtualinvoke $r299.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r287);

        $r301 = virtualinvoke $r300.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.lucene.index.CheckIndex: void msg(java.io.PrintStream,java.lang.String)>($r290, $r301);

        if r21 == null goto label36;

        $r309.<org.apache.lucene.index.CheckIndex$Status: boolean partial> = 1;

        $r227 = r4.<org.apache.lucene.index.CheckIndex: java.io.PrintStream infoStream>;

        if $r227 == null goto label32;

        $r238 = r4.<org.apache.lucene.index.CheckIndex: java.io.PrintStream infoStream>;

        virtualinvoke $r238.<java.io.PrintStream: void print(java.lang.String)>("\nChecking only these segments:");

     label32:
        $r228 = interfaceinvoke r21.<java.util.List: java.util.Iterator iterator()>();

     label33:
        $z14 = interfaceinvoke $r228.<java.util.Iterator: boolean hasNext()>();

        if $z14 == 0 goto label35;

        $r231 = interfaceinvoke $r228.<java.util.Iterator: java.lang.Object next()>();

        r302 = (java.lang.String) $r231;

        $r232 = r4.<org.apache.lucene.index.CheckIndex: java.io.PrintStream infoStream>;

        if $r232 == null goto label34;

        $r234 = r4.<org.apache.lucene.index.CheckIndex: java.io.PrintStream infoStream>;

        $r316 = new java.lang.StringBuilder;

        specialinvoke $r316.<java.lang.StringBuilder: void <init>()>();

        $r235 = virtualinvoke $r316.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r236 = virtualinvoke $r235.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r302);

        $r237 = virtualinvoke $r236.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r234.<java.io.PrintStream: void print(java.lang.String)>($r237);

     label34:
        goto label33;

     label35:
        $r229 = $r309.<org.apache.lucene.index.CheckIndex$Status: java.util.List segmentsChecked>;

        interfaceinvoke $r229.<java.util.List: boolean addAll(java.util.Collection)>(r21);

        $r230 = r4.<org.apache.lucene.index.CheckIndex: java.io.PrintStream infoStream>;

        staticinvoke <org.apache.lucene.index.CheckIndex: void msg(java.io.PrintStream,java.lang.String)>($r230, ":");

     label36:
        if 0 == 0 goto label37;

        $r226 = r4.<org.apache.lucene.index.CheckIndex: java.io.PrintStream infoStream>;

        staticinvoke <org.apache.lucene.index.CheckIndex: void msg(java.io.PrintStream,java.lang.String)>($r226, "\nERROR: this index appears to be created by a newer version of Lucene than this tool was compiled on; please re-compile this tool on the matching version of Lucene; exiting");

        $r309.<org.apache.lucene.index.CheckIndex$Status: boolean toolOutOfDate> = 1;

        return $r309;

     label37:
        $r22 = virtualinvoke $r308.<org.apache.lucene.index.SegmentInfos: org.apache.lucene.index.SegmentInfos clone()>();

        $r309.<org.apache.lucene.index.CheckIndex$Status: org.apache.lucene.index.SegmentInfos newSegments> = $r22;

        $r23 = $r309.<org.apache.lucene.index.CheckIndex$Status: org.apache.lucene.index.SegmentInfos newSegments>;

        virtualinvoke $r23.<org.apache.lucene.index.SegmentInfos: void clear()>();

        $i72 = (int) -1;

        $r309.<org.apache.lucene.index.CheckIndex$Status: int maxSegmentName> = $i72;

        i64 = 0;

     label38:
        if i64 >= $i0 goto label78;

        $r41 = virtualinvoke $r308.<org.apache.lucene.index.SegmentInfos: org.apache.lucene.index.SegmentInfoPerCommit info(int)>(i64);

        $r42 = $r41.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        $r43 = $r42.<org.apache.lucene.index.SegmentInfo: java.lang.String name>;

        $r44 = virtualinvoke $r43.<java.lang.String: java.lang.String substring(int)>(1);

        $i11 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r44, 36);

        $i12 = $r309.<org.apache.lucene.index.CheckIndex$Status: int maxSegmentName>;

        if $i11 <= $i12 goto label39;

        $r309.<org.apache.lucene.index.CheckIndex$Status: int maxSegmentName> = $i11;

     label39:
        if r21 == null goto label40;

        $r224 = $r41.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        $r225 = $r224.<org.apache.lucene.index.SegmentInfo: java.lang.String name>;

        $z12 = interfaceinvoke r21.<java.util.List: boolean contains(java.lang.Object)>($r225);

        if $z12 != 0 goto label40;

        goto label77;

     label40:
        $r317 = new org.apache.lucene.index.CheckIndex$Status$SegmentInfoStatus;

        specialinvoke $r317.<org.apache.lucene.index.CheckIndex$Status$SegmentInfoStatus: void <init>()>();

        $r46 = $r309.<org.apache.lucene.index.CheckIndex$Status: java.util.List segmentInfos>;

        interfaceinvoke $r46.<java.util.List: boolean add(java.lang.Object)>($r317);

        $r48 = r4.<org.apache.lucene.index.CheckIndex: java.io.PrintStream infoStream>;

        $r318 = new java.lang.StringBuilder;

        specialinvoke $r318.<java.lang.StringBuilder: void <init>()>();

        $r49 = virtualinvoke $r318.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $i13 = 1 + i64;

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of ");

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": name=");

        $r54 = $r41.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        $r55 = $r54.<org.apache.lucene.index.SegmentInfo: java.lang.String name>;

        $r56 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r55);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" docCount=");

        $r58 = $r41.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        $i14 = virtualinvoke $r58.<org.apache.lucene.index.SegmentInfo: int getDocCount()>();

        $r59 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.lucene.index.CheckIndex: void msg(java.io.PrintStream,java.lang.String)>($r48, $r60);

        $r61 = $r41.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        $r62 = $r61.<org.apache.lucene.index.SegmentInfo: java.lang.String name>;

        $r317.<org.apache.lucene.index.CheckIndex$Status$SegmentInfoStatus: java.lang.String name> = $r62;

        $r63 = $r41.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        $i15 = virtualinvoke $r63.<org.apache.lucene.index.SegmentInfo: int getDocCount()>();

        $r317.<org.apache.lucene.index.CheckIndex$Status$SegmentInfoStatus: int docCount> = $i15;

        $r64 = $r41.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        i65 = virtualinvoke $r64.<org.apache.lucene.index.SegmentInfo: int getDocCount()>();

        r303 = null;

     label41:
        $r65 = $r41.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        $r66 = virtualinvoke $r65.<org.apache.lucene.index.SegmentInfo: org.apache.lucene.codecs.Codec getCodec()>();

        $r68 = r4.<org.apache.lucene.index.CheckIndex: java.io.PrintStream infoStream>;

        $r319 = new java.lang.StringBuilder;

        specialinvoke $r319.<java.lang.StringBuilder: void <init>()>();

        $r69 = virtualinvoke $r319.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    codec=");

        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r66);

        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.lucene.index.CheckIndex: void msg(java.io.PrintStream,java.lang.String)>($r68, $r71);

        $r317.<org.apache.lucene.index.CheckIndex$Status$SegmentInfoStatus: org.apache.lucene.codecs.Codec codec> = $r66;

        $r73 = r4.<org.apache.lucene.index.CheckIndex: java.io.PrintStream infoStream>;

        $r320 = new java.lang.StringBuilder;

        specialinvoke $r320.<java.lang.StringBuilder: void <init>()>();

        $r74 = virtualinvoke $r320.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    compound=");

        $r75 = $r41.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        $z3 = virtualinvoke $r75.<org.apache.lucene.index.SegmentInfo: boolean getUseCompoundFile()>();

        $r76 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.lucene.index.CheckIndex: void msg(java.io.PrintStream,java.lang.String)>($r73, $r77);

        $r78 = $r41.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        $z4 = virtualinvoke $r78.<org.apache.lucene.index.SegmentInfo: boolean getUseCompoundFile()>();

        $r317.<org.apache.lucene.index.CheckIndex$Status$SegmentInfoStatus: boolean compound> = $z4;

        $r80 = r4.<org.apache.lucene.index.CheckIndex: java.io.PrintStream infoStream>;

        $r321 = new java.lang.StringBuilder;

        specialinvoke $r321.<java.lang.StringBuilder: void <init>()>();

        $r81 = virtualinvoke $r321.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    numFiles=");

        $r82 = virtualinvoke $r41.<org.apache.lucene.index.SegmentInfoPerCommit: java.util.Collection files()>();

        $i16 = interfaceinvoke $r82.<java.util.Collection: int size()>();

        $r83 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i16);

        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.lucene.index.CheckIndex: void msg(java.io.PrintStream,java.lang.String)>($r80, $r84);

        $r85 = virtualinvoke $r41.<org.apache.lucene.index.SegmentInfoPerCommit: java.util.Collection files()>();

        $i17 = interfaceinvoke $r85.<java.util.Collection: int size()>();

        $r317.<org.apache.lucene.index.CheckIndex$Status$SegmentInfoStatus: int numFiles> = $i17;

        $l18 = virtualinvoke $r41.<org.apache.lucene.index.SegmentInfoPerCommit: long sizeInBytes()>();

        $d0 = (double) $l18;

        $d1 = $d0 / 1048576.0;

        $r317.<org.apache.lucene.index.CheckIndex$Status$SegmentInfoStatus: double sizeMB> = $d1;

        $r87 = $r41.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        $r86 = <org.apache.lucene.codecs.lucene3x.Lucene3xSegmentInfoFormat: java.lang.String DS_OFFSET_KEY>;

        $r88 = virtualinvoke $r87.<org.apache.lucene.index.SegmentInfo: java.lang.String getAttribute(java.lang.String)>($r86);

        if $r88 != null goto label42;

        $r219 = r4.<org.apache.lucene.index.CheckIndex: java.io.PrintStream infoStream>;

        $r322 = new java.lang.StringBuilder;

        specialinvoke $r322.<java.lang.StringBuilder: void <init>()>();

        $r220 = virtualinvoke $r322.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    size (MB)=");

        $d2 = $r317.<org.apache.lucene.index.CheckIndex$Status$SegmentInfoStatus: double sizeMB>;

        $r221 = virtualinvoke $r1.<java.text.NumberFormat: java.lang.String format(double)>($d2);

        $r222 = virtualinvoke $r220.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r221);

        $r223 = virtualinvoke $r222.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.lucene.index.CheckIndex: void msg(java.io.PrintStream,java.lang.String)>($r219, $r223);

     label42:
        $r89 = $r41.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        $r90 = virtualinvoke $r89.<org.apache.lucene.index.SegmentInfo: java.util.Map getDiagnostics()>();

        $r317.<org.apache.lucene.index.CheckIndex$Status$SegmentInfoStatus: java.util.Map diagnostics> = $r90;

        $i19 = interfaceinvoke $r90.<java.util.Map: int size()>();

        if $i19 <= 0 goto label43;

        $r214 = r4.<org.apache.lucene.index.CheckIndex: java.io.PrintStream infoStream>;

        $r323 = new java.lang.StringBuilder;

        specialinvoke $r323.<java.lang.StringBuilder: void <init>()>();

        $r215 = virtualinvoke $r323.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    diagnostics = ");

        $r216 = virtualinvoke $r215.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r90);

        $r217 = virtualinvoke $r216.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.lucene.index.CheckIndex: void msg(java.io.PrintStream,java.lang.String)>($r214, $r217);

     label43:
        $r91 = $r41.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        $r92 = virtualinvoke $r91.<org.apache.lucene.index.SegmentInfo: java.util.Map attributes()>();

        if $r92 == null goto label44;

        $z11 = interfaceinvoke $r92.<java.util.Map: boolean isEmpty()>();

        if $z11 != 0 goto label44;

        $r209 = r4.<org.apache.lucene.index.CheckIndex: java.io.PrintStream infoStream>;

        $r324 = new java.lang.StringBuilder;

        specialinvoke $r324.<java.lang.StringBuilder: void <init>()>();

        $r210 = virtualinvoke $r324.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    attributes = ");

        $r211 = virtualinvoke $r210.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r92);

        $r212 = virtualinvoke $r211.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.lucene.index.CheckIndex: void msg(java.io.PrintStream,java.lang.String)>($r209, $r212);

     label44:
        $z15 = virtualinvoke $r41.<org.apache.lucene.index.SegmentInfoPerCommit: boolean hasDeletions()>();

        if $z15 != 0 goto label45;

        $r207 = r4.<org.apache.lucene.index.CheckIndex: java.io.PrintStream infoStream>;

        staticinvoke <org.apache.lucene.index.CheckIndex: void msg(java.io.PrintStream,java.lang.String)>($r207, "    no deletions");

        $r317.<org.apache.lucene.index.CheckIndex$Status$SegmentInfoStatus: boolean hasDeletions> = 0;

        goto label46;

     label45:
        $r94 = r4.<org.apache.lucene.index.CheckIndex: java.io.PrintStream infoStream>;

        $r325 = new java.lang.StringBuilder;

        specialinvoke $r325.<java.lang.StringBuilder: void <init>()>();

        $r95 = virtualinvoke $r325.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    has deletions [delGen=");

        $l20 = virtualinvoke $r41.<org.apache.lucene.index.SegmentInfoPerCommit: long getDelGen()>();

        $r96 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l20);

        $r97 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r98 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.lucene.index.CheckIndex: void msg(java.io.PrintStream,java.lang.String)>($r94, $r98);

        $r317.<org.apache.lucene.index.CheckIndex$Status$SegmentInfoStatus: boolean hasDeletions> = 1;

        $l21 = virtualinvoke $r41.<org.apache.lucene.index.SegmentInfoPerCommit: long getDelGen()>();

        $r317.<org.apache.lucene.index.CheckIndex$Status$SegmentInfoStatus: long deletionsGen> = $l21;

     label46:
        $r99 = r4.<org.apache.lucene.index.CheckIndex: java.io.PrintStream infoStream>;

        if $r99 == null goto label47;

        $r206 = r4.<org.apache.lucene.index.CheckIndex: java.io.PrintStream infoStream>;

        virtualinvoke $r206.<java.io.PrintStream: void print(java.lang.String)>("    test: open reader.........");

     label47:
        $r326 = new org.apache.lucene.index.SegmentReader;

        $r101 = <org.apache.lucene.store.IOContext: org.apache.lucene.store.IOContext DEFAULT>;

        specialinvoke $r326.<org.apache.lucene.index.SegmentReader: void <init>(org.apache.lucene.index.SegmentInfoPerCommit,int,org.apache.lucene.store.IOContext)>($r41, 1, $r101);

        r303 = $r326;

        $r317.<org.apache.lucene.index.CheckIndex$Status$SegmentInfoStatus: boolean openReaderPassed> = 1;

        $i22 = virtualinvoke $r326.<org.apache.lucene.index.AtomicReader: int numDocs()>();

        i65 = $i22;

        $z5 = virtualinvoke $r326.<org.apache.lucene.index.AtomicReader: boolean hasDeletions()>();

        if $z5 == 0 goto label56;

        $i32 = virtualinvoke $r326.<org.apache.lucene.index.AtomicReader: int numDocs()>();

        $r163 = $r41.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        $i33 = virtualinvoke $r163.<org.apache.lucene.index.SegmentInfo: int getDocCount()>();

        $i34 = virtualinvoke $r41.<org.apache.lucene.index.SegmentInfoPerCommit: int getDelCount()>();

        $i35 = $i33 - $i34;

        if $i32 == $i35 goto label48;

        $r328 = new java.lang.RuntimeException;

        $r327 = new java.lang.StringBuilder;

        specialinvoke $r327.<java.lang.StringBuilder: void <init>()>();

        $r200 = virtualinvoke $r327.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("delete count mismatch: info=");

        $r201 = $r41.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        $i54 = virtualinvoke $r201.<org.apache.lucene.index.SegmentInfo: int getDocCount()>();

        $i55 = virtualinvoke $r41.<org.apache.lucene.index.SegmentInfoPerCommit: int getDelCount()>();

        $i56 = $i54 - $i55;

        $r202 = virtualinvoke $r200.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i56);

        $r203 = virtualinvoke $r202.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vs reader=");

        $i57 = virtualinvoke $r326.<org.apache.lucene.index.AtomicReader: int numDocs()>();

        $r204 = virtualinvoke $r203.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i57);

        $r205 = virtualinvoke $r204.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r328.<java.lang.RuntimeException: void <init>(java.lang.String)>($r205);

        throw $r328;

     label48:
        $r164 = $r41.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        $i36 = virtualinvoke $r164.<org.apache.lucene.index.SegmentInfo: int getDocCount()>();

        $i37 = virtualinvoke $r326.<org.apache.lucene.index.AtomicReader: int numDocs()>();

        $i38 = $i36 - $i37;

        $i39 = virtualinvoke $r326.<org.apache.lucene.index.AtomicReader: int maxDoc()>();

        if $i38 <= $i39 goto label49;

        $r330 = new java.lang.RuntimeException;

        $r329 = new java.lang.StringBuilder;

        specialinvoke $r329.<java.lang.StringBuilder: void <init>()>();

        $r192 = virtualinvoke $r329.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("too many deleted docs: maxDoc()=");

        $i50 = virtualinvoke $r326.<org.apache.lucene.index.AtomicReader: int maxDoc()>();

        $r193 = virtualinvoke $r192.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i50);

        $r194 = virtualinvoke $r193.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vs del count=");

        $r195 = $r41.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        $i51 = virtualinvoke $r195.<org.apache.lucene.index.SegmentInfo: int getDocCount()>();

        $i52 = virtualinvoke $r326.<org.apache.lucene.index.AtomicReader: int numDocs()>();

        $i53 = $i51 - $i52;

        $r196 = virtualinvoke $r194.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i53);

        $r197 = virtualinvoke $r196.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r330.<java.lang.RuntimeException: void <init>(java.lang.String)>($r197);

        throw $r330;

     label49:
        $r165 = $r41.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        $i40 = virtualinvoke $r165.<org.apache.lucene.index.SegmentInfo: int getDocCount()>();

        $i41 = $i40 - $i22;

        $i42 = virtualinvoke $r41.<org.apache.lucene.index.SegmentInfoPerCommit: int getDelCount()>();

        if $i41 == $i42 goto label50;

        $r332 = new java.lang.RuntimeException;

        $r331 = new java.lang.StringBuilder;

        specialinvoke $r331.<java.lang.StringBuilder: void <init>()>();

        $r184 = virtualinvoke $r331.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("delete count mismatch: info=");

        $i47 = virtualinvoke $r41.<org.apache.lucene.index.SegmentInfoPerCommit: int getDelCount()>();

        $r185 = virtualinvoke $r184.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i47);

        $r186 = virtualinvoke $r185.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vs reader=");

        $r187 = $r41.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        $i48 = virtualinvoke $r187.<org.apache.lucene.index.SegmentInfo: int getDocCount()>();

        $i49 = $i48 - $i22;

        $r188 = virtualinvoke $r186.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i49);

        $r189 = virtualinvoke $r188.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r332.<java.lang.RuntimeException: void <init>(java.lang.String)>($r189);

        throw $r332;

     label50:
        $r166 = virtualinvoke $r326.<org.apache.lucene.index.AtomicReader: org.apache.lucene.util.Bits getLiveDocs()>();

        if $r166 != null goto label51;

        $r333 = new java.lang.RuntimeException;

        specialinvoke $r333.<java.lang.RuntimeException: void <init>(java.lang.String)>("segment should have deletions, but liveDocs is null");

        throw $r333;

     label51:
        i66 = 0;

        i67 = 0;

     label52:
        $i43 = interfaceinvoke $r166.<org.apache.lucene.util.Bits: int length()>();

        if i67 >= $i43 goto label54;

        $z10 = interfaceinvoke $r166.<org.apache.lucene.util.Bits: boolean get(int)>(i67);

        if $z10 == 0 goto label53;

        i66 = i66 + 1;

     label53:
        i67 = i67 + 1;

        goto label52;

     label54:
        if i66 == $i22 goto label55;

        $r335 = new java.lang.RuntimeException;

        $r334 = new java.lang.StringBuilder;

        specialinvoke $r334.<java.lang.StringBuilder: void <init>()>();

        $r176 = virtualinvoke $r334.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("liveDocs count mismatch: info=");

        $r177 = virtualinvoke $r176.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i22);

        $r178 = virtualinvoke $r177.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", vs bits=");

        $r179 = virtualinvoke $r178.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i66);

        $r180 = virtualinvoke $r179.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r335.<java.lang.RuntimeException: void <init>(java.lang.String)>($r180);

        throw $r335;

     label55:
        $r167 = $r41.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        $i44 = virtualinvoke $r167.<org.apache.lucene.index.SegmentInfo: int getDocCount()>();

        $i45 = $i44 - $i22;

        $r317.<org.apache.lucene.index.CheckIndex$Status$SegmentInfoStatus: int numDeleted> = $i45;

        $r169 = r4.<org.apache.lucene.index.CheckIndex: java.io.PrintStream infoStream>;

        $r336 = new java.lang.StringBuilder;

        specialinvoke $r336.<java.lang.StringBuilder: void <init>()>();

        $r170 = virtualinvoke $r336.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("OK [");

        $i46 = $r317.<org.apache.lucene.index.CheckIndex$Status$SegmentInfoStatus: int numDeleted>;

        $r171 = virtualinvoke $r170.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i46);

        $r172 = virtualinvoke $r171.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" deleted docs]");

        $r173 = virtualinvoke $r172.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.lucene.index.CheckIndex: void msg(java.io.PrintStream,java.lang.String)>($r169, $r173);

        goto label61;

     label56:
        $i23 = virtualinvoke $r41.<org.apache.lucene.index.SegmentInfoPerCommit: int getDelCount()>();

        if $i23 == 0 goto label57;

        $r338 = new java.lang.RuntimeException;

        $r337 = new java.lang.StringBuilder;

        specialinvoke $r337.<java.lang.StringBuilder: void <init>()>();

        $r157 = virtualinvoke $r337.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("delete count mismatch: info=");

        $i29 = virtualinvoke $r41.<org.apache.lucene.index.SegmentInfoPerCommit: int getDelCount()>();

        $r158 = virtualinvoke $r157.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i29);

        $r159 = virtualinvoke $r158.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vs reader=");

        $r160 = $r41.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        $i30 = virtualinvoke $r160.<org.apache.lucene.index.SegmentInfo: int getDocCount()>();

        $i31 = $i30 - $i22;

        $r161 = virtualinvoke $r159.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i31);

        $r162 = virtualinvoke $r161.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r338.<java.lang.RuntimeException: void <init>(java.lang.String)>($r162);

        throw $r338;

     label57:
        $r102 = virtualinvoke $r326.<org.apache.lucene.index.AtomicReader: org.apache.lucene.util.Bits getLiveDocs()>();

        if $r102 == null goto label60;

        i68 = 0;

     label58:
        $i28 = interfaceinvoke $r102.<org.apache.lucene.util.Bits: int length()>();

        if i68 >= $i28 goto label60;

        $z9 = interfaceinvoke $r102.<org.apache.lucene.util.Bits: boolean get(int)>(i68);

        if $z9 != 0 goto label59;

        $r340 = new java.lang.RuntimeException;

        $r339 = new java.lang.StringBuilder;

        specialinvoke $r339.<java.lang.StringBuilder: void <init>()>();

        $r151 = virtualinvoke $r339.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("liveDocs mismatch: info says no deletions but doc ");

        $r152 = virtualinvoke $r151.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i68);

        $r153 = virtualinvoke $r152.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is deleted.");

        $r154 = virtualinvoke $r153.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r340.<java.lang.RuntimeException: void <init>(java.lang.String)>($r154);

        throw $r340;

     label59:
        i68 = i68 + 1;

        goto label58;

     label60:
        $r103 = r4.<org.apache.lucene.index.CheckIndex: java.io.PrintStream infoStream>;

        staticinvoke <org.apache.lucene.index.CheckIndex: void msg(java.io.PrintStream,java.lang.String)>($r103, "OK");

     label61:
        $i69 = virtualinvoke $r326.<org.apache.lucene.index.AtomicReader: int maxDoc()>();

        $r304 = $r41.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        $i70 = virtualinvoke $r304.<org.apache.lucene.index.SegmentInfo: int getDocCount()>();

        if $i69 == $i70 goto label62;

        $r342 = new java.lang.RuntimeException;

        $r341 = new java.lang.StringBuilder;

        specialinvoke $r341.<java.lang.StringBuilder: void <init>()>();

        $r143 = virtualinvoke $r341.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SegmentReader.maxDoc() ");

        $i26 = virtualinvoke $r326.<org.apache.lucene.index.AtomicReader: int maxDoc()>();

        $r144 = virtualinvoke $r143.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i26);

        $r145 = virtualinvoke $r144.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" != SegmentInfos.docCount ");

        $r146 = $r41.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        $i27 = virtualinvoke $r146.<org.apache.lucene.index.SegmentInfo: int getDocCount()>();

        $r147 = virtualinvoke $r145.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i27);

        $r148 = virtualinvoke $r147.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r342.<java.lang.RuntimeException: void <init>(java.lang.String)>($r148);

        throw $r342;

     label62:
        $r104 = r4.<org.apache.lucene.index.CheckIndex: java.io.PrintStream infoStream>;

        if $r104 == null goto label63;

        $r140 = r4.<org.apache.lucene.index.CheckIndex: java.io.PrintStream infoStream>;

        virtualinvoke $r140.<java.io.PrintStream: void print(java.lang.String)>("    test: fields..............");

     label63:
        $r105 = virtualinvoke $r326.<org.apache.lucene.index.AtomicReader: org.apache.lucene.index.FieldInfos getFieldInfos()>();

        $r107 = r4.<org.apache.lucene.index.CheckIndex: java.io.PrintStream infoStream>;

        $r343 = new java.lang.StringBuilder;

        specialinvoke $r343.<java.lang.StringBuilder: void <init>()>();

        $r108 = virtualinvoke $r343.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("OK [");

        $i24 = virtualinvoke $r105.<org.apache.lucene.index.FieldInfos: int size()>();

        $r109 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i24);

        $r110 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" fields]");

        $r111 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.lucene.index.CheckIndex: void msg(java.io.PrintStream,java.lang.String)>($r107, $r111);

        $i25 = virtualinvoke $r105.<org.apache.lucene.index.FieldInfos: int size()>();

        $r317.<org.apache.lucene.index.CheckIndex$Status$SegmentInfoStatus: int numFields> = $i25;

        $r112 = r4.<org.apache.lucene.index.CheckIndex: java.io.PrintStream infoStream>;

        $r113 = staticinvoke <org.apache.lucene.index.CheckIndex: org.apache.lucene.index.CheckIndex$Status$FieldNormStatus testFieldNorms(org.apache.lucene.index.AtomicReader,java.io.PrintStream)>($r326, $r112);

        $r317.<org.apache.lucene.index.CheckIndex$Status$SegmentInfoStatus: org.apache.lucene.index.CheckIndex$Status$FieldNormStatus fieldNormStatus> = $r113;

        $r114 = r4.<org.apache.lucene.index.CheckIndex: java.io.PrintStream infoStream>;

        $z6 = r4.<org.apache.lucene.index.CheckIndex: boolean verbose>;

        $r115 = staticinvoke <org.apache.lucene.index.CheckIndex: org.apache.lucene.index.CheckIndex$Status$TermIndexStatus testPostings(org.apache.lucene.index.AtomicReader,java.io.PrintStream,boolean)>($r326, $r114, $z6);

        $r317.<org.apache.lucene.index.CheckIndex$Status$SegmentInfoStatus: org.apache.lucene.index.CheckIndex$Status$TermIndexStatus termIndexStatus> = $r115;

        $r116 = r4.<org.apache.lucene.index.CheckIndex: java.io.PrintStream infoStream>;

        $r117 = staticinvoke <org.apache.lucene.index.CheckIndex: org.apache.lucene.index.CheckIndex$Status$StoredFieldStatus testStoredFields(org.apache.lucene.index.AtomicReader,java.io.PrintStream)>($r326, $r116);

        $r317.<org.apache.lucene.index.CheckIndex$Status$SegmentInfoStatus: org.apache.lucene.index.CheckIndex$Status$StoredFieldStatus storedFieldStatus> = $r117;

        $r118 = r4.<org.apache.lucene.index.CheckIndex: java.io.PrintStream infoStream>;

        $z8 = r4.<org.apache.lucene.index.CheckIndex: boolean verbose>;

        $z7 = r4.<org.apache.lucene.index.CheckIndex: boolean crossCheckTermVectors>;

        $r119 = staticinvoke <org.apache.lucene.index.CheckIndex: org.apache.lucene.index.CheckIndex$Status$TermVectorStatus testTermVectors(org.apache.lucene.index.AtomicReader,java.io.PrintStream,boolean,boolean)>($r326, $r118, $z8, $z7);

        $r317.<org.apache.lucene.index.CheckIndex$Status$SegmentInfoStatus: org.apache.lucene.index.CheckIndex$Status$TermVectorStatus termVectorStatus> = $r119;

        $r120 = r4.<org.apache.lucene.index.CheckIndex: java.io.PrintStream infoStream>;

        $r121 = staticinvoke <org.apache.lucene.index.CheckIndex: org.apache.lucene.index.CheckIndex$Status$DocValuesStatus testDocValues(org.apache.lucene.index.AtomicReader,java.io.PrintStream)>($r326, $r120);

        $r317.<org.apache.lucene.index.CheckIndex$Status$SegmentInfoStatus: org.apache.lucene.index.CheckIndex$Status$DocValuesStatus docValuesStatus> = $r121;

        $r122 = $r317.<org.apache.lucene.index.CheckIndex$Status$SegmentInfoStatus: org.apache.lucene.index.CheckIndex$Status$FieldNormStatus fieldNormStatus>;

        $r123 = $r122.<org.apache.lucene.index.CheckIndex$Status$FieldNormStatus: java.lang.Throwable error>;

        if $r123 == null goto label64;

        $r344 = new java.lang.RuntimeException;

        specialinvoke $r344.<java.lang.RuntimeException: void <init>(java.lang.String)>("Field Norm test failed");

        throw $r344;

     label64:
        $r124 = $r317.<org.apache.lucene.index.CheckIndex$Status$SegmentInfoStatus: org.apache.lucene.index.CheckIndex$Status$TermIndexStatus termIndexStatus>;

        $r125 = $r124.<org.apache.lucene.index.CheckIndex$Status$TermIndexStatus: java.lang.Throwable error>;

        if $r125 == null goto label65;

        $r345 = new java.lang.RuntimeException;

        specialinvoke $r345.<java.lang.RuntimeException: void <init>(java.lang.String)>("Term Index test failed");

        throw $r345;

     label65:
        $r126 = $r317.<org.apache.lucene.index.CheckIndex$Status$SegmentInfoStatus: org.apache.lucene.index.CheckIndex$Status$StoredFieldStatus storedFieldStatus>;

        $r127 = $r126.<org.apache.lucene.index.CheckIndex$Status$StoredFieldStatus: java.lang.Throwable error>;

        if $r127 == null goto label66;

        $r346 = new java.lang.RuntimeException;

        specialinvoke $r346.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stored Field test failed");

        throw $r346;

     label66:
        $r128 = $r317.<org.apache.lucene.index.CheckIndex$Status$SegmentInfoStatus: org.apache.lucene.index.CheckIndex$Status$TermVectorStatus termVectorStatus>;

        $r129 = $r128.<org.apache.lucene.index.CheckIndex$Status$TermVectorStatus: java.lang.Throwable error>;

        if $r129 == null goto label67;

        $r347 = new java.lang.RuntimeException;

        specialinvoke $r347.<java.lang.RuntimeException: void <init>(java.lang.String)>("Term Vector test failed");

        throw $r347;

     label67:
        $r130 = $r317.<org.apache.lucene.index.CheckIndex$Status$SegmentInfoStatus: org.apache.lucene.index.CheckIndex$Status$DocValuesStatus docValuesStatus>;

        $r131 = $r130.<org.apache.lucene.index.CheckIndex$Status$DocValuesStatus: java.lang.Throwable error>;

        if $r131 == null goto label68;

        $r348 = new java.lang.RuntimeException;

        specialinvoke $r348.<java.lang.RuntimeException: void <init>(java.lang.String)>("DocValues test failed");

        throw $r348;

     label68:
        $r132 = r4.<org.apache.lucene.index.CheckIndex: java.io.PrintStream infoStream>;

        staticinvoke <org.apache.lucene.index.CheckIndex: void msg(java.io.PrintStream,java.lang.String)>($r132, "");

     label69:
        if $r326 == null goto label76;

        virtualinvoke $r326.<org.apache.lucene.index.AtomicReader: void close()>();

        goto label76;

     label70:
        $r259 := @caughtexception;

        $r260 = r4.<org.apache.lucene.index.CheckIndex: java.io.PrintStream infoStream>;

        staticinvoke <org.apache.lucene.index.CheckIndex: void msg(java.io.PrintStream,java.lang.String)>($r260, "FAILED");

        $r262 = r4.<org.apache.lucene.index.CheckIndex: java.io.PrintStream infoStream>;

        $r349 = new java.lang.StringBuilder;

        specialinvoke $r349.<java.lang.StringBuilder: void <init>()>();

        $r263 = virtualinvoke $r349.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    WARNING: ");

        $r264 = virtualinvoke $r263.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fixIndex() would remove reference to this segment");

        $r265 = virtualinvoke $r264.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; full exception:");

        $r266 = virtualinvoke $r265.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.lucene.index.CheckIndex: void msg(java.io.PrintStream,java.lang.String)>($r262, $r266);

        $r267 = r4.<org.apache.lucene.index.CheckIndex: java.io.PrintStream infoStream>;

        if $r267 == null goto label71;

        $r269 = r4.<org.apache.lucene.index.CheckIndex: java.io.PrintStream infoStream>;

        virtualinvoke $r259.<java.lang.Throwable: void printStackTrace(java.io.PrintStream)>($r269);

     label71:
        $r268 = r4.<org.apache.lucene.index.CheckIndex: java.io.PrintStream infoStream>;

        staticinvoke <org.apache.lucene.index.CheckIndex: void msg(java.io.PrintStream,java.lang.String)>($r268, "");

        $i60 = $r309.<org.apache.lucene.index.CheckIndex$Status: int totLoseDocCount>;

        $i61 = $i60 + i65;

        $r309.<org.apache.lucene.index.CheckIndex$Status: int totLoseDocCount> = $i61;

        $i62 = $r309.<org.apache.lucene.index.CheckIndex$Status: int numBadSegments>;

        $i63 = $i62 + 1;

        $r309.<org.apache.lucene.index.CheckIndex$Status: int numBadSegments> = $i63;

     label72:
        if r303 == null goto label77;

        virtualinvoke r303.<org.apache.lucene.index.AtomicReader: void close()>();

        goto label77;

     label73:
        $r258 := @caughtexception;

     label74:
        if r303 == null goto label75;

        virtualinvoke r303.<org.apache.lucene.index.AtomicReader: void close()>();

     label75:
        throw $r258;

     label76:
        $r133 = $r309.<org.apache.lucene.index.CheckIndex$Status: org.apache.lucene.index.SegmentInfos newSegments>;

        $r134 = virtualinvoke $r41.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfoPerCommit clone()>();

        virtualinvoke $r133.<org.apache.lucene.index.SegmentInfos: void add(org.apache.lucene.index.SegmentInfoPerCommit)>($r134);

     label77:
        i64 = i64 + 1;

        goto label38;

     label78:
        $i2 = $r309.<org.apache.lucene.index.CheckIndex$Status: int numBadSegments>;

        if 0 != $i2 goto label79;

        $r309.<org.apache.lucene.index.CheckIndex$Status: boolean clean> = 1;

        goto label80;

     label79:
        $r25 = r4.<org.apache.lucene.index.CheckIndex: java.io.PrintStream infoStream>;

        $r350 = new java.lang.StringBuilder;

        specialinvoke $r350.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r350.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WARNING: ");

        $i3 = $r309.<org.apache.lucene.index.CheckIndex$Status: int numBadSegments>;

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" broken segments (containing ");

        $i4 = $r309.<org.apache.lucene.index.CheckIndex$Status: int totLoseDocCount>;

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" documents) detected");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.lucene.index.CheckIndex: void msg(java.io.PrintStream,java.lang.String)>($r25, $r31);

     label80:
        $i6 = $r309.<org.apache.lucene.index.CheckIndex$Status: int maxSegmentName>;

        $i5 = $r308.<org.apache.lucene.index.SegmentInfos: int counter>;

        if $i6 >= $i5 goto label81;

        $z18 = 1;

        $z17 = 1;

        goto label82;

     label81:
        $z18 = 0;

        $z17 = 0;

     label82:
        $r309.<org.apache.lucene.index.CheckIndex$Status: boolean validCounter> = $z17;

        if $z18 != 0 goto label83;

        $r309.<org.apache.lucene.index.CheckIndex$Status: boolean clean> = 0;

        $r33 = $r309.<org.apache.lucene.index.CheckIndex$Status: org.apache.lucene.index.SegmentInfos newSegments>;

        $i7 = $r309.<org.apache.lucene.index.CheckIndex$Status: int maxSegmentName>;

        $i8 = $i7 + 1;

        $r33.<org.apache.lucene.index.SegmentInfos: int counter> = $i8;

        $r35 = r4.<org.apache.lucene.index.CheckIndex: java.io.PrintStream infoStream>;

        $r351 = new java.lang.StringBuilder;

        specialinvoke $r351.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r351.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ERROR: Next segment name counter ");

        $i9 = $r308.<org.apache.lucene.index.SegmentInfos: int counter>;

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not greater than max segment name ");

        $i10 = $r309.<org.apache.lucene.index.CheckIndex$Status: int maxSegmentName>;

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.lucene.index.CheckIndex: void msg(java.io.PrintStream,java.lang.String)>($r35, $r40);

     label83:
        $z2 = $r309.<org.apache.lucene.index.CheckIndex$Status: boolean clean>;

        if $z2 == 0 goto label84;

        $r32 = r4.<org.apache.lucene.index.CheckIndex: java.io.PrintStream infoStream>;

        staticinvoke <org.apache.lucene.index.CheckIndex: void msg(java.io.PrintStream,java.lang.String)>($r32, "No problems were detected with this index.\n");

     label84:
        return $r309;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label17 to label19 with label21;
        catch java.lang.Throwable from label21 to label22 with label21;
        catch java.lang.Throwable from label41 to label69 with label70;
        catch java.lang.Throwable from label70 to label72 with label73;
        catch java.lang.Throwable from label73 to label74 with label73;
    }

    public static org.apache.lucene.index.CheckIndex$Status$FieldNormStatus testFieldNorms(org.apache.lucene.index.AtomicReader, java.io.PrintStream)
    {
        org.apache.lucene.index.FieldInfos $r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r15, $r16, $r18, $r19, $r26, $r27, $r30, $r31;
        org.apache.lucene.index.AtomicReader r2;
        java.lang.Throwable $r25;
        org.apache.lucene.index.NumericDocValues $r13;
        long $l0, $l1, $l2;
        java.lang.AssertionError $r22, $r24;
        java.lang.String $r9, $r12, $r17, $r20, $r21, $r23, $r28, $r29, $r32;
        java.io.PrintStream r1;
        org.apache.lucene.index.CheckIndex$Status$FieldNormStatus $r0;
        java.util.Iterator $r4;
        java.lang.RuntimeException $r14;
        org.apache.lucene.index.FieldInfo r11;
        java.lang.Object $r10;

        r2 := @parameter0: org.apache.lucene.index.AtomicReader;

        r1 := @parameter1: java.io.PrintStream;

        $r0 = new org.apache.lucene.index.CheckIndex$Status$FieldNormStatus;

        specialinvoke $r0.<org.apache.lucene.index.CheckIndex$Status$FieldNormStatus: void <init>(org.apache.lucene.index.CheckIndex$1)>(null);

     label01:
        if r1 == null goto label02;

        virtualinvoke r1.<java.io.PrintStream: void print(java.lang.String)>("    test: field norms.........");

     label02:
        $r3 = virtualinvoke r2.<org.apache.lucene.index.AtomicReader: org.apache.lucene.index.FieldInfos getFieldInfos()>();

        $r4 = virtualinvoke $r3.<org.apache.lucene.index.FieldInfos: java.util.Iterator iterator()>();

     label03:
        $z5 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label08;

        $r10 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r11 = (org.apache.lucene.index.FieldInfo) $r10;

        $z0 = virtualinvoke r11.<org.apache.lucene.index.FieldInfo: boolean hasNorms()>();

        if $z0 == 0 goto label05;

        $z3 = <org.apache.lucene.index.CheckIndex: boolean $assertionsDisabled>;

        if $z3 != 0 goto label04;

        $r23 = r11.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $z4 = virtualinvoke r2.<org.apache.lucene.index.AtomicReader: boolean hasNorms(java.lang.String)>($r23);

        if $z4 != 0 goto label04;

        $r24 = new java.lang.AssertionError;

        specialinvoke $r24.<java.lang.AssertionError: void <init>()>();

        throw $r24;

     label04:
        staticinvoke <org.apache.lucene.index.CheckIndex: void checkNorms(org.apache.lucene.index.FieldInfo,org.apache.lucene.index.AtomicReader,java.io.PrintStream)>(r11, r2, r1);

        $l1 = $r0.<org.apache.lucene.index.CheckIndex$Status$FieldNormStatus: long totFields>;

        $l2 = $l1 + 1L;

        $r0.<org.apache.lucene.index.CheckIndex$Status$FieldNormStatus: long totFields> = $l2;

        goto label07;

     label05:
        $z1 = <org.apache.lucene.index.CheckIndex: boolean $assertionsDisabled>;

        if $z1 != 0 goto label06;

        $r21 = r11.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $z2 = virtualinvoke r2.<org.apache.lucene.index.AtomicReader: boolean hasNorms(java.lang.String)>($r21);

        if $z2 == 0 goto label06;

        $r22 = new java.lang.AssertionError;

        specialinvoke $r22.<java.lang.AssertionError: void <init>()>();

        throw $r22;

     label06:
        $r12 = r11.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $r13 = virtualinvoke r2.<org.apache.lucene.index.AtomicReader: org.apache.lucene.index.NumericDocValues getNormValues(java.lang.String)>($r12);

        if $r13 == null goto label07;

        $r14 = new java.lang.RuntimeException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("field: ");

        $r17 = r11.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" should omit norms but has them!");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String)>($r20);

        throw $r14;

     label07:
        goto label03;

     label08:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("OK [");

        $l0 = $r0.<org.apache.lucene.index.CheckIndex$Status$FieldNormStatus: long totFields>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" fields]");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.lucene.index.CheckIndex: void msg(java.io.PrintStream,java.lang.String)>(r1, $r9);

     label09:
        goto label11;

     label10:
        $r25 := @caughtexception;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ERROR [");

        $r28 = virtualinvoke $r25.<java.lang.Throwable: java.lang.String getMessage()>();

        $r29 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r28);

        $r30 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.lucene.index.CheckIndex: void msg(java.io.PrintStream,java.lang.String)>(r1, $r32);

        $r0.<org.apache.lucene.index.CheckIndex$Status$FieldNormStatus: java.lang.Throwable error> = $r25;

        if r1 == null goto label11;

        virtualinvoke $r25.<java.lang.Throwable: void printStackTrace(java.io.PrintStream)>(r1);

     label11:
        return $r0;

        catch java.lang.Throwable from label01 to label09 with label10;
    }

    private static org.apache.lucene.index.CheckIndex$Status$TermIndexStatus checkFields(org.apache.lucene.index.Fields, org.apache.lucene.util.Bits, int, org.apache.lucene.index.FieldInfos, boolean, boolean, java.io.PrintStream, boolean) throws java.io.IOException
    {
        java.io.PrintStream r4;
        java.lang.AssertionError $r479, $r496, $r535;
        java.lang.String $r12, $r15, $r20, $r21, $r23, $r32, $r39, $r46, $r51, $r75, $r87, $r100, $r112, $r123, $r135, $r145, $r154, $r163, $r173, $r185, $r194, $r206, $r219, $r231, $r244, $r256, $r263, $r269, $r275, $r284, $r293, $r299, $r308, $r317, $r323, $r330, $r339, $r346, $r354, $r361, $r371, $r378, $r388, $r400, $r406, $r415, $r425, $r435, $r448, $r453, $r460, r464, r465;
        org.apache.lucene.index.Fields r1;
        boolean z0, z1, $z2, $z3, $z4, $z5, z6, z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, z17, $z18, z19, z20, z21, z22;
        byte $b2, $b4, $b11, $b54, $b55, $b62, $b68, $b73, $b76, $b78, $b79, $b89, $b94, $b105, $b106, $b108, $b109, $b133, $b134;
        long $l1, $l3, $l5, $l6, $l7, $l8, $l9, $l10, $l12, $l13, $l14, $l15, $l16, $l20, $l21, $l22, $l29, $l30, $l31, $l32, $l33, $l34, $l35, $l37, $l38, $l39, $l40, $l44, $l45, $l46, $l47, $l61, $l63, $l64, $l65, $l66, $l67, $l69, $l70, $l71, $l72, $l74, $l75, $l77, $l81, $l84, $l85, $l86, l87, $l88, $l90, $l91, $l92, $l93, $l95, $l96, $l97, $l98, $l104, $l107, $l111, l114, l115, l116, l117, l120, l136, l139, l141, l142;
        org.apache.lucene.util.Bits r59;
        org.apache.lucene.index.Terms $r55, $r332, $r381, $r416, $r426;
        java.util.Comparator $r57;
        org.apache.lucene.index.TermsEnum $r56;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader $r436;
        java.util.Map$Entry r470;
        org.apache.lucene.index.TermsEnum$SeekStatus $r363, $r364, $r389, $r390;
        org.apache.lucene.index.FieldInfo $r54;
        org.apache.lucene.index.FieldInfo$IndexOptions $r442, $r443;
        java.util.HashMap $r536;
        org.apache.lucene.index.FieldInfos r53;
        org.apache.lucene.util.BytesRef[] r469;
        int $i0, i17, $i18, $i19, $i23, $i24, $i25, $i26, $i27, $i28, $i36, $i41, $i42, $i43, $i48, $i49, $i50, $i51, $i52, $i53, $i56, $i57, $i58, $i59, $i60, $i80, $i82, $i83, $i99, $i100, $i101, $i102, $i103, $i110, $i112, i113, i118, i119, $i121, i122, i123, i124, i125, i126, i127, i128, i129, i130, i131, i132, i135, i137, i138, i140, i143, $i145, $i147, $i149, $i150, $i152, $i154, $i155, $i156, $i158, $i160, $i161, $i163, $i164;
        org.apache.lucene.codecs.BlockTreeTermsReader$Stats $r19, $r437;
        java.lang.RuntimeException $r473, $r475, $r477, $r481, $r483, $r485, $r487, $r489, $r491, $r493, $r495, $r498, $r500, $r502, $r504, $r506, $r508, $r510, $r512, $r514, $r516, $r518, $r520, $r522, $r524, $r526, $r528, $r530, $r532, $r534, $r538, $r540, $r542, $r544, $r546, $r548, $r550, $r552, $r554, $r556, $r558, $r560, $r562, $r564, $r566;
        org.apache.lucene.index.DocsEnum $r60, $r174, $r309, $r310, $r348, $r365, $r391, r462, r468;
        org.apache.lucene.index.CheckIndex$Status$TermIndexStatus $r471;
        org.apache.lucene.index.DocsAndPositionsEnum $r61, $r195, r463;
        org.apache.lucene.util.BytesRef $r62, $r347, $r352, $r358, $r362, $r369, $r375, $r379, $r380, r466, $r467;
        java.util.Map $r3, $r5, $r438, $r439;
        java.lang.StringBuilder $r10, $r13, $r14, $r17, $r22, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r35, $r36, $r37, $r38, $r42, $r43, $r44, $r45, $r49, $r50, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r78, $r79, $r80, $r81, $r82, $r83, $r84, $r85, $r86, $r90, $r91, $r92, $r93, $r94, $r95, $r96, $r97, $r98, $r99, $r103, $r104, $r105, $r106, $r107, $r108, $r109, $r110, $r111, $r115, $r116, $r117, $r118, $r119, $r120, $r121, $r122, $r127, $r128, $r129, $r130, $r131, $r132, $r133, $r134, $r138, $r139, $r140, $r141, $r142, $r143, $r144, $r148, $r149, $r150, $r151, $r152, $r153, $r157, $r158, $r159, $r160, $r161, $r162, $r166, $r167, $r168, $r169, $r170, $r171, $r172, $r177, $r178, $r179, $r180, $r181, $r182, $r183, $r184, $r188, $r189, $r190, $r191, $r192, $r193, $r198, $r199, $r200, $r201, $r202, $r203, $r204, $r205, $r209, $r210, $r211, $r212, $r213, $r214, $r215, $r216, $r217, $r218, $r222, $r223, $r224, $r225, $r226, $r227, $r228, $r229, $r230, $r234, $r235, $r236, $r237, $r238, $r239, $r240, $r241, $r242, $r243, $r247, $r248, $r249, $r250, $r251, $r252, $r253, $r254, $r255, $r259, $r260, $r261, $r262, $r266, $r267, $r268, $r272, $r273, $r274, $r278, $r279, $r280, $r281, $r282, $r283, $r287, $r288, $r289, $r290, $r291, $r292, $r296, $r297, $r298, $r302, $r303, $r304, $r305, $r306, $r307, $r313, $r314, $r315, $r316, $r320, $r321, $r322, $r326, $r327, $r328, $r329, $r335, $r336, $r337, $r338, $r342, $r343, $r344, $r345, $r351, $r353, $r357, $r359, $r360, $r368, $r370, $r374, $r376, $r377, $r384, $r385, $r386, $r387, $r394, $r395, $r396, $r397, $r398, $r399, $r403, $r404, $r405, $r409, $r410, $r411, $r412, $r413, $r414, $r419, $r420, $r421, $r422, $r423, $r424, $r429, $r430, $r431, $r432, $r433, $r434, $r446, $r447, $r451, $r452, $r456, $r457, $r458, $r459, $r472, $r474, $r476, $r480, $r482, $r484, $r486, $r488, $r490, $r492, $r494, $r497, $r499, $r501, $r503, $r505, $r507, $r509, $r511, $r513, $r515, $r517, $r519, $r521, $r523, $r525, $r527, $r529, $r531, $r533, $r537, $r539, $r541, $r543, $r545, $r547, $r549, $r551, $r553, $r555, $r557, $r559, $r561, $r563, $r565, $r567, $r568, $r569;
        org.apache.lucene.util.FixedBitSet $r478;
        java.lang.Object $r8, $r11, $r18, $r52;
        java.util.Set $r6;
        java.lang.UnsupportedOperationException $r461;
        java.util.Iterator $r2, $r7;

        r1 := @parameter0: org.apache.lucene.index.Fields;

        r59 := @parameter1: org.apache.lucene.util.Bits;

        i17 := @parameter2: int;

        r53 := @parameter3: org.apache.lucene.index.FieldInfos;

        z0 := @parameter4: boolean;

        z6 := @parameter5: boolean;

        r4 := @parameter6: java.io.PrintStream;

        z1 := @parameter7: boolean;

        $r471 = new org.apache.lucene.index.CheckIndex$Status$TermIndexStatus;

        specialinvoke $r471.<org.apache.lucene.index.CheckIndex$Status$TermIndexStatus: void <init>()>();

        i113 = 0;

        if r1 != null goto label001;

        staticinvoke <org.apache.lucene.index.CheckIndex: void msg(java.io.PrintStream,java.lang.String)>(r4, "OK [no fields/terms]");

        return $r471;

     label001:
        r462 = null;

        r463 = null;

        r464 = null;

        $r2 = virtualinvoke r1.<org.apache.lucene.index.Fields: java.util.Iterator iterator()>();

     label002:
        $z15 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z15 == 0 goto label104;

        $r52 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r465 = (java.lang.String) $r52;

        if r464 == null goto label003;

        $i112 = virtualinvoke r465.<java.lang.String: int compareTo(java.lang.String)>(r464);

        if $i112 > 0 goto label003;

        $r473 = new java.lang.RuntimeException;

        $r472 = new java.lang.StringBuilder;

        specialinvoke $r472.<java.lang.StringBuilder: void <init>()>();

        $r456 = virtualinvoke $r472.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fields out of order: lastField=");

        $r457 = virtualinvoke $r456.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r464);

        $r458 = virtualinvoke $r457.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" field=");

        $r459 = virtualinvoke $r458.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r465);

        $r460 = virtualinvoke $r459.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r473.<java.lang.RuntimeException: void <init>(java.lang.String)>($r460);

        throw $r473;

     label003:
        r464 = r465;

        $r54 = virtualinvoke r53.<org.apache.lucene.index.FieldInfos: org.apache.lucene.index.FieldInfo fieldInfo(java.lang.String)>(r465);

        if $r54 != null goto label004;

        $r475 = new java.lang.RuntimeException;

        $r474 = new java.lang.StringBuilder;

        specialinvoke $r474.<java.lang.StringBuilder: void <init>()>();

        $r451 = virtualinvoke $r474.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fieldsEnum inconsistent with fieldInfos, no fieldInfos for: ");

        $r452 = virtualinvoke $r451.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r465);

        $r453 = virtualinvoke $r452.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r475.<java.lang.RuntimeException: void <init>(java.lang.String)>($r453);

        throw $r475;

     label004:
        $z3 = virtualinvoke $r54.<org.apache.lucene.index.FieldInfo: boolean isIndexed()>();

        if $z3 != 0 goto label005;

        $r477 = new java.lang.RuntimeException;

        $r476 = new java.lang.StringBuilder;

        specialinvoke $r476.<java.lang.StringBuilder: void <init>()>();

        $r446 = virtualinvoke $r476.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fieldsEnum inconsistent with fieldInfos, isIndexed == false for: ");

        $r447 = virtualinvoke $r446.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r465);

        $r448 = virtualinvoke $r447.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r477.<java.lang.RuntimeException: void <init>(java.lang.String)>($r448);

        throw $r477;

     label005:
        i113 = i113 + 1;

        $r55 = virtualinvoke r1.<org.apache.lucene.index.Fields: org.apache.lucene.index.Terms terms(java.lang.String)>(r465);

        if $r55 != null goto label006;

        goto label002;

     label006:
        $z4 = virtualinvoke $r55.<org.apache.lucene.index.Terms: boolean hasPositions()>();

        $z5 = virtualinvoke $r55.<org.apache.lucene.index.Terms: boolean hasOffsets()>();

        if z6 != 0 goto label007;

        $r442 = virtualinvoke $r54.<org.apache.lucene.index.FieldInfo: org.apache.lucene.index.FieldInfo$IndexOptions getIndexOptions()>();

        $r443 = <org.apache.lucene.index.FieldInfo$IndexOptions: org.apache.lucene.index.FieldInfo$IndexOptions DOCS_AND_FREQS>;

        $i110 = virtualinvoke $r442.<org.apache.lucene.index.FieldInfo$IndexOptions: int compareTo(java.lang.Enum)>($r443);

        if $i110 < 0 goto label008;

     label007:
        $z16 = 1;

        goto label009;

     label008:
        $z16 = 0;

     label009:
        z7 = $z16;

        $r56 = virtualinvoke $r55.<org.apache.lucene.index.Terms: org.apache.lucene.index.TermsEnum iterator(org.apache.lucene.index.TermsEnum)>(null);

        z17 = 1;

        z22 = 1;

        z21 = 1;

        z20 = 1;

        $l16 = $r471.<org.apache.lucene.index.CheckIndex$Status$TermIndexStatus: long delTermCount>;

        $l15 = $r471.<org.apache.lucene.index.CheckIndex$Status$TermIndexStatus: long termCount>;

        $l111 = $l16 + $l15;

        r466 = null;

        $r57 = virtualinvoke $r55.<org.apache.lucene.index.Terms: java.util.Comparator getComparator()>();

        l114 = 0L;

        l115 = 0L;

        $r478 = new org.apache.lucene.util.FixedBitSet;

        specialinvoke $r478.<org.apache.lucene.util.FixedBitSet: void <init>(int)>(i17);

     label010:
        $r467 = virtualinvoke $r56.<org.apache.lucene.index.TermsEnum: org.apache.lucene.util.BytesRef next()>();

        if $r467 != null goto label011;

        goto label077;

     label011:
        $z8 = <org.apache.lucene.index.CheckIndex: boolean $assertionsDisabled>;

        if $z8 != 0 goto label012;

        $z11 = virtualinvoke $r467.<org.apache.lucene.util.BytesRef: boolean isValid()>();

        if $z11 != 0 goto label012;

        $r479 = new java.lang.AssertionError;

        specialinvoke $r479.<java.lang.AssertionError: void <init>()>();

        throw $r479;

     label012:
        if r466 != null goto label013;

        r466 = staticinvoke <org.apache.lucene.util.BytesRef: org.apache.lucene.util.BytesRef deepCopyOf(org.apache.lucene.util.BytesRef)>($r467);

        goto label015;

     label013:
        $i18 = interfaceinvoke $r57.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r466, $r467);

        if $i18 < 0 goto label014;

        $r481 = new java.lang.RuntimeException;

        $r480 = new java.lang.StringBuilder;

        specialinvoke $r480.<java.lang.StringBuilder: void <init>()>();

        $r326 = virtualinvoke $r480.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("terms out of order: lastTerm=");

        $r327 = virtualinvoke $r326.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r466);

        $r328 = virtualinvoke $r327.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" term=");

        $r329 = virtualinvoke $r328.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r467);

        $r330 = virtualinvoke $r329.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r481.<java.lang.RuntimeException: void <init>(java.lang.String)>($r330);

        throw $r481;

     label014:
        virtualinvoke r466.<org.apache.lucene.util.BytesRef: void copyBytes(org.apache.lucene.util.BytesRef)>($r467);

     label015:
        $i19 = virtualinvoke $r56.<org.apache.lucene.index.TermsEnum: int docFreq()>();

        if $i19 > 0 goto label016;

        $r483 = new java.lang.RuntimeException;

        $r482 = new java.lang.StringBuilder;

        specialinvoke $r482.<java.lang.StringBuilder: void <init>()>();

        $r320 = virtualinvoke $r482.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("docfreq: ");

        $r321 = virtualinvoke $r320.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i19);

        $r322 = virtualinvoke $r321.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is out of bounds");

        $r323 = virtualinvoke $r322.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r483.<java.lang.RuntimeException: void <init>(java.lang.String)>($r323);

        throw $r483;

     label016:
        $l20 = (long) $i19;

        l115 = l115 + $l20;

        $r60 = virtualinvoke $r56.<org.apache.lucene.index.TermsEnum: org.apache.lucene.index.DocsEnum docs(org.apache.lucene.util.Bits,org.apache.lucene.index.DocsEnum)>(r59, r462);

        r462 = $r60;

        $r61 = virtualinvoke $r56.<org.apache.lucene.index.TermsEnum: org.apache.lucene.index.DocsAndPositionsEnum docsAndPositions(org.apache.lucene.util.Bits,org.apache.lucene.index.DocsAndPositionsEnum)>(r59, r463);

        r463 = $r61;

        if z20 == 0 goto label021;

        l116 = -1L;

     label017:
        l116 = virtualinvoke $r56.<org.apache.lucene.index.TermsEnum: long ord()>();

     label018:
        goto label020;

     label019:
        $r461 := @caughtexception;

        z17 = 0;

        z22 = 0;

        z21 = 0;

        z20 = 0;

     label020:
        if z21 == 0 goto label021;

        $l66 = $r471.<org.apache.lucene.index.CheckIndex$Status$TermIndexStatus: long delTermCount>;

        $l65 = $r471.<org.apache.lucene.index.CheckIndex$Status$TermIndexStatus: long termCount>;

        $l67 = $l66 + $l65;

        l117 = $l67 - $l111;

        $b68 = l116 cmp l117;

        if $b68 == 0 goto label021;

        $r485 = new java.lang.RuntimeException;

        $r484 = new java.lang.StringBuilder;

        specialinvoke $r484.<java.lang.StringBuilder: void <init>()>();

        $r313 = virtualinvoke $r484.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ord mismatch: TermsEnum has ord=");

        $r314 = virtualinvoke $r313.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l116);

        $r315 = virtualinvoke $r314.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vs actual=");

        $r316 = virtualinvoke $r315.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l117);

        $r317 = virtualinvoke $r316.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r485.<java.lang.RuntimeException: void <init>(java.lang.String)>($r317);

        throw $r485;

     label021:
        if $r61 == null goto label022;

        r468 = $r61;

        goto label023;

     label022:
        r468 = $r60;

     label023:
        $i145 = (int) -1;

        i118 = $i145;

        i119 = 0;

        l120 = 0L;

     label024:
        $i121 = virtualinvoke r468.<org.apache.lucene.index.DocsEnum: int nextDoc()>();

        if $i121 != 2147483647 goto label025;

        goto label041;

     label025:
        $l21 = $r471.<org.apache.lucene.index.CheckIndex$Status$TermIndexStatus: long totFreq>;

        $l22 = $l21 + 1L;

        $r471.<org.apache.lucene.index.CheckIndex$Status$TermIndexStatus: long totFreq> = $l22;

        virtualinvoke $r478.<org.apache.lucene.util.FixedBitSet: void set(int)>($i121);

        $i147 = (int) -1;

        i122 = $i147;

        if z7 == 0 goto label027;

        $i28 = virtualinvoke r468.<org.apache.lucene.index.DocsEnum: int freq()>();

        i122 = $i28;

        if $i28 > 0 goto label026;

        $r487 = new java.lang.RuntimeException;

        $r486 = new java.lang.StringBuilder;

        specialinvoke $r486.<java.lang.StringBuilder: void <init>()>();

        $r166 = virtualinvoke $r486.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("term ");

        $r167 = virtualinvoke $r166.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r467);

        $r168 = virtualinvoke $r167.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": doc ");

        $r169 = virtualinvoke $r168.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i121);

        $r170 = virtualinvoke $r169.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": freq ");

        $r171 = virtualinvoke $r170.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i28);

        $r172 = virtualinvoke $r171.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is out of bounds");

        $r173 = virtualinvoke $r172.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r487.<java.lang.RuntimeException: void <init>(java.lang.String)>($r173);

        throw $r487;

     label026:
        $l30 = $r471.<org.apache.lucene.index.CheckIndex$Status$TermIndexStatus: long totPos>;

        $l29 = (long) $i28;

        $l31 = $l30 + $l29;

        $r471.<org.apache.lucene.index.CheckIndex$Status$TermIndexStatus: long totPos> = $l31;

        $l32 = (long) $i28;

        l120 = l120 + $l32;

     label027:
        i119 = i119 + 1;

        if $i121 > i118 goto label028;

        $r489 = new java.lang.RuntimeException;

        $r488 = new java.lang.StringBuilder;

        specialinvoke $r488.<java.lang.StringBuilder: void <init>()>();

        $r157 = virtualinvoke $r488.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("term ");

        $r158 = virtualinvoke $r157.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r467);

        $r159 = virtualinvoke $r158.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": doc ");

        $r160 = virtualinvoke $r159.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i121);

        $r161 = virtualinvoke $r160.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" <= lastDoc ");

        $r162 = virtualinvoke $r161.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i118);

        $r163 = virtualinvoke $r162.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r489.<java.lang.RuntimeException: void <init>(java.lang.String)>($r163);

        throw $r489;

     label028:
        if $i121 < i17 goto label029;

        $r491 = new java.lang.RuntimeException;

        $r490 = new java.lang.StringBuilder;

        specialinvoke $r490.<java.lang.StringBuilder: void <init>()>();

        $r148 = virtualinvoke $r490.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("term ");

        $r149 = virtualinvoke $r148.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r467);

        $r150 = virtualinvoke $r149.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": doc ");

        $r151 = virtualinvoke $r150.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i121);

        $r152 = virtualinvoke $r151.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" >= maxDoc ");

        $r153 = virtualinvoke $r152.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i17);

        $r154 = virtualinvoke $r153.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r491.<java.lang.RuntimeException: void <init>(java.lang.String)>($r154);

        throw $r491;

     label029:
        i118 = $i121;

        $i149 = (int) -1;

        i123 = $i149;

        i124 = 0;

        if $z4 == 0 goto label040;

        i125 = 0;

     label030:
        if i125 >= i122 goto label040;

        $i23 = virtualinvoke $r61.<org.apache.lucene.index.DocsAndPositionsEnum: int nextPosition()>();

        if $i23 >= 0 goto label031;

        $r493 = new java.lang.RuntimeException;

        $r492 = new java.lang.StringBuilder;

        specialinvoke $r492.<java.lang.StringBuilder: void <init>()>();

        $r138 = virtualinvoke $r492.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("term ");

        $r139 = virtualinvoke $r138.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r467);

        $r140 = virtualinvoke $r139.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": doc ");

        $r141 = virtualinvoke $r140.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i121);

        $r142 = virtualinvoke $r141.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": pos ");

        $r143 = virtualinvoke $r142.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i23);

        $r144 = virtualinvoke $r143.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is out of bounds");

        $r145 = virtualinvoke $r144.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r493.<java.lang.RuntimeException: void <init>(java.lang.String)>($r145);

        throw $r493;

     label031:
        if $i23 >= i123 goto label032;

        $r495 = new java.lang.RuntimeException;

        $r494 = new java.lang.StringBuilder;

        specialinvoke $r494.<java.lang.StringBuilder: void <init>()>();

        $r127 = virtualinvoke $r494.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("term ");

        $r128 = virtualinvoke $r127.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r467);

        $r129 = virtualinvoke $r128.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": doc ");

        $r130 = virtualinvoke $r129.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i121);

        $r131 = virtualinvoke $r130.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": pos ");

        $r132 = virtualinvoke $r131.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i23);

        $r133 = virtualinvoke $r132.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" < lastPos ");

        $r134 = virtualinvoke $r133.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i123);

        $r135 = virtualinvoke $r134.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r495.<java.lang.RuntimeException: void <init>(java.lang.String)>($r135);

        throw $r495;

     label032:
        i123 = $i23;

        $r62 = virtualinvoke $r61.<org.apache.lucene.index.DocsAndPositionsEnum: org.apache.lucene.util.BytesRef getPayload()>();

        if $r62 == null goto label033;

        $z9 = <org.apache.lucene.index.CheckIndex: boolean $assertionsDisabled>;

        if $z9 != 0 goto label033;

        $z10 = virtualinvoke $r62.<org.apache.lucene.util.BytesRef: boolean isValid()>();

        if $z10 != 0 goto label033;

        $r496 = new java.lang.AssertionError;

        specialinvoke $r496.<java.lang.AssertionError: void <init>()>();

        throw $r496;

     label033:
        if $r62 == null goto label034;

        $i26 = $r62.<org.apache.lucene.util.BytesRef: int length>;

        if $i26 >= 1 goto label034;

        $r498 = new java.lang.RuntimeException;

        $r497 = new java.lang.StringBuilder;

        specialinvoke $r497.<java.lang.StringBuilder: void <init>()>();

        $r115 = virtualinvoke $r497.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("term ");

        $r116 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r467);

        $r117 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": doc ");

        $r118 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i121);

        $r119 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": pos ");

        $r120 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i23);

        $r121 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" payload length is out of bounds ");

        $i27 = $r62.<org.apache.lucene.util.BytesRef: int length>;

        $r122 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i27);

        $r123 = virtualinvoke $r122.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r498.<java.lang.RuntimeException: void <init>(java.lang.String)>($r123);

        throw $r498;

     label034:
        if $z5 == 0 goto label039;

        $i24 = virtualinvoke $r61.<org.apache.lucene.index.DocsAndPositionsEnum: int startOffset()>();

        $i25 = virtualinvoke $r61.<org.apache.lucene.index.DocsAndPositionsEnum: int endOffset()>();

        if z6 != 0 goto label038;

        if $i24 >= 0 goto label035;

        $r500 = new java.lang.RuntimeException;

        $r499 = new java.lang.StringBuilder;

        specialinvoke $r499.<java.lang.StringBuilder: void <init>()>();

        $r103 = virtualinvoke $r499.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("term ");

        $r104 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r467);

        $r105 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": doc ");

        $r106 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i121);

        $r107 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": pos ");

        $r108 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i23);

        $r109 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": startOffset ");

        $r110 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i24);

        $r111 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is out of bounds");

        $r112 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r500.<java.lang.RuntimeException: void <init>(java.lang.String)>($r112);

        throw $r500;

     label035:
        if $i24 >= i124 goto label036;

        $r502 = new java.lang.RuntimeException;

        $r501 = new java.lang.StringBuilder;

        specialinvoke $r501.<java.lang.StringBuilder: void <init>()>();

        $r90 = virtualinvoke $r501.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("term ");

        $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r467);

        $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": doc ");

        $r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i121);

        $r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": pos ");

        $r95 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i23);

        $r96 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": startOffset ");

        $r97 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i24);

        $r98 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" < lastStartOffset ");

        $r99 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i124);

        $r100 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r502.<java.lang.RuntimeException: void <init>(java.lang.String)>($r100);

        throw $r502;

     label036:
        if $i25 >= 0 goto label037;

        $r504 = new java.lang.RuntimeException;

        $r503 = new java.lang.StringBuilder;

        specialinvoke $r503.<java.lang.StringBuilder: void <init>()>();

        $r78 = virtualinvoke $r503.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("term ");

        $r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r467);

        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": doc ");

        $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i121);

        $r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": pos ");

        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i23);

        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": endOffset ");

        $r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i25);

        $r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is out of bounds");

        $r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r504.<java.lang.RuntimeException: void <init>(java.lang.String)>($r87);

        throw $r504;

     label037:
        if $i25 >= $i24 goto label038;

        $r506 = new java.lang.RuntimeException;

        $r505 = new java.lang.StringBuilder;

        specialinvoke $r505.<java.lang.StringBuilder: void <init>()>();

        $r65 = virtualinvoke $r505.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("term ");

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r467);

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": doc ");

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i121);

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": pos ");

        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i23);

        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": endOffset ");

        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i25);

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" < startOffset ");

        $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i24);

        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r506.<java.lang.RuntimeException: void <init>(java.lang.String)>($r75);

        throw $r506;

     label038:
        i124 = $i24;

     label039:
        i125 = i125 + 1;

        goto label030;

     label040:
        goto label024;

     label041:
        if i119 == 0 goto label042;

        $l63 = $r471.<org.apache.lucene.index.CheckIndex$Status$TermIndexStatus: long termCount>;

        $l64 = $l63 + 1L;

        $r471.<org.apache.lucene.index.CheckIndex$Status$TermIndexStatus: long termCount> = $l64;

        goto label043;

     label042:
        $l33 = $r471.<org.apache.lucene.index.CheckIndex$Status$TermIndexStatus: long delTermCount>;

        $l34 = $l33 + 1L;

        $r471.<org.apache.lucene.index.CheckIndex$Status$TermIndexStatus: long delTermCount> = $l34;

     label043:
        $l35 = virtualinvoke $r56.<org.apache.lucene.index.TermsEnum: long totalTermFreq()>();

        if z7 == 0 goto label044;

        $b62 = $l35 cmp -1L;

        if $b62 == 0 goto label044;

        $z18 = 1;

        goto label045;

     label044:
        $z18 = 0;

     label045:
        z19 = $z18;

        if r59 == null goto label050;

        if z7 == 0 goto label048;

        $r310 = virtualinvoke $r56.<org.apache.lucene.index.TermsEnum: org.apache.lucene.index.DocsEnum docs(org.apache.lucene.util.Bits,org.apache.lucene.index.DocsEnum)>(null, null);

        i119 = 0;

        l120 = 0L;

     label046:
        $i58 = virtualinvoke $r310.<org.apache.lucene.index.DocsEnum: int nextDoc()>();

        if $i58 == 2147483647 goto label047;

        $i59 = virtualinvoke $r310.<org.apache.lucene.index.DocsEnum: int docID()>();

        virtualinvoke $r478.<org.apache.lucene.util.FixedBitSet: void set(int)>($i59);

        i119 = i119 + 1;

        $i60 = virtualinvoke $r310.<org.apache.lucene.index.DocsEnum: int freq()>();

        $l61 = (long) $i60;

        l120 = l120 + $l61;

        goto label046;

     label047:
        goto label050;

     label048:
        $r309 = virtualinvoke $r56.<org.apache.lucene.index.TermsEnum: org.apache.lucene.index.DocsEnum docs(org.apache.lucene.util.Bits,org.apache.lucene.index.DocsEnum,int)>(null, $r60, 0);

        i119 = 0;

        l120 = -1L;

     label049:
        $i56 = virtualinvoke $r309.<org.apache.lucene.index.DocsEnum: int nextDoc()>();

        if $i56 == 2147483647 goto label050;

        $i57 = virtualinvoke $r309.<org.apache.lucene.index.DocsEnum: int docID()>();

        virtualinvoke $r478.<org.apache.lucene.util.FixedBitSet: void set(int)>($i57);

        i119 = i119 + 1;

        goto label049;

     label050:
        if i119 == $i19 goto label051;

        $r508 = new java.lang.RuntimeException;

        $r507 = new java.lang.StringBuilder;

        specialinvoke $r507.<java.lang.StringBuilder: void <init>()>();

        $r302 = virtualinvoke $r507.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("term ");

        $r303 = virtualinvoke $r302.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r467);

        $r304 = virtualinvoke $r303.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" docFreq=");

        $r305 = virtualinvoke $r304.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i19);

        $r306 = virtualinvoke $r305.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" != tot docs w/o deletions ");

        $r307 = virtualinvoke $r306.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i119);

        $r308 = virtualinvoke $r307.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r508.<java.lang.RuntimeException: void <init>(java.lang.String)>($r308);

        throw $r508;

     label051:
        if z19 == 0 goto label053;

        $b54 = $l35 cmp 0L;

        $i150 = (int) $b54;

        if $i150 > 0 goto label052;

        $r510 = new java.lang.RuntimeException;

        $r509 = new java.lang.StringBuilder;

        specialinvoke $r509.<java.lang.StringBuilder: void <init>()>();

        $r296 = virtualinvoke $r509.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("totalTermFreq: ");

        $r297 = virtualinvoke $r296.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l35);

        $r298 = virtualinvoke $r297.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is out of bounds");

        $r299 = virtualinvoke $r298.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r510.<java.lang.RuntimeException: void <init>(java.lang.String)>($r299);

        throw $r510;

     label052:
        l114 = l114 + l120;

        $b55 = l120 cmp $l35;

        if $b55 == 0 goto label053;

        $r512 = new java.lang.RuntimeException;

        $r511 = new java.lang.StringBuilder;

        specialinvoke $r511.<java.lang.StringBuilder: void <init>()>();

        $r287 = virtualinvoke $r511.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("term ");

        $r288 = virtualinvoke $r287.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r467);

        $r289 = virtualinvoke $r288.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" totalTermFreq=");

        $r290 = virtualinvoke $r289.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l35);

        $r291 = virtualinvoke $r290.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" != recomputed totalTermFreq=");

        $r292 = virtualinvoke $r291.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l120);

        $r293 = virtualinvoke $r292.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r512.<java.lang.RuntimeException: void <init>(java.lang.String)>($r293);

        throw $r512;

     label053:
        if $z4 == 0 goto label070;

        i126 = 0;

     label054:
        if i126 >= 7 goto label069;

        $i43 = i126 + 1;

        $l45 = (long) $i43;

        $l44 = (long) i17;

        $l46 = $l45 * $l44;

        $l47 = $l46 / 8L;

        i127 = (int) $l47;

        $r195 = virtualinvoke $r56.<org.apache.lucene.index.TermsEnum: org.apache.lucene.index.DocsAndPositionsEnum docsAndPositions(org.apache.lucene.util.Bits,org.apache.lucene.index.DocsAndPositionsEnum)>(r59, r463);

        r463 = $r195;

        $i48 = virtualinvoke $r195.<org.apache.lucene.index.DocsAndPositionsEnum: int advance(int)>(i127);

        if $i48 != 2147483647 goto label055;

        goto label069;

     label055:
        if $i48 >= i127 goto label056;

        $r514 = new java.lang.RuntimeException;

        $r513 = new java.lang.StringBuilder;

        specialinvoke $r513.<java.lang.StringBuilder: void <init>()>();

        $r278 = virtualinvoke $r513.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("term ");

        $r279 = virtualinvoke $r278.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r467);

        $r280 = virtualinvoke $r279.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": advance(docID=");

        $r281 = virtualinvoke $r280.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i127);

        $r282 = virtualinvoke $r281.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") returned docID=");

        $r283 = virtualinvoke $r282.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i48);

        $r284 = virtualinvoke $r283.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r514.<java.lang.RuntimeException: void <init>(java.lang.String)>($r284);

        throw $r514;

     label056:
        $i49 = virtualinvoke $r195.<org.apache.lucene.index.DocsAndPositionsEnum: int freq()>();

        if $i49 > 0 goto label057;

        $r516 = new java.lang.RuntimeException;

        $r515 = new java.lang.StringBuilder;

        specialinvoke $r515.<java.lang.StringBuilder: void <init>()>();

        $r272 = virtualinvoke $r515.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("termFreq ");

        $r273 = virtualinvoke $r272.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i49);

        $r274 = virtualinvoke $r273.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is out of bounds");

        $r275 = virtualinvoke $r274.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r516.<java.lang.RuntimeException: void <init>(java.lang.String)>($r275);

        throw $r516;

     label057:
        $i152 = (int) -1;

        i128 = $i152;

        i129 = 0;

        i130 = 0;

     label058:
        if i130 >= $i49 goto label066;

        $i51 = virtualinvoke $r195.<org.apache.lucene.index.DocsAndPositionsEnum: int nextPosition()>();

        if $i51 >= 0 goto label059;

        $r518 = new java.lang.RuntimeException;

        $r517 = new java.lang.StringBuilder;

        specialinvoke $r517.<java.lang.StringBuilder: void <init>()>();

        $r266 = virtualinvoke $r517.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("position ");

        $r267 = virtualinvoke $r266.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i51);

        $r268 = virtualinvoke $r267.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is out of bounds");

        $r269 = virtualinvoke $r268.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r518.<java.lang.RuntimeException: void <init>(java.lang.String)>($r269);

        throw $r518;

     label059:
        if $i51 >= i128 goto label060;

        $r520 = new java.lang.RuntimeException;

        $r519 = new java.lang.StringBuilder;

        specialinvoke $r519.<java.lang.StringBuilder: void <init>()>();

        $r259 = virtualinvoke $r519.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("position ");

        $r260 = virtualinvoke $r259.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i51);

        $r261 = virtualinvoke $r260.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is < lastPosition ");

        $r262 = virtualinvoke $r261.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i128);

        $r263 = virtualinvoke $r262.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r520.<java.lang.RuntimeException: void <init>(java.lang.String)>($r263);

        throw $r520;

     label060:
        i128 = $i51;

        if $z5 == 0 goto label065;

        $i52 = virtualinvoke $r195.<org.apache.lucene.index.DocsAndPositionsEnum: int startOffset()>();

        $i53 = virtualinvoke $r195.<org.apache.lucene.index.DocsAndPositionsEnum: int endOffset()>();

        if z6 != 0 goto label064;

        if $i52 >= 0 goto label061;

        $r522 = new java.lang.RuntimeException;

        $r521 = new java.lang.StringBuilder;

        specialinvoke $r521.<java.lang.StringBuilder: void <init>()>();

        $r247 = virtualinvoke $r521.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("term ");

        $r248 = virtualinvoke $r247.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r467);

        $r249 = virtualinvoke $r248.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": doc ");

        $r250 = virtualinvoke $r249.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i48);

        $r251 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": pos ");

        $r252 = virtualinvoke $r251.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i51);

        $r253 = virtualinvoke $r252.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": startOffset ");

        $r254 = virtualinvoke $r253.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i52);

        $r255 = virtualinvoke $r254.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is out of bounds");

        $r256 = virtualinvoke $r255.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r522.<java.lang.RuntimeException: void <init>(java.lang.String)>($r256);

        throw $r522;

     label061:
        if $i52 >= i129 goto label062;

        $r524 = new java.lang.RuntimeException;

        $r523 = new java.lang.StringBuilder;

        specialinvoke $r523.<java.lang.StringBuilder: void <init>()>();

        $r234 = virtualinvoke $r523.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("term ");

        $r235 = virtualinvoke $r234.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r467);

        $r236 = virtualinvoke $r235.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": doc ");

        $r237 = virtualinvoke $r236.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i48);

        $r238 = virtualinvoke $r237.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": pos ");

        $r239 = virtualinvoke $r238.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i51);

        $r240 = virtualinvoke $r239.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": startOffset ");

        $r241 = virtualinvoke $r240.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i52);

        $r242 = virtualinvoke $r241.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" < lastStartOffset ");

        $r243 = virtualinvoke $r242.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i129);

        $r244 = virtualinvoke $r243.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r524.<java.lang.RuntimeException: void <init>(java.lang.String)>($r244);

        throw $r524;

     label062:
        if $i53 >= 0 goto label063;

        $r526 = new java.lang.RuntimeException;

        $r525 = new java.lang.StringBuilder;

        specialinvoke $r525.<java.lang.StringBuilder: void <init>()>();

        $r222 = virtualinvoke $r525.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("term ");

        $r223 = virtualinvoke $r222.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r467);

        $r224 = virtualinvoke $r223.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": doc ");

        $r225 = virtualinvoke $r224.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i48);

        $r226 = virtualinvoke $r225.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": pos ");

        $r227 = virtualinvoke $r226.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i51);

        $r228 = virtualinvoke $r227.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": endOffset ");

        $r229 = virtualinvoke $r228.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i53);

        $r230 = virtualinvoke $r229.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is out of bounds");

        $r231 = virtualinvoke $r230.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r526.<java.lang.RuntimeException: void <init>(java.lang.String)>($r231);

        throw $r526;

     label063:
        if $i53 >= $i52 goto label064;

        $r528 = new java.lang.RuntimeException;

        $r527 = new java.lang.StringBuilder;

        specialinvoke $r527.<java.lang.StringBuilder: void <init>()>();

        $r209 = virtualinvoke $r527.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("term ");

        $r210 = virtualinvoke $r209.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r467);

        $r211 = virtualinvoke $r210.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": doc ");

        $r212 = virtualinvoke $r211.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i48);

        $r213 = virtualinvoke $r212.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": pos ");

        $r214 = virtualinvoke $r213.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i51);

        $r215 = virtualinvoke $r214.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": endOffset ");

        $r216 = virtualinvoke $r215.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i53);

        $r217 = virtualinvoke $r216.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" < startOffset ");

        $r218 = virtualinvoke $r217.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i52);

        $r219 = virtualinvoke $r218.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r528.<java.lang.RuntimeException: void <init>(java.lang.String)>($r219);

        throw $r528;

     label064:
        i129 = $i52;

     label065:
        i130 = i130 + 1;

        goto label058;

     label066:
        $i50 = virtualinvoke $r195.<org.apache.lucene.index.DocsAndPositionsEnum: int nextDoc()>();

        if $i50 != 2147483647 goto label067;

        goto label069;

     label067:
        if $i50 > $i48 goto label068;

        $r530 = new java.lang.RuntimeException;

        $r529 = new java.lang.StringBuilder;

        specialinvoke $r529.<java.lang.StringBuilder: void <init>()>();

        $r198 = virtualinvoke $r529.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("term ");

        $r199 = virtualinvoke $r198.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r467);

        $r200 = virtualinvoke $r199.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": advance(docID=");

        $r201 = virtualinvoke $r200.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i127);

        $r202 = virtualinvoke $r201.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("), then .next() returned docID=");

        $r203 = virtualinvoke $r202.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i50);

        $r204 = virtualinvoke $r203.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vs prev docID=");

        $r205 = virtualinvoke $r204.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i48);

        $r206 = virtualinvoke $r205.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r530.<java.lang.RuntimeException: void <init>(java.lang.String)>($r206);

        throw $r530;

     label068:
        i126 = i126 + 1;

        goto label054;

     label069:
        goto label076;

     label070:
        i131 = 0;

     label071:
        if i131 >= 7 goto label076;

        $i36 = i131 + 1;

        $l38 = (long) $i36;

        $l37 = (long) i17;

        $l39 = $l38 * $l37;

        $l40 = $l39 / 8L;

        i132 = (int) $l40;

        $r174 = virtualinvoke $r56.<org.apache.lucene.index.TermsEnum: org.apache.lucene.index.DocsEnum docs(org.apache.lucene.util.Bits,org.apache.lucene.index.DocsEnum,int)>(r59, r462, 0);

        r462 = $r174;

        $i41 = virtualinvoke $r174.<org.apache.lucene.index.DocsEnum: int advance(int)>(i132);

        if $i41 != 2147483647 goto label072;

        goto label076;

     label072:
        if $i41 >= i132 goto label073;

        $r532 = new java.lang.RuntimeException;

        $r531 = new java.lang.StringBuilder;

        specialinvoke $r531.<java.lang.StringBuilder: void <init>()>();

        $r188 = virtualinvoke $r531.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("term ");

        $r189 = virtualinvoke $r188.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r467);

        $r190 = virtualinvoke $r189.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": advance(docID=");

        $r191 = virtualinvoke $r190.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i132);

        $r192 = virtualinvoke $r191.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") returned docID=");

        $r193 = virtualinvoke $r192.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i41);

        $r194 = virtualinvoke $r193.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r532.<java.lang.RuntimeException: void <init>(java.lang.String)>($r194);

        throw $r532;

     label073:
        $i42 = virtualinvoke $r174.<org.apache.lucene.index.DocsEnum: int nextDoc()>();

        if $i42 != 2147483647 goto label074;

        goto label076;

     label074:
        if $i42 > $i41 goto label075;

        $r534 = new java.lang.RuntimeException;

        $r533 = new java.lang.StringBuilder;

        specialinvoke $r533.<java.lang.StringBuilder: void <init>()>();

        $r177 = virtualinvoke $r533.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("term ");

        $r178 = virtualinvoke $r177.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r467);

        $r179 = virtualinvoke $r178.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": advance(docID=");

        $r180 = virtualinvoke $r179.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i132);

        $r181 = virtualinvoke $r180.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("), then .next() returned docID=");

        $r182 = virtualinvoke $r181.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i42);

        $r183 = virtualinvoke $r182.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vs prev docID=");

        $r184 = virtualinvoke $r183.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i41);

        $r185 = virtualinvoke $r184.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r534.<java.lang.RuntimeException: void <init>(java.lang.String)>($r185);

        throw $r534;

     label075:
        i131 = i131 + 1;

        goto label071;

     label076:
        goto label010;

     label077:
        $r332 = virtualinvoke r1.<org.apache.lucene.index.Fields: org.apache.lucene.index.Terms terms(java.lang.String)>(r465);

        if $r332 != null goto label078;

        goto label103;

     label078:
        $z12 = $r332 instanceof org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader;

        if $z12 == 0 goto label081;

        $r436 = (org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader) $r332;

        $r437 = virtualinvoke $r436.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: org.apache.lucene.codecs.BlockTreeTermsReader$Stats computeStats()>();

        $z14 = <org.apache.lucene.index.CheckIndex: boolean $assertionsDisabled>;

        if $z14 != 0 goto label079;

        if $r437 != null goto label079;

        $r535 = new java.lang.AssertionError;

        specialinvoke $r535.<java.lang.AssertionError: void <init>()>();

        throw $r535;

     label079:
        $r438 = $r471.<org.apache.lucene.index.CheckIndex$Status$TermIndexStatus: java.util.Map blockTreeStats>;

        if $r438 != null goto label080;

        $r536 = new java.util.HashMap;

        specialinvoke $r536.<java.util.HashMap: void <init>()>();

        $r471.<org.apache.lucene.index.CheckIndex$Status$TermIndexStatus: java.util.Map blockTreeStats> = $r536;

     label080:
        $r439 = $r471.<org.apache.lucene.index.CheckIndex$Status$TermIndexStatus: java.util.Map blockTreeStats>;

        interfaceinvoke $r439.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r465, $r437);

     label081:
        $b133 = l114 cmp 0L;

        if $b133 == 0 goto label082;

        $r426 = virtualinvoke r1.<org.apache.lucene.index.Fields: org.apache.lucene.index.Terms terms(java.lang.String)>(r465);

        $l107 = virtualinvoke $r426.<org.apache.lucene.index.Terms: long getSumTotalTermFreq()>();

        $b108 = $l107 cmp -1L;

        if $b108 == 0 goto label082;

        $b109 = l114 cmp $l107;

        if $b109 == 0 goto label082;

        $r538 = new java.lang.RuntimeException;

        $r537 = new java.lang.StringBuilder;

        specialinvoke $r537.<java.lang.StringBuilder: void <init>()>();

        $r429 = virtualinvoke $r537.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sumTotalTermFreq for field ");

        $r430 = virtualinvoke $r429.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r465);

        $r431 = virtualinvoke $r430.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r432 = virtualinvoke $r431.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l107);

        $r433 = virtualinvoke $r432.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" != recomputed sumTotalTermFreq=");

        $r434 = virtualinvoke $r433.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l114);

        $r435 = virtualinvoke $r434.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r538.<java.lang.RuntimeException: void <init>(java.lang.String)>($r435);

        throw $r538;

     label082:
        $b134 = l115 cmp 0L;

        if $b134 == 0 goto label083;

        $r416 = virtualinvoke r1.<org.apache.lucene.index.Fields: org.apache.lucene.index.Terms terms(java.lang.String)>(r465);

        $l104 = virtualinvoke $r416.<org.apache.lucene.index.Terms: long getSumDocFreq()>();

        $b105 = $l104 cmp -1L;

        if $b105 == 0 goto label083;

        $b106 = l115 cmp $l104;

        if $b106 == 0 goto label083;

        $r540 = new java.lang.RuntimeException;

        $r539 = new java.lang.StringBuilder;

        specialinvoke $r539.<java.lang.StringBuilder: void <init>()>();

        $r419 = virtualinvoke $r539.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sumDocFreq for field ");

        $r420 = virtualinvoke $r419.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r465);

        $r421 = virtualinvoke $r420.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r422 = virtualinvoke $r421.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l104);

        $r423 = virtualinvoke $r422.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" != recomputed sumDocFreq=");

        $r424 = virtualinvoke $r423.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l115);

        $r425 = virtualinvoke $r424.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r540.<java.lang.RuntimeException: void <init>(java.lang.String)>($r425);

        throw $r540;

     label083:
        if $r332 == null goto label084;

        $i101 = virtualinvoke $r332.<org.apache.lucene.index.Terms: int getDocCount()>();

        $i154 = (int) -1;

        if $i101 == $i154 goto label084;

        $i102 = virtualinvoke $r478.<org.apache.lucene.util.FixedBitSet: int cardinality()>();

        if $i102 == $i101 goto label084;

        $r542 = new java.lang.RuntimeException;

        $r541 = new java.lang.StringBuilder;

        specialinvoke $r541.<java.lang.StringBuilder: void <init>()>();

        $r409 = virtualinvoke $r541.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("docCount for field ");

        $r410 = virtualinvoke $r409.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r465);

        $r411 = virtualinvoke $r410.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r412 = virtualinvoke $r411.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i101);

        $r413 = virtualinvoke $r412.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" != recomputed docCount=");

        $i103 = virtualinvoke $r478.<org.apache.lucene.util.FixedBitSet: int cardinality()>();

        $r414 = virtualinvoke $r413.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i103);

        $r415 = virtualinvoke $r414.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r542.<java.lang.RuntimeException: void <init>(java.lang.String)>($r415);

        throw $r542;

     label084:
        if r466 == null goto label088;

        $r389 = virtualinvoke $r56.<org.apache.lucene.index.TermsEnum: org.apache.lucene.index.TermsEnum$SeekStatus seekCeil(org.apache.lucene.util.BytesRef)>(r466);

        $r390 = <org.apache.lucene.index.TermsEnum$SeekStatus: org.apache.lucene.index.TermsEnum$SeekStatus FOUND>;

        if $r389 == $r390 goto label085;

        $r544 = new java.lang.RuntimeException;

        $r543 = new java.lang.StringBuilder;

        specialinvoke $r543.<java.lang.StringBuilder: void <init>()>();

        $r403 = virtualinvoke $r543.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("seek to last term ");

        $r404 = virtualinvoke $r403.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r466);

        $r405 = virtualinvoke $r404.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed");

        $r406 = virtualinvoke $r405.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r544.<java.lang.RuntimeException: void <init>(java.lang.String)>($r406);

        throw $r544;

     label085:
        $i99 = virtualinvoke $r56.<org.apache.lucene.index.TermsEnum: int docFreq()>();

        $r391 = virtualinvoke $r56.<org.apache.lucene.index.TermsEnum: org.apache.lucene.index.DocsEnum docs(org.apache.lucene.util.Bits,org.apache.lucene.index.DocsEnum,int)>(null, null, 0);

        i135 = 0;

     label086:
        $i100 = virtualinvoke $r391.<org.apache.lucene.index.DocsEnum: int nextDoc()>();

        if $i100 == 2147483647 goto label087;

        i135 = i135 + 1;

        goto label086;

     label087:
        if i135 == $i99 goto label088;

        $r546 = new java.lang.RuntimeException;

        $r545 = new java.lang.StringBuilder;

        specialinvoke $r545.<java.lang.StringBuilder: void <init>()>();

        $r394 = virtualinvoke $r545.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("docFreq for last term ");

        $r395 = virtualinvoke $r394.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r466);

        $r396 = virtualinvoke $r395.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r397 = virtualinvoke $r396.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i99);

        $r398 = virtualinvoke $r397.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" != recomputed docFreq=");

        $r399 = virtualinvoke $r398.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i135);

        $r400 = virtualinvoke $r399.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r546.<java.lang.RuntimeException: void <init>(java.lang.String)>($r400);

        throw $r546;

     label088:
        l136 = -1L;

        $l70 = $r471.<org.apache.lucene.index.CheckIndex$Status$TermIndexStatus: long delTermCount>;

        $l69 = $r471.<org.apache.lucene.index.CheckIndex$Status$TermIndexStatus: long termCount>;

        $l71 = $l70 + $l69;

        $l72 = $l71 - $l111;

        $b73 = $l72 cmp 0L;

        $i155 = (int) $b73;

        if $i155 <= 0 goto label089;

        $r381 = virtualinvoke r1.<org.apache.lucene.index.Fields: org.apache.lucene.index.Terms terms(java.lang.String)>(r465);

        $l88 = virtualinvoke $r381.<org.apache.lucene.index.Terms: long size()>();

        l136 = $l88;

        $b89 = $l88 cmp -1L;

        if $b89 == 0 goto label089;

        $l91 = $r471.<org.apache.lucene.index.CheckIndex$Status$TermIndexStatus: long delTermCount>;

        $l90 = $r471.<org.apache.lucene.index.CheckIndex$Status$TermIndexStatus: long termCount>;

        $l92 = $l91 + $l90;

        $l93 = $l92 - $l111;

        $b94 = $l88 cmp $l93;

        if $b94 == 0 goto label089;

        $r548 = new java.lang.RuntimeException;

        $r547 = new java.lang.StringBuilder;

        specialinvoke $r547.<java.lang.StringBuilder: void <init>()>();

        $r384 = virtualinvoke $r547.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("termCount mismatch ");

        $l95 = $r471.<org.apache.lucene.index.CheckIndex$Status$TermIndexStatus: long delTermCount>;

        $l96 = $l95 + $l88;

        $r385 = virtualinvoke $r384.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l96);

        $r386 = virtualinvoke $r385.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vs ");

        $l97 = $r471.<org.apache.lucene.index.CheckIndex$Status$TermIndexStatus: long termCount>;

        $l98 = $l97 - $l111;

        $r387 = virtualinvoke $r386.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l98);

        $r388 = virtualinvoke $r387.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r548.<java.lang.RuntimeException: void <init>(java.lang.String)>($r388);

        throw $r548;

     label089:
        if z22 == 0 goto label103;

        $l74 = $r471.<org.apache.lucene.index.CheckIndex$Status$TermIndexStatus: long termCount>;

        $l75 = $l74 - $l111;

        $b76 = $l75 cmp 0L;

        $i156 = (int) $b76;

        if $i156 <= 0 goto label103;

        $l77 = staticinvoke <java.lang.Math: long min(long,long)>(10000L, l136);

        i137 = (int) $l77;

        if i137 <= 0 goto label103;

        r469 = newarray (org.apache.lucene.util.BytesRef)[i137];

        i138 = i137 - 1;

     label090:
        if i138 < 0 goto label091;

        $l86 = (long) i138;

        $l84 = (long) i137;

        $l85 = l136 / $l84;

        l87 = $l86 * $l85;

        virtualinvoke $r56.<org.apache.lucene.index.TermsEnum: void seekExact(long)>(l87);

        $r379 = virtualinvoke $r56.<org.apache.lucene.index.TermsEnum: org.apache.lucene.util.BytesRef term()>();

        $r380 = staticinvoke <org.apache.lucene.util.BytesRef: org.apache.lucene.util.BytesRef deepCopyOf(org.apache.lucene.util.BytesRef)>($r379);

        r469[i138] = $r380;

        $i158 = (int) -1;

        i138 = i138 + $i158;

        goto label090;

     label091:
        l139 = 0L;

        i140 = i137 - 1;

     label092:
        if i140 < 0 goto label096;

        $r362 = r469[i140];

        $r363 = virtualinvoke $r56.<org.apache.lucene.index.TermsEnum: org.apache.lucene.index.TermsEnum$SeekStatus seekCeil(org.apache.lucene.util.BytesRef)>($r362);

        $r364 = <org.apache.lucene.index.TermsEnum$SeekStatus: org.apache.lucene.index.TermsEnum$SeekStatus FOUND>;

        if $r363 == $r364 goto label093;

        $r550 = new java.lang.RuntimeException;

        $r549 = new java.lang.StringBuilder;

        specialinvoke $r549.<java.lang.StringBuilder: void <init>()>();

        $r374 = virtualinvoke $r549.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("seek to existing term ");

        $r375 = r469[i140];

        $r376 = virtualinvoke $r374.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r375);

        $r377 = virtualinvoke $r376.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed");

        $r378 = virtualinvoke $r377.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r550.<java.lang.RuntimeException: void <init>(java.lang.String)>($r378);

        throw $r550;

     label093:
        $r365 = virtualinvoke $r56.<org.apache.lucene.index.TermsEnum: org.apache.lucene.index.DocsEnum docs(org.apache.lucene.util.Bits,org.apache.lucene.index.DocsEnum,int)>(r59, r462, 0);

        r462 = $r365;

        if $r365 != null goto label094;

        $r552 = new java.lang.RuntimeException;

        $r551 = new java.lang.StringBuilder;

        specialinvoke $r551.<java.lang.StringBuilder: void <init>()>();

        $r368 = virtualinvoke $r551.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("null DocsEnum from to existing term ");

        $r369 = r469[i140];

        $r370 = virtualinvoke $r368.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r369);

        $r371 = virtualinvoke $r370.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r552.<java.lang.RuntimeException: void <init>(java.lang.String)>($r371);

        throw $r552;

     label094:
        $i83 = virtualinvoke $r365.<org.apache.lucene.index.DocsEnum: int nextDoc()>();

        if $i83 == 2147483647 goto label095;

        l139 = l139 + 1L;

        goto label094;

     label095:
        $i160 = (int) -1;

        i140 = i140 + $i160;

        goto label092;

     label096:
        l141 = 0L;

        l142 = 0L;

        i143 = 0;

     label097:
        if i143 >= i137 goto label101;

        $r347 = r469[i143];

        $z13 = virtualinvoke $r56.<org.apache.lucene.index.TermsEnum: boolean seekExact(org.apache.lucene.util.BytesRef,boolean)>($r347, 1);

        if $z13 != 0 goto label098;

        $r554 = new java.lang.RuntimeException;

        $r553 = new java.lang.StringBuilder;

        specialinvoke $r553.<java.lang.StringBuilder: void <init>()>();

        $r357 = virtualinvoke $r553.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("seek to existing term ");

        $r358 = r469[i143];

        $r359 = virtualinvoke $r357.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r358);

        $r360 = virtualinvoke $r359.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed");

        $r361 = virtualinvoke $r360.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r554.<java.lang.RuntimeException: void <init>(java.lang.String)>($r361);

        throw $r554;

     label098:
        $i80 = virtualinvoke $r56.<org.apache.lucene.index.TermsEnum: int docFreq()>();

        $l81 = (long) $i80;

        l142 = l142 + $l81;

        $r348 = virtualinvoke $r56.<org.apache.lucene.index.TermsEnum: org.apache.lucene.index.DocsEnum docs(org.apache.lucene.util.Bits,org.apache.lucene.index.DocsEnum,int)>(null, r462, 0);

        r462 = $r348;

        if $r348 != null goto label099;

        $r556 = new java.lang.RuntimeException;

        $r555 = new java.lang.StringBuilder;

        specialinvoke $r555.<java.lang.StringBuilder: void <init>()>();

        $r351 = virtualinvoke $r555.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("null DocsEnum from to existing term ");

        $r352 = r469[i143];

        $r353 = virtualinvoke $r351.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r352);

        $r354 = virtualinvoke $r353.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r556.<java.lang.RuntimeException: void <init>(java.lang.String)>($r354);

        throw $r556;

     label099:
        $i82 = virtualinvoke $r348.<org.apache.lucene.index.DocsEnum: int nextDoc()>();

        if $i82 == 2147483647 goto label100;

        l141 = l141 + 1L;

        goto label099;

     label100:
        i143 = i143 + 1;

        goto label097;

     label101:
        $b78 = l139 cmp l141;

        $i161 = (int) $b78;

        if $i161 <= 0 goto label102;

        $r558 = new java.lang.RuntimeException;

        $r557 = new java.lang.StringBuilder;

        specialinvoke $r557.<java.lang.StringBuilder: void <init>()>();

        $r342 = virtualinvoke $r557.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("more postings with deletes=");

        $r343 = virtualinvoke $r342.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l139);

        $r344 = virtualinvoke $r343.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" than without=");

        $r345 = virtualinvoke $r344.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l141);

        $r346 = virtualinvoke $r345.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r558.<java.lang.RuntimeException: void <init>(java.lang.String)>($r346);

        throw $r558;

     label102:
        $b79 = l141 cmp l142;

        if $b79 == 0 goto label103;

        $r560 = new java.lang.RuntimeException;

        $r559 = new java.lang.StringBuilder;

        specialinvoke $r559.<java.lang.StringBuilder: void <init>()>();

        $r335 = virtualinvoke $r559.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("docfreqs=");

        $r336 = virtualinvoke $r335.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l142);

        $r337 = virtualinvoke $r336.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" != recomputed docfreqs=");

        $r338 = virtualinvoke $r337.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l141);

        $r339 = virtualinvoke $r338.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r560.<java.lang.RuntimeException: void <init>(java.lang.String)>($r339);

        throw $r560;

     label103:
        goto label002;

     label104:
        $i0 = virtualinvoke r1.<org.apache.lucene.index.Fields: int size()>();

        $i163 = (int) -1;

        if $i0 == $i163 goto label106;

        if $i0 >= 0 goto label105;

        $r562 = new java.lang.RuntimeException;

        $r561 = new java.lang.StringBuilder;

        specialinvoke $r561.<java.lang.StringBuilder: void <init>()>();

        $r49 = virtualinvoke $r561.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid fieldCount: ");

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r562.<java.lang.RuntimeException: void <init>(java.lang.String)>($r51);

        throw $r562;

     label105:
        if $i0 == i113 goto label106;

        $r564 = new java.lang.RuntimeException;

        $r563 = new java.lang.StringBuilder;

        specialinvoke $r563.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r563.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fieldCount mismatch ");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vs recomputed field count ");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i113);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r564.<java.lang.RuntimeException: void <init>(java.lang.String)>($r46);

        throw $r564;

     label106:
        $l1 = virtualinvoke r1.<org.apache.lucene.index.Fields: long getUniqueTermCount()>();

        $b2 = $l1 cmp -1L;

        if $b2 == 0 goto label107;

        $l9 = $r471.<org.apache.lucene.index.CheckIndex$Status$TermIndexStatus: long termCount>;

        $l8 = $r471.<org.apache.lucene.index.CheckIndex$Status$TermIndexStatus: long delTermCount>;

        $l10 = $l9 + $l8;

        $b11 = $l10 cmp $l1;

        if $b11 == 0 goto label107;

        $r566 = new java.lang.RuntimeException;

        $r565 = new java.lang.StringBuilder;

        specialinvoke $r565.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r565.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("termCount mismatch ");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vs ");

        $l13 = $r471.<org.apache.lucene.index.CheckIndex$Status$TermIndexStatus: long termCount>;

        $l12 = $r471.<org.apache.lucene.index.CheckIndex$Status$TermIndexStatus: long delTermCount>;

        $l14 = $l13 + $l12;

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l14);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r566.<java.lang.RuntimeException: void <init>(java.lang.String)>($r39);

        throw $r566;

     label107:
        if z0 == 0 goto label108;

        $r567 = new java.lang.StringBuilder;

        specialinvoke $r567.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r567.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("OK [");

        $l5 = $r471.<org.apache.lucene.index.CheckIndex$Status$TermIndexStatus: long termCount>;

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l5);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" terms; ");

        $l6 = $r471.<org.apache.lucene.index.CheckIndex$Status$TermIndexStatus: long totFreq>;

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l6);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" terms/docs pairs; ");

        $l7 = $r471.<org.apache.lucene.index.CheckIndex$Status$TermIndexStatus: long totPos>;

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l7);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" tokens]");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.lucene.index.CheckIndex: void msg(java.io.PrintStream,java.lang.String)>(r4, $r32);

     label108:
        if z1 == 0 goto label110;

        $r3 = $r471.<org.apache.lucene.index.CheckIndex$Status$TermIndexStatus: java.util.Map blockTreeStats>;

        if $r3 == null goto label110;

        if r4 == null goto label110;

        $l3 = $r471.<org.apache.lucene.index.CheckIndex$Status$TermIndexStatus: long termCount>;

        $b4 = $l3 cmp 0L;

        $i164 = (int) $b4;

        if $i164 <= 0 goto label110;

        $r5 = $r471.<org.apache.lucene.index.CheckIndex$Status$TermIndexStatus: java.util.Map blockTreeStats>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Set entrySet()>();

        $r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label109:
        $z2 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label110;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r470 = (java.util.Map$Entry) $r8;

        $r568 = new java.lang.StringBuilder;

        specialinvoke $r568.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r568.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("      field \"");

        $r11 = interfaceinvoke r470.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r12 = (java.lang.String) $r11;

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\":");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<java.io.PrintStream: void println(java.lang.String)>($r15);

        $r569 = new java.lang.StringBuilder;

        specialinvoke $r569.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r569.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("      ");

        $r18 = interfaceinvoke r470.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r19 = (org.apache.lucene.codecs.BlockTreeTermsReader$Stats) $r18;

        $r20 = virtualinvoke $r19.<org.apache.lucene.codecs.BlockTreeTermsReader$Stats: java.lang.String toString()>();

        $r21 = virtualinvoke $r20.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "\n      ");

        $r22 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<java.io.PrintStream: void println(java.lang.String)>($r23);

        goto label109;

     label110:
        return $r471;

        catch java.lang.UnsupportedOperationException from label017 to label018 with label019;
    }

    public static org.apache.lucene.index.CheckIndex$Status$TermIndexStatus testPostings(org.apache.lucene.index.AtomicReader, java.io.PrintStream)
    {
        java.io.PrintStream r1;
        org.apache.lucene.index.AtomicReader r0;
        org.apache.lucene.index.CheckIndex$Status$TermIndexStatus $r2;

        r0 := @parameter0: org.apache.lucene.index.AtomicReader;

        r1 := @parameter1: java.io.PrintStream;

        $r2 = staticinvoke <org.apache.lucene.index.CheckIndex: org.apache.lucene.index.CheckIndex$Status$TermIndexStatus testPostings(org.apache.lucene.index.AtomicReader,java.io.PrintStream,boolean)>(r0, r1, 0);

        return $r2;
    }

    public static org.apache.lucene.index.CheckIndex$Status$TermIndexStatus testPostings(org.apache.lucene.index.AtomicReader, java.io.PrintStream, boolean)
    {
        java.io.PrintStream r2;
        java.lang.Throwable $r5;
        org.apache.lucene.index.Fields $r3;
        int $i0;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String $r9;
        org.apache.lucene.index.FieldInfos $r4;
        org.apache.lucene.util.Bits $r1;
        org.apache.lucene.index.AtomicReader r0;
        boolean z0;
        org.apache.lucene.index.CheckIndex$Status$TermIndexStatus $r10, r11;

        r0 := @parameter0: org.apache.lucene.index.AtomicReader;

        r2 := @parameter1: java.io.PrintStream;

        z0 := @parameter2: boolean;

        $i0 = virtualinvoke r0.<org.apache.lucene.index.AtomicReader: int maxDoc()>();

        $r1 = virtualinvoke r0.<org.apache.lucene.index.AtomicReader: org.apache.lucene.util.Bits getLiveDocs()>();

     label1:
        if r2 == null goto label2;

        virtualinvoke r2.<java.io.PrintStream: void print(java.lang.String)>("    test: terms, freq, prox...");

     label2:
        $r3 = virtualinvoke r0.<org.apache.lucene.index.AtomicReader: org.apache.lucene.index.Fields fields()>();

        $r4 = virtualinvoke r0.<org.apache.lucene.index.AtomicReader: org.apache.lucene.index.FieldInfos getFieldInfos()>();

        r11 = staticinvoke <org.apache.lucene.index.CheckIndex: org.apache.lucene.index.CheckIndex$Status$TermIndexStatus checkFields(org.apache.lucene.index.Fields,org.apache.lucene.util.Bits,int,org.apache.lucene.index.FieldInfos,boolean,boolean,java.io.PrintStream,boolean)>($r3, $r1, $i0, $r4, 1, 0, r2, z0);

        if $r1 == null goto label4;

        if r2 == null goto label3;

        virtualinvoke r2.<java.io.PrintStream: void print(java.lang.String)>("    test (ignoring deletes): terms, freq, prox...");

     label3:
        staticinvoke <org.apache.lucene.index.CheckIndex: org.apache.lucene.index.CheckIndex$Status$TermIndexStatus checkFields(org.apache.lucene.index.Fields,org.apache.lucene.util.Bits,int,org.apache.lucene.index.FieldInfos,boolean,boolean,java.io.PrintStream,boolean)>($r3, null, $i0, $r4, 1, 0, r2, z0);

     label4:
        goto label6;

     label5:
        $r5 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ERROR: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.lucene.index.CheckIndex: void msg(java.io.PrintStream,java.lang.String)>(r2, $r9);

        $r10 = new org.apache.lucene.index.CheckIndex$Status$TermIndexStatus;

        specialinvoke $r10.<org.apache.lucene.index.CheckIndex$Status$TermIndexStatus: void <init>()>();

        r11 = $r10;

        $r10.<org.apache.lucene.index.CheckIndex$Status$TermIndexStatus: java.lang.Throwable error> = $r5;

        if r2 == null goto label6;

        virtualinvoke $r5.<java.lang.Throwable: void printStackTrace(java.io.PrintStream)>(r2);

     label6:
        return r11;

        catch java.lang.Throwable from label1 to label4 with label5;
    }

    public static org.apache.lucene.index.CheckIndex$Status$StoredFieldStatus testStoredFields(org.apache.lucene.index.AtomicReader, java.io.PrintStream)
    {
        org.apache.lucene.index.CheckIndex$Status$StoredFieldStatus $r0;
        org.apache.lucene.document.Document $r22;
        java.util.Locale $r8;
        boolean $z0;
        java.util.List $r23;
        float $f0, $f1, $f2;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r11, $r12, $r15, $r16, $r17, $r18, $r19, $r20, $r25, $r26, $r29, $r30;
        org.apache.lucene.index.AtomicReader r2;
        java.lang.Throwable $r24;
        long $l2, $l3, $l9, $l11, $l12;
        java.text.NumberFormat $r9;
        int $i0, $i1, $i4, $i5, $i6, $i7, $i8, $i10, i13, $i14;
        java.lang.String $r10, $r13, $r21, $r27, $r28, $r31;
        org.apache.lucene.util.Bits $r3;
        double $d0;
        java.io.PrintStream r1;
        java.lang.RuntimeException $r14;

        r2 := @parameter0: org.apache.lucene.index.AtomicReader;

        r1 := @parameter1: java.io.PrintStream;

        $r0 = new org.apache.lucene.index.CheckIndex$Status$StoredFieldStatus;

        specialinvoke $r0.<org.apache.lucene.index.CheckIndex$Status$StoredFieldStatus: void <init>()>();

     label01:
        if r1 == null goto label02;

        virtualinvoke r1.<java.io.PrintStream: void print(java.lang.String)>("    test: stored fields.......");

     label02:
        $r3 = virtualinvoke r2.<org.apache.lucene.index.AtomicReader: org.apache.lucene.util.Bits getLiveDocs()>();

        i13 = 0;

     label03:
        $i14 = virtualinvoke r2.<org.apache.lucene.index.AtomicReader: int maxDoc()>();

        if i13 >= $i14 goto label06;

        $r22 = virtualinvoke r2.<org.apache.lucene.index.AtomicReader: org.apache.lucene.document.Document document(int)>(i13);

        if $r3 == null goto label04;

        $z0 = interfaceinvoke $r3.<org.apache.lucene.util.Bits: boolean get(int)>(i13);

        if $z0 == 0 goto label05;

     label04:
        $i7 = $r0.<org.apache.lucene.index.CheckIndex$Status$StoredFieldStatus: int docCount>;

        $i8 = $i7 + 1;

        $r0.<org.apache.lucene.index.CheckIndex$Status$StoredFieldStatus: int docCount> = $i8;

        $l9 = $r0.<org.apache.lucene.index.CheckIndex$Status$StoredFieldStatus: long totFields>;

        $r23 = virtualinvoke $r22.<org.apache.lucene.document.Document: java.util.List getFields()>();

        $i10 = interfaceinvoke $r23.<java.util.List: int size()>();

        $l11 = (long) $i10;

        $l12 = $l9 + $l11;

        $r0.<org.apache.lucene.index.CheckIndex$Status$StoredFieldStatus: long totFields> = $l12;

     label05:
        i13 = i13 + 1;

        goto label03;

     label06:
        $i0 = $r0.<org.apache.lucene.index.CheckIndex$Status$StoredFieldStatus: int docCount>;

        $i1 = virtualinvoke r2.<org.apache.lucene.index.AtomicReader: int numDocs()>();

        if $i0 == $i1 goto label07;

        $r14 = new java.lang.RuntimeException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("docCount=");

        $i5 = $r0.<org.apache.lucene.index.CheckIndex$Status$StoredFieldStatus: int docCount>;

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but saw ");

        $i6 = $r0.<org.apache.lucene.index.CheckIndex$Status$StoredFieldStatus: int docCount>;

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" undeleted docs");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String)>($r21);

        throw $r14;

     label07:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("OK [");

        $l2 = $r0.<org.apache.lucene.index.CheckIndex$Status$StoredFieldStatus: long totFields>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" total field count; avg ");

        $r8 = <java.util.Locale: java.util.Locale ROOT>;

        $r9 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getInstance(java.util.Locale)>($r8);

        $l3 = $r0.<org.apache.lucene.index.CheckIndex$Status$StoredFieldStatus: long totFields>;

        $f1 = (float) $l3;

        $i4 = $r0.<org.apache.lucene.index.CheckIndex$Status$StoredFieldStatus: int docCount>;

        $f0 = (float) $i4;

        $f2 = $f1 / $f0;

        $d0 = (double) $f2;

        $r10 = virtualinvoke $r9.<java.text.NumberFormat: java.lang.String format(double)>($d0);

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" fields per doc]");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.lucene.index.CheckIndex: void msg(java.io.PrintStream,java.lang.String)>(r1, $r13);

     label08:
        goto label10;

     label09:
        $r24 := @caughtexception;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ERROR [");

        $r27 = virtualinvoke $r24.<java.lang.Throwable: java.lang.String getMessage()>();

        $r28 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r27);

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.lucene.index.CheckIndex: void msg(java.io.PrintStream,java.lang.String)>(r1, $r31);

        $r0.<org.apache.lucene.index.CheckIndex$Status$StoredFieldStatus: java.lang.Throwable error> = $r24;

        if r1 == null goto label10;

        virtualinvoke $r24.<java.lang.Throwable: void printStackTrace(java.io.PrintStream)>(r1);

     label10:
        return $r0;

        catch java.lang.Throwable from label01 to label08 with label09;
    }

    public static org.apache.lucene.index.CheckIndex$Status$DocValuesStatus testDocValues(org.apache.lucene.index.AtomicReader, java.io.PrintStream)
    {
        org.apache.lucene.index.FieldInfos $r3;
        boolean $z0, $z1;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9, $r10, $r23, $r24, $r27, $r28, $r31, $r32, $r34, $r35;
        org.apache.lucene.index.BinaryDocValues $r15;
        org.apache.lucene.index.AtomicReader r2;
        java.lang.Throwable $r22;
        org.apache.lucene.index.NumericDocValues $r17;
        long $l1, $l2, $l3;
        int $i0;
        org.apache.lucene.index.SortedSetDocValues $r21;
        java.lang.String $r11, $r14, $r16, $r18, $r20, $r25, $r26, $r29, $r33, $r36;
        org.apache.lucene.index.SortedDocValues $r19;
        java.io.PrintStream r1;
        java.util.Iterator $r4;
        org.apache.lucene.index.CheckIndex$Status$DocValuesStatus $r0;
        java.lang.RuntimeException $r30;
        org.apache.lucene.index.FieldInfo r13;
        java.lang.Object $r12;

        r2 := @parameter0: org.apache.lucene.index.AtomicReader;

        r1 := @parameter1: java.io.PrintStream;

        $r0 = new org.apache.lucene.index.CheckIndex$Status$DocValuesStatus;

        specialinvoke $r0.<org.apache.lucene.index.CheckIndex$Status$DocValuesStatus: void <init>()>();

     label01:
        if r1 == null goto label02;

        virtualinvoke r1.<java.io.PrintStream: void print(java.lang.String)>("    test: docvalues...........");

     label02:
        $r3 = virtualinvoke r2.<org.apache.lucene.index.AtomicReader: org.apache.lucene.index.FieldInfos getFieldInfos()>();

        $r4 = virtualinvoke $r3.<org.apache.lucene.index.FieldInfos: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label07;

        $r12 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r13 = (org.apache.lucene.index.FieldInfo) $r12;

        $z0 = virtualinvoke r13.<org.apache.lucene.index.FieldInfo: boolean hasDocValues()>();

        if $z0 == 0 goto label04;

        $l2 = $r0.<org.apache.lucene.index.CheckIndex$Status$DocValuesStatus: long totalValueFields>;

        $l3 = $l2 + 1L;

        $r0.<org.apache.lucene.index.CheckIndex$Status$DocValuesStatus: long totalValueFields> = $l3;

        staticinvoke <org.apache.lucene.index.CheckIndex: void checkDocValues(org.apache.lucene.index.FieldInfo,org.apache.lucene.index.AtomicReader,java.io.PrintStream)>(r13, r2, r1);

        goto label06;

     label04:
        $r14 = r13.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $r15 = virtualinvoke r2.<org.apache.lucene.index.AtomicReader: org.apache.lucene.index.BinaryDocValues getBinaryDocValues(java.lang.String)>($r14);

        if $r15 != null goto label05;

        $r16 = r13.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $r17 = virtualinvoke r2.<org.apache.lucene.index.AtomicReader: org.apache.lucene.index.NumericDocValues getNumericDocValues(java.lang.String)>($r16);

        if $r17 != null goto label05;

        $r18 = r13.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $r19 = virtualinvoke r2.<org.apache.lucene.index.AtomicReader: org.apache.lucene.index.SortedDocValues getSortedDocValues(java.lang.String)>($r18);

        if $r19 != null goto label05;

        $r20 = r13.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $r21 = virtualinvoke r2.<org.apache.lucene.index.AtomicReader: org.apache.lucene.index.SortedSetDocValues getSortedSetDocValues(java.lang.String)>($r20);

        if $r21 == null goto label06;

     label05:
        $r30 = new java.lang.RuntimeException;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("field: ");

        $r33 = r13.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has docvalues but should omit them!");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r30.<java.lang.RuntimeException: void <init>(java.lang.String)>($r36);

        throw $r30;

     label06:
        goto label03;

     label07:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("OK [");

        $i0 = $r0.<org.apache.lucene.index.CheckIndex$Status$DocValuesStatus: int docCount>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" total doc count; ");

        $l1 = $r0.<org.apache.lucene.index.CheckIndex$Status$DocValuesStatus: long totalValueFields>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" docvalues fields]");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.lucene.index.CheckIndex: void msg(java.io.PrintStream,java.lang.String)>(r1, $r11);

     label08:
        goto label10;

     label09:
        $r22 := @caughtexception;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ERROR [");

        $r25 = virtualinvoke $r22.<java.lang.Throwable: java.lang.String getMessage()>();

        $r26 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r25);

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.lucene.index.CheckIndex: void msg(java.io.PrintStream,java.lang.String)>(r1, $r29);

        $r0.<org.apache.lucene.index.CheckIndex$Status$DocValuesStatus: java.lang.Throwable error> = $r22;

        if r1 == null goto label10;

        virtualinvoke $r22.<java.lang.Throwable: void printStackTrace(java.io.PrintStream)>(r1);

     label10:
        return $r0;

        catch java.lang.Throwable from label01 to label08 with label09;
    }

    private static void checkBinaryDocValues(java.lang.String, org.apache.lucene.index.AtomicReader, org.apache.lucene.index.BinaryDocValues)
    {
        org.apache.lucene.util.BytesRef $r0;
        java.lang.AssertionError $r3;
        int $i0, i1;
        java.lang.String r4;
        org.apache.lucene.index.BinaryDocValues r2;
        org.apache.lucene.index.AtomicReader r1;
        boolean $z0, $z1;

        r4 := @parameter0: java.lang.String;

        r1 := @parameter1: org.apache.lucene.index.AtomicReader;

        r2 := @parameter2: org.apache.lucene.index.BinaryDocValues;

        $r0 = new org.apache.lucene.util.BytesRef;

        specialinvoke $r0.<org.apache.lucene.util.BytesRef: void <init>()>();

        i1 = 0;

     label1:
        $i0 = virtualinvoke r1.<org.apache.lucene.index.AtomicReader: int maxDoc()>();

        if i1 >= $i0 goto label3;

        virtualinvoke r2.<org.apache.lucene.index.BinaryDocValues: void get(int,org.apache.lucene.util.BytesRef)>(i1, $r0);

        $z0 = <org.apache.lucene.index.CheckIndex: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $z1 = virtualinvoke $r0.<org.apache.lucene.util.BytesRef: boolean isValid()>();

        if $z1 != 0 goto label2;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    private static void checkSortedDocValues(java.lang.String, org.apache.lucene.index.AtomicReader, org.apache.lucene.index.SortedDocValues)
    {
        boolean $z0, $z1;
        org.apache.lucene.util.BytesRef r38, $r46;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r11, $r12, $r17, $r18, $r19, $r20, $r21, $r22, $r26, $r27, $r28, $r29, $r30, $r31, $r35, $r36, $r40, $r42, $r44, $r48;
        org.apache.lucene.index.AtomicReader r1;
        org.apache.lucene.util.FixedBitSet $r39;
        java.lang.AssertionError $r47;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12, $i14;
        java.lang.String r0, $r13, $r23, $r32, $r37;
        org.apache.lucene.index.SortedDocValues r2;
        java.lang.RuntimeException $r41, $r43, $r45, $r49;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: org.apache.lucene.index.AtomicReader;

        r2 := @parameter2: org.apache.lucene.index.SortedDocValues;

        staticinvoke <org.apache.lucene.index.CheckIndex: void checkBinaryDocValues(java.lang.String,org.apache.lucene.index.AtomicReader,org.apache.lucene.index.BinaryDocValues)>(r0, r1, r2);

        $i0 = virtualinvoke r2.<org.apache.lucene.index.SortedDocValues: int getValueCount()>();

        i1 = $i0 - 1;

        $r39 = new org.apache.lucene.util.FixedBitSet;

        $i2 = virtualinvoke r2.<org.apache.lucene.index.SortedDocValues: int getValueCount()>();

        specialinvoke $r39.<org.apache.lucene.util.FixedBitSet: void <init>(int)>($i2);

        $i14 = (int) -1;

        i10 = $i14;

        i11 = 0;

     label01:
        $i3 = virtualinvoke r1.<org.apache.lucene.index.AtomicReader: int maxDoc()>();

        if i11 >= $i3 goto label04;

        $i9 = virtualinvoke r2.<org.apache.lucene.index.SortedDocValues: int getOrd(int)>(i11);

        if $i9 < 0 goto label02;

        if $i9 <= i1 goto label03;

     label02:
        $r41 = new java.lang.RuntimeException;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ord out of bounds: ");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r41.<java.lang.RuntimeException: void <init>(java.lang.String)>($r37);

        throw $r41;

     label03:
        i10 = staticinvoke <java.lang.Math: int max(int,int)>(i10, $i9);

        virtualinvoke $r39.<org.apache.lucene.util.FixedBitSet: void set(int)>($i9);

        i11 = i11 + 1;

        goto label01;

     label04:
        if i1 == i10 goto label05;

        $r43 = new java.lang.RuntimeException;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dv for field: ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" reports wrong maxOrd=");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but this is not the case: ");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i10);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r43.<java.lang.RuntimeException: void <init>(java.lang.String)>($r32);

        throw $r43;

     label05:
        $i4 = virtualinvoke $r39.<org.apache.lucene.util.FixedBitSet: int cardinality()>();

        $i5 = virtualinvoke r2.<org.apache.lucene.index.SortedDocValues: int getValueCount()>();

        if $i4 == $i5 goto label06;

        $r45 = new java.lang.RuntimeException;

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dv for field: ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has holes in its ords, valueCount=");

        $i7 = virtualinvoke r2.<org.apache.lucene.index.SortedDocValues: int getValueCount()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but only used: ");

        $i8 = virtualinvoke $r39.<org.apache.lucene.util.FixedBitSet: int cardinality()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r45.<java.lang.RuntimeException: void <init>(java.lang.String)>($r23);

        throw $r45;

     label06:
        r38 = null;

        $r46 = new org.apache.lucene.util.BytesRef;

        specialinvoke $r46.<org.apache.lucene.util.BytesRef: void <init>()>();

        i12 = 0;

     label07:
        if i12 > i1 goto label10;

        virtualinvoke r2.<org.apache.lucene.index.SortedDocValues: void lookupOrd(int,org.apache.lucene.util.BytesRef)>(i12, $r46);

        $z0 = <org.apache.lucene.index.CheckIndex: boolean $assertionsDisabled>;

        if $z0 != 0 goto label08;

        $z1 = virtualinvoke $r46.<org.apache.lucene.util.BytesRef: boolean isValid()>();

        if $z1 != 0 goto label08;

        $r47 = new java.lang.AssertionError;

        specialinvoke $r47.<java.lang.AssertionError: void <init>()>();

        throw $r47;

     label08:
        if r38 == null goto label09;

        $i6 = virtualinvoke $r46.<org.apache.lucene.util.BytesRef: int compareTo(org.apache.lucene.util.BytesRef)>(r38);

        if $i6 > 0 goto label09;

        $r49 = new java.lang.RuntimeException;

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dv for field: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has ords out of order: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r38);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" >=");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r46);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r49.<java.lang.RuntimeException: void <init>(java.lang.String)>($r13);

        throw $r49;

     label09:
        r38 = staticinvoke <org.apache.lucene.util.BytesRef: org.apache.lucene.util.BytesRef deepCopyOf(org.apache.lucene.util.BytesRef)>($r46);

        i12 = i12 + 1;

        goto label07;

     label10:
        return;
    }

    private static void checkSortedSetDocValues(java.lang.String, org.apache.lucene.index.AtomicReader, org.apache.lucene.index.SortedSetDocValues)
    {
        byte $b4, $b7, $b8, $b13, $b14, $b15, $b16;
        java.lang.StringBuilder $r6, $r8, $r9, $r10, $r11, $r12, $r17, $r18, $r19, $r20, $r21, $r22, $r26, $r27, $r28, $r29, $r30, $r31, $r35, $r36, $r40, $r41, $r42, $r43, $r44, $r45, $r49, $r51, $r53, $r55, $r59;
        org.apache.lucene.index.AtomicReader r2;
        long $l0, l1, $l2, $l5, $l6, $l10, $l11, $l12, l17, l19, l20;
        java.lang.AssertionError $r58;
        org.apache.lucene.index.SortedSetDocValues r0;
        java.lang.String r7, $r13, $r23, $r32, $r37, $r46;
        java.lang.RuntimeException $r50, $r52, $r54, $r56, $r60;
        boolean $z0, $z1;
        org.apache.lucene.util.BytesRef r47, $r57;
        org.apache.lucene.util.OpenBitSet $r48;
        int $i3, $i9, i18, $i21, $i22, $i23, $i24;

        r7 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.lucene.index.AtomicReader;

        r0 := @parameter2: org.apache.lucene.index.SortedSetDocValues;

        $l0 = virtualinvoke r0.<org.apache.lucene.index.SortedSetDocValues: long getValueCount()>();

        l1 = $l0 - 1L;

        $r48 = new org.apache.lucene.util.OpenBitSet;

        $l2 = virtualinvoke r0.<org.apache.lucene.index.SortedSetDocValues: long getValueCount()>();

        specialinvoke $r48.<org.apache.lucene.util.OpenBitSet: void <init>(long)>($l2);

        l17 = -1L;

        i18 = 0;

     label01:
        $i3 = virtualinvoke r2.<org.apache.lucene.index.AtomicReader: int maxDoc()>();

        if i18 >= $i3 goto label07;

        virtualinvoke r0.<org.apache.lucene.index.SortedSetDocValues: void setDocument(int)>(i18);

        l19 = -1L;

     label02:
        $l12 = virtualinvoke r0.<org.apache.lucene.index.SortedSetDocValues: long nextOrd()>();

        $b13 = $l12 cmp -1L;

        if $b13 == 0 goto label06;

        $b14 = $l12 cmp l19;

        $i21 = (int) $b14;

        if $i21 > 0 goto label03;

        $r50 = new java.lang.RuntimeException;

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ords out of order: ");

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l12);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" <= ");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l19);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for doc: ");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i18);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r50.<java.lang.RuntimeException: void <init>(java.lang.String)>($r46);

        throw $r50;

     label03:
        $b15 = $l12 cmp 0L;

        $i22 = (int) $b15;

        if $i22 < 0 goto label04;

        $b16 = $l12 cmp l1;

        $i23 = (int) $b16;

        if $i23 <= 0 goto label05;

     label04:
        $r52 = new java.lang.RuntimeException;

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ord out of bounds: ");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l12);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r52.<java.lang.RuntimeException: void <init>(java.lang.String)>($r37);

        throw $r52;

     label05:
        l19 = $l12;

        l17 = staticinvoke <java.lang.Math: long max(long,long)>(l17, $l12);

        virtualinvoke $r48.<org.apache.lucene.util.OpenBitSet: void set(long)>($l12);

        goto label02;

     label06:
        i18 = i18 + 1;

        goto label01;

     label07:
        $b4 = l1 cmp l17;

        if $b4 == 0 goto label08;

        $r54 = new java.lang.RuntimeException;

        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dv for field: ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" reports wrong maxOrd=");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but this is not the case: ");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l17);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r54.<java.lang.RuntimeException: void <init>(java.lang.String)>($r32);

        throw $r54;

     label08:
        $l5 = virtualinvoke $r48.<org.apache.lucene.util.OpenBitSet: long cardinality()>();

        $l6 = virtualinvoke r0.<org.apache.lucene.index.SortedSetDocValues: long getValueCount()>();

        $b7 = $l5 cmp $l6;

        if $b7 == 0 goto label09;

        $r56 = new java.lang.RuntimeException;

        $r55 = new java.lang.StringBuilder;

        specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dv for field: ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has holes in its ords, valueCount=");

        $l10 = virtualinvoke r0.<org.apache.lucene.index.SortedSetDocValues: long getValueCount()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l10);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but only used: ");

        $l11 = virtualinvoke $r48.<org.apache.lucene.util.OpenBitSet: long cardinality()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l11);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r56.<java.lang.RuntimeException: void <init>(java.lang.String)>($r23);

        throw $r56;

     label09:
        r47 = null;

        $r57 = new org.apache.lucene.util.BytesRef;

        specialinvoke $r57.<org.apache.lucene.util.BytesRef: void <init>()>();

        l20 = 0L;

     label10:
        $b8 = l20 cmp l1;

        $i24 = (int) $b8;

        if $i24 > 0 goto label13;

        virtualinvoke r0.<org.apache.lucene.index.SortedSetDocValues: void lookupOrd(long,org.apache.lucene.util.BytesRef)>(l20, $r57);

        $z0 = <org.apache.lucene.index.CheckIndex: boolean $assertionsDisabled>;

        if $z0 != 0 goto label11;

        $z1 = virtualinvoke $r57.<org.apache.lucene.util.BytesRef: boolean isValid()>();

        if $z1 != 0 goto label11;

        $r58 = new java.lang.AssertionError;

        specialinvoke $r58.<java.lang.AssertionError: void <init>()>();

        throw $r58;

     label11:
        if r47 == null goto label12;

        $i9 = virtualinvoke $r57.<org.apache.lucene.util.BytesRef: int compareTo(org.apache.lucene.util.BytesRef)>(r47);

        if $i9 > 0 goto label12;

        $r60 = new java.lang.RuntimeException;

        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dv for field: ");

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has ords out of order: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r47);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" >=");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r57);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r60.<java.lang.RuntimeException: void <init>(java.lang.String)>($r13);

        throw $r60;

     label12:
        r47 = staticinvoke <org.apache.lucene.util.BytesRef: org.apache.lucene.util.BytesRef deepCopyOf(org.apache.lucene.util.BytesRef)>($r57);

        l20 = l20 + 1L;

        goto label10;

     label13:
        return;
    }

    private static void checkNumericDocValues(java.lang.String, org.apache.lucene.index.AtomicReader, org.apache.lucene.index.NumericDocValues)
    {
        org.apache.lucene.index.NumericDocValues r1;
        int $i0, i1;
        java.lang.String r2;
        org.apache.lucene.index.AtomicReader r0;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: org.apache.lucene.index.AtomicReader;

        r1 := @parameter2: org.apache.lucene.index.NumericDocValues;

        i1 = 0;

     label1:
        $i0 = virtualinvoke r0.<org.apache.lucene.index.AtomicReader: int maxDoc()>();

        if i1 >= $i0 goto label2;

        virtualinvoke r1.<org.apache.lucene.index.NumericDocValues: long get(int)>(i1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private static void checkDocValues(org.apache.lucene.index.FieldInfo, org.apache.lucene.index.AtomicReader, java.io.PrintStream) throws java.lang.Exception
    {
        java.lang.StringBuilder $r43, $r45, $r46, $r49, $r51, $r52, $r55, $r57, $r58, $r61, $r63, $r64;
        org.apache.lucene.index.AtomicReader r3;
        java.lang.AssertionError $r40;
        org.apache.lucene.index.SortedSetDocValues $r12, $r21, $r24, $r39;
        java.lang.String $r4, $r5, $r7, $r9, $r11, $r13, $r14, $r16, $r18, $r20, $r22, $r23, $r25, $r27, $r29, $r31, $r32, $r34, $r36, $r38, $r44, $r47, $r50, $r53, $r56, $r59, $r62, $r65;
        java.lang.RuntimeException $r42, $r48, $r54, $r60;
        org.apache.lucene.index.FieldInfo r0;
        int[] $r1;
        org.apache.lucene.index.BinaryDocValues $r8, $r15, $r26, $r35;
        org.apache.lucene.index.NumericDocValues $r6, $r17, $r28, $r37;
        int $i0, $i1;
        org.apache.lucene.index.SortedDocValues $r10, $r19, $r30, $r33;
        java.io.PrintStream r41;
        org.apache.lucene.index.FieldInfo$DocValuesType $r2;

        r0 := @parameter0: org.apache.lucene.index.FieldInfo;

        r3 := @parameter1: org.apache.lucene.index.AtomicReader;

        r41 := @parameter2: java.io.PrintStream;

        $r1 = <org.apache.lucene.index.CheckIndex$1: int[] $SwitchMap$org$apache$lucene$index$FieldInfo$DocValuesType>;

        $r2 = virtualinvoke r0.<org.apache.lucene.index.FieldInfo: org.apache.lucene.index.FieldInfo$DocValuesType getDocValuesType()>();

        $i0 = virtualinvoke $r2.<org.apache.lucene.index.FieldInfo$DocValuesType: int ordinal()>();

        $i1 = $r1[$i0];

        tableswitch($i1)
        {
            case 1: goto label01;
            case 2: goto label03;
            case 3: goto label05;
            case 4: goto label07;
            default: goto label09;
        };

     label01:
        $r32 = r0.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $r31 = r0.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $r33 = virtualinvoke r3.<org.apache.lucene.index.AtomicReader: org.apache.lucene.index.SortedDocValues getSortedDocValues(java.lang.String)>($r31);

        staticinvoke <org.apache.lucene.index.CheckIndex: void checkSortedDocValues(java.lang.String,org.apache.lucene.index.AtomicReader,org.apache.lucene.index.SortedDocValues)>($r32, r3, $r33);

        $r34 = r0.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $r35 = virtualinvoke r3.<org.apache.lucene.index.AtomicReader: org.apache.lucene.index.BinaryDocValues getBinaryDocValues(java.lang.String)>($r34);

        if $r35 != null goto label02;

        $r36 = r0.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $r37 = virtualinvoke r3.<org.apache.lucene.index.AtomicReader: org.apache.lucene.index.NumericDocValues getNumericDocValues(java.lang.String)>($r36);

        if $r37 != null goto label02;

        $r38 = r0.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $r39 = virtualinvoke r3.<org.apache.lucene.index.AtomicReader: org.apache.lucene.index.SortedSetDocValues getSortedSetDocValues(java.lang.String)>($r38);

        if $r39 == null goto label10;

     label02:
        $r42 = new java.lang.RuntimeException;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r44 = r0.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" returns multiple docvalues types!");

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r42.<java.lang.RuntimeException: void <init>(java.lang.String)>($r47);

        throw $r42;

     label03:
        $r23 = r0.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $r22 = r0.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $r24 = virtualinvoke r3.<org.apache.lucene.index.AtomicReader: org.apache.lucene.index.SortedSetDocValues getSortedSetDocValues(java.lang.String)>($r22);

        staticinvoke <org.apache.lucene.index.CheckIndex: void checkSortedSetDocValues(java.lang.String,org.apache.lucene.index.AtomicReader,org.apache.lucene.index.SortedSetDocValues)>($r23, r3, $r24);

        $r25 = r0.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $r26 = virtualinvoke r3.<org.apache.lucene.index.AtomicReader: org.apache.lucene.index.BinaryDocValues getBinaryDocValues(java.lang.String)>($r25);

        if $r26 != null goto label04;

        $r27 = r0.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $r28 = virtualinvoke r3.<org.apache.lucene.index.AtomicReader: org.apache.lucene.index.NumericDocValues getNumericDocValues(java.lang.String)>($r27);

        if $r28 != null goto label04;

        $r29 = r0.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $r30 = virtualinvoke r3.<org.apache.lucene.index.AtomicReader: org.apache.lucene.index.SortedDocValues getSortedDocValues(java.lang.String)>($r29);

        if $r30 == null goto label10;

     label04:
        $r48 = new java.lang.RuntimeException;

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r50 = r0.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $r51 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" returns multiple docvalues types!");

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r48.<java.lang.RuntimeException: void <init>(java.lang.String)>($r53);

        throw $r48;

     label05:
        $r14 = r0.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $r13 = r0.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $r15 = virtualinvoke r3.<org.apache.lucene.index.AtomicReader: org.apache.lucene.index.BinaryDocValues getBinaryDocValues(java.lang.String)>($r13);

        staticinvoke <org.apache.lucene.index.CheckIndex: void checkBinaryDocValues(java.lang.String,org.apache.lucene.index.AtomicReader,org.apache.lucene.index.BinaryDocValues)>($r14, r3, $r15);

        $r16 = r0.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $r17 = virtualinvoke r3.<org.apache.lucene.index.AtomicReader: org.apache.lucene.index.NumericDocValues getNumericDocValues(java.lang.String)>($r16);

        if $r17 != null goto label06;

        $r18 = r0.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $r19 = virtualinvoke r3.<org.apache.lucene.index.AtomicReader: org.apache.lucene.index.SortedDocValues getSortedDocValues(java.lang.String)>($r18);

        if $r19 != null goto label06;

        $r20 = r0.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $r21 = virtualinvoke r3.<org.apache.lucene.index.AtomicReader: org.apache.lucene.index.SortedSetDocValues getSortedSetDocValues(java.lang.String)>($r20);

        if $r21 == null goto label10;

     label06:
        $r54 = new java.lang.RuntimeException;

        $r55 = new java.lang.StringBuilder;

        specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();

        $r56 = r0.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $r57 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56);

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" returns multiple docvalues types!");

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r54.<java.lang.RuntimeException: void <init>(java.lang.String)>($r59);

        throw $r54;

     label07:
        $r5 = r0.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $r4 = r0.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $r6 = virtualinvoke r3.<org.apache.lucene.index.AtomicReader: org.apache.lucene.index.NumericDocValues getNumericDocValues(java.lang.String)>($r4);

        staticinvoke <org.apache.lucene.index.CheckIndex: void checkNumericDocValues(java.lang.String,org.apache.lucene.index.AtomicReader,org.apache.lucene.index.NumericDocValues)>($r5, r3, $r6);

        $r7 = r0.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $r8 = virtualinvoke r3.<org.apache.lucene.index.AtomicReader: org.apache.lucene.index.BinaryDocValues getBinaryDocValues(java.lang.String)>($r7);

        if $r8 != null goto label08;

        $r9 = r0.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $r10 = virtualinvoke r3.<org.apache.lucene.index.AtomicReader: org.apache.lucene.index.SortedDocValues getSortedDocValues(java.lang.String)>($r9);

        if $r10 != null goto label08;

        $r11 = r0.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $r12 = virtualinvoke r3.<org.apache.lucene.index.AtomicReader: org.apache.lucene.index.SortedSetDocValues getSortedSetDocValues(java.lang.String)>($r11);

        if $r12 == null goto label10;

     label08:
        $r60 = new java.lang.RuntimeException;

        $r61 = new java.lang.StringBuilder;

        specialinvoke $r61.<java.lang.StringBuilder: void <init>()>();

        $r62 = r0.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $r63 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r62);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" returns multiple docvalues types!");

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r60.<java.lang.RuntimeException: void <init>(java.lang.String)>($r65);

        throw $r60;

     label09:
        $r40 = new java.lang.AssertionError;

        specialinvoke $r40.<java.lang.AssertionError: void <init>()>();

        throw $r40;

     label10:
        return;
    }

    private static void checkNorms(org.apache.lucene.index.FieldInfo, org.apache.lucene.index.AtomicReader, java.io.PrintStream) throws java.io.IOException
    {
        org.apache.lucene.index.NumericDocValues $r6;
        java.lang.AssertionError $r7;
        int[] $r1;
        int $i0, $i1;
        java.lang.String $r4, $r5, $r12;
        java.io.PrintStream r13;
        org.apache.lucene.index.FieldInfo$DocValuesType $r2, $r10;
        org.apache.lucene.index.FieldInfo r0;
        java.lang.StringBuilder $r8, $r9, $r11;
        org.apache.lucene.index.AtomicReader r3;

        r0 := @parameter0: org.apache.lucene.index.FieldInfo;

        r3 := @parameter1: org.apache.lucene.index.AtomicReader;

        r13 := @parameter2: java.io.PrintStream;

        $r1 = <org.apache.lucene.index.CheckIndex$1: int[] $SwitchMap$org$apache$lucene$index$FieldInfo$DocValuesType>;

        $r2 = virtualinvoke r0.<org.apache.lucene.index.FieldInfo: org.apache.lucene.index.FieldInfo$DocValuesType getNormType()>();

        $i0 = virtualinvoke $r2.<org.apache.lucene.index.FieldInfo$DocValuesType: int ordinal()>();

        $i1 = $r1[$i0];

        lookupswitch($i1)
        {
            case 4: goto label1;
            default: goto label2;
        };

     label1:
        $r5 = r0.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $r4 = r0.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $r6 = virtualinvoke r3.<org.apache.lucene.index.AtomicReader: org.apache.lucene.index.NumericDocValues getNormValues(java.lang.String)>($r4);

        staticinvoke <org.apache.lucene.index.CheckIndex: void checkNumericDocValues(java.lang.String,org.apache.lucene.index.AtomicReader,org.apache.lucene.index.NumericDocValues)>($r5, r3, $r6);

        goto label3;

     label2:
        $r7 = new java.lang.AssertionError;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("wtf: ");

        $r10 = virtualinvoke r0.<org.apache.lucene.index.FieldInfo: org.apache.lucene.index.FieldInfo$DocValuesType getNormType()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.AssertionError: void <init>(java.lang.Object)>($r12);

        throw $r7;

     label3:
        return;
    }

    public static org.apache.lucene.index.CheckIndex$Status$TermVectorStatus testTermVectors(org.apache.lucene.index.AtomicReader, java.io.PrintStream)
    {
        java.io.PrintStream r1;
        org.apache.lucene.index.CheckIndex$Status$TermVectorStatus $r2;
        org.apache.lucene.index.AtomicReader r0;

        r0 := @parameter0: org.apache.lucene.index.AtomicReader;

        r1 := @parameter1: java.io.PrintStream;

        $r2 = staticinvoke <org.apache.lucene.index.CheckIndex: org.apache.lucene.index.CheckIndex$Status$TermVectorStatus testTermVectors(org.apache.lucene.index.AtomicReader,java.io.PrintStream,boolean,boolean)>(r0, r1, 0, 0);

        return $r2;
    }

    public static org.apache.lucene.index.CheckIndex$Status$TermVectorStatus testTermVectors(org.apache.lucene.index.AtomicReader, java.io.PrintStream, boolean, boolean)
    {
        org.apache.lucene.index.FieldInfos $r2;
        int $i0, $i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i16, $i17, i18, $i19, i20, $i21, $i22, $i24, $i26, $i28, $i30;
        java.io.PrintStream r4;
        org.apache.lucene.index.CheckIndex$Status$TermVectorStatus $r200;
        java.lang.AssertionError $r206, $r207, $r208, $r209, $r226, $r227;
        java.text.NumberFormat $r11;
        java.lang.String $r12, $r15, r19, $r43, $r55, $r68, $r83, $r96, $r109, $r122, $r129, $r141, $r151, $r160, $r172, $r180, $r184, $r185, $r188;
        java.lang.RuntimeException $r203, $r205, $r211, $r213, $r215, $r217, $r219, $r221, $r223, $r225, $r229, $r231, $r233;
        org.apache.lucene.index.DocsEnum $r27, $r142, r189, r191, r197, r198;
        org.apache.lucene.index.Fields $r16, r193;
        org.apache.lucene.index.DocsAndPositionsEnum $r28, $r164, r190, r192;
        boolean z0, z1, z2, $z3, z4, $z5, $z6, $z7, z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z20, $z21, $z22, $z23, $z24, $z25;
        org.apache.lucene.util.BytesRef $r29, $r30, $r56, $r66, $r196, $r199;
        double $d0;
        java.lang.StringBuilder $r7, $r8, $r9, $r13, $r14, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r67, $r73, $r74, $r75, $r76, $r77, $r78, $r79, $r80, $r81, $r82, $r86, $r87, $r88, $r89, $r90, $r91, $r92, $r93, $r94, $r95, $r99, $r100, $r101, $r102, $r103, $r104, $r105, $r106, $r107, $r108, $r112, $r113, $r114, $r115, $r116, $r117, $r118, $r119, $r120, $r121, $r125, $r126, $r127, $r128, $r132, $r133, $r134, $r135, $r136, $r137, $r138, $r139, $r140, $r145, $r146, $r147, $r148, $r149, $r150, $r154, $r155, $r156, $r157, $r158, $r159, $r168, $r169, $r170, $r171, $r175, $r176, $r177, $r178, $r179, $r183, $r186, $r187, $r202, $r204, $r210, $r212, $r214, $r216, $r218, $r220, $r222, $r224, $r228, $r230, $r232, $r234, $r235;
        org.apache.lucene.index.AtomicReader r1;
        long $l1, $l3, $l14, $l15;
        org.apache.lucene.util.FixedBitSet $r201;
        org.apache.lucene.util.Bits $r5;
        java.util.Locale $r10;
        org.apache.lucene.index.Terms $r21, $r25;
        java.lang.Object $r18;
        org.apache.lucene.index.TermsEnum $r22, $r26, r194, r195;
        java.lang.Throwable $r181;
        org.apache.lucene.index.FieldInfo $r20;
        org.apache.lucene.index.FieldInfo$IndexOptions $r23, $r24;
        float $f0, $f1, $f2;
        java.util.Iterator $r17;

        r1 := @parameter0: org.apache.lucene.index.AtomicReader;

        r4 := @parameter1: java.io.PrintStream;

        z1 := @parameter2: boolean;

        z0 := @parameter3: boolean;

        $r200 = new org.apache.lucene.index.CheckIndex$Status$TermVectorStatus;

        specialinvoke $r200.<org.apache.lucene.index.CheckIndex$Status$TermVectorStatus: void <init>()>();

        $r2 = virtualinvoke r1.<org.apache.lucene.index.AtomicReader: org.apache.lucene.index.FieldInfos getFieldInfos()>();

        $r201 = new org.apache.lucene.util.FixedBitSet;

        specialinvoke $r201.<org.apache.lucene.util.FixedBitSet: void <init>(int)>(1);

     label01:
        if r4 == null goto label02;

        virtualinvoke r4.<java.io.PrintStream: void print(java.lang.String)>("    test: term vectors........");

     label02:
        r189 = null;

        r190 = null;

        r191 = null;

        r192 = null;

        $r5 = virtualinvoke r1.<org.apache.lucene.index.AtomicReader: org.apache.lucene.util.Bits getLiveDocs()>();

        if z0 == 0 goto label03;

        r193 = virtualinvoke r1.<org.apache.lucene.index.AtomicReader: org.apache.lucene.index.Fields fields()>();

        goto label04;

     label03:
        r193 = null;

     label04:
        r194 = null;

        r195 = null;

        i18 = 0;

     label05:
        $i19 = virtualinvoke r1.<org.apache.lucene.index.AtomicReader: int maxDoc()>();

        if i18 >= $i19 goto label47;

        $r16 = virtualinvoke r1.<org.apache.lucene.index.AtomicReader: org.apache.lucene.index.Fields getTermVectors(int)>(i18);

        if $r16 == null goto label46;

        staticinvoke <org.apache.lucene.index.CheckIndex: org.apache.lucene.index.CheckIndex$Status$TermIndexStatus checkFields(org.apache.lucene.index.Fields,org.apache.lucene.util.Bits,int,org.apache.lucene.index.FieldInfos,boolean,boolean,java.io.PrintStream,boolean)>($r16, null, 1, $r2, 0, 1, r4, z1);

        staticinvoke <org.apache.lucene.index.CheckIndex: org.apache.lucene.index.CheckIndex$Status$TermIndexStatus checkFields(org.apache.lucene.index.Fields,org.apache.lucene.util.Bits,int,org.apache.lucene.index.FieldInfos,boolean,boolean,java.io.PrintStream,boolean)>($r16, $r201, 1, $r2, 0, 1, r4, z1);

        if $r5 == null goto label06;

        $z18 = interfaceinvoke $r5.<org.apache.lucene.util.Bits: boolean get(int)>(i18);

        if $z18 == 0 goto label07;

     label06:
        $z25 = 1;

        $z24 = 1;

        goto label08;

     label07:
        $z25 = 0;

        $z24 = 0;

     label08:
        z2 = $z24;

        if $z25 == 0 goto label09;

        $i16 = $r200.<org.apache.lucene.index.CheckIndex$Status$TermVectorStatus: int docCount>;

        $i17 = $i16 + 1;

        $r200.<org.apache.lucene.index.CheckIndex$Status$TermVectorStatus: int docCount> = $i17;

     label09:
        $r17 = virtualinvoke $r16.<org.apache.lucene.index.Fields: java.util.Iterator iterator()>();

     label10:
        $z20 = interfaceinvoke $r17.<java.util.Iterator: boolean hasNext()>();

        if $z20 == 0 goto label46;

        $r18 = interfaceinvoke $r17.<java.util.Iterator: java.lang.Object next()>();

        r19 = (java.lang.String) $r18;

        if z2 == 0 goto label11;

        $l14 = $r200.<org.apache.lucene.index.CheckIndex$Status$TermVectorStatus: long totVectors>;

        $l15 = $l14 + 1L;

        $r200.<org.apache.lucene.index.CheckIndex$Status$TermVectorStatus: long totVectors> = $l15;

     label11:
        $r20 = virtualinvoke $r2.<org.apache.lucene.index.FieldInfos: org.apache.lucene.index.FieldInfo fieldInfo(java.lang.String)>(r19);

        $z3 = virtualinvoke $r20.<org.apache.lucene.index.FieldInfo: boolean hasVectors()>();

        if $z3 != 0 goto label12;

        $r203 = new java.lang.RuntimeException;

        $r202 = new java.lang.StringBuilder;

        specialinvoke $r202.<java.lang.StringBuilder: void <init>()>();

        $r175 = virtualinvoke $r202.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("docID=");

        $r176 = virtualinvoke $r175.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i18);

        $r177 = virtualinvoke $r176.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has term vectors for field=");

        $r178 = virtualinvoke $r177.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        $r179 = virtualinvoke $r178.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but FieldInfo has storeTermVector=false");

        $r180 = virtualinvoke $r179.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r203.<java.lang.RuntimeException: void <init>(java.lang.String)>($r180);

        throw $r203;

     label12:
        if z0 == 0 goto label45;

        $r21 = virtualinvoke $r16.<org.apache.lucene.index.Fields: org.apache.lucene.index.Terms terms(java.lang.String)>(r19);

        $r22 = virtualinvoke $r21.<org.apache.lucene.index.Terms: org.apache.lucene.index.TermsEnum iterator(org.apache.lucene.index.TermsEnum)>(r194);

        r194 = $r22;

        $r23 = virtualinvoke $r20.<org.apache.lucene.index.FieldInfo: org.apache.lucene.index.FieldInfo$IndexOptions getIndexOptions()>();

        $r24 = <org.apache.lucene.index.FieldInfo$IndexOptions: org.apache.lucene.index.FieldInfo$IndexOptions DOCS_AND_FREQS>;

        $i4 = virtualinvoke $r23.<org.apache.lucene.index.FieldInfo$IndexOptions: int compareTo(java.lang.Enum)>($r24);

        if $i4 < 0 goto label13;

        $z21 = 1;

        goto label14;

     label13:
        $z21 = 0;

     label14:
        z4 = $z21;

        $z5 = virtualinvoke $r20.<org.apache.lucene.index.FieldInfo: boolean hasPayloads()>();

        $z6 = virtualinvoke $r21.<org.apache.lucene.index.Terms: boolean hasPayloads()>();

        $r25 = virtualinvoke r193.<org.apache.lucene.index.Fields: org.apache.lucene.index.Terms terms(java.lang.String)>(r19);

        if $r25 != null goto label15;

        $r205 = new java.lang.RuntimeException;

        $r204 = new java.lang.StringBuilder;

        specialinvoke $r204.<java.lang.StringBuilder: void <init>()>();

        $r168 = virtualinvoke $r204.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("vector field=");

        $r169 = virtualinvoke $r168.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        $r170 = virtualinvoke $r169.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not exist in postings; doc=");

        $r171 = virtualinvoke $r170.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i18);

        $r172 = virtualinvoke $r171.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r205.<java.lang.RuntimeException: void <init>(java.lang.String)>($r172);

        throw $r205;

     label15:
        $r26 = virtualinvoke $r25.<org.apache.lucene.index.Terms: org.apache.lucene.index.TermsEnum iterator(org.apache.lucene.index.TermsEnum)>(r195);

        r195 = $r26;

        $z7 = virtualinvoke $r21.<org.apache.lucene.index.Terms: boolean hasOffsets()>();

        if $z7 != 0 goto label16;

        $z17 = virtualinvoke $r21.<org.apache.lucene.index.Terms: boolean hasPositions()>();

        if $z17 == 0 goto label17;

     label16:
        $z22 = 1;

        goto label18;

     label17:
        $z22 = 0;

     label18:
        z8 = $z22;

     label19:
        $r196 = virtualinvoke $r22.<org.apache.lucene.index.TermsEnum: org.apache.lucene.util.BytesRef next()>();

        if $r196 == null goto label45;

        if z8 == 0 goto label21;

        $r164 = virtualinvoke $r22.<org.apache.lucene.index.TermsEnum: org.apache.lucene.index.DocsAndPositionsEnum docsAndPositions(org.apache.lucene.util.Bits,org.apache.lucene.index.DocsAndPositionsEnum)>(null, r190);

        r190 = $r164;

        $z16 = <org.apache.lucene.index.CheckIndex: boolean $assertionsDisabled>;

        if $z16 != 0 goto label20;

        if $r164 != null goto label20;

        $r206 = new java.lang.AssertionError;

        specialinvoke $r206.<java.lang.AssertionError: void <init>()>();

        throw $r206;

     label20:
        r189 = null;

        goto label23;

     label21:
        $r27 = virtualinvoke $r22.<org.apache.lucene.index.TermsEnum: org.apache.lucene.index.DocsEnum docs(org.apache.lucene.util.Bits,org.apache.lucene.index.DocsEnum)>(null, r189);

        r189 = $r27;

        $z9 = <org.apache.lucene.index.CheckIndex: boolean $assertionsDisabled>;

        if $z9 != 0 goto label22;

        if $r27 != null goto label22;

        $r207 = new java.lang.AssertionError;

        specialinvoke $r207.<java.lang.AssertionError: void <init>()>();

        throw $r207;

     label22:
        r190 = null;

     label23:
        if z8 == 0 goto label25;

        $z15 = <org.apache.lucene.index.CheckIndex: boolean $assertionsDisabled>;

        if $z15 != 0 goto label24;

        if r190 != null goto label24;

        $r208 = new java.lang.AssertionError;

        specialinvoke $r208.<java.lang.AssertionError: void <init>()>();

        throw $r208;

     label24:
        r197 = r190;

        goto label27;

     label25:
        $z10 = <org.apache.lucene.index.CheckIndex: boolean $assertionsDisabled>;

        if $z10 != 0 goto label26;

        if r189 != null goto label26;

        $r209 = new java.lang.AssertionError;

        specialinvoke $r209.<java.lang.AssertionError: void <init>()>();

        throw $r209;

     label26:
        r197 = r189;

     label27:
        $z23 = virtualinvoke $r26.<org.apache.lucene.index.TermsEnum: boolean seekExact(org.apache.lucene.util.BytesRef,boolean)>($r196, 1);

        if $z23 != 0 goto label28;

        $r211 = new java.lang.RuntimeException;

        $r210 = new java.lang.StringBuilder;

        specialinvoke $r210.<java.lang.StringBuilder: void <init>()>();

        $r154 = virtualinvoke $r210.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("vector term=");

        $r155 = virtualinvoke $r154.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r196);

        $r156 = virtualinvoke $r155.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" field=");

        $r157 = virtualinvoke $r156.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        $r158 = virtualinvoke $r157.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not exist in postings; doc=");

        $r159 = virtualinvoke $r158.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i18);

        $r160 = virtualinvoke $r159.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r211.<java.lang.RuntimeException: void <init>(java.lang.String)>($r160);

        throw $r211;

     label28:
        $r28 = virtualinvoke $r26.<org.apache.lucene.index.TermsEnum: org.apache.lucene.index.DocsAndPositionsEnum docsAndPositions(org.apache.lucene.util.Bits,org.apache.lucene.index.DocsAndPositionsEnum)>(null, r192);

        r192 = $r28;

        if $r28 != null goto label29;

        $r142 = virtualinvoke $r26.<org.apache.lucene.index.TermsEnum: org.apache.lucene.index.DocsEnum docs(org.apache.lucene.util.Bits,org.apache.lucene.index.DocsEnum)>(null, r191);

        r191 = $r142;

        if $r142 != null goto label29;

        $r213 = new java.lang.RuntimeException;

        $r212 = new java.lang.StringBuilder;

        specialinvoke $r212.<java.lang.StringBuilder: void <init>()>();

        $r145 = virtualinvoke $r212.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("vector term=");

        $r146 = virtualinvoke $r145.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r196);

        $r147 = virtualinvoke $r146.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" field=");

        $r148 = virtualinvoke $r147.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        $r149 = virtualinvoke $r148.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not exist in postings; doc=");

        $r150 = virtualinvoke $r149.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i18);

        $r151 = virtualinvoke $r150.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r213.<java.lang.RuntimeException: void <init>(java.lang.String)>($r151);

        throw $r213;

     label29:
        if $r28 == null goto label30;

        r198 = $r28;

        goto label31;

     label30:
        r198 = r191;

     label31:
        $i5 = virtualinvoke r198.<org.apache.lucene.index.DocsEnum: int advance(int)>(i18);

        if $i5 == i18 goto label32;

        $r215 = new java.lang.RuntimeException;

        $r214 = new java.lang.StringBuilder;

        specialinvoke $r214.<java.lang.StringBuilder: void <init>()>();

        $r132 = virtualinvoke $r214.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("vector term=");

        $r133 = virtualinvoke $r132.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r196);

        $r134 = virtualinvoke $r133.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" field=");

        $r135 = virtualinvoke $r134.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        $r136 = virtualinvoke $r135.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": doc=");

        $r137 = virtualinvoke $r136.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i18);

        $r138 = virtualinvoke $r137.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was not found in postings (got: ");

        $r139 = virtualinvoke $r138.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r140 = virtualinvoke $r139.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r141 = virtualinvoke $r140.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r215.<java.lang.RuntimeException: void <init>(java.lang.String)>($r141);

        throw $r215;

     label32:
        $i6 = virtualinvoke r197.<org.apache.lucene.index.DocsEnum: int nextDoc()>();

        if $i6 == 0 goto label33;

        $r217 = new java.lang.RuntimeException;

        $r216 = new java.lang.StringBuilder;

        specialinvoke $r216.<java.lang.StringBuilder: void <init>()>();

        $r125 = virtualinvoke $r216.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("vector for doc ");

        $r126 = virtualinvoke $r125.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i18);

        $r127 = virtualinvoke $r126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" didn\'t return docID=0: got docID=");

        $r128 = virtualinvoke $r127.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r129 = virtualinvoke $r128.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r217.<java.lang.RuntimeException: void <init>(java.lang.String)>($r129);

        throw $r217;

     label33:
        if z4 == 0 goto label44;

        $i7 = virtualinvoke r197.<org.apache.lucene.index.DocsEnum: int freq()>();

        if z4 == 0 goto label34;

        $i12 = virtualinvoke r198.<org.apache.lucene.index.DocsEnum: int freq()>();

        if $i12 == $i7 goto label34;

        $r219 = new java.lang.RuntimeException;

        $r218 = new java.lang.StringBuilder;

        specialinvoke $r218.<java.lang.StringBuilder: void <init>()>();

        $r112 = virtualinvoke $r218.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("vector term=");

        $r113 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r196);

        $r114 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" field=");

        $r115 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        $r116 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" doc=");

        $r117 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i18);

        $r118 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": freq=");

        $r119 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r120 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" differs from postings freq=");

        $i13 = virtualinvoke r198.<org.apache.lucene.index.DocsEnum: int freq()>();

        $r121 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r122 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r219.<java.lang.RuntimeException: void <init>(java.lang.String)>($r122);

        throw $r219;

     label34:
        if z8 == 0 goto label44;

        i20 = 0;

     label35:
        if i20 >= $i7 goto label44;

        $i8 = virtualinvoke r190.<org.apache.lucene.index.DocsAndPositionsEnum: int nextPosition()>();

        if $r28 == null goto label36;

        $i11 = virtualinvoke $r28.<org.apache.lucene.index.DocsAndPositionsEnum: int nextPosition()>();

        $z14 = virtualinvoke $r21.<org.apache.lucene.index.Terms: boolean hasPositions()>();

        if $z14 == 0 goto label36;

        if $i8 == $i11 goto label36;

        $r221 = new java.lang.RuntimeException;

        $r220 = new java.lang.StringBuilder;

        specialinvoke $r220.<java.lang.StringBuilder: void <init>()>();

        $r99 = virtualinvoke $r220.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("vector term=");

        $r100 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r196);

        $r101 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" field=");

        $r102 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        $r103 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" doc=");

        $r104 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i18);

        $r105 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": pos=");

        $r106 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r107 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" differs from postings pos=");

        $r108 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r109 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r221.<java.lang.RuntimeException: void <init>(java.lang.String)>($r109);

        throw $r221;

     label36:
        $i21 = virtualinvoke r190.<org.apache.lucene.index.DocsAndPositionsEnum: int startOffset()>();

        $i22 = virtualinvoke r190.<org.apache.lucene.index.DocsAndPositionsEnum: int endOffset()>();

        if $r28 == null goto label38;

        $i9 = virtualinvoke $r28.<org.apache.lucene.index.DocsAndPositionsEnum: int startOffset()>();

        $i10 = virtualinvoke $r28.<org.apache.lucene.index.DocsAndPositionsEnum: int endOffset()>();

        $i24 = (int) -1;

        if $i21 == $i24 goto label37;

        $i26 = (int) -1;

        if $i9 == $i26 goto label37;

        if $i21 == $i9 goto label37;

        $r223 = new java.lang.RuntimeException;

        $r222 = new java.lang.StringBuilder;

        specialinvoke $r222.<java.lang.StringBuilder: void <init>()>();

        $r86 = virtualinvoke $r222.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("vector term=");

        $r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r196);

        $r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" field=");

        $r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        $r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" doc=");

        $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i18);

        $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": startOffset=");

        $r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i21);

        $r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" differs from postings startOffset=");

        $r95 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r96 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r223.<java.lang.RuntimeException: void <init>(java.lang.String)>($r96);

        throw $r223;

     label37:
        $i28 = (int) -1;

        if $i22 == $i28 goto label38;

        $i30 = (int) -1;

        if $i10 == $i30 goto label38;

        if $i22 == $i10 goto label38;

        $r225 = new java.lang.RuntimeException;

        $r224 = new java.lang.StringBuilder;

        specialinvoke $r224.<java.lang.StringBuilder: void <init>()>();

        $r73 = virtualinvoke $r224.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("vector term=");

        $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r196);

        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" field=");

        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" doc=");

        $r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i18);

        $r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": endOffset=");

        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i22);

        $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" differs from postings endOffset=");

        $r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r225.<java.lang.RuntimeException: void <init>(java.lang.String)>($r83);

        throw $r225;

     label38:
        $r199 = virtualinvoke r190.<org.apache.lucene.index.DocsAndPositionsEnum: org.apache.lucene.util.BytesRef getPayload()>();

        if $r199 == null goto label39;

        $z13 = <org.apache.lucene.index.CheckIndex: boolean $assertionsDisabled>;

        if $z13 != 0 goto label39;

        if $z6 != 0 goto label39;

        $r226 = new java.lang.AssertionError;

        specialinvoke $r226.<java.lang.AssertionError: void <init>()>();

        throw $r226;

     label39:
        if $z5 == 0 goto label43;

        if $z6 == 0 goto label43;

        $z11 = <org.apache.lucene.index.CheckIndex: boolean $assertionsDisabled>;

        if $z11 != 0 goto label40;

        if $r28 != null goto label40;

        $r227 = new java.lang.AssertionError;

        specialinvoke $r227.<java.lang.AssertionError: void <init>()>();

        throw $r227;

     label40:
        if $r199 != null goto label41;

        $r56 = virtualinvoke $r28.<org.apache.lucene.index.DocsAndPositionsEnum: org.apache.lucene.util.BytesRef getPayload()>();

        if $r56 == null goto label43;

        $r229 = new java.lang.RuntimeException;

        $r228 = new java.lang.StringBuilder;

        specialinvoke $r228.<java.lang.StringBuilder: void <init>()>();

        $r59 = virtualinvoke $r228.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("vector term=");

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r196);

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" field=");

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" doc=");

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i18);

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has no payload but postings does: ");

        $r66 = virtualinvoke $r28.<org.apache.lucene.index.DocsAndPositionsEnum: org.apache.lucene.util.BytesRef getPayload()>();

        $r67 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r66);

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r229.<java.lang.RuntimeException: void <init>(java.lang.String)>($r68);

        throw $r229;

     label41:
        $r29 = virtualinvoke $r28.<org.apache.lucene.index.DocsAndPositionsEnum: org.apache.lucene.util.BytesRef getPayload()>();

        if $r29 != null goto label42;

        $r231 = new java.lang.RuntimeException;

        $r230 = new java.lang.StringBuilder;

        specialinvoke $r230.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke $r230.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("vector term=");

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r196);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" field=");

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" doc=");

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i18);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has payload=");

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r199);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but postings does not.");

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r231.<java.lang.RuntimeException: void <init>(java.lang.String)>($r55);

        throw $r231;

     label42:
        $r30 = virtualinvoke $r28.<org.apache.lucene.index.DocsAndPositionsEnum: org.apache.lucene.util.BytesRef getPayload()>();

        $z12 = virtualinvoke $r199.<org.apache.lucene.util.BytesRef: boolean equals(java.lang.Object)>($r30);

        if $z12 != 0 goto label43;

        $r233 = new java.lang.RuntimeException;

        $r232 = new java.lang.StringBuilder;

        specialinvoke $r232.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r232.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("vector term=");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r196);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" field=");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" doc=");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i18);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has payload=");

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r199);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but differs from postings payload=");

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r30);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r233.<java.lang.RuntimeException: void <init>(java.lang.String)>($r43);

        throw $r233;

     label43:
        i20 = i20 + 1;

        goto label35;

     label44:
        goto label19;

     label45:
        goto label10;

     label46:
        i18 = i18 + 1;

        goto label05;

     label47:
        $i0 = $r200.<org.apache.lucene.index.CheckIndex$Status$TermVectorStatus: int docCount>;

        if $i0 != 0 goto label48;

        $f2 = 0.0F;

        goto label49;

     label48:
        $l1 = $r200.<org.apache.lucene.index.CheckIndex$Status$TermVectorStatus: long totVectors>;

        $f1 = (float) $l1;

        $i2 = $r200.<org.apache.lucene.index.CheckIndex$Status$TermVectorStatus: int docCount>;

        $f0 = (float) $i2;

        $f2 = $f1 / $f0;

     label49:
        $r234 = new java.lang.StringBuilder;

        specialinvoke $r234.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r234.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("OK [");

        $l3 = $r200.<org.apache.lucene.index.CheckIndex$Status$TermVectorStatus: long totVectors>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" total vector count; avg ");

        $r10 = <java.util.Locale: java.util.Locale ROOT>;

        $r11 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getInstance(java.util.Locale)>($r10);

        $d0 = (double) $f2;

        $r12 = virtualinvoke $r11.<java.text.NumberFormat: java.lang.String format(double)>($d0);

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" term/freq vector fields per doc]");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.lucene.index.CheckIndex: void msg(java.io.PrintStream,java.lang.String)>(r4, $r15);

     label50:
        goto label52;

     label51:
        $r181 := @caughtexception;

        $r235 = new java.lang.StringBuilder;

        specialinvoke $r235.<java.lang.StringBuilder: void <init>()>();

        $r183 = virtualinvoke $r235.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ERROR [");

        $r184 = virtualinvoke $r181.<java.lang.Throwable: java.lang.String getMessage()>();

        $r185 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r184);

        $r186 = virtualinvoke $r183.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r185);

        $r187 = virtualinvoke $r186.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r188 = virtualinvoke $r187.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.lucene.index.CheckIndex: void msg(java.io.PrintStream,java.lang.String)>(r4, $r188);

        $r200.<org.apache.lucene.index.CheckIndex$Status$TermVectorStatus: java.lang.Throwable error> = $r181;

        if r4 == null goto label52;

        virtualinvoke $r181.<java.lang.Throwable: void printStackTrace(java.io.PrintStream)>(r4);

     label52:
        return $r200;

        catch java.lang.Throwable from label01 to label50 with label51;
    }

    public void fixIndex(org.apache.lucene.index.CheckIndex$Status, org.apache.lucene.codecs.Codec) throws java.io.IOException
    {
        org.apache.lucene.index.CheckIndex r5;
        org.apache.lucene.index.CheckIndex$Status r0;
        java.lang.IllegalArgumentException $r4;
        org.apache.lucene.index.SegmentInfos $r1, $r3;
        org.apache.lucene.store.Directory $r2;
        org.apache.lucene.codecs.Codec r6;
        boolean $z0;

        r5 := @this: org.apache.lucene.index.CheckIndex;

        r0 := @parameter0: org.apache.lucene.index.CheckIndex$Status;

        r6 := @parameter1: org.apache.lucene.codecs.Codec;

        $z0 = r0.<org.apache.lucene.index.CheckIndex$Status: boolean partial>;

        if $z0 == 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("can only fix an index that was fully checked (this status checked a subset of segments)");

        throw $r4;

     label1:
        $r1 = r0.<org.apache.lucene.index.CheckIndex$Status: org.apache.lucene.index.SegmentInfos newSegments>;

        virtualinvoke $r1.<org.apache.lucene.index.SegmentInfos: void changed()>();

        $r3 = r0.<org.apache.lucene.index.CheckIndex$Status: org.apache.lucene.index.SegmentInfos newSegments>;

        $r2 = r0.<org.apache.lucene.index.CheckIndex$Status: org.apache.lucene.store.Directory dir>;

        virtualinvoke $r3.<org.apache.lucene.index.SegmentInfos: void commit(org.apache.lucene.store.Directory)>($r2);

        return;
    }

    private static boolean testAsserts()
    {
        <org.apache.lucene.index.CheckIndex: boolean assertsOn> = 1;

        return 1;
    }

    private static boolean assertsOn()
    {
        java.lang.AssertionError $r0;
        boolean $z0, $z1, $z2;

        $z0 = <org.apache.lucene.index.CheckIndex: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z2 = staticinvoke <org.apache.lucene.index.CheckIndex: boolean testAsserts()>();

        if $z2 != 0 goto label1;

        $r0 = new java.lang.AssertionError;

        specialinvoke $r0.<java.lang.AssertionError: void <init>()>();

        throw $r0;

     label1:
        $z1 = <org.apache.lucene.index.CheckIndex: boolean assertsOn>;

        return $z1;
    }

    public static void main(java.lang.String[]) throws java.io.IOException, java.lang.InterruptedException
    {
        byte b14;
        java.lang.StringBuilder $r6, $r8, $r9, $r10, $r12, $r14, $r15, $r16, $r20, $r22, $r25, $r26, $r28, $r30, $r31, $r32, $r34, $r36, $r37, $r38, $r44, $r46, $r49, $r50, $r51, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r76, $r78, $r80, $r81, $r89, $r91, $r92, $r93, $r102, $r103, $r104, $r105;
        org.apache.lucene.store.FSDirectory r107;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13;
        java.io.PrintStream $r4, $r7, $r13, $r18, $r19, $r21, $r29, $r35, $r41, $r42, $r43, $r45, $r77, $r83, $r85, $r87, $r90, $r95, $r101, $r108;
        java.lang.Package $r53;
        org.apache.lucene.codecs.Codec r96;
        java.lang.Class $r47, $r52;
        java.lang.Throwable $r88;
        java.util.ArrayList $r0, r97;
        java.lang.String $r11, $r17, $r24, $r27, $r33, $r39, $r48, $r54, $r71, $r72, $r73, $r74, $r75, $r79, $r82, $r84, $r86, $r94, r98, r99, r100, $r106;
        java.io.File $r2, $r40;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, z9, z10, z11, $z12, z13, z14;
        org.apache.lucene.index.CheckIndex $r3;
        org.apache.lucene.index.SegmentInfos $r23;
        org.apache.lucene.index.CheckIndex$Status $r5;
        java.lang.String[] r1;

        r1 := @parameter0: java.lang.String[];

        z9 = 0;

        z14 = 0;

        z13 = 0;

        z10 = 0;

        r96 = staticinvoke <org.apache.lucene.codecs.Codec: org.apache.lucene.codecs.Codec getDefault()>();

        z11 = 0;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        r97 = $r0;

        r98 = null;

        r99 = null;

        i12 = 0;

     label01:
        $i0 = lengthof r1;

        if i12 >= $i0 goto label13;

        r100 = r1[i12];

        $r72 = "-fix";

        $z3 = virtualinvoke $r72.<java.lang.String: boolean equals(java.lang.Object)>(r100);

        if $z3 == 0 goto label02;

        z9 = 1;

        z14 = 1;

        z13 = 1;

        goto label12;

     label02:
        $r73 = "-crossCheckTermVectors";

        $z4 = virtualinvoke $r73.<java.lang.String: boolean equals(java.lang.Object)>(r100);

        if $z4 == 0 goto label03;

        z10 = 1;

        goto label12;

     label03:
        $r74 = "-codec";

        $z5 = virtualinvoke $r74.<java.lang.String: boolean equals(java.lang.Object)>(r100);

        if $z5 == 0 goto label05;

        $i10 = lengthof r1;

        $i11 = $i10 - 1;

        if i12 != $i11 goto label04;

        $r87 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r87.<java.io.PrintStream: void println(java.lang.String)>("ERROR: missing name for -codec option");

        staticinvoke <java.lang.System: void exit(int)>(1);

     label04:
        i12 = i12 + 1;

        $r86 = r1[i12];

        r96 = staticinvoke <org.apache.lucene.codecs.Codec: org.apache.lucene.codecs.Codec forName(java.lang.String)>($r86);

        goto label12;

     label05:
        $z6 = virtualinvoke r100.<java.lang.String: boolean equals(java.lang.Object)>("-verbose");

        if $z6 == 0 goto label06;

        z11 = 1;

        goto label12;

     label06:
        $z7 = virtualinvoke r100.<java.lang.String: boolean equals(java.lang.Object)>("-segment");

        if $z7 == 0 goto label08;

        $i8 = lengthof r1;

        $i9 = $i8 - 1;

        if i12 != $i9 goto label07;

        $r85 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r85.<java.io.PrintStream: void println(java.lang.String)>("ERROR: missing name for -segment option");

        staticinvoke <java.lang.System: void exit(int)>(1);

     label07:
        i12 = i12 + 1;

        $r84 = r1[i12];

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r84);

        goto label12;

     label08:
        $r75 = "-dir-impl";

        $z8 = virtualinvoke $r75.<java.lang.String: boolean equals(java.lang.Object)>(r100);

        if $z8 == 0 goto label10;

        $i6 = lengthof r1;

        $i7 = $i6 - 1;

        if i12 != $i7 goto label09;

        $r83 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r83.<java.io.PrintStream: void println(java.lang.String)>("ERROR: missing value for -dir-impl option");

        staticinvoke <java.lang.System: void exit(int)>(1);

     label09:
        i12 = i12 + 1;

        r99 = r1[i12];

        goto label12;

     label10:
        if r98 == null goto label11;

        $r77 = <java.lang.System: java.io.PrintStream out>;

        $r76 = new java.lang.StringBuilder;

        specialinvoke $r76.<java.lang.StringBuilder: void <init>()>();

        $r78 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ERROR: unexpected extra argument \'");

        $r79 = r1[i12];

        $r80 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r79);

        $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r77.<java.io.PrintStream: void println(java.lang.String)>($r82);

        staticinvoke <java.lang.System: void exit(int)>(1);

     label11:
        r98 = r1[i12];

     label12:
        i12 = i12 + 1;

        goto label01;

     label13:
        if r98 != null goto label14;

        $r43 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r43.<java.io.PrintStream: void println(java.lang.String)>("\nERROR: index path not specified");

        $r45 = <java.lang.System: java.io.PrintStream out>;

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nUsage: java org.apache.lucene.index.CheckIndex pathToIndex [-fix] [-crossCheckTermVectors] [-segment X] [-segment Y] [-dir-impl X]\n\n  -fix: actually write a new segments_N file, removing any problematic segments\n  -crossCheckTermVectors: verifies that term vectors match postings; THIS IS VERY SLOW!\n  -codec X: when fixing, codec to write the new segments_N file with\n  -verbose: print additional details\n  -segment X: only check the specified segments.  This can be specified multiple\n              times, to check more than one segment, eg \'-segment _2 -segment _a\'.\n              You can\'t use this with the -fix option\n  -dir-impl X: use a specific ");

        $r47 = class "Lorg/apache/lucene/store/FSDirectory;";

        $r48 = virtualinvoke $r47.<java.lang.Class: java.lang.String getSimpleName()>();

        $r49 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" implementation. ");

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("If no package is specified the ");

        $r52 = class "Lorg/apache/lucene/store/FSDirectory;";

        $r53 = virtualinvoke $r52.<java.lang.Class: java.lang.Package getPackage()>();

        $r54 = virtualinvoke $r53.<java.lang.Package: java.lang.String getName()>();

        $r55 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54);

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" package will be used.\n");

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("**WARNING**: -fix should only be used on an emergency basis as it will cause\n");

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("documents (perhaps many) to be permanently removed from the index.  Always make\n");

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a backup copy of your index before running this!  Do not run this tool on an index\n");

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("that is actively being written to.  You have been warned!\n");

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Run without -fix, this tool will open the index, report version information\n");

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("and report any exceptions it hits and what action it would take if -fix were\n");

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("specified.  With -fix, this tool will remove any segments that have issues and\n");

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("write a new segments_N file.  This means all documents contained in the affected\n");

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("segments will be removed.\n");

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("This tool exits with exit code 1 if the index cannot be opened or has any\n");

        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("corruption, else 0.\n");

        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r45.<java.io.PrintStream: void println(java.lang.String)>($r71);

        staticinvoke <java.lang.System: void exit(int)>(1);

     label14:
        $z0 = staticinvoke <org.apache.lucene.index.CheckIndex: boolean assertsOn()>();

        if $z0 != 0 goto label15;

        $r42 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r42.<java.io.PrintStream: void println(java.lang.String)>("\nNOTE: testing will be more thorough if you run java with \'-ea:org.apache.lucene...\', so assertions are enabled");

     label15:
        $i1 = interfaceinvoke $r0.<java.util.List: int size()>();

        if $i1 != 0 goto label16;

        r97 = null;

        goto label17;

     label16:
        if z13 == 0 goto label17;

        $r41 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r41.<java.io.PrintStream: void println(java.lang.String)>("ERROR: cannot specify both -fix and -segment");

        staticinvoke <java.lang.System: void exit(int)>(1);

     label17:
        $r101 = <java.lang.System: java.io.PrintStream out>;

        $r102 = new java.lang.StringBuilder;

        specialinvoke $r102.<java.lang.StringBuilder: void <init>()>();

        $r103 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nOpening index @ ");

        $r104 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r98);

        $r105 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r106 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r101.<java.io.PrintStream: void println(java.lang.String)>($r106);

        r107 = null;

     label18:
        if r99 != null goto label19;

        $r40 = new java.io.File;

        specialinvoke $r40.<java.io.File: void <init>(java.lang.String)>(r98);

        r107 = staticinvoke <org.apache.lucene.store.FSDirectory: org.apache.lucene.store.FSDirectory open(java.io.File)>($r40);

        goto label20;

     label19:
        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>(r98);

        r107 = staticinvoke <org.apache.lucene.util.CommandLineUtil: org.apache.lucene.store.FSDirectory newFSDirectory(java.lang.String,java.io.File)>(r99, $r2);

     label20:
        goto label22;

     label21:
        $r88 := @caughtexception;

        $r90 = <java.lang.System: java.io.PrintStream out>;

        $r89 = new java.lang.StringBuilder;

        specialinvoke $r89.<java.lang.StringBuilder: void <init>()>();

        $r91 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ERROR: could not open directory \"");

        $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r98);

        $r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"; exiting");

        $r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r90.<java.io.PrintStream: void println(java.lang.String)>($r94);

        $r95 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r88.<java.lang.Throwable: void printStackTrace(java.io.PrintStream)>($r95);

        staticinvoke <java.lang.System: void exit(int)>(1);

     label22:
        $r3 = new org.apache.lucene.index.CheckIndex;

        specialinvoke $r3.<org.apache.lucene.index.CheckIndex: void <init>(org.apache.lucene.store.Directory)>(r107);

        virtualinvoke $r3.<org.apache.lucene.index.CheckIndex: void setCrossCheckTermVectors(boolean)>(z10);

        $r4 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r3.<org.apache.lucene.index.CheckIndex: void setInfoStream(java.io.PrintStream,boolean)>($r4, z11);

        $r5 = virtualinvoke $r3.<org.apache.lucene.index.CheckIndex: org.apache.lucene.index.CheckIndex$Status checkIndex(java.util.List)>(r97);

        $z1 = $r5.<org.apache.lucene.index.CheckIndex$Status: boolean missingSegments>;

        if $z1 == 0 goto label23;

        staticinvoke <java.lang.System: void exit(int)>(1);

     label23:
        $z2 = $r5.<org.apache.lucene.index.CheckIndex$Status: boolean clean>;

        if $z2 != 0 goto label27;

        if z14 != 0 goto label24;

        $r35 = <java.lang.System: java.io.PrintStream out>;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WARNING: would write new segments file, and ");

        $i5 = $r5.<org.apache.lucene.index.CheckIndex$Status: int totLoseDocCount>;

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" documents would be lost, if -fix were specified\n");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r35.<java.io.PrintStream: void println(java.lang.String)>($r39);

        goto label27;

     label24:
        $r7 = <java.lang.System: java.io.PrintStream out>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WARNING: ");

        $i2 = $r5.<org.apache.lucene.index.CheckIndex$Status: int totLoseDocCount>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" documents will be lost\n");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r11);

        $r13 = <java.lang.System: java.io.PrintStream out>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NOTE: will write new segments file in 5 seconds; this will remove ");

        $i3 = $r5.<org.apache.lucene.index.CheckIndex$Status: int totLoseDocCount>;

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" docs from the index. THIS IS YOUR LAST CHANCE TO CTRL+C!");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r17);

        i13 = 0;

     label25:
        if i13 >= 5 goto label26;

        staticinvoke <java.lang.Thread: void sleep(long)>(1000L);

        $r29 = <java.lang.System: java.io.PrintStream out>;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $i4 = 5 - i13;

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("...");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r29.<java.io.PrintStream: void println(java.lang.String)>($r33);

        i13 = i13 + 1;

        goto label25;

     label26:
        $r18 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>("Writing...");

        virtualinvoke $r3.<org.apache.lucene.index.CheckIndex: void fixIndex(org.apache.lucene.index.CheckIndex$Status,org.apache.lucene.codecs.Codec)>($r5, r96);

        $r19 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>("OK");

        $r21 = <java.lang.System: java.io.PrintStream out>;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Wrote new segments file \"");

        $r23 = $r5.<org.apache.lucene.index.CheckIndex$Status: org.apache.lucene.index.SegmentInfos newSegments>;

        $r24 = virtualinvoke $r23.<org.apache.lucene.index.SegmentInfos: java.lang.String getSegmentsFileName()>();

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>($r27);

     label27:
        $r108 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r108.<java.io.PrintStream: void println(java.lang.String)>("");

        $z12 = $r5.<org.apache.lucene.index.CheckIndex$Status: boolean clean>;

        if $z12 != 1 goto label28;

        b14 = 0;

        goto label29;

     label28:
        b14 = 1;

     label29:
        staticinvoke <java.lang.System: void exit(int)>(b14);

        return;

        catch java.lang.Throwable from label18 to label20 with label21;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/index/CheckIndex;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.index.CheckIndex: boolean $assertionsDisabled> = $z1;

        return;
    }
}
