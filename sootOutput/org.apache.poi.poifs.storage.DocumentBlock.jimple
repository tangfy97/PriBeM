public final class org.apache.poi.poifs.storage.DocumentBlock extends org.apache.poi.poifs.storage.BigBlock
{
    private static final byte _default_value;
    private byte[] _data;
    private int _bytes_read;

    public void <init>(org.apache.poi.poifs.storage.RawDataBlock) throws java.io.IOException
    {
        byte[] $r2, $r3;
        org.apache.poi.poifs.storage.RawDataBlock r1;
        org.apache.poi.poifs.common.POIFSBigBlockSize $r4;
        org.apache.poi.poifs.storage.DocumentBlock r0;
        int $i0, $i1;

        r0 := @this: org.apache.poi.poifs.storage.DocumentBlock;

        r1 := @parameter0: org.apache.poi.poifs.storage.RawDataBlock;

        $i0 = virtualinvoke r1.<org.apache.poi.poifs.storage.RawDataBlock: int getBigBlockSize()>();

        if $i0 != 512 goto label1;

        $r4 = <org.apache.poi.poifs.common.POIFSConstants: org.apache.poi.poifs.common.POIFSBigBlockSize SMALLER_BIG_BLOCK_SIZE_DETAILS>;

        goto label2;

     label1:
        $r4 = <org.apache.poi.poifs.common.POIFSConstants: org.apache.poi.poifs.common.POIFSBigBlockSize LARGER_BIG_BLOCK_SIZE_DETAILS>;

     label2:
        specialinvoke r0.<org.apache.poi.poifs.storage.BigBlock: void <init>(org.apache.poi.poifs.common.POIFSBigBlockSize)>($r4);

        $r2 = virtualinvoke r1.<org.apache.poi.poifs.storage.RawDataBlock: byte[] getData()>();

        r0.<org.apache.poi.poifs.storage.DocumentBlock: byte[] _data> = $r2;

        $r3 = r0.<org.apache.poi.poifs.storage.DocumentBlock: byte[] _data>;

        $i1 = lengthof $r3;

        r0.<org.apache.poi.poifs.storage.DocumentBlock: int _bytes_read> = $i1;

        return;
    }

    public void <init>(java.io.InputStream, org.apache.poi.poifs.common.POIFSBigBlockSize) throws java.io.IOException
    {
        byte[] $r3;
        org.apache.poi.poifs.common.POIFSBigBlockSize r1;
        org.apache.poi.poifs.storage.DocumentBlock r0;
        int $i0, $i1, $i3;
        java.io.InputStream r2;

        r0 := @this: org.apache.poi.poifs.storage.DocumentBlock;

        r2 := @parameter0: java.io.InputStream;

        r1 := @parameter1: org.apache.poi.poifs.common.POIFSBigBlockSize;

        specialinvoke r0.<org.apache.poi.poifs.storage.DocumentBlock: void <init>(org.apache.poi.poifs.common.POIFSBigBlockSize)>(r1);

        $r3 = r0.<org.apache.poi.poifs.storage.DocumentBlock: byte[] _data>;

        $i0 = staticinvoke <org.apache.poi.util.IOUtils: int readFully(java.io.InputStream,byte[])>(r2, $r3);

        $i3 = (int) -1;

        if $i0 != $i3 goto label1;

        $i1 = 0;

        goto label2;

     label1:
        $i1 = $i0;

     label2:
        r0.<org.apache.poi.poifs.storage.DocumentBlock: int _bytes_read> = $i1;

        return;
    }

    private void <init>(org.apache.poi.poifs.common.POIFSBigBlockSize)
    {
        byte[] $r2, $r3;
        org.apache.poi.poifs.common.POIFSBigBlockSize r1;
        org.apache.poi.poifs.storage.DocumentBlock r0;
        int $i0;

        r0 := @this: org.apache.poi.poifs.storage.DocumentBlock;

        r1 := @parameter0: org.apache.poi.poifs.common.POIFSBigBlockSize;

        specialinvoke r0.<org.apache.poi.poifs.storage.BigBlock: void <init>(org.apache.poi.poifs.common.POIFSBigBlockSize)>(r1);

        $i0 = virtualinvoke r1.<org.apache.poi.poifs.common.POIFSBigBlockSize: int getBigBlockSize()>();

        $r2 = newarray (byte)[$i0];

        r0.<org.apache.poi.poifs.storage.DocumentBlock: byte[] _data> = $r2;

        $r3 = r0.<org.apache.poi.poifs.storage.DocumentBlock: byte[] _data>;

        staticinvoke <java.util.Arrays: void fill(byte[],byte)>($r3, -1);

        return;
    }

    public int size()
    {
        int $i0;
        org.apache.poi.poifs.storage.DocumentBlock r0;

        r0 := @this: org.apache.poi.poifs.storage.DocumentBlock;

        $i0 = r0.<org.apache.poi.poifs.storage.DocumentBlock: int _bytes_read>;

        return $i0;
    }

    public boolean partiallyRead()
    {
        org.apache.poi.poifs.common.POIFSBigBlockSize $r1;
        org.apache.poi.poifs.storage.DocumentBlock r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.poi.poifs.storage.DocumentBlock;

        $i0 = r0.<org.apache.poi.poifs.storage.DocumentBlock: int _bytes_read>;

        $r1 = r0.<org.apache.poi.poifs.storage.DocumentBlock: org.apache.poi.poifs.common.POIFSBigBlockSize bigBlockSize>;

        $i1 = virtualinvoke $r1.<org.apache.poi.poifs.common.POIFSBigBlockSize: int getBigBlockSize()>();

        if $i0 == $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static byte getFillByte()
    {
        return -1;
    }

    public static org.apache.poi.poifs.storage.DocumentBlock[] convert(org.apache.poi.poifs.common.POIFSBigBlockSize, byte[], int)
    {
        byte[] r3, $r5, $r7, $r9;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16;
        org.apache.poi.poifs.storage.DocumentBlock[] r1;
        org.apache.poi.poifs.common.POIFSBigBlockSize r0;
        org.apache.poi.poifs.storage.DocumentBlock $r2, $r4, $r6, $r8;

        r0 := @parameter0: org.apache.poi.poifs.common.POIFSBigBlockSize;

        r3 := @parameter1: byte[];

        i0 := @parameter2: int;

        $i1 = virtualinvoke r0.<org.apache.poi.poifs.common.POIFSBigBlockSize: int getBigBlockSize()>();

        $i2 = i0 + $i1;

        $i3 = $i2 - 1;

        $i4 = virtualinvoke r0.<org.apache.poi.poifs.common.POIFSBigBlockSize: int getBigBlockSize()>();

        $i5 = $i3 / $i4;

        r1 = newarray (org.apache.poi.poifs.storage.DocumentBlock)[$i5];

        i15 = 0;

        i16 = 0;

     label1:
        $i6 = lengthof r1;

        if i16 >= $i6 goto label5;

        $r2 = new org.apache.poi.poifs.storage.DocumentBlock;

        specialinvoke $r2.<org.apache.poi.poifs.storage.DocumentBlock: void <init>(org.apache.poi.poifs.common.POIFSBigBlockSize)>(r0);

        r1[i16] = $r2;

        $i7 = lengthof r3;

        if i15 >= $i7 goto label3;

        $i9 = virtualinvoke r0.<org.apache.poi.poifs.common.POIFSBigBlockSize: int getBigBlockSize()>();

        $i10 = lengthof r3;

        $i11 = $i10 - i15;

        $i12 = staticinvoke <java.lang.Math: int min(int,int)>($i9, $i11);

        $r6 = r1[i16];

        $r7 = $r6.<org.apache.poi.poifs.storage.DocumentBlock: byte[] _data>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, i15, $r7, 0, $i12);

        $i13 = virtualinvoke r0.<org.apache.poi.poifs.common.POIFSBigBlockSize: int getBigBlockSize()>();

        if $i12 == $i13 goto label2;

        $r8 = r1[i16];

        $r9 = $r8.<org.apache.poi.poifs.storage.DocumentBlock: byte[] _data>;

        $i14 = virtualinvoke r0.<org.apache.poi.poifs.common.POIFSBigBlockSize: int getBigBlockSize()>();

        staticinvoke <java.util.Arrays: void fill(byte[],int,int,byte)>($r9, $i12, $i14, -1);

     label2:
        goto label4;

     label3:
        $r4 = r1[i16];

        $r5 = $r4.<org.apache.poi.poifs.storage.DocumentBlock: byte[] _data>;

        staticinvoke <java.util.Arrays: void fill(byte[],byte)>($r5, -1);

     label4:
        $i8 = virtualinvoke r0.<org.apache.poi.poifs.common.POIFSBigBlockSize: int getBigBlockSize()>();

        i15 = i15 + $i8;

        i16 = i16 + 1;

        goto label1;

     label5:
        return r1;
    }

    public static org.apache.poi.poifs.storage.DataInputBlock getDataInputBlock(org.apache.poi.poifs.storage.DocumentBlock[], int)
    {
        byte[] $r5;
        org.apache.poi.poifs.storage.DataInputBlock $r6;
        org.apache.poi.poifs.storage.DocumentBlock[] r0;
        short $s1;
        org.apache.poi.poifs.common.POIFSBigBlockSize r2;
        org.apache.poi.poifs.storage.DocumentBlock $r1, $r4;
        int $i0, $i2, i3, i4, i5, i6, $i7;

        r0 := @parameter0: org.apache.poi.poifs.storage.DocumentBlock[];

        i4 := @parameter1: int;

        if r0 == null goto label1;

        $i0 = lengthof r0;

        if $i0 != 0 goto label2;

     label1:
        return null;

     label2:
        $r1 = r0[0];

        r2 = $r1.<org.apache.poi.poifs.storage.DocumentBlock: org.apache.poi.poifs.common.POIFSBigBlockSize bigBlockSize>;

        $s1 = virtualinvoke r2.<org.apache.poi.poifs.common.POIFSBigBlockSize: short getHeaderValue()>();

        $i2 = virtualinvoke r2.<org.apache.poi.poifs.common.POIFSBigBlockSize: int getBigBlockSize()>();

        i3 = $i2 - 1;

        $i7 = (int) $s1;

        i5 = i4 >> $i7;

        i6 = i4 & i3;

        $r6 = new org.apache.poi.poifs.storage.DataInputBlock;

        $r4 = r0[i5];

        $r5 = $r4.<org.apache.poi.poifs.storage.DocumentBlock: byte[] _data>;

        specialinvoke $r6.<org.apache.poi.poifs.storage.DataInputBlock: void <init>(byte[],int)>($r5, i6);

        return $r6;
    }

    void writeData(java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r1;
        byte[] $r2;
        org.apache.poi.poifs.storage.DocumentBlock r0;

        r0 := @this: org.apache.poi.poifs.storage.DocumentBlock;

        r1 := @parameter0: java.io.OutputStream;

        $r2 = r0.<org.apache.poi.poifs.storage.DocumentBlock: byte[] _data>;

        virtualinvoke r0.<org.apache.poi.poifs.storage.DocumentBlock: void doWriteData(java.io.OutputStream,byte[])>(r1, $r2);

        return;
    }

    public volatile void writeBlocks(java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r1;
        org.apache.poi.poifs.storage.DocumentBlock r0;

        r0 := @this: org.apache.poi.poifs.storage.DocumentBlock;

        r1 := @parameter0: java.io.OutputStream;

        specialinvoke r0.<org.apache.poi.poifs.storage.BigBlock: void writeBlocks(java.io.OutputStream)>(r1);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.poi.poifs.storage.DocumentBlock: byte _default_value> = -1;

        return;
    }
}
