class org.jdesktop.swingx.AbstractPatternPanel$1 extends java.lang.Object implements java.beans.PropertyChangeListener
{
    final org.jdesktop.swingx.AbstractPatternPanel this$0;

    void <init>(org.jdesktop.swingx.AbstractPatternPanel)
    {
        org.jdesktop.swingx.AbstractPatternPanel$1 r0;
        org.jdesktop.swingx.AbstractPatternPanel r1;

        r0 := @this: org.jdesktop.swingx.AbstractPatternPanel$1;

        r1 := @parameter0: org.jdesktop.swingx.AbstractPatternPanel;

        r0.<org.jdesktop.swingx.AbstractPatternPanel$1: org.jdesktop.swingx.AbstractPatternPanel this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void propertyChange(java.beans.PropertyChangeEvent)
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        java.lang.Boolean $r14, $r18, $r22, $r26;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        java.beans.PropertyChangeEvent r0;
        org.jdesktop.swingx.AbstractPatternPanel$1 r9;
        org.jdesktop.swingx.action.AbstractActionExt $r12, $r16, $r20, $r24;
        org.jdesktop.swingx.AbstractPatternPanel $r10, $r11, $r15, $r19, $r23, $r27, $r28;
        java.lang.Object $r13, $r17, $r21, $r25;

        r9 := @this: org.jdesktop.swingx.AbstractPatternPanel$1;

        r0 := @parameter0: java.beans.PropertyChangeEvent;

        $r1 = virtualinvoke r0.<java.beans.PropertyChangeEvent: java.lang.String getPropertyName()>();

        $r2 = "pattern";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $r28 = r9.<org.jdesktop.swingx.AbstractPatternPanel$1: org.jdesktop.swingx.AbstractPatternPanel this$0>;

        virtualinvoke $r28.<org.jdesktop.swingx.AbstractPatternPanel: void refreshPatternFromModel()>();

        goto label7;

     label1:
        $r3 = "rawText";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z1 == 0 goto label2;

        $r27 = r9.<org.jdesktop.swingx.AbstractPatternPanel$1: org.jdesktop.swingx.AbstractPatternPanel this$0>;

        virtualinvoke $r27.<org.jdesktop.swingx.AbstractPatternPanel: void refreshDocumentFromModel()>();

        goto label7;

     label2:
        $r4 = "caseSensitive";

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z2 == 0 goto label3;

        $r23 = r9.<org.jdesktop.swingx.AbstractPatternPanel$1: org.jdesktop.swingx.AbstractPatternPanel this$0>;

        $r24 = virtualinvoke $r23.<org.jdesktop.swingx.AbstractPatternPanel: org.jdesktop.swingx.action.AbstractActionExt getAction(java.lang.String)>("matchCase");

        $r25 = virtualinvoke r0.<java.beans.PropertyChangeEvent: java.lang.Object getNewValue()>();

        $r26 = (java.lang.Boolean) $r25;

        $z10 = virtualinvoke $r26.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke $r24.<org.jdesktop.swingx.action.AbstractActionExt: void setSelected(boolean)>($z10);

        goto label7;

     label3:
        $r5 = "wrapping";

        $z3 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z3 == 0 goto label4;

        $r19 = r9.<org.jdesktop.swingx.AbstractPatternPanel$1: org.jdesktop.swingx.AbstractPatternPanel this$0>;

        $r20 = virtualinvoke $r19.<org.jdesktop.swingx.AbstractPatternPanel: org.jdesktop.swingx.action.AbstractActionExt getAction(java.lang.String)>("wrapSearch");

        $r21 = virtualinvoke r0.<java.beans.PropertyChangeEvent: java.lang.Object getNewValue()>();

        $r22 = (java.lang.Boolean) $r21;

        $z9 = virtualinvoke $r22.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke $r20.<org.jdesktop.swingx.action.AbstractActionExt: void setSelected(boolean)>($z9);

        goto label7;

     label4:
        $r6 = "backwards";

        $z4 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z4 == 0 goto label5;

        $r15 = r9.<org.jdesktop.swingx.AbstractPatternPanel$1: org.jdesktop.swingx.AbstractPatternPanel this$0>;

        $r16 = virtualinvoke $r15.<org.jdesktop.swingx.AbstractPatternPanel: org.jdesktop.swingx.action.AbstractActionExt getAction(java.lang.String)>("backwardsSearch");

        $r17 = virtualinvoke r0.<java.beans.PropertyChangeEvent: java.lang.Object getNewValue()>();

        $r18 = (java.lang.Boolean) $r17;

        $z8 = virtualinvoke $r18.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke $r16.<org.jdesktop.swingx.action.AbstractActionExt: void setSelected(boolean)>($z8);

        goto label7;

     label5:
        $r7 = "incremental";

        $z5 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z5 == 0 goto label6;

        $r11 = r9.<org.jdesktop.swingx.AbstractPatternPanel$1: org.jdesktop.swingx.AbstractPatternPanel this$0>;

        $r12 = virtualinvoke $r11.<org.jdesktop.swingx.AbstractPatternPanel: org.jdesktop.swingx.action.AbstractActionExt getAction(java.lang.String)>("matchIncremental");

        $r13 = virtualinvoke r0.<java.beans.PropertyChangeEvent: java.lang.Object getNewValue()>();

        $r14 = (java.lang.Boolean) $r13;

        $z7 = virtualinvoke $r14.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke $r12.<org.jdesktop.swingx.action.AbstractActionExt: void setSelected(boolean)>($z7);

        goto label7;

     label6:
        $r8 = "empty";

        $z6 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z6 == 0 goto label7;

        $r10 = r9.<org.jdesktop.swingx.AbstractPatternPanel$1: org.jdesktop.swingx.AbstractPatternPanel this$0>;

        virtualinvoke $r10.<org.jdesktop.swingx.AbstractPatternPanel: void refreshEmptyFromModel()>();

     label7:
        return;
    }
}
