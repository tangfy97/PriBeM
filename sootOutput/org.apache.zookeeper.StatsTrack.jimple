public class org.apache.zookeeper.StatsTrack extends java.lang.Object
{
    private int count;
    private long bytes;
    private java.lang.String countStr;
    private java.lang.String byteStr;

    public void <init>()
    {
        org.apache.zookeeper.StatsTrack r0;

        r0 := @this: org.apache.zookeeper.StatsTrack;

        specialinvoke r0.<org.apache.zookeeper.StatsTrack: void <init>(java.lang.String)>(null);

        return;
    }

    public void <init>(java.lang.String)
    {
        java.lang.String[] $r1, $r3, $r6;
        long $l2;
        int $i0, $i1;
        java.lang.String $r2, $r4, $r5, $r7, $r12, r13;
        java.lang.IllegalArgumentException $r8;
        org.apache.zookeeper.StatsTrack r0;
        java.lang.StringBuilder $r9, $r10, $r11;

        r0 := @this: org.apache.zookeeper.StatsTrack;

        r13 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.zookeeper.StatsTrack: java.lang.String countStr> = "count";

        r0.<org.apache.zookeeper.StatsTrack: java.lang.String byteStr> = "bytes";

        if r13 != null goto label1;

        r13 = "count=-1,bytes=-1";

     label1:
        $r1 = virtualinvoke r13.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $i0 = lengthof $r1;

        if $i0 == 2 goto label2;

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid string ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r8;

     label2:
        $r2 = $r1[0];

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String[] split(java.lang.String)>("=");

        $r4 = $r3[1];

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

        r0.<org.apache.zookeeper.StatsTrack: int count> = $i1;

        $r5 = $r1[1];

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String[] split(java.lang.String)>("=");

        $r7 = $r6[1];

        $l2 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r7);

        r0.<org.apache.zookeeper.StatsTrack: long bytes> = $l2;

        return;
    }

    public int getCount()
    {
        int $i0;
        org.apache.zookeeper.StatsTrack r0;

        r0 := @this: org.apache.zookeeper.StatsTrack;

        $i0 = r0.<org.apache.zookeeper.StatsTrack: int count>;

        return $i0;
    }

    public void setCount(int)
    {
        int i0;
        org.apache.zookeeper.StatsTrack r0;

        r0 := @this: org.apache.zookeeper.StatsTrack;

        i0 := @parameter0: int;

        r0.<org.apache.zookeeper.StatsTrack: int count> = i0;

        return;
    }

    public long getBytes()
    {
        org.apache.zookeeper.StatsTrack r0;
        long $l0;

        r0 := @this: org.apache.zookeeper.StatsTrack;

        $l0 = r0.<org.apache.zookeeper.StatsTrack: long bytes>;

        return $l0;
    }

    public void setBytes(long)
    {
        org.apache.zookeeper.StatsTrack r0;
        long l0;

        r0 := @this: org.apache.zookeeper.StatsTrack;

        l0 := @parameter0: long;

        r0.<org.apache.zookeeper.StatsTrack: long bytes> = l0;

        return;
    }

    public java.lang.String toString()
    {
        long $l1;
        org.apache.zookeeper.StatsTrack r1;
        int $i0;
        java.lang.StringBuilder $r0, $r3, $r4, $r5, $r6, $r8, $r9, $r10;
        java.lang.String $r2, $r7, $r11;

        r1 := @this: org.apache.zookeeper.StatsTrack;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<org.apache.zookeeper.StatsTrack: java.lang.String countStr>;

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $i0 = r1.<org.apache.zookeeper.StatsTrack: int count>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r7 = r1.<org.apache.zookeeper.StatsTrack: java.lang.String byteStr>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $l1 = r1.<org.apache.zookeeper.StatsTrack: long bytes>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }
}
