public class org.apache.velocity.anakia.OutputWrapper extends org.jdom.output.XMLOutputter
{

    public void <init>()
    {
        org.apache.velocity.anakia.OutputWrapper r0;

        r0 := @this: org.apache.velocity.anakia.OutputWrapper;

        specialinvoke r0.<org.jdom.output.XMLOutputter: void <init>()>();

        return;
    }

    public void <init>(org.jdom.output.Format)
    {
        org.apache.velocity.anakia.OutputWrapper r0;
        org.jdom.output.Format r1;

        r0 := @this: org.apache.velocity.anakia.OutputWrapper;

        r1 := @parameter0: org.jdom.output.Format;

        specialinvoke r0.<org.jdom.output.XMLOutputter: void <init>(org.jdom.output.Format)>(r1);

        return;
    }

    public java.lang.String outputString(org.jdom.Element, boolean)
    {
        org.apache.velocity.anakia.OutputWrapper r1;
        java.io.StringWriter $r0;
        java.io.IOException $r4;
        java.lang.String $r3;
        org.jdom.Element r2;
        boolean z0;

        r1 := @this: org.apache.velocity.anakia.OutputWrapper;

        r2 := @parameter0: org.jdom.Element;

        z0 := @parameter1: boolean;

        $r0 = new java.io.StringWriter;

        specialinvoke $r0.<java.io.StringWriter: void <init>()>();

     label1:
        virtualinvoke r1.<org.apache.velocity.anakia.OutputWrapper: void outputElementContent(org.jdom.Element,java.io.Writer)>(r2, $r0);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        $r3 = virtualinvoke $r0.<java.io.StringWriter: java.lang.String toString()>();

        return $r3;

        catch java.io.IOException from label1 to label2 with label3;
    }
}
