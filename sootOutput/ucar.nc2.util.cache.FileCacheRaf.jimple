public class ucar.nc2.util.cache.FileCacheRaf extends java.lang.Object
{
    private ucar.nc2.util.cache.FileCache cache;
    private ucar.nc2.util.cache.FileFactory factory;

    public void <init>(int, int, int)
    {
        ucar.nc2.util.cache.FileCacheRaf r0;
        ucar.nc2.util.cache.FileCacheRaf$RafFactory $r4;
        ucar.nc2.util.cache.FileCache $r3;
        int i0, i1, i2, $i4;

        r0 := @this: ucar.nc2.util.cache.FileCacheRaf;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new ucar.nc2.util.cache.FileCache;

        $i4 = (int) -1;

        specialinvoke $r3.<ucar.nc2.util.cache.FileCache: void <init>(java.lang.String,int,int,int,int)>("FileCacheRaf", i0, i1, $i4, i2);

        r0.<ucar.nc2.util.cache.FileCacheRaf: ucar.nc2.util.cache.FileCache cache> = $r3;

        $r4 = new ucar.nc2.util.cache.FileCacheRaf$RafFactory;

        specialinvoke $r4.<ucar.nc2.util.cache.FileCacheRaf$RafFactory: void <init>(ucar.nc2.util.cache.FileCacheRaf,ucar.nc2.util.cache.FileCacheRaf$1)>(r0, null);

        r0.<ucar.nc2.util.cache.FileCacheRaf: ucar.nc2.util.cache.FileFactory factory> = $r4;

        return;
    }

    public void clearCache(boolean)
    {
        ucar.nc2.util.cache.FileCacheRaf r0;
        ucar.nc2.util.cache.FileCache $r1;
        boolean z0;

        r0 := @this: ucar.nc2.util.cache.FileCacheRaf;

        z0 := @parameter0: boolean;

        $r1 = r0.<ucar.nc2.util.cache.FileCacheRaf: ucar.nc2.util.cache.FileCache cache>;

        virtualinvoke $r1.<ucar.nc2.util.cache.FileCache: void clearCache(boolean)>(z0);

        return;
    }

    public java.util.Collection getCache()
    {
        ucar.nc2.util.cache.FileCacheRaf r0;
        ucar.nc2.util.cache.FileCache $r1;
        java.util.Map $r2;
        java.util.Collection $r3;

        r0 := @this: ucar.nc2.util.cache.FileCacheRaf;

        $r1 = r0.<ucar.nc2.util.cache.FileCacheRaf: ucar.nc2.util.cache.FileCache cache>;

        $r2 = virtualinvoke $r1.<ucar.nc2.util.cache.FileCache: java.util.Map getCache()>();

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>();

        return $r3;
    }

    public static void shutdown()
    {
        staticinvoke <ucar.nc2.util.cache.FileCache: void shutdown()>();

        return;
    }

    public ucar.nc2.util.cache.FileCacheRaf$Raf acquire(java.lang.String) throws java.io.IOException
    {
        ucar.nc2.util.cache.FileCacheRaf r0;
        ucar.nc2.util.cache.FileCacheable $r4;
        ucar.nc2.util.cache.FileCache $r3;
        java.lang.String r1;
        ucar.nc2.util.cache.FileFactory $r2;
        ucar.nc2.util.cache.FileCacheRaf$Raf $r5;

        r0 := @this: ucar.nc2.util.cache.FileCacheRaf;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<ucar.nc2.util.cache.FileCacheRaf: ucar.nc2.util.cache.FileCache cache>;

        $r2 = r0.<ucar.nc2.util.cache.FileCacheRaf: ucar.nc2.util.cache.FileFactory factory>;

        $r4 = virtualinvoke $r3.<ucar.nc2.util.cache.FileCache: ucar.nc2.util.cache.FileCacheable acquire(ucar.nc2.util.cache.FileFactory,java.lang.String,ucar.nc2.util.CancelTask)>($r2, r1, null);

        $r5 = (ucar.nc2.util.cache.FileCacheRaf$Raf) $r4;

        return $r5;
    }

    public void release(ucar.nc2.util.cache.FileCacheRaf$Raf) throws java.io.IOException
    {
        ucar.nc2.util.cache.FileCacheRaf r0;
        ucar.nc2.util.cache.FileCacheRaf$Raf r1;
        ucar.nc2.util.cache.FileCache $r2;

        r0 := @this: ucar.nc2.util.cache.FileCacheRaf;

        r1 := @parameter0: ucar.nc2.util.cache.FileCacheRaf$Raf;

        $r2 = r0.<ucar.nc2.util.cache.FileCacheRaf: ucar.nc2.util.cache.FileCache cache>;

        virtualinvoke $r2.<ucar.nc2.util.cache.FileCache: void release(ucar.nc2.util.cache.FileCacheable)>(r1);

        return;
    }
}
