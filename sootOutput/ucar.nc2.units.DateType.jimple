public class ucar.nc2.units.DateType extends java.lang.Object
{
    private ucar.nc2.units.DateFormatter formatter;
    private java.lang.String text;
    private java.lang.String format;
    private java.lang.String type;
    private boolean isPresent;
    private boolean isBlank;
    private java.util.Date date;
    private java.util.Calendar cal;

    public static java.lang.String hiddenProperties()
    {
        return "text blank present";
    }

    public void <init>(boolean, java.util.Date)
    {
        java.util.Date r1;
        ucar.nc2.units.DateType r0;
        boolean z0;

        r0 := @this: ucar.nc2.units.DateType;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.util.Date;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.units.DateType: ucar.nc2.units.DateFormatter formatter> = null;

        r0.<ucar.nc2.units.DateType: java.util.Calendar cal> = null;

        r0.<ucar.nc2.units.DateType: boolean isPresent> = z0;

        r0.<ucar.nc2.units.DateType: java.util.Date date> = r1;

        return;
    }

    public void <init>()
    {
        ucar.nc2.units.DateType r0;

        r0 := @this: ucar.nc2.units.DateType;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.units.DateType: ucar.nc2.units.DateFormatter formatter> = null;

        r0.<ucar.nc2.units.DateType: java.util.Calendar cal> = null;

        r0.<ucar.nc2.units.DateType: boolean isBlank> = 1;

        return;
    }

    public void <init>(ucar.nc2.units.DateType)
    {
        java.util.Date $r5;
        java.lang.String $r2, $r3, $r4;
        ucar.nc2.units.DateType r0, r1;
        boolean $z0, $z1;

        r0 := @this: ucar.nc2.units.DateType;

        r1 := @parameter0: ucar.nc2.units.DateType;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.units.DateType: ucar.nc2.units.DateFormatter formatter> = null;

        r0.<ucar.nc2.units.DateType: java.util.Calendar cal> = null;

        $r2 = virtualinvoke r1.<ucar.nc2.units.DateType: java.lang.String getText()>();

        r0.<ucar.nc2.units.DateType: java.lang.String text> = $r2;

        $r3 = virtualinvoke r1.<ucar.nc2.units.DateType: java.lang.String getFormat()>();

        r0.<ucar.nc2.units.DateType: java.lang.String format> = $r3;

        $r4 = virtualinvoke r1.<ucar.nc2.units.DateType: java.lang.String getType()>();

        r0.<ucar.nc2.units.DateType: java.lang.String type> = $r4;

        $z0 = virtualinvoke r1.<ucar.nc2.units.DateType: boolean isPresent()>();

        r0.<ucar.nc2.units.DateType: boolean isPresent> = $z0;

        $z1 = virtualinvoke r1.<ucar.nc2.units.DateType: boolean isBlank()>();

        r0.<ucar.nc2.units.DateType: boolean isBlank> = $z1;

        $r5 = virtualinvoke r1.<ucar.nc2.units.DateType: java.util.Date getDate()>();

        r0.<ucar.nc2.units.DateType: java.util.Date date> = $r5;

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String) throws java.text.ParseException
    {
        java.util.Date $r5, $r6, $r9, $r10, $r13;
        java.text.SimpleDateFormat $r12;
        int $i0, $i1;
        java.lang.String r1, r2, r14, $r15, r16;
        java.text.ParseException $r7, $r11;
        boolean $z0, $z1;
        ucar.nc2.units.DateType r0;
        ucar.nc2.units.DateFormatter $r3, $r4, $r8;

        r0 := @this: ucar.nc2.units.DateType;

        r14 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.units.DateType: ucar.nc2.units.DateFormatter formatter> = null;

        r0.<ucar.nc2.units.DateType: java.util.Calendar cal> = null;

        if r14 != null goto label1;

        $r15 = "";

        goto label2;

     label1:
        $r15 = virtualinvoke r14.<java.lang.String: java.lang.String trim()>();

     label2:
        r16 = $r15;

        r0.<ucar.nc2.units.DateType: java.lang.String text> = $r15;

        r0.<ucar.nc2.units.DateType: java.lang.String format> = r1;

        r0.<ucar.nc2.units.DateType: java.lang.String type> = r2;

        $i0 = virtualinvoke $r15.<java.lang.String: int length()>();

        if $i0 != 0 goto label3;

        r0.<ucar.nc2.units.DateType: boolean isBlank> = 1;

        return;

     label3:
        $z0 = virtualinvoke $r15.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("present");

        r0.<ucar.nc2.units.DateType: boolean isPresent> = $z0;

        $z1 = r0.<ucar.nc2.units.DateType: boolean isPresent>;

        if $z1 == 0 goto label4;

        return;

     label4:
        if r1 == null goto label5;

        $r12 = new java.text.SimpleDateFormat;

        specialinvoke $r12.<java.text.SimpleDateFormat: void <init>(java.lang.String)>(r1);

        $r13 = virtualinvoke $r12.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String)>($r15);

        r0.<ucar.nc2.units.DateType: java.util.Date date> = $r13;

        return;

     label5:
        $i1 = virtualinvoke $r15.<java.lang.String: int indexOf(java.lang.String)>("since");

        if $i1 <= 0 goto label7;

        $r9 = staticinvoke <ucar.nc2.units.DateUnit: java.util.Date getStandardDate(java.lang.String)>($r15);

        r0.<ucar.nc2.units.DateType: java.util.Date date> = $r9;

        $r10 = r0.<ucar.nc2.units.DateType: java.util.Date date>;

        if $r10 != null goto label6;

        $r11 = new java.text.ParseException;

        specialinvoke $r11.<java.text.ParseException: void <init>(java.lang.String,int)>("invalid udunit date unit", 0);

        throw $r11;

     label6:
        return;

     label7:
        $r3 = r0.<ucar.nc2.units.DateType: ucar.nc2.units.DateFormatter formatter>;

        if null != $r3 goto label8;

        $r8 = new ucar.nc2.units.DateFormatter;

        specialinvoke $r8.<ucar.nc2.units.DateFormatter: void <init>()>();

        r0.<ucar.nc2.units.DateType: ucar.nc2.units.DateFormatter formatter> = $r8;

     label8:
        $r4 = r0.<ucar.nc2.units.DateType: ucar.nc2.units.DateFormatter formatter>;

        $r5 = virtualinvoke $r4.<ucar.nc2.units.DateFormatter: java.util.Date getISODate(java.lang.String)>(r16);

        r0.<ucar.nc2.units.DateType: java.util.Date date> = $r5;

        $r6 = r0.<ucar.nc2.units.DateType: java.util.Date date>;

        if $r6 != null goto label9;

        $r7 = new java.text.ParseException;

        specialinvoke $r7.<java.text.ParseException: void <init>(java.lang.String,int)>("invalid ISO date unit", 0);

        throw $r7;

     label9:
        return;
    }

    public java.util.Date getDate()
    {
        java.util.Date $r1;
        ucar.nc2.units.DateType r0;
        boolean $z0;

        r0 := @this: ucar.nc2.units.DateType;

        $z0 = virtualinvoke r0.<ucar.nc2.units.DateType: boolean isPresent()>();

        if $z0 == 0 goto label1;

        $r1 = new java.util.Date;

        specialinvoke $r1.<java.util.Date: void <init>()>();

        goto label2;

     label1:
        $r1 = r0.<ucar.nc2.units.DateType: java.util.Date date>;

     label2:
        return $r1;
    }

    public void setDate(java.util.Date)
    {
        java.util.Date r1;
        ucar.nc2.units.DateType r0;

        r0 := @this: ucar.nc2.units.DateType;

        r1 := @parameter0: java.util.Date;

        r0.<ucar.nc2.units.DateType: java.util.Date date> = r1;

        r0.<ucar.nc2.units.DateType: java.lang.String text> = null;

        r0.<ucar.nc2.units.DateType: boolean isPresent> = 0;

        return;
    }

    public boolean isPresent()
    {
        ucar.nc2.units.DateType r0;
        boolean $z0;

        r0 := @this: ucar.nc2.units.DateType;

        $z0 = r0.<ucar.nc2.units.DateType: boolean isPresent>;

        return $z0;
    }

    public boolean isBlank()
    {
        ucar.nc2.units.DateType r0;
        boolean $z0;

        r0 := @this: ucar.nc2.units.DateType;

        $z0 = r0.<ucar.nc2.units.DateType: boolean isBlank>;

        return $z0;
    }

    public java.lang.String getText()
    {
        java.lang.String $r1, $r2, $r3;
        ucar.nc2.units.DateType r0;
        boolean $z0;

        r0 := @this: ucar.nc2.units.DateType;

        $z0 = r0.<ucar.nc2.units.DateType: boolean isPresent>;

        if $z0 == 0 goto label1;

        r0.<ucar.nc2.units.DateType: java.lang.String text> = "present";

     label1:
        $r1 = r0.<ucar.nc2.units.DateType: java.lang.String text>;

        if $r1 != null goto label2;

        $r3 = virtualinvoke r0.<ucar.nc2.units.DateType: java.lang.String toDateTimeString()>();

        r0.<ucar.nc2.units.DateType: java.lang.String text> = $r3;

     label2:
        $r2 = r0.<ucar.nc2.units.DateType: java.lang.String text>;

        return $r2;
    }

    public java.lang.String getFormat()
    {
        java.lang.String $r1;
        ucar.nc2.units.DateType r0;

        r0 := @this: ucar.nc2.units.DateType;

        $r1 = r0.<ucar.nc2.units.DateType: java.lang.String format>;

        return $r1;
    }

    public java.lang.String getType()
    {
        java.lang.String $r1;
        ucar.nc2.units.DateType r0;

        r0 := @this: ucar.nc2.units.DateType;

        $r1 = r0.<ucar.nc2.units.DateType: java.lang.String type>;

        return $r1;
    }

    public void setType(java.lang.String)
    {
        java.lang.String r1;
        ucar.nc2.units.DateType r0;

        r0 := @this: ucar.nc2.units.DateType;

        r1 := @parameter0: java.lang.String;

        r0.<ucar.nc2.units.DateType: java.lang.String type> = r1;

        return;
    }

    public boolean before(java.util.Date)
    {
        java.util.Date r1, $r2;
        ucar.nc2.units.DateType r0;
        boolean $z0, $z1;

        r0 := @this: ucar.nc2.units.DateType;

        r1 := @parameter0: java.util.Date;

        $z0 = virtualinvoke r0.<ucar.nc2.units.DateType: boolean isPresent()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r2 = r0.<ucar.nc2.units.DateType: java.util.Date date>;

        $z1 = virtualinvoke $r2.<java.util.Date: boolean before(java.util.Date)>(r1);

        return $z1;
    }

    public boolean before(ucar.nc2.units.DateType)
    {
        java.util.Date $r2, $r3;
        ucar.nc2.units.DateType r0, r1;
        boolean $z0, $z1, $z2;

        r1 := @this: ucar.nc2.units.DateType;

        r0 := @parameter0: ucar.nc2.units.DateType;

        $z0 = virtualinvoke r0.<ucar.nc2.units.DateType: boolean isPresent()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = virtualinvoke r1.<ucar.nc2.units.DateType: boolean isPresent()>();

        if $z1 == 0 goto label2;

        return 0;

     label2:
        $r2 = r1.<ucar.nc2.units.DateType: java.util.Date date>;

        $r3 = virtualinvoke r0.<ucar.nc2.units.DateType: java.util.Date getDate()>();

        $z2 = virtualinvoke $r2.<java.util.Date: boolean before(java.util.Date)>($r3);

        return $z2;
    }

    public boolean after(java.util.Date)
    {
        java.util.Date r1, $r2;
        ucar.nc2.units.DateType r0;
        boolean $z0, $z1;

        r0 := @this: ucar.nc2.units.DateType;

        r1 := @parameter0: java.util.Date;

        $z0 = virtualinvoke r0.<ucar.nc2.units.DateType: boolean isPresent()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r2 = r0.<ucar.nc2.units.DateType: java.util.Date date>;

        $z1 = virtualinvoke $r2.<java.util.Date: boolean after(java.util.Date)>(r1);

        return $z1;
    }

    public java.lang.String toDateString()
    {
        java.util.Date $r3;
        java.lang.String $r4;
        ucar.nc2.units.DateType r0;
        ucar.nc2.units.DateFormatter $r1, $r2, $r5;

        r0 := @this: ucar.nc2.units.DateType;

        $r1 = r0.<ucar.nc2.units.DateType: ucar.nc2.units.DateFormatter formatter>;

        if null != $r1 goto label1;

        $r5 = new ucar.nc2.units.DateFormatter;

        specialinvoke $r5.<ucar.nc2.units.DateFormatter: void <init>()>();

        r0.<ucar.nc2.units.DateType: ucar.nc2.units.DateFormatter formatter> = $r5;

     label1:
        $r2 = r0.<ucar.nc2.units.DateType: ucar.nc2.units.DateFormatter formatter>;

        $r3 = virtualinvoke r0.<ucar.nc2.units.DateType: java.util.Date getDate()>();

        $r4 = virtualinvoke $r2.<ucar.nc2.units.DateFormatter: java.lang.String toDateOnlyString(java.util.Date)>($r3);

        return $r4;
    }

    public java.lang.String toDateTimeString()
    {
        java.util.Date $r3;
        java.lang.String $r4;
        ucar.nc2.units.DateType r0;
        ucar.nc2.units.DateFormatter $r1, $r2, $r5;

        r0 := @this: ucar.nc2.units.DateType;

        $r1 = r0.<ucar.nc2.units.DateType: ucar.nc2.units.DateFormatter formatter>;

        if null != $r1 goto label1;

        $r5 = new ucar.nc2.units.DateFormatter;

        specialinvoke $r5.<ucar.nc2.units.DateFormatter: void <init>()>();

        r0.<ucar.nc2.units.DateType: ucar.nc2.units.DateFormatter formatter> = $r5;

     label1:
        $r2 = r0.<ucar.nc2.units.DateType: ucar.nc2.units.DateFormatter formatter>;

        $r3 = virtualinvoke r0.<ucar.nc2.units.DateType: java.util.Date getDate()>();

        $r4 = virtualinvoke $r2.<ucar.nc2.units.DateFormatter: java.lang.String toDateTimeString(java.util.Date)>($r3);

        return $r4;
    }

    public java.lang.String toDateTimeStringISO()
    {
        java.util.Date $r3;
        java.lang.String $r4;
        ucar.nc2.units.DateType r0;
        ucar.nc2.units.DateFormatter $r1, $r2, $r5;

        r0 := @this: ucar.nc2.units.DateType;

        $r1 = r0.<ucar.nc2.units.DateType: ucar.nc2.units.DateFormatter formatter>;

        if null != $r1 goto label1;

        $r5 = new ucar.nc2.units.DateFormatter;

        specialinvoke $r5.<ucar.nc2.units.DateFormatter: void <init>()>();

        r0.<ucar.nc2.units.DateType: ucar.nc2.units.DateFormatter formatter> = $r5;

     label1:
        $r2 = r0.<ucar.nc2.units.DateType: ucar.nc2.units.DateFormatter formatter>;

        $r3 = virtualinvoke r0.<ucar.nc2.units.DateType: java.util.Date getDate()>();

        $r4 = virtualinvoke $r2.<ucar.nc2.units.DateFormatter: java.lang.String toDateTimeStringISO(java.util.Date)>($r3);

        return $r4;
    }

    public java.lang.String toString()
    {
        java.lang.String $r1;
        ucar.nc2.units.DateType r0;

        r0 := @this: ucar.nc2.units.DateType;

        $r1 = virtualinvoke r0.<ucar.nc2.units.DateType: java.lang.String getText()>();

        return $r1;
    }

    public int hashCode()
    {
        java.util.Date $r1;
        int $i0;
        ucar.nc2.units.DateType r0;
        boolean $z0, $z1;

        r0 := @this: ucar.nc2.units.DateType;

        $z0 = virtualinvoke r0.<ucar.nc2.units.DateType: boolean isBlank()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $z1 = virtualinvoke r0.<ucar.nc2.units.DateType: boolean isPresent()>();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $r1 = virtualinvoke r0.<ucar.nc2.units.DateType: java.util.Date getDate()>();

        $i0 = virtualinvoke $r1.<java.util.Date: int hashCode()>();

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        java.util.Date $r3, $r4;
        java.lang.Object r1;
        ucar.nc2.units.DateType r0, r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r0 := @this: ucar.nc2.units.DateType;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof ucar.nc2.units.DateType;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (ucar.nc2.units.DateType) r1;

        $z1 = virtualinvoke r0.<ucar.nc2.units.DateType: boolean isPresent()>();

        if $z1 == 0 goto label3;

        $z5 = virtualinvoke r2.<ucar.nc2.units.DateType: boolean isPresent()>();

        if $z5 == 0 goto label3;

        return 1;

     label3:
        $z2 = virtualinvoke r0.<ucar.nc2.units.DateType: boolean isBlank()>();

        if $z2 == 0 goto label4;

        $z4 = virtualinvoke r2.<ucar.nc2.units.DateType: boolean isBlank()>();

        if $z4 == 0 goto label4;

        return 1;

     label4:
        $r3 = virtualinvoke r2.<ucar.nc2.units.DateType: java.util.Date getDate()>();

        $r4 = virtualinvoke r0.<ucar.nc2.units.DateType: java.util.Date getDate()>();

        $z3 = virtualinvoke $r3.<java.util.Date: boolean equals(java.lang.Object)>($r4);

        return $z3;
    }

    public ucar.nc2.units.DateType add(ucar.nc2.units.TimeDuration)
    {
        ucar.nc2.units.TimeDuration r1;
        ucar.nc2.units.TimeUnit $r2;
        ucar.nc2.units.DateType r0, $r3;

        r0 := @this: ucar.nc2.units.DateType;

        r1 := @parameter0: ucar.nc2.units.TimeDuration;

        $r2 = virtualinvoke r1.<ucar.nc2.units.TimeDuration: ucar.nc2.units.TimeUnit getTimeUnit()>();

        $r3 = virtualinvoke r0.<ucar.nc2.units.DateType: ucar.nc2.units.DateType add(ucar.nc2.units.TimeUnit)>($r2);

        return $r3;
    }

    public ucar.nc2.units.DateType add(ucar.nc2.units.TimeUnit)
    {
        java.util.Date $r3, $r8, $r10;
        java.util.Calendar $r1, $r2, $r5, $r7, $r11;
        int $i0;
        java.lang.Object $r9;
        ucar.nc2.units.TimeUnit r4;
        ucar.nc2.units.DateType r0, $r6;
        double $d0;

        r0 := @this: ucar.nc2.units.DateType;

        r4 := @parameter0: ucar.nc2.units.TimeUnit;

        $r1 = r0.<ucar.nc2.units.DateType: java.util.Calendar cal>;

        if $r1 != null goto label1;

        $r11 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        r0.<ucar.nc2.units.DateType: java.util.Calendar cal> = $r11;

     label1:
        $r2 = r0.<ucar.nc2.units.DateType: java.util.Calendar cal>;

        $r3 = virtualinvoke r0.<ucar.nc2.units.DateType: java.util.Date getDate()>();

        virtualinvoke $r2.<java.util.Calendar: void setTime(java.util.Date)>($r3);

        $r5 = r0.<ucar.nc2.units.DateType: java.util.Calendar cal>;

        $d0 = virtualinvoke r4.<ucar.nc2.units.TimeUnit: double getValueInSeconds()>();

        $i0 = (int) $d0;

        virtualinvoke $r5.<java.util.Calendar: void add(int,int)>(13, $i0);

        $r6 = new ucar.nc2.units.DateType;

        $r7 = r0.<ucar.nc2.units.DateType: java.util.Calendar cal>;

        $r8 = virtualinvoke $r7.<java.util.Calendar: java.util.Date getTime()>();

        $r9 = virtualinvoke $r8.<java.util.Date: java.lang.Object clone()>();

        $r10 = (java.util.Date) $r9;

        specialinvoke $r6.<ucar.nc2.units.DateType: void <init>(boolean,java.util.Date)>(0, $r10);

        return $r6;
    }

    public ucar.nc2.units.DateType subtract(ucar.nc2.units.TimeDuration)
    {
        ucar.nc2.units.TimeDuration r1;
        ucar.nc2.units.TimeUnit $r2;
        ucar.nc2.units.DateType r0, $r3;

        r0 := @this: ucar.nc2.units.DateType;

        r1 := @parameter0: ucar.nc2.units.TimeDuration;

        $r2 = virtualinvoke r1.<ucar.nc2.units.TimeDuration: ucar.nc2.units.TimeUnit getTimeUnit()>();

        $r3 = virtualinvoke r0.<ucar.nc2.units.DateType: ucar.nc2.units.DateType subtract(ucar.nc2.units.TimeUnit)>($r2);

        return $r3;
    }

    public ucar.nc2.units.DateType subtract(ucar.nc2.units.TimeUnit)
    {
        java.util.Date $r3, $r8, $r10;
        java.util.Calendar $r1, $r2, $r5, $r7, $r11;
        int $i0;
        java.lang.Object $r9;
        ucar.nc2.units.TimeUnit r4;
        ucar.nc2.units.DateType r0, $r6;
        double $d0, $d1;

        r0 := @this: ucar.nc2.units.DateType;

        r4 := @parameter0: ucar.nc2.units.TimeUnit;

        $r1 = r0.<ucar.nc2.units.DateType: java.util.Calendar cal>;

        if $r1 != null goto label1;

        $r11 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        r0.<ucar.nc2.units.DateType: java.util.Calendar cal> = $r11;

     label1:
        $r2 = r0.<ucar.nc2.units.DateType: java.util.Calendar cal>;

        $r3 = virtualinvoke r0.<ucar.nc2.units.DateType: java.util.Date getDate()>();

        virtualinvoke $r2.<java.util.Calendar: void setTime(java.util.Date)>($r3);

        $r5 = r0.<ucar.nc2.units.DateType: java.util.Calendar cal>;

        $d0 = virtualinvoke r4.<ucar.nc2.units.TimeUnit: double getValueInSeconds()>();

        $d1 = neg $d0;

        $i0 = (int) $d1;

        virtualinvoke $r5.<java.util.Calendar: void add(int,int)>(13, $i0);

        $r6 = new ucar.nc2.units.DateType;

        $r7 = r0.<ucar.nc2.units.DateType: java.util.Calendar cal>;

        $r8 = virtualinvoke $r7.<java.util.Calendar: java.util.Date getTime()>();

        $r9 = virtualinvoke $r8.<java.util.Date: java.lang.Object clone()>();

        $r10 = (java.util.Date) $r9;

        specialinvoke $r6.<ucar.nc2.units.DateType: void <init>(boolean,java.util.Date)>(0, $r10);

        return $r6;
    }

    private static void doOne(java.lang.String)
    {
        java.util.Date $r18;
        java.lang.String r3, $r6, $r11, $r14, $r21;
        java.text.ParseException $r22;
        java.io.PrintStream $r1, $r9, $r16;
        java.lang.StringBuilder $r0, $r2, $r4, $r5, $r8, $r10, $r12, $r13, $r15, $r17, $r19, $r20;
        ucar.nc2.units.DateType $r7;

        r3 := @parameter0: java.lang.String;

     label1:
        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nString = (");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r6);

        $r7 = new ucar.nc2.units.DateType;

        specialinvoke $r7.<ucar.nc2.units.DateType: void <init>(java.lang.String,java.lang.String,java.lang.String)>(r3, null, null);

        $r9 = <java.lang.System: java.io.PrintStream out>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DateType = (");

        $r11 = virtualinvoke $r7.<ucar.nc2.units.DateType: java.lang.String toString()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r14);

        $r16 = <java.lang.System: java.io.PrintStream out>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Date = (");

        $r18 = virtualinvoke $r7.<ucar.nc2.units.DateType: java.util.Date getDate()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r21);

     label2:
        goto label4;

     label3:
        $r22 := @caughtexception;

        virtualinvoke $r22.<java.text.ParseException: void printStackTrace()>();

     label4:
        return;

        catch java.text.ParseException from label1 to label2 with label3;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] r0;

        r0 := @parameter0: java.lang.String[];

        staticinvoke <ucar.nc2.units.DateType: void doOne(java.lang.String)>("T00:00:00Z");

        return;
    }
}
