public class com.google.gxp.compiler.reparent.Reparenter extends java.lang.Object implements com.google.gxp.com.google.common.base.Function
{
    private static final java.lang.String DEFAULT_CONTENT_TYPE;
    private final com.google.gxp.compiler.schema.SchemaFactory schemaFactory;
    private final java.lang.String className;
    private com.google.gxp.compiler.schema.Schema rootSchema;
    private static final java.util.regex.Pattern VARIABLE_NAME_PATTERN;
    private static final java.util.regex.Pattern ILLEGAL_NAME_PATTERN;

    public void <init>(com.google.gxp.compiler.schema.SchemaFactory, java.lang.String)
    {
        com.google.gxp.compiler.reparent.Reparenter r0;
        com.google.gxp.compiler.schema.SchemaFactory r1, $r3;
        java.lang.Object $r2, $r5;
        java.lang.String r4, $r6;

        r0 := @this: com.google.gxp.compiler.reparent.Reparenter;

        r1 := @parameter0: com.google.gxp.compiler.schema.SchemaFactory;

        r4 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.gxp.compiler.reparent.Reparenter: com.google.gxp.compiler.schema.Schema rootSchema> = null;

        $r2 = staticinvoke <com.google.gxp.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (com.google.gxp.compiler.schema.SchemaFactory) $r2;

        r0.<com.google.gxp.compiler.reparent.Reparenter: com.google.gxp.compiler.schema.SchemaFactory schemaFactory> = $r3;

        $r5 = staticinvoke <com.google.gxp.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r4);

        $r6 = (java.lang.String) $r5;

        r0.<com.google.gxp.compiler.reparent.Reparenter: java.lang.String className> = $r6;

        return;
    }

    public com.google.gxp.compiler.reparent.ReparentedTree apply(com.google.gxp.compiler.ifexpand.IfExpandedTree)
    {
        com.google.gxp.compiler.base.TemplateName$FullyQualified $r10;
        com.google.gxp.compiler.schema.Schema $r15;
        com.google.gxp.compiler.reparent.Parts $r25;
        com.google.gxp.compiler.reparent.ReparentedTree $r31;
        com.google.gxp.compiler.alerts.AlertSetBuilder $r28;
        com.google.gxp.compiler.parser.ParsedAttribute r23;
        com.google.gxp.compiler.ifexpand.IfExpandedTree r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.List $r3, $r12, $r24, $r26;
        com.google.gxp.compiler.reparent.InvalidRootError $r29;
        com.google.gxp.compiler.schema.SchemaFactory $r14;
        com.google.gxp.compiler.base.NullRoot $r30;
        com.google.gxp.compiler.parser.Namespace $r18, $r19;
        com.google.gxp.compiler.reparent.Reparenter r4;
        java.lang.String $r9, $r17, r22;
        com.google.gxp.compiler.alerts.SourcePosition $r7;
        java.util.Iterator $r13;
        com.google.gxp.compiler.alerts.AlertSet $r2, $r8;
        com.google.gxp.compiler.base.Root $r27;
        com.google.gxp.compiler.parser.ParsedElement r21;
        java.lang.Object $r5, $r11, $r16;

        r4 := @this: com.google.gxp.compiler.reparent.Reparenter;

        r1 := @parameter0: com.google.gxp.compiler.ifexpand.IfExpandedTree;

        $r28 = new com.google.gxp.compiler.alerts.AlertSetBuilder;

        $r2 = virtualinvoke r1.<com.google.gxp.compiler.ifexpand.IfExpandedTree: com.google.gxp.compiler.alerts.AlertSet getAlerts()>();

        specialinvoke $r28.<com.google.gxp.compiler.alerts.AlertSetBuilder: void <init>(com.google.gxp.compiler.alerts.AlertSet)>($r2);

        $r3 = virtualinvoke r1.<com.google.gxp.compiler.ifexpand.IfExpandedTree: java.util.List getChildren()>();

        $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label5;

        $r11 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(0);

        r21 = (com.google.gxp.compiler.parser.ParsedElement) $r11;

        $z1 = virtualinvoke r21.<com.google.gxp.compiler.parser.ParsedElement: boolean canBeRoot()>();

        if $z1 != 0 goto label1;

        $r29 = new com.google.gxp.compiler.reparent.InvalidRootError;

        specialinvoke $r29.<com.google.gxp.compiler.reparent.InvalidRootError: void <init>(com.google.gxp.compiler.base.Node)>(r21);

        virtualinvoke $r28.<com.google.gxp.compiler.alerts.AlertSetBuilder: void add(com.google.gxp.compiler.alerts.Alert)>($r29);

        goto label5;

     label1:
        r22 = "text/html";

        $r12 = virtualinvoke r21.<com.google.gxp.compiler.parser.ParsedElement: java.util.List getAttributes()>();

        $r13 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        $r16 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        r23 = (com.google.gxp.compiler.parser.ParsedAttribute) $r16;

        $r17 = virtualinvoke r23.<com.google.gxp.compiler.parser.ParsedAttribute: java.lang.String getName()>();

        $z3 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>("content-type");

        if $z3 == 0 goto label3;

        $r18 = virtualinvoke r23.<com.google.gxp.compiler.parser.ParsedAttribute: com.google.gxp.compiler.parser.Namespace getNamespace()>();

        $r19 = <com.google.gxp.compiler.parser.NullNamespace: com.google.gxp.compiler.parser.Namespace INSTANCE>;

        if $r18 != $r19 goto label3;

        r22 = virtualinvoke r23.<com.google.gxp.compiler.parser.ParsedAttribute: java.lang.String getValue()>();

     label3:
        goto label2;

     label4:
        $r14 = r4.<com.google.gxp.compiler.reparent.Reparenter: com.google.gxp.compiler.schema.SchemaFactory schemaFactory>;

        $r15 = interfaceinvoke $r14.<com.google.gxp.compiler.schema.SchemaFactory: com.google.gxp.compiler.schema.Schema fromContentTypeName(java.lang.String)>(r22);

        r4.<com.google.gxp.compiler.reparent.Reparenter: com.google.gxp.compiler.schema.Schema rootSchema> = $r15;

     label5:
        $r24 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        $r25 = specialinvoke r4.<com.google.gxp.compiler.reparent.Reparenter: com.google.gxp.compiler.reparent.Parts groupParts(com.google.gxp.compiler.alerts.AlertSink,com.google.gxp.compiler.base.Node,java.lang.Iterable,java.lang.Iterable)>($r28, r1, $r24, $r3);

        $r26 = interfaceinvoke $r25.<com.google.gxp.compiler.reparent.Parts: java.util.List getRoots()>();

        $z4 = interfaceinvoke $r26.<java.util.List: boolean isEmpty()>();

        if $z4 == 0 goto label6;

        $r30 = new com.google.gxp.compiler.base.NullRoot;

        $r27 = $r30;

        $r9 = r4.<com.google.gxp.compiler.reparent.Reparenter: java.lang.String className>;

        $r10 = staticinvoke <com.google.gxp.compiler.base.TemplateName: com.google.gxp.compiler.base.TemplateName$FullyQualified parseFullyQualifiedDottedName(java.lang.String)>($r9);

        specialinvoke $r30.<com.google.gxp.compiler.base.NullRoot: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.base.TemplateName$FullyQualified)>(r1, $r10);

        goto label7;

     label6:
        $r5 = interfaceinvoke $r26.<java.util.List: java.lang.Object get(int)>(0);

        $r27 = (com.google.gxp.compiler.base.Root) $r5;

     label7:
        $r31 = new com.google.gxp.compiler.reparent.ReparentedTree;

        $r7 = virtualinvoke r1.<com.google.gxp.compiler.ifexpand.IfExpandedTree: com.google.gxp.compiler.alerts.SourcePosition getSourcePosition()>();

        $r8 = virtualinvoke $r28.<com.google.gxp.compiler.alerts.AlertSetBuilder: com.google.gxp.compiler.alerts.AlertSet buildAndClear()>();

        specialinvoke $r31.<com.google.gxp.compiler.reparent.ReparentedTree: void <init>(com.google.gxp.compiler.alerts.SourcePosition,com.google.gxp.compiler.alerts.AlertSet,com.google.gxp.compiler.base.Root)>($r7, $r8, $r27);

        return $r31;
    }

    private static com.google.gxp.compiler.reparent.Attribute convertAttribute(com.google.gxp.compiler.alerts.AlertSink, com.google.gxp.compiler.parser.ParsedAttribute)
    {
        com.google.gxp.compiler.reparent.Attribute $r4;
        com.google.gxp.compiler.alerts.AlertSink r5;
        com.google.gxp.compiler.reparent.Reparenter$1 $r2;
        com.google.gxp.compiler.parser.ParsedAttribute r0;
        java.lang.Object $r3;
        com.google.gxp.compiler.parser.Namespace $r1;

        r5 := @parameter0: com.google.gxp.compiler.alerts.AlertSink;

        r0 := @parameter1: com.google.gxp.compiler.parser.ParsedAttribute;

        $r1 = virtualinvoke r0.<com.google.gxp.compiler.parser.ParsedAttribute: com.google.gxp.compiler.parser.Namespace getNamespace()>();

        $r2 = new com.google.gxp.compiler.reparent.Reparenter$1;

        specialinvoke $r2.<com.google.gxp.compiler.reparent.Reparenter$1: void <init>(com.google.gxp.compiler.parser.ParsedAttribute)>(r0);

        $r3 = interfaceinvoke $r1.<com.google.gxp.compiler.parser.Namespace: java.lang.Object acceptVisitor(com.google.gxp.compiler.parser.NamespaceVisitor)>($r2);

        $r4 = (com.google.gxp.compiler.reparent.Attribute) $r3;

        return $r4;
    }

    private com.google.gxp.compiler.reparent.Parts groupParts(com.google.gxp.compiler.alerts.AlertSink, com.google.gxp.compiler.base.Node, java.lang.Iterable, java.lang.Iterable)
    {
        java.lang.Iterable r5, r7;
        com.google.gxp.compiler.reparent.Reparenter r4;
        com.google.gxp.compiler.alerts.AlertSink r1;
        com.google.gxp.compiler.base.Node r2;
        com.google.gxp.compiler.parser.ParsedAttribute r12;
        boolean $z0, $z1;
        java.util.Iterator $r6, $r8;
        com.google.gxp.compiler.reparent.Reparenter$2 $r3;
        com.google.gxp.compiler.reparent.Attribute $r11;
        com.google.gxp.compiler.parser.ParsedElement r13;
        java.lang.Object $r9, $r10;
        com.google.gxp.compiler.reparent.EditableParts $r0;

        r4 := @this: com.google.gxp.compiler.reparent.Reparenter;

        r1 := @parameter0: com.google.gxp.compiler.alerts.AlertSink;

        r2 := @parameter1: com.google.gxp.compiler.base.Node;

        r5 := @parameter2: java.lang.Iterable;

        r7 := @parameter3: java.lang.Iterable;

        $r0 = new com.google.gxp.compiler.reparent.EditableParts;

        specialinvoke $r0.<com.google.gxp.compiler.reparent.EditableParts: void <init>(com.google.gxp.compiler.alerts.AlertSink,com.google.gxp.compiler.base.Node)>(r1, r2);

        $r3 = new com.google.gxp.compiler.reparent.Reparenter$2;

        specialinvoke $r3.<com.google.gxp.compiler.reparent.Reparenter$2: void <init>(com.google.gxp.compiler.reparent.Reparenter,com.google.gxp.compiler.alerts.AlertSink,com.google.gxp.compiler.reparent.EditableParts)>(r4, r1, $r0);

        $r6 = interfaceinvoke r5.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r10 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r12 = (com.google.gxp.compiler.parser.ParsedAttribute) $r10;

        $r11 = staticinvoke <com.google.gxp.compiler.reparent.Reparenter: com.google.gxp.compiler.reparent.Attribute convertAttribute(com.google.gxp.compiler.alerts.AlertSink,com.google.gxp.compiler.parser.ParsedAttribute)>(r1, r12);

        virtualinvoke $r0.<com.google.gxp.compiler.reparent.EditableParts: void accumulate(com.google.gxp.compiler.reparent.Attribute)>($r11);

        goto label1;

     label2:
        $r8 = interfaceinvoke r7.<java.lang.Iterable: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r13 = (com.google.gxp.compiler.parser.ParsedElement) $r9;

        virtualinvoke r13.<com.google.gxp.compiler.parser.ParsedElement: java.lang.Object acceptVisitor(com.google.gxp.compiler.parser.ParsedElementVisitor)>($r3);

        goto label3;

     label4:
        return $r0;
    }

    public volatile java.lang.Object apply(java.lang.Object)
    {
        com.google.gxp.compiler.reparent.Reparenter r0;
        com.google.gxp.compiler.reparent.ReparentedTree $r3;
        java.lang.Object r1;
        com.google.gxp.compiler.ifexpand.IfExpandedTree $r2;

        r0 := @this: com.google.gxp.compiler.reparent.Reparenter;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.google.gxp.compiler.ifexpand.IfExpandedTree) r1;

        $r3 = virtualinvoke r0.<com.google.gxp.compiler.reparent.Reparenter: com.google.gxp.compiler.reparent.ReparentedTree apply(com.google.gxp.compiler.ifexpand.IfExpandedTree)>($r2);

        return $r3;
    }

    static com.google.gxp.compiler.reparent.Parts access$000(com.google.gxp.compiler.reparent.Reparenter, com.google.gxp.compiler.alerts.AlertSink, com.google.gxp.compiler.base.Node, java.lang.Iterable, java.lang.Iterable)
    {
        com.google.gxp.compiler.reparent.Reparenter r0;
        com.google.gxp.compiler.alerts.AlertSink r1;
        com.google.gxp.compiler.base.Node r2;
        com.google.gxp.compiler.reparent.Parts $r5;
        java.lang.Iterable r3, r4;

        r0 := @parameter0: com.google.gxp.compiler.reparent.Reparenter;

        r1 := @parameter1: com.google.gxp.compiler.alerts.AlertSink;

        r2 := @parameter2: com.google.gxp.compiler.base.Node;

        r3 := @parameter3: java.lang.Iterable;

        r4 := @parameter4: java.lang.Iterable;

        $r5 = specialinvoke r0.<com.google.gxp.compiler.reparent.Reparenter: com.google.gxp.compiler.reparent.Parts groupParts(com.google.gxp.compiler.alerts.AlertSink,com.google.gxp.compiler.base.Node,java.lang.Iterable,java.lang.Iterable)>(r1, r2, r3, r4);

        return $r5;
    }

    static java.lang.String access$100(com.google.gxp.compiler.reparent.Reparenter)
    {
        com.google.gxp.compiler.reparent.Reparenter r0;
        java.lang.String $r1;

        r0 := @parameter0: com.google.gxp.compiler.reparent.Reparenter;

        $r1 = r0.<com.google.gxp.compiler.reparent.Reparenter: java.lang.String className>;

        return $r1;
    }

    static com.google.gxp.compiler.schema.Schema access$200(com.google.gxp.compiler.reparent.Reparenter)
    {
        com.google.gxp.compiler.reparent.Reparenter r0;
        com.google.gxp.compiler.schema.Schema $r1;

        r0 := @parameter0: com.google.gxp.compiler.reparent.Reparenter;

        $r1 = r0.<com.google.gxp.compiler.reparent.Reparenter: com.google.gxp.compiler.schema.Schema rootSchema>;

        return $r1;
    }

    static com.google.gxp.compiler.schema.SchemaFactory access$300(com.google.gxp.compiler.reparent.Reparenter)
    {
        com.google.gxp.compiler.schema.SchemaFactory $r1;
        com.google.gxp.compiler.reparent.Reparenter r0;

        r0 := @parameter0: com.google.gxp.compiler.reparent.Reparenter;

        $r1 = r0.<com.google.gxp.compiler.reparent.Reparenter: com.google.gxp.compiler.schema.SchemaFactory schemaFactory>;

        return $r1;
    }

    static java.util.regex.Pattern access$400()
    {
        java.util.regex.Pattern $r0;

        $r0 = <com.google.gxp.compiler.reparent.Reparenter: java.util.regex.Pattern VARIABLE_NAME_PATTERN>;

        return $r0;
    }

    static java.util.regex.Pattern access$500()
    {
        java.util.regex.Pattern $r0;

        $r0 = <com.google.gxp.compiler.reparent.Reparenter: java.util.regex.Pattern ILLEGAL_NAME_PATTERN>;

        return $r0;
    }

    static void <clinit>()
    {
        java.util.regex.Pattern $r0, $r1;

        <com.google.gxp.compiler.reparent.Reparenter: java.lang.String DEFAULT_CONTENT_TYPE> = "text/html";

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("[a-zA-Z](_?[a-zA-Z0-9])*");

        <com.google.gxp.compiler.reparent.Reparenter: java.util.regex.Pattern VARIABLE_NAME_PATTERN> = $r0;

        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("this|gxp_(.)*");

        <com.google.gxp.compiler.reparent.Reparenter: java.util.regex.Pattern ILLEGAL_NAME_PATTERN> = $r1;

        return;
    }
}
