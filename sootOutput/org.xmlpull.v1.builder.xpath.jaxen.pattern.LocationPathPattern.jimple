public class org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern extends org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern
{
    private org.xmlpull.v1.builder.xpath.jaxen.pattern.NodeTest nodeTest;
    private org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern parentPattern;
    private org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern ancestorPattern;
    private java.util.List filters;
    private boolean absolute;

    public void <init>()
    {
        org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern r0;
        org.xmlpull.v1.builder.xpath.jaxen.pattern.AnyNodeTest $r1;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern;

        specialinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern: void <init>()>();

        $r1 = staticinvoke <org.xmlpull.v1.builder.xpath.jaxen.pattern.AnyNodeTest: org.xmlpull.v1.builder.xpath.jaxen.pattern.AnyNodeTest getInstance()>();

        r0.<org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern: org.xmlpull.v1.builder.xpath.jaxen.pattern.NodeTest nodeTest> = $r1;

        return;
    }

    public void <init>(org.xmlpull.v1.builder.xpath.jaxen.pattern.NodeTest)
    {
        org.xmlpull.v1.builder.xpath.jaxen.pattern.NodeTest r2;
        org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern r0;
        org.xmlpull.v1.builder.xpath.jaxen.pattern.AnyNodeTest $r1;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern;

        r2 := @parameter0: org.xmlpull.v1.builder.xpath.jaxen.pattern.NodeTest;

        specialinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern: void <init>()>();

        $r1 = staticinvoke <org.xmlpull.v1.builder.xpath.jaxen.pattern.AnyNodeTest: org.xmlpull.v1.builder.xpath.jaxen.pattern.AnyNodeTest getInstance()>();

        r0.<org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern: org.xmlpull.v1.builder.xpath.jaxen.pattern.NodeTest nodeTest> = $r1;

        r0.<org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern: org.xmlpull.v1.builder.xpath.jaxen.pattern.NodeTest nodeTest> = r2;

        return;
    }

    public org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern simplify()
    {
        org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern $r1, $r2, $r4, $r5, $r6, $r8, $r9, $r11, $r12, $r13, $r14;
        boolean $z0;
        org.xmlpull.v1.builder.xpath.jaxen.pattern.NodeTest $r7, $r10;
        java.util.List $r3;
        org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern r0;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern;

        $r1 = r0.<org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern: org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern parentPattern>;

        if $r1 == null goto label1;

        $r13 = r0.<org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern: org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern parentPattern>;

        $r14 = virtualinvoke $r13.<org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern: org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern simplify()>();

        r0.<org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern: org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern parentPattern> = $r14;

     label1:
        $r2 = r0.<org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern: org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern ancestorPattern>;

        if $r2 == null goto label2;

        $r11 = r0.<org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern: org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern ancestorPattern>;

        $r12 = virtualinvoke $r11.<org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern: org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern simplify()>();

        r0.<org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern: org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern ancestorPattern> = $r12;

     label2:
        $r3 = r0.<org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern: java.util.List filters>;

        if $r3 != null goto label4;

        $r4 = r0.<org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern: org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern parentPattern>;

        if $r4 != null goto label3;

        $r9 = r0.<org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern: org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern ancestorPattern>;

        if $r9 != null goto label3;

        $r10 = r0.<org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern: org.xmlpull.v1.builder.xpath.jaxen.pattern.NodeTest nodeTest>;

        return $r10;

     label3:
        $r5 = r0.<org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern: org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern parentPattern>;

        if $r5 == null goto label4;

        $r6 = r0.<org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern: org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern ancestorPattern>;

        if $r6 != null goto label4;

        $r7 = r0.<org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern: org.xmlpull.v1.builder.xpath.jaxen.pattern.NodeTest nodeTest>;

        $z0 = $r7 instanceof org.xmlpull.v1.builder.xpath.jaxen.pattern.AnyNodeTest;

        if $z0 == 0 goto label4;

        $r8 = r0.<org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern: org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern parentPattern>;

        return $r8;

     label4:
        return r0;
    }

    public void addFilter(org.xmlpull.v1.builder.xpath.jaxen.expr.FilterExpr)
    {
        java.util.List $r1, $r3;
        org.xmlpull.v1.builder.xpath.jaxen.expr.FilterExpr r2;
        org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern r0;
        java.util.ArrayList $r4;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern;

        r2 := @parameter0: org.xmlpull.v1.builder.xpath.jaxen.expr.FilterExpr;

        $r1 = r0.<org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern: java.util.List filters>;

        if $r1 != null goto label1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern: java.util.List filters> = $r4;

     label1:
        $r3 = r0.<org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern: java.util.List filters>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r2);

        return;
    }

    public void setParentPattern(org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern)
    {
        org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern r0;
        org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern r1;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern;

        r1 := @parameter0: org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern;

        r0.<org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern: org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern parentPattern> = r1;

        return;
    }

    public void setAncestorPattern(org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern)
    {
        org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern r0;
        org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern r1;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern;

        r1 := @parameter0: org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern;

        r0.<org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern: org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern ancestorPattern> = r1;

        return;
    }

    public void setNodeTest(org.xmlpull.v1.builder.xpath.jaxen.pattern.NodeTest) throws org.xmlpull.v1.builder.xpath.jaxen.JaxenException
    {
        org.xmlpull.v1.builder.xpath.jaxen.JaxenException $r2;
        org.xmlpull.v1.builder.xpath.jaxen.pattern.NodeTest $r1, $r5, r8;
        java.lang.StringBuffer $r3, $r4, $r6, $r7, $r9;
        org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern r0;
        java.lang.String $r10;
        boolean $z0;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern;

        r8 := @parameter0: org.xmlpull.v1.builder.xpath.jaxen.pattern.NodeTest;

        $r1 = r0.<org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern: org.xmlpull.v1.builder.xpath.jaxen.pattern.NodeTest nodeTest>;

        $z0 = $r1 instanceof org.xmlpull.v1.builder.xpath.jaxen.pattern.AnyNodeTest;

        if $z0 == 0 goto label1;

        r0.<org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern: org.xmlpull.v1.builder.xpath.jaxen.pattern.NodeTest nodeTest> = r8;

        goto label2;

     label1:
        $r2 = new org.xmlpull.v1.builder.xpath.jaxen.JaxenException;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Attempt to overwrite nodeTest: ");

        $r5 = r0.<org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern: org.xmlpull.v1.builder.xpath.jaxen.pattern.NodeTest nodeTest>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" with: ");

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r2.<org.xmlpull.v1.builder.xpath.jaxen.JaxenException: void <init>(java.lang.String)>($r10);

        throw $r2;

     label2:
        return;
    }

    public boolean matches(java.lang.Object, org.xmlpull.v1.builder.xpath.jaxen.Context) throws org.xmlpull.v1.builder.xpath.jaxen.JaxenException
    {
        org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern $r5, $r6, $r13, $r15;
        java.util.ArrayList $r8;
        org.xmlpull.v1.builder.xpath.jaxen.expr.FilterExpr r12;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6;
        java.util.Iterator $r10;
        org.xmlpull.v1.builder.xpath.jaxen.Context r0;
        org.xmlpull.v1.builder.xpath.jaxen.pattern.NodeTest $r4;
        java.util.List $r7, $r9;
        java.lang.Object r3, $r11, $r14, r16;
        org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern r2;
        org.xmlpull.v1.builder.xpath.jaxen.Navigator $r1;

        r2 := @this: org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern;

        r3 := @parameter0: java.lang.Object;

        r0 := @parameter1: org.xmlpull.v1.builder.xpath.jaxen.Context;

        $r1 = virtualinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.Context: org.xmlpull.v1.builder.xpath.jaxen.Navigator getNavigator()>();

        $r4 = r2.<org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern: org.xmlpull.v1.builder.xpath.jaxen.pattern.NodeTest nodeTest>;

        $z0 = virtualinvoke $r4.<org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern: boolean matches(java.lang.Object,org.xmlpull.v1.builder.xpath.jaxen.Context)>(r3, r0);

        if $z0 != 0 goto label01;

        return 0;

     label01:
        $r5 = r2.<org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern: org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern parentPattern>;

        if $r5 == null goto label03;

        $r14 = interfaceinvoke $r1.<org.xmlpull.v1.builder.xpath.jaxen.Navigator: java.lang.Object getParentNode(java.lang.Object)>(r3);

        if $r14 != null goto label02;

        return 0;

     label02:
        $r15 = r2.<org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern: org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern parentPattern>;

        $z5 = virtualinvoke $r15.<org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern: boolean matches(java.lang.Object,org.xmlpull.v1.builder.xpath.jaxen.Context)>($r14, r0);

        if $z5 != 0 goto label03;

        return 0;

     label03:
        $r6 = r2.<org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern: org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern ancestorPattern>;

        if $r6 == null goto label08;

        r16 = interfaceinvoke $r1.<org.xmlpull.v1.builder.xpath.jaxen.Navigator: java.lang.Object getParentNode(java.lang.Object)>(r3);

     label04:
        $r13 = r2.<org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern: org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern ancestorPattern>;

        $z3 = virtualinvoke $r13.<org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern: boolean matches(java.lang.Object,org.xmlpull.v1.builder.xpath.jaxen.Context)>(r16, r0);

        if $z3 == 0 goto label05;

        goto label08;

     label05:
        if r16 != null goto label06;

        return 0;

     label06:
        $z4 = interfaceinvoke $r1.<org.xmlpull.v1.builder.xpath.jaxen.Navigator: boolean isDocument(java.lang.Object)>(r16);

        if $z4 == 0 goto label07;

        return 0;

     label07:
        r16 = interfaceinvoke $r1.<org.xmlpull.v1.builder.xpath.jaxen.Navigator: java.lang.Object getParentNode(java.lang.Object)>(r16);

        goto label04;

     label08:
        $r7 = r2.<org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern: java.util.List filters>;

        if $r7 == null goto label12;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>(1);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>(r3);

        virtualinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.Context: void setNodeSet(java.util.List)>($r8);

        z6 = 1;

        $r9 = r2.<org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern: java.util.List filters>;

        $r10 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $z1 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label11;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r12 = (org.xmlpull.v1.builder.xpath.jaxen.expr.FilterExpr) $r11;

        $z2 = interfaceinvoke r12.<org.xmlpull.v1.builder.xpath.jaxen.expr.FilterExpr: boolean asBoolean(org.xmlpull.v1.builder.xpath.jaxen.Context)>(r0);

        if $z2 != 0 goto label10;

        z6 = 0;

        goto label11;

     label10:
        goto label09;

     label11:
        virtualinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.Context: void setNodeSet(java.util.List)>($r8);

        return z6;

     label12:
        return 1;
    }

    public double getPriority()
    {
        org.xmlpull.v1.builder.xpath.jaxen.pattern.NodeTest $r2;
        java.util.List $r1;
        org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern r0;
        double $d0;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern;

        $r1 = r0.<org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern: java.util.List filters>;

        if $r1 == null goto label1;

        return 0.5;

     label1:
        $r2 = r0.<org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern: org.xmlpull.v1.builder.xpath.jaxen.pattern.NodeTest nodeTest>;

        $d0 = virtualinvoke $r2.<org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern: double getPriority()>();

        return $d0;
    }

    public short getMatchType()
    {
        org.xmlpull.v1.builder.xpath.jaxen.pattern.NodeTest $r1;
        short $s0;
        org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern r0;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern;

        $r1 = r0.<org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern: org.xmlpull.v1.builder.xpath.jaxen.pattern.NodeTest nodeTest>;

        $s0 = virtualinvoke $r1.<org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern: short getMatchType()>();

        return $s0;
    }

    public java.lang.String getText()
    {
        org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern $r2, $r9, $r11, $r13;
        org.xmlpull.v1.builder.xpath.jaxen.expr.FilterExpr r7;
        java.lang.StringBuffer $r0;
        int $i0, $i1;
        java.lang.String $r3, $r8, $r10, $r12, $r15;
        boolean $z0, $z1;
        java.util.Iterator $r5;
        org.xmlpull.v1.builder.xpath.jaxen.pattern.NodeTest $r14;
        java.util.List $r4, $r16;
        java.lang.Object $r6;
        org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern r1;

        r1 := @this: org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $z0 = r1.<org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern: boolean absolute>;

        if $z0 == 0 goto label1;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");

     label1:
        $r2 = r1.<org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern: org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern ancestorPattern>;

        if $r2 == null goto label2;

        $r11 = r1.<org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern: org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern ancestorPattern>;

        $r12 = virtualinvoke $r11.<org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern: java.lang.String getText()>();

        $i1 = virtualinvoke $r12.<java.lang.String: int length()>();

        if $i1 <= 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("//");

     label2:
        $r13 = r1.<org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern: org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern parentPattern>;

        if $r13 == null goto label3;

        $r9 = r1.<org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern: org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern parentPattern>;

        $r10 = virtualinvoke $r9.<org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern: java.lang.String getText()>();

        $i0 = virtualinvoke $r10.<java.lang.String: int length()>();

        if $i0 <= 0 goto label3;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");

     label3:
        $r14 = r1.<org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern: org.xmlpull.v1.builder.xpath.jaxen.pattern.NodeTest nodeTest>;

        $r15 = virtualinvoke $r14.<org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern: java.lang.String getText()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        $r16 = r1.<org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern: java.util.List filters>;

        if $r16 == null goto label6;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[");

        $r4 = r1.<org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern: java.util.List filters>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.xmlpull.v1.builder.xpath.jaxen.expr.FilterExpr) $r6;

        $r8 = interfaceinvoke r7.<org.xmlpull.v1.builder.xpath.jaxen.expr.Expr: java.lang.String getText()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        goto label4;

     label5:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

     label6:
        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    public java.lang.String toString()
    {
        org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern $r7, $r10;
        java.lang.StringBuffer $r0, $r3, $r4, $r5, $r6, $r8, $r9, $r11, $r12, $r14, $r15, $r17, $r18;
        java.lang.String $r2, $r19;
        boolean $z0;
        org.xmlpull.v1.builder.xpath.jaxen.pattern.NodeTest $r16;
        java.util.List $r13;
        org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern r1;

        r1 := @this: org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = specialinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[ absolute: ");

        $z0 = r1.<org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern: boolean absolute>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" parent: ");

        $r7 = r1.<org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern: org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern parentPattern>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ancestor: ");

        $r10 = r1.<org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern: org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern ancestorPattern>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" filters: ");

        $r13 = r1.<org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern: java.util.List filters>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" nodeTest: ");

        $r16 = r1.<org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern: org.xmlpull.v1.builder.xpath.jaxen.pattern.NodeTest nodeTest>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ]");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r19;
    }

    public boolean isAbsolute()
    {
        org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern r0;
        boolean $z0;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern;

        $z0 = r0.<org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern: boolean absolute>;

        return $z0;
    }

    public void setAbsolute(boolean)
    {
        org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern r0;
        boolean z0;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern;

        z0 := @parameter0: boolean;

        r0.<org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern: boolean absolute> = z0;

        return;
    }

    public boolean hasAnyNodeTest()
    {
        org.xmlpull.v1.builder.xpath.jaxen.pattern.NodeTest $r1;
        org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern r0;
        boolean $z0;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern;

        $r1 = r0.<org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern: org.xmlpull.v1.builder.xpath.jaxen.pattern.NodeTest nodeTest>;

        $z0 = $r1 instanceof org.xmlpull.v1.builder.xpath.jaxen.pattern.AnyNodeTest;

        return $z0;
    }
}
