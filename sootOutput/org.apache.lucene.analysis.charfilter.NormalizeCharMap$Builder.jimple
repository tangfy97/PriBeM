public class org.apache.lucene.analysis.charfilter.NormalizeCharMap$Builder extends java.lang.Object
{
    private final java.util.Map pendingPairs;

    public void <init>()
    {
        java.util.TreeMap $r1;
        org.apache.lucene.analysis.charfilter.NormalizeCharMap$Builder r0;

        r0 := @this: org.apache.lucene.analysis.charfilter.NormalizeCharMap$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.TreeMap;

        specialinvoke $r1.<java.util.TreeMap: void <init>()>();

        r0.<org.apache.lucene.analysis.charfilter.NormalizeCharMap$Builder: java.util.Map pendingPairs> = $r1;

        return;
    }

    public void add(java.lang.String, java.lang.String)
    {
        java.lang.IllegalArgumentException $r5, $r11;
        org.apache.lucene.analysis.charfilter.NormalizeCharMap$Builder r1;
        java.util.Map $r2, $r4;
        int $i0;
        java.lang.StringBuilder $r6, $r7, $r8, $r9;
        java.lang.String r0, r3, $r10;
        boolean $z0;

        r1 := @this: org.apache.lucene.analysis.charfilter.NormalizeCharMap$Builder;

        r0 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("cannot match the empty string");

        throw $r11;

     label1:
        $r2 = r1.<org.apache.lucene.analysis.charfilter.NormalizeCharMap$Builder: java.util.Map pendingPairs>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r0);

        if $z0 == 0 goto label2;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("match \"");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" was already added");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r5;

     label2:
        $r4 = r1.<org.apache.lucene.analysis.charfilter.NormalizeCharMap$Builder: java.util.Map pendingPairs>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r3);

        return;
    }

    public org.apache.lucene.analysis.charfilter.NormalizeCharMap build()
    {
        org.apache.lucene.util.IntsRef $r3, $r15;
        org.apache.lucene.util.fst.Builder $r1;
        org.apache.lucene.analysis.charfilter.NormalizeCharMap$Builder r4;
        java.util.Map $r5, $r9;
        org.apache.lucene.util.fst.FST$INPUT_TYPE $r2;
        java.lang.String $r18;
        org.apache.lucene.util.fst.CharSequenceOutputs $r0;
        boolean $z0;
        java.util.Map$Entry r12;
        java.util.Iterator $r7;
        java.lang.CharSequence $r14;
        java.util.Set $r6;
        java.io.IOException $r19;
        java.lang.RuntimeException $r20;
        org.apache.lucene.analysis.charfilter.NormalizeCharMap $r10;
        org.apache.lucene.util.CharsRef $r16;
        org.apache.lucene.util.fst.FST $r8;
        java.lang.Object $r11, $r13, $r17;

        r4 := @this: org.apache.lucene.analysis.charfilter.NormalizeCharMap$Builder;

     label1:
        $r0 = staticinvoke <org.apache.lucene.util.fst.CharSequenceOutputs: org.apache.lucene.util.fst.CharSequenceOutputs getSingleton()>();

        $r1 = new org.apache.lucene.util.fst.Builder;

        $r2 = <org.apache.lucene.util.fst.FST$INPUT_TYPE: org.apache.lucene.util.fst.FST$INPUT_TYPE BYTE2>;

        specialinvoke $r1.<org.apache.lucene.util.fst.Builder: void <init>(org.apache.lucene.util.fst.FST$INPUT_TYPE,org.apache.lucene.util.fst.Outputs)>($r2, $r0);

        $r3 = new org.apache.lucene.util.IntsRef;

        specialinvoke $r3.<org.apache.lucene.util.IntsRef: void <init>()>();

        $r5 = r4.<org.apache.lucene.analysis.charfilter.NormalizeCharMap$Builder: java.util.Map pendingPairs>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Set entrySet()>();

        $r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r11 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r12 = (java.util.Map$Entry) $r11;

        $r13 = interfaceinvoke r12.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r14 = (java.lang.CharSequence) $r13;

        $r15 = staticinvoke <org.apache.lucene.util.fst.Util: org.apache.lucene.util.IntsRef toUTF16(java.lang.CharSequence,org.apache.lucene.util.IntsRef)>($r14, $r3);

        $r16 = new org.apache.lucene.util.CharsRef;

        $r17 = interfaceinvoke r12.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r18 = (java.lang.String) $r17;

        specialinvoke $r16.<org.apache.lucene.util.CharsRef: void <init>(java.lang.String)>($r18);

        virtualinvoke $r1.<org.apache.lucene.util.fst.Builder: void add(org.apache.lucene.util.IntsRef,java.lang.Object)>($r15, $r16);

        goto label2;

     label3:
        $r8 = virtualinvoke $r1.<org.apache.lucene.util.fst.Builder: org.apache.lucene.util.fst.FST finish()>();

        $r9 = r4.<org.apache.lucene.analysis.charfilter.NormalizeCharMap$Builder: java.util.Map pendingPairs>;

        interfaceinvoke $r9.<java.util.Map: void clear()>();

     label4:
        goto label6;

     label5:
        $r19 := @caughtexception;

        $r20 = new java.lang.RuntimeException;

        specialinvoke $r20.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r19);

        throw $r20;

     label6:
        $r10 = new org.apache.lucene.analysis.charfilter.NormalizeCharMap;

        specialinvoke $r10.<org.apache.lucene.analysis.charfilter.NormalizeCharMap: void <init>(org.apache.lucene.util.fst.FST,org.apache.lucene.analysis.charfilter.NormalizeCharMap$1)>($r8, null);

        return $r10;

        catch java.io.IOException from label1 to label4 with label5;
    }
}
