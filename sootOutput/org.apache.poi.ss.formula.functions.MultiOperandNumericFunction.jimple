public abstract class org.apache.poi.ss.formula.functions.MultiOperandNumericFunction extends java.lang.Object implements org.apache.poi.ss.formula.functions.Function
{
    private final boolean _isReferenceBoolCounted;
    private final boolean _isBlankCounted;
    static final double[] EMPTY_DOUBLE_ARRAY;
    private static final int DEFAULT_MAX_NUM_OPERANDS;

    protected void <init>(boolean, boolean)
    {
        org.apache.poi.ss.formula.functions.MultiOperandNumericFunction r0;
        boolean z0, z1;

        r0 := @this: org.apache.poi.ss.formula.functions.MultiOperandNumericFunction;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.poi.ss.formula.functions.MultiOperandNumericFunction: boolean _isReferenceBoolCounted> = z0;

        r0.<org.apache.poi.ss.formula.functions.MultiOperandNumericFunction: boolean _isBlankCounted> = z1;

        return;
    }

    public final org.apache.poi.ss.formula.eval.ValueEval evaluate(org.apache.poi.ss.formula.eval.ValueEval[], int, int)
    {
        org.apache.poi.ss.formula.eval.ErrorEval $r3, $r6;
        org.apache.poi.ss.formula.eval.ValueEval[] r1;
        double[] $r2;
        org.apache.poi.ss.formula.functions.MultiOperandNumericFunction r0;
        org.apache.poi.ss.formula.eval.NumberEval $r4;
        int i0, i1;
        org.apache.poi.ss.formula.eval.EvaluationException $r5;
        double $d0;
        boolean $z0, $z1;

        r0 := @this: org.apache.poi.ss.formula.functions.MultiOperandNumericFunction;

        r1 := @parameter0: org.apache.poi.ss.formula.eval.ValueEval[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label1:
        $r2 = virtualinvoke r0.<org.apache.poi.ss.formula.functions.MultiOperandNumericFunction: double[] getNumberArray(org.apache.poi.ss.formula.eval.ValueEval[])>(r1);

        $d0 = virtualinvoke r0.<org.apache.poi.ss.formula.functions.MultiOperandNumericFunction: double evaluate(double[])>($r2);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = virtualinvoke $r5.<org.apache.poi.ss.formula.eval.EvaluationException: org.apache.poi.ss.formula.eval.ErrorEval getErrorEval()>();

        return $r6;

     label4:
        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        if $z0 != 0 goto label5;

        $z1 = staticinvoke <java.lang.Double: boolean isInfinite(double)>($d0);

        if $z1 == 0 goto label6;

     label5:
        $r3 = <org.apache.poi.ss.formula.eval.ErrorEval: org.apache.poi.ss.formula.eval.ErrorEval NUM_ERROR>;

        return $r3;

     label6:
        $r4 = new org.apache.poi.ss.formula.eval.NumberEval;

        specialinvoke $r4.<org.apache.poi.ss.formula.eval.NumberEval: void <init>(double)>($d0);

        return $r4;

        catch org.apache.poi.ss.formula.eval.EvaluationException from label1 to label2 with label3;
    }

    protected abstract double evaluate(double[]) throws org.apache.poi.ss.formula.eval.EvaluationException;

    protected int getMaxNumOperands()
    {
        org.apache.poi.ss.formula.functions.MultiOperandNumericFunction r0;

        r0 := @this: org.apache.poi.ss.formula.functions.MultiOperandNumericFunction;

        return 30;
    }

    protected final double[] getNumberArray(org.apache.poi.ss.formula.eval.ValueEval[]) throws org.apache.poi.ss.formula.eval.EvaluationException
    {
        org.apache.poi.ss.formula.eval.ValueEval[] r0;
        double[] $r3;
        org.apache.poi.ss.formula.functions.MultiOperandNumericFunction$DoubleList $r2;
        org.apache.poi.ss.formula.functions.MultiOperandNumericFunction r1;
        org.apache.poi.ss.formula.eval.ValueEval $r4;
        int $i0, $i1, i2, i3;
        org.apache.poi.ss.formula.eval.EvaluationException $r5;

        r1 := @this: org.apache.poi.ss.formula.functions.MultiOperandNumericFunction;

        r0 := @parameter0: org.apache.poi.ss.formula.eval.ValueEval[];

        $i0 = lengthof r0;

        $i1 = virtualinvoke r1.<org.apache.poi.ss.formula.functions.MultiOperandNumericFunction: int getMaxNumOperands()>();

        if $i0 <= $i1 goto label1;

        $r5 = staticinvoke <org.apache.poi.ss.formula.eval.EvaluationException: org.apache.poi.ss.formula.eval.EvaluationException invalidValue()>();

        throw $r5;

     label1:
        $r2 = new org.apache.poi.ss.formula.functions.MultiOperandNumericFunction$DoubleList;

        specialinvoke $r2.<org.apache.poi.ss.formula.functions.MultiOperandNumericFunction$DoubleList: void <init>()>();

        i3 = 0;

        i2 = lengthof r0;

     label2:
        if i3 >= i2 goto label3;

        $r4 = r0[i3];

        specialinvoke r1.<org.apache.poi.ss.formula.functions.MultiOperandNumericFunction: void collectValues(org.apache.poi.ss.formula.eval.ValueEval,org.apache.poi.ss.formula.functions.MultiOperandNumericFunction$DoubleList)>($r4, $r2);

        i3 = i3 + 1;

        goto label2;

     label3:
        $r3 = virtualinvoke $r2.<org.apache.poi.ss.formula.functions.MultiOperandNumericFunction$DoubleList: double[] toArray()>();

        return $r3;
    }

    public boolean isSubtotalCounted()
    {
        org.apache.poi.ss.formula.functions.MultiOperandNumericFunction r0;

        r0 := @this: org.apache.poi.ss.formula.functions.MultiOperandNumericFunction;

        return 1;
    }

    private void collectValues(org.apache.poi.ss.formula.eval.ValueEval, org.apache.poi.ss.formula.functions.MultiOperandNumericFunction$DoubleList) throws org.apache.poi.ss.formula.eval.EvaluationException
    {
        org.apache.poi.ss.formula.eval.RefEval r8;
        org.apache.poi.ss.formula.functions.MultiOperandNumericFunction r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8, i9, i10, i11;
        org.apache.poi.ss.formula.ThreeDEval r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.apache.poi.ss.formula.functions.MultiOperandNumericFunction$DoubleList r2;
        org.apache.poi.ss.formula.eval.ValueEval r0, $r3, $r4, $r5;
        org.apache.poi.ss.formula.TwoDEval r7;

        r1 := @this: org.apache.poi.ss.formula.functions.MultiOperandNumericFunction;

        r0 := @parameter0: org.apache.poi.ss.formula.eval.ValueEval;

        r2 := @parameter1: org.apache.poi.ss.formula.functions.MultiOperandNumericFunction$DoubleList;

        $z0 = r0 instanceof org.apache.poi.ss.formula.ThreeDEval;

        if $z0 == 0 goto label09;

        r6 = (org.apache.poi.ss.formula.ThreeDEval) r0;

        i6 = interfaceinvoke r6.<org.apache.poi.ss.formula.ThreeDEval: int getFirstSheetIndex()>();

     label01:
        $i3 = interfaceinvoke r6.<org.apache.poi.ss.formula.ThreeDEval: int getLastSheetIndex()>();

        if i6 > $i3 goto label08;

        $i4 = interfaceinvoke r6.<org.apache.poi.ss.formula.ThreeDEval: int getWidth()>();

        $i5 = interfaceinvoke r6.<org.apache.poi.ss.formula.ThreeDEval: int getHeight()>();

        i7 = 0;

     label02:
        if i7 >= $i5 goto label07;

        i8 = 0;

     label03:
        if i8 >= $i4 goto label06;

        $r5 = interfaceinvoke r6.<org.apache.poi.ss.formula.ThreeDEval: org.apache.poi.ss.formula.eval.ValueEval getValue(int,int,int)>(i6, i7, i8);

        $z5 = virtualinvoke r1.<org.apache.poi.ss.formula.functions.MultiOperandNumericFunction: boolean isSubtotalCounted()>();

        if $z5 != 0 goto label04;

        $z6 = interfaceinvoke r6.<org.apache.poi.ss.formula.ThreeDEval: boolean isSubTotal(int,int)>(i7, i8);

        if $z6 == 0 goto label04;

        goto label05;

     label04:
        specialinvoke r1.<org.apache.poi.ss.formula.functions.MultiOperandNumericFunction: void collectValue(org.apache.poi.ss.formula.eval.ValueEval,boolean,org.apache.poi.ss.formula.functions.MultiOperandNumericFunction$DoubleList)>($r5, 1, r2);

     label05:
        i8 = i8 + 1;

        goto label03;

     label06:
        i7 = i7 + 1;

        goto label02;

     label07:
        i6 = i6 + 1;

        goto label01;

     label08:
        return;

     label09:
        $z1 = r0 instanceof org.apache.poi.ss.formula.TwoDEval;

        if $z1 == 0 goto label16;

        r7 = (org.apache.poi.ss.formula.TwoDEval) r0;

        $i1 = interfaceinvoke r7.<org.apache.poi.ss.formula.TwoDEval: int getWidth()>();

        $i2 = interfaceinvoke r7.<org.apache.poi.ss.formula.TwoDEval: int getHeight()>();

        i9 = 0;

     label10:
        if i9 >= $i2 goto label15;

        i10 = 0;

     label11:
        if i10 >= $i1 goto label14;

        $r4 = interfaceinvoke r7.<org.apache.poi.ss.formula.TwoDEval: org.apache.poi.ss.formula.eval.ValueEval getValue(int,int)>(i9, i10);

        $z3 = virtualinvoke r1.<org.apache.poi.ss.formula.functions.MultiOperandNumericFunction: boolean isSubtotalCounted()>();

        if $z3 != 0 goto label12;

        $z4 = interfaceinvoke r7.<org.apache.poi.ss.formula.TwoDEval: boolean isSubTotal(int,int)>(i9, i10);

        if $z4 == 0 goto label12;

        goto label13;

     label12:
        specialinvoke r1.<org.apache.poi.ss.formula.functions.MultiOperandNumericFunction: void collectValue(org.apache.poi.ss.formula.eval.ValueEval,boolean,org.apache.poi.ss.formula.functions.MultiOperandNumericFunction$DoubleList)>($r4, 1, r2);

     label13:
        i10 = i10 + 1;

        goto label11;

     label14:
        i9 = i9 + 1;

        goto label10;

     label15:
        return;

     label16:
        $z2 = r0 instanceof org.apache.poi.ss.formula.eval.RefEval;

        if $z2 == 0 goto label19;

        r8 = (org.apache.poi.ss.formula.eval.RefEval) r0;

        i11 = interfaceinvoke r8.<org.apache.poi.ss.formula.eval.RefEval: int getFirstSheetIndex()>();

     label17:
        $i0 = interfaceinvoke r8.<org.apache.poi.ss.formula.eval.RefEval: int getLastSheetIndex()>();

        if i11 > $i0 goto label18;

        $r3 = interfaceinvoke r8.<org.apache.poi.ss.formula.eval.RefEval: org.apache.poi.ss.formula.eval.ValueEval getInnerValueEval(int)>(i11);

        specialinvoke r1.<org.apache.poi.ss.formula.functions.MultiOperandNumericFunction: void collectValue(org.apache.poi.ss.formula.eval.ValueEval,boolean,org.apache.poi.ss.formula.functions.MultiOperandNumericFunction$DoubleList)>($r3, 1, r2);

        i11 = i11 + 1;

        goto label17;

     label18:
        return;

     label19:
        specialinvoke r1.<org.apache.poi.ss.formula.functions.MultiOperandNumericFunction: void collectValue(org.apache.poi.ss.formula.eval.ValueEval,boolean,org.apache.poi.ss.formula.functions.MultiOperandNumericFunction$DoubleList)>(r0, 0, r2);

        return;
    }

    private void collectValue(org.apache.poi.ss.formula.eval.ValueEval, boolean, org.apache.poi.ss.formula.functions.MultiOperandNumericFunction$DoubleList) throws org.apache.poi.ss.formula.eval.EvaluationException
    {
        org.apache.poi.ss.formula.eval.NumericValueEval r20;
        org.apache.poi.ss.formula.eval.ErrorEval $r12, $r17;
        java.lang.Double $r15;
        org.apache.poi.ss.formula.eval.BlankEval $r1;
        org.apache.poi.ss.formula.functions.MultiOperandNumericFunction r9;
        org.apache.poi.ss.formula.eval.StringValueEval $r13;
        java.lang.String $r8, $r14;
        org.apache.poi.ss.formula.eval.EvaluationException $r11, $r16;
        boolean $z0, $z1, $z2, $z3, $z4, z5, $z6;
        double $d0, $d1, $d2;
        org.apache.poi.ss.formula.eval.BoolEval $r18;
        java.lang.RuntimeException $r2;
        java.lang.IllegalArgumentException $r19;
        org.apache.poi.ss.formula.functions.MultiOperandNumericFunction$DoubleList r10;
        org.apache.poi.ss.formula.eval.ValueEval r0;
        java.lang.StringBuilder $r3, $r4, $r6, $r7;
        java.lang.Class $r5;

        r9 := @this: org.apache.poi.ss.formula.functions.MultiOperandNumericFunction;

        r0 := @parameter0: org.apache.poi.ss.formula.eval.ValueEval;

        z5 := @parameter1: boolean;

        r10 := @parameter2: org.apache.poi.ss.formula.functions.MultiOperandNumericFunction$DoubleList;

        if r0 != null goto label01;

        $r19 = new java.lang.IllegalArgumentException;

        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ve must not be null");

        throw $r19;

     label01:
        $z0 = r0 instanceof org.apache.poi.ss.formula.eval.BoolEval;

        if $z0 == 0 goto label04;

        if z5 == 0 goto label02;

        $z6 = r9.<org.apache.poi.ss.formula.functions.MultiOperandNumericFunction: boolean _isReferenceBoolCounted>;

        if $z6 == 0 goto label03;

     label02:
        $r18 = (org.apache.poi.ss.formula.eval.BoolEval) r0;

        $d2 = virtualinvoke $r18.<org.apache.poi.ss.formula.eval.BoolEval: double getNumberValue()>();

        virtualinvoke r10.<org.apache.poi.ss.formula.functions.MultiOperandNumericFunction$DoubleList: void add(double)>($d2);

     label03:
        return;

     label04:
        $z1 = r0 instanceof org.apache.poi.ss.formula.eval.NumericValueEval;

        if $z1 == 0 goto label05;

        r20 = (org.apache.poi.ss.formula.eval.NumericValueEval) r0;

        $d1 = interfaceinvoke r20.<org.apache.poi.ss.formula.eval.NumericValueEval: double getNumberValue()>();

        virtualinvoke r10.<org.apache.poi.ss.formula.functions.MultiOperandNumericFunction$DoubleList: void add(double)>($d1);

        return;

     label05:
        $z2 = r0 instanceof org.apache.poi.ss.formula.eval.StringValueEval;

        if $z2 == 0 goto label08;

        if z5 == 0 goto label06;

        return;

     label06:
        $r13 = (org.apache.poi.ss.formula.eval.StringValueEval) r0;

        $r14 = interfaceinvoke $r13.<org.apache.poi.ss.formula.eval.StringValueEval: java.lang.String getStringValue()>();

        $r15 = staticinvoke <org.apache.poi.ss.formula.eval.OperandResolver: java.lang.Double parseDouble(java.lang.String)>($r14);

        if $r15 != null goto label07;

        $r16 = new org.apache.poi.ss.formula.eval.EvaluationException;

        $r17 = <org.apache.poi.ss.formula.eval.ErrorEval: org.apache.poi.ss.formula.eval.ErrorEval VALUE_INVALID>;

        specialinvoke $r16.<org.apache.poi.ss.formula.eval.EvaluationException: void <init>(org.apache.poi.ss.formula.eval.ErrorEval)>($r17);

        throw $r16;

     label07:
        $d0 = virtualinvoke $r15.<java.lang.Double: double doubleValue()>();

        virtualinvoke r10.<org.apache.poi.ss.formula.functions.MultiOperandNumericFunction$DoubleList: void add(double)>($d0);

        return;

     label08:
        $z3 = r0 instanceof org.apache.poi.ss.formula.eval.ErrorEval;

        if $z3 == 0 goto label09;

        $r11 = new org.apache.poi.ss.formula.eval.EvaluationException;

        $r12 = (org.apache.poi.ss.formula.eval.ErrorEval) r0;

        specialinvoke $r11.<org.apache.poi.ss.formula.eval.EvaluationException: void <init>(org.apache.poi.ss.formula.eval.ErrorEval)>($r12);

        throw $r11;

     label09:
        $r1 = <org.apache.poi.ss.formula.eval.BlankEval: org.apache.poi.ss.formula.eval.BlankEval instance>;

        if r0 != $r1 goto label11;

        $z4 = r9.<org.apache.poi.ss.formula.functions.MultiOperandNumericFunction: boolean _isBlankCounted>;

        if $z4 == 0 goto label10;

        virtualinvoke r10.<org.apache.poi.ss.formula.functions.MultiOperandNumericFunction$DoubleList: void add(double)>(0.0);

     label10:
        return;

     label11:
        $r2 = new java.lang.RuntimeException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid ValueEval type passed for conversion: (");

        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>($r8);

        throw $r2;
    }

    static void <clinit>()
    {
        double[] $r0;

        <org.apache.poi.ss.formula.functions.MultiOperandNumericFunction: int DEFAULT_MAX_NUM_OPERANDS> = 30;

        $r0 = newarray (double)[0];

        <org.apache.poi.ss.formula.functions.MultiOperandNumericFunction: double[] EMPTY_DOUBLE_ARRAY> = $r0;

        return;
    }
}
