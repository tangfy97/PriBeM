public class org.apache.xalan.processor.ProcessorCharacters extends org.apache.xalan.processor.XSLTElementProcessor
{
    protected org.w3c.dom.Node m_firstBackPointer;
    private java.lang.StringBuffer m_accumulator;
    private org.apache.xalan.templates.ElemText m_xslTextElement;

    public void <init>()
    {
        org.apache.xalan.processor.ProcessorCharacters r0;
        java.lang.StringBuffer $r1;

        r0 := @this: org.apache.xalan.processor.ProcessorCharacters;

        specialinvoke r0.<org.apache.xalan.processor.XSLTElementProcessor: void <init>()>();

        r0.<org.apache.xalan.processor.ProcessorCharacters: org.w3c.dom.Node m_firstBackPointer> = null;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        r0.<org.apache.xalan.processor.ProcessorCharacters: java.lang.StringBuffer m_accumulator> = $r1;

        return;
    }

    public void startNonText(org.apache.xalan.processor.StylesheetHandler) throws org.xml.sax.SAXException
    {
        javax.xml.transform.TransformerException $r11;
        org.apache.xalan.processor.StylesheetHandler r1;
        java.lang.StringBuffer $r3, $r5, $r10, $r17;
        org.w3c.dom.Node $r14;
        int $i0;
        org.apache.xalan.templates.ElemTextLiteral $r13;
        boolean $z0, $z1, $z2;
        org.xml.sax.helpers.NamespaceSupport $r16;
        org.apache.xalan.templates.ElemTemplateElement $r6;
        org.apache.xalan.templates.ElemText $r4, $r7, $r9;
        org.apache.xalan.processor.XSLTElementProcessor $r2;
        org.apache.xalan.processor.ProcessorCharacters r0;
        org.apache.xml.utils.SAXSourceLocator $r15;
        org.xml.sax.SAXException $r12;
        char[] $r8;

        r0 := @this: org.apache.xalan.processor.ProcessorCharacters;

        r1 := @parameter0: org.apache.xalan.processor.StylesheetHandler;

        $r2 = virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.processor.XSLTElementProcessor getCurrentProcessor()>();

        if r0 != $r2 goto label01;

        virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.processor.XSLTElementProcessor popProcessor()>();

     label01:
        $r3 = r0.<org.apache.xalan.processor.ProcessorCharacters: java.lang.StringBuffer m_accumulator>;

        $i0 = virtualinvoke $r3.<java.lang.StringBuffer: int length()>();

        if $i0 <= 0 goto label02;

        $r9 = r0.<org.apache.xalan.processor.ProcessorCharacters: org.apache.xalan.templates.ElemText m_xslTextElement>;

        if null != $r9 goto label03;

        $r10 = r0.<org.apache.xalan.processor.ProcessorCharacters: java.lang.StringBuffer m_accumulator>;

        $z1 = staticinvoke <org.apache.xml.utils.XMLCharacterRecognizer: boolean isWhiteSpace(java.lang.StringBuffer)>($r10);

        if $z1 == 0 goto label03;

     label02:
        $z0 = virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: boolean isSpacePreserve()>();

        if $z0 == 0 goto label10;

     label03:
        $r13 = new org.apache.xalan.templates.ElemTextLiteral;

        specialinvoke $r13.<org.apache.xalan.templates.ElemTextLiteral: void <init>()>();

        $r14 = r0.<org.apache.xalan.processor.ProcessorCharacters: org.w3c.dom.Node m_firstBackPointer>;

        virtualinvoke $r13.<org.apache.xalan.templates.ElemTemplateElement: void setDOMBackPointer(org.w3c.dom.Node)>($r14);

        $r15 = virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: org.apache.xml.utils.SAXSourceLocator getLocator()>();

        virtualinvoke $r13.<org.apache.xalan.templates.ElemTemplateElement: void setLocaterInfo(javax.xml.transform.SourceLocator)>($r15);

     label04:
        $r16 = virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: org.xml.sax.helpers.NamespaceSupport getNamespaceSupport()>();

        virtualinvoke $r13.<org.apache.xalan.templates.ElemTemplateElement: void setPrefixes(org.xml.sax.helpers.NamespaceSupport)>($r16);

     label05:
        goto label07;

     label06:
        $r11 := @caughtexception;

        $r12 = new org.xml.sax.SAXException;

        specialinvoke $r12.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r11);

        throw $r12;

     label07:
        $r4 = r0.<org.apache.xalan.processor.ProcessorCharacters: org.apache.xalan.templates.ElemText m_xslTextElement>;

        if null == $r4 goto label08;

        $r7 = r0.<org.apache.xalan.processor.ProcessorCharacters: org.apache.xalan.templates.ElemText m_xslTextElement>;

        $z2 = virtualinvoke $r7.<org.apache.xalan.templates.ElemText: boolean getDisableOutputEscaping()>();

        goto label09;

     label08:
        $z2 = 0;

     label09:
        virtualinvoke $r13.<org.apache.xalan.templates.ElemTextLiteral: void setDisableOutputEscaping(boolean)>($z2);

        virtualinvoke $r13.<org.apache.xalan.templates.ElemTextLiteral: void setPreserveSpace(boolean)>(1);

        $r8 = newarray (char)[$i0];

        $r5 = r0.<org.apache.xalan.processor.ProcessorCharacters: java.lang.StringBuffer m_accumulator>;

        virtualinvoke $r5.<java.lang.StringBuffer: void getChars(int,int,char[],int)>(0, $i0, $r8, 0);

        virtualinvoke $r13.<org.apache.xalan.templates.ElemTextLiteral: void setChars(char[])>($r8);

        $r6 = virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.templates.ElemTemplateElement getElemTemplateElement()>();

        virtualinvoke $r6.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement appendChild(org.apache.xalan.templates.ElemTemplateElement)>($r13);

     label10:
        $r17 = r0.<org.apache.xalan.processor.ProcessorCharacters: java.lang.StringBuffer m_accumulator>;

        virtualinvoke $r17.<java.lang.StringBuffer: void setLength(int)>(0);

        r0.<org.apache.xalan.processor.ProcessorCharacters: org.w3c.dom.Node m_firstBackPointer> = null;

        return;

        catch javax.xml.transform.TransformerException from label04 to label05 with label06;
    }

    public void characters(org.apache.xalan.processor.StylesheetHandler, char[], int, int) throws org.xml.sax.SAXException
    {
        org.apache.xalan.processor.XSLTElementProcessor $r5;
        org.apache.xalan.processor.ProcessorCharacters r0;
        org.apache.xalan.processor.StylesheetHandler r4;
        java.lang.StringBuffer $r2;
        org.w3c.dom.Node $r3, $r6;
        int i0, i1;
        char[] r1;

        r0 := @this: org.apache.xalan.processor.ProcessorCharacters;

        r4 := @parameter0: org.apache.xalan.processor.StylesheetHandler;

        r1 := @parameter1: char[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r2 = r0.<org.apache.xalan.processor.ProcessorCharacters: java.lang.StringBuffer m_accumulator>;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char[],int,int)>(r1, i0, i1);

        $r3 = r0.<org.apache.xalan.processor.ProcessorCharacters: org.w3c.dom.Node m_firstBackPointer>;

        if null != $r3 goto label1;

        $r6 = virtualinvoke r4.<org.apache.xalan.processor.StylesheetHandler: org.w3c.dom.Node getOriginatingNode()>();

        r0.<org.apache.xalan.processor.ProcessorCharacters: org.w3c.dom.Node m_firstBackPointer> = $r6;

     label1:
        $r5 = virtualinvoke r4.<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.processor.XSLTElementProcessor getCurrentProcessor()>();

        if r0 == $r5 goto label2;

        virtualinvoke r4.<org.apache.xalan.processor.StylesheetHandler: void pushProcessor(org.apache.xalan.processor.XSLTElementProcessor)>(r0);

     label2:
        return;
    }

    public void endElement(org.apache.xalan.processor.StylesheetHandler, java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xalan.processor.StylesheetHandler r1;
        org.apache.xalan.processor.XSLTElementProcessor $r2;
        java.lang.String r3, r4, r5;
        org.apache.xalan.processor.ProcessorCharacters r0;

        r0 := @this: org.apache.xalan.processor.ProcessorCharacters;

        r1 := @parameter0: org.apache.xalan.processor.StylesheetHandler;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        r5 := @parameter3: java.lang.String;

        virtualinvoke r0.<org.apache.xalan.processor.ProcessorCharacters: void startNonText(org.apache.xalan.processor.StylesheetHandler)>(r1);

        $r2 = virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.processor.XSLTElementProcessor getCurrentProcessor()>();

        virtualinvoke $r2.<org.apache.xalan.processor.XSLTElementProcessor: void endElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String)>(r1, r3, r4, r5);

        virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.processor.XSLTElementProcessor popProcessor()>();

        return;
    }

    void setXslTextElement(org.apache.xalan.templates.ElemText)
    {
        org.apache.xalan.processor.ProcessorCharacters r0;
        org.apache.xalan.templates.ElemText r1;

        r0 := @this: org.apache.xalan.processor.ProcessorCharacters;

        r1 := @parameter0: org.apache.xalan.templates.ElemText;

        r0.<org.apache.xalan.processor.ProcessorCharacters: org.apache.xalan.templates.ElemText m_xslTextElement> = r1;

        return;
    }
}
