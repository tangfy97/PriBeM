public class org.apache.batik.bridge.svg12.SVG12BridgeContext extends org.apache.batik.bridge.BridgeContext
{
    protected org.apache.batik.bridge.svg12.SVG12BridgeContext$XBLBindingListener bindingListener;
    protected org.apache.batik.bridge.svg12.SVG12BridgeContext$XBLContentListener contentListener;
    protected org.w3c.dom.events.EventTarget mouseCaptureTarget;
    protected boolean mouseCaptureSendAll;
    protected boolean mouseCaptureAutoRelease;

    public void <init>(org.apache.batik.bridge.UserAgent)
    {
        org.apache.batik.bridge.UserAgent r1;
        org.apache.batik.bridge.svg12.SVG12BridgeContext r0;

        r0 := @this: org.apache.batik.bridge.svg12.SVG12BridgeContext;

        r1 := @parameter0: org.apache.batik.bridge.UserAgent;

        specialinvoke r0.<org.apache.batik.bridge.BridgeContext: void <init>(org.apache.batik.bridge.UserAgent)>(r1);

        return;
    }

    public void <init>(org.apache.batik.bridge.UserAgent, org.apache.batik.bridge.DocumentLoader)
    {
        org.apache.batik.bridge.UserAgent r1;
        org.apache.batik.bridge.DocumentLoader r2;
        org.apache.batik.bridge.svg12.SVG12BridgeContext r0;

        r0 := @this: org.apache.batik.bridge.svg12.SVG12BridgeContext;

        r1 := @parameter0: org.apache.batik.bridge.UserAgent;

        r2 := @parameter1: org.apache.batik.bridge.DocumentLoader;

        specialinvoke r0.<org.apache.batik.bridge.BridgeContext: void <init>(org.apache.batik.bridge.UserAgent,org.apache.batik.bridge.DocumentLoader)>(r1, r2);

        return;
    }

    public void <init>(org.apache.batik.bridge.UserAgent, org.apache.batik.script.InterpreterPool, org.apache.batik.bridge.DocumentLoader)
    {
        org.apache.batik.bridge.UserAgent r1;
        org.apache.batik.bridge.DocumentLoader r3;
        org.apache.batik.script.InterpreterPool r2;
        org.apache.batik.bridge.svg12.SVG12BridgeContext r0;

        r0 := @this: org.apache.batik.bridge.svg12.SVG12BridgeContext;

        r1 := @parameter0: org.apache.batik.bridge.UserAgent;

        r2 := @parameter1: org.apache.batik.script.InterpreterPool;

        r3 := @parameter2: org.apache.batik.bridge.DocumentLoader;

        specialinvoke r0.<org.apache.batik.bridge.BridgeContext: void <init>(org.apache.batik.bridge.UserAgent,org.apache.batik.script.InterpreterPool,org.apache.batik.bridge.DocumentLoader)>(r1, r2, r3);

        return;
    }

    public org.apache.batik.bridge.URIResolver createURIResolver(org.w3c.dom.svg.SVGDocument, org.apache.batik.bridge.DocumentLoader)
    {
        org.apache.batik.bridge.DocumentLoader r2;
        org.w3c.dom.svg.SVGDocument r1;
        org.apache.batik.bridge.svg12.SVG12BridgeContext r3;
        org.apache.batik.bridge.svg12.SVG12URIResolver $r0;

        r3 := @this: org.apache.batik.bridge.svg12.SVG12BridgeContext;

        r1 := @parameter0: org.w3c.dom.svg.SVGDocument;

        r2 := @parameter1: org.apache.batik.bridge.DocumentLoader;

        $r0 = new org.apache.batik.bridge.svg12.SVG12URIResolver;

        specialinvoke $r0.<org.apache.batik.bridge.svg12.SVG12URIResolver: void <init>(org.w3c.dom.svg.SVGDocument,org.apache.batik.bridge.DocumentLoader)>(r1, r2);

        return $r0;
    }

    public void addGVTListener(org.w3c.dom.Document)
    {
        org.apache.batik.bridge.svg12.SVG12BridgeContext r0;
        org.w3c.dom.Document r1;

        r0 := @this: org.apache.batik.bridge.svg12.SVG12BridgeContext;

        r1 := @parameter0: org.w3c.dom.Document;

        staticinvoke <org.apache.batik.bridge.svg12.SVG12BridgeEventSupport: void addGVTListener(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Document)>(r0, r1);

        return;
    }

    public void dispose()
    {
        org.apache.batik.bridge.svg12.SVG12BridgeContext r0;
        org.w3c.dom.Document $r11, $r15;
        java.util.Map $r17, $r21;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.batik.script.Interpreter r27;
        java.util.Collection $r18;
        java.util.Set r1, $r2;
        org.apache.batik.dom.svg12.XBLEventSupport r14;
        java.lang.Throwable $r25;
        org.apache.batik.bridge.FocusManager $r22, $r23;
        org.apache.batik.dom.AbstractNode r12;
        org.w3c.dom.Node r10;
        java.lang.String $r7, $r8, $r9;
        java.util.Iterator $r3, $r19;
        org.apache.batik.dom.events.EventSupport $r13;
        org.apache.batik.dom.events.NodeEventTarget $r5;
        org.apache.batik.bridge.SVGAnimationEngine $r16, $r24;
        org.w3c.dom.events.EventListener $r6;
        java.lang.Object $r4, $r20;
        org.apache.batik.bridge.BridgeContext$EventListenerMememto r26;

        r0 := @this: org.apache.batik.bridge.svg12.SVG12BridgeContext;

        virtualinvoke r0.<org.apache.batik.bridge.BridgeContext: void clearChildContexts()>();

        r1 = r0.<org.apache.batik.bridge.BridgeContext: java.util.Set eventListenerSet>;

        entermonitor r1;

     label01:
        $r2 = r0.<org.apache.batik.bridge.BridgeContext: java.util.Set eventListenerSet>;

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        goto label07;

     label02:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r26 = (org.apache.batik.bridge.BridgeContext$EventListenerMememto) $r4;

        $r5 = virtualinvoke r26.<org.apache.batik.bridge.BridgeContext$EventListenerMememto: org.apache.batik.dom.events.NodeEventTarget getTarget()>();

        $r6 = virtualinvoke r26.<org.apache.batik.bridge.BridgeContext$EventListenerMememto: org.w3c.dom.events.EventListener getListener()>();

        $z0 = virtualinvoke r26.<org.apache.batik.bridge.BridgeContext$EventListenerMememto: boolean getUseCapture()>();

        $r7 = virtualinvoke r26.<org.apache.batik.bridge.BridgeContext$EventListenerMememto: java.lang.String getEventType()>();

        $z1 = virtualinvoke r26.<org.apache.batik.bridge.BridgeContext$EventListenerMememto: boolean getNamespaced()>();

        if $r5 == null goto label07;

        if $r6 == null goto label07;

        if $r7 != null goto label03;

        goto label07;

     label03:
        $z2 = r26 instanceof org.apache.batik.bridge.svg12.SVG12BridgeContext$ImplementationEventListenerMememto;

        if $z2 == 0 goto label05;

        $r9 = virtualinvoke r26.<org.apache.batik.bridge.BridgeContext$EventListenerMememto: java.lang.String getNamespaceURI()>();

        r10 = (org.w3c.dom.Node) $r5;

        $r11 = interfaceinvoke r10.<org.w3c.dom.Node: org.w3c.dom.Document getOwnerDocument()>();

        r12 = (org.apache.batik.dom.AbstractNode) $r11;

        if r12 == null goto label04;

        $r13 = virtualinvoke r12.<org.apache.batik.dom.AbstractNode: org.apache.batik.dom.events.EventSupport initializeEventSupport()>();

        r14 = (org.apache.batik.dom.svg12.XBLEventSupport) $r13;

        virtualinvoke r14.<org.apache.batik.dom.svg12.XBLEventSupport: void removeImplementationEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>($r9, $r7, $r6, $z0);

     label04:
        goto label07;

     label05:
        if $z1 == 0 goto label06;

        $r8 = virtualinvoke r26.<org.apache.batik.bridge.BridgeContext$EventListenerMememto: java.lang.String getNamespaceURI()>();

        interfaceinvoke $r5.<org.apache.batik.dom.events.NodeEventTarget: void removeEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>($r8, $r7, $r6, $z0);

        goto label07;

     label06:
        interfaceinvoke $r5.<org.w3c.dom.events.EventTarget: void removeEventListener(java.lang.String,org.w3c.dom.events.EventListener,boolean)>($r7, $r6, $z0);

     label07:
        $z3 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 != 0 goto label02;

        exitmonitor r1;

        goto label09;

     label08:
        $r25 := @caughtexception;

        exitmonitor r1;

        throw $r25;

     label09:
        $r15 = r0.<org.apache.batik.bridge.BridgeContext: org.w3c.dom.Document document>;

        if $r15 == null goto label10;

        virtualinvoke r0.<org.apache.batik.bridge.svg12.SVG12BridgeContext: void removeDOMListeners()>();

        virtualinvoke r0.<org.apache.batik.bridge.svg12.SVG12BridgeContext: void removeBindingListener()>();

     label10:
        $r16 = r0.<org.apache.batik.bridge.BridgeContext: org.apache.batik.bridge.SVGAnimationEngine animationEngine>;

        if $r16 == null goto label11;

        $r24 = r0.<org.apache.batik.bridge.BridgeContext: org.apache.batik.bridge.SVGAnimationEngine animationEngine>;

        virtualinvoke $r24.<org.apache.batik.bridge.SVGAnimationEngine: void dispose()>();

        r0.<org.apache.batik.bridge.BridgeContext: org.apache.batik.bridge.SVGAnimationEngine animationEngine> = null;

     label11:
        $r17 = r0.<org.apache.batik.bridge.BridgeContext: java.util.Map interpreterMap>;

        $r18 = interfaceinvoke $r17.<java.util.Map: java.util.Collection values()>();

        $r19 = interfaceinvoke $r18.<java.util.Collection: java.util.Iterator iterator()>();

        goto label13;

     label12:
        $r20 = interfaceinvoke $r19.<java.util.Iterator: java.lang.Object next()>();

        r27 = (org.apache.batik.script.Interpreter) $r20;

        if r27 == null goto label13;

        interfaceinvoke r27.<org.apache.batik.script.Interpreter: void dispose()>();

     label13:
        $z4 = interfaceinvoke $r19.<java.util.Iterator: boolean hasNext()>();

        if $z4 != 0 goto label12;

        $r21 = r0.<org.apache.batik.bridge.BridgeContext: java.util.Map interpreterMap>;

        interfaceinvoke $r21.<java.util.Map: void clear()>();

        $r22 = r0.<org.apache.batik.bridge.BridgeContext: org.apache.batik.bridge.FocusManager focusManager>;

        if $r22 == null goto label14;

        $r23 = r0.<org.apache.batik.bridge.BridgeContext: org.apache.batik.bridge.FocusManager focusManager>;

        virtualinvoke $r23.<org.apache.batik.bridge.FocusManager: void dispose()>();

     label14:
        return;

        catch java.lang.Throwable from label01 to label08 with label08;
    }

    public void addBindingListener()
    {
        org.apache.batik.bridge.svg12.SVG12BridgeContext$XBLContentListener $r7, $r8;
        org.apache.batik.bridge.svg12.DefaultXBLManager r4;
        org.apache.batik.bridge.svg12.SVG12BridgeContext$XBLBindingListener $r5, $r6;
        org.apache.batik.dom.AbstractDocument r2;
        org.apache.batik.dom.xbl.XBLManager $r3;
        org.apache.batik.bridge.svg12.SVG12BridgeContext r0;
        org.w3c.dom.Document $r1;

        r0 := @this: org.apache.batik.bridge.svg12.SVG12BridgeContext;

        $r1 = r0.<org.apache.batik.bridge.BridgeContext: org.w3c.dom.Document document>;

        r2 = (org.apache.batik.dom.AbstractDocument) $r1;

        $r3 = virtualinvoke r2.<org.apache.batik.dom.AbstractDocument: org.apache.batik.dom.xbl.XBLManager getXBLManager()>();

        r4 = (org.apache.batik.bridge.svg12.DefaultXBLManager) $r3;

        if r4 == null goto label1;

        $r5 = new org.apache.batik.bridge.svg12.SVG12BridgeContext$XBLBindingListener;

        specialinvoke $r5.<org.apache.batik.bridge.svg12.SVG12BridgeContext$XBLBindingListener: void <init>(org.apache.batik.bridge.svg12.SVG12BridgeContext)>(r0);

        r0.<org.apache.batik.bridge.svg12.SVG12BridgeContext: org.apache.batik.bridge.svg12.SVG12BridgeContext$XBLBindingListener bindingListener> = $r5;

        $r6 = r0.<org.apache.batik.bridge.svg12.SVG12BridgeContext: org.apache.batik.bridge.svg12.SVG12BridgeContext$XBLBindingListener bindingListener>;

        virtualinvoke r4.<org.apache.batik.bridge.svg12.DefaultXBLManager: void addBindingListener(org.apache.batik.bridge.svg12.BindingListener)>($r6);

        $r7 = new org.apache.batik.bridge.svg12.SVG12BridgeContext$XBLContentListener;

        specialinvoke $r7.<org.apache.batik.bridge.svg12.SVG12BridgeContext$XBLContentListener: void <init>(org.apache.batik.bridge.svg12.SVG12BridgeContext)>(r0);

        r0.<org.apache.batik.bridge.svg12.SVG12BridgeContext: org.apache.batik.bridge.svg12.SVG12BridgeContext$XBLContentListener contentListener> = $r7;

        $r8 = r0.<org.apache.batik.bridge.svg12.SVG12BridgeContext: org.apache.batik.bridge.svg12.SVG12BridgeContext$XBLContentListener contentListener>;

        virtualinvoke r4.<org.apache.batik.bridge.svg12.DefaultXBLManager: void addContentSelectionChangedListener(org.apache.batik.bridge.svg12.ContentSelectionChangedListener)>($r8);

     label1:
        return;
    }

    public void removeBindingListener()
    {
        org.apache.batik.bridge.svg12.SVG12BridgeContext$XBLContentListener $r6;
        org.apache.batik.bridge.svg12.DefaultXBLManager r4;
        org.apache.batik.bridge.svg12.SVG12BridgeContext$XBLBindingListener $r5;
        org.apache.batik.dom.AbstractDocument r2;
        org.apache.batik.dom.xbl.XBLManager $r3;
        org.apache.batik.bridge.svg12.SVG12BridgeContext r0;
        org.w3c.dom.Document $r1;
        boolean $z0;

        r0 := @this: org.apache.batik.bridge.svg12.SVG12BridgeContext;

        $r1 = r0.<org.apache.batik.bridge.BridgeContext: org.w3c.dom.Document document>;

        r2 = (org.apache.batik.dom.AbstractDocument) $r1;

        $r3 = virtualinvoke r2.<org.apache.batik.dom.AbstractDocument: org.apache.batik.dom.xbl.XBLManager getXBLManager()>();

        $z0 = $r3 instanceof org.apache.batik.bridge.svg12.DefaultXBLManager;

        if $z0 == 0 goto label1;

        r4 = (org.apache.batik.bridge.svg12.DefaultXBLManager) $r3;

        $r5 = r0.<org.apache.batik.bridge.svg12.SVG12BridgeContext: org.apache.batik.bridge.svg12.SVG12BridgeContext$XBLBindingListener bindingListener>;

        virtualinvoke r4.<org.apache.batik.bridge.svg12.DefaultXBLManager: void removeBindingListener(org.apache.batik.bridge.svg12.BindingListener)>($r5);

        $r6 = r0.<org.apache.batik.bridge.svg12.SVG12BridgeContext: org.apache.batik.bridge.svg12.SVG12BridgeContext$XBLContentListener contentListener>;

        virtualinvoke r4.<org.apache.batik.bridge.svg12.DefaultXBLManager: void removeContentSelectionChangedListener(org.apache.batik.bridge.svg12.ContentSelectionChangedListener)>($r6);

     label1:
        return;
    }

    public void addDOMListeners()
    {
        org.apache.batik.bridge.BridgeContext$DOMNodeRemovedEventListener $r12;
        org.apache.batik.bridge.svg12.SVG12BridgeContext r0;
        org.apache.batik.css.engine.CSSEngine $r21;
        org.apache.batik.bridge.BridgeContext$AnimatedAttrListener $r17;
        org.w3c.dom.Document $r1, $r20;
        org.apache.batik.dom.svg.AnimatedAttributeListener $r18;
        org.apache.batik.bridge.BridgeContext$DOMAttrModifiedEventListener $r6;
        org.apache.batik.dom.events.EventSupport $r3;
        org.apache.batik.bridge.BridgeContext$CSSPropertiesChangedListener $r22;
        org.apache.batik.bridge.BridgeContext$DOMNodeInsertedEventListener $r9;
        org.apache.batik.dom.svg.SVGOMDocument r2;
        org.apache.batik.dom.svg12.XBLEventSupport r4;
        org.w3c.dom.events.EventListener $r7, $r10, $r13, $r16;
        org.apache.batik.css.engine.CSSEngineListener $r23;
        org.apache.batik.bridge.svg12.SVG12BridgeContext$EventListenerWrapper $r5, $r8, $r11, $r14;
        org.apache.batik.bridge.svg12.SVG12FocusManager $r19;
        org.apache.batik.bridge.BridgeContext$DOMCharacterDataModifiedEventListener $r15;

        r0 := @this: org.apache.batik.bridge.svg12.SVG12BridgeContext;

        $r1 = r0.<org.apache.batik.bridge.BridgeContext: org.w3c.dom.Document document>;

        r2 = (org.apache.batik.dom.svg.SVGOMDocument) $r1;

        $r3 = virtualinvoke r2.<org.apache.batik.dom.AbstractNode: org.apache.batik.dom.events.EventSupport initializeEventSupport()>();

        r4 = (org.apache.batik.dom.svg12.XBLEventSupport) $r3;

        $r5 = new org.apache.batik.bridge.svg12.SVG12BridgeContext$EventListenerWrapper;

        $r6 = new org.apache.batik.bridge.BridgeContext$DOMAttrModifiedEventListener;

        specialinvoke $r6.<org.apache.batik.bridge.BridgeContext$DOMAttrModifiedEventListener: void <init>(org.apache.batik.bridge.BridgeContext)>(r0);

        specialinvoke $r5.<org.apache.batik.bridge.svg12.SVG12BridgeContext$EventListenerWrapper: void <init>(org.apache.batik.bridge.svg12.SVG12BridgeContext,org.w3c.dom.events.EventListener)>(r0, $r6);

        r0.<org.apache.batik.bridge.BridgeContext: org.w3c.dom.events.EventListener domAttrModifiedEventListener> = $r5;

        $r7 = r0.<org.apache.batik.bridge.BridgeContext: org.w3c.dom.events.EventListener domAttrModifiedEventListener>;

        virtualinvoke r4.<org.apache.batik.dom.svg12.XBLEventSupport: void addImplementationEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>("http://www.w3.org/2001/xml-events", "DOMAttrModified", $r7, 1);

        $r8 = new org.apache.batik.bridge.svg12.SVG12BridgeContext$EventListenerWrapper;

        $r9 = new org.apache.batik.bridge.BridgeContext$DOMNodeInsertedEventListener;

        specialinvoke $r9.<org.apache.batik.bridge.BridgeContext$DOMNodeInsertedEventListener: void <init>(org.apache.batik.bridge.BridgeContext)>(r0);

        specialinvoke $r8.<org.apache.batik.bridge.svg12.SVG12BridgeContext$EventListenerWrapper: void <init>(org.apache.batik.bridge.svg12.SVG12BridgeContext,org.w3c.dom.events.EventListener)>(r0, $r9);

        r0.<org.apache.batik.bridge.BridgeContext: org.w3c.dom.events.EventListener domNodeInsertedEventListener> = $r8;

        $r10 = r0.<org.apache.batik.bridge.BridgeContext: org.w3c.dom.events.EventListener domNodeInsertedEventListener>;

        virtualinvoke r4.<org.apache.batik.dom.svg12.XBLEventSupport: void addImplementationEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>("http://www.w3.org/2001/xml-events", "DOMNodeInserted", $r10, 1);

        $r11 = new org.apache.batik.bridge.svg12.SVG12BridgeContext$EventListenerWrapper;

        $r12 = new org.apache.batik.bridge.BridgeContext$DOMNodeRemovedEventListener;

        specialinvoke $r12.<org.apache.batik.bridge.BridgeContext$DOMNodeRemovedEventListener: void <init>(org.apache.batik.bridge.BridgeContext)>(r0);

        specialinvoke $r11.<org.apache.batik.bridge.svg12.SVG12BridgeContext$EventListenerWrapper: void <init>(org.apache.batik.bridge.svg12.SVG12BridgeContext,org.w3c.dom.events.EventListener)>(r0, $r12);

        r0.<org.apache.batik.bridge.BridgeContext: org.w3c.dom.events.EventListener domNodeRemovedEventListener> = $r11;

        $r13 = r0.<org.apache.batik.bridge.BridgeContext: org.w3c.dom.events.EventListener domNodeRemovedEventListener>;

        virtualinvoke r4.<org.apache.batik.dom.svg12.XBLEventSupport: void addImplementationEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>("http://www.w3.org/2001/xml-events", "DOMNodeRemoved", $r13, 1);

        $r14 = new org.apache.batik.bridge.svg12.SVG12BridgeContext$EventListenerWrapper;

        $r15 = new org.apache.batik.bridge.BridgeContext$DOMCharacterDataModifiedEventListener;

        specialinvoke $r15.<org.apache.batik.bridge.BridgeContext$DOMCharacterDataModifiedEventListener: void <init>(org.apache.batik.bridge.BridgeContext)>(r0);

        specialinvoke $r14.<org.apache.batik.bridge.svg12.SVG12BridgeContext$EventListenerWrapper: void <init>(org.apache.batik.bridge.svg12.SVG12BridgeContext,org.w3c.dom.events.EventListener)>(r0, $r15);

        r0.<org.apache.batik.bridge.BridgeContext: org.w3c.dom.events.EventListener domCharacterDataModifiedEventListener> = $r14;

        $r16 = r0.<org.apache.batik.bridge.BridgeContext: org.w3c.dom.events.EventListener domCharacterDataModifiedEventListener>;

        virtualinvoke r4.<org.apache.batik.dom.svg12.XBLEventSupport: void addImplementationEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>("http://www.w3.org/2001/xml-events", "DOMCharacterDataModified", $r16, 1);

        $r17 = new org.apache.batik.bridge.BridgeContext$AnimatedAttrListener;

        specialinvoke $r17.<org.apache.batik.bridge.BridgeContext$AnimatedAttrListener: void <init>(org.apache.batik.bridge.BridgeContext)>(r0);

        r0.<org.apache.batik.bridge.BridgeContext: org.apache.batik.dom.svg.AnimatedAttributeListener animatedAttributeListener> = $r17;

        $r18 = r0.<org.apache.batik.bridge.BridgeContext: org.apache.batik.dom.svg.AnimatedAttributeListener animatedAttributeListener>;

        virtualinvoke r2.<org.apache.batik.dom.svg.SVGOMDocument: void addAnimatedAttributeListener(org.apache.batik.dom.svg.AnimatedAttributeListener)>($r18);

        $r19 = new org.apache.batik.bridge.svg12.SVG12FocusManager;

        $r20 = r0.<org.apache.batik.bridge.BridgeContext: org.w3c.dom.Document document>;

        specialinvoke $r19.<org.apache.batik.bridge.svg12.SVG12FocusManager: void <init>(org.w3c.dom.Document)>($r20);

        r0.<org.apache.batik.bridge.BridgeContext: org.apache.batik.bridge.FocusManager focusManager> = $r19;

        $r21 = virtualinvoke r2.<org.apache.batik.dom.AbstractStylableDocument: org.apache.batik.css.engine.CSSEngine getCSSEngine()>();

        $r22 = new org.apache.batik.bridge.BridgeContext$CSSPropertiesChangedListener;

        specialinvoke $r22.<org.apache.batik.bridge.BridgeContext$CSSPropertiesChangedListener: void <init>(org.apache.batik.bridge.BridgeContext)>(r0);

        r0.<org.apache.batik.bridge.BridgeContext: org.apache.batik.css.engine.CSSEngineListener cssPropertiesChangedListener> = $r22;

        $r23 = r0.<org.apache.batik.bridge.BridgeContext: org.apache.batik.css.engine.CSSEngineListener cssPropertiesChangedListener>;

        virtualinvoke $r21.<org.apache.batik.css.engine.CSSEngine: void addCSSEngineListener(org.apache.batik.css.engine.CSSEngineListener)>($r23);

        return;
    }

    public void addUIEventListeners(org.w3c.dom.Document)
    {
        org.apache.batik.bridge.BridgeContext$DOMMouseOutEventListener $r10;
        org.apache.batik.dom.events.EventSupport $r4;
        org.apache.batik.bridge.svg12.SVG12BridgeContext r7;
        org.apache.batik.dom.svg12.XBLEventSupport r5;
        org.apache.batik.bridge.BridgeContext$DOMMouseOverEventListener $r8;
        org.w3c.dom.Element $r1;
        org.apache.batik.dom.AbstractNode r3;
        org.w3c.dom.events.EventTarget r2;
        org.w3c.dom.Document r0;
        org.apache.batik.bridge.svg12.SVG12BridgeContext$EventListenerWrapper $r6, $r9;

        r7 := @this: org.apache.batik.bridge.svg12.SVG12BridgeContext;

        r0 := @parameter0: org.w3c.dom.Document;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Document: org.w3c.dom.Element getDocumentElement()>();

        r2 = (org.w3c.dom.events.EventTarget) $r1;

        r3 = (org.apache.batik.dom.AbstractNode) r2;

        $r4 = virtualinvoke r3.<org.apache.batik.dom.AbstractNode: org.apache.batik.dom.events.EventSupport initializeEventSupport()>();

        r5 = (org.apache.batik.dom.svg12.XBLEventSupport) $r4;

        $r6 = new org.apache.batik.bridge.svg12.SVG12BridgeContext$EventListenerWrapper;

        $r8 = new org.apache.batik.bridge.BridgeContext$DOMMouseOverEventListener;

        specialinvoke $r8.<org.apache.batik.bridge.BridgeContext$DOMMouseOverEventListener: void <init>(org.apache.batik.bridge.BridgeContext)>(r7);

        specialinvoke $r6.<org.apache.batik.bridge.svg12.SVG12BridgeContext$EventListenerWrapper: void <init>(org.apache.batik.bridge.svg12.SVG12BridgeContext,org.w3c.dom.events.EventListener)>(r7, $r8);

        virtualinvoke r5.<org.apache.batik.dom.svg12.XBLEventSupport: void addImplementationEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>("http://www.w3.org/2001/xml-events", "mouseover", $r6, 1);

        virtualinvoke r7.<org.apache.batik.bridge.svg12.SVG12BridgeContext: void storeImplementationEventListenerNS(org.w3c.dom.events.EventTarget,java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>(r2, "http://www.w3.org/2001/xml-events", "mouseover", $r6, 1);

        $r9 = new org.apache.batik.bridge.svg12.SVG12BridgeContext$EventListenerWrapper;

        $r10 = new org.apache.batik.bridge.BridgeContext$DOMMouseOutEventListener;

        specialinvoke $r10.<org.apache.batik.bridge.BridgeContext$DOMMouseOutEventListener: void <init>(org.apache.batik.bridge.BridgeContext)>(r7);

        specialinvoke $r9.<org.apache.batik.bridge.svg12.SVG12BridgeContext$EventListenerWrapper: void <init>(org.apache.batik.bridge.svg12.SVG12BridgeContext,org.w3c.dom.events.EventListener)>(r7, $r10);

        virtualinvoke r5.<org.apache.batik.dom.svg12.XBLEventSupport: void addImplementationEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>("http://www.w3.org/2001/xml-events", "mouseout", $r9, 1);

        virtualinvoke r7.<org.apache.batik.bridge.svg12.SVG12BridgeContext: void storeImplementationEventListenerNS(org.w3c.dom.events.EventTarget,java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>(r2, "http://www.w3.org/2001/xml-events", "mouseout", $r9, 1);

        return;
    }

    public void removeUIEventListeners(org.w3c.dom.Document)
    {
        java.lang.Throwable $r17;
        org.apache.batik.bridge.svg12.SVG12BridgeContext r6;
        org.apache.batik.dom.AbstractNode r3;
        org.w3c.dom.events.EventTarget r2;
        org.w3c.dom.Document r0;
        java.lang.String $r14, $r15, $r16;
        boolean $z0, $z1, $z2, $z3;
        java.util.Iterator $r9;
        org.apache.batik.dom.events.EventSupport $r4;
        java.util.Set r7, $r8;
        org.apache.batik.dom.events.NodeEventTarget $r12;
        org.apache.batik.dom.svg12.XBLEventSupport r5;
        org.w3c.dom.Element $r1;
        org.w3c.dom.events.EventListener $r13;
        java.lang.Object $r10;
        org.apache.batik.bridge.BridgeContext$EventListenerMememto r11;

        r6 := @this: org.apache.batik.bridge.svg12.SVG12BridgeContext;

        r0 := @parameter0: org.w3c.dom.Document;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Document: org.w3c.dom.Element getDocumentElement()>();

        r2 = (org.w3c.dom.events.EventTarget) $r1;

        r3 = (org.apache.batik.dom.AbstractNode) r2;

        $r4 = virtualinvoke r3.<org.apache.batik.dom.AbstractNode: org.apache.batik.dom.events.EventSupport initializeEventSupport()>();

        r5 = (org.apache.batik.dom.svg12.XBLEventSupport) $r4;

        r7 = r6.<org.apache.batik.bridge.BridgeContext: java.util.Set eventListenerSet>;

        entermonitor r7;

     label1:
        $r8 = r6.<org.apache.batik.bridge.BridgeContext: java.util.Set eventListenerSet>;

        $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

        goto label6;

     label2:
        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r11 = (org.apache.batik.bridge.BridgeContext$EventListenerMememto) $r10;

        $r12 = virtualinvoke r11.<org.apache.batik.bridge.BridgeContext$EventListenerMememto: org.apache.batik.dom.events.NodeEventTarget getTarget()>();

        if $r12 != r2 goto label6;

        $r13 = virtualinvoke r11.<org.apache.batik.bridge.BridgeContext$EventListenerMememto: org.w3c.dom.events.EventListener getListener()>();

        $z0 = virtualinvoke r11.<org.apache.batik.bridge.BridgeContext$EventListenerMememto: boolean getUseCapture()>();

        $r14 = virtualinvoke r11.<org.apache.batik.bridge.BridgeContext$EventListenerMememto: java.lang.String getEventType()>();

        $z1 = virtualinvoke r11.<org.apache.batik.bridge.BridgeContext$EventListenerMememto: boolean getNamespaced()>();

        if $r12 == null goto label6;

        if $r13 == null goto label6;

        if $r14 != null goto label3;

        goto label6;

     label3:
        $z2 = r11 instanceof org.apache.batik.bridge.svg12.SVG12BridgeContext$ImplementationEventListenerMememto;

        if $z2 == 0 goto label4;

        $r16 = virtualinvoke r11.<org.apache.batik.bridge.BridgeContext$EventListenerMememto: java.lang.String getNamespaceURI()>();

        virtualinvoke r5.<org.apache.batik.dom.svg12.XBLEventSupport: void removeImplementationEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>($r16, $r14, $r13, $z0);

        goto label6;

     label4:
        if $z1 == 0 goto label5;

        $r15 = virtualinvoke r11.<org.apache.batik.bridge.BridgeContext$EventListenerMememto: java.lang.String getNamespaceURI()>();

        interfaceinvoke $r12.<org.apache.batik.dom.events.NodeEventTarget: void removeEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>($r15, $r14, $r13, $z0);

        goto label6;

     label5:
        interfaceinvoke $r12.<org.w3c.dom.events.EventTarget: void removeEventListener(java.lang.String,org.w3c.dom.events.EventListener,boolean)>($r14, $r13, $z0);

     label6:
        $z3 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z3 != 0 goto label2;

        exitmonitor r7;

        goto label8;

     label7:
        $r17 := @caughtexception;

        exitmonitor r7;

        throw $r17;

     label8:
        return;

        catch java.lang.Throwable from label1 to label7 with label7;
    }

    protected void removeDOMListeners()
    {
        org.apache.batik.bridge.svg12.SVG12BridgeContext r0;
        org.apache.batik.css.engine.CSSEngine $r8;
        org.apache.batik.dom.svg.SVGOMDocument r2;
        org.w3c.dom.events.EventListener $r3, $r4, $r5, $r6;
        org.w3c.dom.Document $r1;
        org.apache.batik.css.engine.CSSEngineListener $r9;
        org.apache.batik.dom.svg.AnimatedAttributeListener $r7;

        r0 := @this: org.apache.batik.bridge.svg12.SVG12BridgeContext;

        $r1 = r0.<org.apache.batik.bridge.BridgeContext: org.w3c.dom.Document document>;

        r2 = (org.apache.batik.dom.svg.SVGOMDocument) $r1;

        $r3 = r0.<org.apache.batik.bridge.BridgeContext: org.w3c.dom.events.EventListener domAttrModifiedEventListener>;

        virtualinvoke r2.<org.apache.batik.dom.AbstractNode: void removeEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>("http://www.w3.org/2001/xml-events", "DOMAttrModified", $r3, 1);

        $r4 = r0.<org.apache.batik.bridge.BridgeContext: org.w3c.dom.events.EventListener domNodeInsertedEventListener>;

        virtualinvoke r2.<org.apache.batik.dom.AbstractNode: void removeEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>("http://www.w3.org/2001/xml-events", "DOMNodeInserted", $r4, 1);

        $r5 = r0.<org.apache.batik.bridge.BridgeContext: org.w3c.dom.events.EventListener domNodeRemovedEventListener>;

        virtualinvoke r2.<org.apache.batik.dom.AbstractNode: void removeEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>("http://www.w3.org/2001/xml-events", "DOMNodeRemoved", $r5, 1);

        $r6 = r0.<org.apache.batik.bridge.BridgeContext: org.w3c.dom.events.EventListener domCharacterDataModifiedEventListener>;

        virtualinvoke r2.<org.apache.batik.dom.AbstractNode: void removeEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>("http://www.w3.org/2001/xml-events", "DOMCharacterDataModified", $r6, 1);

        $r7 = r0.<org.apache.batik.bridge.BridgeContext: org.apache.batik.dom.svg.AnimatedAttributeListener animatedAttributeListener>;

        virtualinvoke r2.<org.apache.batik.dom.svg.SVGOMDocument: void removeAnimatedAttributeListener(org.apache.batik.dom.svg.AnimatedAttributeListener)>($r7);

        $r8 = virtualinvoke r2.<org.apache.batik.dom.AbstractStylableDocument: org.apache.batik.css.engine.CSSEngine getCSSEngine()>();

        if $r8 == null goto label1;

        $r9 = r0.<org.apache.batik.bridge.BridgeContext: org.apache.batik.css.engine.CSSEngineListener cssPropertiesChangedListener>;

        virtualinvoke $r8.<org.apache.batik.css.engine.CSSEngine: void removeCSSEngineListener(org.apache.batik.css.engine.CSSEngineListener)>($r9);

        virtualinvoke $r8.<org.apache.batik.css.engine.CSSEngine: void dispose()>();

        virtualinvoke r2.<org.apache.batik.dom.AbstractStylableDocument: void setCSSEngine(org.apache.batik.css.engine.CSSEngine)>(null);

     label1:
        return;
    }

    protected void storeImplementationEventListenerNS(org.w3c.dom.events.EventTarget, java.lang.String, java.lang.String, org.w3c.dom.events.EventListener, boolean)
    {
        java.lang.Throwable $r8;
        java.util.Set r1, $r7;
        org.apache.batik.bridge.svg12.SVG12BridgeContext r0;
        org.apache.batik.bridge.svg12.SVG12BridgeContext$ImplementationEventListenerMememto $r2;
        org.w3c.dom.events.EventTarget r3;
        org.w3c.dom.events.EventListener r6;
        java.lang.String r4, r5;
        boolean z0;

        r0 := @this: org.apache.batik.bridge.svg12.SVG12BridgeContext;

        r3 := @parameter0: org.w3c.dom.events.EventTarget;

        r4 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.String;

        r6 := @parameter3: org.w3c.dom.events.EventListener;

        z0 := @parameter4: boolean;

        r1 = r0.<org.apache.batik.bridge.BridgeContext: java.util.Set eventListenerSet>;

        entermonitor r1;

     label1:
        $r2 = new org.apache.batik.bridge.svg12.SVG12BridgeContext$ImplementationEventListenerMememto;

        specialinvoke $r2.<org.apache.batik.bridge.svg12.SVG12BridgeContext$ImplementationEventListenerMememto: void <init>(org.w3c.dom.events.EventTarget,java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean,org.apache.batik.bridge.BridgeContext)>(r3, r4, r5, r6, z0, r0);

        $r7 = r0.<org.apache.batik.bridge.BridgeContext: java.util.Set eventListenerSet>;

        interfaceinvoke $r7.<java.util.Set: boolean add(java.lang.Object)>($r2);

        exitmonitor r1;

        goto label3;

     label2:
        $r8 := @caughtexception;

        exitmonitor r1;

        throw $r8;

     label3:
        return;

        catch java.lang.Throwable from label1 to label2 with label2;
    }

    public org.apache.batik.bridge.BridgeContext createSubBridgeContext(org.apache.batik.dom.svg.SVGOMDocument)
    {
        org.apache.batik.bridge.svg12.DefaultXBLManager $r7;
        org.apache.batik.bridge.svg12.SVG12BridgeContext r2;
        org.apache.batik.css.engine.CSSEngine $r1, $r9;
        boolean $z0, $z1, $z2, $z3;
        org.apache.batik.bridge.ScriptingEnvironment $r6, r12;
        org.apache.batik.bridge.svg12.SVG12ScriptingEnvironment $r8;
        org.apache.batik.bridge.BridgeContext $r3, $r11;
        org.apache.batik.css.engine.CSSContext $r10;
        org.apache.batik.dom.svg.SVGOMDocument r0;
        org.apache.batik.bridge.UpdateManager $r4, $r5;

        r2 := @this: org.apache.batik.bridge.svg12.SVG12BridgeContext;

        r0 := @parameter0: org.apache.batik.dom.svg.SVGOMDocument;

        $r1 = virtualinvoke r0.<org.apache.batik.dom.AbstractStylableDocument: org.apache.batik.css.engine.CSSEngine getCSSEngine()>();

        if $r1 == null goto label1;

        $r9 = virtualinvoke r0.<org.apache.batik.dom.AbstractStylableDocument: org.apache.batik.css.engine.CSSEngine getCSSEngine()>();

        $r10 = virtualinvoke $r9.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSContext getCSSContext()>();

        $r11 = (org.apache.batik.bridge.BridgeContext) $r10;

        return $r11;

     label1:
        $r3 = specialinvoke r2.<org.apache.batik.bridge.BridgeContext: org.apache.batik.bridge.BridgeContext createSubBridgeContext(org.apache.batik.dom.svg.SVGOMDocument)>(r0);

        $z0 = virtualinvoke r2.<org.apache.batik.bridge.BridgeContext: boolean isDynamic()>();

        if $z0 == 0 goto label4;

        $z1 = virtualinvoke $r3.<org.apache.batik.bridge.BridgeContext: boolean isDynamic()>();

        if $z1 == 0 goto label4;

        $r4 = r2.<org.apache.batik.bridge.BridgeContext: org.apache.batik.bridge.UpdateManager updateManager>;

        virtualinvoke r2.<org.apache.batik.bridge.BridgeContext: void setUpdateManager(org.apache.batik.bridge.BridgeContext,org.apache.batik.bridge.UpdateManager)>($r3, $r4);

        $r5 = r2.<org.apache.batik.bridge.BridgeContext: org.apache.batik.bridge.UpdateManager updateManager>;

        if $r5 == null goto label4;

        $z2 = virtualinvoke r0.<org.apache.batik.dom.svg.SVGOMDocument: boolean isSVG12()>();

        if $z2 == 0 goto label2;

        $r8 = new org.apache.batik.bridge.svg12.SVG12ScriptingEnvironment;

        specialinvoke $r8.<org.apache.batik.bridge.svg12.SVG12ScriptingEnvironment: void <init>(org.apache.batik.bridge.BridgeContext)>($r3);

        r12 = $r8;

        goto label3;

     label2:
        $r6 = new org.apache.batik.bridge.ScriptingEnvironment;

        specialinvoke $r6.<org.apache.batik.bridge.ScriptingEnvironment: void <init>(org.apache.batik.bridge.BridgeContext)>($r3);

        r12 = $r6;

     label3:
        virtualinvoke r12.<org.apache.batik.bridge.BaseScriptingEnvironment: void loadScripts()>();

        virtualinvoke r12.<org.apache.batik.bridge.BaseScriptingEnvironment: void dispatchSVGLoadEvent()>();

        $z3 = virtualinvoke r0.<org.apache.batik.dom.svg.SVGOMDocument: boolean isSVG12()>();

        if $z3 == 0 goto label4;

        $r7 = new org.apache.batik.bridge.svg12.DefaultXBLManager;

        specialinvoke $r7.<org.apache.batik.bridge.svg12.DefaultXBLManager: void <init>(org.w3c.dom.Document,org.apache.batik.bridge.BridgeContext)>(r0, $r3);

        virtualinvoke r2.<org.apache.batik.bridge.BridgeContext: void setXBLManager(org.apache.batik.bridge.BridgeContext,org.apache.batik.dom.xbl.XBLManager)>($r3, $r7);

        virtualinvoke r0.<org.apache.batik.dom.AbstractDocument: void setXBLManager(org.apache.batik.dom.xbl.XBLManager)>($r7);

        virtualinvoke $r7.<org.apache.batik.bridge.svg12.DefaultXBLManager: void startProcessing()>();

     label4:
        return $r3;
    }

    public void startMouseCapture(org.w3c.dom.events.EventTarget, boolean, boolean)
    {
        org.w3c.dom.events.EventTarget r1;
        org.apache.batik.bridge.svg12.SVG12BridgeContext r0;
        boolean z0, z1;

        r0 := @this: org.apache.batik.bridge.svg12.SVG12BridgeContext;

        r1 := @parameter0: org.w3c.dom.events.EventTarget;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        r0.<org.apache.batik.bridge.svg12.SVG12BridgeContext: org.w3c.dom.events.EventTarget mouseCaptureTarget> = r1;

        r0.<org.apache.batik.bridge.svg12.SVG12BridgeContext: boolean mouseCaptureSendAll> = z0;

        r0.<org.apache.batik.bridge.svg12.SVG12BridgeContext: boolean mouseCaptureAutoRelease> = z1;

        return;
    }

    public void stopMouseCapture()
    {
        org.apache.batik.bridge.svg12.SVG12BridgeContext r0;

        r0 := @this: org.apache.batik.bridge.svg12.SVG12BridgeContext;

        r0.<org.apache.batik.bridge.svg12.SVG12BridgeContext: org.w3c.dom.events.EventTarget mouseCaptureTarget> = null;

        return;
    }

    static org.apache.batik.bridge.BridgeUpdateHandler access$001(org.w3c.dom.Node)
    {
        org.apache.batik.bridge.BridgeUpdateHandler $r1;
        org.w3c.dom.Node r0;

        r0 := @parameter0: org.w3c.dom.Node;

        $r1 = staticinvoke <org.apache.batik.bridge.BridgeContext: org.apache.batik.bridge.BridgeUpdateHandler getBridgeUpdateHandler(org.w3c.dom.Node)>(r0);

        return $r1;
    }

    static org.apache.batik.bridge.UserAgent access$101(org.apache.batik.bridge.svg12.SVG12BridgeContext)
    {
        org.apache.batik.bridge.UserAgent $r1;
        org.apache.batik.bridge.svg12.SVG12BridgeContext r0;

        r0 := @parameter0: org.apache.batik.bridge.svg12.SVG12BridgeContext;

        $r1 = r0.<org.apache.batik.bridge.BridgeContext: org.apache.batik.bridge.UserAgent userAgent>;

        return $r1;
    }

    static org.apache.batik.bridge.BridgeUpdateHandler access$201(org.w3c.dom.Node)
    {
        org.apache.batik.bridge.BridgeUpdateHandler $r1;
        org.w3c.dom.Node r0;

        r0 := @parameter0: org.w3c.dom.Node;

        $r1 = staticinvoke <org.apache.batik.bridge.BridgeContext: org.apache.batik.bridge.BridgeUpdateHandler getBridgeUpdateHandler(org.w3c.dom.Node)>(r0);

        return $r1;
    }

    static org.apache.batik.bridge.UserAgent access$301(org.apache.batik.bridge.svg12.SVG12BridgeContext)
    {
        org.apache.batik.bridge.UserAgent $r1;
        org.apache.batik.bridge.svg12.SVG12BridgeContext r0;

        r0 := @parameter0: org.apache.batik.bridge.svg12.SVG12BridgeContext;

        $r1 = r0.<org.apache.batik.bridge.BridgeContext: org.apache.batik.bridge.UserAgent userAgent>;

        return $r1;
    }
}
