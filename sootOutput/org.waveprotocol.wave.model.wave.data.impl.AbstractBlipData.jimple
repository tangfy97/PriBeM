public abstract class org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData extends java.lang.Object implements org.waveprotocol.wave.model.wave.data.BlipData
{
    private final java.lang.String id;
    private final org.waveprotocol.wave.model.wave.data.impl.AbstractWaveletData wavelet;
    private final org.waveprotocol.wave.model.wave.data.DocumentOperationSink content;
    private final org.waveprotocol.wave.model.wave.ParticipantId author;
    private long lastModifiedTime;
    private long lastModifiedVersion;

    protected void <init>(java.lang.String, org.waveprotocol.wave.model.wave.data.impl.AbstractWaveletData, org.waveprotocol.wave.model.wave.ParticipantId, org.waveprotocol.wave.model.wave.data.DocumentOperationSink, long, long)
    {
        org.waveprotocol.wave.model.wave.data.DocumentOperationSink r1;
        org.waveprotocol.wave.model.wave.data.impl.AbstractWaveletData r3;
        long l0, l1;
        java.lang.String r2;
        org.waveprotocol.wave.model.wave.ParticipantId r4;
        org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData r0;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: org.waveprotocol.wave.model.wave.data.impl.AbstractWaveletData;

        r4 := @parameter2: org.waveprotocol.wave.model.wave.ParticipantId;

        r1 := @parameter3: org.waveprotocol.wave.model.wave.data.DocumentOperationSink;

        l0 := @parameter4: long;

        l1 := @parameter5: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData: org.waveprotocol.wave.model.wave.data.DocumentOperationSink content> = r1;

        r0.<org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData: java.lang.String id> = r2;

        r0.<org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData: org.waveprotocol.wave.model.wave.data.impl.AbstractWaveletData wavelet> = r3;

        r0.<org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData: org.waveprotocol.wave.model.wave.ParticipantId author> = r4;

        r0.<org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData: long lastModifiedTime> = l0;

        r0.<org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData: long lastModifiedVersion> = l1;

        return;
    }

    public final java.lang.String getId()
    {
        java.lang.String $r1;
        org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData r0;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData;

        $r1 = r0.<org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData: java.lang.String id>;

        return $r1;
    }

    public final org.waveprotocol.wave.model.wave.ParticipantId getAuthor()
    {
        org.waveprotocol.wave.model.wave.ParticipantId $r1;
        org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData r0;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData;

        $r1 = r0.<org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData: org.waveprotocol.wave.model.wave.ParticipantId author>;

        return $r1;
    }

    public final long getLastModifiedTime()
    {
        long $l0;
        org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData r0;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData;

        $l0 = r0.<org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData: long lastModifiedTime>;

        return $l0;
    }

    public final long getLastModifiedVersion()
    {
        long $l0;
        org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData r0;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData;

        $l0 = r0.<org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData: long lastModifiedVersion>;

        return $l0;
    }

    public final org.waveprotocol.wave.model.wave.data.DocumentOperationSink getContent()
    {
        org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData r0;
        org.waveprotocol.wave.model.wave.data.DocumentOperationSink $r1;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData;

        $r1 = r0.<org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData: org.waveprotocol.wave.model.wave.data.DocumentOperationSink content>;

        return $r1;
    }

    public final org.waveprotocol.wave.model.wave.data.impl.AbstractWaveletData getWavelet()
    {
        org.waveprotocol.wave.model.wave.data.impl.AbstractWaveletData $r1;
        org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData r0;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData;

        $r1 = r0.<org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData: org.waveprotocol.wave.model.wave.data.impl.AbstractWaveletData wavelet>;

        return $r1;
    }

    public final void submit()
    {
        org.waveprotocol.wave.model.wave.data.impl.WaveletDataListenerManager $r2;
        org.waveprotocol.wave.model.wave.data.impl.AbstractWaveletData $r1, $r3;
        org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData r0;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData;

        $r1 = r0.<org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData: org.waveprotocol.wave.model.wave.data.impl.AbstractWaveletData wavelet>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.model.wave.data.impl.AbstractWaveletData: org.waveprotocol.wave.model.wave.data.impl.WaveletDataListenerManager getListenerManager()>();

        $r3 = r0.<org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData: org.waveprotocol.wave.model.wave.data.impl.AbstractWaveletData wavelet>;

        virtualinvoke $r2.<org.waveprotocol.wave.model.wave.data.impl.WaveletDataListenerManager: void onBlipDataSubmitted(org.waveprotocol.wave.model.wave.data.WaveletData,org.waveprotocol.wave.model.wave.data.BlipData)>($r3, r0);

        return;
    }

    public final long setLastModifiedTime(long)
    {
        org.waveprotocol.wave.model.wave.data.impl.WaveletDataListenerManager $r3;
        long l0, $l1, $l3, $l4, $l5;
        org.waveprotocol.wave.model.wave.data.impl.AbstractWaveletData $r2, $r4;
        org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData r0;
        byte $b2;
        java.lang.Long $r1;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData;

        l0 := @parameter0: long;

        $l1 = r0.<org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData: long lastModifiedTime>;

        $b2 = l0 cmp $l1;

        if $b2 != 0 goto label1;

        return l0;

     label1:
        $l3 = r0.<org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData: long lastModifiedTime>;

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        r0.<org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData: long lastModifiedTime> = l0;

        $r2 = r0.<org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData: org.waveprotocol.wave.model.wave.data.impl.AbstractWaveletData wavelet>;

        $r3 = virtualinvoke $r2.<org.waveprotocol.wave.model.wave.data.impl.AbstractWaveletData: org.waveprotocol.wave.model.wave.data.impl.WaveletDataListenerManager getListenerManager()>();

        $r4 = r0.<org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData: org.waveprotocol.wave.model.wave.data.impl.AbstractWaveletData wavelet>;

        $l4 = virtualinvoke $r1.<java.lang.Long: long longValue()>();

        virtualinvoke $r3.<org.waveprotocol.wave.model.wave.data.impl.WaveletDataListenerManager: void onBlipDataTimestampModified(org.waveprotocol.wave.model.wave.data.WaveletData,org.waveprotocol.wave.model.wave.data.BlipData,long,long)>($r4, r0, $l4, l0);

        $l5 = virtualinvoke $r1.<java.lang.Long: long longValue()>();

        return $l5;
    }

    public final long setLastModifiedVersion(long)
    {
        org.waveprotocol.wave.model.wave.data.impl.WaveletDataListenerManager $r3;
        long l0, $l1, $l3, $l4, $l5;
        org.waveprotocol.wave.model.wave.data.impl.AbstractWaveletData $r2, $r4;
        org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData r0;
        byte $b2;
        java.lang.Long $r1;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData;

        l0 := @parameter0: long;

        $l1 = r0.<org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData: long lastModifiedVersion>;

        $b2 = l0 cmp $l1;

        if $b2 != 0 goto label1;

        return l0;

     label1:
        $l3 = r0.<org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData: long lastModifiedVersion>;

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        r0.<org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData: long lastModifiedVersion> = l0;

        $r2 = r0.<org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData: org.waveprotocol.wave.model.wave.data.impl.AbstractWaveletData wavelet>;

        $r3 = virtualinvoke $r2.<org.waveprotocol.wave.model.wave.data.impl.AbstractWaveletData: org.waveprotocol.wave.model.wave.data.impl.WaveletDataListenerManager getListenerManager()>();

        $r4 = r0.<org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData: org.waveprotocol.wave.model.wave.data.impl.AbstractWaveletData wavelet>;

        $l4 = virtualinvoke $r1.<java.lang.Long: long longValue()>();

        virtualinvoke $r3.<org.waveprotocol.wave.model.wave.data.impl.WaveletDataListenerManager: void onBlipDataVersionModified(org.waveprotocol.wave.model.wave.data.WaveletData,org.waveprotocol.wave.model.wave.data.BlipData,long,long)>($r4, r0, $l4, l0);

        $l5 = virtualinvoke $r1.<java.lang.Long: long longValue()>();

        return $l5;
    }

    public final java.lang.String toString()
    {
        long $l0, $l1;
        org.waveprotocol.wave.model.wave.ParticipantId $r7;
        org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData r2;
        java.lang.String $r3, $r20;
        java.util.Set $r11;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r6, $r8, $r9, $r10, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19;

        r2 := @this: org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Blip state = [id:");

        $r3 = r2.<org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData: java.lang.String id>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[author: ");

        $r7 = r2.<org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData: org.waveprotocol.wave.model.wave.ParticipantId author>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[contributors: ");

        $r11 = virtualinvoke r2.<org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData: java.util.Set getContributors()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[lastModifiedVersion:");

        $l0 = r2.<org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData: long lastModifiedVersion>;

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[lastModifiedTime:");

        $l1 = r2.<org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData: long lastModifiedTime>;

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r20;
    }

    public final void onRemoteContentModified()
    {
        org.waveprotocol.wave.model.wave.data.impl.WaveletDataListenerManager $r2;
        org.waveprotocol.wave.model.wave.data.impl.AbstractWaveletData $r1, $r3;
        org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData r0;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData;

        $r1 = r0.<org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData: org.waveprotocol.wave.model.wave.data.impl.AbstractWaveletData wavelet>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.model.wave.data.impl.AbstractWaveletData: org.waveprotocol.wave.model.wave.data.impl.WaveletDataListenerManager getListenerManager()>();

        $r3 = r0.<org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData: org.waveprotocol.wave.model.wave.data.impl.AbstractWaveletData wavelet>;

        virtualinvoke $r2.<org.waveprotocol.wave.model.wave.data.impl.WaveletDataListenerManager: void onRemoteBlipDataContentModified(org.waveprotocol.wave.model.wave.data.WaveletData,org.waveprotocol.wave.model.wave.data.BlipData)>($r3, r0);

        return;
    }

    protected final void fireContributorAdded(org.waveprotocol.wave.model.wave.ParticipantId)
    {
        org.waveprotocol.wave.model.wave.data.impl.WaveletDataListenerManager $r2;
        org.waveprotocol.wave.model.wave.data.impl.AbstractWaveletData $r1, $r4;
        org.waveprotocol.wave.model.wave.ParticipantId r3;
        org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData r0;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData;

        r3 := @parameter0: org.waveprotocol.wave.model.wave.ParticipantId;

        $r1 = r0.<org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData: org.waveprotocol.wave.model.wave.data.impl.AbstractWaveletData wavelet>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.model.wave.data.impl.AbstractWaveletData: org.waveprotocol.wave.model.wave.data.impl.WaveletDataListenerManager getListenerManager()>();

        $r4 = r0.<org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData: org.waveprotocol.wave.model.wave.data.impl.AbstractWaveletData wavelet>;

        virtualinvoke $r2.<org.waveprotocol.wave.model.wave.data.impl.WaveletDataListenerManager: void onBlipDataContributorAdded(org.waveprotocol.wave.model.wave.data.WaveletData,org.waveprotocol.wave.model.wave.data.BlipData,org.waveprotocol.wave.model.wave.ParticipantId)>($r4, r0, r3);

        return;
    }

    protected final void fireContributorRemoved(org.waveprotocol.wave.model.wave.ParticipantId)
    {
        org.waveprotocol.wave.model.wave.data.impl.WaveletDataListenerManager $r2;
        org.waveprotocol.wave.model.wave.data.impl.AbstractWaveletData $r1, $r4;
        org.waveprotocol.wave.model.wave.ParticipantId r3;
        org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData r0;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData;

        r3 := @parameter0: org.waveprotocol.wave.model.wave.ParticipantId;

        $r1 = r0.<org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData: org.waveprotocol.wave.model.wave.data.impl.AbstractWaveletData wavelet>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.model.wave.data.impl.AbstractWaveletData: org.waveprotocol.wave.model.wave.data.impl.WaveletDataListenerManager getListenerManager()>();

        $r4 = r0.<org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData: org.waveprotocol.wave.model.wave.data.impl.AbstractWaveletData wavelet>;

        virtualinvoke $r2.<org.waveprotocol.wave.model.wave.data.impl.WaveletDataListenerManager: void onBlipDataContributorRemoved(org.waveprotocol.wave.model.wave.data.WaveletData,org.waveprotocol.wave.model.wave.data.BlipData,org.waveprotocol.wave.model.wave.ParticipantId)>($r4, r0, r3);

        return;
    }

    public volatile org.waveprotocol.wave.model.wave.data.WaveletData getWavelet()
    {
        org.waveprotocol.wave.model.wave.data.impl.AbstractWaveletData $r1;
        org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData r0;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData: org.waveprotocol.wave.model.wave.data.impl.AbstractWaveletData getWavelet()>();

        return $r1;
    }

    public volatile org.waveprotocol.wave.model.wave.data.ReadableWaveletData getWavelet()
    {
        org.waveprotocol.wave.model.wave.data.impl.AbstractWaveletData $r1;
        org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData r0;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData: org.waveprotocol.wave.model.wave.data.impl.AbstractWaveletData getWavelet()>();

        return $r1;
    }
}
