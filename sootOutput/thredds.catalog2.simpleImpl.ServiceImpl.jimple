class thredds.catalog2.simpleImpl.ServiceImpl extends java.lang.Object implements thredds.catalog2.Service, thredds.catalog2.builder.ServiceBuilder
{
    private java.lang.String name;
    private java.lang.String description;
    private thredds.catalog.ServiceType type;
    private java.net.URI baseUri;
    private java.lang.String suffix;
    private thredds.catalog2.simpleImpl.PropertyContainer propertyContainer;
    private thredds.catalog2.simpleImpl.ServiceContainer serviceContainer;
    private final thredds.catalog2.simpleImpl.GlobalServiceContainer globalServiceContainer;
    private final boolean isRootContainer;
    private boolean isBuilt;

    void <init>(java.lang.String, thredds.catalog.ServiceType, java.net.URI, thredds.catalog2.simpleImpl.GlobalServiceContainer)
    {
        thredds.catalog2.simpleImpl.GlobalServiceContainer r5, $r7, $r8;
        thredds.catalog2.simpleImpl.ServiceImpl r0;
        thredds.catalog2.simpleImpl.PropertyContainer $r4;
        java.lang.IllegalArgumentException $r9, $r10, $r11;
        thredds.catalog.ServiceType r2;
        thredds.catalog2.simpleImpl.ServiceContainer $r6;
        java.lang.String r1;
        java.net.URI r3;

        r0 := @this: thredds.catalog2.simpleImpl.ServiceImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: thredds.catalog.ServiceType;

        r3 := @parameter2: java.net.URI;

        r5 := @parameter3: thredds.catalog2.simpleImpl.GlobalServiceContainer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<thredds.catalog2.simpleImpl.ServiceImpl: boolean isBuilt> = 0;

        if r1 != null goto label1;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Name must not be null.");

        throw $r11;

     label1:
        if r2 != null goto label2;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Service type must not be null.");

        throw $r10;

     label2:
        if r3 != null goto label3;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Base URI must not be null.");

        throw $r9;

     label3:
        r0.<thredds.catalog2.simpleImpl.ServiceImpl: java.lang.String name> = r1;

        r0.<thredds.catalog2.simpleImpl.ServiceImpl: java.lang.String description> = "";

        r0.<thredds.catalog2.simpleImpl.ServiceImpl: thredds.catalog.ServiceType type> = r2;

        r0.<thredds.catalog2.simpleImpl.ServiceImpl: java.net.URI baseUri> = r3;

        r0.<thredds.catalog2.simpleImpl.ServiceImpl: java.lang.String suffix> = "";

        $r4 = new thredds.catalog2.simpleImpl.PropertyContainer;

        specialinvoke $r4.<thredds.catalog2.simpleImpl.PropertyContainer: void <init>()>();

        r0.<thredds.catalog2.simpleImpl.ServiceImpl: thredds.catalog2.simpleImpl.PropertyContainer propertyContainer> = $r4;

        if r5 != null goto label4;

        r0.<thredds.catalog2.simpleImpl.ServiceImpl: boolean isRootContainer> = 1;

        $r8 = new thredds.catalog2.simpleImpl.GlobalServiceContainer;

        specialinvoke $r8.<thredds.catalog2.simpleImpl.GlobalServiceContainer: void <init>()>();

        r0.<thredds.catalog2.simpleImpl.ServiceImpl: thredds.catalog2.simpleImpl.GlobalServiceContainer globalServiceContainer> = $r8;

        goto label5;

     label4:
        r0.<thredds.catalog2.simpleImpl.ServiceImpl: boolean isRootContainer> = 0;

        r0.<thredds.catalog2.simpleImpl.ServiceImpl: thredds.catalog2.simpleImpl.GlobalServiceContainer globalServiceContainer> = r5;

     label5:
        $r6 = new thredds.catalog2.simpleImpl.ServiceContainer;

        $r7 = r0.<thredds.catalog2.simpleImpl.ServiceImpl: thredds.catalog2.simpleImpl.GlobalServiceContainer globalServiceContainer>;

        specialinvoke $r6.<thredds.catalog2.simpleImpl.ServiceContainer: void <init>(thredds.catalog2.simpleImpl.GlobalServiceContainer)>($r7);

        r0.<thredds.catalog2.simpleImpl.ServiceImpl: thredds.catalog2.simpleImpl.ServiceContainer serviceContainer> = $r6;

        return;
    }

    public java.lang.String getName()
    {
        java.lang.String $r1;
        thredds.catalog2.simpleImpl.ServiceImpl r0;

        r0 := @this: thredds.catalog2.simpleImpl.ServiceImpl;

        $r1 = r0.<thredds.catalog2.simpleImpl.ServiceImpl: java.lang.String name>;

        return $r1;
    }

    public void setDescription(java.lang.String)
    {
        java.lang.IllegalStateException $r2;
        thredds.catalog2.simpleImpl.ServiceImpl r0;
        java.lang.String r1, $r3;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.ServiceImpl;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<thredds.catalog2.simpleImpl.ServiceImpl: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This ServiceBuilder has been built.");

        throw $r2;

     label1:
        if r1 == null goto label2;

        $r3 = r1;

        goto label3;

     label2:
        $r3 = "";

     label3:
        r0.<thredds.catalog2.simpleImpl.ServiceImpl: java.lang.String description> = $r3;

        return;
    }

    public java.lang.String getDescription()
    {
        java.lang.String $r1;
        thredds.catalog2.simpleImpl.ServiceImpl r0;

        r0 := @this: thredds.catalog2.simpleImpl.ServiceImpl;

        $r1 = r0.<thredds.catalog2.simpleImpl.ServiceImpl: java.lang.String description>;

        return $r1;
    }

    public void setType(thredds.catalog.ServiceType)
    {
        java.lang.IllegalStateException $r3;
        thredds.catalog.ServiceType r1;
        thredds.catalog2.simpleImpl.ServiceImpl r0;
        java.lang.IllegalArgumentException $r2;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.ServiceImpl;

        r1 := @parameter0: thredds.catalog.ServiceType;

        $z0 = r0.<thredds.catalog2.simpleImpl.ServiceImpl: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This ServiceBuilder has been built.");

        throw $r3;

     label1:
        if r1 != null goto label2;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Service type must not be null.");

        throw $r2;

     label2:
        r0.<thredds.catalog2.simpleImpl.ServiceImpl: thredds.catalog.ServiceType type> = r1;

        return;
    }

    public thredds.catalog.ServiceType getType()
    {
        thredds.catalog.ServiceType $r1;
        thredds.catalog2.simpleImpl.ServiceImpl r0;

        r0 := @this: thredds.catalog2.simpleImpl.ServiceImpl;

        $r1 = r0.<thredds.catalog2.simpleImpl.ServiceImpl: thredds.catalog.ServiceType type>;

        return $r1;
    }

    public void setBaseUri(java.net.URI)
    {
        java.lang.IllegalStateException $r3;
        thredds.catalog2.simpleImpl.ServiceImpl r0;
        java.net.URI r1;
        java.lang.IllegalArgumentException $r2;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.ServiceImpl;

        r1 := @parameter0: java.net.URI;

        $z0 = r0.<thredds.catalog2.simpleImpl.ServiceImpl: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This ServiceBuilder has been built.");

        throw $r3;

     label1:
        if r1 != null goto label2;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Base URI must not be null.");

        throw $r2;

     label2:
        r0.<thredds.catalog2.simpleImpl.ServiceImpl: java.net.URI baseUri> = r1;

        return;
    }

    public java.net.URI getBaseUri()
    {
        java.net.URI $r1;
        thredds.catalog2.simpleImpl.ServiceImpl r0;

        r0 := @this: thredds.catalog2.simpleImpl.ServiceImpl;

        $r1 = r0.<thredds.catalog2.simpleImpl.ServiceImpl: java.net.URI baseUri>;

        return $r1;
    }

    public void setSuffix(java.lang.String)
    {
        java.lang.IllegalStateException $r2;
        thredds.catalog2.simpleImpl.ServiceImpl r0;
        java.lang.String r1, $r3;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.ServiceImpl;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<thredds.catalog2.simpleImpl.ServiceImpl: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This ServiceBuilder has been built.");

        throw $r2;

     label1:
        if r1 == null goto label2;

        $r3 = r1;

        goto label3;

     label2:
        $r3 = "";

     label3:
        r0.<thredds.catalog2.simpleImpl.ServiceImpl: java.lang.String suffix> = $r3;

        return;
    }

    public java.lang.String getSuffix()
    {
        java.lang.String $r1;
        thredds.catalog2.simpleImpl.ServiceImpl r0;

        r0 := @this: thredds.catalog2.simpleImpl.ServiceImpl;

        $r1 = r0.<thredds.catalog2.simpleImpl.ServiceImpl: java.lang.String suffix>;

        return $r1;
    }

    public void addProperty(java.lang.String, java.lang.String)
    {
        java.lang.IllegalStateException $r4;
        thredds.catalog2.simpleImpl.ServiceImpl r0;
        thredds.catalog2.simpleImpl.PropertyContainer $r3;
        java.lang.String r1, r2;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.ServiceImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $z0 = r0.<thredds.catalog2.simpleImpl.ServiceImpl: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This ServiceBuilder has been built.");

        throw $r4;

     label1:
        $r3 = r0.<thredds.catalog2.simpleImpl.ServiceImpl: thredds.catalog2.simpleImpl.PropertyContainer propertyContainer>;

        virtualinvoke $r3.<thredds.catalog2.simpleImpl.PropertyContainer: void addProperty(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    public boolean removeProperty(java.lang.String)
    {
        java.lang.IllegalStateException $r3;
        thredds.catalog2.simpleImpl.ServiceImpl r0;
        thredds.catalog2.simpleImpl.PropertyContainer $r2;
        java.lang.String r1;
        boolean $z0, $z1;

        r0 := @this: thredds.catalog2.simpleImpl.ServiceImpl;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<thredds.catalog2.simpleImpl.ServiceImpl: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This ServiceBuilder has been built.");

        throw $r3;

     label1:
        $r2 = r0.<thredds.catalog2.simpleImpl.ServiceImpl: thredds.catalog2.simpleImpl.PropertyContainer propertyContainer>;

        $z1 = virtualinvoke $r2.<thredds.catalog2.simpleImpl.PropertyContainer: boolean removeProperty(java.lang.String)>(r1);

        return $z1;
    }

    public java.util.List getPropertyNames()
    {
        java.lang.IllegalStateException $r3;
        java.util.List $r2;
        thredds.catalog2.simpleImpl.ServiceImpl r0;
        thredds.catalog2.simpleImpl.PropertyContainer $r1;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.ServiceImpl;

        $z0 = r0.<thredds.catalog2.simpleImpl.ServiceImpl: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This ServiceBuilder has been built.");

        throw $r3;

     label1:
        $r1 = r0.<thredds.catalog2.simpleImpl.ServiceImpl: thredds.catalog2.simpleImpl.PropertyContainer propertyContainer>;

        $r2 = virtualinvoke $r1.<thredds.catalog2.simpleImpl.PropertyContainer: java.util.List getPropertyNames()>();

        return $r2;
    }

    public java.lang.String getPropertyValue(java.lang.String)
    {
        java.lang.IllegalStateException $r4;
        thredds.catalog2.simpleImpl.ServiceImpl r0;
        thredds.catalog2.simpleImpl.PropertyContainer $r2;
        java.lang.String r1, $r3;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.ServiceImpl;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<thredds.catalog2.simpleImpl.ServiceImpl: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This ServiceBuilder has been built.");

        throw $r4;

     label1:
        $r2 = r0.<thredds.catalog2.simpleImpl.ServiceImpl: thredds.catalog2.simpleImpl.PropertyContainer propertyContainer>;

        $r3 = virtualinvoke $r2.<thredds.catalog2.simpleImpl.PropertyContainer: java.lang.String getPropertyValue(java.lang.String)>(r1);

        return $r3;
    }

    public java.util.List getProperties()
    {
        java.lang.IllegalStateException $r3;
        java.util.List $r2;
        thredds.catalog2.simpleImpl.ServiceImpl r0;
        thredds.catalog2.simpleImpl.PropertyContainer $r1;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.ServiceImpl;

        $z0 = r0.<thredds.catalog2.simpleImpl.ServiceImpl: boolean isBuilt>;

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This Service has escaped from its ServiceBuilder before build() was called.");

        throw $r3;

     label1:
        $r1 = r0.<thredds.catalog2.simpleImpl.ServiceImpl: thredds.catalog2.simpleImpl.PropertyContainer propertyContainer>;

        $r2 = virtualinvoke $r1.<thredds.catalog2.simpleImpl.PropertyContainer: java.util.List getProperties()>();

        return $r2;
    }

    public thredds.catalog2.Property getPropertyByName(java.lang.String)
    {
        java.lang.IllegalStateException $r4;
        thredds.catalog2.simpleImpl.ServiceImpl r0;
        thredds.catalog2.simpleImpl.PropertyContainer $r2;
        thredds.catalog2.Property $r3;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.ServiceImpl;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<thredds.catalog2.simpleImpl.ServiceImpl: boolean isBuilt>;

        if $z0 != 0 goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This Service has escaped from its ServiceBuilder before build() was called.");

        throw $r4;

     label1:
        $r2 = r0.<thredds.catalog2.simpleImpl.ServiceImpl: thredds.catalog2.simpleImpl.PropertyContainer propertyContainer>;

        $r3 = virtualinvoke $r2.<thredds.catalog2.simpleImpl.PropertyContainer: thredds.catalog2.Property getPropertyByName(java.lang.String)>(r1);

        return $r3;
    }

    public thredds.catalog2.builder.ServiceBuilder addService(java.lang.String, thredds.catalog.ServiceType, java.net.URI)
    {
        thredds.catalog.ServiceType r2;
        thredds.catalog2.simpleImpl.ServiceImpl r0, $r5;
        thredds.catalog2.simpleImpl.ServiceContainer $r4;
        java.lang.String r1;
        java.net.URI r3;

        r0 := @this: thredds.catalog2.simpleImpl.ServiceImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: thredds.catalog.ServiceType;

        r3 := @parameter2: java.net.URI;

        $r4 = r0.<thredds.catalog2.simpleImpl.ServiceImpl: thredds.catalog2.simpleImpl.ServiceContainer serviceContainer>;

        $r5 = virtualinvoke $r4.<thredds.catalog2.simpleImpl.ServiceContainer: thredds.catalog2.simpleImpl.ServiceImpl addService(java.lang.String,thredds.catalog.ServiceType,java.net.URI)>(r1, r2, r3);

        return $r5;
    }

    public boolean removeService(thredds.catalog2.builder.ServiceBuilder)
    {
        thredds.catalog2.builder.ServiceBuilder r0;
        thredds.catalog2.simpleImpl.ServiceImpl r1, $r2;
        thredds.catalog2.simpleImpl.ServiceContainer $r3;
        boolean $z0;

        r1 := @this: thredds.catalog2.simpleImpl.ServiceImpl;

        r0 := @parameter0: thredds.catalog2.builder.ServiceBuilder;

        if r0 != null goto label1;

        return 0;

     label1:
        $r3 = r1.<thredds.catalog2.simpleImpl.ServiceImpl: thredds.catalog2.simpleImpl.ServiceContainer serviceContainer>;

        $r2 = (thredds.catalog2.simpleImpl.ServiceImpl) r0;

        $z0 = virtualinvoke $r3.<thredds.catalog2.simpleImpl.ServiceContainer: boolean removeService(thredds.catalog2.simpleImpl.ServiceImpl)>($r2);

        return $z0;
    }

    public java.util.List getServices()
    {
        java.lang.IllegalStateException $r3;
        java.util.List $r2;
        thredds.catalog2.simpleImpl.ServiceImpl r0;
        thredds.catalog2.simpleImpl.ServiceContainer $r1;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.ServiceImpl;

        $z0 = r0.<thredds.catalog2.simpleImpl.ServiceImpl: boolean isBuilt>;

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This Service has escaped from its ServiceBuilder without being built.");

        throw $r3;

     label1:
        $r1 = r0.<thredds.catalog2.simpleImpl.ServiceImpl: thredds.catalog2.simpleImpl.ServiceContainer serviceContainer>;

        $r2 = virtualinvoke $r1.<thredds.catalog2.simpleImpl.ServiceContainer: java.util.List getServices()>();

        return $r2;
    }

    public thredds.catalog2.Service getServiceByName(java.lang.String)
    {
        java.lang.IllegalStateException $r4;
        thredds.catalog2.simpleImpl.ServiceImpl r0;
        thredds.catalog2.simpleImpl.ServiceContainer $r2;
        java.lang.String r1;
        thredds.catalog2.Service $r3;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.ServiceImpl;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<thredds.catalog2.simpleImpl.ServiceImpl: boolean isBuilt>;

        if $z0 != 0 goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This Service has escaped from its ServiceBuilder without being built.");

        throw $r4;

     label1:
        $r2 = r0.<thredds.catalog2.simpleImpl.ServiceImpl: thredds.catalog2.simpleImpl.ServiceContainer serviceContainer>;

        $r3 = virtualinvoke $r2.<thredds.catalog2.simpleImpl.ServiceContainer: thredds.catalog2.Service getServiceByName(java.lang.String)>(r1);

        return $r3;
    }

    public thredds.catalog2.Service findServiceByNameGlobally(java.lang.String)
    {
        thredds.catalog2.simpleImpl.GlobalServiceContainer $r2;
        java.lang.IllegalStateException $r4;
        thredds.catalog2.simpleImpl.ServiceImpl r0, $r3;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.ServiceImpl;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<thredds.catalog2.simpleImpl.ServiceImpl: boolean isBuilt>;

        if $z0 != 0 goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This Service has escaped its Builder before being built.");

        throw $r4;

     label1:
        $r2 = r0.<thredds.catalog2.simpleImpl.ServiceImpl: thredds.catalog2.simpleImpl.GlobalServiceContainer globalServiceContainer>;

        $r3 = virtualinvoke $r2.<thredds.catalog2.simpleImpl.GlobalServiceContainer: thredds.catalog2.simpleImpl.ServiceImpl getServiceByGloballyUniqueName(java.lang.String)>(r1);

        return $r3;
    }

    public java.util.List getServiceBuilders()
    {
        java.lang.IllegalStateException $r3;
        java.util.List $r2;
        thredds.catalog2.simpleImpl.ServiceImpl r0;
        thredds.catalog2.simpleImpl.ServiceContainer $r1;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.ServiceImpl;

        $z0 = r0.<thredds.catalog2.simpleImpl.ServiceImpl: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This ServiceBuilder has been built.");

        throw $r3;

     label1:
        $r1 = r0.<thredds.catalog2.simpleImpl.ServiceImpl: thredds.catalog2.simpleImpl.ServiceContainer serviceContainer>;

        $r2 = virtualinvoke $r1.<thredds.catalog2.simpleImpl.ServiceContainer: java.util.List getServiceBuilders()>();

        return $r2;
    }

    public thredds.catalog2.builder.ServiceBuilder getServiceBuilderByName(java.lang.String)
    {
        thredds.catalog2.builder.ServiceBuilder $r3;
        java.lang.IllegalStateException $r4;
        thredds.catalog2.simpleImpl.ServiceImpl r0;
        thredds.catalog2.simpleImpl.ServiceContainer $r2;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.ServiceImpl;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<thredds.catalog2.simpleImpl.ServiceImpl: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This ServiceBuilder has been built.");

        throw $r4;

     label1:
        $r2 = r0.<thredds.catalog2.simpleImpl.ServiceImpl: thredds.catalog2.simpleImpl.ServiceContainer serviceContainer>;

        $r3 = virtualinvoke $r2.<thredds.catalog2.simpleImpl.ServiceContainer: thredds.catalog2.builder.ServiceBuilder getServiceBuilderByName(java.lang.String)>(r1);

        return $r3;
    }

    public thredds.catalog2.builder.ServiceBuilder findServiceBuilderByNameGlobally(java.lang.String)
    {
        thredds.catalog2.simpleImpl.GlobalServiceContainer $r2;
        java.lang.IllegalStateException $r4;
        thredds.catalog2.simpleImpl.ServiceImpl r0, $r3;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.ServiceImpl;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<thredds.catalog2.simpleImpl.ServiceImpl: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This ServiceBuilder has been built.");

        throw $r4;

     label1:
        $r2 = r0.<thredds.catalog2.simpleImpl.ServiceImpl: thredds.catalog2.simpleImpl.GlobalServiceContainer globalServiceContainer>;

        $r3 = virtualinvoke $r2.<thredds.catalog2.simpleImpl.GlobalServiceContainer: thredds.catalog2.simpleImpl.ServiceImpl getServiceByGloballyUniqueName(java.lang.String)>(r1);

        return $r3;
    }

    public boolean isBuilt()
    {
        thredds.catalog2.simpleImpl.ServiceImpl r0;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.ServiceImpl;

        $z0 = r0.<thredds.catalog2.simpleImpl.ServiceImpl: boolean isBuilt>;

        return $z0;
    }

    public thredds.catalog2.builder.BuilderIssues getIssues()
    {
        thredds.catalog2.simpleImpl.GlobalServiceContainer $r8;
        thredds.catalog2.simpleImpl.ServiceImpl r0;
        thredds.catalog2.simpleImpl.PropertyContainer $r3;
        thredds.catalog2.builder.BuilderIssues $r2, $r4, $r9;
        thredds.catalog2.builder.BuilderIssue$Severity $r7;
        thredds.catalog2.simpleImpl.ServiceContainer $r1, $r5;
        java.net.URI $r6;
        boolean $z0, $z1;

        r0 := @this: thredds.catalog2.simpleImpl.ServiceImpl;

        $r1 = r0.<thredds.catalog2.simpleImpl.ServiceImpl: thredds.catalog2.simpleImpl.ServiceContainer serviceContainer>;

        $r2 = virtualinvoke $r1.<thredds.catalog2.simpleImpl.ServiceContainer: thredds.catalog2.builder.BuilderIssues getIssues()>();

        $z0 = r0.<thredds.catalog2.simpleImpl.ServiceImpl: boolean isRootContainer>;

        if $z0 == 0 goto label1;

        $r8 = r0.<thredds.catalog2.simpleImpl.ServiceImpl: thredds.catalog2.simpleImpl.GlobalServiceContainer globalServiceContainer>;

        $r9 = virtualinvoke $r8.<thredds.catalog2.simpleImpl.GlobalServiceContainer: thredds.catalog2.builder.BuilderIssues getIssues(thredds.catalog2.builder.ThreddsBuilder)>(r0);

        virtualinvoke $r2.<thredds.catalog2.builder.BuilderIssues: void addAllIssues(thredds.catalog2.builder.BuilderIssues)>($r9);

     label1:
        $r3 = r0.<thredds.catalog2.simpleImpl.ServiceImpl: thredds.catalog2.simpleImpl.PropertyContainer propertyContainer>;

        $r4 = virtualinvoke $r3.<thredds.catalog2.simpleImpl.PropertyContainer: thredds.catalog2.builder.BuilderIssues getIssues()>();

        virtualinvoke $r2.<thredds.catalog2.builder.BuilderIssues: void addAllIssues(thredds.catalog2.builder.BuilderIssues)>($r4);

        $r5 = r0.<thredds.catalog2.simpleImpl.ServiceImpl: thredds.catalog2.simpleImpl.ServiceContainer serviceContainer>;

        $z1 = virtualinvoke $r5.<thredds.catalog2.simpleImpl.ServiceContainer: boolean isEmpty()>();

        if $z1 == 0 goto label2;

        $r6 = r0.<thredds.catalog2.simpleImpl.ServiceImpl: java.net.URI baseUri>;

        if $r6 != null goto label2;

        $r7 = <thredds.catalog2.builder.BuilderIssue$Severity: thredds.catalog2.builder.BuilderIssue$Severity WARNING>;

        virtualinvoke $r2.<thredds.catalog2.builder.BuilderIssues: void addIssue(thredds.catalog2.builder.BuilderIssue$Severity,java.lang.String,thredds.catalog2.builder.ThreddsBuilder,java.lang.Exception)>($r7, "Non-compound services must have base URI.", r0, null);

     label2:
        return $r2;
    }

    public thredds.catalog2.Service build() throws thredds.catalog2.builder.BuilderException
    {
        thredds.catalog2.simpleImpl.ServiceImpl r0;
        thredds.catalog2.simpleImpl.PropertyContainer $r1;
        thredds.catalog2.simpleImpl.ServiceContainer $r2;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.ServiceImpl;

        $z0 = r0.<thredds.catalog2.simpleImpl.ServiceImpl: boolean isBuilt>;

        if $z0 == 0 goto label1;

        return r0;

     label1:
        $r1 = r0.<thredds.catalog2.simpleImpl.ServiceImpl: thredds.catalog2.simpleImpl.PropertyContainer propertyContainer>;

        virtualinvoke $r1.<thredds.catalog2.simpleImpl.PropertyContainer: void build()>();

        $r2 = r0.<thredds.catalog2.simpleImpl.ServiceImpl: thredds.catalog2.simpleImpl.ServiceContainer serviceContainer>;

        virtualinvoke $r2.<thredds.catalog2.simpleImpl.ServiceContainer: void build()>();

        r0.<thredds.catalog2.simpleImpl.ServiceImpl: boolean isBuilt> = 1;

        return r0;
    }

    public volatile java.lang.Object build() throws thredds.catalog2.builder.BuilderException
    {
        thredds.catalog2.Service $r1;
        thredds.catalog2.simpleImpl.ServiceImpl r0;

        r0 := @this: thredds.catalog2.simpleImpl.ServiceImpl;

        $r1 = virtualinvoke r0.<thredds.catalog2.simpleImpl.ServiceImpl: thredds.catalog2.Service build()>();

        return $r1;
    }
}
