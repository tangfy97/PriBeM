class com.sun.xml.bind.v2.runtime.property.ArrayReferenceNodeProperty extends com.sun.xml.bind.v2.runtime.property.ArrayERProperty
{
    private final com.sun.xml.bind.v2.util.QNameMap expectedElements;
    private final boolean isMixed;
    private final javax.xml.bind.'annotation'.DomHandler domHandler;
    private final com.sun.xml.bind.v2.model.core.WildcardMode wcMode;

    public void <init>(com.sun.xml.bind.v2.runtime.JAXBContextImpl, com.sun.xml.bind.v2.model.runtime.RuntimeReferencePropertyInfo)
    {
        com.sun.xml.bind.v2.runtime.property.ArrayReferenceNodeProperty r0;
        com.sun.xml.bind.v2.util.QNameMap $r4, $r16;
        javax.xml.bind.'annotation'.DomHandler $r11;
        com.sun.xml.bind.v2.model.core.WildcardMode $r7, $r12;
        com.sun.xml.bind.v2.model.runtime.RuntimeElement r14;
        java.lang.String $r18, $r20;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r1;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r6;
        java.util.Set $r5;
        com.sun.xml.bind.v2.model.runtime.RuntimeReferencePropertyInfo r2;
        java.lang.Object $r8, $r10, $r13;
        java.lang.Class $r9;
        javax.xml.namespace.QName $r3, $r17, $r19;
        com.sun.xml.bind.v2.runtime.JaxBeanInfo $r15;

        r0 := @this: com.sun.xml.bind.v2.runtime.property.ArrayReferenceNodeProperty;

        r1 := @parameter0: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        r2 := @parameter1: com.sun.xml.bind.v2.model.runtime.RuntimeReferencePropertyInfo;

        $r3 = interfaceinvoke r2.<com.sun.xml.bind.v2.model.runtime.RuntimeReferencePropertyInfo: javax.xml.namespace.QName getXmlName()>();

        $z0 = interfaceinvoke r2.<com.sun.xml.bind.v2.model.runtime.RuntimeReferencePropertyInfo: boolean isCollectionNillable()>();

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.property.ArrayERProperty: void <init>(com.sun.xml.bind.v2.runtime.JAXBContextImpl,com.sun.xml.bind.v2.model.runtime.RuntimePropertyInfo,javax.xml.namespace.QName,boolean)>(r1, r2, $r3, $z0);

        $r4 = new com.sun.xml.bind.v2.util.QNameMap;

        specialinvoke $r4.<com.sun.xml.bind.v2.util.QNameMap: void <init>()>();

        r0.<com.sun.xml.bind.v2.runtime.property.ArrayReferenceNodeProperty: com.sun.xml.bind.v2.util.QNameMap expectedElements> = $r4;

        $r5 = interfaceinvoke r2.<com.sun.xml.bind.v2.model.runtime.RuntimeReferencePropertyInfo: java.util.Set getElements()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r13 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r14 = (com.sun.xml.bind.v2.model.runtime.RuntimeElement) $r13;

        $r15 = virtualinvoke r1.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.runtime.JaxBeanInfo getOrCreate(com.sun.xml.bind.v2.model.runtime.RuntimeTypeInfo)>(r14);

        $r16 = r0.<com.sun.xml.bind.v2.runtime.property.ArrayReferenceNodeProperty: com.sun.xml.bind.v2.util.QNameMap expectedElements>;

        $r17 = interfaceinvoke r14.<com.sun.xml.bind.v2.model.runtime.RuntimeElement: javax.xml.namespace.QName getElementName()>();

        $r18 = virtualinvoke $r17.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r19 = interfaceinvoke r14.<com.sun.xml.bind.v2.model.runtime.RuntimeElement: javax.xml.namespace.QName getElementName()>();

        $r20 = virtualinvoke $r19.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        virtualinvoke $r16.<com.sun.xml.bind.v2.util.QNameMap: void put(java.lang.String,java.lang.String,java.lang.Object)>($r18, $r20, $r15);

        goto label1;

     label2:
        $z2 = interfaceinvoke r2.<com.sun.xml.bind.v2.model.runtime.RuntimeReferencePropertyInfo: boolean isMixed()>();

        r0.<com.sun.xml.bind.v2.runtime.property.ArrayReferenceNodeProperty: boolean isMixed> = $z2;

        $r7 = interfaceinvoke r2.<com.sun.xml.bind.v2.model.runtime.RuntimeReferencePropertyInfo: com.sun.xml.bind.v2.model.core.WildcardMode getWildcard()>();

        if $r7 == null goto label3;

        $r8 = interfaceinvoke r2.<com.sun.xml.bind.v2.model.runtime.RuntimeReferencePropertyInfo: java.lang.Object getDOMHandler()>();

        $r9 = (java.lang.Class) $r8;

        $r10 = staticinvoke <com.sun.xml.bind.v2.ClassFactory: java.lang.Object create(java.lang.Class)>($r9);

        $r11 = (javax.xml.bind.'annotation'.DomHandler) $r10;

        r0.<com.sun.xml.bind.v2.runtime.property.ArrayReferenceNodeProperty: javax.xml.bind.'annotation'.DomHandler domHandler> = $r11;

        $r12 = interfaceinvoke r2.<com.sun.xml.bind.v2.model.runtime.RuntimeReferencePropertyInfo: com.sun.xml.bind.v2.model.core.WildcardMode getWildcard()>();

        r0.<com.sun.xml.bind.v2.runtime.property.ArrayReferenceNodeProperty: com.sun.xml.bind.v2.model.core.WildcardMode wcMode> = $r12;

        goto label4;

     label3:
        r0.<com.sun.xml.bind.v2.runtime.property.ArrayReferenceNodeProperty: javax.xml.bind.'annotation'.DomHandler domHandler> = null;

        r0.<com.sun.xml.bind.v2.runtime.property.ArrayReferenceNodeProperty: com.sun.xml.bind.v2.model.core.WildcardMode wcMode> = null;

     label4:
        return;
    }

    protected final void serializeListBody(java.lang.Object, com.sun.xml.bind.v2.runtime.XMLSerializer, java.lang.Object) throws java.io.IOException, javax.xml.stream.XMLStreamException, org.xml.sax.SAXException
    {
        com.sun.xml.bind.v2.runtime.reflect.ListIterator $r4;
        com.sun.xml.bind.v2.runtime.property.ArrayReferenceNodeProperty r0;
        javax.xml.bind.'annotation'.DomHandler $r9, $r12;
        java.lang.String $r11, $r14, $r16;
        boolean $z0, $z1;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl $r6;
        com.sun.xml.bind.v2.runtime.reflect.Lister $r3;
        javax.xml.bind.JAXBException $r15;
        com.sun.xml.bind.v2.runtime.XMLSerializer r2;
        java.lang.Object r1, $r5, r10;
        java.lang.Class $r8, $r13;
        com.sun.xml.bind.v2.runtime.JaxBeanInfo $r7;

        r0 := @this: com.sun.xml.bind.v2.runtime.property.ArrayReferenceNodeProperty;

        r10 := @parameter0: java.lang.Object;

        r2 := @parameter1: com.sun.xml.bind.v2.runtime.XMLSerializer;

        r1 := @parameter2: java.lang.Object;

        $r3 = r0.<com.sun.xml.bind.v2.runtime.property.ArrayReferenceNodeProperty: com.sun.xml.bind.v2.runtime.reflect.Lister lister>;

        $r4 = virtualinvoke $r3.<com.sun.xml.bind.v2.runtime.reflect.Lister: com.sun.xml.bind.v2.runtime.reflect.ListIterator iterator(java.lang.Object,com.sun.xml.bind.v2.runtime.XMLSerializer)>(r1, r2);

     label1:
        $z1 = interfaceinvoke $r4.<com.sun.xml.bind.v2.runtime.reflect.ListIterator: boolean hasNext()>();

        if $z1 == 0 goto label7;

     label2:
        $r5 = interfaceinvoke $r4.<com.sun.xml.bind.v2.runtime.reflect.ListIterator: java.lang.Object next()>();

        if $r5 == null goto label5;

        $z0 = r0.<com.sun.xml.bind.v2.runtime.property.ArrayReferenceNodeProperty: boolean isMixed>;

        if $z0 == 0 goto label3;

        $r13 = virtualinvoke $r5.<java.lang.Object: java.lang.Class getClass()>();

        if $r13 != class "Ljava/lang/String;" goto label3;

        $r14 = (java.lang.String) $r5;

        virtualinvoke r2.<com.sun.xml.bind.v2.runtime.XMLSerializer: void text(java.lang.String,java.lang.String)>($r14, null);

        goto label5;

     label3:
        $r6 = r2.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.JAXBContextImpl grammar>;

        $r7 = virtualinvoke $r6.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.runtime.JaxBeanInfo getBeanInfo(java.lang.Object,boolean)>($r5, 1);

        $r8 = $r7.<com.sun.xml.bind.v2.runtime.JaxBeanInfo: java.lang.Class jaxbType>;

        if $r8 != class "Ljava/lang/Object;" goto label4;

        $r9 = r0.<com.sun.xml.bind.v2.runtime.property.ArrayReferenceNodeProperty: javax.xml.bind.'annotation'.DomHandler domHandler>;

        if $r9 == null goto label4;

        $r12 = r0.<com.sun.xml.bind.v2.runtime.property.ArrayReferenceNodeProperty: javax.xml.bind.'annotation'.DomHandler domHandler>;

        $r11 = r0.<com.sun.xml.bind.v2.runtime.property.ArrayReferenceNodeProperty: java.lang.String fieldName>;

        virtualinvoke r2.<com.sun.xml.bind.v2.runtime.XMLSerializer: void writeDom(java.lang.Object,javax.xml.bind.'annotation'.DomHandler,java.lang.Object,java.lang.String)>($r5, $r12, r10, $r11);

        goto label5;

     label4:
        virtualinvoke $r7.<com.sun.xml.bind.v2.runtime.JaxBeanInfo: void serializeRoot(java.lang.Object,com.sun.xml.bind.v2.runtime.XMLSerializer)>($r5, r2);

     label5:
        goto label1;

     label6:
        $r15 := @caughtexception;

        $r16 = r0.<com.sun.xml.bind.v2.runtime.property.ArrayReferenceNodeProperty: java.lang.String fieldName>;

        virtualinvoke r2.<com.sun.xml.bind.v2.runtime.XMLSerializer: void reportError(java.lang.String,java.lang.Throwable)>($r16, $r15);

        goto label1;

     label7:
        return;

        catch javax.xml.bind.JAXBException from label2 to label5 with label6;
    }

    public void createBodyUnmarshaller(com.sun.xml.bind.v2.runtime.property.UnmarshallerChain, com.sun.xml.bind.v2.util.QNameMap)
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.ChildLoader $r8, $r13, $r20;
        com.sun.xml.bind.v2.runtime.property.UnmarshallerChain r0;
        com.sun.xml.bind.v2.runtime.unmarshaller.Loader $r24;
        com.sun.xml.bind.v2.runtime.property.ArrayReferenceNodeProperty r2;
        com.sun.xml.bind.v2.util.QNameMap $r3, r7;
        javax.xml.bind.'annotation'.DomHandler $r6, $r11;
        int $i0;
        com.sun.xml.bind.v2.model.core.WildcardMode $r10;
        com.sun.xml.bind.v2.runtime.property.ArrayERProperty$ReceiverImpl $r1;
        java.lang.String $r22, $r23;
        boolean $z0, $z1;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl $r21;
        com.sun.xml.bind.v2.runtime.property.ArrayReferenceNodeProperty$MixedTextLoader $r14;
        java.util.Iterator $r5;
        com.sun.xml.bind.v2.runtime.unmarshaller.WildcardLoader $r9;
        java.util.Set $r4;
        com.sun.xml.bind.v2.util.QNameMap$Entry r17;
        java.lang.Object $r16, $r18;
        javax.xml.namespace.QName $r12, $r15;
        com.sun.xml.bind.v2.runtime.JaxBeanInfo r19;

        r2 := @this: com.sun.xml.bind.v2.runtime.property.ArrayReferenceNodeProperty;

        r0 := @parameter0: com.sun.xml.bind.v2.runtime.property.UnmarshallerChain;

        r7 := @parameter1: com.sun.xml.bind.v2.util.QNameMap;

        $i0 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.property.UnmarshallerChain: int allocateOffset()>();

        $r1 = new com.sun.xml.bind.v2.runtime.property.ArrayERProperty$ReceiverImpl;

        specialinvoke $r1.<com.sun.xml.bind.v2.runtime.property.ArrayERProperty$ReceiverImpl: void <init>(com.sun.xml.bind.v2.runtime.property.ArrayERProperty,int)>(r2, $i0);

        $r3 = r2.<com.sun.xml.bind.v2.runtime.property.ArrayReferenceNodeProperty: com.sun.xml.bind.v2.util.QNameMap expectedElements>;

        $r4 = virtualinvoke $r3.<com.sun.xml.bind.v2.util.QNameMap: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r16 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r17 = (com.sun.xml.bind.v2.util.QNameMap$Entry) $r16;

        $r18 = virtualinvoke r17.<com.sun.xml.bind.v2.util.QNameMap$Entry: java.lang.Object getValue()>();

        r19 = (com.sun.xml.bind.v2.runtime.JaxBeanInfo) $r18;

        $r22 = r17.<com.sun.xml.bind.v2.util.QNameMap$Entry: java.lang.String nsUri>;

        $r23 = r17.<com.sun.xml.bind.v2.util.QNameMap$Entry: java.lang.String localName>;

        $r20 = new com.sun.xml.bind.v2.runtime.unmarshaller.ChildLoader;

        $r21 = r0.<com.sun.xml.bind.v2.runtime.property.UnmarshallerChain: com.sun.xml.bind.v2.runtime.JAXBContextImpl context>;

        $r24 = virtualinvoke r19.<com.sun.xml.bind.v2.runtime.JaxBeanInfo: com.sun.xml.bind.v2.runtime.unmarshaller.Loader getLoader(com.sun.xml.bind.v2.runtime.JAXBContextImpl,boolean)>($r21, 1);

        specialinvoke $r20.<com.sun.xml.bind.v2.runtime.unmarshaller.ChildLoader: void <init>(com.sun.xml.bind.v2.runtime.unmarshaller.Loader,com.sun.xml.bind.v2.runtime.unmarshaller.Receiver)>($r24, $r1);

        virtualinvoke r7.<com.sun.xml.bind.v2.util.QNameMap: void put(java.lang.String,java.lang.String,java.lang.Object)>($r22, $r23, $r20);

        goto label1;

     label2:
        $z1 = r2.<com.sun.xml.bind.v2.runtime.property.ArrayReferenceNodeProperty: boolean isMixed>;

        if $z1 == 0 goto label3;

        $r15 = <com.sun.xml.bind.v2.runtime.property.ArrayReferenceNodeProperty: javax.xml.namespace.QName TEXT_HANDLER>;

        $r13 = new com.sun.xml.bind.v2.runtime.unmarshaller.ChildLoader;

        $r14 = new com.sun.xml.bind.v2.runtime.property.ArrayReferenceNodeProperty$MixedTextLoader;

        specialinvoke $r14.<com.sun.xml.bind.v2.runtime.property.ArrayReferenceNodeProperty$MixedTextLoader: void <init>(com.sun.xml.bind.v2.runtime.unmarshaller.Receiver)>($r1);

        specialinvoke $r13.<com.sun.xml.bind.v2.runtime.unmarshaller.ChildLoader: void <init>(com.sun.xml.bind.v2.runtime.unmarshaller.Loader,com.sun.xml.bind.v2.runtime.unmarshaller.Receiver)>($r14, null);

        virtualinvoke r7.<com.sun.xml.bind.v2.util.QNameMap: void put(javax.xml.namespace.QName,java.lang.Object)>($r15, $r13);

     label3:
        $r6 = r2.<com.sun.xml.bind.v2.runtime.property.ArrayReferenceNodeProperty: javax.xml.bind.'annotation'.DomHandler domHandler>;

        if $r6 == null goto label4;

        $r12 = <com.sun.xml.bind.v2.runtime.property.ArrayReferenceNodeProperty: javax.xml.namespace.QName CATCH_ALL>;

        $r8 = new com.sun.xml.bind.v2.runtime.unmarshaller.ChildLoader;

        $r9 = new com.sun.xml.bind.v2.runtime.unmarshaller.WildcardLoader;

        $r11 = r2.<com.sun.xml.bind.v2.runtime.property.ArrayReferenceNodeProperty: javax.xml.bind.'annotation'.DomHandler domHandler>;

        $r10 = r2.<com.sun.xml.bind.v2.runtime.property.ArrayReferenceNodeProperty: com.sun.xml.bind.v2.model.core.WildcardMode wcMode>;

        specialinvoke $r9.<com.sun.xml.bind.v2.runtime.unmarshaller.WildcardLoader: void <init>(javax.xml.bind.'annotation'.DomHandler,com.sun.xml.bind.v2.model.core.WildcardMode)>($r11, $r10);

        specialinvoke $r8.<com.sun.xml.bind.v2.runtime.unmarshaller.ChildLoader: void <init>(com.sun.xml.bind.v2.runtime.unmarshaller.Loader,com.sun.xml.bind.v2.runtime.unmarshaller.Receiver)>($r9, $r1);

        virtualinvoke r7.<com.sun.xml.bind.v2.util.QNameMap: void put(javax.xml.namespace.QName,java.lang.Object)>($r12, $r8);

     label4:
        return;
    }

    public com.sun.xml.bind.v2.model.core.PropertyKind getKind()
    {
        com.sun.xml.bind.v2.model.core.PropertyKind $r0;
        com.sun.xml.bind.v2.runtime.property.ArrayReferenceNodeProperty r1;

        r1 := @this: com.sun.xml.bind.v2.runtime.property.ArrayReferenceNodeProperty;

        $r0 = <com.sun.xml.bind.v2.model.core.PropertyKind: com.sun.xml.bind.v2.model.core.PropertyKind REFERENCE>;

        return $r0;
    }

    public com.sun.xml.bind.v2.runtime.reflect.Accessor getElementPropertyAccessor(java.lang.String, java.lang.String)
    {
        com.sun.xml.bind.v2.runtime.Name $r1, $r6;
        com.sun.xml.bind.v2.runtime.property.ArrayReferenceNodeProperty r0;
        com.sun.xml.bind.v2.util.QNameMap $r4;
        com.sun.xml.bind.v2.runtime.reflect.Accessor $r5, $r7;
        java.lang.String r2, r3;
        boolean $z0, $z1;

        r0 := @this: com.sun.xml.bind.v2.runtime.property.ArrayReferenceNodeProperty;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.property.ArrayReferenceNodeProperty: com.sun.xml.bind.v2.runtime.Name wrapperTagName>;

        if $r1 == null goto label1;

        $r6 = r0.<com.sun.xml.bind.v2.runtime.property.ArrayReferenceNodeProperty: com.sun.xml.bind.v2.runtime.Name wrapperTagName>;

        $z1 = virtualinvoke $r6.<com.sun.xml.bind.v2.runtime.Name: boolean equals(java.lang.String,java.lang.String)>(r2, r3);

        if $z1 == 0 goto label2;

        $r7 = r0.<com.sun.xml.bind.v2.runtime.property.ArrayReferenceNodeProperty: com.sun.xml.bind.v2.runtime.reflect.Accessor acc>;

        return $r7;

     label1:
        $r4 = r0.<com.sun.xml.bind.v2.runtime.property.ArrayReferenceNodeProperty: com.sun.xml.bind.v2.util.QNameMap expectedElements>;

        $z0 = virtualinvoke $r4.<com.sun.xml.bind.v2.util.QNameMap: boolean containsKey(java.lang.String,java.lang.String)>(r2, r3);

        if $z0 == 0 goto label2;

        $r5 = r0.<com.sun.xml.bind.v2.runtime.property.ArrayReferenceNodeProperty: com.sun.xml.bind.v2.runtime.reflect.Accessor acc>;

        return $r5;

     label2:
        return null;
    }
}
