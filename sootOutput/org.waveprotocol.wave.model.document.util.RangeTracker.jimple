public class org.waveprotocol.wave.model.document.util.RangeTracker extends java.lang.Object
{
    private static final java.lang.Object trackValue;
    private final org.waveprotocol.wave.model.document.MutableAnnotationSet$Local annotations;
    private final java.lang.String startKey;
    private final java.lang.String endKey;
    private boolean isTracking;

    public void <init>(org.waveprotocol.wave.model.document.MutableAnnotationSet$Local, java.lang.String)
    {
        org.waveprotocol.wave.model.document.MutableAnnotationSet$Local r1;
        org.waveprotocol.wave.model.document.util.RangeTracker r0;
        java.lang.String r2, $r3, $r4;

        r0 := @this: org.waveprotocol.wave.model.document.util.RangeTracker;

        r1 := @parameter0: org.waveprotocol.wave.model.document.MutableAnnotationSet$Local;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.model.document.util.RangeTracker: boolean isTracking> = 0;

        r0.<org.waveprotocol.wave.model.document.util.RangeTracker: org.waveprotocol.wave.model.document.MutableAnnotationSet$Local annotations> = r1;

        $r3 = staticinvoke <org.waveprotocol.wave.model.document.util.Annotations: java.lang.String makeUniqueLocal(java.lang.String)>(r2);

        r0.<org.waveprotocol.wave.model.document.util.RangeTracker: java.lang.String startKey> = $r3;

        $r4 = staticinvoke <org.waveprotocol.wave.model.document.util.Annotations: java.lang.String makeUniqueLocal(java.lang.String)>(r2);

        r0.<org.waveprotocol.wave.model.document.util.RangeTracker: java.lang.String endKey> = $r4;

        return;
    }

    public void <init>(org.waveprotocol.wave.model.document.MutableAnnotationSet$Local)
    {
        org.waveprotocol.wave.model.document.MutableAnnotationSet$Local r1;
        org.waveprotocol.wave.model.document.util.RangeTracker r0;

        r0 := @this: org.waveprotocol.wave.model.document.util.RangeTracker;

        r1 := @parameter0: org.waveprotocol.wave.model.document.MutableAnnotationSet$Local;

        specialinvoke r0.<org.waveprotocol.wave.model.document.util.RangeTracker: void <init>(org.waveprotocol.wave.model.document.MutableAnnotationSet$Local,java.lang.String)>(r1, "tracker");

        return;
    }

    public void trackRange(org.waveprotocol.wave.model.document.util.Range)
    {
        org.waveprotocol.wave.model.document.MutableAnnotationSet$Local $r1, $r3, $r6;
        org.waveprotocol.wave.model.document.util.RangeTracker r0;
        int $i0, $i1, $i2;
        org.waveprotocol.wave.model.document.util.Range r2;
        java.lang.Object $r4, $r7;
        java.lang.String $r5, $r8;

        r0 := @this: org.waveprotocol.wave.model.document.util.RangeTracker;

        r2 := @parameter0: org.waveprotocol.wave.model.document.util.Range;

        r0.<org.waveprotocol.wave.model.document.util.RangeTracker: boolean isTracking> = 1;

        $r1 = r0.<org.waveprotocol.wave.model.document.util.RangeTracker: org.waveprotocol.wave.model.document.MutableAnnotationSet$Local annotations>;

        $i0 = interfaceinvoke $r1.<org.waveprotocol.wave.model.document.MutableAnnotationSet$Local: int size()>();

        $r3 = r0.<org.waveprotocol.wave.model.document.util.RangeTracker: org.waveprotocol.wave.model.document.MutableAnnotationSet$Local annotations>;

        $i1 = virtualinvoke r2.<org.waveprotocol.wave.model.document.util.Range: int getStart()>();

        $r5 = r0.<org.waveprotocol.wave.model.document.util.RangeTracker: java.lang.String startKey>;

        $r4 = <org.waveprotocol.wave.model.document.util.RangeTracker: java.lang.Object trackValue>;

        interfaceinvoke $r3.<org.waveprotocol.wave.model.document.MutableAnnotationSet$Local: void resetAnnotation(int,int,java.lang.String,java.lang.Object)>($i1, $i0, $r5, $r4);

        $r6 = r0.<org.waveprotocol.wave.model.document.util.RangeTracker: org.waveprotocol.wave.model.document.MutableAnnotationSet$Local annotations>;

        $i2 = virtualinvoke r2.<org.waveprotocol.wave.model.document.util.Range: int getEnd()>();

        $r8 = r0.<org.waveprotocol.wave.model.document.util.RangeTracker: java.lang.String endKey>;

        $r7 = <org.waveprotocol.wave.model.document.util.RangeTracker: java.lang.Object trackValue>;

        interfaceinvoke $r6.<org.waveprotocol.wave.model.document.MutableAnnotationSet$Local: void resetAnnotation(int,int,java.lang.String,java.lang.Object)>($i2, $i0, $r8, $r7);

        return;
    }

    public void trackRange(org.waveprotocol.wave.model.document.util.FocusedRange)
    {
        org.waveprotocol.wave.model.document.MutableAnnotationSet$Local $r1, $r3, $r6;
        org.waveprotocol.wave.model.document.util.RangeTracker r0;
        org.waveprotocol.wave.model.document.util.FocusedRange r2;
        int $i0, $i1, $i2;
        java.lang.Object $r4, $r7;
        java.lang.String $r5, $r8;

        r0 := @this: org.waveprotocol.wave.model.document.util.RangeTracker;

        r2 := @parameter0: org.waveprotocol.wave.model.document.util.FocusedRange;

        r0.<org.waveprotocol.wave.model.document.util.RangeTracker: boolean isTracking> = 1;

        $r1 = r0.<org.waveprotocol.wave.model.document.util.RangeTracker: org.waveprotocol.wave.model.document.MutableAnnotationSet$Local annotations>;

        $i0 = interfaceinvoke $r1.<org.waveprotocol.wave.model.document.MutableAnnotationSet$Local: int size()>();

        $r3 = r0.<org.waveprotocol.wave.model.document.util.RangeTracker: org.waveprotocol.wave.model.document.MutableAnnotationSet$Local annotations>;

        $i1 = virtualinvoke r2.<org.waveprotocol.wave.model.document.util.FocusedRange: int getAnchor()>();

        $r5 = r0.<org.waveprotocol.wave.model.document.util.RangeTracker: java.lang.String startKey>;

        $r4 = <org.waveprotocol.wave.model.document.util.RangeTracker: java.lang.Object trackValue>;

        interfaceinvoke $r3.<org.waveprotocol.wave.model.document.MutableAnnotationSet$Local: void resetAnnotation(int,int,java.lang.String,java.lang.Object)>($i1, $i0, $r5, $r4);

        $r6 = r0.<org.waveprotocol.wave.model.document.util.RangeTracker: org.waveprotocol.wave.model.document.MutableAnnotationSet$Local annotations>;

        $i2 = virtualinvoke r2.<org.waveprotocol.wave.model.document.util.FocusedRange: int getFocus()>();

        $r8 = r0.<org.waveprotocol.wave.model.document.util.RangeTracker: java.lang.String endKey>;

        $r7 = <org.waveprotocol.wave.model.document.util.RangeTracker: java.lang.Object trackValue>;

        interfaceinvoke $r6.<org.waveprotocol.wave.model.document.MutableAnnotationSet$Local: void resetAnnotation(int,int,java.lang.String,java.lang.Object)>($i2, $i0, $r8, $r7);

        return;
    }

    public void clearRange()
    {
        org.waveprotocol.wave.model.document.MutableAnnotationSet$Local $r1, $r2, $r4, $r5;
        org.waveprotocol.wave.model.document.util.RangeTracker r0;
        int $i0, $i1;
        java.lang.String $r3, $r6;

        r0 := @this: org.waveprotocol.wave.model.document.util.RangeTracker;

        r0.<org.waveprotocol.wave.model.document.util.RangeTracker: boolean isTracking> = 0;

        $r2 = r0.<org.waveprotocol.wave.model.document.util.RangeTracker: org.waveprotocol.wave.model.document.MutableAnnotationSet$Local annotations>;

        $r1 = r0.<org.waveprotocol.wave.model.document.util.RangeTracker: org.waveprotocol.wave.model.document.MutableAnnotationSet$Local annotations>;

        $i0 = interfaceinvoke $r1.<org.waveprotocol.wave.model.document.MutableAnnotationSet$Local: int size()>();

        $r3 = r0.<org.waveprotocol.wave.model.document.util.RangeTracker: java.lang.String startKey>;

        interfaceinvoke $r2.<org.waveprotocol.wave.model.document.MutableAnnotationSet$Local: void resetAnnotation(int,int,java.lang.String,java.lang.Object)>(0, $i0, $r3, null);

        $r5 = r0.<org.waveprotocol.wave.model.document.util.RangeTracker: org.waveprotocol.wave.model.document.MutableAnnotationSet$Local annotations>;

        $r4 = r0.<org.waveprotocol.wave.model.document.util.RangeTracker: org.waveprotocol.wave.model.document.MutableAnnotationSet$Local annotations>;

        $i1 = interfaceinvoke $r4.<org.waveprotocol.wave.model.document.MutableAnnotationSet$Local: int size()>();

        $r6 = r0.<org.waveprotocol.wave.model.document.util.RangeTracker: java.lang.String endKey>;

        interfaceinvoke $r5.<org.waveprotocol.wave.model.document.MutableAnnotationSet$Local: void resetAnnotation(int,int,java.lang.String,java.lang.Object)>(0, $i1, $r6, null);

        return;
    }

    public org.waveprotocol.wave.model.document.util.Range getRange()
    {
        org.waveprotocol.wave.model.document.util.RangeTracker r0;
        org.waveprotocol.wave.model.document.util.Range $r2;
        org.waveprotocol.wave.model.document.util.FocusedRange $r1;

        r0 := @this: org.waveprotocol.wave.model.document.util.RangeTracker;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.RangeTracker: org.waveprotocol.wave.model.document.util.FocusedRange getFocusedRange()>();

        if $r1 == null goto label1;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.model.document.util.FocusedRange: org.waveprotocol.wave.model.document.util.Range asRange()>();

        goto label2;

     label1:
        $r2 = null;

     label2:
        return $r2;
    }

    public org.waveprotocol.wave.model.document.util.FocusedRange getFocusedRange()
    {
        org.waveprotocol.wave.model.document.MutableAnnotationSet$Local $r1, $r3, $r5;
        org.waveprotocol.wave.model.document.util.RangeTracker r0;
        org.waveprotocol.wave.model.document.util.FocusedRange $r6;
        int $i0, $i1, $i2;
        java.lang.String $r2, $r4;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.document.util.RangeTracker;

        $z0 = r0.<org.waveprotocol.wave.model.document.util.RangeTracker: boolean isTracking>;

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r1 = r0.<org.waveprotocol.wave.model.document.util.RangeTracker: org.waveprotocol.wave.model.document.MutableAnnotationSet$Local annotations>;

        $i0 = interfaceinvoke $r1.<org.waveprotocol.wave.model.document.MutableAnnotationSet$Local: int size()>();

        $r3 = r0.<org.waveprotocol.wave.model.document.util.RangeTracker: org.waveprotocol.wave.model.document.MutableAnnotationSet$Local annotations>;

        $r2 = r0.<org.waveprotocol.wave.model.document.util.RangeTracker: java.lang.String startKey>;

        $i1 = staticinvoke <org.waveprotocol.wave.model.document.util.Annotations: int firstAnnotationBoundary(org.waveprotocol.wave.model.document.ReadableAnnotationSet,int,int,java.lang.String,java.lang.Object)>($r3, 0, $i0, $r2, null);

        $r5 = r0.<org.waveprotocol.wave.model.document.util.RangeTracker: org.waveprotocol.wave.model.document.MutableAnnotationSet$Local annotations>;

        $r4 = r0.<org.waveprotocol.wave.model.document.util.RangeTracker: java.lang.String endKey>;

        $i2 = staticinvoke <org.waveprotocol.wave.model.document.util.Annotations: int firstAnnotationBoundary(org.waveprotocol.wave.model.document.ReadableAnnotationSet,int,int,java.lang.String,java.lang.Object)>($r5, 0, $i0, $r4, null);

        $r6 = new org.waveprotocol.wave.model.document.util.FocusedRange;

        specialinvoke $r6.<org.waveprotocol.wave.model.document.util.FocusedRange: void <init>(int,int)>($i1, $i2);

        return $r6;
    }

    static void <clinit>()
    {
        java.lang.Object $r0;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <org.waveprotocol.wave.model.document.util.RangeTracker: java.lang.Object trackValue> = $r0;

        return;
    }
}
