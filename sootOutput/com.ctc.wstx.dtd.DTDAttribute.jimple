public abstract class com.ctc.wstx.dtd.DTDAttribute extends java.lang.Object
{
    static final char CHAR_SPACE;
    public static final int TYPE_CDATA;
    public static final int TYPE_ENUMERATED;
    public static final int TYPE_ID;
    public static final int TYPE_IDREF;
    public static final int TYPE_IDREFS;
    public static final int TYPE_ENTITY;
    public static final int TYPE_ENTITIES;
    public static final int TYPE_NOTATION;
    public static final int TYPE_NMTOKEN;
    public static final int TYPE_NMTOKENS;
    static final java.lang.String[] sTypes;
    protected final com.ctc.wstx.dtd.NameKey mName;
    protected final int mSpecialIndex;
    protected final com.ctc.wstx.dtd.DefaultAttrValue mDefValue;
    protected final boolean mCfgNsAware;
    protected final boolean mCfgXml11;

    public void <init>(com.ctc.wstx.dtd.NameKey, com.ctc.wstx.dtd.DefaultAttrValue, int, boolean, boolean)
    {
        com.ctc.wstx.dtd.DefaultAttrValue r2;
        com.ctc.wstx.dtd.DTDAttribute r0;
        com.ctc.wstx.dtd.NameKey r1;
        int i0;
        boolean z0, z1;

        r0 := @this: com.ctc.wstx.dtd.DTDAttribute;

        r1 := @parameter0: com.ctc.wstx.dtd.NameKey;

        r2 := @parameter1: com.ctc.wstx.dtd.DefaultAttrValue;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.ctc.wstx.dtd.DTDAttribute: com.ctc.wstx.dtd.NameKey mName> = r1;

        r0.<com.ctc.wstx.dtd.DTDAttribute: com.ctc.wstx.dtd.DefaultAttrValue mDefValue> = r2;

        r0.<com.ctc.wstx.dtd.DTDAttribute: int mSpecialIndex> = i0;

        r0.<com.ctc.wstx.dtd.DTDAttribute: boolean mCfgNsAware> = z0;

        r0.<com.ctc.wstx.dtd.DTDAttribute: boolean mCfgXml11> = z1;

        return;
    }

    public abstract com.ctc.wstx.dtd.DTDAttribute cloneWith(int);

    public final com.ctc.wstx.dtd.NameKey getName()
    {
        com.ctc.wstx.dtd.DTDAttribute r0;
        com.ctc.wstx.dtd.NameKey $r1;

        r0 := @this: com.ctc.wstx.dtd.DTDAttribute;

        $r1 = r0.<com.ctc.wstx.dtd.DTDAttribute: com.ctc.wstx.dtd.NameKey mName>;

        return $r1;
    }

    public final java.lang.String toString()
    {
        com.ctc.wstx.dtd.DTDAttribute r0;
        java.lang.String $r2;
        com.ctc.wstx.dtd.NameKey $r1;

        r0 := @this: com.ctc.wstx.dtd.DTDAttribute;

        $r1 = r0.<com.ctc.wstx.dtd.DTDAttribute: com.ctc.wstx.dtd.NameKey mName>;

        $r2 = virtualinvoke $r1.<com.ctc.wstx.dtd.NameKey: java.lang.String toString()>();

        return $r2;
    }

    public final java.lang.String getDefaultValue(org.codehaus.stax2.validation.ValidationContext) throws org.codehaus.stax2.validation.XMLValidationException
    {
        com.ctc.wstx.dtd.DefaultAttrValue $r1, $r4, $r5;
        com.ctc.wstx.dtd.DTDAttribute r0;
        java.lang.String $r2, r6;
        org.codehaus.stax2.validation.ValidationContext r3;

        r0 := @this: com.ctc.wstx.dtd.DTDAttribute;

        r3 := @parameter0: org.codehaus.stax2.validation.ValidationContext;

        $r1 = r0.<com.ctc.wstx.dtd.DTDAttribute: com.ctc.wstx.dtd.DefaultAttrValue mDefValue>;

        $r2 = virtualinvoke $r1.<com.ctc.wstx.dtd.DefaultAttrValue: java.lang.String getValueIfOk()>();

        r6 = $r2;

        if $r2 != null goto label1;

        $r4 = r0.<com.ctc.wstx.dtd.DTDAttribute: com.ctc.wstx.dtd.DefaultAttrValue mDefValue>;

        virtualinvoke $r4.<com.ctc.wstx.dtd.DefaultAttrValue: void reportUndeclared(org.codehaus.stax2.validation.ValidationContext)>(r3);

        $r5 = r0.<com.ctc.wstx.dtd.DTDAttribute: com.ctc.wstx.dtd.DefaultAttrValue mDefValue>;

        r6 = virtualinvoke $r5.<com.ctc.wstx.dtd.DefaultAttrValue: java.lang.String getValue()>();

     label1:
        return r6;
    }

    public final int getSpecialIndex()
    {
        int $i0;
        com.ctc.wstx.dtd.DTDAttribute r0;

        r0 := @this: com.ctc.wstx.dtd.DTDAttribute;

        $i0 = r0.<com.ctc.wstx.dtd.DTDAttribute: int mSpecialIndex>;

        return $i0;
    }

    public final boolean needsValidation()
    {
        int $i0;
        com.ctc.wstx.dtd.DTDAttribute r0;
        boolean $z0;

        r0 := @this: com.ctc.wstx.dtd.DTDAttribute;

        $i0 = virtualinvoke r0.<com.ctc.wstx.dtd.DTDAttribute: int getValueType()>();

        if $i0 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final boolean isFixed()
    {
        com.ctc.wstx.dtd.DefaultAttrValue $r1;
        com.ctc.wstx.dtd.DTDAttribute r0;
        boolean $z0;

        r0 := @this: com.ctc.wstx.dtd.DTDAttribute;

        $r1 = r0.<com.ctc.wstx.dtd.DTDAttribute: com.ctc.wstx.dtd.DefaultAttrValue mDefValue>;

        $z0 = virtualinvoke $r1.<com.ctc.wstx.dtd.DefaultAttrValue: boolean isFixed()>();

        return $z0;
    }

    public final boolean isRequired()
    {
        com.ctc.wstx.dtd.DefaultAttrValue $r1;
        com.ctc.wstx.dtd.DTDAttribute r0;
        boolean $z0;

        r0 := @this: com.ctc.wstx.dtd.DTDAttribute;

        $r1 = r0.<com.ctc.wstx.dtd.DTDAttribute: com.ctc.wstx.dtd.DefaultAttrValue mDefValue>;

        $z0 = virtualinvoke $r1.<com.ctc.wstx.dtd.DefaultAttrValue: boolean isRequired()>();

        return $z0;
    }

    public final boolean isSpecial()
    {
        com.ctc.wstx.dtd.DefaultAttrValue $r1;
        com.ctc.wstx.dtd.DTDAttribute r0;
        boolean $z0;

        r0 := @this: com.ctc.wstx.dtd.DTDAttribute;

        $r1 = r0.<com.ctc.wstx.dtd.DTDAttribute: com.ctc.wstx.dtd.DefaultAttrValue mDefValue>;

        $z0 = virtualinvoke $r1.<com.ctc.wstx.dtd.DefaultAttrValue: boolean isSpecial()>();

        return $z0;
    }

    public final boolean hasDefaultValue()
    {
        com.ctc.wstx.dtd.DefaultAttrValue $r1;
        com.ctc.wstx.dtd.DTDAttribute r0;
        boolean $z0;

        r0 := @this: com.ctc.wstx.dtd.DTDAttribute;

        $r1 = r0.<com.ctc.wstx.dtd.DTDAttribute: com.ctc.wstx.dtd.DefaultAttrValue mDefValue>;

        $z0 = virtualinvoke $r1.<com.ctc.wstx.dtd.DefaultAttrValue: boolean hasDefaultValue()>();

        return $z0;
    }

    public int getValueType()
    {
        com.ctc.wstx.dtd.DTDAttribute r0;

        r0 := @this: com.ctc.wstx.dtd.DTDAttribute;

        return 0;
    }

    public java.lang.String getValueTypeString()
    {
        com.ctc.wstx.dtd.DTDAttribute r0;
        int $i0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: com.ctc.wstx.dtd.DTDAttribute;

        $r1 = <com.ctc.wstx.dtd.DTDAttribute: java.lang.String[] sTypes>;

        $i0 = virtualinvoke r0.<com.ctc.wstx.dtd.DTDAttribute: int getValueType()>();

        $r2 = $r1[$i0];

        return $r2;
    }

    public boolean typeIsId()
    {
        com.ctc.wstx.dtd.DTDAttribute r0;

        r0 := @this: com.ctc.wstx.dtd.DTDAttribute;

        return 0;
    }

    public boolean typeIsNotation()
    {
        com.ctc.wstx.dtd.DTDAttribute r0;

        r0 := @this: com.ctc.wstx.dtd.DTDAttribute;

        return 0;
    }

    public abstract java.lang.String validate(com.ctc.wstx.dtd.DTDValidatorBase, char[], int, int, boolean) throws org.codehaus.stax2.validation.XMLValidationException;

    public java.lang.String validate(com.ctc.wstx.dtd.DTDValidatorBase, java.lang.String, boolean) throws org.codehaus.stax2.validation.XMLValidationException
    {
        com.ctc.wstx.dtd.DTDAttribute r3;
        com.ctc.wstx.dtd.DTDValidatorBase r1;
        int $i0, $i1;
        char[] $r2;
        java.lang.String r0, $r4;
        boolean z0;

        r3 := @this: com.ctc.wstx.dtd.DTDAttribute;

        r1 := @parameter0: com.ctc.wstx.dtd.DTDValidatorBase;

        r0 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        $r2 = virtualinvoke r1.<com.ctc.wstx.dtd.DTDValidatorBase: char[] getTempAttrValueBuffer(int)>($i1);

        if $i0 <= 0 goto label1;

        virtualinvoke r0.<java.lang.String: void getChars(int,int,char[],int)>(0, $i0, $r2, 0);

     label1:
        $r4 = virtualinvoke r3.<com.ctc.wstx.dtd.DTDAttribute: java.lang.String validate(com.ctc.wstx.dtd.DTDValidatorBase,char[],int,int,boolean)>(r1, $r2, 0, $i0, z0);

        return $r4;
    }

    public abstract void validateDefault(com.ctc.wstx.sr.InputProblemReporter, boolean) throws javax.xml.stream.XMLStreamException;

    public java.lang.String normalize(com.ctc.wstx.dtd.DTDValidatorBase, char[], int, int)
    {
        com.ctc.wstx.dtd.DTDAttribute r2;
        int i0, i1;
        char[] r0;
        java.lang.String $r1;
        com.ctc.wstx.dtd.DTDValidatorBase r3;

        r2 := @this: com.ctc.wstx.dtd.DTDAttribute;

        r3 := @parameter0: com.ctc.wstx.dtd.DTDValidatorBase;

        r0 := @parameter1: char[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r1 = staticinvoke <com.ctc.wstx.util.StringUtil: java.lang.String normalizeSpaces(char[],int,int)>(r0, i0, i1);

        return $r1;
    }

    public void normalizeDefault()
    {
        com.ctc.wstx.dtd.DTDAttribute r0;
        com.ctc.wstx.dtd.DefaultAttrValue $r1, $r5;
        int $i0, $i1;
        char[] $r3;
        java.lang.String $r2, $r4;

        r0 := @this: com.ctc.wstx.dtd.DTDAttribute;

        $r1 = r0.<com.ctc.wstx.dtd.DTDAttribute: com.ctc.wstx.dtd.DefaultAttrValue mDefValue>;

        $r2 = virtualinvoke $r1.<com.ctc.wstx.dtd.DefaultAttrValue: java.lang.String getValue()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $r3 = virtualinvoke $r2.<java.lang.String: char[] toCharArray()>();

        $i1 = lengthof $r3;

        $r4 = staticinvoke <com.ctc.wstx.util.StringUtil: java.lang.String normalizeSpaces(char[],int,int)>($r3, 0, $i1);

        if $r4 == null goto label1;

        $r5 = r0.<com.ctc.wstx.dtd.DTDAttribute: com.ctc.wstx.dtd.DefaultAttrValue mDefValue>;

        virtualinvoke $r5.<com.ctc.wstx.dtd.DefaultAttrValue: void setValue(java.lang.String)>($r4);

     label1:
        return;
    }

    protected java.lang.String validateDefaultName(com.ctc.wstx.sr.InputProblemReporter, boolean) throws org.codehaus.stax2.validation.XMLValidationException
    {
        boolean $z0, $z1, z2;
        com.ctc.wstx.sr.InputProblemReporter r4;
        com.ctc.wstx.dtd.DTDAttribute r0;
        com.ctc.wstx.dtd.DefaultAttrValue $r1;
        java.lang.StringBuffer $r5, $r6, $r7, $r8, $r9, $r10, $r12, $r13, $r15, $r16, $r17, $r18, $r20, $r21, $r23, $r24, $r25, $r26;
        int $i0, $i1;
        java.lang.String $r2, $r3, $r11, $r14, $r19, $r22, $r27, $r28;
        char $c2, $c3;

        r0 := @this: com.ctc.wstx.dtd.DTDAttribute;

        r4 := @parameter0: com.ctc.wstx.sr.InputProblemReporter;

        z2 := @parameter1: boolean;

        $r1 = r0.<com.ctc.wstx.dtd.DTDAttribute: com.ctc.wstx.dtd.DefaultAttrValue mDefValue>;

        $r2 = virtualinvoke $r1.<com.ctc.wstx.dtd.DefaultAttrValue: java.lang.String getValue()>();

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        $r23 = new java.lang.StringBuffer;

        specialinvoke $r23.<java.lang.StringBuffer: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid default value \'");

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'; empty String is not a valid name");

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<com.ctc.wstx.dtd.DTDAttribute: java.lang.String reportValidationProblem(com.ctc.wstx.sr.InputProblemReporter,java.lang.String)>(r4, $r27);

     label1:
        $z1 = r0.<com.ctc.wstx.dtd.DTDAttribute: boolean mCfgNsAware>;

        $z0 = r0.<com.ctc.wstx.dtd.DTDAttribute: boolean mCfgXml11>;

        $i1 = staticinvoke <com.ctc.wstx.io.WstxInputData: int findIllegalNameChar(java.lang.String,boolean,boolean)>($r3, $z1, $z0);

        if $i1 < 0 goto label3;

        if $i1 != 0 goto label2;

        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid default value \'");

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'; character ");

        $c3 = virtualinvoke $r3.<java.lang.String: char charAt(int)>(0);

        $r19 = staticinvoke <com.ctc.wstx.io.WstxInputData: java.lang.String getCharDesc(char)>($c3);

        $r20 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") not valid first character of a name");

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<com.ctc.wstx.dtd.DTDAttribute: java.lang.String reportValidationProblem(com.ctc.wstx.sr.InputProblemReporter,java.lang.String)>(r4, $r22);

        goto label3;

     label2:
        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid default value \'");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'; character #");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" (");

        $c2 = virtualinvoke $r3.<java.lang.String: char charAt(int)>($i1);

        $r11 = staticinvoke <com.ctc.wstx.io.WstxInputData: java.lang.String getCharDesc(char)>($c2);

        $r12 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") not valid name character");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<com.ctc.wstx.dtd.DTDAttribute: java.lang.String reportValidationProblem(com.ctc.wstx.sr.InputProblemReporter,java.lang.String)>(r4, $r14);

     label3:
        if z2 == 0 goto label4;

        $r28 = $r3;

        goto label5;

     label4:
        $r28 = $r2;

     label5:
        return $r28;
    }

    protected java.lang.String validateDefaultNames(com.ctc.wstx.sr.InputProblemReporter, boolean) throws org.codehaus.stax2.validation.XMLValidationException
    {
        boolean z0, $z1, $z2, $z3, $z4;
        com.ctc.wstx.sr.InputProblemReporter r4;
        com.ctc.wstx.dtd.DTDAttribute r0;
        com.ctc.wstx.dtd.DefaultAttrValue $r1;
        java.lang.StringBuffer $r5, $r6, $r7, $r8, $r11, $r12, $r13, $r14, $r15, $r17, $r18, $r20, $r21, $r22, $r23, $r25, $r26, r28;
        int $i0, $i1, $i2, $i3, i6, i7, i9;
        java.lang.String $r2, $r3, $r9, $r10, $r16, $r19, $r24, $r27, $r29;
        char $c4, $c5, c8;

        r0 := @this: com.ctc.wstx.dtd.DTDAttribute;

        r4 := @parameter0: com.ctc.wstx.sr.InputProblemReporter;

        z0 := @parameter1: boolean;

        $r1 = r0.<com.ctc.wstx.dtd.DTDAttribute: com.ctc.wstx.dtd.DefaultAttrValue mDefValue>;

        $r2 = virtualinvoke $r1.<com.ctc.wstx.dtd.DefaultAttrValue: java.lang.String getValue()>();

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        r28 = null;

        i6 = 0;

        i7 = 0;

     label01:
        if i7 >= $i0 goto label14;

        c8 = virtualinvoke $r3.<java.lang.String: char charAt(int)>(i7);

     label02:
        $z1 = staticinvoke <com.ctc.wstx.io.WstxInputData: boolean isSpaceChar(char)>(c8);

        if $z1 != 0 goto label03;

        goto label05;

     label03:
        i7 = i7 + 1;

        if i7 < $i0 goto label04;

        goto label14;

     label04:
        c8 = virtualinvoke $r3.<java.lang.String: char charAt(int)>(i7);

        goto label02;

     label05:
        i9 = i7 + 1;

     label06:
        if i9 >= $i0 goto label08;

        $c5 = virtualinvoke $r3.<java.lang.String: char charAt(int)>(i9);

        $z4 = staticinvoke <com.ctc.wstx.io.WstxInputData: boolean isSpaceChar(char)>($c5);

        if $z4 == 0 goto label07;

        goto label08;

     label07:
        i9 = i9 + 1;

        goto label06;

     label08:
        $r10 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(i7, i9);

        $z3 = r0.<com.ctc.wstx.dtd.DTDAttribute: boolean mCfgNsAware>;

        $z2 = r0.<com.ctc.wstx.dtd.DTDAttribute: boolean mCfgXml11>;

        $i1 = staticinvoke <com.ctc.wstx.io.WstxInputData: int findIllegalNameChar(java.lang.String,boolean,boolean)>($r10, $z3, $z2);

        if $i1 < 0 goto label10;

        if $i1 != 0 goto label09;

        $r20 = new java.lang.StringBuffer;

        specialinvoke $r20.<java.lang.StringBuffer: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid default value \'");

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'; character ");

        $c4 = virtualinvoke $r3.<java.lang.String: char charAt(int)>(i7);

        $r24 = staticinvoke <com.ctc.wstx.io.WstxInputData: java.lang.String getCharDesc(char)>($c4);

        $r25 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") not valid first character of a name token");

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<com.ctc.wstx.dtd.DTDAttribute: java.lang.String reportValidationProblem(com.ctc.wstx.sr.InputProblemReporter,java.lang.String)>(r4, $r27);

        goto label10;

     label09:
        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid default value \'");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'; character ");

        $r16 = staticinvoke <com.ctc.wstx.io.WstxInputData: java.lang.String getCharDesc(char)>(c8);

        $r17 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") not a valid name character");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<com.ctc.wstx.dtd.DTDAttribute: java.lang.String reportValidationProblem(com.ctc.wstx.sr.InputProblemReporter,java.lang.String)>(r4, $r19);

     label10:
        i6 = i6 + 1;

        if z0 == 0 goto label13;

        if r28 != null goto label11;

        $r11 = new java.lang.StringBuffer;

        $i2 = i9 - i7;

        $i3 = $i2 + 32;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>(int)>($i3);

        r28 = $r11;

        goto label12;

     label11:
        virtualinvoke r28.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

     label12:
        virtualinvoke r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

     label13:
        i7 = i9 + 1;

        goto label01;

     label14:
        if i6 != 0 goto label15;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid default value \'");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'; empty String is not a valid name value");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<com.ctc.wstx.dtd.DTDAttribute: java.lang.String reportValidationProblem(com.ctc.wstx.sr.InputProblemReporter,java.lang.String)>(r4, $r9);

     label15:
        if z0 == 0 goto label16;

        $r29 = virtualinvoke r28.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label17;

     label16:
        $r29 = $r3;

     label17:
        return $r29;
    }

    protected java.lang.String validateDefaultNmToken(com.ctc.wstx.sr.InputProblemReporter, boolean) throws org.codehaus.stax2.validation.XMLValidationException
    {
        com.ctc.wstx.dtd.DTDAttribute r0;
        com.ctc.wstx.dtd.DefaultAttrValue $r1;
        java.lang.StringBuffer $r5, $r6, $r7, $r8, $r9, $r10, $r12, $r13, $r15, $r16, $r17, $r18;
        int $i0, $i1;
        java.lang.String $r2, $r3, $r11, $r14, $r19, $r20;
        boolean $z0, $z1, z2;
        char $c2;
        com.ctc.wstx.sr.InputProblemReporter r4;

        r0 := @this: com.ctc.wstx.dtd.DTDAttribute;

        r4 := @parameter0: com.ctc.wstx.sr.InputProblemReporter;

        z2 := @parameter1: boolean;

        $r1 = r0.<com.ctc.wstx.dtd.DTDAttribute: com.ctc.wstx.dtd.DefaultAttrValue mDefValue>;

        $r2 = virtualinvoke $r1.<com.ctc.wstx.dtd.DefaultAttrValue: java.lang.String getValue()>();

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid default value \'");

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'; empty String is not a valid NMTOKEN");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<com.ctc.wstx.dtd.DTDAttribute: java.lang.String reportValidationProblem(com.ctc.wstx.sr.InputProblemReporter,java.lang.String)>(r4, $r19);

     label1:
        $z1 = r0.<com.ctc.wstx.dtd.DTDAttribute: boolean mCfgNsAware>;

        $z0 = r0.<com.ctc.wstx.dtd.DTDAttribute: boolean mCfgXml11>;

        $i1 = staticinvoke <com.ctc.wstx.io.WstxInputData: int findIllegalNmtokenChar(java.lang.String,boolean,boolean)>($r3, $z1, $z0);

        if $i1 < 0 goto label2;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid default value \'");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'; character #");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" (");

        $c2 = virtualinvoke $r3.<java.lang.String: char charAt(int)>($i1);

        $r11 = staticinvoke <com.ctc.wstx.io.WstxInputData: java.lang.String getCharDesc(char)>($c2);

        $r12 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") not valid NMTOKEN character");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<com.ctc.wstx.dtd.DTDAttribute: java.lang.String reportValidationProblem(com.ctc.wstx.sr.InputProblemReporter,java.lang.String)>(r4, $r14);

     label2:
        if z2 == 0 goto label3;

        $r20 = $r3;

        goto label4;

     label3:
        $r20 = $r2;

     label4:
        return $r20;
    }

    public java.lang.String validateEnumValue(char[], int, int, boolean, com.ctc.wstx.util.WordResolver)
    {
        com.ctc.wstx.dtd.DTDAttribute r3;
        char $c0, $c1;
        com.ctc.wstx.util.WordResolver r0;
        int i2, i3, $i4, $i6, $i7;
        char[] r1;
        java.lang.String $r2;
        boolean z0;

        r3 := @this: com.ctc.wstx.dtd.DTDAttribute;

        r1 := @parameter0: char[];

        i2 := @parameter1: int;

        i3 := @parameter2: int;

        z0 := @parameter3: boolean;

        r0 := @parameter4: com.ctc.wstx.util.WordResolver;

        if z0 == 0 goto label4;

     label1:
        if i2 >= i3 goto label2;

        $c1 = r1[i2];

        $i4 = (int) $c1;

        if $i4 > 32 goto label2;

        i2 = i2 + 1;

        goto label1;

     label2:
        $i6 = (int) -1;

        i3 = i3 + $i6;

        if i3 <= i2 goto label3;

        $c0 = r1[i3];

        $i7 = (int) $c0;

        if $i7 > 32 goto label3;

        goto label2;

     label3:
        i3 = i3 + 1;

     label4:
        if i2 < i3 goto label5;

        return null;

     label5:
        $r2 = virtualinvoke r0.<com.ctc.wstx.util.WordResolver: java.lang.String find(char[],int,int)>(r1, i2, i3);

        return $r2;
    }

    protected com.ctc.wstx.ent.EntityDecl findEntityDecl(com.ctc.wstx.dtd.DTDValidatorBase, char[], int, int, int) throws org.codehaus.stax2.validation.XMLValidationException
    {
        com.ctc.wstx.dtd.DTDAttribute r6;
        com.ctc.wstx.dtd.DTDValidatorBase r0;
        com.ctc.wstx.ent.EntityDecl r5;
        java.lang.StringBuffer $r7, $r8, $r9, $r10, $r12, $r13, $r14, $r15;
        java.util.Map $r1;
        int i0, i1, i2;
        java.lang.String $r2, $r11, $r16;
        boolean $z0;
        char[] r3;
        java.lang.Object $r4;

        r6 := @this: com.ctc.wstx.dtd.DTDAttribute;

        r0 := @parameter0: com.ctc.wstx.dtd.DTDValidatorBase;

        r3 := @parameter1: char[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        $r1 = virtualinvoke r0.<com.ctc.wstx.dtd.DTDValidatorBase: java.util.Map getEntityMap()>();

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[],int,int)>(r3, i0, i1);

        $r4 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        r5 = (com.ctc.wstx.ent.EntityDecl) $r4;

        if r5 != null goto label1;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Referenced entity \'");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' not defined");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r6.<com.ctc.wstx.dtd.DTDAttribute: java.lang.String reportValidationProblem(com.ctc.wstx.dtd.DTDValidatorBase,java.lang.String)>(r0, $r16);

        goto label2;

     label1:
        $z0 = virtualinvoke r5.<com.ctc.wstx.ent.EntityDecl: boolean isParsed()>();

        if $z0 == 0 goto label2;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Referenced entity \'");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' is not an unparsed entity");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r6.<com.ctc.wstx.dtd.DTDAttribute: java.lang.String reportValidationProblem(com.ctc.wstx.dtd.DTDValidatorBase,java.lang.String)>(r0, $r11);

     label2:
        return r5;
    }

    protected void checkEntity(com.ctc.wstx.sr.InputProblemReporter, java.lang.String, com.ctc.wstx.ent.EntityDecl) throws org.codehaus.stax2.validation.XMLValidationException
    {
        com.ctc.wstx.dtd.DTDAttribute r13;
        com.ctc.wstx.ent.EntityDecl r0;
        java.lang.StringBuffer $r2, $r3, $r5, $r6, $r8, $r9, $r10, $r11;
        com.ctc.wstx.sr.InputProblemReporter r1;
        java.lang.String r4, $r7, $r12;
        boolean $z0;

        r13 := @this: com.ctc.wstx.dtd.DTDAttribute;

        r1 := @parameter0: com.ctc.wstx.sr.InputProblemReporter;

        r4 := @parameter1: java.lang.String;

        r0 := @parameter2: com.ctc.wstx.ent.EntityDecl;

        if r0 != null goto label1;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Referenced entity \'");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' not defined");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke r1.<com.ctc.wstx.sr.InputProblemReporter: void reportValidationProblem(java.lang.String)>($r12);

        goto label2;

     label1:
        $z0 = virtualinvoke r0.<com.ctc.wstx.ent.EntityDecl: boolean isParsed()>();

        if $z0 == 0 goto label2;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Referenced entity \'");

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' is not an unparsed entity");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke r1.<com.ctc.wstx.sr.InputProblemReporter: void reportValidationProblem(java.lang.String)>($r7);

     label2:
        return;
    }

    protected java.lang.String reportInvalidChar(com.ctc.wstx.dtd.DTDValidatorBase, char, java.lang.String) throws org.codehaus.stax2.validation.XMLValidationException
    {
        com.ctc.wstx.dtd.DTDAttribute r0;
        char c0;
        com.ctc.wstx.dtd.DTDValidatorBase r1;
        java.lang.StringBuffer $r2, $r3, $r5, $r6, $r8;
        java.lang.String $r4, r7, $r9;

        r0 := @this: com.ctc.wstx.dtd.DTDAttribute;

        r1 := @parameter0: com.ctc.wstx.dtd.DTDValidatorBase;

        c0 := @parameter1: char;

        r7 := @parameter2: java.lang.String;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid character ");

        $r4 = staticinvoke <com.ctc.wstx.io.WstxInputData: java.lang.String getCharDesc(char)>(c0);

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": ");

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<com.ctc.wstx.dtd.DTDAttribute: java.lang.String reportValidationProblem(com.ctc.wstx.dtd.DTDValidatorBase,java.lang.String)>(r1, $r9);

        return null;
    }

    protected java.lang.String reportValidationProblem(com.ctc.wstx.dtd.DTDValidatorBase, java.lang.String) throws org.codehaus.stax2.validation.XMLValidationException
    {
        com.ctc.wstx.dtd.DTDAttribute r3;
        com.ctc.wstx.dtd.DTDValidatorBase r0;
        com.ctc.wstx.dtd.NameKey $r4;
        java.lang.StringBuffer $r1, $r2, $r5, $r6, $r8;
        java.lang.String r7, $r9;

        r3 := @this: com.ctc.wstx.dtd.DTDAttribute;

        r0 := @parameter0: com.ctc.wstx.dtd.DTDValidatorBase;

        r7 := @parameter1: java.lang.String;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Attribute \'");

        $r4 = r3.<com.ctc.wstx.dtd.DTDAttribute: com.ctc.wstx.dtd.NameKey mName>;

        $r5 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\': ");

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<com.ctc.wstx.dtd.DTDValidatorBase: void reportValidationProblem(java.lang.String)>($r9);

        return null;
    }

    protected java.lang.String reportValidationProblem(com.ctc.wstx.sr.InputProblemReporter, java.lang.String) throws org.codehaus.stax2.validation.XMLValidationException
    {
        com.ctc.wstx.dtd.DTDAttribute r3;
        com.ctc.wstx.dtd.NameKey $r4;
        java.lang.StringBuffer $r1, $r2, $r5, $r6, $r8;
        com.ctc.wstx.sr.InputProblemReporter r0;
        java.lang.String r7, $r9;

        r3 := @this: com.ctc.wstx.dtd.DTDAttribute;

        r0 := @parameter0: com.ctc.wstx.sr.InputProblemReporter;

        r7 := @parameter1: java.lang.String;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Attribute definition \'");

        $r4 = r3.<com.ctc.wstx.dtd.DTDAttribute: com.ctc.wstx.dtd.NameKey mName>;

        $r5 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\': ");

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke r0.<com.ctc.wstx.sr.InputProblemReporter: void reportValidationProblem(java.lang.String)>($r9);

        return null;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0;

        <com.ctc.wstx.dtd.DTDAttribute: int TYPE_NMTOKENS> = 9;

        <com.ctc.wstx.dtd.DTDAttribute: int TYPE_NMTOKEN> = 8;

        <com.ctc.wstx.dtd.DTDAttribute: int TYPE_NOTATION> = 7;

        <com.ctc.wstx.dtd.DTDAttribute: int TYPE_ENTITIES> = 6;

        <com.ctc.wstx.dtd.DTDAttribute: int TYPE_ENTITY> = 5;

        <com.ctc.wstx.dtd.DTDAttribute: int TYPE_IDREFS> = 4;

        <com.ctc.wstx.dtd.DTDAttribute: int TYPE_IDREF> = 3;

        <com.ctc.wstx.dtd.DTDAttribute: int TYPE_ID> = 2;

        <com.ctc.wstx.dtd.DTDAttribute: int TYPE_ENUMERATED> = 1;

        <com.ctc.wstx.dtd.DTDAttribute: int TYPE_CDATA> = 0;

        <com.ctc.wstx.dtd.DTDAttribute: char CHAR_SPACE> = 32;

        $r0 = newarray (java.lang.String)[10];

        $r0[0] = "CDATA";

        $r0[1] = "ENUMERATED";

        $r0[2] = "ID";

        $r0[3] = "IDREF";

        $r0[4] = "IDREFS";

        $r0[5] = "ENTITY";

        $r0[6] = "ENTITIES";

        $r0[7] = "NOTATION";

        $r0[8] = "NMTOKEN";

        $r0[9] = "NMTOKENS";

        <com.ctc.wstx.dtd.DTDAttribute: java.lang.String[] sTypes> = $r0;

        return;
    }
}
