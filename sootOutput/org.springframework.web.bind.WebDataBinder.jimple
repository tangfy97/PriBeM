public class org.springframework.web.bind.WebDataBinder extends org.springframework.validation.DataBinder
{
    public static final java.lang.String DEFAULT_FIELD_MARKER_PREFIX;
    public static final java.lang.String DEFAULT_FIELD_DEFAULT_PREFIX;
    private java.lang.String fieldMarkerPrefix;
    private java.lang.String fieldDefaultPrefix;
    private boolean bindEmptyMultipartFiles;

    public void <init>(java.lang.Object)
    {
        java.lang.Object r1;
        org.springframework.web.bind.WebDataBinder r0;

        r0 := @this: org.springframework.web.bind.WebDataBinder;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<org.springframework.validation.DataBinder: void <init>(java.lang.Object)>(r1);

        r0.<org.springframework.web.bind.WebDataBinder: java.lang.String fieldMarkerPrefix> = "_";

        r0.<org.springframework.web.bind.WebDataBinder: java.lang.String fieldDefaultPrefix> = "!";

        r0.<org.springframework.web.bind.WebDataBinder: boolean bindEmptyMultipartFiles> = 1;

        return;
    }

    public void <init>(java.lang.Object, java.lang.String)
    {
        java.lang.Object r1;
        java.lang.String r2;
        org.springframework.web.bind.WebDataBinder r0;

        r0 := @this: org.springframework.web.bind.WebDataBinder;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.springframework.validation.DataBinder: void <init>(java.lang.Object,java.lang.String)>(r1, r2);

        r0.<org.springframework.web.bind.WebDataBinder: java.lang.String fieldMarkerPrefix> = "_";

        r0.<org.springframework.web.bind.WebDataBinder: java.lang.String fieldDefaultPrefix> = "!";

        r0.<org.springframework.web.bind.WebDataBinder: boolean bindEmptyMultipartFiles> = 1;

        return;
    }

    public void setFieldMarkerPrefix(java.lang.String)
    {
        java.lang.String r1;
        org.springframework.web.bind.WebDataBinder r0;

        r0 := @this: org.springframework.web.bind.WebDataBinder;

        r1 := @parameter0: java.lang.String;

        r0.<org.springframework.web.bind.WebDataBinder: java.lang.String fieldMarkerPrefix> = r1;

        return;
    }

    public java.lang.String getFieldMarkerPrefix()
    {
        java.lang.String $r1;
        org.springframework.web.bind.WebDataBinder r0;

        r0 := @this: org.springframework.web.bind.WebDataBinder;

        $r1 = r0.<org.springframework.web.bind.WebDataBinder: java.lang.String fieldMarkerPrefix>;

        return $r1;
    }

    public void setFieldDefaultPrefix(java.lang.String)
    {
        java.lang.String r1;
        org.springframework.web.bind.WebDataBinder r0;

        r0 := @this: org.springframework.web.bind.WebDataBinder;

        r1 := @parameter0: java.lang.String;

        r0.<org.springframework.web.bind.WebDataBinder: java.lang.String fieldDefaultPrefix> = r1;

        return;
    }

    public java.lang.String getFieldDefaultPrefix()
    {
        java.lang.String $r1;
        org.springframework.web.bind.WebDataBinder r0;

        r0 := @this: org.springframework.web.bind.WebDataBinder;

        $r1 = r0.<org.springframework.web.bind.WebDataBinder: java.lang.String fieldDefaultPrefix>;

        return $r1;
    }

    public void setBindEmptyMultipartFiles(boolean)
    {
        org.springframework.web.bind.WebDataBinder r0;
        boolean z0;

        r0 := @this: org.springframework.web.bind.WebDataBinder;

        z0 := @parameter0: boolean;

        r0.<org.springframework.web.bind.WebDataBinder: boolean bindEmptyMultipartFiles> = z0;

        return;
    }

    public boolean isBindEmptyMultipartFiles()
    {
        org.springframework.web.bind.WebDataBinder r0;
        boolean $z0;

        r0 := @this: org.springframework.web.bind.WebDataBinder;

        $z0 = r0.<org.springframework.web.bind.WebDataBinder: boolean bindEmptyMultipartFiles>;

        return $z0;
    }

    protected void doBind(org.springframework.beans.MutablePropertyValues)
    {
        org.springframework.beans.MutablePropertyValues r1;
        org.springframework.web.bind.WebDataBinder r0;

        r0 := @this: org.springframework.web.bind.WebDataBinder;

        r1 := @parameter0: org.springframework.beans.MutablePropertyValues;

        virtualinvoke r0.<org.springframework.web.bind.WebDataBinder: void checkFieldDefaults(org.springframework.beans.MutablePropertyValues)>(r1);

        virtualinvoke r0.<org.springframework.web.bind.WebDataBinder: void checkFieldMarkers(org.springframework.beans.MutablePropertyValues)>(r1);

        specialinvoke r0.<org.springframework.validation.DataBinder: void doBind(org.springframework.beans.MutablePropertyValues)>(r1);

        return;
    }

    protected void checkFieldDefaults(org.springframework.beans.MutablePropertyValues)
    {
        org.springframework.beans.PropertyValue[] $r4;
        int i0, $i1, i2;
        java.lang.String $r1, $r2, $r6, $r7, $r8;
        boolean $z0, $z1, $z2;
        org.springframework.beans.PropertyValue r5;
        org.springframework.beans.MutablePropertyValues r3;
        org.springframework.web.bind.WebDataBinder r0;
        java.lang.Object $r10;
        org.springframework.beans.ConfigurablePropertyAccessor $r9;

        r0 := @this: org.springframework.web.bind.WebDataBinder;

        r3 := @parameter0: org.springframework.beans.MutablePropertyValues;

        $r1 = virtualinvoke r0.<org.springframework.web.bind.WebDataBinder: java.lang.String getFieldDefaultPrefix()>();

        if $r1 == null goto label5;

        $r2 = virtualinvoke r0.<org.springframework.web.bind.WebDataBinder: java.lang.String getFieldDefaultPrefix()>();

        $r4 = virtualinvoke r3.<org.springframework.beans.MutablePropertyValues: org.springframework.beans.PropertyValue[] getPropertyValues()>();

        i0 = lengthof $r4;

        i2 = 0;

        goto label4;

     label1:
        r5 = $r4[i2];

        $r6 = virtualinvoke r5.<org.springframework.beans.PropertyValue: java.lang.String getName()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>($r2);

        if $z0 == 0 goto label3;

        $r7 = virtualinvoke r5.<org.springframework.beans.PropertyValue: java.lang.String getName()>();

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String substring(int)>($i1);

        $r9 = virtualinvoke r0.<org.springframework.web.bind.WebDataBinder: org.springframework.beans.ConfigurablePropertyAccessor getPropertyAccessor()>();

        $z1 = interfaceinvoke $r9.<org.springframework.beans.ConfigurablePropertyAccessor: boolean isWritableProperty(java.lang.String)>($r8);

        if $z1 == 0 goto label2;

        $z2 = virtualinvoke r3.<org.springframework.beans.MutablePropertyValues: boolean contains(java.lang.String)>($r8);

        if $z2 != 0 goto label2;

        $r10 = virtualinvoke r5.<org.springframework.beans.PropertyValue: java.lang.Object getValue()>();

        virtualinvoke r3.<org.springframework.beans.MutablePropertyValues: org.springframework.beans.MutablePropertyValues add(java.lang.String,java.lang.Object)>($r8, $r10);

     label2:
        virtualinvoke r3.<org.springframework.beans.MutablePropertyValues: void removePropertyValue(org.springframework.beans.PropertyValue)>(r5);

     label3:
        i2 = i2 + 1;

     label4:
        if i2 < i0 goto label1;

     label5:
        return;
    }

    protected void checkFieldMarkers(org.springframework.beans.MutablePropertyValues)
    {
        org.springframework.beans.PropertyValue[] $r4;
        int i0, $i1, i2;
        java.lang.String $r1, $r2, $r6, $r7, $r8;
        boolean $z0, $z1, $z2;
        org.springframework.beans.PropertyValue r5;
        org.springframework.beans.MutablePropertyValues r3;
        org.springframework.web.bind.WebDataBinder r0;
        java.lang.Class $r11;
        java.lang.Object $r12;
        org.springframework.beans.ConfigurablePropertyAccessor $r9, $r10;

        r0 := @this: org.springframework.web.bind.WebDataBinder;

        r3 := @parameter0: org.springframework.beans.MutablePropertyValues;

        $r1 = virtualinvoke r0.<org.springframework.web.bind.WebDataBinder: java.lang.String getFieldMarkerPrefix()>();

        if $r1 == null goto label5;

        $r2 = virtualinvoke r0.<org.springframework.web.bind.WebDataBinder: java.lang.String getFieldMarkerPrefix()>();

        $r4 = virtualinvoke r3.<org.springframework.beans.MutablePropertyValues: org.springframework.beans.PropertyValue[] getPropertyValues()>();

        i0 = lengthof $r4;

        i2 = 0;

        goto label4;

     label1:
        r5 = $r4[i2];

        $r6 = virtualinvoke r5.<org.springframework.beans.PropertyValue: java.lang.String getName()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>($r2);

        if $z0 == 0 goto label3;

        $r7 = virtualinvoke r5.<org.springframework.beans.PropertyValue: java.lang.String getName()>();

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String substring(int)>($i1);

        $r9 = virtualinvoke r0.<org.springframework.web.bind.WebDataBinder: org.springframework.beans.ConfigurablePropertyAccessor getPropertyAccessor()>();

        $z1 = interfaceinvoke $r9.<org.springframework.beans.ConfigurablePropertyAccessor: boolean isWritableProperty(java.lang.String)>($r8);

        if $z1 == 0 goto label2;

        $z2 = virtualinvoke r3.<org.springframework.beans.MutablePropertyValues: boolean contains(java.lang.String)>($r8);

        if $z2 != 0 goto label2;

        $r10 = virtualinvoke r0.<org.springframework.web.bind.WebDataBinder: org.springframework.beans.ConfigurablePropertyAccessor getPropertyAccessor()>();

        $r11 = interfaceinvoke $r10.<org.springframework.beans.ConfigurablePropertyAccessor: java.lang.Class getPropertyType(java.lang.String)>($r8);

        $r12 = virtualinvoke r0.<org.springframework.web.bind.WebDataBinder: java.lang.Object getEmptyValue(java.lang.String,java.lang.Class)>($r8, $r11);

        virtualinvoke r3.<org.springframework.beans.MutablePropertyValues: org.springframework.beans.MutablePropertyValues add(java.lang.String,java.lang.Object)>($r8, $r12);

     label2:
        virtualinvoke r3.<org.springframework.beans.MutablePropertyValues: void removePropertyValue(org.springframework.beans.PropertyValue)>(r5);

     label3:
        i2 = i2 + 1;

     label4:
        if i2 < i0 goto label1;

     label5:
        return;
    }

    protected java.lang.Object getEmptyValue(java.lang.String, java.lang.Class)
    {
        org.springframework.web.bind.WebDataBinder r6;
        java.lang.Boolean $r4;
        java.lang.Class r0, $r1, $r2, $r5;
        java.lang.Object $r3;
        java.lang.String r7;
        boolean $z0, $z1, $z2;

        r6 := @this: org.springframework.web.bind.WebDataBinder;

        r7 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.Class;

        if r0 == null goto label1;

        $r5 = <java.lang.Boolean: java.lang.Class TYPE>;

        $z2 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>(r0);

        if $z2 != 0 goto label2;

     label1:
        $r1 = class "Ljava/lang/Boolean;";

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label3;

     label2:
        $r4 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        return $r4;

     label3:
        if r0 == null goto label4;

        $z1 = virtualinvoke r0.<java.lang.Class: boolean isArray()>();

        if $z1 == 0 goto label4;

        $r2 = virtualinvoke r0.<java.lang.Class: java.lang.Class getComponentType()>();

        $r3 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r2, 0);

        return $r3;

     label4:
        return null;
    }

    protected void bindMultipartFiles(java.util.Map, org.springframework.beans.MutablePropertyValues)
    {
        java.util.Map$Entry r4;
        java.util.Iterator $r2;
        java.util.Set $r1;
        org.springframework.beans.MutablePropertyValues r10;
        java.util.Map r0;
        org.springframework.web.bind.WebDataBinder r9;
        org.springframework.web.multipart.MultipartFile r8;
        java.lang.Object $r3, $r5, $r7;
        java.lang.String r6;
        boolean $z0, $z1, $z2;

        r9 := @this: org.springframework.web.bind.WebDataBinder;

        r0 := @parameter0: java.util.Map;

        r10 := @parameter1: org.springframework.beans.MutablePropertyValues;

        $r1 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

        goto label3;

     label1:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r3;

        $r5 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        r6 = (java.lang.String) $r5;

        $r7 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        r8 = (org.springframework.web.multipart.MultipartFile) $r7;

        $z0 = virtualinvoke r9.<org.springframework.web.bind.WebDataBinder: boolean isBindEmptyMultipartFiles()>();

        if $z0 != 0 goto label2;

        $z1 = interfaceinvoke r8.<org.springframework.web.multipart.MultipartFile: boolean isEmpty()>();

        if $z1 != 0 goto label3;

     label2:
        virtualinvoke r10.<org.springframework.beans.MutablePropertyValues: org.springframework.beans.MutablePropertyValues add(java.lang.String,java.lang.Object)>(r6, r8);

     label3:
        $z2 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 != 0 goto label1;

        return;
    }

    protected void bindMultipart(java.util.Map, org.springframework.beans.MutablePropertyValues)
    {
        java.util.Map r0;
        int $i0;
        java.lang.String r6;
        boolean $z0, $z1, $z2;
        java.util.Map$Entry r4;
        java.util.Iterator $r2;
        java.util.Set $r1;
        org.springframework.beans.MutablePropertyValues r9;
        java.util.List r8;
        org.springframework.web.bind.WebDataBinder r12;
        org.springframework.web.multipart.MultipartFile r11;
        java.lang.Object $r3, $r5, $r7, $r10;

        r12 := @this: org.springframework.web.bind.WebDataBinder;

        r0 := @parameter0: java.util.Map;

        r9 := @parameter1: org.springframework.beans.MutablePropertyValues;

        $r1 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

        goto label4;

     label1:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r3;

        $r5 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        r6 = (java.lang.String) $r5;

        $r7 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        r8 = (java.util.List) $r7;

        $i0 = interfaceinvoke r8.<java.util.List: int size()>();

        if $i0 != 1 goto label3;

        $r10 = interfaceinvoke r8.<java.util.List: java.lang.Object get(int)>(0);

        r11 = (org.springframework.web.multipart.MultipartFile) $r10;

        $z0 = virtualinvoke r12.<org.springframework.web.bind.WebDataBinder: boolean isBindEmptyMultipartFiles()>();

        if $z0 != 0 goto label2;

        $z1 = interfaceinvoke r11.<org.springframework.web.multipart.MultipartFile: boolean isEmpty()>();

        if $z1 != 0 goto label4;

     label2:
        virtualinvoke r9.<org.springframework.beans.MutablePropertyValues: org.springframework.beans.MutablePropertyValues add(java.lang.String,java.lang.Object)>(r6, r11);

        goto label4;

     label3:
        virtualinvoke r9.<org.springframework.beans.MutablePropertyValues: org.springframework.beans.MutablePropertyValues add(java.lang.String,java.lang.Object)>(r6, r8);

     label4:
        $z2 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 != 0 goto label1;

        return;
    }

    public static void <clinit>()
    {
        <org.springframework.web.bind.WebDataBinder: java.lang.String DEFAULT_FIELD_DEFAULT_PREFIX> = "!";

        <org.springframework.web.bind.WebDataBinder: java.lang.String DEFAULT_FIELD_MARKER_PREFIX> = "_";

        return;
    }
}
