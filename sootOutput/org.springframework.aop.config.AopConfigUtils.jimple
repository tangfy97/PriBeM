public abstract class org.springframework.aop.config.AopConfigUtils extends java.lang.Object
{
    public static final java.lang.String AUTO_PROXY_CREATOR_BEAN_NAME;
    private static final java.util.List APC_PRIORITY_LIST;

    static void <clinit>()
    {
        java.util.List $r1, $r2, $r3;
        java.util.ArrayList $r0;

        <org.springframework.aop.config.AopConfigUtils: java.lang.String AUTO_PROXY_CREATOR_BEAN_NAME> = "org.springframework.aop.config.internalAutoProxyCreator";

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        <org.springframework.aop.config.AopConfigUtils: java.util.List APC_PRIORITY_LIST> = $r0;

        $r1 = <org.springframework.aop.config.AopConfigUtils: java.util.List APC_PRIORITY_LIST>;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>(class "Lorg/springframework/aop/framework/autoproxy/InfrastructureAdvisorAutoProxyCreator;");

        $r2 = <org.springframework.aop.config.AopConfigUtils: java.util.List APC_PRIORITY_LIST>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(class "Lorg/springframework/aop/aspectj/autoproxy/AspectJAwareAdvisorAutoProxyCreator;");

        $r3 = <org.springframework.aop.config.AopConfigUtils: java.util.List APC_PRIORITY_LIST>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(class "Lorg/springframework/aop/aspectj/annotation/AnnotationAwareAspectJAutoProxyCreator;");

        return;
    }

    public void <init>()
    {
        org.springframework.aop.config.AopConfigUtils r0;

        r0 := @this: org.springframework.aop.config.AopConfigUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.springframework.beans.factory.config.BeanDefinition registerAutoProxyCreatorIfNecessary(org.springframework.beans.factory.support.BeanDefinitionRegistry)
    {
        org.springframework.beans.factory.config.BeanDefinition $r1;
        org.springframework.beans.factory.support.BeanDefinitionRegistry r0;

        r0 := @parameter0: org.springframework.beans.factory.support.BeanDefinitionRegistry;

        $r1 = staticinvoke <org.springframework.aop.config.AopConfigUtils: org.springframework.beans.factory.config.BeanDefinition registerAutoProxyCreatorIfNecessary(org.springframework.beans.factory.support.BeanDefinitionRegistry,java.lang.Object)>(r0, null);

        return $r1;
    }

    public static org.springframework.beans.factory.config.BeanDefinition registerAutoProxyCreatorIfNecessary(org.springframework.beans.factory.support.BeanDefinitionRegistry, java.lang.Object)
    {
        org.springframework.beans.factory.config.BeanDefinition $r2;
        java.lang.Object r1;
        org.springframework.beans.factory.support.BeanDefinitionRegistry r0;

        r0 := @parameter0: org.springframework.beans.factory.support.BeanDefinitionRegistry;

        r1 := @parameter1: java.lang.Object;

        $r2 = staticinvoke <org.springframework.aop.config.AopConfigUtils: org.springframework.beans.factory.config.BeanDefinition registerOrEscalateApcAsRequired(java.lang.Class,org.springframework.beans.factory.support.BeanDefinitionRegistry,java.lang.Object)>(class "Lorg/springframework/aop/framework/autoproxy/InfrastructureAdvisorAutoProxyCreator;", r0, r1);

        return $r2;
    }

    public static org.springframework.beans.factory.config.BeanDefinition registerAspectJAutoProxyCreatorIfNecessary(org.springframework.beans.factory.support.BeanDefinitionRegistry)
    {
        org.springframework.beans.factory.config.BeanDefinition $r1;
        org.springframework.beans.factory.support.BeanDefinitionRegistry r0;

        r0 := @parameter0: org.springframework.beans.factory.support.BeanDefinitionRegistry;

        $r1 = staticinvoke <org.springframework.aop.config.AopConfigUtils: org.springframework.beans.factory.config.BeanDefinition registerAspectJAutoProxyCreatorIfNecessary(org.springframework.beans.factory.support.BeanDefinitionRegistry,java.lang.Object)>(r0, null);

        return $r1;
    }

    public static org.springframework.beans.factory.config.BeanDefinition registerAspectJAutoProxyCreatorIfNecessary(org.springframework.beans.factory.support.BeanDefinitionRegistry, java.lang.Object)
    {
        org.springframework.beans.factory.config.BeanDefinition $r2;
        java.lang.Object r1;
        org.springframework.beans.factory.support.BeanDefinitionRegistry r0;

        r0 := @parameter0: org.springframework.beans.factory.support.BeanDefinitionRegistry;

        r1 := @parameter1: java.lang.Object;

        $r2 = staticinvoke <org.springframework.aop.config.AopConfigUtils: org.springframework.beans.factory.config.BeanDefinition registerOrEscalateApcAsRequired(java.lang.Class,org.springframework.beans.factory.support.BeanDefinitionRegistry,java.lang.Object)>(class "Lorg/springframework/aop/aspectj/autoproxy/AspectJAwareAdvisorAutoProxyCreator;", r0, r1);

        return $r2;
    }

    public static org.springframework.beans.factory.config.BeanDefinition registerAspectJAnnotationAutoProxyCreatorIfNecessary(org.springframework.beans.factory.support.BeanDefinitionRegistry)
    {
        org.springframework.beans.factory.config.BeanDefinition $r1;
        org.springframework.beans.factory.support.BeanDefinitionRegistry r0;

        r0 := @parameter0: org.springframework.beans.factory.support.BeanDefinitionRegistry;

        $r1 = staticinvoke <org.springframework.aop.config.AopConfigUtils: org.springframework.beans.factory.config.BeanDefinition registerAspectJAnnotationAutoProxyCreatorIfNecessary(org.springframework.beans.factory.support.BeanDefinitionRegistry,java.lang.Object)>(r0, null);

        return $r1;
    }

    public static org.springframework.beans.factory.config.BeanDefinition registerAspectJAnnotationAutoProxyCreatorIfNecessary(org.springframework.beans.factory.support.BeanDefinitionRegistry, java.lang.Object)
    {
        org.springframework.beans.factory.config.BeanDefinition $r2;
        java.lang.Object r1;
        org.springframework.beans.factory.support.BeanDefinitionRegistry r0;

        r0 := @parameter0: org.springframework.beans.factory.support.BeanDefinitionRegistry;

        r1 := @parameter1: java.lang.Object;

        $r2 = staticinvoke <org.springframework.aop.config.AopConfigUtils: org.springframework.beans.factory.config.BeanDefinition registerOrEscalateApcAsRequired(java.lang.Class,org.springframework.beans.factory.support.BeanDefinitionRegistry,java.lang.Object)>(class "Lorg/springframework/aop/aspectj/annotation/AnnotationAwareAspectJAutoProxyCreator;", r0, r1);

        return $r2;
    }

    public static void forceAutoProxyCreatorToUseClassProxying(org.springframework.beans.factory.support.BeanDefinitionRegistry)
    {
        org.springframework.beans.factory.config.BeanDefinition $r1;
        java.lang.Boolean $r3;
        org.springframework.beans.MutablePropertyValues $r2;
        org.springframework.beans.factory.support.BeanDefinitionRegistry r0;
        boolean $z0;

        r0 := @parameter0: org.springframework.beans.factory.support.BeanDefinitionRegistry;

        $z0 = interfaceinvoke r0.<org.springframework.beans.factory.support.BeanDefinitionRegistry: boolean containsBeanDefinition(java.lang.String)>("org.springframework.aop.config.internalAutoProxyCreator");

        if $z0 == 0 goto label1;

        $r1 = interfaceinvoke r0.<org.springframework.beans.factory.support.BeanDefinitionRegistry: org.springframework.beans.factory.config.BeanDefinition getBeanDefinition(java.lang.String)>("org.springframework.aop.config.internalAutoProxyCreator");

        $r2 = interfaceinvoke $r1.<org.springframework.beans.factory.config.BeanDefinition: org.springframework.beans.MutablePropertyValues getPropertyValues()>();

        $r3 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r2.<org.springframework.beans.MutablePropertyValues: org.springframework.beans.MutablePropertyValues add(java.lang.String,java.lang.Object)>("proxyTargetClass", $r3);

     label1:
        return;
    }

    static void forceAutoProxyCreatorToExposeProxy(org.springframework.beans.factory.support.BeanDefinitionRegistry)
    {
        org.springframework.beans.factory.config.BeanDefinition $r1;
        java.lang.Boolean $r3;
        org.springframework.beans.MutablePropertyValues $r2;
        org.springframework.beans.factory.support.BeanDefinitionRegistry r0;
        boolean $z0;

        r0 := @parameter0: org.springframework.beans.factory.support.BeanDefinitionRegistry;

        $z0 = interfaceinvoke r0.<org.springframework.beans.factory.support.BeanDefinitionRegistry: boolean containsBeanDefinition(java.lang.String)>("org.springframework.aop.config.internalAutoProxyCreator");

        if $z0 == 0 goto label1;

        $r1 = interfaceinvoke r0.<org.springframework.beans.factory.support.BeanDefinitionRegistry: org.springframework.beans.factory.config.BeanDefinition getBeanDefinition(java.lang.String)>("org.springframework.aop.config.internalAutoProxyCreator");

        $r2 = interfaceinvoke $r1.<org.springframework.beans.factory.config.BeanDefinition: org.springframework.beans.MutablePropertyValues getPropertyValues()>();

        $r3 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r2.<org.springframework.beans.MutablePropertyValues: org.springframework.beans.MutablePropertyValues add(java.lang.String,java.lang.Object)>("exposeProxy", $r3);

     label1:
        return;
    }

    private static org.springframework.beans.factory.config.BeanDefinition registerOrEscalateApcAsRequired(java.lang.Class, org.springframework.beans.factory.support.BeanDefinitionRegistry, java.lang.Object)
    {
        org.springframework.beans.factory.support.RootBeanDefinition $r1;
        org.springframework.beans.MutablePropertyValues $r4;
        org.springframework.beans.factory.support.BeanDefinitionRegistry r0;
        java.lang.Integer $r5;
        int $i0, $i1;
        org.springframework.beans.factory.config.BeanDefinition $r6;
        java.lang.Class r2;
        java.lang.Object r3;
        java.lang.String $r7, $r8, $r9, $r10;
        boolean $z0, $z1;

        r2 := @parameter0: java.lang.Class;

        r0 := @parameter1: org.springframework.beans.factory.support.BeanDefinitionRegistry;

        r3 := @parameter2: java.lang.Object;

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r0, "BeanDefinitionRegistry must not be null");

        $z0 = interfaceinvoke r0.<org.springframework.beans.factory.support.BeanDefinitionRegistry: boolean containsBeanDefinition(java.lang.String)>("org.springframework.aop.config.internalAutoProxyCreator");

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r0.<org.springframework.beans.factory.support.BeanDefinitionRegistry: org.springframework.beans.factory.config.BeanDefinition getBeanDefinition(java.lang.String)>("org.springframework.aop.config.internalAutoProxyCreator");

        $r7 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>();

        $r8 = interfaceinvoke $r6.<org.springframework.beans.factory.config.BeanDefinition: java.lang.String getBeanClassName()>();

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z1 != 0 goto label1;

        $r9 = interfaceinvoke $r6.<org.springframework.beans.factory.config.BeanDefinition: java.lang.String getBeanClassName()>();

        $i0 = staticinvoke <org.springframework.aop.config.AopConfigUtils: int findPriorityForClass(java.lang.String)>($r9);

        $i1 = staticinvoke <org.springframework.aop.config.AopConfigUtils: int findPriorityForClass(java.lang.Class)>(r2);

        if $i0 >= $i1 goto label1;

        $r10 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke $r6.<org.springframework.beans.factory.config.BeanDefinition: void setBeanClassName(java.lang.String)>($r10);

     label1:
        return null;

     label2:
        $r1 = new org.springframework.beans.factory.support.RootBeanDefinition;

        specialinvoke $r1.<org.springframework.beans.factory.support.RootBeanDefinition: void <init>(java.lang.Class)>(r2);

        virtualinvoke $r1.<org.springframework.beans.factory.support.RootBeanDefinition: void setSource(java.lang.Object)>(r3);

        $r4 = virtualinvoke $r1.<org.springframework.beans.factory.support.RootBeanDefinition: org.springframework.beans.MutablePropertyValues getPropertyValues()>();

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-2147483648);

        virtualinvoke $r4.<org.springframework.beans.MutablePropertyValues: org.springframework.beans.MutablePropertyValues add(java.lang.String,java.lang.Object)>("order", $r5);

        virtualinvoke $r1.<org.springframework.beans.factory.support.RootBeanDefinition: void setRole(int)>(2);

        interfaceinvoke r0.<org.springframework.beans.factory.support.BeanDefinitionRegistry: void registerBeanDefinition(java.lang.String,org.springframework.beans.factory.config.BeanDefinition)>("org.springframework.aop.config.internalAutoProxyCreator", $r1);

        return $r1;
    }

    private static int findPriorityForClass(java.lang.Class)
    {
        int $i0;
        java.lang.Class r0;
        java.util.List $r1;

        r0 := @parameter0: java.lang.Class;

        $r1 = <org.springframework.aop.config.AopConfigUtils: java.util.List APC_PRIORITY_LIST>;

        $i0 = interfaceinvoke $r1.<java.util.List: int indexOf(java.lang.Object)>(r0);

        return $i0;
    }

    private static int findPriorityForClass(java.lang.String)
    {
        java.lang.IllegalArgumentException $r6;
        java.util.List $r0, $r1;
        int $i0, i1;
        java.lang.Object $r2;
        java.lang.Class r3;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r4, r5, $r10;
        boolean $z0;

        r5 := @parameter0: java.lang.String;

        i1 = 0;

        goto label3;

     label1:
        $r1 = <org.springframework.aop.config.AopConfigUtils: java.util.List APC_PRIORITY_LIST>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i1);

        r3 = (java.lang.Class) $r2;

        $r4 = virtualinvoke r3.<java.lang.Class: java.lang.String getName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z0 == 0 goto label2;

        return i1;

     label2:
        i1 = i1 + 1;

     label3:
        $r0 = <org.springframework.aop.config.AopConfigUtils: java.util.List APC_PRIORITY_LIST>;

        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        if i1 < $i0 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("Class name [");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] is not a known auto-proxy creator class");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r6;
    }
}
