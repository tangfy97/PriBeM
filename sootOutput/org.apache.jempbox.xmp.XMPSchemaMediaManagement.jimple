public class org.apache.jempbox.xmp.XMPSchemaMediaManagement extends org.apache.jempbox.xmp.XMPSchema
{
    public static final java.lang.String NAMESPACE;

    public void <init>(org.apache.jempbox.xmp.XMPMetadata)
    {
        org.apache.jempbox.xmp.XMPMetadata r1;
        org.apache.jempbox.xmp.XMPSchemaMediaManagement r0;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaMediaManagement;

        r1 := @parameter0: org.apache.jempbox.xmp.XMPMetadata;

        specialinvoke r0.<org.apache.jempbox.xmp.XMPSchema: void <init>(org.apache.jempbox.xmp.XMPMetadata,java.lang.String,java.lang.String)>(r1, "xmpMM", "http://ns.adobe.com/xap/1.0/mm/");

        return;
    }

    public void <init>(org.w3c.dom.Element, java.lang.String)
    {
        org.w3c.dom.Element r1;
        java.lang.String r2;
        org.apache.jempbox.xmp.XMPSchemaMediaManagement r0;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaMediaManagement;

        r1 := @parameter0: org.w3c.dom.Element;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.jempbox.xmp.XMPSchema: void <init>(org.w3c.dom.Element,java.lang.String)>(r1, r2);

        return;
    }

    public org.apache.jempbox.xmp.ResourceRef getDerivedFrom()
    {
        org.w3c.dom.Node $r10, $r13;
        int $i0, $i1;
        java.lang.String $r3, $r6;
        org.w3c.dom.NodeList $r7, $r9;
        org.apache.jempbox.xmp.ResourceRef $r12, $r14, r15;
        org.w3c.dom.Element $r2, $r8, r11, r16;
        java.lang.StringBuilder $r1, $r4, $r5;
        org.apache.jempbox.xmp.XMPSchemaMediaManagement r0;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaMediaManagement;

        r15 = null;

        $r2 = r0.<org.apache.jempbox.xmp.XMPSchemaMediaManagement: org.w3c.dom.Element schema>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<org.apache.jempbox.xmp.XMPSchemaMediaManagement: java.lang.String prefix>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":DerivedFrom");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = interfaceinvoke $r2.<org.w3c.dom.Element: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)>($r6);

        $i0 = interfaceinvoke $r7.<org.w3c.dom.NodeList: int getLength()>();

        if $i0 <= 0 goto label1;

        $r13 = interfaceinvoke $r7.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(0);

        r16 = (org.w3c.dom.Element) $r13;

        $r14 = new org.apache.jempbox.xmp.ResourceRef;

        specialinvoke $r14.<org.apache.jempbox.xmp.ResourceRef: void <init>(org.w3c.dom.Element)>(r16);

        r15 = $r14;

        goto label2;

     label1:
        $r8 = r0.<org.apache.jempbox.xmp.XMPSchemaMediaManagement: org.w3c.dom.Element schema>;

        $r9 = interfaceinvoke $r8.<org.w3c.dom.Element: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)>("xmpMM:RenditionOf");

        $i1 = interfaceinvoke $r9.<org.w3c.dom.NodeList: int getLength()>();

        if $i1 <= 0 goto label2;

        $r10 = interfaceinvoke $r9.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(0);

        r11 = (org.w3c.dom.Element) $r10;

        $r12 = new org.apache.jempbox.xmp.ResourceRef;

        specialinvoke $r12.<org.apache.jempbox.xmp.ResourceRef: void <init>(org.w3c.dom.Element)>(r11);

        r15 = $r12;

     label2:
        return r15;
    }

    public org.apache.jempbox.xmp.ResourceRef createDerivedFrom()
    {
        org.apache.jempbox.xmp.ResourceRef $r9;
        org.w3c.dom.Element $r1, $r8;
        org.w3c.dom.Document $r2;
        java.lang.StringBuilder $r3, $r5, $r6;
        java.lang.String $r4, $r7;
        org.apache.jempbox.xmp.XMPSchemaMediaManagement r0;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaMediaManagement;

        $r1 = r0.<org.apache.jempbox.xmp.XMPSchemaMediaManagement: org.w3c.dom.Element schema>;

        $r2 = interfaceinvoke $r1.<org.w3c.dom.Element: org.w3c.dom.Document getOwnerDocument()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = r0.<org.apache.jempbox.xmp.XMPSchemaMediaManagement: java.lang.String prefix>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":DerivedFrom");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = interfaceinvoke $r2.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>($r7);

        $r9 = new org.apache.jempbox.xmp.ResourceRef;

        specialinvoke $r9.<org.apache.jempbox.xmp.ResourceRef: void <init>(org.w3c.dom.Element)>($r8);

        return $r9;
    }

    public void setDerivedFrom(org.apache.jempbox.xmp.ResourceRef)
    {
        org.apache.jempbox.xmp.ResourceRef r7;
        org.w3c.dom.Element $r2;
        java.lang.StringBuilder $r1, $r4, $r5;
        java.lang.String $r3, $r6;
        org.apache.jempbox.xmp.XMPSchemaMediaManagement r0;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaMediaManagement;

        r7 := @parameter0: org.apache.jempbox.xmp.ResourceRef;

        $r2 = r0.<org.apache.jempbox.xmp.XMPSchemaMediaManagement: org.w3c.dom.Element schema>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<org.apache.jempbox.xmp.XMPSchemaMediaManagement: java.lang.String prefix>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":DerivedFrom");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.jempbox.impl.XMLUtil: void setElementableValue(org.w3c.dom.Element,java.lang.String,org.apache.jempbox.xmp.Elementable)>($r2, $r6, r7);

        return;
    }

    public void setDocumentID(java.lang.String)
    {
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5, r6;
        org.apache.jempbox.xmp.XMPSchemaMediaManagement r0;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaMediaManagement;

        r6 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.apache.jempbox.xmp.XMPSchemaMediaManagement: java.lang.String prefix>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":DocumentID");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.jempbox.xmp.XMPSchemaMediaManagement: void setTextProperty(java.lang.String,java.lang.String)>($r5, r6);

        return;
    }

    public java.lang.String getDocumentID()
    {
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5, $r6;
        org.apache.jempbox.xmp.XMPSchemaMediaManagement r0;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaMediaManagement;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.apache.jempbox.xmp.XMPSchemaMediaManagement: java.lang.String prefix>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":DocumentID");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke r0.<org.apache.jempbox.xmp.XMPSchemaMediaManagement: java.lang.String getTextProperty(java.lang.String)>($r5);

        return $r6;
    }

    public void setVersionID(java.lang.String)
    {
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5, r6;
        org.apache.jempbox.xmp.XMPSchemaMediaManagement r0;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaMediaManagement;

        r6 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.apache.jempbox.xmp.XMPSchemaMediaManagement: java.lang.String prefix>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":VersionID");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.jempbox.xmp.XMPSchemaMediaManagement: void setTextProperty(java.lang.String,java.lang.String)>($r5, r6);

        return;
    }

    public java.lang.String getVersionID()
    {
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5, $r6;
        org.apache.jempbox.xmp.XMPSchemaMediaManagement r0;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaMediaManagement;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.apache.jempbox.xmp.XMPSchemaMediaManagement: java.lang.String prefix>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":VersionID");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke r0.<org.apache.jempbox.xmp.XMPSchemaMediaManagement: java.lang.String getTextProperty(java.lang.String)>($r5);

        return $r6;
    }

    public java.util.List getHistory()
    {
        java.util.List $r6;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5;
        org.apache.jempbox.xmp.XMPSchemaMediaManagement r0;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaMediaManagement;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.apache.jempbox.xmp.XMPSchemaMediaManagement: java.lang.String prefix>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":History");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke r0.<org.apache.jempbox.xmp.XMPSchemaMediaManagement: java.util.List getEventSequenceList(java.lang.String)>($r5);

        return $r6;
    }

    public void removeHistory(org.apache.jempbox.xmp.ResourceEvent)
    {
        org.apache.jempbox.xmp.ResourceEvent r6;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5;
        org.apache.jempbox.xmp.XMPSchemaMediaManagement r0;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaMediaManagement;

        r6 := @parameter0: org.apache.jempbox.xmp.ResourceEvent;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.apache.jempbox.xmp.XMPSchemaMediaManagement: java.lang.String prefix>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":History");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.jempbox.xmp.XMPSchemaMediaManagement: void removeSequenceValue(java.lang.String,org.apache.jempbox.xmp.Elementable)>($r5, r6);

        return;
    }

    public void addHistory(org.apache.jempbox.xmp.ResourceEvent)
    {
        org.apache.jempbox.xmp.ResourceEvent r6;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5;
        org.apache.jempbox.xmp.XMPSchemaMediaManagement r0;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaMediaManagement;

        r6 := @parameter0: org.apache.jempbox.xmp.ResourceEvent;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.apache.jempbox.xmp.XMPSchemaMediaManagement: java.lang.String prefix>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":History");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.jempbox.xmp.XMPSchemaMediaManagement: void addSequenceValue(java.lang.String,org.apache.jempbox.xmp.Elementable)>($r5, r6);

        return;
    }

    public org.apache.jempbox.xmp.ResourceRef getManagedFrom()
    {
        org.w3c.dom.NodeList $r7;
        org.apache.jempbox.xmp.ResourceRef $r10, r11;
        org.w3c.dom.Element $r2, r9;
        org.w3c.dom.Node $r8;
        int $i0;
        java.lang.StringBuilder $r1, $r4, $r5;
        java.lang.String $r3, $r6;
        org.apache.jempbox.xmp.XMPSchemaMediaManagement r0;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaMediaManagement;

        r11 = null;

        $r2 = r0.<org.apache.jempbox.xmp.XMPSchemaMediaManagement: org.w3c.dom.Element schema>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<org.apache.jempbox.xmp.XMPSchemaMediaManagement: java.lang.String prefix>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":ManagedFrom");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = interfaceinvoke $r2.<org.w3c.dom.Element: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)>($r6);

        $i0 = interfaceinvoke $r7.<org.w3c.dom.NodeList: int getLength()>();

        if $i0 <= 0 goto label1;

        $r8 = interfaceinvoke $r7.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(0);

        r9 = (org.w3c.dom.Element) $r8;

        $r10 = new org.apache.jempbox.xmp.ResourceRef;

        specialinvoke $r10.<org.apache.jempbox.xmp.ResourceRef: void <init>(org.w3c.dom.Element)>(r9);

        r11 = $r10;

     label1:
        return r11;
    }

    public org.apache.jempbox.xmp.ResourceRef createManagedFrom()
    {
        org.apache.jempbox.xmp.ResourceRef $r9;
        org.w3c.dom.Element $r1, $r8;
        org.w3c.dom.Document $r2;
        java.lang.StringBuilder $r3, $r5, $r6;
        java.lang.String $r4, $r7;
        org.apache.jempbox.xmp.XMPSchemaMediaManagement r0;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaMediaManagement;

        $r1 = r0.<org.apache.jempbox.xmp.XMPSchemaMediaManagement: org.w3c.dom.Element schema>;

        $r2 = interfaceinvoke $r1.<org.w3c.dom.Element: org.w3c.dom.Document getOwnerDocument()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = r0.<org.apache.jempbox.xmp.XMPSchemaMediaManagement: java.lang.String prefix>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":ManagedFrom");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = interfaceinvoke $r2.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>($r7);

        $r9 = new org.apache.jempbox.xmp.ResourceRef;

        specialinvoke $r9.<org.apache.jempbox.xmp.ResourceRef: void <init>(org.w3c.dom.Element)>($r8);

        return $r9;
    }

    public void setManagedFrom(org.apache.jempbox.xmp.ResourceRef)
    {
        org.apache.jempbox.xmp.ResourceRef r7;
        org.w3c.dom.Element $r2;
        java.lang.StringBuilder $r1, $r4, $r5;
        java.lang.String $r3, $r6;
        org.apache.jempbox.xmp.XMPSchemaMediaManagement r0;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaMediaManagement;

        r7 := @parameter0: org.apache.jempbox.xmp.ResourceRef;

        $r2 = r0.<org.apache.jempbox.xmp.XMPSchemaMediaManagement: org.w3c.dom.Element schema>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<org.apache.jempbox.xmp.XMPSchemaMediaManagement: java.lang.String prefix>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":ManagedFrom");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.jempbox.impl.XMLUtil: void setElementableValue(org.w3c.dom.Element,java.lang.String,org.apache.jempbox.xmp.Elementable)>($r2, $r6, r7);

        return;
    }

    public void setManager(java.lang.String)
    {
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5, r6;
        org.apache.jempbox.xmp.XMPSchemaMediaManagement r0;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaMediaManagement;

        r6 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.apache.jempbox.xmp.XMPSchemaMediaManagement: java.lang.String prefix>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":Manager");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.jempbox.xmp.XMPSchemaMediaManagement: void setTextProperty(java.lang.String,java.lang.String)>($r5, r6);

        return;
    }

    public java.lang.String getManager()
    {
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5, $r6;
        org.apache.jempbox.xmp.XMPSchemaMediaManagement r0;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaMediaManagement;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.apache.jempbox.xmp.XMPSchemaMediaManagement: java.lang.String prefix>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":Manager");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke r0.<org.apache.jempbox.xmp.XMPSchemaMediaManagement: java.lang.String getTextProperty(java.lang.String)>($r5);

        return $r6;
    }

    public void setManageTo(java.lang.String)
    {
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5, r6;
        org.apache.jempbox.xmp.XMPSchemaMediaManagement r0;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaMediaManagement;

        r6 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.apache.jempbox.xmp.XMPSchemaMediaManagement: java.lang.String prefix>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":ManageTo");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.jempbox.xmp.XMPSchemaMediaManagement: void setTextProperty(java.lang.String,java.lang.String)>($r5, r6);

        return;
    }

    public java.lang.String getManageTo()
    {
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5, $r6;
        org.apache.jempbox.xmp.XMPSchemaMediaManagement r0;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaMediaManagement;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.apache.jempbox.xmp.XMPSchemaMediaManagement: java.lang.String prefix>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":ManageTo");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke r0.<org.apache.jempbox.xmp.XMPSchemaMediaManagement: java.lang.String getTextProperty(java.lang.String)>($r5);

        return $r6;
    }

    public void setManageUI(java.lang.String)
    {
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5, r6;
        org.apache.jempbox.xmp.XMPSchemaMediaManagement r0;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaMediaManagement;

        r6 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.apache.jempbox.xmp.XMPSchemaMediaManagement: java.lang.String prefix>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":ManageUI");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.jempbox.xmp.XMPSchemaMediaManagement: void setTextProperty(java.lang.String,java.lang.String)>($r5, r6);

        return;
    }

    public java.lang.String getManageUI()
    {
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5, $r6;
        org.apache.jempbox.xmp.XMPSchemaMediaManagement r0;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaMediaManagement;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.apache.jempbox.xmp.XMPSchemaMediaManagement: java.lang.String prefix>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":ManageUI");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke r0.<org.apache.jempbox.xmp.XMPSchemaMediaManagement: java.lang.String getTextProperty(java.lang.String)>($r5);

        return $r6;
    }

    public static void <clinit>()
    {
        <org.apache.jempbox.xmp.XMPSchemaMediaManagement: java.lang.String NAMESPACE> = "http://ns.adobe.com/xap/1.0/mm/";

        return;
    }
}
