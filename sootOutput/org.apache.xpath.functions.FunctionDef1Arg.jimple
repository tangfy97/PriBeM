public class org.apache.xpath.functions.FunctionDef1Arg extends org.apache.xpath.functions.FunctionOneArg
{

    public void <init>()
    {
        org.apache.xpath.functions.FunctionDef1Arg r0;

        r0 := @this: org.apache.xpath.functions.FunctionDef1Arg;

        specialinvoke r0.<org.apache.xpath.functions.FunctionOneArg: void <init>()>();

        return;
    }

    protected int getArg0AsNode(org.apache.xpath.XPathContext) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.Expression $r1, $r3;
        org.apache.xpath.XPathContext r2;
        org.apache.xpath.functions.FunctionDef1Arg r0;
        int $i0;

        r0 := @this: org.apache.xpath.functions.FunctionDef1Arg;

        r2 := @parameter0: org.apache.xpath.XPathContext;

        $r1 = r0.<org.apache.xpath.functions.FunctionOneArg: org.apache.xpath.Expression m_arg0>;

        if null != $r1 goto label1;

        $i0 = virtualinvoke r2.<org.apache.xpath.XPathContext: int getCurrentNode()>();

        goto label2;

     label1:
        $r3 = r0.<org.apache.xpath.functions.FunctionOneArg: org.apache.xpath.Expression m_arg0>;

        $i0 = virtualinvoke $r3.<org.apache.xpath.Expression: int asNode(org.apache.xpath.XPathContext)>(r2);

     label2:
        return $i0;
    }

    public boolean Arg0IsNodesetExpr()
    {
        org.apache.xpath.Expression $r1, $r2;
        org.apache.xpath.functions.FunctionDef1Arg r0;
        boolean $z0;

        r0 := @this: org.apache.xpath.functions.FunctionDef1Arg;

        $r1 = r0.<org.apache.xpath.functions.FunctionOneArg: org.apache.xpath.Expression m_arg0>;

        if null != $r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $r2 = r0.<org.apache.xpath.functions.FunctionOneArg: org.apache.xpath.Expression m_arg0>;

        $z0 = virtualinvoke $r2.<org.apache.xpath.Expression: boolean isNodesetExpr()>();

     label2:
        return $z0;
    }

    protected org.apache.xml.utils.XMLString getArg0AsString(org.apache.xpath.XPathContext) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.Expression $r1, $r3;
        org.apache.xpath.functions.FunctionDef1Arg r0;
        org.apache.xml.utils.XMLString $r5, $r7;
        org.apache.xpath.objects.XString $r8;
        org.apache.xpath.XPathContext r2;
        int $i0, $i2;
        org.apache.xml.dtm.DTM $r6;
        org.apache.xpath.objects.XObject $r4;

        r0 := @this: org.apache.xpath.functions.FunctionDef1Arg;

        r2 := @parameter0: org.apache.xpath.XPathContext;

        $r1 = r0.<org.apache.xpath.functions.FunctionOneArg: org.apache.xpath.Expression m_arg0>;

        if null != $r1 goto label2;

        $i0 = virtualinvoke r2.<org.apache.xpath.XPathContext: int getCurrentNode()>();

        $i2 = (int) -1;

        if $i2 != $i0 goto label1;

        $r8 = <org.apache.xpath.objects.XString: org.apache.xpath.objects.XString EMPTYSTRING>;

        return $r8;

     label1:
        $r6 = virtualinvoke r2.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM getDTM(int)>($i0);

        $r7 = interfaceinvoke $r6.<org.apache.xml.dtm.DTM: org.apache.xml.utils.XMLString getStringValue(int)>($i0);

        return $r7;

     label2:
        $r3 = r0.<org.apache.xpath.functions.FunctionOneArg: org.apache.xpath.Expression m_arg0>;

        $r4 = virtualinvoke $r3.<org.apache.xpath.Expression: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)>(r2);

        $r5 = virtualinvoke $r4.<org.apache.xpath.objects.XObject: org.apache.xml.utils.XMLString xstr()>();

        return $r5;
    }

    protected double getArg0AsNumber(org.apache.xpath.XPathContext) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.Expression $r1, $r3;
        org.apache.xpath.functions.FunctionDef1Arg r0;
        org.apache.xml.utils.XMLString $r6;
        org.apache.xpath.XPathContext r2;
        int $i0, $i2;
        org.apache.xml.dtm.DTM $r5;
        org.apache.xpath.objects.XObject $r4;
        double $d0, $d1;

        r0 := @this: org.apache.xpath.functions.FunctionDef1Arg;

        r2 := @parameter0: org.apache.xpath.XPathContext;

        $r1 = r0.<org.apache.xpath.functions.FunctionOneArg: org.apache.xpath.Expression m_arg0>;

        if null != $r1 goto label2;

        $i0 = virtualinvoke r2.<org.apache.xpath.XPathContext: int getCurrentNode()>();

        $i2 = (int) -1;

        if $i2 != $i0 goto label1;

        return 0.0;

     label1:
        $r5 = virtualinvoke r2.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM getDTM(int)>($i0);

        $r6 = interfaceinvoke $r5.<org.apache.xml.dtm.DTM: org.apache.xml.utils.XMLString getStringValue(int)>($i0);

        $d1 = interfaceinvoke $r6.<org.apache.xml.utils.XMLString: double toDouble()>();

        return $d1;

     label2:
        $r3 = r0.<org.apache.xpath.functions.FunctionOneArg: org.apache.xpath.Expression m_arg0>;

        $r4 = virtualinvoke $r3.<org.apache.xpath.Expression: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)>(r2);

        $d0 = virtualinvoke $r4.<org.apache.xpath.objects.XObject: double num()>();

        return $d0;
    }

    public void checkNumberArgs(int) throws org.apache.xpath.functions.WrongNumberArgsException
    {
        int i0;
        org.apache.xpath.functions.FunctionDef1Arg r0;

        r0 := @this: org.apache.xpath.functions.FunctionDef1Arg;

        i0 := @parameter0: int;

        if i0 <= 1 goto label1;

        virtualinvoke r0.<org.apache.xpath.functions.FunctionDef1Arg: void reportWrongNumberArgs()>();

     label1:
        return;
    }

    protected void reportWrongNumberArgs() throws org.apache.xpath.functions.WrongNumberArgsException
    {
        org.apache.xpath.functions.WrongNumberArgsException $r0;
        java.lang.String $r1;
        org.apache.xpath.functions.FunctionDef1Arg r2;

        r2 := @this: org.apache.xpath.functions.FunctionDef1Arg;

        $r0 = new org.apache.xpath.functions.WrongNumberArgsException;

        $r1 = staticinvoke <org.apache.xpath.res.XPATHMessages: java.lang.String createXPATHMessage(java.lang.String,java.lang.Object[])>("ER_ZERO_OR_ONE", null);

        specialinvoke $r0.<org.apache.xpath.functions.WrongNumberArgsException: void <init>(java.lang.String)>($r1);

        throw $r0;
    }

    public boolean canTraverseOutsideSubtree()
    {
        org.apache.xpath.Expression $r1;
        org.apache.xpath.functions.FunctionDef1Arg r0;
        boolean $z0;

        r0 := @this: org.apache.xpath.functions.FunctionDef1Arg;

        $r1 = r0.<org.apache.xpath.functions.FunctionOneArg: org.apache.xpath.Expression m_arg0>;

        if null != $r1 goto label1;

        $z0 = 0;

        goto label2;

     label1:
        $z0 = specialinvoke r0.<org.apache.xpath.functions.FunctionOneArg: boolean canTraverseOutsideSubtree()>();

     label2:
        return $z0;
    }
}
