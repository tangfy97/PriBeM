public class org.eclipse.jetty.io.nio.DirectNIOBuffer extends org.eclipse.jetty.io.AbstractBuffer implements org.eclipse.jetty.io.nio.NIOBuffer
{
    protected final java.nio.ByteBuffer _buf;
    private java.nio.channels.ReadableByteChannel _in;
    private java.io.InputStream _inStream;
    private java.nio.channels.WritableByteChannel _out;
    private java.io.OutputStream _outStream;

    public void <init>(int)
    {
        int i0, $i1;
        org.eclipse.jetty.io.nio.DirectNIOBuffer r0;
        java.nio.ByteBuffer $r1, $r2, $r3, $r4;

        r0 := @this: org.eclipse.jetty.io.nio.DirectNIOBuffer;

        i0 := @parameter0: int;

        specialinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: void <init>(int,boolean)>(2, 0);

        $r1 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>(i0);

        r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.ByteBuffer _buf> = $r1;

        $r2 = r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.ByteBuffer _buf>;

        virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(0);

        $r4 = r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.ByteBuffer _buf>;

        $r3 = r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.ByteBuffer _buf>;

        $i1 = virtualinvoke $r3.<java.nio.ByteBuffer: int capacity()>();

        virtualinvoke $r4.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>($i1);

        return;
    }

    public void <init>(java.nio.ByteBuffer, boolean)
    {
        java.lang.IllegalArgumentException $r2;
        java.nio.ByteBuffer r1;
        byte $b2;
        int $i0, $i1;
        org.eclipse.jetty.io.nio.DirectNIOBuffer r0;
        boolean z0, $z1;

        r0 := @this: org.eclipse.jetty.io.nio.DirectNIOBuffer;

        r1 := @parameter0: java.nio.ByteBuffer;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $b2 = 0;

        goto label2;

     label1:
        $b2 = 2;

     label2:
        specialinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: void <init>(int,boolean)>($b2, 0);

        $z1 = virtualinvoke r1.<java.nio.ByteBuffer: boolean isDirect()>();

        if $z1 != 0 goto label3;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label3:
        r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.ByteBuffer _buf> = r1;

        $i0 = virtualinvoke r1.<java.nio.ByteBuffer: int position()>();

        virtualinvoke r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: void setGetIndex(int)>($i0);

        $i1 = virtualinvoke r1.<java.nio.ByteBuffer: int limit()>();

        virtualinvoke r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: void setPutIndex(int)>($i1);

        return;
    }

    public void <init>(java.io.File) throws java.io.IOException
    {
        long $l0, $l1;
        java.io.FileInputStream $r1;
        java.nio.channels.FileChannel$MapMode $r4;
        java.io.File r2;
        int $i2;
        org.eclipse.jetty.io.nio.DirectNIOBuffer r0;
        java.nio.channels.FileChannel $r3;
        java.nio.MappedByteBuffer $r5;

        r0 := @this: org.eclipse.jetty.io.nio.DirectNIOBuffer;

        r2 := @parameter0: java.io.File;

        specialinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: void <init>(int,boolean)>(1, 0);

        $r1 = new java.io.FileInputStream;

        specialinvoke $r1.<java.io.FileInputStream: void <init>(java.io.File)>(r2);

        $r3 = virtualinvoke $r1.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>();

        $r4 = <java.nio.channels.FileChannel$MapMode: java.nio.channels.FileChannel$MapMode READ_ONLY>;

        $l0 = virtualinvoke r2.<java.io.File: long length()>();

        $r5 = virtualinvoke $r3.<java.nio.channels.FileChannel: java.nio.MappedByteBuffer map(java.nio.channels.FileChannel$MapMode,long,long)>($r4, 0L, $l0);

        r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.ByteBuffer _buf> = $r5;

        virtualinvoke r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: void setGetIndex(int)>(0);

        $l1 = virtualinvoke r2.<java.io.File: long length()>();

        $i2 = (int) $l1;

        virtualinvoke r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: void setPutIndex(int)>($i2);

        r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: int _access> = 0;

        return;
    }

    public boolean isDirect()
    {
        org.eclipse.jetty.io.nio.DirectNIOBuffer r0;

        r0 := @this: org.eclipse.jetty.io.nio.DirectNIOBuffer;

        return 1;
    }

    public byte[] array()
    {
        org.eclipse.jetty.io.nio.DirectNIOBuffer r0;

        r0 := @this: org.eclipse.jetty.io.nio.DirectNIOBuffer;

        return null;
    }

    public int capacity()
    {
        int $i0;
        org.eclipse.jetty.io.nio.DirectNIOBuffer r0;
        java.nio.ByteBuffer $r1;

        r0 := @this: org.eclipse.jetty.io.nio.DirectNIOBuffer;

        $r1 = r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.ByteBuffer _buf>;

        $i0 = virtualinvoke $r1.<java.nio.ByteBuffer: int capacity()>();

        return $i0;
    }

    public byte peek(int)
    {
        byte $b1;
        int i0;
        org.eclipse.jetty.io.nio.DirectNIOBuffer r0;
        java.nio.ByteBuffer $r1;

        r0 := @this: org.eclipse.jetty.io.nio.DirectNIOBuffer;

        i0 := @parameter0: int;

        $r1 = r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.ByteBuffer _buf>;

        $b1 = virtualinvoke $r1.<java.nio.ByteBuffer: byte get(int)>(i0);

        return $b1;
    }

    public int peek(int, byte[], int, int)
    {
        java.lang.Throwable $r5;
        byte[] r2;
        java.nio.ByteBuffer $r1, $r3, $r4, $r6;
        int i0, i1, $i2, $i3, i4, $i5, i6, $i8, $i10;
        org.eclipse.jetty.io.nio.DirectNIOBuffer r0;

        r0 := @this: org.eclipse.jetty.io.nio.DirectNIOBuffer;

        i1 := @parameter0: int;

        r2 := @parameter1: byte[];

        i4 := @parameter2: int;

        i0 := @parameter3: int;

        i6 = i0;

        $i2 = i1 + i0;

        $i3 = virtualinvoke r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: int capacity()>();

        if $i2 <= $i3 goto label1;

        $i5 = virtualinvoke r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: int capacity()>();

        i6 = $i5 - i1;

        if i6 != 0 goto label1;

        $i8 = (int) -1;

        return $i8;

     label1:
        if i6 >= 0 goto label2;

        $i10 = (int) -1;

        return $i10;

     label2:
        $r1 = r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.ByteBuffer _buf>;

        virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(i1);

        $r3 = r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.ByteBuffer _buf>;

        virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[],int,int)>(r2, i4, i6);

     label3:
        $r4 = r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.ByteBuffer _buf>;

        virtualinvoke $r4.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(0);

        goto label6;

     label4:
        $r5 := @caughtexception;

     label5:
        $r6 = r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.ByteBuffer _buf>;

        virtualinvoke $r6.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(0);

        throw $r5;

     label6:
        return i6;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void poke(int, byte)
    {
        java.lang.IllegalStateException $r15;
        java.nio.ByteBuffer $r1;
        byte b2;
        int i0, $i1, $i3;
        java.lang.String $r8, $r14;
        boolean $z0;
        java.lang.IllegalArgumentException $r2, $r9;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r10, $r11, $r12, $r13;
        org.eclipse.jetty.io.nio.DirectNIOBuffer r0;

        r0 := @this: org.eclipse.jetty.io.nio.DirectNIOBuffer;

        i0 := @parameter0: int;

        b2 := @parameter1: byte;

        $z0 = virtualinvoke r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: boolean isReadOnly()>();

        if $z0 == 0 goto label1;

        $r15 = new java.lang.IllegalStateException;

        specialinvoke $r15.<java.lang.IllegalStateException: void <init>(java.lang.String)>("READONLY");

        throw $r15;

     label1:
        if i0 >= 0 goto label2;

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("index<0: ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<0");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        throw $r9;

     label2:
        $i1 = virtualinvoke r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: int capacity()>();

        if i0 <= $i1 goto label3;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("index>capacity(): ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $i3 = virtualinvoke r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: int capacity()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r2;

     label3:
        $r1 = r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.ByteBuffer _buf>;

        virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(int,byte)>(i0, b2);

        return;
    }

    public int poke(int, org.eclipse.jetty.io.Buffer)
    {
        java.lang.Throwable $r12;
        byte[] $r2;
        java.lang.IllegalStateException $r11;
        java.nio.ByteBuffer $r5, $r6, $r7, $r8, $r9, $r10, $r13, r14;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12;
        org.eclipse.jetty.io.Buffer r1, $r3;
        boolean $z0, $z1;
        org.eclipse.jetty.io.nio.DirectNIOBuffer r0, $r4;

        r0 := @this: org.eclipse.jetty.io.nio.DirectNIOBuffer;

        i0 := @parameter0: int;

        r1 := @parameter1: org.eclipse.jetty.io.Buffer;

        $z0 = virtualinvoke r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: boolean isReadOnly()>();

        if $z0 == 0 goto label1;

        $r11 = new java.lang.IllegalStateException;

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>("READONLY");

        throw $r11;

     label1:
        $r2 = interfaceinvoke r1.<org.eclipse.jetty.io.Buffer: byte[] array()>();

        if $r2 == null goto label2;

        $i8 = interfaceinvoke r1.<org.eclipse.jetty.io.Buffer: int getIndex()>();

        $i9 = interfaceinvoke r1.<org.eclipse.jetty.io.Buffer: int length()>();

        $i10 = virtualinvoke r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: int poke(int,byte[],int,int)>(i0, $r2, $i8, $i9);

        return $i10;

     label2:
        $r3 = interfaceinvoke r1.<org.eclipse.jetty.io.Buffer: org.eclipse.jetty.io.Buffer buffer()>();

        $z1 = $r3 instanceof org.eclipse.jetty.io.nio.DirectNIOBuffer;

        if $z1 == 0 goto label8;

        $r4 = (org.eclipse.jetty.io.nio.DirectNIOBuffer) $r3;

        r14 = $r4.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.ByteBuffer _buf>;

        $r5 = r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.ByteBuffer _buf>;

        if r14 != $r5 goto label3;

        $r10 = r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.ByteBuffer _buf>;

        r14 = virtualinvoke $r10.<java.nio.ByteBuffer: java.nio.ByteBuffer duplicate()>();

     label3:
        $r6 = r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.ByteBuffer _buf>;

        virtualinvoke $r6.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(i0);

        $r7 = r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.ByteBuffer _buf>;

        $i2 = virtualinvoke $r7.<java.nio.ByteBuffer: int remaining()>();

        $i3 = interfaceinvoke r1.<org.eclipse.jetty.io.Buffer: int length()>();

        i12 = $i3;

        if $i3 <= $i2 goto label4;

        i12 = $i2;

     label4:
        $i4 = interfaceinvoke r1.<org.eclipse.jetty.io.Buffer: int getIndex()>();

        virtualinvoke r14.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i4);

        $i5 = interfaceinvoke r1.<org.eclipse.jetty.io.Buffer: int getIndex()>();

        $i6 = $i5 + i12;

        virtualinvoke r14.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>($i6);

        $r8 = r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.ByteBuffer _buf>;

        virtualinvoke $r8.<java.nio.ByteBuffer: java.nio.ByteBuffer put(java.nio.ByteBuffer)>(r14);

     label5:
        $r9 = r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.ByteBuffer _buf>;

        virtualinvoke $r9.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(0);

        $i7 = virtualinvoke r14.<java.nio.ByteBuffer: int capacity()>();

        virtualinvoke r14.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>($i7);

        virtualinvoke r14.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(0);

        return i12;

     label6:
        $r12 := @caughtexception;

     label7:
        $r13 = r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.ByteBuffer _buf>;

        virtualinvoke $r13.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(0);

        $i11 = virtualinvoke r14.<java.nio.ByteBuffer: int capacity()>();

        virtualinvoke r14.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>($i11);

        virtualinvoke r14.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(0);

        throw $r12;

     label8:
        $i1 = specialinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int poke(int,org.eclipse.jetty.io.Buffer)>(i0, r1);

        return $i1;

        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public int poke(int, byte[], int, int)
    {
        java.lang.Throwable $r20;
        byte[] r4;
        java.lang.IllegalStateException $r19;
        java.nio.ByteBuffer $r1, $r2, $r3, $r5, $r21;
        int i0, $i1, $i2, $i3, i4, $i5, $i6, i7;
        java.lang.String $r12, $r18;
        boolean $z0;
        java.lang.IllegalArgumentException $r6, $r13;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r11, $r14, $r15, $r16, $r17;
        org.eclipse.jetty.io.nio.DirectNIOBuffer r0;

        r0 := @this: org.eclipse.jetty.io.nio.DirectNIOBuffer;

        i0 := @parameter0: int;

        r4 := @parameter1: byte[];

        i4 := @parameter2: int;

        i7 := @parameter3: int;

        $z0 = virtualinvoke r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: boolean isReadOnly()>();

        if $z0 == 0 goto label1;

        $r19 = new java.lang.IllegalStateException;

        specialinvoke $r19.<java.lang.IllegalStateException: void <init>(java.lang.String)>("READONLY");

        throw $r19;

     label1:
        if i0 >= 0 goto label2;

        $r13 = new java.lang.IllegalArgumentException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("index<0: ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<0");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r18);

        throw $r13;

     label2:
        $i1 = i0 + i7;

        $i2 = virtualinvoke r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: int capacity()>();

        if $i1 <= $i2 goto label3;

        $i5 = virtualinvoke r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: int capacity()>();

        i7 = $i5 - i0;

        if i7 >= 0 goto label3;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("index>capacity(): ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $i6 = virtualinvoke r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: int capacity()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r6;

     label3:
        $r1 = r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.ByteBuffer _buf>;

        virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(i0);

        $r2 = r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.ByteBuffer _buf>;

        $i3 = virtualinvoke $r2.<java.nio.ByteBuffer: int remaining()>();

        if i7 <= $i3 goto label4;

        i7 = $i3;

     label4:
        if i7 <= 0 goto label5;

        $r5 = r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.ByteBuffer _buf>;

        virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[],int,int)>(r4, i4, i7);

     label5:
        $r3 = r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.ByteBuffer _buf>;

        virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(0);

        return i7;

     label6:
        $r20 := @caughtexception;

     label7:
        $r21 = r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.ByteBuffer _buf>;

        virtualinvoke $r21.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(0);

        throw $r20;

        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public java.nio.ByteBuffer getByteBuffer()
    {
        org.eclipse.jetty.io.nio.DirectNIOBuffer r0;
        java.nio.ByteBuffer $r1;

        r0 := @this: org.eclipse.jetty.io.nio.DirectNIOBuffer;

        $r1 = r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.ByteBuffer _buf>;

        return $r1;
    }

    public int readFrom(java.io.InputStream, int) throws java.io.IOException
    {
        java.nio.ByteBuffer $r7, $r8, $r9, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Throwable $r13;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, i7, i8, i9, i10, $i11, i12, $i13, $i14, $i16;
        java.nio.channels.ReadableByteChannel $r1, $r3, $r4, $r5, $r6, $r10, $r11, $r14, $r15, $r17;
        java.io.IOException $r16;
        org.eclipse.jetty.io.nio.DirectNIOBuffer r0;
        java.io.InputStream r2, $r12;

        r0 := @this: org.eclipse.jetty.io.nio.DirectNIOBuffer;

        r2 := @parameter0: java.io.InputStream;

        i5 := @parameter1: int;

        $r1 = r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.channels.ReadableByteChannel _in>;

        if $r1 == null goto label01;

        $r11 = r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.channels.ReadableByteChannel _in>;

        $z2 = interfaceinvoke $r11.<java.nio.channels.ReadableByteChannel: boolean isOpen()>();

        if $z2 == 0 goto label01;

        $r12 = r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.io.InputStream _inStream>;

        if r2 == $r12 goto label02;

     label01:
        $r17 = staticinvoke <java.nio.channels.Channels: java.nio.channels.ReadableByteChannel newChannel(java.io.InputStream)>(r2);

        r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.channels.ReadableByteChannel _in> = $r17;

        r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.io.InputStream _inStream> = r2;

     label02:
        if i5 < 0 goto label03;

        $i4 = virtualinvoke r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: int space()>();

        if i5 <= $i4 goto label04;

     label03:
        i5 = virtualinvoke r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: int space()>();

     label04:
        i6 = virtualinvoke r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: int putIndex()>();

     label05:
        i7 = 0;

        i8 = 0;

        i9 = i5;

        i10 = 0;

     label06:
        if i8 >= i5 goto label10;

        $r7 = r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.ByteBuffer _buf>;

        virtualinvoke $r7.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(i6);

        $r8 = r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.ByteBuffer _buf>;

        $i0 = i6 + i9;

        virtualinvoke $r8.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>($i0);

        $r10 = r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.channels.ReadableByteChannel _in>;

        $r9 = r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.ByteBuffer _buf>;

        $i1 = interfaceinvoke $r10.<java.nio.channels.ReadableByteChannel: int read(java.nio.ByteBuffer)>($r9);

        i7 = $i1;

        if $i1 >= 0 goto label07;

        r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.channels.ReadableByteChannel _in> = null;

        r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.io.InputStream _inStream> = r2;

        goto label10;

     label07:
        if $i1 <= 0 goto label08;

        i6 = i6 + $i1;

        i8 = i8 + $i1;

        i9 = i9 - $i1;

        virtualinvoke r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: void setPutIndex(int)>(i6);

        i10 = 0;

        goto label09;

     label08:
        $i2 = i10;

        i10 = i10 + 1;

        if $i2 <= 1 goto label09;

        goto label10;

     label09:
        $i3 = virtualinvoke r2.<java.io.InputStream: int available()>();

        if $i3 > 0 goto label06;

        goto label10;

     label10:
        if i7 >= 0 goto label13;

        if i8 != 0 goto label13;

     label11:
        $r5 = r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.channels.ReadableByteChannel _in>;

        if $r5 == null goto label12;

        $r6 = r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.channels.ReadableByteChannel _in>;

        $z1 = interfaceinvoke $r6.<java.nio.channels.ReadableByteChannel: boolean isOpen()>();

        if $z1 != 0 goto label12;

        r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.channels.ReadableByteChannel _in> = null;

        r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.io.InputStream _inStream> = r2;

     label12:
        $r18 = r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.ByteBuffer _buf>;

        virtualinvoke $r18.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(0);

        $r19 = r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.ByteBuffer _buf>;

        $r20 = r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.ByteBuffer _buf>;

        $i11 = virtualinvoke $r20.<java.nio.ByteBuffer: int capacity()>();

        virtualinvoke $r19.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>($i11);

        $i16 = (int) -1;

        return $i16;

     label13:
        i12 = i8;

     label14:
        $r3 = r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.channels.ReadableByteChannel _in>;

        if $r3 == null goto label15;

        $r4 = r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.channels.ReadableByteChannel _in>;

        $z0 = interfaceinvoke $r4.<java.nio.channels.ReadableByteChannel: boolean isOpen()>();

        if $z0 != 0 goto label15;

        r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.channels.ReadableByteChannel _in> = null;

        r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.io.InputStream _inStream> = r2;

     label15:
        $r21 = r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.ByteBuffer _buf>;

        virtualinvoke $r21.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(0);

        $r22 = r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.ByteBuffer _buf>;

        $r23 = r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.ByteBuffer _buf>;

        $i13 = virtualinvoke $r23.<java.nio.ByteBuffer: int capacity()>();

        virtualinvoke $r22.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>($i13);

        return i12;

     label16:
        $r16 := @caughtexception;

        r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.channels.ReadableByteChannel _in> = null;

        r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.io.InputStream _inStream> = r2;

        throw $r16;

     label17:
        $r13 := @caughtexception;

     label18:
        $r14 = r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.channels.ReadableByteChannel _in>;

        if $r14 == null goto label19;

        $r15 = r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.channels.ReadableByteChannel _in>;

        $z3 = interfaceinvoke $r15.<java.nio.channels.ReadableByteChannel: boolean isOpen()>();

        if $z3 != 0 goto label19;

        r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.channels.ReadableByteChannel _in> = null;

        r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.io.InputStream _inStream> = r2;

     label19:
        $r24 = r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.ByteBuffer _buf>;

        virtualinvoke $r24.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(0);

        $r25 = r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.ByteBuffer _buf>;

        $r26 = r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.ByteBuffer _buf>;

        $i14 = virtualinvoke $r26.<java.nio.ByteBuffer: int capacity()>();

        virtualinvoke $r25.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>($i14);

        throw $r13;

        catch java.io.IOException from label05 to label11 with label16;
        catch java.io.IOException from label13 to label14 with label16;
        catch java.lang.Throwable from label05 to label11 with label17;
        catch java.lang.Throwable from label13 to label14 with label17;
        catch java.lang.Throwable from label16 to label18 with label17;
    }

    public void writeTo(java.io.OutputStream) throws java.io.IOException
    {
        java.nio.ByteBuffer $r5, $r6, $r7, $r17, $r19, $r20, $r21, $r22, $r23, $r24;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Throwable $r11, $r12;
        int $i0, $i1, $i2, $i3, i4, $i5, $i6;
        java.io.OutputStream r2, $r10;
        java.io.IOException $r15;
        java.nio.channels.WritableByteChannel $r1, $r3, $r4, $r8, $r9, $r13, $r14, $r16, $r18;
        org.eclipse.jetty.io.nio.DirectNIOBuffer r0;

        r0 := @this: org.eclipse.jetty.io.nio.DirectNIOBuffer;

        r2 := @parameter0: java.io.OutputStream;

        $r1 = r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.channels.WritableByteChannel _out>;

        if $r1 == null goto label01;

        $r9 = r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.channels.WritableByteChannel _out>;

        $z2 = interfaceinvoke $r9.<java.nio.channels.WritableByteChannel: boolean isOpen()>();

        if $z2 == 0 goto label01;

        $r10 = r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.io.OutputStream _outStream>;

        if r2 == $r10 goto label02;

     label01:
        $r16 = staticinvoke <java.nio.channels.Channels: java.nio.channels.WritableByteChannel newChannel(java.io.OutputStream)>(r2);

        r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.channels.WritableByteChannel _out> = $r16;

        r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.io.OutputStream _outStream> = r2;

     label02:
        $r17 = r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.ByteBuffer _buf>;

        entermonitor $r17;

     label03:
        i4 = 0;

     label04:
        $z4 = virtualinvoke r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: boolean hasContent()>();

        if $z4 == 0 goto label08;

        $r4 = r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.channels.WritableByteChannel _out>;

        $z1 = interfaceinvoke $r4.<java.nio.channels.WritableByteChannel: boolean isOpen()>();

        if $z1 == 0 goto label08;

        $r5 = r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.ByteBuffer _buf>;

        $i0 = virtualinvoke r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: int getIndex()>();

        virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i0);

        $r6 = r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.ByteBuffer _buf>;

        $i1 = virtualinvoke r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: int putIndex()>();

        virtualinvoke $r6.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>($i1);

        $r8 = r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.channels.WritableByteChannel _out>;

        $r7 = r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.ByteBuffer _buf>;

        $i2 = interfaceinvoke $r8.<java.nio.channels.WritableByteChannel: int write(java.nio.ByteBuffer)>($r7);

        if $i2 >= 0 goto label05;

        goto label08;

     label05:
        if $i2 <= 0 goto label06;

        virtualinvoke r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: int skip(int)>($i2);

        i4 = 0;

        goto label07;

     label06:
        $i3 = i4;

        i4 = i4 + 1;

        if $i3 <= 1 goto label07;

        goto label08;

     label07:
        goto label04;

     label08:
        $r18 = r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.channels.WritableByteChannel _out>;

        if $r18 == null goto label09;

        $r3 = r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.channels.WritableByteChannel _out>;

        $z0 = interfaceinvoke $r3.<java.nio.channels.WritableByteChannel: boolean isOpen()>();

        if $z0 != 0 goto label09;

        r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.channels.WritableByteChannel _out> = null;

        r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.io.OutputStream _outStream> = null;

     label09:
        $r19 = r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.ByteBuffer _buf>;

        virtualinvoke $r19.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(0);

        $r20 = r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.ByteBuffer _buf>;

        $r21 = r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.ByteBuffer _buf>;

        $i5 = virtualinvoke $r21.<java.nio.ByteBuffer: int capacity()>();

        virtualinvoke $r20.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>($i5);

        goto label14;

     label10:
        $r15 := @caughtexception;

        r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.channels.WritableByteChannel _out> = null;

        r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.io.OutputStream _outStream> = null;

        throw $r15;

     label11:
        $r12 := @caughtexception;

     label12:
        $r13 = r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.channels.WritableByteChannel _out>;

        if $r13 == null goto label13;

        $r14 = r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.channels.WritableByteChannel _out>;

        $z3 = interfaceinvoke $r14.<java.nio.channels.WritableByteChannel: boolean isOpen()>();

        if $z3 != 0 goto label13;

        r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.channels.WritableByteChannel _out> = null;

        r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.io.OutputStream _outStream> = null;

     label13:
        $r22 = r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.ByteBuffer _buf>;

        virtualinvoke $r22.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(0);

        $r23 = r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.ByteBuffer _buf>;

        $r24 = r0.<org.eclipse.jetty.io.nio.DirectNIOBuffer: java.nio.ByteBuffer _buf>;

        $i6 = virtualinvoke $r24.<java.nio.ByteBuffer: int capacity()>();

        virtualinvoke $r23.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>($i6);

        throw $r12;

     label14:
        exitmonitor $r17;

     label15:
        goto label18;

     label16:
        $r11 := @caughtexception;

        exitmonitor $r17;

     label17:
        throw $r11;

     label18:
        return;

        catch java.io.IOException from label03 to label08 with label10;
        catch java.lang.Throwable from label03 to label08 with label11;
        catch java.lang.Throwable from label10 to label12 with label11;
        catch java.lang.Throwable from label03 to label15 with label16;
        catch java.lang.Throwable from label16 to label17 with label16;
    }
}
