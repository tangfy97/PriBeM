public class org.apache.poi.xwpf.usermodel.XWPFSettings extends org.apache.poi.POIXMLDocumentPart
{
    private org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSettings ctSettings;

    public void <init>(org.apache.poi.openxml4j.opc.PackagePart, org.apache.poi.openxml4j.opc.PackageRelationship) throws java.io.IOException
    {
        org.apache.poi.openxml4j.opc.PackagePart r1;
        org.apache.poi.xwpf.usermodel.XWPFSettings r0;
        org.apache.poi.openxml4j.opc.PackageRelationship r2;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFSettings;

        r1 := @parameter0: org.apache.poi.openxml4j.opc.PackagePart;

        r2 := @parameter1: org.apache.poi.openxml4j.opc.PackageRelationship;

        specialinvoke r0.<org.apache.poi.POIXMLDocumentPart: void <init>(org.apache.poi.openxml4j.opc.PackagePart,org.apache.poi.openxml4j.opc.PackageRelationship)>(r1, r2);

        return;
    }

    public void <init>()
    {
        org.apache.poi.xwpf.usermodel.XWPFSettings r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSettings $r1;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFSettings;

        specialinvoke r0.<org.apache.poi.POIXMLDocumentPart: void <init>()>();

        $r1 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSettings$Factory: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSettings newInstance()>();

        r0.<org.apache.poi.xwpf.usermodel.XWPFSettings: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSettings ctSettings> = $r1;

        return;
    }

    protected void onDocumentRead() throws java.io.IOException
    {
        org.apache.poi.openxml4j.opc.PackagePart $r1;
        org.apache.poi.xwpf.usermodel.XWPFSettings r0;
        java.io.InputStream $r2;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFSettings;

        specialinvoke r0.<org.apache.poi.POIXMLDocumentPart: void onDocumentRead()>();

        $r1 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFSettings: org.apache.poi.openxml4j.opc.PackagePart getPackagePart()>();

        $r2 = virtualinvoke $r1.<org.apache.poi.openxml4j.opc.PackagePart: java.io.InputStream getInputStream()>();

        specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFSettings: void readFrom(java.io.InputStream)>($r2);

        return;
    }

    public long getZoomPercent()
    {
        org.apache.poi.xwpf.usermodel.XWPFSettings r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSettings $r1, $r2, $r4;
        long $l0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTZoom r5;
        java.math.BigInteger $r3;
        boolean $z0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFSettings;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFSettings: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSettings ctSettings>;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSettings: boolean isSetZoom()>();

        if $z0 != 0 goto label1;

        $r4 = r0.<org.apache.poi.xwpf.usermodel.XWPFSettings: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSettings ctSettings>;

        r5 = interfaceinvoke $r4.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSettings: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTZoom addNewZoom()>();

        goto label2;

     label1:
        $r2 = r0.<org.apache.poi.xwpf.usermodel.XWPFSettings: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSettings ctSettings>;

        r5 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSettings: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTZoom getZoom()>();

     label2:
        $r3 = interfaceinvoke r5.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTZoom: java.math.BigInteger getPercent()>();

        $l0 = virtualinvoke $r3.<java.math.BigInteger: long longValue()>();

        return $l0;
    }

    public void setZoomPercent(long)
    {
        org.apache.poi.xwpf.usermodel.XWPFSettings r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSettings $r1, $r2, $r5;
        long l0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTZoom $r3;
        java.math.BigInteger $r4;
        boolean $z0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFSettings;

        l0 := @parameter0: long;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFSettings: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSettings ctSettings>;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSettings: boolean isSetZoom()>();

        if $z0 != 0 goto label1;

        $r5 = r0.<org.apache.poi.xwpf.usermodel.XWPFSettings: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSettings ctSettings>;

        interfaceinvoke $r5.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSettings: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTZoom addNewZoom()>();

     label1:
        $r2 = r0.<org.apache.poi.xwpf.usermodel.XWPFSettings: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSettings ctSettings>;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSettings: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTZoom getZoom()>();

        $r4 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(l0);

        interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTZoom: void setPercent(java.math.BigInteger)>($r4);

        return;
    }

    public boolean isEnforcedWith(org.openxmlformats.schemas.wordprocessingml.x2006.main.STDocProtect$Enum)
    {
        org.apache.poi.xwpf.usermodel.XWPFSettings r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSettings $r1;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum $r3, $r4;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect $r2;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STDocProtect$Enum $r5, r6;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFSettings;

        r6 := @parameter0: org.openxmlformats.schemas.wordprocessingml.x2006.main.STDocProtect$Enum;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFSettings: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSettings ctSettings>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSettings: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect getDocumentProtection()>();

        if $r2 != null goto label1;

        return 0;

     label1:
        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect: org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum getEnforcement()>();

        $r4 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff: org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum X_1>;

        $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect: org.openxmlformats.schemas.wordprocessingml.x2006.main.STDocProtect$Enum getEdit()>();

        $z1 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>(r6);

        if $z1 == 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public void setEnforcementEditValue(org.openxmlformats.schemas.wordprocessingml.x2006.main.STDocProtect$Enum)
    {
        org.apache.poi.xwpf.usermodel.XWPFSettings r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum $r2;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect $r1, $r3;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STDocProtect$Enum r4;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFSettings;

        r4 := @parameter0: org.openxmlformats.schemas.wordprocessingml.x2006.main.STDocProtect$Enum;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFSettings: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect safeGetDocumentProtection()>();

        $r2 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff: org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum X_1>;

        interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect: void setEnforcement(org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum)>($r2);

        $r3 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFSettings: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect safeGetDocumentProtection()>();

        interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect: void setEdit(org.openxmlformats.schemas.wordprocessingml.x2006.main.STDocProtect$Enum)>(r4);

        return;
    }

    public void setEnforcementEditValue(org.openxmlformats.schemas.wordprocessingml.x2006.main.STDocProtect$Enum, java.lang.String, org.apache.poi.poifs.crypt.HashAlgorithm)
    {
        byte[] $r8, $r43;
        java.security.SecureRandom $r42;
        byte b4;
        int[] $r6;
        java.math.BigInteger $r12, $r19;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.apache.poi.xwpf.usermodel.XWPFSettings r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STCryptProv$Enum r41;
        java.lang.StringBuilder $r21, $r22, $r23, $r24;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STDocProtect$Enum r4;
        long $l2, $l3;
        int $i0, $i1;
        java.lang.String r5, $r7, $r25;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STAlgClass$Enum $r16;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum $r2;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect $r1, $r3, $r9, $r10, $r11, $r13, $r15, $r17, $r18, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39;
        org.apache.poi.poifs.crypt.HashAlgorithm r40;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STAlgType$Enum $r14;
        org.apache.poi.EncryptedDocumentException $r20;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFSettings;

        r4 := @parameter0: org.openxmlformats.schemas.wordprocessingml.x2006.main.STDocProtect$Enum;

        r5 := @parameter1: java.lang.String;

        r40 := @parameter2: org.apache.poi.poifs.crypt.HashAlgorithm;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFSettings: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect safeGetDocumentProtection()>();

        $r2 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff: org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum X_1>;

        interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect: void setEnforcement(org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum)>($r2);

        $r3 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFSettings: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect safeGetDocumentProtection()>();

        interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect: void setEdit(org.openxmlformats.schemas.wordprocessingml.x2006.main.STDocProtect$Enum)>(r4);

        if r5 != null goto label07;

        $r26 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFSettings: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect safeGetDocumentProtection()>();

        $z0 = interfaceinvoke $r26.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect: boolean isSetCryptProviderType()>();

        if $z0 == 0 goto label01;

        $r39 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFSettings: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect safeGetDocumentProtection()>();

        interfaceinvoke $r39.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect: void unsetCryptProviderType()>();

     label01:
        $r27 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFSettings: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect safeGetDocumentProtection()>();

        $z1 = interfaceinvoke $r27.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect: boolean isSetCryptAlgorithmClass()>();

        if $z1 == 0 goto label02;

        $r38 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFSettings: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect safeGetDocumentProtection()>();

        interfaceinvoke $r38.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect: void unsetCryptAlgorithmClass()>();

     label02:
        $r28 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFSettings: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect safeGetDocumentProtection()>();

        $z2 = interfaceinvoke $r28.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect: boolean isSetCryptAlgorithmType()>();

        if $z2 == 0 goto label03;

        $r37 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFSettings: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect safeGetDocumentProtection()>();

        interfaceinvoke $r37.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect: void unsetCryptAlgorithmType()>();

     label03:
        $r29 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFSettings: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect safeGetDocumentProtection()>();

        $z3 = interfaceinvoke $r29.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect: boolean isSetCryptAlgorithmSid()>();

        if $z3 == 0 goto label04;

        $r36 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFSettings: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect safeGetDocumentProtection()>();

        interfaceinvoke $r36.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect: void unsetCryptAlgorithmSid()>();

     label04:
        $r30 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFSettings: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect safeGetDocumentProtection()>();

        $z4 = interfaceinvoke $r30.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect: boolean isSetSalt()>();

        if $z4 == 0 goto label05;

        $r35 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFSettings: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect safeGetDocumentProtection()>();

        interfaceinvoke $r35.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect: void unsetSalt()>();

     label05:
        $r31 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFSettings: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect safeGetDocumentProtection()>();

        $z5 = interfaceinvoke $r31.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect: boolean isSetCryptSpinCount()>();

        if $z5 == 0 goto label06;

        $r34 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFSettings: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect safeGetDocumentProtection()>();

        interfaceinvoke $r34.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect: void unsetCryptSpinCount()>();

     label06:
        $r32 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFSettings: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect safeGetDocumentProtection()>();

        $z6 = interfaceinvoke $r32.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect: boolean isSetHash()>();

        if $z6 == 0 goto label18;

        $r33 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFSettings: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect safeGetDocumentProtection()>();

        interfaceinvoke $r33.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect: void unsetHash()>();

        goto label18;

     label07:
        $r6 = <org.apache.poi.xwpf.usermodel.XWPFSettings$1: int[] $SwitchMap$org$apache$poi$poifs$crypt$HashAlgorithm>;

        $i0 = virtualinvoke r40.<org.apache.poi.poifs.crypt.HashAlgorithm: int ordinal()>();

        $i1 = $r6[$i0];

        tableswitch($i1)
        {
            case 1: goto label08;
            case 2: goto label09;
            case 3: goto label10;
            case 4: goto label11;
            case 5: goto label12;
            case 6: goto label13;
            case 7: goto label14;
            default: goto label15;
        };

     label08:
        r41 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.STCryptProv: org.openxmlformats.schemas.wordprocessingml.x2006.main.STCryptProv$Enum RSA_FULL>;

        b4 = 1;

        goto label16;

     label09:
        r41 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.STCryptProv: org.openxmlformats.schemas.wordprocessingml.x2006.main.STCryptProv$Enum RSA_FULL>;

        b4 = 2;

        goto label16;

     label10:
        r41 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.STCryptProv: org.openxmlformats.schemas.wordprocessingml.x2006.main.STCryptProv$Enum RSA_FULL>;

        b4 = 3;

        goto label16;

     label11:
        r41 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.STCryptProv: org.openxmlformats.schemas.wordprocessingml.x2006.main.STCryptProv$Enum RSA_FULL>;

        b4 = 4;

        goto label16;

     label12:
        r41 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.STCryptProv: org.openxmlformats.schemas.wordprocessingml.x2006.main.STCryptProv$Enum RSA_AES>;

        b4 = 12;

        goto label16;

     label13:
        r41 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.STCryptProv: org.openxmlformats.schemas.wordprocessingml.x2006.main.STCryptProv$Enum RSA_AES>;

        b4 = 13;

        goto label16;

     label14:
        r41 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.STCryptProv: org.openxmlformats.schemas.wordprocessingml.x2006.main.STCryptProv$Enum RSA_AES>;

        b4 = 14;

        goto label16;

     label15:
        $r20 = new org.apache.poi.EncryptedDocumentException;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Hash algorithm \'");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r40);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' is not supported for document write protection.");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<org.apache.poi.EncryptedDocumentException: void <init>(java.lang.String)>($r25);

        throw $r20;

     label16:
        $r42 = new java.security.SecureRandom;

        specialinvoke $r42.<java.security.SecureRandom: void <init>()>();

        $r43 = virtualinvoke $r42.<java.security.SecureRandom: byte[] generateSeed(int)>(16);

        if r40 != null goto label17;

        r40 = <org.apache.poi.poifs.crypt.HashAlgorithm: org.apache.poi.poifs.crypt.HashAlgorithm sha1>;

     label17:
        $r7 = staticinvoke <org.apache.poi.poifs.crypt.CryptoFunctions: java.lang.String xorHashPasswordReversed(java.lang.String)>(r5);

        $r8 = staticinvoke <org.apache.poi.poifs.crypt.CryptoFunctions: byte[] hashPassword(java.lang.String,org.apache.poi.poifs.crypt.HashAlgorithm,byte[],int,boolean)>($r7, r40, $r43, 100000, 0);

        $r9 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFSettings: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect safeGetDocumentProtection()>();

        interfaceinvoke $r9.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect: void setSalt(byte[])>($r43);

        $r10 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFSettings: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect safeGetDocumentProtection()>();

        interfaceinvoke $r10.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect: void setHash(byte[])>($r8);

        $r11 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFSettings: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect safeGetDocumentProtection()>();

        $l2 = (long) 100000;

        $r12 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l2);

        interfaceinvoke $r11.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect: void setCryptSpinCount(java.math.BigInteger)>($r12);

        $r13 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFSettings: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect safeGetDocumentProtection()>();

        $r14 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.STAlgType: org.openxmlformats.schemas.wordprocessingml.x2006.main.STAlgType$Enum TYPE_ANY>;

        interfaceinvoke $r13.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect: void setCryptAlgorithmType(org.openxmlformats.schemas.wordprocessingml.x2006.main.STAlgType$Enum)>($r14);

        $r15 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFSettings: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect safeGetDocumentProtection()>();

        $r16 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.STAlgClass: org.openxmlformats.schemas.wordprocessingml.x2006.main.STAlgClass$Enum HASH>;

        interfaceinvoke $r15.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect: void setCryptAlgorithmClass(org.openxmlformats.schemas.wordprocessingml.x2006.main.STAlgClass$Enum)>($r16);

        $r17 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFSettings: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect safeGetDocumentProtection()>();

        interfaceinvoke $r17.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect: void setCryptProviderType(org.openxmlformats.schemas.wordprocessingml.x2006.main.STCryptProv$Enum)>(r41);

        $r18 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFSettings: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect safeGetDocumentProtection()>();

        $l3 = (long) b4;

        $r19 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l3);

        interfaceinvoke $r18.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect: void setCryptAlgorithmSid(java.math.BigInteger)>($r19);

     label18:
        return;
    }

    public boolean validateProtectionPassword(java.lang.String)
    {
        byte[] $r4, $r6, $r12;
        int $i0, $i1;
        java.math.BigInteger $r2, $r8;
        java.lang.String r9, $r11;
        boolean $z0;
        org.apache.poi.xwpf.usermodel.XWPFSettings r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect $r1, $r3, $r5, $r7;
        org.apache.poi.poifs.crypt.HashAlgorithm r10;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFSettings;

        r9 := @parameter0: java.lang.String;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFSettings: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect safeGetDocumentProtection()>();

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect: java.math.BigInteger getCryptAlgorithmSid()>();

        $r3 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFSettings: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect safeGetDocumentProtection()>();

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect: byte[] getHash()>();

        $r5 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFSettings: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect safeGetDocumentProtection()>();

        $r6 = interfaceinvoke $r5.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect: byte[] getSalt()>();

        $r7 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFSettings: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect safeGetDocumentProtection()>();

        $r8 = interfaceinvoke $r7.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect: java.math.BigInteger getCryptSpinCount()>();

        if $r2 == null goto label01;

        if $r4 == null goto label01;

        if $r6 == null goto label01;

        if $r8 != null goto label02;

     label01:
        return 0;

     label02:
        $i0 = virtualinvoke $r2.<java.math.BigInteger: int intValue()>();

        tableswitch($i0)
        {
            case 1: goto label03;
            case 2: goto label04;
            case 3: goto label05;
            case 4: goto label06;
            case 5: goto label10;
            case 6: goto label10;
            case 7: goto label10;
            case 8: goto label10;
            case 9: goto label10;
            case 10: goto label10;
            case 11: goto label10;
            case 12: goto label07;
            case 13: goto label08;
            case 14: goto label09;
            default: goto label10;
        };

     label03:
        r10 = <org.apache.poi.poifs.crypt.HashAlgorithm: org.apache.poi.poifs.crypt.HashAlgorithm md2>;

        goto label11;

     label04:
        r10 = <org.apache.poi.poifs.crypt.HashAlgorithm: org.apache.poi.poifs.crypt.HashAlgorithm md4>;

        goto label11;

     label05:
        r10 = <org.apache.poi.poifs.crypt.HashAlgorithm: org.apache.poi.poifs.crypt.HashAlgorithm md5>;

        goto label11;

     label06:
        r10 = <org.apache.poi.poifs.crypt.HashAlgorithm: org.apache.poi.poifs.crypt.HashAlgorithm sha1>;

        goto label11;

     label07:
        r10 = <org.apache.poi.poifs.crypt.HashAlgorithm: org.apache.poi.poifs.crypt.HashAlgorithm sha256>;

        goto label11;

     label08:
        r10 = <org.apache.poi.poifs.crypt.HashAlgorithm: org.apache.poi.poifs.crypt.HashAlgorithm sha384>;

        goto label11;

     label09:
        r10 = <org.apache.poi.poifs.crypt.HashAlgorithm: org.apache.poi.poifs.crypt.HashAlgorithm sha512>;

        goto label11;

     label10:
        return 0;

     label11:
        $r11 = staticinvoke <org.apache.poi.poifs.crypt.CryptoFunctions: java.lang.String xorHashPasswordReversed(java.lang.String)>(r9);

        $i1 = virtualinvoke $r8.<java.math.BigInteger: int intValue()>();

        $r12 = staticinvoke <org.apache.poi.poifs.crypt.CryptoFunctions: byte[] hashPassword(java.lang.String,org.apache.poi.poifs.crypt.HashAlgorithm,byte[],int,boolean)>($r11, r10, $r6, $i1, 0);

        $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r4, $r12);

        return $z0;
    }

    public void removeEnforcement()
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect $r1;
        org.apache.poi.xwpf.usermodel.XWPFSettings r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum $r2;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFSettings;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFSettings: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect safeGetDocumentProtection()>();

        $r2 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff: org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum X_0>;

        interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect: void setEnforcement(org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum)>($r2);

        return;
    }

    public void setUpdateFields()
    {
        org.apache.poi.xwpf.usermodel.XWPFSettings r2;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum $r1;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSettings $r3;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTOnOff $r0;

        r2 := @this: org.apache.poi.xwpf.usermodel.XWPFSettings;

        $r0 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.CTOnOff$Factory: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTOnOff newInstance()>();

        $r1 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff: org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum TRUE>;

        interfaceinvoke $r0.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTOnOff: void setVal(org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum)>($r1);

        $r3 = r2.<org.apache.poi.xwpf.usermodel.XWPFSettings: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSettings ctSettings>;

        interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSettings: void setUpdateFields(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTOnOff)>($r0);

        return;
    }

    boolean isUpdateFields()
    {
        org.apache.poi.xwpf.usermodel.XWPFSettings r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSettings $r1, $r2;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum $r4, $r5;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTOnOff $r3;
        boolean $z0, $z1;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFSettings;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFSettings: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSettings ctSettings>;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSettings: boolean isSetUpdateFields()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<org.apache.poi.xwpf.usermodel.XWPFSettings: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSettings ctSettings>;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSettings: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTOnOff getUpdateFields()>();

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTOnOff: org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum getVal()>();

        $r5 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff: org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum TRUE>;

        if $r4 != $r5 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public boolean isTrackRevisions()
    {
        org.apache.poi.xwpf.usermodel.XWPFSettings r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSettings $r1;
        boolean $z0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFSettings;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFSettings: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSettings ctSettings>;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSettings: boolean isSetTrackRevisions()>();

        return $z0;
    }

    public void setTrackRevisions(boolean)
    {
        org.apache.poi.xwpf.usermodel.XWPFSettings r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSettings $r1, $r2, $r3, $r4;
        boolean z0, $z1, $z2;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFSettings;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r3 = r0.<org.apache.poi.xwpf.usermodel.XWPFSettings: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSettings ctSettings>;

        $z2 = interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSettings: boolean isSetTrackRevisions()>();

        if $z2 != 0 goto label2;

        $r4 = r0.<org.apache.poi.xwpf.usermodel.XWPFSettings: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSettings ctSettings>;

        interfaceinvoke $r4.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSettings: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTOnOff addNewTrackRevisions()>();

        goto label2;

     label1:
        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFSettings: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSettings ctSettings>;

        $z1 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSettings: boolean isSetTrackRevisions()>();

        if $z1 == 0 goto label2;

        $r2 = r0.<org.apache.poi.xwpf.usermodel.XWPFSettings: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSettings ctSettings>;

        interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSettings: void unsetTrackRevisions()>();

     label2:
        return;
    }

    protected void commit() throws java.io.IOException
    {
        java.io.OutputStream $r10;
        java.lang.IllegalStateException $r12;
        org.apache.poi.xwpf.usermodel.XWPFSettings r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSettings $r1, $r11;
        java.util.HashMap $r8;
        org.apache.xmlbeans.XmlOptions $r2, $r3;
        org.apache.poi.openxml4j.opc.PackagePart $r9;
        javax.xml.namespace.QName $r4, $r6;
        java.lang.String $r7;
        org.apache.xmlbeans.SchemaType $r5;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFSettings;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFSettings: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSettings ctSettings>;

        if $r1 != null goto label1;

        $r12 = new java.lang.IllegalStateException;

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Unable to write out settings that were never read in!");

        throw $r12;

     label1:
        $r2 = new org.apache.xmlbeans.XmlOptions;

        $r3 = <org.apache.poi.xwpf.usermodel.XWPFSettings: org.apache.xmlbeans.XmlOptions DEFAULT_XML_OPTIONS>;

        specialinvoke $r2.<org.apache.xmlbeans.XmlOptions: void <init>(org.apache.xmlbeans.XmlOptions)>($r3);

        $r4 = new javax.xml.namespace.QName;

        $r5 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSettings: org.apache.xmlbeans.SchemaType type>;

        $r6 = interfaceinvoke $r5.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $r7 = virtualinvoke $r6.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        specialinvoke $r4.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>($r7, "settings");

        virtualinvoke $r2.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setSaveSyntheticDocumentElement(javax.xml.namespace.QName)>($r4);

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://schemas.openxmlformats.org/wordprocessingml/2006/main", "w");

        virtualinvoke $r2.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setSaveSuggestedPrefixes(java.util.Map)>($r8);

        $r9 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFSettings: org.apache.poi.openxml4j.opc.PackagePart getPackagePart()>();

        $r10 = virtualinvoke $r9.<org.apache.poi.openxml4j.opc.PackagePart: java.io.OutputStream getOutputStream()>();

        $r11 = r0.<org.apache.poi.xwpf.usermodel.XWPFSettings: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSettings ctSettings>;

        interfaceinvoke $r11.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSettings: void save(java.io.OutputStream,org.apache.xmlbeans.XmlOptions)>($r10, $r2);

        virtualinvoke $r10.<java.io.OutputStream: void close()>();

        return;
    }

    private org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect safeGetDocumentProtection()
    {
        org.apache.poi.xwpf.usermodel.XWPFSettings r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSettings $r1, $r3, $r6;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect $r2, $r4, $r5;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFSettings;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFSettings: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSettings ctSettings>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSettings: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect getDocumentProtection()>();

        if $r2 != null goto label1;

        $r5 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect$Factory: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect newInstance()>();

        $r6 = r0.<org.apache.poi.xwpf.usermodel.XWPFSettings: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSettings ctSettings>;

        interfaceinvoke $r6.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSettings: void setDocumentProtection(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect)>($r5);

     label1:
        $r3 = r0.<org.apache.poi.xwpf.usermodel.XWPFSettings: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSettings ctSettings>;

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSettings: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocProtect getDocumentProtection()>();

        return $r4;
    }

    private void readFrom(java.io.InputStream)
    {
        org.apache.poi.xwpf.usermodel.XWPFSettings r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.SettingsDocument $r2;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSettings $r3;
        java.lang.RuntimeException $r5;
        java.lang.Exception $r4;
        java.io.InputStream r1;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFSettings;

        r1 := @parameter0: java.io.InputStream;

     label1:
        $r2 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.SettingsDocument$Factory: org.openxmlformats.schemas.wordprocessingml.x2006.main.SettingsDocument parse(java.io.InputStream)>(r1);

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.SettingsDocument: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSettings getSettings()>();

        r0.<org.apache.poi.xwpf.usermodel.XWPFSettings: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSettings ctSettings> = $r3;

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
