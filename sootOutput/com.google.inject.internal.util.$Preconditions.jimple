public final class com.google.inject.internal.util.$Preconditions extends java.lang.Object
{

    private void <init>()
    {
        com.google.inject.internal.util.$Preconditions r0;

        r0 := @this: com.google.inject.internal.util.$Preconditions;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void checkArgument(boolean)
    {
        java.lang.IllegalArgumentException $r0;
        boolean z0;

        z0 := @parameter0: boolean;

        if z0 != 0 goto label1;

        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r0;

     label1:
        return;
    }

    public static void checkArgument(boolean, java.lang.Object)
    {
        java.lang.Object r1;
        java.lang.String $r2;
        java.lang.IllegalArgumentException $r0;
        boolean z0;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.Object;

        if z0 != 0 goto label1;

        $r0 = new java.lang.IllegalArgumentException;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r0;

     label1:
        return;
    }

    public static transient void checkArgument(boolean, java.lang.String, java.lang.Object[])
    {
        java.lang.Object[] r2;
        java.lang.String r1, $r3;
        java.lang.IllegalArgumentException $r0;
        boolean z0;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object[];

        if z0 != 0 goto label1;

        $r0 = new java.lang.IllegalArgumentException;

        $r3 = staticinvoke <com.google.inject.internal.util.$Preconditions: java.lang.String format(java.lang.String,java.lang.Object[])>(r1, r2);

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r0;

     label1:
        return;
    }

    public static void checkState(boolean)
    {
        java.lang.IllegalStateException $r0;
        boolean z0;

        z0 := @parameter0: boolean;

        if z0 != 0 goto label1;

        $r0 = new java.lang.IllegalStateException;

        specialinvoke $r0.<java.lang.IllegalStateException: void <init>()>();

        throw $r0;

     label1:
        return;
    }

    public static void checkState(boolean, java.lang.Object)
    {
        java.lang.IllegalStateException $r0;
        java.lang.Object r1;
        java.lang.String $r2;
        boolean z0;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.Object;

        if z0 != 0 goto label1;

        $r0 = new java.lang.IllegalStateException;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        specialinvoke $r0.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r2);

        throw $r0;

     label1:
        return;
    }

    public static transient void checkState(boolean, java.lang.String, java.lang.Object[])
    {
        java.lang.IllegalStateException $r0;
        java.lang.Object[] r2;
        java.lang.String r1, $r3;
        boolean z0;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object[];

        if z0 != 0 goto label1;

        $r0 = new java.lang.IllegalStateException;

        $r3 = staticinvoke <com.google.inject.internal.util.$Preconditions: java.lang.String format(java.lang.String,java.lang.Object[])>(r1, r2);

        specialinvoke $r0.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r3);

        throw $r0;

     label1:
        return;
    }

    public static java.lang.Object checkNotNull(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.NullPointerException $r1;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        $r1 = new java.lang.NullPointerException;

        specialinvoke $r1.<java.lang.NullPointerException: void <init>()>();

        throw $r1;

     label1:
        return r0;
    }

    public static java.lang.Object checkNotNull(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r2;
        java.lang.String $r3;
        java.lang.NullPointerException $r1;

        r0 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        if r0 != null goto label1;

        $r1 = new java.lang.NullPointerException;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2);

        specialinvoke $r1.<java.lang.NullPointerException: void <init>(java.lang.String)>($r3);

        throw $r1;

     label1:
        return r0;
    }

    public static transient java.lang.Object checkNotNull(java.lang.Object, java.lang.String, java.lang.Object[])
    {
        java.lang.Object[] r3;
        java.lang.Object r0;
        java.lang.String r2, $r4;
        java.lang.NullPointerException $r1;

        r0 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object[];

        if r0 != null goto label1;

        $r1 = new java.lang.NullPointerException;

        $r4 = staticinvoke <com.google.inject.internal.util.$Preconditions: java.lang.String format(java.lang.String,java.lang.Object[])>(r2, r3);

        specialinvoke $r1.<java.lang.NullPointerException: void <init>(java.lang.String)>($r4);

        throw $r1;

     label1:
        return r0;
    }

    public static java.lang.Iterable checkContentsNotNull(java.lang.Iterable)
    {
        java.lang.Iterable r0;
        java.lang.NullPointerException $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.Iterable;

        $z0 = staticinvoke <com.google.inject.internal.util.$Preconditions: boolean containsOrIsNull(java.lang.Iterable)>(r0);

        if $z0 == 0 goto label1;

        $r1 = new java.lang.NullPointerException;

        specialinvoke $r1.<java.lang.NullPointerException: void <init>()>();

        throw $r1;

     label1:
        return r0;
    }

    public static java.lang.Iterable checkContentsNotNull(java.lang.Iterable, java.lang.Object)
    {
        java.lang.Object r2;
        java.lang.String $r3;
        java.lang.Iterable r0;
        java.lang.NullPointerException $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.Iterable;

        r2 := @parameter1: java.lang.Object;

        $z0 = staticinvoke <com.google.inject.internal.util.$Preconditions: boolean containsOrIsNull(java.lang.Iterable)>(r0);

        if $z0 == 0 goto label1;

        $r1 = new java.lang.NullPointerException;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2);

        specialinvoke $r1.<java.lang.NullPointerException: void <init>(java.lang.String)>($r3);

        throw $r1;

     label1:
        return r0;
    }

    public static transient java.lang.Iterable checkContentsNotNull(java.lang.Iterable, java.lang.String, java.lang.Object[])
    {
        java.lang.Object[] r3;
        java.lang.String r2, $r4;
        java.lang.Iterable r0;
        java.lang.NullPointerException $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.Iterable;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object[];

        $z0 = staticinvoke <com.google.inject.internal.util.$Preconditions: boolean containsOrIsNull(java.lang.Iterable)>(r0);

        if $z0 == 0 goto label1;

        $r1 = new java.lang.NullPointerException;

        $r4 = staticinvoke <com.google.inject.internal.util.$Preconditions: java.lang.String format(java.lang.String,java.lang.Object[])>(r2, r3);

        specialinvoke $r1.<java.lang.NullPointerException: void <init>(java.lang.String)>($r4);

        throw $r1;

     label1:
        return r0;
    }

    private static boolean containsOrIsNull(java.lang.Iterable)
    {
        java.util.Iterator $r1;
        java.util.Collection r4;
        java.lang.Iterable r0;
        java.lang.NullPointerException $r3;
        java.lang.Object $r2;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: java.lang.Iterable;

        if r0 != null goto label1;

        return 1;

     label1:
        $z0 = r0 instanceof java.util.Collection;

        if $z0 == 0 goto label5;

        r4 = (java.util.Collection) r0;

     label2:
        $z2 = interfaceinvoke r4.<java.util.Collection: boolean contains(java.lang.Object)>(null);

     label3:
        return $z2;

     label4:
        $r3 := @caughtexception;

        return 0;

     label5:
        $r1 = interfaceinvoke r0.<java.lang.Iterable: java.util.Iterator iterator()>();

     label6:
        $z1 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label8;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        if $r2 != null goto label7;

        return 1;

     label7:
        goto label6;

     label8:
        return 0;

        catch java.lang.NullPointerException from label2 to label3 with label4;
    }

    public static void checkElementIndex(int, int)
    {
        int i0, i1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        staticinvoke <com.google.inject.internal.util.$Preconditions: void checkElementIndex(int,int,java.lang.String)>(i0, i1, "index");

        return;
    }

    public static void checkElementIndex(int, int, java.lang.String)
    {
        java.lang.IndexOutOfBoundsException $r2, $r8;
        java.lang.Object[] $r0, $r3, $r9;
        java.lang.Integer $r1, $r5, $r6, $r10;
        int i0, i1;
        java.lang.String r4, $r7, $r11;
        boolean $z0;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        r4 := @parameter2: java.lang.String;

        if i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r0 = newarray (java.lang.Object)[1];

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r0[0] = $r1;

        staticinvoke <com.google.inject.internal.util.$Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object[])>($z0, "negative size: %s", $r0);

        if i1 >= 0 goto label3;

        $r8 = new java.lang.IndexOutOfBoundsException;

        $r9 = newarray (java.lang.Object)[2];

        $r9[0] = r4;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r9[1] = $r10;

        $r11 = staticinvoke <com.google.inject.internal.util.$Preconditions: java.lang.String format(java.lang.String,java.lang.Object[])>("%s (%s) must not be negative", $r9);

        specialinvoke $r8.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r11);

        throw $r8;

     label3:
        if i1 < i0 goto label4;

        $r2 = new java.lang.IndexOutOfBoundsException;

        $r3 = newarray (java.lang.Object)[3];

        $r3[0] = r4;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r3[1] = $r5;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3[2] = $r6;

        $r7 = staticinvoke <com.google.inject.internal.util.$Preconditions: java.lang.String format(java.lang.String,java.lang.Object[])>("%s (%s) must be less than size (%s)", $r3);

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label4:
        return;
    }

    public static void checkPositionIndex(int, int)
    {
        int i0, i1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        staticinvoke <com.google.inject.internal.util.$Preconditions: void checkPositionIndex(int,int,java.lang.String)>(i0, i1, "index");

        return;
    }

    public static void checkPositionIndex(int, int, java.lang.String)
    {
        java.lang.IndexOutOfBoundsException $r2, $r8;
        java.lang.Object[] $r0, $r3, $r9;
        java.lang.Integer $r1, $r5, $r6, $r10;
        int i0, i1;
        java.lang.String r4, $r7, $r11;
        boolean $z0;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        r4 := @parameter2: java.lang.String;

        if i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r0 = newarray (java.lang.Object)[1];

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r0[0] = $r1;

        staticinvoke <com.google.inject.internal.util.$Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object[])>($z0, "negative size: %s", $r0);

        if i1 >= 0 goto label3;

        $r8 = new java.lang.IndexOutOfBoundsException;

        $r9 = newarray (java.lang.Object)[2];

        $r9[0] = r4;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r9[1] = $r10;

        $r11 = staticinvoke <com.google.inject.internal.util.$Preconditions: java.lang.String format(java.lang.String,java.lang.Object[])>("%s (%s) must not be negative", $r9);

        specialinvoke $r8.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r11);

        throw $r8;

     label3:
        if i1 <= i0 goto label4;

        $r2 = new java.lang.IndexOutOfBoundsException;

        $r3 = newarray (java.lang.Object)[3];

        $r3[0] = r4;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r3[1] = $r5;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3[2] = $r6;

        $r7 = staticinvoke <com.google.inject.internal.util.$Preconditions: java.lang.String format(java.lang.String,java.lang.Object[])>("%s (%s) must not be greater than size (%s)", $r3);

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label4:
        return;
    }

    public static void checkPositionIndexes(int, int, int)
    {
        java.lang.IndexOutOfBoundsException $r0;
        java.lang.Object[] $r1;
        java.lang.Integer $r2, $r3;
        int i0, i1, i2;
        java.lang.String $r4;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        i1 := @parameter2: int;

        staticinvoke <com.google.inject.internal.util.$Preconditions: void checkPositionIndex(int,int,java.lang.String)>(i0, i1, "start index");

        staticinvoke <com.google.inject.internal.util.$Preconditions: void checkPositionIndex(int,int,java.lang.String)>(i2, i1, "end index");

        if i2 >= i0 goto label1;

        $r0 = new java.lang.IndexOutOfBoundsException;

        $r1 = newarray (java.lang.Object)[2];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r1[0] = $r2;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r1[1] = $r3;

        $r4 = staticinvoke <com.google.inject.internal.util.$Preconditions: java.lang.String format(java.lang.String,java.lang.Object[])>("end index (%s) must not be less than start index (%s)", $r1);

        specialinvoke $r0.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r4);

        throw $r0;

     label1:
        return;
    }

    static transient java.lang.String format(java.lang.String, java.lang.Object[])
    {
        java.lang.Object[] r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12, $i14;
        java.lang.String r1, $r3, $r4, $r7;
        java.lang.Object $r5, $r6, $r8;
        java.lang.StringBuilder $r9;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        $r9 = new java.lang.StringBuilder;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $i1 = lengthof r2;

        $i2 = 16 * $i1;

        $i3 = $i0 + $i2;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(int)>($i3);

        i10 = 0;

        i11 = 0;

     label1:
        $i4 = lengthof r2;

        if i11 >= $i4 goto label3;

        $i8 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String,int)>("%s", i10);

        $i14 = (int) -1;

        if $i8 != $i14 goto label2;

        goto label3;

     label2:
        $r7 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i10, $i8);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $i9 = i11;

        i11 = i11 + 1;

        $r8 = r2[$i9];

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        i10 = $i8 + 2;

        goto label1;

     label3:
        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(i10);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $i5 = lengthof r2;

        if i11 >= $i5 goto label6;

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");

        i12 = i11 + 1;

        $r5 = r2[i11];

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

     label4:
        $i6 = lengthof r2;

        if i12 >= $i6 goto label5;

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $i7 = i12;

        i12 = i12 + 1;

        $r6 = r2[$i7];

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        goto label4;

     label5:
        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

     label6:
        $r4 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }
}
