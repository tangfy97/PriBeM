public class org.springframework.beans.PropertyValue extends org.springframework.beans.BeanMetadataAttributeAccessor implements java.io.Serializable
{
    private final java.lang.String name;
    private final java.lang.Object value;
    private java.lang.Object source;
    private boolean optional;
    private boolean converted;
    private java.lang.Object convertedValue;
    volatile java.lang.Boolean conversionNecessary;
    volatile java.lang.Object resolvedTokens;
    volatile java.beans.PropertyDescriptor resolvedDescriptor;

    public void <init>(java.lang.String, java.lang.Object)
    {
        java.lang.Object r2;
        java.lang.String r1;
        org.springframework.beans.PropertyValue r0;

        r0 := @this: org.springframework.beans.PropertyValue;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<org.springframework.beans.BeanMetadataAttributeAccessor: void <init>()>();

        r0.<org.springframework.beans.PropertyValue: boolean optional> = 0;

        r0.<org.springframework.beans.PropertyValue: boolean converted> = 0;

        r0.<org.springframework.beans.PropertyValue: java.lang.String name> = r1;

        r0.<org.springframework.beans.PropertyValue: java.lang.Object value> = r2;

        return;
    }

    public void <init>(org.springframework.beans.PropertyValue)
    {
        org.springframework.beans.PropertyValue r0, r1;
        java.beans.PropertyDescriptor $r8;
        java.lang.Boolean $r6;
        java.lang.Object $r3, $r4, $r5, $r7;
        java.lang.String $r2;
        boolean $z0, $z1;

        r0 := @this: org.springframework.beans.PropertyValue;

        r1 := @parameter0: org.springframework.beans.PropertyValue;

        specialinvoke r0.<org.springframework.beans.BeanMetadataAttributeAccessor: void <init>()>();

        r0.<org.springframework.beans.PropertyValue: boolean optional> = 0;

        r0.<org.springframework.beans.PropertyValue: boolean converted> = 0;

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r1, "Original must not be null");

        $r2 = virtualinvoke r1.<org.springframework.beans.PropertyValue: java.lang.String getName()>();

        r0.<org.springframework.beans.PropertyValue: java.lang.String name> = $r2;

        $r3 = virtualinvoke r1.<org.springframework.beans.PropertyValue: java.lang.Object getValue()>();

        r0.<org.springframework.beans.PropertyValue: java.lang.Object value> = $r3;

        $r4 = virtualinvoke r1.<org.springframework.beans.PropertyValue: java.lang.Object getSource()>();

        r0.<org.springframework.beans.PropertyValue: java.lang.Object source> = $r4;

        $z0 = virtualinvoke r1.<org.springframework.beans.PropertyValue: boolean isOptional()>();

        r0.<org.springframework.beans.PropertyValue: boolean optional> = $z0;

        $z1 = r1.<org.springframework.beans.PropertyValue: boolean converted>;

        r0.<org.springframework.beans.PropertyValue: boolean converted> = $z1;

        $r5 = r1.<org.springframework.beans.PropertyValue: java.lang.Object convertedValue>;

        r0.<org.springframework.beans.PropertyValue: java.lang.Object convertedValue> = $r5;

        $r6 = r1.<org.springframework.beans.PropertyValue: java.lang.Boolean conversionNecessary>;

        r0.<org.springframework.beans.PropertyValue: java.lang.Boolean conversionNecessary> = $r6;

        $r7 = r1.<org.springframework.beans.PropertyValue: java.lang.Object resolvedTokens>;

        r0.<org.springframework.beans.PropertyValue: java.lang.Object resolvedTokens> = $r7;

        $r8 = r1.<org.springframework.beans.PropertyValue: java.beans.PropertyDescriptor resolvedDescriptor>;

        r0.<org.springframework.beans.PropertyValue: java.beans.PropertyDescriptor resolvedDescriptor> = $r8;

        virtualinvoke r0.<org.springframework.beans.PropertyValue: void copyAttributesFrom(org.springframework.core.AttributeAccessor)>(r1);

        return;
    }

    public void <init>(org.springframework.beans.PropertyValue, java.lang.Object)
    {
        org.springframework.beans.PropertyValue r0, r1;
        java.beans.PropertyDescriptor $r6;
        java.lang.Boolean $r4;
        java.lang.Object r3, $r5;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: org.springframework.beans.PropertyValue;

        r1 := @parameter0: org.springframework.beans.PropertyValue;

        r3 := @parameter1: java.lang.Object;

        specialinvoke r0.<org.springframework.beans.BeanMetadataAttributeAccessor: void <init>()>();

        r0.<org.springframework.beans.PropertyValue: boolean optional> = 0;

        r0.<org.springframework.beans.PropertyValue: boolean converted> = 0;

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r1, "Original must not be null");

        $r2 = virtualinvoke r1.<org.springframework.beans.PropertyValue: java.lang.String getName()>();

        r0.<org.springframework.beans.PropertyValue: java.lang.String name> = $r2;

        r0.<org.springframework.beans.PropertyValue: java.lang.Object value> = r3;

        r0.<org.springframework.beans.PropertyValue: java.lang.Object source> = r1;

        $z0 = virtualinvoke r1.<org.springframework.beans.PropertyValue: boolean isOptional()>();

        r0.<org.springframework.beans.PropertyValue: boolean optional> = $z0;

        $r4 = r1.<org.springframework.beans.PropertyValue: java.lang.Boolean conversionNecessary>;

        r0.<org.springframework.beans.PropertyValue: java.lang.Boolean conversionNecessary> = $r4;

        $r5 = r1.<org.springframework.beans.PropertyValue: java.lang.Object resolvedTokens>;

        r0.<org.springframework.beans.PropertyValue: java.lang.Object resolvedTokens> = $r5;

        $r6 = r1.<org.springframework.beans.PropertyValue: java.beans.PropertyDescriptor resolvedDescriptor>;

        r0.<org.springframework.beans.PropertyValue: java.beans.PropertyDescriptor resolvedDescriptor> = $r6;

        virtualinvoke r0.<org.springframework.beans.PropertyValue: void copyAttributesFrom(org.springframework.core.AttributeAccessor)>(r1);

        return;
    }

    public java.lang.String getName()
    {
        java.lang.String $r1;
        org.springframework.beans.PropertyValue r0;

        r0 := @this: org.springframework.beans.PropertyValue;

        $r1 = r0.<org.springframework.beans.PropertyValue: java.lang.String name>;

        return $r1;
    }

    public java.lang.Object getValue()
    {
        java.lang.Object $r1;
        org.springframework.beans.PropertyValue r0;

        r0 := @this: org.springframework.beans.PropertyValue;

        $r1 = r0.<org.springframework.beans.PropertyValue: java.lang.Object value>;

        return $r1;
    }

    public org.springframework.beans.PropertyValue getOriginalPropertyValue()
    {
        org.springframework.beans.PropertyValue r0, r4;
        java.lang.Object $r1, $r2, $r3;
        boolean $z0;

        r0 := @this: org.springframework.beans.PropertyValue;

        r4 = r0;

        goto label2;

     label1:
        $r3 = r4.<org.springframework.beans.PropertyValue: java.lang.Object source>;

        r4 = (org.springframework.beans.PropertyValue) $r3;

     label2:
        $r1 = r4.<org.springframework.beans.PropertyValue: java.lang.Object source>;

        $z0 = $r1 instanceof org.springframework.beans.PropertyValue;

        if $z0 == 0 goto label3;

        $r2 = r4.<org.springframework.beans.PropertyValue: java.lang.Object source>;

        if $r2 != r4 goto label1;

     label3:
        return r4;
    }

    public void setOptional(boolean)
    {
        org.springframework.beans.PropertyValue r0;
        boolean z0;

        r0 := @this: org.springframework.beans.PropertyValue;

        z0 := @parameter0: boolean;

        r0.<org.springframework.beans.PropertyValue: boolean optional> = z0;

        return;
    }

    public boolean isOptional()
    {
        org.springframework.beans.PropertyValue r0;
        boolean $z0;

        r0 := @this: org.springframework.beans.PropertyValue;

        $z0 = r0.<org.springframework.beans.PropertyValue: boolean optional>;

        return $z0;
    }

    public synchronized boolean isConverted()
    {
        org.springframework.beans.PropertyValue r0;
        boolean $z0;

        r0 := @this: org.springframework.beans.PropertyValue;

        $z0 = r0.<org.springframework.beans.PropertyValue: boolean converted>;

        return $z0;
    }

    public synchronized void setConvertedValue(java.lang.Object)
    {
        java.lang.Object r1;
        org.springframework.beans.PropertyValue r0;

        r0 := @this: org.springframework.beans.PropertyValue;

        r1 := @parameter0: java.lang.Object;

        r0.<org.springframework.beans.PropertyValue: boolean converted> = 1;

        r0.<org.springframework.beans.PropertyValue: java.lang.Object convertedValue> = r1;

        return;
    }

    public synchronized java.lang.Object getConvertedValue()
    {
        java.lang.Object $r1;
        org.springframework.beans.PropertyValue r0;

        r0 := @this: org.springframework.beans.PropertyValue;

        $r1 = r0.<org.springframework.beans.PropertyValue: java.lang.Object convertedValue>;

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        org.springframework.beans.PropertyValue r0, r2;
        java.lang.Object r1, $r5, $r6, $r7, $r8;
        java.lang.String $r3, $r4;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.springframework.beans.PropertyValue;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof org.springframework.beans.PropertyValue;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (org.springframework.beans.PropertyValue) r1;

        $r4 = r0.<org.springframework.beans.PropertyValue: java.lang.String name>;

        $r3 = r2.<org.springframework.beans.PropertyValue: java.lang.String name>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label3;

        $r6 = r0.<org.springframework.beans.PropertyValue: java.lang.Object value>;

        $r5 = r2.<org.springframework.beans.PropertyValue: java.lang.Object value>;

        $z2 = staticinvoke <org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>($r6, $r5);

        if $z2 == 0 goto label3;

        $r8 = r0.<org.springframework.beans.PropertyValue: java.lang.Object source>;

        $r7 = r2.<org.springframework.beans.PropertyValue: java.lang.Object source>;

        $z3 = staticinvoke <org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>($r8, $r7);

        if $z3 == 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    public int hashCode()
    {
        org.springframework.beans.PropertyValue r0;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r2;
        java.lang.String $r1;

        r0 := @this: org.springframework.beans.PropertyValue;

        $r1 = r0.<org.springframework.beans.PropertyValue: java.lang.String name>;

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        $i1 = $i0 * 29;

        $r2 = r0.<org.springframework.beans.PropertyValue: java.lang.Object value>;

        $i2 = staticinvoke <org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>($r2);

        $i3 = $i1 + $i2;

        return $i3;
    }

    public java.lang.String toString()
    {
        org.springframework.beans.PropertyValue r1;
        java.lang.StringBuilder $r0, $r3, $r4;
        java.lang.String $r2, $r5;

        r1 := @this: org.springframework.beans.PropertyValue;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("bean property \'");

        $r2 = r1.<org.springframework.beans.PropertyValue: java.lang.String name>;

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }
}
