public class ucar.nc2.dataset.conv.WRFConvention extends ucar.nc2.dataset.CoordSysBuilder
{
    private static java.text.SimpleDateFormat dateFormat;
    private double centerX;
    private double centerY;
    private ucar.nc2.dataset.ProjectionCT projCT;

    public static boolean isMine(ucar.nc2.NetcdfFile)
    {
        ucar.nc2.Attribute $r2, $r3, $r5;
        int $i0;
        ucar.nc2.Dimension $r1;
        ucar.nc2.NetcdfFile r0;
        java.lang.String $r4;
        java.lang.Number $r6;
        boolean $z0;

        r0 := @parameter0: ucar.nc2.NetcdfFile;

        $r1 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Dimension findDimension(java.lang.String)>("south_north");

        if null != $r1 goto label1;

        return 0;

     label1:
        $r2 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute findGlobalAttribute(java.lang.String)>("DYN_OPT");

        if $r2 == null goto label2;

        $r6 = virtualinvoke $r2.<ucar.nc2.Attribute: java.lang.Number getNumericValue()>();

        $i0 = virtualinvoke $r6.<java.lang.Number: int intValue()>();

        if $i0 == 2 goto label4;

        return 0;

     label2:
        $r3 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute findGlobalAttribute(java.lang.String)>("GRIDTYPE");

        if $r3 != null goto label3;

        return 0;

     label3:
        $r4 = virtualinvoke $r3.<ucar.nc2.Attribute: java.lang.String getStringValue()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("C");

        if $z0 != 0 goto label4;

        return 0;

     label4:
        $r5 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute findGlobalAttribute(java.lang.String)>("MAP_PROJ");

        if $r5 != null goto label5;

        return 0;

     label5:
        return 1;
    }

    public void <init>()
    {
        ucar.nc2.dataset.conv.WRFConvention r0;

        r0 := @this: ucar.nc2.dataset.conv.WRFConvention;

        specialinvoke r0.<ucar.nc2.dataset.CoordSysBuilder: void <init>()>();

        r0.<ucar.nc2.dataset.conv.WRFConvention: double centerX> = 0.0;

        r0.<ucar.nc2.dataset.conv.WRFConvention: double centerY> = 0.0;

        r0.<ucar.nc2.dataset.conv.WRFConvention: ucar.nc2.dataset.ProjectionCT projCT> = null;

        r0.<ucar.nc2.dataset.conv.WRFConvention: java.lang.String conventionName> = "WRF";

        return;
    }

    public void augmentDataset(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.util.CancelTask)
    {
        java.lang.Integer $r72;
        ucar.unidata.geoloc.ProjectionPointImpl $r28;
        ucar.nc2.Attribute $r4, $r18, $r48, $r49, $r50, $r51, $r52, $r57, $r74, $r78, $r80, $r84, $r87, $r94, $r100, $r102;
        java.lang.StringBuilder $r30, $r32, $r33, $r35, $r37, $r38;
        java.lang.Object[] $r70, $r95, $r97;
        ucar.nc2.dataset.ProjectionCT $r12, $r16, $r63, $r65, $r67, $r69;
        ucar.ma2.Array $r77, $r83, $r92;
        int[] $r55, $r60, $r91;
        ucar.nc2.dataset.VariableDS $r17, $r85, $r109;
        ucar.ma2.DataType $r86, $r88;
        int $i0, $i1, $i2, $i3, $i4;
        ucar.nc2.Variable $r1, r41, $r73, $r79, $r93, r105, $r107;
        java.io.PrintStream $r31, $r36;
        ucar.unidata.geoloc.projection.LambertConformal $r66;
        java.lang.Object $r40, $r99;
        java.lang.Class $r89;
        ucar.nc2.dataset.CoordinateAxis $r9, $r11, $r14, $r20, $r22, $r24, $r26, r108;
        ucar.nc2.util.CancelTask r104;
        ucar.nc2.constants.AxisType $r53, $r58, $r75, $r81;
        java.lang.String $r34, $r39, $r42, $r43, $r44, $r45, $r46, $r47, $r54, $r59, $r76, $r82, $r101, $r103;
        java.lang.Number $r5;
        char[] $r90;
        ucar.nc2.Dimension $r8, $r10, $r13, $r15, $r19, $r21, $r23, $r25;
        ucar.unidata.geoloc.LatLonPointImpl $r27;
        ucar.nc2.dataset.NetcdfDataset r0;
        ucar.unidata.geoloc.ProjectionImpl r106;
        java.util.Formatter $r71, $r96, $r98;
        ucar.nc2.dataset.conv.WRFConvention r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, z11;
        ucar.unidata.geoloc.projection.Stereographic $r64;
        java.util.List $r2, $r56, $r61;
        ucar.unidata.geoloc.projection.FlatEarth $r68;
        ucar.unidata.geoloc.projection.Mercator $r62;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, d16, $d17;
        ucar.unidata.geoloc.ProjectionPoint $r29;
        java.util.Iterator $r3, $r7;

        r6 := @this: ucar.nc2.dataset.conv.WRFConvention;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r104 := @parameter1: ucar.nc2.util.CancelTask;

        $r1 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("x");

        if null == $r1 goto label01;

        return;

     label01:
        $r2 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.util.List getVariables()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label04;

        $r99 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r105 = (ucar.nc2.Variable) $r99;

        $r100 = virtualinvoke r105.<ucar.nc2.Variable: ucar.nc2.Attribute findAttributeIgnoreCase(java.lang.String)>("units");

        if $r100 == null goto label03;

        $r101 = virtualinvoke $r100.<ucar.nc2.Attribute: java.lang.String getStringValue()>();

        $r102 = new ucar.nc2.Attribute;

        $r103 = specialinvoke r6.<ucar.nc2.dataset.conv.WRFConvention: java.lang.String normalize(java.lang.String)>($r101);

        specialinvoke $r102.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", $r103);

        virtualinvoke r105.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r102);

     label03:
        goto label02;

     label04:
        $r4 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Attribute findGlobalAttribute(java.lang.String)>("MAP_PROJ");

        $r5 = virtualinvoke $r4.<ucar.nc2.Attribute: java.lang.Number getNumericValue()>();

        $i0 = virtualinvoke $r5.<java.lang.Number: int intValue()>();

        z11 = 0;

        if $i0 != 203 goto label09;

        $r73 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("GLAT");

        if $r73 != null goto label05;

        $r98 = r6.<ucar.nc2.dataset.conv.WRFConvention: java.util.Formatter parseInfo>;

        $r97 = newarray (java.lang.Object)[0];

        virtualinvoke $r98.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("Projection type 203 - expected GLAT variable not found\n", $r97);

        goto label06;

     label05:
        $r74 = new ucar.nc2.Attribute;

        $r75 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lat>;

        $r76 = virtualinvoke $r75.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        specialinvoke $r74.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r76);

        virtualinvoke $r73.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r74);

        virtualinvoke $r73.<ucar.nc2.Variable: void setDimensions(java.lang.String)>("south_north west_east");

        $r77 = specialinvoke r6.<ucar.nc2.dataset.conv.WRFConvention: ucar.ma2.Array convertToDegrees(ucar.nc2.Variable)>($r73);

        virtualinvoke $r73.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r77, 0);

        $r78 = new ucar.nc2.Attribute;

        specialinvoke $r78.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", "degrees_north");

        virtualinvoke $r73.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r78);

     label06:
        $r79 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("GLON");

        if $r79 != null goto label07;

        $r96 = r6.<ucar.nc2.dataset.conv.WRFConvention: java.util.Formatter parseInfo>;

        $r95 = newarray (java.lang.Object)[0];

        virtualinvoke $r96.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("Projection type 203 - expected GLON variable not found\n", $r95);

        goto label08;

     label07:
        $r80 = new ucar.nc2.Attribute;

        $r81 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lon>;

        $r82 = virtualinvoke $r81.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        specialinvoke $r80.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r82);

        virtualinvoke $r79.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r80);

        virtualinvoke $r79.<ucar.nc2.Variable: void setDimensions(java.lang.String)>("south_north west_east");

        $r83 = specialinvoke r6.<ucar.nc2.dataset.conv.WRFConvention: ucar.ma2.Array convertToDegrees(ucar.nc2.Variable)>($r79);

        virtualinvoke $r79.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r83, 0);

        $r84 = new ucar.nc2.Attribute;

        specialinvoke $r84.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", "degrees_east");

        virtualinvoke $r79.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r84);

     label08:
        $r85 = new ucar.nc2.dataset.VariableDS;

        $r86 = <ucar.ma2.DataType: ucar.ma2.DataType CHAR>;

        specialinvoke $r85.<ucar.nc2.dataset.VariableDS: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String,ucar.ma2.DataType,java.lang.String,java.lang.String,java.lang.String)>(r0, null, null, "LatLonCoordSys", $r86, "", null, null);

        $r87 = new ucar.nc2.Attribute;

        specialinvoke $r87.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxes", "GLAT GLON Time");

        virtualinvoke $r85.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r87);

        $r88 = <ucar.ma2.DataType: ucar.ma2.DataType CHAR>;

        $r89 = virtualinvoke $r88.<ucar.ma2.DataType: java.lang.Class getPrimitiveClassType()>();

        $r91 = newarray (int)[0];

        $r90 = newarray (char)[1];

        $r90[0] = 32;

        $r92 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(java.lang.Class,int[],java.lang.Object)>($r89, $r91, $r90);

        virtualinvoke $r85.<ucar.nc2.dataset.VariableDS: void setCachedData(ucar.ma2.Array,boolean)>($r92, 1);

        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(null, $r85);

        $r93 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("LANDMASK");

        $r94 = new ucar.nc2.Attribute;

        specialinvoke $r94.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateSystems", "LatLonCoordSys");

        virtualinvoke $r93.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r94);

        goto label33;

     label09:
        $d0 = specialinvoke r6.<ucar.nc2.dataset.conv.WRFConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r0, "TRUELAT1");

        $d1 = specialinvoke r6.<ucar.nc2.dataset.conv.WRFConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r0, "TRUELAT2");

        $d2 = specialinvoke r6.<ucar.nc2.dataset.conv.WRFConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r0, "CEN_LAT");

        $d3 = specialinvoke r6.<ucar.nc2.dataset.conv.WRFConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r0, "CEN_LON");

        $d4 = specialinvoke r6.<ucar.nc2.dataset.conv.WRFConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r0, "STAND_LON");

        $d5 = specialinvoke r6.<ucar.nc2.dataset.conv.WRFConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r0, "MOAD_CEN_LAT");

        r106 = null;

        tableswitch($i0)
        {
            case 0: goto label10;
            case 1: goto label11;
            case 2: goto label12;
            case 3: goto label17;
            case 4: goto label29;
            case 5: goto label29;
            case 6: goto label18;
            default: goto label29;
        };

     label10:
        $r68 = new ucar.unidata.geoloc.projection.FlatEarth;

        specialinvoke $r68.<ucar.unidata.geoloc.projection.FlatEarth: void <init>()>();

        r106 = $r68;

        $r69 = new ucar.nc2.dataset.ProjectionCT;

        specialinvoke $r69.<ucar.nc2.dataset.ProjectionCT: void <init>(java.lang.String,java.lang.String,ucar.unidata.geoloc.ProjectionImpl)>("flat_earth", "FGDC", $r68);

        r6.<ucar.nc2.dataset.conv.WRFConvention: ucar.nc2.dataset.ProjectionCT projCT> = $r69;

        goto label30;

     label11:
        $r66 = new ucar.unidata.geoloc.projection.LambertConformal;

        specialinvoke $r66.<ucar.unidata.geoloc.projection.LambertConformal: void <init>(double,double,double,double)>($d5, $d4, $d0, $d1);

        r106 = $r66;

        $r67 = new ucar.nc2.dataset.ProjectionCT;

        specialinvoke $r67.<ucar.nc2.dataset.ProjectionCT: void <init>(java.lang.String,java.lang.String,ucar.unidata.geoloc.ProjectionImpl)>("Lambert", "FGDC", $r66);

        r6.<ucar.nc2.dataset.conv.WRFConvention: ucar.nc2.dataset.ProjectionCT projCT> = $r67;

        goto label30;

     label12:
        $z9 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d4);

        if $z9 == 0 goto label13;

        $d15 = $d3;

        goto label14;

     label13:
        $d15 = $d4;

     label14:
        d16 = $d15;

        $z10 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d2);

        if $z10 == 0 goto label15;

        $d17 = $d1;

        goto label16;

     label15:
        $d17 = $d2;

     label16:
        $d10 = staticinvoke <java.lang.Math: double toRadians(double)>($d0);

        $d11 = staticinvoke <java.lang.Math: double sin(double)>($d10);

        $d12 = staticinvoke <java.lang.Math: double abs(double)>($d11);

        $d13 = 1.0 + $d12;

        $d14 = $d13 / 2.0;

        $r64 = new ucar.unidata.geoloc.projection.Stereographic;

        specialinvoke $r64.<ucar.unidata.geoloc.projection.Stereographic: void <init>(double,double,double)>($d17, d16, $d14);

        r106 = $r64;

        $r65 = new ucar.nc2.dataset.ProjectionCT;

        specialinvoke $r65.<ucar.nc2.dataset.ProjectionCT: void <init>(java.lang.String,java.lang.String,ucar.unidata.geoloc.ProjectionImpl)>("Stereographic", "FGDC", $r64);

        r6.<ucar.nc2.dataset.conv.WRFConvention: ucar.nc2.dataset.ProjectionCT projCT> = $r65;

        goto label30;

     label17:
        $r62 = new ucar.unidata.geoloc.projection.Mercator;

        specialinvoke $r62.<ucar.unidata.geoloc.projection.Mercator: void <init>(double,double)>($d4, $d5);

        r106 = $r62;

        $r63 = new ucar.nc2.dataset.ProjectionCT;

        specialinvoke $r63.<ucar.nc2.dataset.ProjectionCT: void <init>(java.lang.String,java.lang.String,ucar.unidata.geoloc.ProjectionImpl)>("Mercator", "FGDC", $r62);

        r6.<ucar.nc2.dataset.conv.WRFConvention: ucar.nc2.dataset.ProjectionCT projCT> = $r63;

        goto label30;

     label18:
        z11 = 1;

        $r7 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label19:
        $z1 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label28;

        $r40 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r41 = (ucar.nc2.Variable) $r40;

        $r42 = virtualinvoke r41.<ucar.nc2.Variable: java.lang.String getShortName()>();

        $z3 = virtualinvoke $r42.<java.lang.String: boolean startsWith(java.lang.String)>("XLAT");

        if $z3 == 0 goto label21;

        $r57 = new ucar.nc2.Attribute;

        $r58 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lat>;

        $r59 = virtualinvoke $r58.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        specialinvoke $r57.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r59);

        virtualinvoke r41.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r57);

        $r60 = virtualinvoke r41.<ucar.nc2.Variable: int[] getShape()>();

        $i3 = virtualinvoke r41.<ucar.nc2.Variable: int getRank()>();

        if $i3 != 3 goto label20;

        $i4 = $r60[0];

        if $i4 != 1 goto label20;

        $r61 = virtualinvoke r41.<ucar.nc2.Variable: java.util.List getDimensions()>();

        interfaceinvoke $r61.<java.util.List: java.lang.Object remove(int)>(0);

        virtualinvoke r41.<ucar.nc2.Variable: void setDimensions(java.util.List)>($r61);

     label20:
        goto label27;

     label21:
        $r43 = virtualinvoke r41.<ucar.nc2.Variable: java.lang.String getShortName()>();

        $z4 = virtualinvoke $r43.<java.lang.String: boolean startsWith(java.lang.String)>("XLONG");

        if $z4 == 0 goto label23;

        $r52 = new ucar.nc2.Attribute;

        $r53 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lon>;

        $r54 = virtualinvoke $r53.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        specialinvoke $r52.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r54);

        virtualinvoke r41.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r52);

        $r55 = virtualinvoke r41.<ucar.nc2.Variable: int[] getShape()>();

        $i1 = virtualinvoke r41.<ucar.nc2.Variable: int getRank()>();

        if $i1 != 3 goto label22;

        $i2 = $r55[0];

        if $i2 != 1 goto label22;

        $r56 = virtualinvoke r41.<ucar.nc2.Variable: java.util.List getDimensions()>();

        interfaceinvoke $r56.<java.util.List: java.lang.Object remove(int)>(0);

        virtualinvoke r41.<ucar.nc2.Variable: void setDimensions(java.util.List)>($r56);

     label22:
        goto label27;

     label23:
        $r44 = virtualinvoke r41.<ucar.nc2.Variable: java.lang.String getShortName()>();

        $z5 = virtualinvoke $r44.<java.lang.String: boolean equals(java.lang.Object)>("T");

        if $z5 == 0 goto label24;

        $r51 = new ucar.nc2.Attribute;

        specialinvoke $r51.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxes", "Time XLAT XLONG z");

        virtualinvoke r41.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r51);

        goto label27;

     label24:
        $r45 = virtualinvoke r41.<ucar.nc2.Variable: java.lang.String getShortName()>();

        $z6 = virtualinvoke $r45.<java.lang.String: boolean equals(java.lang.Object)>("U");

        if $z6 == 0 goto label25;

        $r50 = new ucar.nc2.Attribute;

        specialinvoke $r50.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxes", "Time XLAT_U XLONG_U z");

        virtualinvoke r41.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r50);

        goto label27;

     label25:
        $r46 = virtualinvoke r41.<ucar.nc2.Variable: java.lang.String getShortName()>();

        $z7 = virtualinvoke $r46.<java.lang.String: boolean equals(java.lang.Object)>("V");

        if $z7 == 0 goto label26;

        $r49 = new ucar.nc2.Attribute;

        specialinvoke $r49.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxes", "Time XLAT_V XLONG_V z");

        virtualinvoke r41.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r49);

        goto label27;

     label26:
        $r47 = virtualinvoke r41.<ucar.nc2.Variable: java.lang.String getShortName()>();

        $z8 = virtualinvoke $r47.<java.lang.String: boolean equals(java.lang.Object)>("W");

        if $z8 == 0 goto label27;

        $r48 = new ucar.nc2.Attribute;

        specialinvoke $r48.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxes", "Time XLAT XLONG z_stag");

        virtualinvoke r41.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r48);

     label27:
        goto label19;

     label28:
        goto label30;

     label29:
        $r71 = r6.<ucar.nc2.dataset.conv.WRFConvention: java.util.Formatter parseInfo>;

        $r70 = newarray (java.lang.Object)[1];

        $r72 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r70[0] = $r72;

        virtualinvoke $r71.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("ERROR: unknown projection type = %s\n", $r70);

     label30:
        if r106 == null goto label31;

        $r27 = new ucar.unidata.geoloc.LatLonPointImpl;

        specialinvoke $r27.<ucar.unidata.geoloc.LatLonPointImpl: void <init>(double,double)>($d2, $d3);

        $r28 = new ucar.unidata.geoloc.ProjectionPointImpl;

        specialinvoke $r28.<ucar.unidata.geoloc.ProjectionPointImpl: void <init>()>();

        $r29 = virtualinvoke r106.<ucar.unidata.geoloc.ProjectionImpl: ucar.unidata.geoloc.ProjectionPoint latLonToProj(ucar.unidata.geoloc.LatLonPoint,ucar.unidata.geoloc.ProjectionPointImpl)>($r27, $r28);

        $d6 = interfaceinvoke $r29.<ucar.unidata.geoloc.ProjectionPoint: double getX()>();

        r6.<ucar.nc2.dataset.conv.WRFConvention: double centerX> = $d6;

        $d7 = interfaceinvoke $r29.<ucar.unidata.geoloc.ProjectionPoint: double getY()>();

        r6.<ucar.nc2.dataset.conv.WRFConvention: double centerY> = $d7;

        $z2 = r6.<ucar.nc2.dataset.conv.WRFConvention: boolean debug>;

        if $z2 == 0 goto label31;

        $r31 = <java.lang.System: java.io.PrintStream out>;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("centerX=");

        $d8 = r6.<ucar.nc2.dataset.conv.WRFConvention: double centerX>;

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d8);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r31.<java.io.PrintStream: void println(java.lang.String)>($r34);

        $r36 = <java.lang.System: java.io.PrintStream out>;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("centerY=");

        $d9 = r6.<ucar.nc2.dataset.conv.WRFConvention: double centerY>;

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d9);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r36.<java.io.PrintStream: void println(java.lang.String)>($r39);

     label31:
        if z11 != 0 goto label32;

        $r19 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension findDimension(java.lang.String)>("west_east");

        $r20 = specialinvoke r6.<ucar.nc2.dataset.conv.WRFConvention: ucar.nc2.dataset.CoordinateAxis makeXCoordAxis(ucar.nc2.dataset.NetcdfDataset,java.lang.String,ucar.nc2.Dimension)>(r0, "x", $r19);

        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.dataset.CoordinateAxis addCoordinateAxis(ucar.nc2.dataset.VariableDS)>($r20);

        $r21 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension findDimension(java.lang.String)>("west_east_stag");

        $r22 = specialinvoke r6.<ucar.nc2.dataset.conv.WRFConvention: ucar.nc2.dataset.CoordinateAxis makeXCoordAxis(ucar.nc2.dataset.NetcdfDataset,java.lang.String,ucar.nc2.Dimension)>(r0, "x_stag", $r21);

        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.dataset.CoordinateAxis addCoordinateAxis(ucar.nc2.dataset.VariableDS)>($r22);

        $r23 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension findDimension(java.lang.String)>("south_north");

        $r24 = specialinvoke r6.<ucar.nc2.dataset.conv.WRFConvention: ucar.nc2.dataset.CoordinateAxis makeYCoordAxis(ucar.nc2.dataset.NetcdfDataset,java.lang.String,ucar.nc2.Dimension)>(r0, "y", $r23);

        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.dataset.CoordinateAxis addCoordinateAxis(ucar.nc2.dataset.VariableDS)>($r24);

        $r25 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension findDimension(java.lang.String)>("south_north_stag");

        $r26 = specialinvoke r6.<ucar.nc2.dataset.conv.WRFConvention: ucar.nc2.dataset.CoordinateAxis makeYCoordAxis(ucar.nc2.dataset.NetcdfDataset,java.lang.String,ucar.nc2.Dimension)>(r0, "y_stag", $r25);

        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.dataset.CoordinateAxis addCoordinateAxis(ucar.nc2.dataset.VariableDS)>($r26);

     label32:
        $r8 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension findDimension(java.lang.String)>("bottom_top");

        $r9 = specialinvoke r6.<ucar.nc2.dataset.conv.WRFConvention: ucar.nc2.dataset.CoordinateAxis makeZCoordAxis(ucar.nc2.dataset.NetcdfDataset,java.lang.String,ucar.nc2.Dimension)>(r0, "z", $r8);

        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.dataset.CoordinateAxis addCoordinateAxis(ucar.nc2.dataset.VariableDS)>($r9);

        $r10 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension findDimension(java.lang.String)>("bottom_top_stag");

        $r11 = specialinvoke r6.<ucar.nc2.dataset.conv.WRFConvention: ucar.nc2.dataset.CoordinateAxis makeZCoordAxis(ucar.nc2.dataset.NetcdfDataset,java.lang.String,ucar.nc2.Dimension)>(r0, "z_stag", $r10);

        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.dataset.CoordinateAxis addCoordinateAxis(ucar.nc2.dataset.VariableDS)>($r11);

        $r12 = r6.<ucar.nc2.dataset.conv.WRFConvention: ucar.nc2.dataset.ProjectionCT projCT>;

        if $r12 == null goto label33;

        $r16 = r6.<ucar.nc2.dataset.conv.WRFConvention: ucar.nc2.dataset.ProjectionCT projCT>;

        $r17 = virtualinvoke r6.<ucar.nc2.dataset.conv.WRFConvention: ucar.nc2.dataset.VariableDS makeCoordinateTransformVariable(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.dataset.CoordinateTransform)>(r0, $r16);

        $r18 = new ucar.nc2.Attribute;

        specialinvoke $r18.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisTypes", "GeoX GeoY");

        virtualinvoke $r17.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r18);

        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(null, $r17);

     label33:
        $r107 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("Time");

        if $r107 != null goto label35;

        $r13 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension findDimension(java.lang.String)>("Time");

        $r14 = specialinvoke r6.<ucar.nc2.dataset.conv.WRFConvention: ucar.nc2.dataset.CoordinateAxis makeTimeCoordAxis(ucar.nc2.dataset.NetcdfDataset,java.lang.String,ucar.nc2.Dimension)>(r0, "Time", $r13);

        r108 = $r14;

        if $r14 != null goto label34;

        $r15 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension findDimension(java.lang.String)>("Times");

        r108 = specialinvoke r6.<ucar.nc2.dataset.conv.WRFConvention: ucar.nc2.dataset.CoordinateAxis makeTimeCoordAxis(ucar.nc2.dataset.NetcdfDataset,java.lang.String,ucar.nc2.Dimension)>(r0, "Time", $r15);

     label34:
        if r108 == null goto label35;

        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.dataset.CoordinateAxis addCoordinateAxis(ucar.nc2.dataset.VariableDS)>(r108);

     label35:
        $r109 = specialinvoke r6.<ucar.nc2.dataset.conv.WRFConvention: ucar.nc2.dataset.VariableDS makeSoilDepthCoordAxis(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r0, "ZS");

        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.dataset.CoordinateAxis addCoordinateAxis(ucar.nc2.dataset.VariableDS)>($r109);

        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: void finish()>();

        return;
    }

    private ucar.ma2.Array convertToDegrees(ucar.nc2.Variable)
    {
        ucar.nc2.dataset.conv.WRFConvention r14;
        ucar.nc2.Variable r0;
        java.lang.String $r8, $r11, $r13;
        boolean $z0;
        double $d0, $d1;
        ucar.ma2.IndexIterator $r3;
        java.io.IOException $r4;
        java.lang.RuntimeException $r5;
        ucar.ma2.Array $r1, $r2;
        java.lang.StringBuilder $r6, $r7, $r9, $r10, $r12;

        r14 := @this: ucar.nc2.dataset.conv.WRFConvention;

        r0 := @parameter0: ucar.nc2.Variable;

     label1:
        $r1 = virtualinvoke r0.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        $r2 = virtualinvoke $r1.<ucar.ma2.Array: ucar.ma2.Array reduce()>();

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("data read failed on ");

        $r8 = virtualinvoke r0.<ucar.nc2.Variable: java.lang.String getName()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r11 = virtualinvoke $r4.<java.io.IOException: java.lang.String getMessage()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r13);

        throw $r5;

     label4:
        $r3 = virtualinvoke $r2.<ucar.ma2.Array: ucar.ma2.IndexIterator getIndexIterator()>();

     label5:
        $z0 = interfaceinvoke $r3.<ucar.ma2.IndexIterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $d0 = interfaceinvoke $r3.<ucar.ma2.IndexIterator: double getDoubleNext()>();

        $d1 = staticinvoke <java.lang.Math: double toDegrees(double)>($d0);

        interfaceinvoke $r3.<ucar.ma2.IndexIterator: void setDoubleCurrent(double)>($d1);

        goto label5;

     label6:
        return $r2;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private java.lang.String normalize(java.lang.String)
    {
        ucar.nc2.dataset.conv.WRFConvention r2;
        java.lang.String $r0, $r1, r3, r4;
        boolean $z0, $z1, $z2, $z3;

        r2 := @this: ucar.nc2.dataset.conv.WRFConvention;

        r3 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("fraction");

        if $z0 == 0 goto label1;

        r4 = "";

        goto label5;

     label1:
        $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("dimensionless");

        if $z1 == 0 goto label2;

        r4 = "";

        goto label5;

     label2:
        $z2 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("NA");

        if $z2 == 0 goto label3;

        r4 = "";

        goto label5;

     label3:
        $z3 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("-");

        if $z3 == 0 goto label4;

        r4 = "";

        goto label5;

     label4:
        $r0 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String substitute(java.lang.String,java.lang.String,java.lang.String)>(r3, "**", "^");

        $r1 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String remove(java.lang.String,int)>($r0, 125);

        r4 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String remove(java.lang.String,int)>($r1, 123);

     label5:
        return r4;
    }

    protected void makeCoordinateTransforms(ucar.nc2.dataset.NetcdfDataset)
    {
        ucar.nc2.dataset.conv.WRFConvention r0;
        ucar.nc2.dataset.ProjectionCT $r1, $r3, $r6;
        ucar.nc2.dataset.CoordSysBuilder$VarProcess $r5;
        java.lang.String $r4;
        ucar.nc2.dataset.NetcdfDataset r2;

        r0 := @this: ucar.nc2.dataset.conv.WRFConvention;

        r2 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        $r1 = r0.<ucar.nc2.dataset.conv.WRFConvention: ucar.nc2.dataset.ProjectionCT projCT>;

        if $r1 == null goto label1;

        $r3 = r0.<ucar.nc2.dataset.conv.WRFConvention: ucar.nc2.dataset.ProjectionCT projCT>;

        $r4 = virtualinvoke $r3.<ucar.nc2.dataset.ProjectionCT: java.lang.String getName()>();

        $r5 = virtualinvoke r0.<ucar.nc2.dataset.conv.WRFConvention: ucar.nc2.dataset.CoordSysBuilder$VarProcess findVarProcess(java.lang.String)>($r4);

        $r5.<ucar.nc2.dataset.CoordSysBuilder$VarProcess: boolean isCoordinateTransform> = 1;

        $r6 = r0.<ucar.nc2.dataset.conv.WRFConvention: ucar.nc2.dataset.ProjectionCT projCT>;

        $r5.<ucar.nc2.dataset.CoordSysBuilder$VarProcess: ucar.nc2.dataset.CoordinateTransform ct> = $r6;

     label1:
        specialinvoke r0.<ucar.nc2.dataset.CoordSysBuilder: void makeCoordinateTransforms(ucar.nc2.dataset.NetcdfDataset)>(r2);

        return;
    }

    protected ucar.nc2.constants.AxisType getAxisType(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.dataset.VariableEnhanced)
    {
        ucar.nc2.dataset.conv.WRFConvention r13;
        ucar.nc2.constants.AxisType $r3, $r4, $r5, $r6, $r8, $r9, $r10, $r11, $r12;
        ucar.nc2.Variable r1;
        java.lang.String $r2, $r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        ucar.nc2.dataset.VariableEnhanced r0;
        ucar.nc2.dataset.NetcdfDataset r14;

        r13 := @this: ucar.nc2.dataset.conv.WRFConvention;

        r14 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r0 := @parameter1: ucar.nc2.dataset.VariableEnhanced;

        r1 = (ucar.nc2.Variable) r0;

        $r2 = virtualinvoke r1.<ucar.nc2.Variable: java.lang.String getName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("x");

        if $z0 != 0 goto label01;

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("x_stag");

        if $z1 == 0 goto label02;

     label01:
        $r3 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType GeoX>;

        return $r3;

     label02:
        $z2 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("lon");

        if $z2 == 0 goto label03;

        $r12 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lon>;

        return $r12;

     label03:
        $z3 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("y");

        if $z3 != 0 goto label04;

        $z4 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("y_stag");

        if $z4 == 0 goto label05;

     label04:
        $r4 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType GeoY>;

        return $r4;

     label05:
        $z5 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("lat");

        if $z5 == 0 goto label06;

        $r11 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lat>;

        return $r11;

     label06:
        $z6 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("z");

        if $z6 != 0 goto label07;

        $z7 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("z_stag");

        if $z7 == 0 goto label08;

     label07:
        $r5 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType GeoZ>;

        return $r5;

     label08:
        $z8 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Z");

        if $z8 == 0 goto label09;

        $r10 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Height>;

        return $r10;

     label09:
        $z9 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("time");

        if $z9 != 0 goto label10;

        $z10 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("times");

        if $z10 == 0 goto label11;

     label10:
        $r6 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Time>;

        return $r6;

     label11:
        $r7 = interfaceinvoke r0.<ucar.nc2.dataset.VariableEnhanced: java.lang.String getUnitsString()>();

        if $r7 == null goto label13;

        $z11 = staticinvoke <ucar.nc2.units.SimpleUnit: boolean isCompatible(java.lang.String,java.lang.String)>("millibar", $r7);

        if $z11 == 0 goto label12;

        $r9 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Pressure>;

        return $r9;

     label12:
        $z12 = staticinvoke <ucar.nc2.units.SimpleUnit: boolean isCompatible(java.lang.String,java.lang.String)>("m", $r7);

        if $z12 == 0 goto label13;

        $r8 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Height>;

        return $r8;

     label13:
        return null;
    }

    public java.lang.String getZisPositive(ucar.nc2.dataset.CoordinateAxis)
    {
        ucar.nc2.dataset.CoordinateAxis r1;
        ucar.nc2.dataset.conv.WRFConvention r0;

        r0 := @this: ucar.nc2.dataset.conv.WRFConvention;

        r1 := @parameter0: ucar.nc2.dataset.CoordinateAxis;

        return "down";
    }

    private ucar.nc2.dataset.CoordinateAxis makeLonCoordAxis(ucar.nc2.dataset.NetcdfDataset, java.lang.String, ucar.nc2.Dimension)
    {
        ucar.nc2.dataset.conv.WRFConvention r1;
        ucar.nc2.dataset.CoordinateAxis1D $r3;
        int $i0, $i1;
        java.lang.String r4, $r6, $r8, $r10;
        double $d0, d1, $d2, $d3, $d4, $d5, d6;
        boolean $z0;
        ucar.ma2.DataType $r5;
        ucar.nc2.Attribute $r7, $r9;
        ucar.nc2.Dimension r0;
        ucar.nc2.dataset.NetcdfDataset r2;

        r1 := @this: ucar.nc2.dataset.conv.WRFConvention;

        r2 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r4 := @parameter1: java.lang.String;

        r0 := @parameter2: ucar.nc2.Dimension;

        if r0 != null goto label1;

        return null;

     label1:
        $d0 = specialinvoke r1.<ucar.nc2.dataset.conv.WRFConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r2, "DX");

        d1 = 4.0 * $d0;

        $i0 = virtualinvoke r0.<ucar.nc2.Dimension: int getLength()>();

        $d5 = r1.<ucar.nc2.dataset.conv.WRFConvention: double centerX>;

        $i1 = $i0 - 1;

        $d2 = (double) $i1;

        $d3 = d1 * $d2;

        $d4 = $d3 / 2.0;

        d6 = $d5 - $d4;

        $r3 = new ucar.nc2.dataset.CoordinateAxis1D;

        $r5 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r6 = virtualinvoke r0.<ucar.nc2.Dimension: java.lang.String getName()>();

        specialinvoke $r3.<ucar.nc2.dataset.CoordinateAxis1D: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,java.lang.String,ucar.ma2.DataType,java.lang.String,java.lang.String,java.lang.String)>(r2, null, r4, $r5, $r6, "degrees_east", "synthesized longitude coordinate");

        virtualinvoke r2.<ucar.nc2.dataset.NetcdfDataset: void setValues(ucar.nc2.Variable,int,double,double)>($r3, $i0, d6, d1);

        $r7 = new ucar.nc2.Attribute;

        specialinvoke $r7.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", "Lon");

        virtualinvoke $r3.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r7);

        $r8 = virtualinvoke r0.<ucar.nc2.Dimension: java.lang.String getName()>();

        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 != 0 goto label2;

        $r9 = new ucar.nc2.Attribute;

        $r10 = virtualinvoke r0.<ucar.nc2.Dimension: java.lang.String getName()>();

        specialinvoke $r9.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAliasForDimension", $r10);

        virtualinvoke $r3.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r9);

     label2:
        return $r3;
    }

    private ucar.nc2.dataset.CoordinateAxis makeLatCoordAxis(ucar.nc2.dataset.NetcdfDataset, java.lang.String, ucar.nc2.Dimension)
    {
        ucar.nc2.dataset.conv.WRFConvention r1;
        ucar.nc2.dataset.CoordinateAxis1D $r3;
        int $i0, $i1;
        java.lang.String r4, $r6, $r8, $r10;
        double $d0, $d1, $d2, $d3, $d4, d5;
        boolean $z0;
        ucar.ma2.DataType $r5;
        ucar.nc2.Attribute $r7, $r9;
        ucar.nc2.Dimension r0;
        ucar.nc2.dataset.NetcdfDataset r2;

        r1 := @this: ucar.nc2.dataset.conv.WRFConvention;

        r2 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r4 := @parameter1: java.lang.String;

        r0 := @parameter2: ucar.nc2.Dimension;

        if r0 != null goto label1;

        return null;

     label1:
        $d0 = specialinvoke r1.<ucar.nc2.dataset.conv.WRFConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r2, "DY");

        $i0 = virtualinvoke r0.<ucar.nc2.Dimension: int getLength()>();

        $d4 = r1.<ucar.nc2.dataset.conv.WRFConvention: double centerY>;

        $i1 = $i0 - 1;

        $d1 = (double) $i1;

        $d2 = $d0 * $d1;

        $d3 = $d2 / 2.0;

        d5 = $d4 - $d3;

        $r3 = new ucar.nc2.dataset.CoordinateAxis1D;

        $r5 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r6 = virtualinvoke r0.<ucar.nc2.Dimension: java.lang.String getName()>();

        specialinvoke $r3.<ucar.nc2.dataset.CoordinateAxis1D: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,java.lang.String,ucar.ma2.DataType,java.lang.String,java.lang.String,java.lang.String)>(r2, null, r4, $r5, $r6, "degrees_north", "synthesized latitude coordinate");

        virtualinvoke r2.<ucar.nc2.dataset.NetcdfDataset: void setValues(ucar.nc2.Variable,int,double,double)>($r3, $i0, d5, $d0);

        $r7 = new ucar.nc2.Attribute;

        specialinvoke $r7.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", "Lat");

        virtualinvoke $r3.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r7);

        $r8 = virtualinvoke r0.<ucar.nc2.Dimension: java.lang.String getName()>();

        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 != 0 goto label2;

        $r9 = new ucar.nc2.Attribute;

        $r10 = virtualinvoke r0.<ucar.nc2.Dimension: java.lang.String getName()>();

        specialinvoke $r9.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAliasForDimension", $r10);

        virtualinvoke $r3.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r9);

     label2:
        return $r3;
    }

    private ucar.nc2.dataset.CoordinateAxis makeXCoordAxis(ucar.nc2.dataset.NetcdfDataset, java.lang.String, ucar.nc2.Dimension)
    {
        ucar.nc2.dataset.conv.WRFConvention r1;
        ucar.nc2.dataset.CoordinateAxis1D $r3;
        int $i0, $i1;
        java.lang.String r4, $r6, $r8, $r10;
        double $d0, d1, $d2, $d3, $d4, $d5, d6;
        boolean $z0;
        ucar.ma2.DataType $r5;
        ucar.nc2.Attribute $r7, $r9;
        ucar.nc2.Dimension r0;
        ucar.nc2.dataset.NetcdfDataset r2;

        r1 := @this: ucar.nc2.dataset.conv.WRFConvention;

        r2 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r4 := @parameter1: java.lang.String;

        r0 := @parameter2: ucar.nc2.Dimension;

        if r0 != null goto label1;

        return null;

     label1:
        $d0 = specialinvoke r1.<ucar.nc2.dataset.conv.WRFConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r2, "DX");

        d1 = $d0 / 1000.0;

        $i0 = virtualinvoke r0.<ucar.nc2.Dimension: int getLength()>();

        $d5 = r1.<ucar.nc2.dataset.conv.WRFConvention: double centerX>;

        $i1 = $i0 - 1;

        $d2 = (double) $i1;

        $d3 = d1 * $d2;

        $d4 = $d3 / 2.0;

        d6 = $d5 - $d4;

        $r3 = new ucar.nc2.dataset.CoordinateAxis1D;

        $r5 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r6 = virtualinvoke r0.<ucar.nc2.Dimension: java.lang.String getName()>();

        specialinvoke $r3.<ucar.nc2.dataset.CoordinateAxis1D: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,java.lang.String,ucar.ma2.DataType,java.lang.String,java.lang.String,java.lang.String)>(r2, null, r4, $r5, $r6, "km", "synthesized GeoX coordinate from DX attribute");

        virtualinvoke r2.<ucar.nc2.dataset.NetcdfDataset: void setValues(ucar.nc2.Variable,int,double,double)>($r3, $i0, d6, d1);

        $r7 = new ucar.nc2.Attribute;

        specialinvoke $r7.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", "GeoX");

        virtualinvoke $r3.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r7);

        $r8 = virtualinvoke r0.<ucar.nc2.Dimension: java.lang.String getName()>();

        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 != 0 goto label2;

        $r9 = new ucar.nc2.Attribute;

        $r10 = virtualinvoke r0.<ucar.nc2.Dimension: java.lang.String getName()>();

        specialinvoke $r9.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAliasForDimension", $r10);

        virtualinvoke $r3.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r9);

     label2:
        return $r3;
    }

    private ucar.nc2.dataset.CoordinateAxis makeYCoordAxis(ucar.nc2.dataset.NetcdfDataset, java.lang.String, ucar.nc2.Dimension)
    {
        ucar.nc2.dataset.conv.WRFConvention r1;
        ucar.nc2.dataset.CoordinateAxis1D $r3;
        int $i0, $i1;
        java.lang.String r4, $r6, $r8, $r10;
        double $d0, d1, $d2, $d3, $d4, $d5, d6;
        boolean $z0;
        ucar.ma2.DataType $r5;
        ucar.nc2.Attribute $r7, $r9;
        ucar.nc2.Dimension r0;
        ucar.nc2.dataset.NetcdfDataset r2;

        r1 := @this: ucar.nc2.dataset.conv.WRFConvention;

        r2 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r4 := @parameter1: java.lang.String;

        r0 := @parameter2: ucar.nc2.Dimension;

        if r0 != null goto label1;

        return null;

     label1:
        $d0 = specialinvoke r1.<ucar.nc2.dataset.conv.WRFConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r2, "DY");

        d1 = $d0 / 1000.0;

        $i0 = virtualinvoke r0.<ucar.nc2.Dimension: int getLength()>();

        $d5 = r1.<ucar.nc2.dataset.conv.WRFConvention: double centerY>;

        $i1 = $i0 - 1;

        $d2 = (double) $i1;

        $d3 = d1 * $d2;

        $d4 = $d3 / 2.0;

        d6 = $d5 - $d4;

        $r3 = new ucar.nc2.dataset.CoordinateAxis1D;

        $r5 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r6 = virtualinvoke r0.<ucar.nc2.Dimension: java.lang.String getName()>();

        specialinvoke $r3.<ucar.nc2.dataset.CoordinateAxis1D: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,java.lang.String,ucar.ma2.DataType,java.lang.String,java.lang.String,java.lang.String)>(r2, null, r4, $r5, $r6, "km", "synthesized GeoY coordinate from DY attribute");

        virtualinvoke r2.<ucar.nc2.dataset.NetcdfDataset: void setValues(ucar.nc2.Variable,int,double,double)>($r3, $i0, d6, d1);

        $r7 = new ucar.nc2.Attribute;

        specialinvoke $r7.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", "GeoY");

        virtualinvoke $r3.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r7);

        $r8 = virtualinvoke r0.<ucar.nc2.Dimension: java.lang.String getName()>();

        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 != 0 goto label2;

        $r9 = new ucar.nc2.Attribute;

        $r10 = virtualinvoke r0.<ucar.nc2.Dimension: java.lang.String getName()>();

        specialinvoke $r9.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAliasForDimension", $r10);

        virtualinvoke $r3.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r9);

     label2:
        return $r3;
    }

    private ucar.nc2.dataset.CoordinateAxis makeZCoordAxis(ucar.nc2.dataset.NetcdfDataset, java.lang.String, ucar.nc2.Dimension)
    {
        ucar.nc2.dataset.CoordinateAxis $r20;
        ucar.nc2.dataset.conv.WRFConvention r19;
        ucar.nc2.dataset.CoordinateAxis1D $r3;
        int[] $r14, $r15;
        boolean $z0, $z1, $z2;
        ucar.ma2.DataType $r5;
        java.lang.Exception $r23;
        ucar.nc2.Attribute $r11, $r21;
        ucar.ma2.ArrayDouble$D1 $r17;
        java.lang.StringBuilder $r7, $r8, $r9;
        int $i0, $i1, i2;
        ucar.nc2.Variable $r13;
        java.lang.String r1, r2, $r6, $r10, $r12, $r22, $r25, $r26;
        double $d0;
        ucar.ma2.IndexIterator $r18;
        ucar.ma2.Array $r16;
        ucar.nc2.Dimension r0;
        ucar.nc2.dataset.NetcdfDataset r4;

        r19 := @this: ucar.nc2.dataset.conv.WRFConvention;

        r4 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r1 := @parameter1: java.lang.String;

        r0 := @parameter2: ucar.nc2.Dimension;

        if r0 != null goto label01;

        return null;

     label01:
        $z0 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>("stag");

        if $z0 == 0 goto label02;

        $r26 = "ZNW";

        $r25 = "ZNW";

        goto label03;

     label02:
        $r26 = "ZNU";

        $r25 = "ZNU";

     label03:
        r2 = $r26;

        $r3 = new ucar.nc2.dataset.CoordinateAxis1D;

        $r5 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r6 = virtualinvoke r0.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("eta values from variable ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<ucar.nc2.dataset.CoordinateAxis1D: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,java.lang.String,ucar.ma2.DataType,java.lang.String,java.lang.String,java.lang.String)>(r4, null, r1, $r5, $r6, "", $r10);

        $r11 = new ucar.nc2.Attribute;

        specialinvoke $r11.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", "GeoZ");

        virtualinvoke $r3.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r11);

        $r12 = virtualinvoke r0.<ucar.nc2.Dimension: java.lang.String getName()>();

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z1 != 0 goto label04;

        $r21 = new ucar.nc2.Attribute;

        $r22 = virtualinvoke r0.<ucar.nc2.Dimension: java.lang.String getName()>();

        specialinvoke $r21.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAliasForDimension", $r22);

        virtualinvoke $r3.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r21);

     label04:
        $r13 = virtualinvoke r4.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>(r2);

        if $r13 != null goto label05;

        $r20 = specialinvoke r19.<ucar.nc2.dataset.conv.WRFConvention: ucar.nc2.dataset.CoordinateAxis makeFakeCoordAxis(ucar.nc2.dataset.NetcdfDataset,java.lang.String,ucar.nc2.Dimension)>(r4, r1, r0);

        return $r20;

     label05:
        $i0 = virtualinvoke $r13.<ucar.nc2.Variable: int getShape(int)>(1);

        $r14 = newarray (int)[2];

        $r14[0] = 0;

        $r14[1] = 0;

        $r15 = newarray (int)[2];

        $r15[0] = 1;

        $r15[1] = $i0;

     label06:
        $r16 = virtualinvoke $r13.<ucar.nc2.Variable: ucar.ma2.Array read(int[],int[])>($r14, $r15);

        $r17 = new ucar.ma2.ArrayDouble$D1;

        specialinvoke $r17.<ucar.ma2.ArrayDouble$D1: void <init>(int)>($i0);

        $r18 = virtualinvoke $r16.<ucar.ma2.Array: ucar.ma2.IndexIterator getIndexIterator()>();

        i2 = 0;

     label07:
        $z2 = interfaceinvoke $r18.<ucar.ma2.IndexIterator: boolean hasNext()>();

        if $z2 == 0 goto label08;

        $d0 = interfaceinvoke $r18.<ucar.ma2.IndexIterator: double getDoubleNext()>();

        $i1 = i2;

        i2 = i2 + 1;

        virtualinvoke $r17.<ucar.ma2.ArrayDouble$D1: void set(int,double)>($i1, $d0);

        goto label07;

     label08:
        virtualinvoke $r3.<ucar.nc2.dataset.CoordinateAxis: void setCachedData(ucar.ma2.Array,boolean)>($r17, 1);

     label09:
        goto label11;

     label10:
        $r23 := @caughtexception;

        virtualinvoke $r23.<java.lang.Exception: void printStackTrace()>();

     label11:
        return $r3;

        catch java.lang.Exception from label06 to label09 with label10;
    }

    private ucar.nc2.dataset.CoordinateAxis makeFakeCoordAxis(ucar.nc2.dataset.NetcdfDataset, java.lang.String, ucar.nc2.Dimension)
    {
        ucar.ma2.DataType $r4;
        ucar.nc2.dataset.conv.WRFConvention r10;
        ucar.nc2.Attribute $r6, $r8;
        ucar.nc2.dataset.CoordinateAxis1D $r1;
        int $i0;
        ucar.nc2.Dimension r0;
        java.lang.String r3, $r5, $r7, $r9;
        ucar.nc2.dataset.NetcdfDataset r2;
        boolean $z0;

        r10 := @this: ucar.nc2.dataset.conv.WRFConvention;

        r2 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r3 := @parameter1: java.lang.String;

        r0 := @parameter2: ucar.nc2.Dimension;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = new ucar.nc2.dataset.CoordinateAxis1D;

        $r4 = <ucar.ma2.DataType: ucar.ma2.DataType SHORT>;

        $r5 = virtualinvoke r0.<ucar.nc2.Dimension: java.lang.String getName()>();

        specialinvoke $r1.<ucar.nc2.dataset.CoordinateAxis1D: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,java.lang.String,ucar.ma2.DataType,java.lang.String,java.lang.String,java.lang.String)>(r2, null, r3, $r4, $r5, "", "synthesized coordinate: only an index");

        $r6 = new ucar.nc2.Attribute;

        specialinvoke $r6.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", "GeoZ");

        virtualinvoke $r1.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r6);

        $r7 = virtualinvoke r0.<ucar.nc2.Dimension: java.lang.String getName()>();

        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 != 0 goto label2;

        $r8 = new ucar.nc2.Attribute;

        $r9 = virtualinvoke r0.<ucar.nc2.Dimension: java.lang.String getName()>();

        specialinvoke $r8.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAliasForDimension", $r9);

        virtualinvoke $r1.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r8);

     label2:
        $i0 = virtualinvoke r0.<ucar.nc2.Dimension: int getLength()>();

        virtualinvoke r2.<ucar.nc2.dataset.NetcdfDataset: void setValues(ucar.nc2.Variable,int,double,double)>($r1, $i0, 0.0, 1.0);

        return $r1;
    }

    private ucar.nc2.dataset.CoordinateAxis makeTimeCoordAxis(ucar.nc2.dataset.NetcdfDataset, java.lang.String, ucar.nc2.Dimension)
    {
        java.util.Date $r16, $r21, $r36;
        java.util.Formatter $r25, $r28, $r32;
        ucar.nc2.dataset.conv.WRFConvention r23;
        ucar.nc2.dataset.CoordinateAxis1D $r6;
        java.text.ParseException $r22, $r26, $r30;
        boolean $z0, $z1, $z2, $z3;
        ucar.ma2.DataType $r8;
        ucar.ma2.ArrayDouble$D1 $r4;
        ucar.nc2.Attribute $r10, $r12;
        java.lang.Object[] $r24, $r27, $r31;
        java.text.SimpleDateFormat $r15, $r20, $r35;
        long $l2, $l4, $l5;
        ucar.ma2.ArrayChar $r17;
        int $i0, $i1, $i3, i6;
        ucar.nc2.Variable $r2;
        java.lang.String r7, $r9, $r11, $r13, $r19, $r29, $r33, $r34, r38;
        ucar.ma2.ArrayChar$StringIterator $r18;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        ucar.ma2.IndexIterator $r5;
        java.io.IOException $r37;
        ucar.ma2.Array $r3;
        ucar.nc2.Dimension r0;
        java.lang.Object $r14;
        ucar.nc2.dataset.NetcdfDataset r1;

        r23 := @this: ucar.nc2.dataset.conv.WRFConvention;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r7 := @parameter1: java.lang.String;

        r0 := @parameter2: ucar.nc2.Dimension;

        if r0 != null goto label01;

        return null;

     label01:
        $i0 = virtualinvoke r0.<ucar.nc2.Dimension: int getLength()>();

        $r2 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("Times");

        if $r2 != null goto label02;

        return null;

     label02:
        $r3 = virtualinvoke $r2.<ucar.nc2.Variable: ucar.ma2.Array read()>();

     label03:
        goto label05;

     label04:
        $r37 := @caughtexception;

        return null;

     label05:
        $r4 = new ucar.ma2.ArrayDouble$D1;

        specialinvoke $r4.<ucar.ma2.ArrayDouble$D1: void <init>(int)>($i0);

        i6 = 0;

        $z0 = $r3 instanceof ucar.ma2.ArrayChar;

        if $z0 == 0 goto label15;

        $r17 = (ucar.ma2.ArrayChar) $r3;

        $r18 = virtualinvoke $r17.<ucar.ma2.ArrayChar: ucar.ma2.ArrayChar$StringIterator getStringIterator()>();

     label06:
        $z3 = virtualinvoke $r18.<ucar.ma2.ArrayChar$StringIterator: boolean hasNext()>();

        if $z3 == 0 goto label14;

        $r19 = virtualinvoke $r18.<ucar.ma2.ArrayChar$StringIterator: java.lang.String next()>();

     label07:
        $r20 = <ucar.nc2.dataset.conv.WRFConvention: java.text.SimpleDateFormat dateFormat>;

        $r21 = virtualinvoke $r20.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String)>($r19);

        $i3 = i6;

        i6 = i6 + 1;

        $l4 = virtualinvoke $r21.<java.util.Date: long getTime()>();

        $d2 = (double) $l4;

        $d3 = $d2 / 1000.0;

        virtualinvoke $r4.<ucar.ma2.ArrayDouble$D1: void set(int,double)>($i3, $d3);

     label08:
        goto label13;

     label09:
        $r30 := @caughtexception;

        $r32 = r23.<ucar.nc2.dataset.conv.WRFConvention: java.util.Formatter parseInfo>;

        $r31 = newarray (java.lang.Object)[2];

        $r31[0] = $r19;

        $r33 = virtualinvoke $r30.<java.text.ParseException: java.lang.String getMessage()>();

        $r31[1] = $r33;

        virtualinvoke $r32.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("ERROR: cant parse Time string = <%s> err= %s\n", $r31);

        $r34 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "START_DATE", null);

        if $i0 != 1 goto label13;

        if null == $r34 goto label13;

     label10:
        $r35 = <ucar.nc2.dataset.conv.WRFConvention: java.text.SimpleDateFormat dateFormat>;

        $r36 = virtualinvoke $r35.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String)>($r34);

        $l5 = virtualinvoke $r36.<java.util.Date: long getTime()>();

        $d4 = (double) $l5;

        $d5 = $d4 / 1000.0;

        virtualinvoke $r4.<ucar.ma2.ArrayDouble$D1: void set(int,double)>(0, $d5);

     label11:
        goto label13;

     label12:
        $r26 := @caughtexception;

        $r28 = r23.<ucar.nc2.dataset.conv.WRFConvention: java.util.Formatter parseInfo>;

        $r27 = newarray (java.lang.Object)[2];

        $r27[0] = $r34;

        $r29 = virtualinvoke $r26.<java.text.ParseException: java.lang.String getMessage()>();

        $r27[1] = $r29;

        virtualinvoke $r28.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("ERROR: cant parse global attribute START_DATE = <%s> err=%s\n", $r27);

     label13:
        goto label06;

     label14:
        goto label21;

     label15:
        $r5 = virtualinvoke $r3.<ucar.ma2.Array: ucar.ma2.IndexIterator getIndexIterator()>();

     label16:
        $z1 = interfaceinvoke $r5.<ucar.ma2.IndexIterator: boolean hasNext()>();

        if $z1 == 0 goto label21;

        $r14 = interfaceinvoke $r5.<ucar.ma2.IndexIterator: java.lang.Object next()>();

        r38 = (java.lang.String) $r14;

     label17:
        $r15 = <ucar.nc2.dataset.conv.WRFConvention: java.text.SimpleDateFormat dateFormat>;

        $r16 = virtualinvoke $r15.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String)>(r38);

        $i1 = i6;

        i6 = i6 + 1;

        $l2 = virtualinvoke $r16.<java.util.Date: long getTime()>();

        $d0 = (double) $l2;

        $d1 = $d0 / 1000.0;

        virtualinvoke $r4.<ucar.ma2.ArrayDouble$D1: void set(int,double)>($i1, $d1);

     label18:
        goto label20;

     label19:
        $r22 := @caughtexception;

        $r25 = r23.<ucar.nc2.dataset.conv.WRFConvention: java.util.Formatter parseInfo>;

        $r24 = newarray (java.lang.Object)[1];

        $r24[0] = r38;

        virtualinvoke $r25.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("ERROR: cant parse Time string = %s\n", $r24);

     label20:
        goto label16;

     label21:
        $r6 = new ucar.nc2.dataset.CoordinateAxis1D;

        $r8 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r9 = virtualinvoke r0.<ucar.nc2.Dimension: java.lang.String getName()>();

        specialinvoke $r6.<ucar.nc2.dataset.CoordinateAxis1D: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,java.lang.String,ucar.ma2.DataType,java.lang.String,java.lang.String,java.lang.String)>(r1, null, r7, $r8, $r9, "secs since 1970-01-01 00:00:00", "synthesized time coordinate from Times(time)");

        $r10 = new ucar.nc2.Attribute;

        specialinvoke $r10.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", "Time");

        virtualinvoke $r6.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r10);

        $r11 = virtualinvoke r0.<ucar.nc2.Dimension: java.lang.String getName()>();

        $z2 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z2 != 0 goto label22;

        $r12 = new ucar.nc2.Attribute;

        $r13 = virtualinvoke r0.<ucar.nc2.Dimension: java.lang.String getName()>();

        specialinvoke $r12.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAliasForDimension", $r13);

        virtualinvoke $r6.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r12);

     label22:
        virtualinvoke $r6.<ucar.nc2.dataset.CoordinateAxis: void setCachedData(ucar.ma2.Array,boolean)>($r4, 1);

        return $r6;

        catch java.io.IOException from label02 to label03 with label04;
        catch java.text.ParseException from label07 to label08 with label09;
        catch java.text.ParseException from label10 to label11 with label12;
        catch java.text.ParseException from label17 to label18 with label19;
    }

    private ucar.nc2.dataset.VariableDS makeSoilDepthCoordAxis(ucar.nc2.dataset.NetcdfDataset, java.lang.String)
    {
        ucar.nc2.dataset.conv.WRFConvention r28;
        ucar.nc2.dataset.CoordinateAxis1D $r6;
        int[] $r13, $r14;
        boolean $z0, $z1, $z2, $z3, $z4;
        ucar.nc2.dataset.VariableDS $r22;
        ucar.ma2.DataType $r7;
        java.lang.Exception $r27;
        java.util.List $r3;
        ucar.nc2.Attribute $r9, $r10, $r18, $r20, $r23;
        ucar.ma2.ArrayDouble$D1 $r16;
        int $i0, $i1, $i2, i3;
        ucar.nc2.Variable $r2;
        java.lang.String r1, $r5, $r8, $r11, $r12, $r19, $r21, $r24, $r26;
        double $d0;
        java.util.Iterator $r4;
        ucar.ma2.IndexIterator $r17;
        ucar.ma2.Array $r15;
        java.lang.Object $r25;
        ucar.nc2.Dimension r29, r30;
        ucar.nc2.dataset.NetcdfDataset r0;

        r28 := @this: ucar.nc2.dataset.conv.WRFConvention;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>(r1);

        if null != $r2 goto label01;

        return null;

     label01:
        r29 = null;

        $r3 = virtualinvoke $r2.<ucar.nc2.Variable: java.util.List getDimensions()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label04;

        $r25 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r30 = (ucar.nc2.Dimension) $r25;

        $r26 = virtualinvoke r30.<ucar.nc2.Dimension: java.lang.String getName()>();

        $z3 = virtualinvoke $r26.<java.lang.String: boolean startsWith(java.lang.String)>("soil_layers");

        if $z3 == 0 goto label03;

        r29 = r30;

     label03:
        goto label02;

     label04:
        if null != r29 goto label05;

        return null;

     label05:
        $i0 = virtualinvoke $r2.<ucar.nc2.Variable: int getRank()>();

        if $i0 != 1 goto label07;

        $r20 = new ucar.nc2.Attribute;

        specialinvoke $r20.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", "GeoZ");

        virtualinvoke $r2.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r20);

        $r21 = virtualinvoke r29.<ucar.nc2.Dimension: java.lang.String getName()>();

        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r21);

        if $z2 != 0 goto label06;

        $r23 = new ucar.nc2.Attribute;

        $r24 = virtualinvoke r29.<ucar.nc2.Dimension: java.lang.String getName()>();

        specialinvoke $r23.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAliasForDimension", $r24);

        virtualinvoke $r2.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r23);

     label06:
        $r22 = (ucar.nc2.dataset.VariableDS) $r2;

        return $r22;

     label07:
        $r5 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>($r2, "units", "");

        $r6 = new ucar.nc2.dataset.CoordinateAxis1D;

        $r7 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r8 = virtualinvoke r29.<ucar.nc2.Dimension: java.lang.String getName()>();

        specialinvoke $r6.<ucar.nc2.dataset.CoordinateAxis1D: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,java.lang.String,ucar.ma2.DataType,java.lang.String,java.lang.String,java.lang.String)>(r0, null, "soilDepth", $r7, $r8, $r5, "soil depth");

        $r9 = new ucar.nc2.Attribute;

        specialinvoke $r9.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", "GeoZ");

        virtualinvoke $r6.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r9);

        $r10 = new ucar.nc2.Attribute;

        specialinvoke $r10.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", "units");

        virtualinvoke $r6.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r10);

        $r11 = virtualinvoke $r6.<ucar.nc2.dataset.CoordinateAxis: java.lang.String getShortName()>();

        $r12 = virtualinvoke r29.<ucar.nc2.Dimension: java.lang.String getName()>();

        $z1 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z1 != 0 goto label08;

        $r18 = new ucar.nc2.Attribute;

        $r19 = virtualinvoke r29.<ucar.nc2.Dimension: java.lang.String getName()>();

        specialinvoke $r18.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAliasForDimension", $r19);

        virtualinvoke $r6.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r18);

     label08:
        $i1 = virtualinvoke $r2.<ucar.nc2.Variable: int getShape(int)>(1);

        $r13 = newarray (int)[2];

        $r13[0] = 0;

        $r13[1] = 0;

        $r14 = newarray (int)[2];

        $r14[0] = 1;

        $r14[1] = $i1;

     label09:
        $r15 = virtualinvoke $r2.<ucar.nc2.Variable: ucar.ma2.Array read(int[],int[])>($r13, $r14);

        $r16 = new ucar.ma2.ArrayDouble$D1;

        specialinvoke $r16.<ucar.ma2.ArrayDouble$D1: void <init>(int)>($i1);

        $r17 = virtualinvoke $r15.<ucar.ma2.Array: ucar.ma2.IndexIterator getIndexIterator()>();

        i3 = 0;

     label10:
        $z4 = interfaceinvoke $r17.<ucar.ma2.IndexIterator: boolean hasNext()>();

        if $z4 == 0 goto label11;

        $d0 = interfaceinvoke $r17.<ucar.ma2.IndexIterator: double getDoubleNext()>();

        $i2 = i3;

        i3 = i3 + 1;

        virtualinvoke $r16.<ucar.ma2.ArrayDouble$D1: void set(int,double)>($i2, $d0);

        goto label10;

     label11:
        virtualinvoke $r6.<ucar.nc2.dataset.CoordinateAxis: void setCachedData(ucar.ma2.Array,boolean)>($r16, 1);

     label12:
        goto label14;

     label13:
        $r27 := @caughtexception;

        virtualinvoke $r27.<java.lang.Exception: void printStackTrace()>();

     label14:
        return $r6;

        catch java.lang.Exception from label09 to label12 with label13;
    }

    private double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset, java.lang.String)
    {
        ucar.nc2.dataset.conv.WRFConvention r4;
        ucar.nc2.Attribute $r2;
        java.lang.String r1;
        java.lang.Number $r3;
        ucar.nc2.dataset.NetcdfDataset r0;
        double $d0;

        r4 := @this: ucar.nc2.dataset.conv.WRFConvention;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Attribute findGlobalAttributeIgnoreCase(java.lang.String)>(r1);

        if $r2 != null goto label1;

        return #NaN;

     label1:
        $r3 = virtualinvoke $r2.<ucar.nc2.Attribute: java.lang.Number getNumericValue()>();

        $d0 = virtualinvoke $r3.<java.lang.Number: double doubleValue()>();

        return $d0;
    }

    protected void assignCoordinateTransforms(ucar.nc2.dataset.NetcdfDataset)
    {
        java.lang.Object[] $r10;
        java.util.Formatter $r11;
        ucar.nc2.dataset.CoordinateAxis $r6, $r7;
        ucar.nc2.dataset.conv.WRFConvention r0;
        ucar.nc2.dataset.VerticalCT $r9;
        int $i0;
        java.lang.String $r8, $r12, $r13;
        boolean $z0;
        java.util.Iterator $r3;
        java.util.List $r2;
        java.lang.Object $r4;
        ucar.nc2.dataset.CoordinateSystem r5;
        ucar.nc2.dataset.NetcdfDataset r1;

        r0 := @this: ucar.nc2.dataset.conv.WRFConvention;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        specialinvoke r0.<ucar.nc2.dataset.CoordSysBuilder: void assignCoordinateTransforms(ucar.nc2.dataset.NetcdfDataset)>(r1);

        $r2 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: java.util.List getCoordinateSystems()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (ucar.nc2.dataset.CoordinateSystem) $r4;

        $r6 = virtualinvoke r5.<ucar.nc2.dataset.CoordinateSystem: ucar.nc2.dataset.CoordinateAxis getZaxis()>();

        if $r6 == null goto label4;

        $r7 = virtualinvoke r5.<ucar.nc2.dataset.CoordinateSystem: ucar.nc2.dataset.CoordinateAxis getZaxis()>();

        $r8 = virtualinvoke $r7.<ucar.nc2.dataset.CoordinateAxis: java.lang.String getUnitsString()>();

        if $r8 == null goto label2;

        $r13 = virtualinvoke $r8.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r13.<java.lang.String: int length()>();

        if $i0 != 0 goto label4;

     label2:
        $r9 = specialinvoke r0.<ucar.nc2.dataset.conv.WRFConvention: ucar.nc2.dataset.VerticalCT makeWRFEtaVerticalCoordinateTransform(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.dataset.CoordinateSystem)>(r1, r5);

        if $r9 == null goto label3;

        virtualinvoke r5.<ucar.nc2.dataset.CoordinateSystem: void addCoordinateTransform(ucar.nc2.dataset.CoordinateTransform)>($r9);

     label3:
        $r11 = r0.<ucar.nc2.dataset.conv.WRFConvention: java.util.Formatter parseInfo>;

        $r10 = newarray (java.lang.Object)[1];

        $r12 = virtualinvoke r5.<ucar.nc2.dataset.CoordinateSystem: java.lang.String getName()>();

        $r10[0] = $r12;

        virtualinvoke $r11.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("***Added WRFEta verticalCoordinateTransform to %s\n", $r10);

     label4:
        goto label1;

     label5:
        return;
    }

    private ucar.nc2.dataset.VerticalCT makeWRFEtaVerticalCoordinateTransform(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.dataset.CoordinateSystem)
    {
        ucar.nc2.dataset.transform.WRFEtaTransformBuilder $r5;
        ucar.nc2.dataset.conv.WRFConvention r9;
        ucar.nc2.dataset.VerticalCT $r8;
        ucar.nc2.dataset.CoordinateTransform $r7;
        ucar.nc2.Variable $r1, $r2, $r3, $r4;
        ucar.nc2.dataset.CoordinateSystem r6;
        ucar.nc2.dataset.NetcdfDataset r0;

        r9 := @this: ucar.nc2.dataset.conv.WRFConvention;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r6 := @parameter1: ucar.nc2.dataset.CoordinateSystem;

        $r1 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("PH");

        if null == $r1 goto label1;

        $r2 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("PHB");

        if null == $r2 goto label1;

        $r3 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("P");

        if null == $r3 goto label1;

        $r4 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("PB");

        if null != $r4 goto label2;

     label1:
        return null;

     label2:
        $r5 = new ucar.nc2.dataset.transform.WRFEtaTransformBuilder;

        specialinvoke $r5.<ucar.nc2.dataset.transform.WRFEtaTransformBuilder: void <init>(ucar.nc2.dataset.CoordinateSystem)>(r6);

        $r7 = virtualinvoke $r5.<ucar.nc2.dataset.transform.WRFEtaTransformBuilder: ucar.nc2.dataset.CoordinateTransform makeCoordinateTransform(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Variable)>(r0, null);

        $r8 = (ucar.nc2.dataset.VerticalCT) $r7;

        return $r8;
    }

    public static void main(java.lang.String[]) throws java.io.IOException, ucar.ma2.InvalidRangeException
    {
        int[] $r11, $r12, $r16;
        boolean $z0, $z1;
        ucar.ma2.DataType $r13, $r17;
        ucar.ma2.ArrayDouble$D1 r15, r19;
        ucar.nc2.NetcdfFile $r0;
        java.lang.String[] r26;
        int i0, i1, $i2, $i3, $i4, $i5, i6, i7;
        ucar.nc2.Variable $r1, $r5;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, d8, d9;
        java.io.PrintStream $r4, $r8, $r20, $r21;
        ucar.ma2.IndexIterator $r3, $r7;
        ucar.ma2.Array $r2, $r6, $r14, $r18;
        ucar.ma2.Index $r9, $r10, $r22, $r23, $r24, $r25;

        r26 := @parameter0: java.lang.String[];

        $r0 = staticinvoke <ucar.nc2.dataset.NetcdfDataset: ucar.nc2.NetcdfFile openFile(java.lang.String,ucar.nc2.util.CancelTask)>("R:/testdata/wrf/WRFOU~C@", null);

        $r1 = virtualinvoke $r0.<ucar.nc2.NetcdfFile: ucar.nc2.Variable findVariable(java.lang.String)>("GLAT");

        $r2 = virtualinvoke $r1.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        $r3 = virtualinvoke $r2.<ucar.ma2.Array: ucar.ma2.IndexIterator getIndexIterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<ucar.ma2.IndexIterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $d6 = interfaceinvoke $r3.<ucar.ma2.IndexIterator: double getDoubleNext()>();

        $d7 = staticinvoke <java.lang.Math: double toDegrees(double)>($d6);

        interfaceinvoke $r3.<ucar.ma2.IndexIterator: void setDoubleCurrent(double)>($d7);

        goto label1;

     label2:
        $r4 = <java.lang.System: java.io.PrintStream out>;

        staticinvoke <ucar.nc2.NCdump: void printArray(ucar.ma2.Array,java.lang.String,java.io.PrintStream,ucar.nc2.util.CancelTask)>($r2, "GLAT", $r4, null);

        $r5 = virtualinvoke $r0.<ucar.nc2.NetcdfFile: ucar.nc2.Variable findVariable(java.lang.String)>("GLON");

        $r6 = virtualinvoke $r5.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        $r7 = virtualinvoke $r6.<ucar.ma2.Array: ucar.ma2.IndexIterator getIndexIterator()>();

     label3:
        $z1 = interfaceinvoke $r7.<ucar.ma2.IndexIterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $d4 = interfaceinvoke $r7.<ucar.ma2.IndexIterator: double getDoubleNext()>();

        $d5 = staticinvoke <java.lang.Math: double toDegrees(double)>($d4);

        interfaceinvoke $r7.<ucar.ma2.IndexIterator: void setDoubleCurrent(double)>($d5);

        goto label3;

     label4:
        $r8 = <java.lang.System: java.io.PrintStream out>;

        staticinvoke <ucar.nc2.NCdump: void printArray(ucar.ma2.Array,java.lang.String,java.io.PrintStream,ucar.nc2.util.CancelTask)>($r6, "GLON", $r8, null);

        $r9 = virtualinvoke $r2.<ucar.ma2.Array: ucar.ma2.Index getIndex()>();

        $r10 = virtualinvoke $r2.<ucar.ma2.Array: ucar.ma2.Index getIndex()>();

        $r11 = virtualinvoke $r2.<ucar.ma2.Array: int[] getShape()>();

        i0 = $r11[1];

        i1 = $r11[2];

        $r13 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r12 = newarray (int)[1];

        $r12[0] = i0;

        $r14 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(ucar.ma2.DataType,int[])>($r13, $r12);

        r15 = (ucar.ma2.ArrayDouble$D1) $r14;

        $r17 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r16 = newarray (int)[1];

        $r16[0] = i1;

        $r18 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(ucar.ma2.DataType,int[])>($r17, $r16);

        r19 = (ucar.ma2.ArrayDouble$D1) $r18;

        i6 = 0;

     label5:
        $i2 = i0 - 1;

        if i6 >= $i2 goto label6;

        $r24 = virtualinvoke $r9.<ucar.ma2.Index: ucar.ma2.Index set(int,int,int)>(0, i6, 0);

        $d2 = virtualinvoke $r2.<ucar.ma2.Array: double getDouble(ucar.ma2.Index)>($r24);

        $i5 = i6 + 1;

        $r25 = virtualinvoke $r10.<ucar.ma2.Index: ucar.ma2.Index set(int,int,int)>(0, $i5, 0);

        $d3 = virtualinvoke $r2.<ucar.ma2.Array: double getDouble(ucar.ma2.Index)>($r25);

        d8 = $d2 - $d3;

        virtualinvoke r15.<ucar.ma2.ArrayDouble$D1: void set(int,double)>(i6, d8);

        i6 = i6 + 1;

        goto label5;

     label6:
        i7 = 0;

     label7:
        $i3 = i1 - 1;

        if i7 >= $i3 goto label8;

        $r22 = virtualinvoke $r9.<ucar.ma2.Index: ucar.ma2.Index set(int,int,int)>(0, 0, i7);

        $d0 = virtualinvoke $r2.<ucar.ma2.Array: double getDouble(ucar.ma2.Index)>($r22);

        $i4 = i7 + 1;

        $r23 = virtualinvoke $r10.<ucar.ma2.Index: ucar.ma2.Index set(int,int,int)>(0, 0, $i4);

        $d1 = virtualinvoke $r2.<ucar.ma2.Array: double getDouble(ucar.ma2.Index)>($r23);

        d9 = $d0 - $d1;

        virtualinvoke r19.<ucar.ma2.ArrayDouble$D1: void set(int,double)>(i7, d9);

        i7 = i7 + 1;

        goto label7;

     label8:
        $r20 = <java.lang.System: java.io.PrintStream out>;

        staticinvoke <ucar.nc2.NCdump: void printArray(ucar.ma2.Array,java.lang.String,java.io.PrintStream,ucar.nc2.util.CancelTask)>(r15, "diff_y", $r20, null);

        $r21 = <java.lang.System: java.io.PrintStream out>;

        staticinvoke <ucar.nc2.NCdump: void printArray(ucar.ma2.Array,java.lang.String,java.io.PrintStream,ucar.nc2.util.CancelTask)>(r19, "diff_x", $r21, null);

        virtualinvoke $r0.<ucar.nc2.NetcdfFile: void close()>();

        return;
    }

    static void <clinit>()
    {
        java.text.SimpleDateFormat $r0, $r1;
        java.util.TimeZone $r2;

        $r0 = new java.text.SimpleDateFormat;

        specialinvoke $r0.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd_HH:mm:ss");

        <ucar.nc2.dataset.conv.WRFConvention: java.text.SimpleDateFormat dateFormat> = $r0;

        $r1 = <ucar.nc2.dataset.conv.WRFConvention: java.text.SimpleDateFormat dateFormat>;

        $r2 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT");

        virtualinvoke $r1.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>($r2);

        return;
    }
}
