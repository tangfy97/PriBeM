public class com.jidesoft.swing.CheckBoxList$Handler extends java.lang.Object implements java.awt.event.MouseListener, java.awt.event.KeyListener, javax.swing.event.ListSelectionListener, java.beans.PropertyChangeListener, javax.swing.event.ListDataListener
{
    protected com.jidesoft.swing.CheckBoxList _list;
    int hotspot;

    public void <init>(com.jidesoft.swing.CheckBoxList)
    {
        java.awt.Dimension $r2;
        com.jidesoft.swing.CheckBoxList r3;
        javax.swing.JCheckBox $r1;
        int $i0;
        com.jidesoft.swing.CheckBoxList$Handler r0;

        r0 := @this: com.jidesoft.swing.CheckBoxList$Handler;

        r3 := @parameter0: com.jidesoft.swing.CheckBoxList;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new javax.swing.JCheckBox;

        specialinvoke $r1.<javax.swing.JCheckBox: void <init>()>();

        $r2 = virtualinvoke $r1.<javax.swing.JCheckBox: java.awt.Dimension getPreferredSize()>();

        $i0 = $r2.<java.awt.Dimension: int width>;

        r0.<com.jidesoft.swing.CheckBoxList$Handler: int hotspot> = $i0;

        r0.<com.jidesoft.swing.CheckBoxList$Handler: com.jidesoft.swing.CheckBoxList _list> = r3;

        return;
    }

    public void propertyChange(java.beans.PropertyChangeEvent)
    {
        com.jidesoft.swing.CheckBoxList $r4;
        com.jidesoft.swing.CheckBoxListSelectionModel $r5;
        com.jidesoft.swing.CheckBoxList$Handler r3;
        java.lang.Object $r1, $r2, $r6, $r8, $r10;
        java.beans.PropertyChangeEvent r0;
        boolean $z0, $z1;
        javax.swing.ListModel $r7, $r9, $r11;

        r3 := @this: com.jidesoft.swing.CheckBoxList$Handler;

        r0 := @parameter0: java.beans.PropertyChangeEvent;

        $r1 = virtualinvoke r0.<java.beans.PropertyChangeEvent: java.lang.Object getOldValue()>();

        $z0 = $r1 instanceof javax.swing.ListModel;

        if $z0 == 0 goto label1;

        $r10 = virtualinvoke r0.<java.beans.PropertyChangeEvent: java.lang.Object getOldValue()>();

        $r11 = (javax.swing.ListModel) $r10;

        interfaceinvoke $r11.<javax.swing.ListModel: void removeListDataListener(javax.swing.event.ListDataListener)>(r3);

     label1:
        $r2 = virtualinvoke r0.<java.beans.PropertyChangeEvent: java.lang.Object getNewValue()>();

        $z1 = $r2 instanceof javax.swing.ListModel;

        if $z1 == 0 goto label2;

        $r4 = r3.<com.jidesoft.swing.CheckBoxList$Handler: com.jidesoft.swing.CheckBoxList _list>;

        $r5 = virtualinvoke $r4.<com.jidesoft.swing.CheckBoxList: com.jidesoft.swing.CheckBoxListSelectionModel getCheckBoxListSelectionModel()>();

        $r6 = virtualinvoke r0.<java.beans.PropertyChangeEvent: java.lang.Object getNewValue()>();

        $r7 = (javax.swing.ListModel) $r6;

        virtualinvoke $r5.<com.jidesoft.swing.CheckBoxListSelectionModel: void setModel(javax.swing.ListModel)>($r7);

        $r8 = virtualinvoke r0.<java.beans.PropertyChangeEvent: java.lang.Object getNewValue()>();

        $r9 = (javax.swing.ListModel) $r8;

        interfaceinvoke $r9.<javax.swing.ListModel: void addListDataListener(javax.swing.event.ListDataListener)>(r3);

     label2:
        return;
    }

    protected boolean clicksInCheckBox(java.awt.event.MouseEvent)
    {
        java.awt.Rectangle $r5;
        java.awt.Point $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        boolean $z0, $z1, $z2;
        com.jidesoft.swing.CheckBoxList $r2, $r4, $r6;
        com.jidesoft.swing.CheckBoxList$Handler r0;
        java.awt.event.MouseEvent r1;
        java.awt.ComponentOrientation $r7;

        r0 := @this: com.jidesoft.swing.CheckBoxList$Handler;

        r1 := @parameter0: java.awt.event.MouseEvent;

        $r2 = r0.<com.jidesoft.swing.CheckBoxList$Handler: com.jidesoft.swing.CheckBoxList _list>;

        $r3 = virtualinvoke r1.<java.awt.event.MouseEvent: java.awt.Point getPoint()>();

        $i0 = virtualinvoke $r2.<com.jidesoft.swing.CheckBoxList: int locationToIndex(java.awt.Point)>($r3);

        $r4 = r0.<com.jidesoft.swing.CheckBoxList$Handler: com.jidesoft.swing.CheckBoxList _list>;

        $r5 = virtualinvoke $r4.<com.jidesoft.swing.CheckBoxList: java.awt.Rectangle getCellBounds(int,int)>($i0, $i0);

        if $r5 == null goto label6;

        $r6 = r0.<com.jidesoft.swing.CheckBoxList$Handler: com.jidesoft.swing.CheckBoxList _list>;

        $r7 = virtualinvoke $r6.<com.jidesoft.swing.CheckBoxList: java.awt.ComponentOrientation getComponentOrientation()>();

        $z0 = virtualinvoke $r7.<java.awt.ComponentOrientation: boolean isLeftToRight()>();

        if $z0 == 0 goto label3;

        $i7 = virtualinvoke r1.<java.awt.event.MouseEvent: int getX()>();

        $i9 = $r5.<java.awt.Rectangle: int x>;

        $i8 = r0.<com.jidesoft.swing.CheckBoxList$Handler: int hotspot>;

        $i10 = $i9 + $i8;

        if $i7 >= $i10 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;

     label3:
        $i1 = virtualinvoke r1.<java.awt.event.MouseEvent: int getX()>();

        $i3 = $r5.<java.awt.Rectangle: int x>;

        $i2 = $r5.<java.awt.Rectangle: int width>;

        $i5 = $i3 + $i2;

        $i4 = r0.<com.jidesoft.swing.CheckBoxList$Handler: int hotspot>;

        $i6 = $i5 - $i4;

        if $i1 <= $i6 goto label4;

        $z2 = 1;

        goto label5;

     label4:
        $z2 = 0;

     label5:
        return $z2;

     label6:
        return 0;
    }

    public void mouseClicked(java.awt.event.MouseEvent)
    {
        com.jidesoft.swing.CheckBoxList$Handler r0;
        java.awt.event.MouseEvent r1;

        r0 := @this: com.jidesoft.swing.CheckBoxList$Handler;

        r1 := @parameter0: java.awt.event.MouseEvent;

        return;
    }

    public void mousePressed(java.awt.event.MouseEvent)
    {
        com.jidesoft.swing.CheckBoxList $r2, $r3, $r4;
        java.awt.Point $r5;
        java.awt.event.MouseEvent r0;
        com.jidesoft.swing.CheckBoxList$Handler r1;
        int $i0;
        boolean $z0, $z1, $z2, $z3;

        r1 := @this: com.jidesoft.swing.CheckBoxList$Handler;

        r0 := @parameter0: java.awt.event.MouseEvent;

        $z0 = virtualinvoke r0.<java.awt.event.MouseEvent: boolean isConsumed()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = r1.<com.jidesoft.swing.CheckBoxList$Handler: com.jidesoft.swing.CheckBoxList _list>;

        $z1 = virtualinvoke $r2.<com.jidesoft.swing.CheckBoxList: boolean isCheckBoxEnabled()>();

        if $z1 != 0 goto label2;

        return;

     label2:
        $z2 = virtualinvoke r1.<com.jidesoft.swing.CheckBoxList$Handler: boolean clicksInCheckBox(java.awt.event.MouseEvent)>(r0);

        $r3 = r1.<com.jidesoft.swing.CheckBoxList$Handler: com.jidesoft.swing.CheckBoxList _list>;

        $z3 = virtualinvoke $r3.<com.jidesoft.swing.CheckBoxList: boolean isClickInCheckBoxOnly()>();

        if $z3 == 0 goto label3;

        if $z2 == 0 goto label4;

     label3:
        $r4 = r1.<com.jidesoft.swing.CheckBoxList$Handler: com.jidesoft.swing.CheckBoxList _list>;

        $r5 = virtualinvoke r0.<java.awt.event.MouseEvent: java.awt.Point getPoint()>();

        $i0 = virtualinvoke $r4.<com.jidesoft.swing.CheckBoxList: int locationToIndex(java.awt.Point)>($r5);

        virtualinvoke r1.<com.jidesoft.swing.CheckBoxList$Handler: void toggleSelection(int)>($i0);

        if $z2 == 0 goto label4;

        virtualinvoke r0.<java.awt.event.MouseEvent: void consume()>();

     label4:
        return;
    }

    public void mouseReleased(java.awt.event.MouseEvent)
    {
        com.jidesoft.swing.CheckBoxList $r2;
        java.awt.event.MouseEvent r0;
        com.jidesoft.swing.CheckBoxList$Handler r1;
        boolean $z0, $z1, $z2;

        r1 := @this: com.jidesoft.swing.CheckBoxList$Handler;

        r0 := @parameter0: java.awt.event.MouseEvent;

        $z0 = virtualinvoke r0.<java.awt.event.MouseEvent: boolean isConsumed()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = r1.<com.jidesoft.swing.CheckBoxList$Handler: com.jidesoft.swing.CheckBoxList _list>;

        $z1 = virtualinvoke $r2.<com.jidesoft.swing.CheckBoxList: boolean isCheckBoxEnabled()>();

        if $z1 != 0 goto label2;

        return;

     label2:
        $z2 = virtualinvoke r1.<com.jidesoft.swing.CheckBoxList$Handler: boolean clicksInCheckBox(java.awt.event.MouseEvent)>(r0);

        if $z2 == 0 goto label3;

        virtualinvoke r0.<java.awt.event.MouseEvent: void consume()>();

     label3:
        return;
    }

    public void mouseEntered(java.awt.event.MouseEvent)
    {
        com.jidesoft.swing.CheckBoxList$Handler r0;
        java.awt.event.MouseEvent r1;

        r0 := @this: com.jidesoft.swing.CheckBoxList$Handler;

        r1 := @parameter0: java.awt.event.MouseEvent;

        return;
    }

    public void mouseExited(java.awt.event.MouseEvent)
    {
        com.jidesoft.swing.CheckBoxList$Handler r0;
        java.awt.event.MouseEvent r1;

        r0 := @this: com.jidesoft.swing.CheckBoxList$Handler;

        r1 := @parameter0: java.awt.event.MouseEvent;

        return;
    }

    public void keyPressed(java.awt.event.KeyEvent)
    {
        com.jidesoft.swing.CheckBoxList $r2;
        char $c1;
        java.awt.event.KeyEvent r0;
        com.jidesoft.swing.CheckBoxList$Handler r1;
        int $i0, $i2;
        boolean $z0, $z1;

        r1 := @this: com.jidesoft.swing.CheckBoxList$Handler;

        r0 := @parameter0: java.awt.event.KeyEvent;

        $z0 = virtualinvoke r0.<java.awt.event.KeyEvent: boolean isConsumed()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = r1.<com.jidesoft.swing.CheckBoxList$Handler: com.jidesoft.swing.CheckBoxList _list>;

        $z1 = virtualinvoke $r2.<com.jidesoft.swing.CheckBoxList: boolean isCheckBoxEnabled()>();

        if $z1 != 0 goto label2;

        return;

     label2:
        $i0 = virtualinvoke r0.<java.awt.event.KeyEvent: int getModifiers()>();

        if $i0 != 0 goto label3;

        $c1 = virtualinvoke r0.<java.awt.event.KeyEvent: char getKeyChar()>();

        $i2 = (int) $c1;

        if $i2 != 32 goto label3;

        virtualinvoke r1.<com.jidesoft.swing.CheckBoxList$Handler: void toggleSelections()>();

     label3:
        return;
    }

    public void keyTyped(java.awt.event.KeyEvent)
    {
        java.awt.event.KeyEvent r1;
        com.jidesoft.swing.CheckBoxList$Handler r0;

        r0 := @this: com.jidesoft.swing.CheckBoxList$Handler;

        r1 := @parameter0: java.awt.event.KeyEvent;

        return;
    }

    public void keyReleased(java.awt.event.KeyEvent)
    {
        java.awt.event.KeyEvent r1;
        com.jidesoft.swing.CheckBoxList$Handler r0;

        r0 := @this: com.jidesoft.swing.CheckBoxList$Handler;

        r1 := @parameter0: java.awt.event.KeyEvent;

        return;
    }

    protected void toggleSelections()
    {
        java.lang.Throwable $r7;
        com.jidesoft.swing.CheckBoxListSelectionModel $r4;
        int[] $r2;
        int $i0, $i1, i2, i3, i4;
        boolean $z0, $z1, $z2, $z3;
        com.jidesoft.swing.CheckBoxList $r1, $r3, $r5, $r6, $r8;
        com.jidesoft.swing.CheckBoxList$Handler r0;

        r0 := @this: com.jidesoft.swing.CheckBoxList$Handler;

        $r1 = r0.<com.jidesoft.swing.CheckBoxList$Handler: com.jidesoft.swing.CheckBoxList _list>;

        $r2 = virtualinvoke $r1.<com.jidesoft.swing.CheckBoxList: int[] getSelectedIndices()>();

        $r3 = r0.<com.jidesoft.swing.CheckBoxList$Handler: com.jidesoft.swing.CheckBoxList _list>;

        $r4 = virtualinvoke $r3.<com.jidesoft.swing.CheckBoxList: com.jidesoft.swing.CheckBoxListSelectionModel getCheckBoxListSelectionModel()>();

        virtualinvoke $r4.<com.jidesoft.swing.CheckBoxListSelectionModel: void removeListSelectionListener(javax.swing.event.ListSelectionListener)>(r0);

        virtualinvoke $r4.<com.jidesoft.swing.CheckBoxListSelectionModel: void setValueIsAdjusting(boolean)>(1);

     label1:
        $i0 = lengthof $r2;

        if $i0 <= 0 goto label6;

        $i1 = $r2[0];

        $z0 = virtualinvoke $r4.<com.jidesoft.swing.CheckBoxListSelectionModel: boolean isSelectedIndex(int)>($i1);

        i2 = lengthof $r2;

        i4 = 0;

     label2:
        if i4 >= i2 goto label6;

        i3 = $r2[i4];

        $r6 = r0.<com.jidesoft.swing.CheckBoxList$Handler: com.jidesoft.swing.CheckBoxList _list>;

        $z1 = virtualinvoke $r6.<com.jidesoft.swing.CheckBoxList: boolean isCheckBoxEnabled(int)>(i3);

        if $z1 != 0 goto label3;

        goto label5;

     label3:
        if $z0 == 0 goto label4;

        $z3 = virtualinvoke $r4.<com.jidesoft.swing.CheckBoxListSelectionModel: boolean isSelectedIndex(int)>(i3);

        if $z3 == 0 goto label4;

        virtualinvoke $r4.<com.jidesoft.swing.CheckBoxListSelectionModel: void removeSelectionInterval(int,int)>(i3, i3);

        goto label5;

     label4:
        if $z0 != 0 goto label5;

        $z2 = virtualinvoke $r4.<com.jidesoft.swing.CheckBoxListSelectionModel: boolean isSelectedIndex(int)>(i3);

        if $z2 != 0 goto label5;

        virtualinvoke $r4.<com.jidesoft.swing.CheckBoxListSelectionModel: void addSelectionInterval(int,int)>(i3, i3);

     label5:
        i4 = i4 + 1;

        goto label2;

     label6:
        virtualinvoke $r4.<com.jidesoft.swing.CheckBoxListSelectionModel: void setValueIsAdjusting(boolean)>(0);

        virtualinvoke $r4.<com.jidesoft.swing.CheckBoxListSelectionModel: void addListSelectionListener(javax.swing.event.ListSelectionListener)>(r0);

        $r5 = r0.<com.jidesoft.swing.CheckBoxList$Handler: com.jidesoft.swing.CheckBoxList _list>;

        virtualinvoke $r5.<com.jidesoft.swing.CheckBoxList: void repaint()>();

        goto label9;

     label7:
        $r7 := @caughtexception;

     label8:
        virtualinvoke $r4.<com.jidesoft.swing.CheckBoxListSelectionModel: void setValueIsAdjusting(boolean)>(0);

        virtualinvoke $r4.<com.jidesoft.swing.CheckBoxListSelectionModel: void addListSelectionListener(javax.swing.event.ListSelectionListener)>(r0);

        $r8 = r0.<com.jidesoft.swing.CheckBoxList$Handler: com.jidesoft.swing.CheckBoxList _list>;

        virtualinvoke $r8.<com.jidesoft.swing.CheckBoxList: void repaint()>();

        throw $r7;

     label9:
        return;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void valueChanged(javax.swing.event.ListSelectionEvent)
    {
        com.jidesoft.swing.CheckBoxList $r1;
        javax.swing.event.ListSelectionEvent r2;
        com.jidesoft.swing.CheckBoxList$Handler r0;

        r0 := @this: com.jidesoft.swing.CheckBoxList$Handler;

        r2 := @parameter0: javax.swing.event.ListSelectionEvent;

        $r1 = r0.<com.jidesoft.swing.CheckBoxList$Handler: com.jidesoft.swing.CheckBoxList _list>;

        virtualinvoke $r1.<com.jidesoft.swing.CheckBoxList: void repaint()>();

        return;
    }

    protected void toggleSelection(int)
    {
        java.lang.Throwable $r6;
        com.jidesoft.swing.CheckBoxList $r1, $r2, $r3, $r5, $r7;
        com.jidesoft.swing.CheckBoxListSelectionModel $r4;
        com.jidesoft.swing.CheckBoxList$Handler r0;
        int i0;
        boolean $z0, $z1, $z2;

        r0 := @this: com.jidesoft.swing.CheckBoxList$Handler;

        i0 := @parameter0: int;

        $r1 = r0.<com.jidesoft.swing.CheckBoxList$Handler: com.jidesoft.swing.CheckBoxList _list>;

        $z0 = virtualinvoke $r1.<com.jidesoft.swing.CheckBoxList: boolean isEnabled()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.jidesoft.swing.CheckBoxList$Handler: com.jidesoft.swing.CheckBoxList _list>;

        $z1 = virtualinvoke $r2.<com.jidesoft.swing.CheckBoxList: boolean isCheckBoxEnabled(int)>(i0);

        if $z1 != 0 goto label2;

     label1:
        return;

     label2:
        $r3 = r0.<com.jidesoft.swing.CheckBoxList$Handler: com.jidesoft.swing.CheckBoxList _list>;

        $r4 = virtualinvoke $r3.<com.jidesoft.swing.CheckBoxList: com.jidesoft.swing.CheckBoxListSelectionModel getCheckBoxListSelectionModel()>();

        $z2 = virtualinvoke $r4.<com.jidesoft.swing.CheckBoxListSelectionModel: boolean isSelectedIndex(int)>(i0);

        virtualinvoke $r4.<com.jidesoft.swing.CheckBoxListSelectionModel: void removeListSelectionListener(javax.swing.event.ListSelectionListener)>(r0);

     label3:
        if $z2 == 0 goto label4;

        virtualinvoke $r4.<com.jidesoft.swing.CheckBoxListSelectionModel: void removeSelectionInterval(int,int)>(i0, i0);

        goto label5;

     label4:
        virtualinvoke $r4.<com.jidesoft.swing.CheckBoxListSelectionModel: void addSelectionInterval(int,int)>(i0, i0);

     label5:
        virtualinvoke $r4.<com.jidesoft.swing.CheckBoxListSelectionModel: void addListSelectionListener(javax.swing.event.ListSelectionListener)>(r0);

        $r5 = r0.<com.jidesoft.swing.CheckBoxList$Handler: com.jidesoft.swing.CheckBoxList _list>;

        virtualinvoke $r5.<com.jidesoft.swing.CheckBoxList: void repaint()>();

        goto label8;

     label6:
        $r6 := @caughtexception;

     label7:
        virtualinvoke $r4.<com.jidesoft.swing.CheckBoxListSelectionModel: void addListSelectionListener(javax.swing.event.ListSelectionListener)>(r0);

        $r7 = r0.<com.jidesoft.swing.CheckBoxList$Handler: com.jidesoft.swing.CheckBoxList _list>;

        virtualinvoke $r7.<com.jidesoft.swing.CheckBoxList: void repaint()>();

        throw $r6;

     label8:
        return;

        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    protected void toggleSelection()
    {
        int $i0;
        com.jidesoft.swing.CheckBoxList $r1;
        com.jidesoft.swing.CheckBoxList$Handler r0;

        r0 := @this: com.jidesoft.swing.CheckBoxList$Handler;

        $r1 = r0.<com.jidesoft.swing.CheckBoxList$Handler: com.jidesoft.swing.CheckBoxList _list>;

        $i0 = virtualinvoke $r1.<com.jidesoft.swing.CheckBoxList: int getSelectedIndex()>();

        virtualinvoke r0.<com.jidesoft.swing.CheckBoxList$Handler: void toggleSelection(int)>($i0);

        return;
    }

    public void intervalAdded(javax.swing.event.ListDataEvent)
    {
        com.jidesoft.swing.CheckBoxList $r2;
        com.jidesoft.swing.CheckBoxListSelectionModel $r3;
        com.jidesoft.swing.CheckBoxList$Handler r1;
        javax.swing.event.ListDataEvent r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r1 := @this: com.jidesoft.swing.CheckBoxList$Handler;

        r0 := @parameter0: javax.swing.event.ListDataEvent;

        $i0 = virtualinvoke r0.<javax.swing.event.ListDataEvent: int getIndex0()>();

        $i1 = virtualinvoke r0.<javax.swing.event.ListDataEvent: int getIndex1()>();

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        $i3 = virtualinvoke r0.<javax.swing.event.ListDataEvent: int getIndex0()>();

        $i4 = virtualinvoke r0.<javax.swing.event.ListDataEvent: int getIndex1()>();

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>($i3, $i4);

        $r2 = r1.<com.jidesoft.swing.CheckBoxList$Handler: com.jidesoft.swing.CheckBoxList _list>;

        $r3 = virtualinvoke $r2.<com.jidesoft.swing.CheckBoxList: com.jidesoft.swing.CheckBoxListSelectionModel getCheckBoxListSelectionModel()>();

        if $r3 == null goto label1;

        $i6 = $i5 - $i2;

        $i7 = $i6 + 1;

        interfaceinvoke $r3.<javax.swing.ListSelectionModel: void insertIndexInterval(int,int,boolean)>($i2, $i7, 1);

     label1:
        return;
    }

    public void intervalRemoved(javax.swing.event.ListDataEvent)
    {
        com.jidesoft.swing.CheckBoxList $r1;
        javax.swing.event.ListDataEvent r3;
        int $i0, $i1;
        com.jidesoft.swing.CheckBoxListSelectionModel $r2;
        com.jidesoft.swing.CheckBoxList$Handler r0;

        r0 := @this: com.jidesoft.swing.CheckBoxList$Handler;

        r3 := @parameter0: javax.swing.event.ListDataEvent;

        $r1 = r0.<com.jidesoft.swing.CheckBoxList$Handler: com.jidesoft.swing.CheckBoxList _list>;

        $r2 = virtualinvoke $r1.<com.jidesoft.swing.CheckBoxList: com.jidesoft.swing.CheckBoxListSelectionModel getCheckBoxListSelectionModel()>();

        if $r2 == null goto label1;

        $i0 = virtualinvoke r3.<javax.swing.event.ListDataEvent: int getIndex0()>();

        $i1 = virtualinvoke r3.<javax.swing.event.ListDataEvent: int getIndex1()>();

        interfaceinvoke $r2.<javax.swing.ListSelectionModel: void removeIndexInterval(int,int)>($i0, $i1);

     label1:
        return;
    }

    public void contentsChanged(javax.swing.event.ListDataEvent)
    {
        javax.swing.event.ListDataEvent r1;
        com.jidesoft.swing.CheckBoxList$Handler r0;

        r0 := @this: com.jidesoft.swing.CheckBoxList$Handler;

        r1 := @parameter0: javax.swing.event.ListDataEvent;

        return;
    }
}
