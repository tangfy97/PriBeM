public class ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2 extends ucar.nc2.dt.TypedDatasetImpl implements ucar.nc2.dt.TrajectoryObsDataset, ucar.nc2.dt.TypedDatasetFactoryIF
{
    protected ucar.nc2.Variable trajVar;
    protected ucar.nc2.Dimension trajDim;
    protected ucar.nc2.Variable timeVar;
    protected ucar.nc2.Dimension timeDim;
    protected ucar.nc2.Structure recordVar;
    protected ucar.nc2.Variable latVar;
    protected ucar.nc2.Variable lonVar;
    protected ucar.nc2.Variable elevVar;
    protected java.lang.String trajDimName;
    protected java.lang.String trajVarName;
    protected java.lang.String timeDimName;
    protected java.lang.String timeVarName;
    protected java.lang.String latVarName;
    protected java.lang.String lonVarName;
    protected java.lang.String elevVarName;
    protected boolean isMultiTrajStructure;
    protected boolean isTimeDimensionFirst;
    protected ucar.nc2.dt.TrajectoryObsDataset backingTraj;

    public static boolean isValidFile(ucar.nc2.NetcdfFile)
    {
        java.util.StringTokenizer $r7;
        java.lang.String $r2, $r4, $r6, $r8, $r9;
        ucar.nc2.constants.FeatureType $r3;
        boolean $z0, $z1, $z2, $z3, $z4;
        ucar.nc2.Attribute $r1, $r5, r10;
        ucar.nc2.NetcdfFile r0;

        r0 := @parameter0: ucar.nc2.NetcdfFile;

        $r1 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute findGlobalAttributeIgnoreCase(java.lang.String)>("cdm_data_type");

        r10 = $r1;

        if $r1 != null goto label01;

        r10 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute findGlobalAttributeIgnoreCase(java.lang.String)>("cdm_datatype");

     label01:
        if r10 != null goto label02;

        return 0;

     label02:
        $z0 = virtualinvoke r10.<ucar.nc2.Attribute: boolean isString()>();

        if $z0 != 0 goto label03;

        return 0;

     label03:
        $r2 = virtualinvoke r10.<ucar.nc2.Attribute: java.lang.String getStringValue()>();

        if $r2 != null goto label04;

        return 0;

     label04:
        $r3 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType TRAJECTORY>;

        $r4 = virtualinvoke $r3.<ucar.nc2.constants.FeatureType: java.lang.String toString()>();

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r4);

        if $z1 != 0 goto label05;

        return 0;

     label05:
        $r5 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute findGlobalAttributeIgnoreCase(java.lang.String)>("Conventions");

        if $r5 != null goto label06;

        return 0;

     label06:
        $z2 = virtualinvoke $r5.<ucar.nc2.Attribute: boolean isString()>();

        if $z2 != 0 goto label07;

        return 0;

     label07:
        $r6 = virtualinvoke $r5.<ucar.nc2.Attribute: java.lang.String getStringValue()>();

        $r7 = new java.util.StringTokenizer;

        specialinvoke $r7.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r6, ",");

     label08:
        $z3 = virtualinvoke $r7.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z3 == 0 goto label10;

        $r8 = virtualinvoke $r7.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r9 = virtualinvoke $r8.<java.lang.String: java.lang.String trim()>();

        $z4 = virtualinvoke $r9.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Unidata Observation Dataset v1.0");

        if $z4 == 0 goto label09;

        return 1;

     label09:
        goto label08;

     label10:
        return 0;
    }

    public boolean isMine(ucar.nc2.dataset.NetcdfDataset)
    {
        ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2 r1;
        ucar.nc2.dataset.NetcdfDataset r0;
        boolean $z0;

        r1 := @this: ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        $z0 = staticinvoke <ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: boolean isValidFile(ucar.nc2.NetcdfFile)>(r0);

        return $z0;
    }

    public ucar.nc2.dt.TypedDataset open(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.util.CancelTask, java.lang.StringBuilder) throws java.io.IOException
    {
        ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2 r2;
        ucar.nc2.util.CancelTask r3;
        ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset $r0;
        java.lang.StringBuilder r4;
        ucar.nc2.dataset.NetcdfDataset r1;

        r2 := @this: ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r3 := @parameter1: ucar.nc2.util.CancelTask;

        r4 := @parameter2: java.lang.StringBuilder;

        $r0 = new ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset;

        specialinvoke $r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset: void <init>(ucar.nc2.dataset.NetcdfDataset)>(r1);

        return $r0;
    }

    public ucar.nc2.constants.FeatureType getScientificDataType()
    {
        ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2 r1;
        ucar.nc2.constants.FeatureType $r0;

        r1 := @this: ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2;

        $r0 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType TRAJECTORY>;

        return $r0;
    }

    public void <init>()
    {
        ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2 r0;

        r0 := @this: ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2;

        specialinvoke r0.<ucar.nc2.dt.TypedDatasetImpl: void <init>()>();

        return;
    }

    public void <init>(ucar.nc2.dataset.NetcdfDataset) throws java.io.IOException
    {
        ucar.nc2.constants.AxisType $r2, $r13, $r34, $r37;
        ucar.nc2.Group $r53, $r57, $r61, $r65, $r69, $r73, $r77, $r82, $r85, $r88, $r91, $r94;
        ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2 r0;
        ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$Config $r81;
        java.lang.StringBuilder $r19, $r20, $r21, $r22, $r111, $r112, $r113, $r114;
        java.lang.String $r8, $r12, $r23, $r33, $r41, $r43, $r45, $r47, $r54, $r58, $r62, $r66, $r70, $r74, $r78, $r83, $r86, $r89, $r92, $r95, $r101, $r102, $r108, $r115, $r117;
        ucar.nc2.Dimension $r10, $r11, $r25, $r26, $r28, $r29, $r31, $r32, $r40, $r55, $r63, $r84, $r106, $r107;
        ucar.nc2.dataset.NetcdfDataset r1, $r51, $r56, $r60, $r64, $r68, $r72, $r76;
        ucar.nc2.dt.TrajectoryObsDataset $r50, $r97;
        boolean $z0, $z1, $z2, $z3;
        ucar.nc2.dt.trajectory.MultiTrajectoryObsDataset $r49, $r52;
        java.util.List $r6, $r17;
        ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset $r80, $r98;
        int $i0, $i1;
        ucar.nc2.Variable $r3, $r4, $r5, $r7, $r9, $r14, $r15, $r16, $r35, $r36, $r38, $r39, $r42, $r44, $r46, $r48, $r59, $r67, $r71, $r75, $r79, $r87, $r90, $r93, $r96, $r99, $r103;
        java.lang.IllegalArgumentException $r18, $r100, $r104, $r109, $r110, $r116;
        java.lang.Object $r24, $r27, $r30, $r105;

        r0 := @this: ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        specialinvoke r0.<ucar.nc2.dt.TypedDatasetImpl: void <init>(ucar.nc2.dataset.NetcdfDataset)>(r1);

        $r2 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Time>;

        $r3 = staticinvoke <ucar.nc2.dt.point.UnidataObsDatasetHelper: ucar.nc2.Variable getCoordinate(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r1, $r2);

        r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: ucar.nc2.Variable timeVar> = $r3;

        $r4 = r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: ucar.nc2.Variable timeVar>;

        if $r4 != null goto label01;

        $r116 = new java.lang.IllegalArgumentException;

        specialinvoke $r116.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Dataset has no time coordinate variable.");

        throw $r116;

     label01:
        $r5 = r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: ucar.nc2.Variable timeVar>;

        $r6 = virtualinvoke $r5.<ucar.nc2.Variable: java.util.List getDimensions()>();

        $i0 = interfaceinvoke $r6.<java.util.List: int size()>();

        if $i0 == 1 goto label02;

        $r110 = new java.lang.IllegalArgumentException;

        $r111 = new java.lang.StringBuilder;

        specialinvoke $r111.<java.lang.StringBuilder: void <init>()>();

        $r112 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dataset time variable does not have exactly one (1) dimension [");

        $r113 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r114 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("].");

        $r115 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r110.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r115);

        throw $r110;

     label02:
        $r7 = r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: ucar.nc2.Variable timeVar>;

        $r8 = virtualinvoke $r7.<ucar.nc2.Variable: java.lang.String getName()>();

        r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: java.lang.String timeVarName> = $r8;

        $r9 = r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: ucar.nc2.Variable timeVar>;

        $r10 = virtualinvoke $r9.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(0);

        r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: ucar.nc2.Dimension timeDim> = $r10;

        $r11 = r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: ucar.nc2.Dimension timeDim>;

        $r12 = virtualinvoke $r11.<ucar.nc2.Dimension: java.lang.String getName()>();

        r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: java.lang.String timeDimName> = $r12;

        $r13 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lat>;

        $r14 = staticinvoke <ucar.nc2.dt.point.UnidataObsDatasetHelper: ucar.nc2.Variable getCoordinate(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r1, $r13);

        r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: ucar.nc2.Variable latVar> = $r14;

        $r15 = r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: ucar.nc2.Variable latVar>;

        if $r15 != null goto label03;

        $r109 = new java.lang.IllegalArgumentException;

        specialinvoke $r109.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Dataset has no Latitude/GeoY variable.");

        throw $r109;

     label03:
        $r16 = r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: ucar.nc2.Variable latVar>;

        $r17 = virtualinvoke $r16.<ucar.nc2.Variable: java.util.List getDimensions()>();

        $i1 = interfaceinvoke $r17.<java.util.List: int size()>();

        if $i1 != 1 goto label04;

        r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: boolean isMultiTrajStructure> = 0;

     label04:
        if $i1 != 2 goto label07;

        r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: boolean isMultiTrajStructure> = 1;

        $r24 = interfaceinvoke $r17.<java.util.List: java.lang.Object get(int)>(0);

        $r26 = (ucar.nc2.Dimension) $r24;

        $r25 = r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: ucar.nc2.Dimension timeDim>;

        $z0 = virtualinvoke $r26.<ucar.nc2.Dimension: boolean equals(java.lang.Object)>($r25);

        if $z0 == 0 goto label05;

        r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: boolean isTimeDimensionFirst> = 1;

        $r105 = interfaceinvoke $r17.<java.util.List: java.lang.Object get(int)>(1);

        $r106 = (ucar.nc2.Dimension) $r105;

        r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: ucar.nc2.Dimension trajDim> = $r106;

        $r107 = r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: ucar.nc2.Dimension trajDim>;

        $r108 = virtualinvoke $r107.<ucar.nc2.Dimension: java.lang.String getName()>();

        r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: java.lang.String trajDimName> = $r108;

        goto label08;

     label05:
        $r27 = interfaceinvoke $r17.<java.util.List: java.lang.Object get(int)>(1);

        $r29 = (ucar.nc2.Dimension) $r27;

        $r28 = r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: ucar.nc2.Dimension timeDim>;

        $z1 = virtualinvoke $r29.<ucar.nc2.Dimension: boolean equals(java.lang.Object)>($r28);

        if $z1 != 0 goto label06;

        $r104 = new java.lang.IllegalArgumentException;

        specialinvoke $r104.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Dataset Latitude/GeoY variable has no time dimension. ");

        throw $r104;

     label06:
        r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: boolean isTimeDimensionFirst> = 0;

        $r30 = interfaceinvoke $r17.<java.util.List: java.lang.Object get(int)>(0);

        $r31 = (ucar.nc2.Dimension) $r30;

        r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: ucar.nc2.Dimension trajDim> = $r31;

        $r32 = r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: ucar.nc2.Dimension trajDim>;

        $r33 = virtualinvoke $r32.<ucar.nc2.Dimension: java.lang.String getName()>();

        r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: java.lang.String trajDimName> = $r33;

        goto label08;

     label07:
        $r18 = new java.lang.IllegalArgumentException;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dataset Latitude/GeoY variable does not have 1 or 2 dimensions [");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("].");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r23);

        throw $r18;

     label08:
        $z2 = r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: boolean isMultiTrajStructure>;

        if $z2 == 0 goto label09;

        $r101 = r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: java.lang.String trajDimName>;

        r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: java.lang.String trajVarName> = $r101;

        $r102 = r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: java.lang.String trajVarName>;

        $r103 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findTopVariable(java.lang.String)>($r102);

        r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: ucar.nc2.Variable trajVar> = $r103;

     label09:
        $r34 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lon>;

        $r35 = staticinvoke <ucar.nc2.dt.point.UnidataObsDatasetHelper: ucar.nc2.Variable getCoordinate(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r1, $r34);

        r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: ucar.nc2.Variable lonVar> = $r35;

        $r36 = r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: ucar.nc2.Variable lonVar>;

        if $r36 != null goto label10;

        $r100 = new java.lang.IllegalArgumentException;

        specialinvoke $r100.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Missing Longitude/GeoX coordinate variable.");

        throw $r100;

     label10:
        $r37 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Height>;

        $r38 = staticinvoke <ucar.nc2.dt.point.UnidataObsDatasetHelper: ucar.nc2.Variable getCoordinate(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r1, $r37);

        r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: ucar.nc2.Variable elevVar> = $r38;

        $r39 = r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: ucar.nc2.Variable timeVar>;

        $r40 = virtualinvoke $r39.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(0);

        $r41 = virtualinvoke $r40.<ucar.nc2.Dimension: java.lang.String getName()>();

        r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: java.lang.String timeDimName> = $r41;

        $r42 = r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: ucar.nc2.Variable timeVar>;

        $r43 = virtualinvoke $r42.<ucar.nc2.Variable: java.lang.String getName()>();

        r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: java.lang.String timeVarName> = $r43;

        $r44 = r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: ucar.nc2.Variable latVar>;

        $r45 = virtualinvoke $r44.<ucar.nc2.Variable: java.lang.String getName()>();

        r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: java.lang.String latVarName> = $r45;

        $r46 = r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: ucar.nc2.Variable lonVar>;

        $r47 = virtualinvoke $r46.<ucar.nc2.Variable: java.lang.String getName()>();

        r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: java.lang.String lonVarName> = $r47;

        $r48 = r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: ucar.nc2.Variable elevVar>;

        if $r48 == null goto label11;

        $r99 = r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: ucar.nc2.Variable elevVar>;

        $r117 = virtualinvoke $r99.<ucar.nc2.Variable: java.lang.String getName()>();

        goto label12;

     label11:
        $r117 = null;

     label12:
        r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: java.lang.String elevVarName> = $r117;

        $z3 = r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: boolean isMultiTrajStructure>;

        if $z3 != 0 goto label13;

        $r80 = new ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset;

        specialinvoke $r80.<ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset: void <init>(ucar.nc2.dataset.NetcdfDataset)>(r1);

        r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: ucar.nc2.dt.TrajectoryObsDataset backingTraj> = $r80;

        $r81 = new ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$Config;

        $r82 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group getRootGroup()>();

        $r83 = r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: java.lang.String timeDimName>;

        $r84 = virtualinvoke $r82.<ucar.nc2.Group: ucar.nc2.Dimension findDimension(java.lang.String)>($r83);

        $r85 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group getRootGroup()>();

        $r86 = r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: java.lang.String timeVarName>;

        $r87 = virtualinvoke $r85.<ucar.nc2.Group: ucar.nc2.Variable findVariable(java.lang.String)>($r86);

        $r88 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group getRootGroup()>();

        $r89 = r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: java.lang.String latVarName>;

        $r90 = virtualinvoke $r88.<ucar.nc2.Group: ucar.nc2.Variable findVariable(java.lang.String)>($r89);

        $r91 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group getRootGroup()>();

        $r92 = r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: java.lang.String lonVarName>;

        $r93 = virtualinvoke $r91.<ucar.nc2.Group: ucar.nc2.Variable findVariable(java.lang.String)>($r92);

        $r94 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group getRootGroup()>();

        $r95 = r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: java.lang.String elevVarName>;

        $r96 = virtualinvoke $r94.<ucar.nc2.Group: ucar.nc2.Variable findVariable(java.lang.String)>($r95);

        specialinvoke $r81.<ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$Config: void <init>(java.lang.String,ucar.nc2.Dimension,ucar.nc2.Variable,ucar.nc2.Variable,ucar.nc2.Variable,ucar.nc2.Variable)>("1Hz data", $r84, $r87, $r90, $r93, $r96);

        $r97 = r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: ucar.nc2.dt.TrajectoryObsDataset backingTraj>;

        $r98 = (ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset) $r97;

        virtualinvoke $r98.<ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset: void setTrajectoryInfo(ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$Config)>($r81);

        goto label14;

     label13:
        $r49 = new ucar.nc2.dt.trajectory.MultiTrajectoryObsDataset;

        specialinvoke $r49.<ucar.nc2.dt.trajectory.MultiTrajectoryObsDataset: void <init>(ucar.nc2.dataset.NetcdfDataset)>(r1);

        r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: ucar.nc2.dt.TrajectoryObsDataset backingTraj> = $r49;

        $r50 = r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: ucar.nc2.dt.TrajectoryObsDataset backingTraj>;

        $r52 = (ucar.nc2.dt.trajectory.MultiTrajectoryObsDataset) $r50;

        $r51 = r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: ucar.nc2.dataset.NetcdfDataset ncfile>;

        $r53 = virtualinvoke $r51.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group getRootGroup()>();

        $r54 = r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: java.lang.String trajDimName>;

        $r55 = virtualinvoke $r53.<ucar.nc2.Group: ucar.nc2.Dimension findDimension(java.lang.String)>($r54);

        $r56 = r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: ucar.nc2.dataset.NetcdfDataset ncfile>;

        $r57 = virtualinvoke $r56.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group getRootGroup()>();

        $r58 = r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: java.lang.String trajVarName>;

        $r59 = virtualinvoke $r57.<ucar.nc2.Group: ucar.nc2.Variable findVariable(java.lang.String)>($r58);

        $r60 = r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: ucar.nc2.dataset.NetcdfDataset ncfile>;

        $r61 = virtualinvoke $r60.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group getRootGroup()>();

        $r62 = r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: java.lang.String timeDimName>;

        $r63 = virtualinvoke $r61.<ucar.nc2.Group: ucar.nc2.Dimension findDimension(java.lang.String)>($r62);

        $r64 = r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: ucar.nc2.dataset.NetcdfDataset ncfile>;

        $r65 = virtualinvoke $r64.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group getRootGroup()>();

        $r66 = r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: java.lang.String timeVarName>;

        $r67 = virtualinvoke $r65.<ucar.nc2.Group: ucar.nc2.Variable findVariable(java.lang.String)>($r66);

        $r68 = r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: ucar.nc2.dataset.NetcdfDataset ncfile>;

        $r69 = virtualinvoke $r68.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group getRootGroup()>();

        $r70 = r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: java.lang.String latVarName>;

        $r71 = virtualinvoke $r69.<ucar.nc2.Group: ucar.nc2.Variable findVariable(java.lang.String)>($r70);

        $r72 = r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: ucar.nc2.dataset.NetcdfDataset ncfile>;

        $r73 = virtualinvoke $r72.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group getRootGroup()>();

        $r74 = r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: java.lang.String lonVarName>;

        $r75 = virtualinvoke $r73.<ucar.nc2.Group: ucar.nc2.Variable findVariable(java.lang.String)>($r74);

        $r76 = r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: ucar.nc2.dataset.NetcdfDataset ncfile>;

        $r77 = virtualinvoke $r76.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group getRootGroup()>();

        $r78 = r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: java.lang.String elevVarName>;

        $r79 = virtualinvoke $r77.<ucar.nc2.Group: ucar.nc2.Variable findVariable(java.lang.String)>($r78);

        virtualinvoke $r52.<ucar.nc2.dt.trajectory.MultiTrajectoryObsDataset: void setTrajectoryInfo(ucar.nc2.Dimension,ucar.nc2.Variable,ucar.nc2.Dimension,ucar.nc2.Variable,ucar.nc2.Variable,ucar.nc2.Variable,ucar.nc2.Variable)>($r55, $r59, $r63, $r67, $r71, $r75, $r79);

     label14:
        return;
    }

    public java.lang.String getDetailInfo()
    {
        ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2 r0;
        java.lang.String $r2;
        ucar.nc2.dt.TrajectoryObsDataset $r1;

        r0 := @this: ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2;

        $r1 = r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: ucar.nc2.dt.TrajectoryObsDataset backingTraj>;

        $r2 = interfaceinvoke $r1.<ucar.nc2.dt.TrajectoryObsDataset: java.lang.String getDetailInfo()>();

        return $r2;
    }

    public java.lang.String getTitle()
    {
        ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2 r0;
        java.lang.String $r2;
        ucar.nc2.dt.TrajectoryObsDataset $r1;

        r0 := @this: ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2;

        $r1 = r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: ucar.nc2.dt.TrajectoryObsDataset backingTraj>;

        $r2 = interfaceinvoke $r1.<ucar.nc2.dt.TrajectoryObsDataset: java.lang.String getTitle()>();

        return $r2;
    }

    public java.lang.String getDescription()
    {
        ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2 r0;
        java.lang.String $r2;
        ucar.nc2.dt.TrajectoryObsDataset $r1;

        r0 := @this: ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2;

        $r1 = r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: ucar.nc2.dt.TrajectoryObsDataset backingTraj>;

        $r2 = interfaceinvoke $r1.<ucar.nc2.dt.TrajectoryObsDataset: java.lang.String getDescription()>();

        return $r2;
    }

    public java.lang.String getLocation()
    {
        ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2 r0;
        java.lang.String $r2;
        ucar.nc2.dt.TrajectoryObsDataset $r1;

        r0 := @this: ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2;

        $r1 = r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: ucar.nc2.dt.TrajectoryObsDataset backingTraj>;

        $r2 = interfaceinvoke $r1.<ucar.nc2.dt.TrajectoryObsDataset: java.lang.String getLocationURI()>();

        return $r2;
    }

    protected void setStartDate()
    {
        ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2 r0;

        r0 := @this: ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2;

        return;
    }

    public java.util.Date getStartDate()
    {
        ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2 r0;
        ucar.nc2.dt.TrajectoryObsDataset $r1;
        java.util.Date $r2;

        r0 := @this: ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2;

        $r1 = r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: ucar.nc2.dt.TrajectoryObsDataset backingTraj>;

        $r2 = interfaceinvoke $r1.<ucar.nc2.dt.TrajectoryObsDataset: java.util.Date getStartDate()>();

        return $r2;
    }

    protected void setEndDate()
    {
        ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2 r0;

        r0 := @this: ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2;

        return;
    }

    public java.util.Date getEndDate()
    {
        ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2 r0;
        ucar.nc2.dt.TrajectoryObsDataset $r1;
        java.util.Date $r2;

        r0 := @this: ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2;

        $r1 = r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: ucar.nc2.dt.TrajectoryObsDataset backingTraj>;

        $r2 = interfaceinvoke $r1.<ucar.nc2.dt.TrajectoryObsDataset: java.util.Date getEndDate()>();

        return $r2;
    }

    protected void setBoundingBox()
    {
        ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2 r0;

        r0 := @this: ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2;

        return;
    }

    public ucar.unidata.geoloc.LatLonRect getBoundingBox()
    {
        ucar.unidata.geoloc.LatLonRect $r2;
        ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2 r0;
        ucar.nc2.dt.TrajectoryObsDataset $r1;

        r0 := @this: ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2;

        $r1 = r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: ucar.nc2.dt.TrajectoryObsDataset backingTraj>;

        $r2 = interfaceinvoke $r1.<ucar.nc2.dt.TrajectoryObsDataset: ucar.unidata.geoloc.LatLonRect getBoundingBox()>();

        return $r2;
    }

    public java.util.List getGlobalAttributes()
    {
        java.util.List $r2;
        ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2 r0;
        ucar.nc2.dt.TrajectoryObsDataset $r1;

        r0 := @this: ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2;

        $r1 = r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: ucar.nc2.dt.TrajectoryObsDataset backingTraj>;

        $r2 = interfaceinvoke $r1.<ucar.nc2.dt.TrajectoryObsDataset: java.util.List getGlobalAttributes()>();

        return $r2;
    }

    public ucar.nc2.Attribute findGlobalAttributeIgnoreCase(java.lang.String)
    {
        ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2 r0;
        ucar.nc2.Attribute $r3;
        java.lang.String r1;
        ucar.nc2.dt.TrajectoryObsDataset $r2;

        r0 := @this: ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: ucar.nc2.dt.TrajectoryObsDataset backingTraj>;

        $r3 = interfaceinvoke $r2.<ucar.nc2.dt.TrajectoryObsDataset: ucar.nc2.Attribute findGlobalAttributeIgnoreCase(java.lang.String)>(r1);

        return $r3;
    }

    public java.util.List getDataVariables()
    {
        java.util.List $r2;
        ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2 r0;
        ucar.nc2.dt.TrajectoryObsDataset $r1;

        r0 := @this: ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2;

        $r1 = r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: ucar.nc2.dt.TrajectoryObsDataset backingTraj>;

        $r2 = interfaceinvoke $r1.<ucar.nc2.dt.TrajectoryObsDataset: java.util.List getDataVariables()>();

        return $r2;
    }

    public ucar.nc2.VariableSimpleIF getDataVariable(java.lang.String)
    {
        ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2 r0;
        ucar.nc2.VariableSimpleIF $r3;
        java.lang.String r1;
        ucar.nc2.dt.TrajectoryObsDataset $r2;

        r0 := @this: ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: ucar.nc2.dt.TrajectoryObsDataset backingTraj>;

        $r3 = interfaceinvoke $r2.<ucar.nc2.dt.TrajectoryObsDataset: ucar.nc2.VariableSimpleIF getDataVariable(java.lang.String)>(r1);

        return $r3;
    }

    public ucar.nc2.NetcdfFile getNetcdfFile()
    {
        ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2 r0;
        ucar.nc2.NetcdfFile $r2;
        ucar.nc2.dt.TrajectoryObsDataset $r1;

        r0 := @this: ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2;

        $r1 = r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: ucar.nc2.dt.TrajectoryObsDataset backingTraj>;

        $r2 = interfaceinvoke $r1.<ucar.nc2.dt.TrajectoryObsDataset: ucar.nc2.NetcdfFile getNetcdfFile()>();

        return $r2;
    }

    public void close() throws java.io.IOException
    {
        ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2 r0;
        ucar.nc2.dt.TrajectoryObsDataset $r1;

        r0 := @this: ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2;

        $r1 = r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: ucar.nc2.dt.TrajectoryObsDataset backingTraj>;

        interfaceinvoke $r1.<ucar.nc2.dt.TrajectoryObsDataset: void close()>();

        return;
    }

    public java.util.List getTrajectoryIds()
    {
        java.util.List $r2;
        ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2 r0;
        ucar.nc2.dt.TrajectoryObsDataset $r1;

        r0 := @this: ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2;

        $r1 = r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: ucar.nc2.dt.TrajectoryObsDataset backingTraj>;

        $r2 = interfaceinvoke $r1.<ucar.nc2.dt.TrajectoryObsDataset: java.util.List getTrajectoryIds()>();

        return $r2;
    }

    public java.util.List getTrajectories()
    {
        java.util.List $r2;
        ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2 r0;
        ucar.nc2.dt.TrajectoryObsDataset $r1;

        r0 := @this: ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2;

        $r1 = r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: ucar.nc2.dt.TrajectoryObsDataset backingTraj>;

        $r2 = interfaceinvoke $r1.<ucar.nc2.dt.TrajectoryObsDataset: java.util.List getTrajectories()>();

        return $r2;
    }

    public ucar.nc2.dt.TrajectoryObsDatatype getTrajectory(java.lang.String)
    {
        ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2 r0;
        java.lang.String r1;
        ucar.nc2.dt.TrajectoryObsDatatype $r3;
        ucar.nc2.dt.TrajectoryObsDataset $r2;

        r0 := @this: ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: ucar.nc2.dt.TrajectoryObsDataset backingTraj>;

        $r3 = interfaceinvoke $r2.<ucar.nc2.dt.TrajectoryObsDataset: ucar.nc2.dt.TrajectoryObsDatatype getTrajectory(java.lang.String)>(r1);

        return $r3;
    }

    public boolean syncExtend()
    {
        ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2 r0;
        ucar.nc2.dt.TrajectoryObsDataset $r1;
        boolean $z0;

        r0 := @this: ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2;

        $r1 = r0.<ucar.nc2.dt.trajectory.UnidataTrajectoryObsDataset2: ucar.nc2.dt.TrajectoryObsDataset backingTraj>;

        $z0 = interfaceinvoke $r1.<ucar.nc2.dt.TrajectoryObsDataset: boolean syncExtend()>();

        return $z0;
    }
}
