public class org.apache.tika.parser.image.PSDParser extends org.apache.tika.parser.AbstractParser
{
    private static final long serialVersionUID;
    private static final java.util.Set SUPPORTED_TYPES;

    public void <init>()
    {
        org.apache.tika.parser.image.PSDParser r0;

        r0 := @this: org.apache.tika.parser.image.PSDParser;

        specialinvoke r0.<org.apache.tika.parser.AbstractParser: void <init>()>();

        return;
    }

    public java.util.Set getSupportedTypes(org.apache.tika.parser.ParseContext)
    {
        org.apache.tika.parser.image.PSDParser r1;
        java.util.Set $r0;
        org.apache.tika.parser.ParseContext r2;

        r1 := @this: org.apache.tika.parser.image.PSDParser;

        r2 := @parameter0: org.apache.tika.parser.ParseContext;

        $r0 = <org.apache.tika.parser.image.PSDParser: java.util.Set SUPPORTED_TYPES>;

        return $r0;
    }

    public void parse(java.io.InputStream, org.xml.sax.ContentHandler, org.apache.tika.metadata.Metadata, org.apache.tika.parser.ParseContext) throws java.io.IOException, org.xml.sax.SAXException, org.apache.tika.exception.TikaException
    {
        byte[] r0, $r2;
        org.apache.tika.metadata.Metadata r3;
        org.apache.tika.metadata.Property $r4, $r5, $r6, $r11;
        byte $b0, $b1, $b2, $b3, $b19;
        org.apache.tika.parser.ParseContext r19;
        java.lang.StringBuilder $r15, $r16, $r22;
        long $l11, $l16, $l17, l18;
        org.apache.tika.exception.TikaException $r21, $r23;
        int $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12, $i13, $i14, $i15, $i20, $i21, $i22, $i23, $i24;
        java.lang.String $r7, $r12, $r17;
        org.xml.sax.ContentHandler r9;
        org.apache.tika.parser.image.PSDParser$ResourceBlock $r24;
        org.apache.tika.sax.XHTMLContentHandler $r25;
        org.apache.tika.parser.image.PSDParser r18;
        java.io.InputStream r1;

        r18 := @this: org.apache.tika.parser.image.PSDParser;

        r1 := @parameter0: java.io.InputStream;

        r9 := @parameter1: org.xml.sax.ContentHandler;

        r3 := @parameter2: org.apache.tika.metadata.Metadata;

        r19 := @parameter3: org.apache.tika.parser.ParseContext;

        r0 = newarray (byte)[4];

        staticinvoke <org.apache.poi.util.IOUtils: int readFully(java.io.InputStream,byte[])>(r1, r0);

        $b0 = r0[0];

        $i20 = (int) $b0;

        if $i20 != 56 goto label01;

        $b1 = r0[1];

        $i21 = (int) $b1;

        if $i21 != 66 goto label01;

        $b2 = r0[2];

        $i22 = (int) $b2;

        if $i22 != 80 goto label01;

        $b3 = r0[3];

        $i23 = (int) $b3;

        if $i23 != 83 goto label01;

        goto label02;

     label01:
        $r21 = new org.apache.tika.exception.TikaException;

        specialinvoke $r21.<org.apache.tika.exception.TikaException: void <init>(java.lang.String)>("PSD/PSB magic signature invalid");

        throw $r21;

     label02:
        $i4 = staticinvoke <org.apache.tika.io.EndianUtils: int readUShortBE(java.io.InputStream)>(r1);

        if $i4 == 1 goto label04;

        if $i4 != 2 goto label03;

        goto label04;

     label03:
        $r23 = new org.apache.tika.exception.TikaException;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid PSD/PSB version ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<org.apache.tika.exception.TikaException: void <init>(java.lang.String)>($r17);

        throw $r23;

     label04:
        $r2 = newarray (byte)[6];

        staticinvoke <org.apache.poi.util.IOUtils: int readFully(java.io.InputStream,byte[])>(r1, $r2);

        staticinvoke <org.apache.tika.io.EndianUtils: int readUShortBE(java.io.InputStream)>(r1);

        $i5 = staticinvoke <org.apache.tika.io.EndianUtils: int readIntBE(java.io.InputStream)>(r1);

        $i6 = staticinvoke <org.apache.tika.io.EndianUtils: int readIntBE(java.io.InputStream)>(r1);

        $r4 = <org.apache.tika.metadata.TIFF: org.apache.tika.metadata.Property IMAGE_LENGTH>;

        virtualinvoke r3.<org.apache.tika.metadata.Metadata: void set(org.apache.tika.metadata.Property,int)>($r4, $i5);

        $r5 = <org.apache.tika.metadata.TIFF: org.apache.tika.metadata.Property IMAGE_WIDTH>;

        virtualinvoke r3.<org.apache.tika.metadata.Metadata: void set(org.apache.tika.metadata.Property,int)>($r5, $i6);

        $i7 = staticinvoke <org.apache.tika.io.EndianUtils: int readUShortBE(java.io.InputStream)>(r1);

        $r6 = <org.apache.tika.metadata.TIFF: org.apache.tika.metadata.Property BITS_PER_SAMPLE>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i7);

        virtualinvoke r3.<org.apache.tika.metadata.Metadata: void set(org.apache.tika.metadata.Property,java.lang.String)>($r6, $r7);

        staticinvoke <org.apache.tika.io.EndianUtils: int readUShortBE(java.io.InputStream)>(r1);

        $i8 = staticinvoke <org.apache.tika.io.EndianUtils: int readIntBE(java.io.InputStream)>(r1);

        $l16 = (long) $i8;

        virtualinvoke r1.<java.io.InputStream: long skip(long)>($l16);

        $i9 = staticinvoke <org.apache.tika.io.EndianUtils: int readIntBE(java.io.InputStream)>(r1);

        $l17 = (long) $i9;

        l18 = 0L;

     label05:
        $b19 = l18 cmp $l17;

        $i24 = (int) $b19;

        if $i24 >= 0 goto label10;

        $r24 = new org.apache.tika.parser.image.PSDParser$ResourceBlock;

        specialinvoke $r24.<org.apache.tika.parser.image.PSDParser$ResourceBlock: void <init>(java.io.InputStream,org.apache.tika.parser.image.PSDParser$1)>(r1, null);

        $i10 = staticinvoke <org.apache.tika.parser.image.PSDParser$ResourceBlock: int access$100(org.apache.tika.parser.image.PSDParser$ResourceBlock)>($r24);

        $l11 = (long) $i10;

        l18 = l18 + $l11;

        $i12 = staticinvoke <org.apache.tika.parser.image.PSDParser$ResourceBlock: int access$200(org.apache.tika.parser.image.PSDParser$ResourceBlock)>($r24);

        if $i12 != 1008 goto label06;

        $r11 = <org.apache.tika.metadata.TikaCoreProperties: org.apache.tika.metadata.Property DESCRIPTION>;

        $r12 = staticinvoke <org.apache.tika.parser.image.PSDParser$ResourceBlock: java.lang.String access$300(org.apache.tika.parser.image.PSDParser$ResourceBlock)>($r24);

        virtualinvoke r3.<org.apache.tika.metadata.Metadata: void add(org.apache.tika.metadata.Property,java.lang.String)>($r11, $r12);

        goto label09;

     label06:
        $i13 = staticinvoke <org.apache.tika.parser.image.PSDParser$ResourceBlock: int access$200(org.apache.tika.parser.image.PSDParser$ResourceBlock)>($r24);

        if $i13 != 1058 goto label07;

        goto label09;

     label07:
        $i14 = staticinvoke <org.apache.tika.parser.image.PSDParser$ResourceBlock: int access$200(org.apache.tika.parser.image.PSDParser$ResourceBlock)>($r24);

        if $i14 != 1059 goto label08;

        goto label09;

     label08:
        $i15 = staticinvoke <org.apache.tika.parser.image.PSDParser$ResourceBlock: int access$200(org.apache.tika.parser.image.PSDParser$ResourceBlock)>($r24);

        if $i15 != 1060 goto label09;

     label09:
        goto label05;

     label10:
        $r25 = new org.apache.tika.sax.XHTMLContentHandler;

        specialinvoke $r25.<org.apache.tika.sax.XHTMLContentHandler: void <init>(org.xml.sax.ContentHandler,org.apache.tika.metadata.Metadata)>(r9, r3);

        virtualinvoke $r25.<org.apache.tika.sax.XHTMLContentHandler: void startDocument()>();

        virtualinvoke $r25.<org.apache.tika.sax.XHTMLContentHandler: void endDocument()>();

        return;
    }

    static void <clinit>()
    {
        java.util.HashSet $r0;
        java.util.List $r3;
        org.apache.tika.mime.MediaType[] $r1;
        java.util.Set $r4;
        org.apache.tika.mime.MediaType $r2;

        <org.apache.tika.parser.image.PSDParser: long serialVersionUID> = 883387734607994914L;

        $r0 = new java.util.HashSet;

        $r1 = newarray (org.apache.tika.mime.MediaType)[1];

        $r2 = staticinvoke <org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType image(java.lang.String)>("vnd.adobe.photoshop");

        $r1[0] = $r2;

        $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1);

        specialinvoke $r0.<java.util.HashSet: void <init>(java.util.Collection)>($r3);

        $r4 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r0);

        <org.apache.tika.parser.image.PSDParser: java.util.Set SUPPORTED_TYPES> = $r4;

        return;
    }
}
