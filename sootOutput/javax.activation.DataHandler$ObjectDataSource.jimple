class javax.activation.DataHandler$ObjectDataSource extends java.lang.Object implements javax.activation.DataSource
{
    private final java.lang.Object data;
    private final java.lang.String mimeType;
    final javax.activation.DataHandler this$0;

    public void <init>(javax.activation.DataHandler, java.lang.Object, java.lang.String)
    {
        java.lang.Object r2;
        java.lang.String r3;
        javax.activation.DataHandler$ObjectDataSource r0;
        javax.activation.DataHandler r1;

        r0 := @this: javax.activation.DataHandler$ObjectDataSource;

        r1 := @parameter0: javax.activation.DataHandler;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.String;

        r0.<javax.activation.DataHandler$ObjectDataSource: javax.activation.DataHandler this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<javax.activation.DataHandler$ObjectDataSource: java.lang.Object data> = r2;

        r0.<javax.activation.DataHandler$ObjectDataSource: java.lang.String mimeType> = r3;

        return;
    }

    public java.lang.String getName()
    {
        javax.activation.DataHandler$ObjectDataSource r0;

        r0 := @this: javax.activation.DataHandler$ObjectDataSource;

        return null;
    }

    public java.lang.String getContentType()
    {
        java.lang.String $r1;
        javax.activation.DataHandler$ObjectDataSource r0;

        r0 := @this: javax.activation.DataHandler$ObjectDataSource;

        $r1 = r0.<javax.activation.DataHandler$ObjectDataSource: java.lang.String mimeType>;

        return $r1;
    }

    public java.io.InputStream getInputStream() throws java.io.IOException
    {
        java.io.PipedOutputStream $r4;
        javax.activation.DataHandler $r1;
        javax.activation.DataHandler$ObjectDataSource$1 $r5;
        java.io.PipedInputStream $r3;
        javax.activation.UnsupportedDataTypeException $r6;
        javax.activation.DataContentHandler $r2;
        java.lang.String $r7;
        javax.activation.DataHandler$ObjectDataSource r0;

        r0 := @this: javax.activation.DataHandler$ObjectDataSource;

        $r1 = r0.<javax.activation.DataHandler$ObjectDataSource: javax.activation.DataHandler this$0>;

        $r2 = staticinvoke <javax.activation.DataHandler: javax.activation.DataContentHandler access$200(javax.activation.DataHandler)>($r1);

        if $r2 != null goto label1;

        $r6 = new javax.activation.UnsupportedDataTypeException;

        $r7 = r0.<javax.activation.DataHandler$ObjectDataSource: java.lang.String mimeType>;

        specialinvoke $r6.<javax.activation.UnsupportedDataTypeException: void <init>(java.lang.String)>($r7);

        throw $r6;

     label1:
        $r3 = new java.io.PipedInputStream;

        specialinvoke $r3.<java.io.PipedInputStream: void <init>()>();

        $r4 = new java.io.PipedOutputStream;

        specialinvoke $r4.<java.io.PipedOutputStream: void <init>(java.io.PipedInputStream)>($r3);

        $r5 = new javax.activation.DataHandler$ObjectDataSource$1;

        specialinvoke $r5.<javax.activation.DataHandler$ObjectDataSource$1: void <init>(javax.activation.DataHandler$ObjectDataSource,java.lang.String,javax.activation.DataContentHandler,java.io.PipedOutputStream)>(r0, "DataHandler Pipe Pump", $r2, $r4);

        virtualinvoke $r5.<java.lang.Thread: void start()>();

        return $r3;
    }

    public java.io.OutputStream getOutputStream() throws java.io.IOException
    {
        javax.activation.DataHandler$ObjectDataSource r0;

        r0 := @this: javax.activation.DataHandler$ObjectDataSource;

        return null;
    }

    static java.lang.String access$000(javax.activation.DataHandler$ObjectDataSource)
    {
        java.lang.String $r1;
        javax.activation.DataHandler$ObjectDataSource r0;

        r0 := @parameter0: javax.activation.DataHandler$ObjectDataSource;

        $r1 = r0.<javax.activation.DataHandler$ObjectDataSource: java.lang.String mimeType>;

        return $r1;
    }

    static java.lang.Object access$100(javax.activation.DataHandler$ObjectDataSource)
    {
        java.lang.Object $r1;
        javax.activation.DataHandler$ObjectDataSource r0;

        r0 := @parameter0: javax.activation.DataHandler$ObjectDataSource;

        $r1 = r0.<javax.activation.DataHandler$ObjectDataSource: java.lang.Object data>;

        return $r1;
    }
}
