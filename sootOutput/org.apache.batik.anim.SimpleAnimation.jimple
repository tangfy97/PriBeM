public class org.apache.batik.anim.SimpleAnimation extends org.apache.batik.anim.InterpolatingAnimation
{
    protected org.apache.batik.anim.values.AnimatableValue[] values;
    protected org.apache.batik.anim.values.AnimatableValue 'from';
    protected org.apache.batik.anim.values.AnimatableValue 'to';
    protected org.apache.batik.anim.values.AnimatableValue by;

    public void <init>(org.apache.batik.anim.timing.TimedElement, org.apache.batik.dom.anim.AnimatableElement, int, float[], float[], boolean, boolean, org.apache.batik.anim.values.AnimatableValue[], org.apache.batik.anim.values.AnimatableValue, org.apache.batik.anim.values.AnimatableValue, org.apache.batik.anim.values.AnimatableValue)
    {
        java.lang.Object[] $r11, $r23, $r25, $r29;
        float[] r3, r4, $r8, $r9, $r10, $r15, $r16, $r17, $r18, $r19, $r20, $r22, $r33, r34;
        org.apache.batik.anim.AnimationException $r12, $r24, $r26, $r30;
        org.apache.batik.anim.values.AnimatableValue[] r32;
        org.apache.batik.anim.timing.TimedElement r1;
        org.apache.batik.anim.SimpleAnimation r0;
        boolean z0, z1, $z2;
        org.apache.batik.dom.anim.AnimatableElement r2;
        float $f0, $f1, $f2, $f3, $f4, $f5, f6, $f7, $f8, $f9, $f10, $f11;
        org.apache.batik.anim.values.AnimatableValue r5, r6, r7, $r13, $r14, $r21, $r27, $r28, $r31;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16, i17, i18, i19, i20, i21;

        r0 := @this: org.apache.batik.anim.SimpleAnimation;

        r1 := @parameter0: org.apache.batik.anim.timing.TimedElement;

        r2 := @parameter1: org.apache.batik.dom.anim.AnimatableElement;

        i0 := @parameter2: int;

        r3 := @parameter3: float[];

        r4 := @parameter4: float[];

        z0 := @parameter5: boolean;

        z1 := @parameter6: boolean;

        r32 := @parameter7: org.apache.batik.anim.values.AnimatableValue[];

        r5 := @parameter8: org.apache.batik.anim.values.AnimatableValue;

        r6 := @parameter9: org.apache.batik.anim.values.AnimatableValue;

        r7 := @parameter10: org.apache.batik.anim.values.AnimatableValue;

        specialinvoke r0.<org.apache.batik.anim.InterpolatingAnimation: void <init>(org.apache.batik.anim.timing.TimedElement,org.apache.batik.dom.anim.AnimatableElement,int,float[],float[],boolean,boolean)>(r1, r2, i0, r3, r4, z0, z1);

        r0.<org.apache.batik.anim.SimpleAnimation: org.apache.batik.anim.values.AnimatableValue 'from'> = r5;

        r0.<org.apache.batik.anim.SimpleAnimation: org.apache.batik.anim.values.AnimatableValue 'to'> = r6;

        r0.<org.apache.batik.anim.SimpleAnimation: org.apache.batik.anim.values.AnimatableValue by> = r7;

        if r32 != null goto label06;

        if r5 == null goto label03;

        r32 = newarray (org.apache.batik.anim.values.AnimatableValue)[2];

        r32[0] = r5;

        if r6 == null goto label01;

        r32[1] = r6;

        goto label06;

     label01:
        if r7 == null goto label02;

        $r31 = virtualinvoke r5.<org.apache.batik.anim.values.AnimatableValue: org.apache.batik.anim.values.AnimatableValue interpolate(org.apache.batik.anim.values.AnimatableValue,org.apache.batik.anim.values.AnimatableValue,float,org.apache.batik.anim.values.AnimatableValue,int)>(null, null, 0.0F, r7, 1);

        r32[1] = $r31;

        goto label06;

     label02:
        $r29 = newarray (java.lang.Object)[1];

        $r29[0] = null;

        $r30 = virtualinvoke r1.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.AnimationException createException(java.lang.String,java.lang.Object[])>("values.to.by.missing", $r29);

        throw $r30;

     label03:
        if r6 == null goto label04;

        r32 = newarray (org.apache.batik.anim.values.AnimatableValue)[2];

        $r28 = interfaceinvoke r2.<org.apache.batik.dom.anim.AnimatableElement: org.apache.batik.anim.values.AnimatableValue getUnderlyingValue()>();

        r32[0] = $r28;

        r32[1] = r6;

        r0.<org.apache.batik.anim.InterpolatingAnimation: boolean cumulative> = 0;

        r0.<org.apache.batik.anim.AbstractAnimation: boolean toAnimation> = 1;

        goto label06;

     label04:
        if r7 == null goto label05;

        r0.<org.apache.batik.anim.InterpolatingAnimation: boolean additive> = 1;

        r32 = newarray (org.apache.batik.anim.values.AnimatableValue)[2];

        $r27 = virtualinvoke r7.<org.apache.batik.anim.values.AnimatableValue: org.apache.batik.anim.values.AnimatableValue getZeroValue()>();

        r32[0] = $r27;

        r32[1] = r7;

        goto label06;

     label05:
        $r25 = newarray (java.lang.Object)[1];

        $r25[0] = null;

        $r26 = virtualinvoke r1.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.AnimationException createException(java.lang.String,java.lang.Object[])>("values.to.by.missing", $r25);

        throw $r26;

     label06:
        r0.<org.apache.batik.anim.SimpleAnimation: org.apache.batik.anim.values.AnimatableValue[] values> = r32;

        $r33 = r0.<org.apache.batik.anim.InterpolatingAnimation: float[] keyTimes>;

        if $r33 == null goto label07;

        if i0 == 2 goto label07;

        $r22 = r0.<org.apache.batik.anim.InterpolatingAnimation: float[] keyTimes>;

        $i12 = lengthof $r22;

        $i11 = lengthof r32;

        if $i12 == $i11 goto label21;

        $r23 = newarray (java.lang.Object)[2];

        $r23[0] = null;

        $r23[1] = "keyTimes";

        $r24 = virtualinvoke r1.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.AnimationException createException(java.lang.String,java.lang.Object[])>("attribute.malformed", $r23);

        throw $r24;

     label07:
        if i0 == 1 goto label08;

        if i0 == 3 goto label08;

        if i0 != 2 goto label13;

        $r21 = r32[0];

        $z2 = virtualinvoke $r21.<org.apache.batik.anim.values.AnimatableValue: boolean canPace()>();

        if $z2 != 0 goto label13;

     label08:
        $i13 = lengthof r32;

        if $i13 != 1 goto label09;

        $i14 = 2;

        goto label10;

     label09:
        $i14 = lengthof r32;

     label10:
        i15 = $i14;

        $r8 = newarray (float)[$i14];

        r0.<org.apache.batik.anim.InterpolatingAnimation: float[] keyTimes> = $r8;

        i16 = 0;

        goto label12;

     label11:
        $r9 = r0.<org.apache.batik.anim.InterpolatingAnimation: float[] keyTimes>;

        $f1 = (float) i16;

        $i1 = i15 - 1;

        $f0 = (float) $i1;

        $f2 = $f1 / $f0;

        $r9[i16] = $f2;

        i16 = i16 + 1;

     label12:
        if i16 < i15 goto label11;

        goto label21;

     label13:
        if i0 != 0 goto label16;

        i17 = lengthof r32;

        $r19 = newarray (float)[i17];

        r0.<org.apache.batik.anim.InterpolatingAnimation: float[] keyTimes> = $r19;

        i18 = 0;

        goto label15;

     label14:
        $r20 = r0.<org.apache.batik.anim.InterpolatingAnimation: float[] keyTimes>;

        $f10 = (float) i18;

        $f9 = (float) i17;

        $f11 = $f10 / $f9;

        $r20[i18] = $f11;

        i18 = i18 + 1;

     label15:
        if i18 < i17 goto label14;

        goto label21;

     label16:
        i19 = lengthof r32;

        r34 = newarray (float)[i19];

        r34[0] = 0.0F;

        i20 = 1;

        goto label18;

     label17:
        $i6 = i20 - 1;

        $f3 = r34[$i6];

        $i7 = i20 - 1;

        $r14 = r32[$i7];

        $r13 = r32[i20];

        $f4 = virtualinvoke $r14.<org.apache.batik.anim.values.AnimatableValue: float distanceTo(org.apache.batik.anim.values.AnimatableValue)>($r13);

        $f5 = $f3 + $f4;

        r34[i20] = $f5;

        i20 = i20 + 1;

     label18:
        if i20 < i19 goto label17;

        $i8 = i19 - 1;

        f6 = r34[$i8];

        $r15 = newarray (float)[i19];

        r0.<org.apache.batik.anim.InterpolatingAnimation: float[] keyTimes> = $r15;

        $r16 = r0.<org.apache.batik.anim.InterpolatingAnimation: float[] keyTimes>;

        $r16[0] = 0.0F;

        i21 = 1;

        goto label20;

     label19:
        $r17 = r0.<org.apache.batik.anim.InterpolatingAnimation: float[] keyTimes>;

        $f7 = r34[i21];

        $f8 = $f7 / f6;

        $r17[i21] = $f8;

        i21 = i21 + 1;

     label20:
        $i9 = i19 - 1;

        if i21 < $i9 goto label19;

        $r18 = r0.<org.apache.batik.anim.InterpolatingAnimation: float[] keyTimes>;

        $i10 = i19 - 1;

        $r18[$i10] = 1.0F;

     label21:
        if i0 != 3 goto label22;

        $i5 = lengthof r4;

        $r10 = r0.<org.apache.batik.anim.InterpolatingAnimation: float[] keyTimes>;

        $i2 = lengthof $r10;

        $i3 = $i2 - 1;

        $i4 = $i3 * 4;

        if $i5 == $i4 goto label22;

        $r11 = newarray (java.lang.Object)[2];

        $r11[0] = null;

        $r11[1] = "keySplines";

        $r12 = virtualinvoke r1.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.AnimationException createException(java.lang.String,java.lang.Object[])>("attribute.malformed", $r11);

        throw $r12;

     label22:
        return;
    }

    protected void sampledAtUnitTime(float, int)
    {
        byte $b0, $b9, $b10, $b11, $b15;
        float[] $r8, $r13, $r17, $r18, $r19;
        org.apache.batik.ext.awt.geom.Cubic[] $r10;
        org.apache.batik.anim.values.AnimatableValue[] $r1, $r2, $r6, $r7, $r9, $r15;
        java.awt.geom.Point2D$Double $r12;
        org.apache.batik.anim.SimpleAnimation r0;
        boolean $z0, $z1;
        float f0, $f1, $f2, $f3, f4, $f5, $f6, $f7, $f8, $f9, $f10, f11, f12;
        org.apache.batik.anim.values.AnimatableValue $r3, $r4, $r5, r14, r16, r20;
        int $i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, $i12, $i13, $i14, i16, $i17, $i18, $i19, $i20, $i21, $i22;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;
        org.apache.batik.ext.awt.geom.Cubic r11;

        r0 := @this: org.apache.batik.anim.SimpleAnimation;

        f0 := @parameter0: float;

        i3 := @parameter1: int;

        f4 = 0.0F;

        $b0 = f0 cmpl 1.0F;

        if $b0 == 0 goto label12;

        i16 = 0;

        goto label02;

     label01:
        i16 = i16 + 1;

     label02:
        $r8 = r0.<org.apache.batik.anim.InterpolatingAnimation: float[] keyTimes>;

        $i6 = lengthof $r8;

        $i7 = $i6 - 1;

        if i16 >= $i7 goto label03;

        $r13 = r0.<org.apache.batik.anim.InterpolatingAnimation: float[] keyTimes>;

        $i14 = i16 + 1;

        $f3 = $r13[$i14];

        $b15 = f0 cmpl $f3;

        $i20 = (int) $b15;

        if $i20 >= 0 goto label01;

     label03:
        $r9 = r0.<org.apache.batik.anim.SimpleAnimation: org.apache.batik.anim.values.AnimatableValue[] values>;

        r14 = $r9[i16];

        $i8 = r0.<org.apache.batik.anim.InterpolatingAnimation: int calcMode>;

        if $i8 == 1 goto label04;

        $i12 = r0.<org.apache.batik.anim.InterpolatingAnimation: int calcMode>;

        if $i12 == 2 goto label04;

        $i13 = r0.<org.apache.batik.anim.InterpolatingAnimation: int calcMode>;

        if $i13 != 3 goto label10;

     label04:
        $r15 = r0.<org.apache.batik.anim.SimpleAnimation: org.apache.batik.anim.values.AnimatableValue[] values>;

        $i17 = i16 + 1;

        r16 = $r15[$i17];

        $r17 = r0.<org.apache.batik.anim.InterpolatingAnimation: float[] keyTimes>;

        $f5 = $r17[i16];

        $f6 = f0 - $f5;

        $r18 = r0.<org.apache.batik.anim.InterpolatingAnimation: float[] keyTimes>;

        $i18 = i16 + 1;

        $f7 = $r18[$i18];

        $r19 = r0.<org.apache.batik.anim.InterpolatingAnimation: float[] keyTimes>;

        $f8 = $r19[i16];

        $f9 = $f7 - $f8;

        $f10 = $f6 / $f9;

        f4 = $f10;

        $i19 = r0.<org.apache.batik.anim.InterpolatingAnimation: int calcMode>;

        if $i19 != 3 goto label11;

        $b9 = f0 cmpl 0.0F;

        if $b9 == 0 goto label11;

        $r10 = r0.<org.apache.batik.anim.InterpolatingAnimation: org.apache.batik.ext.awt.geom.Cubic[] keySplineCubics>;

        r11 = $r10[i16];

        f11 = 0.0F;

        f12 = 1.0F;

        goto label05;

     label05:
        $f1 = f11 + f12;

        $f2 = $f1 / 2.0F;

        $d0 = (double) $f2;

        $r12 = virtualinvoke r11.<org.apache.batik.ext.awt.geom.Cubic: java.awt.geom.Point2D$Double eval(double)>($d0);

        $d1 = virtualinvoke $r12.<java.awt.geom.Point2D$Double: double getX()>();

        $d2 = (double) $f10;

        $d3 = $d1 - $d2;

        $d4 = staticinvoke <java.lang.Math: double abs(double)>($d3);

        $d5 = (double) 0.001F;

        $b10 = $d4 cmpg $d5;

        $i21 = (int) $b10;

        if $i21 >= 0 goto label06;

        goto label09;

     label06:
        $d6 = (double) $f10;

        $b11 = $d1 cmpg $d6;

        $i22 = (int) $b11;

        if $i22 >= 0 goto label07;

        f11 = $f2;

        goto label08;

     label07:
        f12 = $f2;

     label08:
        goto label05;

     label09:
        $d7 = virtualinvoke $r12.<java.awt.geom.Point2D$Double: double getY()>();

        f4 = (float) $d7;

        goto label11;

     label10:
        r16 = null;

     label11:
        goto label13;

     label12:
        $r2 = r0.<org.apache.batik.anim.SimpleAnimation: org.apache.batik.anim.values.AnimatableValue[] values>;

        $r1 = r0.<org.apache.batik.anim.SimpleAnimation: org.apache.batik.anim.values.AnimatableValue[] values>;

        $i1 = lengthof $r1;

        $i2 = $i1 - 1;

        r14 = $r2[$i2];

        r16 = null;

     label13:
        $z0 = r0.<org.apache.batik.anim.InterpolatingAnimation: boolean cumulative>;

        if $z0 == 0 goto label14;

        $r7 = r0.<org.apache.batik.anim.SimpleAnimation: org.apache.batik.anim.values.AnimatableValue[] values>;

        $r6 = r0.<org.apache.batik.anim.SimpleAnimation: org.apache.batik.anim.values.AnimatableValue[] values>;

        $i4 = lengthof $r6;

        $i5 = $i4 - 1;

        r20 = $r7[$i5];

        goto label15;

     label14:
        r20 = null;

     label15:
        $r3 = r0.<org.apache.batik.anim.AbstractAnimation: org.apache.batik.anim.values.AnimatableValue value>;

        $r4 = virtualinvoke r14.<org.apache.batik.anim.values.AnimatableValue: org.apache.batik.anim.values.AnimatableValue interpolate(org.apache.batik.anim.values.AnimatableValue,org.apache.batik.anim.values.AnimatableValue,float,org.apache.batik.anim.values.AnimatableValue,int)>($r3, r16, f4, r20, i3);

        r0.<org.apache.batik.anim.AbstractAnimation: org.apache.batik.anim.values.AnimatableValue value> = $r4;

        $r5 = r0.<org.apache.batik.anim.AbstractAnimation: org.apache.batik.anim.values.AnimatableValue value>;

        $z1 = virtualinvoke $r5.<org.apache.batik.anim.values.AnimatableValue: boolean hasChanged()>();

        if $z1 == 0 goto label16;

        virtualinvoke r0.<org.apache.batik.anim.AbstractAnimation: void markDirty()>();

     label16:
        return;
    }
}
