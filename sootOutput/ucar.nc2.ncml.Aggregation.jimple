public abstract class ucar.nc2.ncml.Aggregation extends java.lang.Object
{
    protected static ucar.nc2.ncml.Aggregation$TypicalDataset typicalDatasetMode;
    protected static org.slf4j.Logger logger;
    protected static ucar.nc2.util.DiskCache2 diskCache2;
    protected static java.util.concurrent.Executor executor;
    protected static boolean debug;
    protected static boolean debugOpenFile;
    protected static boolean debugSyncDetail;
    protected static boolean debugProxy;
    protected static boolean debugRead;
    protected static boolean debugDateParse;
    protected static boolean debugConvert;
    protected ucar.nc2.dataset.NetcdfDataset ncDataset;
    protected ucar.nc2.ncml.Aggregation$Type type;
    protected java.lang.Object spiObject;
    protected java.util.List explicitDatasets;
    protected java.util.List datasets;
    protected thredds.inventory.DatasetCollectionManager datasetManager;
    protected boolean cacheDirty;
    protected java.lang.String dimName;
    private org.jdom.Element mergeNcml;
    protected java.lang.String dateFormatMark;
    protected boolean isDate;
    protected ucar.nc2.units.DateFormatter dateFormatter;

    public static void setPersistenceCache(ucar.nc2.util.DiskCache2)
    {
        ucar.nc2.util.DiskCache2 r0;

        r0 := @parameter0: ucar.nc2.util.DiskCache2;

        <ucar.nc2.ncml.Aggregation: ucar.nc2.util.DiskCache2 diskCache2> = r0;

        return;
    }

    public static void setExecutor(java.util.concurrent.Executor)
    {
        java.util.concurrent.Executor r0;

        r0 := @parameter0: java.util.concurrent.Executor;

        <ucar.nc2.ncml.Aggregation: java.util.concurrent.Executor executor> = r0;

        return;
    }

    public static void setTypicalDatasetMode(java.lang.String)
    {
        org.slf4j.Logger $r2;
        ucar.nc2.ncml.Aggregation$TypicalDataset $r6, $r7, $r8, $r9;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String r0, $r5;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("random");

        if $z0 == 0 goto label1;

        $r9 = <ucar.nc2.ncml.Aggregation$TypicalDataset: ucar.nc2.ncml.Aggregation$TypicalDataset RANDOM>;

        <ucar.nc2.ncml.Aggregation: ucar.nc2.ncml.Aggregation$TypicalDataset typicalDatasetMode> = $r9;

        goto label5;

     label1:
        $z1 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("latest");

        if $z1 == 0 goto label2;

        $r8 = <ucar.nc2.ncml.Aggregation$TypicalDataset: ucar.nc2.ncml.Aggregation$TypicalDataset LATEST>;

        <ucar.nc2.ncml.Aggregation: ucar.nc2.ncml.Aggregation$TypicalDataset typicalDatasetMode> = $r8;

        goto label5;

     label2:
        $z2 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("penultimate");

        if $z2 == 0 goto label3;

        $r7 = <ucar.nc2.ncml.Aggregation$TypicalDataset: ucar.nc2.ncml.Aggregation$TypicalDataset PENULTIMATE>;

        <ucar.nc2.ncml.Aggregation: ucar.nc2.ncml.Aggregation$TypicalDataset typicalDatasetMode> = $r7;

        goto label5;

     label3:
        $z3 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("first");

        if $z3 == 0 goto label4;

        $r6 = <ucar.nc2.ncml.Aggregation$TypicalDataset: ucar.nc2.ncml.Aggregation$TypicalDataset FIRST>;

        <ucar.nc2.ncml.Aggregation: ucar.nc2.ncml.Aggregation$TypicalDataset typicalDatasetMode> = $r6;

        goto label5;

     label4:
        $r2 = <ucar.nc2.ncml.Aggregation: org.slf4j.Logger logger>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown setTypicalDatasetMode= ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r2.<org.slf4j.Logger: void error(java.lang.String)>($r5);

     label5:
        return;
    }

    protected void <init>(ucar.nc2.dataset.NetcdfDataset, java.lang.String, ucar.nc2.ncml.Aggregation$Type, java.lang.String)
    {
        ucar.nc2.ncml.Aggregation r0;
        java.util.ArrayList $r1, $r2;
        ucar.nc2.ncml.Aggregation$Type r6;
        thredds.inventory.DatasetCollectionManager $r7;
        java.lang.String r5, r8;
        ucar.nc2.dataset.NetcdfDataset r4;
        ucar.nc2.units.DateFormatter $r3;

        r0 := @this: ucar.nc2.ncml.Aggregation;

        r4 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r5 := @parameter1: java.lang.String;

        r6 := @parameter2: ucar.nc2.ncml.Aggregation$Type;

        r8 := @parameter3: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<ucar.nc2.ncml.Aggregation: java.util.List explicitDatasets> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<ucar.nc2.ncml.Aggregation: java.util.List datasets> = $r2;

        r0.<ucar.nc2.ncml.Aggregation: boolean cacheDirty> = 1;

        r0.<ucar.nc2.ncml.Aggregation: org.jdom.Element mergeNcml> = null;

        r0.<ucar.nc2.ncml.Aggregation: boolean isDate> = 0;

        $r3 = new ucar.nc2.units.DateFormatter;

        specialinvoke $r3.<ucar.nc2.units.DateFormatter: void <init>()>();

        r0.<ucar.nc2.ncml.Aggregation: ucar.nc2.units.DateFormatter dateFormatter> = $r3;

        r0.<ucar.nc2.ncml.Aggregation: ucar.nc2.dataset.NetcdfDataset ncDataset> = r4;

        r0.<ucar.nc2.ncml.Aggregation: java.lang.String dimName> = r5;

        r0.<ucar.nc2.ncml.Aggregation: ucar.nc2.ncml.Aggregation$Type type> = r6;

        $r7 = new thredds.inventory.DatasetCollectionManager;

        specialinvoke $r7.<thredds.inventory.DatasetCollectionManager: void <init>(java.lang.String)>(r8);

        r0.<ucar.nc2.ncml.Aggregation: thredds.inventory.DatasetCollectionManager datasetManager> = $r7;

        return;
    }

    public void addExplicitDataset(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, ucar.nc2.util.cache.FileFactory)
    {
        ucar.nc2.ncml.Aggregation r0;
        ucar.nc2.ncml.Aggregation$Dataset $r8;
        java.util.List $r9;
        java.lang.String r1, r2, r3, r4, r5, r6;
        ucar.nc2.util.cache.FileFactory r7;

        r0 := @this: ucar.nc2.ncml.Aggregation;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: java.lang.String;

        r7 := @parameter6: ucar.nc2.util.cache.FileFactory;

        $r8 = virtualinvoke r0.<ucar.nc2.ncml.Aggregation: ucar.nc2.ncml.Aggregation$Dataset makeDataset(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.EnumSet,ucar.nc2.util.cache.FileFactory)>(r1, r2, r3, r4, r5, r6, null, r7);

        $r9 = r0.<ucar.nc2.ncml.Aggregation: java.util.List explicitDatasets>;

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r8);

        return;
    }

    public void addDataset(ucar.nc2.ncml.Aggregation$Dataset)
    {
        ucar.nc2.ncml.Aggregation$Dataset r1;
        java.util.List $r2;
        ucar.nc2.ncml.Aggregation r0;

        r0 := @this: ucar.nc2.ncml.Aggregation;

        r1 := @parameter0: ucar.nc2.ncml.Aggregation$Dataset;

        $r2 = r0.<ucar.nc2.ncml.Aggregation: java.util.List explicitDatasets>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void addDatasetScan(org.jdom.Element, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.util.Set, java.lang.String, java.lang.String)
    {
        ucar.nc2.ncml.Aggregation r0;
        java.util.Set r7;
        thredds.inventory.DateExtractorFromName $r14;
        ucar.nc2.ncml.Aggregation$Type $r9, $r10, $r12;
        thredds.inventory.DatasetCollectionManager $r8, $r11;
        java.lang.String r1, r2, r3, r4, r5, r6;
        org.jdom.Element r13;

        r0 := @this: ucar.nc2.ncml.Aggregation;

        r13 := @parameter0: org.jdom.Element;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r1 := @parameter4: java.lang.String;

        r7 := @parameter5: java.util.Set;

        r5 := @parameter6: java.lang.String;

        r6 := @parameter7: java.lang.String;

        r0.<ucar.nc2.ncml.Aggregation: java.lang.String dateFormatMark> = r1;

        $r8 = r0.<ucar.nc2.ncml.Aggregation: thredds.inventory.DatasetCollectionManager datasetManager>;

        virtualinvoke $r8.<thredds.inventory.DatasetCollectionManager: void addDirectoryScan(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)>(r2, r3, r4, r5, r6, r7);

        if r1 == null goto label4;

        r0.<ucar.nc2.ncml.Aggregation: boolean isDate> = 1;

        $r10 = r0.<ucar.nc2.ncml.Aggregation: ucar.nc2.ncml.Aggregation$Type type>;

        $r9 = <ucar.nc2.ncml.Aggregation$Type: ucar.nc2.ncml.Aggregation$Type joinExisting>;

        if $r10 != $r9 goto label1;

        $r12 = <ucar.nc2.ncml.Aggregation$Type: ucar.nc2.ncml.Aggregation$Type joinExistingOne>;

        r0.<ucar.nc2.ncml.Aggregation: ucar.nc2.ncml.Aggregation$Type type> = $r12;

     label1:
        if r1 != null goto label2;

        $r14 = null;

        goto label3;

     label2:
        $r14 = new thredds.inventory.DateExtractorFromName;

        specialinvoke $r14.<thredds.inventory.DateExtractorFromName: void <init>(java.lang.String,boolean)>(r1, 1);

     label3:
        $r11 = r0.<ucar.nc2.ncml.Aggregation: thredds.inventory.DatasetCollectionManager datasetManager>;

        virtualinvoke $r11.<thredds.inventory.DatasetCollectionManager: void setDateExtractor(thredds.inventory.DateExtractor)>($r14);

     label4:
        return;
    }

    public void addCollection(java.lang.String, java.lang.String) throws java.io.IOException
    {
        thredds.inventory.DatasetCollectionManager $r3;
        ucar.nc2.ncml.Aggregation r0;
        java.lang.String r1, r2;

        r0 := @this: ucar.nc2.ncml.Aggregation;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = staticinvoke <thredds.inventory.DatasetCollectionManager: thredds.inventory.DatasetCollectionManager open(java.lang.String,java.lang.String,java.util.Formatter)>(r1, r2, null);

        r0.<ucar.nc2.ncml.Aggregation: thredds.inventory.DatasetCollectionManager datasetManager> = $r3;

        return;
    }

    public void setModifications(org.jdom.Element)
    {
        org.jdom.Element r1;
        ucar.nc2.ncml.Aggregation r0;

        r0 := @this: ucar.nc2.ncml.Aggregation;

        r1 := @parameter0: org.jdom.Element;

        r0.<ucar.nc2.ncml.Aggregation: org.jdom.Element mergeNcml> = r1;

        return;
    }

    public ucar.nc2.ncml.Aggregation$Type getType()
    {
        ucar.nc2.ncml.Aggregation$Type $r1;
        ucar.nc2.ncml.Aggregation r0;

        r0 := @this: ucar.nc2.ncml.Aggregation;

        $r1 = r0.<ucar.nc2.ncml.Aggregation: ucar.nc2.ncml.Aggregation$Type type>;

        return $r1;
    }

    public java.lang.String getDimensionName()
    {
        java.lang.String $r1;
        ucar.nc2.ncml.Aggregation r0;

        r0 := @this: ucar.nc2.ncml.Aggregation;

        $r1 = r0.<ucar.nc2.ncml.Aggregation: java.lang.String dimName>;

        return $r1;
    }

    protected java.lang.String getLocation()
    {
        java.lang.String $r2;
        ucar.nc2.dataset.NetcdfDataset $r1;
        ucar.nc2.ncml.Aggregation r0;

        r0 := @this: ucar.nc2.ncml.Aggregation;

        $r1 = r0.<ucar.nc2.ncml.Aggregation: ucar.nc2.dataset.NetcdfDataset ncDataset>;

        $r2 = virtualinvoke $r1.<ucar.nc2.dataset.NetcdfDataset: java.lang.String getLocation()>();

        return $r2;
    }

    public void close() throws java.io.IOException
    {
        ucar.nc2.ncml.Aggregation r0;

        r0 := @this: ucar.nc2.ncml.Aggregation;

        virtualinvoke r0.<ucar.nc2.ncml.Aggregation: void persistWrite()>();

        virtualinvoke r0.<ucar.nc2.ncml.Aggregation: void closeDatasets()>();

        return;
    }

    public synchronized boolean syncExtend() throws java.io.IOException
    {
        thredds.inventory.DatasetCollectionManager $r1;
        ucar.nc2.ncml.Aggregation r0;
        boolean $z0, $z1;

        r0 := @this: ucar.nc2.ncml.Aggregation;

        $r1 = r0.<ucar.nc2.ncml.Aggregation: thredds.inventory.DatasetCollectionManager datasetManager>;

        $z0 = virtualinvoke $r1.<thredds.inventory.DatasetCollectionManager: boolean isRescanNeeded()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $z1 = specialinvoke r0.<ucar.nc2.ncml.Aggregation: boolean _sync()>();

        return $z1;
    }

    public synchronized boolean sync() throws java.io.IOException
    {
        thredds.inventory.DatasetCollectionManager $r1;
        ucar.nc2.ncml.Aggregation r0;
        boolean $z0, $z1, $z2;

        r0 := @this: ucar.nc2.ncml.Aggregation;

        $r1 = r0.<ucar.nc2.ncml.Aggregation: thredds.inventory.DatasetCollectionManager datasetManager>;

        $z0 = virtualinvoke $r1.<thredds.inventory.DatasetCollectionManager: boolean isRescanNeeded()>();

        if $z0 == 0 goto label1;

        $z1 = specialinvoke r0.<ucar.nc2.ncml.Aggregation: boolean _sync()>();

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    private boolean _sync() throws java.io.IOException
    {
        ucar.nc2.ncml.Aggregation r0;
        thredds.inventory.DatasetCollectionManager $r1;
        ucar.nc2.dataset.NetcdfDataset$Enhance $r5;
        ucar.nc2.dataset.NetcdfDataset $r2, $r3, $r6, $r7, $r8, $r10;
        java.util.EnumSet $r4, $r9;
        boolean $z0, $z1;

        r0 := @this: ucar.nc2.ncml.Aggregation;

        $r1 = r0.<ucar.nc2.ncml.Aggregation: thredds.inventory.DatasetCollectionManager datasetManager>;

        $z0 = virtualinvoke $r1.<thredds.inventory.DatasetCollectionManager: boolean rescan()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r0.<ucar.nc2.ncml.Aggregation: boolean cacheDirty> = 1;

        virtualinvoke r0.<ucar.nc2.ncml.Aggregation: void closeDatasets()>();

        virtualinvoke r0.<ucar.nc2.ncml.Aggregation: void makeDatasets(ucar.nc2.util.CancelTask)>(null);

        virtualinvoke r0.<ucar.nc2.ncml.Aggregation: void rebuildDataset()>();

        $r2 = r0.<ucar.nc2.ncml.Aggregation: ucar.nc2.dataset.NetcdfDataset ncDataset>;

        virtualinvoke $r2.<ucar.nc2.dataset.NetcdfDataset: void finish()>();

        $r3 = r0.<ucar.nc2.ncml.Aggregation: ucar.nc2.dataset.NetcdfDataset ncDataset>;

        $r4 = virtualinvoke $r3.<ucar.nc2.dataset.NetcdfDataset: java.util.EnumSet getEnhanceMode()>();

        $r5 = <ucar.nc2.dataset.NetcdfDataset$Enhance: ucar.nc2.dataset.NetcdfDataset$Enhance CoordSystems>;

        $z1 = virtualinvoke $r4.<java.util.EnumSet: boolean contains(java.lang.Object)>($r5);

        if $z1 == 0 goto label2;

        $r6 = r0.<ucar.nc2.ncml.Aggregation: ucar.nc2.dataset.NetcdfDataset ncDataset>;

        virtualinvoke $r6.<ucar.nc2.dataset.NetcdfDataset: void clearCoordinateSystems()>();

        $r8 = r0.<ucar.nc2.ncml.Aggregation: ucar.nc2.dataset.NetcdfDataset ncDataset>;

        $r7 = r0.<ucar.nc2.ncml.Aggregation: ucar.nc2.dataset.NetcdfDataset ncDataset>;

        $r9 = virtualinvoke $r7.<ucar.nc2.dataset.NetcdfDataset: java.util.EnumSet getEnhanceMode()>();

        virtualinvoke $r8.<ucar.nc2.dataset.NetcdfDataset: void enhance(java.util.Set)>($r9);

        $r10 = r0.<ucar.nc2.ncml.Aggregation: ucar.nc2.dataset.NetcdfDataset ncDataset>;

        virtualinvoke $r10.<ucar.nc2.dataset.NetcdfDataset: void finish()>();

     label2:
        return 1;
    }

    public java.lang.String getFileTypeId()
    {
        java.lang.Throwable $r10;
        ucar.nc2.ncml.Aggregation r0;
        ucar.nc2.ncml.Aggregation$Dataset $r1, r29;
        java.lang.String $r3, $r9, $r16, $r22, $r28;
        org.slf4j.Logger $r6, $r13, $r19, $r25;
        java.io.IOException $r4, $r11, $r23;
        java.lang.Exception $r17;
        java.lang.StringBuilder $r5, $r7, $r8, $r12, $r14, $r15, $r18, $r20, $r21, $r24, $r26, $r27;
        ucar.nc2.NetcdfFile $r2, r30;

        r0 := @this: ucar.nc2.ncml.Aggregation;

        r29 = null;

        r30 = null;

     label01:
        $r1 = virtualinvoke r0.<ucar.nc2.ncml.Aggregation: ucar.nc2.ncml.Aggregation$Dataset getTypicalDataset()>();

        r29 = $r1;

        $r2 = virtualinvoke $r1.<ucar.nc2.ncml.Aggregation$Dataset: ucar.nc2.NetcdfFile acquireFile(ucar.nc2.util.CancelTask)>(null);

        r30 = $r2;

        $r3 = virtualinvoke $r2.<ucar.nc2.NetcdfFile: java.lang.String getFileTypeId()>();

     label02:
        if $r1 == null goto label06;

     label03:
        virtualinvoke $r1.<ucar.nc2.ncml.Aggregation$Dataset: void close(ucar.nc2.NetcdfFile)>($r2);

     label04:
        goto label06;

     label05:
        $r23 := @caughtexception;

        $r25 = <ucar.nc2.ncml.Aggregation: org.slf4j.Logger logger>;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to close ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r25.<org.slf4j.Logger: void error(java.lang.String)>($r28);

     label06:
        return $r3;

     label07:
        $r17 := @caughtexception;

        $r19 = <ucar.nc2.ncml.Aggregation: org.slf4j.Logger logger>;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to open ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r29);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r19.<org.slf4j.Logger: void error(java.lang.String)>($r22);

     label08:
        if r29 == null goto label18;

     label09:
        virtualinvoke r29.<ucar.nc2.ncml.Aggregation$Dataset: void close(ucar.nc2.NetcdfFile)>(r30);

     label10:
        goto label18;

     label11:
        $r11 := @caughtexception;

        $r13 = <ucar.nc2.ncml.Aggregation: org.slf4j.Logger logger>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to close ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r29);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r13.<org.slf4j.Logger: void error(java.lang.String)>($r16);

        goto label18;

     label12:
        $r10 := @caughtexception;

     label13:
        if r29 == null goto label17;

     label14:
        virtualinvoke r29.<ucar.nc2.ncml.Aggregation$Dataset: void close(ucar.nc2.NetcdfFile)>(r30);

     label15:
        goto label17;

     label16:
        $r4 := @caughtexception;

        $r6 = <ucar.nc2.ncml.Aggregation: org.slf4j.Logger logger>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to close ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r29);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r6.<org.slf4j.Logger: void error(java.lang.String)>($r9);

     label17:
        throw $r10;

     label18:
        return "N/A";

        catch java.io.IOException from label03 to label04 with label05;
        catch java.lang.Exception from label01 to label02 with label07;
        catch java.io.IOException from label09 to label10 with label11;
        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.io.IOException from label14 to label15 with label16;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    public java.lang.String getFileTypeDescription()
    {
        java.lang.Throwable $r10;
        ucar.nc2.ncml.Aggregation r0;
        ucar.nc2.ncml.Aggregation$Dataset $r1, r29;
        java.lang.String $r3, $r9, $r16, $r22, $r28;
        org.slf4j.Logger $r6, $r13, $r19, $r25;
        java.io.IOException $r4, $r11, $r23;
        java.lang.Exception $r17;
        java.lang.StringBuilder $r5, $r7, $r8, $r12, $r14, $r15, $r18, $r20, $r21, $r24, $r26, $r27;
        ucar.nc2.NetcdfFile $r2, r30;

        r0 := @this: ucar.nc2.ncml.Aggregation;

        r29 = null;

        r30 = null;

     label01:
        $r1 = virtualinvoke r0.<ucar.nc2.ncml.Aggregation: ucar.nc2.ncml.Aggregation$Dataset getTypicalDataset()>();

        r29 = $r1;

        $r2 = virtualinvoke $r1.<ucar.nc2.ncml.Aggregation$Dataset: ucar.nc2.NetcdfFile acquireFile(ucar.nc2.util.CancelTask)>(null);

        r30 = $r2;

        $r3 = virtualinvoke $r2.<ucar.nc2.NetcdfFile: java.lang.String getFileTypeDescription()>();

     label02:
        if $r1 == null goto label06;

     label03:
        virtualinvoke $r1.<ucar.nc2.ncml.Aggregation$Dataset: void close(ucar.nc2.NetcdfFile)>($r2);

     label04:
        goto label06;

     label05:
        $r23 := @caughtexception;

        $r25 = <ucar.nc2.ncml.Aggregation: org.slf4j.Logger logger>;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to close ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r25.<org.slf4j.Logger: void error(java.lang.String)>($r28);

     label06:
        return $r3;

     label07:
        $r17 := @caughtexception;

        $r19 = <ucar.nc2.ncml.Aggregation: org.slf4j.Logger logger>;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to open ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r29);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r19.<org.slf4j.Logger: void error(java.lang.String)>($r22);

     label08:
        if r29 == null goto label18;

     label09:
        virtualinvoke r29.<ucar.nc2.ncml.Aggregation$Dataset: void close(ucar.nc2.NetcdfFile)>(r30);

     label10:
        goto label18;

     label11:
        $r11 := @caughtexception;

        $r13 = <ucar.nc2.ncml.Aggregation: org.slf4j.Logger logger>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to close ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r29);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r13.<org.slf4j.Logger: void error(java.lang.String)>($r16);

        goto label18;

     label12:
        $r10 := @caughtexception;

     label13:
        if r29 == null goto label17;

     label14:
        virtualinvoke r29.<ucar.nc2.ncml.Aggregation$Dataset: void close(ucar.nc2.NetcdfFile)>(r30);

     label15:
        goto label17;

     label16:
        $r4 := @caughtexception;

        $r6 = <ucar.nc2.ncml.Aggregation: org.slf4j.Logger logger>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to close ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r29);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r6.<org.slf4j.Logger: void error(java.lang.String)>($r9);

     label17:
        throw $r10;

     label18:
        return "N/A";

        catch java.io.IOException from label03 to label04 with label05;
        catch java.lang.Exception from label01 to label02 with label07;
        catch java.io.IOException from label09 to label10 with label11;
        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.io.IOException from label14 to label15 with label16;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    protected abstract void buildNetcdfDataset(ucar.nc2.util.CancelTask) throws java.io.IOException;

    protected abstract void rebuildDataset() throws java.io.IOException;

    public void persistWrite() throws java.io.IOException
    {
        ucar.nc2.ncml.Aggregation r0;

        r0 := @this: ucar.nc2.ncml.Aggregation;

        return;
    }

    protected void persistRead()
    {
        ucar.nc2.ncml.Aggregation r0;

        r0 := @this: ucar.nc2.ncml.Aggregation;

        return;
    }

    protected void closeDatasets() throws java.io.IOException
    {
        ucar.nc2.ncml.Aggregation r0;

        r0 := @this: ucar.nc2.ncml.Aggregation;

        return;
    }

    public void getDetailInfo(java.util.Formatter)
    {
        java.lang.Object[] $r1, $r4, $r6;
        java.util.Iterator $r8;
        ucar.nc2.ncml.Aggregation r2;
        java.util.Formatter r0;
        ucar.nc2.ncml.Aggregation$Type $r3;
        java.util.List $r7;
        ucar.nc2.ncml.Aggregation$Dataset r10;
        java.lang.Object $r9;
        java.lang.String $r5;
        boolean $z0;

        r2 := @this: ucar.nc2.ncml.Aggregation;

        r0 := @parameter0: java.util.Formatter;

        $r1 = newarray (java.lang.Object)[1];

        $r3 = r2.<ucar.nc2.ncml.Aggregation: ucar.nc2.ncml.Aggregation$Type type>;

        $r1[0] = $r3;

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("  Type=%s%n", $r1);

        $r4 = newarray (java.lang.Object)[1];

        $r5 = r2.<ucar.nc2.ncml.Aggregation: java.lang.String dimName>;

        $r4[0] = $r5;

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("  dimName=%s%n", $r4);

        $r6 = newarray (java.lang.Object)[0];

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("  Datasets%n", $r6);

        $r7 = r2.<ucar.nc2.ncml.Aggregation: java.util.List datasets>;

        $r8 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (ucar.nc2.ncml.Aggregation$Dataset) $r9;

        virtualinvoke r10.<ucar.nc2.ncml.Aggregation$Dataset: void show(java.util.Formatter)>(r0);

        goto label1;

     label2:
        return;
    }

    public void finish(ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        thredds.inventory.DatasetCollectionManager $r2;
        ucar.nc2.util.CancelTask r1;
        ucar.nc2.ncml.Aggregation r0;

        r0 := @this: ucar.nc2.ncml.Aggregation;

        r1 := @parameter0: ucar.nc2.util.CancelTask;

        $r2 = r0.<ucar.nc2.ncml.Aggregation: thredds.inventory.DatasetCollectionManager datasetManager>;

        virtualinvoke $r2.<thredds.inventory.DatasetCollectionManager: void scan(ucar.nc2.util.CancelTask)>(r1);

        r0.<ucar.nc2.ncml.Aggregation: boolean cacheDirty> = 1;

        virtualinvoke r0.<ucar.nc2.ncml.Aggregation: void closeDatasets()>();

        virtualinvoke r0.<ucar.nc2.ncml.Aggregation: void makeDatasets(ucar.nc2.util.CancelTask)>(r1);

        virtualinvoke r0.<ucar.nc2.ncml.Aggregation: void buildNetcdfDataset(ucar.nc2.util.CancelTask)>(r1);

        return;
    }

    public java.util.List getDatasets()
    {
        java.util.List $r1;
        ucar.nc2.ncml.Aggregation r0;

        r0 := @this: ucar.nc2.ncml.Aggregation;

        $r1 = r0.<ucar.nc2.ncml.Aggregation: java.util.List datasets>;

        return $r1;
    }

    protected void makeDatasets(ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        java.lang.IllegalStateException $r13;
        thredds.inventory.DatasetCollectionManager $r2, $r16;
        ucar.nc2.ncml.Aggregation$Dataset r20, $r33, r36;
        thredds.inventory.MFile r35;
        ucar.nc2.util.CancelTask r34;
        boolean $z0, $z1, $z2, $z3;
        java.util.List $r3, $r5, $r6, $r9, $r10, $r12, $r30, $r32;
        java.lang.StringBuilder $r14, $r15, $r17, $r23, $r25, $r27;
        ucar.nc2.ncml.Aggregation r0;
        java.util.ArrayList $r1;
        java.util.HashSet $r8;
        int $i0, $i1, $i2;
        java.lang.String $r18, $r21, $r22, $r26, $r28;
        org.slf4j.Logger $r24;
        java.util.Iterator $r4, $r7, $r11;
        java.lang.Object $r19, $r29, $r31;

        r0 := @this: ucar.nc2.ncml.Aggregation;

        r34 := @parameter0: ucar.nc2.util.CancelTask;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<ucar.nc2.ncml.Aggregation: java.util.List datasets> = $r1;

        $r2 = r0.<ucar.nc2.ncml.Aggregation: thredds.inventory.DatasetCollectionManager datasetManager>;

        $r3 = virtualinvoke $r2.<thredds.inventory.DatasetCollectionManager: java.util.List getFiles()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r31 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r35 = (thredds.inventory.MFile) $r31;

        $r32 = r0.<ucar.nc2.ncml.Aggregation: java.util.List datasets>;

        $r33 = virtualinvoke r0.<ucar.nc2.ncml.Aggregation: ucar.nc2.ncml.Aggregation$Dataset makeDataset(thredds.inventory.MFile)>(r35);

        interfaceinvoke $r32.<java.util.List: boolean add(java.lang.Object)>($r33);

        goto label1;

     label2:
        $r5 = r0.<ucar.nc2.ncml.Aggregation: java.util.List datasets>;

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r5);

        $r6 = r0.<ucar.nc2.ncml.Aggregation: java.util.List explicitDatasets>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r29 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r36 = (ucar.nc2.ncml.Aggregation$Dataset) $r29;

        $r30 = r0.<ucar.nc2.ncml.Aggregation: java.util.List datasets>;

        interfaceinvoke $r30.<java.util.List: boolean add(java.lang.Object)>(r36);

        goto label3;

     label4:
        $r8 = new java.util.HashSet;

        $r9 = r0.<ucar.nc2.ncml.Aggregation: java.util.List datasets>;

        $i0 = interfaceinvoke $r9.<java.util.List: int size()>();

        $i1 = 2 * $i0;

        specialinvoke $r8.<java.util.HashSet: void <init>(int)>($i1);

        $r10 = r0.<ucar.nc2.ncml.Aggregation: java.util.List datasets>;

        $r11 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z2 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label7;

        $r19 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r20 = (ucar.nc2.ncml.Aggregation$Dataset) $r19;

        $r21 = r20.<ucar.nc2.ncml.Aggregation$Dataset: java.lang.String cacheLocation>;

        $z3 = interfaceinvoke $r8.<java.util.Set: boolean contains(java.lang.Object)>($r21);

        if $z3 == 0 goto label6;

        $r24 = <ucar.nc2.ncml.Aggregation: org.slf4j.Logger logger>;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate dataset in aggregation = ");

        $r26 = r20.<ucar.nc2.ncml.Aggregation$Dataset: java.lang.String cacheLocation>;

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r24.<org.slf4j.Logger: void warn(java.lang.String)>($r28);

     label6:
        $r22 = r20.<ucar.nc2.ncml.Aggregation$Dataset: java.lang.String cacheLocation>;

        interfaceinvoke $r8.<java.util.Set: boolean add(java.lang.Object)>($r22);

        goto label5;

     label7:
        $r12 = r0.<ucar.nc2.ncml.Aggregation: java.util.List datasets>;

        $i2 = interfaceinvoke $r12.<java.util.List: int size()>();

        if $i2 != 0 goto label8;

        $r13 = new java.lang.IllegalStateException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("There are no datasets in the aggregation ");

        $r16 = r0.<ucar.nc2.ncml.Aggregation: thredds.inventory.DatasetCollectionManager datasetManager>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r18);

        throw $r13;

     label8:
        return;
    }

    protected ucar.nc2.ncml.Aggregation$Dataset getTypicalDataset() throws java.io.IOException
    {
        ucar.nc2.ncml.Aggregation r0;
        java.util.Random $r8;
        ucar.nc2.ncml.Aggregation$Dataset $r11;
        ucar.nc2.ncml.Aggregation$TypicalDataset $r2, $r3, $r4, $r5, $r6, $r7;
        int $i0, i1, $i2, $i3;
        java.io.FileNotFoundException $r9;
        java.util.List $r1;
        java.lang.Object $r10;

        r0 := @this: ucar.nc2.ncml.Aggregation;

        $r1 = virtualinvoke r0.<ucar.nc2.ncml.Aggregation: java.util.List getDatasets()>();

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        $r9 = new java.io.FileNotFoundException;

        specialinvoke $r9.<java.io.FileNotFoundException: void <init>(java.lang.String)>("No datasets in this aggregation");

        throw $r9;

     label1:
        $r3 = <ucar.nc2.ncml.Aggregation: ucar.nc2.ncml.Aggregation$TypicalDataset typicalDatasetMode>;

        $r2 = <ucar.nc2.ncml.Aggregation$TypicalDataset: ucar.nc2.ncml.Aggregation$TypicalDataset LATEST>;

        if $r3 != $r2 goto label2;

        i1 = $i0 - 1;

        goto label9;

     label2:
        $r5 = <ucar.nc2.ncml.Aggregation: ucar.nc2.ncml.Aggregation$TypicalDataset typicalDatasetMode>;

        $r4 = <ucar.nc2.ncml.Aggregation$TypicalDataset: ucar.nc2.ncml.Aggregation$TypicalDataset PENULTIMATE>;

        if $r5 != $r4 goto label5;

        if $i0 >= 2 goto label3;

        $i2 = 0;

        goto label4;

     label3:
        $i2 = $i0 - 2;

     label4:
        i1 = $i2;

        goto label9;

     label5:
        $r7 = <ucar.nc2.ncml.Aggregation: ucar.nc2.ncml.Aggregation$TypicalDataset typicalDatasetMode>;

        $r6 = <ucar.nc2.ncml.Aggregation$TypicalDataset: ucar.nc2.ncml.Aggregation$TypicalDataset FIRST>;

        if $r7 != $r6 goto label6;

        i1 = 0;

        goto label9;

     label6:
        if $i0 >= 2 goto label7;

        $i3 = 0;

        goto label8;

     label7:
        $r8 = new java.util.Random;

        specialinvoke $r8.<java.util.Random: void <init>()>();

        $i3 = virtualinvoke $r8.<java.util.Random: int nextInt(int)>($i0);

     label8:
        i1 = $i3;

     label9:
        $r10 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i1);

        $r11 = (ucar.nc2.ncml.Aggregation$Dataset) $r10;

        return $r11;
    }

    protected ucar.nc2.ncml.Aggregation$Dataset makeDataset(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.util.EnumSet, ucar.nc2.util.cache.FileFactory)
    {
        ucar.nc2.ncml.Aggregation r1;
        ucar.nc2.ncml.Aggregation$Dataset $r0;
        java.lang.String r2, r3, r4, r7, r8, r9;
        ucar.nc2.util.cache.FileFactory r6;
        java.util.EnumSet r5;

        r1 := @this: ucar.nc2.ncml.Aggregation;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        r7 := @parameter3: java.lang.String;

        r8 := @parameter4: java.lang.String;

        r9 := @parameter5: java.lang.String;

        r5 := @parameter6: java.util.EnumSet;

        r6 := @parameter7: ucar.nc2.util.cache.FileFactory;

        $r0 = new ucar.nc2.ncml.Aggregation$Dataset;

        specialinvoke $r0.<ucar.nc2.ncml.Aggregation$Dataset: void <init>(ucar.nc2.ncml.Aggregation,java.lang.String,java.lang.String,java.lang.String,java.util.EnumSet,ucar.nc2.util.cache.FileFactory)>(r1, r2, r3, r4, r5, r6);

        return $r0;
    }

    protected ucar.nc2.ncml.Aggregation$Dataset makeDataset(thredds.inventory.MFile)
    {
        ucar.nc2.ncml.Aggregation$Dataset $r0;
        thredds.inventory.MFile r2;
        ucar.nc2.ncml.Aggregation r1;

        r1 := @this: ucar.nc2.ncml.Aggregation;

        r2 := @parameter0: thredds.inventory.MFile;

        $r0 = new ucar.nc2.ncml.Aggregation$Dataset;

        specialinvoke $r0.<ucar.nc2.ncml.Aggregation$Dataset: void <init>(ucar.nc2.ncml.Aggregation,thredds.inventory.MFile)>(r1, r2);

        return $r0;
    }

    protected void setDatasetAcquireProxy(ucar.nc2.ncml.Aggregation$Dataset, ucar.nc2.dataset.NetcdfDataset) throws java.io.IOException
    {
        ucar.nc2.ncml.Aggregation r1;
        ucar.nc2.ncml.Aggregation$Dataset r2;
        ucar.nc2.ncml.Aggregation$DatasetProxyReader $r0;
        ucar.nc2.Variable r8;
        java.lang.String $r13, $r15, $r20, $r22;
        ucar.nc2.ProxyReader $r9;
        boolean $z0, $z1, $z2, $z3;
        java.io.PrintStream $r11, $r18;
        java.util.Iterator $r6;
        ucar.nc2.Group $r4;
        ucar.ma2.Array $r16;
        java.util.List $r5;
        java.lang.Object $r7;
        java.lang.StringBuilder $r10, $r12, $r14, $r17, $r19, $r21;
        ucar.nc2.dataset.NetcdfDataset r3;

        r1 := @this: ucar.nc2.ncml.Aggregation;

        r2 := @parameter0: ucar.nc2.ncml.Aggregation$Dataset;

        r3 := @parameter1: ucar.nc2.dataset.NetcdfDataset;

        $r0 = new ucar.nc2.ncml.Aggregation$DatasetProxyReader;

        specialinvoke $r0.<ucar.nc2.ncml.Aggregation$DatasetProxyReader: void <init>(ucar.nc2.ncml.Aggregation,ucar.nc2.ncml.Aggregation$Dataset)>(r1, r2);

        $r4 = virtualinvoke r3.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group getRootGroup()>();

        $r5 = virtualinvoke $r4.<ucar.nc2.Group: java.util.List getVariables()>();

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label5;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (ucar.nc2.Variable) $r7;

        $r9 = virtualinvoke r8.<ucar.nc2.Variable: ucar.nc2.ProxyReader getProxyReader()>();

        if $r9 == r8 goto label2;

        $z2 = <ucar.nc2.ncml.Aggregation: boolean debugProxy>;

        if $z2 == 0 goto label1;

        $r18 = <java.lang.System: java.io.PrintStream out>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" debugProxy: hasProxyReader ");

        $r20 = virtualinvoke r8.<ucar.nc2.Variable: java.lang.String getName()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>($r22);

        goto label1;

     label2:
        $z0 = virtualinvoke r8.<ucar.nc2.Variable: boolean isCaching()>();

        if $z0 == 0 goto label3;

        $r16 = virtualinvoke r8.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        virtualinvoke r8.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array)>($r16);

        goto label4;

     label3:
        virtualinvoke r8.<ucar.nc2.Variable: void setProxyReader(ucar.nc2.ProxyReader)>($r0);

        $z1 = <ucar.nc2.ncml.Aggregation: boolean debugProxy>;

        if $z1 == 0 goto label4;

        $r11 = <java.lang.System: java.io.PrintStream out>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" debugProxy: set proxy on ");

        $r13 = virtualinvoke r8.<ucar.nc2.Variable: java.lang.String getName()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>($r15);

     label4:
        goto label1;

     label5:
        return;
    }

    protected ucar.nc2.Variable findVariable(ucar.nc2.NetcdfFile, ucar.nc2.Variable)
    {
        ucar.nc2.ncml.Aggregation r6;
        ucar.nc2.dataset.VariableEnhanced r4;
        ucar.nc2.Variable r1, $r3, r7;
        ucar.nc2.NetcdfFile r0;
        java.lang.String $r2, $r5;

        r6 := @this: ucar.nc2.ncml.Aggregation;

        r0 := @parameter0: ucar.nc2.NetcdfFile;

        r1 := @parameter1: ucar.nc2.Variable;

        $r2 = virtualinvoke r1.<ucar.nc2.Variable: java.lang.String getName()>();

        $r3 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Variable findVariable(java.lang.String)>($r2);

        r7 = $r3;

        if $r3 != null goto label1;

        r4 = (ucar.nc2.dataset.VariableEnhanced) r1;

        $r5 = interfaceinvoke r4.<ucar.nc2.dataset.VariableEnhanced: java.lang.String getOriginalName()>();

        r7 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Variable findVariable(java.lang.String)>($r5);

     label1:
        return r7;
    }

    static org.jdom.Element access$000(ucar.nc2.ncml.Aggregation)
    {
        org.jdom.Element $r1;
        ucar.nc2.ncml.Aggregation r0;

        r0 := @parameter0: ucar.nc2.ncml.Aggregation;

        $r1 = r0.<ucar.nc2.ncml.Aggregation: org.jdom.Element mergeNcml>;

        return $r1;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lucar/nc2/ncml/Aggregation;");

        <ucar.nc2.ncml.Aggregation: org.slf4j.Logger logger> = $r0;

        <ucar.nc2.ncml.Aggregation: ucar.nc2.util.DiskCache2 diskCache2> = null;

        <ucar.nc2.ncml.Aggregation: boolean debug> = 0;

        <ucar.nc2.ncml.Aggregation: boolean debugOpenFile> = 0;

        <ucar.nc2.ncml.Aggregation: boolean debugSyncDetail> = 0;

        <ucar.nc2.ncml.Aggregation: boolean debugProxy> = 0;

        <ucar.nc2.ncml.Aggregation: boolean debugRead> = 0;

        <ucar.nc2.ncml.Aggregation: boolean debugDateParse> = 0;

        <ucar.nc2.ncml.Aggregation: boolean debugConvert> = 0;

        return;
    }
}
