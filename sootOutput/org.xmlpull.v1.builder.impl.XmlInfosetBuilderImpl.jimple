public class org.xmlpull.v1.builder.impl.XmlInfosetBuilderImpl extends org.xmlpull.v1.builder.XmlInfosetBuilder
{
    private static final java.lang.String PROPERTY_XMLDECL_STANDALONE;
    private static final java.lang.String PROPERTY_XMLDECL_VERSION;

    public void <init>()
    {
        org.xmlpull.v1.builder.impl.XmlInfosetBuilderImpl r0;

        r0 := @this: org.xmlpull.v1.builder.impl.XmlInfosetBuilderImpl;

        specialinvoke r0.<org.xmlpull.v1.builder.XmlInfosetBuilder: void <init>()>();

        return;
    }

    public org.xmlpull.v1.builder.XmlDocument newDocument(java.lang.String, java.lang.Boolean, java.lang.String)
    {
        org.xmlpull.v1.builder.impl.XmlDocumentImpl $r0;
        java.lang.Boolean r2;
        java.lang.String r1, r3;
        org.xmlpull.v1.builder.impl.XmlInfosetBuilderImpl r4;

        r4 := @this: org.xmlpull.v1.builder.impl.XmlInfosetBuilderImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Boolean;

        r3 := @parameter2: java.lang.String;

        $r0 = new org.xmlpull.v1.builder.impl.XmlDocumentImpl;

        specialinvoke $r0.<org.xmlpull.v1.builder.impl.XmlDocumentImpl: void <init>(java.lang.String,java.lang.Boolean,java.lang.String)>(r1, r2, r3);

        return $r0;
    }

    public org.xmlpull.v1.builder.XmlElement newFragment(java.lang.String)
    {
        org.xmlpull.v1.builder.impl.XmlElementImpl $r0;
        java.lang.String r1;
        org.xmlpull.v1.builder.impl.XmlInfosetBuilderImpl r2;

        r2 := @this: org.xmlpull.v1.builder.impl.XmlInfosetBuilderImpl;

        r1 := @parameter0: java.lang.String;

        $r0 = new org.xmlpull.v1.builder.impl.XmlElementImpl;

        specialinvoke $r0.<org.xmlpull.v1.builder.impl.XmlElementImpl: void <init>(org.xmlpull.v1.builder.XmlNamespace,java.lang.String)>(null, r1);

        return $r0;
    }

    public org.xmlpull.v1.builder.XmlElement newFragment(java.lang.String, java.lang.String)
    {
        org.xmlpull.v1.builder.impl.XmlElementImpl $r0;
        java.lang.String r1, r2;
        org.xmlpull.v1.builder.impl.XmlInfosetBuilderImpl r3;

        r3 := @this: org.xmlpull.v1.builder.impl.XmlInfosetBuilderImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r0 = new org.xmlpull.v1.builder.impl.XmlElementImpl;

        specialinvoke $r0.<org.xmlpull.v1.builder.impl.XmlElementImpl: void <init>(java.lang.String,java.lang.String)>(r1, r2);

        return $r0;
    }

    public org.xmlpull.v1.builder.XmlElement newFragment(org.xmlpull.v1.builder.XmlNamespace, java.lang.String)
    {
        org.xmlpull.v1.builder.impl.XmlElementImpl $r0;
        org.xmlpull.v1.builder.XmlNamespace r1;
        java.lang.String r2;
        org.xmlpull.v1.builder.impl.XmlInfosetBuilderImpl r3;

        r3 := @this: org.xmlpull.v1.builder.impl.XmlInfosetBuilderImpl;

        r1 := @parameter0: org.xmlpull.v1.builder.XmlNamespace;

        r2 := @parameter1: java.lang.String;

        $r0 = new org.xmlpull.v1.builder.impl.XmlElementImpl;

        specialinvoke $r0.<org.xmlpull.v1.builder.impl.XmlElementImpl: void <init>(org.xmlpull.v1.builder.XmlNamespace,java.lang.String)>(r1, r2);

        return $r0;
    }

    public org.xmlpull.v1.builder.XmlNamespace newNamespace(java.lang.String)
    {
        java.lang.String r1;
        org.xmlpull.v1.builder.impl.XmlInfosetBuilderImpl r2;
        org.xmlpull.v1.builder.impl.XmlNamespaceImpl $r0;

        r2 := @this: org.xmlpull.v1.builder.impl.XmlInfosetBuilderImpl;

        r1 := @parameter0: java.lang.String;

        $r0 = new org.xmlpull.v1.builder.impl.XmlNamespaceImpl;

        specialinvoke $r0.<org.xmlpull.v1.builder.impl.XmlNamespaceImpl: void <init>(java.lang.String,java.lang.String)>(null, r1);

        return $r0;
    }

    public org.xmlpull.v1.builder.XmlNamespace newNamespace(java.lang.String, java.lang.String)
    {
        org.xmlpull.v1.builder.impl.XmlNamespaceImpl $r0;
        java.lang.String r1, r2;
        org.xmlpull.v1.builder.impl.XmlInfosetBuilderImpl r3;

        r3 := @this: org.xmlpull.v1.builder.impl.XmlInfosetBuilderImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r0 = new org.xmlpull.v1.builder.impl.XmlNamespaceImpl;

        specialinvoke $r0.<org.xmlpull.v1.builder.impl.XmlNamespaceImpl: void <init>(java.lang.String,java.lang.String)>(r1, r2);

        return $r0;
    }

    public org.xmlpull.v1.builder.XmlDocument parse(org.xmlpull.v1.XmlPullParser)
    {
        org.xmlpull.v1.builder.XmlElement $r3;
        org.xmlpull.v1.builder.impl.XmlInfosetBuilderImpl r0;
        org.xmlpull.v1.builder.XmlDocument $r2;
        org.xmlpull.v1.XmlPullParser r1;

        r0 := @this: org.xmlpull.v1.builder.impl.XmlInfosetBuilderImpl;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r2 = specialinvoke r0.<org.xmlpull.v1.builder.impl.XmlInfosetBuilderImpl: org.xmlpull.v1.builder.XmlDocument parseDocumentStart(org.xmlpull.v1.XmlPullParser)>(r1);

        $r3 = virtualinvoke r0.<org.xmlpull.v1.builder.impl.XmlInfosetBuilderImpl: org.xmlpull.v1.builder.XmlElement parseFragment(org.xmlpull.v1.XmlPullParser)>(r1);

        interfaceinvoke $r2.<org.xmlpull.v1.builder.XmlDocument: void setDocumentElement(org.xmlpull.v1.builder.XmlElement)>($r3);

        return $r2;
    }

    public java.lang.Object parseItem(org.xmlpull.v1.XmlPullParser)
    {
        java.lang.String[] $r4;
        org.xmlpull.v1.builder.impl.XmlInfosetBuilderImpl r10;
        org.xmlpull.v1.builder.XmlDocument $r11;
        java.lang.StringBuffer $r2, $r3, $r6, $r8;
        int $i0;
        org.xmlpull.v1.builder.XmlBuilderException $r1, $r15;
        java.lang.String $r5, $r7, $r9, $r12;
        org.xmlpull.v1.XmlPullParser r0;
        org.xmlpull.v1.XmlPullParserException $r14;
        org.xmlpull.v1.builder.XmlElement $r13;

        r10 := @this: org.xmlpull.v1.builder.impl.XmlInfosetBuilderImpl;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

     label1:
        $i0 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i0 != 2 goto label3;

        $r13 = virtualinvoke r10.<org.xmlpull.v1.builder.impl.XmlInfosetBuilderImpl: org.xmlpull.v1.builder.XmlElement parseStartTag(org.xmlpull.v1.XmlPullParser)>(r0);

     label2:
        return $r13;

     label3:
        if $i0 != 4 goto label5;

        $r12 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label4:
        return $r12;

     label5:
        if $i0 != 0 goto label7;

        $r11 = specialinvoke r10.<org.xmlpull.v1.builder.impl.XmlInfosetBuilderImpl: org.xmlpull.v1.builder.XmlDocument parseDocumentStart(org.xmlpull.v1.XmlPullParser)>(r0);

     label6:
        return $r11;

     label7:
        $r1 = new org.xmlpull.v1.builder.XmlBuilderException;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("currently unsupported event type ");

        $r4 = <org.xmlpull.v1.XmlPullParser: java.lang.String[] TYPES>;

        $r5 = $r4[$i0];

        $r6 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r1.<org.xmlpull.v1.builder.XmlBuilderException: void <init>(java.lang.String)>($r9);

        throw $r1;

     label8:
        $r14 := @caughtexception;

        $r15 = new org.xmlpull.v1.builder.XmlBuilderException;

        specialinvoke $r15.<org.xmlpull.v1.builder.XmlBuilderException: void <init>(java.lang.String,java.lang.Throwable)>("could not parse XML item", $r14);

        throw $r15;

        catch org.xmlpull.v1.XmlPullParserException from label1 to label2 with label8;
        catch org.xmlpull.v1.XmlPullParserException from label3 to label4 with label8;
        catch org.xmlpull.v1.XmlPullParserException from label5 to label6 with label8;
        catch org.xmlpull.v1.XmlPullParserException from label7 to label8 with label8;
    }

    private org.xmlpull.v1.builder.XmlDocument parseDocumentStart(org.xmlpull.v1.XmlPullParser)
    {
        org.xmlpull.v1.builder.impl.XmlInfosetBuilderImpl r16;
        java.lang.StringBuffer $r7, $r8, $r10;
        int $i0;
        java.lang.Boolean r3;
        java.lang.String $r4, $r9, $r11, r17;
        org.xmlpull.v1.builder.XmlBuilderException $r6, $r13, $r15;
        org.xmlpull.v1.XmlPullParser r0;
        java.io.IOException $r12;
        org.xmlpull.v1.XmlPullParserException $r14;
        org.xmlpull.v1.builder.impl.XmlDocumentImpl $r5;
        java.lang.Object $r1, $r2;

        r16 := @this: org.xmlpull.v1.builder.impl.XmlInfosetBuilderImpl;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

     label1:
        $i0 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i0 == 0 goto label2;

        $r6 = new org.xmlpull.v1.builder.XmlBuilderException;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("parser must be positioned on beginning of document and not ");

        $r9 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r6.<org.xmlpull.v1.builder.XmlBuilderException: void <init>(java.lang.String)>($r11);

        throw $r6;

     label2:
        interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r1 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.Object getProperty(java.lang.String)>("http://xmlpull.org/v1/doc/properties.html#xmldecl-version");

        r17 = (java.lang.String) $r1;

        $r2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.Object getProperty(java.lang.String)>("http://xmlpull.org/v1/doc/properties.html#xmldecl-standalone");

        r3 = (java.lang.Boolean) $r2;

        $r4 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getInputEncoding()>();

        $r5 = new org.xmlpull.v1.builder.impl.XmlDocumentImpl;

        specialinvoke $r5.<org.xmlpull.v1.builder.impl.XmlDocumentImpl: void <init>(java.lang.String,java.lang.Boolean,java.lang.String)>(r17, r3, $r4);

     label3:
        goto label6;

     label4:
        $r14 := @caughtexception;

        $r15 = new org.xmlpull.v1.builder.XmlBuilderException;

        specialinvoke $r15.<org.xmlpull.v1.builder.XmlBuilderException: void <init>(java.lang.String,java.lang.Throwable)>("could not parse XML document prolog", $r14);

        throw $r15;

     label5:
        $r12 := @caughtexception;

        $r13 = new org.xmlpull.v1.builder.XmlBuilderException;

        specialinvoke $r13.<org.xmlpull.v1.builder.XmlBuilderException: void <init>(java.lang.String,java.lang.Throwable)>("could not read XML document prolog", $r12);

        throw $r13;

     label6:
        return $r5;

        catch org.xmlpull.v1.XmlPullParserException from label1 to label3 with label4;
        catch java.io.IOException from label1 to label3 with label5;
    }

    public org.xmlpull.v1.builder.XmlElement parseFragment(org.xmlpull.v1.XmlPullParser)
    {
        java.lang.String[] $r14;
        org.xmlpull.v1.builder.impl.XmlInfosetBuilderImpl r1;
        java.lang.StringBuffer $r5, $r6, $r8, $r12, $r13, $r16, $r18;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r2, $r7, $r9, $r15, $r17, $r19;
        org.xmlpull.v1.builder.XmlBuilderException $r4, $r11, $r21, $r23;
        org.xmlpull.v1.XmlPullParser r0;
        java.io.IOException $r20;
        org.xmlpull.v1.XmlPullParserException $r22;
        org.xmlpull.v1.builder.XmlContainer $r3;
        org.xmlpull.v1.builder.XmlElement $r10, r24;

        r1 := @this: org.xmlpull.v1.builder.impl.XmlInfosetBuilderImpl;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

     label1:
        $i0 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        $i1 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i1 == 2 goto label2;

        $r11 = new org.xmlpull.v1.builder.XmlBuilderException;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("expected parser to be on start tag and not ");

        $r14 = <org.xmlpull.v1.XmlPullParser: java.lang.String[] TYPES>;

        $r15 = $r14[$i1];

        $r16 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        $r17 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r11.<org.xmlpull.v1.builder.XmlBuilderException: void <init>(java.lang.String)>($r19);

        throw $r11;

     label2:
        r24 = virtualinvoke r1.<org.xmlpull.v1.builder.impl.XmlInfosetBuilderImpl: org.xmlpull.v1.builder.XmlElement parseStartTag(org.xmlpull.v1.XmlPullParser)>(r0);

     label3:
        $i3 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i3 != 2 goto label4;

        $r10 = virtualinvoke r1.<org.xmlpull.v1.builder.impl.XmlInfosetBuilderImpl: org.xmlpull.v1.builder.XmlElement parseStartTag(org.xmlpull.v1.XmlPullParser)>(r0);

        interfaceinvoke r24.<org.xmlpull.v1.builder.XmlElement: org.xmlpull.v1.builder.XmlElement addElement(org.xmlpull.v1.builder.XmlElement)>($r10);

        r24 = $r10;

        goto label3;

     label4:
        if $i3 != 3 goto label7;

        $r3 = interfaceinvoke r24.<org.xmlpull.v1.builder.XmlElement: org.xmlpull.v1.builder.XmlContainer getParent()>();

        if $r3 != null goto label6;

        $i2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i2 == $i0 goto label5;

        $r4 = new org.xmlpull.v1.builder.XmlBuilderException;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("unbalanced input");

        $r7 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r4.<org.xmlpull.v1.builder.XmlBuilderException: void <init>(java.lang.String)>($r9);

        throw $r4;

     label5:
        return r24;

     label6:
        r24 = (org.xmlpull.v1.builder.XmlElement) $r3;

        goto label3;

     label7:
        if $i3 != 4 goto label3;

        $r2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        interfaceinvoke r24.<org.xmlpull.v1.builder.XmlElement: void addChild(java.lang.Object)>($r2);

        goto label3;

     label8:
        $r22 := @caughtexception;

        $r23 = new org.xmlpull.v1.builder.XmlBuilderException;

        specialinvoke $r23.<org.xmlpull.v1.builder.XmlBuilderException: void <init>(java.lang.String,java.lang.Throwable)>("could not build tree from XML", $r22);

        throw $r23;

     label9:
        $r20 := @caughtexception;

        $r21 = new org.xmlpull.v1.builder.XmlBuilderException;

        specialinvoke $r21.<org.xmlpull.v1.builder.XmlBuilderException: void <init>(java.lang.String,java.lang.Throwable)>("could not read XML tree content", $r20);

        throw $r21;

        catch org.xmlpull.v1.XmlPullParserException from label1 to label5 with label8;
        catch org.xmlpull.v1.XmlPullParserException from label6 to label8 with label8;
        catch java.io.IOException from label1 to label5 with label9;
        catch java.io.IOException from label6 to label8 with label9;
    }

    public org.xmlpull.v1.builder.XmlElement parseStartTag(org.xmlpull.v1.XmlPullParser)
    {
        org.xmlpull.v1.builder.impl.XmlElementImpl $r4;
        org.xmlpull.v1.builder.XmlBuilderException $r13, $r20;
        org.xmlpull.v1.XmlPullParser r0;
        boolean $z0, $z1;
        org.xmlpull.v1.builder.impl.XmlNamespaceImpl $r2;
        org.xmlpull.v1.XmlPullParserException $r19;
        org.xmlpull.v1.builder.impl.XmlInfosetBuilderImpl r21;
        java.lang.StringBuffer $r14, $r15, $r17;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7;
        java.lang.String $r1, $r3, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r16, $r18, $r22;

        r21 := @this: org.xmlpull.v1.builder.impl.XmlInfosetBuilderImpl;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

     label01:
        $i0 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i0 == 2 goto label02;

        $r13 = new org.xmlpull.v1.builder.XmlBuilderException;

        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("parser must be on START_TAG and not ");

        $r16 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r13.<org.xmlpull.v1.builder.XmlBuilderException: void <init>(java.lang.String)>($r18);

        throw $r13;

     label02:
        $r1 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getPrefix()>();

        $r2 = new org.xmlpull.v1.builder.impl.XmlNamespaceImpl;

        $r3 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getNamespace()>();

        specialinvoke $r2.<org.xmlpull.v1.builder.impl.XmlNamespaceImpl: void <init>(java.lang.String,java.lang.String)>($r1, $r3);

        $r4 = new org.xmlpull.v1.builder.impl.XmlElementImpl;

        $r5 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        specialinvoke $r4.<org.xmlpull.v1.builder.impl.XmlElementImpl: void <init>(org.xmlpull.v1.builder.XmlNamespace,java.lang.String)>($r2, $r5);

        $i1 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        $i2 = $i1 - 1;

        i6 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getNamespaceCount(int)>($i2);

     label03:
        $i3 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        $i4 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getNamespaceCount(int)>($i3);

        if i6 >= $i4 goto label06;

        $r11 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getNamespacePrefix(int)>(i6);

        if $r11 != null goto label04;

        $r22 = "";

        goto label05;

     label04:
        $r22 = $r11;

     label05:
        $r12 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getNamespaceUri(int)>(i6);

        interfaceinvoke $r4.<org.xmlpull.v1.builder.XmlElement: org.xmlpull.v1.builder.XmlNamespace declareNamespace(java.lang.String,java.lang.String)>($r22, $r12);

        i6 = i6 + 1;

        goto label03;

     label06:
        i7 = 0;

     label07:
        $i5 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getAttributeCount()>();

        if i7 >= $i5 goto label10;

        $r6 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeType(int)>(i7);

        $r7 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributePrefix(int)>(i7);

        $r8 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeNamespace(int)>(i7);

        $r9 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeName(int)>(i7);

        $r10 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(int)>(i7);

        $z0 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: boolean isAttributeDefault(int)>(i7);

        if $z0 != 0 goto label08;

        $z1 = 1;

        goto label09;

     label08:
        $z1 = 0;

     label09:
        interfaceinvoke $r4.<org.xmlpull.v1.builder.XmlElement: org.xmlpull.v1.builder.XmlAttribute addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>($r6, $r7, $r8, $r9, $r10, $z1);

        i7 = i7 + 1;

        goto label07;

     label10:
        return $r4;

     label11:
        $r19 := @caughtexception;

        $r20 = new org.xmlpull.v1.builder.XmlBuilderException;

        specialinvoke $r20.<org.xmlpull.v1.builder.XmlBuilderException: void <init>(java.lang.String,java.lang.Throwable)>("could not parse XML start tag", $r19);

        throw $r20;

        catch org.xmlpull.v1.XmlPullParserException from label01 to label10 with label11;
    }

    public org.xmlpull.v1.builder.XmlDocument parseLocation(java.lang.String)
    {
        java.net.URL $r0;
        org.xmlpull.v1.builder.impl.XmlInfosetBuilderImpl r2;
        org.xmlpull.v1.builder.XmlDocument $r4;
        java.lang.StringBuffer $r7, $r8, $r9, $r13, $r14, $r15;
        java.lang.String r1, $r10, $r16;
        org.xmlpull.v1.builder.XmlBuilderException $r6, $r12;
        java.net.MalformedURLException $r11;
        java.io.IOException $r5;
        java.io.InputStream $r3;

        r2 := @this: org.xmlpull.v1.builder.impl.XmlInfosetBuilderImpl;

        r1 := @parameter0: java.lang.String;

     label1:
        $r0 = new java.net.URL;

        specialinvoke $r0.<java.net.URL: void <init>(java.lang.String)>(r1);

     label2:
        goto label4;

     label3:
        $r11 := @caughtexception;

        $r12 = new org.xmlpull.v1.builder.XmlBuilderException;

        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("could not parse URL ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r12.<org.xmlpull.v1.builder.XmlBuilderException: void <init>(java.lang.String,java.lang.Throwable)>($r16, $r11);

        throw $r12;

     label4:
        $r3 = virtualinvoke $r0.<java.net.URL: java.io.InputStream openStream()>();

        $r4 = virtualinvoke r2.<org.xmlpull.v1.builder.XmlInfosetBuilder: org.xmlpull.v1.builder.XmlDocument parseInputStream(java.io.InputStream)>($r3);

     label5:
        return $r4;

     label6:
        $r5 := @caughtexception;

        $r6 = new org.xmlpull.v1.builder.XmlBuilderException;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("could not open connection to URL ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r6.<org.xmlpull.v1.builder.XmlBuilderException: void <init>(java.lang.String,java.lang.Throwable)>($r10, $r5);

        throw $r6;

        catch java.net.MalformedURLException from label1 to label2 with label3;
        catch java.io.IOException from label4 to label5 with label6;
    }

    public void serialize(java.lang.Object, org.xmlpull.v1.XmlSerializer)
    {
        java.util.Iterator $r5;
        java.util.Collection r4;
        org.xmlpull.v1.builder.impl.XmlInfosetBuilderImpl r1;
        org.xmlpull.v1.XmlSerializer r2;
        org.xmlpull.v1.builder.XmlContainer $r3;
        java.lang.Object r0, $r6;
        boolean $z0, $z1, $z2;

        r1 := @this: org.xmlpull.v1.builder.impl.XmlInfosetBuilderImpl;

        r0 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.xmlpull.v1.XmlSerializer;

        $z0 = r0 instanceof java.util.Collection;

        if $z0 == 0 goto label3;

        r4 = (java.util.Collection) r0;

        $r5 = interfaceinvoke r4.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke r1.<org.xmlpull.v1.builder.impl.XmlInfosetBuilderImpl: void serialize(java.lang.Object,org.xmlpull.v1.XmlSerializer)>($r6, r2);

        goto label1;

     label2:
        goto label5;

     label3:
        $z1 = r0 instanceof org.xmlpull.v1.builder.XmlContainer;

        if $z1 == 0 goto label4;

        $r3 = (org.xmlpull.v1.builder.XmlContainer) r0;

        specialinvoke r1.<org.xmlpull.v1.builder.impl.XmlInfosetBuilderImpl: void serializeContainer(org.xmlpull.v1.builder.XmlContainer,org.xmlpull.v1.XmlSerializer)>($r3, r2);

        goto label5;

     label4:
        virtualinvoke r1.<org.xmlpull.v1.builder.impl.XmlInfosetBuilderImpl: void serializeItem(java.lang.Object,org.xmlpull.v1.XmlSerializer)>(r0, r2);

     label5:
        return;
    }

    private void serializeContainer(org.xmlpull.v1.builder.XmlContainer, org.xmlpull.v1.XmlSerializer)
    {
        org.xmlpull.v1.builder.impl.XmlInfosetBuilderImpl r7;
        org.xmlpull.v1.builder.XmlDocument $r10;
        org.xmlpull.v1.XmlSerializer r8;
        java.lang.StringBuffer $r2, $r3, $r5, $r14, $r15, $r16, $r17, $r18;
        java.lang.String $r6, $r19;
        org.xmlpull.v1.builder.XmlBuilderException $r13;
        boolean $z0, $z1, $z2;
        org.xmlpull.v1.builder.XmlSerializable $r11;
        java.io.IOException $r12;
        java.lang.IllegalArgumentException $r1;
        org.xmlpull.v1.builder.XmlContainer r0;
        org.xmlpull.v1.builder.XmlElement $r9;
        java.lang.Class $r4;

        r7 := @this: org.xmlpull.v1.builder.impl.XmlInfosetBuilderImpl;

        r0 := @parameter0: org.xmlpull.v1.builder.XmlContainer;

        r8 := @parameter1: org.xmlpull.v1.XmlSerializer;

        $z0 = r0 instanceof org.xmlpull.v1.builder.XmlSerializable;

        if $z0 == 0 goto label4;

     label1:
        $r11 = (org.xmlpull.v1.builder.XmlSerializable) r0;

        interfaceinvoke $r11.<org.xmlpull.v1.builder.XmlSerializable: void serialize(org.xmlpull.v1.XmlSerializer)>(r8);

     label2:
        goto label7;

     label3:
        $r12 := @caughtexception;

        $r13 = new org.xmlpull.v1.builder.XmlBuilderException;

        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("could not serialize node ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r0);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r12);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r13.<org.xmlpull.v1.builder.XmlBuilderException: void <init>(java.lang.String,java.lang.Throwable)>($r19, $r12);

        throw $r13;

     label4:
        $z1 = r0 instanceof org.xmlpull.v1.builder.XmlDocument;

        if $z1 == 0 goto label5;

        $r10 = (org.xmlpull.v1.builder.XmlDocument) r0;

        specialinvoke r7.<org.xmlpull.v1.builder.impl.XmlInfosetBuilderImpl: void serializeDocument(org.xmlpull.v1.builder.XmlDocument,org.xmlpull.v1.XmlSerializer)>($r10, r8);

        goto label7;

     label5:
        $z2 = r0 instanceof org.xmlpull.v1.builder.XmlElement;

        if $z2 == 0 goto label6;

        $r9 = (org.xmlpull.v1.builder.XmlElement) r0;

        specialinvoke r7.<org.xmlpull.v1.builder.impl.XmlInfosetBuilderImpl: void serializeFragment(org.xmlpull.v1.builder.XmlElement,org.xmlpull.v1.XmlSerializer)>($r9, r8);

        goto label7;

     label6:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("could not serialzie unknown XML container ");

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r1;

     label7:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void serializeItem(java.lang.Object, org.xmlpull.v1.XmlSerializer)
    {
        org.xmlpull.v1.builder.impl.XmlInfosetBuilderImpl r23;
        org.xmlpull.v1.XmlSerializer r6;
        java.lang.StringBuffer $r2, $r3, $r4, $r17, $r18, $r19, $r20, $r21;
        java.lang.String $r5, $r8, $r10, $r11, $r22;
        org.xmlpull.v1.builder.XmlBuilderException $r14, $r16;
        boolean $z0, $z1, $z2, $z3;
        org.xmlpull.v1.builder.XmlCharacters $r9;
        org.xmlpull.v1.builder.XmlSerializable $r12;
        java.io.IOException $r13, $r15;
        java.lang.IllegalArgumentException $r1;
        org.xmlpull.v1.builder.XmlComment $r7;
        java.lang.Object r0, $r24;

        r23 := @this: org.xmlpull.v1.builder.impl.XmlInfosetBuilderImpl;

        r0 := @parameter0: java.lang.Object;

        r6 := @parameter1: org.xmlpull.v1.XmlSerializer;

     label01:
        $z0 = r0 instanceof org.xmlpull.v1.builder.XmlSerializable;

        if $z0 == 0 goto label05;

     label02:
        $r12 = (org.xmlpull.v1.builder.XmlSerializable) r0;

        interfaceinvoke $r12.<org.xmlpull.v1.builder.XmlSerializable: void serialize(org.xmlpull.v1.XmlSerializer)>(r6);

     label03:
        goto label11;

     label04:
        $r15 := @caughtexception;

        $r16 = new org.xmlpull.v1.builder.XmlBuilderException;

        $r17 = new java.lang.StringBuffer;

        specialinvoke $r17.<java.lang.StringBuffer: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("could not serialize item ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r0);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r15);

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r16.<org.xmlpull.v1.builder.XmlBuilderException: void <init>(java.lang.String,java.lang.Throwable)>($r22, $r15);

        throw $r16;

     label05:
        $z1 = r0 instanceof java.lang.String;

        if $z1 == 0 goto label06;

        $r11 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r11);

        goto label11;

     label06:
        $z2 = r0 instanceof org.xmlpull.v1.builder.XmlCharacters;

        if $z2 == 0 goto label07;

        $r9 = (org.xmlpull.v1.builder.XmlCharacters) r0;

        $r10 = interfaceinvoke $r9.<org.xmlpull.v1.builder.XmlCharacters: java.lang.String getText()>();

        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r10);

        goto label11;

     label07:
        $z3 = r0 instanceof org.xmlpull.v1.builder.XmlComment;

        if $z3 == 0 goto label08;

        $r7 = (org.xmlpull.v1.builder.XmlComment) r0;

        $r8 = interfaceinvoke $r7.<org.xmlpull.v1.builder.XmlComment: java.lang.String getContent()>();

        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: void comment(java.lang.String)>($r8);

        goto label11;

     label08:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("could not serialize ");

        if r0 == null goto label09;

        $r24 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        goto label10;

     label09:
        $r24 = r0;

     label10:
        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r24);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label11:
        goto label13;

     label12:
        $r13 := @caughtexception;

        $r14 = new org.xmlpull.v1.builder.XmlBuilderException;

        specialinvoke $r14.<org.xmlpull.v1.builder.XmlBuilderException: void <init>(java.lang.String,java.lang.Throwable)>("serializing XML start tag failed", $r13);

        throw $r14;

     label13:
        return;

        catch java.io.IOException from label02 to label03 with label04;
        catch java.io.IOException from label01 to label11 with label12;
    }

    public void serializeStartTag(org.xmlpull.v1.builder.XmlElement, org.xmlpull.v1.XmlSerializer)
    {
        org.xmlpull.v1.XmlSerializer r2;
        org.xmlpull.v1.builder.XmlBuilderException $r15;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.xmlpull.v1.builder.XmlSerializable $r8;
        org.xmlpull.v1.builder.XmlAttribute r25;
        org.xmlpull.v1.builder.impl.XmlInfosetBuilderImpl r16;
        int $i0;
        java.lang.String $r5, $r6, $r7, $r9, $r12, $r13, $r17, r18, r19, r21, r22, $r23, $r24, r26, r27;
        java.util.Iterator $r3, $r10;
        org.xmlpull.v1.builder.XmlNamespace $r1, r20;
        java.io.IOException $r14;
        org.xmlpull.v1.builder.XmlElement r0;
        java.lang.Object $r4, $r11;

        r16 := @this: org.xmlpull.v1.builder.impl.XmlInfosetBuilderImpl;

        r0 := @parameter0: org.xmlpull.v1.builder.XmlElement;

        r2 := @parameter1: org.xmlpull.v1.XmlSerializer;

     label01:
        $r1 = interfaceinvoke r0.<org.xmlpull.v1.builder.XmlElement: org.xmlpull.v1.builder.XmlNamespace getNamespace()>();

        if $r1 == null goto label02;

        $r17 = interfaceinvoke $r1.<org.xmlpull.v1.builder.XmlNamespace: java.lang.String getPrefix()>();

        goto label03;

     label02:
        $r17 = "";

     label03:
        r18 = $r17;

        if $r17 != null goto label04;

        r18 = "";

     label04:
        r19 = null;

        $z0 = interfaceinvoke r0.<org.xmlpull.v1.builder.XmlElement: boolean hasNamespaceDeclarations()>();

        if $z0 == 0 goto label08;

        $r10 = interfaceinvoke r0.<org.xmlpull.v1.builder.XmlElement: java.util.Iterator namespaces()>();

     label05:
        $z4 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label08;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r20 = (org.xmlpull.v1.builder.XmlNamespace) $r11;

        $r12 = interfaceinvoke r20.<org.xmlpull.v1.builder.XmlNamespace: java.lang.String getPrefix()>();

        $z5 = virtualinvoke r18.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z5 != 0 goto label06;

        $r13 = interfaceinvoke r20.<org.xmlpull.v1.builder.XmlNamespace: java.lang.String getNamespaceName()>();

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: void setPrefix(java.lang.String,java.lang.String)>($r12, $r13);

        goto label07;

     label06:
        r19 = interfaceinvoke r20.<org.xmlpull.v1.builder.XmlNamespace: java.lang.String getNamespaceName()>();

     label07:
        goto label05;

     label08:
        if r19 == null goto label09;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: void setPrefix(java.lang.String,java.lang.String)>(r18, r19);

        goto label13;

     label09:
        if $r1 == null goto label13;

        $r9 = interfaceinvoke $r1.<org.xmlpull.v1.builder.XmlNamespace: java.lang.String getNamespaceName()>();

        r21 = $r9;

        if $r9 != null goto label10;

        r21 = "";

     label10:
        r22 = null;

        r27 = null;

        r26 = null;

        $i0 = virtualinvoke r21.<java.lang.String: int length()>();

        if $i0 <= 0 goto label11;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: java.lang.String getPrefix(java.lang.String,boolean)>(r21, 0);

     label11:
        if null != null goto label12;

        r22 = "";

        r27 = "";

        r26 = "";

     label12:
        if r26 == r18 goto label13;

        $z3 = virtualinvoke r27.<java.lang.String: boolean equals(java.lang.Object)>(r18);

        if $z3 != 0 goto label13;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: void setPrefix(java.lang.String,java.lang.String)>(r18, r21);

     label13:
        $r23 = interfaceinvoke r0.<org.xmlpull.v1.builder.XmlElement: java.lang.String getNamespaceName()>();

        $r24 = interfaceinvoke r0.<org.xmlpull.v1.builder.XmlElement: java.lang.String getName()>();

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>($r23, $r24);

        $z6 = interfaceinvoke r0.<org.xmlpull.v1.builder.XmlElement: boolean hasAttributes()>();

        if $z6 == 0 goto label17;

        $r3 = interfaceinvoke r0.<org.xmlpull.v1.builder.XmlElement: java.util.Iterator attributes()>();

     label14:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label17;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r25 = (org.xmlpull.v1.builder.XmlAttribute) $r4;

        $z2 = r25 instanceof org.xmlpull.v1.builder.XmlSerializable;

        if $z2 == 0 goto label15;

        $r8 = (org.xmlpull.v1.builder.XmlSerializable) r25;

        interfaceinvoke $r8.<org.xmlpull.v1.builder.XmlSerializable: void serialize(org.xmlpull.v1.XmlSerializer)>(r2);

        goto label16;

     label15:
        $r5 = interfaceinvoke r25.<org.xmlpull.v1.builder.XmlAttribute: java.lang.String getNamespaceName()>();

        $r6 = interfaceinvoke r25.<org.xmlpull.v1.builder.XmlAttribute: java.lang.String getName()>();

        $r7 = interfaceinvoke r25.<org.xmlpull.v1.builder.XmlAttribute: java.lang.String getValue()>();

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>($r5, $r6, $r7);

     label16:
        goto label14;

     label17:
        goto label19;

     label18:
        $r14 := @caughtexception;

        $r15 = new org.xmlpull.v1.builder.XmlBuilderException;

        specialinvoke $r15.<org.xmlpull.v1.builder.XmlBuilderException: void <init>(java.lang.String,java.lang.Throwable)>("serializing XML start tag failed", $r14);

        throw $r15;

     label19:
        return;

        catch java.io.IOException from label01 to label17 with label18;
    }

    public void serializeEndTag(org.xmlpull.v1.builder.XmlElement, org.xmlpull.v1.XmlSerializer)
    {
        org.xmlpull.v1.builder.XmlElement r1;
        java.io.IOException $r4;
        java.lang.String $r2, $r3;
        org.xmlpull.v1.builder.XmlBuilderException $r5;
        org.xmlpull.v1.builder.impl.XmlInfosetBuilderImpl r6;
        org.xmlpull.v1.XmlSerializer r0;

        r6 := @this: org.xmlpull.v1.builder.impl.XmlInfosetBuilderImpl;

        r1 := @parameter0: org.xmlpull.v1.builder.XmlElement;

        r0 := @parameter1: org.xmlpull.v1.XmlSerializer;

     label1:
        $r2 = interfaceinvoke r1.<org.xmlpull.v1.builder.XmlElement: java.lang.String getNamespaceName()>();

        $r3 = interfaceinvoke r1.<org.xmlpull.v1.builder.XmlElement: java.lang.String getName()>();

        interfaceinvoke r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>($r2, $r3);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new org.xmlpull.v1.builder.XmlBuilderException;

        specialinvoke $r5.<org.xmlpull.v1.builder.XmlBuilderException: void <init>(java.lang.String,java.lang.Throwable)>("serializing XML end tag failed", $r4);

        throw $r5;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private void serializeDocument(org.xmlpull.v1.builder.XmlDocument, org.xmlpull.v1.XmlSerializer)
    {
        org.xmlpull.v1.builder.impl.XmlInfosetBuilderImpl r11;
        org.xmlpull.v1.builder.XmlDocument r1;
        org.xmlpull.v1.XmlSerializer r0;
        java.lang.StringBuffer $r6, $r7, $r8, $r9;
        java.lang.Boolean $r3;
        java.lang.String $r2, $r10;
        org.xmlpull.v1.builder.XmlBuilderException $r5, $r14, $r16;
        java.io.IOException $r13, $r15;
        org.xmlpull.v1.builder.XmlElement $r4, $r12;

        r11 := @this: org.xmlpull.v1.builder.impl.XmlInfosetBuilderImpl;

        r1 := @parameter0: org.xmlpull.v1.builder.XmlDocument;

        r0 := @parameter1: org.xmlpull.v1.XmlSerializer;

     label1:
        $r2 = interfaceinvoke r1.<org.xmlpull.v1.builder.XmlDocument: java.lang.String getCharacterEncodingScheme()>();

        $r3 = interfaceinvoke r1.<org.xmlpull.v1.builder.XmlDocument: java.lang.Boolean isStandalone()>();

        interfaceinvoke r0.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>($r2, $r3);

     label2:
        goto label4;

     label3:
        $r15 := @caughtexception;

        $r16 = new org.xmlpull.v1.builder.XmlBuilderException;

        specialinvoke $r16.<org.xmlpull.v1.builder.XmlBuilderException: void <init>(java.lang.String,java.lang.Throwable)>("serializing XML document start failed", $r15);

        throw $r16;

     label4:
        $r4 = interfaceinvoke r1.<org.xmlpull.v1.builder.XmlDocument: org.xmlpull.v1.builder.XmlElement getDocumentElement()>();

        if $r4 == null goto label5;

        $r12 = interfaceinvoke r1.<org.xmlpull.v1.builder.XmlDocument: org.xmlpull.v1.builder.XmlElement getDocumentElement()>();

        specialinvoke r11.<org.xmlpull.v1.builder.impl.XmlInfosetBuilderImpl: void serializeFragment(org.xmlpull.v1.builder.XmlElement,org.xmlpull.v1.XmlSerializer)>($r12, r0);

        goto label6;

     label5:
        $r5 = new org.xmlpull.v1.builder.XmlBuilderException;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("could not serialize document without root element ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r5.<org.xmlpull.v1.builder.XmlBuilderException: void <init>(java.lang.String)>($r10);

        throw $r5;

     label6:
        interfaceinvoke r0.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

     label7:
        goto label9;

     label8:
        $r13 := @caughtexception;

        $r14 = new org.xmlpull.v1.builder.XmlBuilderException;

        specialinvoke $r14.<org.xmlpull.v1.builder.XmlBuilderException: void <init>(java.lang.String,java.lang.Throwable)>("serializing XML document end failed", $r13);

        throw $r14;

     label9:
        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.io.IOException from label6 to label7 with label8;
    }

    private void serializeFragment(org.xmlpull.v1.builder.XmlElement, org.xmlpull.v1.XmlSerializer)
    {
        org.xmlpull.v1.builder.impl.XmlInfosetBuilderImpl r0;
        org.xmlpull.v1.XmlSerializer r2;
        java.lang.StringBuffer $r9, $r10, $r11, $r12, $r13;
        org.xmlpull.v1.builder.XmlBuilderException $r8;
        java.lang.String $r14;
        boolean $z0, $z1, $z2, $z3;
        java.util.Iterator $r3;
        org.xmlpull.v1.builder.XmlSerializable $r6;
        java.io.IOException $r7;
        org.xmlpull.v1.builder.XmlElement r1, $r5;
        java.lang.Object $r4;

        r0 := @this: org.xmlpull.v1.builder.impl.XmlInfosetBuilderImpl;

        r1 := @parameter0: org.xmlpull.v1.builder.XmlElement;

        r2 := @parameter1: org.xmlpull.v1.XmlSerializer;

        virtualinvoke r0.<org.xmlpull.v1.builder.impl.XmlInfosetBuilderImpl: void serializeStartTag(org.xmlpull.v1.builder.XmlElement,org.xmlpull.v1.XmlSerializer)>(r1, r2);

        $z0 = interfaceinvoke r1.<org.xmlpull.v1.builder.XmlElement: boolean hasChildren()>();

        if $z0 == 0 goto label8;

        $r3 = interfaceinvoke r1.<org.xmlpull.v1.builder.XmlElement: java.util.Iterator children()>();

     label1:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label8;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $z2 = $r4 instanceof org.xmlpull.v1.builder.XmlSerializable;

        if $z2 == 0 goto label5;

     label2:
        $r6 = (org.xmlpull.v1.builder.XmlSerializable) $r4;

        interfaceinvoke $r6.<org.xmlpull.v1.builder.XmlSerializable: void serialize(org.xmlpull.v1.XmlSerializer)>(r2);

     label3:
        goto label7;

     label4:
        $r7 := @caughtexception;

        $r8 = new org.xmlpull.v1.builder.XmlBuilderException;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("could not serialize item ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r4);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r7);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r8.<org.xmlpull.v1.builder.XmlBuilderException: void <init>(java.lang.String,java.lang.Throwable)>($r14, $r7);

        throw $r8;

     label5:
        $z3 = $r4 instanceof org.xmlpull.v1.builder.XmlElement;

        if $z3 == 0 goto label6;

        $r5 = (org.xmlpull.v1.builder.XmlElement) $r4;

        specialinvoke r0.<org.xmlpull.v1.builder.impl.XmlInfosetBuilderImpl: void serializeFragment(org.xmlpull.v1.builder.XmlElement,org.xmlpull.v1.XmlSerializer)>($r5, r2);

        goto label7;

     label6:
        virtualinvoke r0.<org.xmlpull.v1.builder.impl.XmlInfosetBuilderImpl: void serializeItem(java.lang.Object,org.xmlpull.v1.XmlSerializer)>($r4, r2);

     label7:
        goto label1;

     label8:
        virtualinvoke r0.<org.xmlpull.v1.builder.impl.XmlInfosetBuilderImpl: void serializeEndTag(org.xmlpull.v1.builder.XmlElement,org.xmlpull.v1.XmlSerializer)>(r1, r2);

        return;

        catch java.io.IOException from label2 to label3 with label4;
    }

    public static void <clinit>()
    {
        <org.xmlpull.v1.builder.impl.XmlInfosetBuilderImpl: java.lang.String PROPERTY_XMLDECL_VERSION> = "http://xmlpull.org/v1/doc/properties.html#xmldecl-version";

        <org.xmlpull.v1.builder.impl.XmlInfosetBuilderImpl: java.lang.String PROPERTY_XMLDECL_STANDALONE> = "http://xmlpull.org/v1/doc/properties.html#xmldecl-standalone";

        return;
    }
}
