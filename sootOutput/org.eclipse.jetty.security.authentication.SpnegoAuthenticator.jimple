public class org.eclipse.jetty.security.authentication.SpnegoAuthenticator extends org.eclipse.jetty.security.authentication.LoginAuthenticator
{
    private static final org.eclipse.jetty.util.log.Logger LOG;
    private java.lang.String _authMethod;

    public void <init>()
    {
        org.eclipse.jetty.security.authentication.SpnegoAuthenticator r0;

        r0 := @this: org.eclipse.jetty.security.authentication.SpnegoAuthenticator;

        specialinvoke r0.<org.eclipse.jetty.security.authentication.LoginAuthenticator: void <init>()>();

        r0.<org.eclipse.jetty.security.authentication.SpnegoAuthenticator: java.lang.String _authMethod> = "SPNEGO";

        return;
    }

    public void <init>(java.lang.String)
    {
        org.eclipse.jetty.security.authentication.SpnegoAuthenticator r0;
        java.lang.String r1;

        r0 := @this: org.eclipse.jetty.security.authentication.SpnegoAuthenticator;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.eclipse.jetty.security.authentication.LoginAuthenticator: void <init>()>();

        r0.<org.eclipse.jetty.security.authentication.SpnegoAuthenticator: java.lang.String _authMethod> = "SPNEGO";

        r0.<org.eclipse.jetty.security.authentication.SpnegoAuthenticator: java.lang.String _authMethod> = r1;

        return;
    }

    public java.lang.String getAuthMethod()
    {
        org.eclipse.jetty.security.authentication.SpnegoAuthenticator r0;
        java.lang.String $r1;

        r0 := @this: org.eclipse.jetty.security.authentication.SpnegoAuthenticator;

        $r1 = r0.<org.eclipse.jetty.security.authentication.SpnegoAuthenticator: java.lang.String _authMethod>;

        return $r1;
    }

    public org.eclipse.jetty.server.Authentication validateRequest(javax.servlet.ServletRequest, javax.servlet.ServletResponse, boolean) throws org.eclipse.jetty.security.ServerAuthException
    {
        java.lang.Object[] $r10;
        org.eclipse.jetty.security.authentication.DeferredAuthentication $r14;
        org.eclipse.jetty.server.UserIdentity $r7;
        javax.servlet.http.HttpServletRequest r1;
        java.lang.String $r4, $r5, $r9;
        boolean z0, $z1, $z2;
        javax.servlet.ServletRequest r0;
        javax.servlet.http.HttpServletResponse r3;
        org.eclipse.jetty.security.UserAuthentication $r8;
        java.io.IOException $r15;
        org.eclipse.jetty.security.authentication.SpnegoAuthenticator r6;
        org.eclipse.jetty.security.ServerAuthException $r16;
        org.eclipse.jetty.server.Authentication $r12, $r13, $r17;
        javax.servlet.ServletResponse r2;
        org.eclipse.jetty.util.log.Logger $r11;

        r6 := @this: org.eclipse.jetty.security.authentication.SpnegoAuthenticator;

        r0 := @parameter0: javax.servlet.ServletRequest;

        r2 := @parameter1: javax.servlet.ServletResponse;

        z0 := @parameter2: boolean;

        r1 = (javax.servlet.http.HttpServletRequest) r0;

        r3 = (javax.servlet.http.HttpServletResponse) r2;

        $r4 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>("Authorization");

        if z0 != 0 goto label1;

        $r14 = new org.eclipse.jetty.security.authentication.DeferredAuthentication;

        specialinvoke $r14.<org.eclipse.jetty.security.authentication.DeferredAuthentication: void <init>(org.eclipse.jetty.security.authentication.LoginAuthenticator)>(r6);

        return $r14;

     label1:
        if $r4 != null goto label7;

     label2:
        $z2 = staticinvoke <org.eclipse.jetty.security.authentication.DeferredAuthentication: boolean isDeferred(javax.servlet.http.HttpServletResponse)>(r3);

        if $z2 == 0 goto label4;

        $r13 = <org.eclipse.jetty.server.Authentication: org.eclipse.jetty.server.Authentication UNAUTHENTICATED>;

     label3:
        return $r13;

     label4:
        $r11 = <org.eclipse.jetty.security.authentication.SpnegoAuthenticator: org.eclipse.jetty.util.log.Logger LOG>;

        $r10 = newarray (java.lang.Object)[0];

        interfaceinvoke $r11.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>("SpengoAuthenticator: sending challenge", $r10);

        interfaceinvoke r3.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>("WWW-Authenticate", "Negotiate");

        interfaceinvoke r3.<javax.servlet.http.HttpServletResponse: void sendError(int)>(401);

        $r12 = <org.eclipse.jetty.server.Authentication: org.eclipse.jetty.server.Authentication SEND_CONTINUE>;

     label5:
        return $r12;

     label6:
        $r15 := @caughtexception;

        $r16 = new org.eclipse.jetty.security.ServerAuthException;

        specialinvoke $r16.<org.eclipse.jetty.security.ServerAuthException: void <init>(java.lang.Throwable)>($r15);

        throw $r16;

     label7:
        if $r4 == null goto label8;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean startsWith(java.lang.String)>("Negotiate");

        if $z1 == 0 goto label8;

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int)>(10);

        $r7 = virtualinvoke r6.<org.eclipse.jetty.security.authentication.SpnegoAuthenticator: org.eclipse.jetty.server.UserIdentity login(java.lang.String,java.lang.Object,javax.servlet.ServletRequest)>(null, $r5, r0);

        if $r7 == null goto label8;

        $r8 = new org.eclipse.jetty.security.UserAuthentication;

        $r9 = virtualinvoke r6.<org.eclipse.jetty.security.authentication.SpnegoAuthenticator: java.lang.String getAuthMethod()>();

        specialinvoke $r8.<org.eclipse.jetty.security.UserAuthentication: void <init>(java.lang.String,org.eclipse.jetty.server.UserIdentity)>($r9, $r7);

        return $r8;

     label8:
        $r17 = <org.eclipse.jetty.server.Authentication: org.eclipse.jetty.server.Authentication UNAUTHENTICATED>;

        return $r17;

        catch java.io.IOException from label2 to label3 with label6;
        catch java.io.IOException from label4 to label5 with label6;
    }

    public boolean secureResponse(javax.servlet.ServletRequest, javax.servlet.ServletResponse, boolean, org.eclipse.jetty.server.Authentication$User) throws org.eclipse.jetty.security.ServerAuthException
    {
        org.eclipse.jetty.security.authentication.SpnegoAuthenticator r0;
        javax.servlet.ServletRequest r1;
        javax.servlet.ServletResponse r2;
        org.eclipse.jetty.server.Authentication$User r3;
        boolean z0;

        r0 := @this: org.eclipse.jetty.security.authentication.SpnegoAuthenticator;

        r1 := @parameter0: javax.servlet.ServletRequest;

        r2 := @parameter1: javax.servlet.ServletResponse;

        z0 := @parameter2: boolean;

        r3 := @parameter3: org.eclipse.jetty.server.Authentication$User;

        return 1;
    }

    static void <clinit>()
    {
        org.eclipse.jetty.util.log.Logger $r0;

        $r0 = staticinvoke <org.eclipse.jetty.util.log.Log: org.eclipse.jetty.util.log.Logger getLogger(java.lang.Class)>(class "Lorg/eclipse/jetty/security/authentication/SpnegoAuthenticator;");

        <org.eclipse.jetty.security.authentication.SpnegoAuthenticator: org.eclipse.jetty.util.log.Logger LOG> = $r0;

        return;
    }
}
