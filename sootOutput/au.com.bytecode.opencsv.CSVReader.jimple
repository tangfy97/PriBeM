public class au.com.bytecode.opencsv.CSVReader extends java.lang.Object implements java.io.Closeable
{
    private java.io.BufferedReader br;
    private boolean hasNext;
    private final char separator;
    private final char quotechar;
    private final char escape;
    private int skipLines;
    private boolean linesSkiped;
    public static final char DEFAULT_SEPARATOR;
    public static final int INITIAL_READ_SIZE;
    public static final char DEFAULT_QUOTE_CHARACTER;
    public static final char DEFAULT_ESCAPE_CHARACTER;
    public static final int DEFAULT_SKIP_LINES;

    public void <init>(java.io.Reader)
    {
        java.io.Reader r1;
        au.com.bytecode.opencsv.CSVReader r0;

        r0 := @this: au.com.bytecode.opencsv.CSVReader;

        r1 := @parameter0: java.io.Reader;

        specialinvoke r0.<au.com.bytecode.opencsv.CSVReader: void <init>(java.io.Reader,char)>(r1, 44);

        return;
    }

    public void <init>(java.io.Reader, char)
    {
        char c0;
        java.io.Reader r1;
        au.com.bytecode.opencsv.CSVReader r0;

        r0 := @this: au.com.bytecode.opencsv.CSVReader;

        r1 := @parameter0: java.io.Reader;

        c0 := @parameter1: char;

        specialinvoke r0.<au.com.bytecode.opencsv.CSVReader: void <init>(java.io.Reader,char,char,char)>(r1, c0, 34, 92);

        return;
    }

    public void <init>(java.io.Reader, char, char)
    {
        au.com.bytecode.opencsv.CSVReader r0;
        char c0, c1;
        java.io.Reader r1;

        r0 := @this: au.com.bytecode.opencsv.CSVReader;

        r1 := @parameter0: java.io.Reader;

        c0 := @parameter1: char;

        c1 := @parameter2: char;

        specialinvoke r0.<au.com.bytecode.opencsv.CSVReader: void <init>(java.io.Reader,char,char,char,int)>(r1, c0, c1, 92, 0);

        return;
    }

    public void <init>(java.io.Reader, char, char, char)
    {
        au.com.bytecode.opencsv.CSVReader r0;
        char c0, c1, c2;
        java.io.Reader r1;

        r0 := @this: au.com.bytecode.opencsv.CSVReader;

        r1 := @parameter0: java.io.Reader;

        c0 := @parameter1: char;

        c1 := @parameter2: char;

        c2 := @parameter3: char;

        specialinvoke r0.<au.com.bytecode.opencsv.CSVReader: void <init>(java.io.Reader,char,char,char,int)>(r1, c0, c1, c2, 0);

        return;
    }

    public void <init>(java.io.Reader, char, char, int)
    {
        au.com.bytecode.opencsv.CSVReader r0;
        int i2;
        char c0, c1;
        java.io.Reader r1;

        r0 := @this: au.com.bytecode.opencsv.CSVReader;

        r1 := @parameter0: java.io.Reader;

        c0 := @parameter1: char;

        c1 := @parameter2: char;

        i2 := @parameter3: int;

        specialinvoke r0.<au.com.bytecode.opencsv.CSVReader: void <init>(java.io.Reader,char,char,char,int)>(r1, c0, c1, 92, i2);

        return;
    }

    public void <init>(java.io.Reader, char, char, char, int)
    {
        au.com.bytecode.opencsv.CSVReader r0;
        int i3;
        char c0, c1, c2;
        java.io.BufferedReader $r1;
        java.io.Reader r2;

        r0 := @this: au.com.bytecode.opencsv.CSVReader;

        r2 := @parameter0: java.io.Reader;

        c0 := @parameter1: char;

        c1 := @parameter2: char;

        c2 := @parameter3: char;

        i3 := @parameter4: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<au.com.bytecode.opencsv.CSVReader: boolean hasNext> = 1;

        $r1 = new java.io.BufferedReader;

        specialinvoke $r1.<java.io.BufferedReader: void <init>(java.io.Reader)>(r2);

        r0.<au.com.bytecode.opencsv.CSVReader: java.io.BufferedReader br> = $r1;

        r0.<au.com.bytecode.opencsv.CSVReader: char separator> = c0;

        r0.<au.com.bytecode.opencsv.CSVReader: char quotechar> = c1;

        r0.<au.com.bytecode.opencsv.CSVReader: char escape> = c2;

        r0.<au.com.bytecode.opencsv.CSVReader: int skipLines> = i3;

        return;
    }

    public java.util.List readAll() throws java.io.IOException
    {
        au.com.bytecode.opencsv.CSVReader r1;
        java.lang.String[] $r2;
        java.util.ArrayList $r0;
        boolean $z0;

        r1 := @this: au.com.bytecode.opencsv.CSVReader;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

     label1:
        $z0 = r1.<au.com.bytecode.opencsv.CSVReader: boolean hasNext>;

        if $z0 == 0 goto label3;

        $r2 = virtualinvoke r1.<au.com.bytecode.opencsv.CSVReader: java.lang.String[] readNext()>();

        if $r2 == null goto label2;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r2);

     label2:
        goto label1;

     label3:
        return $r0;
    }

    public java.lang.String[] readNext() throws java.io.IOException
    {
        au.com.bytecode.opencsv.CSVReader r0;
        java.lang.String[] $r2;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: au.com.bytecode.opencsv.CSVReader;

        $r1 = specialinvoke r0.<au.com.bytecode.opencsv.CSVReader: java.lang.String getNextLine()>();

        $z0 = r0.<au.com.bytecode.opencsv.CSVReader: boolean hasNext>;

        if $z0 == 0 goto label1;

        $r2 = specialinvoke r0.<au.com.bytecode.opencsv.CSVReader: java.lang.String[] parseLine(java.lang.String)>($r1);

        goto label2;

     label1:
        $r2 = null;

     label2:
        return $r2;
    }

    private java.lang.String getNextLine() throws java.io.IOException
    {
        au.com.bytecode.opencsv.CSVReader r0;
        int $i0, i1;
        java.io.BufferedReader $r1, $r3;
        java.lang.String $r2, $r4;
        boolean $z0, $z1;

        r0 := @this: au.com.bytecode.opencsv.CSVReader;

        $z0 = r0.<au.com.bytecode.opencsv.CSVReader: boolean linesSkiped>;

        if $z0 != 0 goto label3;

        i1 = 0;

     label1:
        $i0 = r0.<au.com.bytecode.opencsv.CSVReader: int skipLines>;

        if i1 >= $i0 goto label2;

        $r3 = r0.<au.com.bytecode.opencsv.CSVReader: java.io.BufferedReader br>;

        virtualinvoke $r3.<java.io.BufferedReader: java.lang.String readLine()>();

        i1 = i1 + 1;

        goto label1;

     label2:
        r0.<au.com.bytecode.opencsv.CSVReader: boolean linesSkiped> = 1;

     label3:
        $r1 = r0.<au.com.bytecode.opencsv.CSVReader: java.io.BufferedReader br>;

        $r2 = virtualinvoke $r1.<java.io.BufferedReader: java.lang.String readLine()>();

        if $r2 != null goto label4;

        r0.<au.com.bytecode.opencsv.CSVReader: boolean hasNext> = 0;

     label4:
        $z1 = r0.<au.com.bytecode.opencsv.CSVReader: boolean hasNext>;

        if $z1 == 0 goto label5;

        $r4 = $r2;

        goto label6;

     label5:
        $r4 = null;

     label6:
        return $r4;
    }

    private java.lang.String[] parseLine(java.lang.String) throws java.io.IOException
    {
        boolean $z0, $z1, z2, $z3;
        java.lang.StringBuilder r11, $r13, $r14;
        java.lang.Object[] $r4;
        java.lang.String[] $r3, $r5;
        java.util.ArrayList $r12;
        au.com.bytecode.opencsv.CSVReader r6;
        int $i4, $i7, $i8, $i9, $i12, $i14, i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27;
        java.lang.String $r2, $r7, $r9, r10;
        char $c0, $c1, $c2, $c3, $c5, $c6, $c10, $c11, $c13, $c15;

        r6 := @this: au.com.bytecode.opencsv.CSVReader;

        r10 := @parameter0: java.lang.String;

        if r10 != null goto label01;

        return null;

     label01:
        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>(int)>(64);

        r11 = $r13;

        z2 = 0;

     label02:
        if z2 == 0 goto label03;

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r9 = specialinvoke r6.<au.com.bytecode.opencsv.CSVReader: java.lang.String getNextLine()>();

        r10 = $r9;

        if $r9 != null goto label03;

        goto label14;

     label03:
        i16 = 0;

     label04:
        $i17 = virtualinvoke r10.<java.lang.String: int length()>();

        if i16 >= $i17 goto label13;

        $c0 = virtualinvoke r10.<java.lang.String: char charAt(int)>(i16);

        $c1 = r6.<au.com.bytecode.opencsv.CSVReader: char escape>;

        $i18 = (int) $c0;

        $i19 = (int) $c1;

        if $i18 != $i19 goto label06;

        $z1 = specialinvoke r6.<au.com.bytecode.opencsv.CSVReader: boolean isEscapable(java.lang.String,boolean,int)>(r10, z2, i16);

        if $z1 == 0 goto label05;

        $i14 = i16 + 1;

        $c15 = virtualinvoke r10.<java.lang.String: char charAt(int)>($i14);

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c15);

        i16 = i16 + 1;

        goto label12;

     label05:
        i16 = i16 + 1;

        goto label12;

     label06:
        $c2 = r6.<au.com.bytecode.opencsv.CSVReader: char quotechar>;

        $i20 = (int) $c0;

        $i21 = (int) $c2;

        if $i20 != $i21 goto label10;

        $z0 = specialinvoke r6.<au.com.bytecode.opencsv.CSVReader: boolean isEscapedQuote(java.lang.String,boolean,int)>(r10, z2, i16);

        if $z0 == 0 goto label07;

        $i12 = i16 + 1;

        $c13 = virtualinvoke r10.<java.lang.String: char charAt(int)>($i12);

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c13);

        i16 = i16 + 1;

        goto label12;

     label07:
        if z2 != 0 goto label08;

        $z3 = 1;

        goto label09;

     label08:
        $z3 = 0;

     label09:
        z2 = $z3;

        if i16 <= 2 goto label12;

        $i4 = i16 - 1;

        $c5 = virtualinvoke r10.<java.lang.String: char charAt(int)>($i4);

        $c6 = r6.<au.com.bytecode.opencsv.CSVReader: char separator>;

        $i22 = (int) $c5;

        $i23 = (int) $c6;

        if $i22 == $i23 goto label12;

        $i7 = virtualinvoke r10.<java.lang.String: int length()>();

        $i8 = i16 + 1;

        if $i7 <= $i8 goto label12;

        $i9 = i16 + 1;

        $c10 = virtualinvoke r10.<java.lang.String: char charAt(int)>($i9);

        $c11 = r6.<au.com.bytecode.opencsv.CSVReader: char separator>;

        $i24 = (int) $c10;

        $i25 = (int) $c11;

        if $i24 == $i25 goto label12;

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        goto label12;

     label10:
        $c3 = r6.<au.com.bytecode.opencsv.CSVReader: char separator>;

        $i26 = (int) $c0;

        $i27 = (int) $c3;

        if $i26 != $i27 goto label11;

        if z2 != 0 goto label11;

        $r7 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r7);

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>(int)>(64);

        r11 = $r14;

        goto label12;

     label11:
        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

     label12:
        i16 = i16 + 1;

        goto label04;

     label13:
        if z2 != 0 goto label02;

     label14:
        $r2 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r2);

        $r3 = newarray (java.lang.String)[0];

        $r4 = interfaceinvoke $r12.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r5 = (java.lang.String[]) $r4;

        return $r5;
    }

    private boolean isEscapedQuote(java.lang.String, boolean, int)
    {
        char $c4, $c5;
        au.com.bytecode.opencsv.CSVReader r1;
        int $i0, i1, $i2, $i3, $i6, $i7;
        java.lang.String r0;
        boolean z0, $z1;

        r1 := @this: au.com.bytecode.opencsv.CSVReader;

        r0 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        i1 := @parameter2: int;

        if z0 == 0 goto label1;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $i2 = i1 + 1;

        if $i0 <= $i2 goto label1;

        $i3 = i1 + 1;

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i3);

        $c5 = r1.<au.com.bytecode.opencsv.CSVReader: char quotechar>;

        $i6 = (int) $c4;

        $i7 = (int) $c5;

        if $i6 != $i7 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    private boolean isEscapable(java.lang.String, boolean, int)
    {
        au.com.bytecode.opencsv.CSVReader r1;
        int $i0, i1, $i2, $i3, $i6, $i9, $i10, $i11, $i12;
        java.lang.String r0;
        boolean z0, $z1;
        char $c4, $c5, $c7, $c8;

        r1 := @this: au.com.bytecode.opencsv.CSVReader;

        r0 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        i1 := @parameter2: int;

        if z0 == 0 goto label2;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $i2 = i1 + 1;

        if $i0 <= $i2 goto label2;

        $i3 = i1 + 1;

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i3);

        $c5 = r1.<au.com.bytecode.opencsv.CSVReader: char quotechar>;

        $i9 = (int) $c4;

        $i10 = (int) $c5;

        if $i9 == $i10 goto label1;

        $i6 = i1 + 1;

        $c7 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i6);

        $c8 = r1.<au.com.bytecode.opencsv.CSVReader: char escape>;

        $i11 = (int) $c7;

        $i12 = (int) $c8;

        if $i11 != $i12 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public void close() throws java.io.IOException
    {
        java.io.BufferedReader $r1;
        au.com.bytecode.opencsv.CSVReader r0;

        r0 := @this: au.com.bytecode.opencsv.CSVReader;

        $r1 = r0.<au.com.bytecode.opencsv.CSVReader: java.io.BufferedReader br>;

        virtualinvoke $r1.<java.io.BufferedReader: void close()>();

        return;
    }

    public static void <clinit>()
    {
        <au.com.bytecode.opencsv.CSVReader: int DEFAULT_SKIP_LINES> = 0;

        <au.com.bytecode.opencsv.CSVReader: char DEFAULT_ESCAPE_CHARACTER> = 92;

        <au.com.bytecode.opencsv.CSVReader: char DEFAULT_QUOTE_CHARACTER> = 34;

        <au.com.bytecode.opencsv.CSVReader: int INITIAL_READ_SIZE> = 64;

        <au.com.bytecode.opencsv.CSVReader: char DEFAULT_SEPARATOR> = 44;

        return;
    }
}
