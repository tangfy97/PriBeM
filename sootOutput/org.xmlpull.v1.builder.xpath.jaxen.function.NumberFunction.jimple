public class org.xmlpull.v1.builder.xpath.jaxen.function.NumberFunction extends java.lang.Object implements org.xmlpull.v1.builder.xpath.jaxen.Function
{
    private static final java.lang.Double NaN;

    public void <init>()
    {
        org.xmlpull.v1.builder.xpath.jaxen.function.NumberFunction r0;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.function.NumberFunction;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object call(org.xmlpull.v1.builder.xpath.jaxen.Context, java.util.List) throws org.xmlpull.v1.builder.xpath.jaxen.FunctionCallException
    {
        java.lang.Double $r5;
        org.xmlpull.v1.builder.xpath.jaxen.Context r3;
        java.util.List r0;
        org.xmlpull.v1.builder.xpath.jaxen.FunctionCallException $r1;
        org.xmlpull.v1.builder.xpath.jaxen.function.NumberFunction r6;
        int $i0;
        java.lang.Object $r2;
        org.xmlpull.v1.builder.xpath.jaxen.Navigator $r4;

        r6 := @this: org.xmlpull.v1.builder.xpath.jaxen.function.NumberFunction;

        r3 := @parameter0: org.xmlpull.v1.builder.xpath.jaxen.Context;

        r0 := @parameter1: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i0 != 1 goto label1;

        $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(0);

        $r4 = virtualinvoke r3.<org.xmlpull.v1.builder.xpath.jaxen.Context: org.xmlpull.v1.builder.xpath.jaxen.Navigator getNavigator()>();

        $r5 = staticinvoke <org.xmlpull.v1.builder.xpath.jaxen.function.NumberFunction: java.lang.Double evaluate(java.lang.Object,org.xmlpull.v1.builder.xpath.jaxen.Navigator)>($r2, $r4);

        return $r5;

     label1:
        $r1 = new org.xmlpull.v1.builder.xpath.jaxen.FunctionCallException;

        specialinvoke $r1.<org.xmlpull.v1.builder.xpath.jaxen.FunctionCallException: void <init>(java.lang.String)>("number() requires one argument.");

        throw $r1;
    }

    public static java.lang.Double evaluate(java.lang.Object, org.xmlpull.v1.builder.xpath.jaxen.Navigator)
    {
        java.lang.Double $r3, $r5, $r6, $r7, $r9, $r10, $r11, $r13, $r15;
        java.lang.Boolean $r8;
        java.lang.String $r2, $r4, r16;
        java.lang.Number $r12;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        double $d0;
        java.lang.NumberFormatException $r14;
        java.lang.Object r0;
        org.xmlpull.v1.builder.xpath.jaxen.Navigator r1;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: org.xmlpull.v1.builder.xpath.jaxen.Navigator;

        $z0 = r0 instanceof java.lang.Double;

        if $z0 == 0 goto label01;

        $r13 = (java.lang.Double) r0;

        return $r13;

     label01:
        $z1 = r0 instanceof java.lang.Number;

        if $z1 == 0 goto label02;

        $r11 = new java.lang.Double;

        $r12 = (java.lang.Number) r0;

        $d0 = virtualinvoke $r12.<java.lang.Number: double doubleValue()>();

        specialinvoke $r11.<java.lang.Double: void <init>(double)>($d0);

        return $r11;

     label02:
        $z2 = r0 instanceof java.lang.Boolean;

        if $z2 == 0 goto label04;

        $r8 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        if r0 != $r8 goto label03;

        $r10 = new java.lang.Double;

        specialinvoke $r10.<java.lang.Double: void <init>(double)>(1.0);

        return $r10;

     label03:
        $r9 = new java.lang.Double;

        specialinvoke $r9.<java.lang.Double: void <init>(double)>(0.0);

        return $r9;

     label04:
        $z3 = r0 instanceof java.lang.String;

        if $z3 == 0 goto label08;

        r16 = (java.lang.String) r0;

     label05:
        $r7 = new java.lang.Double;

        specialinvoke $r7.<java.lang.Double: void <init>(java.lang.String)>(r16);

     label06:
        return $r7;

     label07:
        $r14 := @caughtexception;

        $r15 = new java.lang.Double;

        specialinvoke $r15.<java.lang.Double: void <init>(double)>(#NaN);

        return $r15;

     label08:
        $z4 = r0 instanceof java.util.List;

        if $z4 != 0 goto label09;

        $z5 = r0 instanceof java.util.Iterator;

        if $z5 == 0 goto label10;

     label09:
        staticinvoke <org.xmlpull.v1.builder.xpath.jaxen.function.StringFunction: java.lang.String evaluate(java.lang.Object,org.xmlpull.v1.builder.xpath.jaxen.Navigator)>(r0, r1);

        $r2 = staticinvoke <org.xmlpull.v1.builder.xpath.jaxen.function.StringFunction: java.lang.String evaluate(java.lang.Object,org.xmlpull.v1.builder.xpath.jaxen.Navigator)>(r0, r1);

        $r3 = staticinvoke <org.xmlpull.v1.builder.xpath.jaxen.function.NumberFunction: java.lang.Double evaluate(java.lang.Object,org.xmlpull.v1.builder.xpath.jaxen.Navigator)>($r2, r1);

        return $r3;

     label10:
        $z6 = interfaceinvoke r1.<org.xmlpull.v1.builder.xpath.jaxen.Navigator: boolean isElement(java.lang.Object)>(r0);

        if $z6 != 0 goto label11;

        $z7 = interfaceinvoke r1.<org.xmlpull.v1.builder.xpath.jaxen.Navigator: boolean isAttribute(java.lang.Object)>(r0);

        if $z7 == 0 goto label12;

     label11:
        $r4 = staticinvoke <org.xmlpull.v1.builder.xpath.jaxen.function.StringFunction: java.lang.String evaluate(java.lang.Object,org.xmlpull.v1.builder.xpath.jaxen.Navigator)>(r0, r1);

        $r5 = staticinvoke <org.xmlpull.v1.builder.xpath.jaxen.function.NumberFunction: java.lang.Double evaluate(java.lang.Object,org.xmlpull.v1.builder.xpath.jaxen.Navigator)>($r4, r1);

        return $r5;

     label12:
        $r6 = new java.lang.Double;

        specialinvoke $r6.<java.lang.Double: void <init>(double)>(#NaN);

        return $r6;

        catch java.lang.NumberFormatException from label05 to label06 with label07;
    }

    public static boolean isNaN(double)
    {
        java.lang.Double $r0;
        double d0;
        boolean $z0;

        d0 := @parameter0: double;

        $r0 = new java.lang.Double;

        specialinvoke $r0.<java.lang.Double: void <init>(double)>(d0);

        $z0 = staticinvoke <org.xmlpull.v1.builder.xpath.jaxen.function.NumberFunction: boolean isNaN(java.lang.Double)>($r0);

        return $z0;
    }

    public static boolean isNaN(java.lang.Double)
    {
        java.lang.Double r0, $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.Double;

        $r1 = <org.xmlpull.v1.builder.xpath.jaxen.function.NumberFunction: java.lang.Double NaN>;

        $z0 = virtualinvoke r0.<java.lang.Double: boolean equals(java.lang.Object)>($r1);

        return $z0;
    }

    static void <clinit>()
    {
        java.lang.Double $r0;

        $r0 = new java.lang.Double;

        specialinvoke $r0.<java.lang.Double: void <init>(double)>(#NaN);

        <org.xmlpull.v1.builder.xpath.jaxen.function.NumberFunction: java.lang.Double NaN> = $r0;

        return;
    }
}
