class org.waveprotocol.wave.model.conversation.AnchorManager$1 extends java.lang.Object implements org.waveprotocol.wave.model.wave.ObservableMap$Listener
{
    final org.waveprotocol.wave.model.conversation.AnchorManager this$0;

    void <init>(org.waveprotocol.wave.model.conversation.AnchorManager)
    {
        org.waveprotocol.wave.model.conversation.AnchorManager$1 r0;
        org.waveprotocol.wave.model.conversation.AnchorManager r1;

        r0 := @this: org.waveprotocol.wave.model.conversation.AnchorManager$1;

        r1 := @parameter0: org.waveprotocol.wave.model.conversation.AnchorManager;

        r0.<org.waveprotocol.wave.model.conversation.AnchorManager$1: org.waveprotocol.wave.model.conversation.AnchorManager this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onEntryAdded(java.lang.Object, java.lang.Object)
    {
        org.waveprotocol.wave.model.conversation.AnchorManager$1 r0;
        java.lang.Object r1, r2;
        org.waveprotocol.wave.model.conversation.AnchorManager $r3;

        r0 := @this: org.waveprotocol.wave.model.conversation.AnchorManager$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<org.waveprotocol.wave.model.conversation.AnchorManager$1: org.waveprotocol.wave.model.conversation.AnchorManager this$0>;

        staticinvoke <org.waveprotocol.wave.model.conversation.AnchorManager: void access$000(org.waveprotocol.wave.model.conversation.AnchorManager,java.lang.Object,java.lang.Object)>($r3, r1, r2);

        return;
    }

    public void onEntryRemoved(java.lang.Object, java.lang.Object)
    {
        org.waveprotocol.wave.model.conversation.AnchorManager$1 r0;
        java.lang.Object r1, r2;
        org.waveprotocol.wave.model.conversation.AnchorManager $r3;

        r0 := @this: org.waveprotocol.wave.model.conversation.AnchorManager$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<org.waveprotocol.wave.model.conversation.AnchorManager$1: org.waveprotocol.wave.model.conversation.AnchorManager this$0>;

        staticinvoke <org.waveprotocol.wave.model.conversation.AnchorManager: void access$100(org.waveprotocol.wave.model.conversation.AnchorManager,java.lang.Object,java.lang.Object)>($r3, r1, r2);

        return;
    }
}
