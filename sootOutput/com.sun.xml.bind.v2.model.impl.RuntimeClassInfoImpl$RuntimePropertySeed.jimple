final class com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl$RuntimePropertySeed extends java.lang.Object implements com.sun.xml.bind.v2.model.impl.PropertySeed
{
    private final com.sun.xml.bind.v2.runtime.reflect.Accessor acc;
    private final com.sun.xml.bind.v2.model.impl.PropertySeed core;

    public void <init>(com.sun.xml.bind.v2.model.impl.PropertySeed, com.sun.xml.bind.v2.runtime.reflect.Accessor)
    {
        com.sun.xml.bind.v2.model.impl.PropertySeed r1;
        com.sun.xml.bind.v2.runtime.reflect.Accessor r2;
        com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl$RuntimePropertySeed r0;

        r0 := @this: com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl$RuntimePropertySeed;

        r1 := @parameter0: com.sun.xml.bind.v2.model.impl.PropertySeed;

        r2 := @parameter1: com.sun.xml.bind.v2.runtime.reflect.Accessor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl$RuntimePropertySeed: com.sun.xml.bind.v2.model.impl.PropertySeed core> = r1;

        r0.<com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl$RuntimePropertySeed: com.sun.xml.bind.v2.runtime.reflect.Accessor acc> = r2;

        return;
    }

    public java.lang.String getName()
    {
        com.sun.xml.bind.v2.model.impl.PropertySeed $r1;
        java.lang.String $r2;
        com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl$RuntimePropertySeed r0;

        r0 := @this: com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl$RuntimePropertySeed;

        $r1 = r0.<com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl$RuntimePropertySeed: com.sun.xml.bind.v2.model.impl.PropertySeed core>;

        $r2 = interfaceinvoke $r1.<com.sun.xml.bind.v2.model.impl.PropertySeed: java.lang.String getName()>();

        return $r2;
    }

    public java.lang.'annotation'.Annotation readAnnotation(java.lang.Class)
    {
        com.sun.xml.bind.v2.model.impl.PropertySeed $r2;
        com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl$RuntimePropertySeed r0;
        java.lang.'annotation'.Annotation $r3;
        java.lang.Class r1;

        r0 := @this: com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl$RuntimePropertySeed;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl$RuntimePropertySeed: com.sun.xml.bind.v2.model.impl.PropertySeed core>;

        $r3 = interfaceinvoke $r2.<com.sun.xml.bind.v2.model.impl.PropertySeed: java.lang.'annotation'.Annotation readAnnotation(java.lang.Class)>(r1);

        return $r3;
    }

    public boolean hasAnnotation(java.lang.Class)
    {
        com.sun.xml.bind.v2.model.impl.PropertySeed $r2;
        com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl$RuntimePropertySeed r0;
        java.lang.Class r1;
        boolean $z0;

        r0 := @this: com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl$RuntimePropertySeed;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl$RuntimePropertySeed: com.sun.xml.bind.v2.model.impl.PropertySeed core>;

        $z0 = interfaceinvoke $r2.<com.sun.xml.bind.v2.model.impl.PropertySeed: boolean hasAnnotation(java.lang.Class)>(r1);

        return $z0;
    }

    public java.lang.reflect.Type getRawType()
    {
        com.sun.xml.bind.v2.model.impl.PropertySeed $r1;
        java.lang.reflect.Type $r3;
        com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl$RuntimePropertySeed r0;
        java.lang.Object $r2;

        r0 := @this: com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl$RuntimePropertySeed;

        $r1 = r0.<com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl$RuntimePropertySeed: com.sun.xml.bind.v2.model.impl.PropertySeed core>;

        $r2 = interfaceinvoke $r1.<com.sun.xml.bind.v2.model.impl.PropertySeed: java.lang.Object getRawType()>();

        $r3 = (java.lang.reflect.Type) $r2;

        return $r3;
    }

    public com.sun.xml.bind.v2.runtime.Location getLocation()
    {
        com.sun.xml.bind.v2.model.impl.PropertySeed $r1;
        com.sun.xml.bind.v2.runtime.Location $r2;
        com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl$RuntimePropertySeed r0;

        r0 := @this: com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl$RuntimePropertySeed;

        $r1 = r0.<com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl$RuntimePropertySeed: com.sun.xml.bind.v2.model.impl.PropertySeed core>;

        $r2 = interfaceinvoke $r1.<com.sun.xml.bind.v2.model.impl.PropertySeed: com.sun.xml.bind.v2.runtime.Location getLocation()>();

        return $r2;
    }

    public com.sun.xml.bind.v2.model.'annotation'.Locatable getUpstream()
    {
        com.sun.xml.bind.v2.model.impl.PropertySeed $r1;
        com.sun.xml.bind.v2.model.'annotation'.Locatable $r2;
        com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl$RuntimePropertySeed r0;

        r0 := @this: com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl$RuntimePropertySeed;

        $r1 = r0.<com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl$RuntimePropertySeed: com.sun.xml.bind.v2.model.impl.PropertySeed core>;

        $r2 = interfaceinvoke $r1.<com.sun.xml.bind.v2.model.impl.PropertySeed: com.sun.xml.bind.v2.model.'annotation'.Locatable getUpstream()>();

        return $r2;
    }

    public com.sun.xml.bind.v2.runtime.reflect.Accessor getAccessor()
    {
        com.sun.xml.bind.v2.runtime.reflect.Accessor $r1;
        com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl$RuntimePropertySeed r0;

        r0 := @this: com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl$RuntimePropertySeed;

        $r1 = r0.<com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl$RuntimePropertySeed: com.sun.xml.bind.v2.runtime.reflect.Accessor acc>;

        return $r1;
    }

    public volatile java.lang.Object getRawType()
    {
        java.lang.reflect.Type $r1;
        com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl$RuntimePropertySeed r0;

        r0 := @this: com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl$RuntimePropertySeed;

        $r1 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl$RuntimePropertySeed: java.lang.reflect.Type getRawType()>();

        return $r1;
    }
}
