public class groovy.swing.SwingBuilder extends groovy.util.FactoryBuilderSupport
{
    private java.util.LinkedList containingWindows;
    private static final java.util.logging.Logger LOG;
    private boolean headless;
    public static java.lang.Long __timeStamp;
    public static java.lang.Long __timeStamp__239_neverHappen1239119697340;
    static java.lang.Class class$groovy$swing$factory$ClosureColumnFactory;
    static java.lang.Class class$java$awt$GridBagLayout;
    static java.lang.Class class$java$awt$Toolkit;
    static java.lang.Class class$javax$swing$JPasswordField;
    static java.lang.Class class$javax$swing$SpinnerDateModel;
    static java.lang.Class class$groovy$swing$factory$CompoundBorderFactory;
    static java.lang.Class class$javax$swing$JCheckBoxMenuItem;
    static java.lang.Class class$javax$swing$JButton;
    static java.lang.Class class$javax$swing$JRadioButton;
    static java.lang.Class class$groovy$swing$factory$DialogFactory;
    static java.lang.Class class$javax$swing$JTable;
    static java.lang.Class class$javax$swing$JCheckBox;
    static java.lang.Class class$groovy$lang$GroovyRuntimeException;
    static java.lang.Class class$javax$swing$JTextField;
    static java.lang.Class class$javax$swing$KeyStroke;
    static java.lang.Class class$javax$swing$JSlider;
    static java.lang.Class class$javax$swing$JApplet;
    static java.lang.Class class$groovy$swing$factory$MatteBorderFactory;
    static java.lang.Class class$javax$swing$SpinnerListModel;
    static java.lang.Class class$javax$swing$SwingUtilities;
    static java.lang.Class class$javax$swing$JOptionPane;
    static java.lang.Class class$groovy$swing$factory$TabbedPaneFactory;
    static java.lang.Class class$javax$swing$JProgressBar;
    static java.lang.Class class$javax$swing$LookAndFeel;
    static java.lang.Class class$groovy$swing$factory$FormattedTextFactory;
    static java.lang.Class class$groovy$swing$factory$ModelFactory;
    static java.lang.Class class$groovy$swing$factory$HGlueFactory;
    static java.lang.Class class$javax$swing$JTabbedPane;
    static java.lang.Class class$java$awt$CardLayout;
    static java.lang.Class class$groovy$swing$factory$VStrutFactory;
    static java.lang.Class class$javax$swing$JPanel;
    static java.lang.Class class$groovy$swing$factory$BoxLayoutFactory;
    static java.lang.Class class$javax$swing$JColorChooser;
    static java.lang.Class class$javax$swing$JFrame;
    static java.lang.Class class$groovy$swing$factory$WidgetFactory;
    static java.lang.Class class$groovy$util$FactoryBuilderSupport;
    static java.lang.Class class$javax$swing$JLabel;
    static java.lang.Class class$javax$swing$JMenu;
    static java.lang.Class class$groovy$swing$factory$HBoxFactory;
    static java.lang.Class class$javax$swing$JLayeredPane;
    static java.lang.Class class$groovy$swing$factory$InternalFrameFactory;
    static java.lang.Class class$groovy$swing$factory$SplitPaneFactory;
    static java.lang.Class class$javax$swing$JDialog;
    static java.lang.Class class$groovy$swing$factory$ActionFactory;
    static java.lang.Class class$javax$swing$JWindow;
    static java.lang.Class class$groovy$swing$factory$TableModelFactory;
    static java.lang.Class class$groovy$swing$factory$ScrollPaneFactory;
    static java.lang.Class class$groovy$swing$factory$HStrutFactory;
    static java.lang.Class class$javax$swing$OverlayLayout;
    static java.lang.Class class$java$awt$GraphicsEnvironment;
    static java.lang.Class class$groovy$swing$factory$EmptyBorderFactory;
    static java.lang.Class class$groovy$swing$factory$LineBorderFactory;
    static java.lang.Class class$javax$swing$JDesktopPane;
    static java.lang.Class class$groovy$swing$factory$ImageIconFactory;
    static java.lang.Class class$groovy$swing$factory$CollectionFactory;
    static java.lang.Class class$groovy$swing$factory$WindowFactory;
    static java.lang.Class class$java$lang$Thread;
    static java.lang.Class class$javax$swing$SpringLayout;
    static java.lang.Class class$groovy$swing$factory$BevelBorderFactory;
    static java.lang.Class class$groovy$swing$factory$RichActionWidgetFactory;
    static java.lang.Class class$groovy$swing$factory$EtchedBorderFactory;
    static java.lang.Class class$groovy$swing$factory$GlueFactory;
    static java.lang.Class class$javax$swing$JTextPane;
    static java.lang.Class class$groovy$swing$factory$TableFactory;
    static java.lang.Class class$java$awt$FlowLayout;
    static java.lang.Class class$groovy$swing$factory$SeparatorFactory;
    static java.lang.Class class$java$awt$GridBagConstraints;
    static java.lang.Class class$java$util$logging$Logger;
    static java.lang.Class class$groovy$swing$factory$BindFactory;
    static java.lang.Class class$javax$swing$JTextArea;
    static java.lang.Class class$javax$swing$ButtonGroup;
    static java.lang.Class class$javax$swing$JRadioButtonMenuItem;
    static java.lang.Class class$groovy$swing$factory$VGlueFactory;
    static java.lang.Class class$javax$swing$JSpinner;
    static java.lang.Class class$groovy$swing$factory$LayoutFactory;
    static java.lang.Class class$groovy$swing$factory$FrameFactory;
    static java.lang.Class class$javax$swing$border$EtchedBorder;
    static java.lang.Class class$javax$swing$JScrollPane;
    static java.lang.Class class$javax$swing$JMenuBar;
    static java.lang.Class class$groovy$swing$factory$TextArgWidgetFactory;
    static java.lang.Class class$javax$swing$JMenuItem;
    static java.lang.Class class$groovy$swing$factory$TitledBorderFactory;
    static java.lang.Class class$java$awt$Component;
    static java.lang.Class class$javax$swing$JFileChooser;
    static java.lang.Class class$groovy$swing$factory$TRFactory;
    static java.lang.Class class$groovy$swing$factory$ComponentFactory;
    static java.lang.Class class$javax$swing$JTree;
    static java.lang.Class class$javax$swing$JViewport;
    static java.lang.Class class$javax$swing$JToggleButton;
    static java.lang.Class class$javax$swing$SpinnerNumberModel;
    static java.lang.Class class$java$util$LinkedList;
    static java.lang.Class class$groovy$swing$factory$ComboBoxFactory;
    static java.lang.Class class$groovy$lang$MetaClass;
    static java.lang.Class class$0;
    static java.lang.Class class$javax$swing$border$BevelBorder;
    static java.lang.Class class$java$lang$Object;
    static java.lang.Class class$java$awt$BorderLayout;
    static java.lang.Class class$javax$swing$JList;
    static java.lang.Class class$java$awt$GridLayout;
    static java.lang.Class class$groovy$swing$factory$TDFactory;
    static java.lang.Class class$groovy$lang$Closure;
    static java.lang.Class class$groovy$swing$LookAndFeelHelper;
    static java.lang.Class class$javax$swing$JEditorPane;
    static java.lang.Class class$groovy$swing$factory$VBoxFactory;
    static java.lang.Class class$javax$swing$JScrollBar;
    static java.lang.Class class$javax$swing$JComponent;
    static java.lang.Class class$javax$swing$JToolBar;
    static java.lang.Class class$groovy$swing$factory$PropertyColumnFactory;
    static java.lang.Class class$java$awt$LayoutManager;
    static java.lang.Class class$groovy$swing$factory$MapFactory;
    static java.lang.Class class$javax$swing$table$TableColumn;
    static java.lang.Class class$groovy$swing$factory$BoxFactory;
    static java.lang.Class class$groovy$swing$factory$RigidAreaFactory;
    static java.lang.Class class$groovy$swing$factory$TableLayoutFactory;
    static java.lang.Class class$javax$swing$JPopupMenu;
    static java.lang.Class class$javax$swing$DefaultBoundedRangeModel;

    public void <init>()
    {
        groovy.swing.SwingBuilder r0;
        java.lang.Boolean $r9;
        java.util.LinkedList $r8;
        boolean $z0, $z1;
        java.lang.Class $r1, r2, $r3, $r4, $r6, $r10, $r12, $r13, $r14, $r15, $r16;
        java.lang.Object $r5, $r7, $r11;

        r0 := @this: groovy.swing.SwingBuilder;

        specialinvoke r0.<groovy.util.FactoryBuilderSupport: void <init>()>();

        $r1 = <groovy.swing.SwingBuilder: java.lang.Class class$0>;

        if $r1 != null goto label01;

        $r12 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.SwingBuilder");

        <groovy.swing.SwingBuilder: java.lang.Class class$0> = $r12;

        goto label02;

     label01:
        $r12 = <groovy.swing.SwingBuilder: java.lang.Class class$0>;

     label02:
        r2 = $r12;

        $r3 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass>;

        if $r3 != null goto label03;

        $r13 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass> = $r13;

        goto label04;

     label03:
        $r13 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $r4 = <groovy.swing.SwingBuilder: java.lang.Class class$java$util$LinkedList>;

        if $r4 != null goto label05;

        $r14 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("java.util.LinkedList");

        <groovy.swing.SwingBuilder: java.lang.Class class$java$util$LinkedList> = $r14;

        goto label06;

     label05:
        $r14 = <groovy.swing.SwingBuilder: java.lang.Class class$java$util$LinkedList>;

     label06:
        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNew0(java.lang.Class,java.lang.Class)>(r2, $r14);

        $r6 = <groovy.swing.SwingBuilder: java.lang.Class class$java$util$LinkedList>;

        if $r6 != null goto label07;

        $r15 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("java.util.LinkedList");

        <groovy.swing.SwingBuilder: java.lang.Class class$java$util$LinkedList> = $r15;

        goto label08;

     label07:
        $r15 = <groovy.swing.SwingBuilder: java.lang.Class class$java$util$LinkedList>;

     label08:
        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r5, $r15);

        $r8 = (java.util.LinkedList) $r7;

        r0.<groovy.swing.SwingBuilder: java.util.LinkedList containingWindows> = $r8;

        $r9 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $z0 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r9);

        r0.<groovy.swing.SwingBuilder: boolean headless> = $z0;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrent0(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r2, r0, "registerWidgets");

        $r10 = <groovy.swing.SwingBuilder: java.lang.Class class$java$awt$GraphicsEnvironment>;

        if $r10 != null goto label09;

        $r16 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("java.awt.GraphicsEnvironment");

        <groovy.swing.SwingBuilder: java.lang.Class class$java$awt$GraphicsEnvironment> = $r16;

        goto label10;

     label09:
        $r16 = <groovy.swing.SwingBuilder: java.lang.Class class$java$awt$GraphicsEnvironment>;

     label10:
        $r11 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r2, $r16, "isHeadless");

        $z1 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r11);

        r0.<groovy.swing.SwingBuilder: boolean headless> = $z1;

        return;
    }

    protected void registerWidgets()
    {
        java.lang.Boolean $r242, $r250, $r258;
        java.lang.Class $r0, r1, $r2, $r5, $r8, $r11, $r14, $r17, $r23, $r26, $r29, $r31, $r32, $r33, $r34, $r37, $r39, $r42, $r44, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r61, $r64, $r66, $r69, $r72, $r74, $r76, $r78, $r80, $r82, $r84, $r86, $r88, $r91, $r94, $r96, $r98, $r100, $r101, $r104, $r106, $r108, $r110, $r112, $r114, $r116, $r118, $r120, $r123, $r126, $r128, $r129, $r130, $r131, $r132, $r133, $r134, $r135, $r137, $r141, $r144, $r147, $r150, $r153, $r156, $r159, $r162, $r165, $r168, $r171, $r174, $r177, $r180, $r182, $r183, $r184, $r185, $r186, $r187, $r190, $r193, $r196, $r198, $r199, $r200, $r201, $r202, $r203, $r204, $r205, $r206, $r207, $r208, $r209, $r210, $r211, $r212, $r213, $r214, $r215, $r216, $r217, $r218, $r219, $r220, $r221, $r222, $r223, $r224, $r225, $r226, $r227, $r228, $r229, $r230, $r231, $r232, $r233, $r234, $r235, $r236, $r238, $r240, $r241, $r245, $r246, $r248, $r249, $r253, $r254, $r256, $r257, $r261, $r262, $r263, $r264, $r265, $r266, $r268, $r270, $r271, $r274, $r275, $r277, $r278, $r281, $r282, $r284, $r285, $r288, $r289, $r291, $r292, $r295, $r296, $r298, $r299, $r302, $r303, $r305, $r306, $r309, $r310, $r312, $r313, $r316, $r317, $r319, $r320, $r323, $r324, $r326, $r327, $r330, $r331, $r333, $r334, $r337, $r338, $r340, $r341, $r344, $r345, $r347, $r348, $r351, $r352, $r354, $r355, $r358, $r359, $r360, $r361, $r362, $r363, $r364, $r365, $r366, $r367, $r368, $r369, $r370, $r371, $r372, $r373, $r374, $r375, $r376, $r378, $r380, $r381, $r384, $r385, $r386, $r387, $r388, $r389, $r390, $r391, $r392, $r393, $r394, $r395, $r396, $r398, $r400, $r401, $r404, $r405, $r407, $r408, $r411, $r412, $r414, $r415, $r418, $r419, $r421, $r422, $r425, $r426, $r428, $r429, $r432, $r433, $r435, $r436, $r439, $r440, $r442, $r443, $r446, $r447, $r448, $r449, $r450, $r451, $r452, $r453, $r454, $r455, $r456, $r457, $r458, $r459, $r460, $r461, $r462, $r464, $r466, $r467, $r471, $r472, $r474, $r475, $r479, $r480, $r482, $r483, $r487, $r488, $r490, $r491, $r495, $r496, $r498, $r499, $r503, $r504, $r505, $r506, $r507;
        groovy.lang.Closure $r19, $r21, $r27, $r139;
        groovy.swing.SwingBuilder r3;
        java.lang.Object[] $r4, $r7, $r10, $r13, $r16, $r18, $r20, $r22, $r25, $r28, $r36, $r38, $r41, $r43, $r60, $r63, $r65, $r68, $r71, $r73, $r75, $r77, $r79, $r81, $r83, $r85, $r87, $r90, $r93, $r95, $r97, $r103, $r105, $r107, $r109, $r111, $r113, $r115, $r117, $r119, $r122, $r125, $r136, $r138, $r140, $r143, $r146, $r149, $r152, $r155, $r158, $r161, $r164, $r167, $r170, $r173, $r176, $r179, $r189, $r192, $r195, $r237, $r239, $r244, $r247, $r252, $r255, $r260, $r267, $r269, $r273, $r276, $r280, $r283, $r287, $r290, $r294, $r297, $r301, $r304, $r308, $r311, $r315, $r318, $r322, $r325, $r329, $r332, $r336, $r339, $r343, $r346, $r350, $r353, $r357, $r377, $r379, $r383, $r397, $r399, $r403, $r406, $r410, $r413, $r417, $r420, $r424, $r427, $r431, $r434, $r438, $r441, $r445, $r463, $r465, $r470, $r473, $r478, $r481, $r486, $r489, $r494, $r497, $r502;
        java.lang.Object $r6, $r9, $r12, $r15, $r24, $r30, $r35, $r40, $r45, $r62, $r67, $r70, $r89, $r92, $r99, $r102, $r121, $r124, $r127, $r142, $r145, $r148, $r151, $r154, $r157, $r160, $r163, $r166, $r169, $r172, $r175, $r178, $r181, $r188, $r191, $r194, $r197, $r243, $r251, $r259, $r272, $r279, $r286, $r293, $r300, $r307, $r314, $r321, $r328, $r335, $r342, $r349, $r356, $r382, $r402, $r409, $r416, $r423, $r430, $r437, $r444, $r468, $r469, $r476, $r477, $r484, $r485, $r492, $r493, $r500, $r501;

        r3 := @this: groovy.swing.SwingBuilder;

        $r0 = <groovy.swing.SwingBuilder: java.lang.Class class$0>;

        if $r0 != null goto label001;

        $r227 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.SwingBuilder");

        <groovy.swing.SwingBuilder: java.lang.Class class$0> = $r227;

        goto label002;

     label001:
        $r227 = <groovy.swing.SwingBuilder: java.lang.Class class$0>;

     label002:
        r1 = $r227;

        $r2 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label003;

        $r228 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass> = $r228;

        goto label004;

     label003:
        $r228 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass>;

     label004:
        $r4 = newarray (java.lang.Object)[2];

        $r4[0] = "action";

        $r5 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$ActionFactory>;

        if $r5 != null goto label005;

        $r229 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.ActionFactory");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$ActionFactory> = $r229;

        goto label006;

     label005:
        $r229 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$ActionFactory>;

     label006:
        $r6 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNew0(java.lang.Class,java.lang.Class)>(r1, $r229);

        $r4[1] = $r6;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerFactory", $r4);

        $r7 = newarray (java.lang.Object)[2];

        $r7[0] = "actions";

        $r8 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$CollectionFactory>;

        if $r8 != null goto label007;

        $r230 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.CollectionFactory");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$CollectionFactory> = $r230;

        goto label008;

     label007:
        $r230 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$CollectionFactory>;

     label008:
        $r9 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNew0(java.lang.Class,java.lang.Class)>(r1, $r230);

        $r7[1] = $r9;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerFactory", $r7);

        $r10 = newarray (java.lang.Object)[2];

        $r10[0] = "map";

        $r11 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$MapFactory>;

        if $r11 != null goto label009;

        $r231 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.MapFactory");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$MapFactory> = $r231;

        goto label010;

     label009:
        $r231 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$MapFactory>;

     label010:
        $r12 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNew0(java.lang.Class,java.lang.Class)>(r1, $r231);

        $r10[1] = $r12;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerFactory", $r10);

        $r13 = newarray (java.lang.Object)[2];

        $r13[0] = "imageIcon";

        $r14 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$ImageIconFactory>;

        if $r14 != null goto label011;

        $r232 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.ImageIconFactory");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$ImageIconFactory> = $r232;

        goto label012;

     label011:
        $r232 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$ImageIconFactory>;

     label012:
        $r15 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNew0(java.lang.Class,java.lang.Class)>(r1, $r232);

        $r13[1] = $r15;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerFactory", $r13);

        $r16 = newarray (java.lang.Object)[2];

        $r16[0] = "buttonGroup";

        $r17 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$ButtonGroup>;

        if $r17 != null goto label013;

        $r233 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.ButtonGroup");

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$ButtonGroup> = $r233;

        goto label014;

     label013:
        $r233 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$ButtonGroup>;

     label014:
        $r16[1] = $r233;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerBeanFactory", $r16);

        $r18 = newarray (java.lang.Object)[1];

        $r19 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: groovy.lang.Closure getMethodPointer(java.lang.Object,java.lang.String)>(r1, "buttonGroupAttributeDelegate");

        $r18[0] = $r19;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "addAttributeDelegate", $r18);

        $r20 = newarray (java.lang.Object)[1];

        $r21 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: groovy.lang.Closure getMethodPointer(java.lang.Object,java.lang.String)>(r1, "objectIDAttributeDelegate");

        $r20[0] = $r21;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "addAttributeDelegate", $r20);

        $r22 = newarray (java.lang.Object)[2];

        $r22[0] = "bind";

        $r23 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$BindFactory>;

        if $r23 != null goto label015;

        $r234 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.BindFactory");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$BindFactory> = $r234;

        goto label016;

     label015:
        $r234 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$BindFactory>;

     label016:
        $r24 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNew0(java.lang.Class,java.lang.Class)>(r1, $r234);

        $r22[1] = $r24;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerFactory", $r22);

        $r25 = newarray (java.lang.Object)[1];

        $r26 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$BindFactory>;

        if $r26 != null goto label017;

        $r235 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.BindFactory");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$BindFactory> = $r235;

        goto label018;

     label017:
        $r235 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$BindFactory>;

     label018:
        $r27 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: groovy.lang.Closure getMethodPointer(java.lang.Object,java.lang.String)>($r235, "bindingAttributeDelegate");

        $r25[0] = $r27;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "addAttributeDelegate", $r25);

        $r28 = newarray (java.lang.Object)[2];

        $r28[0] = "model";

        $r29 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$ModelFactory>;

        if $r29 != null goto label019;

        $r236 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.ModelFactory");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$ModelFactory> = $r236;

        goto label020;

     label019:
        $r236 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$ModelFactory>;

     label020:
        $r30 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNew0(java.lang.Class,java.lang.Class)>(r1, $r236);

        $r28[1] = $r30;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerFactory", $r28);

        $r237 = newarray (java.lang.Object)[2];

        $r237[0] = "widget";

        $r31 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$WidgetFactory>;

        if $r31 != null goto label021;

        $r226 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.WidgetFactory");

        $r238 = $r226;

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$WidgetFactory> = $r226;

        goto label022;

     label021:
        $r238 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$WidgetFactory>;

     label022:
        $r239 = newarray (java.lang.Object)[2];

        $r32 = <groovy.swing.SwingBuilder: java.lang.Class class$java$awt$Component>;

        if $r32 != null goto label023;

        $r240 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("java.awt.Component");

        $r241 = $r240;

        <groovy.swing.SwingBuilder: java.lang.Class class$java$awt$Component> = $r240;

        goto label024;

     label023:
        $r241 = <groovy.swing.SwingBuilder: java.lang.Class class$java$awt$Component>;

     label024:
        $r239[0] = $r241;

        $r242 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r239[1] = $r242;

        $r243 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r238, $r239);

        $r237[1] = $r243;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerFactory", $r237);

        $r244 = newarray (java.lang.Object)[2];

        $r244[0] = "container";

        $r245 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$WidgetFactory>;

        if $r245 != null goto label025;

        $r225 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.WidgetFactory");

        $r246 = $r225;

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$WidgetFactory> = $r225;

        goto label026;

     label025:
        $r246 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$WidgetFactory>;

     label026:
        $r247 = newarray (java.lang.Object)[2];

        $r33 = <groovy.swing.SwingBuilder: java.lang.Class class$java$awt$Component>;

        if $r33 != null goto label027;

        $r248 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("java.awt.Component");

        $r249 = $r248;

        <groovy.swing.SwingBuilder: java.lang.Class class$java$awt$Component> = $r248;

        goto label028;

     label027:
        $r249 = <groovy.swing.SwingBuilder: java.lang.Class class$java$awt$Component>;

     label028:
        $r247[0] = $r249;

        $r250 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r247[1] = $r250;

        $r251 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r246, $r247);

        $r244[1] = $r251;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerFactory", $r244);

        $r252 = newarray (java.lang.Object)[2];

        $r252[0] = "bean";

        $r253 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$WidgetFactory>;

        if $r253 != null goto label029;

        $r224 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.WidgetFactory");

        $r254 = $r224;

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$WidgetFactory> = $r224;

        goto label030;

     label029:
        $r254 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$WidgetFactory>;

     label030:
        $r255 = newarray (java.lang.Object)[2];

        $r34 = <groovy.swing.SwingBuilder: java.lang.Class class$java$lang$Object>;

        if $r34 != null goto label031;

        $r256 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        $r257 = $r256;

        <groovy.swing.SwingBuilder: java.lang.Class class$java$lang$Object> = $r256;

        goto label032;

     label031:
        $r257 = <groovy.swing.SwingBuilder: java.lang.Class class$java$lang$Object>;

     label032:
        $r255[0] = $r257;

        $r258 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r255[1] = $r258;

        $r259 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r254, $r255);

        $r252[1] = $r259;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerFactory", $r252);

        $r260 = newarray (java.lang.Object)[2];

        $r260[0] = "dialog";

        $r261 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$DialogFactory>;

        if $r261 != null goto label033;

        $r262 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.DialogFactory");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$DialogFactory> = $r262;

        goto label034;

     label033:
        $r262 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$DialogFactory>;

     label034:
        $r35 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNew0(java.lang.Class,java.lang.Class)>(r1, $r262);

        $r260[1] = $r35;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerFactory", $r260);

        $r36 = newarray (java.lang.Object)[2];

        $r36[0] = "fileChooser";

        $r37 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JFileChooser>;

        if $r37 != null goto label035;

        $r263 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.JFileChooser");

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JFileChooser> = $r263;

        goto label036;

     label035:
        $r263 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JFileChooser>;

     label036:
        $r36[1] = $r263;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerBeanFactory", $r36);

        $r38 = newarray (java.lang.Object)[2];

        $r38[0] = "frame";

        $r39 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$FrameFactory>;

        if $r39 != null goto label037;

        $r264 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.FrameFactory");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$FrameFactory> = $r264;

        goto label038;

     label037:
        $r264 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$FrameFactory>;

     label038:
        $r40 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNew0(java.lang.Class,java.lang.Class)>(r1, $r264);

        $r38[1] = $r40;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerFactory", $r38);

        $r41 = newarray (java.lang.Object)[2];

        $r41[0] = "optionPane";

        $r42 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JOptionPane>;

        if $r42 != null goto label039;

        $r265 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.JOptionPane");

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JOptionPane> = $r265;

        goto label040;

     label039:
        $r265 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JOptionPane>;

     label040:
        $r41[1] = $r265;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerBeanFactory", $r41);

        $r43 = newarray (java.lang.Object)[2];

        $r43[0] = "window";

        $r44 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$WindowFactory>;

        if $r44 != null goto label041;

        $r266 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.WindowFactory");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$WindowFactory> = $r266;

        goto label042;

     label041:
        $r266 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$WindowFactory>;

     label042:
        $r45 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNew0(java.lang.Class,java.lang.Class)>(r1, $r266);

        $r43[1] = $r45;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerFactory", $r43);

        $r267 = newarray (java.lang.Object)[2];

        $r267[0] = "button";

        $r46 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$RichActionWidgetFactory>;

        if $r46 != null goto label043;

        $r223 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.RichActionWidgetFactory");

        $r268 = $r223;

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$RichActionWidgetFactory> = $r223;

        goto label044;

     label043:
        $r268 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$RichActionWidgetFactory>;

     label044:
        $r269 = newarray (java.lang.Object)[1];

        $r47 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JButton>;

        if $r47 != null goto label045;

        $r270 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.JButton");

        $r271 = $r270;

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JButton> = $r270;

        goto label046;

     label045:
        $r271 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JButton>;

     label046:
        $r269[0] = $r271;

        $r272 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r268, $r269);

        $r267[1] = $r272;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerFactory", $r267);

        $r273 = newarray (java.lang.Object)[2];

        $r273[0] = "checkBox";

        $r274 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$RichActionWidgetFactory>;

        if $r274 != null goto label047;

        $r222 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.RichActionWidgetFactory");

        $r275 = $r222;

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$RichActionWidgetFactory> = $r222;

        goto label048;

     label047:
        $r275 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$RichActionWidgetFactory>;

     label048:
        $r276 = newarray (java.lang.Object)[1];

        $r48 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JCheckBox>;

        if $r48 != null goto label049;

        $r277 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.JCheckBox");

        $r278 = $r277;

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JCheckBox> = $r277;

        goto label050;

     label049:
        $r278 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JCheckBox>;

     label050:
        $r276[0] = $r278;

        $r279 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r275, $r276);

        $r273[1] = $r279;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerFactory", $r273);

        $r280 = newarray (java.lang.Object)[2];

        $r280[0] = "checkBoxMenuItem";

        $r281 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$RichActionWidgetFactory>;

        if $r281 != null goto label051;

        $r221 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.RichActionWidgetFactory");

        $r282 = $r221;

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$RichActionWidgetFactory> = $r221;

        goto label052;

     label051:
        $r282 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$RichActionWidgetFactory>;

     label052:
        $r283 = newarray (java.lang.Object)[1];

        $r49 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JCheckBoxMenuItem>;

        if $r49 != null goto label053;

        $r284 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.JCheckBoxMenuItem");

        $r285 = $r284;

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JCheckBoxMenuItem> = $r284;

        goto label054;

     label053:
        $r285 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JCheckBoxMenuItem>;

     label054:
        $r283[0] = $r285;

        $r286 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r282, $r283);

        $r280[1] = $r286;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerFactory", $r280);

        $r287 = newarray (java.lang.Object)[2];

        $r287[0] = "menuItem";

        $r288 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$RichActionWidgetFactory>;

        if $r288 != null goto label055;

        $r220 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.RichActionWidgetFactory");

        $r289 = $r220;

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$RichActionWidgetFactory> = $r220;

        goto label056;

     label055:
        $r289 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$RichActionWidgetFactory>;

     label056:
        $r290 = newarray (java.lang.Object)[1];

        $r50 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JMenuItem>;

        if $r50 != null goto label057;

        $r291 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.JMenuItem");

        $r292 = $r291;

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JMenuItem> = $r291;

        goto label058;

     label057:
        $r292 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JMenuItem>;

     label058:
        $r290[0] = $r292;

        $r293 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r289, $r290);

        $r287[1] = $r293;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerFactory", $r287);

        $r294 = newarray (java.lang.Object)[2];

        $r294[0] = "radioButton";

        $r295 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$RichActionWidgetFactory>;

        if $r295 != null goto label059;

        $r219 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.RichActionWidgetFactory");

        $r296 = $r219;

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$RichActionWidgetFactory> = $r219;

        goto label060;

     label059:
        $r296 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$RichActionWidgetFactory>;

     label060:
        $r297 = newarray (java.lang.Object)[1];

        $r51 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JRadioButton>;

        if $r51 != null goto label061;

        $r298 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.JRadioButton");

        $r299 = $r298;

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JRadioButton> = $r298;

        goto label062;

     label061:
        $r299 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JRadioButton>;

     label062:
        $r297[0] = $r299;

        $r300 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r296, $r297);

        $r294[1] = $r300;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerFactory", $r294);

        $r301 = newarray (java.lang.Object)[2];

        $r301[0] = "radioButtonMenuItem";

        $r302 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$RichActionWidgetFactory>;

        if $r302 != null goto label063;

        $r218 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.RichActionWidgetFactory");

        $r303 = $r218;

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$RichActionWidgetFactory> = $r218;

        goto label064;

     label063:
        $r303 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$RichActionWidgetFactory>;

     label064:
        $r304 = newarray (java.lang.Object)[1];

        $r52 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JRadioButtonMenuItem>;

        if $r52 != null goto label065;

        $r305 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.JRadioButtonMenuItem");

        $r306 = $r305;

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JRadioButtonMenuItem> = $r305;

        goto label066;

     label065:
        $r306 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JRadioButtonMenuItem>;

     label066:
        $r304[0] = $r306;

        $r307 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r303, $r304);

        $r301[1] = $r307;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerFactory", $r301);

        $r308 = newarray (java.lang.Object)[2];

        $r308[0] = "toggleButton";

        $r309 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$RichActionWidgetFactory>;

        if $r309 != null goto label067;

        $r217 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.RichActionWidgetFactory");

        $r310 = $r217;

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$RichActionWidgetFactory> = $r217;

        goto label068;

     label067:
        $r310 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$RichActionWidgetFactory>;

     label068:
        $r311 = newarray (java.lang.Object)[1];

        $r53 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JToggleButton>;

        if $r53 != null goto label069;

        $r312 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.JToggleButton");

        $r313 = $r312;

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JToggleButton> = $r312;

        goto label070;

     label069:
        $r313 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JToggleButton>;

     label070:
        $r311[0] = $r313;

        $r314 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r310, $r311);

        $r308[1] = $r314;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerFactory", $r308);

        $r315 = newarray (java.lang.Object)[2];

        $r315[0] = "editorPane";

        $r316 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$TextArgWidgetFactory>;

        if $r316 != null goto label071;

        $r216 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.TextArgWidgetFactory");

        $r317 = $r216;

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$TextArgWidgetFactory> = $r216;

        goto label072;

     label071:
        $r317 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$TextArgWidgetFactory>;

     label072:
        $r318 = newarray (java.lang.Object)[1];

        $r54 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JEditorPane>;

        if $r54 != null goto label073;

        $r319 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.JEditorPane");

        $r320 = $r319;

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JEditorPane> = $r319;

        goto label074;

     label073:
        $r320 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JEditorPane>;

     label074:
        $r318[0] = $r320;

        $r321 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r317, $r318);

        $r315[1] = $r321;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerFactory", $r315);

        $r322 = newarray (java.lang.Object)[2];

        $r322[0] = "label";

        $r323 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$TextArgWidgetFactory>;

        if $r323 != null goto label075;

        $r215 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.TextArgWidgetFactory");

        $r324 = $r215;

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$TextArgWidgetFactory> = $r215;

        goto label076;

     label075:
        $r324 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$TextArgWidgetFactory>;

     label076:
        $r325 = newarray (java.lang.Object)[1];

        $r55 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JLabel>;

        if $r55 != null goto label077;

        $r326 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.JLabel");

        $r327 = $r326;

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JLabel> = $r326;

        goto label078;

     label077:
        $r327 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JLabel>;

     label078:
        $r325[0] = $r327;

        $r328 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r324, $r325);

        $r322[1] = $r328;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerFactory", $r322);

        $r329 = newarray (java.lang.Object)[2];

        $r329[0] = "passwordField";

        $r330 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$TextArgWidgetFactory>;

        if $r330 != null goto label079;

        $r214 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.TextArgWidgetFactory");

        $r331 = $r214;

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$TextArgWidgetFactory> = $r214;

        goto label080;

     label079:
        $r331 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$TextArgWidgetFactory>;

     label080:
        $r332 = newarray (java.lang.Object)[1];

        $r56 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JPasswordField>;

        if $r56 != null goto label081;

        $r333 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.JPasswordField");

        $r334 = $r333;

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JPasswordField> = $r333;

        goto label082;

     label081:
        $r334 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JPasswordField>;

     label082:
        $r332[0] = $r334;

        $r335 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r331, $r332);

        $r329[1] = $r335;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerFactory", $r329);

        $r336 = newarray (java.lang.Object)[2];

        $r336[0] = "textArea";

        $r337 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$TextArgWidgetFactory>;

        if $r337 != null goto label083;

        $r213 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.TextArgWidgetFactory");

        $r338 = $r213;

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$TextArgWidgetFactory> = $r213;

        goto label084;

     label083:
        $r338 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$TextArgWidgetFactory>;

     label084:
        $r339 = newarray (java.lang.Object)[1];

        $r57 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JTextArea>;

        if $r57 != null goto label085;

        $r340 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.JTextArea");

        $r341 = $r340;

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JTextArea> = $r340;

        goto label086;

     label085:
        $r341 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JTextArea>;

     label086:
        $r339[0] = $r341;

        $r342 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r338, $r339);

        $r336[1] = $r342;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerFactory", $r336);

        $r343 = newarray (java.lang.Object)[2];

        $r343[0] = "textField";

        $r344 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$TextArgWidgetFactory>;

        if $r344 != null goto label087;

        $r212 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.TextArgWidgetFactory");

        $r345 = $r212;

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$TextArgWidgetFactory> = $r212;

        goto label088;

     label087:
        $r345 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$TextArgWidgetFactory>;

     label088:
        $r346 = newarray (java.lang.Object)[1];

        $r58 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JTextField>;

        if $r58 != null goto label089;

        $r347 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.JTextField");

        $r348 = $r347;

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JTextField> = $r347;

        goto label090;

     label089:
        $r348 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JTextField>;

     label090:
        $r346[0] = $r348;

        $r349 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r345, $r346);

        $r343[1] = $r349;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerFactory", $r343);

        $r350 = newarray (java.lang.Object)[2];

        $r350[0] = "textPane";

        $r351 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$TextArgWidgetFactory>;

        if $r351 != null goto label091;

        $r211 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.TextArgWidgetFactory");

        $r352 = $r211;

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$TextArgWidgetFactory> = $r211;

        goto label092;

     label091:
        $r352 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$TextArgWidgetFactory>;

     label092:
        $r353 = newarray (java.lang.Object)[1];

        $r59 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JTextPane>;

        if $r59 != null goto label093;

        $r354 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.JTextPane");

        $r355 = $r354;

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JTextPane> = $r354;

        goto label094;

     label093:
        $r355 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JTextPane>;

     label094:
        $r353[0] = $r355;

        $r356 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r352, $r353);

        $r350[1] = $r356;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerFactory", $r350);

        $r357 = newarray (java.lang.Object)[2];

        $r357[0] = "colorChooser";

        $r358 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JColorChooser>;

        if $r358 != null goto label095;

        $r359 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.JColorChooser");

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JColorChooser> = $r359;

        goto label096;

     label095:
        $r359 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JColorChooser>;

     label096:
        $r357[1] = $r359;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerBeanFactory", $r357);

        $r60 = newarray (java.lang.Object)[2];

        $r60[0] = "comboBox";

        $r61 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$ComboBoxFactory>;

        if $r61 != null goto label097;

        $r360 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.ComboBoxFactory");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$ComboBoxFactory> = $r360;

        goto label098;

     label097:
        $r360 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$ComboBoxFactory>;

     label098:
        $r62 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNew0(java.lang.Class,java.lang.Class)>(r1, $r360);

        $r60[1] = $r62;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerFactory", $r60);

        $r63 = newarray (java.lang.Object)[2];

        $r63[0] = "desktopPane";

        $r64 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JDesktopPane>;

        if $r64 != null goto label099;

        $r361 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.JDesktopPane");

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JDesktopPane> = $r361;

        goto label100;

     label099:
        $r361 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JDesktopPane>;

     label100:
        $r63[1] = $r361;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerBeanFactory", $r63);

        $r65 = newarray (java.lang.Object)[2];

        $r65[0] = "formattedTextField";

        $r66 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$FormattedTextFactory>;

        if $r66 != null goto label101;

        $r362 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.FormattedTextFactory");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$FormattedTextFactory> = $r362;

        goto label102;

     label101:
        $r362 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$FormattedTextFactory>;

     label102:
        $r67 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNew0(java.lang.Class,java.lang.Class)>(r1, $r362);

        $r65[1] = $r67;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerFactory", $r65);

        $r68 = newarray (java.lang.Object)[2];

        $r68[0] = "internalFrame";

        $r69 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$InternalFrameFactory>;

        if $r69 != null goto label103;

        $r363 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.InternalFrameFactory");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$InternalFrameFactory> = $r363;

        goto label104;

     label103:
        $r363 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$InternalFrameFactory>;

     label104:
        $r70 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNew0(java.lang.Class,java.lang.Class)>(r1, $r363);

        $r68[1] = $r70;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerFactory", $r68);

        $r71 = newarray (java.lang.Object)[2];

        $r71[0] = "layeredPane";

        $r72 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JLayeredPane>;

        if $r72 != null goto label105;

        $r364 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.JLayeredPane");

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JLayeredPane> = $r364;

        goto label106;

     label105:
        $r364 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JLayeredPane>;

     label106:
        $r71[1] = $r364;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerBeanFactory", $r71);

        $r73 = newarray (java.lang.Object)[2];

        $r73[0] = "list";

        $r74 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JList>;

        if $r74 != null goto label107;

        $r365 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.JList");

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JList> = $r365;

        goto label108;

     label107:
        $r365 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JList>;

     label108:
        $r73[1] = $r365;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerBeanFactory", $r73);

        $r75 = newarray (java.lang.Object)[2];

        $r75[0] = "menu";

        $r76 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JMenu>;

        if $r76 != null goto label109;

        $r366 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.JMenu");

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JMenu> = $r366;

        goto label110;

     label109:
        $r366 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JMenu>;

     label110:
        $r75[1] = $r366;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerBeanFactory", $r75);

        $r77 = newarray (java.lang.Object)[2];

        $r77[0] = "menuBar";

        $r78 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JMenuBar>;

        if $r78 != null goto label111;

        $r367 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.JMenuBar");

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JMenuBar> = $r367;

        goto label112;

     label111:
        $r367 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JMenuBar>;

     label112:
        $r77[1] = $r367;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerBeanFactory", $r77);

        $r79 = newarray (java.lang.Object)[2];

        $r79[0] = "panel";

        $r80 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JPanel>;

        if $r80 != null goto label113;

        $r368 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.JPanel");

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JPanel> = $r368;

        goto label114;

     label113:
        $r368 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JPanel>;

     label114:
        $r79[1] = $r368;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerBeanFactory", $r79);

        $r81 = newarray (java.lang.Object)[2];

        $r81[0] = "popupMenu";

        $r82 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JPopupMenu>;

        if $r82 != null goto label115;

        $r369 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.JPopupMenu");

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JPopupMenu> = $r369;

        goto label116;

     label115:
        $r369 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JPopupMenu>;

     label116:
        $r81[1] = $r369;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerBeanFactory", $r81);

        $r83 = newarray (java.lang.Object)[2];

        $r83[0] = "progressBar";

        $r84 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JProgressBar>;

        if $r84 != null goto label117;

        $r370 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.JProgressBar");

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JProgressBar> = $r370;

        goto label118;

     label117:
        $r370 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JProgressBar>;

     label118:
        $r83[1] = $r370;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerBeanFactory", $r83);

        $r85 = newarray (java.lang.Object)[2];

        $r85[0] = "scrollBar";

        $r86 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JScrollBar>;

        if $r86 != null goto label119;

        $r371 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.JScrollBar");

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JScrollBar> = $r371;

        goto label120;

     label119:
        $r371 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JScrollBar>;

     label120:
        $r85[1] = $r371;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerBeanFactory", $r85);

        $r87 = newarray (java.lang.Object)[2];

        $r87[0] = "scrollPane";

        $r88 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$ScrollPaneFactory>;

        if $r88 != null goto label121;

        $r372 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.ScrollPaneFactory");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$ScrollPaneFactory> = $r372;

        goto label122;

     label121:
        $r372 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$ScrollPaneFactory>;

     label122:
        $r89 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNew0(java.lang.Class,java.lang.Class)>(r1, $r372);

        $r87[1] = $r89;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerFactory", $r87);

        $r90 = newarray (java.lang.Object)[2];

        $r90[0] = "separator";

        $r91 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$SeparatorFactory>;

        if $r91 != null goto label123;

        $r373 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.SeparatorFactory");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$SeparatorFactory> = $r373;

        goto label124;

     label123:
        $r373 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$SeparatorFactory>;

     label124:
        $r92 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNew0(java.lang.Class,java.lang.Class)>(r1, $r373);

        $r90[1] = $r92;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerFactory", $r90);

        $r93 = newarray (java.lang.Object)[2];

        $r93[0] = "slider";

        $r94 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JSlider>;

        if $r94 != null goto label125;

        $r374 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.JSlider");

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JSlider> = $r374;

        goto label126;

     label125:
        $r374 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JSlider>;

     label126:
        $r93[1] = $r374;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerBeanFactory", $r93);

        $r95 = newarray (java.lang.Object)[2];

        $r95[0] = "spinner";

        $r96 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JSpinner>;

        if $r96 != null goto label127;

        $r375 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.JSpinner");

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JSpinner> = $r375;

        goto label128;

     label127:
        $r375 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JSpinner>;

     label128:
        $r95[1] = $r375;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerBeanFactory", $r95);

        $r97 = newarray (java.lang.Object)[2];

        $r97[0] = "splitPane";

        $r98 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$SplitPaneFactory>;

        if $r98 != null goto label129;

        $r376 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.SplitPaneFactory");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$SplitPaneFactory> = $r376;

        goto label130;

     label129:
        $r376 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$SplitPaneFactory>;

     label130:
        $r99 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNew0(java.lang.Class,java.lang.Class)>(r1, $r376);

        $r97[1] = $r99;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerFactory", $r97);

        $r377 = newarray (java.lang.Object)[2];

        $r377[0] = "tabbedPane";

        $r100 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$TabbedPaneFactory>;

        if $r100 != null goto label131;

        $r210 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.TabbedPaneFactory");

        $r378 = $r210;

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$TabbedPaneFactory> = $r210;

        goto label132;

     label131:
        $r378 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$TabbedPaneFactory>;

     label132:
        $r379 = newarray (java.lang.Object)[1];

        $r101 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JTabbedPane>;

        if $r101 != null goto label133;

        $r380 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.JTabbedPane");

        $r381 = $r380;

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JTabbedPane> = $r380;

        goto label134;

     label133:
        $r381 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JTabbedPane>;

     label134:
        $r379[0] = $r381;

        $r382 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r378, $r379);

        $r377[1] = $r382;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerFactory", $r377);

        $r383 = newarray (java.lang.Object)[2];

        $r383[0] = "table";

        $r384 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$TableFactory>;

        if $r384 != null goto label135;

        $r385 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.TableFactory");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$TableFactory> = $r385;

        goto label136;

     label135:
        $r385 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$TableFactory>;

     label136:
        $r102 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNew0(java.lang.Class,java.lang.Class)>(r1, $r385);

        $r383[1] = $r102;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerFactory", $r383);

        $r103 = newarray (java.lang.Object)[2];

        $r103[0] = "tableColumn";

        $r104 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$table$TableColumn>;

        if $r104 != null goto label137;

        $r386 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.table.TableColumn");

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$table$TableColumn> = $r386;

        goto label138;

     label137:
        $r386 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$table$TableColumn>;

     label138:
        $r103[1] = $r386;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerBeanFactory", $r103);

        $r105 = newarray (java.lang.Object)[2];

        $r105[0] = "toolBar";

        $r106 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JToolBar>;

        if $r106 != null goto label139;

        $r387 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.JToolBar");

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JToolBar> = $r387;

        goto label140;

     label139:
        $r387 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JToolBar>;

     label140:
        $r105[1] = $r387;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerBeanFactory", $r105);

        $r107 = newarray (java.lang.Object)[2];

        $r107[0] = "tree";

        $r108 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JTree>;

        if $r108 != null goto label141;

        $r388 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.JTree");

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JTree> = $r388;

        goto label142;

     label141:
        $r388 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JTree>;

     label142:
        $r107[1] = $r388;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerBeanFactory", $r107);

        $r109 = newarray (java.lang.Object)[2];

        $r109[0] = "viewport";

        $r110 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JViewport>;

        if $r110 != null goto label143;

        $r389 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.JViewport");

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JViewport> = $r389;

        goto label144;

     label143:
        $r389 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JViewport>;

     label144:
        $r109[1] = $r389;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerBeanFactory", $r109);

        $r111 = newarray (java.lang.Object)[2];

        $r111[0] = "boundedRangeModel";

        $r112 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$DefaultBoundedRangeModel>;

        if $r112 != null goto label145;

        $r390 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.DefaultBoundedRangeModel");

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$DefaultBoundedRangeModel> = $r390;

        goto label146;

     label145:
        $r390 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$DefaultBoundedRangeModel>;

     label146:
        $r111[1] = $r390;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerBeanFactory", $r111);

        $r113 = newarray (java.lang.Object)[2];

        $r113[0] = "spinnerDateModel";

        $r114 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$SpinnerDateModel>;

        if $r114 != null goto label147;

        $r391 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.SpinnerDateModel");

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$SpinnerDateModel> = $r391;

        goto label148;

     label147:
        $r391 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$SpinnerDateModel>;

     label148:
        $r113[1] = $r391;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerBeanFactory", $r113);

        $r115 = newarray (java.lang.Object)[2];

        $r115[0] = "spinnerListModel";

        $r116 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$SpinnerListModel>;

        if $r116 != null goto label149;

        $r392 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.SpinnerListModel");

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$SpinnerListModel> = $r392;

        goto label150;

     label149:
        $r392 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$SpinnerListModel>;

     label150:
        $r115[1] = $r392;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerBeanFactory", $r115);

        $r117 = newarray (java.lang.Object)[2];

        $r117[0] = "spinnerNumberModel";

        $r118 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$SpinnerNumberModel>;

        if $r118 != null goto label151;

        $r393 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.SpinnerNumberModel");

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$SpinnerNumberModel> = $r393;

        goto label152;

     label151:
        $r393 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$SpinnerNumberModel>;

     label152:
        $r117[1] = $r393;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerBeanFactory", $r117);

        $r119 = newarray (java.lang.Object)[2];

        $r119[0] = "tableModel";

        $r120 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$TableModelFactory>;

        if $r120 != null goto label153;

        $r394 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.TableModelFactory");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$TableModelFactory> = $r394;

        goto label154;

     label153:
        $r394 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$TableModelFactory>;

     label154:
        $r121 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNew0(java.lang.Class,java.lang.Class)>(r1, $r394);

        $r119[1] = $r121;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerFactory", $r119);

        $r122 = newarray (java.lang.Object)[2];

        $r122[0] = "propertyColumn";

        $r123 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$PropertyColumnFactory>;

        if $r123 != null goto label155;

        $r395 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.PropertyColumnFactory");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$PropertyColumnFactory> = $r395;

        goto label156;

     label155:
        $r395 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$PropertyColumnFactory>;

     label156:
        $r124 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNew0(java.lang.Class,java.lang.Class)>(r1, $r395);

        $r122[1] = $r124;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerFactory", $r122);

        $r125 = newarray (java.lang.Object)[2];

        $r125[0] = "closureColumn";

        $r126 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$ClosureColumnFactory>;

        if $r126 != null goto label157;

        $r396 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.ClosureColumnFactory");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$ClosureColumnFactory> = $r396;

        goto label158;

     label157:
        $r396 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$ClosureColumnFactory>;

     label158:
        $r127 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNew0(java.lang.Class,java.lang.Class)>(r1, $r396);

        $r125[1] = $r127;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerFactory", $r125);

        $r397 = newarray (java.lang.Object)[2];

        $r397[0] = "borderLayout";

        $r128 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$LayoutFactory>;

        if $r128 != null goto label159;

        $r209 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.LayoutFactory");

        $r398 = $r209;

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$LayoutFactory> = $r209;

        goto label160;

     label159:
        $r398 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$LayoutFactory>;

     label160:
        $r399 = newarray (java.lang.Object)[1];

        $r129 = <groovy.swing.SwingBuilder: java.lang.Class class$java$awt$BorderLayout>;

        if $r129 != null goto label161;

        $r400 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("java.awt.BorderLayout");

        $r401 = $r400;

        <groovy.swing.SwingBuilder: java.lang.Class class$java$awt$BorderLayout> = $r400;

        goto label162;

     label161:
        $r401 = <groovy.swing.SwingBuilder: java.lang.Class class$java$awt$BorderLayout>;

     label162:
        $r399[0] = $r401;

        $r402 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r398, $r399);

        $r397[1] = $r402;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerFactory", $r397);

        $r403 = newarray (java.lang.Object)[2];

        $r403[0] = "cardLayout";

        $r404 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$LayoutFactory>;

        if $r404 != null goto label163;

        $r208 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.LayoutFactory");

        $r405 = $r208;

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$LayoutFactory> = $r208;

        goto label164;

     label163:
        $r405 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$LayoutFactory>;

     label164:
        $r406 = newarray (java.lang.Object)[1];

        $r130 = <groovy.swing.SwingBuilder: java.lang.Class class$java$awt$CardLayout>;

        if $r130 != null goto label165;

        $r407 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("java.awt.CardLayout");

        $r408 = $r407;

        <groovy.swing.SwingBuilder: java.lang.Class class$java$awt$CardLayout> = $r407;

        goto label166;

     label165:
        $r408 = <groovy.swing.SwingBuilder: java.lang.Class class$java$awt$CardLayout>;

     label166:
        $r406[0] = $r408;

        $r409 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r405, $r406);

        $r403[1] = $r409;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerFactory", $r403);

        $r410 = newarray (java.lang.Object)[2];

        $r410[0] = "flowLayout";

        $r411 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$LayoutFactory>;

        if $r411 != null goto label167;

        $r207 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.LayoutFactory");

        $r412 = $r207;

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$LayoutFactory> = $r207;

        goto label168;

     label167:
        $r412 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$LayoutFactory>;

     label168:
        $r413 = newarray (java.lang.Object)[1];

        $r131 = <groovy.swing.SwingBuilder: java.lang.Class class$java$awt$FlowLayout>;

        if $r131 != null goto label169;

        $r414 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("java.awt.FlowLayout");

        $r415 = $r414;

        <groovy.swing.SwingBuilder: java.lang.Class class$java$awt$FlowLayout> = $r414;

        goto label170;

     label169:
        $r415 = <groovy.swing.SwingBuilder: java.lang.Class class$java$awt$FlowLayout>;

     label170:
        $r413[0] = $r415;

        $r416 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r412, $r413);

        $r410[1] = $r416;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerFactory", $r410);

        $r417 = newarray (java.lang.Object)[2];

        $r417[0] = "gridBagLayout";

        $r418 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$LayoutFactory>;

        if $r418 != null goto label171;

        $r206 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.LayoutFactory");

        $r419 = $r206;

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$LayoutFactory> = $r206;

        goto label172;

     label171:
        $r419 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$LayoutFactory>;

     label172:
        $r420 = newarray (java.lang.Object)[1];

        $r132 = <groovy.swing.SwingBuilder: java.lang.Class class$java$awt$GridBagLayout>;

        if $r132 != null goto label173;

        $r421 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("java.awt.GridBagLayout");

        $r422 = $r421;

        <groovy.swing.SwingBuilder: java.lang.Class class$java$awt$GridBagLayout> = $r421;

        goto label174;

     label173:
        $r422 = <groovy.swing.SwingBuilder: java.lang.Class class$java$awt$GridBagLayout>;

     label174:
        $r420[0] = $r422;

        $r423 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r419, $r420);

        $r417[1] = $r423;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerFactory", $r417);

        $r424 = newarray (java.lang.Object)[2];

        $r424[0] = "gridLayout";

        $r425 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$LayoutFactory>;

        if $r425 != null goto label175;

        $r205 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.LayoutFactory");

        $r426 = $r205;

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$LayoutFactory> = $r205;

        goto label176;

     label175:
        $r426 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$LayoutFactory>;

     label176:
        $r427 = newarray (java.lang.Object)[1];

        $r133 = <groovy.swing.SwingBuilder: java.lang.Class class$java$awt$GridLayout>;

        if $r133 != null goto label177;

        $r428 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("java.awt.GridLayout");

        $r429 = $r428;

        <groovy.swing.SwingBuilder: java.lang.Class class$java$awt$GridLayout> = $r428;

        goto label178;

     label177:
        $r429 = <groovy.swing.SwingBuilder: java.lang.Class class$java$awt$GridLayout>;

     label178:
        $r427[0] = $r429;

        $r430 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r426, $r427);

        $r424[1] = $r430;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerFactory", $r424);

        $r431 = newarray (java.lang.Object)[2];

        $r431[0] = "overlayLayout";

        $r432 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$LayoutFactory>;

        if $r432 != null goto label179;

        $r204 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.LayoutFactory");

        $r433 = $r204;

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$LayoutFactory> = $r204;

        goto label180;

     label179:
        $r433 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$LayoutFactory>;

     label180:
        $r434 = newarray (java.lang.Object)[1];

        $r134 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$OverlayLayout>;

        if $r134 != null goto label181;

        $r435 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.OverlayLayout");

        $r436 = $r435;

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$OverlayLayout> = $r435;

        goto label182;

     label181:
        $r436 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$OverlayLayout>;

     label182:
        $r434[0] = $r436;

        $r437 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r433, $r434);

        $r431[1] = $r437;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerFactory", $r431);

        $r438 = newarray (java.lang.Object)[2];

        $r438[0] = "springLayout";

        $r439 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$LayoutFactory>;

        if $r439 != null goto label183;

        $r203 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.LayoutFactory");

        $r440 = $r203;

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$LayoutFactory> = $r203;

        goto label184;

     label183:
        $r440 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$LayoutFactory>;

     label184:
        $r441 = newarray (java.lang.Object)[1];

        $r135 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$SpringLayout>;

        if $r135 != null goto label185;

        $r442 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.SpringLayout");

        $r443 = $r442;

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$SpringLayout> = $r442;

        goto label186;

     label185:
        $r443 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$SpringLayout>;

     label186:
        $r441[0] = $r443;

        $r444 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r440, $r441);

        $r438[1] = $r444;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerFactory", $r438);

        $r445 = newarray (java.lang.Object)[2];

        $r445[0] = "gridBagConstraints";

        $r446 = <groovy.swing.SwingBuilder: java.lang.Class class$java$awt$GridBagConstraints>;

        if $r446 != null goto label187;

        $r447 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("java.awt.GridBagConstraints");

        <groovy.swing.SwingBuilder: java.lang.Class class$java$awt$GridBagConstraints> = $r447;

        goto label188;

     label187:
        $r447 = <groovy.swing.SwingBuilder: java.lang.Class class$java$awt$GridBagConstraints>;

     label188:
        $r445[1] = $r447;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerBeanFactory", $r445);

        $r136 = newarray (java.lang.Object)[2];

        $r136[0] = "gbc";

        $r137 = <groovy.swing.SwingBuilder: java.lang.Class class$java$awt$GridBagConstraints>;

        if $r137 != null goto label189;

        $r448 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("java.awt.GridBagConstraints");

        <groovy.swing.SwingBuilder: java.lang.Class class$java$awt$GridBagConstraints> = $r448;

        goto label190;

     label189:
        $r448 = <groovy.swing.SwingBuilder: java.lang.Class class$java$awt$GridBagConstraints>;

     label190:
        $r136[1] = $r448;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerBeanFactory", $r136);

        $r138 = newarray (java.lang.Object)[1];

        $r139 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: groovy.lang.Closure getMethodPointer(java.lang.Object,java.lang.String)>(r1, "constraintsAttributeDelegate");

        $r138[0] = $r139;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "addAttributeDelegate", $r138);

        $r140 = newarray (java.lang.Object)[2];

        $r140[0] = "boxLayout";

        $r141 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$BoxLayoutFactory>;

        if $r141 != null goto label191;

        $r449 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.BoxLayoutFactory");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$BoxLayoutFactory> = $r449;

        goto label192;

     label191:
        $r449 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$BoxLayoutFactory>;

     label192:
        $r142 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNew0(java.lang.Class,java.lang.Class)>(r1, $r449);

        $r140[1] = $r142;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerFactory", $r140);

        $r143 = newarray (java.lang.Object)[2];

        $r143[0] = "box";

        $r144 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$BoxFactory>;

        if $r144 != null goto label193;

        $r450 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.BoxFactory");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$BoxFactory> = $r450;

        goto label194;

     label193:
        $r450 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$BoxFactory>;

     label194:
        $r145 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNew0(java.lang.Class,java.lang.Class)>(r1, $r450);

        $r143[1] = $r145;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerFactory", $r143);

        $r146 = newarray (java.lang.Object)[2];

        $r146[0] = "hbox";

        $r147 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$HBoxFactory>;

        if $r147 != null goto label195;

        $r451 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.HBoxFactory");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$HBoxFactory> = $r451;

        goto label196;

     label195:
        $r451 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$HBoxFactory>;

     label196:
        $r148 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNew0(java.lang.Class,java.lang.Class)>(r1, $r451);

        $r146[1] = $r148;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerFactory", $r146);

        $r149 = newarray (java.lang.Object)[2];

        $r149[0] = "hglue";

        $r150 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$HGlueFactory>;

        if $r150 != null goto label197;

        $r452 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.HGlueFactory");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$HGlueFactory> = $r452;

        goto label198;

     label197:
        $r452 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$HGlueFactory>;

     label198:
        $r151 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNew0(java.lang.Class,java.lang.Class)>(r1, $r452);

        $r149[1] = $r151;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerFactory", $r149);

        $r152 = newarray (java.lang.Object)[2];

        $r152[0] = "hstrut";

        $r153 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$HStrutFactory>;

        if $r153 != null goto label199;

        $r453 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.HStrutFactory");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$HStrutFactory> = $r453;

        goto label200;

     label199:
        $r453 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$HStrutFactory>;

     label200:
        $r154 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNew0(java.lang.Class,java.lang.Class)>(r1, $r453);

        $r152[1] = $r154;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerFactory", $r152);

        $r155 = newarray (java.lang.Object)[2];

        $r155[0] = "vbox";

        $r156 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$VBoxFactory>;

        if $r156 != null goto label201;

        $r454 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.VBoxFactory");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$VBoxFactory> = $r454;

        goto label202;

     label201:
        $r454 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$VBoxFactory>;

     label202:
        $r157 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNew0(java.lang.Class,java.lang.Class)>(r1, $r454);

        $r155[1] = $r157;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerFactory", $r155);

        $r158 = newarray (java.lang.Object)[2];

        $r158[0] = "vglue";

        $r159 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$VGlueFactory>;

        if $r159 != null goto label203;

        $r455 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.VGlueFactory");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$VGlueFactory> = $r455;

        goto label204;

     label203:
        $r455 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$VGlueFactory>;

     label204:
        $r160 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNew0(java.lang.Class,java.lang.Class)>(r1, $r455);

        $r158[1] = $r160;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerFactory", $r158);

        $r161 = newarray (java.lang.Object)[2];

        $r161[0] = "vstrut";

        $r162 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$VStrutFactory>;

        if $r162 != null goto label205;

        $r456 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.VStrutFactory");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$VStrutFactory> = $r456;

        goto label206;

     label205:
        $r456 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$VStrutFactory>;

     label206:
        $r163 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNew0(java.lang.Class,java.lang.Class)>(r1, $r456);

        $r161[1] = $r163;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerFactory", $r161);

        $r164 = newarray (java.lang.Object)[2];

        $r164[0] = "glue";

        $r165 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$GlueFactory>;

        if $r165 != null goto label207;

        $r457 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.GlueFactory");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$GlueFactory> = $r457;

        goto label208;

     label207:
        $r457 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$GlueFactory>;

     label208:
        $r166 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNew0(java.lang.Class,java.lang.Class)>(r1, $r457);

        $r164[1] = $r166;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerFactory", $r164);

        $r167 = newarray (java.lang.Object)[2];

        $r167[0] = "rigidArea";

        $r168 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$RigidAreaFactory>;

        if $r168 != null goto label209;

        $r458 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.RigidAreaFactory");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$RigidAreaFactory> = $r458;

        goto label210;

     label209:
        $r458 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$RigidAreaFactory>;

     label210:
        $r169 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNew0(java.lang.Class,java.lang.Class)>(r1, $r458);

        $r167[1] = $r169;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerFactory", $r167);

        $r170 = newarray (java.lang.Object)[2];

        $r170[0] = "tableLayout";

        $r171 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$TableLayoutFactory>;

        if $r171 != null goto label211;

        $r459 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.TableLayoutFactory");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$TableLayoutFactory> = $r459;

        goto label212;

     label211:
        $r459 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$TableLayoutFactory>;

     label212:
        $r172 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNew0(java.lang.Class,java.lang.Class)>(r1, $r459);

        $r170[1] = $r172;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerFactory", $r170);

        $r173 = newarray (java.lang.Object)[2];

        $r173[0] = "tr";

        $r174 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$TRFactory>;

        if $r174 != null goto label213;

        $r460 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.TRFactory");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$TRFactory> = $r460;

        goto label214;

     label213:
        $r460 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$TRFactory>;

     label214:
        $r175 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNew0(java.lang.Class,java.lang.Class)>(r1, $r460);

        $r173[1] = $r175;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerFactory", $r173);

        $r176 = newarray (java.lang.Object)[2];

        $r176[0] = "td";

        $r177 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$TDFactory>;

        if $r177 != null goto label215;

        $r461 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.TDFactory");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$TDFactory> = $r461;

        goto label216;

     label215:
        $r461 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$TDFactory>;

     label216:
        $r178 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNew0(java.lang.Class,java.lang.Class)>(r1, $r461);

        $r176[1] = $r178;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerFactory", $r176);

        $r179 = newarray (java.lang.Object)[2];

        $r179[0] = "lineBorder";

        $r180 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$LineBorderFactory>;

        if $r180 != null goto label217;

        $r462 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.LineBorderFactory");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$LineBorderFactory> = $r462;

        goto label218;

     label217:
        $r462 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$LineBorderFactory>;

     label218:
        $r181 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNew0(java.lang.Class,java.lang.Class)>(r1, $r462);

        $r179[1] = $r181;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerFactory", $r179);

        $r463 = newarray (java.lang.Object)[2];

        $r463[0] = "loweredBevelBorder";

        $r182 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$BevelBorderFactory>;

        if $r182 != null goto label219;

        $r202 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.BevelBorderFactory");

        $r464 = $r202;

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$BevelBorderFactory> = $r202;

        goto label220;

     label219:
        $r464 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$BevelBorderFactory>;

     label220:
        $r465 = newarray (java.lang.Object)[1];

        $r183 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$border$BevelBorder>;

        if $r183 != null goto label221;

        $r466 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.border.BevelBorder");

        $r467 = $r466;

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$border$BevelBorder> = $r466;

        goto label222;

     label221:
        $r467 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$border$BevelBorder>;

     label222:
        $r468 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r467, "LOWERED");

        $r465[0] = $r468;

        $r469 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r464, $r465);

        $r463[1] = $r469;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerFactory", $r463);

        $r470 = newarray (java.lang.Object)[2];

        $r470[0] = "raisedBevelBorder";

        $r471 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$BevelBorderFactory>;

        if $r471 != null goto label223;

        $r201 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.BevelBorderFactory");

        $r472 = $r201;

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$BevelBorderFactory> = $r201;

        goto label224;

     label223:
        $r472 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$BevelBorderFactory>;

     label224:
        $r473 = newarray (java.lang.Object)[1];

        $r184 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$border$BevelBorder>;

        if $r184 != null goto label225;

        $r474 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.border.BevelBorder");

        $r475 = $r474;

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$border$BevelBorder> = $r474;

        goto label226;

     label225:
        $r475 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$border$BevelBorder>;

     label226:
        $r476 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r475, "RAISED");

        $r473[0] = $r476;

        $r477 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r472, $r473);

        $r470[1] = $r477;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerFactory", $r470);

        $r478 = newarray (java.lang.Object)[2];

        $r478[0] = "etchedBorder";

        $r479 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$EtchedBorderFactory>;

        if $r479 != null goto label227;

        $r200 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.EtchedBorderFactory");

        $r480 = $r200;

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$EtchedBorderFactory> = $r200;

        goto label228;

     label227:
        $r480 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$EtchedBorderFactory>;

     label228:
        $r481 = newarray (java.lang.Object)[1];

        $r185 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$border$EtchedBorder>;

        if $r185 != null goto label229;

        $r482 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.border.EtchedBorder");

        $r483 = $r482;

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$border$EtchedBorder> = $r482;

        goto label230;

     label229:
        $r483 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$border$EtchedBorder>;

     label230:
        $r484 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r483, "LOWERED");

        $r481[0] = $r484;

        $r485 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r480, $r481);

        $r478[1] = $r485;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerFactory", $r478);

        $r486 = newarray (java.lang.Object)[2];

        $r486[0] = "loweredEtchedBorder";

        $r487 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$EtchedBorderFactory>;

        if $r487 != null goto label231;

        $r199 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.EtchedBorderFactory");

        $r488 = $r199;

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$EtchedBorderFactory> = $r199;

        goto label232;

     label231:
        $r488 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$EtchedBorderFactory>;

     label232:
        $r489 = newarray (java.lang.Object)[1];

        $r186 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$border$EtchedBorder>;

        if $r186 != null goto label233;

        $r490 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.border.EtchedBorder");

        $r491 = $r490;

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$border$EtchedBorder> = $r490;

        goto label234;

     label233:
        $r491 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$border$EtchedBorder>;

     label234:
        $r492 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r491, "LOWERED");

        $r489[0] = $r492;

        $r493 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r488, $r489);

        $r486[1] = $r493;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerFactory", $r486);

        $r494 = newarray (java.lang.Object)[2];

        $r494[0] = "raisedEtchedBorder";

        $r495 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$EtchedBorderFactory>;

        if $r495 != null goto label235;

        $r198 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.EtchedBorderFactory");

        $r496 = $r198;

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$EtchedBorderFactory> = $r198;

        goto label236;

     label235:
        $r496 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$EtchedBorderFactory>;

     label236:
        $r497 = newarray (java.lang.Object)[1];

        $r187 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$border$EtchedBorder>;

        if $r187 != null goto label237;

        $r498 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.border.EtchedBorder");

        $r499 = $r498;

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$border$EtchedBorder> = $r498;

        goto label238;

     label237:
        $r499 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$border$EtchedBorder>;

     label238:
        $r500 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r499, "RAISED");

        $r497[0] = $r500;

        $r501 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r496, $r497);

        $r494[1] = $r501;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerFactory", $r494);

        $r502 = newarray (java.lang.Object)[2];

        $r502[0] = "titledBorder";

        $r503 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$TitledBorderFactory>;

        if $r503 != null goto label239;

        $r504 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.TitledBorderFactory");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$TitledBorderFactory> = $r504;

        goto label240;

     label239:
        $r504 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$TitledBorderFactory>;

     label240:
        $r188 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNew0(java.lang.Class,java.lang.Class)>(r1, $r504);

        $r502[1] = $r188;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerFactory", $r502);

        $r189 = newarray (java.lang.Object)[2];

        $r189[0] = "emptyBorder";

        $r190 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$EmptyBorderFactory>;

        if $r190 != null goto label241;

        $r505 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.EmptyBorderFactory");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$EmptyBorderFactory> = $r505;

        goto label242;

     label241:
        $r505 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$EmptyBorderFactory>;

     label242:
        $r191 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNew0(java.lang.Class,java.lang.Class)>(r1, $r505);

        $r189[1] = $r191;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerFactory", $r189);

        $r192 = newarray (java.lang.Object)[2];

        $r192[0] = "compoundBorder";

        $r193 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$CompoundBorderFactory>;

        if $r193 != null goto label243;

        $r506 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.CompoundBorderFactory");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$CompoundBorderFactory> = $r506;

        goto label244;

     label243:
        $r506 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$CompoundBorderFactory>;

     label244:
        $r194 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNew0(java.lang.Class,java.lang.Class)>(r1, $r506);

        $r192[1] = $r194;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerFactory", $r192);

        $r195 = newarray (java.lang.Object)[2];

        $r195[0] = "matteBorder";

        $r196 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$MatteBorderFactory>;

        if $r196 != null goto label245;

        $r507 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.MatteBorderFactory");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$MatteBorderFactory> = $r507;

        goto label246;

     label245:
        $r507 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$MatteBorderFactory>;

     label246:
        $r197 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNew0(java.lang.Class,java.lang.Class)>(r1, $r507);

        $r195[1] = $r197;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "registerFactory", $r195);

        return;
    }

    public void registerBeanFactory(java.lang.String, java.lang.Class)
    {
        groovy.swing.SwingBuilder r29;
        java.lang.Object[] $r4, $r8, $r11, $r14, $r17, $r20, $r23, $r26, $r30, $r32, $r34, $r36, $r38, $r40, $r42, $r44, $r46;
        java.lang.String r31;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        java.lang.Boolean $r57, $r59, $r61, $r63;
        java.lang.Class $r0, r1, $r2, $r3, r5, $r7, $r10, $r13, $r16, $r19, $r22, $r25, $r28, $r33, $r37, $r41, $r45, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r58, $r60, $r62, $r64, $r65, $r66;
        java.lang.Object $r6, $r9, $r12, $r15, $r18, $r21, $r24, $r27, $r35, $r39, $r43, $r47;

        r29 := @this: groovy.swing.SwingBuilder;

        r31 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.Class;

        $r0 = <groovy.swing.SwingBuilder: java.lang.Class class$0>;

        if $r0 != null goto label01;

        $r48 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.SwingBuilder");

        <groovy.swing.SwingBuilder: java.lang.Class class$0> = $r48;

        goto label02;

     label01:
        $r48 = <groovy.swing.SwingBuilder: java.lang.Class class$0>;

     label02:
        r1 = $r48;

        $r2 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label03;

        $r49 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass> = $r49;

        goto label04;

     label03:
        $r49 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $r3 = <groovy.swing.SwingBuilder: java.lang.Class class$java$awt$LayoutManager>;

        if $r3 != null goto label05;

        $r50 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("java.awt.LayoutManager");

        <groovy.swing.SwingBuilder: java.lang.Class class$java$awt$LayoutManager> = $r50;

        goto label06;

     label05:
        $r50 = <groovy.swing.SwingBuilder: java.lang.Class class$java$awt$LayoutManager>;

     label06:
        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = r5;

        $r6 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r50, "isAssignableFrom", $r4);

        $z0 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r6);

        if $z0 == 0 goto label09;

        $r44 = newarray (java.lang.Object)[2];

        $r44[0] = r31;

        $r45 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$LayoutFactory>;

        if $r45 != null goto label07;

        $r51 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.LayoutFactory");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$LayoutFactory> = $r51;

        goto label08;

     label07:
        $r51 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$LayoutFactory>;

     label08:
        $r46 = newarray (java.lang.Object)[1];

        $r46[0] = r5;

        $r47 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r51, $r46);

        $r44[1] = $r47;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r29, "registerFactory", $r44);

        goto label47;

     label09:
        $r7 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JScrollPane>;

        if $r7 != null goto label10;

        $r52 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.JScrollPane");

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JScrollPane> = $r52;

        goto label11;

     label10:
        $r52 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JScrollPane>;

     label11:
        $r8 = newarray (java.lang.Object)[1];

        $r8[0] = r5;

        $r9 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r52, "isAssignableFrom", $r8);

        $z1 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r9);

        if $z1 == 0 goto label14;

        $r40 = newarray (java.lang.Object)[2];

        $r40[0] = r31;

        $r41 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$ScrollPaneFactory>;

        if $r41 != null goto label12;

        $r53 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.ScrollPaneFactory");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$ScrollPaneFactory> = $r53;

        goto label13;

     label12:
        $r53 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$ScrollPaneFactory>;

     label13:
        $r42 = newarray (java.lang.Object)[1];

        $r42[0] = r5;

        $r43 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r53, $r42);

        $r40[1] = $r43;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r29, "registerFactory", $r40);

        goto label47;

     label14:
        $r10 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JTable>;

        if $r10 != null goto label15;

        $r54 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.JTable");

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JTable> = $r54;

        goto label16;

     label15:
        $r54 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JTable>;

     label16:
        $r11 = newarray (java.lang.Object)[1];

        $r11[0] = r5;

        $r12 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r54, "isAssignableFrom", $r11);

        $z2 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r12);

        if $z2 == 0 goto label19;

        $r36 = newarray (java.lang.Object)[2];

        $r36[0] = r31;

        $r37 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$TableFactory>;

        if $r37 != null goto label17;

        $r55 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.TableFactory");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$TableFactory> = $r55;

        goto label18;

     label17:
        $r55 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$TableFactory>;

     label18:
        $r38 = newarray (java.lang.Object)[1];

        $r38[0] = r5;

        $r39 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r55, $r38);

        $r36[1] = $r39;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r29, "registerFactory", $r36);

        goto label47;

     label19:
        $r13 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JComponent>;

        if $r13 != null goto label20;

        $r56 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.JComponent");

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JComponent> = $r56;

        goto label21;

     label20:
        $r56 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JComponent>;

     label21:
        $r14 = newarray (java.lang.Object)[1];

        $r14[0] = r5;

        $r15 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r56, "isAssignableFrom", $r14);

        $z3 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r15);

        if $z3 == 0 goto label23;

     label22:
        $r57 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label26;

     label23:
        $r16 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JApplet>;

        if $r16 != null goto label24;

        $r58 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.JApplet");

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JApplet> = $r58;

        goto label25;

     label24:
        $r58 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JApplet>;

     label25:
        $r17 = newarray (java.lang.Object)[1];

        $r17[0] = r5;

        $r18 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r58, "isAssignableFrom", $r17);

        $z4 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r18);

        if $z4 != 0 goto label22;

        $r57 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label26:
        $z5 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r57);

        if $z5 == 0 goto label28;

     label27:
        $r59 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label31;

     label28:
        $r19 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JDialog>;

        if $r19 != null goto label29;

        $r60 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.JDialog");

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JDialog> = $r60;

        goto label30;

     label29:
        $r60 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JDialog>;

     label30:
        $r20 = newarray (java.lang.Object)[1];

        $r20[0] = r5;

        $r21 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r60, "isAssignableFrom", $r20);

        $z6 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r21);

        if $z6 != 0 goto label27;

        $r59 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label31:
        $z7 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r59);

        if $z7 == 0 goto label33;

     label32:
        $r61 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label36;

     label33:
        $r22 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JFrame>;

        if $r22 != null goto label34;

        $r62 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.JFrame");

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JFrame> = $r62;

        goto label35;

     label34:
        $r62 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JFrame>;

     label35:
        $r23 = newarray (java.lang.Object)[1];

        $r23[0] = r5;

        $r24 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r62, "isAssignableFrom", $r23);

        $z8 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r24);

        if $z8 != 0 goto label32;

        $r61 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label36:
        $z9 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r61);

        if $z9 == 0 goto label38;

     label37:
        $r63 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label41;

     label38:
        $r25 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JWindow>;

        if $r25 != null goto label39;

        $r64 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.JWindow");

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JWindow> = $r64;

        goto label40;

     label39:
        $r64 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$JWindow>;

     label40:
        $r26 = newarray (java.lang.Object)[1];

        $r26[0] = r5;

        $r27 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r64, "isAssignableFrom", $r26);

        $z10 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r27);

        if $z10 != 0 goto label37;

        $r63 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label41:
        $z11 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r63);

        if $z11 == 0 goto label44;

        $r32 = newarray (java.lang.Object)[2];

        $r32[0] = r31;

        $r33 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$ComponentFactory>;

        if $r33 != null goto label42;

        $r65 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.ComponentFactory");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$ComponentFactory> = $r65;

        goto label43;

     label42:
        $r65 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$factory$ComponentFactory>;

     label43:
        $r34 = newarray (java.lang.Object)[1];

        $r34[0] = r5;

        $r35 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r65, $r34);

        $r32[1] = $r35;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r29, "registerFactory", $r32);

        goto label47;

     label44:
        $r28 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$util$FactoryBuilderSupport>;

        if $r28 != null goto label45;

        $r66 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.util.FactoryBuilderSupport");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$util$FactoryBuilderSupport> = $r66;

        goto label46;

     label45:
        $r66 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$util$FactoryBuilderSupport>;

     label46:
        $r30 = newarray (java.lang.Object)[2];

        $r30[0] = r31;

        $r30[1] = r5;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnSuperN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>($r66, r29, "registerBeanFactory", $r30);

     label47:
        return;
    }

    public groovy.swing.SwingBuilder edt(groovy.lang.Closure)
    {
        groovy.lang.Closure r31;
        groovy.swing.SwingBuilder r4, $r11;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.reflect.InvocationTargetException $r20;
        java.util.List $r14;
        java.lang.Throwable $r19, $r25, $r30;
        java.lang.Object[] $r3, $r9, $r12, $r13, $r18, $r22, $r28;
        java.lang.Boolean $r34;
        java.lang.InterruptedException $r26;
        java.lang.Class $r0, r1, $r2, $r6, $r8, $r16, $r21, $r27, $r32, $r33, $r35, $r36, $r37, $r38, $r39;
        java.lang.Object $r5, $r7, $r10, $r15, $r17, $r23, $r24, $r29;

        r4 := @this: groovy.swing.SwingBuilder;

        r31 := @parameter0: groovy.lang.Closure;

        $r0 = <groovy.swing.SwingBuilder: java.lang.Class class$0>;

        if $r0 != null goto label01;

        $r32 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.SwingBuilder");

        <groovy.swing.SwingBuilder: java.lang.Class class$0> = $r32;

        goto label02;

     label01:
        $r32 = <groovy.swing.SwingBuilder: java.lang.Class class$0>;

     label02:
        r1 = $r32;

        $r2 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label03;

        $r33 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass> = $r33;

        goto label04;

     label03:
        $r33 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = r4;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r31, "setDelegate", $r3);

        $z0 = r4.<groovy.swing.SwingBuilder: boolean headless>;

        $r5 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Object box(boolean)>($z0);

        $z1 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r5);

        if $z1 == 0 goto label06;

     label05:
        $r34 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label09;

     label06:
        $r6 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$SwingUtilities>;

        if $r6 != null goto label07;

        $r35 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.SwingUtilities");

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$SwingUtilities> = $r35;

        goto label08;

     label07:
        $r35 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$SwingUtilities>;

     label08:
        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r35, "isEventDispatchThread");

        $z2 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r7);

        if $z2 != 0 goto label05;

        $r34 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label09:
        $z3 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r34);

        if $z3 == 0 goto label10;

        $r18 = newarray (java.lang.Object)[1];

        $r18[0] = r4;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r31, "call", $r18);

        goto label26;

     label10:
        $z4 = r31 instanceof org.codehaus.groovy.runtime.MethodClosure;

        if $z4 != 0 goto label11;

        $z5 = 1;

        goto label12;

     label11:
        $z5 = 0;

     label12:
        if $z5 == 0 goto label15;

        $r12 = newarray (java.lang.Object)[1];

        $r13 = newarray (java.lang.Object)[1];

        $r13[0] = r4;

        $r14 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.util.List createList(java.lang.Object[])>($r13);

        $r12[0] = $r14;

        $r15 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r31, "curry", $r12);

        $r16 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$Closure>;

        if $r16 != null goto label13;

        $r36 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.lang.Closure");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$Closure> = $r36;

        goto label14;

     label13:
        $r36 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$Closure>;

     label14:
        $r17 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r15, $r36);

        r31 = (groovy.lang.Closure) $r17;

        goto label15;

     label15:
        $r8 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$SwingUtilities>;

        if $r8 != null goto label16;

        $r37 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.SwingUtilities");

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$SwingUtilities> = $r37;

        goto label17;

     label16:
        $r37 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$SwingUtilities>;

     label17:
        $r9 = newarray (java.lang.Object)[1];

        $r9[0] = r31;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r37, "invokeAndWait", $r9);

        goto label24;

     label18:
        $r26 := @caughtexception;

        $r27 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$GroovyRuntimeException>;

        if $r27 != null goto label19;

        $r38 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.lang.GroovyRuntimeException");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$GroovyRuntimeException> = $r38;

        goto label20;

     label19:
        $r38 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$GroovyRuntimeException>;

     label20:
        $r28 = newarray (java.lang.Object)[2];

        $r28[0] = "interrupted swing interaction";

        $r28[1] = $r26;

        $r29 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r38, $r28);

        $r30 = (java.lang.Throwable) $r29;

        throw $r30;

     label21:
        $r20 := @caughtexception;

        $r21 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$GroovyRuntimeException>;

        if $r21 != null goto label22;

        $r39 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.lang.GroovyRuntimeException");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$GroovyRuntimeException> = $r39;

        goto label23;

     label22:
        $r39 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$GroovyRuntimeException>;

     label23:
        $r22 = newarray (java.lang.Object)[2];

        $r22[0] = "exception in event dispatch thread";

        $r23 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r20, "getTargetException");

        $r22[1] = $r23;

        $r24 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r39, $r22);

        $r25 = (java.lang.Throwable) $r24;

        throw $r25;

     label24:
        goto label26;

     label25:
        $r19 := @caughtexception;

        throw $r19;

     label26:
        $r10 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>(r4, r1);

        $r11 = (groovy.swing.SwingBuilder) $r10;

        return $r11;

        catch java.lang.InterruptedException from label10 to label18 with label18;
        catch java.lang.reflect.InvocationTargetException from label10 to label18 with label21;
        catch java.lang.Throwable from label10 to label24 with label25;
    }

    public groovy.swing.SwingBuilder doLater(groovy.lang.Closure)
    {
        java.lang.Object[] $r3, $r7, $r8, $r9;
        groovy.lang.Closure r14;
        groovy.swing.SwingBuilder r4, $r20;
        boolean $z0, $z1, $z2, $z3;
        java.util.List $r10;
        java.lang.Class $r0, r1, $r2, $r6, $r12, $r15, $r16, $r17, $r18;
        java.lang.Object $r5, $r11, $r13, $r19;

        r4 := @this: groovy.swing.SwingBuilder;

        r14 := @parameter0: groovy.lang.Closure;

        $r0 = <groovy.swing.SwingBuilder: java.lang.Class class$0>;

        if $r0 != null goto label01;

        $r15 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.SwingBuilder");

        <groovy.swing.SwingBuilder: java.lang.Class class$0> = $r15;

        goto label02;

     label01:
        $r15 = <groovy.swing.SwingBuilder: java.lang.Class class$0>;

     label02:
        r1 = $r15;

        $r2 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label03;

        $r16 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass> = $r16;

        goto label04;

     label03:
        $r16 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = r4;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r14, "setDelegate", $r3);

        $z0 = r4.<groovy.swing.SwingBuilder: boolean headless>;

        $r5 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Object box(boolean)>($z0);

        $z1 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r5);

        if $z1 == 0 goto label05;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, r14, "call");

        goto label13;

     label05:
        $z2 = r14 instanceof org.codehaus.groovy.runtime.MethodClosure;

        if $z2 != 0 goto label06;

        $z3 = 1;

        goto label07;

     label06:
        $z3 = 0;

     label07:
        if $z3 == 0 goto label10;

        $r8 = newarray (java.lang.Object)[1];

        $r9 = newarray (java.lang.Object)[1];

        $r9[0] = r4;

        $r10 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.util.List createList(java.lang.Object[])>($r9);

        $r8[0] = $r10;

        $r11 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r14, "curry", $r8);

        $r12 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$Closure>;

        if $r12 != null goto label08;

        $r17 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.lang.Closure");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$Closure> = $r17;

        goto label09;

     label08:
        $r17 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$Closure>;

     label09:
        $r13 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r11, $r17);

        r14 = (groovy.lang.Closure) $r13;

        goto label10;

     label10:
        $r6 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$SwingUtilities>;

        if $r6 != null goto label11;

        $r18 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.SwingUtilities");

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$SwingUtilities> = $r18;

        goto label12;

     label11:
        $r18 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$SwingUtilities>;

     label12:
        $r7 = newarray (java.lang.Object)[1];

        $r7[0] = r14;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r18, "invokeLater", $r7);

     label13:
        $r19 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>(r4, r1);

        $r20 = (groovy.swing.SwingBuilder) $r19;

        return $r20;
    }

    public groovy.swing.SwingBuilder doOutside(groovy.lang.Closure)
    {
        java.lang.Object[] $r3, $r6, $r10, $r11;
        groovy.lang.Closure r16;
        groovy.swing.SwingBuilder r4, $r9;
        boolean $z0, $z1;
        java.util.List $r12;
        java.lang.Class $r0, r1, $r2, $r5, $r14, $r17, $r18, $r19, $r20;
        java.lang.Object $r7, $r8, $r13, $r15;

        r4 := @this: groovy.swing.SwingBuilder;

        r16 := @parameter0: groovy.lang.Closure;

        $r0 = <groovy.swing.SwingBuilder: java.lang.Class class$0>;

        if $r0 != null goto label01;

        $r17 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.SwingBuilder");

        <groovy.swing.SwingBuilder: java.lang.Class class$0> = $r17;

        goto label02;

     label01:
        $r17 = <groovy.swing.SwingBuilder: java.lang.Class class$0>;

     label02:
        r1 = $r17;

        $r2 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label03;

        $r18 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass> = $r18;

        goto label04;

     label03:
        $r18 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = r4;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r16, "setDelegate", $r3);

        $z0 = r16 instanceof org.codehaus.groovy.runtime.MethodClosure;

        if $z0 != 0 goto label05;

        $z1 = 1;

        goto label06;

     label05:
        $z1 = 0;

     label06:
        if $z1 == 0 goto label09;

        $r10 = newarray (java.lang.Object)[1];

        $r11 = newarray (java.lang.Object)[1];

        $r11[0] = r4;

        $r12 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.util.List createList(java.lang.Object[])>($r11);

        $r10[0] = $r12;

        $r13 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r16, "curry", $r10);

        $r14 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$Closure>;

        if $r14 != null goto label07;

        $r19 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.lang.Closure");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$Closure> = $r19;

        goto label08;

     label07:
        $r19 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$Closure>;

     label08:
        $r15 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r13, $r19);

        r16 = (groovy.lang.Closure) $r15;

        goto label09;

     label09:
        $r5 = <groovy.swing.SwingBuilder: java.lang.Class class$java$lang$Thread>;

        if $r5 != null goto label10;

        $r20 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("java.lang.Thread");

        <groovy.swing.SwingBuilder: java.lang.Class class$java$lang$Thread> = $r20;

        goto label11;

     label10:
        $r20 = <groovy.swing.SwingBuilder: java.lang.Class class$java$lang$Thread>;

     label11:
        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = r16;

        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r20, $r6);

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r7, "start");

        $r8 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>(r4, r1);

        $r9 = (groovy.swing.SwingBuilder) $r8;

        return $r9;
    }

    public static groovy.swing.SwingBuilder edtBuilder(groovy.lang.Closure)
    {
        java.lang.Object[] $r3;
        groovy.lang.Closure r4;
        groovy.swing.SwingBuilder $r7;
        java.lang.Class $r0, r1, $r2, $r8, $r9;
        java.lang.Object $r5, $r6;

        r4 := @parameter0: groovy.lang.Closure;

        $r0 = <groovy.swing.SwingBuilder: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r8 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.SwingBuilder");

        <groovy.swing.SwingBuilder: java.lang.Class class$0> = $r8;

        goto label2;

     label1:
        $r8 = <groovy.swing.SwingBuilder: java.lang.Class class$0>;

     label2:
        r1 = $r8;

        $r2 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r9 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass> = $r9;

        goto label4;

     label3:
        $r9 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = r4;

        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeStaticMethodN(java.lang.Class,java.lang.Class,java.lang.String,java.lang.Object[])>(r1, r1, "build", $r3);

        $r6 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r5, r1);

        $r7 = (groovy.swing.SwingBuilder) $r6;

        return $r7;
    }

    public static groovy.swing.SwingBuilder build(groovy.lang.Closure)
    {
        java.lang.Object[] $r4;
        groovy.lang.Closure r5;
        groovy.swing.SwingBuilder $r8;
        java.lang.Class $r0, r1, $r2, $r9, $r10;
        java.lang.Object $r3, $r6, $r7;

        r5 := @parameter0: groovy.lang.Closure;

        $r0 = <groovy.swing.SwingBuilder: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r9 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.SwingBuilder");

        <groovy.swing.SwingBuilder: java.lang.Class class$0> = $r9;

        goto label2;

     label1:
        $r9 = <groovy.swing.SwingBuilder: java.lang.Class class$0>;

     label2:
        r1 = $r9;

        $r2 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r10 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass> = $r10;

        goto label4;

     label3:
        $r10 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNew0(java.lang.Class,java.lang.Class)>(r1, r1);

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = r5;

        $r6 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r3, "edt", $r4);

        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r6, r1);

        $r8 = (groovy.swing.SwingBuilder) $r7;

        return $r8;
    }

    public javax.swing.KeyStroke shortcut(java.lang.Object, java.lang.Object)
    {
        java.lang.Object[] $r15, $r20;
        groovy.swing.SwingBuilder r11;
        javax.swing.KeyStroke $r9;
        java.lang.Class $r0, r1, $r2, $r3, $r5, $r10, $r12, $r13, $r14, $r16, $r17, $r22, $r23;
        java.lang.Object r4, r6, $r7, $r8, $r18, $r19, $r21;

        r11 := @this: groovy.swing.SwingBuilder;

        r4 := @parameter0: java.lang.Object;

        r6 := @parameter1: java.lang.Object;

        $r0 = <groovy.swing.SwingBuilder: java.lang.Class class$0>;

        if $r0 != null goto label01;

        $r12 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.SwingBuilder");

        <groovy.swing.SwingBuilder: java.lang.Class class$0> = $r12;

        goto label02;

     label01:
        $r12 = <groovy.swing.SwingBuilder: java.lang.Class class$0>;

     label02:
        r1 = $r12;

        $r2 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label03;

        $r13 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass> = $r13;

        goto label04;

     label03:
        $r13 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $r3 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$KeyStroke>;

        if $r3 != null goto label05;

        $r10 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.KeyStroke");

        $r14 = $r10;

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$KeyStroke> = $r10;

        goto label06;

     label05:
        $r14 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$KeyStroke>;

     label06:
        $r15 = newarray (java.lang.Object)[2];

        $r15[0] = r4;

        $r5 = <groovy.swing.SwingBuilder: java.lang.Class class$java$awt$Toolkit>;

        if $r5 != null goto label07;

        $r16 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("java.awt.Toolkit");

        $r17 = $r16;

        <groovy.swing.SwingBuilder: java.lang.Class class$java$awt$Toolkit> = $r16;

        goto label08;

     label07:
        $r17 = <groovy.swing.SwingBuilder: java.lang.Class class$java$awt$Toolkit>;

     label08:
        $r18 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r17, "getDefaultToolkit");

        $r19 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r18, "getMenuShortcutKeyMask");

        $r20 = newarray (java.lang.Object)[1];

        $r20[0] = r6;

        $r21 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r19, "or", $r20);

        $r15[1] = $r21;

        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r14, "getKeyStroke", $r15);

        $r22 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$KeyStroke>;

        if $r22 != null goto label09;

        $r23 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.KeyStroke");

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$KeyStroke> = $r23;

        goto label10;

     label09:
        $r23 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$KeyStroke>;

     label10:
        $r8 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r7, $r23);

        $r9 = (javax.swing.KeyStroke) $r8;

        return $r9;
    }

    public javax.swing.KeyStroke shortcut(java.lang.String, java.lang.Object)
    {
        groovy.swing.SwingBuilder r23;
        boolean $z0;
        javax.swing.KeyStroke $r17, $r21, $r22;
        java.lang.Object[] $r4, $r12, $r30, $r32;
        java.lang.String r5;
        java.lang.Class $r0, r1, $r2, $r3, $r7, $r9, $r14, $r18, $r19, $r24, $r25, $r26, $r27, $r28, $r29, $r33, $r34, $r38, $r39;
        java.lang.Object $r6, $r8, $r10, $r11, r13, $r15, $r16, $r20, $r31, $r35, $r36, $r37;

        r23 := @this: groovy.swing.SwingBuilder;

        r5 := @parameter0: java.lang.String;

        r13 := @parameter1: java.lang.Object;

        $r0 = <groovy.swing.SwingBuilder: java.lang.Class class$0>;

        if $r0 != null goto label01;

        $r24 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.SwingBuilder");

        <groovy.swing.SwingBuilder: java.lang.Class class$0> = $r24;

        goto label02;

     label01:
        $r24 = <groovy.swing.SwingBuilder: java.lang.Class class$0>;

     label02:
        r1 = $r24;

        $r2 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label03;

        $r25 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass> = $r25;

        goto label04;

     label03:
        $r25 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $r3 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$KeyStroke>;

        if $r3 != null goto label05;

        $r26 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.KeyStroke");

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$KeyStroke> = $r26;

        goto label06;

     label05:
        $r26 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$KeyStroke>;

     label06:
        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = r5;

        $r6 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r26, "getKeyStroke", $r4);

        $r7 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$KeyStroke>;

        if $r7 != null goto label07;

        $r27 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.KeyStroke");

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$KeyStroke> = $r27;

        goto label08;

     label07:
        $r27 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$KeyStroke>;

     label08:
        $r8 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r6, $r27);

        $r22 = (javax.swing.KeyStroke) $r8;

        $z0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareEqual(java.lang.Object,java.lang.Object)>($r22, null);

        if $z0 == 0 goto label11;

        $r19 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$KeyStroke>;

        if $r19 != null goto label09;

        $r28 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.KeyStroke");

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$KeyStroke> = $r28;

        goto label10;

     label09:
        $r28 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$KeyStroke>;

     label10:
        $r20 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>(null, $r28);

        $r21 = (javax.swing.KeyStroke) $r20;

        return $r21;

     label11:
        $r9 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$KeyStroke>;

        if $r9 != null goto label12;

        $r18 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.KeyStroke");

        $r29 = $r18;

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$KeyStroke> = $r18;

        goto label13;

     label12:
        $r29 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$KeyStroke>;

     label13:
        $r30 = newarray (java.lang.Object)[2];

        $r10 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r22, "getKeyCode");

        $r30[0] = $r10;

        $r11 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r22, "getModifiers");

        $r12 = newarray (java.lang.Object)[1];

        $r12[0] = r13;

        $r31 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r11, "or", $r12);

        $r32 = newarray (java.lang.Object)[1];

        $r14 = <groovy.swing.SwingBuilder: java.lang.Class class$java$awt$Toolkit>;

        if $r14 != null goto label14;

        $r33 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("java.awt.Toolkit");

        $r34 = $r33;

        <groovy.swing.SwingBuilder: java.lang.Class class$java$awt$Toolkit> = $r33;

        goto label15;

     label14:
        $r34 = <groovy.swing.SwingBuilder: java.lang.Class class$java$awt$Toolkit>;

     label15:
        $r35 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r34, "getDefaultToolkit");

        $r36 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r35, "getMenuShortcutKeyMask");

        $r32[0] = $r36;

        $r37 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r31, "or", $r32);

        $r30[1] = $r37;

        $r15 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r29, "getKeyStroke", $r30);

        $r38 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$KeyStroke>;

        if $r38 != null goto label16;

        $r39 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.KeyStroke");

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$KeyStroke> = $r39;

        goto label17;

     label16:
        $r39 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$KeyStroke>;

     label17:
        $r16 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r15, $r39);

        $r17 = (javax.swing.KeyStroke) $r16;

        return $r17;
    }

    public javax.swing.LookAndFeel lookAndFeel(java.lang.Object, groovy.lang.Closure)
    {
        java.lang.Object[] $r4, $r5;
        groovy.lang.Closure r8;
        groovy.swing.SwingBuilder r3;
        java.util.Map $r6;
        javax.swing.LookAndFeel $r12;
        java.lang.Class $r0, r1, $r2, $r10, $r13, $r14, $r15;
        java.lang.Object r7, $r9, $r11;

        r3 := @this: groovy.swing.SwingBuilder;

        r7 := @parameter0: java.lang.Object;

        r8 := @parameter1: groovy.lang.Closure;

        $r0 = <groovy.swing.SwingBuilder: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r13 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.SwingBuilder");

        <groovy.swing.SwingBuilder: java.lang.Class class$0> = $r13;

        goto label2;

     label1:
        $r13 = <groovy.swing.SwingBuilder: java.lang.Class class$0>;

     label2:
        r1 = $r13;

        $r2 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r14 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass> = $r14;

        goto label4;

     label3:
        $r14 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r4 = newarray (java.lang.Object)[3];

        $r5 = newarray (java.lang.Object)[0];

        $r6 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.util.Map createMap(java.lang.Object[])>($r5);

        $r4[0] = $r6;

        $r4[1] = r7;

        $r4[2] = r8;

        $r9 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "lookAndFeel", $r4);

        $r10 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$LookAndFeel>;

        if $r10 != null goto label5;

        $r15 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.LookAndFeel");

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$LookAndFeel> = $r15;

        goto label6;

     label5:
        $r15 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$LookAndFeel>;

     label6:
        $r11 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r9, $r15);

        $r12 = (javax.swing.LookAndFeel) $r11;

        return $r12;
    }

    public javax.swing.LookAndFeel lookAndFeel(java.util.Map, java.lang.Object, groovy.lang.Closure)
    {
        java.lang.Object[] $r7, $r15;
        groovy.lang.Closure r10;
        groovy.swing.SwingBuilder r3;
        java.util.Map r9;
        boolean $z0;
        javax.swing.LookAndFeel $r14;
        java.util.logging.Logger $r16;
        java.lang.Class $r0, r1, $r2, $r5, $r12, $r17, $r18, $r19, $r20;
        java.lang.Object $r4, $r6, r8, $r11, $r13;

        r3 := @this: groovy.swing.SwingBuilder;

        r9 := @parameter0: java.util.Map;

        r8 := @parameter1: java.lang.Object;

        r10 := @parameter2: groovy.lang.Closure;

        $r0 = <groovy.swing.SwingBuilder: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r17 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.SwingBuilder");

        <groovy.swing.SwingBuilder: java.lang.Class class$0> = $r17;

        goto label2;

     label1:
        $r17 = <groovy.swing.SwingBuilder: java.lang.Class class$0>;

     label2:
        r1 = $r17;

        $r2 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r18 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass> = $r18;

        goto label4;

     label3:
        $r18 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r3, "context");

        $z0 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r4);

        if $z0 == 0 goto label5;

        $r16 = <groovy.swing.SwingBuilder: java.util.logging.Logger LOG>;

        $r15 = newarray (java.lang.Object)[1];

        $r15[0] = "For best result do not call lookAndFeel when it is a child of a SwingBuidler node, initializaiton of the Look and Feel may be inconsistant.";

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r16, "warning", $r15);

        goto label5;

     label5:
        $r5 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$LookAndFeelHelper>;

        if $r5 != null goto label6;

        $r19 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.LookAndFeelHelper");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$LookAndFeelHelper> = $r19;

        goto label7;

     label6:
        $r19 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$swing$LookAndFeelHelper>;

     label7:
        $r6 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r19, "instance");

        $r7 = newarray (java.lang.Object)[3];

        $r7[0] = r8;

        $r7[1] = r9;

        $r7[2] = r10;

        $r11 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r6, "lookAndFeel", $r7);

        $r12 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$LookAndFeel>;

        if $r12 != null goto label8;

        $r20 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.LookAndFeel");

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$LookAndFeel> = $r20;

        goto label9;

     label8:
        $r20 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$LookAndFeel>;

     label9:
        $r13 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r11, $r20);

        $r14 = (javax.swing.LookAndFeel) $r13;

        return $r14;
    }

    public static java.lang.Object buttonGroupAttributeDelegate(java.lang.Object, java.lang.Object, java.lang.Object)
    {
        java.lang.Object[] $r4, $r6, $r10;
        java.lang.Boolean $r14;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Class $r0, r1, $r2, $r12, $r13;
        java.lang.Object r3, $r5, $r7, r8, $r9, r11;

        r11 := @parameter0: java.lang.Object;

        r8 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        $r0 = <groovy.swing.SwingBuilder: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r12 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.SwingBuilder");

        <groovy.swing.SwingBuilder: java.lang.Class class$0> = $r12;

        goto label2;

     label1:
        $r12 = <groovy.swing.SwingBuilder: java.lang.Class class$0>;

     label2:
        r1 = $r12;

        $r2 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r13 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass> = $r13;

        goto label4;

     label3:
        $r13 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = "buttonGroup";

        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r3, "containsKey", $r4);

        $z0 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r5);

        if $z0 == 0 goto label8;

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = "buttonGroup";

        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r3, "get", $r6);

        $z1 = $r7 instanceof javax.swing.ButtonGroup;

        if $z1 == 0 goto label5;

        $z2 = r8 instanceof javax.swing.AbstractButton;

        if $z2 == 0 goto label5;

        $r14 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label6;

     label5:
        $r14 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label6:
        $z3 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r14);

        if $z3 == 0 goto label7;

        $r9 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, r8, "model");

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void setProperty(java.lang.Object,java.lang.Class,java.lang.Object,java.lang.String)>($r7, r1, $r9, "group");

        $r10 = newarray (java.lang.Object)[1];

        $r10[0] = "buttonGroup";

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r3, "remove", $r10);

        goto label7;

     label7:
        goto label8;

     label8:
        return null;
    }

    public static java.lang.Object objectIDAttributeDelegate(java.lang.Object, java.lang.Object, java.lang.Object)
    {
        java.lang.Object[] $r4, $r7;
        java.lang.Class $r0, r1, $r2, $r9, $r10;
        java.lang.Object r3, $r5, r6, r8;
        boolean $z0;

        r6 := @parameter0: java.lang.Object;

        r8 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        $r0 = <groovy.swing.SwingBuilder: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r9 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.SwingBuilder");

        <groovy.swing.SwingBuilder: java.lang.Class class$0> = $r9;

        goto label2;

     label1:
        $r9 = <groovy.swing.SwingBuilder: java.lang.Class class$0>;

     label2:
        r1 = $r9;

        $r2 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r10 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass> = $r10;

        goto label4;

     label3:
        $r10 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = "id";

        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r3, "remove", $r4);

        $z0 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r5);

        if $z0 == 0 goto label5;

        $r7 = newarray (java.lang.Object)[2];

        $r7[0] = $r5;

        $r7[1] = r8;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r6, "setVariable", $r7);

        goto label5;

     label5:
        return null;
    }

    public static java.lang.Object constraintsAttributeDelegate(java.lang.Object, java.lang.Object, java.lang.Object)
    {
        java.lang.Object[] $r4;
        java.lang.Class $r0, r1, $r2, $r9, $r10;
        java.lang.Object r3, $r5, r6, $r7, r8;

        r6 := @parameter0: java.lang.Object;

        r8 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        $r0 = <groovy.swing.SwingBuilder: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r9 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.SwingBuilder");

        <groovy.swing.SwingBuilder: java.lang.Class class$0> = $r9;

        goto label2;

     label1:
        $r9 = <groovy.swing.SwingBuilder: java.lang.Class class$0>;

     label2:
        r1 = $r9;

        $r2 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r10 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass> = $r10;

        goto label4;

     label3:
        $r10 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = "constraints";

        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r3, "remove", $r4);

        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, r6, "context");

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void setProperty(java.lang.Object,java.lang.Class,java.lang.Object,java.lang.String)>($r5, r1, $r7, "constraints");

        return $r5;
    }

    public javax.swing.KeyStroke shortcut(java.lang.Object)
    {
        javax.swing.KeyStroke $r10;
        java.lang.Object[] $r4;
        groovy.swing.SwingBuilder r3;
        java.lang.Integer $r6;
        java.lang.Class $r0, r1, $r2, $r8, $r11, $r12, $r13;
        java.lang.Object r5, $r7, $r9;

        r3 := @this: groovy.swing.SwingBuilder;

        r5 := @parameter0: java.lang.Object;

        $r0 = <groovy.swing.SwingBuilder: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r11 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.SwingBuilder");

        <groovy.swing.SwingBuilder: java.lang.Class class$0> = $r11;

        goto label2;

     label1:
        $r11 = <groovy.swing.SwingBuilder: java.lang.Class class$0>;

     label2:
        r1 = $r11;

        $r2 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r12 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass> = $r12;

        goto label4;

     label3:
        $r12 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r4 = newarray (java.lang.Object)[2];

        $r4[0] = r5;

        $r6 = new java.lang.Integer;

        specialinvoke $r6.<java.lang.Integer: void <init>(int)>(0);

        $r4[1] = $r6;

        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "shortcut", $r4);

        $r8 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$KeyStroke>;

        if $r8 != null goto label5;

        $r13 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.KeyStroke");

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$KeyStroke> = $r13;

        goto label6;

     label5:
        $r13 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$KeyStroke>;

     label6:
        $r9 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r7, $r13);

        $r10 = (javax.swing.KeyStroke) $r9;

        return $r10;
    }

    public javax.swing.KeyStroke shortcut(java.lang.String)
    {
        javax.swing.KeyStroke $r10;
        java.lang.Object[] $r4;
        groovy.swing.SwingBuilder r3;
        java.lang.Integer $r6;
        java.lang.Class $r0, r1, $r2, $r8, $r11, $r12, $r13;
        java.lang.Object $r7, $r9;
        java.lang.String r5;

        r3 := @this: groovy.swing.SwingBuilder;

        r5 := @parameter0: java.lang.String;

        $r0 = <groovy.swing.SwingBuilder: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r11 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.SwingBuilder");

        <groovy.swing.SwingBuilder: java.lang.Class class$0> = $r11;

        goto label2;

     label1:
        $r11 = <groovy.swing.SwingBuilder: java.lang.Class class$0>;

     label2:
        r1 = $r11;

        $r2 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r12 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass> = $r12;

        goto label4;

     label3:
        $r12 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r4 = newarray (java.lang.Object)[2];

        $r4[0] = r5;

        $r6 = new java.lang.Integer;

        specialinvoke $r6.<java.lang.Integer: void <init>(int)>(0);

        $r4[1] = $r6;

        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "shortcut", $r4);

        $r8 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$KeyStroke>;

        if $r8 != null goto label5;

        $r13 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.KeyStroke");

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$KeyStroke> = $r13;

        goto label6;

     label5:
        $r13 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$KeyStroke>;

     label6:
        $r9 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r7, $r13);

        $r10 = (javax.swing.KeyStroke) $r9;

        return $r10;
    }

    public javax.swing.LookAndFeel lookAndFeel(java.lang.Object)
    {
        java.lang.Object[] $r4;
        javax.swing.LookAndFeel $r9;
        groovy.swing.SwingBuilder r3;
        java.lang.Class $r0, r1, $r2, $r7, $r10, $r11, $r12;
        java.lang.Object r5, $r6, $r8;

        r3 := @this: groovy.swing.SwingBuilder;

        r5 := @parameter0: java.lang.Object;

        $r0 = <groovy.swing.SwingBuilder: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r10 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.SwingBuilder");

        <groovy.swing.SwingBuilder: java.lang.Class class$0> = $r10;

        goto label2;

     label1:
        $r10 = <groovy.swing.SwingBuilder: java.lang.Class class$0>;

     label2:
        r1 = $r10;

        $r2 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r11 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass> = $r11;

        goto label4;

     label3:
        $r11 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r4 = newarray (java.lang.Object)[2];

        $r4[0] = r5;

        $r4[1] = null;

        $r6 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "lookAndFeel", $r4);

        $r7 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$LookAndFeel>;

        if $r7 != null goto label5;

        $r12 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.LookAndFeel");

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$LookAndFeel> = $r12;

        goto label6;

     label5:
        $r12 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$LookAndFeel>;

     label6:
        $r8 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r6, $r12);

        $r9 = (javax.swing.LookAndFeel) $r8;

        return $r9;
    }

    public javax.swing.LookAndFeel lookAndFeel(java.util.Map, java.lang.Object)
    {
        java.lang.Object[] $r4;
        javax.swing.LookAndFeel $r10;
        groovy.swing.SwingBuilder r3;
        java.util.Map r5;
        java.lang.Class $r0, r1, $r2, $r8, $r11, $r12, $r13;
        java.lang.Object r6, $r7, $r9;

        r3 := @this: groovy.swing.SwingBuilder;

        r5 := @parameter0: java.util.Map;

        r6 := @parameter1: java.lang.Object;

        $r0 = <groovy.swing.SwingBuilder: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r11 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.SwingBuilder");

        <groovy.swing.SwingBuilder: java.lang.Class class$0> = $r11;

        goto label2;

     label1:
        $r11 = <groovy.swing.SwingBuilder: java.lang.Class class$0>;

     label2:
        r1 = $r11;

        $r2 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r12 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass> = $r12;

        goto label4;

     label3:
        $r12 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r4 = newarray (java.lang.Object)[3];

        $r4[0] = r5;

        $r4[1] = r6;

        $r4[2] = null;

        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "lookAndFeel", $r4);

        $r8 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$LookAndFeel>;

        if $r8 != null goto label5;

        $r13 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.LookAndFeel");

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$LookAndFeel> = $r13;

        goto label6;

     label5:
        $r13 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$LookAndFeel>;

     label6:
        $r9 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r7, $r13);

        $r10 = (javax.swing.LookAndFeel) $r9;

        return $r10;
    }

    public javax.swing.LookAndFeel lookAndFeel(java.util.Map)
    {
        java.lang.Object[] $r4;
        javax.swing.LookAndFeel $r9;
        groovy.swing.SwingBuilder r3;
        java.util.Map r5;
        java.lang.Class $r0, r1, $r2, $r7, $r10, $r11, $r12;
        java.lang.Object $r6, $r8;

        r3 := @this: groovy.swing.SwingBuilder;

        r5 := @parameter0: java.util.Map;

        $r0 = <groovy.swing.SwingBuilder: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r10 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.SwingBuilder");

        <groovy.swing.SwingBuilder: java.lang.Class class$0> = $r10;

        goto label2;

     label1:
        $r10 = <groovy.swing.SwingBuilder: java.lang.Class class$0>;

     label2:
        r1 = $r10;

        $r2 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r11 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass> = $r11;

        goto label4;

     label3:
        $r11 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r4 = newarray (java.lang.Object)[3];

        $r4[0] = r5;

        $r4[1] = null;

        $r4[2] = null;

        $r6 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "lookAndFeel", $r4);

        $r7 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$LookAndFeel>;

        if $r7 != null goto label5;

        $r12 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.LookAndFeel");

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$LookAndFeel> = $r12;

        goto label6;

     label5:
        $r12 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$LookAndFeel>;

     label6:
        $r8 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r6, $r12);

        $r9 = (javax.swing.LookAndFeel) $r8;

        return $r9;
    }

    public javax.swing.LookAndFeel lookAndFeel()
    {
        java.lang.Object[] $r4, $r5;
        javax.swing.LookAndFeel $r10;
        groovy.swing.SwingBuilder r3;
        java.util.Map $r6;
        java.lang.Class $r0, r1, $r2, $r8, $r11, $r12, $r13;
        java.lang.Object $r7, $r9;

        r3 := @this: groovy.swing.SwingBuilder;

        $r0 = <groovy.swing.SwingBuilder: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r11 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.SwingBuilder");

        <groovy.swing.SwingBuilder: java.lang.Class class$0> = $r11;

        goto label2;

     label1:
        $r11 = <groovy.swing.SwingBuilder: java.lang.Class class$0>;

     label2:
        r1 = $r11;

        $r2 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r12 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass> = $r12;

        goto label4;

     label3:
        $r12 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r4 = newarray (java.lang.Object)[3];

        $r5 = newarray (java.lang.Object)[0];

        $r6 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.util.Map createMap(java.lang.Object[])>($r5);

        $r4[0] = $r6;

        $r4[1] = null;

        $r4[2] = null;

        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "lookAndFeel", $r4);

        $r8 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$LookAndFeel>;

        if $r8 != null goto label5;

        $r13 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("javax.swing.LookAndFeel");

        <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$LookAndFeel> = $r13;

        goto label6;

     label5:
        $r13 = <groovy.swing.SwingBuilder: java.lang.Class class$javax$swing$LookAndFeel>;

     label6:
        $r9 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r7, $r13);

        $r10 = (javax.swing.LookAndFeel) $r9;

        return $r10;
    }

    static void <clinit>()
    {
        java.lang.Object[] $r4;
        java.lang.Long $r11, $r12, $r13, $r14;
        java.util.logging.Logger $r9, $r10;
        java.lang.Class $r0, r1, $r2, $r3, $r7, $r15, $r16, $r17, $r18;
        java.lang.Object $r5, $r6, $r8;

        $r0 = <groovy.swing.SwingBuilder: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r15 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.SwingBuilder");

        <groovy.swing.SwingBuilder: java.lang.Class class$0> = $r15;

        goto label2;

     label1:
        $r15 = <groovy.swing.SwingBuilder: java.lang.Class class$0>;

     label2:
        r1 = $r15;

        $r2 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r16 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass> = $r16;

        goto label4;

     label3:
        $r16 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = <groovy.swing.SwingBuilder: java.lang.Class class$java$util$logging$Logger>;

        if $r3 != null goto label5;

        $r17 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("java.util.logging.Logger");

        <groovy.swing.SwingBuilder: java.lang.Class class$java$util$logging$Logger> = $r17;

        goto label6;

     label5:
        $r17 = <groovy.swing.SwingBuilder: java.lang.Class class$java$util$logging$Logger>;

     label6:
        $r4 = newarray (java.lang.Object)[1];

        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, r1, "name");

        $r4[0] = $r5;

        $r6 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r17, "getLogger", $r4);

        $r7 = <groovy.swing.SwingBuilder: java.lang.Class class$java$util$logging$Logger>;

        if $r7 != null goto label7;

        $r18 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("java.util.logging.Logger");

        <groovy.swing.SwingBuilder: java.lang.Class class$java$util$logging$Logger> = $r18;

        goto label8;

     label7:
        $r18 = <groovy.swing.SwingBuilder: java.lang.Class class$java$util$logging$Logger>;

     label8:
        $r8 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r6, $r18);

        $r9 = (java.util.logging.Logger) $r8;

        $r10 = (java.util.logging.Logger) $r9;

        <groovy.swing.SwingBuilder: java.util.logging.Logger LOG> = $r10;

        $r11 = new java.lang.Long;

        specialinvoke $r11.<java.lang.Long: void <init>(long)>(1239119697340L);

        $r12 = (java.lang.Long) $r11;

        <groovy.swing.SwingBuilder: java.lang.Long __timeStamp> = $r12;

        $r13 = new java.lang.Long;

        specialinvoke $r13.<java.lang.Long: void <init>(long)>(0L);

        $r14 = (java.lang.Long) $r13;

        <groovy.swing.SwingBuilder: java.lang.Long __timeStamp__239_neverHappen1239119697340> = $r14;

        return;
    }

    public java.util.LinkedList getContainingWindows()
    {
        groovy.swing.SwingBuilder r2;
        java.lang.Class $r0, $r1, $r3, $r7, $r8, $r9;
        java.lang.Object $r5;
        java.util.LinkedList $r4, $r6;

        r2 := @this: groovy.swing.SwingBuilder;

        $r0 = <groovy.swing.SwingBuilder: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r7 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.SwingBuilder");

        <groovy.swing.SwingBuilder: java.lang.Class class$0> = $r7;

        goto label2;

     label1:
        $r7 = <groovy.swing.SwingBuilder: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r8 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass> = $r8;

        goto label4;

     label3:
        $r8 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r4 = r2.<groovy.swing.SwingBuilder: java.util.LinkedList containingWindows>;

        $r3 = <groovy.swing.SwingBuilder: java.lang.Class class$java$util$LinkedList>;

        if $r3 != null goto label5;

        $r9 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("java.util.LinkedList");

        <groovy.swing.SwingBuilder: java.lang.Class class$java$util$LinkedList> = $r9;

        goto label6;

     label5:
        $r9 = <groovy.swing.SwingBuilder: java.lang.Class class$java$util$LinkedList>;

     label6:
        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r4, $r9);

        $r6 = (java.util.LinkedList) $r5;

        return $r6;
    }

    public void setContainingWindows(java.util.LinkedList)
    {
        groovy.swing.SwingBuilder r5;
        java.lang.Class $r0, $r1, $r3, $r7, $r8, $r9;
        java.lang.Object $r4;
        java.util.LinkedList r2, $r6;

        r5 := @this: groovy.swing.SwingBuilder;

        r2 := @parameter0: java.util.LinkedList;

        $r0 = <groovy.swing.SwingBuilder: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r7 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.swing.SwingBuilder");

        <groovy.swing.SwingBuilder: java.lang.Class class$0> = $r7;

        goto label2;

     label1:
        $r7 = <groovy.swing.SwingBuilder: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r8 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass> = $r8;

        goto label4;

     label3:
        $r8 = <groovy.swing.SwingBuilder: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = <groovy.swing.SwingBuilder: java.lang.Class class$java$util$LinkedList>;

        if $r3 != null goto label5;

        $r9 = staticinvoke <groovy.swing.SwingBuilder: java.lang.Class class$(java.lang.String)>("java.util.LinkedList");

        <groovy.swing.SwingBuilder: java.lang.Class class$java$util$LinkedList> = $r9;

        goto label6;

     label5:
        $r9 = <groovy.swing.SwingBuilder: java.lang.Class class$java$util$LinkedList>;

     label6:
        $r4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>(r2, $r9);

        $r6 = (java.util.LinkedList) $r4;

        r5.<groovy.swing.SwingBuilder: java.util.LinkedList containingWindows> = $r6;

        return;
    }

    java.lang.String super$1$toString()
    {
        java.lang.String $r1;
        groovy.swing.SwingBuilder r0;

        r0 := @this: groovy.swing.SwingBuilder;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.String toString()>();

        return $r1;
    }

    java.util.Map super$4$getParentContext()
    {
        groovy.swing.SwingBuilder r0;
        java.util.Map $r1;

        r0 := @this: groovy.swing.SwingBuilder;

        $r1 = specialinvoke r0.<groovy.util.FactoryBuilderSupport: java.util.Map getParentContext()>();

        return $r1;
    }

    java.util.Map super$4$popContext()
    {
        groovy.swing.SwingBuilder r0;
        java.util.Map $r1;

        r0 := @this: groovy.swing.SwingBuilder;

        $r1 = specialinvoke r0.<groovy.util.FactoryBuilderSupport: java.util.Map popContext()>();

        return $r1;
    }

    java.lang.Object super$4$getName(java.lang.String)
    {
        java.lang.Object $r2;
        java.lang.String r1;
        groovy.swing.SwingBuilder r0;

        r0 := @this: groovy.swing.SwingBuilder;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<groovy.util.FactoryBuilderSupport: java.lang.Object getName(java.lang.String)>(r1);

        return $r2;
    }

    void super$3$setProperty(java.lang.String, java.lang.Object)
    {
        java.lang.Object r2;
        java.lang.String r1;
        groovy.swing.SwingBuilder r0;

        r0 := @this: groovy.swing.SwingBuilder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<groovy.lang.Binding: void setProperty(java.lang.String,java.lang.Object)>(r1, r2);

        return;
    }

    java.lang.Object super$4$getCurrent()
    {
        java.lang.Object $r1;
        groovy.swing.SwingBuilder r0;

        r0 := @this: groovy.swing.SwingBuilder;

        $r1 = specialinvoke r0.<groovy.util.FactoryBuilderSupport: java.lang.Object getCurrent()>();

        return $r1;
    }

    java.lang.String super$4$getParentName()
    {
        java.lang.String $r1;
        groovy.swing.SwingBuilder r0;

        r0 := @this: groovy.swing.SwingBuilder;

        $r1 = specialinvoke r0.<groovy.util.FactoryBuilderSupport: java.lang.String getParentName()>();

        return $r1;
    }

    groovy.lang.Closure super$4$addPostInstantiateDelegate(groovy.lang.Closure)
    {
        groovy.lang.Closure r1, $r2;
        groovy.swing.SwingBuilder r0;

        r0 := @this: groovy.swing.SwingBuilder;

        r1 := @parameter0: groovy.lang.Closure;

        $r2 = specialinvoke r0.<groovy.util.FactoryBuilderSupport: groovy.lang.Closure addPostInstantiateDelegate(groovy.lang.Closure)>(r1);

        return $r2;
    }

    void super$4$preInstantiate(java.lang.Object, java.util.Map, java.lang.Object)
    {
        java.util.Map r2;
        java.lang.Object r1, r3;
        groovy.swing.SwingBuilder r0;

        r0 := @this: groovy.swing.SwingBuilder;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.util.Map;

        r3 := @parameter2: java.lang.Object;

        specialinvoke r0.<groovy.util.FactoryBuilderSupport: void preInstantiate(java.lang.Object,java.util.Map,java.lang.Object)>(r1, r2, r3);

        return;
    }

    groovy.lang.Closure super$4$addPostNodeCompletionDelegate(groovy.lang.Closure)
    {
        groovy.lang.Closure r1, $r2;
        groovy.swing.SwingBuilder r0;

        r0 := @this: groovy.swing.SwingBuilder;

        r1 := @parameter0: groovy.lang.Closure;

        $r2 = specialinvoke r0.<groovy.util.FactoryBuilderSupport: groovy.lang.Closure addPostNodeCompletionDelegate(groovy.lang.Closure)>(r1);

        return $r2;
    }

    java.util.Map super$4$getContext()
    {
        groovy.swing.SwingBuilder r0;
        java.util.Map $r1;

        r0 := @this: groovy.swing.SwingBuilder;

        $r1 = specialinvoke r0.<groovy.util.FactoryBuilderSupport: java.util.Map getContext()>();

        return $r1;
    }

    java.lang.Object super$4$build(java.lang.Class)
    {
        java.lang.Class r1;
        java.lang.Object $r2;
        groovy.swing.SwingBuilder r0;

        r0 := @this: groovy.swing.SwingBuilder;

        r1 := @parameter0: java.lang.Class;

        $r2 = specialinvoke r0.<groovy.util.FactoryBuilderSupport: java.lang.Object build(java.lang.Class)>(r1);

        return $r2;
    }

    groovy.util.Factory super$4$getParentFactory()
    {
        groovy.util.Factory $r1;
        groovy.swing.SwingBuilder r0;

        r0 := @this: groovy.swing.SwingBuilder;

        $r1 = specialinvoke r0.<groovy.util.FactoryBuilderSupport: groovy.util.Factory getParentFactory()>();

        return $r1;
    }

    void super$1$wait()
    {
        groovy.swing.SwingBuilder r0;

        r0 := @this: groovy.swing.SwingBuilder;

        specialinvoke r0.<java.lang.Object: void wait()>();

        return;
    }

    java.lang.Object super$4$withBuilder(groovy.util.FactoryBuilderSupport, groovy.lang.Closure)
    {
        groovy.util.FactoryBuilderSupport r1;
        groovy.lang.Closure r2;
        java.lang.Object $r3;
        groovy.swing.SwingBuilder r0;

        r0 := @this: groovy.swing.SwingBuilder;

        r1 := @parameter0: groovy.util.FactoryBuilderSupport;

        r2 := @parameter1: groovy.lang.Closure;

        $r3 = specialinvoke r0.<groovy.util.FactoryBuilderSupport: java.lang.Object withBuilder(groovy.util.FactoryBuilderSupport,groovy.lang.Closure)>(r1, r2);

        return $r3;
    }

    java.lang.Object super$4$getParentNode()
    {
        java.lang.Object $r1;
        groovy.swing.SwingBuilder r0;

        r0 := @this: groovy.swing.SwingBuilder;

        $r1 = specialinvoke r0.<groovy.util.FactoryBuilderSupport: java.lang.Object getParentNode()>();

        return $r1;
    }

    groovy.lang.Closure super$4$addPreInstantiateDelegate(groovy.lang.Closure)
    {
        groovy.lang.Closure r1, $r2;
        groovy.swing.SwingBuilder r0;

        r0 := @this: groovy.swing.SwingBuilder;

        r1 := @parameter0: groovy.lang.Closure;

        $r2 = specialinvoke r0.<groovy.util.FactoryBuilderSupport: groovy.lang.Closure addPreInstantiateDelegate(groovy.lang.Closure)>(r1);

        return $r2;
    }

    groovy.lang.MetaClass super$2$getMetaClass()
    {
        groovy.lang.MetaClass $r1;
        groovy.swing.SwingBuilder r0;

        r0 := @this: groovy.swing.SwingBuilder;

        $r1 = specialinvoke r0.<groovy.lang.GroovyObjectSupport: groovy.lang.MetaClass getMetaClass()>();

        return $r1;
    }

    void super$4$setClosureDelegate(groovy.lang.Closure, java.lang.Object)
    {
        groovy.lang.Closure r1;
        java.lang.Object r2;
        groovy.swing.SwingBuilder r0;

        r0 := @this: groovy.swing.SwingBuilder;

        r1 := @parameter0: groovy.lang.Closure;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<groovy.util.FactoryBuilderSupport: void setClosureDelegate(groovy.lang.Closure,java.lang.Object)>(r1, r2);

        return;
    }

    java.lang.Object super$4$build(groovy.lang.Script)
    {
        java.lang.Object $r2;
        groovy.swing.SwingBuilder r0;
        groovy.lang.Script r1;

        r0 := @this: groovy.swing.SwingBuilder;

        r1 := @parameter0: groovy.lang.Script;

        $r2 = specialinvoke r0.<groovy.util.FactoryBuilderSupport: java.lang.Object build(groovy.lang.Script)>(r1);

        return $r2;
    }

    void super$4$postInstantiate(java.lang.Object, java.util.Map, java.lang.Object)
    {
        java.util.Map r2;
        java.lang.Object r1, r3;
        groovy.swing.SwingBuilder r0;

        r0 := @this: groovy.swing.SwingBuilder;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.util.Map;

        r3 := @parameter2: java.lang.Object;

        specialinvoke r0.<groovy.util.FactoryBuilderSupport: void postInstantiate(java.lang.Object,java.util.Map,java.lang.Object)>(r1, r2, r3);

        return;
    }

    void super$3$setVariable(java.lang.String, java.lang.Object)
    {
        java.lang.Object r2;
        java.lang.String r1;
        groovy.swing.SwingBuilder r0;

        r0 := @this: groovy.swing.SwingBuilder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<groovy.lang.Binding: void setVariable(java.lang.String,java.lang.Object)>(r1, r2);

        return;
    }

    void super$2$setMetaClass(groovy.lang.MetaClass)
    {
        groovy.lang.MetaClass r1;
        groovy.swing.SwingBuilder r0;

        r0 := @this: groovy.swing.SwingBuilder;

        r1 := @parameter0: groovy.lang.MetaClass;

        specialinvoke r0.<groovy.lang.GroovyObjectSupport: void setMetaClass(groovy.lang.MetaClass)>(r1);

        return;
    }

    java.util.Map super$3$getVariables()
    {
        groovy.swing.SwingBuilder r0;
        java.util.Map $r1;

        r0 := @this: groovy.swing.SwingBuilder;

        $r1 = specialinvoke r0.<groovy.lang.Binding: java.util.Map getVariables()>();

        return $r1;
    }

    void super$4$removePostInstantiateDelegate(groovy.lang.Closure)
    {
        groovy.lang.Closure r1;
        groovy.swing.SwingBuilder r0;

        r0 := @this: groovy.swing.SwingBuilder;

        r1 := @parameter0: groovy.lang.Closure;

        specialinvoke r0.<groovy.util.FactoryBuilderSupport: void removePostInstantiateDelegate(groovy.lang.Closure)>(r1);

        return;
    }

    java.lang.Class super$1$getClass()
    {
        java.lang.Class $r1;
        groovy.swing.SwingBuilder r0;

        r0 := @this: groovy.swing.SwingBuilder;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        return $r1;
    }

    java.lang.Object super$4$createNode(java.lang.Object, java.util.Map, java.lang.Object)
    {
        java.util.Map r2;
        java.lang.Object r1, r3, $r4;
        groovy.swing.SwingBuilder r0;

        r0 := @this: groovy.swing.SwingBuilder;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.util.Map;

        r3 := @parameter2: java.lang.Object;

        $r4 = specialinvoke r0.<groovy.util.FactoryBuilderSupport: java.lang.Object createNode(java.lang.Object,java.util.Map,java.lang.Object)>(r1, r2, r3);

        return $r4;
    }

    java.util.Map super$4$getFactories()
    {
        groovy.swing.SwingBuilder r0;
        java.util.Map $r1;

        r0 := @this: groovy.swing.SwingBuilder;

        $r1 = specialinvoke r0.<groovy.util.FactoryBuilderSupport: java.util.Map getFactories()>();

        return $r1;
    }

    void super$4$newContext()
    {
        groovy.swing.SwingBuilder r0;

        r0 := @this: groovy.swing.SwingBuilder;

        specialinvoke r0.<groovy.util.FactoryBuilderSupport: void newContext()>();

        return;
    }

    void super$4$setNodeAttributes(java.lang.Object, java.util.Map)
    {
        java.lang.Object r1;
        groovy.swing.SwingBuilder r0;
        java.util.Map r2;

        r0 := @this: groovy.swing.SwingBuilder;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.util.Map;

        specialinvoke r0.<groovy.util.FactoryBuilderSupport: void setNodeAttributes(java.lang.Object,java.util.Map)>(r1, r2);

        return;
    }

    groovy.util.FactoryBuilderSupport super$4$getProxyBuilder()
    {
        groovy.util.FactoryBuilderSupport $r1;
        groovy.swing.SwingBuilder r0;

        r0 := @this: groovy.swing.SwingBuilder;

        $r1 = specialinvoke r0.<groovy.util.FactoryBuilderSupport: groovy.util.FactoryBuilderSupport getProxyBuilder()>();

        return $r1;
    }

    java.lang.Object super$4$build(java.lang.String, groovy.lang.GroovyClassLoader)
    {
        java.lang.Object $r3;
        java.lang.String r1;
        groovy.swing.SwingBuilder r0;
        groovy.lang.GroovyClassLoader r2;

        r0 := @this: groovy.swing.SwingBuilder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: groovy.lang.GroovyClassLoader;

        $r3 = specialinvoke r0.<groovy.util.FactoryBuilderSupport: java.lang.Object build(java.lang.String,groovy.lang.GroovyClassLoader)>(r1, r2);

        return $r3;
    }

    groovy.lang.Closure super$4$addAttributeDelegate(groovy.lang.Closure)
    {
        groovy.lang.Closure r1, $r2;
        groovy.swing.SwingBuilder r0;

        r0 := @this: groovy.swing.SwingBuilder;

        r1 := @parameter0: groovy.lang.Closure;

        $r2 = specialinvoke r0.<groovy.util.FactoryBuilderSupport: groovy.lang.Closure addAttributeDelegate(groovy.lang.Closure)>(r1);

        return $r2;
    }

    java.lang.Object super$4$invokeMethod(java.lang.String, java.lang.Object)
    {
        java.lang.Object r2, $r3;
        java.lang.String r1;
        groovy.swing.SwingBuilder r0;

        r0 := @this: groovy.swing.SwingBuilder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = specialinvoke r0.<groovy.util.FactoryBuilderSupport: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>(r1, r2);

        return $r3;
    }

    int super$1$hashCode()
    {
        int $i0;
        groovy.swing.SwingBuilder r0;

        r0 := @this: groovy.swing.SwingBuilder;

        $i0 = specialinvoke r0.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    java.lang.Object super$4$withBuilder(groovy.util.FactoryBuilderSupport, java.lang.String, groovy.lang.Closure)
    {
        groovy.util.FactoryBuilderSupport r1;
        groovy.lang.Closure r3;
        java.lang.Object $r4;
        java.lang.String r2;
        groovy.swing.SwingBuilder r0;

        r0 := @this: groovy.swing.SwingBuilder;

        r1 := @parameter0: groovy.util.FactoryBuilderSupport;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: groovy.lang.Closure;

        $r4 = specialinvoke r0.<groovy.util.FactoryBuilderSupport: java.lang.Object withBuilder(groovy.util.FactoryBuilderSupport,java.lang.String,groovy.lang.Closure)>(r1, r2, r3);

        return $r4;
    }

    java.lang.Object super$3$getProperty(java.lang.String)
    {
        java.lang.Object $r2;
        java.lang.String r1;
        groovy.swing.SwingBuilder r0;

        r0 := @this: groovy.swing.SwingBuilder;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<groovy.lang.Binding: java.lang.Object getProperty(java.lang.String)>(r1);

        return $r2;
    }

    java.lang.Object super$4$invokeMethod(java.lang.String)
    {
        java.lang.Object $r2;
        java.lang.String r1;
        groovy.swing.SwingBuilder r0;

        r0 := @this: groovy.swing.SwingBuilder;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<groovy.util.FactoryBuilderSupport: java.lang.Object invokeMethod(java.lang.String)>(r1);

        return $r2;
    }

    void super$1$notify()
    {
        groovy.swing.SwingBuilder r0;

        r0 := @this: groovy.swing.SwingBuilder;

        specialinvoke r0.<java.lang.Object: void notify()>();

        return;
    }

    void super$4$nodeCompleted(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r1, r2;
        groovy.swing.SwingBuilder r0;

        r0 := @this: groovy.swing.SwingBuilder;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<groovy.util.FactoryBuilderSupport: void nodeCompleted(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    void super$1$notifyAll()
    {
        groovy.swing.SwingBuilder r0;

        r0 := @this: groovy.swing.SwingBuilder;

        specialinvoke r0.<java.lang.Object: void notifyAll()>();

        return;
    }

    void super$4$removeAttributeDelegate(groovy.lang.Closure)
    {
        groovy.lang.Closure r1;
        groovy.swing.SwingBuilder r0;

        r0 := @this: groovy.swing.SwingBuilder;

        r1 := @parameter0: groovy.lang.Closure;

        specialinvoke r0.<groovy.util.FactoryBuilderSupport: void removeAttributeDelegate(groovy.lang.Closure)>(r1);

        return;
    }

    java.lang.Object super$4$withBuilder(java.util.Map, groovy.util.FactoryBuilderSupport, java.lang.String, groovy.lang.Closure)
    {
        groovy.util.FactoryBuilderSupport r2;
        java.util.Map r1;
        groovy.lang.Closure r4;
        java.lang.Object $r5;
        java.lang.String r3;
        groovy.swing.SwingBuilder r0;

        r0 := @this: groovy.swing.SwingBuilder;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: groovy.util.FactoryBuilderSupport;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: groovy.lang.Closure;

        $r5 = specialinvoke r0.<groovy.util.FactoryBuilderSupport: java.lang.Object withBuilder(java.util.Map,groovy.util.FactoryBuilderSupport,java.lang.String,groovy.lang.Closure)>(r1, r2, r3, r4);

        return $r5;
    }

    java.lang.Object super$4$postNodeCompletion(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r1, r2, $r3;
        groovy.swing.SwingBuilder r0;

        r0 := @this: groovy.swing.SwingBuilder;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = specialinvoke r0.<groovy.util.FactoryBuilderSupport: java.lang.Object postNodeCompletion(java.lang.Object,java.lang.Object)>(r1, r2);

        return $r3;
    }

    void super$4$registerBeanFactory(java.lang.String, java.lang.Class)
    {
        java.lang.Class r2;
        java.lang.String r1;
        groovy.swing.SwingBuilder r0;

        r0 := @this: groovy.swing.SwingBuilder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Class;

        specialinvoke r0.<groovy.util.FactoryBuilderSupport: void registerBeanFactory(java.lang.String,java.lang.Class)>(r1, r2);

        return;
    }

    void super$4$registerFactory(java.lang.String, groovy.util.Factory)
    {
        groovy.util.Factory r2;
        java.lang.String r1;
        groovy.swing.SwingBuilder r0;

        r0 := @this: groovy.swing.SwingBuilder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: groovy.util.Factory;

        specialinvoke r0.<groovy.util.FactoryBuilderSupport: void registerFactory(java.lang.String,groovy.util.Factory)>(r1, r2);

        return;
    }

    java.lang.Object super$1$clone()
    {
        java.lang.Object $r1;
        groovy.swing.SwingBuilder r0;

        r0 := @this: groovy.swing.SwingBuilder;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        return $r1;
    }

    void super$1$wait(long, int)
    {
        int i1;
        long l0;
        groovy.swing.SwingBuilder r0;

        r0 := @this: groovy.swing.SwingBuilder;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void wait(long,int)>(l0, i1);

        return;
    }

    java.lang.Object super$3$getVariable(java.lang.String)
    {
        java.lang.Object $r2;
        java.lang.String r1;
        groovy.swing.SwingBuilder r0;

        r0 := @this: groovy.swing.SwingBuilder;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<groovy.lang.Binding: java.lang.Object getVariable(java.lang.String)>(r1);

        return $r2;
    }

    void super$4$dispose()
    {
        groovy.swing.SwingBuilder r0;

        r0 := @this: groovy.swing.SwingBuilder;

        specialinvoke r0.<groovy.util.FactoryBuilderSupport: void dispose()>();

        return;
    }

    void super$4$removePreInstantiateDelegate(groovy.lang.Closure)
    {
        groovy.lang.Closure r1;
        groovy.swing.SwingBuilder r0;

        r0 := @this: groovy.swing.SwingBuilder;

        r1 := @parameter0: groovy.lang.Closure;

        specialinvoke r0.<groovy.util.FactoryBuilderSupport: void removePreInstantiateDelegate(groovy.lang.Closure)>(r1);

        return;
    }

    void super$1$finalize()
    {
        groovy.swing.SwingBuilder r0;

        r0 := @this: groovy.swing.SwingBuilder;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;
    }

    groovy.util.Factory super$4$resolveFactory(java.lang.Object, java.util.Map, java.lang.Object)
    {
        java.util.Map r2;
        groovy.util.Factory $r4;
        java.lang.Object r1, r3;
        groovy.swing.SwingBuilder r0;

        r0 := @this: groovy.swing.SwingBuilder;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.util.Map;

        r3 := @parameter2: java.lang.Object;

        $r4 = specialinvoke r0.<groovy.util.FactoryBuilderSupport: groovy.util.Factory resolveFactory(java.lang.Object,java.util.Map,java.lang.Object)>(r1, r2, r3);

        return $r4;
    }

    groovy.util.Factory super$4$getCurrentFactory()
    {
        groovy.util.Factory $r1;
        groovy.swing.SwingBuilder r0;

        r0 := @this: groovy.swing.SwingBuilder;

        $r1 = specialinvoke r0.<groovy.util.FactoryBuilderSupport: groovy.util.Factory getCurrentFactory()>();

        return $r1;
    }

    java.util.LinkedList super$4$getContexts()
    {
        groovy.swing.SwingBuilder r0;
        java.util.LinkedList $r1;

        r0 := @this: groovy.swing.SwingBuilder;

        $r1 = specialinvoke r0.<groovy.util.FactoryBuilderSupport: java.util.LinkedList getContexts()>();

        return $r1;
    }

    void super$4$addDisposalClosure(groovy.lang.Closure)
    {
        groovy.lang.Closure r1;
        groovy.swing.SwingBuilder r0;

        r0 := @this: groovy.swing.SwingBuilder;

        r1 := @parameter0: groovy.lang.Closure;

        specialinvoke r0.<groovy.util.FactoryBuilderSupport: void addDisposalClosure(groovy.lang.Closure)>(r1);

        return;
    }

    void super$4$removePostNodeCompletionDelegate(groovy.lang.Closure)
    {
        groovy.lang.Closure r1;
        groovy.swing.SwingBuilder r0;

        r0 := @this: groovy.swing.SwingBuilder;

        r1 := @parameter0: groovy.lang.Closure;

        specialinvoke r0.<groovy.util.FactoryBuilderSupport: void removePostNodeCompletionDelegate(groovy.lang.Closure)>(r1);

        return;
    }

    void super$1$wait(long)
    {
        long l0;
        groovy.swing.SwingBuilder r0;

        r0 := @this: groovy.swing.SwingBuilder;

        l0 := @parameter0: long;

        specialinvoke r0.<java.lang.Object: void wait(long)>(l0);

        return;
    }

    void super$4$handleNodeAttributes(java.lang.Object, java.util.Map)
    {
        java.lang.Object r1;
        groovy.swing.SwingBuilder r0;
        java.util.Map r2;

        r0 := @this: groovy.swing.SwingBuilder;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.util.Map;

        specialinvoke r0.<groovy.util.FactoryBuilderSupport: void handleNodeAttributes(java.lang.Object,java.util.Map)>(r1, r2);

        return;
    }

    void super$4$setProxyBuilder(groovy.util.FactoryBuilderSupport)
    {
        groovy.util.FactoryBuilderSupport r1;
        groovy.swing.SwingBuilder r0;

        r0 := @this: groovy.swing.SwingBuilder;

        r1 := @parameter0: groovy.util.FactoryBuilderSupport;

        specialinvoke r0.<groovy.util.FactoryBuilderSupport: void setProxyBuilder(groovy.util.FactoryBuilderSupport)>(r1);

        return;
    }

    java.lang.String super$4$getCurrentName()
    {
        java.lang.String $r1;
        groovy.swing.SwingBuilder r0;

        r0 := @this: groovy.swing.SwingBuilder;

        $r1 = specialinvoke r0.<groovy.util.FactoryBuilderSupport: java.lang.String getCurrentName()>();

        return $r1;
    }

    void super$4$setParent(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r1, r2;
        groovy.swing.SwingBuilder r0;

        r0 := @this: groovy.swing.SwingBuilder;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<groovy.util.FactoryBuilderSupport: void setParent(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    void super$4$reset()
    {
        groovy.swing.SwingBuilder r0;

        r0 := @this: groovy.swing.SwingBuilder;

        specialinvoke r0.<groovy.util.FactoryBuilderSupport: void reset()>();

        return;
    }

    boolean super$1$equals(java.lang.Object)
    {
        java.lang.Object r1;
        groovy.swing.SwingBuilder r0;
        boolean $z0;

        r0 := @this: groovy.swing.SwingBuilder;

        r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }
}
