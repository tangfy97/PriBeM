public class groovy.swing.factory.ComponentFactory extends groovy.swing.factory.BeanFactory
{
    public static java.lang.Long __timeStamp;
    public static java.lang.Long __timeStamp__239_neverHappen1239119697163;
    static java.lang.Class class$groovy$lang$MetaClass;
    static java.lang.Class class$0;
    static java.lang.Class class$groovy$swing$factory$BeanFactory;

    public void <init>(java.lang.Class)
    {
        java.lang.Object[] $r14;
        int $i0, $i1, $i2;
        boolean $z0;
        groovy.swing.factory.ComponentFactory r4;
        java.lang.IllegalArgumentException $r10;
        java.lang.Class $r0, $r1, r2, $r3, $r6, $r9, $r12, $r13, $r15;
        java.lang.Object $r5, $r7, $r8, $r11;

        r4 := @this: groovy.swing.factory.ComponentFactory;

        r2 := @parameter0: java.lang.Class;

        $r0 = <groovy.swing.factory.ComponentFactory: java.lang.Class class$0>;

        if $r0 != null goto label01;

        $r12 = staticinvoke <groovy.swing.factory.ComponentFactory: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.ComponentFactory");

        <groovy.swing.factory.ComponentFactory: java.lang.Class class$0> = $r12;

        goto label02;

     label01:
        $r12 = <groovy.swing.factory.ComponentFactory: java.lang.Class class$0>;

     label02:
        $r1 = <groovy.swing.factory.ComponentFactory: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label03;

        $r13 = staticinvoke <groovy.swing.factory.ComponentFactory: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.factory.ComponentFactory: java.lang.Class class$groovy$lang$MetaClass> = $r13;

        goto label04;

     label03:
        $r13 = <groovy.swing.factory.ComponentFactory: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $r14 = newarray (java.lang.Object)[1];

        $r14[0] = r2;

        $r3 = <groovy.swing.factory.ComponentFactory: java.lang.Class class$groovy$swing$factory$BeanFactory>;

        if $r3 != null goto label05;

        $r15 = staticinvoke <groovy.swing.factory.ComponentFactory: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.BeanFactory");

        <groovy.swing.factory.ComponentFactory: java.lang.Class class$groovy$swing$factory$BeanFactory> = $r15;

        goto label06;

     label05:
        $r15 = <groovy.swing.factory.ComponentFactory: java.lang.Class class$groovy$swing$factory$BeanFactory>;

     label06:
        $i0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: int selectConstructorAndTransformArguments(java.lang.Object[],int,java.lang.Class)>($r14, 2, $r15);

        $i1 = $i0 & 1;

        if $i1 == 0 goto label07;

        $r11 = $r14[0];

        $r14 = (java.lang.Object[]) $r11;

     label07:
        $i2 = $i0 >> 8;

        lookupswitch($i2)
        {
            case 0: goto label08;
            case 1: goto label09;
            default: goto label10;
        };

     label08:
        $r8 = $r14[0];

        $r9 = (java.lang.Class) $r8;

        specialinvoke r4.<groovy.swing.factory.BeanFactory: void <init>(java.lang.Class)>($r9);

        goto label11;

     label09:
        $r5 = $r14[0];

        $r6 = (java.lang.Class) $r5;

        $r7 = $r14[1];

        $z0 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r7);

        specialinvoke r4.<groovy.swing.factory.BeanFactory: void <init>(java.lang.Class,boolean)>($r6, $z0);

        goto label11;

     label10:
        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("illegal constructor number");

        throw $r10;

     label11:
        return;
    }

    public void <init>(java.lang.Class, boolean)
    {
        java.lang.Object[] $r15;
        int $i0, $i1, $i2;
        boolean z0, $z1;
        groovy.swing.factory.ComponentFactory r5;
        java.lang.IllegalArgumentException $r11;
        java.lang.Class $r0, $r1, r2, $r4, $r7, $r10, $r13, $r14, $r16;
        java.lang.Object $r3, $r6, $r8, $r9, $r12;

        r5 := @this: groovy.swing.factory.ComponentFactory;

        r2 := @parameter0: java.lang.Class;

        z0 := @parameter1: boolean;

        $r0 = <groovy.swing.factory.ComponentFactory: java.lang.Class class$0>;

        if $r0 != null goto label01;

        $r13 = staticinvoke <groovy.swing.factory.ComponentFactory: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.ComponentFactory");

        <groovy.swing.factory.ComponentFactory: java.lang.Class class$0> = $r13;

        goto label02;

     label01:
        $r13 = <groovy.swing.factory.ComponentFactory: java.lang.Class class$0>;

     label02:
        $r1 = <groovy.swing.factory.ComponentFactory: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label03;

        $r14 = staticinvoke <groovy.swing.factory.ComponentFactory: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.factory.ComponentFactory: java.lang.Class class$groovy$lang$MetaClass> = $r14;

        goto label04;

     label03:
        $r14 = <groovy.swing.factory.ComponentFactory: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $r15 = newarray (java.lang.Object)[2];

        $r15[0] = r2;

        $r3 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Object box(boolean)>(z0);

        $r15[1] = $r3;

        $r4 = <groovy.swing.factory.ComponentFactory: java.lang.Class class$groovy$swing$factory$BeanFactory>;

        if $r4 != null goto label05;

        $r16 = staticinvoke <groovy.swing.factory.ComponentFactory: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.BeanFactory");

        <groovy.swing.factory.ComponentFactory: java.lang.Class class$groovy$swing$factory$BeanFactory> = $r16;

        goto label06;

     label05:
        $r16 = <groovy.swing.factory.ComponentFactory: java.lang.Class class$groovy$swing$factory$BeanFactory>;

     label06:
        $i0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: int selectConstructorAndTransformArguments(java.lang.Object[],int,java.lang.Class)>($r15, 2, $r16);

        $i1 = $i0 & 1;

        if $i1 == 0 goto label07;

        $r12 = $r15[0];

        $r15 = (java.lang.Object[]) $r12;

     label07:
        $i2 = $i0 >> 8;

        lookupswitch($i2)
        {
            case 0: goto label08;
            case 1: goto label09;
            default: goto label10;
        };

     label08:
        $r9 = $r15[0];

        $r10 = (java.lang.Class) $r9;

        specialinvoke r5.<groovy.swing.factory.BeanFactory: void <init>(java.lang.Class)>($r10);

        goto label11;

     label09:
        $r6 = $r15[0];

        $r7 = (java.lang.Class) $r6;

        $r8 = $r15[1];

        $z1 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r8);

        specialinvoke r5.<groovy.swing.factory.BeanFactory: void <init>(java.lang.Class,boolean)>($r7, $z1);

        goto label11;

     label10:
        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("illegal constructor number");

        throw $r11;

     label11:
        return;
    }

    public void setChild(groovy.util.FactoryBuilderSupport, java.lang.Object, java.lang.Object)
    {
        java.lang.Throwable $r10;
        java.lang.Object[] $r8, $r9, $r12;
        java.lang.Boolean $r16;
        groovy.lang.MissingPropertyException $r11;
        boolean $z0, $z1, $z2, $z3, $z4;
        groovy.util.FactoryBuilderSupport r4;
        groovy.swing.factory.ComponentFactory r13;
        java.lang.Class $r0, r1, $r2, $r14, $r15;
        java.lang.Object r3, $r5, $r6, r7;

        r13 := @this: groovy.swing.factory.ComponentFactory;

        r4 := @parameter0: groovy.util.FactoryBuilderSupport;

        r7 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        $r0 = <groovy.swing.factory.ComponentFactory: java.lang.Class class$0>;

        if $r0 != null goto label01;

        $r14 = staticinvoke <groovy.swing.factory.ComponentFactory: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.ComponentFactory");

        <groovy.swing.factory.ComponentFactory: java.lang.Class class$0> = $r14;

        goto label02;

     label01:
        $r14 = <groovy.swing.factory.ComponentFactory: java.lang.Class class$0>;

     label02:
        r1 = $r14;

        $r2 = <groovy.swing.factory.ComponentFactory: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label03;

        $r15 = staticinvoke <groovy.swing.factory.ComponentFactory: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.factory.ComponentFactory: java.lang.Class class$groovy$lang$MetaClass> = $r15;

        goto label04;

     label03:
        $r15 = <groovy.swing.factory.ComponentFactory: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $z0 = r3 instanceof java.awt.Component;

        if $z0 != 0 goto label05;

        $z4 = 1;

        goto label06;

     label05:
        $z4 = 0;

     label06:
        if $z4 == 0 goto label08;

     label07:
        $r16 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label09;

     label08:
        $z1 = r3 instanceof java.awt.Window;

        if $z1 != 0 goto label07;

        $r16 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label09:
        $z2 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r16);

        if $z2 == 0 goto label10;

        return;

     label10:
        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, r4, "context");

        $r6 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r5, "constraints");

        $z3 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareNotEqual(java.lang.Object,java.lang.Object)>($r6, null);

        if $z3 == 0 goto label11;

        $r9 = newarray (java.lang.Object)[2];

        $r9[0] = r3;

        $r9[1] = $r6;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r7, "add", $r9);

        goto label12;

     label11:
        $r8 = newarray (java.lang.Object)[1];

        $r8[0] = r3;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r7, "add", $r8);

     label12:
        goto label14;

     label13:
        $r11 := @caughtexception;

        $r12 = newarray (java.lang.Object)[1];

        $r12[0] = r3;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r7, "add", $r12);

        goto label14;

     label14:
        goto label16;

     label15:
        $r10 := @caughtexception;

        throw $r10;

     label16:
        return;

        catch groovy.lang.MissingPropertyException from label10 to label13 with label13;
        catch java.lang.Throwable from label10 to label14 with label15;
    }

    static void <clinit>()
    {
        java.lang.Long $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        java.lang.Class $r0, $r1, $r10, $r11;

        $r0 = <groovy.swing.factory.ComponentFactory: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r10 = staticinvoke <groovy.swing.factory.ComponentFactory: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.ComponentFactory");

        <groovy.swing.factory.ComponentFactory: java.lang.Class class$0> = $r10;

        goto label2;

     label1:
        $r10 = <groovy.swing.factory.ComponentFactory: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.swing.factory.ComponentFactory: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r11 = staticinvoke <groovy.swing.factory.ComponentFactory: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.factory.ComponentFactory: java.lang.Class class$groovy$lang$MetaClass> = $r11;

        goto label4;

     label3:
        $r11 = <groovy.swing.factory.ComponentFactory: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r2 = new java.lang.Long;

        specialinvoke $r2.<java.lang.Long: void <init>(long)>(1239119697163L);

        $r3 = (java.lang.Long) $r2;

        <groovy.swing.factory.ComponentFactory: java.lang.Long __timeStamp> = $r3;

        $r4 = new java.lang.Long;

        specialinvoke $r4.<java.lang.Long: void <init>(long)>(0L);

        $r5 = (java.lang.Long) $r4;

        <groovy.swing.factory.ComponentFactory: java.lang.Long __timeStamp__239_neverHappen1239119697163> = $r5;

        $r6 = new java.lang.Long;

        specialinvoke $r6.<java.lang.Long: void <init>(long)>(1239119697163L);

        $r7 = (java.lang.Long) $r6;

        <groovy.swing.factory.ComponentFactory: java.lang.Long __timeStamp> = $r7;

        $r8 = new java.lang.Long;

        specialinvoke $r8.<java.lang.Long: void <init>(long)>(0L);

        $r9 = (java.lang.Long) $r8;

        <groovy.swing.factory.ComponentFactory: java.lang.Long __timeStamp__239_neverHappen1239119697163> = $r9;

        return;
    }

    java.lang.Object super$3$getProperty(java.lang.String)
    {
        java.lang.Object $r2;
        java.lang.String r1;
        groovy.swing.factory.ComponentFactory r0;

        r0 := @this: groovy.swing.factory.ComponentFactory;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<groovy.swing.factory.BeanFactory: java.lang.Object getProperty(java.lang.String)>(r1);

        return $r2;
    }

    java.lang.String super$1$toString()
    {
        java.lang.String $r1;
        groovy.swing.factory.ComponentFactory r0;

        r0 := @this: groovy.swing.factory.ComponentFactory;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.String toString()>();

        return $r1;
    }

    boolean super$3$isLeaf()
    {
        groovy.swing.factory.ComponentFactory r0;
        boolean $z0;

        r0 := @this: groovy.swing.factory.ComponentFactory;

        $z0 = specialinvoke r0.<groovy.swing.factory.BeanFactory: boolean isLeaf()>();

        return $z0;
    }

    void super$2$setChild(groovy.util.FactoryBuilderSupport, java.lang.Object, java.lang.Object)
    {
        groovy.util.FactoryBuilderSupport r1;
        groovy.swing.factory.ComponentFactory r0;
        java.lang.Object r2, r3;

        r0 := @this: groovy.swing.factory.ComponentFactory;

        r1 := @parameter0: groovy.util.FactoryBuilderSupport;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        specialinvoke r0.<groovy.util.AbstractFactory: void setChild(groovy.util.FactoryBuilderSupport,java.lang.Object,java.lang.Object)>(r1, r2, r3);

        return;
    }

    void super$3$setProperty(java.lang.String, java.lang.Object)
    {
        java.lang.Object r2;
        java.lang.String r1;
        groovy.swing.factory.ComponentFactory r0;

        r0 := @this: groovy.swing.factory.ComponentFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<groovy.swing.factory.BeanFactory: void setProperty(java.lang.String,java.lang.Object)>(r1, r2);

        return;
    }

    void super$1$notify()
    {
        groovy.swing.factory.ComponentFactory r0;

        r0 := @this: groovy.swing.factory.ComponentFactory;

        specialinvoke r0.<java.lang.Object: void notify()>();

        return;
    }

    void super$1$notifyAll()
    {
        groovy.swing.factory.ComponentFactory r0;

        r0 := @this: groovy.swing.factory.ComponentFactory;

        specialinvoke r0.<java.lang.Object: void notifyAll()>();

        return;
    }

    java.lang.Object super$3$newInstance(groovy.util.FactoryBuilderSupport, java.lang.Object, java.lang.Object, java.util.Map)
    {
        groovy.util.FactoryBuilderSupport r1;
        groovy.swing.factory.ComponentFactory r0;
        java.util.Map r4;
        java.lang.Object r2, r3, $r5;

        r0 := @this: groovy.swing.factory.ComponentFactory;

        r1 := @parameter0: groovy.util.FactoryBuilderSupport;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.util.Map;

        $r5 = specialinvoke r0.<groovy.swing.factory.BeanFactory: java.lang.Object newInstance(groovy.util.FactoryBuilderSupport,java.lang.Object,java.lang.Object,java.util.Map)>(r1, r2, r3, r4);

        return $r5;
    }

    void super$2$setParent(groovy.util.FactoryBuilderSupport, java.lang.Object, java.lang.Object)
    {
        groovy.util.FactoryBuilderSupport r1;
        groovy.swing.factory.ComponentFactory r0;
        java.lang.Object r2, r3;

        r0 := @this: groovy.swing.factory.ComponentFactory;

        r1 := @parameter0: groovy.util.FactoryBuilderSupport;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        specialinvoke r0.<groovy.util.AbstractFactory: void setParent(groovy.util.FactoryBuilderSupport,java.lang.Object,java.lang.Object)>(r1, r2, r3);

        return;
    }

    java.lang.Object super$1$clone()
    {
        java.lang.Object $r1;
        groovy.swing.factory.ComponentFactory r0;

        r0 := @this: groovy.swing.factory.ComponentFactory;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        return $r1;
    }

    void super$1$wait()
    {
        groovy.swing.factory.ComponentFactory r0;

        r0 := @this: groovy.swing.factory.ComponentFactory;

        specialinvoke r0.<java.lang.Object: void wait()>();

        return;
    }

    groovy.lang.MetaClass super$3$getMetaClass()
    {
        groovy.lang.MetaClass $r1;
        groovy.swing.factory.ComponentFactory r0;

        r0 := @this: groovy.swing.factory.ComponentFactory;

        $r1 = specialinvoke r0.<groovy.swing.factory.BeanFactory: groovy.lang.MetaClass getMetaClass()>();

        return $r1;
    }

    void super$1$wait(long, int)
    {
        int i1;
        long l0;
        groovy.swing.factory.ComponentFactory r0;

        r0 := @this: groovy.swing.factory.ComponentFactory;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void wait(long,int)>(l0, i1);

        return;
    }

    void super$3$setMetaClass(groovy.lang.MetaClass)
    {
        groovy.lang.MetaClass r1;
        groovy.swing.factory.ComponentFactory r0;

        r0 := @this: groovy.swing.factory.ComponentFactory;

        r1 := @parameter0: groovy.lang.MetaClass;

        specialinvoke r0.<groovy.swing.factory.BeanFactory: void setMetaClass(groovy.lang.MetaClass)>(r1);

        return;
    }

    java.lang.Class super$1$getClass()
    {
        java.lang.Class $r1;
        groovy.swing.factory.ComponentFactory r0;

        r0 := @this: groovy.swing.factory.ComponentFactory;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        return $r1;
    }

    void super$2$onNodeCompleted(groovy.util.FactoryBuilderSupport, java.lang.Object, java.lang.Object)
    {
        groovy.util.FactoryBuilderSupport r1;
        groovy.swing.factory.ComponentFactory r0;
        java.lang.Object r2, r3;

        r0 := @this: groovy.swing.factory.ComponentFactory;

        r1 := @parameter0: groovy.util.FactoryBuilderSupport;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        specialinvoke r0.<groovy.util.AbstractFactory: void onNodeCompleted(groovy.util.FactoryBuilderSupport,java.lang.Object,java.lang.Object)>(r1, r2, r3);

        return;
    }

    void super$1$finalize()
    {
        groovy.swing.factory.ComponentFactory r0;

        r0 := @this: groovy.swing.factory.ComponentFactory;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;
    }

    void super$1$wait(long)
    {
        long l0;
        groovy.swing.factory.ComponentFactory r0;

        r0 := @this: groovy.swing.factory.ComponentFactory;

        l0 := @parameter0: long;

        specialinvoke r0.<java.lang.Object: void wait(long)>(l0);

        return;
    }

    boolean super$2$onHandleNodeAttributes(groovy.util.FactoryBuilderSupport, java.lang.Object, java.util.Map)
    {
        groovy.util.FactoryBuilderSupport r1;
        groovy.swing.factory.ComponentFactory r0;
        java.util.Map r3;
        java.lang.Object r2;
        boolean $z0;

        r0 := @this: groovy.swing.factory.ComponentFactory;

        r1 := @parameter0: groovy.util.FactoryBuilderSupport;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.util.Map;

        $z0 = specialinvoke r0.<groovy.util.AbstractFactory: boolean onHandleNodeAttributes(groovy.util.FactoryBuilderSupport,java.lang.Object,java.util.Map)>(r1, r2, r3);

        return $z0;
    }

    boolean super$1$equals(java.lang.Object)
    {
        java.lang.Object r1;
        groovy.swing.factory.ComponentFactory r0;
        boolean $z0;

        r0 := @this: groovy.swing.factory.ComponentFactory;

        r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    java.lang.Object super$3$invokeMethod(java.lang.String, java.lang.Object)
    {
        groovy.swing.factory.ComponentFactory r0;
        java.lang.Object r2, $r3;
        java.lang.String r1;

        r0 := @this: groovy.swing.factory.ComponentFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = specialinvoke r0.<groovy.swing.factory.BeanFactory: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>(r1, r2);

        return $r3;
    }

    int super$1$hashCode()
    {
        int $i0;
        groovy.swing.factory.ComponentFactory r0;

        r0 := @this: groovy.swing.factory.ComponentFactory;

        $i0 = specialinvoke r0.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    java.lang.Class super$3$getBeanClass()
    {
        java.lang.Class $r1;
        groovy.swing.factory.ComponentFactory r0;

        r0 := @this: groovy.swing.factory.ComponentFactory;

        $r1 = specialinvoke r0.<groovy.swing.factory.BeanFactory: java.lang.Class getBeanClass()>();

        return $r1;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }
}
