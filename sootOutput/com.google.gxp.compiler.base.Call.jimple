public abstract class com.google.gxp.compiler.base.Call extends com.google.gxp.compiler.base.Expression
{
    private final com.google.gxp.com.google.common.collect.ImmutableMap attributes;
    private final com.google.gxp.com.google.common.collect.ImmutableList attrBundles;

    public void <init>(com.google.gxp.compiler.alerts.SourcePosition, java.lang.String, com.google.gxp.compiler.schema.Schema, java.util.Map, java.util.List)
    {
        com.google.gxp.compiler.alerts.SourcePosition r1;
        com.google.gxp.compiler.schema.Schema r3;
        com.google.gxp.com.google.common.collect.ImmutableList $r7;
        com.google.gxp.compiler.base.Call r0;
        java.util.List r6;
        java.util.Map r4;
        com.google.gxp.com.google.common.collect.ImmutableMap $r5;
        java.lang.String r2;

        r0 := @this: com.google.gxp.compiler.base.Call;

        r1 := @parameter0: com.google.gxp.compiler.alerts.SourcePosition;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: com.google.gxp.compiler.schema.Schema;

        r4 := @parameter3: java.util.Map;

        r6 := @parameter4: java.util.List;

        specialinvoke r0.<com.google.gxp.compiler.base.Expression: void <init>(com.google.gxp.compiler.alerts.SourcePosition,java.lang.String,com.google.gxp.compiler.schema.Schema)>(r1, r2, r3);

        $r5 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableMap: com.google.gxp.com.google.common.collect.ImmutableMap copyOf(java.util.Map)>(r4);

        r0.<com.google.gxp.compiler.base.Call: com.google.gxp.com.google.common.collect.ImmutableMap attributes> = $r5;

        $r7 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableList: com.google.gxp.com.google.common.collect.ImmutableList copyOf(java.lang.Iterable)>(r6);

        r0.<com.google.gxp.compiler.base.Call: com.google.gxp.com.google.common.collect.ImmutableList attrBundles> = $r7;

        return;
    }

    public java.util.Map getAttributes()
    {
        com.google.gxp.compiler.base.Call r0;
        com.google.gxp.com.google.common.collect.ImmutableMap $r1;

        r0 := @this: com.google.gxp.compiler.base.Call;

        $r1 = r0.<com.google.gxp.compiler.base.Call: com.google.gxp.com.google.common.collect.ImmutableMap attributes>;

        return $r1;
    }

    public java.util.List getAttrBundles()
    {
        com.google.gxp.com.google.common.collect.ImmutableList $r1;
        com.google.gxp.compiler.base.Call r0;

        r0 := @this: com.google.gxp.compiler.base.Call;

        $r1 = r0.<com.google.gxp.compiler.base.Call: com.google.gxp.com.google.common.collect.ImmutableList attrBundles>;

        return $r1;
    }

    public abstract com.google.gxp.compiler.base.Call transformParams(com.google.gxp.compiler.base.ExhaustiveExpressionVisitor);

    public final java.lang.Object acceptVisitor(com.google.gxp.compiler.base.ExpressionVisitor)
    {
        java.lang.Object $r2;
        com.google.gxp.compiler.base.ExpressionVisitor r0;
        com.google.gxp.compiler.base.Call r1;

        r1 := @this: com.google.gxp.compiler.base.Call;

        r0 := @parameter0: com.google.gxp.compiler.base.ExpressionVisitor;

        $r2 = interfaceinvoke r0.<com.google.gxp.compiler.base.ExpressionVisitor: java.lang.Object visitCall(com.google.gxp.compiler.base.Call)>(r1);

        return $r2;
    }

    public abstract java.lang.Object acceptCallVisitor(com.google.gxp.compiler.base.CallVisitor);

    protected boolean equalsCall(com.google.gxp.compiler.base.Call)
    {
        com.google.gxp.compiler.base.Call r0, r1;
        java.util.List $r4, $r5;
        java.util.Map $r2, $r3;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: com.google.gxp.compiler.base.Call;

        r1 := @parameter0: com.google.gxp.compiler.base.Call;

        $z0 = virtualinvoke r0.<com.google.gxp.compiler.base.Call: boolean equalsExpression(com.google.gxp.compiler.base.Expression)>(r1);

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.base.Call: java.util.Map getAttributes()>();

        $r3 = virtualinvoke r1.<com.google.gxp.compiler.base.Call: java.util.Map getAttributes()>();

        $z1 = staticinvoke <com.google.gxp.com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r3);

        if $z1 == 0 goto label1;

        $r4 = virtualinvoke r0.<com.google.gxp.compiler.base.Call: java.util.List getAttrBundles()>();

        $r5 = virtualinvoke r1.<com.google.gxp.compiler.base.Call: java.util.List getAttrBundles()>();

        $z2 = staticinvoke <com.google.gxp.com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r4, $r5);

        if $z2 == 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        return $z3;
    }

    protected int callHashCode()
    {
        java.util.List $r4;
        java.lang.Object[] $r0;
        java.util.Map $r3;
        int $i0, $i1;
        java.lang.Integer $r2;
        com.google.gxp.compiler.base.Call r1;

        r1 := @this: com.google.gxp.compiler.base.Call;

        $r0 = newarray (java.lang.Object)[3];

        $i0 = virtualinvoke r1.<com.google.gxp.compiler.base.Call: int expressionHashCode()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r0[0] = $r2;

        $r3 = virtualinvoke r1.<com.google.gxp.compiler.base.Call: java.util.Map getAttributes()>();

        $r0[1] = $r3;

        $r4 = virtualinvoke r1.<com.google.gxp.compiler.base.Call: java.util.List getAttrBundles()>();

        $r0[2] = $r4;

        $i1 = staticinvoke <com.google.gxp.com.google.common.base.Objects: int hashCode(java.lang.Object[])>($r0);

        return $i1;
    }
}
