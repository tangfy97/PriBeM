public class org.apache.jena.fuseki.servlets.SPARQL_Upload extends org.apache.jena.fuseki.servlets.SPARQL_ServletBase
{
    private static org.apache.jena.riot.system.ErrorHandler errorHandler;

    public void <init>()
    {
        org.apache.jena.fuseki.servlets.SPARQL_Upload r0;

        r0 := @this: org.apache.jena.fuseki.servlets.SPARQL_Upload;

        specialinvoke r0.<org.apache.jena.fuseki.servlets.SPARQL_ServletBase: void <init>()>();

        return;
    }

    protected void doPost(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException, java.io.IOException
    {
        javax.servlet.http.HttpServletResponse r2;
        javax.servlet.http.HttpServletRequest r1;
        org.apache.jena.fuseki.servlets.SPARQL_Upload r0;

        r0 := @this: org.apache.jena.fuseki.servlets.SPARQL_Upload;

        r1 := @parameter0: javax.servlet.http.HttpServletRequest;

        r2 := @parameter1: javax.servlet.http.HttpServletResponse;

        virtualinvoke r0.<org.apache.jena.fuseki.servlets.SPARQL_Upload: void doCommon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r1, r2);

        return;
    }

    protected void doOptions(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
    {
        javax.servlet.http.HttpServletResponse r0;
        javax.servlet.http.HttpServletRequest r2;
        org.apache.jena.fuseki.servlets.SPARQL_Upload r1;

        r1 := @this: org.apache.jena.fuseki.servlets.SPARQL_Upload;

        r2 := @parameter0: javax.servlet.http.HttpServletRequest;

        r0 := @parameter1: javax.servlet.http.HttpServletResponse;

        interfaceinvoke r0.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>("Allow", "OPTIONS,POST");

        interfaceinvoke r0.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>("Content-Length", "0");

        return;
    }

    protected void perform(org.apache.jena.fuseki.servlets.HttpAction)
    {
        java.io.PrintWriter $r5;
        long $l0;
        org.apache.jena.fuseki.servlets.SPARQL_Upload r12;
        java.lang.Exception $r11;
        javax.servlet.http.HttpServletRequest $r1;
        org.apache.jena.fuseki.servlets.HttpServletResponseTracker $r2, $r3, $r4;
        org.apache.jena.fuseki.servlets.HttpAction r0;
        java.lang.StringBuilder $r6, $r7, $r8, $r9;
        java.lang.String $r10;
        boolean $z0;

        r12 := @this: org.apache.jena.fuseki.servlets.SPARQL_Upload;

        r0 := @parameter0: org.apache.jena.fuseki.servlets.HttpAction;

        $r1 = r0.<org.apache.jena.fuseki.servlets.HttpAction: javax.servlet.http.HttpServletRequest request>;

        $z0 = staticinvoke <org.apache.commons.fileupload.servlet.ServletFileUpload: boolean isMultipartContent(javax.servlet.http.HttpServletRequest)>($r1);

        if $z0 != 0 goto label1;

        staticinvoke <org.apache.jena.fuseki.servlets.SPARQL_Upload: void error(int,java.lang.String)>(400, "Not a file upload");

     label1:
        $l0 = staticinvoke <org.apache.jena.fuseki.servlets.SPARQL_Upload: long upload(org.apache.jena.fuseki.servlets.HttpAction,java.lang.String)>(r0, "http://example/upload-base/");

     label2:
        $r2 = r0.<org.apache.jena.fuseki.servlets.HttpAction: org.apache.jena.fuseki.servlets.HttpServletResponseTracker response>;

        virtualinvoke $r2.<org.apache.jena.fuseki.servlets.HttpServletResponseTracker: void setContentType(java.lang.String)>("text/html");

        $r3 = r0.<org.apache.jena.fuseki.servlets.HttpAction: org.apache.jena.fuseki.servlets.HttpServletResponseTracker response>;

        virtualinvoke $r3.<org.apache.jena.fuseki.servlets.HttpServletResponseTracker: void setStatus(int)>(200);

        $r4 = r0.<org.apache.jena.fuseki.servlets.HttpAction: org.apache.jena.fuseki.servlets.HttpServletResponseTracker response>;

        $r5 = virtualinvoke $r4.<org.apache.jena.fuseki.servlets.HttpServletResponseTracker: java.io.PrintWriter getWriter()>();

        virtualinvoke $r5.<java.io.PrintWriter: void println(java.lang.String)>("<html>");

        virtualinvoke $r5.<java.io.PrintWriter: void println(java.lang.String)>("<head>");

        virtualinvoke $r5.<java.io.PrintWriter: void println(java.lang.String)>("</head>");

        virtualinvoke $r5.<java.io.PrintWriter: void println(java.lang.String)>("<body>");

        virtualinvoke $r5.<java.io.PrintWriter: void println(java.lang.String)>("<h1>Success</h1>");

        virtualinvoke $r5.<java.io.PrintWriter: void println(java.lang.String)>("<p>");

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Triples = ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintWriter: void println(java.lang.String)>($r10);

        virtualinvoke $r5.<java.io.PrintWriter: void println(java.lang.String)>("<p>");

        virtualinvoke $r5.<java.io.PrintWriter: void println(java.lang.String)>("</p>");

        virtualinvoke $r5.<java.io.PrintWriter: void println(java.lang.String)>("<button onclick=\"timeFunction()\">Back to Fuseki</button>");

        virtualinvoke $r5.<java.io.PrintWriter: void println(java.lang.String)>("</p>");

        virtualinvoke $r5.<java.io.PrintWriter: void println(java.lang.String)>("<script type=\"text/javascript\">");

        virtualinvoke $r5.<java.io.PrintWriter: void println(java.lang.String)>("function timeFunction(){");

        virtualinvoke $r5.<java.io.PrintWriter: void println(java.lang.String)>("window.location.href = \"/fuseki.html\";}");

        virtualinvoke $r5.<java.io.PrintWriter: void println(java.lang.String)>("</script>");

        virtualinvoke $r5.<java.io.PrintWriter: void println(java.lang.String)>("</body>");

        virtualinvoke $r5.<java.io.PrintWriter: void println(java.lang.String)>("</html>");

        virtualinvoke $r5.<java.io.PrintWriter: void flush()>();

        staticinvoke <org.apache.jena.fuseki.servlets.SPARQL_Upload: void success(org.apache.jena.fuseki.servlets.HttpAction)>(r0);

     label3:
        goto label5;

     label4:
        $r11 := @caughtexception;

        staticinvoke <org.apache.jena.fuseki.servlets.SPARQL_Upload: void errorOccurred(java.lang.Throwable)>($r11);

     label5:
        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public static long upload(org.apache.jena.fuseki.servlets.HttpAction, java.lang.String)
    {
        org.apache.jena.fuseki.servlets.HttpAction r0;
        long $l0, $l1;
        java.lang.String r1;
        boolean $z0;

        r0 := @parameter0: org.apache.jena.fuseki.servlets.HttpAction;

        r1 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r0.<org.apache.jena.fuseki.servlets.HttpAction: boolean isTransactional()>();

        if $z0 == 0 goto label1;

        $l1 = staticinvoke <org.apache.jena.fuseki.servlets.SPARQL_Upload: long uploadTxn(org.apache.jena.fuseki.servlets.HttpAction,java.lang.String)>(r0, r1);

        return $l1;

     label1:
        $l0 = staticinvoke <org.apache.jena.fuseki.servlets.SPARQL_Upload: long uploadNonTxn(org.apache.jena.fuseki.servlets.HttpAction,java.lang.String)>(r0, r1);

        return $l0;
    }

    private static long uploadNonTxn(org.apache.jena.fuseki.servlets.HttpAction, java.lang.String)
    {
        java.lang.Throwable $r13;
        java.lang.Object[] $r7;
        long l1, $l2;
        com.hp.hpl.jena.graph.Node $r17;
        java.lang.Long $r9, $r10;
        int $i0;
        java.lang.String r1, r4, $r11, $r15;
        com.hp.hpl.jena.graph.Graph r6;
        boolean $z0;
        org.slf4j.Logger $r8;
        java.lang.RuntimeException $r16;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r12;
        java.lang.Exception $r14;
        org.apache.jena.fuseki.servlets.HttpAction r0;
        org.apache.jena.atlas.lib.Pair $r2;
        java.lang.Object $r3, $r5;

        r0 := @parameter0: org.apache.jena.fuseki.servlets.HttpAction;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <org.apache.jena.fuseki.servlets.SPARQL_Upload: org.apache.jena.atlas.lib.Pair uploadWorker(org.apache.jena.fuseki.servlets.HttpAction,java.lang.String)>(r0, r1);

        $r3 = virtualinvoke $r2.<org.apache.jena.atlas.lib.Pair: java.lang.Object getLeft()>();

        r4 = (java.lang.String) $r3;

        $r5 = virtualinvoke $r2.<org.apache.jena.atlas.lib.Pair: java.lang.Object getRight()>();

        r6 = (com.hp.hpl.jena.graph.Graph) $r5;

        $i0 = interfaceinvoke r6.<com.hp.hpl.jena.graph.Graph: int size()>();

        l1 = (long) $i0;

        $r8 = <org.apache.jena.fuseki.servlets.SPARQL_Upload: org.slf4j.Logger log>;

        $r7 = newarray (java.lang.Object)[3];

        $l2 = r0.<org.apache.jena.fuseki.servlets.HttpAction: long id>;

        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r7[0] = $r9;

        $r7[1] = r4;

        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        $r7[2] = $r10;

        $r11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("[%d] Upload: Graph: %s (%d triple(s))", $r7);

        interfaceinvoke $r8.<org.slf4j.Logger: void info(java.lang.String)>($r11);

        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("default");

        if $z0 == 0 goto label01;

        $r17 = <com.hp.hpl.jena.sparql.core.Quad: com.hp.hpl.jena.graph.Node defaultGraphNodeGenerated>;

        goto label02;

     label01:
        $r17 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createURI(java.lang.String)>(r4);

     label02:
        virtualinvoke r0.<org.apache.jena.fuseki.servlets.HttpAction: void beginWrite()>();

     label03:
        $r12 = virtualinvoke r0.<org.apache.jena.fuseki.servlets.HttpAction: com.hp.hpl.jena.sparql.core.DatasetGraph getActiveDSG()>();

        staticinvoke <org.apache.jena.fuseki.FusekiLib: void addDataInto(com.hp.hpl.jena.graph.Graph,com.hp.hpl.jena.sparql.core.DatasetGraph,com.hp.hpl.jena.graph.Node)>(r6, $r12, $r17);

        virtualinvoke r0.<org.apache.jena.fuseki.servlets.HttpAction: void commit()>();

     label04:
        virtualinvoke r0.<org.apache.jena.fuseki.servlets.HttpAction: void endWrite()>();

        return l1;

     label05:
        $r16 := @caughtexception;

     label06:
        virtualinvoke r0.<org.apache.jena.fuseki.servlets.HttpAction: void abort()>();

     label07:
        goto label09;

     label08:
        $r14 := @caughtexception;

     label09:
        $r15 = virtualinvoke $r16.<java.lang.RuntimeException: java.lang.String getMessage()>();

        staticinvoke <org.apache.jena.fuseki.servlets.SPARQL_Upload: void errorOccurred(java.lang.String)>($r15);

     label10:
        virtualinvoke r0.<org.apache.jena.fuseki.servlets.HttpAction: void endWrite()>();

        return -1L;

     label11:
        $r13 := @caughtexception;

     label12:
        virtualinvoke r0.<org.apache.jena.fuseki.servlets.HttpAction: void endWrite()>();

        throw $r13;

        catch java.lang.RuntimeException from label03 to label04 with label05;
        catch java.lang.Exception from label06 to label07 with label08;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label05 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    private static long uploadTxn(org.apache.jena.fuseki.servlets.HttpAction, java.lang.String)
    {
        long $l0;
        java.lang.String r1;
        org.apache.jena.fuseki.servlets.HttpAction r0;

        r0 := @parameter0: org.apache.jena.fuseki.servlets.HttpAction;

        r1 := @parameter1: java.lang.String;

        $l0 = staticinvoke <org.apache.jena.fuseki.servlets.SPARQL_Upload: long uploadNonTxn(org.apache.jena.fuseki.servlets.HttpAction,java.lang.String)>(r0, r1);

        return $l0;
    }

    private static org.apache.jena.atlas.lib.Pair uploadWorker(org.apache.jena.fuseki.servlets.HttpAction, java.lang.String)
    {
        org.apache.commons.fileupload.servlet.ServletFileUpload $r61;
        java.lang.Long $r11, $r22;
        org.apache.jena.iri.IRI $r24;
        java.lang.Exception $r51;
        org.apache.commons.fileupload.FileItemIterator $r4;
        java.lang.StringBuilder $r30, $r31, $r34, $r35, $r39, $r40, $r44, $r45, $r48, $r49, $r62, $r63, $r64, $r65, $r66;
        java.lang.Object[] $r9, $r20;
        org.apache.jena.fuseki.servlets.ActionErrorException $r52;
        long $l0, $l1;
        javax.servlet.http.HttpServletRequest $r3;
        java.lang.String $r6, $r8, $r12, $r13, $r14, $r15, r18, $r19, $r23, $r25, $r26, $r27, $r28, $r32, $r36, $r37, $r41, $r42, $r46, $r50, r53, $r54, $r55, $r57;
        org.apache.jena.riot.system.StreamRDF $r16;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        org.apache.jena.riot.lang.StreamRDFCounting $r17;
        org.apache.jena.fuseki.servlets.HttpAction r2;
        org.apache.jena.atlas.lib.Pair $r60;
        org.apache.commons.fileupload.FileItemStream $r5;
        int $i2, $i4;
        com.hp.hpl.jena.graph.Graph $r0;
        org.apache.jena.riot.Lang $r58, r59;
        org.slf4j.Logger $r10, $r21;
        char $c3;
        org.apache.jena.atlas.web.ContentType $r56;
        java.io.InputStream $r7;

        r2 := @parameter0: org.apache.jena.fuseki.servlets.HttpAction;

        r18 := @parameter1: java.lang.String;

        $r0 = staticinvoke <com.hp.hpl.jena.sparql.graph.GraphFactory: com.hp.hpl.jena.graph.Graph createDefaultGraph()>();

        $r61 = new org.apache.commons.fileupload.servlet.ServletFileUpload;

        specialinvoke $r61.<org.apache.commons.fileupload.servlet.ServletFileUpload: void <init>()>();

        r53 = null;

     label01:
        $r3 = r2.<org.apache.jena.fuseki.servlets.HttpAction: javax.servlet.http.HttpServletRequest request>;

        $r4 = virtualinvoke $r61.<org.apache.commons.fileupload.servlet.ServletFileUpload: org.apache.commons.fileupload.FileItemIterator getItemIterator(javax.servlet.http.HttpServletRequest)>($r3);

     label02:
        $z0 = interfaceinvoke $r4.<org.apache.commons.fileupload.FileItemIterator: boolean hasNext()>();

        if $z0 == 0 goto label19;

        $r5 = interfaceinvoke $r4.<org.apache.commons.fileupload.FileItemIterator: org.apache.commons.fileupload.FileItemStream next()>();

        $r6 = interfaceinvoke $r5.<org.apache.commons.fileupload.FileItemStream: java.lang.String getFieldName()>();

        $r7 = interfaceinvoke $r5.<org.apache.commons.fileupload.FileItemStream: java.io.InputStream openStream()>();

        $z2 = interfaceinvoke $r5.<org.apache.commons.fileupload.FileItemStream: boolean isFormField()>();

        if $z2 == 0 goto label13;

        $r19 = staticinvoke <org.apache.commons.fileupload.util.Streams: java.lang.String asString(java.io.InputStream,java.lang.String)>($r7, "UTF-8");

        $z5 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("graph");

        if $z5 == 0 goto label10;

        r53 = $r19;

        if $r19 == null goto label12;

        $z7 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z7 != 0 goto label12;

        $z8 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>("default");

        if $z8 != 0 goto label12;

        $r24 = staticinvoke <org.apache.jena.riot.system.IRIResolver: org.apache.jena.iri.IRI parseIRI(java.lang.String)>($r19);

        $z9 = virtualinvoke $r24.<org.apache.jena.iri.IRI: boolean hasViolation(boolean)>(0);

        if $z9 == 0 goto label03;

        $r62 = new java.lang.StringBuilder;

        specialinvoke $r62.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad IRI: ");

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.jena.fuseki.servlets.SPARQL_Upload: void errorBadRequest(java.lang.String)>($r50);

     label03:
        $r25 = virtualinvoke $r24.<org.apache.jena.iri.IRI: java.lang.String getScheme()>();

        if $r25 != null goto label04;

        $r63 = new java.lang.StringBuilder;

        specialinvoke $r63.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad IRI: no IRI scheme name: ");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.jena.fuseki.servlets.SPARQL_Upload: void errorBadRequest(java.lang.String)>($r46);

     label04:
        $r26 = virtualinvoke $r24.<org.apache.jena.iri.IRI: java.lang.String getScheme()>();

        $z10 = virtualinvoke $r26.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("http");

        if $z10 != 0 goto label05;

        $r42 = virtualinvoke $r24.<org.apache.jena.iri.IRI: java.lang.String getScheme()>();

        $z11 = virtualinvoke $r42.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("https");

        if $z11 == 0 goto label09;

     label05:
        $r27 = virtualinvoke $r24.<org.apache.jena.iri.IRI: java.lang.String getRawHost()>();

        if $r27 != null goto label06;

        $r64 = new java.lang.StringBuilder;

        specialinvoke $r64.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad IRI: no host name: ");

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.jena.fuseki.servlets.SPARQL_Upload: void errorBadRequest(java.lang.String)>($r41);

     label06:
        $r28 = virtualinvoke $r24.<org.apache.jena.iri.IRI: java.lang.String getRawPath()>();

        if $r28 == null goto label07;

        $r37 = virtualinvoke $r24.<org.apache.jena.iri.IRI: java.lang.String getRawPath()>();

        $i2 = virtualinvoke $r37.<java.lang.String: int length()>();

        if $i2 != 0 goto label08;

     label07:
        $r65 = new java.lang.StringBuilder;

        specialinvoke $r65.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad IRI: no path: ");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.jena.fuseki.servlets.SPARQL_Upload: void errorBadRequest(java.lang.String)>($r32);

     label08:
        $r54 = virtualinvoke $r24.<org.apache.jena.iri.IRI: java.lang.String getRawPath()>();

        $c3 = virtualinvoke $r54.<java.lang.String: char charAt(int)>(0);

        $i4 = (int) $c3;

        if $i4 == 47 goto label09;

        $r66 = new java.lang.StringBuilder;

        specialinvoke $r66.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad IRI: Path does not start \'/\': ");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.jena.fuseki.servlets.SPARQL_Upload: void errorBadRequest(java.lang.String)>($r36);

     label09:
        goto label12;

     label10:
        $z6 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("default-graph-uri");

        if $z6 == 0 goto label11;

        r53 = null;

        goto label12;

     label11:
        $r21 = <org.apache.jena.fuseki.servlets.SPARQL_Upload: org.slf4j.Logger log>;

        $r20 = newarray (java.lang.Object)[2];

        $l1 = r2.<org.apache.jena.fuseki.servlets.HttpAction: long id>;

        $r22 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r20[0] = $r22;

        $r20[1] = $r6;

        $r23 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("[%d] Upload: Field=%s ignored", $r20);

        interfaceinvoke $r21.<org.slf4j.Logger: void info(java.lang.String)>($r23);

     label12:
        goto label18;

     label13:
        $r8 = interfaceinvoke $r5.<org.apache.commons.fileupload.FileItemStream: java.lang.String getName()>();

        if $r8 == null goto label14;

        $z3 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z3 != 0 goto label14;

        $z4 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("UNSET FILE NAME");

        if $z4 == 0 goto label15;

     label14:
        staticinvoke <org.apache.jena.fuseki.servlets.SPARQL_Upload: void errorBadRequest(java.lang.String)>("No name for content - can\'t determine RDF syntax");

     label15:
        $r55 = interfaceinvoke $r5.<org.apache.commons.fileupload.FileItemStream: java.lang.String getContentType()>();

        $r56 = staticinvoke <org.apache.jena.atlas.web.ContentType: org.apache.jena.atlas.web.ContentType create(java.lang.String)>($r55);

        $r57 = virtualinvoke $r56.<org.apache.jena.atlas.web.ContentType: java.lang.String getContentType()>();

        $r58 = staticinvoke <org.apache.jena.riot.WebContent: org.apache.jena.riot.Lang contentTypeToLang(java.lang.String)>($r57);

        r59 = $r58;

        if $r58 != null goto label16;

        r59 = staticinvoke <org.apache.jena.riot.RDFLanguages: org.apache.jena.riot.Lang filenameToLang(java.lang.String)>($r8);

     label16:
        if r59 != null goto label17;

        r59 = <org.apache.jena.riot.RDFLanguages: org.apache.jena.riot.Lang RDFXML>;

     label17:
        $r10 = <org.apache.jena.fuseki.servlets.SPARQL_Upload: org.slf4j.Logger log>;

        $r9 = newarray (java.lang.Object)[5];

        $l0 = r2.<org.apache.jena.fuseki.servlets.HttpAction: long id>;

        $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r9[0] = $r11;

        $r9[1] = $r8;

        $r12 = virtualinvoke $r56.<org.apache.jena.atlas.web.ContentType: java.lang.String getContentType()>();

        $r9[2] = $r12;

        $r13 = virtualinvoke $r56.<org.apache.jena.atlas.web.ContentType: java.lang.String getCharset()>();

        $r9[3] = $r13;

        $r14 = virtualinvoke r59.<org.apache.jena.riot.Lang: java.lang.String getName()>();

        $r9[4] = $r14;

        $r15 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("[%d] Upload: Filename: %s, Content-Type=%s, Charset=%s => %s", $r9);

        interfaceinvoke $r10.<org.slf4j.Logger: void info(java.lang.String)>($r15);

        $r16 = staticinvoke <org.apache.jena.riot.system.StreamRDFLib: org.apache.jena.riot.system.StreamRDF graph(com.hp.hpl.jena.graph.Graph)>($r0);

        $r17 = staticinvoke <org.apache.jena.riot.system.StreamRDFLib: org.apache.jena.riot.lang.StreamRDFCounting count(org.apache.jena.riot.system.StreamRDF)>($r16);

        staticinvoke <org.apache.jena.fuseki.servlets.SPARQL_REST: void parse(org.apache.jena.fuseki.servlets.HttpAction,org.apache.jena.riot.system.StreamRDF,java.io.InputStream,org.apache.jena.riot.Lang,java.lang.String)>(r2, $r17, $r7, r59, r18);

        interfaceinvoke $r17.<org.apache.jena.riot.lang.StreamRDFCounting: long count()>();

     label18:
        goto label02;

     label19:
        if r53 == null goto label20;

        $z1 = virtualinvoke r53.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z1 == 0 goto label21;

     label20:
        r53 = "default";

     label21:
        $r60 = staticinvoke <org.apache.jena.atlas.lib.Pair: org.apache.jena.atlas.lib.Pair create(java.lang.Object,java.lang.Object)>(r53, $r0);

     label22:
        return $r60;

     label23:
        $r52 := @caughtexception;

        throw $r52;

     label24:
        $r51 := @caughtexception;

        staticinvoke <org.apache.jena.fuseki.servlets.SPARQL_Upload: void errorOccurred(java.lang.Throwable)>($r51);

        return null;

        catch org.apache.jena.fuseki.servlets.ActionErrorException from label01 to label22 with label23;
        catch java.lang.Exception from label01 to label22 with label24;
    }

    protected void validate(org.apache.jena.fuseki.servlets.HttpAction)
    {
        org.apache.jena.fuseki.servlets.SPARQL_Upload r0;
        org.apache.jena.fuseki.servlets.HttpAction r1;

        r0 := @this: org.apache.jena.fuseki.servlets.SPARQL_Upload;

        r1 := @parameter0: org.apache.jena.fuseki.servlets.HttpAction;

        return;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;
        org.apache.jena.riot.system.ErrorHandler $r1;

        $r0 = <org.apache.jena.fuseki.servlets.SPARQL_Upload: org.slf4j.Logger log>;

        $r1 = staticinvoke <org.apache.jena.riot.system.ErrorHandlerFactory: org.apache.jena.riot.system.ErrorHandler errorHandlerStd(org.slf4j.Logger)>($r0);

        <org.apache.jena.fuseki.servlets.SPARQL_Upload: org.apache.jena.riot.system.ErrorHandler errorHandler> = $r1;

        return;
    }
}
