class org.apache.commons.collections.BinaryHeap$1 extends java.lang.Object implements java.util.Iterator
{
    private int index;
    private int lastReturnedIndex;
    private final org.apache.commons.collections.BinaryHeap this$0;

    void <init>(org.apache.commons.collections.BinaryHeap)
    {
        int $i1;
        org.apache.commons.collections.BinaryHeap$1 r0;
        org.apache.commons.collections.BinaryHeap r1;

        r0 := @this: org.apache.commons.collections.BinaryHeap$1;

        r1 := @parameter0: org.apache.commons.collections.BinaryHeap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.collections.BinaryHeap$1: org.apache.commons.collections.BinaryHeap this$0> = r1;

        r0.<org.apache.commons.collections.BinaryHeap$1: int index> = 1;

        $i1 = (int) -1;

        r0.<org.apache.commons.collections.BinaryHeap$1: int lastReturnedIndex> = $i1;

        return;
    }

    public boolean hasNext()
    {
        org.apache.commons.collections.BinaryHeap$1 r0;
        int $i0, $i1;
        org.apache.commons.collections.BinaryHeap $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.BinaryHeap$1;

        $i1 = r0.<org.apache.commons.collections.BinaryHeap$1: int index>;

        $r1 = r0.<org.apache.commons.collections.BinaryHeap$1: org.apache.commons.collections.BinaryHeap this$0>;

        $i0 = $r1.<org.apache.commons.collections.BinaryHeap: int m_size>;

        if $i1 > $i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.Object next()
    {
        java.lang.Object[] $r2;
        org.apache.commons.collections.BinaryHeap $r1;
        org.apache.commons.collections.BinaryHeap$1 r0;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r3;
        java.util.NoSuchElementException $r4;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.BinaryHeap$1;

        $z0 = virtualinvoke r0.<org.apache.commons.collections.BinaryHeap$1: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r4 = new java.util.NoSuchElementException;

        specialinvoke $r4.<java.util.NoSuchElementException: void <init>()>();

        throw $r4;

     label1:
        $i0 = r0.<org.apache.commons.collections.BinaryHeap$1: int index>;

        r0.<org.apache.commons.collections.BinaryHeap$1: int lastReturnedIndex> = $i0;

        $i1 = r0.<org.apache.commons.collections.BinaryHeap$1: int index>;

        $i2 = $i1 + 1;

        r0.<org.apache.commons.collections.BinaryHeap$1: int index> = $i2;

        $r1 = r0.<org.apache.commons.collections.BinaryHeap$1: org.apache.commons.collections.BinaryHeap this$0>;

        $r2 = $r1.<org.apache.commons.collections.BinaryHeap: java.lang.Object[] m_elements>;

        $i3 = r0.<org.apache.commons.collections.BinaryHeap$1: int lastReturnedIndex>;

        $r3 = $r2[$i3];

        return $r3;
    }

    public void remove()
    {
        java.lang.IllegalStateException $r26;
        org.apache.commons.collections.BinaryHeap$1 r0;
        boolean $z0;
        java.lang.Object[] $r4, $r6, $r9, $r19, $r21;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19, $i20, $i21, $i23, $i25;
        org.apache.commons.collections.BinaryHeap $r1, $r2, $r3, $r7, $r8, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r20, $r24;
        java.lang.Object $r5, $r22, $r23;

        r0 := @this: org.apache.commons.collections.BinaryHeap$1;

        $i0 = r0.<org.apache.commons.collections.BinaryHeap$1: int lastReturnedIndex>;

        $i23 = (int) -1;

        if $i0 != $i23 goto label1;

        $r26 = new java.lang.IllegalStateException;

        specialinvoke $r26.<java.lang.IllegalStateException: void <init>()>();

        throw $r26;

     label1:
        $r1 = r0.<org.apache.commons.collections.BinaryHeap$1: org.apache.commons.collections.BinaryHeap this$0>;

        $r6 = $r1.<org.apache.commons.collections.BinaryHeap: java.lang.Object[] m_elements>;

        $i2 = r0.<org.apache.commons.collections.BinaryHeap$1: int lastReturnedIndex>;

        $r2 = r0.<org.apache.commons.collections.BinaryHeap$1: org.apache.commons.collections.BinaryHeap this$0>;

        $r4 = $r2.<org.apache.commons.collections.BinaryHeap: java.lang.Object[] m_elements>;

        $r3 = r0.<org.apache.commons.collections.BinaryHeap$1: org.apache.commons.collections.BinaryHeap this$0>;

        $i1 = $r3.<org.apache.commons.collections.BinaryHeap: int m_size>;

        $r5 = $r4[$i1];

        $r6[$i2] = $r5;

        $r7 = r0.<org.apache.commons.collections.BinaryHeap$1: org.apache.commons.collections.BinaryHeap this$0>;

        $r9 = $r7.<org.apache.commons.collections.BinaryHeap: java.lang.Object[] m_elements>;

        $r8 = r0.<org.apache.commons.collections.BinaryHeap$1: org.apache.commons.collections.BinaryHeap this$0>;

        $i3 = $r8.<org.apache.commons.collections.BinaryHeap: int m_size>;

        $r9[$i3] = null;

        $r10 = r0.<org.apache.commons.collections.BinaryHeap$1: org.apache.commons.collections.BinaryHeap this$0>;

        $i4 = $r10.<org.apache.commons.collections.BinaryHeap: int m_size>;

        $i5 = $i4 - 1;

        $r10.<org.apache.commons.collections.BinaryHeap: int m_size> = $i5;

        $r11 = r0.<org.apache.commons.collections.BinaryHeap$1: org.apache.commons.collections.BinaryHeap this$0>;

        $i6 = $r11.<org.apache.commons.collections.BinaryHeap: int m_size>;

        if $i6 == 0 goto label6;

        $i8 = r0.<org.apache.commons.collections.BinaryHeap$1: int lastReturnedIndex>;

        $r12 = r0.<org.apache.commons.collections.BinaryHeap$1: org.apache.commons.collections.BinaryHeap this$0>;

        $i7 = $r12.<org.apache.commons.collections.BinaryHeap: int m_size>;

        if $i8 > $i7 goto label6;

        i19 = 0;

        $i9 = r0.<org.apache.commons.collections.BinaryHeap$1: int lastReturnedIndex>;

        if $i9 <= 1 goto label2;

        $r24 = r0.<org.apache.commons.collections.BinaryHeap$1: org.apache.commons.collections.BinaryHeap this$0>;

        $r18 = r0.<org.apache.commons.collections.BinaryHeap$1: org.apache.commons.collections.BinaryHeap this$0>;

        $r19 = $r18.<org.apache.commons.collections.BinaryHeap: java.lang.Object[] m_elements>;

        $i16 = r0.<org.apache.commons.collections.BinaryHeap$1: int lastReturnedIndex>;

        $r23 = $r19[$i16];

        $r20 = r0.<org.apache.commons.collections.BinaryHeap$1: org.apache.commons.collections.BinaryHeap this$0>;

        $r21 = $r20.<org.apache.commons.collections.BinaryHeap: java.lang.Object[] m_elements>;

        $i17 = r0.<org.apache.commons.collections.BinaryHeap$1: int lastReturnedIndex>;

        $i18 = $i17 / 2;

        $r22 = $r21[$i18];

        i19 = staticinvoke <org.apache.commons.collections.BinaryHeap: int access$000(org.apache.commons.collections.BinaryHeap,java.lang.Object,java.lang.Object)>($r24, $r23, $r22);

     label2:
        $r13 = r0.<org.apache.commons.collections.BinaryHeap$1: org.apache.commons.collections.BinaryHeap this$0>;

        $z0 = $r13.<org.apache.commons.collections.BinaryHeap: boolean m_isMinHeap>;

        if $z0 == 0 goto label4;

        $i13 = r0.<org.apache.commons.collections.BinaryHeap$1: int lastReturnedIndex>;

        if $i13 <= 1 goto label3;

        if i19 >= 0 goto label3;

        $r17 = r0.<org.apache.commons.collections.BinaryHeap$1: org.apache.commons.collections.BinaryHeap this$0>;

        $i15 = r0.<org.apache.commons.collections.BinaryHeap$1: int lastReturnedIndex>;

        virtualinvoke $r17.<org.apache.commons.collections.BinaryHeap: void percolateUpMinHeap(int)>($i15);

        goto label6;

     label3:
        $r16 = r0.<org.apache.commons.collections.BinaryHeap$1: org.apache.commons.collections.BinaryHeap this$0>;

        $i14 = r0.<org.apache.commons.collections.BinaryHeap$1: int lastReturnedIndex>;

        virtualinvoke $r16.<org.apache.commons.collections.BinaryHeap: void percolateDownMinHeap(int)>($i14);

        goto label6;

     label4:
        $i10 = r0.<org.apache.commons.collections.BinaryHeap$1: int lastReturnedIndex>;

        if $i10 <= 1 goto label5;

        if i19 <= 0 goto label5;

        $r15 = r0.<org.apache.commons.collections.BinaryHeap$1: org.apache.commons.collections.BinaryHeap this$0>;

        $i12 = r0.<org.apache.commons.collections.BinaryHeap$1: int lastReturnedIndex>;

        virtualinvoke $r15.<org.apache.commons.collections.BinaryHeap: void percolateUpMaxHeap(int)>($i12);

        goto label6;

     label5:
        $r14 = r0.<org.apache.commons.collections.BinaryHeap$1: org.apache.commons.collections.BinaryHeap this$0>;

        $i11 = r0.<org.apache.commons.collections.BinaryHeap$1: int lastReturnedIndex>;

        virtualinvoke $r14.<org.apache.commons.collections.BinaryHeap: void percolateDownMaxHeap(int)>($i11);

     label6:
        $i20 = r0.<org.apache.commons.collections.BinaryHeap$1: int index>;

        $i21 = $i20 - 1;

        r0.<org.apache.commons.collections.BinaryHeap$1: int index> = $i21;

        $i25 = (int) -1;

        r0.<org.apache.commons.collections.BinaryHeap$1: int lastReturnedIndex> = $i25;

        return;
    }
}
