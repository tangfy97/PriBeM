public class org.apache.batik.bridge.svg12.SVGMultiImageElementBridge extends org.apache.batik.bridge.SVGImageElementBridge
{

    public void <init>()
    {
        org.apache.batik.bridge.svg12.SVGMultiImageElementBridge r0;

        r0 := @this: org.apache.batik.bridge.svg12.SVGMultiImageElementBridge;

        specialinvoke r0.<org.apache.batik.bridge.SVGImageElementBridge: void <init>()>();

        return;
    }

    public java.lang.String getNamespaceURI()
    {
        org.apache.batik.bridge.svg12.SVGMultiImageElementBridge r0;

        r0 := @this: org.apache.batik.bridge.svg12.SVGMultiImageElementBridge;

        return "http://www.w3.org/2000/svg";
    }

    public java.lang.String getLocalName()
    {
        org.apache.batik.bridge.svg12.SVGMultiImageElementBridge r0;

        r0 := @this: org.apache.batik.bridge.svg12.SVGMultiImageElementBridge;

        return "multiImage";
    }

    public org.apache.batik.bridge.Bridge getInstance()
    {
        org.apache.batik.bridge.svg12.SVGMultiImageElementBridge $r0, r1;

        r1 := @this: org.apache.batik.bridge.svg12.SVGMultiImageElementBridge;

        $r0 = new org.apache.batik.bridge.svg12.SVGMultiImageElementBridge;

        specialinvoke $r0.<org.apache.batik.bridge.svg12.SVGMultiImageElementBridge: void <init>()>();

        return $r0;
    }

    public org.apache.batik.gvt.GraphicsNode createGraphicsNode(org.apache.batik.bridge.BridgeContext, org.w3c.dom.Element)
    {
        java.awt.geom.Rectangle2D $r6, $r12;
        org.apache.batik.gvt.svg12.MultiResGraphicsNode $r49;
        org.apache.batik.bridge.svg12.SVGMultiImageElementBridge$MultiImageElementViewport $r45;
        org.apache.batik.ext.awt.image.renderable.ClipRable8Bit $r44;
        org.apache.batik.gvt.GraphicsNode $r4;
        org.apache.batik.bridge.BridgeContext r1;
        java.awt.geom.AffineTransform r37, $r42;
        org.apache.batik.bridge.UserAgent $r2;
        short $s1;
        java.lang.String $r7, $r17, $r18, $r19, $r20;
        org.w3c.dom.Element[] r22;
        java.awt.geom.Rectangle2D$Double $r43;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.batik.bridge.svg12.SVGMultiImageElementBridge r3;
        org.apache.batik.ext.awt.image.renderable.Filter $r10;
        java.awt.Dimension[] r21, r40;
        java.awt.Dimension r28, $r30, $r31, $r34, $r35, r41;
        float $f0, $f1;
        org.w3c.dom.Node r38;
        int $i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12, $i14;
        java.util.LinkedList $r46, $r47, $r48;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        java.util.Iterator $r23, $r24, $r25;
        org.w3c.dom.Element r0, $r29, $r33, r39;
        org.apache.batik.gvt.ImageNode r5;
        java.lang.Object $r26, $r27, $r32;

        r3 := @this: org.apache.batik.bridge.svg12.SVGMultiImageElementBridge;

        r1 := @parameter0: org.apache.batik.bridge.BridgeContext;

        r0 := @parameter1: org.w3c.dom.Element;

        $r2 = virtualinvoke r1.<org.apache.batik.bridge.BridgeContext: org.apache.batik.bridge.UserAgent getUserAgent()>();

        $z0 = staticinvoke <org.apache.batik.bridge.SVGUtilities: boolean matchUserAgent(org.w3c.dom.Element,org.apache.batik.bridge.UserAgent)>(r0, $r2);

        if $z0 != 0 goto label01;

        return null;

     label01:
        $r4 = virtualinvoke r3.<org.apache.batik.bridge.SVGImageElementBridge: org.apache.batik.gvt.GraphicsNode instantiateGraphicsNode()>();

        r5 = (org.apache.batik.gvt.ImageNode) $r4;

        if r5 != null goto label02;

        return null;

     label02:
        virtualinvoke r3.<org.apache.batik.bridge.AbstractGraphicsNodeBridge: void associateSVGContext(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)>(r1, r0, r5);

        $r6 = staticinvoke <org.apache.batik.bridge.svg12.SVGMultiImageElementBridge: java.awt.geom.Rectangle2D getImageBounds(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)>(r1, r0);

        $r7 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("transform");

        $i0 = virtualinvoke $r7.<java.lang.String: int length()>();

        if $i0 == 0 goto label03;

        r37 = staticinvoke <org.apache.batik.bridge.SVGUtilities: java.awt.geom.AffineTransform convertTransform(org.w3c.dom.Element,java.lang.String,java.lang.String,org.apache.batik.bridge.BridgeContext)>(r0, "transform", $r7, r1);

        goto label04;

     label03:
        $r42 = new java.awt.geom.AffineTransform;

        specialinvoke $r42.<java.awt.geom.AffineTransform: void <init>()>();

        r37 = $r42;

     label04:
        $d0 = virtualinvoke $r6.<java.awt.geom.RectangularShape: double getX()>();

        $d1 = virtualinvoke $r6.<java.awt.geom.RectangularShape: double getY()>();

        virtualinvoke r37.<java.awt.geom.AffineTransform: void translate(double,double)>($d0, $d1);

        virtualinvoke r5.<org.apache.batik.gvt.AbstractGraphicsNode: void setTransform(java.awt.geom.AffineTransform)>(r37);

        $z1 = staticinvoke <org.apache.batik.bridge.CSSUtilities: boolean convertVisibility(org.w3c.dom.Element)>(r0);

        virtualinvoke r5.<org.apache.batik.gvt.ImageNode: void setVisible(boolean)>($z1);

        $r43 = new java.awt.geom.Rectangle2D$Double;

        $d2 = virtualinvoke $r6.<java.awt.geom.RectangularShape: double getWidth()>();

        $d3 = virtualinvoke $r6.<java.awt.geom.RectangularShape: double getHeight()>();

        specialinvoke $r43.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(0.0, 0.0, $d2, $d3);

        $r10 = virtualinvoke r5.<org.apache.batik.gvt.AbstractGraphicsNode: org.apache.batik.ext.awt.image.renderable.Filter getGraphicsNodeRable(boolean)>(1);

        $r44 = new org.apache.batik.ext.awt.image.renderable.ClipRable8Bit;

        specialinvoke $r44.<org.apache.batik.ext.awt.image.renderable.ClipRable8Bit: void <init>(org.apache.batik.ext.awt.image.renderable.Filter,java.awt.Shape)>($r10, $r43);

        virtualinvoke r5.<org.apache.batik.gvt.AbstractGraphicsNode: void setClip(org.apache.batik.ext.awt.image.renderable.ClipRable)>($r44);

        $r12 = staticinvoke <org.apache.batik.bridge.CSSUtilities: java.awt.geom.Rectangle2D convertEnableBackground(org.w3c.dom.Element)>(r0);

        if $r12 == null goto label05;

        virtualinvoke r5.<org.apache.batik.gvt.CompositeGraphicsNode: void setBackgroundEnable(java.awt.geom.Rectangle2D)>($r12);

     label05:
        $r45 = new org.apache.batik.bridge.svg12.SVGMultiImageElementBridge$MultiImageElementViewport;

        $d4 = virtualinvoke $r6.<java.awt.geom.RectangularShape: double getWidth()>();

        $f0 = (float) $d4;

        $d5 = virtualinvoke $r6.<java.awt.geom.RectangularShape: double getHeight()>();

        $f1 = (float) $d5;

        specialinvoke $r45.<org.apache.batik.bridge.svg12.SVGMultiImageElementBridge$MultiImageElementViewport: void <init>(float,float)>($f0, $f1);

        virtualinvoke r1.<org.apache.batik.bridge.BridgeContext: void openViewport(org.w3c.dom.Element,org.apache.batik.bridge.Viewport)>(r0, $r45);

        $r46 = new java.util.LinkedList;

        specialinvoke $r46.<java.util.LinkedList: void <init>()>();

        $r47 = new java.util.LinkedList;

        specialinvoke $r47.<java.util.LinkedList: void <init>()>();

        $r48 = new java.util.LinkedList;

        specialinvoke $r48.<java.util.LinkedList: void <init>()>();

        r38 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

        goto label11;

     label06:
        $s1 = interfaceinvoke r38.<org.w3c.dom.Node: short getNodeType()>();

        if $s1 == 1 goto label07;

        goto label10;

     label07:
        r39 = (org.w3c.dom.Element) r38;

        $r17 = virtualinvoke r3.<org.apache.batik.bridge.svg12.SVGMultiImageElementBridge: java.lang.String getNamespaceURI()>();

        $r18 = interfaceinvoke r39.<org.w3c.dom.Node: java.lang.String getNamespaceURI()>();

        $z2 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>($r18);

        if $z2 != 0 goto label08;

        goto label10;

     label08:
        $r19 = interfaceinvoke r39.<org.w3c.dom.Node: java.lang.String getLocalName()>();

        $z3 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>("subImage");

        if $z3 == 0 goto label09;

        virtualinvoke r3.<org.apache.batik.bridge.svg12.SVGMultiImageElementBridge: void addInfo(org.w3c.dom.Element,java.util.Collection,java.util.Collection,java.util.Collection,java.awt.geom.Rectangle2D)>(r39, $r46, $r47, $r48, $r6);

     label09:
        $r20 = interfaceinvoke r39.<org.w3c.dom.Node: java.lang.String getLocalName()>();

        $z4 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>("subImageRef");

        if $z4 == 0 goto label10;

        virtualinvoke r3.<org.apache.batik.bridge.svg12.SVGMultiImageElementBridge: void addRefInfo(org.w3c.dom.Element,java.util.Collection,java.util.Collection,java.util.Collection,java.awt.geom.Rectangle2D)>(r39, $r46, $r47, $r48, $r6);

     label10:
        r38 = interfaceinvoke r38.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

     label11:
        if r38 != null goto label06;

        $i2 = interfaceinvoke $r46.<java.util.List: int size()>();

        r40 = newarray (java.awt.Dimension)[$i2];

        $i3 = interfaceinvoke $r46.<java.util.List: int size()>();

        r21 = newarray (java.awt.Dimension)[$i3];

        $i4 = interfaceinvoke $r46.<java.util.List: int size()>();

        r22 = newarray (org.w3c.dom.Element)[$i4];

        $r23 = interfaceinvoke $r47.<java.util.List: java.util.Iterator iterator()>();

        $r24 = interfaceinvoke $r48.<java.util.List: java.util.Iterator iterator()>();

        $r25 = interfaceinvoke $r46.<java.util.List: java.util.Iterator iterator()>();

        i10 = 0;

        goto label19;

     label12:
        $r26 = interfaceinvoke $r23.<java.util.Iterator: java.lang.Object next()>();

        r41 = (java.awt.Dimension) $r26;

        $r27 = interfaceinvoke $r24.<java.util.Iterator: java.lang.Object next()>();

        r28 = (java.awt.Dimension) $r27;

        i11 = 0;

        if r41 == null goto label16;

        goto label15;

     label13:
        $r34 = r40[i11];

        if $r34 == null goto label14;

        $i9 = r41.<java.awt.Dimension: int width>;

        $r35 = r40[i11];

        $i8 = $r35.<java.awt.Dimension: int width>;

        if $i9 >= $i8 goto label14;

        goto label16;

     label14:
        i11 = i11 + 1;

     label15:
        if i11 < i10 goto label13;

     label16:
        i12 = i10;

        goto label18;

     label17:
        $i5 = i12 - 1;

        $r29 = r22[$i5];

        r22[i12] = $r29;

        $i6 = i12 - 1;

        $r30 = r40[$i6];

        r40[i12] = $r30;

        $i7 = i12 - 1;

        $r31 = r21[$i7];

        r21[i12] = $r31;

        $i14 = (int) -1;

        i12 = i12 + $i14;

     label18:
        if i12 > i11 goto label17;

        $r32 = interfaceinvoke $r25.<java.util.Iterator: java.lang.Object next()>();

        $r33 = (org.w3c.dom.Element) $r32;

        r22[i11] = $r33;

        r40[i11] = r41;

        r21[i11] = r28;

        i10 = i10 + 1;

     label19:
        $z5 = interfaceinvoke $r23.<java.util.Iterator: boolean hasNext()>();

        if $z5 != 0 goto label12;

        $r49 = new org.apache.batik.gvt.svg12.MultiResGraphicsNode;

        specialinvoke $r49.<org.apache.batik.gvt.svg12.MultiResGraphicsNode: void <init>(org.w3c.dom.Element,java.awt.geom.Rectangle2D,org.w3c.dom.Element[],java.awt.Dimension[],java.awt.Dimension[],org.apache.batik.bridge.BridgeContext)>(r0, $r43, r22, r40, r21, r1);

        virtualinvoke r5.<org.apache.batik.gvt.ImageNode: void setImage(org.apache.batik.gvt.GraphicsNode)>($r49);

        return r5;
    }

    public boolean isComposite()
    {
        org.apache.batik.bridge.svg12.SVGMultiImageElementBridge r0;

        r0 := @this: org.apache.batik.bridge.svg12.SVGMultiImageElementBridge;

        return 0;
    }

    public void buildGraphicsNode(org.apache.batik.bridge.BridgeContext, org.w3c.dom.Element, org.apache.batik.gvt.GraphicsNode)
    {
        org.apache.batik.bridge.svg12.SVGMultiImageElementBridge r0;
        org.w3c.dom.Element r2;
        org.apache.batik.gvt.GraphicsNode r3;
        org.apache.batik.bridge.BridgeContext r1;

        r0 := @this: org.apache.batik.bridge.svg12.SVGMultiImageElementBridge;

        r1 := @parameter0: org.apache.batik.bridge.BridgeContext;

        r2 := @parameter1: org.w3c.dom.Element;

        r3 := @parameter2: org.apache.batik.gvt.GraphicsNode;

        virtualinvoke r0.<org.apache.batik.bridge.svg12.SVGMultiImageElementBridge: void initializeDynamicSupport(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)>(r1, r2, r3);

        virtualinvoke r1.<org.apache.batik.bridge.BridgeContext: void closeViewport(org.w3c.dom.Element)>(r2);

        return;
    }

    protected void initializeDynamicSupport(org.apache.batik.bridge.BridgeContext, org.w3c.dom.Element, org.apache.batik.gvt.GraphicsNode)
    {
        org.apache.batik.bridge.svg12.SVGMultiImageElementBridge r5;
        org.w3c.dom.Element r3;
        org.apache.batik.gvt.GraphicsNode r1, $r4;
        org.apache.batik.gvt.ImageNode r2;
        org.apache.batik.bridge.BridgeContext r0;
        boolean $z0;

        r5 := @this: org.apache.batik.bridge.svg12.SVGMultiImageElementBridge;

        r0 := @parameter0: org.apache.batik.bridge.BridgeContext;

        r3 := @parameter1: org.w3c.dom.Element;

        r1 := @parameter2: org.apache.batik.gvt.GraphicsNode;

        $z0 = virtualinvoke r0.<org.apache.batik.bridge.BridgeContext: boolean isInteractive()>();

        if $z0 == 0 goto label1;

        r2 = (org.apache.batik.gvt.ImageNode) r1;

        $r4 = virtualinvoke r2.<org.apache.batik.gvt.ImageNode: org.apache.batik.gvt.GraphicsNode getImage()>();

        virtualinvoke r0.<org.apache.batik.bridge.BridgeContext: void bind(org.w3c.dom.Node,org.apache.batik.gvt.GraphicsNode)>(r3, $r4);

     label1:
        return;
    }

    public void dispose()
    {
        org.apache.batik.bridge.svg12.SVGMultiImageElementBridge r0;
        org.apache.batik.bridge.BridgeContext $r2;
        org.w3c.dom.Element $r1;

        r0 := @this: org.apache.batik.bridge.svg12.SVGMultiImageElementBridge;

        $r2 = r0.<org.apache.batik.bridge.AnimatableSVGBridge: org.apache.batik.bridge.BridgeContext ctx>;

        $r1 = r0.<org.apache.batik.bridge.AnimatableSVGBridge: org.w3c.dom.Element e>;

        virtualinvoke $r2.<org.apache.batik.bridge.BridgeContext: void removeViewport(org.w3c.dom.Element)>($r1);

        specialinvoke r0.<org.apache.batik.bridge.SVGImageElementBridge: void dispose()>();

        return;
    }

    protected static java.awt.geom.Rectangle2D getImageBounds(org.apache.batik.bridge.BridgeContext, org.w3c.dom.Element)
    {
        java.lang.Object[] $r9, $r11;
        java.awt.geom.Rectangle2D$Float $r7;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r3, $r4, $r5, $r6;
        org.apache.batik.parser.UnitProcessor$Context $r2;
        org.apache.batik.bridge.BridgeException $r8, $r10;
        org.apache.batik.bridge.BridgeContext r0;
        org.w3c.dom.Element r1;
        float $f0, $f1, f2, f3;

        r0 := @parameter0: org.apache.batik.bridge.BridgeContext;

        r1 := @parameter1: org.w3c.dom.Element;

        $r2 = staticinvoke <org.apache.batik.bridge.UnitProcessor: org.apache.batik.parser.UnitProcessor$Context createContext(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)>(r0, r1);

        $r3 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "x");

        f2 = 0.0F;

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 == 0 goto label1;

        f2 = staticinvoke <org.apache.batik.bridge.UnitProcessor: float svgHorizontalCoordinateToUserSpace(java.lang.String,java.lang.String,org.apache.batik.parser.UnitProcessor$Context)>($r3, "x", $r2);

     label1:
        $r4 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "y");

        f3 = 0.0F;

        $i1 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i1 == 0 goto label2;

        f3 = staticinvoke <org.apache.batik.bridge.UnitProcessor: float svgVerticalCoordinateToUserSpace(java.lang.String,java.lang.String,org.apache.batik.parser.UnitProcessor$Context)>($r4, "y", $r2);

     label2:
        $r5 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "width");

        $i2 = virtualinvoke $r5.<java.lang.String: int length()>();

        if $i2 != 0 goto label3;

        $r10 = new org.apache.batik.bridge.BridgeException;

        $r11 = newarray (java.lang.Object)[1];

        $r11[0] = "width";

        specialinvoke $r10.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String,java.lang.Object[])>(r0, r1, "attribute.missing", $r11);

        throw $r10;

     label3:
        $f0 = staticinvoke <org.apache.batik.bridge.UnitProcessor: float svgHorizontalLengthToUserSpace(java.lang.String,java.lang.String,org.apache.batik.parser.UnitProcessor$Context)>($r5, "width", $r2);

        $r6 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "height");

        $i3 = virtualinvoke $r6.<java.lang.String: int length()>();

        if $i3 != 0 goto label4;

        $r8 = new org.apache.batik.bridge.BridgeException;

        $r9 = newarray (java.lang.Object)[1];

        $r9[0] = "height";

        specialinvoke $r8.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String,java.lang.Object[])>(r0, r1, "attribute.missing", $r9);

        throw $r8;

     label4:
        $f1 = staticinvoke <org.apache.batik.bridge.UnitProcessor: float svgVerticalLengthToUserSpace(java.lang.String,java.lang.String,org.apache.batik.parser.UnitProcessor$Context)>($r6, "height", $r2);

        $r7 = new java.awt.geom.Rectangle2D$Float;

        specialinvoke $r7.<java.awt.geom.Rectangle2D$Float: void <init>(float,float,float,float)>(f2, f3, $f0, $f1);

        return $r7;
    }

    protected void addInfo(org.w3c.dom.Element, java.util.Collection, java.util.Collection, java.util.Collection, java.awt.geom.Rectangle2D)
    {
        java.awt.geom.Rectangle2D r11;
        org.w3c.dom.Attr r15;
        org.w3c.dom.Document $r1;
        org.w3c.dom.Node $r4, r16;
        int $i0, i1;
        org.w3c.dom.NamedNodeMap $r3;
        java.lang.String $r5, $r6, $r7;
        org.apache.batik.bridge.svg12.SVGMultiImageElementBridge r10;
        java.util.Collection r8, r9, r13;
        java.awt.Dimension $r12, $r14;
        org.w3c.dom.Element r0, $r2;

        r10 := @this: org.apache.batik.bridge.svg12.SVGMultiImageElementBridge;

        r0 := @parameter0: org.w3c.dom.Element;

        r8 := @parameter1: java.util.Collection;

        r9 := @parameter2: java.util.Collection;

        r13 := @parameter3: java.util.Collection;

        r11 := @parameter4: java.awt.geom.Rectangle2D;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Document getOwnerDocument()>();

        $r2 = interfaceinvoke $r1.<org.w3c.dom.Document: org.w3c.dom.Element createElementNS(java.lang.String,java.lang.String)>("http://www.w3.org/2000/svg", "g");

        $r3 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.NamedNodeMap getAttributes()>();

        $i0 = interfaceinvoke $r3.<org.w3c.dom.NamedNodeMap: int getLength()>();

        i1 = 0;

        goto label2;

     label1:
        $r4 = interfaceinvoke $r3.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node item(int)>(i1);

        r15 = (org.w3c.dom.Attr) $r4;

        $r5 = interfaceinvoke r15.<org.w3c.dom.Node: java.lang.String getNamespaceURI()>();

        $r6 = interfaceinvoke r15.<org.w3c.dom.Attr: java.lang.String getName()>();

        $r7 = interfaceinvoke r15.<org.w3c.dom.Attr: java.lang.String getValue()>();

        interfaceinvoke $r2.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>($r5, $r6, $r7);

        i1 = i1 + 1;

     label2:
        if i1 < $i0 goto label1;

        r16 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

        goto label4;

     label3:
        interfaceinvoke $r2.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r16);

        r16 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

     label4:
        if r16 != null goto label3;

        interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r2);

        interfaceinvoke r8.<java.util.Collection: boolean add(java.lang.Object)>($r2);

        $r12 = virtualinvoke r10.<org.apache.batik.bridge.svg12.SVGMultiImageElementBridge: java.awt.Dimension getElementMinPixel(org.w3c.dom.Element,java.awt.geom.Rectangle2D)>(r0, r11);

        interfaceinvoke r9.<java.util.Collection: boolean add(java.lang.Object)>($r12);

        $r14 = virtualinvoke r10.<org.apache.batik.bridge.svg12.SVGMultiImageElementBridge: java.awt.Dimension getElementMaxPixel(org.w3c.dom.Element,java.awt.geom.Rectangle2D)>(r0, r11);

        interfaceinvoke r13.<java.util.Collection: boolean add(java.lang.Object)>($r14);

        return;
    }

    protected void addRefInfo(org.w3c.dom.Element, java.util.Collection, java.util.Collection, java.util.Collection, java.awt.geom.Rectangle2D)
    {
        java.awt.geom.Rectangle2D r19;
        org.w3c.dom.Document $r4;
        org.apache.batik.bridge.svg12.SVGMultiImageElementBridge r18;
        java.util.Collection r16, r17, r21;
        org.apache.batik.bridge.BridgeException $r24;
        org.apache.batik.bridge.BridgeContext $r26;
        java.awt.Dimension $r20, $r22;
        org.apache.batik.util.ParsedURL $r3, $r23, r27;
        java.lang.Object[] $r25;
        org.w3c.dom.Attr r28;
        org.w3c.dom.Node $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6;
        org.w3c.dom.NamedNodeMap $r7;
        java.lang.String $r1, $r2, $r6, $r9, $r10, $r11, $r12, $r13, $r14, $r15;
        org.w3c.dom.Element r0, $r5;

        r18 := @this: org.apache.batik.bridge.svg12.SVGMultiImageElementBridge;

        r0 := @parameter0: org.w3c.dom.Element;

        r16 := @parameter1: java.util.Collection;

        r17 := @parameter2: java.util.Collection;

        r21 := @parameter3: java.util.Collection;

        r19 := @parameter4: java.awt.geom.Rectangle2D;

        $r1 = staticinvoke <org.apache.batik.dom.util.XLinkSupport: java.lang.String getXLinkHref(org.w3c.dom.Element)>(r0);

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        $r24 = new org.apache.batik.bridge.BridgeException;

        $r26 = r18.<org.apache.batik.bridge.AnimatableSVGBridge: org.apache.batik.bridge.BridgeContext ctx>;

        $r25 = newarray (java.lang.Object)[1];

        $r25[0] = "xlink:href";

        specialinvoke $r24.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String,java.lang.Object[])>($r26, r0, "attribute.missing", $r25);

        throw $r24;

     label1:
        $r2 = staticinvoke <org.apache.batik.dom.AbstractNode: java.lang.String getBaseURI(org.w3c.dom.Node)>(r0);

        if $r2 != null goto label2;

        $r23 = new org.apache.batik.util.ParsedURL;

        specialinvoke $r23.<org.apache.batik.util.ParsedURL: void <init>(java.lang.String)>($r1);

        r27 = $r23;

        goto label3;

     label2:
        $r3 = new org.apache.batik.util.ParsedURL;

        specialinvoke $r3.<org.apache.batik.util.ParsedURL: void <init>(java.lang.String,java.lang.String)>($r2, $r1);

        r27 = $r3;

     label3:
        $r4 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Document getOwnerDocument()>();

        $r5 = interfaceinvoke $r4.<org.w3c.dom.Document: org.w3c.dom.Element createElementNS(java.lang.String,java.lang.String)>("http://www.w3.org/2000/svg", "image");

        $r6 = virtualinvoke r27.<org.apache.batik.util.ParsedURL: java.lang.String toString()>();

        interfaceinvoke $r5.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>("http://www.w3.org/1999/xlink", "href", $r6);

        $r7 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.NamedNodeMap getAttributes()>();

        $i1 = interfaceinvoke $r7.<org.w3c.dom.NamedNodeMap: int getLength()>();

        i6 = 0;

        goto label5;

     label4:
        $r8 = interfaceinvoke $r7.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node item(int)>(i6);

        r28 = (org.w3c.dom.Attr) $r8;

        $r9 = interfaceinvoke r28.<org.w3c.dom.Node: java.lang.String getNamespaceURI()>();

        $r10 = interfaceinvoke r28.<org.w3c.dom.Attr: java.lang.String getName()>();

        $r11 = interfaceinvoke r28.<org.w3c.dom.Attr: java.lang.String getValue()>();

        interfaceinvoke $r5.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>($r9, $r10, $r11);

        i6 = i6 + 1;

     label5:
        if i6 < $i1 goto label4;

        $r12 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("x");

        $i2 = virtualinvoke $r12.<java.lang.String: int length()>();

        if $i2 != 0 goto label6;

        interfaceinvoke $r5.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("x", "0");

     label6:
        $r13 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("y");

        $i3 = virtualinvoke $r13.<java.lang.String: int length()>();

        if $i3 != 0 goto label7;

        interfaceinvoke $r5.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("y", "0");

     label7:
        $r14 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("width");

        $i4 = virtualinvoke $r14.<java.lang.String: int length()>();

        if $i4 != 0 goto label8;

        interfaceinvoke $r5.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("width", "100%");

     label8:
        $r15 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("height");

        $i5 = virtualinvoke $r15.<java.lang.String: int length()>();

        if $i5 != 0 goto label9;

        interfaceinvoke $r5.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("height", "100%");

     label9:
        interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r5);

        interfaceinvoke r16.<java.util.Collection: boolean add(java.lang.Object)>($r5);

        $r20 = virtualinvoke r18.<org.apache.batik.bridge.svg12.SVGMultiImageElementBridge: java.awt.Dimension getElementMinPixel(org.w3c.dom.Element,java.awt.geom.Rectangle2D)>(r0, r19);

        interfaceinvoke r17.<java.util.Collection: boolean add(java.lang.Object)>($r20);

        $r22 = virtualinvoke r18.<org.apache.batik.bridge.svg12.SVGMultiImageElementBridge: java.awt.Dimension getElementMaxPixel(org.w3c.dom.Element,java.awt.geom.Rectangle2D)>(r0, r19);

        interfaceinvoke r21.<java.util.Collection: boolean add(java.lang.Object)>($r22);

        return;
    }

    protected java.awt.Dimension getElementMinPixel(org.w3c.dom.Element, java.awt.geom.Rectangle2D)
    {
        org.apache.batik.bridge.svg12.SVGMultiImageElementBridge r0;
        java.awt.Dimension $r3;
        org.w3c.dom.Element r1;
        java.awt.geom.Rectangle2D r2;

        r0 := @this: org.apache.batik.bridge.svg12.SVGMultiImageElementBridge;

        r1 := @parameter0: org.w3c.dom.Element;

        r2 := @parameter1: java.awt.geom.Rectangle2D;

        $r3 = virtualinvoke r0.<org.apache.batik.bridge.svg12.SVGMultiImageElementBridge: java.awt.Dimension getElementPixelSize(org.w3c.dom.Element,java.lang.String,java.awt.geom.Rectangle2D)>(r1, "max-pixel-size", r2);

        return $r3;
    }

    protected java.awt.Dimension getElementMaxPixel(org.w3c.dom.Element, java.awt.geom.Rectangle2D)
    {
        org.apache.batik.bridge.svg12.SVGMultiImageElementBridge r0;
        java.awt.Dimension $r3;
        org.w3c.dom.Element r1;
        java.awt.geom.Rectangle2D r2;

        r0 := @this: org.apache.batik.bridge.svg12.SVGMultiImageElementBridge;

        r1 := @parameter0: org.w3c.dom.Element;

        r2 := @parameter1: java.awt.geom.Rectangle2D;

        $r3 = virtualinvoke r0.<org.apache.batik.bridge.svg12.SVGMultiImageElementBridge: java.awt.Dimension getElementPixelSize(org.w3c.dom.Element,java.lang.String,java.awt.geom.Rectangle2D)>(r1, "min-pixel-size", r2);

        return $r3;
    }

    protected java.awt.Dimension getElementPixelSize(org.w3c.dom.Element, java.lang.String, java.awt.geom.Rectangle2D)
    {
        java.lang.Float $r6, $r7, $r8, $r11;
        java.awt.geom.Rectangle2D r10;
        int $i0, $i1, $i2;
        java.lang.String r1, $r2;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;
        org.apache.batik.bridge.svg12.SVGMultiImageElementBridge r3;
        org.apache.batik.bridge.BridgeContext $r4;
        java.awt.Dimension $r9;
        org.w3c.dom.Element r0;
        float $f0, f1;
        java.lang.Float[] $r5;

        r3 := @this: org.apache.batik.bridge.svg12.SVGMultiImageElementBridge;

        r0 := @parameter0: org.w3c.dom.Element;

        r1 := @parameter1: java.lang.String;

        r10 := @parameter2: java.awt.geom.Rectangle2D;

        $r2 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>(r1);

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $r4 = r3.<org.apache.batik.bridge.AnimatableSVGBridge: org.apache.batik.bridge.BridgeContext ctx>;

        $r5 = staticinvoke <org.apache.batik.bridge.SVGUtilities: java.lang.Float[] convertSVGNumberOptionalNumber(org.w3c.dom.Element,java.lang.String,java.lang.String,org.apache.batik.bridge.BridgeContext)>(r0, r1, $r2, $r4);

        $r6 = $r5[0];

        if $r6 != null goto label2;

        return null;

     label2:
        $r7 = $r5[0];

        $f0 = virtualinvoke $r7.<java.lang.Float: float floatValue()>();

        f1 = $f0;

        $r8 = $r5[1];

        if $r8 == null goto label3;

        $r11 = $r5[1];

        f1 = virtualinvoke $r11.<java.lang.Float: float floatValue()>();

     label3:
        $r9 = new java.awt.Dimension;

        $d0 = virtualinvoke r10.<java.awt.geom.RectangularShape: double getWidth()>();

        $d1 = (double) $f0;

        $d2 = $d0 / $d1;

        $d3 = $d2 + 0.5;

        $i1 = (int) $d3;

        $d4 = virtualinvoke r10.<java.awt.geom.RectangularShape: double getHeight()>();

        $d5 = (double) f1;

        $d6 = $d4 / $d5;

        $d7 = $d6 + 0.5;

        $i2 = (int) $d7;

        specialinvoke $r9.<java.awt.Dimension: void <init>(int,int)>($i1, $i2);

        return $r9;
    }
}
