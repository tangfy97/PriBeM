public final class org.apache.poi.hslf.record.UserEditAtom extends org.apache.poi.hslf.record.PositionDependentRecordAtom
{
    public static final int LAST_VIEW_NONE;
    public static final int LAST_VIEW_SLIDE_VIEW;
    public static final int LAST_VIEW_OUTLINE_VIEW;
    public static final int LAST_VIEW_NOTES;
    private byte[] _header;
    private static long _type;
    private byte[] reserved;
    private int lastViewedSlideID;
    private int pptVersion;
    private int lastUserEditAtomOffset;
    private int persistPointersOffset;
    private int docPersistRef;
    private int maxPersistWritten;
    private short lastViewType;

    public int getLastViewedSlideID()
    {
        int $i0;
        org.apache.poi.hslf.record.UserEditAtom r0;

        r0 := @this: org.apache.poi.hslf.record.UserEditAtom;

        $i0 = r0.<org.apache.poi.hslf.record.UserEditAtom: int lastViewedSlideID>;

        return $i0;
    }

    public short getLastViewType()
    {
        short $s0;
        org.apache.poi.hslf.record.UserEditAtom r0;

        r0 := @this: org.apache.poi.hslf.record.UserEditAtom;

        $s0 = r0.<org.apache.poi.hslf.record.UserEditAtom: short lastViewType>;

        return $s0;
    }

    public int getLastUserEditAtomOffset()
    {
        int $i0;
        org.apache.poi.hslf.record.UserEditAtom r0;

        r0 := @this: org.apache.poi.hslf.record.UserEditAtom;

        $i0 = r0.<org.apache.poi.hslf.record.UserEditAtom: int lastUserEditAtomOffset>;

        return $i0;
    }

    public int getPersistPointersOffset()
    {
        int $i0;
        org.apache.poi.hslf.record.UserEditAtom r0;

        r0 := @this: org.apache.poi.hslf.record.UserEditAtom;

        $i0 = r0.<org.apache.poi.hslf.record.UserEditAtom: int persistPointersOffset>;

        return $i0;
    }

    public int getDocPersistRef()
    {
        int $i0;
        org.apache.poi.hslf.record.UserEditAtom r0;

        r0 := @this: org.apache.poi.hslf.record.UserEditAtom;

        $i0 = r0.<org.apache.poi.hslf.record.UserEditAtom: int docPersistRef>;

        return $i0;
    }

    public int getMaxPersistWritten()
    {
        int $i0;
        org.apache.poi.hslf.record.UserEditAtom r0;

        r0 := @this: org.apache.poi.hslf.record.UserEditAtom;

        $i0 = r0.<org.apache.poi.hslf.record.UserEditAtom: int maxPersistWritten>;

        return $i0;
    }

    public void setLastUserEditAtomOffset(int)
    {
        int i0;
        org.apache.poi.hslf.record.UserEditAtom r0;

        r0 := @this: org.apache.poi.hslf.record.UserEditAtom;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hslf.record.UserEditAtom: int lastUserEditAtomOffset> = i0;

        return;
    }

    public void setPersistPointersOffset(int)
    {
        int i0;
        org.apache.poi.hslf.record.UserEditAtom r0;

        r0 := @this: org.apache.poi.hslf.record.UserEditAtom;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hslf.record.UserEditAtom: int persistPointersOffset> = i0;

        return;
    }

    public void setLastViewType(short)
    {
        short s0;
        org.apache.poi.hslf.record.UserEditAtom r0;

        r0 := @this: org.apache.poi.hslf.record.UserEditAtom;

        s0 := @parameter0: short;

        r0.<org.apache.poi.hslf.record.UserEditAtom: short lastViewType> = s0;

        return;
    }

    public void setMaxPersistWritten(int)
    {
        int i0;
        org.apache.poi.hslf.record.UserEditAtom r0;

        r0 := @this: org.apache.poi.hslf.record.UserEditAtom;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hslf.record.UserEditAtom: int maxPersistWritten> = i0;

        return;
    }

    protected void <init>(byte[], int, int)
    {
        byte[] $r1, r2, $r3, $r4, $r5, $r6;
        org.apache.poi.hslf.record.UserEditAtom r0;
        short $s21;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i22, $i23, $i24, $i25, $i26, i27;

        r0 := @this: org.apache.poi.hslf.record.UserEditAtom;

        r2 := @parameter0: byte[];

        i0 := @parameter1: int;

        i27 := @parameter2: int;

        specialinvoke r0.<org.apache.poi.hslf.record.PositionDependentRecordAtom: void <init>()>();

        if i27 >= 34 goto label1;

        i27 = 34;

     label1:
        $r1 = newarray (byte)[8];

        r0.<org.apache.poi.hslf.record.UserEditAtom: byte[] _header> = $r1;

        $r3 = r0.<org.apache.poi.hslf.record.UserEditAtom: byte[] _header>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, i0, $r3, 0, 8);

        $i1 = i0 + 0;

        $i2 = $i1 + 8;

        $i3 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r2, $i2);

        r0.<org.apache.poi.hslf.record.UserEditAtom: int lastViewedSlideID> = $i3;

        $i4 = i0 + 4;

        $i5 = $i4 + 8;

        $i6 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r2, $i5);

        r0.<org.apache.poi.hslf.record.UserEditAtom: int pptVersion> = $i6;

        $i7 = i0 + 8;

        $i8 = $i7 + 8;

        $i9 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r2, $i8);

        r0.<org.apache.poi.hslf.record.UserEditAtom: int lastUserEditAtomOffset> = $i9;

        $i10 = i0 + 12;

        $i11 = $i10 + 8;

        $i12 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r2, $i11);

        r0.<org.apache.poi.hslf.record.UserEditAtom: int persistPointersOffset> = $i12;

        $i13 = i0 + 16;

        $i14 = $i13 + 8;

        $i15 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r2, $i14);

        r0.<org.apache.poi.hslf.record.UserEditAtom: int docPersistRef> = $i15;

        $i16 = i0 + 20;

        $i17 = $i16 + 8;

        $i18 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r2, $i17);

        r0.<org.apache.poi.hslf.record.UserEditAtom: int maxPersistWritten> = $i18;

        $i19 = i0 + 24;

        $i20 = $i19 + 8;

        $s21 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>(r2, $i20);

        r0.<org.apache.poi.hslf.record.UserEditAtom: short lastViewType> = $s21;

        $i22 = i27 - 26;

        $i23 = $i22 - 8;

        $r4 = newarray (byte)[$i23];

        r0.<org.apache.poi.hslf.record.UserEditAtom: byte[] reserved> = $r4;

        $i24 = i0 + 26;

        $i26 = $i24 + 8;

        $r6 = r0.<org.apache.poi.hslf.record.UserEditAtom: byte[] reserved>;

        $r5 = r0.<org.apache.poi.hslf.record.UserEditAtom: byte[] reserved>;

        $i25 = lengthof $r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, $i26, $r6, 0, $i25);

        return;
    }

    public long getRecordType()
    {
        long $l0;
        org.apache.poi.hslf.record.UserEditAtom r0;

        r0 := @this: org.apache.poi.hslf.record.UserEditAtom;

        $l0 = <org.apache.poi.hslf.record.UserEditAtom: long _type>;

        return $l0;
    }

    public void updateOtherRecordReferences(java.util.Hashtable)
    {
        org.apache.poi.hslf.record.UserEditAtom r0;
        java.lang.Integer $r2, $r9, $r11, r17;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.String $r8, $r16;
        java.util.Hashtable r1;
        java.lang.RuntimeException $r4, $r12;
        java.lang.Object $r3, $r10;
        java.lang.StringBuilder $r5, $r6, $r7, $r13, $r14, $r15;

        r0 := @this: org.apache.poi.hslf.record.UserEditAtom;

        r1 := @parameter0: java.util.Hashtable;

        $i0 = r0.<org.apache.poi.hslf.record.UserEditAtom: int lastUserEditAtomOffset>;

        if $i0 == 0 goto label2;

        $i4 = r0.<org.apache.poi.hslf.record.UserEditAtom: int lastUserEditAtomOffset>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r10 = virtualinvoke r1.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r9);

        r17 = (java.lang.Integer) $r10;

        if r17 != null goto label1;

        $r12 = new java.lang.RuntimeException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t find the new location of the UserEditAtom that used to be at ");

        $i6 = r0.<org.apache.poi.hslf.record.UserEditAtom: int lastUserEditAtomOffset>;

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String)>($r16);

        throw $r12;

     label1:
        $i5 = virtualinvoke r17.<java.lang.Integer: int intValue()>();

        r0.<org.apache.poi.hslf.record.UserEditAtom: int lastUserEditAtomOffset> = $i5;

     label2:
        $i1 = r0.<org.apache.poi.hslf.record.UserEditAtom: int persistPointersOffset>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r3 = virtualinvoke r1.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r2);

        $r11 = (java.lang.Integer) $r3;

        if $r11 != null goto label3;

        $r4 = new java.lang.RuntimeException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t find the new location of the PersistPtr that used to be at ");

        $i3 = r0.<org.apache.poi.hslf.record.UserEditAtom: int persistPointersOffset>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label3:
        $i2 = virtualinvoke $r11.<java.lang.Integer: int intValue()>();

        r0.<org.apache.poi.hslf.record.UserEditAtom: int persistPointersOffset> = $i2;

        return;
    }

    public void writeOut(java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r0;
        byte[] $r2, $r3;
        org.apache.poi.hslf.record.UserEditAtom r1;
        short $s6;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r1 := @this: org.apache.poi.hslf.record.UserEditAtom;

        r0 := @parameter0: java.io.OutputStream;

        $r2 = r1.<org.apache.poi.hslf.record.UserEditAtom: byte[] _header>;

        virtualinvoke r0.<java.io.OutputStream: void write(byte[])>($r2);

        $i0 = r1.<org.apache.poi.hslf.record.UserEditAtom: int lastViewedSlideID>;

        staticinvoke <org.apache.poi.hslf.record.UserEditAtom: void writeLittleEndian(int,java.io.OutputStream)>($i0, r0);

        $i1 = r1.<org.apache.poi.hslf.record.UserEditAtom: int pptVersion>;

        staticinvoke <org.apache.poi.hslf.record.UserEditAtom: void writeLittleEndian(int,java.io.OutputStream)>($i1, r0);

        $i2 = r1.<org.apache.poi.hslf.record.UserEditAtom: int lastUserEditAtomOffset>;

        staticinvoke <org.apache.poi.hslf.record.UserEditAtom: void writeLittleEndian(int,java.io.OutputStream)>($i2, r0);

        $i3 = r1.<org.apache.poi.hslf.record.UserEditAtom: int persistPointersOffset>;

        staticinvoke <org.apache.poi.hslf.record.UserEditAtom: void writeLittleEndian(int,java.io.OutputStream)>($i3, r0);

        $i4 = r1.<org.apache.poi.hslf.record.UserEditAtom: int docPersistRef>;

        staticinvoke <org.apache.poi.hslf.record.UserEditAtom: void writeLittleEndian(int,java.io.OutputStream)>($i4, r0);

        $i5 = r1.<org.apache.poi.hslf.record.UserEditAtom: int maxPersistWritten>;

        staticinvoke <org.apache.poi.hslf.record.UserEditAtom: void writeLittleEndian(int,java.io.OutputStream)>($i5, r0);

        $s6 = r1.<org.apache.poi.hslf.record.UserEditAtom: short lastViewType>;

        staticinvoke <org.apache.poi.hslf.record.UserEditAtom: void writeLittleEndian(short,java.io.OutputStream)>($s6, r0);

        $r3 = r1.<org.apache.poi.hslf.record.UserEditAtom: byte[] reserved>;

        virtualinvoke r0.<java.io.OutputStream: void write(byte[])>($r3);

        return;
    }

    static void <clinit>()
    {
        <org.apache.poi.hslf.record.UserEditAtom: int LAST_VIEW_NOTES> = 3;

        <org.apache.poi.hslf.record.UserEditAtom: int LAST_VIEW_OUTLINE_VIEW> = 2;

        <org.apache.poi.hslf.record.UserEditAtom: int LAST_VIEW_SLIDE_VIEW> = 1;

        <org.apache.poi.hslf.record.UserEditAtom: int LAST_VIEW_NONE> = 0;

        <org.apache.poi.hslf.record.UserEditAtom: long _type> = 4085L;

        return;
    }
}
