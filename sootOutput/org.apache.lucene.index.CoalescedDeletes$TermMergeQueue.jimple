class org.apache.lucene.index.CoalescedDeletes$TermMergeQueue extends org.apache.lucene.util.PriorityQueue
{

    void <init>(int)
    {
        int i0;
        org.apache.lucene.index.CoalescedDeletes$TermMergeQueue r0;

        r0 := @this: org.apache.lucene.index.CoalescedDeletes$TermMergeQueue;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.lucene.util.PriorityQueue: void <init>()>();

        virtualinvoke r0.<org.apache.lucene.index.CoalescedDeletes$TermMergeQueue: void initialize(int)>(i0);

        return;
    }

    protected boolean lessThan(org.apache.lucene.index.CoalescedDeletes$SubIterator, org.apache.lucene.index.CoalescedDeletes$SubIterator)
    {
        org.apache.lucene.index.Term $r2, $r3;
        org.apache.lucene.index.CoalescedDeletes$SubIterator r0, r1;
        org.apache.lucene.index.CoalescedDeletes$TermMergeQueue r4;
        int $i0, $i1, $i2;
        boolean $z0, $z1;

        r4 := @this: org.apache.lucene.index.CoalescedDeletes$TermMergeQueue;

        r0 := @parameter0: org.apache.lucene.index.CoalescedDeletes$SubIterator;

        r1 := @parameter1: org.apache.lucene.index.CoalescedDeletes$SubIterator;

        $r3 = r0.<org.apache.lucene.index.CoalescedDeletes$SubIterator: org.apache.lucene.index.Term current>;

        $r2 = r1.<org.apache.lucene.index.CoalescedDeletes$SubIterator: org.apache.lucene.index.Term current>;

        $i0 = virtualinvoke $r3.<org.apache.lucene.index.Term: int compareTo(org.apache.lucene.index.Term)>($r2);

        if $i0 == 0 goto label3;

        if $i0 >= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;

     label3:
        $i2 = r0.<org.apache.lucene.index.CoalescedDeletes$SubIterator: int index>;

        $i1 = r1.<org.apache.lucene.index.CoalescedDeletes$SubIterator: int index>;

        if $i2 >= $i1 goto label4;

        $z1 = 1;

        goto label5;

     label4:
        $z1 = 0;

     label5:
        return $z1;
    }

    protected volatile boolean lessThan(java.lang.Object, java.lang.Object)
    {
        org.apache.lucene.index.CoalescedDeletes$TermMergeQueue r0;
        org.apache.lucene.index.CoalescedDeletes$SubIterator $r3, $r4;
        java.lang.Object r1, r2;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.CoalescedDeletes$TermMergeQueue;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (org.apache.lucene.index.CoalescedDeletes$SubIterator) r1;

        $r3 = (org.apache.lucene.index.CoalescedDeletes$SubIterator) r2;

        $z0 = virtualinvoke r0.<org.apache.lucene.index.CoalescedDeletes$TermMergeQueue: boolean lessThan(org.apache.lucene.index.CoalescedDeletes$SubIterator,org.apache.lucene.index.CoalescedDeletes$SubIterator)>($r4, $r3);

        return $z0;
    }
}
