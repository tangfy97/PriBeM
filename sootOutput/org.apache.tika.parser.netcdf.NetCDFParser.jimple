public class org.apache.tika.parser.netcdf.NetCDFParser extends org.apache.tika.parser.AbstractParser
{
    private static final long serialVersionUID;
    private final java.util.Set SUPPORTED_TYPES;

    public void <init>()
    {
        java.util.Set $r2;
        org.apache.tika.parser.netcdf.NetCDFParser r0;
        org.apache.tika.mime.MediaType $r1;

        r0 := @this: org.apache.tika.parser.netcdf.NetCDFParser;

        specialinvoke r0.<org.apache.tika.parser.AbstractParser: void <init>()>();

        $r1 = staticinvoke <org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType application(java.lang.String)>("x-netcdf");

        $r2 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r1);

        r0.<org.apache.tika.parser.netcdf.NetCDFParser: java.util.Set SUPPORTED_TYPES> = $r2;

        return;
    }

    public java.util.Set getSupportedTypes(org.apache.tika.parser.ParseContext)
    {
        java.util.Set $r1;
        org.apache.tika.parser.netcdf.NetCDFParser r0;
        org.apache.tika.parser.ParseContext r2;

        r0 := @this: org.apache.tika.parser.netcdf.NetCDFParser;

        r2 := @parameter0: org.apache.tika.parser.ParseContext;

        $r1 = r0.<org.apache.tika.parser.netcdf.NetCDFParser: java.util.Set SUPPORTED_TYPES>;

        return $r1;
    }

    public void parse(java.io.InputStream, org.xml.sax.ContentHandler, org.apache.tika.metadata.Metadata, org.apache.tika.parser.ParseContext) throws java.io.IOException, org.xml.sax.SAXException, org.apache.tika.exception.TikaException
    {
        byte[] $r4;
        org.apache.tika.parser.netcdf.NetCDFParser r27;
        org.apache.tika.metadata.Metadata r2;
        org.apache.tika.metadata.Property $r29;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        ucar.ma2.DataType $r15, $r30, $r31;
        java.util.List $r6, $r10, $r12, $r18;
        ucar.nc2.Attribute r21, r39;
        org.apache.tika.parser.ParseContext r37;
        ucar.nc2.NetcdfFile $r5;
        java.io.ByteArrayOutputStream $r0;
        org.apache.tika.exception.TikaException $r36;
        int $i0, $i1;
        ucar.nc2.Variable r41;
        java.lang.String $r3, $r16, $r17, $r22, $r24, $r25, $r28, $r33, $r34, r38;
        org.xml.sax.ContentHandler r9;
        java.lang.Number $r32;
        java.util.Iterator $r7, $r11, $r13, $r19;
        org.apache.tika.sax.XHTMLContentHandler $r8;
        java.io.IOException $r35;
        java.lang.Object $r14, $r20, $r23, $r26;
        ucar.nc2.Dimension r40;
        java.io.InputStream r1;

        r27 := @this: org.apache.tika.parser.netcdf.NetCDFParser;

        r1 := @parameter0: java.io.InputStream;

        r9 := @parameter1: org.xml.sax.ContentHandler;

        r2 := @parameter2: org.apache.tika.metadata.Metadata;

        r37 := @parameter3: org.apache.tika.parser.ParseContext;

        $r0 = new java.io.ByteArrayOutputStream;

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>();

        staticinvoke <org.apache.tika.io.IOUtils: int copy(java.io.InputStream,java.io.OutputStream)>(r1, $r0);

        $r3 = virtualinvoke r2.<org.apache.tika.metadata.Metadata: java.lang.String get(java.lang.String)>("resourceName");

        r38 = $r3;

        if $r3 != null goto label01;

        r38 = "";

     label01:
        $r4 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $r5 = staticinvoke <ucar.nc2.NetcdfFile: ucar.nc2.NetcdfFile openInMemory(java.lang.String,byte[])>(r38, $r4);

        $r6 = virtualinvoke $r5.<ucar.nc2.NetcdfFile: java.util.List getGlobalAttributes()>();

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z5 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label05;

        $r26 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r39 = (ucar.nc2.Attribute) $r26;

        $r28 = virtualinvoke r39.<ucar.nc2.Attribute: java.lang.String getName()>();

        $r29 = specialinvoke r27.<org.apache.tika.parser.netcdf.NetCDFParser: org.apache.tika.metadata.Property resolveMetadataKey(java.lang.String)>($r28);

        $r30 = virtualinvoke r39.<ucar.nc2.Attribute: ucar.ma2.DataType getDataType()>();

        $z3 = virtualinvoke $r30.<ucar.ma2.DataType: boolean isString()>();

        if $z3 == 0 goto label03;

        $r34 = virtualinvoke r39.<ucar.nc2.Attribute: java.lang.String getStringValue()>();

        virtualinvoke r2.<org.apache.tika.metadata.Metadata: void add(org.apache.tika.metadata.Property,java.lang.String)>($r29, $r34);

        goto label04;

     label03:
        $r31 = virtualinvoke r39.<ucar.nc2.Attribute: ucar.ma2.DataType getDataType()>();

        $z4 = virtualinvoke $r31.<ucar.ma2.DataType: boolean isNumeric()>();

        if $z4 == 0 goto label04;

        $r32 = virtualinvoke r39.<ucar.nc2.Attribute: java.lang.Number getNumericValue()>();

        $i1 = virtualinvoke $r32.<java.lang.Number: int intValue()>();

        $r33 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i1);

        virtualinvoke r2.<org.apache.tika.metadata.Metadata: void add(org.apache.tika.metadata.Property,java.lang.String)>($r29, $r33);

     label04:
        goto label02;

     label05:
        $r8 = new org.apache.tika.sax.XHTMLContentHandler;

        specialinvoke $r8.<org.apache.tika.sax.XHTMLContentHandler: void <init>(org.xml.sax.ContentHandler,org.apache.tika.metadata.Metadata)>(r9, r2);

        virtualinvoke $r8.<org.apache.tika.sax.XHTMLContentHandler: void startDocument()>();

        virtualinvoke $r8.<org.apache.tika.sax.XHTMLContentHandler: void characters(java.lang.String)>("dimensions:");

        virtualinvoke $r8.<org.apache.tika.sax.XHTMLContentHandler: void newline()>();

        $r10 = virtualinvoke $r5.<ucar.nc2.NetcdfFile: java.util.List getDimensions()>();

        $r11 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label06:
        $z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label07;

        $r23 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r40 = (ucar.nc2.Dimension) $r23;

        $r24 = virtualinvoke r40.<ucar.nc2.Dimension: java.lang.String getName()>();

        virtualinvoke $r8.<org.apache.tika.sax.XHTMLContentHandler: void characters(java.lang.String)>($r24);

        virtualinvoke $r8.<org.apache.tika.sax.XHTMLContentHandler: void characters(java.lang.String)>(" = ");

        $i0 = virtualinvoke r40.<ucar.nc2.Dimension: int getLength()>();

        $r25 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        virtualinvoke $r8.<org.apache.tika.sax.XHTMLContentHandler: void characters(java.lang.String)>($r25);

        virtualinvoke $r8.<org.apache.tika.sax.XHTMLContentHandler: void characters(java.lang.String)>(";");

        virtualinvoke $r8.<org.apache.tika.sax.XHTMLContentHandler: void newline()>();

        goto label06;

     label07:
        virtualinvoke $r8.<org.apache.tika.sax.XHTMLContentHandler: void newline()>();

        virtualinvoke $r8.<org.apache.tika.sax.XHTMLContentHandler: void characters(java.lang.String)>("variables:");

        $r12 = virtualinvoke $r5.<ucar.nc2.NetcdfFile: java.util.List getVariables()>();

        $r13 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>();

     label08:
        $z1 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label11;

        $r14 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        r41 = (ucar.nc2.Variable) $r14;

        virtualinvoke $r8.<org.apache.tika.sax.XHTMLContentHandler: void newline()>();

        $r15 = virtualinvoke r41.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        $r16 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r15);

        virtualinvoke $r8.<org.apache.tika.sax.XHTMLContentHandler: void characters(java.lang.String)>($r16);

        virtualinvoke $r8.<org.apache.tika.sax.XHTMLContentHandler: void characters(java.lang.String)>(" ");

        $r17 = virtualinvoke r41.<ucar.nc2.Variable: java.lang.String getNameAndDimensions()>();

        virtualinvoke $r8.<org.apache.tika.sax.XHTMLContentHandler: void characters(java.lang.String)>($r17);

        virtualinvoke $r8.<org.apache.tika.sax.XHTMLContentHandler: void characters(java.lang.String)>(";");

        virtualinvoke $r8.<org.apache.tika.sax.XHTMLContentHandler: void newline()>();

        $r18 = virtualinvoke r41.<ucar.nc2.Variable: java.util.List getAttributes()>();

        $r19 = interfaceinvoke $r18.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $z2 = interfaceinvoke $r19.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label10;

        $r20 = interfaceinvoke $r19.<java.util.Iterator: java.lang.Object next()>();

        r21 = (ucar.nc2.Attribute) $r20;

        $r22 = virtualinvoke r21.<ucar.nc2.Attribute: java.lang.String toString()>();

        virtualinvoke $r8.<org.apache.tika.sax.XHTMLContentHandler: void characters(java.lang.String)>("\t:");

        virtualinvoke $r8.<org.apache.tika.sax.XHTMLContentHandler: void characters(java.lang.String)>($r22);

        virtualinvoke $r8.<org.apache.tika.sax.XHTMLContentHandler: void characters(java.lang.String)>(";");

        virtualinvoke $r8.<org.apache.tika.sax.XHTMLContentHandler: void newline()>();

        goto label09;

     label10:
        goto label08;

     label11:
        virtualinvoke $r8.<org.apache.tika.sax.XHTMLContentHandler: void endDocument()>();

     label12:
        goto label14;

     label13:
        $r35 := @caughtexception;

        $r36 = new org.apache.tika.exception.TikaException;

        specialinvoke $r36.<org.apache.tika.exception.TikaException: void <init>(java.lang.String,java.lang.Throwable)>("NetCDF parse error", $r35);

        throw $r36;

     label14:
        return;

        catch java.io.IOException from label01 to label12 with label13;
    }

    private org.apache.tika.metadata.Property resolveMetadataKey(java.lang.String)
    {
        org.apache.tika.metadata.Property $r2, $r3;
        org.apache.tika.parser.netcdf.NetCDFParser r4;
        java.lang.String r0, $r1;
        boolean $z0;

        r4 := @this: org.apache.tika.parser.netcdf.NetCDFParser;

        r0 := @parameter0: java.lang.String;

        $r1 = "title";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        $r3 = <org.apache.tika.metadata.TikaCoreProperties: org.apache.tika.metadata.Property TITLE>;

        return $r3;

     label1:
        $r2 = staticinvoke <org.apache.tika.metadata.Property: org.apache.tika.metadata.Property internalText(java.lang.String)>(r0);

        return $r2;
    }

    public static void <clinit>()
    {
        <org.apache.tika.parser.netcdf.NetCDFParser: long serialVersionUID> = -5940938274907708665L;

        return;
    }
}
