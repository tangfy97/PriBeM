class org.springframework.context.support.AbstractApplicationContext$ApplicationListenerDetector extends java.lang.Object implements org.springframework.beans.factory.support.MergedBeanDefinitionPostProcessor
{
    private final java.util.Map singletonNames;
    final org.springframework.context.support.AbstractApplicationContext this$0;

    private void <init>(org.springframework.context.support.AbstractApplicationContext)
    {
        java.util.concurrent.ConcurrentHashMap $r2;
        org.springframework.context.support.AbstractApplicationContext r1;
        org.springframework.context.support.AbstractApplicationContext$ApplicationListenerDetector r0;

        r0 := @this: org.springframework.context.support.AbstractApplicationContext$ApplicationListenerDetector;

        r1 := @parameter0: org.springframework.context.support.AbstractApplicationContext;

        r0.<org.springframework.context.support.AbstractApplicationContext$ApplicationListenerDetector: org.springframework.context.support.AbstractApplicationContext this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r2.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        r0.<org.springframework.context.support.AbstractApplicationContext$ApplicationListenerDetector: java.util.Map singletonNames> = $r2;

        return;
    }

    public void postProcessMergedBeanDefinition(org.springframework.beans.factory.support.RootBeanDefinition, java.lang.Class, java.lang.String)
    {
        org.springframework.beans.factory.support.RootBeanDefinition r0;
        org.springframework.context.support.AbstractApplicationContext$ApplicationListenerDetector r1;
        java.util.Map $r4;
        java.lang.Boolean $r3;
        java.lang.Class r5;
        java.lang.String r2;
        boolean $z0;

        r1 := @this: org.springframework.context.support.AbstractApplicationContext$ApplicationListenerDetector;

        r0 := @parameter0: org.springframework.beans.factory.support.RootBeanDefinition;

        r5 := @parameter1: java.lang.Class;

        r2 := @parameter2: java.lang.String;

        $z0 = virtualinvoke r0.<org.springframework.beans.factory.support.RootBeanDefinition: boolean isSingleton()>();

        if $z0 == 0 goto label1;

        $r4 = r1.<org.springframework.context.support.AbstractApplicationContext$ApplicationListenerDetector: java.util.Map singletonNames>;

        $r3 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r3);

     label1:
        return;
    }

    public java.lang.Object postProcessBeforeInitialization(java.lang.Object, java.lang.String)
    {
        java.lang.Object r0;
        java.lang.String r2;
        org.springframework.context.support.AbstractApplicationContext$ApplicationListenerDetector r1;

        r1 := @this: org.springframework.context.support.AbstractApplicationContext$ApplicationListenerDetector;

        r0 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.String;

        return r0;
    }

    public java.lang.Object postProcessAfterInitialization(java.lang.Object, java.lang.String)
    {
        java.util.Map $r3, $r21;
        java.lang.Boolean r5, $r6, $r22;
        java.lang.String r2, $r18;
        boolean $z0, $z1, $z2, $z3;
        org.springframework.context.support.AbstractApplicationContext$ApplicationListenerDetector r1;
        org.springframework.context.ApplicationListener $r19;
        org.springframework.context.support.AbstractApplicationContext $r7, $r9, $r10, $r20;
        java.lang.Object r0, $r4;
        org.apache.commons.logging.Log $r8, $r12;
        java.lang.StringBuilder $r11, $r13, $r14, $r15, $r16, $r17;

        r1 := @this: org.springframework.context.support.AbstractApplicationContext$ApplicationListenerDetector;

        r0 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.String;

        $z0 = r0 instanceof org.springframework.context.ApplicationListener;

        if $z0 == 0 goto label3;

        $r3 = r1.<org.springframework.context.support.AbstractApplicationContext$ApplicationListenerDetector: java.util.Map singletonNames>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        r5 = (java.lang.Boolean) $r4;

        $r6 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $z1 = virtualinvoke $r6.<java.lang.Boolean: boolean equals(java.lang.Object)>(r5);

        if $z1 == 0 goto label1;

        $r20 = r1.<org.springframework.context.support.AbstractApplicationContext$ApplicationListenerDetector: org.springframework.context.support.AbstractApplicationContext this$0>;

        $r19 = (org.springframework.context.ApplicationListener) r0;

        virtualinvoke $r20.<org.springframework.context.support.AbstractApplicationContext: void addApplicationListener(org.springframework.context.ApplicationListener)>($r19);

        goto label3;

     label1:
        if r5 != null goto label3;

        $r7 = r1.<org.springframework.context.support.AbstractApplicationContext$ApplicationListenerDetector: org.springframework.context.support.AbstractApplicationContext this$0>;

        $r8 = $r7.<org.springframework.context.support.AbstractApplicationContext: org.apache.commons.logging.Log logger>;

        $z2 = interfaceinvoke $r8.<org.apache.commons.logging.Log: boolean isWarnEnabled()>();

        if $z2 == 0 goto label2;

        $r9 = r1.<org.springframework.context.support.AbstractApplicationContext$ApplicationListenerDetector: org.springframework.context.support.AbstractApplicationContext this$0>;

        $z3 = virtualinvoke $r9.<org.springframework.context.support.AbstractApplicationContext: boolean containsBean(java.lang.String)>(r2);

        if $z3 != 0 goto label2;

        $r10 = r1.<org.springframework.context.support.AbstractApplicationContext$ApplicationListenerDetector: org.springframework.context.support.AbstractApplicationContext this$0>;

        $r12 = $r10.<org.springframework.context.support.AbstractApplicationContext: org.apache.commons.logging.Log logger>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("Inner bean \'");

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' implements ApplicationListener interface ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("but is not reachable for event multicasting by its containing ApplicationContext ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("because it does not have singleton scope. Only top-level listener beans are allowed ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("to be of non-singleton scope.");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r12.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r18);

     label2:
        $r21 = r1.<org.springframework.context.support.AbstractApplicationContext$ApplicationListenerDetector: java.util.Map singletonNames>;

        $r22 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r22);

     label3:
        return r0;
    }

    void <init>(org.springframework.context.support.AbstractApplicationContext, org.springframework.context.support.AbstractApplicationContext$ApplicationListenerDetector)
    {
        org.springframework.context.support.AbstractApplicationContext r1;
        org.springframework.context.support.AbstractApplicationContext$ApplicationListenerDetector r0, r2;

        r0 := @this: org.springframework.context.support.AbstractApplicationContext$ApplicationListenerDetector;

        r1 := @parameter0: org.springframework.context.support.AbstractApplicationContext;

        r2 := @parameter1: org.springframework.context.support.AbstractApplicationContext$ApplicationListenerDetector;

        specialinvoke r0.<org.springframework.context.support.AbstractApplicationContext$ApplicationListenerDetector: void <init>(org.springframework.context.support.AbstractApplicationContext)>(r1);

        return;
    }
}
