public class org.apache.pdfbox.pdmodel.common.PDPageLabels extends java.lang.Object implements org.apache.pdfbox.pdmodel.common.COSObjectable
{
    private java.util.SortedMap labels;
    private org.apache.pdfbox.pdmodel.PDDocument doc;

    public void <init>(org.apache.pdfbox.pdmodel.PDDocument)
    {
        java.util.TreeMap $r1;
        org.apache.pdfbox.pdmodel.common.PDPageLabels r0;
        org.apache.pdfbox.pdmodel.PDDocument r2;
        org.apache.pdfbox.pdmodel.common.PDPageLabelRange $r3;
        java.lang.Integer $r5;
        java.util.SortedMap $r4;

        r0 := @this: org.apache.pdfbox.pdmodel.common.PDPageLabels;

        r2 := @parameter0: org.apache.pdfbox.pdmodel.PDDocument;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.TreeMap;

        specialinvoke $r1.<java.util.TreeMap: void <init>()>();

        r0.<org.apache.pdfbox.pdmodel.common.PDPageLabels: java.util.SortedMap labels> = $r1;

        r0.<org.apache.pdfbox.pdmodel.common.PDPageLabels: org.apache.pdfbox.pdmodel.PDDocument doc> = r2;

        $r3 = new org.apache.pdfbox.pdmodel.common.PDPageLabelRange;

        specialinvoke $r3.<org.apache.pdfbox.pdmodel.common.PDPageLabelRange: void <init>()>();

        virtualinvoke $r3.<org.apache.pdfbox.pdmodel.common.PDPageLabelRange: void setStyle(java.lang.String)>("D");

        $r4 = r0.<org.apache.pdfbox.pdmodel.common.PDPageLabels: java.util.SortedMap labels>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        interfaceinvoke $r4.<java.util.SortedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r3);

        return;
    }

    public void <init>(org.apache.pdfbox.pdmodel.PDDocument, org.apache.pdfbox.cos.COSDictionary) throws java.io.IOException
    {
        org.apache.pdfbox.cos.COSDictionary r2;
        org.apache.pdfbox.pdmodel.common.PDPageLabels r0;
        org.apache.pdfbox.pdmodel.PDDocument r1;
        org.apache.pdfbox.pdmodel.common.PDNumberTreeNode $r3;

        r0 := @this: org.apache.pdfbox.pdmodel.common.PDPageLabels;

        r1 := @parameter0: org.apache.pdfbox.pdmodel.PDDocument;

        r2 := @parameter1: org.apache.pdfbox.cos.COSDictionary;

        specialinvoke r0.<org.apache.pdfbox.pdmodel.common.PDPageLabels: void <init>(org.apache.pdfbox.pdmodel.PDDocument)>(r1);

        if r2 != null goto label1;

        return;

     label1:
        $r3 = new org.apache.pdfbox.pdmodel.common.PDNumberTreeNode;

        specialinvoke $r3.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: void <init>(org.apache.pdfbox.cos.COSDictionary,java.lang.Class)>(r2, class "Lorg/apache/pdfbox/cos/COSDictionary;");

        specialinvoke r0.<org.apache.pdfbox.pdmodel.common.PDPageLabels: void findLabels(org.apache.pdfbox.pdmodel.common.PDNumberTreeNode)>($r3);

        return;
    }

    private void findLabels(org.apache.pdfbox.pdmodel.common.PDNumberTreeNode) throws java.io.IOException
    {
        java.lang.Integer $r8;
        org.apache.pdfbox.pdmodel.common.PDPageLabelRange $r12;
        org.apache.pdfbox.pdmodel.common.PDPageLabels r9;
        java.util.Map $r2, $r3;
        int $i0;
        boolean $z0, $z1;
        java.util.Map$Entry r19;
        java.util.Iterator $r5, $r16;
        org.apache.pdfbox.pdmodel.common.PDNumberTreeNode r0, r18;
        java.util.Set $r4;
        org.apache.pdfbox.cos.COSDictionary $r14;
        java.util.List $r1, $r15;
        java.lang.Object $r6, $r7, $r11, $r13, $r17;
        java.util.SortedMap $r10;

        r9 := @this: org.apache.pdfbox.pdmodel.common.PDPageLabels;

        r0 := @parameter0: org.apache.pdfbox.pdmodel.common.PDNumberTreeNode;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: java.util.List getKids()>();

        if $r1 == null goto label3;

        $r15 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: java.util.List getKids()>();

        $r16 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r16.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r17 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        r18 = (org.apache.pdfbox.pdmodel.common.PDNumberTreeNode) $r17;

        specialinvoke r9.<org.apache.pdfbox.pdmodel.common.PDPageLabels: void findLabels(org.apache.pdfbox.pdmodel.common.PDNumberTreeNode)>(r18);

        goto label1;

     label2:
        goto label6;

     label3:
        $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: java.util.Map getNumbers()>();

        if $r2 == null goto label6;

        $r3 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: java.util.Map getNumbers()>();

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r19 = (java.util.Map$Entry) $r6;

        $r7 = interfaceinvoke r19.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r8 = (java.lang.Integer) $r7;

        $i0 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

        if $i0 < 0 goto label5;

        $r10 = r9.<org.apache.pdfbox.pdmodel.common.PDPageLabels: java.util.SortedMap labels>;

        $r11 = interfaceinvoke r19.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r12 = new org.apache.pdfbox.pdmodel.common.PDPageLabelRange;

        $r13 = interfaceinvoke r19.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r14 = (org.apache.pdfbox.cos.COSDictionary) $r13;

        specialinvoke $r12.<org.apache.pdfbox.pdmodel.common.PDPageLabelRange: void <init>(org.apache.pdfbox.cos.COSDictionary)>($r14);

        interfaceinvoke $r10.<java.util.SortedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r12);

     label5:
        goto label4;

     label6:
        return;
    }

    public int getPageRangeCount()
    {
        int $i0;
        org.apache.pdfbox.pdmodel.common.PDPageLabels r0;
        java.util.SortedMap $r1;

        r0 := @this: org.apache.pdfbox.pdmodel.common.PDPageLabels;

        $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDPageLabels: java.util.SortedMap labels>;

        $i0 = interfaceinvoke $r1.<java.util.SortedMap: int size()>();

        return $i0;
    }

    public org.apache.pdfbox.pdmodel.common.PDPageLabelRange getPageLabelRange(int)
    {
        org.apache.pdfbox.pdmodel.common.PDPageLabels r0;
        int i0;
        java.lang.Object $r3;
        java.lang.Integer $r2;
        org.apache.pdfbox.pdmodel.common.PDPageLabelRange $r4;
        java.util.SortedMap $r1;

        r0 := @this: org.apache.pdfbox.pdmodel.common.PDPageLabels;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDPageLabels: java.util.SortedMap labels>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3 = interfaceinvoke $r1.<java.util.SortedMap: java.lang.Object get(java.lang.Object)>($r2);

        $r4 = (org.apache.pdfbox.pdmodel.common.PDPageLabelRange) $r3;

        return $r4;
    }

    public void setLabelItem(int, org.apache.pdfbox.pdmodel.common.PDPageLabelRange)
    {
        org.apache.pdfbox.pdmodel.common.PDPageLabels r0;
        int i0;
        java.lang.Integer $r2;
        org.apache.pdfbox.pdmodel.common.PDPageLabelRange r3;
        java.util.SortedMap $r1;

        r0 := @this: org.apache.pdfbox.pdmodel.common.PDPageLabels;

        i0 := @parameter0: int;

        r3 := @parameter1: org.apache.pdfbox.pdmodel.common.PDPageLabelRange;

        $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDPageLabels: java.util.SortedMap labels>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke $r1.<java.util.SortedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, r3);

        return;
    }

    public org.apache.pdfbox.cos.COSBase getCOSObject()
    {
        org.apache.pdfbox.cos.COSArray $r1;
        org.apache.pdfbox.pdmodel.common.COSObjectable $r13;
        long $l1;
        java.lang.Integer $r10;
        org.apache.pdfbox.cos.COSInteger $r11;
        org.apache.pdfbox.pdmodel.common.PDPageLabels r2;
        int $i0;
        boolean $z0;
        org.apache.pdfbox.cos.COSName $r6;
        java.util.Map$Entry r8;
        java.util.Iterator $r5;
        java.util.Set $r4;
        org.apache.pdfbox.cos.COSDictionary $r0;
        java.lang.Object $r7, $r9, $r12;
        java.util.SortedMap $r3;

        r2 := @this: org.apache.pdfbox.pdmodel.common.PDPageLabels;

        $r0 = new org.apache.pdfbox.cos.COSDictionary;

        specialinvoke $r0.<org.apache.pdfbox.cos.COSDictionary: void <init>()>();

        $r1 = new org.apache.pdfbox.cos.COSArray;

        specialinvoke $r1.<org.apache.pdfbox.cos.COSArray: void <init>()>();

        $r3 = r2.<org.apache.pdfbox.pdmodel.common.PDPageLabels: java.util.SortedMap labels>;

        $r4 = interfaceinvoke $r3.<java.util.SortedMap: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.util.Map$Entry) $r7;

        $r9 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r10 = (java.lang.Integer) $r9;

        $i0 = virtualinvoke $r10.<java.lang.Integer: int intValue()>();

        $l1 = (long) $i0;

        $r11 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>($l1);

        virtualinvoke $r1.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r11);

        $r12 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r13 = (org.apache.pdfbox.pdmodel.common.COSObjectable) $r12;

        virtualinvoke $r1.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.pdmodel.common.COSObjectable)>($r13);

        goto label1;

     label2:
        $r6 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName NUMS>;

        virtualinvoke $r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r6, $r1);

        return $r0;
    }

    public java.util.Map getPageIndicesByLabels()
    {
        org.apache.pdfbox.pdmodel.common.PDPageLabels$1 $r3;
        org.apache.pdfbox.pdmodel.common.PDPageLabels r1;
        org.apache.pdfbox.pdmodel.PDDocument $r2;
        int $i0;
        java.util.HashMap $r0;

        r1 := @this: org.apache.pdfbox.pdmodel.common.PDPageLabels;

        $r0 = new java.util.HashMap;

        $r2 = r1.<org.apache.pdfbox.pdmodel.common.PDPageLabels: org.apache.pdfbox.pdmodel.PDDocument doc>;

        $i0 = virtualinvoke $r2.<org.apache.pdfbox.pdmodel.PDDocument: int getNumberOfPages()>();

        specialinvoke $r0.<java.util.HashMap: void <init>(int)>($i0);

        $r3 = new org.apache.pdfbox.pdmodel.common.PDPageLabels$1;

        specialinvoke $r3.<org.apache.pdfbox.pdmodel.common.PDPageLabels$1: void <init>(org.apache.pdfbox.pdmodel.common.PDPageLabels,java.util.Map)>(r1, $r0);

        specialinvoke r1.<org.apache.pdfbox.pdmodel.common.PDPageLabels: void computeLabels(org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelHandler)>($r3);

        return $r0;
    }

    public java.lang.String[] getLabelsByPageIndices()
    {
        org.apache.pdfbox.pdmodel.common.PDPageLabels$2 $r3;
        org.apache.pdfbox.pdmodel.common.PDPageLabels r0;
        org.apache.pdfbox.pdmodel.PDDocument $r1;
        int $i0;
        java.lang.String[] r2;

        r0 := @this: org.apache.pdfbox.pdmodel.common.PDPageLabels;

        $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDPageLabels: org.apache.pdfbox.pdmodel.PDDocument doc>;

        $i0 = virtualinvoke $r1.<org.apache.pdfbox.pdmodel.PDDocument: int getNumberOfPages()>();

        r2 = newarray (java.lang.String)[$i0];

        $r3 = new org.apache.pdfbox.pdmodel.common.PDPageLabels$2;

        specialinvoke $r3.<org.apache.pdfbox.pdmodel.common.PDPageLabels$2: void <init>(org.apache.pdfbox.pdmodel.common.PDPageLabels,java.lang.String[])>(r0, r2);

        specialinvoke r0.<org.apache.pdfbox.pdmodel.common.PDPageLabels: void computeLabels(org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelHandler)>($r3);

        return r2;
    }

    private void computeLabels(org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelHandler)
    {
        org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator $r5, $r18;
        org.apache.pdfbox.pdmodel.common.PDPageLabelRange $r8, $r20;
        java.lang.Integer $r10, $r15, $r17;
        org.apache.pdfbox.pdmodel.common.PDPageLabels r0;
        boolean $z0, $z1, $z2, $z3;
        org.apache.pdfbox.pdmodel.PDDocument $r7;
        java.util.Set $r2;
        java.util.SortedMap $r1;
        int $i0, $i1, $i2, $i3, $i4, i5, i6;
        java.lang.String $r12, $r21;
        org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelHandler r11;
        java.util.Map$Entry r22, r23;
        java.util.Iterator $r3;
        java.lang.Object $r4, $r6, $r9, $r13, $r14, $r16, $r19;

        r0 := @this: org.apache.pdfbox.pdmodel.common.PDPageLabels;

        r11 := @parameter0: org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelHandler;

        $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDPageLabels: java.util.SortedMap labels>;

        $r2 = interfaceinvoke $r1.<java.util.SortedMap: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        i6 = 0;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r22 = (java.util.Map$Entry) $r4;

     label2:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r13 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r23 = (java.util.Map$Entry) $r13;

        $r14 = interfaceinvoke r23.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r15 = (java.lang.Integer) $r14;

        $i3 = virtualinvoke $r15.<java.lang.Integer: int intValue()>();

        $r16 = interfaceinvoke r22.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r17 = (java.lang.Integer) $r16;

        $i4 = virtualinvoke $r17.<java.lang.Integer: int intValue()>();

        i5 = $i3 - $i4;

        $r18 = new org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator;

        $r19 = interfaceinvoke r22.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r20 = (org.apache.pdfbox.pdmodel.common.PDPageLabelRange) $r19;

        specialinvoke $r18.<org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator: void <init>(org.apache.pdfbox.pdmodel.common.PDPageLabelRange,int)>($r20, i5);

     label3:
        $z3 = virtualinvoke $r18.<org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator: boolean hasNext()>();

        if $z3 == 0 goto label4;

        $r21 = virtualinvoke $r18.<org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator: java.lang.String next()>();

        interfaceinvoke r11.<org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelHandler: void newLabel(int,java.lang.String)>(i6, $r21);

        i6 = i6 + 1;

        goto label3;

     label4:
        r22 = r23;

        goto label2;

     label5:
        $r5 = new org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator;

        $r6 = interfaceinvoke r22.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r8 = (org.apache.pdfbox.pdmodel.common.PDPageLabelRange) $r6;

        $r7 = r0.<org.apache.pdfbox.pdmodel.common.PDPageLabels: org.apache.pdfbox.pdmodel.PDDocument doc>;

        $i0 = virtualinvoke $r7.<org.apache.pdfbox.pdmodel.PDDocument: int getNumberOfPages()>();

        $r9 = interfaceinvoke r22.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r10 = (java.lang.Integer) $r9;

        $i1 = virtualinvoke $r10.<java.lang.Integer: int intValue()>();

        $i2 = $i0 - $i1;

        specialinvoke $r5.<org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator: void <init>(org.apache.pdfbox.pdmodel.common.PDPageLabelRange,int)>($r8, $i2);

     label6:
        $z2 = virtualinvoke $r5.<org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator: boolean hasNext()>();

        if $z2 == 0 goto label7;

        $r12 = virtualinvoke $r5.<org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator: java.lang.String next()>();

        interfaceinvoke r11.<org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelHandler: void newLabel(int,java.lang.String)>(i6, $r12);

        i6 = i6 + 1;

        goto label6;

     label7:
        return;
    }

    static org.apache.pdfbox.pdmodel.PDDocument access$000(org.apache.pdfbox.pdmodel.common.PDPageLabels)
    {
        org.apache.pdfbox.pdmodel.common.PDPageLabels r0;
        org.apache.pdfbox.pdmodel.PDDocument $r1;

        r0 := @parameter0: org.apache.pdfbox.pdmodel.common.PDPageLabels;

        $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDPageLabels: org.apache.pdfbox.pdmodel.PDDocument doc>;

        return $r1;
    }
}
