class org.apache.log4j.xml.DOMConfigurator$3 extends java.lang.Object implements org.apache.log4j.xml.DOMConfigurator$ParseAction
{
    private final java.io.InputStream val$inputStream;
    private final org.apache.log4j.xml.DOMConfigurator this$0;

    void <init>(org.apache.log4j.xml.DOMConfigurator, java.io.InputStream)
    {
        org.apache.log4j.xml.DOMConfigurator r1;
        org.apache.log4j.xml.DOMConfigurator$3 r0;
        java.io.InputStream r2;

        r0 := @this: org.apache.log4j.xml.DOMConfigurator$3;

        r1 := @parameter0: org.apache.log4j.xml.DOMConfigurator;

        r2 := @parameter1: java.io.InputStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.log4j.xml.DOMConfigurator$3: org.apache.log4j.xml.DOMConfigurator this$0> = r1;

        r0.<org.apache.log4j.xml.DOMConfigurator$3: java.io.InputStream val$inputStream> = r2;

        return;
    }

    public org.w3c.dom.Document parse(javax.xml.parsers.DocumentBuilder) throws org.xml.sax.SAXException, java.io.IOException
    {
        org.xml.sax.InputSource $r0;
        org.w3c.dom.Document $r4;
        javax.xml.parsers.DocumentBuilder r3;
        org.apache.log4j.xml.DOMConfigurator$3 r1;
        java.io.InputStream $r2;

        r1 := @this: org.apache.log4j.xml.DOMConfigurator$3;

        r3 := @parameter0: javax.xml.parsers.DocumentBuilder;

        $r0 = new org.xml.sax.InputSource;

        $r2 = r1.<org.apache.log4j.xml.DOMConfigurator$3: java.io.InputStream val$inputStream>;

        specialinvoke $r0.<org.xml.sax.InputSource: void <init>(java.io.InputStream)>($r2);

        virtualinvoke $r0.<org.xml.sax.InputSource: void setSystemId(java.lang.String)>("dummy://log4j.dtd");

        $r4 = virtualinvoke r3.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(org.xml.sax.InputSource)>($r0);

        return $r4;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuffer $r0, $r1, $r5, $r6;
        org.apache.log4j.xml.DOMConfigurator$3 r2;
        java.lang.String $r4, $r7;
        java.io.InputStream $r3;

        r2 := @this: org.apache.log4j.xml.DOMConfigurator$3;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("input stream [");

        $r3 = r2.<org.apache.log4j.xml.DOMConfigurator$3: java.io.InputStream val$inputStream>;

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        $r5 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r7;
    }
}
