public class org.springframework.beans.propertyeditors.FileEditor extends java.beans.PropertyEditorSupport
{
    private final org.springframework.core.io.ResourceEditor resourceEditor;

    public void <init>()
    {
        org.springframework.core.io.ResourceEditor $r1;
        org.springframework.beans.propertyeditors.FileEditor r0;

        r0 := @this: org.springframework.beans.propertyeditors.FileEditor;

        specialinvoke r0.<java.beans.PropertyEditorSupport: void <init>()>();

        $r1 = new org.springframework.core.io.ResourceEditor;

        specialinvoke $r1.<org.springframework.core.io.ResourceEditor: void <init>()>();

        r0.<org.springframework.beans.propertyeditors.FileEditor: org.springframework.core.io.ResourceEditor resourceEditor> = $r1;

        return;
    }

    public void <init>(org.springframework.core.io.ResourceEditor)
    {
        org.springframework.core.io.ResourceEditor r1;
        org.springframework.beans.propertyeditors.FileEditor r0;

        r0 := @this: org.springframework.beans.propertyeditors.FileEditor;

        r1 := @parameter0: org.springframework.core.io.ResourceEditor;

        specialinvoke r0.<java.beans.PropertyEditorSupport: void <init>()>();

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r1, "ResourceEditor must not be null");

        r0.<org.springframework.beans.propertyeditors.FileEditor: org.springframework.core.io.ResourceEditor resourceEditor> = r1;

        return;
    }

    public void setAsText(java.lang.String) throws java.lang.IllegalArgumentException
    {
        org.springframework.core.io.ResourceEditor $r2, $r3;
        org.springframework.beans.propertyeditors.FileEditor r1;
        java.lang.String r0, $r14, $r16;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.springframework.core.io.Resource $r8;
        java.io.IOException $r9;
        java.lang.IllegalArgumentException $r10;
        java.io.File $r5, $r6, $r7;
        java.lang.Object $r4;
        java.lang.StringBuilder $r11, $r12, $r13, $r15;

        r1 := @this: org.springframework.beans.propertyeditors.FileEditor;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>(r0);

        if $z0 != 0 goto label1;

        virtualinvoke r1.<org.springframework.beans.propertyeditors.FileEditor: void setValue(java.lang.Object)>(null);

        return;

     label1:
        $z1 = staticinvoke <org.springframework.util.ResourceUtils: boolean isUrl(java.lang.String)>(r0);

        if $z1 != 0 goto label2;

        $r7 = new java.io.File;

        specialinvoke $r7.<java.io.File: void <init>(java.lang.String)>(r0);

        $z4 = virtualinvoke $r7.<java.io.File: boolean isAbsolute()>();

        if $z4 == 0 goto label2;

        virtualinvoke r1.<org.springframework.beans.propertyeditors.FileEditor: void setValue(java.lang.Object)>($r7);

        return;

     label2:
        $r2 = r1.<org.springframework.beans.propertyeditors.FileEditor: org.springframework.core.io.ResourceEditor resourceEditor>;

        virtualinvoke $r2.<org.springframework.core.io.ResourceEditor: void setAsText(java.lang.String)>(r0);

        $r3 = r1.<org.springframework.beans.propertyeditors.FileEditor: org.springframework.core.io.ResourceEditor resourceEditor>;

        $r4 = virtualinvoke $r3.<org.springframework.core.io.ResourceEditor: java.lang.Object getValue()>();

        $r8 = (org.springframework.core.io.Resource) $r4;

        $z2 = staticinvoke <org.springframework.util.ResourceUtils: boolean isUrl(java.lang.String)>(r0);

        if $z2 != 0 goto label3;

        $z3 = interfaceinvoke $r8.<org.springframework.core.io.Resource: boolean exists()>();

        if $z3 == 0 goto label6;

     label3:
        $r5 = interfaceinvoke $r8.<org.springframework.core.io.Resource: java.io.File getFile()>();

        virtualinvoke r1.<org.springframework.beans.propertyeditors.FileEditor: void setValue(java.lang.Object)>($r5);

     label4:
        goto label7;

     label5:
        $r9 := @caughtexception;

        $r10 = new java.lang.IllegalArgumentException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not retrieve File for ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r14 = virtualinvoke $r9.<java.io.IOException: java.lang.String getMessage()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r10;

     label6:
        $r6 = new java.io.File;

        specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>(r0);

        virtualinvoke r1.<org.springframework.beans.propertyeditors.FileEditor: void setValue(java.lang.Object)>($r6);

     label7:
        return;

        catch java.io.IOException from label3 to label4 with label5;
    }

    public java.lang.String getAsText()
    {
        org.springframework.beans.propertyeditors.FileEditor r0;
        java.lang.Object $r1;
        java.lang.String $r3;
        java.io.File r2;

        r0 := @this: org.springframework.beans.propertyeditors.FileEditor;

        $r1 = virtualinvoke r0.<org.springframework.beans.propertyeditors.FileEditor: java.lang.Object getValue()>();

        r2 = (java.io.File) $r1;

        if r2 == null goto label1;

        $r3 = virtualinvoke r2.<java.io.File: java.lang.String getPath()>();

        goto label2;

     label1:
        $r3 = "";

     label2:
        return $r3;
    }
}
