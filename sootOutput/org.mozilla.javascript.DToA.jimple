class org.mozilla.javascript.DToA extends java.lang.Object
{
    private static final int DTOBASESTR_BUFFER_SIZE;
    static final int DTOSTR_STANDARD;
    static final int DTOSTR_STANDARD_EXPONENTIAL;
    static final int DTOSTR_FIXED;
    static final int DTOSTR_EXPONENTIAL;
    static final int DTOSTR_PRECISION;
    private static final int Frac_mask;
    private static final int Exp_shift;
    private static final int Exp_msk1;
    private static final long Frac_maskL;
    private static final int Exp_shiftL;
    private static final long Exp_msk1L;
    private static final int Bias;
    private static final int P;
    private static final int Exp_shift1;
    private static final int Exp_mask;
    private static final int Exp_mask_shifted;
    private static final int Bndry_mask;
    private static final int Log2P;
    private static final int Sign_bit;
    private static final int Exp_11;
    private static final int Ten_pmax;
    private static final int Quick_max;
    private static final int Bletch;
    private static final int Frac_mask1;
    private static final int Int_max;
    private static final int n_bigtens;
    private static final double[] tens;
    private static final double[] bigtens;
    private static final int[] dtoaModes;

    void <init>()
    {
        org.mozilla.javascript.DToA r0;

        r0 := @this: org.mozilla.javascript.DToA;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static char BASEDIGIT(int)
    {
        int i0, $i3, $i4;
        char $c1, $c2;

        i0 := @parameter0: int;

        if i0 < 10 goto label1;

        $i3 = 87 + i0;

        $c2 = (char) $i3;

        return $c2;

     label1:
        $i4 = 48 + i0;

        $c1 = (char) $i4;

        return $c1;
    }

    private static int lo0bits(int)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12, $i14;

        i0 := @parameter0: int;

        i10 = i0;

        $i1 = i0 & 7;

        if $i1 == 0 goto label3;

        $i8 = i0 & 1;

        if $i8 == 0 goto label1;

        return 0;

     label1:
        $i9 = i0 & 2;

        if $i9 == 0 goto label2;

        return 1;

     label2:
        return 2;

     label3:
        i11 = 0;

        $i14 = (int) 65535;

        $i2 = i0 & $i14;

        if $i2 != 0 goto label4;

        i11 = 16;

        i10 = i0 >>> 16;

     label4:
        $i3 = i10 & 255;

        if $i3 != 0 goto label5;

        i11 = i11 + 8;

        i10 = i10 >>> 8;

     label5:
        $i4 = i10 & 15;

        if $i4 != 0 goto label6;

        i11 = i11 + 4;

        i10 = i10 >>> 4;

     label6:
        $i5 = i10 & 3;

        if $i5 != 0 goto label7;

        i11 = i11 + 2;

        i10 = i10 >>> 2;

     label7:
        $i6 = i10 & 1;

        if $i6 != 0 goto label8;

        i11 = i11 + 1;

        i12 = i10 >>> 1;

        $i7 = i12 & 1;

        if $i7 != 0 goto label8;

        return 32;

     label8:
        return i11;
    }

    private static int hi0bits(int)
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7;

        i6 := @parameter0: int;

        i7 = 0;

        $i0 = i6 & -65536;

        if $i0 != 0 goto label1;

        i7 = 16;

        i6 = i6 << 16;

     label1:
        $i1 = i6 & -16777216;

        if $i1 != 0 goto label2;

        i7 = i7 + 8;

        i6 = i6 << 8;

     label2:
        $i2 = i6 & -268435456;

        if $i2 != 0 goto label3;

        i7 = i7 + 4;

        i6 = i6 << 4;

     label3:
        $i3 = i6 & -1073741824;

        if $i3 != 0 goto label4;

        i7 = i7 + 2;

        i6 = i6 << 2;

     label4:
        $i4 = i6 & -2147483648;

        if $i4 != 0 goto label5;

        i7 = i7 + 1;

        $i5 = i6 & 1073741824;

        if $i5 != 0 goto label5;

        return 32;

     label5:
        return i7;
    }

    private static void stuffBits(byte[], int, int)
    {
        byte[] r0;
        byte $b3, $b5, $b8, $b10;
        int i0, i1, $i2, $i4, $i6, $i7, $i9, $i11;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i2 = i1 >> 24;

        $b3 = (byte) $i2;

        r0[i0] = $b3;

        $i6 = i0 + 1;

        $i4 = i1 >> 16;

        $b5 = (byte) $i4;

        r0[$i6] = $b5;

        $i9 = i0 + 2;

        $i7 = i1 >> 8;

        $b8 = (byte) $i7;

        r0[$i9] = $b8;

        $i11 = i0 + 3;

        $b10 = (byte) i1;

        r0[$i11] = $b10;

        return;
    }

    private static java.math.BigInteger d2b(double, int[], int[])
    {
        byte[] r3;
        byte $b25, b26;
        int[] r0, r1;
        java.math.BigInteger $r2;
        long $l0, $l1;
        int i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, i20, i21, i22, i23, i24;
        double d0;

        d0 := @parameter0: double;

        r0 := @parameter1: int[];

        r1 := @parameter2: int[];

        $l0 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>(d0);

        $l1 = $l0 >>> 32;

        i20 = (int) $l1;

        i2 = (int) $l0;

        i21 = i20 & 1048575;

        i22 = i20 & 2147483647;

        $i3 = i22 >>> 20;

        if $i3 == 0 goto label1;

        i21 = i21 | 1048576;

     label1:
        if i2 == 0 goto label6;

        r3 = newarray (byte)[8];

        $i16 = staticinvoke <org.mozilla.javascript.DToA: int lo0bits(int)>(i2);

        i23 = $i16;

        i24 = i2 >>> $i16;

        if $i16 == 0 goto label2;

        $i17 = 32 - $i16;

        $i18 = i21 << $i17;

        $i19 = i24 | $i18;

        staticinvoke <org.mozilla.javascript.DToA: void stuffBits(byte[],int,int)>(r3, 4, $i19);

        i21 = i21 >> $i16;

        goto label3;

     label2:
        staticinvoke <org.mozilla.javascript.DToA: void stuffBits(byte[],int,int)>(r3, 4, i24);

     label3:
        staticinvoke <org.mozilla.javascript.DToA: void stuffBits(byte[],int,int)>(r3, 0, i21);

        if i21 == 0 goto label4;

        $b25 = 2;

        goto label5;

     label4:
        $b25 = 1;

     label5:
        b26 = $b25;

        goto label7;

     label6:
        r3 = newarray (byte)[4];

        $i4 = staticinvoke <org.mozilla.javascript.DToA: int lo0bits(int)>(i21);

        i21 = i21 >>> $i4;

        staticinvoke <org.mozilla.javascript.DToA: void stuffBits(byte[],int,int)>(r3, 0, i21);

        i23 = $i4 + 32;

        b26 = 1;

     label7:
        if $i3 == 0 goto label8;

        $i12 = $i3 - 1023;

        $i13 = $i12 - 52;

        $i14 = $i13 + i23;

        r0[0] = $i14;

        $i15 = 53 - i23;

        r1[0] = $i15;

        goto label9;

     label8:
        $i5 = $i3 - 1023;

        $i6 = $i5 - 52;

        $i7 = $i6 + 1;

        $i8 = $i7 + i23;

        r0[0] = $i8;

        $i9 = 32 * b26;

        $i10 = staticinvoke <org.mozilla.javascript.DToA: int hi0bits(int)>(i21);

        $i11 = $i9 - $i10;

        r1[0] = $i11;

     label9:
        $r2 = new java.math.BigInteger;

        specialinvoke $r2.<java.math.BigInteger: void <init>(byte[])>(r3);

        return $r2;
    }

    static java.lang.String JS_dtobasestr(int, double)
    {
        byte $b1, $b2, $b3, $b29, $b33;
        java.math.BigInteger $r5, $r8, $r9, $r10, $r13, $r14, r17, r19, r20, r21, $r22, $r23, $r24, $r25, $r27, $r28;
        long $l4, $l5, $l7, $l8, $l9, $l27, $l28, $l30, l32, $l39;
        java.lang.StringBuffer $r2, $r3, $r29, $r31;
        java.lang.String $r4, $r12, $r15, r16;
        java.math.BigInteger[] $r26;
        char[] r18;
        int[] r6, r7;
        boolean $z0, $z1, z2, z3, z4, z5;
        int i0, $i6, i10, i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, i31, i34, i35, i36, $i37, $i38, $i40, i42, $i43, i44, $i45, $i47, $i48, $i50, $i51, $i52, $i53, $i54;
        double $d0, $d1, d2, d3;
        char $c41, $c46;
        java.lang.IllegalArgumentException $r30;

        i0 := @parameter0: int;

        d2 := @parameter1: double;

        if 2 > i0 goto label01;

        if i0 <= 36 goto label02;

     label01:
        $r30 = new java.lang.IllegalArgumentException;

        $r29 = new java.lang.StringBuffer;

        specialinvoke $r29.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Bad base: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r30.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r30;

     label02:
        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d2);

        if $z0 == 0 goto label03;

        return "NaN";

     label03:
        $z1 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d2);

        if $z1 == 0 goto label06;

        $b29 = d2 cmpl 0.0;

        $i47 = (int) $b29;

        if $i47 <= 0 goto label04;

        $r15 = "Infinity";

        goto label05;

     label04:
        $r15 = "-Infinity";

     label05:
        return $r15;

     label06:
        $b1 = d2 cmpl 0.0;

        if $b1 != 0 goto label07;

        return "0";

     label07:
        $b2 = d2 cmpl 0.0;

        $i48 = (int) $b2;

        if $i48 < 0 goto label08;

        z2 = 0;

        z5 = 0;

        z4 = 0;

        goto label09;

     label08:
        z2 = 1;

        z5 = 1;

        z4 = 1;

        d2 = neg d2;

     label09:
        $d0 = staticinvoke <java.lang.Math: double floor(double)>(d2);

        $l28 = (long) $d0;

        $d1 = (double) $l28;

        $b3 = $d1 cmpl $d0;

        if $b3 != 0 goto label12;

        if z4 == 0 goto label10;

        $l30 = neg $l28;

        goto label11;

     label10:
        $l30 = $l28;

     label11:
        r16 = staticinvoke <java.lang.Long: java.lang.String toString(long,int)>($l30, i0);

        goto label18;

     label12:
        $l4 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        $l5 = $l4 >> 52;

        $i6 = (int) $l5;

        i31 = $i6 & 2047;

        if i31 != 0 goto label13;

        $l27 = $l4 & 4503599627370495L;

        l32 = $l27 << 1;

        goto label14;

     label13:
        $l7 = $l4 & 4503599627370495L;

        l32 = $l7 | 4503599627370496L;

     label14:
        if z5 == 0 goto label15;

        l32 = neg l32;

     label15:
        $i26 = i31 - 1075;

        $r5 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(l32);

        r17 = $r5;

        if $i26 <= 0 goto label16;

        r17 = virtualinvoke $r5.<java.math.BigInteger: java.math.BigInteger shiftLeft(int)>($i26);

        goto label17;

     label16:
        if $i26 >= 0 goto label17;

        $i25 = neg $i26;

        r17 = virtualinvoke $r5.<java.math.BigInteger: java.math.BigInteger shiftRight(int)>($i25);

     label17:
        r16 = virtualinvoke r17.<java.math.BigInteger: java.lang.String toString(int)>(i0);

     label18:
        $b33 = d2 cmpl $d0;

        if $b33 != 0 goto label19;

        return r16;

     label19:
        r18 = newarray (char)[1078];

        i34 = 0;

        d3 = d2 - $d0;

        $l8 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>(d2);

        $l9 = $l8 >> 32;

        i10 = (int) $l9;

        i11 = (int) $l8;

        r6 = newarray (int)[1];

        r7 = newarray (int)[1];

        $r8 = staticinvoke <org.mozilla.javascript.DToA: java.math.BigInteger d2b(double,int[],int[])>(d3, r6, r7);

        $i12 = i10 >>> 20;

        $i13 = $i12 & 2047;

        i35 = neg $i13;

        if i35 != 0 goto label20;

        $i50 = (int) -1;

        i35 = $i50;

     label20:
        $i24 = i35 + 1076;

        i36 = $i24;

        $r9 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(1L);

        r19 = $r9;

        r20 = $r9;

        if i11 != 0 goto label21;

        $i22 = i10 & 1048575;

        if $i22 != 0 goto label21;

        $i23 = i10 & 2145386496;

        if $i23 == 0 goto label21;

        i36 = $i24 + 1;

        r20 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(2L);

     label21:
        $i37 = r6[0];

        $i38 = $i37 + i36;

        r21 = virtualinvoke $r8.<java.math.BigInteger: java.math.BigInteger shiftLeft(int)>($i38);

        $r22 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(1L);

        $r23 = virtualinvoke $r22.<java.math.BigInteger: java.math.BigInteger shiftLeft(int)>(i36);

        $l39 = (long) i0;

        $r24 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l39);

        z3 = 0;

     label22:
        $r25 = virtualinvoke r21.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r24);

        $r26 = virtualinvoke $r25.<java.math.BigInteger: java.math.BigInteger[] divideAndRemainder(java.math.BigInteger)>($r23);

        $r27 = $r26[1];

        r21 = $r27;

        $r28 = $r26[0];

        $i40 = virtualinvoke $r28.<java.math.BigInteger: int intValue()>();

        $c41 = (char) $i40;

        $i51 = (int) $c41;

        i42 = $i51;

        if r19 != r20 goto label23;

        $r14 = virtualinvoke r19.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r24);

        r20 = $r14;

        r19 = $r14;

        goto label24;

     label23:
        r19 = virtualinvoke r19.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r24);

        r20 = virtualinvoke r20.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r24);

     label24:
        $i14 = virtualinvoke $r27.<java.math.BigInteger: int compareTo(java.math.BigInteger)>(r19);

        $r10 = virtualinvoke $r23.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>(r20);

        $i15 = virtualinvoke $r10.<java.math.BigInteger: int signum()>();

        if $i15 > 0 goto label25;

        $i43 = 1;

        goto label26;

     label25:
        $i43 = virtualinvoke $r27.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r10);

     label26:
        i44 = $i43;

        if $i43 != 0 goto label28;

        $i21 = i11 & 1;

        if $i21 != 0 goto label28;

        if $i14 <= 0 goto label27;

        $i52 = (int) $c41;

        i42 = $i52 + 1;

     label27:
        z3 = 1;

        goto label32;

     label28:
        if $i14 < 0 goto label29;

        if $i14 != 0 goto label31;

        $i20 = i11 & 1;

        if $i20 != 0 goto label31;

     label29:
        if i44 <= 0 goto label30;

        $r13 = virtualinvoke $r27.<java.math.BigInteger: java.math.BigInteger shiftLeft(int)>(1);

        r21 = $r13;

        $i19 = virtualinvoke $r13.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r23);

        if $i19 <= 0 goto label30;

        $i53 = (int) $c41;

        i42 = $i53 + 1;

     label30:
        z3 = 1;

        goto label32;

     label31:
        if i44 <= 0 goto label32;

        $i54 = (int) $c41;

        i42 = $i54 + 1;

        z3 = 1;

     label32:
        $i45 = i34;

        i34 = i34 + 1;

        $c46 = staticinvoke <org.mozilla.javascript.DToA: char BASEDIGIT(int)>(i42);

        r18[$i45] = $c46;

        if z3 == 0 goto label22;

        $r31 = new java.lang.StringBuffer;

        $i16 = virtualinvoke r16.<java.lang.String: int length()>();

        $i17 = $i16 + 1;

        $i18 = $i17 + i34;

        specialinvoke $r31.<java.lang.StringBuffer: void <init>(int)>($i18);

        virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r16);

        virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(46);

        virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(char[],int,int)>(r18, 0, i34);

        $r12 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r12;
    }

    static int word0(double)
    {
        int $i2;
        long $l0, $l1;
        double d0;

        d0 := @parameter0: double;

        $l0 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>(d0);

        $l1 = $l0 >> 32;

        $i2 = (int) $l1;

        return $i2;
    }

    static double setWord0(double, int)
    {
        long $l0, $l2, $l3, $l4, l5;
        int i1;
        double d0, $d1;

        d0 := @parameter0: double;

        i1 := @parameter1: int;

        $l0 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>(d0);

        $l2 = (long) i1;

        $l4 = $l2 << 32;

        $l3 = $l0 & 4294967295L;

        l5 = $l4 | $l3;

        $d1 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>(l5);

        return $d1;
    }

    static int word1(double)
    {
        int $i1;
        long $l0;
        double d0;

        d0 := @parameter0: double;

        $l0 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>(d0);

        $i1 = (int) $l0;

        return $i1;
    }

    static java.math.BigInteger pow5mult(java.math.BigInteger, int)
    {
        int i0;
        java.math.BigInteger r0, $r1, $r2, $r3;

        r0 := @parameter0: java.math.BigInteger;

        i0 := @parameter1: int;

        $r1 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(5L);

        $r2 = virtualinvoke $r1.<java.math.BigInteger: java.math.BigInteger pow(int)>(i0);

        $r3 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r2);

        return $r3;
    }

    static boolean roundOff(java.lang.StringBuffer)
    {
        char $c0, $c2;
        java.lang.StringBuffer r0;
        int $i1, $i3, i4, $i6, $i7, $i8;

        r0 := @parameter0: java.lang.StringBuffer;

        i4 = virtualinvoke r0.<java.lang.StringBuffer: int length()>();

     label1:
        if i4 == 0 goto label2;

        $i6 = (int) -1;

        i4 = i4 + $i6;

        $c0 = virtualinvoke r0.<java.lang.StringBuffer: char charAt(int)>(i4);

        $i7 = (int) $c0;

        if $i7 == 57 goto label1;

        $i8 = (int) $c0;

        $i1 = $i8 + 1;

        $c2 = (char) $i1;

        virtualinvoke r0.<java.lang.StringBuffer: void setCharAt(int,char)>(i4, $c2);

        $i3 = i4 + 1;

        virtualinvoke r0.<java.lang.StringBuffer: void setLength(int)>($i3);

        return 0;

     label2:
        virtualinvoke r0.<java.lang.StringBuffer: void setLength(int)>(0);

        return 1;
    }

    static int JS_dtoa(double, int, boolean, int, boolean[], java.lang.StringBuffer)
    {
        java.lang.StringBuffer r6;
        int[] r0, r1;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i22, $i23, $i25, $i26, $i28, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i57, $i58, $i64, i66, i67, $i68, $i69, $i71, $i76, $i77, $i78, $i80, $i81, $i82, $i83, $i85, $i86, $i88, $i93, $i94, $i96, $i97, $i98, $i99, $i101, $i102, $i105, $i107, $i108, $i109, $i110, $i111, $i112, $i115, $i116, $i117, $i118, $i119, $i120, $i121, $i122, $i123, $i124, $i125, $i126, $i127, $i128, $i129, i130, i131, i132, i133, $i135, i136, $i138, $i139, $i140, i141, i142, i143, i144, i145, i146, i147, i148, i149, i150, $i151, $i152, i153, i154, i155, i156, i157, $i158, i159, i160, $i163, $i165, $i166, i168, $i169, $i170, $i171, i172, i173, $i174, i175, i176, $i177, i178, i179, $i180, i181, i182, i183, i184, i185, $i186, $i187, $i190, $i191, $i192, i193, $i194, $i195, i196, i197, $i198, $i199, $i201, $i202, $i204, $i206, $i208, $i210, $i211, $i213, $i214, $i215, $i216, $i217, $i218, $i219, $i220, $i221, $i222, $i223, $i224, $i226, $i228, $i230, $i231, $i232, $i233, $i234, $i235, $i236;
        java.lang.String $r30;
        boolean z0, $z1, $z2, $z3, z4, z5, z6, z7, z8, z9, $z10, z11, z12, z13, z14, z15, z16, z17, z18, z19;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, d21, d22, $d23, $d24, $d25, $d26, $d27, $d28, d29, d30, $d31, $d32, $d33, $d34, d35, d36, d37, $d38, $d39, $d40, $d41, d42;
        byte[] $r35;
        byte $b4, $b44, $b55, $b56, $b60, $b62, $b63, $b65, $b74, $b75, $b90, $b91, $b103, $b104, $b106, $b113, $b114, $b137;
        java.math.BigInteger $r3, $r5, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, r31, r32, $r33, r34, r36, $r38, r39, $r40, $r41;
        long $l61, $l70, $l73, $l87, $l92, $l134, $l161, $l162;
        short $s45, $s225;
        boolean[] r2;
        java.math.BigInteger[] $r4, $r37;
        double[] $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29;
        char $c21, $c24, $c27, $c29, $c59, $c72, $c79, $c84, $c89, $c95, $c100, $c164, $c167, $c188, c189;

        d21 := @parameter0: double;

        i130 := @parameter1: int;

        z0 := @parameter2: boolean;

        i131 := @parameter3: int;

        r2 := @parameter4: boolean[];

        r6 := @parameter5: java.lang.StringBuffer;

        r0 = newarray (int)[1];

        r1 = newarray (int)[1];

        $i0 = staticinvoke <org.mozilla.javascript.DToA: int word0(double)>(d21);

        $i1 = $i0 & -2147483648;

        if $i1 == 0 goto label001;

        r2[0] = 1;

        $i128 = staticinvoke <org.mozilla.javascript.DToA: int word0(double)>(d21);

        $i129 = $i128 & 2147483647;

        d21 = staticinvoke <org.mozilla.javascript.DToA: double setWord0(double,int)>(d21, $i129);

        goto label002;

     label001:
        r2[0] = 0;

     label002:
        $i2 = staticinvoke <org.mozilla.javascript.DToA: int word0(double)>(d21);

        $i3 = $i2 & 2146435072;

        if $i3 != 2146435072 goto label005;

        $i125 = staticinvoke <org.mozilla.javascript.DToA: int word1(double)>(d21);

        if $i125 != 0 goto label003;

        $i126 = staticinvoke <org.mozilla.javascript.DToA: int word0(double)>(d21);

        $i127 = $i126 & 1048575;

        if $i127 != 0 goto label003;

        $r30 = "Infinity";

        goto label004;

     label003:
        $r30 = "NaN";

     label004:
        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r30);

        return 9999;

     label005:
        $b4 = d21 cmpl 0.0;

        if $b4 != 0 goto label006;

        virtualinvoke r6.<java.lang.StringBuffer: void setLength(int)>(0);

        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(48);

        return 1;

     label006:
        $r3 = staticinvoke <org.mozilla.javascript.DToA: java.math.BigInteger d2b(double,int[],int[])>(d21, r0, r1);

        r31 = $r3;

        $i5 = staticinvoke <org.mozilla.javascript.DToA: int word0(double)>(d21);

        $i6 = $i5 >>> 20;

        $i7 = $i6 & 2047;

        if $i7 == 0 goto label007;

        $i122 = staticinvoke <org.mozilla.javascript.DToA: int word0(double)>(d21);

        $i123 = $i122 & 1048575;

        $i124 = $i123 | 1072693248;

        d22 = staticinvoke <org.mozilla.javascript.DToA: double setWord0(double,int)>(d21, $i124);

        i132 = $i7 - 1023;

        z4 = 0;

        goto label010;

     label007:
        $i9 = r1[0];

        $i8 = r0[0];

        $i10 = $i9 + $i8;

        i133 = $i10 + 1074;

        if i133 <= 32 goto label008;

        $i115 = staticinvoke <org.mozilla.javascript.DToA: int word0(double)>(d21);

        $i116 = 64 - i133;

        $i117 = $i115 << $i116;

        $i118 = staticinvoke <org.mozilla.javascript.DToA: int word1(double)>(d21);

        $i119 = i133 - 32;

        $i120 = $i118 >>> $i119;

        $i121 = $i117 | $i120;

        $l134 = (long) $i121;

        goto label009;

     label008:
        $i11 = staticinvoke <org.mozilla.javascript.DToA: int word1(double)>(d21);

        $i12 = 32 - i133;

        $i13 = $i11 << $i12;

        $l134 = (long) $i13;

     label009:
        $d1 = (double) $l134;

        $d0 = (double) $l134;

        $i14 = staticinvoke <org.mozilla.javascript.DToA: int word0(double)>($d0);

        $i15 = $i14 - 32505856;

        d22 = staticinvoke <org.mozilla.javascript.DToA: double setWord0(double,int)>($d1, $i15);

        i132 = i133 - 1075;

        z4 = 1;

     label010:
        $d23 = d22 - 1.5;

        $d24 = $d23 * 0.289529654602168;

        $d25 = $d24 + 0.1760912590558;

        $d26 = (double) i132;

        $d27 = $d26 * 0.301029995663981;

        $d28 = $d25 + $d27;

        $i135 = (int) $d28;

        i136 = $i135;

        $b137 = $d28 cmpg 0.0;

        $i199 = (int) $b137;

        if $i199 >= 0 goto label011;

        $d20 = (double) $i135;

        $b114 = $d28 cmpl $d20;

        if $b114 == 0 goto label011;

        $i201 = (int) -1;

        i136 = $i135 + $i201;

     label011:
        z5 = 1;

        z12 = 1;

        z11 = 1;

        if i136 < 0 goto label013;

        if i136 > 22 goto label013;

        $r29 = <org.mozilla.javascript.DToA: double[] tens>;

        $d19 = $r29[i136];

        $b113 = d21 cmpg $d19;

        $i202 = (int) $b113;

        if $i202 >= 0 goto label012;

        $i204 = (int) -1;

        i136 = i136 + $i204;

     label012:
        z5 = 0;

        z12 = 0;

        z11 = 0;

     label013:
        $i138 = r1[0];

        $i139 = $i138 - i132;

        $i140 = $i139 - 1;

        if $i140 < 0 goto label014;

        i141 = 0;

        i142 = $i140;

        goto label015;

     label014:
        i141 = neg $i140;

        i142 = 0;

     label015:
        if i136 < 0 goto label016;

        i143 = 0;

        i144 = i136;

        i142 = i142 + i136;

        goto label017;

     label016:
        i141 = i141 - i136;

        i143 = neg i136;

        i144 = 0;

     label017:
        if i130 < 0 goto label018;

        if i130 <= 9 goto label019;

     label018:
        i130 = 0;

     label019:
        z6 = 1;

        if i130 <= 5 goto label020;

        $i206 = (int) -4;

        i130 = i130 + $i206;

        z6 = 0;

     label020:
        z7 = 1;

        z19 = 1;

        z18 = 1;

        z17 = 1;

        z16 = 1;

        z15 = 1;

        i145 = 0;

        i146 = 0;

        tableswitch(i130)
        {
            case 0: goto label021;
            case 1: goto label021;
            case 2: goto label022;
            case 3: goto label025;
            case 4: goto label023;
            case 5: goto label026;
            default: goto label027;
        };

     label021:
        $i208 = (int) -1;

        i145 = $i208;

        $i210 = (int) -1;

        i146 = $i210;

        i131 = 0;

        goto label027;

     label022:
        z7 = 0;

        z19 = 0;

        z18 = 0;

        z17 = 0;

        z16 = 0;

        z15 = 0;

     label023:
        if i131 > 0 goto label024;

        i131 = 1;

     label024:
        i145 = i131;

        i146 = i131;

        goto label027;

     label025:
        z7 = 0;

        z19 = 0;

        z18 = 0;

        z17 = 0;

        z16 = 0;

        z15 = 0;

     label026:
        $i16 = i131 + i136;

        $i112 = $i16 + 1;

        i146 = $i112;

        i145 = $i112 - 1;

        if $i112 > 0 goto label027;

     label027:
        z8 = 0;

        z14 = 0;

        z13 = 0;

        if i146 < 0 goto label055;

        if i146 > 14 goto label055;

        if z6 == 0 goto label055;

        i147 = 0;

        d29 = d21;

        i66 = i136;

        i67 = i146;

        i148 = 2;

        if i136 <= 0 goto label031;

        $r26 = <org.mozilla.javascript.DToA: double[] tens>;

        $i109 = i136 & 15;

        d30 = $r26[$i109];

        i149 = i136 >> 4;

        $i110 = i149 & 16;

        if $i110 == 0 goto label028;

        i149 = i149 & 15;

        $r28 = <org.mozilla.javascript.DToA: double[] bigtens>;

        $d18 = $r28[4];

        d21 = d21 / $d18;

        i148 = 3;

     label028:
        if i149 == 0 goto label030;

        $i111 = i149 & 1;

        if $i111 == 0 goto label029;

        i148 = i148 + 1;

        $r27 = <org.mozilla.javascript.DToA: double[] bigtens>;

        $d17 = $r27[i147];

        d30 = d30 * $d17;

     label029:
        i149 = i149 >> 1;

        i147 = i147 + 1;

        goto label028;

     label030:
        d21 = d21 / d30;

        goto label034;

     label031:
        $i68 = neg i136;

        if $i68 == 0 goto label034;

        $r24 = <org.mozilla.javascript.DToA: double[] tens>;

        $i107 = $i68 & 15;

        $d15 = $r24[$i107];

        d21 = d21 * $d15;

        i150 = $i68 >> 4;

     label032:
        if i150 == 0 goto label034;

        $i108 = i150 & 1;

        if $i108 == 0 goto label033;

        i148 = i148 + 1;

        $r25 = <org.mozilla.javascript.DToA: double[] bigtens>;

        $d16 = $r25[i147];

        d21 = d21 * $d16;

     label033:
        i150 = i150 >> 1;

        i147 = i147 + 1;

        goto label032;

     label034:
        if z11 == 0 goto label036;

        $b106 = d21 cmpg 1.0;

        $i211 = (int) $b106;

        if $i211 >= 0 goto label036;

        if i146 <= 0 goto label036;

        if i145 > 0 goto label035;

        z8 = 1;

        z14 = 1;

        z13 = 1;

        goto label036;

     label035:
        i146 = i145;

        $i213 = (int) -1;

        i136 = i136 + $i213;

        d21 = d21 * 10.0;

        i148 = i148 + 1;

     label036:
        $d31 = (double) i148;

        $d32 = $d31 * d21;

        $d33 = $d32 + 7.0;

        $i151 = staticinvoke <org.mozilla.javascript.DToA: int word0(double)>($d33);

        $i152 = $i151 - 54525952;

        $d34 = staticinvoke <org.mozilla.javascript.DToA: double setWord0(double,int)>($d33, $i152);

        if i146 != 0 goto label039;

        d21 = d21 - 5.0;

        $b103 = d21 cmpl $d34;

        $i214 = (int) $b103;

        if $i214 <= 0 goto label037;

        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(49);

        i153 = i136 + 1;

        $i105 = i153 + 1;

        return $i105;

     label037:
        $d14 = neg $d34;

        $b104 = d21 cmpg $d14;

        $i215 = (int) $b104;

        if $i215 >= 0 goto label038;

        virtualinvoke r6.<java.lang.StringBuffer: void setLength(int)>(0);

        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(48);

        return 1;

     label038:
        z8 = 1;

        z14 = 1;

        z13 = 1;

     label039:
        if z14 != 0 goto label054;

        z8 = 1;

        z13 = 1;

        if z16 == 0 goto label047;

        $r23 = <org.mozilla.javascript.DToA: double[] tens>;

        $i86 = i146 - 1;

        $d9 = $r23[$i86];

        $d10 = 0.5 / $d9;

        d35 = $d10 - $d34;

        i154 = 0;

     label040:
        $l92 = (long) d21;

        $d11 = (double) $l92;

        $d13 = d21 - $d11;

        d21 = $d13;

        $l87 = 48L + $l92;

        $i88 = (int) $l87;

        $c89 = (char) $i88;

        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c89);

        $b90 = $d13 cmpg d35;

        $i216 = (int) $b90;

        if $i216 >= 0 goto label041;

        $i102 = i136 + 1;

        return $i102;

     label041:
        $d12 = 1.0 - $d13;

        $b91 = $d12 cmpg d35;

        $i217 = (int) $b91;

        if $i217 >= 0 goto label045;

     label042:
        $i93 = virtualinvoke r6.<java.lang.StringBuffer: int length()>();

        $i94 = $i93 - 1;

        $c95 = virtualinvoke r6.<java.lang.StringBuffer: char charAt(int)>($i94);

        i155 = $c95;

        $i96 = virtualinvoke r6.<java.lang.StringBuffer: int length()>();

        $i97 = $i96 - 1;

        virtualinvoke r6.<java.lang.StringBuffer: void setLength(int)>($i97);

        $i218 = (int) $c95;

        if $i218 == 57 goto label043;

        goto label044;

     label043:
        $i98 = virtualinvoke r6.<java.lang.StringBuffer: int length()>();

        if $i98 != 0 goto label042;

        i136 = i136 + 1;

        i155 = 48;

        goto label044;

     label044:
        $i99 = i155 + 1;

        $c100 = (char) $i99;

        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c100);

        $i101 = i136 + 1;

        return $i101;

     label045:
        i154 = i154 + 1;

        if i154 < i146 goto label046;

        goto label054;

     label046:
        d35 = d35 * 10.0;

        d21 = $d13 * 10.0;

        goto label040;

     label047:
        $r22 = <org.mozilla.javascript.DToA: double[] tens>;

        $i69 = i146 - 1;

        $d4 = $r22[$i69];

        d36 = $d34 * $d4;

        i156 = 1;

     label048:
        $l73 = (long) d21;

        $d5 = (double) $l73;

        $d6 = d21 - $d5;

        d21 = $d6;

        $l70 = 48L + $l73;

        $i71 = (int) $l70;

        $c72 = (char) $i71;

        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c72);

        if i156 != i146 goto label053;

        $d7 = 0.5 + d36;

        $b74 = $d6 cmpl $d7;

        $i219 = (int) $b74;

        if $i219 <= 0 goto label052;

     label049:
        $i77 = virtualinvoke r6.<java.lang.StringBuffer: int length()>();

        $i78 = $i77 - 1;

        $c79 = virtualinvoke r6.<java.lang.StringBuffer: char charAt(int)>($i78);

        i157 = $c79;

        $i80 = virtualinvoke r6.<java.lang.StringBuffer: int length()>();

        $i81 = $i80 - 1;

        virtualinvoke r6.<java.lang.StringBuffer: void setLength(int)>($i81);

        $i220 = (int) $c79;

        if $i220 == 57 goto label050;

        goto label051;

     label050:
        $i82 = virtualinvoke r6.<java.lang.StringBuffer: int length()>();

        if $i82 != 0 goto label049;

        i136 = i136 + 1;

        i157 = 48;

        goto label051;

     label051:
        $i83 = i157 + 1;

        $c84 = (char) $i83;

        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c84);

        $i85 = i136 + 1;

        return $i85;

     label052:
        $d8 = 0.5 - d36;

        $b75 = $d6 cmpg $d8;

        $i221 = (int) $b75;

        if $i221 >= 0 goto label054;

        staticinvoke <org.mozilla.javascript.DToA: void stripTrailingZeroes(java.lang.StringBuffer)>(r6);

        $i76 = i136 + 1;

        return $i76;

     label053:
        i156 = i156 + 1;

        d21 = $d6 * 10.0;

        goto label048;

     label054:
        if z13 == 0 goto label055;

        virtualinvoke r6.<java.lang.StringBuffer: void setLength(int)>(0);

        d21 = d29;

        i136 = i66;

        i146 = i67;

     label055:
        $i158 = r0[0];

        if $i158 < 0 goto label066;

        if i136 > 14 goto label066;

        $r21 = <org.mozilla.javascript.DToA: double[] tens>;

        d37 = $r21[i136];

        if i131 >= 0 goto label058;

        if i146 > 0 goto label058;

        if i146 < 0 goto label056;

        $d2 = 5.0 * d37;

        $b63 = d21 cmpg $d2;

        $i222 = (int) $b63;

        if $i222 < 0 goto label056;

        if z0 != 0 goto label057;

        $d3 = 5.0 * d37;

        $b65 = d21 cmpl $d3;

        if $b65 != 0 goto label057;

     label056:
        virtualinvoke r6.<java.lang.StringBuffer: void setLength(int)>(0);

        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(48);

        return 1;

     label057:
        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(49);

        i159 = i136 + 1;

        $i64 = i159 + 1;

        return $i64;

     label058:
        i160 = 1;

     label059:
        $d38 = d21 / d37;

        $l161 = (long) $d38;

        $d39 = (double) $l161;

        $d40 = $d39 * d37;

        $d41 = d21 - $d40;

        $l162 = 48L + $l161;

        $i163 = (int) $l162;

        $c164 = (char) $i163;

        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c164);

        if i160 != i146 goto label063;

        d42 = $d41 + $d41;

        $b56 = d42 cmpl d37;

        $i223 = (int) $b56;

        if $i223 > 0 goto label060;

        $b60 = d42 cmpl d37;

        if $b60 != 0 goto label065;

        $l61 = $l161 & 1L;

        $b62 = $l61 cmp 0L;

        if $b62 != 0 goto label060;

        if z0 == 0 goto label065;

     label060:
        $i165 = virtualinvoke r6.<java.lang.StringBuffer: int length()>();

        $i166 = $i165 - 1;

        $c167 = virtualinvoke r6.<java.lang.StringBuffer: char charAt(int)>($i166);

        i168 = $c167;

        $i169 = virtualinvoke r6.<java.lang.StringBuffer: int length()>();

        $i170 = $i169 - 1;

        virtualinvoke r6.<java.lang.StringBuffer: void setLength(int)>($i170);

        $i224 = (int) $c167;

        if $i224 == 57 goto label061;

        goto label062;

     label061:
        $i57 = virtualinvoke r6.<java.lang.StringBuffer: int length()>();

        if $i57 != 0 goto label060;

        i136 = i136 + 1;

        i168 = 48;

        goto label062;

     label062:
        $i58 = i168 + 1;

        $c59 = (char) $i58;

        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c59);

        goto label065;

     label063:
        d21 = $d41 * 10.0;

        $b55 = d21 cmpl 0.0;

        if $b55 != 0 goto label064;

        goto label065;

     label064:
        i160 = i160 + 1;

        goto label059;

     label065:
        $i171 = i136 + 1;

        return $i171;

     label066:
        i172 = i141;

        i173 = i143;

        r32 = null;

        if z19 == 0 goto label073;

        if i130 >= 2 goto label069;

        if z4 == 0 goto label067;

        $i54 = r0[0];

        $i174 = $i54 + 1075;

        goto label068;

     label067:
        $i53 = r1[0];

        $i174 = 54 - $i53;

     label068:
        i175 = $i174;

        goto label072;

     label069:
        i176 = i146 - 1;

        if i143 < i176 goto label070;

        i173 = i143 - i176;

        goto label071;

     label070:
        $i52 = i176 - i143;

        i144 = i144 + $i52;

        i143 = i143 + $i52;

        i173 = 0;

     label071:
        i175 = i146;

        if i146 >= 0 goto label072;

        i172 = i172 - i146;

        i175 = 0;

     label072:
        i141 = i141 + i175;

        i142 = i142 + i175;

        r32 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(1L);

     label073:
        if i172 <= 0 goto label076;

        if i142 <= 0 goto label076;

        if i172 >= i142 goto label074;

        $i177 = i172;

        goto label075;

     label074:
        $i177 = i142;

     label075:
        i141 = i141 - $i177;

        i172 = i172 - $i177;

        i142 = i142 - $i177;

     label076:
        if i143 <= 0 goto label079;

        if z18 == 0 goto label078;

        if i173 <= 0 goto label077;

        $r20 = staticinvoke <org.mozilla.javascript.DToA: java.math.BigInteger pow5mult(java.math.BigInteger,int)>(r32, i173);

        r32 = $r20;

        r31 = virtualinvoke $r20.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r3);

     label077:
        $i51 = i143 - i173;

        if $i51 == 0 goto label079;

        r31 = staticinvoke <org.mozilla.javascript.DToA: java.math.BigInteger pow5mult(java.math.BigInteger,int)>(r31, $i51);

        goto label079;

     label078:
        r31 = staticinvoke <org.mozilla.javascript.DToA: java.math.BigInteger pow5mult(java.math.BigInteger,int)>($r3, i143);

     label079:
        $r33 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(1L);

        r34 = $r33;

        if i144 <= 0 goto label080;

        r34 = staticinvoke <org.mozilla.javascript.DToA: java.math.BigInteger pow5mult(java.math.BigInteger,int)>($r33, i144);

     label080:
        z9 = 0;

        if i130 >= 2 goto label081;

        $i46 = staticinvoke <org.mozilla.javascript.DToA: int word1(double)>(d21);

        if $i46 != 0 goto label081;

        $i47 = staticinvoke <org.mozilla.javascript.DToA: int word0(double)>(d21);

        $i48 = $i47 & 1048575;

        if $i48 != 0 goto label081;

        $i49 = staticinvoke <org.mozilla.javascript.DToA: int word0(double)>(d21);

        $i50 = $i49 & 2145386496;

        if $i50 == 0 goto label081;

        i141 = i141 + 1;

        i142 = i142 + 1;

        z9 = 1;

     label081:
        $r35 = virtualinvoke r34.<java.math.BigInteger: byte[] toByteArray()>();

        i178 = 0;

        i179 = 0;

     label082:
        if i179 >= 4 goto label084;

        i178 = i178 << 8;

        $i43 = lengthof $r35;

        if i179 >= $i43 goto label083;

        $b44 = $r35[i179];

        $s225 = (short) $b44;

        $s45 = $s225 & 255;

        $i226 = (int) $s45;

        i178 = i178 | $i226;

     label083:
        i179 = i179 + 1;

        goto label082;

     label084:
        if i144 == 0 goto label085;

        $i42 = staticinvoke <org.mozilla.javascript.DToA: int hi0bits(int)>(i178);

        $i180 = 32 - $i42;

        goto label086;

     label085:
        $i180 = 1;

     label086:
        $i17 = $i180 + i142;

        $i18 = $i17 & 31;

        i181 = $i18;

        if $i18 == 0 goto label087;

        i181 = 32 - $i18;

     label087:
        if i181 <= 4 goto label088;

        $i228 = (int) -4;

        i182 = i181 + $i228;

        i141 = i141 + i182;

        i172 = i172 + i182;

        i142 = i142 + i182;

        goto label089;

     label088:
        if i181 >= 4 goto label089;

        i183 = i181 + 28;

        i141 = i141 + i183;

        i172 = i172 + i183;

        i142 = i142 + i183;

     label089:
        if i141 <= 0 goto label090;

        r31 = virtualinvoke r31.<java.math.BigInteger: java.math.BigInteger shiftLeft(int)>(i141);

     label090:
        if i142 <= 0 goto label091;

        r34 = virtualinvoke r34.<java.math.BigInteger: java.math.BigInteger shiftLeft(int)>(i142);

     label091:
        if z12 == 0 goto label093;

        $i41 = virtualinvoke r31.<java.math.BigInteger: int compareTo(java.math.BigInteger)>(r34);

        if $i41 >= 0 goto label093;

        $i230 = (int) -1;

        i136 = i136 + $i230;

        $r18 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(10L);

        r31 = virtualinvoke r31.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r18);

        if z15 == 0 goto label092;

        $r19 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(10L);

        r32 = virtualinvoke r32.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r19);

     label092:
        i146 = i145;

     label093:
        if i146 > 0 goto label096;

        if i130 <= 2 goto label096;

        if i146 < 0 goto label094;

        $r16 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(5L);

        $r17 = virtualinvoke r34.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r16);

        $i39 = virtualinvoke r31.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r17);

        if $i39 < 0 goto label094;

        if $i39 != 0 goto label095;

        if z0 != 0 goto label095;

     label094:
        virtualinvoke r6.<java.lang.StringBuffer: void setLength(int)>(0);

        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(48);

        return 1;

     label095:
        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(49);

        i184 = i136 + 1;

        $i40 = i184 + 1;

        return $i40;

     label096:
        if z17 == 0 goto label117;

        if i172 <= 0 goto label097;

        r32 = virtualinvoke r32.<java.math.BigInteger: java.math.BigInteger shiftLeft(int)>(i172);

     label097:
        r36 = r32;

        if z9 == 0 goto label098;

        r32 = virtualinvoke r32.<java.math.BigInteger: java.math.BigInteger shiftLeft(int)>(1);

     label098:
        i185 = 1;

     label099:
        $r37 = virtualinvoke r31.<java.math.BigInteger: java.math.BigInteger[] divideAndRemainder(java.math.BigInteger)>(r34);

        $r38 = $r37[1];

        r39 = $r38;

        $r40 = $r37[0];

        $i186 = virtualinvoke $r40.<java.math.BigInteger: int intValue()>();

        $i187 = $i186 + 48;

        $c188 = (char) $i187;

        c189 = $c188;

        $i190 = virtualinvoke $r38.<java.math.BigInteger: int compareTo(java.math.BigInteger)>(r36);

        $r41 = virtualinvoke r34.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>(r32);

        $i191 = virtualinvoke $r41.<java.math.BigInteger: int signum()>();

        if $i191 > 0 goto label100;

        $i192 = 1;

        goto label101;

     label100:
        $i192 = virtualinvoke $r38.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r41);

     label101:
        i193 = $i192;

        if $i192 != 0 goto label105;

        if i130 != 0 goto label105;

        $i34 = staticinvoke <org.mozilla.javascript.DToA: int word1(double)>(d21);

        $i35 = $i34 & 1;

        if $i35 != 0 goto label105;

        $i231 = (int) $c188;

        if $i231 != 57 goto label103;

        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(57);

        $z3 = staticinvoke <org.mozilla.javascript.DToA: boolean roundOff(java.lang.StringBuffer)>(r6);

        if $z3 == 0 goto label102;

        i136 = i136 + 1;

        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(49);

     label102:
        $i38 = i136 + 1;

        return $i38;

     label103:
        if $i190 <= 0 goto label104;

        $i232 = (int) $c188;

        $i37 = $i232 + 1;

        c189 = (char) $i37;

     label104:
        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c189);

        $i36 = i136 + 1;

        return $i36;

     label105:
        if $i190 < 0 goto label106;

        if $i190 != 0 goto label110;

        if i130 != 0 goto label110;

        $i32 = staticinvoke <org.mozilla.javascript.DToA: int word1(double)>(d21);

        $i33 = $i32 & 1;

        if $i33 != 0 goto label110;

     label106:
        if i193 <= 0 goto label109;

        $r10 = virtualinvoke $r38.<java.math.BigInteger: java.math.BigInteger shiftLeft(int)>(1);

        $i25 = virtualinvoke $r10.<java.math.BigInteger: int compareTo(java.math.BigInteger)>(r34);

        if $i25 > 0 goto label107;

        if $i25 != 0 goto label109;

        $c27 = $c188 & 1;

        if $c27 == 1 goto label107;

        if z0 == 0 goto label109;

     label107:
        $i233 = (int) $c188;

        $i194 = $i233 + 1;

        c189 = (char) $i194;

        $i234 = (int) $c188;

        if $i234 != 57 goto label109;

        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(57);

        $z1 = staticinvoke <org.mozilla.javascript.DToA: boolean roundOff(java.lang.StringBuffer)>(r6);

        if $z1 == 0 goto label108;

        i136 = i136 + 1;

        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(49);

     label108:
        $i26 = i136 + 1;

        return $i26;

     label109:
        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c189);

        $i195 = i136 + 1;

        return $i195;

     label110:
        if i193 <= 0 goto label113;

        $i235 = (int) $c188;

        if $i235 != 57 goto label112;

        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(57);

        $z2 = staticinvoke <org.mozilla.javascript.DToA: boolean roundOff(java.lang.StringBuffer)>(r6);

        if $z2 == 0 goto label111;

        i136 = i136 + 1;

        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(49);

     label111:
        $i31 = i136 + 1;

        return $i31;

     label112:
        $i236 = (int) $c188;

        $i28 = $i236 + 1;

        $c29 = (char) $i28;

        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c29);

        $i30 = i136 + 1;

        return $i30;

     label113:
        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c188);

        if i185 != i146 goto label114;

        goto label120;

     label114:
        $r11 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(10L);

        r31 = virtualinvoke $r38.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r11);

        if r36 != r32 goto label115;

        $r14 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(10L);

        $r15 = virtualinvoke r32.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r14);

        r32 = $r15;

        r36 = $r15;

        goto label116;

     label115:
        $r12 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(10L);

        r36 = virtualinvoke r36.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r12);

        $r13 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(10L);

        r32 = virtualinvoke r32.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r13);

     label116:
        i185 = i185 + 1;

        goto label099;

     label117:
        i196 = 1;

     label118:
        $r4 = virtualinvoke r31.<java.math.BigInteger: java.math.BigInteger[] divideAndRemainder(java.math.BigInteger)>(r34);

        $r8 = $r4[1];

        r39 = $r8;

        $r5 = $r4[0];

        $i19 = virtualinvoke $r5.<java.math.BigInteger: int intValue()>();

        $i20 = $i19 + 48;

        $c21 = (char) $i20;

        c189 = $c21;

        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c21);

        if i196 < i146 goto label119;

        goto label120;

     label119:
        $r7 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(10L);

        r31 = virtualinvoke $r8.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r7);

        i196 = i196 + 1;

        goto label118;

     label120:
        $r9 = virtualinvoke r39.<java.math.BigInteger: java.math.BigInteger shiftLeft(int)>(1);

        $i22 = virtualinvoke $r9.<java.math.BigInteger: int compareTo(java.math.BigInteger)>(r34);

        if $i22 > 0 goto label121;

        if $i22 != 0 goto label122;

        $c24 = c189 & 1;

        if $c24 == 1 goto label121;

        if z0 == 0 goto label122;

     label121:
        $z10 = staticinvoke <org.mozilla.javascript.DToA: boolean roundOff(java.lang.StringBuffer)>(r6);

        if $z10 == 0 goto label123;

        i197 = i136 + 1;

        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(49);

        $i23 = i197 + 1;

        return $i23;

     label122:
        staticinvoke <org.mozilla.javascript.DToA: void stripTrailingZeroes(java.lang.StringBuffer)>(r6);

     label123:
        $i198 = i136 + 1;

        return $i198;
    }

    private static void stripTrailingZeroes(java.lang.StringBuffer)
    {
        java.lang.StringBuffer r0;
        int $i0, $i1, $i3, i4, $i5;
        char $c2;

        r0 := @parameter0: java.lang.StringBuffer;

        i4 = virtualinvoke r0.<java.lang.StringBuffer: int length()>();

     label1:
        $i0 = i4;

        $i3 = i4 - 1;

        i4 = $i3;

        if $i0 <= 0 goto label2;

        $c2 = virtualinvoke r0.<java.lang.StringBuffer: char charAt(int)>($i3);

        $i5 = (int) $c2;

        if $i5 != 48 goto label2;

        goto label1;

     label2:
        $i1 = $i3 + 1;

        virtualinvoke r0.<java.lang.StringBuffer: void setLength(int)>($i1);

        return;
    }

    static void JS_dtostr(java.lang.StringBuffer, int, int, double)
    {
        byte $b16, $b17;
        int[] $r2;
        boolean $z0, z1, $z2;
        java.lang.StringBuffer r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, $i15, i18, i19, i20, i21, $i22, $i23, $i25, $i27;
        double d0;
        boolean[] r0;

        r1 := @parameter0: java.lang.StringBuffer;

        i18 := @parameter1: int;

        i0 := @parameter2: int;

        d0 := @parameter3: double;

        r0 = newarray (boolean)[1];

        if i18 != 2 goto label02;

        $b16 = d0 cmpl 1.0E21;

        $i22 = (int) $b16;

        if $i22 >= 0 goto label01;

        $b17 = d0 cmpg -1.0E21;

        $i23 = (int) $b17;

        if $i23 > 0 goto label02;

     label01:
        i18 = 0;

     label02:
        $r2 = <org.mozilla.javascript.DToA: int[] dtoaModes>;

        $i1 = $r2[i18];

        if i18 < 2 goto label03;

        $z0 = 1;

        goto label04;

     label03:
        $z0 = 0;

     label04:
        $i2 = staticinvoke <org.mozilla.javascript.DToA: int JS_dtoa(double,int,boolean,int,boolean[],java.lang.StringBuffer)>(d0, $i1, $z0, i0, r0, r1);

        $i3 = virtualinvoke r1.<java.lang.StringBuffer: int length()>();

        i19 = $i3;

        if $i2 == 9999 goto label23;

        z1 = 0;

        i20 = 0;

        tableswitch(i18)
        {
            case 0: goto label05;
            case 1: goto label11;
            case 2: goto label08;
            case 3: goto label10;
            case 4: goto label12;
            default: goto label14;
        };

     label05:
        $i25 = (int) -5;

        if $i2 < $i25 goto label06;

        if $i2 <= 21 goto label07;

     label06:
        z1 = 1;

        goto label14;

     label07:
        i20 = $i2;

        goto label14;

     label08:
        if i0 < 0 goto label09;

        i20 = $i2 + i0;

        goto label14;

     label09:
        i20 = $i2;

        goto label14;

     label10:
        i20 = i0;

     label11:
        z1 = 1;

        goto label14;

     label12:
        i20 = i0;

        $i27 = (int) -5;

        if $i2 < $i27 goto label13;

        if $i2 <= i0 goto label14;

     label13:
        z1 = 1;

     label14:
        if $i3 >= i20 goto label16;

        i14 = i20;

        i19 = i20;

     label15:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(48);

        $i15 = virtualinvoke r1.<java.lang.StringBuffer: int length()>();

        if $i15 != i14 goto label15;

     label16:
        if z1 == 0 goto label19;

        if i19 == 1 goto label17;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer insert(int,char)>(1, 46);

     label17:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(101);

        $i12 = $i2 - 1;

        if $i12 < 0 goto label18;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(43);

     label18:
        $i13 = $i2 - 1;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i13);

        goto label23;

     label19:
        if $i2 == i19 goto label23;

        if $i2 <= 0 goto label20;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer insert(int,char)>($i2, 46);

        goto label23;

     label20:
        i21 = 0;

     label21:
        $i11 = 1 - $i2;

        if i21 >= $i11 goto label22;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer insert(int,char)>(0, 48);

        i21 = i21 + 1;

        goto label21;

     label22:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer insert(int,char)>(1, 46);

     label23:
        $z2 = r0[0];

        if $z2 == 0 goto label26;

        $i4 = staticinvoke <org.mozilla.javascript.DToA: int word0(double)>(d0);

        if $i4 != -2147483648 goto label24;

        $i10 = staticinvoke <org.mozilla.javascript.DToA: int word1(double)>(d0);

        if $i10 == 0 goto label26;

     label24:
        $i5 = staticinvoke <org.mozilla.javascript.DToA: int word0(double)>(d0);

        $i6 = $i5 & 2146435072;

        if $i6 != 2146435072 goto label25;

        $i7 = staticinvoke <org.mozilla.javascript.DToA: int word1(double)>(d0);

        if $i7 != 0 goto label26;

        $i8 = staticinvoke <org.mozilla.javascript.DToA: int word0(double)>(d0);

        $i9 = $i8 & 1048575;

        if $i9 != 0 goto label26;

     label25:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer insert(int,char)>(0, 45);

     label26:
        return;
    }

    static void <clinit>()
    {
        double[] $r0, $r1;
        int[] $r2;

        <org.mozilla.javascript.DToA: int n_bigtens> = 5;

        <org.mozilla.javascript.DToA: int Int_max> = 14;

        <org.mozilla.javascript.DToA: int Frac_mask1> = 1048575;

        <org.mozilla.javascript.DToA: int Bletch> = 16;

        <org.mozilla.javascript.DToA: int Quick_max> = 14;

        <org.mozilla.javascript.DToA: int Ten_pmax> = 22;

        <org.mozilla.javascript.DToA: int Exp_11> = 1072693248;

        <org.mozilla.javascript.DToA: int Sign_bit> = -2147483648;

        <org.mozilla.javascript.DToA: int Log2P> = 1;

        <org.mozilla.javascript.DToA: int Bndry_mask> = 1048575;

        <org.mozilla.javascript.DToA: int Exp_mask_shifted> = 2047;

        <org.mozilla.javascript.DToA: int Exp_mask> = 2146435072;

        <org.mozilla.javascript.DToA: int Exp_shift1> = 20;

        <org.mozilla.javascript.DToA: int P> = 53;

        <org.mozilla.javascript.DToA: int Bias> = 1023;

        <org.mozilla.javascript.DToA: long Exp_msk1L> = 4503599627370496L;

        <org.mozilla.javascript.DToA: int Exp_shiftL> = 52;

        <org.mozilla.javascript.DToA: long Frac_maskL> = 4503599627370495L;

        <org.mozilla.javascript.DToA: int Exp_msk1> = 1048576;

        <org.mozilla.javascript.DToA: int Exp_shift> = 20;

        <org.mozilla.javascript.DToA: int Frac_mask> = 1048575;

        <org.mozilla.javascript.DToA: int DTOSTR_PRECISION> = 4;

        <org.mozilla.javascript.DToA: int DTOSTR_EXPONENTIAL> = 3;

        <org.mozilla.javascript.DToA: int DTOSTR_FIXED> = 2;

        <org.mozilla.javascript.DToA: int DTOSTR_STANDARD_EXPONENTIAL> = 1;

        <org.mozilla.javascript.DToA: int DTOSTR_STANDARD> = 0;

        <org.mozilla.javascript.DToA: int DTOBASESTR_BUFFER_SIZE> = 1078;

        $r0 = newarray (double)[23];

        $r0[0] = 1.0;

        $r0[1] = 10.0;

        $r0[2] = 100.0;

        $r0[3] = 1000.0;

        $r0[4] = 10000.0;

        $r0[5] = 100000.0;

        $r0[6] = 1000000.0;

        $r0[7] = 1.0E7;

        $r0[8] = 1.0E8;

        $r0[9] = 1.0E9;

        $r0[10] = 1.0E10;

        $r0[11] = 1.0E11;

        $r0[12] = 1.0E12;

        $r0[13] = 1.0E13;

        $r0[14] = 1.0E14;

        $r0[15] = 1.0E15;

        $r0[16] = 1.0E16;

        $r0[17] = 1.0E17;

        $r0[18] = 1.0E18;

        $r0[19] = 1.0E19;

        $r0[20] = 1.0E20;

        $r0[21] = 1.0E21;

        $r0[22] = 1.0E22;

        <org.mozilla.javascript.DToA: double[] tens> = $r0;

        $r1 = newarray (double)[5];

        $r1[0] = 1.0E16;

        $r1[1] = 1.0E32;

        $r1[2] = 1.0E64;

        $r1[3] = 1.0E128;

        $r1[4] = 1.0E256;

        <org.mozilla.javascript.DToA: double[] bigtens> = $r1;

        $r2 = newarray (int)[5];

        $r2[0] = 0;

        $r2[1] = 0;

        $r2[2] = 3;

        $r2[3] = 2;

        $r2[4] = 2;

        <org.mozilla.javascript.DToA: int[] dtoaModes> = $r2;

        return;
    }
}
