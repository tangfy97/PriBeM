public class org.apache.tika.parser.microsoft.TNEFParser extends org.apache.tika.parser.AbstractParser
{
    private static final long serialVersionUID;
    private static final java.util.Set SUPPORTED_TYPES;

    public void <init>()
    {
        org.apache.tika.parser.microsoft.TNEFParser r0;

        r0 := @this: org.apache.tika.parser.microsoft.TNEFParser;

        specialinvoke r0.<org.apache.tika.parser.AbstractParser: void <init>()>();

        return;
    }

    public java.util.Set getSupportedTypes(org.apache.tika.parser.ParseContext)
    {
        java.util.Set $r0;
        org.apache.tika.parser.microsoft.TNEFParser r1;
        org.apache.tika.parser.ParseContext r2;

        r1 := @this: org.apache.tika.parser.microsoft.TNEFParser;

        r2 := @parameter0: org.apache.tika.parser.ParseContext;

        $r0 = <org.apache.tika.parser.microsoft.TNEFParser: java.util.Set SUPPORTED_TYPES>;

        return $r0;
    }

    public void parse(java.io.InputStream, org.xml.sax.ContentHandler, org.apache.tika.metadata.Metadata, org.apache.tika.parser.ParseContext) throws java.io.IOException, org.xml.sax.SAXException, org.apache.tika.exception.TikaException
    {
        byte[] $r15, $r26;
        org.apache.poi.hmef.attribute.MAPIAttribute $r21;
        org.apache.tika.metadata.Metadata r16;
        org.apache.tika.metadata.Property $r17;
        boolean $z0, $z1;
        org.apache.tika.extractor.ParsingEmbeddedDocumentExtractor $r18;
        org.apache.poi.hsmf.datatypes.MAPIProperty $r20;
        java.util.List $r23;
        org.apache.tika.parser.ParseContext r0;
        java.lang.StringBuilder $r12, $r13, $r14;
        org.apache.tika.extractor.EmbeddedDocumentExtractor r2, r19;
        org.apache.tika.parser.microsoft.TNEFParser r10;
        int $i0, $i1, $i2;
        java.lang.String $r5, $r8, $r9, r25;
        org.xml.sax.ContentHandler r11;
        org.apache.poi.hmef.attribute.MAPIRtfAttribute r22;
        java.util.Iterator $r24;
        org.apache.poi.hmef.Attachment r7;
        java.lang.Object $r1, $r6;
        org.apache.poi.hmef.HMEFMessage $r3;
        java.io.InputStream r4;

        r10 := @this: org.apache.tika.parser.microsoft.TNEFParser;

        r4 := @parameter0: java.io.InputStream;

        r11 := @parameter1: org.xml.sax.ContentHandler;

        r16 := @parameter2: org.apache.tika.metadata.Metadata;

        r0 := @parameter3: org.apache.tika.parser.ParseContext;

        $r1 = virtualinvoke r0.<org.apache.tika.parser.ParseContext: java.lang.Object get(java.lang.Class)>(class "Lorg/apache/tika/extractor/EmbeddedDocumentExtractor;");

        r2 = (org.apache.tika.extractor.EmbeddedDocumentExtractor) $r1;

        if r2 != null goto label01;

        $r18 = new org.apache.tika.extractor.ParsingEmbeddedDocumentExtractor;

        specialinvoke $r18.<org.apache.tika.extractor.ParsingEmbeddedDocumentExtractor: void <init>(org.apache.tika.parser.ParseContext)>(r0);

        r19 = $r18;

        goto label02;

     label01:
        r19 = r2;

     label02:
        $r3 = new org.apache.poi.hmef.HMEFMessage;

        specialinvoke $r3.<org.apache.poi.hmef.HMEFMessage: void <init>(java.io.InputStream)>(r4);

        $r5 = virtualinvoke $r3.<org.apache.poi.hmef.HMEFMessage: java.lang.String getSubject()>();

        if $r5 == null goto label03;

        $i2 = virtualinvoke $r5.<java.lang.String: int length()>();

        if $i2 <= 0 goto label03;

        $r17 = <org.apache.tika.metadata.TikaCoreProperties: org.apache.tika.metadata.Property TRANSITION_SUBJECT_TO_DC_TITLE>;

        virtualinvoke r16.<org.apache.tika.metadata.Metadata: void set(org.apache.tika.metadata.Property,java.lang.String)>($r17, $r5);

     label03:
        $r20 = <org.apache.poi.hsmf.datatypes.MAPIProperty: org.apache.poi.hsmf.datatypes.MAPIProperty RTF_COMPRESSED>;

        $r21 = virtualinvoke $r3.<org.apache.poi.hmef.HMEFMessage: org.apache.poi.hmef.attribute.MAPIAttribute getMessageMAPIAttribute(org.apache.poi.hsmf.datatypes.MAPIProperty)>($r20);

        if $r21 == null goto label04;

        $z0 = $r21 instanceof org.apache.poi.hmef.attribute.MAPIRtfAttribute;

        if $z0 == 0 goto label04;

        r22 = (org.apache.poi.hmef.attribute.MAPIRtfAttribute) $r21;

        $r15 = virtualinvoke r22.<org.apache.poi.hmef.attribute.MAPIRtfAttribute: byte[] getData()>();

        specialinvoke r10.<org.apache.tika.parser.microsoft.TNEFParser: void handleEmbedded(java.lang.String,java.lang.String,byte[],org.apache.tika.extractor.EmbeddedDocumentExtractor,org.xml.sax.ContentHandler)>("message.rtf", "application/rtf", $r15, r19, r11);

     label04:
        $r23 = virtualinvoke $r3.<org.apache.poi.hmef.HMEFMessage: java.util.List getAttachments()>();

        $r24 = interfaceinvoke $r23.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $z1 = interfaceinvoke $r24.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label10;

        $r6 = interfaceinvoke $r24.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.apache.poi.hmef.Attachment) $r6;

        $r8 = virtualinvoke r7.<org.apache.poi.hmef.Attachment: java.lang.String getLongFilename()>();

        r25 = $r8;

        if $r8 == null goto label06;

        $i1 = virtualinvoke $r8.<java.lang.String: int length()>();

        if $i1 != 0 goto label07;

     label06:
        r25 = virtualinvoke r7.<org.apache.poi.hmef.Attachment: java.lang.String getFilename()>();

     label07:
        if r25 == null goto label08;

        $i0 = virtualinvoke r25.<java.lang.String: int length()>();

        if $i0 != 0 goto label09;

     label08:
        $r9 = virtualinvoke r7.<org.apache.poi.hmef.Attachment: java.lang.String getExtension()>();

        if $r9 == null goto label09;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        r25 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

     label09:
        $r26 = virtualinvoke r7.<org.apache.poi.hmef.Attachment: byte[] getContents()>();

        specialinvoke r10.<org.apache.tika.parser.microsoft.TNEFParser: void handleEmbedded(java.lang.String,java.lang.String,byte[],org.apache.tika.extractor.EmbeddedDocumentExtractor,org.xml.sax.ContentHandler)>(r25, null, $r26, r19, r11);

        goto label05;

     label10:
        return;
    }

    private void handleEmbedded(java.lang.String, java.lang.String, byte[], org.apache.tika.extractor.EmbeddedDocumentExtractor, org.xml.sax.ContentHandler) throws java.io.IOException, org.xml.sax.SAXException, org.apache.tika.exception.TikaException
    {
        byte[] r4;
        org.apache.tika.extractor.EmbeddedDocumentExtractor r3;
        org.apache.tika.metadata.Metadata $r0;
        org.apache.tika.parser.microsoft.TNEFParser r8;
        org.apache.tika.io.TikaInputStream $r5;
        java.lang.String r1, r2;
        org.apache.tika.sax.EmbeddedContentHandler $r6;
        org.xml.sax.ContentHandler r7;
        boolean $z0;

        r8 := @this: org.apache.tika.parser.microsoft.TNEFParser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r4 := @parameter2: byte[];

        r3 := @parameter3: org.apache.tika.extractor.EmbeddedDocumentExtractor;

        r7 := @parameter4: org.xml.sax.ContentHandler;

        $r0 = new org.apache.tika.metadata.Metadata;

        specialinvoke $r0.<org.apache.tika.metadata.Metadata: void <init>()>();

        if r1 == null goto label1;

        virtualinvoke $r0.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("resourceName", r1);

     label1:
        if r2 == null goto label2;

        virtualinvoke $r0.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("Content-Type", r2);

     label2:
        $z0 = interfaceinvoke r3.<org.apache.tika.extractor.EmbeddedDocumentExtractor: boolean shouldParseEmbedded(org.apache.tika.metadata.Metadata)>($r0);

        if $z0 == 0 goto label3;

        $r5 = staticinvoke <org.apache.tika.io.TikaInputStream: org.apache.tika.io.TikaInputStream get(byte[])>(r4);

        $r6 = new org.apache.tika.sax.EmbeddedContentHandler;

        specialinvoke $r6.<org.apache.tika.sax.EmbeddedContentHandler: void <init>(org.xml.sax.ContentHandler)>(r7);

        interfaceinvoke r3.<org.apache.tika.extractor.EmbeddedDocumentExtractor: void parseEmbedded(java.io.InputStream,org.xml.sax.ContentHandler,org.apache.tika.metadata.Metadata,boolean)>($r5, $r6, $r0, 0);

     label3:
        return;
    }

    static void <clinit>()
    {
        java.util.HashSet $r0;
        java.util.List $r5;
        org.apache.tika.mime.MediaType[] $r1;
        java.util.Set $r6;
        org.apache.tika.mime.MediaType $r2, $r3, $r4;

        <org.apache.tika.parser.microsoft.TNEFParser: long serialVersionUID> = 4611820730372823452L;

        $r0 = new java.util.HashSet;

        $r1 = newarray (org.apache.tika.mime.MediaType)[3];

        $r2 = staticinvoke <org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType application(java.lang.String)>("vnd.ms-tnef");

        $r1[0] = $r2;

        $r3 = staticinvoke <org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType application(java.lang.String)>("ms-tnef");

        $r1[1] = $r3;

        $r4 = staticinvoke <org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType application(java.lang.String)>("x-tnef");

        $r1[2] = $r4;

        $r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1);

        specialinvoke $r0.<java.util.HashSet: void <init>(java.util.Collection)>($r5);

        $r6 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r0);

        <org.apache.tika.parser.microsoft.TNEFParser: java.util.Set SUPPORTED_TYPES> = $r6;

        return;
    }
}
