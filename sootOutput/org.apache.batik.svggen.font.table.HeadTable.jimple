public class org.apache.batik.svggen.font.table.HeadTable extends java.lang.Object implements org.apache.batik.svggen.font.table.Table
{
    private int versionNumber;
    private int fontRevision;
    private int checkSumAdjustment;
    private int magicNumber;
    private short flags;
    private short unitsPerEm;
    private long created;
    private long modified;
    private short xMin;
    private short yMin;
    private short xMax;
    private short yMax;
    private short macStyle;
    private short lowestRecPPEM;
    private short fontDirectionHint;
    private short indexToLocFormat;
    private short glyphDataFormat;

    protected void <init>(org.apache.batik.svggen.font.table.DirectoryEntry, java.io.RandomAccessFile) throws java.io.IOException
    {
        java.io.RandomAccessFile r1;
        long $l1, $l8, $l9;
        short $s6, $s7, $s10, $s11, $s12, $s13, $s14, $s15, $s16, $s17, $s18;
        int $i0, $i2, $i3, $i4, $i5;
        org.apache.batik.svggen.font.table.HeadTable r0;
        org.apache.batik.svggen.font.table.DirectoryEntry r2;

        r0 := @this: org.apache.batik.svggen.font.table.HeadTable;

        r2 := @parameter0: org.apache.batik.svggen.font.table.DirectoryEntry;

        r1 := @parameter1: java.io.RandomAccessFile;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = virtualinvoke r2.<org.apache.batik.svggen.font.table.DirectoryEntry: int getOffset()>();

        $l1 = (long) $i0;

        virtualinvoke r1.<java.io.RandomAccessFile: void seek(long)>($l1);

        $i2 = virtualinvoke r1.<java.io.RandomAccessFile: int readInt()>();

        r0.<org.apache.batik.svggen.font.table.HeadTable: int versionNumber> = $i2;

        $i3 = virtualinvoke r1.<java.io.RandomAccessFile: int readInt()>();

        r0.<org.apache.batik.svggen.font.table.HeadTable: int fontRevision> = $i3;

        $i4 = virtualinvoke r1.<java.io.RandomAccessFile: int readInt()>();

        r0.<org.apache.batik.svggen.font.table.HeadTable: int checkSumAdjustment> = $i4;

        $i5 = virtualinvoke r1.<java.io.RandomAccessFile: int readInt()>();

        r0.<org.apache.batik.svggen.font.table.HeadTable: int magicNumber> = $i5;

        $s6 = virtualinvoke r1.<java.io.RandomAccessFile: short readShort()>();

        r0.<org.apache.batik.svggen.font.table.HeadTable: short flags> = $s6;

        $s7 = virtualinvoke r1.<java.io.RandomAccessFile: short readShort()>();

        r0.<org.apache.batik.svggen.font.table.HeadTable: short unitsPerEm> = $s7;

        $l8 = virtualinvoke r1.<java.io.RandomAccessFile: long readLong()>();

        r0.<org.apache.batik.svggen.font.table.HeadTable: long created> = $l8;

        $l9 = virtualinvoke r1.<java.io.RandomAccessFile: long readLong()>();

        r0.<org.apache.batik.svggen.font.table.HeadTable: long modified> = $l9;

        $s10 = virtualinvoke r1.<java.io.RandomAccessFile: short readShort()>();

        r0.<org.apache.batik.svggen.font.table.HeadTable: short xMin> = $s10;

        $s11 = virtualinvoke r1.<java.io.RandomAccessFile: short readShort()>();

        r0.<org.apache.batik.svggen.font.table.HeadTable: short yMin> = $s11;

        $s12 = virtualinvoke r1.<java.io.RandomAccessFile: short readShort()>();

        r0.<org.apache.batik.svggen.font.table.HeadTable: short xMax> = $s12;

        $s13 = virtualinvoke r1.<java.io.RandomAccessFile: short readShort()>();

        r0.<org.apache.batik.svggen.font.table.HeadTable: short yMax> = $s13;

        $s14 = virtualinvoke r1.<java.io.RandomAccessFile: short readShort()>();

        r0.<org.apache.batik.svggen.font.table.HeadTable: short macStyle> = $s14;

        $s15 = virtualinvoke r1.<java.io.RandomAccessFile: short readShort()>();

        r0.<org.apache.batik.svggen.font.table.HeadTable: short lowestRecPPEM> = $s15;

        $s16 = virtualinvoke r1.<java.io.RandomAccessFile: short readShort()>();

        r0.<org.apache.batik.svggen.font.table.HeadTable: short fontDirectionHint> = $s16;

        $s17 = virtualinvoke r1.<java.io.RandomAccessFile: short readShort()>();

        r0.<org.apache.batik.svggen.font.table.HeadTable: short indexToLocFormat> = $s17;

        $s18 = virtualinvoke r1.<java.io.RandomAccessFile: short readShort()>();

        r0.<org.apache.batik.svggen.font.table.HeadTable: short glyphDataFormat> = $s18;

        return;
    }

    public int getCheckSumAdjustment()
    {
        int $i0;
        org.apache.batik.svggen.font.table.HeadTable r0;

        r0 := @this: org.apache.batik.svggen.font.table.HeadTable;

        $i0 = r0.<org.apache.batik.svggen.font.table.HeadTable: int checkSumAdjustment>;

        return $i0;
    }

    public long getCreated()
    {
        long $l0;
        org.apache.batik.svggen.font.table.HeadTable r0;

        r0 := @this: org.apache.batik.svggen.font.table.HeadTable;

        $l0 = r0.<org.apache.batik.svggen.font.table.HeadTable: long created>;

        return $l0;
    }

    public short getFlags()
    {
        short $s0;
        org.apache.batik.svggen.font.table.HeadTable r0;

        r0 := @this: org.apache.batik.svggen.font.table.HeadTable;

        $s0 = r0.<org.apache.batik.svggen.font.table.HeadTable: short flags>;

        return $s0;
    }

    public short getFontDirectionHint()
    {
        short $s0;
        org.apache.batik.svggen.font.table.HeadTable r0;

        r0 := @this: org.apache.batik.svggen.font.table.HeadTable;

        $s0 = r0.<org.apache.batik.svggen.font.table.HeadTable: short fontDirectionHint>;

        return $s0;
    }

    public int getFontRevision()
    {
        int $i0;
        org.apache.batik.svggen.font.table.HeadTable r0;

        r0 := @this: org.apache.batik.svggen.font.table.HeadTable;

        $i0 = r0.<org.apache.batik.svggen.font.table.HeadTable: int fontRevision>;

        return $i0;
    }

    public short getGlyphDataFormat()
    {
        short $s0;
        org.apache.batik.svggen.font.table.HeadTable r0;

        r0 := @this: org.apache.batik.svggen.font.table.HeadTable;

        $s0 = r0.<org.apache.batik.svggen.font.table.HeadTable: short glyphDataFormat>;

        return $s0;
    }

    public short getIndexToLocFormat()
    {
        short $s0;
        org.apache.batik.svggen.font.table.HeadTable r0;

        r0 := @this: org.apache.batik.svggen.font.table.HeadTable;

        $s0 = r0.<org.apache.batik.svggen.font.table.HeadTable: short indexToLocFormat>;

        return $s0;
    }

    public short getLowestRecPPEM()
    {
        short $s0;
        org.apache.batik.svggen.font.table.HeadTable r0;

        r0 := @this: org.apache.batik.svggen.font.table.HeadTable;

        $s0 = r0.<org.apache.batik.svggen.font.table.HeadTable: short lowestRecPPEM>;

        return $s0;
    }

    public short getMacStyle()
    {
        short $s0;
        org.apache.batik.svggen.font.table.HeadTable r0;

        r0 := @this: org.apache.batik.svggen.font.table.HeadTable;

        $s0 = r0.<org.apache.batik.svggen.font.table.HeadTable: short macStyle>;

        return $s0;
    }

    public long getModified()
    {
        long $l0;
        org.apache.batik.svggen.font.table.HeadTable r0;

        r0 := @this: org.apache.batik.svggen.font.table.HeadTable;

        $l0 = r0.<org.apache.batik.svggen.font.table.HeadTable: long modified>;

        return $l0;
    }

    public int getType()
    {
        org.apache.batik.svggen.font.table.HeadTable r0;

        r0 := @this: org.apache.batik.svggen.font.table.HeadTable;

        return 1751474532;
    }

    public short getUnitsPerEm()
    {
        short $s0;
        org.apache.batik.svggen.font.table.HeadTable r0;

        r0 := @this: org.apache.batik.svggen.font.table.HeadTable;

        $s0 = r0.<org.apache.batik.svggen.font.table.HeadTable: short unitsPerEm>;

        return $s0;
    }

    public int getVersionNumber()
    {
        int $i0;
        org.apache.batik.svggen.font.table.HeadTable r0;

        r0 := @this: org.apache.batik.svggen.font.table.HeadTable;

        $i0 = r0.<org.apache.batik.svggen.font.table.HeadTable: int versionNumber>;

        return $i0;
    }

    public short getXMax()
    {
        short $s0;
        org.apache.batik.svggen.font.table.HeadTable r0;

        r0 := @this: org.apache.batik.svggen.font.table.HeadTable;

        $s0 = r0.<org.apache.batik.svggen.font.table.HeadTable: short xMax>;

        return $s0;
    }

    public short getXMin()
    {
        short $s0;
        org.apache.batik.svggen.font.table.HeadTable r0;

        r0 := @this: org.apache.batik.svggen.font.table.HeadTable;

        $s0 = r0.<org.apache.batik.svggen.font.table.HeadTable: short xMin>;

        return $s0;
    }

    public short getYMax()
    {
        short $s0;
        org.apache.batik.svggen.font.table.HeadTable r0;

        r0 := @this: org.apache.batik.svggen.font.table.HeadTable;

        $s0 = r0.<org.apache.batik.svggen.font.table.HeadTable: short yMax>;

        return $s0;
    }

    public short getYMin()
    {
        short $s0;
        org.apache.batik.svggen.font.table.HeadTable r0;

        r0 := @this: org.apache.batik.svggen.font.table.HeadTable;

        $s0 = r0.<org.apache.batik.svggen.font.table.HeadTable: short yMin>;

        return $s0;
    }

    public java.lang.String toString()
    {
        long $l6, $l7;
        short $s4, $s5, $s8, $s9, $s10, $s11, $s12, $s13, $s14, $s15, $s16;
        java.lang.StringBuffer $r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r37;
        java.lang.String $r36;
        org.apache.batik.svggen.font.table.HeadTable r2;
        int $i0, $i1, $i2, $i3, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27;

        r2 := @this: org.apache.batik.svggen.font.table.HeadTable;

        $r37 = new java.lang.StringBuffer;

        specialinvoke $r37.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("head\n\tversionNumber: ");

        $i0 = r2.<org.apache.batik.svggen.font.table.HeadTable: int versionNumber>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n\tfontRevision: ");

        $i1 = r2.<org.apache.batik.svggen.font.table.HeadTable: int fontRevision>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n\tcheckSumAdjustment: ");

        $i2 = r2.<org.apache.batik.svggen.font.table.HeadTable: int checkSumAdjustment>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n\tmagicNumber: ");

        $i3 = r2.<org.apache.batik.svggen.font.table.HeadTable: int magicNumber>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n\tflags: ");

        $s4 = r2.<org.apache.batik.svggen.font.table.HeadTable: short flags>;

        $i17 = (int) $s4;

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i17);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n\tunitsPerEm: ");

        $s5 = r2.<org.apache.batik.svggen.font.table.HeadTable: short unitsPerEm>;

        $i18 = (int) $s5;

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i18);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n\tcreated: ");

        $l6 = r2.<org.apache.batik.svggen.font.table.HeadTable: long created>;

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(long)>($l6);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n\tmodified: ");

        $l7 = r2.<org.apache.batik.svggen.font.table.HeadTable: long modified>;

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(long)>($l7);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n\txMin: ");

        $s8 = r2.<org.apache.batik.svggen.font.table.HeadTable: short xMin>;

        $i19 = (int) $s8;

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i19);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", yMin: ");

        $s9 = r2.<org.apache.batik.svggen.font.table.HeadTable: short yMin>;

        $i20 = (int) $s9;

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n\txMax: ");

        $s10 = r2.<org.apache.batik.svggen.font.table.HeadTable: short xMax>;

        $i21 = (int) $s10;

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i21);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", yMax: ");

        $s11 = r2.<org.apache.batik.svggen.font.table.HeadTable: short yMax>;

        $i22 = (int) $s11;

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i22);

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n\tmacStyle: ");

        $s12 = r2.<org.apache.batik.svggen.font.table.HeadTable: short macStyle>;

        $i23 = (int) $s12;

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i23);

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n\tlowestRecPPEM: ");

        $s13 = r2.<org.apache.batik.svggen.font.table.HeadTable: short lowestRecPPEM>;

        $i24 = (int) $s13;

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i24);

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n\tfontDirectionHint: ");

        $s14 = r2.<org.apache.batik.svggen.font.table.HeadTable: short fontDirectionHint>;

        $i25 = (int) $s14;

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i25);

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n\tindexToLocFormat: ");

        $s15 = r2.<org.apache.batik.svggen.font.table.HeadTable: short indexToLocFormat>;

        $i26 = (int) $s15;

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i26);

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n\tglyphDataFormat: ");

        $s16 = r2.<org.apache.batik.svggen.font.table.HeadTable: short glyphDataFormat>;

        $i27 = (int) $s16;

        $r35 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i27);

        $r36 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r36;
    }
}
