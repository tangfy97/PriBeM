public final class com.mongodb.util.Hash extends java.lang.Object
{
    static final long _longHashConstant;

    public void <init>()
    {
        com.mongodb.util.Hash r0;

        r0 := @this: com.mongodb.util.Hash;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final int hashBackward(java.lang.String)
    {
        char $c2;
        int $i0, $i1, i3, i4, $i5, $i7;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        i3 = 0;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        i4 = $i0 - 1;

     label1:
        if i4 < 0 goto label2;

        $i1 = i3 * 31;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i4);

        $i5 = (int) $c2;

        i3 = $i1 + $i5;

        $i7 = (int) -1;

        i4 = i4 + $i7;

        goto label1;

     label2:
        return i3;
    }

    public static final long hashBackwardLong(java.lang.String)
    {
        long $l1, $l3, l4;
        char $c2;
        int $i0, i5, $i7;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        l4 = 0L;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        i5 = $i0 - 1;

     label1:
        if i5 < 0 goto label2;

        $l1 = l4 * 63L;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i5);

        $l3 = (long) $c2;

        l4 = $l1 + $l3;

        $i7 = (int) -1;

        i5 = i5 + $i7;

        goto label1;

     label2:
        return l4;
    }

    public static final long longHash(java.lang.String)
    {
        int $i0;
        long $l1;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $l1 = staticinvoke <com.mongodb.util.Hash: long longHash(java.lang.String,int,int)>(r0, 0, $i0);

        return $l1;
    }

    public static final long longHash(java.lang.String, int, int)
    {
        int i0, i4;
        long $l1, $l3, l5;
        char $c2;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        i4 := @parameter1: int;

        i0 := @parameter2: int;

        l5 = 0L;

     label1:
        if i4 >= i0 goto label2;

        $l1 = 4095L * l5;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i4);

        $l3 = (long) $c2;

        l5 = $l1 + $l3;

        i4 = i4 + 1;

        goto label1;

     label2:
        return l5;
    }

    public static final long longLowerHash(java.lang.String)
    {
        int $i0;
        long $l1;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $l1 = staticinvoke <com.mongodb.util.Hash: long longLowerHash(java.lang.String,int,int)>(r0, 0, $i0);

        return $l1;
    }

    public static final long longLowerHash(java.lang.String, int, int)
    {
        long $l1, $l4, l6;
        char $c2, $c3;
        int i0, i5;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        i5 := @parameter1: int;

        i0 := @parameter2: int;

        l6 = 0L;

     label1:
        if i5 >= i0 goto label2;

        $l1 = 4095L * l6;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i5);

        $c3 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c2);

        $l4 = (long) $c3;

        l6 = $l1 + $l4;

        i5 = i5 + 1;

        goto label1;

     label2:
        return l6;
    }

    public static final long longLowerHash(java.lang.String, int, int, long)
    {
        long $l1, $l4, l6;
        char $c2, $c3;
        int i0, i5;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        i5 := @parameter1: int;

        i0 := @parameter2: int;

        l6 := @parameter3: long;

     label1:
        if i5 >= i0 goto label2;

        $l1 = 4095L * l6;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i5);

        $c3 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c2);

        $l4 = (long) $c3;

        l6 = $l1 + $l4;

        i5 = i5 + 1;

        goto label1;

     label2:
        return l6;
    }

    public static final long longLowerHashAppend(long, char)
    {
        long l0, $l2, $l4, $l5;
        char c1, $c3;

        l0 := @parameter0: long;

        c1 := @parameter1: char;

        $l2 = l0 * 4095L;

        $c3 = staticinvoke <java.lang.Character: char toLowerCase(char)>(c1);

        $l4 = (long) $c3;

        $l5 = $l2 + $l4;

        return $l5;
    }

    public static final long longHashAppend(long, char)
    {
        long l0, $l2, $l3, $l4;
        char c1;

        l0 := @parameter0: long;

        c1 := @parameter1: char;

        $l3 = l0 * 4095L;

        $l2 = (long) c1;

        $l4 = $l3 + $l2;

        return $l4;
    }

    public static final int lowerCaseHash(java.lang.String)
    {
        char $c2, $c3;
        int $i0, $i1, i4, i5, $i6;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        i4 = 0;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        i5 = 0;

     label1:
        if i5 >= $i0 goto label2;

        $i1 = 31 * i4;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i5);

        $c3 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c2);

        $i6 = (int) $c3;

        i4 = $i1 + $i6;

        i5 = i5 + 1;

        goto label1;

     label2:
        return i4;
    }

    public static final int lowerCaseHash(java.lang.String, int, int)
    {
        char $c4, $c5;
        int $i0, i1, i2, $i3, i6, i7, $i8;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i6 = 0;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        i7 = i1;

     label1:
        if i7 >= $i0 goto label2;

        if i7 >= i2 goto label2;

        $i3 = 31 * i6;

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i7);

        $c5 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c4);

        $i8 = (int) $c5;

        i6 = $i3 + $i8;

        i7 = i7 + 1;

        goto label1;

     label2:
        return i6;
    }

    public static final int hashCode(java.lang.CharSequence, int, int)
    {
        java.lang.CharSequence r0;
        char $c4;
        int $i0, i1, i2, $i3, i5, i6, $i7;

        r0 := @parameter0: java.lang.CharSequence;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i5 = 0;

        $i0 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();

        i6 = i1;

     label1:
        if i6 >= $i0 goto label2;

        if i6 >= i2 goto label2;

        $i3 = 31 * i5;

        $c4 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>(i6);

        $i7 = (int) $c4;

        i5 = $i3 + $i7;

        i6 = i6 + 1;

        goto label1;

     label2:
        return i5;
    }

    public static final int nospaceLowerHash(java.lang.String, int, int)
    {
        char $c3, $c5;
        int $i0, i1, i2, $i4, i6, i7, $i8;
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i6 = 0;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        i7 = i1;

     label1:
        if i7 >= $i0 goto label4;

        if i7 >= i2 goto label4;

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i7);

        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c3);

        if $z0 == 0 goto label2;

        goto label3;

     label2:
        $i4 = 31 * i6;

        $c5 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c3);

        $i8 = (int) $c5;

        i6 = $i4 + $i8;

     label3:
        i7 = i7 + 1;

        goto label1;

     label4:
        return i6;
    }

    public static final int lowerCaseSpaceTrimHash(java.lang.String)
    {
        char $c0, $c2, $c3, $c5;
        int $i1, $i4, i6, i7, i8, $i10, $i11;
        java.lang.String r0;
        boolean $z0, $z1, z2;

        r0 := @parameter0: java.lang.String;

        i6 = 0;

        i7 = virtualinvoke r0.<java.lang.String: int length()>();

     label1:
        if i7 <= 1 goto label2;

        $i4 = i7 - 1;

        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i4);

        $z1 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c5);

        if $z1 == 0 goto label2;

        $i10 = (int) -1;

        i7 = i7 + $i10;

        goto label1;

     label2:
        z2 = 1;

        i8 = 0;

     label3:
        if i8 >= i7 goto label6;

        $c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i8);

        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c0);

        if $z0 == 0 goto label4;

        if z2 == 0 goto label4;

        goto label5;

     label4:
        z2 = $z0;

        $i1 = 31 * i6;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i8);

        $c3 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c2);

        $i11 = (int) $c3;

        i6 = $i1 + $i11;

     label5:
        i8 = i8 + 1;

        goto label3;

     label6:
        return i6;
    }

    public static final int lowerCaseSpaceTrimHash(java.lang.String, int, int)
    {
        int i0, i1, $i3, $i6, i8, i9, i10, $i12, $i13;
        java.lang.String r0;
        boolean $z0, $z1, z2;
        char $c2, $c4, $c5, $c7;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i8 = 0;

        i9 = virtualinvoke r0.<java.lang.String: int length()>();

     label1:
        if i9 <= 1 goto label2;

        $i6 = i9 - 1;

        $c7 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i6);

        $z1 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c7);

        if $z1 == 0 goto label2;

        $i12 = (int) -1;

        i9 = i9 + $i12;

        goto label1;

     label2:
        z2 = 1;

        i10 = i0;

     label3:
        if i10 >= i9 goto label6;

        if i10 >= i1 goto label6;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i10);

        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c2);

        if $z0 == 0 goto label4;

        if z2 == 0 goto label4;

        goto label5;

     label4:
        z2 = $z0;

        $i3 = 31 * i8;

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i10);

        $c5 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c4);

        $i13 = (int) $c5;

        i8 = $i3 + $i13;

     label5:
        i10 = i10 + 1;

        goto label3;

     label6:
        return i8;
    }

    public static final transient int hashCode(java.lang.String[])
    {
        java.lang.String[] r0;
        char $c3;
        int i0, $i1, $i2, i4, i5, i6, $i7;
        java.lang.String r1;

        r0 := @parameter0: java.lang.String[];

        i4 = 0;

        i0 = lengthof r0;

        i5 = 0;

     label1:
        if i5 >= i0 goto label4;

        r1 = r0[i5];

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        i6 = 0;

     label2:
        if i6 >= $i1 goto label3;

        $i2 = 31 * i4;

        $c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i6);

        $i7 = (int) $c3;

        i4 = $i2 + $i7;

        i6 = i6 + 1;

        goto label2;

     label3:
        i5 = i5 + 1;

        goto label1;

     label4:
        return i4;
    }

    public static void <clinit>()
    {
        <com.mongodb.util.Hash: long _longHashConstant> = 4095L;

        return;
    }
}
