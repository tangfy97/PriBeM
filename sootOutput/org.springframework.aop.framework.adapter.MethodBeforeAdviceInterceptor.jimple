public class org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor extends java.lang.Object implements org.aopalliance.intercept.MethodInterceptor, java.io.Serializable
{
    private org.springframework.aop.MethodBeforeAdvice advice;

    public void <init>(org.springframework.aop.MethodBeforeAdvice)
    {
        org.springframework.aop.MethodBeforeAdvice r1;
        org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor r0;

        r0 := @this: org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor;

        r1 := @parameter0: org.springframework.aop.MethodBeforeAdvice;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r1, "Advice must not be null");

        r0.<org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor: org.springframework.aop.MethodBeforeAdvice advice> = r1;

        return;
    }

    public java.lang.Object invoke(org.aopalliance.intercept.MethodInvocation) throws java.lang.Throwable
    {
        org.aopalliance.intercept.MethodInvocation r1;
        org.springframework.aop.MethodBeforeAdvice $r2;
        java.lang.Object[] $r4;
        java.lang.Object $r5, $r6;
        java.lang.reflect.Method $r3;
        org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor r0;

        r0 := @this: org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor;

        r1 := @parameter0: org.aopalliance.intercept.MethodInvocation;

        $r2 = r0.<org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor: org.springframework.aop.MethodBeforeAdvice advice>;

        $r3 = interfaceinvoke r1.<org.aopalliance.intercept.MethodInvocation: java.lang.reflect.Method getMethod()>();

        $r4 = interfaceinvoke r1.<org.aopalliance.intercept.MethodInvocation: java.lang.Object[] getArguments()>();

        $r5 = interfaceinvoke r1.<org.aopalliance.intercept.MethodInvocation: java.lang.Object getThis()>();

        interfaceinvoke $r2.<org.springframework.aop.MethodBeforeAdvice: void before(java.lang.reflect.Method,java.lang.Object[],java.lang.Object)>($r3, $r4, $r5);

        $r6 = interfaceinvoke r1.<org.aopalliance.intercept.MethodInvocation: java.lang.Object proceed()>();

        return $r6;
    }
}
