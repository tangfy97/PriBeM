public final class org.waveprotocol.wave.model.document.operation.algorithm.DocOpInverter extends java.lang.Object implements org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor
{
    private final org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor target;

    public void <init>(org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor)
    {
        org.waveprotocol.wave.model.document.operation.algorithm.DocOpInverter r0;
        org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor r1;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.DocOpInverter;

        r1 := @parameter0: org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.model.document.operation.algorithm.DocOpInverter: org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor target> = r1;

        return;
    }

    public java.lang.Object finish()
    {
        java.lang.Object $r2;
        org.waveprotocol.wave.model.document.operation.algorithm.DocOpInverter r0;
        org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor $r1;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.DocOpInverter;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.DocOpInverter: org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor target>;

        $r2 = interfaceinvoke $r1.<org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor: java.lang.Object finish()>();

        return $r2;
    }

    public void retain(int)
    {
        int i0;
        org.waveprotocol.wave.model.document.operation.algorithm.DocOpInverter r0;
        org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor $r1;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.DocOpInverter;

        i0 := @parameter0: int;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.DocOpInverter: org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor target>;

        interfaceinvoke $r1.<org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor: void retain(int)>(i0);

        return;
    }

    public void characters(java.lang.String)
    {
        java.lang.String r1;
        org.waveprotocol.wave.model.document.operation.algorithm.DocOpInverter r0;
        org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor $r2;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.DocOpInverter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.DocOpInverter: org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor target>;

        interfaceinvoke $r2.<org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor: void deleteCharacters(java.lang.String)>(r1);

        return;
    }

    public void elementStart(java.lang.String, org.waveprotocol.wave.model.document.operation.Attributes)
    {
        org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor $r3;
        java.lang.String r1;
        org.waveprotocol.wave.model.document.operation.algorithm.DocOpInverter r0;
        org.waveprotocol.wave.model.document.operation.Attributes r2;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.DocOpInverter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.waveprotocol.wave.model.document.operation.Attributes;

        $r3 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.DocOpInverter: org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor target>;

        interfaceinvoke $r3.<org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor: void deleteElementStart(java.lang.String,org.waveprotocol.wave.model.document.operation.Attributes)>(r1, r2);

        return;
    }

    public void elementEnd()
    {
        org.waveprotocol.wave.model.document.operation.algorithm.DocOpInverter r0;
        org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor $r1;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.DocOpInverter;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.DocOpInverter: org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor target>;

        interfaceinvoke $r1.<org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor: void deleteElementEnd()>();

        return;
    }

    public void deleteCharacters(java.lang.String)
    {
        java.lang.String r1;
        org.waveprotocol.wave.model.document.operation.algorithm.DocOpInverter r0;
        org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor $r2;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.DocOpInverter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.DocOpInverter: org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor target>;

        interfaceinvoke $r2.<org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor: void characters(java.lang.String)>(r1);

        return;
    }

    public void deleteElementStart(java.lang.String, org.waveprotocol.wave.model.document.operation.Attributes)
    {
        org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor $r3;
        java.lang.String r1;
        org.waveprotocol.wave.model.document.operation.algorithm.DocOpInverter r0;
        org.waveprotocol.wave.model.document.operation.Attributes r2;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.DocOpInverter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.waveprotocol.wave.model.document.operation.Attributes;

        $r3 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.DocOpInverter: org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor target>;

        interfaceinvoke $r3.<org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor: void elementStart(java.lang.String,org.waveprotocol.wave.model.document.operation.Attributes)>(r1, r2);

        return;
    }

    public void deleteElementEnd()
    {
        org.waveprotocol.wave.model.document.operation.algorithm.DocOpInverter r0;
        org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor $r1;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.DocOpInverter;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.DocOpInverter: org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor target>;

        interfaceinvoke $r1.<org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor: void elementEnd()>();

        return;
    }

    public void replaceAttributes(org.waveprotocol.wave.model.document.operation.Attributes, org.waveprotocol.wave.model.document.operation.Attributes)
    {
        org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor $r3;
        org.waveprotocol.wave.model.document.operation.algorithm.DocOpInverter r0;
        org.waveprotocol.wave.model.document.operation.Attributes r1, r2;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.DocOpInverter;

        r2 := @parameter0: org.waveprotocol.wave.model.document.operation.Attributes;

        r1 := @parameter1: org.waveprotocol.wave.model.document.operation.Attributes;

        $r3 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.DocOpInverter: org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor target>;

        interfaceinvoke $r3.<org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor: void replaceAttributes(org.waveprotocol.wave.model.document.operation.Attributes,org.waveprotocol.wave.model.document.operation.Attributes)>(r1, r2);

        return;
    }

    public void updateAttributes(org.waveprotocol.wave.model.document.operation.AttributesUpdate)
    {
        java.lang.String[] $r5;
        org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor $r3;
        int $i0, i1;
        java.lang.String $r6, $r7, $r8;
        org.waveprotocol.wave.model.document.operation.algorithm.DocOpInverter r2;
        org.waveprotocol.wave.model.document.operation.AttributesUpdate r1, r9;
        org.waveprotocol.wave.model.document.operation.impl.AttributesUpdateImpl $r0, $r4;

        r2 := @this: org.waveprotocol.wave.model.document.operation.algorithm.DocOpInverter;

        r1 := @parameter0: org.waveprotocol.wave.model.document.operation.AttributesUpdate;

        $r0 = new org.waveprotocol.wave.model.document.operation.impl.AttributesUpdateImpl;

        specialinvoke $r0.<org.waveprotocol.wave.model.document.operation.impl.AttributesUpdateImpl: void <init>()>();

        r9 = $r0;

        i1 = 0;

     label1:
        $i0 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.operation.AttributesUpdate: int changeSize()>();

        if i1 >= $i0 goto label2;

        $r4 = new org.waveprotocol.wave.model.document.operation.impl.AttributesUpdateImpl;

        $r5 = newarray (java.lang.String)[3];

        $r6 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.operation.AttributesUpdate: java.lang.String getChangeKey(int)>(i1);

        $r5[0] = $r6;

        $r7 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.operation.AttributesUpdate: java.lang.String getNewValue(int)>(i1);

        $r5[1] = $r7;

        $r8 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.operation.AttributesUpdate: java.lang.String getOldValue(int)>(i1);

        $r5[2] = $r8;

        specialinvoke $r4.<org.waveprotocol.wave.model.document.operation.impl.AttributesUpdateImpl: void <init>(java.lang.String[])>($r5);

        r9 = interfaceinvoke r9.<org.waveprotocol.wave.model.document.operation.AttributesUpdate: org.waveprotocol.wave.model.document.operation.AttributesUpdate composeWith(org.waveprotocol.wave.model.document.operation.AttributesUpdate)>($r4);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r3 = r2.<org.waveprotocol.wave.model.document.operation.algorithm.DocOpInverter: org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor target>;

        interfaceinvoke $r3.<org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor: void updateAttributes(org.waveprotocol.wave.model.document.operation.AttributesUpdate)>(r9);

        return;
    }

    public void annotationBoundary(org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap)
    {
        org.waveprotocol.wave.model.document.operation.algorithm.DocOpInverter$1 $r1;
        org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor $r3;
        org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap r2;
        org.waveprotocol.wave.model.document.operation.algorithm.DocOpInverter r0;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.DocOpInverter;

        r2 := @parameter0: org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap;

        $r3 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.DocOpInverter: org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor target>;

        $r1 = new org.waveprotocol.wave.model.document.operation.algorithm.DocOpInverter$1;

        specialinvoke $r1.<org.waveprotocol.wave.model.document.operation.algorithm.DocOpInverter$1: void <init>(org.waveprotocol.wave.model.document.operation.algorithm.DocOpInverter,org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap)>(r0, r2);

        interfaceinvoke $r3.<org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor: void annotationBoundary(org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap)>($r1);

        return;
    }

    public static org.waveprotocol.wave.model.document.operation.DocOp invert(org.waveprotocol.wave.model.document.operation.DocOp)
    {
        org.waveprotocol.wave.model.document.operation.impl.DocOpBuffer $r1;
        org.waveprotocol.wave.model.document.operation.DocOp r2, $r4;
        java.lang.Object $r3;
        org.waveprotocol.wave.model.document.operation.algorithm.DocOpInverter $r0;

        r2 := @parameter0: org.waveprotocol.wave.model.document.operation.DocOp;

        $r0 = new org.waveprotocol.wave.model.document.operation.algorithm.DocOpInverter;

        $r1 = new org.waveprotocol.wave.model.document.operation.impl.DocOpBuffer;

        specialinvoke $r1.<org.waveprotocol.wave.model.document.operation.impl.DocOpBuffer: void <init>()>();

        specialinvoke $r0.<org.waveprotocol.wave.model.document.operation.algorithm.DocOpInverter: void <init>(org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor)>($r1);

        interfaceinvoke r2.<org.waveprotocol.wave.model.document.operation.DocOp: void apply(org.waveprotocol.wave.model.document.operation.DocOpCursor)>($r0);

        $r3 = virtualinvoke $r0.<org.waveprotocol.wave.model.document.operation.algorithm.DocOpInverter: java.lang.Object finish()>();

        $r4 = (org.waveprotocol.wave.model.document.operation.DocOp) $r3;

        return $r4;
    }
}
