public class com.google.gwt.logging.impl.LoggerImplRegular extends java.lang.Object implements com.google.gwt.logging.impl.LoggerImpl
{
    private java.util.List handlers;
    private java.util.logging.Level level;
    private java.lang.String name;
    private java.util.logging.Logger parent;
    private boolean useParentHandlers;

    public void <init>()
    {
        com.google.gwt.logging.impl.LoggerImplRegular r0;
        java.util.ArrayList $r1;

        r0 := @this: com.google.gwt.logging.impl.LoggerImplRegular;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.gwt.logging.impl.LoggerImplRegular: java.util.logging.Level level> = null;

        r0.<com.google.gwt.logging.impl.LoggerImplRegular: boolean useParentHandlers> = 1;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<com.google.gwt.logging.impl.LoggerImplRegular: java.util.List handlers> = $r1;

        return;
    }

    public void addHandler(java.util.logging.Handler)
    {
        com.google.gwt.logging.impl.LoggerImplRegular r0;
        java.util.List $r2;
        java.util.logging.Handler r1;

        r0 := @this: com.google.gwt.logging.impl.LoggerImplRegular;

        r1 := @parameter0: java.util.logging.Handler;

        $r2 = r0.<com.google.gwt.logging.impl.LoggerImplRegular: java.util.List handlers>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void config(java.lang.String)
    {
        com.google.gwt.logging.impl.LoggerImplRegular r0;
        java.lang.String r1;
        java.util.logging.Level $r2;

        r0 := @this: com.google.gwt.logging.impl.LoggerImplRegular;

        r1 := @parameter0: java.lang.String;

        $r2 = <java.util.logging.Level: java.util.logging.Level CONFIG>;

        virtualinvoke r0.<com.google.gwt.logging.impl.LoggerImplRegular: void log(java.util.logging.Level,java.lang.String)>($r2, r1);

        return;
    }

    public void fine(java.lang.String)
    {
        com.google.gwt.logging.impl.LoggerImplRegular r0;
        java.lang.String r1;
        java.util.logging.Level $r2;

        r0 := @this: com.google.gwt.logging.impl.LoggerImplRegular;

        r1 := @parameter0: java.lang.String;

        $r2 = <java.util.logging.Level: java.util.logging.Level FINE>;

        virtualinvoke r0.<com.google.gwt.logging.impl.LoggerImplRegular: void log(java.util.logging.Level,java.lang.String)>($r2, r1);

        return;
    }

    public void finer(java.lang.String)
    {
        com.google.gwt.logging.impl.LoggerImplRegular r0;
        java.lang.String r1;
        java.util.logging.Level $r2;

        r0 := @this: com.google.gwt.logging.impl.LoggerImplRegular;

        r1 := @parameter0: java.lang.String;

        $r2 = <java.util.logging.Level: java.util.logging.Level FINER>;

        virtualinvoke r0.<com.google.gwt.logging.impl.LoggerImplRegular: void log(java.util.logging.Level,java.lang.String)>($r2, r1);

        return;
    }

    public void finest(java.lang.String)
    {
        com.google.gwt.logging.impl.LoggerImplRegular r0;
        java.lang.String r1;
        java.util.logging.Level $r2;

        r0 := @this: com.google.gwt.logging.impl.LoggerImplRegular;

        r1 := @parameter0: java.lang.String;

        $r2 = <java.util.logging.Level: java.util.logging.Level FINEST>;

        virtualinvoke r0.<com.google.gwt.logging.impl.LoggerImplRegular: void log(java.util.logging.Level,java.lang.String)>($r2, r1);

        return;
    }

    public java.util.logging.Handler[] getHandlers()
    {
        java.lang.Object[] $r5;
        java.util.logging.Handler[] $r4, $r6;
        java.util.List $r1, $r2, $r3;
        int $i0, $i1;
        com.google.gwt.logging.impl.LoggerImplRegular r0;

        r0 := @this: com.google.gwt.logging.impl.LoggerImplRegular;

        $r1 = r0.<com.google.gwt.logging.impl.LoggerImplRegular: java.util.List handlers>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 <= 0 goto label1;

        $r3 = r0.<com.google.gwt.logging.impl.LoggerImplRegular: java.util.List handlers>;

        $r2 = r0.<com.google.gwt.logging.impl.LoggerImplRegular: java.util.List handlers>;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        $r4 = newarray (java.util.logging.Handler)[$i1];

        $r5 = interfaceinvoke $r3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r6 = (java.util.logging.Handler[]) $r5;

        return $r6;

     label1:
        return null;
    }

    public java.util.logging.Level getLevel()
    {
        com.google.gwt.logging.impl.LoggerImplRegular r0;
        java.util.logging.Logger $r2;
        java.util.logging.Level $r1, $r3, $r4;

        r0 := @this: com.google.gwt.logging.impl.LoggerImplRegular;

        $r1 = r0.<com.google.gwt.logging.impl.LoggerImplRegular: java.util.logging.Level level>;

        if $r1 == null goto label1;

        $r4 = r0.<com.google.gwt.logging.impl.LoggerImplRegular: java.util.logging.Level level>;

        return $r4;

     label1:
        $r2 = virtualinvoke r0.<com.google.gwt.logging.impl.LoggerImplRegular: java.util.logging.Logger getParent()>();

        $r3 = virtualinvoke $r2.<java.util.logging.Logger: java.util.logging.Level getLevel()>();

        return $r3;
    }

    public java.util.logging.Logger getLoggerHelper(java.lang.String)
    {
        java.util.logging.LogManager $r0;
        com.google.gwt.logging.impl.LoggerImplRegular r4;
        java.lang.String r1;
        java.util.logging.Logger $r2;
        com.google.gwt.logging.impl.LoggerWithExposedConstructor $r3;

        r4 := @this: com.google.gwt.logging.impl.LoggerImplRegular;

        r1 := @parameter0: java.lang.String;

        $r0 = staticinvoke <java.util.logging.LogManager: java.util.logging.LogManager getLogManager()>();

        $r2 = virtualinvoke $r0.<java.util.logging.LogManager: java.util.logging.Logger getLogger(java.lang.String)>(r1);

        if $r2 != null goto label1;

        $r3 = new com.google.gwt.logging.impl.LoggerWithExposedConstructor;

        specialinvoke $r3.<com.google.gwt.logging.impl.LoggerWithExposedConstructor: void <init>(java.lang.String)>(r1);

        virtualinvoke $r0.<java.util.logging.LogManager: boolean addLogger(java.util.logging.Logger)>($r3);

        return $r3;

     label1:
        return $r2;
    }

    public java.lang.String getName()
    {
        com.google.gwt.logging.impl.LoggerImplRegular r0;
        java.lang.String $r1;

        r0 := @this: com.google.gwt.logging.impl.LoggerImplRegular;

        $r1 = r0.<com.google.gwt.logging.impl.LoggerImplRegular: java.lang.String name>;

        return $r1;
    }

    public java.util.logging.Logger getParent()
    {
        com.google.gwt.logging.impl.LoggerImplRegular r0;
        java.util.logging.Logger $r1;

        r0 := @this: com.google.gwt.logging.impl.LoggerImplRegular;

        $r1 = r0.<com.google.gwt.logging.impl.LoggerImplRegular: java.util.logging.Logger parent>;

        return $r1;
    }

    public boolean getUseParentHandlers()
    {
        com.google.gwt.logging.impl.LoggerImplRegular r0;
        boolean $z0;

        r0 := @this: com.google.gwt.logging.impl.LoggerImplRegular;

        $z0 = r0.<com.google.gwt.logging.impl.LoggerImplRegular: boolean useParentHandlers>;

        return $z0;
    }

    public void info(java.lang.String)
    {
        com.google.gwt.logging.impl.LoggerImplRegular r0;
        java.lang.String r1;
        java.util.logging.Level $r2;

        r0 := @this: com.google.gwt.logging.impl.LoggerImplRegular;

        r1 := @parameter0: java.lang.String;

        $r2 = <java.util.logging.Level: java.util.logging.Level INFO>;

        virtualinvoke r0.<com.google.gwt.logging.impl.LoggerImplRegular: void log(java.util.logging.Level,java.lang.String)>($r2, r1);

        return;
    }

    public boolean isLoggable(java.util.logging.Level)
    {
        int $i0, $i1;
        com.google.gwt.logging.impl.LoggerImplRegular r0;
        java.util.logging.Level $r1, r2;
        boolean $z0;

        r0 := @this: com.google.gwt.logging.impl.LoggerImplRegular;

        r2 := @parameter0: java.util.logging.Level;

        $r1 = virtualinvoke r0.<com.google.gwt.logging.impl.LoggerImplRegular: java.util.logging.Level getLevel()>();

        $i0 = virtualinvoke $r1.<java.util.logging.Level: int intValue()>();

        $i1 = virtualinvoke r2.<java.util.logging.Level: int intValue()>();

        if $i0 > $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void log(java.util.logging.Level, java.lang.String)
    {
        com.google.gwt.logging.impl.LoggerImplRegular r0;
        java.lang.String r2;
        java.util.logging.Level r1;

        r0 := @this: com.google.gwt.logging.impl.LoggerImplRegular;

        r1 := @parameter0: java.util.logging.Level;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.google.gwt.logging.impl.LoggerImplRegular: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>(r1, r2, null);

        return;
    }

    public void log(java.util.logging.Level, java.lang.String, java.lang.Throwable)
    {
        java.lang.Throwable r4;
        com.google.gwt.logging.impl.LoggerImplRegular r0;
        java.lang.String r3, $r5;
        java.util.logging.LogRecord $r2;
        java.util.logging.Level r1;
        boolean $z0;

        r0 := @this: com.google.gwt.logging.impl.LoggerImplRegular;

        r1 := @parameter0: java.util.logging.Level;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.Throwable;

        $z0 = virtualinvoke r0.<com.google.gwt.logging.impl.LoggerImplRegular: boolean isLoggable(java.util.logging.Level)>(r1);

        if $z0 == 0 goto label1;

        $r2 = new java.util.logging.LogRecord;

        specialinvoke $r2.<java.util.logging.LogRecord: void <init>(java.util.logging.Level,java.lang.String)>(r1, r3);

        virtualinvoke $r2.<java.util.logging.LogRecord: void setThrown(java.lang.Throwable)>(r4);

        $r5 = virtualinvoke r0.<com.google.gwt.logging.impl.LoggerImplRegular: java.lang.String getName()>();

        virtualinvoke $r2.<java.util.logging.LogRecord: void setLoggerName(java.lang.String)>($r5);

        virtualinvoke r0.<com.google.gwt.logging.impl.LoggerImplRegular: void log(java.util.logging.LogRecord)>($r2);

     label1:
        return;
    }

    public void log(java.util.logging.LogRecord)
    {
        java.util.Iterator $r4;
        java.util.logging.LogRecord r1;
        java.util.logging.Logger $r5, $r6;
        java.util.logging.Level $r2;
        java.util.List $r3;
        com.google.gwt.logging.impl.LoggerImplRegular r0;
        java.lang.Object $r7;
        java.util.logging.Handler r8;
        boolean $z0, $z1, $z2;

        r0 := @this: com.google.gwt.logging.impl.LoggerImplRegular;

        r1 := @parameter0: java.util.logging.LogRecord;

        $r2 = virtualinvoke r1.<java.util.logging.LogRecord: java.util.logging.Level getLevel()>();

        $z0 = virtualinvoke r0.<com.google.gwt.logging.impl.LoggerImplRegular: boolean isLoggable(java.util.logging.Level)>($r2);

        if $z0 == 0 goto label3;

        $r3 = r0.<com.google.gwt.logging.impl.LoggerImplRegular: java.util.List handlers>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r7 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.util.logging.Handler) $r7;

        virtualinvoke r8.<java.util.logging.Handler: void publish(java.util.logging.LogRecord)>(r1);

        goto label1;

     label2:
        $z2 = r0.<com.google.gwt.logging.impl.LoggerImplRegular: boolean useParentHandlers>;

        if $z2 == 0 goto label3;

        $r5 = r0.<com.google.gwt.logging.impl.LoggerImplRegular: java.util.logging.Logger parent>;

        if $r5 == null goto label3;

        $r6 = r0.<com.google.gwt.logging.impl.LoggerImplRegular: java.util.logging.Logger parent>;

        virtualinvoke $r6.<java.util.logging.Logger: void log(java.util.logging.LogRecord)>(r1);

     label3:
        return;
    }

    public void removeHandler(java.util.logging.Handler)
    {
        com.google.gwt.logging.impl.LoggerImplRegular r0;
        java.util.List $r2;
        java.util.logging.Handler r1;

        r0 := @this: com.google.gwt.logging.impl.LoggerImplRegular;

        r1 := @parameter0: java.util.logging.Handler;

        $r2 = r0.<com.google.gwt.logging.impl.LoggerImplRegular: java.util.List handlers>;

        interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>(r1);

        return;
    }

    public void setLevel(java.util.logging.Level)
    {
        com.google.gwt.logging.impl.LoggerImplRegular r0;
        java.util.logging.Level r1;

        r0 := @this: com.google.gwt.logging.impl.LoggerImplRegular;

        r1 := @parameter0: java.util.logging.Level;

        r0.<com.google.gwt.logging.impl.LoggerImplRegular: java.util.logging.Level level> = r1;

        return;
    }

    public void setName(java.lang.String)
    {
        com.google.gwt.logging.impl.LoggerImplRegular r0;
        java.lang.String r1;

        r0 := @this: com.google.gwt.logging.impl.LoggerImplRegular;

        r1 := @parameter0: java.lang.String;

        r0.<com.google.gwt.logging.impl.LoggerImplRegular: java.lang.String name> = r1;

        return;
    }

    public void setParent(java.util.logging.Logger)
    {
        com.google.gwt.logging.impl.LoggerImplRegular r1;
        java.util.logging.Logger r0;

        r1 := @this: com.google.gwt.logging.impl.LoggerImplRegular;

        r0 := @parameter0: java.util.logging.Logger;

        if r0 == null goto label1;

        r1.<com.google.gwt.logging.impl.LoggerImplRegular: java.util.logging.Logger parent> = r0;

     label1:
        return;
    }

    public void setUseParentHandlers(boolean)
    {
        com.google.gwt.logging.impl.LoggerImplRegular r0;
        boolean z0;

        r0 := @this: com.google.gwt.logging.impl.LoggerImplRegular;

        z0 := @parameter0: boolean;

        r0.<com.google.gwt.logging.impl.LoggerImplRegular: boolean useParentHandlers> = z0;

        return;
    }

    public void severe(java.lang.String)
    {
        com.google.gwt.logging.impl.LoggerImplRegular r0;
        java.lang.String r1;
        java.util.logging.Level $r2;

        r0 := @this: com.google.gwt.logging.impl.LoggerImplRegular;

        r1 := @parameter0: java.lang.String;

        $r2 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        virtualinvoke r0.<com.google.gwt.logging.impl.LoggerImplRegular: void log(java.util.logging.Level,java.lang.String)>($r2, r1);

        return;
    }

    public void warning(java.lang.String)
    {
        com.google.gwt.logging.impl.LoggerImplRegular r0;
        java.lang.String r1;
        java.util.logging.Level $r2;

        r0 := @this: com.google.gwt.logging.impl.LoggerImplRegular;

        r1 := @parameter0: java.lang.String;

        $r2 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        virtualinvoke r0.<com.google.gwt.logging.impl.LoggerImplRegular: void log(java.util.logging.Level,java.lang.String)>($r2, r1);

        return;
    }
}
