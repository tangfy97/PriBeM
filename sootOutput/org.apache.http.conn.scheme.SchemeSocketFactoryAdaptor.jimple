class org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor extends java.lang.Object implements org.apache.http.conn.scheme.SchemeSocketFactory
{
    private final org.apache.http.conn.scheme.SocketFactory factory;

    void <init>(org.apache.http.conn.scheme.SocketFactory)
    {
        org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor r0;
        org.apache.http.conn.scheme.SocketFactory r1;

        r0 := @this: org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor;

        r1 := @parameter0: org.apache.http.conn.scheme.SocketFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor: org.apache.http.conn.scheme.SocketFactory factory> = r1;

        return;
    }

    public java.net.Socket connectSocket(java.net.Socket, java.net.InetSocketAddress, java.net.InetSocketAddress, org.apache.http.params.HttpParams) throws java.io.IOException, java.net.UnknownHostException, org.apache.http.conn.ConnectTimeoutException
    {
        java.net.Socket r4, $r7;
        org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor r3;
        java.net.InetSocketAddress r0, r2;
        java.net.InetAddress r8;
        org.apache.http.params.HttpParams r5;
        org.apache.http.conn.scheme.SocketFactory $r6;
        int $i0, i1;
        java.lang.String $r1;

        r3 := @this: org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor;

        r4 := @parameter0: java.net.Socket;

        r0 := @parameter1: java.net.InetSocketAddress;

        r2 := @parameter2: java.net.InetSocketAddress;

        r5 := @parameter3: org.apache.http.params.HttpParams;

        $r1 = virtualinvoke r0.<java.net.InetSocketAddress: java.lang.String getHostName()>();

        $i0 = virtualinvoke r0.<java.net.InetSocketAddress: int getPort()>();

        r8 = null;

        i1 = 0;

        if r2 == null goto label1;

        r8 = virtualinvoke r2.<java.net.InetSocketAddress: java.net.InetAddress getAddress()>();

        i1 = virtualinvoke r2.<java.net.InetSocketAddress: int getPort()>();

     label1:
        $r6 = r3.<org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor: org.apache.http.conn.scheme.SocketFactory factory>;

        $r7 = interfaceinvoke $r6.<org.apache.http.conn.scheme.SocketFactory: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)>(r4, $r1, $i0, r8, i1, r5);

        return $r7;
    }

    public java.net.Socket createSocket(org.apache.http.params.HttpParams) throws java.io.IOException
    {
        java.net.Socket $r2;
        org.apache.http.conn.scheme.SocketFactory $r1;
        org.apache.http.params.HttpParams r3;
        org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor r0;

        r0 := @this: org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor;

        r3 := @parameter0: org.apache.http.params.HttpParams;

        $r1 = r0.<org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor: org.apache.http.conn.scheme.SocketFactory factory>;

        $r2 = interfaceinvoke $r1.<org.apache.http.conn.scheme.SocketFactory: java.net.Socket createSocket()>();

        return $r2;
    }

    public boolean isSecure(java.net.Socket) throws java.lang.IllegalArgumentException
    {
        java.net.Socket r1;
        org.apache.http.conn.scheme.SocketFactory $r2;
        org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor r0;
        boolean $z0;

        r0 := @this: org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor;

        r1 := @parameter0: java.net.Socket;

        $r2 = r0.<org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor: org.apache.http.conn.scheme.SocketFactory factory>;

        $z0 = interfaceinvoke $r2.<org.apache.http.conn.scheme.SocketFactory: boolean isSecure(java.net.Socket)>(r1);

        return $z0;
    }

    public org.apache.http.conn.scheme.SocketFactory getFactory()
    {
        org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor r0;
        org.apache.http.conn.scheme.SocketFactory $r1;

        r0 := @this: org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor;

        $r1 = r0.<org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor: org.apache.http.conn.scheme.SocketFactory factory>;

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor r1, $r3;
        org.apache.http.conn.scheme.SocketFactory $r2, $r4, $r5;
        java.lang.Object r0;
        boolean $z0, $z1, $z2;

        r1 := @this: org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        return 0;

     label1:
        if r1 != r0 goto label2;

        return 1;

     label2:
        $z0 = r0 instanceof org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor;

        if $z0 == 0 goto label3;

        $r5 = r1.<org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor: org.apache.http.conn.scheme.SocketFactory factory>;

        $r3 = (org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor) r0;

        $r4 = $r3.<org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor: org.apache.http.conn.scheme.SocketFactory factory>;

        $z2 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        return $z2;

     label3:
        $r2 = r1.<org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor: org.apache.http.conn.scheme.SocketFactory factory>;

        $z1 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>(r0);

        return $z1;
    }

    public int hashCode()
    {
        int $i0;
        org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor r0;
        org.apache.http.conn.scheme.SocketFactory $r1;

        r0 := @this: org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor;

        $r1 = r0.<org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor: org.apache.http.conn.scheme.SocketFactory factory>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        return $i0;
    }
}
