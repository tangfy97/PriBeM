final class kodkod.engine.fol2sat.SymmetryDetector$1 extends java.lang.Object implements java.util.Comparator
{

    void <init>()
    {
        kodkod.engine.fol2sat.SymmetryDetector$1 r0;

        r0 := @this: kodkod.engine.fol2sat.SymmetryDetector$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(kodkod.instance.TupleSet, kodkod.instance.TupleSet)
    {
        kodkod.engine.fol2sat.SymmetryDetector$1 r2;
        int $i0, $i1, $i2;
        kodkod.instance.TupleSet r0, r1;

        r2 := @this: kodkod.engine.fol2sat.SymmetryDetector$1;

        r0 := @parameter0: kodkod.instance.TupleSet;

        r1 := @parameter1: kodkod.instance.TupleSet;

        $i0 = virtualinvoke r0.<kodkod.instance.TupleSet: int size()>();

        $i1 = virtualinvoke r1.<kodkod.instance.TupleSet: int size()>();

        $i2 = $i0 - $i1;

        return $i2;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        kodkod.engine.fol2sat.SymmetryDetector$1 r0;
        int $i0;
        java.lang.Object r1, r2;
        kodkod.instance.TupleSet $r3, $r4;

        r0 := @this: kodkod.engine.fol2sat.SymmetryDetector$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kodkod.instance.TupleSet) r1;

        $r3 = (kodkod.instance.TupleSet) r2;

        $i0 = virtualinvoke r0.<kodkod.engine.fol2sat.SymmetryDetector$1: int compare(kodkod.instance.TupleSet,kodkod.instance.TupleSet)>($r4, $r3);

        return $i0;
    }
}
