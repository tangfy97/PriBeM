public class com.jidesoft.plaf.eclipse.EclipseMetalUtils extends com.jidesoft.plaf.eclipse.EclipseLookAndFeelExtension
{

    public void <init>()
    {
        com.jidesoft.plaf.eclipse.EclipseMetalUtils r0;

        r0 := @this: com.jidesoft.plaf.eclipse.EclipseMetalUtils;

        specialinvoke r0.<com.jidesoft.plaf.eclipse.EclipseLookAndFeelExtension: void <init>()>();

        return;
    }

    public static void initClassDefaults(javax.swing.UIDefaults)
    {
        javax.swing.UIDefaults r0;
        int $i0, $i1;

        r0 := @parameter0: javax.swing.UIDefaults;

        staticinvoke <com.jidesoft.plaf.eclipse.EclipseLookAndFeelExtension: void initClassDefaults(javax.swing.UIDefaults)>(r0);

        $i0 = staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: int getProductsUsed()>();

        virtualinvoke r0.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("RangeSliderUI", "com.jidesoft.plaf.metal.MetalRangeSliderUI");

        $i1 = $i0 & 4;

        if $i1 == 0 goto label1;

        virtualinvoke r0.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("ExComboBoxUI", "com.jidesoft.plaf.metal.MetalExComboBoxUI");

     label1:
        return;
    }

    public static void initComponentDefaults(javax.swing.UIDefaults)
    {
        java.awt.Color $r8, $r9, $r14, $r20, $r21, $r23, $r27, $r28, $r29, $r30, $r33, $r34, $r35, $r36, $r39, $r40, $r41, $r42, $r45, $r46, $r47, $r48, $r51, $r52, $r54, $r55, $r57, $r58, $r105, $r161, $r172, $r173, $r202, $r243, $r244;
        java.lang.Integer $r63, $r64, $r68, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r78, $r79, $r80, $r81, $r82, $r83, $r84, $r85, $r86, $r87, $r88, $r89, $r90, $r91, $r92, $r93, $r94, $r95, $r102, $r106, $r109, $r115, $r116, $r122, $r125, $r126, $r127, $r165, $r168, $r169, $r174, $r180, $r194, $r200, $r201, $r206, $r207, $r208, $r209, $r210, $r230, $r231, $r232, $r236, $r237, $r242;
        javax.swing.border.Border $r24, $r70, $r118, $r154, $r157, $r159, $r162, $r163, $r179, $r182, $r184, $r186, $r190, $r192, $r215, $r217, $r219, $r239;
        java.lang.Object[] $r61, $r66, $r111, $r113, $r124, $r147, $r152, $r155, $r167, $r177, $r204;
        javax.swing.plaf.BorderUIResource $r69, $r97, $r114, $r117, $r156, $r158, $r160, $r178, $r181, $r183, $r185, $r189, $r191, $r196, $r214, $r216, $r218, $r238;
        javax.swing.plaf.basic.BasicBorders$MarginBorder $r60;
        java.awt.Toolkit $r0;
        java.awt.Insets $r22, $r31, $r37, $r43, $r49, $r193;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Boolean $r100, $r107, $r108, $r119, $r121, $r153, $r175, $r199, $r211, $r212, $r228, $r229, $r233, $r235, $r240;
        javax.swing.UIDefaults$LazyInputMap $r65, $r110, $r112, $r123, $r166;
        java.lang.Object $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r10, $r11, $r12, $r13, $r16, $r17, $r18, $r245;
        javax.swing.border.CompoundBorder $r25, $r164;
        javax.swing.plaf.ColorUIResource $r50, $r53, $r56, $r96, $r103, $r104, $r148, $r149, $r150, $r151, $r195, $r241;
        com.jidesoft.plaf.eclipse.EclipseMetalUtils$1 $r59;
        javax.swing.ImageIcon $r128, $r129, $r130, $r131, $r132, $r133, $r134, $r135, $r136, $r137, $r138, $r139, $r140, $r141, $r142, $r143, $r144, $r145, $r176, $r187, $r188, $r197, $r198, $r203, $r213, $r220, $r221, $r222, $r223, $r224, $r225, $r226, $r227;
        com.jidesoft.plaf.eclipse.FrameBorder $r26, $r32, $r38, $r44;
        com.jidesoft.plaf.basic.ThemePainter $r146;
        boolean $z0, $z1;
        javax.swing.UIDefaults r15;
        javax.swing.plaf.DimensionUIResource $r170, $r171;
        javax.swing.Icon $r67;
        javax.swing.plaf.InsetsUIResource $r62, $r98, $r99, $r101, $r120, $r205, $r234;
        com.jidesoft.plaf.eclipse.ShadowBorder $r19;

        r15 := @parameter0: javax.swing.UIDefaults;

        $r0 = staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>();

        $r1 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlText");

        $r2 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("control");

        $r3 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlHighlight");

        $r4 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlLtHighlight");

        $r5 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlShadow");

        $r6 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlDkShadow");

        $r7 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("activeCaptionText");

        $r8 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("activeCaption");

        $z0 = $r8 instanceof java.awt.Color;

        if $z0 == 0 goto label1;

        $r243 = (java.awt.Color) $r8;

        $r244 = virtualinvoke $r243.<java.awt.Color: java.awt.Color darker()>();

        goto label2;

     label1:
        $r9 = <java.awt.Color: java.awt.Color gray>;

        $r244 = virtualinvoke $r9.<java.awt.Color: java.awt.Color darker()>();

     label2:
        $r10 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlDkShadow");

        $r11 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlText");

        $r12 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("control");

        $r13 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlShadow");

        $r14 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("controlShadow");

        $r16 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: java.lang.Object getControlFont(java.awt.Toolkit,javax.swing.UIDefaults)>($r0, r15);

        $r17 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: java.lang.Object getMenuFont(java.awt.Toolkit,javax.swing.UIDefaults)>($r0, r15);

        $r18 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: java.lang.Object getBoldFont(java.awt.Toolkit,javax.swing.UIDefaults)>($r0, r15);

        $r19 = new com.jidesoft.plaf.eclipse.ShadowBorder;

        $r20 = new java.awt.Color;

        specialinvoke $r20.<java.awt.Color: void <init>(int,int,int)>(171, 168, 165);

        $r21 = new java.awt.Color;

        specialinvoke $r21.<java.awt.Color: void <init>(int,int,int)>(143, 141, 138);

        $r22 = new java.awt.Insets;

        specialinvoke $r22.<java.awt.Insets: void <init>(int,int,int,int)>(0, 0, 2, 2);

        specialinvoke $r19.<com.jidesoft.plaf.eclipse.ShadowBorder: void <init>(java.awt.Color,java.awt.Color,java.awt.Color,java.awt.Color,java.awt.Insets)>(null, null, $r20, $r21, $r22);

        $r23 = <java.awt.Color: java.awt.Color gray>;

        $r24 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createLineBorder(java.awt.Color)>($r23);

        $r25 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.CompoundBorder createCompoundBorder(javax.swing.border.Border,javax.swing.border.Border)>($r19, $r24);

        $r26 = new com.jidesoft.plaf.eclipse.FrameBorder;

        $r27 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("control");

        $r28 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("controlLtHighlight");

        $r29 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("controlShadow");

        $r30 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("controlDkShadow");

        $r31 = new java.awt.Insets;

        specialinvoke $r31.<java.awt.Insets: void <init>(int,int,int,int)>(0, 4, 0, 0);

        specialinvoke $r26.<com.jidesoft.plaf.eclipse.FrameBorder: void <init>(java.awt.Color,java.awt.Color,java.awt.Color,java.awt.Color,java.awt.Insets)>($r27, $r28, $r29, $r30, $r31);

        $r32 = new com.jidesoft.plaf.eclipse.FrameBorder;

        $r33 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("control");

        $r34 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("controlLtHighlight");

        $r35 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("controlShadow");

        $r36 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("controlDkShadow");

        $r37 = new java.awt.Insets;

        specialinvoke $r37.<java.awt.Insets: void <init>(int,int,int,int)>(0, 0, 0, 4);

        specialinvoke $r32.<com.jidesoft.plaf.eclipse.FrameBorder: void <init>(java.awt.Color,java.awt.Color,java.awt.Color,java.awt.Color,java.awt.Insets)>($r33, $r34, $r35, $r36, $r37);

        $r38 = new com.jidesoft.plaf.eclipse.FrameBorder;

        $r39 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("control");

        $r40 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("controlLtHighlight");

        $r41 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("controlShadow");

        $r42 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("controlDkShadow");

        $r43 = new java.awt.Insets;

        specialinvoke $r43.<java.awt.Insets: void <init>(int,int,int,int)>(0, 0, 4, 0);

        specialinvoke $r38.<com.jidesoft.plaf.eclipse.FrameBorder: void <init>(java.awt.Color,java.awt.Color,java.awt.Color,java.awt.Color,java.awt.Insets)>($r39, $r40, $r41, $r42, $r43);

        $r44 = new com.jidesoft.plaf.eclipse.FrameBorder;

        $r45 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("control");

        $r46 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("controlLtHighlight");

        $r47 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("controlShadow");

        $r48 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("controlDkShadow");

        $r49 = new java.awt.Insets;

        specialinvoke $r49.<java.awt.Insets: void <init>(int,int,int,int)>(4, 0, 0, 0);

        specialinvoke $r44.<com.jidesoft.plaf.eclipse.FrameBorder: void <init>(java.awt.Color,java.awt.Color,java.awt.Color,java.awt.Color,java.awt.Insets)>($r45, $r46, $r47, $r48, $r49);

        $r50 = new javax.swing.plaf.ColorUIResource;

        $r51 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("textHighlight");

        $r52 = staticinvoke <com.jidesoft.plaf.eclipse.EclipseUtils: java.awt.Color getFocusedButtonColor(java.awt.Color)>($r51);

        specialinvoke $r50.<javax.swing.plaf.ColorUIResource: void <init>(java.awt.Color)>($r52);

        $r53 = new javax.swing.plaf.ColorUIResource;

        $r54 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("textHighlight");

        $r55 = staticinvoke <com.jidesoft.plaf.eclipse.EclipseUtils: java.awt.Color getSelectedAndFocusedButtonColor(java.awt.Color)>($r54);

        specialinvoke $r53.<javax.swing.plaf.ColorUIResource: void <init>(java.awt.Color)>($r55);

        $r56 = new javax.swing.plaf.ColorUIResource;

        $r57 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("textHighlight");

        $r58 = staticinvoke <com.jidesoft.plaf.eclipse.EclipseUtils: java.awt.Color getSelectedButtonColor(java.awt.Color)>($r57);

        specialinvoke $r56.<javax.swing.plaf.ColorUIResource: void <init>(java.awt.Color)>($r58);

        $r59 = new com.jidesoft.plaf.eclipse.EclipseMetalUtils$1;

        specialinvoke $r59.<com.jidesoft.plaf.eclipse.EclipseMetalUtils$1: void <init>()>();

        $r60 = new javax.swing.plaf.basic.BasicBorders$MarginBorder;

        specialinvoke $r60.<javax.swing.plaf.basic.BasicBorders$MarginBorder: void <init>()>();

        $r61 = newarray (java.lang.Object)[236];

        $r61[0] = "JideLabel.font";

        $r61[1] = $r16;

        $r61[2] = "JideLabel.background";

        $r61[3] = $r2;

        $r61[4] = "JideLabel.foreground";

        $r61[5] = $r1;

        $r61[6] = "JideButton.selectedAndFocusedBackground";

        $r61[7] = $r53;

        $r61[8] = "JideButton.focusedBackground";

        $r61[9] = $r50;

        $r61[10] = "JideButton.selectedBackground";

        $r61[11] = $r56;

        $r61[12] = "JideButton.borderColor";

        $r61[13] = $r14;

        $r61[14] = "JideButton.font";

        $r61[15] = $r16;

        $r61[16] = "JideButton.background";

        $r61[17] = $r2;

        $r61[18] = "JideButton.foreground";

        $r61[19] = $r1;

        $r61[20] = "JideButton.shadow";

        $r61[21] = $r5;

        $r61[22] = "JideButton.darkShadow";

        $r61[23] = $r6;

        $r61[24] = "JideButton.light";

        $r61[25] = $r3;

        $r61[26] = "JideButton.highlight";

        $r61[27] = $r4;

        $r61[28] = "JideButton.border";

        $r61[29] = $r60;

        $r61[30] = "JideButton.margin";

        $r62 = new javax.swing.plaf.InsetsUIResource;

        specialinvoke $r62.<javax.swing.plaf.InsetsUIResource: void <init>(int,int,int,int)>(3, 3, 3, 3);

        $r61[31] = $r62;

        $r61[32] = "JideButton.textIconGap";

        $r63 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r61[33] = $r63;

        $r61[34] = "JideButton.textShiftOffset";

        $r64 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r61[35] = $r64;

        $r61[36] = "JideButton.focusInputMap";

        $r65 = new javax.swing.UIDefaults$LazyInputMap;

        $r66 = newarray (java.lang.Object)[4];

        $r66[0] = "SPACE";

        $r66[1] = "pressed";

        $r66[2] = "released SPACE";

        $r66[3] = "released";

        specialinvoke $r65.<javax.swing.UIDefaults$LazyInputMap: void <init>(java.lang.Object[])>($r66);

        $r61[37] = $r65;

        $r61[38] = "TristateCheckBox.icon";

        $r67 = staticinvoke <com.jidesoft.plaf.metal.MetalIconFactory: javax.swing.Icon getCheckBoxIcon()>();

        $r61[39] = $r67;

        $r61[40] = "JideSplitPane.dividerSize";

        $r68 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r61[41] = $r68;

        $r61[42] = "JideSplitPaneDivider.border";

        $r69 = new javax.swing.plaf.BorderUIResource;

        $r70 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder()>();

        specialinvoke $r69.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r70);

        $r61[43] = $r69;

        $r61[44] = "JideSplitPaneDivider.background";

        $r61[45] = $r2;

        $r61[46] = "JideSplitPaneDivider.gripperPainter";

        $r61[47] = $r59;

        $r61[48] = "JideTabbedPane.defaultTabShape";

        $r71 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);

        $r61[49] = $r71;

        $r61[50] = "JideTabbedPane.defaultTabColorTheme";

        $r72 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r61[51] = $r72;

        $r61[52] = "JideTabbedPane.tabRectPadding";

        $r73 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r61[53] = $r73;

        $r61[54] = "JideTabbedPane.closeButtonMarginHorizonal";

        $r74 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r61[55] = $r74;

        $r61[56] = "JideTabbedPane.closeButtonMarginVertical";

        $r75 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r61[57] = $r75;

        $r61[58] = "JideTabbedPane.textMarginVertical";

        $r76 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r61[59] = $r76;

        $r61[60] = "JideTabbedPane.noIconMargin";

        $r77 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r61[61] = $r77;

        $r61[62] = "JideTabbedPane.iconMargin";

        $r78 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r61[63] = $r78;

        $r61[64] = "JideTabbedPane.textPadding";

        $r79 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);

        $r61[65] = $r79;

        $r61[66] = "JideTabbedPane.buttonSize";

        $r80 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(18);

        $r61[67] = $r80;

        $r61[68] = "JideTabbedPane.buttonMargin";

        $r81 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r61[69] = $r81;

        $r61[70] = "JideTabbedPane.fitStyleBoundSize";

        $r82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8);

        $r61[71] = $r82;

        $r61[72] = "JideTabbedPane.fitStyleFirstTabMargin";

        $r83 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r61[73] = $r83;

        $r61[74] = "JideTabbedPane.fitStyleIconMinWidth";

        $r84 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(24);

        $r61[75] = $r84;

        $r61[76] = "JideTabbedPane.fitStyleTextMinWidth";

        $r85 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(16);

        $r61[77] = $r85;

        $r61[78] = "JideTabbedPane.compressedStyleNoIconRectSize";

        $r86 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(24);

        $r61[79] = $r86;

        $r61[80] = "JideTabbedPane.compressedStyleIconMargin";

        $r87 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(12);

        $r61[81] = $r87;

        $r61[82] = "JideTabbedPane.compressedStyleCloseButtonMarginHorizontal";

        $r88 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r61[83] = $r88;

        $r61[84] = "JideTabbedPane.compressedStyleCloseButtonMarginVertical";

        $r89 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r61[85] = $r89;

        $r61[86] = "JideTabbedPane.fixedStyleRectSize";

        $r90 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(60);

        $r61[87] = $r90;

        $r61[88] = "JideTabbedPane.closeButtonMargin";

        $r91 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r61[89] = $r91;

        $r61[90] = "JideTabbedPane.gripLeftMargin";

        $r92 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r61[91] = $r92;

        $r61[92] = "JideTabbedPane.closeButtonMarginSize";

        $r93 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);

        $r61[93] = $r93;

        $r61[94] = "JideTabbedPane.closeButtonLeftMargin";

        $r94 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r61[95] = $r94;

        $r61[96] = "JideTabbedPane.closeButtonRightMargin";

        $r95 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r61[97] = $r95;

        $r61[98] = "JideTabbedPane.defaultTabBorderShadowColor";

        $r96 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r96.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(115, 109, 99);

        $r61[99] = $r96;

        $r61[100] = "JideTabbedPane.gripperPainter";

        $r61[101] = $r59;

        $r61[102] = "JideTabbedPane.border";

        $r97 = new javax.swing.plaf.BorderUIResource;

        specialinvoke $r97.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r25);

        $r61[103] = $r97;

        $r61[104] = "JideTabbedPane.background";

        $r61[105] = $r2;

        $r61[106] = "JideTabbedPane.foreground";

        $r61[107] = $r1;

        $r61[108] = "JideTabbedPane.light";

        $r61[109] = $r3;

        $r61[110] = "JideTabbedPane.highlight";

        $r61[111] = $r4;

        $r61[112] = "JideTabbedPane.shadow";

        $r61[113] = $r5;

        $r61[114] = "JideTabbedPane.darkShadow";

        $r61[115] = $r6;

        $r61[116] = "JideTabbedPane.tabInsets";

        $r98 = new javax.swing.plaf.InsetsUIResource;

        specialinvoke $r98.<javax.swing.plaf.InsetsUIResource: void <init>(int,int,int,int)>(1, 4, 1, 4);

        $r61[117] = $r98;

        $r61[118] = "JideTabbedPane.contentBorderInsets";

        $r99 = new javax.swing.plaf.InsetsUIResource;

        specialinvoke $r99.<javax.swing.plaf.InsetsUIResource: void <init>(int,int,int,int)>(1, 0, 0, 0);

        $r61[119] = $r99;

        $r61[120] = "JideTabbedPane.ignoreContentBorderInsetsIfNoTabs";

        $r100 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r61[121] = $r100;

        $r61[122] = "JideTabbedPane.tabAreaInsets";

        $r101 = new javax.swing.plaf.InsetsUIResource;

        specialinvoke $r101.<javax.swing.plaf.InsetsUIResource: void <init>(int,int,int,int)>(0, 0, 0, 0);

        $r61[123] = $r101;

        $r61[124] = "JideTabbedPane.tabAreaBackground";

        $r61[125] = $r2;

        $r61[126] = "JideTabbedPane.tabAreaBackgroundLt";

        $r61[127] = $r4;

        $r61[128] = "JideTabbedPane.tabAreaBackgroundDk";

        $r61[129] = $r2;

        $r61[130] = "JideTabbedPane.tabRunOverlay";

        $r102 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r61[131] = $r102;

        $r61[132] = "JideTabbedPane.font";

        $r61[133] = $r16;

        $r61[134] = "JideTabbedPane.selectedTabFont";

        $r61[135] = $r16;

        $r61[136] = "JideTabbedPane.selectedTabTextForeground";

        $r61[137] = $r7;

        $r61[138] = "JideTabbedPane.unselectedTabTextForeground";

        $r61[139] = $r11;

        $r61[140] = "JideTabbedPane.selectedTabBackground";

        $r61[141] = $r2;

        $r61[142] = "JideTabbedPane.selectedTabBackgroundLt";

        $r103 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r103.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(230, 139, 44);

        $r61[143] = $r103;

        $r61[144] = "JideTabbedPane.selectedTabBackgroundDk";

        $r104 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r104.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(255, 199, 60);

        $r61[145] = $r104;

        $r61[146] = "JideTabbedPane.tabListBackground";

        $r105 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("List.background");

        $r61[147] = $r105;

        $r61[148] = "JideTabbedPane.textIconGap";

        $r106 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r61[149] = $r106;

        $r61[150] = "JideTabbedPane.showIconOnTab";

        $r107 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r61[151] = $r107;

        $r61[152] = "JideTabbedPane.showCloseButtonOnTab";

        $r108 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r61[153] = $r108;

        $r61[154] = "JideTabbedPane.closeButtonAlignment";

        $r109 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(11);

        $r61[155] = $r109;

        $r61[156] = "JideTabbedPane.focusInputMap";

        $r110 = new javax.swing.UIDefaults$LazyInputMap;

        $r111 = newarray (java.lang.Object)[20];

        $r111[0] = "RIGHT";

        $r111[1] = "navigateRight";

        $r111[2] = "KP_RIGHT";

        $r111[3] = "navigateRight";

        $r111[4] = "LEFT";

        $r111[5] = "navigateLeft";

        $r111[6] = "KP_LEFT";

        $r111[7] = "navigateLeft";

        $r111[8] = "UP";

        $r111[9] = "navigateUp";

        $r111[10] = "KP_UP";

        $r111[11] = "navigateUp";

        $r111[12] = "DOWN";

        $r111[13] = "navigateDown";

        $r111[14] = "KP_DOWN";

        $r111[15] = "navigateDown";

        $r111[16] = "ctrl DOWN";

        $r111[17] = "requestFocusForVisibleComponent";

        $r111[18] = "ctrl KP_DOWN";

        $r111[19] = "requestFocusForVisibleComponent";

        specialinvoke $r110.<javax.swing.UIDefaults$LazyInputMap: void <init>(java.lang.Object[])>($r111);

        $r61[157] = $r110;

        $r61[158] = "JideTabbedPane.ancestorInputMap";

        $r112 = new javax.swing.UIDefaults$LazyInputMap;

        $r113 = newarray (java.lang.Object)[8];

        $r113[0] = "ctrl PAGE_DOWN";

        $r113[1] = "navigatePageDown";

        $r113[2] = "ctrl PAGE_UP";

        $r113[3] = "navigatePageUp";

        $r113[4] = "ctrl UP";

        $r113[5] = "requestFocus";

        $r113[6] = "ctrl KP_UP";

        $r113[7] = "requestFocus";

        specialinvoke $r112.<javax.swing.UIDefaults$LazyInputMap: void <init>(java.lang.Object[])>($r113);

        $r61[159] = $r112;

        $r61[160] = "Resizable.resizeBorder";

        $r114 = new javax.swing.plaf.BorderUIResource;

        specialinvoke $r114.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r25);

        $r61[161] = $r114;

        $r61[162] = "Gripper.size";

        $r115 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8);

        $r61[163] = $r115;

        $r61[164] = "Gripper.size";

        $r116 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8);

        $r61[165] = $r116;

        $r61[166] = "Gripper.painter";

        $r61[167] = $r59;

        $r61[168] = "MenuBar.border";

        $r117 = new javax.swing.plaf.BorderUIResource;

        $r118 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(2, 2, 2, 2);

        specialinvoke $r117.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r118);

        $r61[169] = $r117;

        $r61[170] = "Icon.floating";

        $r119 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r61[171] = $r119;

        $r61[172] = "JideSplitButton.font";

        $r61[173] = $r16;

        $r61[174] = "JideSplitButton.margin";

        $r120 = new javax.swing.plaf.InsetsUIResource;

        specialinvoke $r120.<javax.swing.plaf.InsetsUIResource: void <init>(int,int,int,int)>(3, 3, 3, 7);

        $r61[175] = $r120;

        $r61[176] = "JideSplitButton.border";

        $r61[177] = $r60;

        $r61[178] = "JideSplitButton.borderPainted";

        $r121 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r61[179] = $r121;

        $r61[180] = "JideSplitButton.textIconGap";

        $r122 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r61[181] = $r122;

        $r61[182] = "JideSplitButton.selectionBackground";

        $r61[183] = $r14;

        $r61[184] = "JideSplitButton.selectionForeground";

        $r61[185] = $r1;

        $r61[186] = "JideSplitButton.focusInputMap";

        $r123 = new javax.swing.UIDefaults$LazyInputMap;

        $r124 = newarray (java.lang.Object)[8];

        $r124[0] = "SPACE";

        $r124[1] = "pressed";

        $r124[2] = "released SPACE";

        $r124[3] = "released";

        $r124[4] = "DOWN";

        $r124[5] = "downPressed";

        $r124[6] = "released DOWN";

        $r124[7] = "downReleased";

        specialinvoke $r123.<javax.swing.UIDefaults$LazyInputMap: void <init>(java.lang.Object[])>($r124);

        $r61[187] = $r123;

        $r61[188] = "ButtonPanel.order";

        $r61[189] = "ACO";

        $r61[190] = "ButtonPanel.oppositeOrder";

        $r61[191] = "H";

        $r61[192] = "ButtonPanel.buttonGap";

        $r125 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r61[193] = $r125;

        $r61[194] = "ButtonPanel.groupGap";

        $r126 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r61[195] = $r126;

        $r61[196] = "ButtonPanel.minButtonWidth";

        $r127 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(57);

        $r61[197] = $r127;

        $r61[198] = "HeaderBox.background";

        $r61[199] = $r2;

        $r61[200] = "Cursor.hsplit";

        $r128 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_h_split.gif");

        $r61[201] = $r128;

        $r61[202] = "Cursor.vsplit";

        $r129 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_v_split.gif");

        $r61[203] = $r129;

        $r61[204] = "Cursor.north";

        $r130 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_north.gif");

        $r61[205] = $r130;

        $r61[206] = "Cursor.south";

        $r131 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_south.gif");

        $r61[207] = $r131;

        $r61[208] = "Cursor.east";

        $r132 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_east.gif");

        $r61[209] = $r132;

        $r61[210] = "Cursor.west";

        $r133 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_west.gif");

        $r61[211] = $r133;

        $r61[212] = "Cursor.tab";

        $r134 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_tab.gif");

        $r61[213] = $r134;

        $r61[214] = "Cursor.float";

        $r135 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_float.gif");

        $r61[215] = $r135;

        $r61[216] = "Cursor.vertical";

        $r136 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_vertical.gif");

        $r61[217] = $r136;

        $r61[218] = "Cursor.horizontal";

        $r137 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_horizontal.gif");

        $r61[219] = $r137;

        $r61[220] = "Cursor.delete";

        $r138 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_delete.gif");

        $r61[221] = $r138;

        $r61[222] = "Cursor.drag";

        $r139 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_drag.gif");

        $r61[223] = $r139;

        $r61[224] = "Cursor.dragStop";

        $r140 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_drag_stop.gif");

        $r61[225] = $r140;

        $r61[226] = "Cursor.dragText";

        $r141 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_drag_text.gif");

        $r61[227] = $r141;

        $r61[228] = "Cursor.dragTextStop";

        $r142 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_drag_text_stop.gif");

        $r61[229] = $r142;

        $r61[230] = "Cursor.percentage";

        $r143 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_percentage.gif");

        $r61[231] = $r143;

        $r61[232] = "Cursor.moveEast";

        $r144 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_move_east.gif");

        $r61[233] = $r144;

        $r61[234] = "Cursor.moveWest";

        $r145 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_move_west.gif");

        $r61[235] = $r145;

        virtualinvoke r15.<javax.swing.UIDefaults: void putDefaults(java.lang.Object[])>($r61);

        $i0 = staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: int getProductsUsed()>();

        $i1 = $i0 & 1;

        if $i1 == 0 goto label3;

        $r203 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.Class,java.lang.String)>(class "Lcom/jidesoft/plaf/eclipse/EclipseMetalUtils;", "icons/title_buttons_eclipse.gif");

        $r204 = newarray (java.lang.Object)[112];

        $r204[0] = "Workspace.background";

        $r204[1] = $r13;

        $r204[2] = "SidePane.margin";

        $r205 = new javax.swing.plaf.InsetsUIResource;

        specialinvoke $r205.<javax.swing.plaf.InsetsUIResource: void <init>(int,int,int,int)>(1, 1, 1, 1);

        $r204[3] = $r205;

        $r204[4] = "SidePane.iconTextGap";

        $r206 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r204[5] = $r206;

        $r204[6] = "SidePane.textBorderGap";

        $r207 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(13);

        $r204[7] = $r207;

        $r204[8] = "SidePane.itemGap";

        $r208 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r204[9] = $r208;

        $r204[10] = "SidePane.groupGap";

        $r209 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r204[11] = $r209;

        $r204[12] = "SidePane.foreground";

        $r204[13] = $r6;

        $r204[14] = "SidePane.background";

        $r204[15] = $r2;

        $r204[16] = "SidePane.lineColor";

        $r204[17] = $r5;

        $r204[18] = "SidePane.buttonBackground";

        $r204[19] = $r2;

        $r204[20] = "SidePane.font";

        $r204[21] = $r16;

        $r204[22] = "SidePane.orientation";

        $r210 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r204[23] = $r210;

        $r204[24] = "SidePane.showSelectedTabText";

        $r211 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r204[25] = $r211;

        $r204[26] = "SidePane.alwaysShowTabText";

        $r212 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r204[27] = $r212;

        $r204[28] = "DockableFrame.defaultIcon";

        $r213 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/dockableframe_blank.gif");

        $r204[29] = $r213;

        $r204[30] = "DockableFrame.background";

        $r204[31] = $r2;

        $r204[32] = "DockableFrame.border";

        $r214 = new javax.swing.plaf.BorderUIResource;

        $r215 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(0, 0, 0, 0);

        specialinvoke $r214.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r215);

        $r204[33] = $r214;

        $r204[34] = "DockableFrame.floatingBorder";

        $r216 = new javax.swing.plaf.BorderUIResource;

        $r217 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(0, 0, 0, 0);

        specialinvoke $r216.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r217);

        $r204[35] = $r216;

        $r204[36] = "DockableFrame.slidingEastBorder";

        $r204[37] = $r26;

        $r204[38] = "DockableFrame.slidingWestBorder";

        $r204[39] = $r32;

        $r204[40] = "DockableFrame.slidingNorthBorder";

        $r204[41] = $r38;

        $r204[42] = "DockableFrame.slidingSouthBorder";

        $r204[43] = $r44;

        $r204[44] = "DockableFrame.activeTitleBackground";

        $r204[45] = $r8;

        $r204[46] = "DockableFrame.activeTitleBackground2";

        $r204[47] = $r244;

        $r204[48] = "DockableFrame.activeTitleForeground";

        $r204[49] = $r7;

        $r204[50] = "DockableFrame.inactiveTitleBackground";

        $r204[51] = $r12;

        $r204[52] = "DockableFrame.inactiveTitleForeground";

        $r204[53] = $r11;

        $r204[54] = "DockableFrame.activeTitleBorderColor";

        $r204[55] = $r10;

        $r204[56] = "DockableFrame.inactiveTitleBorderColor";

        $r204[57] = $r10;

        $r204[58] = "DockableFrame.titleBorder";

        $r218 = new javax.swing.plaf.BorderUIResource;

        $r219 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(0, 0, 0, 0);

        specialinvoke $r218.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r219);

        $r204[59] = $r218;

        $r204[60] = "DockableFrame.font";

        $r204[61] = $r16;

        $r204[62] = "DockableFrameTitlePane.gripperPainter";

        $r204[63] = $r59;

        $r204[64] = "DockableFrameTitlePane.font";

        $r204[65] = $r16;

        $r204[66] = "DockableFrameTitlePane.hideIcon";

        $r220 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r203, 0, 0, 16, 16);

        $r204[67] = $r220;

        $r204[68] = "DockableFrameTitlePane.unfloatIcon";

        $r221 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r203, 0, 16, 16, 16);

        $r204[69] = $r221;

        $r204[70] = "DockableFrameTitlePane.floatIcon";

        $r222 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r203, 0, 32, 16, 16);

        $r204[71] = $r222;

        $r204[72] = "DockableFrameTitlePane.autohideIcon";

        $r223 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r203, 0, 48, 16, 16);

        $r204[73] = $r223;

        $r204[74] = "DockableFrameTitlePane.stopAutohideIcon";

        $r224 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r203, 0, 64, 16, 16);

        $r204[75] = $r224;

        $r204[76] = "DockableFrameTitlePane.hideAutohideIcon";

        $r225 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r203, 0, 80, 16, 16);

        $r204[77] = $r225;

        $r204[78] = "DockableFrameTitlePane.maximizeIcon";

        $r226 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r203, 0, 96, 16, 16);

        $r204[79] = $r226;

        $r204[80] = "DockableFrameTitlePane.restoreIcon";

        $r227 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r203, 0, 112, 16, 16);

        $r204[81] = $r227;

        $r204[82] = "DockableFrameTitlePane.titleBarComponent";

        $r228 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r204[83] = $r228;

        $r204[84] = "DockableFrameTitlePane.alwaysShowAllButtons";

        $r229 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r204[85] = $r229;

        $r204[86] = "DockableFrameTitlePane.buttonsAlignment";

        $r230 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(11);

        $r204[87] = $r230;

        $r204[88] = "DockableFrameTitlePane.titleAlignment";

        $r231 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        $r204[89] = $r231;

        $r204[90] = "DockableFrameTitlePane.buttonGap";

        $r232 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r204[91] = $r232;

        $r204[92] = "DockableFrameTitlePane.showIcon";

        $r233 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r204[93] = $r233;

        $r204[94] = "DockableFrameTitlePane.margin";

        $r234 = new javax.swing.plaf.InsetsUIResource;

        specialinvoke $r234.<javax.swing.plaf.InsetsUIResource: void <init>(int,int,int,int)>(0, 6, 0, 6);

        $r204[95] = $r234;

        $r204[96] = "DockableFrameTitlePane.use3dButtons";

        $r235 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r204[97] = $r235;

        $r204[98] = "ContentContainer.background";

        $r204[99] = $r2;

        $r204[100] = "ContentContainer.vgap";

        $r236 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r204[101] = $r236;

        $r204[102] = "ContentContainer.hgap";

        $r237 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r204[103] = $r237;

        $r204[104] = "MainContainer.border";

        $r238 = new javax.swing.plaf.BorderUIResource;

        $r239 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(0, 0, 0, 0);

        specialinvoke $r238.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r239);

        $r204[105] = $r238;

        $r204[106] = "DockingFramework.changeCursor";

        $r240 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r204[107] = $r240;

        $r204[108] = "Contour.color";

        $r241 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r241.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(136, 136, 136);

        $r204[109] = $r241;

        $r204[110] = "Contour.thickness";

        $r242 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r204[111] = $r242;

        virtualinvoke r15.<javax.swing.UIDefaults: void putDefaults(java.lang.Object[])>($r204);

     label3:
        $i2 = $i0 & 2;

        if $i2 == 0 goto label6;

        $r176 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.Class,java.lang.String)>(class "Lcom/jidesoft/plaf/eclipse/EclipseMetalUtils;", "icons/collapsible_pane_eclipse.gif");

        $r177 = newarray (java.lang.Object)[54];

        $r177[0] = "CollapsiblePanes.border";

        $r178 = new javax.swing.plaf.BorderUIResource;

        $r179 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(12, 12, 12, 12);

        specialinvoke $r178.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r179);

        $r177[1] = $r178;

        $r177[2] = "CollapsiblePanes.gap";

        $r180 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(15);

        $r177[3] = $r180;

        $r177[4] = "CollapsiblePane.background";

        $z1 = $r2 instanceof java.awt.Color;

        if $z1 == 0 goto label4;

        $r202 = (java.awt.Color) $r2;

        $r245 = staticinvoke <com.jidesoft.utils.ColorUtils: java.awt.Color getDerivedColor(java.awt.Color,float)>($r202, 0.45F);

        goto label5;

     label4:
        $r245 = $r2;

     label5:
        $r177[5] = $r245;

        $r177[6] = "CollapsiblePane.contentBackground";

        $r177[7] = $r3;

        $r177[8] = "CollapsiblePane.foreground";

        $r177[9] = $r1;

        $r177[10] = "CollapsiblePane.emphasizedBackground";

        $r177[11] = $r8;

        $r177[12] = "CollapsiblePane.emphasizedForeground";

        $r177[13] = $r7;

        $r177[14] = "CollapsiblePane.border";

        $r181 = new javax.swing.plaf.BorderUIResource;

        $r182 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(0, 0, 0, 0);

        specialinvoke $r181.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r182);

        $r177[15] = $r181;

        $r177[16] = "CollapsiblePane.font";

        $r177[17] = $r16;

        $r177[18] = "CollapsiblePane.contentBorder";

        $r183 = new javax.swing.plaf.BorderUIResource;

        $r184 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(8, 10, 8, 10);

        specialinvoke $r183.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r184);

        $r177[19] = $r183;

        $r177[20] = "CollapsiblePane.titleBorder";

        $r185 = new javax.swing.plaf.BorderUIResource;

        $r186 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(3, 3, 3, 3);

        specialinvoke $r185.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r186);

        $r177[21] = $r185;

        $r177[22] = "CollapsiblePane.titleFont";

        $r177[23] = $r18;

        $r177[24] = "CollapsiblePane.downIcon";

        $r187 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r176, 0, 0, 11, 11);

        $r177[25] = $r187;

        $r177[26] = "CollapsiblePane.upIcon";

        $r188 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r176, 0, 11, 11, 11);

        $r177[27] = $r188;

        $r177[28] = "StatusBarItem.border";

        $r189 = new javax.swing.plaf.BorderUIResource;

        $r190 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEtchedBorder()>();

        specialinvoke $r189.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r190);

        $r177[29] = $r189;

        $r177[30] = "StatusBar.border";

        $r191 = new javax.swing.plaf.BorderUIResource;

        $r192 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(2, 0, 0, 0);

        specialinvoke $r191.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r192);

        $r177[31] = $r191;

        $r177[32] = "StatusBar.margin";

        $r193 = new java.awt.Insets;

        specialinvoke $r193.<java.awt.Insets: void <init>(int,int,int,int)>(2, 0, 0, 0);

        $r177[33] = $r193;

        $r177[34] = "StatusBar.gap";

        $r194 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r177[35] = $r194;

        $r177[36] = "StatusBar.background";

        $r177[37] = $r2;

        $r177[38] = "StatusBar.font";

        $r177[39] = $r16;

        $r177[40] = "MemoryStatusBarItem.fillColor";

        $r195 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r195.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(236, 233, 176);

        $r177[41] = $r195;

        $r177[42] = "DocumentPane.groupBorder";

        $r196 = new javax.swing.plaf.BorderUIResource;

        specialinvoke $r196.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r25);

        $r177[43] = $r196;

        $r177[44] = "DocumentPane.newHorizontalGroupIcon";

        $r197 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/windows_new_horizontal_tab_group.png");

        $r177[45] = $r197;

        $r177[46] = "DocumentPane.newVerticalGroupIcon";

        $r198 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/windows_new_vertical_tab_group.png");

        $r177[47] = $r198;

        $r177[48] = "DocumentPane.boldActiveTab";

        $r199 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r177[49] = $r199;

        $r177[50] = "OutlookTabbedPane.buttonStyle";

        $r200 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r177[51] = $r200;

        $r177[52] = "FloorTabbedPane.buttonStyle";

        $r201 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r177[53] = $r201;

        virtualinvoke r15.<javax.swing.UIDefaults: void putDefaults(java.lang.Object[])>($r177);

     label6:
        $i5 = $i0 & 16;

        if $i5 == 0 goto label7;

        $r155 = newarray (java.lang.Object)[46];

        $r155[0] = "CommandBar.font";

        $r155[1] = $r17;

        $r155[2] = "CommandBar.background";

        $r155[3] = $r2;

        $r155[4] = "CommandBar.foreground";

        $r155[5] = $r1;

        $r155[6] = "CommandBar.shadow";

        $r155[7] = $r5;

        $r155[8] = "CommandBar.darkShadow";

        $r155[9] = $r6;

        $r155[10] = "CommandBar.light";

        $r155[11] = $r3;

        $r155[12] = "CommandBar.highlight";

        $r155[13] = $r4;

        $r155[14] = "CommandBar.border";

        $r156 = new javax.swing.plaf.BorderUIResource;

        $r157 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(2, 1, 2, 1);

        specialinvoke $r156.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r157);

        $r155[15] = $r156;

        $r155[16] = "CommandBar.borderVert";

        $r158 = new javax.swing.plaf.BorderUIResource;

        $r159 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(2, 1, 2, 1);

        specialinvoke $r158.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r159);

        $r155[17] = $r158;

        $r155[18] = "CommandBar.borderFloating";

        $r160 = new javax.swing.plaf.BorderUIResource;

        $r161 = (java.awt.Color) $r8;

        $r162 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createLineBorder(java.awt.Color,int)>($r161, 2);

        $r163 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(1, 1, 1, 1);

        $r164 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.CompoundBorder createCompoundBorder(javax.swing.border.Border,javax.swing.border.Border)>($r162, $r163);

        specialinvoke $r160.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r164);

        $r155[19] = $r160;

        $r155[20] = "CommandBar.separatorSize";

        $r165 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r155[21] = $r165;

        $r155[22] = "CommandBar.ancestorInputMap";

        $r166 = new javax.swing.UIDefaults$LazyInputMap;

        $r167 = newarray (java.lang.Object)[16];

        $r167[0] = "UP";

        $r167[1] = "navigateUp";

        $r167[2] = "KP_UP";

        $r167[3] = "navigateUp";

        $r167[4] = "DOWN";

        $r167[5] = "navigateDown";

        $r167[6] = "KP_DOWN";

        $r167[7] = "navigateDown";

        $r167[8] = "LEFT";

        $r167[9] = "navigateLeft";

        $r167[10] = "KP_LEFT";

        $r167[11] = "navigateLeft";

        $r167[12] = "RIGHT";

        $r167[13] = "navigateRight";

        $r167[14] = "KP_RIGHT";

        $r167[15] = "navigateRight";

        specialinvoke $r166.<javax.swing.UIDefaults$LazyInputMap: void <init>(java.lang.Object[])>($r167);

        $r155[23] = $r166;

        $r155[24] = "CommandBar.titleBarSize";

        $r168 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(17);

        $r155[25] = $r168;

        $r155[26] = "CommandBar.titleBarButtonGap";

        $r169 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r155[27] = $r169;

        $r155[28] = "CommandBar.titleBarBackground";

        $r155[29] = $r8;

        $r155[30] = "CommandBar.titleBarForeground";

        $r155[31] = $r7;

        $r155[32] = "CommandBar.titleBarFont";

        $r155[33] = $r18;

        $r155[34] = "CommandBar.minimumSize";

        $r170 = new javax.swing.plaf.DimensionUIResource;

        specialinvoke $r170.<javax.swing.plaf.DimensionUIResource: void <init>(int,int)>(20, 20);

        $r155[35] = $r170;

        $r155[36] = "CommandBar.separatorSize";

        $r171 = new javax.swing.plaf.DimensionUIResource;

        specialinvoke $r171.<javax.swing.plaf.DimensionUIResource: void <init>(int,int)>(5, 20);

        $r155[37] = $r171;

        $r155[38] = "CommandBarSeparator.background";

        $r172 = new java.awt.Color;

        specialinvoke $r172.<java.awt.Color: void <init>(int,int,int)>(219, 216, 209);

        $r155[39] = $r172;

        $r155[40] = "CommandBarSeparator.foreground";

        $r173 = new java.awt.Color;

        specialinvoke $r173.<java.awt.Color: void <init>(int,int,int)>(166, 166, 166);

        $r155[41] = $r173;

        $r155[42] = "Chevron.size";

        $r174 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(11);

        $r155[43] = $r174;

        $r155[44] = "Chevron.alwaysVisible";

        $r175 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r155[45] = $r175;

        virtualinvoke r15.<javax.swing.UIDefaults: void putDefaults(java.lang.Object[])>($r155);

     label7:
        $i3 = $i0 & 4;

        if $i3 == 0 goto label8;

        $r152 = newarray (java.lang.Object)[4];

        $r152[0] = "AbstractComboBox.useJButton";

        $r153 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r152[1] = $r153;

        $r152[2] = "NestedTableHeader.cellBorder";

        $r154 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: javax.swing.border.Border getBorder(java.lang.Object)>("TableHeader.cellBorder");

        $r152[3] = $r154;

        virtualinvoke r15.<javax.swing.UIDefaults: void putDefaults(java.lang.Object[])>($r152);

     label8:
        $i4 = $i0 & 16384;

        if $i4 == 0 goto label9;

        $r147 = newarray (java.lang.Object)[8];

        $r147[0] = "DiffMerge.changed";

        $r148 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r148.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(196, 196, 255);

        $r147[1] = $r148;

        $r147[2] = "DiffMerge.deleted";

        $r149 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r149.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(200, 200, 200);

        $r147[3] = $r149;

        $r147[4] = "DiffMerge.inserted";

        $r150 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r150.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(196, 255, 196);

        $r147[5] = $r150;

        $r147[6] = "DiffMerge.conflicted";

        $r151 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r151.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(255, 153, 153);

        $r147[7] = $r151;

        virtualinvoke r15.<javax.swing.UIDefaults: void putDefaults(java.lang.Object[])>($r147);

     label9:
        $r146 = staticinvoke <com.jidesoft.plaf.eclipse.EclipsePainter: com.jidesoft.plaf.basic.ThemePainter getInstance()>();

        staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: void put(javax.swing.UIDefaults,java.lang.String,java.lang.Object)>(r15, "Theme.painter", $r146);

        return;
    }
}
