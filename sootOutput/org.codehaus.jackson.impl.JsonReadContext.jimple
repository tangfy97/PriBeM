public final class org.codehaus.jackson.impl.JsonReadContext extends org.codehaus.jackson.JsonStreamContext
{
    protected final org.codehaus.jackson.impl.JsonReadContext _parent;
    protected int _lineNr;
    protected int _columnNr;
    protected java.lang.String _currentName;
    org.codehaus.jackson.impl.JsonReadContext _child;

    public void <init>(org.codehaus.jackson.impl.JsonReadContext, int, int, int)
    {
        org.codehaus.jackson.impl.JsonReadContext r0, r1;
        int i0, i1, i2;

        r0 := @this: org.codehaus.jackson.impl.JsonReadContext;

        r1 := @parameter0: org.codehaus.jackson.impl.JsonReadContext;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        specialinvoke r0.<org.codehaus.jackson.JsonStreamContext: void <init>(int)>(i0);

        r0.<org.codehaus.jackson.impl.JsonReadContext: org.codehaus.jackson.impl.JsonReadContext _child> = null;

        r0.<org.codehaus.jackson.impl.JsonReadContext: org.codehaus.jackson.impl.JsonReadContext _parent> = r1;

        r0.<org.codehaus.jackson.impl.JsonReadContext: int _lineNr> = i1;

        r0.<org.codehaus.jackson.impl.JsonReadContext: int _columnNr> = i2;

        return;
    }

    protected final void reset(int, int, int)
    {
        org.codehaus.jackson.impl.JsonReadContext r0;
        int i0, i1, i2, $i4;

        r0 := @this: org.codehaus.jackson.impl.JsonReadContext;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r0.<org.codehaus.jackson.impl.JsonReadContext: int _type> = i0;

        $i4 = (int) -1;

        r0.<org.codehaus.jackson.impl.JsonReadContext: int _index> = $i4;

        r0.<org.codehaus.jackson.impl.JsonReadContext: int _lineNr> = i1;

        r0.<org.codehaus.jackson.impl.JsonReadContext: int _columnNr> = i2;

        r0.<org.codehaus.jackson.impl.JsonReadContext: java.lang.String _currentName> = null;

        return;
    }

    public static org.codehaus.jackson.impl.JsonReadContext createRootContext(int, int)
    {
        int i0, i1;
        org.codehaus.jackson.impl.JsonReadContext $r0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = new org.codehaus.jackson.impl.JsonReadContext;

        specialinvoke $r0.<org.codehaus.jackson.impl.JsonReadContext: void <init>(org.codehaus.jackson.impl.JsonReadContext,int,int,int)>(null, 0, i0, i1);

        return $r0;
    }

    public final org.codehaus.jackson.impl.JsonReadContext createChildArrayContext(int, int)
    {
        org.codehaus.jackson.impl.JsonReadContext r0, r1, $r2;
        int i0, i1;

        r0 := @this: org.codehaus.jackson.impl.JsonReadContext;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = r0.<org.codehaus.jackson.impl.JsonReadContext: org.codehaus.jackson.impl.JsonReadContext _child>;

        if r1 != null goto label1;

        $r2 = new org.codehaus.jackson.impl.JsonReadContext;

        specialinvoke $r2.<org.codehaus.jackson.impl.JsonReadContext: void <init>(org.codehaus.jackson.impl.JsonReadContext,int,int,int)>(r0, 1, i0, i1);

        r0.<org.codehaus.jackson.impl.JsonReadContext: org.codehaus.jackson.impl.JsonReadContext _child> = $r2;

        return $r2;

     label1:
        virtualinvoke r1.<org.codehaus.jackson.impl.JsonReadContext: void reset(int,int,int)>(1, i0, i1);

        return r1;
    }

    public final org.codehaus.jackson.impl.JsonReadContext createChildObjectContext(int, int)
    {
        org.codehaus.jackson.impl.JsonReadContext r0, r1, $r2;
        int i0, i1;

        r0 := @this: org.codehaus.jackson.impl.JsonReadContext;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = r0.<org.codehaus.jackson.impl.JsonReadContext: org.codehaus.jackson.impl.JsonReadContext _child>;

        if r1 != null goto label1;

        $r2 = new org.codehaus.jackson.impl.JsonReadContext;

        specialinvoke $r2.<org.codehaus.jackson.impl.JsonReadContext: void <init>(org.codehaus.jackson.impl.JsonReadContext,int,int,int)>(r0, 2, i0, i1);

        r0.<org.codehaus.jackson.impl.JsonReadContext: org.codehaus.jackson.impl.JsonReadContext _child> = $r2;

        return $r2;

     label1:
        virtualinvoke r1.<org.codehaus.jackson.impl.JsonReadContext: void reset(int,int,int)>(2, i0, i1);

        return r1;
    }

    public final java.lang.String getCurrentName()
    {
        java.lang.String $r1;
        org.codehaus.jackson.impl.JsonReadContext r0;

        r0 := @this: org.codehaus.jackson.impl.JsonReadContext;

        $r1 = r0.<org.codehaus.jackson.impl.JsonReadContext: java.lang.String _currentName>;

        return $r1;
    }

    public final org.codehaus.jackson.impl.JsonReadContext getParent()
    {
        org.codehaus.jackson.impl.JsonReadContext r0, $r1;

        r0 := @this: org.codehaus.jackson.impl.JsonReadContext;

        $r1 = r0.<org.codehaus.jackson.impl.JsonReadContext: org.codehaus.jackson.impl.JsonReadContext _parent>;

        return $r1;
    }

    public final org.codehaus.jackson.JsonLocation getStartLocation(java.lang.Object)
    {
        org.codehaus.jackson.impl.JsonReadContext r2;
        int $i0, $i1;
        java.lang.Object r1;
        org.codehaus.jackson.JsonLocation $r0;

        r2 := @this: org.codehaus.jackson.impl.JsonReadContext;

        r1 := @parameter0: java.lang.Object;

        $r0 = new org.codehaus.jackson.JsonLocation;

        $i1 = r2.<org.codehaus.jackson.impl.JsonReadContext: int _lineNr>;

        $i0 = r2.<org.codehaus.jackson.impl.JsonReadContext: int _columnNr>;

        specialinvoke $r0.<org.codehaus.jackson.JsonLocation: void <init>(java.lang.Object,long,int,int)>(r1, -1L, $i1, $i0);

        return $r0;
    }

    public final boolean expectComma()
    {
        org.codehaus.jackson.impl.JsonReadContext r0;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.impl.JsonReadContext;

        $i0 = r0.<org.codehaus.jackson.impl.JsonReadContext: int _index>;

        $i1 = $i0 + 1;

        r0.<org.codehaus.jackson.impl.JsonReadContext: int _index> = $i1;

        $i2 = r0.<org.codehaus.jackson.impl.JsonReadContext: int _type>;

        if $i2 == 0 goto label1;

        if $i1 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void setCurrentName(java.lang.String)
    {
        java.lang.String r1;
        org.codehaus.jackson.impl.JsonReadContext r0;

        r0 := @this: org.codehaus.jackson.impl.JsonReadContext;

        r1 := @parameter0: java.lang.String;

        r0.<org.codehaus.jackson.impl.JsonReadContext: java.lang.String _currentName> = r1;

        return;
    }

    public final java.lang.String toString()
    {
        org.codehaus.jackson.impl.JsonReadContext r1;
        int $i0, $i1;
        java.lang.StringBuilder $r0;
        java.lang.String $r2, $r3, $r4;

        r1 := @this: org.codehaus.jackson.impl.JsonReadContext;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(int)>(64);

        $i0 = r1.<org.codehaus.jackson.impl.JsonReadContext: int _type>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            default: goto label6;
        };

     label1:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        goto label6;

     label2:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91);

        $i1 = virtualinvoke r1.<org.codehaus.jackson.impl.JsonReadContext: int getCurrentIndex()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        goto label6;

     label3:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(123);

        $r2 = r1.<org.codehaus.jackson.impl.JsonReadContext: java.lang.String _currentName>;

        if $r2 == null goto label4;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r3 = r1.<org.codehaus.jackson.impl.JsonReadContext: java.lang.String _currentName>;

        staticinvoke <org.codehaus.jackson.util.CharTypes: void appendQuoted(java.lang.StringBuilder,java.lang.String)>($r0, $r3);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        goto label5;

     label4:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(63);

     label5:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

     label6:
        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public volatile org.codehaus.jackson.JsonStreamContext getParent()
    {
        org.codehaus.jackson.impl.JsonReadContext r0, $r1;

        r0 := @this: org.codehaus.jackson.impl.JsonReadContext;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.impl.JsonReadContext: org.codehaus.jackson.impl.JsonReadContext getParent()>();

        return $r1;
    }
}
