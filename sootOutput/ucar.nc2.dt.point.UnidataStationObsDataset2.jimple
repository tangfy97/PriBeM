public class ucar.nc2.dt.point.UnidataStationObsDataset2 extends ucar.nc2.dt.point.StationObsDatasetImpl implements ucar.nc2.dt.TypedDatasetFactoryIF
{
    private ucar.nc2.Structure recordVar;
    private ucar.nc2.dt.point.RecordDatasetHelper recordHelper;
    private boolean debugRead;

    public static boolean isValidFile(ucar.nc2.NetcdfFile)
    {
        ucar.nc2.NetcdfFile r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @parameter0: ucar.nc2.NetcdfFile;

        $r1 = virtualinvoke r0.<ucar.nc2.NetcdfFile: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "Conventions", "");

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Unidata Station Format v1.0");

        return $z0;
    }

    public boolean isMine(ucar.nc2.dataset.NetcdfDataset)
    {
        ucar.nc2.dt.point.UnidataStationObsDataset2 r1;
        ucar.nc2.dataset.NetcdfDataset r0;
        boolean $z0;

        r1 := @this: ucar.nc2.dt.point.UnidataStationObsDataset2;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        $z0 = staticinvoke <ucar.nc2.dt.point.UnidataStationObsDataset2: boolean isValidFile(ucar.nc2.NetcdfFile)>(r0);

        return $z0;
    }

    public ucar.nc2.dt.TypedDataset open(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.util.CancelTask, java.lang.StringBuilder) throws java.io.IOException
    {
        ucar.nc2.dt.point.UnidataStationObsDataset2 $r0, r2;
        ucar.nc2.util.CancelTask r3;
        java.lang.StringBuilder r4;
        ucar.nc2.dataset.NetcdfDataset r1;

        r2 := @this: ucar.nc2.dt.point.UnidataStationObsDataset2;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r3 := @parameter1: ucar.nc2.util.CancelTask;

        r4 := @parameter2: java.lang.StringBuilder;

        $r0 = new ucar.nc2.dt.point.UnidataStationObsDataset2;

        specialinvoke $r0.<ucar.nc2.dt.point.UnidataStationObsDataset2: void <init>(ucar.nc2.dataset.NetcdfDataset)>(r1);

        return $r0;
    }

    public void <init>()
    {
        ucar.nc2.dt.point.UnidataStationObsDataset2 r0;

        r0 := @this: ucar.nc2.dt.point.UnidataStationObsDataset2;

        specialinvoke r0.<ucar.nc2.dt.point.StationObsDatasetImpl: void <init>()>();

        r0.<ucar.nc2.dt.point.UnidataStationObsDataset2: boolean debugRead> = 0;

        return;
    }

    public void <init>(ucar.nc2.dataset.NetcdfDataset) throws java.io.IOException
    {
        java.util.Date $r32, $r35;
        java.lang.Integer $r43;
        java.util.Map $r44;
        java.util.List $r4, $r41;
        float $f0, $f1, $f2;
        ucar.nc2.dt.point.UnidataStationObsDataset2$UnidataStationImpl $r40;
        java.util.HashMap $r28;
        ucar.ma2.ArrayChar r12, r15;
        java.lang.StringBuffer $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6;
        ucar.nc2.Variable $r10, $r13, $r16, $r18, $r20, $r22, $r24, $r27, $r30, $r33;
        java.lang.String $r36, $r37, $r38, $r39;
        double $d0, $d1, $d2, $d3, $d4;
        ucar.nc2.dt.point.UnidataStationObsDataset2 r0;
        ucar.nc2.units.DateUnit $r9, $r31, $r34;
        ucar.ma2.Array $r11, $r14, $r17, $r19, $r21, $r23, $r25;
        ucar.nc2.dt.point.RecordDatasetHelper $r2, $r5, $r6, $r8, $r29, $r42;
        ucar.nc2.dataset.StructureDS $r7;
        ucar.ma2.Index $r26;
        ucar.nc2.dataset.NetcdfDataset r1;

        r0 := @this: ucar.nc2.dt.point.UnidataStationObsDataset2;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        specialinvoke r0.<ucar.nc2.dt.point.StationObsDatasetImpl: void <init>(ucar.nc2.dataset.NetcdfDataset)>(r1);

        r0.<ucar.nc2.dt.point.UnidataStationObsDataset2: boolean debugRead> = 0;

        r0.<ucar.nc2.dt.point.UnidataStationObsDataset2: java.lang.String title> = "Station Data from NWS";

        r0.<ucar.nc2.dt.point.UnidataStationObsDataset2: java.lang.String desc> = "Station Data from NWS distributed through the Unidata IDD realtime datastream. Decoded into netCDF files by metar2nc (new). Usually 1 hour of data";

        $r2 = new ucar.nc2.dt.point.RecordDatasetHelper;

        $r4 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset2: java.util.List dataVariables>;

        $r3 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset2: java.lang.StringBuffer parseInfo>;

        specialinvoke $r2.<ucar.nc2.dt.point.RecordDatasetHelper: void <init>(ucar.nc2.dataset.NetcdfDataset,java.lang.String,java.lang.String,java.util.List,java.lang.StringBuffer)>(r1, "time_observation", "time_nominal", $r4, $r3);

        r0.<ucar.nc2.dt.point.UnidataStationObsDataset2: ucar.nc2.dt.point.RecordDatasetHelper recordHelper> = $r2;

        $r5 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset2: ucar.nc2.dt.point.RecordDatasetHelper recordHelper>;

        virtualinvoke $r5.<ucar.nc2.dt.point.RecordDatasetHelper: void setStationInfo(java.lang.String,java.lang.String)>("station_index", "location");

        virtualinvoke r0.<ucar.nc2.dt.point.UnidataStationObsDataset2: void removeDataVariable(java.lang.String)>("time_observation");

        virtualinvoke r0.<ucar.nc2.dt.point.UnidataStationObsDataset2: void removeDataVariable(java.lang.String)>("time_nominal");

        virtualinvoke r0.<ucar.nc2.dt.point.UnidataStationObsDataset2: void removeDataVariable(java.lang.String)>("previousReport");

        virtualinvoke r0.<ucar.nc2.dt.point.UnidataStationObsDataset2: void removeDataVariable(java.lang.String)>("station_index");

        $r6 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset2: ucar.nc2.dt.point.RecordDatasetHelper recordHelper>;

        $r7 = $r6.<ucar.nc2.dt.point.RecordDatasetHelper: ucar.nc2.dataset.StructureDS recordVar>;

        r0.<ucar.nc2.dt.point.UnidataStationObsDataset2: ucar.nc2.Structure recordVar> = $r7;

        $r8 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset2: ucar.nc2.dt.point.RecordDatasetHelper recordHelper>;

        $r9 = $r8.<ucar.nc2.dt.point.RecordDatasetHelper: ucar.nc2.units.DateUnit timeUnit>;

        r0.<ucar.nc2.dt.point.UnidataStationObsDataset2: ucar.nc2.units.DateUnit timeUnit> = $r9;

        $r10 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("id");

        $r11 = virtualinvoke $r10.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        r12 = (ucar.ma2.ArrayChar) $r11;

        $r13 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("location");

        $r14 = virtualinvoke $r13.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        r15 = (ucar.ma2.ArrayChar) $r14;

        $r16 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("latitude");

        $r17 = virtualinvoke $r16.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        $r18 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("longitude");

        $r19 = virtualinvoke $r18.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        $r20 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("elevation");

        $r21 = virtualinvoke $r20.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        $r22 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("lastReport");

        $r23 = virtualinvoke $r22.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        $r24 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("numberReports");

        $r25 = virtualinvoke $r24.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        $r26 = virtualinvoke $r23.<ucar.ma2.Array: ucar.ma2.Index getIndex()>();

        $r27 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("number_stations");

        $i0 = virtualinvoke $r27.<ucar.nc2.Variable: int readScalarInt()>();

        $r29 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset2: ucar.nc2.dt.point.RecordDatasetHelper recordHelper>;

        $r28 = new java.util.HashMap;

        $i1 = 2 * $i0;

        specialinvoke $r28.<java.util.HashMap: void <init>(int)>($i1);

        $r29.<ucar.nc2.dt.point.RecordDatasetHelper: java.util.Map stnHash> = $r28;

        i6 = 0;

     label1:
        if i6 >= $i0 goto label2;

        virtualinvoke $r26.<ucar.ma2.Index: ucar.ma2.Index set(int)>(i6);

        $r36 = virtualinvoke r12.<ucar.ma2.ArrayChar: java.lang.String getString(int)>(i6);

        $r37 = virtualinvoke $r36.<java.lang.String: java.lang.String trim()>();

        $r38 = virtualinvoke r15.<ucar.ma2.ArrayChar: java.lang.String getString(int)>(i6);

        $r39 = virtualinvoke $r38.<java.lang.String: java.lang.String trim()>();

        $r40 = new ucar.nc2.dt.point.UnidataStationObsDataset2$UnidataStationImpl;

        $f0 = virtualinvoke $r17.<ucar.ma2.Array: float getFloat(ucar.ma2.Index)>($r26);

        $d2 = (double) $f0;

        $f1 = virtualinvoke $r19.<ucar.ma2.Array: float getFloat(ucar.ma2.Index)>($r26);

        $d3 = (double) $f1;

        $f2 = virtualinvoke $r21.<ucar.ma2.Array: float getFloat(ucar.ma2.Index)>($r26);

        $d4 = (double) $f2;

        $i4 = virtualinvoke $r23.<ucar.ma2.Array: int getInt(ucar.ma2.Index)>($r26);

        $i5 = virtualinvoke $r25.<ucar.ma2.Array: int getInt(ucar.ma2.Index)>($r26);

        specialinvoke $r40.<ucar.nc2.dt.point.UnidataStationObsDataset2$UnidataStationImpl: void <init>(ucar.nc2.dt.point.UnidataStationObsDataset2,java.lang.String,java.lang.String,double,double,double,int,int,ucar.nc2.dt.point.UnidataStationObsDataset2$1)>(r0, $r37, $r39, $d2, $d3, $d4, $i4, $i5, null);

        $r41 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset2: java.util.List stations>;

        interfaceinvoke $r41.<java.util.List: boolean add(java.lang.Object)>($r40);

        $r42 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset2: ucar.nc2.dt.point.RecordDatasetHelper recordHelper>;

        $r44 = $r42.<ucar.nc2.dt.point.RecordDatasetHelper: java.util.Map stnHash>;

        $r43 = new java.lang.Integer;

        specialinvoke $r43.<java.lang.Integer: void <init>(int)>(i6);

        interfaceinvoke $r44.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r43, $r40);

        i6 = i6 + 1;

        goto label1;

     label2:
        virtualinvoke r0.<ucar.nc2.dt.point.UnidataStationObsDataset2: void setBoundingBox()>();

        $r30 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("minimum_time_observation");

        $i2 = virtualinvoke $r30.<ucar.nc2.Variable: int readScalarInt()>();

        $r31 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset2: ucar.nc2.units.DateUnit timeUnit>;

        $d0 = (double) $i2;

        $r32 = virtualinvoke $r31.<ucar.nc2.units.DateUnit: java.util.Date makeDate(double)>($d0);

        r0.<ucar.nc2.dt.point.UnidataStationObsDataset2: java.util.Date startDate> = $r32;

        $r33 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("maximum_time_observation");

        $i3 = virtualinvoke $r33.<ucar.nc2.Variable: int readScalarInt()>();

        $r34 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset2: ucar.nc2.units.DateUnit timeUnit>;

        $d1 = (double) $i3;

        $r35 = virtualinvoke $r34.<ucar.nc2.units.DateUnit: java.util.Date makeDate(double)>($d1);

        r0.<ucar.nc2.dt.point.UnidataStationObsDataset2: java.util.Date endDate> = $r35;

        return;
    }

    protected void setTimeUnits()
    {
        ucar.nc2.dt.point.UnidataStationObsDataset2 r0;

        r0 := @this: ucar.nc2.dt.point.UnidataStationObsDataset2;

        return;
    }

    protected void setStartDate()
    {
        ucar.nc2.dt.point.UnidataStationObsDataset2 r0;

        r0 := @this: ucar.nc2.dt.point.UnidataStationObsDataset2;

        return;
    }

    protected void setEndDate()
    {
        ucar.nc2.dt.point.UnidataStationObsDataset2 r0;

        r0 := @this: ucar.nc2.dt.point.UnidataStationObsDataset2;

        return;
    }

    protected void setBoundingBox()
    {
        ucar.unidata.geoloc.LatLonRect $r2;
        ucar.nc2.dt.point.StationDatasetHelper $r1;
        ucar.nc2.dt.point.UnidataStationObsDataset2 r0;

        r0 := @this: ucar.nc2.dt.point.UnidataStationObsDataset2;

        $r1 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset2: ucar.nc2.dt.point.StationDatasetHelper stationHelper>;

        $r2 = virtualinvoke $r1.<ucar.nc2.dt.point.StationDatasetHelper: ucar.unidata.geoloc.LatLonRect getBoundingBox()>();

        r0.<ucar.nc2.dt.point.UnidataStationObsDataset2: ucar.unidata.geoloc.LatLonRect boundingBox> = $r2;

        return;
    }

    public java.util.List getData(ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        ucar.nc2.dt.StationObsDatatype $r2;
        ucar.nc2.dt.point.UnidataStationObsDataset2 r1;
        ucar.nc2.util.CancelTask r3;
        int $i0, i1;
        java.util.ArrayList $r0;
        boolean $z0;

        r1 := @this: ucar.nc2.dt.point.UnidataStationObsDataset2;

        r3 := @parameter0: ucar.nc2.util.CancelTask;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        i1 = 0;

     label1:
        $i0 = virtualinvoke r1.<ucar.nc2.dt.point.UnidataStationObsDataset2: int getDataCount()>();

        if i1 >= $i0 goto label3;

        $r2 = virtualinvoke r1.<ucar.nc2.dt.point.UnidataStationObsDataset2: ucar.nc2.dt.StationObsDatatype makeObs(int)>(i1);

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        if r3 == null goto label2;

        $z0 = interfaceinvoke r3.<ucar.nc2.util.CancelTask: boolean isCancel()>();

        if $z0 == 0 goto label2;

        return null;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return $r0;
    }

    public int getDataCount()
    {
        ucar.nc2.dt.point.UnidataStationObsDataset2 r0;
        int $i0;
        ucar.nc2.Dimension $r2;
        ucar.nc2.dataset.NetcdfDataset $r1;

        r0 := @this: ucar.nc2.dt.point.UnidataStationObsDataset2;

        $r1 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset2: ucar.nc2.dataset.NetcdfDataset ncfile>;

        $r2 = virtualinvoke $r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension getUnlimitedDimension()>();

        $i0 = virtualinvoke $r2.<ucar.nc2.Dimension: int getLength()>();

        return $i0;
    }

    public java.util.List getData(ucar.unidata.geoloc.Station, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        ucar.nc2.dt.point.UnidataStationObsDataset2$UnidataStationImpl $r1;
        java.util.List $r2;
        ucar.nc2.dt.point.UnidataStationObsDataset2 r3;
        ucar.nc2.util.CancelTask r4;
        ucar.unidata.geoloc.Station r0;

        r3 := @this: ucar.nc2.dt.point.UnidataStationObsDataset2;

        r0 := @parameter0: ucar.unidata.geoloc.Station;

        r4 := @parameter1: ucar.nc2.util.CancelTask;

        $r1 = (ucar.nc2.dt.point.UnidataStationObsDataset2$UnidataStationImpl) r0;

        $r2 = virtualinvoke $r1.<ucar.nc2.dt.point.UnidataStationObsDataset2$UnidataStationImpl: java.util.List getObservations()>();

        return $r2;
    }

    protected ucar.nc2.dt.StationObsDatatype makeObs(int) throws java.io.IOException
    {
        ucar.unidata.geoloc.Station r5;
        ucar.nc2.dt.point.RecordDatasetHelper$RecordStationObs $r6;
        ucar.nc2.Structure $r1;
        ucar.ma2.StructureData $r2;
        java.lang.StringBuffer $r9;
        int i0, $i1;
        java.lang.String $r13, $r16;
        double $d0, $d1;
        ucar.nc2.dt.point.UnidataStationObsDataset2 r0;
        java.io.IOException $r15;
        ucar.nc2.dt.point.RecordDatasetHelper $r7;
        java.util.List $r3;
        ucar.ma2.InvalidRangeException $r14;
        float $f0, $f1;
        java.lang.Object $r4;
        java.lang.StringBuilder $r8, $r10, $r11, $r12;

        r0 := @this: ucar.nc2.dt.point.UnidataStationObsDataset2;

        i0 := @parameter0: int;

     label1:
        $r1 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset2: ucar.nc2.Structure recordVar>;

        $r2 = virtualinvoke $r1.<ucar.nc2.Structure: ucar.ma2.StructureData readStructure(int)>(i0);

        $i1 = virtualinvoke $r2.<ucar.ma2.StructureData: int getScalarInt(java.lang.String)>("station_index");

        $r3 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset2: java.util.List stations>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i1);

        r5 = (ucar.unidata.geoloc.Station) $r4;

        if r5 != null goto label2;

        $r9 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset2: java.lang.StringBuffer parseInfo>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cant find station at index = ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

     label2:
        $f0 = virtualinvoke $r2.<ucar.ma2.StructureData: float convertScalarFloat(java.lang.String)>("time_observation");

        $f1 = virtualinvoke $r2.<ucar.ma2.StructureData: float convertScalarFloat(java.lang.String)>("time_nominal");

        $r6 = new ucar.nc2.dt.point.RecordDatasetHelper$RecordStationObs;

        $r7 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset2: ucar.nc2.dt.point.RecordDatasetHelper recordHelper>;

        virtualinvoke $r7.<java.lang.Object: java.lang.Class getClass()>();

        $d1 = (double) $f0;

        $d0 = (double) $f1;

        specialinvoke $r6.<ucar.nc2.dt.point.RecordDatasetHelper$RecordStationObs: void <init>(ucar.nc2.dt.point.RecordDatasetHelper,ucar.unidata.geoloc.Station,double,double,int)>($r7, r5, $d1, $d0, i0);

     label3:
        return $r6;

     label4:
        $r14 := @caughtexception;

        virtualinvoke $r14.<ucar.ma2.InvalidRangeException: void printStackTrace()>();

        $r15 = new java.io.IOException;

        $r16 = virtualinvoke $r14.<ucar.ma2.InvalidRangeException: java.lang.String getMessage()>();

        specialinvoke $r15.<java.io.IOException: void <init>(java.lang.String)>($r16);

        throw $r15;

        catch ucar.ma2.InvalidRangeException from label1 to label3 with label4;
    }

    public ucar.nc2.dt.DataIterator getDataIterator(int) throws java.io.IOException
    {
        ucar.nc2.dt.point.UnidataStationObsDataset2 r1;
        ucar.nc2.dataset.StructureDS $r3;
        ucar.nc2.dt.point.UnidataStationObsDataset2$StationDatatypeIterator $r0;
        int i0;
        ucar.nc2.dt.point.RecordDatasetHelper $r2;

        r1 := @this: ucar.nc2.dt.point.UnidataStationObsDataset2;

        i0 := @parameter0: int;

        $r0 = new ucar.nc2.dt.point.UnidataStationObsDataset2$StationDatatypeIterator;

        $r2 = r1.<ucar.nc2.dt.point.UnidataStationObsDataset2: ucar.nc2.dt.point.RecordDatasetHelper recordHelper>;

        $r3 = $r2.<ucar.nc2.dt.point.RecordDatasetHelper: ucar.nc2.dataset.StructureDS recordVar>;

        specialinvoke $r0.<ucar.nc2.dt.point.UnidataStationObsDataset2$StationDatatypeIterator: void <init>(ucar.nc2.dt.point.UnidataStationObsDataset2,ucar.nc2.Structure,int)>(r1, $r3, i0);

        return $r0;
    }

    static boolean access$100(ucar.nc2.dt.point.UnidataStationObsDataset2)
    {
        ucar.nc2.dt.point.UnidataStationObsDataset2 r0;
        boolean $z0;

        r0 := @parameter0: ucar.nc2.dt.point.UnidataStationObsDataset2;

        $z0 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset2: boolean debugRead>;

        return $z0;
    }

    static ucar.nc2.Structure access$200(ucar.nc2.dt.point.UnidataStationObsDataset2)
    {
        ucar.nc2.dt.point.UnidataStationObsDataset2 r0;
        ucar.nc2.Structure $r1;

        r0 := @parameter0: ucar.nc2.dt.point.UnidataStationObsDataset2;

        $r1 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset2: ucar.nc2.Structure recordVar>;

        return $r1;
    }

    static ucar.nc2.dt.point.RecordDatasetHelper access$300(ucar.nc2.dt.point.UnidataStationObsDataset2)
    {
        ucar.nc2.dt.point.UnidataStationObsDataset2 r0;
        ucar.nc2.dt.point.RecordDatasetHelper $r1;

        r0 := @parameter0: ucar.nc2.dt.point.UnidataStationObsDataset2;

        $r1 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset2: ucar.nc2.dt.point.RecordDatasetHelper recordHelper>;

        return $r1;
    }
}
