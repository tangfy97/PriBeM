public final class org.apache.cxf.transport.http.auth.HttpAuthHeader extends java.lang.Object
{
    public static final java.lang.String AUTH_TYPE_BASIC;
    public static final java.lang.String AUTH_TYPE_DIGEST;
    public static final java.lang.String AUTH_TYPE_NEGOTIATE;
    private java.lang.String fullHeader;
    private java.lang.String authType;
    private java.lang.String fullContent;
    private java.util.Map params;

    public void <init>(java.lang.String)
    {
        org.apache.cxf.transport.http.auth.HttpAuthHeader r0;
        java.util.Map $r7;
        int $i0, $i1, $i3;
        java.lang.String r1, $r2, $r3, $r4, $r5, $r6, $r8, $r9;

        r0 := @this: org.apache.cxf.transport.http.auth.HttpAuthHeader;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r9 = "";

        goto label2;

     label1:
        $r9 = r1;

     label2:
        r0.<org.apache.cxf.transport.http.auth.HttpAuthHeader: java.lang.String fullHeader> = $r9;

        $r2 = r0.<org.apache.cxf.transport.http.auth.HttpAuthHeader: java.lang.String fullHeader>;

        $i0 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>(32);

        $i3 = (int) -1;

        if $i0 != $i3 goto label3;

        $r8 = r0.<org.apache.cxf.transport.http.auth.HttpAuthHeader: java.lang.String fullHeader>;

        r0.<org.apache.cxf.transport.http.auth.HttpAuthHeader: java.lang.String authType> = $r8;

        r0.<org.apache.cxf.transport.http.auth.HttpAuthHeader: java.lang.String fullContent> = "";

        goto label4;

     label3:
        $r3 = r0.<org.apache.cxf.transport.http.auth.HttpAuthHeader: java.lang.String fullHeader>;

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        r0.<org.apache.cxf.transport.http.auth.HttpAuthHeader: java.lang.String authType> = $r4;

        $r5 = r0.<org.apache.cxf.transport.http.auth.HttpAuthHeader: java.lang.String fullHeader>;

        $i1 = $i0 + 1;

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int)>($i1);

        r0.<org.apache.cxf.transport.http.auth.HttpAuthHeader: java.lang.String fullContent> = $r6;

     label4:
        $r7 = specialinvoke r0.<org.apache.cxf.transport.http.auth.HttpAuthHeader: java.util.Map parseHeader()>();

        r0.<org.apache.cxf.transport.http.auth.HttpAuthHeader: java.util.Map params> = $r7;

        return;
    }

    public void <init>(java.util.List)
    {
        java.util.Map $r8;
        int $i0, $i1, $i3;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r9, r11, $r13, $r17;
        boolean $z0, z1;
        java.util.Iterator $r2;
        java.util.List r1;
        org.apache.cxf.transport.http.auth.HttpAuthHeader r0;
        java.lang.Object $r10;
        java.lang.StringBuilder $r14, $r15, $r16, $r18;

        r0 := @this: org.apache.cxf.transport.http.auth.HttpAuthHeader;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        z1 = 1;

        $r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r10 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r11 = (java.lang.String) $r10;

        if z1 != 0 goto label2;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r13 = r0.<org.apache.cxf.transport.http.auth.HttpAuthHeader: java.lang.String fullHeader>;

        $r14 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<org.apache.cxf.transport.http.auth.HttpAuthHeader: java.lang.String fullHeader> = $r17;

        goto label3;

     label2:
        z1 = 0;

        r0.<org.apache.cxf.transport.http.auth.HttpAuthHeader: java.lang.String fullHeader> = r11;

     label3:
        goto label1;

     label4:
        $r3 = r0.<org.apache.cxf.transport.http.auth.HttpAuthHeader: java.lang.String fullHeader>;

        $i0 = virtualinvoke $r3.<java.lang.String: int indexOf(int)>(32);

        $i3 = (int) -1;

        if $i0 != $i3 goto label5;

        $r9 = r0.<org.apache.cxf.transport.http.auth.HttpAuthHeader: java.lang.String fullHeader>;

        r0.<org.apache.cxf.transport.http.auth.HttpAuthHeader: java.lang.String authType> = $r9;

        r0.<org.apache.cxf.transport.http.auth.HttpAuthHeader: java.lang.String fullContent> = "";

        goto label6;

     label5:
        $r4 = r0.<org.apache.cxf.transport.http.auth.HttpAuthHeader: java.lang.String fullHeader>;

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        r0.<org.apache.cxf.transport.http.auth.HttpAuthHeader: java.lang.String authType> = $r5;

        $r6 = r0.<org.apache.cxf.transport.http.auth.HttpAuthHeader: java.lang.String fullHeader>;

        $i1 = $i0 + 1;

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int)>($i1);

        r0.<org.apache.cxf.transport.http.auth.HttpAuthHeader: java.lang.String fullContent> = $r7;

     label6:
        $r8 = specialinvoke r0.<org.apache.cxf.transport.http.auth.HttpAuthHeader: java.util.Map parseHeader()>();

        r0.<org.apache.cxf.transport.http.auth.HttpAuthHeader: java.util.Map params> = $r8;

        return;
    }

    public void <init>(java.lang.String, java.util.Map)
    {
        org.apache.cxf.transport.http.auth.HttpAuthHeader r0;
        java.util.Map r2;
        java.lang.StringBuilder $r4, $r5, $r6, $r8;
        java.lang.String r1, $r3, $r7, $r9;

        r0 := @this: org.apache.cxf.transport.http.auth.HttpAuthHeader;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Map;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.cxf.transport.http.auth.HttpAuthHeader: java.lang.String authType> = r1;

        r0.<org.apache.cxf.transport.http.auth.HttpAuthHeader: java.util.Map params> = r2;

        $r3 = specialinvoke r0.<org.apache.cxf.transport.http.auth.HttpAuthHeader: java.lang.String paramsToString()>();

        r0.<org.apache.cxf.transport.http.auth.HttpAuthHeader: java.lang.String fullContent> = $r3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r7 = r0.<org.apache.cxf.transport.http.auth.HttpAuthHeader: java.lang.String fullContent>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<org.apache.cxf.transport.http.auth.HttpAuthHeader: java.lang.String fullHeader> = $r9;

        return;
    }

    private java.lang.String paramsToString()
    {
        java.util.Map $r2, $r8;
        java.lang.String $r5, r7, r10, $r16;
        boolean $z0, z1;
        java.util.Iterator $r4;
        java.util.Set $r3;
        org.apache.cxf.transport.http.auth.HttpAuthHeader r1;
        java.lang.StringBuilder $r0, $r11, $r12, $r13, $r14, $r15;
        java.lang.Object $r6, $r9;

        r1 := @this: org.apache.cxf.transport.http.auth.HttpAuthHeader;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        z1 = 1;

        $r2 = r1.<org.apache.cxf.transport.http.auth.HttpAuthHeader: java.util.Map params>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set keySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.lang.String) $r6;

        $r8 = r1.<org.apache.cxf.transport.http.auth.HttpAuthHeader: java.util.Map params>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7);

        r10 = (java.lang.String) $r9;

        if r10 == null goto label3;

        if z1 != 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label2:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=\"");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        z1 = 0;

     label3:
        goto label1;

     label4:
        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    private java.util.Map parseHeader()
    {
        java.io.IOException $r7;
        java.util.HashMap $r8;
        java.io.StringReader $r9;
        org.apache.cxf.transport.http.auth.HttpAuthHeader r3;
        int $i0, $i1, $i3, $i5;
        java.io.StreamTokenizer $r10;
        java.lang.String $r4, r5, r6;

        r3 := @this: org.apache.cxf.transport.http.auth.HttpAuthHeader;

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

     label1:
        $r10 = new java.io.StreamTokenizer;

        $r9 = new java.io.StringReader;

        $r4 = r3.<org.apache.cxf.transport.http.auth.HttpAuthHeader: java.lang.String fullContent>;

        specialinvoke $r9.<java.io.StringReader: void <init>(java.lang.String)>($r4);

        specialinvoke $r10.<java.io.StreamTokenizer: void <init>(java.io.Reader)>($r9);

        virtualinvoke $r10.<java.io.StreamTokenizer: void quoteChar(int)>(34);

        virtualinvoke $r10.<java.io.StreamTokenizer: void quoteChar(int)>(39);

        virtualinvoke $r10.<java.io.StreamTokenizer: void whitespaceChars(int,int)>(61, 61);

        virtualinvoke $r10.<java.io.StreamTokenizer: void whitespaceChars(int,int)>(44, 44);

     label2:
        $i0 = virtualinvoke $r10.<java.io.StreamTokenizer: int nextToken()>();

        $i3 = (int) -1;

        if $i0 == $i3 goto label5;

        r5 = $r10.<java.io.StreamTokenizer: java.lang.String sval>;

        $i1 = virtualinvoke $r10.<java.io.StreamTokenizer: int nextToken()>();

        $i5 = (int) -1;

        if $i1 != $i5 goto label4;

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, null);

     label3:
        return $r8;

     label4:
        r6 = $r10.<java.io.StreamTokenizer: java.lang.String sval>;

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r6);

        goto label2;

     label5:
        goto label7;

     label6:
        $r7 := @caughtexception;

     label7:
        return $r8;

        catch java.io.IOException from label1 to label3 with label6;
        catch java.io.IOException from label4 to label5 with label6;
    }

    public java.lang.String getRealm()
    {
        org.apache.cxf.transport.http.auth.HttpAuthHeader r0;
        java.util.Map $r1;
        java.lang.Object $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.cxf.transport.http.auth.HttpAuthHeader;

        $r1 = specialinvoke r0.<org.apache.cxf.transport.http.auth.HttpAuthHeader: java.util.Map parseHeader()>();

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("realm");

        $r3 = (java.lang.String) $r2;

        return $r3;
    }

    public boolean authTypeIsDigest()
    {
        org.apache.cxf.transport.http.auth.HttpAuthHeader r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.cxf.transport.http.auth.HttpAuthHeader;

        $r2 = "Digest";

        $r1 = r0.<org.apache.cxf.transport.http.auth.HttpAuthHeader: java.lang.String authType>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        return $z0;
    }

    public boolean authTypeIsBasic()
    {
        org.apache.cxf.transport.http.auth.HttpAuthHeader r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.cxf.transport.http.auth.HttpAuthHeader;

        $r2 = "Basic";

        $r1 = r0.<org.apache.cxf.transport.http.auth.HttpAuthHeader: java.lang.String authType>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        return $z0;
    }

    public boolean authTypeIsNegotiate()
    {
        org.apache.cxf.transport.http.auth.HttpAuthHeader r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.cxf.transport.http.auth.HttpAuthHeader;

        $r2 = "Digest";

        $r1 = r0.<org.apache.cxf.transport.http.auth.HttpAuthHeader: java.lang.String authType>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        return $z0;
    }

    public java.lang.String getAuthType()
    {
        java.lang.String $r1;
        org.apache.cxf.transport.http.auth.HttpAuthHeader r0;

        r0 := @this: org.apache.cxf.transport.http.auth.HttpAuthHeader;

        $r1 = r0.<org.apache.cxf.transport.http.auth.HttpAuthHeader: java.lang.String authType>;

        return $r1;
    }

    public java.lang.String getFullContent()
    {
        java.lang.String $r1;
        org.apache.cxf.transport.http.auth.HttpAuthHeader r0;

        r0 := @this: org.apache.cxf.transport.http.auth.HttpAuthHeader;

        $r1 = r0.<org.apache.cxf.transport.http.auth.HttpAuthHeader: java.lang.String fullContent>;

        return $r1;
    }

    public java.lang.String getFullHeader()
    {
        java.lang.String $r1;
        org.apache.cxf.transport.http.auth.HttpAuthHeader r0;

        r0 := @this: org.apache.cxf.transport.http.auth.HttpAuthHeader;

        $r1 = r0.<org.apache.cxf.transport.http.auth.HttpAuthHeader: java.lang.String fullHeader>;

        return $r1;
    }

    public java.util.Map getParams()
    {
        org.apache.cxf.transport.http.auth.HttpAuthHeader r0;
        java.util.Map $r1;

        r0 := @this: org.apache.cxf.transport.http.auth.HttpAuthHeader;

        $r1 = r0.<org.apache.cxf.transport.http.auth.HttpAuthHeader: java.util.Map params>;

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.cxf.transport.http.auth.HttpAuthHeader: java.lang.String AUTH_TYPE_NEGOTIATE> = "Negotiate";

        <org.apache.cxf.transport.http.auth.HttpAuthHeader: java.lang.String AUTH_TYPE_DIGEST> = "Digest";

        <org.apache.cxf.transport.http.auth.HttpAuthHeader: java.lang.String AUTH_TYPE_BASIC> = "Basic";

        return;
    }
}
