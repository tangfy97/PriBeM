public class org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl extends org.apache.xmlbeans.impl.xb.xsdschema.impl.AnnotatedImpl implements org.apache.xmlbeans.impl.xb.xsdschema.Attribute
{
    private static final javax.xml.namespace.QName SIMPLETYPE$0;
    private static final javax.xml.namespace.QName NAME$2;
    private static final javax.xml.namespace.QName REF$4;
    private static final javax.xml.namespace.QName TYPE$6;
    private static final javax.xml.namespace.QName USE$8;
    private static final javax.xml.namespace.QName DEFAULT$10;
    private static final javax.xml.namespace.QName FIXED$12;
    private static final javax.xml.namespace.QName FORM$14;

    public void <init>(org.apache.xmlbeans.SchemaType)
    {
        org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl r0;
        org.apache.xmlbeans.SchemaType r1;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl;

        r1 := @parameter0: org.apache.xmlbeans.SchemaType;

        specialinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AnnotatedImpl: void <init>(org.apache.xmlbeans.SchemaType)>(r1);

        return;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.LocalSimpleType getSimpleType()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl r0;
        org.apache.xmlbeans.impl.xb.xsdschema.LocalSimpleType r6;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName SIMPLETYPE$0>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, 0);

        r6 = (org.apache.xmlbeans.impl.xb.xsdschema.LocalSimpleType) $r4;

        if r6 != null goto label3;

        exitmonitor $r1;

     label2:
        return null;

     label3:
        exitmonitor $r1;

     label4:
        return r6;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public boolean isSetSimpleType()
    {
        java.lang.Throwable $r4;
        int $i0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName SIMPLETYPE$0>;

        $i0 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(javax.xml.namespace.QName)>($r3);

        if $i0 == 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        exitmonitor $r1;

     label4:
        return $z0;

     label5:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r4;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setSimpleType(org.apache.xmlbeans.impl.xb.xsdschema.LocalSimpleType)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r7;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl r0;
        org.apache.xmlbeans.impl.xb.xsdschema.LocalSimpleType r5, r10;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl;

        r5 := @parameter0: org.apache.xmlbeans.impl.xb.xsdschema.LocalSimpleType;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName SIMPLETYPE$0>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, 0);

        r10 = (org.apache.xmlbeans.impl.xb.xsdschema.LocalSimpleType) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName SIMPLETYPE$0>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.apache.xmlbeans.impl.xb.xsdschema.LocalSimpleType) $r8;

     label2:
        interfaceinvoke r10.<org.apache.xmlbeans.impl.xb.xsdschema.LocalSimpleType: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.LocalSimpleType addNewSimpleType()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl r0;
        org.apache.xmlbeans.impl.xb.xsdschema.LocalSimpleType r6;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName SIMPLETYPE$0>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>($r3);

        r6 = (org.apache.xmlbeans.impl.xb.xsdschema.LocalSimpleType) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void unsetSimpleType()
    {
        java.lang.Throwable $r4;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName SIMPLETYPE$0>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(javax.xml.namespace.QName,int)>($r3, 0);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.lang.String getName()
    {
        java.lang.Throwable $r6;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;
        java.lang.String $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl r0;
        org.apache.xmlbeans.SimpleValue r7;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName NAME$2>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r7 = (org.apache.xmlbeans.SimpleValue) $r4;

        if r7 != null goto label3;

        exitmonitor $r1;

     label2:
        return null;

     label3:
        $r5 = interfaceinvoke r7.<org.apache.xmlbeans.SimpleValue: java.lang.String getStringValue()>();

        exitmonitor $r1;

     label4:
        return $r5;

     label5:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public org.apache.xmlbeans.XmlNCName xgetName()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.apache.xmlbeans.XmlNCName r6;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName NAME$2>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r6 = (org.apache.xmlbeans.XmlNCName) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean isSetName()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName NAME$2>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        if $r4 == null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        exitmonitor $r1;

     label4:
        return $z0;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setName(java.lang.String)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r7;
        java.lang.String r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl r0;
        org.apache.xmlbeans.SimpleValue r10;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl;

        r5 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName NAME$2>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r10 = (org.apache.xmlbeans.SimpleValue) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName NAME$2>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_attribute_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.apache.xmlbeans.SimpleValue) $r8;

     label2:
        interfaceinvoke r10.<org.apache.xmlbeans.SimpleValue: void setStringValue(java.lang.String)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void xsetName(org.apache.xmlbeans.XmlNCName)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        org.apache.xmlbeans.XmlNCName r5, r10;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r7;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl;

        r5 := @parameter0: org.apache.xmlbeans.XmlNCName;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName NAME$2>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r10 = (org.apache.xmlbeans.XmlNCName) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName NAME$2>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_attribute_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.apache.xmlbeans.XmlNCName) $r8;

     label2:
        interfaceinvoke r10.<org.apache.xmlbeans.XmlNCName: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void unsetName()
    {
        java.lang.Throwable $r4;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName NAME$2>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_attribute(javax.xml.namespace.QName)>($r3);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public javax.xml.namespace.QName getRef()
    {
        java.lang.Throwable $r6;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl r0;
        org.apache.xmlbeans.SimpleValue r7;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName REF$4>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r7 = (org.apache.xmlbeans.SimpleValue) $r4;

        if r7 != null goto label3;

        exitmonitor $r1;

     label2:
        return null;

     label3:
        $r5 = interfaceinvoke r7.<org.apache.xmlbeans.SimpleValue: javax.xml.namespace.QName getQNameValue()>();

        exitmonitor $r1;

     label4:
        return $r5;

     label5:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public org.apache.xmlbeans.XmlQName xgetRef()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl r0;
        org.apache.xmlbeans.XmlQName r6;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName REF$4>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r6 = (org.apache.xmlbeans.XmlQName) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean isSetRef()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName REF$4>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        if $r4 == null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        exitmonitor $r1;

     label4:
        return $z0;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setRef(javax.xml.namespace.QName)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, r5, $r7;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl r0;
        org.apache.xmlbeans.SimpleValue r10;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl;

        r5 := @parameter0: javax.xml.namespace.QName;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName REF$4>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r10 = (org.apache.xmlbeans.SimpleValue) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName REF$4>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_attribute_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.apache.xmlbeans.SimpleValue) $r8;

     label2:
        interfaceinvoke r10.<org.apache.xmlbeans.SimpleValue: void setQNameValue(javax.xml.namespace.QName)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void xsetRef(org.apache.xmlbeans.XmlQName)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.XmlQName r5, r10;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r7;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl;

        r5 := @parameter0: org.apache.xmlbeans.XmlQName;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName REF$4>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r10 = (org.apache.xmlbeans.XmlQName) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName REF$4>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_attribute_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.apache.xmlbeans.XmlQName) $r8;

     label2:
        interfaceinvoke r10.<org.apache.xmlbeans.XmlQName: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void unsetRef()
    {
        java.lang.Throwable $r4;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName REF$4>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_attribute(javax.xml.namespace.QName)>($r3);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public javax.xml.namespace.QName getType()
    {
        java.lang.Throwable $r6;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl r0;
        org.apache.xmlbeans.SimpleValue r7;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName TYPE$6>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r7 = (org.apache.xmlbeans.SimpleValue) $r4;

        if r7 != null goto label3;

        exitmonitor $r1;

     label2:
        return null;

     label3:
        $r5 = interfaceinvoke r7.<org.apache.xmlbeans.SimpleValue: javax.xml.namespace.QName getQNameValue()>();

        exitmonitor $r1;

     label4:
        return $r5;

     label5:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public org.apache.xmlbeans.XmlQName xgetType()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl r0;
        org.apache.xmlbeans.XmlQName r6;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName TYPE$6>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r6 = (org.apache.xmlbeans.XmlQName) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean isSetType()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName TYPE$6>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        if $r4 == null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        exitmonitor $r1;

     label4:
        return $z0;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setType(javax.xml.namespace.QName)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, r5, $r7;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl r0;
        org.apache.xmlbeans.SimpleValue r10;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl;

        r5 := @parameter0: javax.xml.namespace.QName;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName TYPE$6>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r10 = (org.apache.xmlbeans.SimpleValue) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName TYPE$6>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_attribute_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.apache.xmlbeans.SimpleValue) $r8;

     label2:
        interfaceinvoke r10.<org.apache.xmlbeans.SimpleValue: void setQNameValue(javax.xml.namespace.QName)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void xsetType(org.apache.xmlbeans.XmlQName)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.XmlQName r5, r10;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r7;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl;

        r5 := @parameter0: org.apache.xmlbeans.XmlQName;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName TYPE$6>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r10 = (org.apache.xmlbeans.XmlQName) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName TYPE$6>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_attribute_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.apache.xmlbeans.XmlQName) $r8;

     label2:
        interfaceinvoke r10.<org.apache.xmlbeans.XmlQName: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void unsetType()
    {
        java.lang.Throwable $r4;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName TYPE$6>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_attribute(javax.xml.namespace.QName)>($r3);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.Attribute$Use$Enum getUse()
    {
        org.apache.xmlbeans.XmlAnySimpleType $r8;
        java.lang.Throwable $r9;
        org.apache.xmlbeans.impl.xb.xsdschema.Attribute$Use$Enum $r6;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r7;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl r0;
        org.apache.xmlbeans.StringEnumAbstractBase $r5;
        org.apache.xmlbeans.SimpleValue r10;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName USE$8>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r10 = (org.apache.xmlbeans.SimpleValue) $r4;

        if r10 != null goto label2;

        $r7 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName USE$8>;

        $r8 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: org.apache.xmlbeans.XmlAnySimpleType get_default_attribute_value(javax.xml.namespace.QName)>($r7);

        r10 = (org.apache.xmlbeans.SimpleValue) $r8;

     label2:
        if r10 != null goto label4;

        exitmonitor $r1;

     label3:
        return null;

     label4:
        $r5 = interfaceinvoke r10.<org.apache.xmlbeans.SimpleValue: org.apache.xmlbeans.StringEnumAbstractBase getEnumValue()>();

        $r6 = (org.apache.xmlbeans.impl.xb.xsdschema.Attribute$Use$Enum) $r5;

        exitmonitor $r1;

     label5:
        return $r6;

     label6:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label7:
        throw $r9;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.Attribute$Use xgetUse()
    {
        org.apache.xmlbeans.XmlAnySimpleType $r6;
        java.lang.Throwable $r7;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.Attribute$Use r8;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName USE$8>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r8 = (org.apache.xmlbeans.impl.xb.xsdschema.Attribute$Use) $r4;

        if r8 != null goto label2;

        $r5 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName USE$8>;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: org.apache.xmlbeans.XmlAnySimpleType get_default_attribute_value(javax.xml.namespace.QName)>($r5);

        r8 = (org.apache.xmlbeans.impl.xb.xsdschema.Attribute$Use) $r6;

     label2:
        exitmonitor $r1;

     label3:
        return r8;

     label4:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r7;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public boolean isSetUse()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName USE$8>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        if $r4 == null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        exitmonitor $r1;

     label4:
        return $z0;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setUse(org.apache.xmlbeans.impl.xb.xsdschema.Attribute$Use$Enum)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.impl.xb.xsdschema.Attribute$Use$Enum r5;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r7;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl r0;
        org.apache.xmlbeans.SimpleValue r10;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl;

        r5 := @parameter0: org.apache.xmlbeans.impl.xb.xsdschema.Attribute$Use$Enum;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName USE$8>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r10 = (org.apache.xmlbeans.SimpleValue) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName USE$8>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_attribute_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.apache.xmlbeans.SimpleValue) $r8;

     label2:
        interfaceinvoke r10.<org.apache.xmlbeans.SimpleValue: void setEnumValue(org.apache.xmlbeans.StringEnumAbstractBase)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void xsetUse(org.apache.xmlbeans.impl.xb.xsdschema.Attribute$Use)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        org.apache.xmlbeans.impl.xb.xsdschema.Attribute$Use r5, r10;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r7;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl;

        r5 := @parameter0: org.apache.xmlbeans.impl.xb.xsdschema.Attribute$Use;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName USE$8>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r10 = (org.apache.xmlbeans.impl.xb.xsdschema.Attribute$Use) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName USE$8>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_attribute_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.apache.xmlbeans.impl.xb.xsdschema.Attribute$Use) $r8;

     label2:
        interfaceinvoke r10.<org.apache.xmlbeans.impl.xb.xsdschema.Attribute$Use: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void unsetUse()
    {
        java.lang.Throwable $r4;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName USE$8>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_attribute(javax.xml.namespace.QName)>($r3);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.lang.String getDefault()
    {
        java.lang.Throwable $r6;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;
        java.lang.String $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl r0;
        org.apache.xmlbeans.SimpleValue r7;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName DEFAULT$10>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r7 = (org.apache.xmlbeans.SimpleValue) $r4;

        if r7 != null goto label3;

        exitmonitor $r1;

     label2:
        return null;

     label3:
        $r5 = interfaceinvoke r7.<org.apache.xmlbeans.SimpleValue: java.lang.String getStringValue()>();

        exitmonitor $r1;

     label4:
        return $r5;

     label5:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public org.apache.xmlbeans.XmlString xgetDefault()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.apache.xmlbeans.XmlString r6;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName DEFAULT$10>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r6 = (org.apache.xmlbeans.XmlString) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean isSetDefault()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName DEFAULT$10>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        if $r4 == null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        exitmonitor $r1;

     label4:
        return $z0;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setDefault(java.lang.String)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r7;
        java.lang.String r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl r0;
        org.apache.xmlbeans.SimpleValue r10;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl;

        r5 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName DEFAULT$10>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r10 = (org.apache.xmlbeans.SimpleValue) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName DEFAULT$10>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_attribute_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.apache.xmlbeans.SimpleValue) $r8;

     label2:
        interfaceinvoke r10.<org.apache.xmlbeans.SimpleValue: void setStringValue(java.lang.String)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void xsetDefault(org.apache.xmlbeans.XmlString)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        org.apache.xmlbeans.XmlString r5, r10;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r7;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl;

        r5 := @parameter0: org.apache.xmlbeans.XmlString;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName DEFAULT$10>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r10 = (org.apache.xmlbeans.XmlString) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName DEFAULT$10>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_attribute_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.apache.xmlbeans.XmlString) $r8;

     label2:
        interfaceinvoke r10.<org.apache.xmlbeans.XmlString: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void unsetDefault()
    {
        java.lang.Throwable $r4;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName DEFAULT$10>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_attribute(javax.xml.namespace.QName)>($r3);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.lang.String getFixed()
    {
        java.lang.Throwable $r6;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;
        java.lang.String $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl r0;
        org.apache.xmlbeans.SimpleValue r7;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName FIXED$12>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r7 = (org.apache.xmlbeans.SimpleValue) $r4;

        if r7 != null goto label3;

        exitmonitor $r1;

     label2:
        return null;

     label3:
        $r5 = interfaceinvoke r7.<org.apache.xmlbeans.SimpleValue: java.lang.String getStringValue()>();

        exitmonitor $r1;

     label4:
        return $r5;

     label5:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public org.apache.xmlbeans.XmlString xgetFixed()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.apache.xmlbeans.XmlString r6;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName FIXED$12>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r6 = (org.apache.xmlbeans.XmlString) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean isSetFixed()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName FIXED$12>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        if $r4 == null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        exitmonitor $r1;

     label4:
        return $z0;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setFixed(java.lang.String)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r7;
        java.lang.String r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl r0;
        org.apache.xmlbeans.SimpleValue r10;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl;

        r5 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName FIXED$12>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r10 = (org.apache.xmlbeans.SimpleValue) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName FIXED$12>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_attribute_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.apache.xmlbeans.SimpleValue) $r8;

     label2:
        interfaceinvoke r10.<org.apache.xmlbeans.SimpleValue: void setStringValue(java.lang.String)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void xsetFixed(org.apache.xmlbeans.XmlString)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        org.apache.xmlbeans.XmlString r5, r10;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r7;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl;

        r5 := @parameter0: org.apache.xmlbeans.XmlString;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName FIXED$12>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r10 = (org.apache.xmlbeans.XmlString) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName FIXED$12>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_attribute_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.apache.xmlbeans.XmlString) $r8;

     label2:
        interfaceinvoke r10.<org.apache.xmlbeans.XmlString: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void unsetFixed()
    {
        java.lang.Throwable $r4;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName FIXED$12>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_attribute(javax.xml.namespace.QName)>($r3);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.FormChoice$Enum getForm()
    {
        java.lang.Throwable $r7;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.FormChoice$Enum $r6;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl r0;
        org.apache.xmlbeans.StringEnumAbstractBase $r5;
        org.apache.xmlbeans.SimpleValue r8;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName FORM$14>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r8 = (org.apache.xmlbeans.SimpleValue) $r4;

        if r8 != null goto label3;

        exitmonitor $r1;

     label2:
        return null;

     label3:
        $r5 = interfaceinvoke r8.<org.apache.xmlbeans.SimpleValue: org.apache.xmlbeans.StringEnumAbstractBase getEnumValue()>();

        $r6 = (org.apache.xmlbeans.impl.xb.xsdschema.FormChoice$Enum) $r5;

        exitmonitor $r1;

     label4:
        return $r6;

     label5:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.FormChoice xgetForm()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.xb.xsdschema.FormChoice r6;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName FORM$14>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r6 = (org.apache.xmlbeans.impl.xb.xsdschema.FormChoice) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean isSetForm()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName FORM$14>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        if $r4 == null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        exitmonitor $r1;

     label4:
        return $z0;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setForm(org.apache.xmlbeans.impl.xb.xsdschema.FormChoice$Enum)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        org.apache.xmlbeans.impl.xb.xsdschema.FormChoice$Enum r5;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r7;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl r0;
        org.apache.xmlbeans.SimpleValue r10;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl;

        r5 := @parameter0: org.apache.xmlbeans.impl.xb.xsdschema.FormChoice$Enum;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName FORM$14>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r10 = (org.apache.xmlbeans.SimpleValue) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName FORM$14>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_attribute_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.apache.xmlbeans.SimpleValue) $r8;

     label2:
        interfaceinvoke r10.<org.apache.xmlbeans.SimpleValue: void setEnumValue(org.apache.xmlbeans.StringEnumAbstractBase)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void xsetForm(org.apache.xmlbeans.impl.xb.xsdschema.FormChoice)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.xb.xsdschema.FormChoice r5, r10;
        javax.xml.namespace.QName $r3, $r7;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl;

        r5 := @parameter0: org.apache.xmlbeans.impl.xb.xsdschema.FormChoice;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName FORM$14>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r10 = (org.apache.xmlbeans.impl.xb.xsdschema.FormChoice) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName FORM$14>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_attribute_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.apache.xmlbeans.impl.xb.xsdschema.FormChoice) $r8;

     label2:
        interfaceinvoke r10.<org.apache.xmlbeans.impl.xb.xsdschema.FormChoice: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void unsetForm()
    {
        java.lang.Throwable $r4;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName FORM$14>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_attribute(javax.xml.namespace.QName)>($r3);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    static void <clinit>()
    {
        javax.xml.namespace.QName $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7;

        $r0 = new javax.xml.namespace.QName;

        specialinvoke $r0.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("http://www.w3.org/2001/XMLSchema", "simpleType");

        <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName SIMPLETYPE$0> = $r0;

        $r1 = new javax.xml.namespace.QName;

        specialinvoke $r1.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("", "name");

        <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName NAME$2> = $r1;

        $r2 = new javax.xml.namespace.QName;

        specialinvoke $r2.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("", "ref");

        <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName REF$4> = $r2;

        $r3 = new javax.xml.namespace.QName;

        specialinvoke $r3.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("", "type");

        <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName TYPE$6> = $r3;

        $r4 = new javax.xml.namespace.QName;

        specialinvoke $r4.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("", "use");

        <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName USE$8> = $r4;

        $r5 = new javax.xml.namespace.QName;

        specialinvoke $r5.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("", "default");

        <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName DEFAULT$10> = $r5;

        $r6 = new javax.xml.namespace.QName;

        specialinvoke $r6.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("", "fixed");

        <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName FIXED$12> = $r6;

        $r7 = new javax.xml.namespace.QName;

        specialinvoke $r7.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("", "form");

        <org.apache.xmlbeans.impl.xb.xsdschema.impl.AttributeImpl: javax.xml.namespace.QName FORM$14> = $r7;

        return;
    }
}
