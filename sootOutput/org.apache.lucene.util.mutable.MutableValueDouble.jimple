public class org.apache.lucene.util.mutable.MutableValueDouble extends org.apache.lucene.util.mutable.MutableValue
{
    public double value;

    public void <init>()
    {
        org.apache.lucene.util.mutable.MutableValueDouble r0;

        r0 := @this: org.apache.lucene.util.mutable.MutableValueDouble;

        specialinvoke r0.<org.apache.lucene.util.mutable.MutableValue: void <init>()>();

        return;
    }

    public java.lang.Object toObject()
    {
        java.lang.Double $r1;
        org.apache.lucene.util.mutable.MutableValueDouble r0;
        boolean $z0;
        double $d0;

        r0 := @this: org.apache.lucene.util.mutable.MutableValueDouble;

        $z0 = r0.<org.apache.lucene.util.mutable.MutableValueDouble: boolean exists>;

        if $z0 == 0 goto label1;

        $d0 = r0.<org.apache.lucene.util.mutable.MutableValueDouble: double value>;

        $r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        goto label2;

     label1:
        $r1 = null;

     label2:
        return $r1;
    }

    public void copy(org.apache.lucene.util.mutable.MutableValue)
    {
        org.apache.lucene.util.mutable.MutableValue r0;
        org.apache.lucene.util.mutable.MutableValueDouble r1, r2;
        double $d0;
        boolean $z0;

        r2 := @this: org.apache.lucene.util.mutable.MutableValueDouble;

        r0 := @parameter0: org.apache.lucene.util.mutable.MutableValue;

        r1 = (org.apache.lucene.util.mutable.MutableValueDouble) r0;

        $d0 = r1.<org.apache.lucene.util.mutable.MutableValueDouble: double value>;

        r2.<org.apache.lucene.util.mutable.MutableValueDouble: double value> = $d0;

        $z0 = r1.<org.apache.lucene.util.mutable.MutableValueDouble: boolean exists>;

        r2.<org.apache.lucene.util.mutable.MutableValueDouble: boolean exists> = $z0;

        return;
    }

    public org.apache.lucene.util.mutable.MutableValue duplicate()
    {
        org.apache.lucene.util.mutable.MutableValueDouble $r0, r1;
        double $d0;
        boolean $z0;

        r1 := @this: org.apache.lucene.util.mutable.MutableValueDouble;

        $r0 = new org.apache.lucene.util.mutable.MutableValueDouble;

        specialinvoke $r0.<org.apache.lucene.util.mutable.MutableValueDouble: void <init>()>();

        $d0 = r1.<org.apache.lucene.util.mutable.MutableValueDouble: double value>;

        $r0.<org.apache.lucene.util.mutable.MutableValueDouble: double value> = $d0;

        $z0 = r1.<org.apache.lucene.util.mutable.MutableValueDouble: boolean exists>;

        $r0.<org.apache.lucene.util.mutable.MutableValueDouble: boolean exists> = $z0;

        return $r0;
    }

    public boolean equalsSameType(java.lang.Object)
    {
        byte $b0;
        java.lang.Object r0;
        org.apache.lucene.util.mutable.MutableValueDouble r1, r2;
        double $d0, $d1;
        boolean $z0, $z1, $z2;

        r2 := @this: org.apache.lucene.util.mutable.MutableValueDouble;

        r0 := @parameter0: java.lang.Object;

        r1 = (org.apache.lucene.util.mutable.MutableValueDouble) r0;

        $d1 = r2.<org.apache.lucene.util.mutable.MutableValueDouble: double value>;

        $d0 = r1.<org.apache.lucene.util.mutable.MutableValueDouble: double value>;

        $b0 = $d1 cmpl $d0;

        if $b0 != 0 goto label1;

        $z1 = r2.<org.apache.lucene.util.mutable.MutableValueDouble: boolean exists>;

        $z0 = r1.<org.apache.lucene.util.mutable.MutableValueDouble: boolean exists>;

        if $z1 != $z0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public int compareSameType(java.lang.Object)
    {
        int $i0, $i2;
        java.lang.Object r0;
        org.apache.lucene.util.mutable.MutableValueDouble r1, r2;
        double $d0, $d1;
        boolean $z0, $z1;

        r2 := @this: org.apache.lucene.util.mutable.MutableValueDouble;

        r0 := @parameter0: java.lang.Object;

        r1 = (org.apache.lucene.util.mutable.MutableValueDouble) r0;

        $d1 = r2.<org.apache.lucene.util.mutable.MutableValueDouble: double value>;

        $d0 = r1.<org.apache.lucene.util.mutable.MutableValueDouble: double value>;

        $i0 = staticinvoke <java.lang.Double: int compare(double,double)>($d1, $d0);

        if $i0 == 0 goto label1;

        return $i0;

     label1:
        $z0 = r2.<org.apache.lucene.util.mutable.MutableValueDouble: boolean exists>;

        if $z0 != 0 goto label2;

        $i2 = (int) -1;

        return $i2;

     label2:
        $z1 = r1.<org.apache.lucene.util.mutable.MutableValueDouble: boolean exists>;

        if $z1 != 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    public int hashCode()
    {
        int $i2, $i3, $i4;
        long $l0, $l1;
        org.apache.lucene.util.mutable.MutableValueDouble r0;
        double $d0;

        r0 := @this: org.apache.lucene.util.mutable.MutableValueDouble;

        $d0 = r0.<org.apache.lucene.util.mutable.MutableValueDouble: double value>;

        $l0 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        $i3 = (int) $l0;

        $l1 = $l0 >>> 32;

        $i2 = (int) $l1;

        $i4 = $i3 + $i2;

        return $i4;
    }
}
