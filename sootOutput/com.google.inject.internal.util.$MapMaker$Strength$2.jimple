final enum class com.google.inject.internal.util.$MapMaker$Strength$2 extends com.google.inject.internal.util.$MapMaker$Strength
{

    void <init>(java.lang.String, int)
    {
        int i0;
        java.lang.String r1;
        com.google.inject.internal.util.$MapMaker$Strength$2 r0;

        r0 := @this: com.google.inject.internal.util.$MapMaker$Strength$2;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<com.google.inject.internal.util.$MapMaker$Strength: void <init>(java.lang.String,int,com.google.inject.internal.util.$MapMaker$1)>(r1, i0, null);

        return;
    }

    boolean equal(java.lang.Object, java.lang.Object)
    {
        com.google.inject.internal.util.$MapMaker$Strength$2 r2;
        java.lang.Object r0, r1;
        boolean $z0;

        r2 := @this: com.google.inject.internal.util.$MapMaker$Strength$2;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        if r0 != r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    int hash(java.lang.Object)
    {
        int $i0;
        java.lang.Object r0;
        com.google.inject.internal.util.$MapMaker$Strength$2 r1;

        r1 := @this: com.google.inject.internal.util.$MapMaker$Strength$2;

        r0 := @parameter0: java.lang.Object;

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        return $i0;
    }

    com.google.inject.internal.util.$MapMaker$ValueReference referenceValue(com.google.inject.internal.util.$MapMaker$ReferenceEntry, java.lang.Object)
    {
        com.google.inject.internal.util.$MapMaker$Strength$2 r3;
        com.google.inject.internal.util.$MapMaker$SoftValueReference $r0;
        java.lang.Object r1;
        com.google.inject.internal.util.$MapMaker$ReferenceEntry r2;

        r3 := @this: com.google.inject.internal.util.$MapMaker$Strength$2;

        r2 := @parameter0: com.google.inject.internal.util.$MapMaker$ReferenceEntry;

        r1 := @parameter1: java.lang.Object;

        $r0 = new com.google.inject.internal.util.$MapMaker$SoftValueReference;

        specialinvoke $r0.<com.google.inject.internal.util.$MapMaker$SoftValueReference: void <init>(java.lang.Object,com.google.inject.internal.util.$MapMaker$ReferenceEntry)>(r1, r2);

        return $r0;
    }

    com.google.inject.internal.util.$MapMaker$ReferenceEntry newEntry(com.google.inject.internal.util.$CustomConcurrentHashMap$Internals, java.lang.Object, int, com.google.inject.internal.util.$MapMaker$ReferenceEntry)
    {
        com.google.inject.internal.util.$MapMaker$LinkedSoftEntry $r6;
        com.google.inject.internal.util.$CustomConcurrentHashMap$Internals r1;
        com.google.inject.internal.util.$MapMaker$Strength$2 r3;
        int i0;
        java.lang.Object r2;
        com.google.inject.internal.util.$MapMaker$SoftEntry $r4, $r5;
        com.google.inject.internal.util.$MapMaker$ReferenceEntry r0;

        r3 := @this: com.google.inject.internal.util.$MapMaker$Strength$2;

        r1 := @parameter0: com.google.inject.internal.util.$CustomConcurrentHashMap$Internals;

        r2 := @parameter1: java.lang.Object;

        i0 := @parameter2: int;

        r0 := @parameter3: com.google.inject.internal.util.$MapMaker$ReferenceEntry;

        if r0 != null goto label1;

        $r5 = new com.google.inject.internal.util.$MapMaker$SoftEntry;

        $r4 = $r5;

        specialinvoke $r5.<com.google.inject.internal.util.$MapMaker$SoftEntry: void <init>(com.google.inject.internal.util.$CustomConcurrentHashMap$Internals,java.lang.Object,int)>(r1, r2, i0);

        goto label2;

     label1:
        $r6 = new com.google.inject.internal.util.$MapMaker$LinkedSoftEntry;

        $r4 = $r6;

        specialinvoke $r6.<com.google.inject.internal.util.$MapMaker$LinkedSoftEntry: void <init>(com.google.inject.internal.util.$CustomConcurrentHashMap$Internals,java.lang.Object,int,com.google.inject.internal.util.$MapMaker$ReferenceEntry)>(r1, r2, i0, r0);

     label2:
        return $r4;
    }

    com.google.inject.internal.util.$MapMaker$ReferenceEntry copyEntry(java.lang.Object, com.google.inject.internal.util.$MapMaker$ReferenceEntry, com.google.inject.internal.util.$MapMaker$ReferenceEntry)
    {
        com.google.inject.internal.util.$MapMaker$LinkedSoftEntry $r9;
        com.google.inject.internal.util.$CustomConcurrentHashMap$Internals $r4, $r5;
        com.google.inject.internal.util.$MapMaker$Strength$2 r6;
        int $i0, $i1;
        com.google.inject.internal.util.$MapMaker$SoftEntry r1, $r7, $r8;
        java.lang.Object r3;
        com.google.inject.internal.util.$MapMaker$ReferenceEntry r0, r2;

        r6 := @this: com.google.inject.internal.util.$MapMaker$Strength$2;

        r3 := @parameter0: java.lang.Object;

        r0 := @parameter1: com.google.inject.internal.util.$MapMaker$ReferenceEntry;

        r2 := @parameter2: com.google.inject.internal.util.$MapMaker$ReferenceEntry;

        r1 = (com.google.inject.internal.util.$MapMaker$SoftEntry) r0;

        if r2 != null goto label1;

        $r8 = new com.google.inject.internal.util.$MapMaker$SoftEntry;

        $r7 = $r8;

        $r5 = r1.<com.google.inject.internal.util.$MapMaker$SoftEntry: com.google.inject.internal.util.$CustomConcurrentHashMap$Internals internals>;

        $i1 = r1.<com.google.inject.internal.util.$MapMaker$SoftEntry: int hash>;

        specialinvoke $r8.<com.google.inject.internal.util.$MapMaker$SoftEntry: void <init>(com.google.inject.internal.util.$CustomConcurrentHashMap$Internals,java.lang.Object,int)>($r5, r3, $i1);

        goto label2;

     label1:
        $r9 = new com.google.inject.internal.util.$MapMaker$LinkedSoftEntry;

        $r7 = $r9;

        $r4 = r1.<com.google.inject.internal.util.$MapMaker$SoftEntry: com.google.inject.internal.util.$CustomConcurrentHashMap$Internals internals>;

        $i0 = r1.<com.google.inject.internal.util.$MapMaker$SoftEntry: int hash>;

        specialinvoke $r9.<com.google.inject.internal.util.$MapMaker$LinkedSoftEntry: void <init>(com.google.inject.internal.util.$CustomConcurrentHashMap$Internals,java.lang.Object,int,com.google.inject.internal.util.$MapMaker$ReferenceEntry)>($r4, r3, $i0, r2);

     label2:
        return $r7;
    }
}
