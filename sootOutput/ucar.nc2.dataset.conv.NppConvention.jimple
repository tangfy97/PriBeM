public class ucar.nc2.dataset.conv.NppConvention extends ucar.nc2.dataset.CoordSysBuilder
{
    static final boolean $assertionsDisabled;

    public static boolean isMine(ucar.nc2.NetcdfFile)
    {
        ucar.nc2.Variable $r3, $r4;
        ucar.nc2.NetcdfFile r0;
        java.lang.String $r1;
        ucar.nc2.Group $r2, r5;
        boolean $z0;

        r0 := @parameter0: ucar.nc2.NetcdfFile;

        $r1 = virtualinvoke r0.<ucar.nc2.NetcdfFile: java.lang.String getFileTypeId()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("HDF5");

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Group findGroup(java.lang.String)>("All_Data/VIIRS-MOD-GEO-TC_All");

        r5 = $r2;

        if $r2 != null goto label2;

        r5 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Group findGroup(java.lang.String)>("All_Data/VIIRS-CLD-AGG-GEO_All");

     label2:
        if null != r5 goto label3;

        return 0;

     label3:
        $r3 = virtualinvoke r5.<ucar.nc2.Group: ucar.nc2.Variable findVariable(java.lang.String)>("Latitude");

        if null != $r3 goto label4;

        return 0;

     label4:
        $r4 = virtualinvoke r5.<ucar.nc2.Group: ucar.nc2.Variable findVariable(java.lang.String)>("Longitude");

        if null != $r4 goto label5;

        return 0;

     label5:
        return 1;
    }

    public void <init>()
    {
        ucar.nc2.dataset.conv.NppConvention r0;

        r0 := @this: ucar.nc2.dataset.conv.NppConvention;

        specialinvoke r0.<ucar.nc2.dataset.CoordSysBuilder: void <init>()>();

        r0.<ucar.nc2.dataset.conv.NppConvention: java.lang.String conventionName> = "NPP/NPOESS";

        return;
    }

    public void augmentDataset(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        ucar.nc2.util.CancelTask r26;
        int[] $r15, $r22;
        ucar.nc2.constants.AxisType $r8, $r13;
        ucar.nc2.constants.FeatureType $r2;
        boolean $z0, $z1;
        ucar.nc2.dataset.conv.NppConvention r25;
        ucar.nc2.Group $r4, r27;
        java.util.List $r18;
        ucar.nc2.Attribute $r1, $r6, $r7, $r11, $r12, $r23;
        java.lang.AssertionError $r24;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        ucar.nc2.Variable $r5, $r10, r21;
        java.lang.String $r3, $r9, $r14;
        java.util.Iterator $r19;
        ucar.nc2.Dimension $r16, $r17;
        java.lang.Object $r20;
        ucar.nc2.dataset.NetcdfDataset r0;

        r25 := @this: ucar.nc2.dataset.conv.NppConvention;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r26 := @parameter1: ucar.nc2.util.CancelTask;

        $r1 = new ucar.nc2.Attribute;

        $r2 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType IMAGE>;

        $r3 = virtualinvoke $r2.<ucar.nc2.constants.FeatureType: java.lang.String toString()>();

        specialinvoke $r1.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("FeatureType", $r3);

        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r1);

        $r4 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group findGroup(java.lang.String)>("All_Data/VIIRS-MOD-GEO-TC_All");

        r27 = $r4;

        if $r4 != null goto label1;

        r27 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group findGroup(java.lang.String)>("All_Data/VIIRS-CLD-AGG-GEO_All");

     label1:
        $r5 = virtualinvoke r27.<ucar.nc2.Group: ucar.nc2.Variable findVariable(java.lang.String)>("Latitude");

        $r6 = new ucar.nc2.Attribute;

        specialinvoke $r6.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", "degrees_north");

        virtualinvoke $r5.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r6);

        $r7 = new ucar.nc2.Attribute;

        $r8 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lat>;

        $r9 = virtualinvoke $r8.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        specialinvoke $r7.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r9);

        virtualinvoke $r5.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r7);

        $r10 = virtualinvoke r27.<ucar.nc2.Group: ucar.nc2.Variable findVariable(java.lang.String)>("Longitude");

        $r11 = new ucar.nc2.Attribute;

        specialinvoke $r11.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", "degrees_east");

        virtualinvoke $r10.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r11);

        $r12 = new ucar.nc2.Attribute;

        $r13 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lon>;

        $r14 = virtualinvoke $r13.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        specialinvoke $r12.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r14);

        virtualinvoke $r10.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r12);

        $r15 = virtualinvoke $r5.<ucar.nc2.Variable: int[] getShape()>();

        $z0 = <ucar.nc2.dataset.conv.NppConvention: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $i7 = lengthof $r15;

        if $i7 == 2 goto label2;

        $r24 = new java.lang.AssertionError;

        specialinvoke $r24.<java.lang.AssertionError: void <init>()>();

        throw $r24;

     label2:
        $r16 = new ucar.nc2.Dimension;

        $i0 = $r15[0];

        specialinvoke $r16.<ucar.nc2.Dimension: void <init>(java.lang.String,int)>("scan", $i0);

        $r17 = new ucar.nc2.Dimension;

        $i1 = $r15[1];

        specialinvoke $r17.<ucar.nc2.Dimension: void <init>(java.lang.String,int)>("xscan", $i1);

        virtualinvoke r27.<ucar.nc2.Group: void addDimension(ucar.nc2.Dimension)>($r16);

        virtualinvoke r27.<ucar.nc2.Group: void addDimension(ucar.nc2.Dimension)>($r17);

        virtualinvoke $r5.<ucar.nc2.Variable: void setDimensions(java.lang.String)>("scan xscan");

        virtualinvoke $r10.<ucar.nc2.Variable: void setDimensions(java.lang.String)>("scan xscan");

        $r18 = virtualinvoke r27.<ucar.nc2.Group: java.util.List getVariables()>();

        $r19 = interfaceinvoke $r18.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r19.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r20 = interfaceinvoke $r19.<java.util.Iterator: java.lang.Object next()>();

        r21 = (ucar.nc2.Variable) $r20;

        $r22 = virtualinvoke r21.<ucar.nc2.Variable: int[] getShape()>();

        $i2 = lengthof $r22;

        if $i2 != 2 goto label4;

        $i4 = $r22[0];

        $i3 = $r15[0];

        if $i4 != $i3 goto label4;

        $i6 = $r22[1];

        $i5 = $r15[1];

        if $i6 != $i5 goto label4;

        virtualinvoke r21.<ucar.nc2.Variable: void setDimensions(java.lang.String)>("scan xscan");

        $r23 = new ucar.nc2.Attribute;

        specialinvoke $r23.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxes", "Latitude Longitude");

        virtualinvoke r21.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r23);

     label4:
        goto label3;

     label5:
        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: void finish()>();

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lucar/nc2/dataset/conv/NppConvention;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <ucar.nc2.dataset.conv.NppConvention: boolean $assertionsDisabled> = $z1;

        return;
    }
}
