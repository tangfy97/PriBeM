public class com.drew.lang.ByteArrayReader extends java.lang.Object implements com.drew.lang.BufferReader
{
    private final byte[] _buffer;
    private boolean _isMotorolaByteOrder;

    public void <init>(byte[])
    {
        byte[] r1;
        java.lang.NullPointerException $r2;
        com.drew.lang.ByteArrayReader r0;

        r0 := @this: com.drew.lang.ByteArrayReader;

        r1 := @parameter0: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.drew.lang.ByteArrayReader: boolean _isMotorolaByteOrder> = 1;

        if r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>()>();

        throw $r2;

     label1:
        r0.<com.drew.lang.ByteArrayReader: byte[] _buffer> = r1;

        return;
    }

    public long getLength()
    {
        byte[] $r1;
        int $i0;
        long $l1;
        com.drew.lang.ByteArrayReader r0;

        r0 := @this: com.drew.lang.ByteArrayReader;

        $r1 = r0.<com.drew.lang.ByteArrayReader: byte[] _buffer>;

        $i0 = lengthof $r1;

        $l1 = (long) $i0;

        return $l1;
    }

    public void setMotorolaByteOrder(boolean)
    {
        com.drew.lang.ByteArrayReader r0;
        boolean z0;

        r0 := @this: com.drew.lang.ByteArrayReader;

        z0 := @parameter0: boolean;

        r0.<com.drew.lang.ByteArrayReader: boolean _isMotorolaByteOrder> = z0;

        return;
    }

    public boolean isMotorolaByteOrder()
    {
        com.drew.lang.ByteArrayReader r0;
        boolean $z0;

        r0 := @this: com.drew.lang.ByteArrayReader;

        $z0 = r0.<com.drew.lang.ByteArrayReader: boolean _isMotorolaByteOrder>;

        return $z0;
    }

    public short getUInt8(int) throws com.drew.lang.BufferBoundsException
    {
        byte[] $r1;
        short $s2, $s3, $s4;
        byte $b1;
        int i0;
        com.drew.lang.ByteArrayReader r0;

        r0 := @this: com.drew.lang.ByteArrayReader;

        i0 := @parameter0: int;

        specialinvoke r0.<com.drew.lang.ByteArrayReader: void checkBounds(int,int)>(i0, 1);

        $r1 = r0.<com.drew.lang.ByteArrayReader: byte[] _buffer>;

        $b1 = $r1[i0];

        $s4 = (short) $b1;

        $s2 = $s4 & 255;

        $s3 = (short) $s2;

        return $s3;
    }

    public byte getInt8(int) throws com.drew.lang.BufferBoundsException
    {
        byte[] $r1;
        byte $b1;
        int i0;
        com.drew.lang.ByteArrayReader r0;

        r0 := @this: com.drew.lang.ByteArrayReader;

        i0 := @parameter0: int;

        specialinvoke r0.<com.drew.lang.ByteArrayReader: void checkBounds(int,int)>(i0, 1);

        $r1 = r0.<com.drew.lang.ByteArrayReader: byte[] _buffer>;

        $b1 = $r1[i0];

        return $b1;
    }

    public int getUInt16(int) throws com.drew.lang.BufferBoundsException
    {
        byte[] $r1, $r2, $r3, $r4;
        short $s5, $s12, $s18, $s23;
        byte $b2, $b4, $b8, $b11;
        int i0, $i1, $i3, $i6, $i7, $i9, $i10, $i13, $i14, $i15, $i17, $i19, $i20, $i22, $i24;
        boolean $z0;
        com.drew.lang.ByteArrayReader r0;

        r0 := @this: com.drew.lang.ByteArrayReader;

        i0 := @parameter0: int;

        specialinvoke r0.<com.drew.lang.ByteArrayReader: void checkBounds(int,int)>(i0, 2);

        $z0 = r0.<com.drew.lang.ByteArrayReader: boolean _isMotorolaByteOrder>;

        if $z0 == 0 goto label1;

        $r3 = r0.<com.drew.lang.ByteArrayReader: byte[] _buffer>;

        $b8 = $r3[i0];

        $i15 = (int) $b8;

        $i9 = $i15 << 8;

        $i17 = (int) 65280;

        $i13 = $i9 & $i17;

        $r4 = r0.<com.drew.lang.ByteArrayReader: byte[] _buffer>;

        $i10 = i0 + 1;

        $b11 = $r4[$i10];

        $s18 = (short) $b11;

        $s12 = $s18 & 255;

        $i19 = (int) $s12;

        $i14 = $i13 | $i19;

        return $i14;

     label1:
        $r1 = r0.<com.drew.lang.ByteArrayReader: byte[] _buffer>;

        $i1 = i0 + 1;

        $b2 = $r1[$i1];

        $i20 = (int) $b2;

        $i3 = $i20 << 8;

        $i22 = (int) 65280;

        $i6 = $i3 & $i22;

        $r2 = r0.<com.drew.lang.ByteArrayReader: byte[] _buffer>;

        $b4 = $r2[i0];

        $s23 = (short) $b4;

        $s5 = $s23 & 255;

        $i24 = (int) $s5;

        $i7 = $i6 | $i24;

        return $i7;
    }

    public short getInt16(int) throws com.drew.lang.BufferBoundsException
    {
        byte[] $r1, $r2, $r3, $r4;
        byte $b2, $b5, $b11, $b15;
        boolean $z0;
        com.drew.lang.ByteArrayReader r0;
        short $s3, $s6, $s7, $s10, $s12, $s16, $s17, $s20;
        int i0, $i1, $i4, $i8, $i9, $i13, $i14, $i18, $i19, $i21, $i23, $i24, $i25, $i27, $i28;

        r0 := @this: com.drew.lang.ByteArrayReader;

        i0 := @parameter0: int;

        specialinvoke r0.<com.drew.lang.ByteArrayReader: void checkBounds(int,int)>(i0, 2);

        $z0 = r0.<com.drew.lang.ByteArrayReader: boolean _isMotorolaByteOrder>;

        if $z0 == 0 goto label1;

        $r3 = r0.<com.drew.lang.ByteArrayReader: byte[] _buffer>;

        $b11 = $r3[i0];

        $s12 = (short) $b11;

        $i21 = (int) $s12;

        $i13 = $i21 << 8;

        $i23 = (int) -256;

        $i18 = $i13 & $i23;

        $r4 = r0.<com.drew.lang.ByteArrayReader: byte[] _buffer>;

        $i14 = i0 + 1;

        $b15 = $r4[$i14];

        $s16 = (short) $b15;

        $s17 = $s16 & 255;

        $i24 = (int) $s17;

        $i19 = $i18 | $i24;

        $s20 = (short) $i19;

        return $s20;

     label1:
        $r1 = r0.<com.drew.lang.ByteArrayReader: byte[] _buffer>;

        $i1 = i0 + 1;

        $b2 = $r1[$i1];

        $s3 = (short) $b2;

        $i25 = (int) $s3;

        $i4 = $i25 << 8;

        $i27 = (int) -256;

        $i8 = $i4 & $i27;

        $r2 = r0.<com.drew.lang.ByteArrayReader: byte[] _buffer>;

        $b5 = $r2[i0];

        $s6 = (short) $b5;

        $s7 = $s6 & 255;

        $i28 = (int) $s7;

        $i9 = $i8 | $i28;

        $s10 = (short) $i9;

        return $s10;
    }

    public long getUInt32(int) throws com.drew.lang.BufferBoundsException
    {
        byte[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        byte $b2, $b6, $b12, $b17, $b22, $b26, $b32, $b38;
        boolean $z0;
        com.drew.lang.ByteArrayReader r0;
        long $l3, $l4, $l7, $l8, $l9, $l10, $l13, $l14, $l15, $l16, $l18, $l19, $l20, $l21, $l23, $l24, $l27, $l28, $l29, $l30, $l33, $l34, $l35, $l36, $l39, $l40, $l41, $l42;
        int i0, $i1, $i5, $i11, $i25, $i31, $i37;

        r0 := @this: com.drew.lang.ByteArrayReader;

        i0 := @parameter0: int;

        specialinvoke r0.<com.drew.lang.ByteArrayReader: void checkBounds(int,int)>(i0, 4);

        $z0 = r0.<com.drew.lang.ByteArrayReader: boolean _isMotorolaByteOrder>;

        if $z0 == 0 goto label1;

        $r5 = r0.<com.drew.lang.ByteArrayReader: byte[] _buffer>;

        $b22 = $r5[i0];

        $l23 = (long) $b22;

        $l24 = $l23 << 24;

        $l30 = $l24 & 4278190080L;

        $r6 = r0.<com.drew.lang.ByteArrayReader: byte[] _buffer>;

        $i25 = i0 + 1;

        $b26 = $r6[$i25];

        $l27 = (long) $b26;

        $l28 = $l27 << 16;

        $l29 = $l28 & 16711680L;

        $l36 = $l30 | $l29;

        $r7 = r0.<com.drew.lang.ByteArrayReader: byte[] _buffer>;

        $i31 = i0 + 2;

        $b32 = $r7[$i31];

        $l33 = (long) $b32;

        $l34 = $l33 << 8;

        $l35 = $l34 & 65280L;

        $l41 = $l36 | $l35;

        $r8 = r0.<com.drew.lang.ByteArrayReader: byte[] _buffer>;

        $i37 = i0 + 3;

        $b38 = $r8[$i37];

        $l39 = (long) $b38;

        $l40 = $l39 & 255L;

        $l42 = $l41 | $l40;

        return $l42;

     label1:
        $r1 = r0.<com.drew.lang.ByteArrayReader: byte[] _buffer>;

        $i1 = i0 + 3;

        $b2 = $r1[$i1];

        $l3 = (long) $b2;

        $l4 = $l3 << 24;

        $l10 = $l4 & 4278190080L;

        $r2 = r0.<com.drew.lang.ByteArrayReader: byte[] _buffer>;

        $i5 = i0 + 2;

        $b6 = $r2[$i5];

        $l7 = (long) $b6;

        $l8 = $l7 << 16;

        $l9 = $l8 & 16711680L;

        $l16 = $l10 | $l9;

        $r3 = r0.<com.drew.lang.ByteArrayReader: byte[] _buffer>;

        $i11 = i0 + 1;

        $b12 = $r3[$i11];

        $l13 = (long) $b12;

        $l14 = $l13 << 8;

        $l15 = $l14 & 65280L;

        $l20 = $l16 | $l15;

        $r4 = r0.<com.drew.lang.ByteArrayReader: byte[] _buffer>;

        $b17 = $r4[i0];

        $l18 = (long) $b17;

        $l19 = $l18 & 255L;

        $l21 = $l20 | $l19;

        return $l21;
    }

    public int getInt32(int) throws com.drew.lang.BufferBoundsException
    {
        byte[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        byte $b2, $b5, $b10, $b14, $b18, $b21, $b26, $b31;
        boolean $z0;
        com.drew.lang.ByteArrayReader r0;
        short $s15, $s32, $s40, $s47;
        int i0, $i1, $i3, $i4, $i6, $i7, $i8, $i9, $i11, $i12, $i13, $i16, $i17, $i19, $i20, $i22, $i23, $i24, $i25, $i27, $i28, $i29, $i30, $i33, $i34, $i35, $i36, $i37, $i39, $i41, $i42, $i43, $i44, $i46, $i48;

        r0 := @this: com.drew.lang.ByteArrayReader;

        i0 := @parameter0: int;

        specialinvoke r0.<com.drew.lang.ByteArrayReader: void checkBounds(int,int)>(i0, 4);

        $z0 = r0.<com.drew.lang.ByteArrayReader: boolean _isMotorolaByteOrder>;

        if $z0 == 0 goto label1;

        $r5 = r0.<com.drew.lang.ByteArrayReader: byte[] _buffer>;

        $b18 = $r5[i0];

        $i35 = (int) $b18;

        $i19 = $i35 << 24;

        $i24 = $i19 & -16777216;

        $r6 = r0.<com.drew.lang.ByteArrayReader: byte[] _buffer>;

        $i20 = i0 + 1;

        $b21 = $r6[$i20];

        $i36 = (int) $b21;

        $i22 = $i36 << 16;

        $i23 = $i22 & 16711680;

        $i29 = $i24 | $i23;

        $r7 = r0.<com.drew.lang.ByteArrayReader: byte[] _buffer>;

        $i25 = i0 + 2;

        $b26 = $r7[$i25];

        $i37 = (int) $b26;

        $i27 = $i37 << 8;

        $i39 = (int) 65280;

        $i28 = $i27 & $i39;

        $i33 = $i29 | $i28;

        $r8 = r0.<com.drew.lang.ByteArrayReader: byte[] _buffer>;

        $i30 = i0 + 3;

        $b31 = $r8[$i30];

        $s40 = (short) $b31;

        $s32 = $s40 & 255;

        $i41 = (int) $s32;

        $i34 = $i33 | $i41;

        return $i34;

     label1:
        $r1 = r0.<com.drew.lang.ByteArrayReader: byte[] _buffer>;

        $i1 = i0 + 3;

        $b2 = $r1[$i1];

        $i42 = (int) $b2;

        $i3 = $i42 << 24;

        $i8 = $i3 & -16777216;

        $r2 = r0.<com.drew.lang.ByteArrayReader: byte[] _buffer>;

        $i4 = i0 + 2;

        $b5 = $r2[$i4];

        $i43 = (int) $b5;

        $i6 = $i43 << 16;

        $i7 = $i6 & 16711680;

        $i13 = $i8 | $i7;

        $r3 = r0.<com.drew.lang.ByteArrayReader: byte[] _buffer>;

        $i9 = i0 + 1;

        $b10 = $r3[$i9];

        $i44 = (int) $b10;

        $i11 = $i44 << 8;

        $i46 = (int) 65280;

        $i12 = $i11 & $i46;

        $i16 = $i13 | $i12;

        $r4 = r0.<com.drew.lang.ByteArrayReader: byte[] _buffer>;

        $b14 = $r4[i0];

        $s47 = (short) $b14;

        $s15 = $s47 & 255;

        $i48 = (int) $s15;

        $i17 = $i16 | $i48;

        return $i17;
    }

    public long getInt64(int) throws com.drew.lang.BufferBoundsException
    {
        byte[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16;
        byte $b2, $b6, $b12, $b18, $b24, $b30, $b36, $b41, $b46, $b50, $b56, $b62, $b68, $b74, $b80, $b86;
        long $l3, $l4, $l7, $l8, $l9, $l10, $l13, $l14, $l15, $l16, $l19, $l20, $l21, $l22, $l25, $l26, $l27, $l28, $l31, $l32, $l33, $l34, $l37, $l38, $l39, $l40, $l42, $l43, $l44, $l45, $l47, $l48, $l51, $l52, $l53, $l54, $l57, $l58, $l59, $l60, $l63, $l64, $l65, $l66, $l69, $l70, $l71, $l72, $l75, $l76, $l77, $l78, $l81, $l82, $l83, $l84, $l87, $l88, $l89, $l90;
        boolean $z0;
        com.drew.lang.ByteArrayReader r0;
        int i0, $i1, $i5, $i11, $i17, $i23, $i29, $i35, $i49, $i55, $i61, $i67, $i73, $i79, $i85;

        r0 := @this: com.drew.lang.ByteArrayReader;

        i0 := @parameter0: int;

        specialinvoke r0.<com.drew.lang.ByteArrayReader: void checkBounds(int,int)>(i0, 8);

        $z0 = r0.<com.drew.lang.ByteArrayReader: boolean _isMotorolaByteOrder>;

        if $z0 == 0 goto label1;

        $r9 = r0.<com.drew.lang.ByteArrayReader: byte[] _buffer>;

        $b46 = $r9[i0];

        $l47 = (long) $b46;

        $l48 = $l47 << 56;

        $l54 = $l48 & -72057594037927936L;

        $r10 = r0.<com.drew.lang.ByteArrayReader: byte[] _buffer>;

        $i49 = i0 + 1;

        $b50 = $r10[$i49];

        $l51 = (long) $b50;

        $l52 = $l51 << 48;

        $l53 = $l52 & 71776119061217280L;

        $l60 = $l54 | $l53;

        $r11 = r0.<com.drew.lang.ByteArrayReader: byte[] _buffer>;

        $i55 = i0 + 2;

        $b56 = $r11[$i55];

        $l57 = (long) $b56;

        $l58 = $l57 << 40;

        $l59 = $l58 & 280375465082880L;

        $l66 = $l60 | $l59;

        $r12 = r0.<com.drew.lang.ByteArrayReader: byte[] _buffer>;

        $i61 = i0 + 3;

        $b62 = $r12[$i61];

        $l63 = (long) $b62;

        $l64 = $l63 << 32;

        $l65 = $l64 & 1095216660480L;

        $l72 = $l66 | $l65;

        $r13 = r0.<com.drew.lang.ByteArrayReader: byte[] _buffer>;

        $i67 = i0 + 4;

        $b68 = $r13[$i67];

        $l69 = (long) $b68;

        $l70 = $l69 << 24;

        $l71 = $l70 & 4278190080L;

        $l78 = $l72 | $l71;

        $r14 = r0.<com.drew.lang.ByteArrayReader: byte[] _buffer>;

        $i73 = i0 + 5;

        $b74 = $r14[$i73];

        $l75 = (long) $b74;

        $l76 = $l75 << 16;

        $l77 = $l76 & 16711680L;

        $l84 = $l78 | $l77;

        $r15 = r0.<com.drew.lang.ByteArrayReader: byte[] _buffer>;

        $i79 = i0 + 6;

        $b80 = $r15[$i79];

        $l81 = (long) $b80;

        $l82 = $l81 << 8;

        $l83 = $l82 & 65280L;

        $l89 = $l84 | $l83;

        $r16 = r0.<com.drew.lang.ByteArrayReader: byte[] _buffer>;

        $i85 = i0 + 7;

        $b86 = $r16[$i85];

        $l87 = (long) $b86;

        $l88 = $l87 & 255L;

        $l90 = $l89 | $l88;

        return $l90;

     label1:
        $r1 = r0.<com.drew.lang.ByteArrayReader: byte[] _buffer>;

        $i1 = i0 + 7;

        $b2 = $r1[$i1];

        $l3 = (long) $b2;

        $l4 = $l3 << 56;

        $l10 = $l4 & -72057594037927936L;

        $r2 = r0.<com.drew.lang.ByteArrayReader: byte[] _buffer>;

        $i5 = i0 + 6;

        $b6 = $r2[$i5];

        $l7 = (long) $b6;

        $l8 = $l7 << 48;

        $l9 = $l8 & 71776119061217280L;

        $l16 = $l10 | $l9;

        $r3 = r0.<com.drew.lang.ByteArrayReader: byte[] _buffer>;

        $i11 = i0 + 5;

        $b12 = $r3[$i11];

        $l13 = (long) $b12;

        $l14 = $l13 << 40;

        $l15 = $l14 & 280375465082880L;

        $l22 = $l16 | $l15;

        $r4 = r0.<com.drew.lang.ByteArrayReader: byte[] _buffer>;

        $i17 = i0 + 4;

        $b18 = $r4[$i17];

        $l19 = (long) $b18;

        $l20 = $l19 << 32;

        $l21 = $l20 & 1095216660480L;

        $l28 = $l22 | $l21;

        $r5 = r0.<com.drew.lang.ByteArrayReader: byte[] _buffer>;

        $i23 = i0 + 3;

        $b24 = $r5[$i23];

        $l25 = (long) $b24;

        $l26 = $l25 << 24;

        $l27 = $l26 & 4278190080L;

        $l34 = $l28 | $l27;

        $r6 = r0.<com.drew.lang.ByteArrayReader: byte[] _buffer>;

        $i29 = i0 + 2;

        $b30 = $r6[$i29];

        $l31 = (long) $b30;

        $l32 = $l31 << 16;

        $l33 = $l32 & 16711680L;

        $l40 = $l34 | $l33;

        $r7 = r0.<com.drew.lang.ByteArrayReader: byte[] _buffer>;

        $i35 = i0 + 1;

        $b36 = $r7[$i35];

        $l37 = (long) $b36;

        $l38 = $l37 << 8;

        $l39 = $l38 & 65280L;

        $l44 = $l40 | $l39;

        $r8 = r0.<com.drew.lang.ByteArrayReader: byte[] _buffer>;

        $b41 = $r8[i0];

        $l42 = (long) $b41;

        $l43 = $l42 & 255L;

        $l45 = $l44 | $l43;

        return $l45;
    }

    public float getS15Fixed16(int) throws com.drew.lang.BufferBoundsException
    {
        byte[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        byte $b2, $b5, $b10, $b12, $b15, $b18, $b23, $b26;
        short $s3, $s6, $s11, $s13, $s16, $s19, $s24, $s27, $s31, $s33, $s35, $s37, $s39, $s41, $s43, $s45;
        boolean $z0;
        com.drew.lang.ByteArrayReader r0;
        float $f0, $f1, f2, f3;
        int i0, $i1, $i4, $i7, $i8, $i9, $i14, $i17, $i20, $i21, $i22, $i25, $i28, i29, i30, $i32, $i34, $i36, $i38, $i40, $i42, $i44, $i46;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;

        r0 := @this: com.drew.lang.ByteArrayReader;

        i0 := @parameter0: int;

        specialinvoke r0.<com.drew.lang.ByteArrayReader: void checkBounds(int,int)>(i0, 4);

        $z0 = r0.<com.drew.lang.ByteArrayReader: boolean _isMotorolaByteOrder>;

        if $z0 == 0 goto label1;

        $r5 = r0.<com.drew.lang.ByteArrayReader: byte[] _buffer>;

        $b15 = $r5[i0];

        $s31 = (short) $b15;

        $s16 = $s31 & 255;

        $i32 = (int) $s16;

        $i20 = $i32 << 8;

        $r6 = r0.<com.drew.lang.ByteArrayReader: byte[] _buffer>;

        $i17 = i0 + 1;

        $b18 = $r6[$i17];

        $s33 = (short) $b18;

        $s19 = $s33 & 255;

        $i34 = (int) $s19;

        $i21 = $i20 | $i34;

        f2 = (float) $i21;

        $r7 = r0.<com.drew.lang.ByteArrayReader: byte[] _buffer>;

        $i22 = i0 + 2;

        $b23 = $r7[$i22];

        $s35 = (short) $b23;

        $s24 = $s35 & 255;

        $i36 = (int) $s24;

        $i28 = $i36 << 8;

        $r8 = r0.<com.drew.lang.ByteArrayReader: byte[] _buffer>;

        $i25 = i0 + 3;

        $b26 = $r8[$i25];

        $s37 = (short) $b26;

        $s27 = $s37 & 255;

        $i38 = (int) $s27;

        i29 = $i28 | $i38;

        $d6 = (double) f2;

        $d4 = (double) i29;

        $d5 = $d4 / 65536.0;

        $d7 = $d6 + $d5;

        $f1 = (float) $d7;

        return $f1;

     label1:
        $r1 = r0.<com.drew.lang.ByteArrayReader: byte[] _buffer>;

        $i1 = i0 + 3;

        $b2 = $r1[$i1];

        $s39 = (short) $b2;

        $s3 = $s39 & 255;

        $i40 = (int) $s3;

        $i7 = $i40 << 8;

        $r2 = r0.<com.drew.lang.ByteArrayReader: byte[] _buffer>;

        $i4 = i0 + 2;

        $b5 = $r2[$i4];

        $s41 = (short) $b5;

        $s6 = $s41 & 255;

        $i42 = (int) $s6;

        $i8 = $i7 | $i42;

        f3 = (float) $i8;

        $r3 = r0.<com.drew.lang.ByteArrayReader: byte[] _buffer>;

        $i9 = i0 + 1;

        $b10 = $r3[$i9];

        $s43 = (short) $b10;

        $s11 = $s43 & 255;

        $i44 = (int) $s11;

        $i14 = $i44 << 8;

        $r4 = r0.<com.drew.lang.ByteArrayReader: byte[] _buffer>;

        $b12 = $r4[i0];

        $s45 = (short) $b12;

        $s13 = $s45 & 255;

        $i46 = (int) $s13;

        i30 = $i14 | $i46;

        $d2 = (double) f3;

        $d0 = (double) i30;

        $d1 = $d0 / 65536.0;

        $d3 = $d2 + $d1;

        $f0 = (float) $d3;

        return $f0;
    }

    public float getFloat32(int) throws com.drew.lang.BufferBoundsException
    {
        int i0, $i1;
        float $f0;
        com.drew.lang.ByteArrayReader r0;

        r0 := @this: com.drew.lang.ByteArrayReader;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<com.drew.lang.ByteArrayReader: int getInt32(int)>(i0);

        $f0 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i1);

        return $f0;
    }

    public double getDouble64(int) throws com.drew.lang.BufferBoundsException
    {
        int i0;
        long $l1;
        com.drew.lang.ByteArrayReader r0;
        double $d0;

        r0 := @this: com.drew.lang.ByteArrayReader;

        i0 := @parameter0: int;

        $l1 = virtualinvoke r0.<com.drew.lang.ByteArrayReader: long getInt64(int)>(i0);

        $d0 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($l1);

        return $d0;
    }

    public byte[] getBytes(int, int) throws com.drew.lang.BufferBoundsException
    {
        byte[] r1, $r2;
        int i0, i1;
        com.drew.lang.ByteArrayReader r0;

        r0 := @this: com.drew.lang.ByteArrayReader;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<com.drew.lang.ByteArrayReader: void checkBounds(int,int)>(i0, i1);

        r1 = newarray (byte)[i1];

        $r2 = r0.<com.drew.lang.ByteArrayReader: byte[] _buffer>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, i0, r1, 0, i1);

        return r1;
    }

    public java.lang.String getString(int, int) throws com.drew.lang.BufferBoundsException
    {
        byte[] $r2;
        int i0, i1;
        java.lang.String $r0;
        com.drew.lang.ByteArrayReader r1;

        r1 := @this: com.drew.lang.ByteArrayReader;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = new java.lang.String;

        $r2 = virtualinvoke r1.<com.drew.lang.ByteArrayReader: byte[] getBytes(int,int)>(i0, i1);

        specialinvoke $r0.<java.lang.String: void <init>(byte[])>($r2);

        return $r0;
    }

    public java.lang.String getString(int, int, java.lang.String) throws com.drew.lang.BufferBoundsException
    {
        byte[] $r1;
        com.drew.lang.ByteArrayReader r0;
        int i0, i1;
        java.lang.String $r2, r3, $r5;
        java.io.UnsupportedEncodingException $r4;

        r0 := @this: com.drew.lang.ByteArrayReader;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r3 := @parameter2: java.lang.String;

        $r1 = virtualinvoke r0.<com.drew.lang.ByteArrayReader: byte[] getBytes(int,int)>(i0, i1);

     label1:
        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(byte[],java.lang.String)>($r1, r3);

     label2:
        return $r2;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.String;

        specialinvoke $r5.<java.lang.String: void <init>(byte[])>($r1);

        return $r5;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public java.lang.String getNullTerminatedString(int, int) throws com.drew.lang.BufferBoundsException
    {
        byte[] $r1, $r2, $r3;
        com.drew.lang.ByteArrayReader r0;
        byte $b5;
        int i0, i1, $i2, $i3, $i4, i6;
        java.lang.String $r4;

        r0 := @this: com.drew.lang.ByteArrayReader;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<com.drew.lang.ByteArrayReader: void checkBounds(int,int)>(i0, i1);

        i6 = 0;

     label1:
        $i3 = i0 + i6;

        $r1 = r0.<com.drew.lang.ByteArrayReader: byte[] _buffer>;

        $i2 = lengthof $r1;

        if $i3 >= $i2 goto label2;

        $r2 = r0.<com.drew.lang.ByteArrayReader: byte[] _buffer>;

        $i4 = i0 + i6;

        $b5 = $r2[$i4];

        if $b5 == 0 goto label2;

        if i6 >= i1 goto label2;

        i6 = i6 + 1;

        goto label1;

     label2:
        $r3 = virtualinvoke r0.<com.drew.lang.ByteArrayReader: byte[] getBytes(int,int)>(i0, i6);

        $r4 = new java.lang.String;

        specialinvoke $r4.<java.lang.String: void <init>(byte[])>($r3);

        return $r4;
    }

    private void checkBounds(int, int) throws com.drew.lang.BufferBoundsException
    {
        byte[] $r1, $r3;
        long $l2, $l3, $l4, $l6, $l7;
        com.drew.lang.ByteArrayReader r0;
        byte $b8;
        int i0, i1, $i5, $i9;
        com.drew.lang.BufferBoundsException $r4;

        r0 := @this: com.drew.lang.ByteArrayReader;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        if i0 < 0 goto label1;

        if i1 < 0 goto label1;

        $l3 = (long) i1;

        $l2 = (long) i0;

        $l4 = $l3 + $l2;

        $l7 = $l4 - 1L;

        $r1 = r0.<com.drew.lang.ByteArrayReader: byte[] _buffer>;

        $i5 = lengthof $r1;

        $l6 = (long) $i5;

        $b8 = $l7 cmp $l6;

        $i9 = (int) $b8;

        if $i9 < 0 goto label2;

     label1:
        $r4 = new com.drew.lang.BufferBoundsException;

        $r3 = r0.<com.drew.lang.ByteArrayReader: byte[] _buffer>;

        specialinvoke $r4.<com.drew.lang.BufferBoundsException: void <init>(byte[],int,int)>($r3, i1, i0);

        throw $r4;

     label2:
        return;
    }
}
