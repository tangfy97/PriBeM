public class org.apache.cxf.service.model.BindingOperationInfo extends org.apache.cxf.service.model.AbstractPropertiesHolder
{
    protected org.apache.cxf.service.model.OperationInfo opInfo;
    org.apache.cxf.service.model.BindingInfo bindingInfo;
    org.apache.cxf.service.model.BindingMessageInfo inputMessage;
    org.apache.cxf.service.model.BindingMessageInfo outputMessage;
    java.util.Map faults;
    org.apache.cxf.service.model.BindingOperationInfo opHolder;

    public void <init>()
    {
        org.apache.cxf.service.model.BindingOperationInfo r0;

        r0 := @this: org.apache.cxf.service.model.BindingOperationInfo;

        specialinvoke r0.<org.apache.cxf.service.model.AbstractPropertiesHolder: void <init>()>();

        return;
    }

    public void <init>(org.apache.cxf.service.model.BindingInfo, org.apache.cxf.service.model.OperationInfo)
    {
        org.apache.cxf.service.model.BindingFaultInfo $r16;
        org.apache.cxf.service.model.BindingOperationInfo r0, $r8;
        java.util.Map $r14;
        int $i0;
        org.apache.cxf.service.model.FaultInfo r13;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r11;
        org.apache.cxf.service.model.MessageInfo $r4, $r6, $r19, $r22;
        java.util.Collection $r7;
        org.apache.cxf.service.model.OperationInfo r2, $r3, $r5, $r9, $r18, $r21;
        java.util.concurrent.ConcurrentHashMap $r10;
        org.apache.cxf.service.model.BindingInfo r1;
        org.apache.cxf.service.model.BindingMessageInfo $r17, $r20;
        java.lang.Object $r12;
        javax.xml.namespace.QName $r15;

        r0 := @this: org.apache.cxf.service.model.BindingOperationInfo;

        r1 := @parameter0: org.apache.cxf.service.model.BindingInfo;

        r2 := @parameter1: org.apache.cxf.service.model.OperationInfo;

        specialinvoke r0.<org.apache.cxf.service.model.AbstractPropertiesHolder: void <init>()>();

        r0.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.BindingInfo bindingInfo> = r1;

        r0.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.OperationInfo opInfo> = r2;

        $r3 = r0.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.OperationInfo opInfo>;

        $r4 = virtualinvoke $r3.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getInput()>();

        if $r4 == null goto label1;

        $r20 = new org.apache.cxf.service.model.BindingMessageInfo;

        $r21 = r0.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.OperationInfo opInfo>;

        $r22 = virtualinvoke $r21.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getInput()>();

        specialinvoke $r20.<org.apache.cxf.service.model.BindingMessageInfo: void <init>(org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.BindingOperationInfo)>($r22, r0);

        r0.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.BindingMessageInfo inputMessage> = $r20;

        goto label2;

     label1:
        r0.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.BindingMessageInfo inputMessage> = null;

     label2:
        $r5 = r0.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.OperationInfo opInfo>;

        $r6 = virtualinvoke $r5.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getOutput()>();

        if $r6 == null goto label3;

        $r17 = new org.apache.cxf.service.model.BindingMessageInfo;

        $r18 = r0.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.OperationInfo opInfo>;

        $r19 = virtualinvoke $r18.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getOutput()>();

        specialinvoke $r17.<org.apache.cxf.service.model.BindingMessageInfo: void <init>(org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.BindingOperationInfo)>($r19, r0);

        r0.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.BindingMessageInfo outputMessage> = $r17;

        goto label4;

     label3:
        r0.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.BindingMessageInfo outputMessage> = null;

     label4:
        $r7 = virtualinvoke r2.<org.apache.cxf.service.model.OperationInfo: java.util.Collection getFaults()>();

        if $r7 == null goto label6;

        $z0 = interfaceinvoke $r7.<java.util.Collection: boolean isEmpty()>();

        if $z0 != 0 goto label6;

        $r10 = new java.util.concurrent.ConcurrentHashMap;

        $i0 = interfaceinvoke $r7.<java.util.Collection: int size()>();

        specialinvoke $r10.<java.util.concurrent.ConcurrentHashMap: void <init>(int,float,int)>($i0, 0.75F, 2);

        r0.<org.apache.cxf.service.model.BindingOperationInfo: java.util.Map faults> = $r10;

        $r11 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();

     label5:
        $z1 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r13 = (org.apache.cxf.service.model.FaultInfo) $r12;

        $r14 = r0.<org.apache.cxf.service.model.BindingOperationInfo: java.util.Map faults>;

        $r15 = virtualinvoke r13.<org.apache.cxf.service.model.FaultInfo: javax.xml.namespace.QName getFaultName()>();

        $r16 = new org.apache.cxf.service.model.BindingFaultInfo;

        specialinvoke $r16.<org.apache.cxf.service.model.BindingFaultInfo: void <init>(org.apache.cxf.service.model.FaultInfo,org.apache.cxf.service.model.BindingOperationInfo)>(r13, r0);

        interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, $r16);

        goto label5;

     label6:
        $z2 = virtualinvoke r2.<org.apache.cxf.service.model.OperationInfo: boolean isUnwrappedCapable()>();

        if $z2 == 0 goto label7;

        $r8 = new org.apache.cxf.service.model.BindingOperationInfo;

        $r9 = virtualinvoke r2.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.OperationInfo getUnwrappedOperation()>();

        specialinvoke $r8.<org.apache.cxf.service.model.BindingOperationInfo: void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo,org.apache.cxf.service.model.BindingOperationInfo)>(r1, $r9, r0);

        r0.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.BindingOperationInfo opHolder> = $r8;

     label7:
        return;
    }

    void <init>(org.apache.cxf.service.model.BindingInfo, org.apache.cxf.service.model.OperationInfo, org.apache.cxf.service.model.BindingOperationInfo)
    {
        org.apache.cxf.service.model.OperationInfo r2;
        org.apache.cxf.service.model.BindingOperationInfo r0, r3;
        org.apache.cxf.service.model.BindingInfo r1;

        r0 := @this: org.apache.cxf.service.model.BindingOperationInfo;

        r1 := @parameter0: org.apache.cxf.service.model.BindingInfo;

        r2 := @parameter1: org.apache.cxf.service.model.OperationInfo;

        r3 := @parameter2: org.apache.cxf.service.model.BindingOperationInfo;

        specialinvoke r0.<org.apache.cxf.service.model.BindingOperationInfo: void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)>(r1, r2);

        r0.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.BindingOperationInfo opHolder> = r3;

        return;
    }

    public void updateUnwrappedOperation()
    {
        org.apache.cxf.service.model.OperationInfo $r1, $r4, $r6;
        org.apache.cxf.service.model.BindingOperationInfo r0, $r2, $r3;
        org.apache.cxf.service.model.BindingInfo $r5;
        boolean $z0;

        r0 := @this: org.apache.cxf.service.model.BindingOperationInfo;

        $r1 = r0.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.OperationInfo opInfo>;

        $z0 = virtualinvoke $r1.<org.apache.cxf.service.model.OperationInfo: boolean isUnwrappedCapable()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.BindingOperationInfo opHolder>;

        if $r2 != null goto label1;

        $r3 = new org.apache.cxf.service.model.BindingOperationInfo;

        $r5 = r0.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.BindingInfo bindingInfo>;

        $r4 = r0.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.OperationInfo opInfo>;

        $r6 = virtualinvoke $r4.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.OperationInfo getUnwrappedOperation()>();

        specialinvoke $r3.<org.apache.cxf.service.model.BindingOperationInfo: void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo,org.apache.cxf.service.model.BindingOperationInfo)>($r5, $r6, r0);

        r0.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.BindingOperationInfo opHolder> = $r3;

     label1:
        return;
    }

    public org.apache.cxf.service.model.BindingInfo getBinding()
    {
        org.apache.cxf.service.model.BindingOperationInfo r0;
        org.apache.cxf.service.model.BindingInfo $r1;

        r0 := @this: org.apache.cxf.service.model.BindingOperationInfo;

        $r1 = r0.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.BindingInfo bindingInfo>;

        return $r1;
    }

    public javax.xml.namespace.QName getName()
    {
        org.apache.cxf.service.model.OperationInfo $r1;
        org.apache.cxf.service.model.BindingOperationInfo r0;
        javax.xml.namespace.QName $r2;

        r0 := @this: org.apache.cxf.service.model.BindingOperationInfo;

        $r1 = r0.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.OperationInfo opInfo>;

        $r2 = virtualinvoke $r1.<org.apache.cxf.service.model.OperationInfo: javax.xml.namespace.QName getName()>();

        return $r2;
    }

    public org.apache.cxf.service.model.OperationInfo getOperationInfo()
    {
        org.apache.cxf.service.model.OperationInfo $r1;
        org.apache.cxf.service.model.BindingOperationInfo r0;

        r0 := @this: org.apache.cxf.service.model.BindingOperationInfo;

        $r1 = r0.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.OperationInfo opInfo>;

        return $r1;
    }

    public org.apache.cxf.service.model.BindingMessageInfo getInput()
    {
        org.apache.cxf.service.model.BindingOperationInfo r0;
        org.apache.cxf.service.model.BindingMessageInfo $r1;

        r0 := @this: org.apache.cxf.service.model.BindingOperationInfo;

        $r1 = r0.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.BindingMessageInfo inputMessage>;

        return $r1;
    }

    public org.apache.cxf.service.model.BindingMessageInfo getOutput()
    {
        org.apache.cxf.service.model.BindingOperationInfo r0;
        org.apache.cxf.service.model.BindingMessageInfo $r1;

        r0 := @this: org.apache.cxf.service.model.BindingOperationInfo;

        $r1 = r0.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.BindingMessageInfo outputMessage>;

        return $r1;
    }

    public org.apache.cxf.service.model.BindingFaultInfo getFault(javax.xml.namespace.QName)
    {
        java.util.Map $r1, $r3;
        org.apache.cxf.service.model.BindingFaultInfo $r5;
        org.apache.cxf.service.model.BindingOperationInfo r0;
        java.lang.Object $r4;
        javax.xml.namespace.QName r2;

        r0 := @this: org.apache.cxf.service.model.BindingOperationInfo;

        r2 := @parameter0: javax.xml.namespace.QName;

        $r1 = r0.<org.apache.cxf.service.model.BindingOperationInfo: java.util.Map faults>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.cxf.service.model.BindingOperationInfo: java.util.Map faults>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        $r5 = (org.apache.cxf.service.model.BindingFaultInfo) $r4;

        return $r5;

     label1:
        return null;
    }

    public java.util.Collection getFaults()
    {
        java.util.List $r5;
        java.util.Map $r1, $r2;
        java.util.Collection $r3, $r4;
        org.apache.cxf.service.model.BindingOperationInfo r0;

        r0 := @this: org.apache.cxf.service.model.BindingOperationInfo;

        $r1 = r0.<org.apache.cxf.service.model.BindingOperationInfo: java.util.Map faults>;

        if $r1 != null goto label1;

        $r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r5;

     label1:
        $r2 = r0.<org.apache.cxf.service.model.BindingOperationInfo: java.util.Map faults>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>();

        $r4 = staticinvoke <java.util.Collections: java.util.Collection unmodifiableCollection(java.util.Collection)>($r3);

        return $r4;
    }

    public boolean isUnwrappedCapable()
    {
        org.apache.cxf.service.model.OperationInfo $r1;
        org.apache.cxf.service.model.BindingOperationInfo r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.service.model.BindingOperationInfo;

        $r1 = r0.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.OperationInfo opInfo>;

        $z0 = virtualinvoke $r1.<org.apache.cxf.service.model.OperationInfo: boolean isUnwrappedCapable()>();

        return $z0;
    }

    public org.apache.cxf.service.model.BindingOperationInfo getUnwrappedOperation()
    {
        org.apache.cxf.service.model.BindingOperationInfo r0, $r1;

        r0 := @this: org.apache.cxf.service.model.BindingOperationInfo;

        $r1 = r0.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.BindingOperationInfo opHolder>;

        return $r1;
    }

    public void setUnwrappedOperation(org.apache.cxf.service.model.BindingOperationInfo)
    {
        org.apache.cxf.service.model.BindingOperationInfo r0, r1;

        r0 := @this: org.apache.cxf.service.model.BindingOperationInfo;

        r1 := @parameter0: org.apache.cxf.service.model.BindingOperationInfo;

        r0.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.BindingOperationInfo opHolder> = r1;

        return;
    }

    public boolean isUnwrapped()
    {
        org.apache.cxf.service.model.OperationInfo $r1;
        org.apache.cxf.service.model.BindingOperationInfo r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.service.model.BindingOperationInfo;

        $r1 = r0.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.OperationInfo opInfo>;

        $z0 = virtualinvoke $r1.<org.apache.cxf.service.model.OperationInfo: boolean isUnwrapped()>();

        return $z0;
    }

    public org.apache.cxf.service.model.BindingOperationInfo getWrappedOperation()
    {
        org.apache.cxf.service.model.BindingOperationInfo r0, $r1;

        r0 := @this: org.apache.cxf.service.model.BindingOperationInfo;

        $r1 = r0.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.BindingOperationInfo opHolder>;

        return $r1;
    }

    public java.lang.String toString()
    {
        org.apache.cxf.service.model.BindingOperationInfo r2;
        java.io.Serializable $r7;
        java.lang.StringBuilder $r0, $r1, $r4, $r5;
        javax.xml.namespace.QName $r3;
        java.lang.String $r6;

        r2 := @this: org.apache.cxf.service.model.BindingOperationInfo;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[BindingOperationInfo: ");

        $r3 = virtualinvoke r2.<org.apache.cxf.service.model.BindingOperationInfo: javax.xml.namespace.QName getName()>();

        if $r3 != null goto label1;

        $r7 = "";

        goto label2;

     label1:
        $r7 = virtualinvoke r2.<org.apache.cxf.service.model.BindingOperationInfo: javax.xml.namespace.QName getName()>();

     label2:
        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public int hashCode()
    {
        org.apache.cxf.service.model.OperationInfo $r1;
        int $i0;
        org.apache.cxf.service.model.BindingOperationInfo r0;

        r0 := @this: org.apache.cxf.service.model.BindingOperationInfo;

        $r1 = r0.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.OperationInfo opInfo>;

        $i0 = virtualinvoke $r1.<org.apache.cxf.service.model.OperationInfo: int hashCode()>();

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.cxf.service.model.OperationInfo $r3, $r4;
        org.apache.cxf.service.model.BindingOperationInfo r1, $r2;
        java.lang.Object r0;
        boolean $z0, $z1;

        r1 := @this: org.apache.cxf.service.model.BindingOperationInfo;

        r0 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r0 instanceof org.apache.cxf.service.model.BindingOperationInfo;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r4 = r1.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.OperationInfo opInfo>;

        $r2 = (org.apache.cxf.service.model.BindingOperationInfo) r0;

        $r3 = $r2.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.OperationInfo opInfo>;

        $z1 = staticinvoke <org.apache.cxf.service.model.BindingOperationInfo: boolean equals(java.lang.Object,java.lang.Object)>($r4, $r3);

        return $z1;
    }
}
