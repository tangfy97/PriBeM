public class com.jidesoft.plaf.basic.BasicJideTabbedPaneUI extends com.jidesoft.plaf.JideTabbedPaneUI implements javax.swing.SwingConstants, javax.swing.event.DocumentListener
{
    protected int _tabRectPadding;
    protected int _closeButtonMarginHorizon;
    protected int _closeButtonMarginVertical;
    protected int _textMarginVertical;
    protected int _noIconMargin;
    protected int _iconMargin;
    protected int _textPadding;
    protected int _buttonSize;
    protected int _buttonMargin;
    protected int _fitStyleBoundSize;
    protected int _fitStyleFirstTabMargin;
    protected int _fitStyleIconMinWidth;
    protected int _fitStyleTextMinWidth;
    protected int _compressedStyleNoIconRectSize;
    protected int _compressedStyleIconMargin;
    protected int _compressedStyleCloseButtonMarginHorizon;
    protected int _compressedStyleCloseButtonMarginVertical;
    protected int _fixedStyleRectSize;
    protected int _closeButtonMargin;
    protected int _gripLeftMargin;
    protected int _closeButtonMarginSize;
    protected int _closeButtonLeftMargin;
    protected int _closeButtonRightMargin;
    protected java.awt.Component _tabLeadingComponent;
    protected java.awt.Component _tabTrailingComponent;
    protected com.jidesoft.swing.JideTabbedPane _tabPane;
    protected java.awt.Font _selectedTabFont;
    protected java.awt.Color _tabBackground;
    protected java.awt.Color _background;
    protected java.awt.Color _highlight;
    protected java.awt.Color _lightHighlight;
    protected java.awt.Color _shadow;
    protected java.awt.Color _darkShadow;
    protected java.awt.Color _focus;
    protected java.awt.Color _inactiveTabForeground;
    protected java.awt.Color _inactiveSelectedTabForeground;
    protected java.awt.Color _activeTabForeground;
    protected java.awt.Color _tabListBackground;
    protected java.awt.Color _selectedColor;
    protected java.awt.Color _activeBackground;
    protected int _textIconGap;
    protected int _tabRunOverlay;
    protected boolean _showIconOnTab;
    protected boolean _showCloseButtonOnTab;
    protected int _closeButtonAlignment;
    protected java.awt.Insets _tabInsets;
    protected java.awt.Insets _selectedTabPadInsets;
    protected java.awt.Insets _tabAreaInsets;
    protected boolean _ignoreContentBorderInsetsIfNoTabs;
    protected int[] _tabRuns;
    protected int _runCount;
    protected int _selectedRun;
    protected java.awt.Rectangle[] _rects;
    protected int _additionalWidth;
    protected int _maxTabHeight;
    protected int _maxTabWidth;
    protected int _gripperWidth;
    protected int _gripperHeight;
    protected javax.swing.event.ChangeListener _tabChangeListener;
    protected java.awt.event.FocusListener _tabFocusListener;
    protected java.beans.PropertyChangeListener _propertyChangeListener;
    protected javax.swing.event.ChangeListener _tabModelChangeListener;
    protected java.awt.event.MouseListener _mouseListener;
    protected java.awt.event.MouseMotionListener _mousemotionListener;
    protected java.awt.event.MouseWheelListener _mouseWheelListener;
    private java.awt.event.ContainerListener _containerListener;
    private java.awt.event.ComponentListener _componentListener;
    private java.awt.Insets _currentTabInsets;
    private java.awt.Insets _currentPadInsets;
    private java.awt.Insets _currentTabAreaInsets;
    private java.awt.Insets _currentContentBorderInsets;
    private java.awt.Component visibleComponent;
    private java.util.Vector htmlViews;
    private java.util.Hashtable _mnemonicToIndexMap;
    private javax.swing.InputMap _mnemonicInputMap;
    public com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport _tabScroller;
    protected transient java.awt.Rectangle _calcRect;
    protected int _tabCount;
    protected javax.swing.JButton[] _closeButtons;
    private com.jidesoft.plaf.basic.ThemePainter _painter;
    private com.jidesoft.plaf.basic.Painter _gripperPainter;
    private java.awt.dnd.DropTargetListener _dropListener;
    private boolean _layouted;
    public java.awt.dnd.DropTarget _dt;
    public static final int DEFAULT_LEFT_MARGIN;
    public static final int OFFICE2003_LEFT_MARGIN;
    public static final int EXCEL_LEFT_MARGIN;
    protected int _rectSizeExtend;
    protected java.awt.Polygon tabRegion;
    protected java.awt.Color _selectColor1;
    protected java.awt.Color _selectColor2;
    protected java.awt.Color _selectColor3;
    protected java.awt.Color _unselectColor1;
    protected java.awt.Color _unselectColor2;
    protected java.awt.Color _unselectColor3;
    protected java.awt.Color _officeTabBorderColor;
    protected java.awt.Color _defaultTabBorderShadowColor;
    protected boolean _mouseEnter;
    protected int _indexMouseOver;
    protected boolean _alwaysShowLineBorder;
    protected boolean _showFocusIndicator;
    private com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabContainer _tabContainer;
    public static final java.lang.String BUTTON_NAME_CLOSE;
    public static final java.lang.String BUTTON_NAME_TAB_LIST;
    public static final java.lang.String BUTTON_NAME_SCROLL_BACKWARD;
    public static final java.lang.String BUTTON_NAME_SCROLL_FORWARD;
    private int[] xCropLen;
    private int[] yCropLen;
    private static final int CROP_SEGMENT;
    protected com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabSpaceAllocator tryTabSpacer;
    protected java.awt.Color _closeButtonSelectedColor;
    protected java.awt.Color _closeButtonColor;
    protected java.awt.Color _popupColor;
    protected com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor _tabEditor;
    protected boolean _isEditing;
    protected int _editingTab;
    protected java.lang.String _oldValue;
    protected java.lang.String _oldPrefix;
    protected java.lang.String _oldPostfix;
    protected java.awt.Component _originalFocusComponent;
    protected final boolean PAINT_TAB;
    protected final boolean PAINT_TAB_BORDER;
    protected final boolean PAINT_TAB_BACKGROUND;
    protected final boolean PAINT_TABAREA;
    protected final boolean PAINT_CONTENT_BORDER;
    protected final boolean PAINT_CONTENT_BORDER_EDGE;

    public void <init>()
    {
        java.awt.Color $r12, $r13, $r20;
        java.awt.Rectangle $r18;
        java.awt.Insets $r14, $r15, $r16, $r17;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabSpaceAllocator $r19;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        java.awt.Rectangle[] $r2;
        int[] $r1, $r8, $r9;
        int $i1, $i3;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        specialinvoke r0.<com.jidesoft.plaf.JideTabbedPaneUI: void <init>()>();

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean PAINT_CONTENT_BORDER_EDGE> = 1;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean PAINT_CONTENT_BORDER> = 1;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean PAINT_TABAREA> = 1;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean PAINT_TAB_BACKGROUND> = 1;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean PAINT_TAB_BORDER> = 1;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean PAINT_TAB> = 1;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Component _tabLeadingComponent> = null;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Component _tabTrailingComponent> = null;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _closeButtonAlignment> = 11;

        $r1 = newarray (int)[10];

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int[] _tabRuns> = $r1;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _runCount> = 0;

        $i1 = (int) -1;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _selectedRun> = $i1;

        $r2 = newarray (java.awt.Rectangle)[0];

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects> = $r2;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _additionalWidth> = 0;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _gripperWidth> = 6;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _gripperHeight> = 6;

        $r14 = new java.awt.Insets;

        specialinvoke $r14.<java.awt.Insets: void <init>(int,int,int,int)>(0, 0, 0, 0);

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Insets _currentTabInsets> = $r14;

        $r15 = new java.awt.Insets;

        specialinvoke $r15.<java.awt.Insets: void <init>(int,int,int,int)>(0, 0, 0, 0);

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Insets _currentPadInsets> = $r15;

        $r16 = new java.awt.Insets;

        specialinvoke $r16.<java.awt.Insets: void <init>(int,int,int,int)>(2, 4, 0, 4);

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Insets _currentTabAreaInsets> = $r16;

        $r17 = new java.awt.Insets;

        specialinvoke $r17.<java.awt.Insets: void <init>(int,int,int,int)>(3, 0, 0, 0);

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Insets _currentContentBorderInsets> = $r17;

        $r18 = new java.awt.Rectangle;

        specialinvoke $r18.<java.awt.Rectangle: void <init>(int,int,int,int)>(0, 0, 0, 0);

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle _calcRect> = $r18;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _rectSizeExtend> = 0;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Polygon tabRegion> = null;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor1> = null;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor2> = null;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor3> = null;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1> = null;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2> = null;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor3> = null;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean _mouseEnter> = 0;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean _alwaysShowLineBorder> = 0;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean _showFocusIndicator> = 0;

        $r8 = newarray (int)[8];

        $r8[0] = 1;

        $r8[1] = 1;

        $r8[2] = 0;

        $r8[3] = 0;

        $r8[4] = 1;

        $r8[5] = 1;

        $r8[6] = 2;

        $r8[7] = 2;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int[] xCropLen> = $r8;

        $r9 = newarray (int)[8];

        $r9[0] = 0;

        $r9[1] = 3;

        $r9[2] = 3;

        $r9[3] = 6;

        $r9[4] = 6;

        $r9[5] = 9;

        $r9[6] = 9;

        $r9[7] = 12;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int[] yCropLen> = $r9;

        $r19 = new com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabSpaceAllocator;

        specialinvoke $r19.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabSpaceAllocator: void <init>()>();

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabSpaceAllocator tryTabSpacer> = $r19;

        $r20 = new java.awt.Color;

        specialinvoke $r20.<java.awt.Color: void <init>(int,int,int)>(255, 162, 165);

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _closeButtonSelectedColor> = $r20;

        $r12 = <java.awt.Color: java.awt.Color BLACK>;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _closeButtonColor> = $r12;

        $r13 = <java.awt.Color: java.awt.Color BLACK>;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _popupColor> = $r13;

        $i3 = (int) -1;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _editingTab> = $i3;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean PAINT_TAB> = 1;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean PAINT_TAB_BORDER> = 1;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean PAINT_TAB_BACKGROUND> = 1;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean PAINT_TABAREA> = 1;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean PAINT_CONTENT_BORDER> = 1;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean PAINT_CONTENT_BORDER_EDGE> = 1;

        return;
    }

    public static javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI $r0;
        javax.swing.JComponent r1;

        r1 := @parameter0: javax.swing.JComponent;

        $r0 = new com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        specialinvoke $r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void <init>()>();

        return $r0;
    }

    public void installUI(javax.swing.JComponent)
    {
        com.jidesoft.swing.JideTabbedPane $r2, $r3, $r4, $r6, $r8, $r10, $r12;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r1;
        int $i1;
        java.awt.LayoutManager $r13;
        boolean $z0, $z1;
        javax.swing.JComponent r0;
        java.awt.Component $r5, $r7, $r9, $r11;

        r1 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        r0 := @parameter0: javax.swing.JComponent;

        if r0 != null goto label1;

        return;

     label1:
        $r2 = (com.jidesoft.swing.JideTabbedPane) r0;

        r1.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane> = $r2;

        $r3 = r1.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z0 = virtualinvoke $r3.<com.jidesoft.swing.JideTabbedPane: boolean isTabShown()>();

        if $z0 == 0 goto label2;

        $r8 = r1.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r9 = virtualinvoke $r8.<com.jidesoft.swing.JideTabbedPane: java.awt.Component getTabLeadingComponent()>();

        if $r9 == null goto label2;

        $r10 = r1.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r11 = virtualinvoke $r10.<com.jidesoft.swing.JideTabbedPane: java.awt.Component getTabLeadingComponent()>();

        r1.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Component _tabLeadingComponent> = $r11;

     label2:
        $r12 = r1.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z1 = virtualinvoke $r12.<com.jidesoft.swing.JideTabbedPane: boolean isTabShown()>();

        if $z1 == 0 goto label3;

        $r4 = r1.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r5 = virtualinvoke $r4.<com.jidesoft.swing.JideTabbedPane: java.awt.Component getTabTrailingComponent()>();

        if $r5 == null goto label3;

        $r6 = r1.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r7 = virtualinvoke $r6.<com.jidesoft.swing.JideTabbedPane: java.awt.Component getTabTrailingComponent()>();

        r1.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Component _tabTrailingComponent> = $r7;

     label3:
        $i1 = (int) -1;

        specialinvoke r1.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void setMouseOverTabIndex(int)>($i1);

        $r13 = virtualinvoke r1.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.LayoutManager createLayoutManager()>();

        virtualinvoke r0.<javax.swing.JComponent: void setLayout(java.awt.LayoutManager)>($r13);

        virtualinvoke r1.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void installComponents()>();

        virtualinvoke r1.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void installDefaults()>();

        virtualinvoke r1.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void installColorTheme()>();

        virtualinvoke r1.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void installListeners()>();

        virtualinvoke r1.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void installKeyboardActions()>();

        return;
    }

    public void installColorTheme()
    {
        java.awt.Color $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32;
        com.jidesoft.plaf.basic.ThemePainter $r18;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        int $i0;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        $i0 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getTabShape()>();

        tableswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label7;
            case 4: goto label8;
            case 5: goto label5;
            case 6: goto label8;
            case 7: goto label8;
            case 8: goto label1;
            case 9: goto label4;
            case 10: goto label6;
            case 11: goto label2;
            default: goto label8;
        };

     label1:
        $r8 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _darkShadow>;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor1> = $r8;

        $r9 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _lightHighlight>;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor2> = $r9;

        $r10 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _shadow>;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor3> = $r10;

        $r11 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _darkShadow>;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1> = $r11;

        $r12 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _lightHighlight>;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2> = $r12;

        $r13 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _shadow>;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor3> = $r13;

        goto label9;

     label2:
        $r24 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _lightHighlight>;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor1> = $r24;

        $r25 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _shadow>;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor2> = $r25;

        $r26 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _defaultTabBorderShadowColor>;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor3> = $r26;

        $r27 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor1>;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1> = $r27;

        $r28 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor2>;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2> = $r28;

        $r29 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor3>;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor3> = $r29;

        goto label9;

     label3:
        $r21 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _shadow>;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor1> = $r21;

        $r22 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _shadow>;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor2> = $r22;

        $r23 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor1>;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1> = $r23;

        goto label9;

     label4:
        $r5 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _shadow>;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor1> = $r5;

        $r6 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor1>;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor2> = $r6;

        $r7 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor1>;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1> = $r7;

        goto label9;

     label5:
        $r14 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _shadow>;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor1> = $r14;

        $r15 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor1>;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1> = $r15;

        goto label9;

     label6:
        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _shadow>;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor1> = $r1;

        $r2 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _shadow>;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor2> = $r2;

        $r3 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor1>;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1> = $r3;

        $r4 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor2>;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2> = $r4;

        goto label9;

     label7:
        $r16 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _shadow>;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor1> = $r16;

        $r17 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _lightHighlight>;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor2> = $r17;

        $r18 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.ThemePainter getPainter()>();

        $r19 = interfaceinvoke $r18.<com.jidesoft.plaf.basic.ThemePainter: java.awt.Color getControlShadow()>();

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1> = $r19;

        $r20 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _lightHighlight>;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2> = $r20;

        goto label9;

     label8:
        $r30 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _shadow>;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor1> = $r30;

        $r31 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _lightHighlight>;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor2> = $r31;

        $r32 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _shadow>;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1> = $r32;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2> = null;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor3> = null;

     label9:
        return;
    }

    public void uninstallUI(javax.swing.JComponent)
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        javax.swing.JComponent r1;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        r1 := @parameter0: javax.swing.JComponent;

        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void uninstallKeyboardActions()>();

        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void uninstallListeners()>();

        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void uninstallColorTheme()>();

        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void uninstallDefaults()>();

        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void uninstallComponents()>();

        virtualinvoke r1.<javax.swing.JComponent: void setLayout(java.awt.LayoutManager)>(null);

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Component _tabTrailingComponent> = null;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Component _tabLeadingComponent> = null;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane> = null;

        return;
    }

    public void uninstallColorTheme()
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor1> = null;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor2> = null;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor3> = null;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1> = null;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2> = null;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor3> = null;

        return;
    }

    protected java.awt.LayoutManager createLayoutManager()
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        com.jidesoft.swing.JideTabbedPane $r1;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabbedPaneScrollLayout $r3;
        int $i0;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabbedPaneLayout $r2;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i0 = virtualinvoke $r1.<com.jidesoft.swing.JideTabbedPane: int getTabLayoutPolicy()>();

        if $i0 != 1 goto label1;

        $r3 = new com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabbedPaneScrollLayout;

        specialinvoke $r3.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabbedPaneScrollLayout: void <init>(com.jidesoft.plaf.basic.BasicJideTabbedPaneUI)>(r0);

        return $r3;

     label1:
        $r2 = new com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabbedPaneLayout;

        specialinvoke $r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabbedPaneLayout: void <init>(com.jidesoft.plaf.basic.BasicJideTabbedPaneUI)>(r0);

        return $r2;
    }

    protected boolean scrollableTabLayoutEnabled()
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        com.jidesoft.swing.JideTabbedPane $r1;
        java.awt.LayoutManager $r2;
        boolean $z0;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r2 = virtualinvoke $r1.<com.jidesoft.swing.JideTabbedPane: java.awt.LayoutManager getLayout()>();

        $z0 = $r2 instanceof com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabbedPaneScrollLayout;

        return $z0;
    }

    protected void installComponents()
    {
        com.jidesoft.swing.JideTabbedPane $r3, $r6, $r9, $r12, $r15, $r18, $r22, $r24;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        int $i0;
        boolean $z0;
        javax.swing.JButton $r8, $r11, $r14, $r17;
        java.awt.Component $r19, $r20, $r21, $r23;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport $r1, $r2, $r4, $r7, $r10, $r13, $r16;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabViewport $r5;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        $z0 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean scrollableTabLayoutEnabled()>();

        if $z0 == 0 goto label2;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport _tabScroller>;

        if $r1 != null goto label2;

        $r2 = new com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport;

        $r3 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i0 = virtualinvoke $r3.<com.jidesoft.swing.JideTabbedPane: int getTabPlacement()>();

        specialinvoke $r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport: void <init>(com.jidesoft.plaf.basic.BasicJideTabbedPaneUI,int)>(r0, $i0);

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport _tabScroller> = $r2;

        $r6 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r4 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport _tabScroller>;

        $r5 = $r4.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabViewport viewport>;

        virtualinvoke $r6.<com.jidesoft.swing.JideTabbedPane: java.awt.Component add(java.awt.Component)>($r5);

        $r9 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r7 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport _tabScroller>;

        $r8 = $r7.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport: javax.swing.JButton scrollForwardButton>;

        virtualinvoke $r9.<com.jidesoft.swing.JideTabbedPane: java.awt.Component add(java.awt.Component)>($r8);

        $r12 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r10 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport _tabScroller>;

        $r11 = $r10.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport: javax.swing.JButton scrollBackwardButton>;

        virtualinvoke $r12.<com.jidesoft.swing.JideTabbedPane: java.awt.Component add(java.awt.Component)>($r11);

        $r15 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r13 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport _tabScroller>;

        $r14 = $r13.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport: javax.swing.JButton listButton>;

        virtualinvoke $r15.<com.jidesoft.swing.JideTabbedPane: java.awt.Component add(java.awt.Component)>($r14);

        $r18 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r16 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport _tabScroller>;

        $r17 = $r16.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport: javax.swing.JButton closeButton>;

        virtualinvoke $r18.<com.jidesoft.swing.JideTabbedPane: java.awt.Component add(java.awt.Component)>($r17);

        $r19 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Component _tabLeadingComponent>;

        if $r19 == null goto label1;

        $r24 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r23 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Component _tabLeadingComponent>;

        virtualinvoke $r24.<com.jidesoft.swing.JideTabbedPane: java.awt.Component add(java.awt.Component)>($r23);

     label1:
        $r20 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Component _tabTrailingComponent>;

        if $r20 == null goto label2;

        $r22 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r21 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Component _tabTrailingComponent>;

        virtualinvoke $r22.<com.jidesoft.swing.JideTabbedPane: java.awt.Component add(java.awt.Component)>($r21);

     label2:
        specialinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void installTabContainer()>();

        return;
    }

    private void installTabContainer()
    {
        com.jidesoft.swing.JideTabbedPane $r1, $r4, $r12;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        int $i0, i1;
        boolean $z0, $z1;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabPanel $r7;
        java.awt.Component r8, $r13;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport $r5;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabContainer $r2, $r3, $r6, $r9, $r10, $r11;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        i1 = 0;

     label1:
        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i0 = virtualinvoke $r1.<com.jidesoft.swing.JideTabbedPane: int getTabCount()>();

        if i1 >= $i0 goto label6;

        $z1 = staticinvoke <com.jidesoft.utils.SystemInfo: boolean isJdk6Above()>();

        if $z1 == 0 goto label2;

        $r12 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r13 = virtualinvoke $r12.<com.jidesoft.swing.JideTabbedPane: java.awt.Component getTabComponentAt(int)>(i1);

        goto label3;

     label2:
        $r13 = null;

     label3:
        r8 = $r13;

        if $r13 == null goto label5;

        $r9 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabContainer _tabContainer>;

        if $r9 != null goto label4;

        $r11 = new com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabContainer;

        specialinvoke $r11.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabContainer: void <init>(com.jidesoft.plaf.basic.BasicJideTabbedPaneUI)>(r0);

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabContainer _tabContainer> = $r11;

     label4:
        $r10 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabContainer _tabContainer>;

        virtualinvoke $r10.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabContainer: java.awt.Component add(java.awt.Component)>(r8);

     label5:
        i1 = i1 + 1;

        goto label1;

     label6:
        $r2 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabContainer _tabContainer>;

        if $r2 != null goto label7;

        return;

     label7:
        $z0 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean scrollableTabLayoutEnabled()>();

        if $z0 == 0 goto label8;

        $r5 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport _tabScroller>;

        $r7 = $r5.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabPanel tabPanel>;

        $r6 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabContainer _tabContainer>;

        virtualinvoke $r7.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabPanel: java.awt.Component add(java.awt.Component)>($r6);

        goto label9;

     label8:
        $r4 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r3 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabContainer _tabContainer>;

        virtualinvoke $r4.<com.jidesoft.swing.JideTabbedPane: java.awt.Component add(java.awt.Component)>($r3);

     label9:
        return;
    }

    protected void uninstallComponents()
    {
        com.jidesoft.swing.JideTabbedPane $r3, $r6, $r9, $r12, $r15, $r19, $r21;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        boolean $z0;
        javax.swing.JButton $r5, $r8, $r11, $r14;
        java.awt.Component $r16, $r17, $r18, $r20;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport $r1, $r4, $r7, $r10, $r13;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabViewport $r2;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        specialinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void uninstallTabContainer()>();

        $z0 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean scrollableTabLayoutEnabled()>();

        if $z0 == 0 goto label3;

        $r3 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport _tabScroller>;

        $r2 = $r1.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabViewport viewport>;

        virtualinvoke $r3.<com.jidesoft.swing.JideTabbedPane: void remove(java.awt.Component)>($r2);

        $r6 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r4 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport _tabScroller>;

        $r5 = $r4.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport: javax.swing.JButton scrollForwardButton>;

        virtualinvoke $r6.<com.jidesoft.swing.JideTabbedPane: void remove(java.awt.Component)>($r5);

        $r9 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r7 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport _tabScroller>;

        $r8 = $r7.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport: javax.swing.JButton scrollBackwardButton>;

        virtualinvoke $r9.<com.jidesoft.swing.JideTabbedPane: void remove(java.awt.Component)>($r8);

        $r12 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r10 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport _tabScroller>;

        $r11 = $r10.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport: javax.swing.JButton listButton>;

        virtualinvoke $r12.<com.jidesoft.swing.JideTabbedPane: void remove(java.awt.Component)>($r11);

        $r15 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r13 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport _tabScroller>;

        $r14 = $r13.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport: javax.swing.JButton closeButton>;

        virtualinvoke $r15.<com.jidesoft.swing.JideTabbedPane: void remove(java.awt.Component)>($r14);

        $r16 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Component _tabLeadingComponent>;

        if $r16 == null goto label1;

        $r21 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r20 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Component _tabLeadingComponent>;

        virtualinvoke $r21.<com.jidesoft.swing.JideTabbedPane: void remove(java.awt.Component)>($r20);

     label1:
        $r17 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Component _tabTrailingComponent>;

        if $r17 == null goto label2;

        $r19 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r18 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Component _tabTrailingComponent>;

        virtualinvoke $r19.<com.jidesoft.swing.JideTabbedPane: void remove(java.awt.Component)>($r18);

     label2:
        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport _tabScroller> = null;

     label3:
        return;
    }

    private void uninstallTabContainer()
    {
        com.jidesoft.swing.JideTabbedPane $r5;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabPanel $r8;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport $r6;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabContainer $r1, $r2, $r3, $r4, $r7;
        boolean $z0;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabContainer _tabContainer>;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabContainer _tabContainer>;

        staticinvoke <com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabContainer: boolean access$002(com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabContainer,boolean)>($r2, 0);

        $r3 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabContainer _tabContainer>;

        virtualinvoke $r3.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabContainer: void removeAll()>();

        $z0 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean scrollableTabLayoutEnabled()>();

        if $z0 == 0 goto label2;

        $r6 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport _tabScroller>;

        $r8 = $r6.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabPanel tabPanel>;

        $r7 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabContainer _tabContainer>;

        virtualinvoke $r8.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabPanel: void remove(java.awt.Component)>($r7);

        goto label3;

     label2:
        $r5 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r4 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabContainer _tabContainer>;

        virtualinvoke $r5.<com.jidesoft.swing.JideTabbedPane: void remove(java.awt.Component)>($r4);

     label3:
        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabContainer _tabContainer> = null;

        return;
    }

    protected void installDefaults()
    {
        java.awt.Color $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r49;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        com.jidesoft.plaf.basic.Painter $r4;
        com.jidesoft.swing.JideTabbedPane $r5, $r6, $r23, $r25, $r27, $r29, $r43, $r47;
        com.jidesoft.plaf.basic.ThemePainter $r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.awt.Font $r7;
        javax.swing.plaf.InsetsUIResource $r31;
        java.awt.Insets $r24, $r26, $r28, $r30, $r44, $r45, $r46, $r48;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27;
        java.lang.Object $r1, $r3;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        $r1 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("Theme.painter");

        $r2 = (com.jidesoft.plaf.basic.ThemePainter) $r1;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.ThemePainter _painter> = $r2;

        $r3 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("JideTabbedPane.gripperPainter");

        $r4 = (com.jidesoft.plaf.basic.Painter) $r3;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.Painter _gripperPainter> = $r4;

        $r5 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        staticinvoke <javax.swing.LookAndFeel: void installColorsAndFont(javax.swing.JComponent,java.lang.String,java.lang.String,java.lang.String)>($r5, "JideTabbedPane.background", "JideTabbedPane.foreground", "JideTabbedPane.font");

        $r6 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        staticinvoke <javax.swing.LookAndFeel: void installBorder(javax.swing.JComponent,java.lang.String)>($r6, "JideTabbedPane.border");

        $r7 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Font getFont(java.lang.Object)>("JideTabbedPane.selectedTabFont");

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Font _selectedTabFont> = $r7;

        $r8 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("JideTabbedPane.light");

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _highlight> = $r8;

        $r9 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("JideTabbedPane.highlight");

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _lightHighlight> = $r9;

        $r10 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("JideTabbedPane.shadow");

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _shadow> = $r10;

        $r11 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("JideTabbedPane.darkShadow");

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _darkShadow> = $r11;

        $r12 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("TabbedPane.focus");

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _focus> = $r12;

        $i0 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getTabShape()>();

        if $i0 != 3 goto label01;

        $r35 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("JideTabbedPane.selectedTabBackground");

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _background> = $r35;

        $r36 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("JideTabbedPane.selectedTabBackground");

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _tabBackground> = $r36;

        $r37 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("JideTabbedPane.foreground");

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _inactiveTabForeground> = $r37;

        $r38 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("JideTabbedPane.foreground");

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _inactiveSelectedTabForeground> = $r38;

        $r39 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("JideTabbedPane.foreground");

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _activeTabForeground> = $r39;

        $r40 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _lightHighlight>;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectedColor> = $r40;

        $r41 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _lightHighlight>;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _activeBackground> = $r41;

        goto label04;

     label01:
        $r13 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("JideTabbedPane.background");

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _background> = $r13;

        $r14 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("JideTabbedPane.tabAreaBackground");

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _tabBackground> = $r14;

        $r15 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("JideTabbedPane.unselectedTabTextForeground");

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _inactiveTabForeground> = $r15;

        $r16 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("JideTabbedPane.selectedTabTextForeground");

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _inactiveSelectedTabForeground> = $r16;

        $r17 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("JideTabbedPane.activeTabTextForeground");

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _activeTabForeground> = $r17;

        $r18 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _activeTabForeground>;

        if $r18 != null goto label02;

        $r34 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _inactiveSelectedTabForeground>;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _activeTabForeground> = $r34;

     label02:
        $r19 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("JideTabbedPane.selectedTabBackground");

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectedColor> = $r19;

        $r20 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("DockableFrame.activeTitleBackground");

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _activeBackground> = $r20;

        $r21 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _activeBackground>;

        if $r21 != null goto label03;

        $r33 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("JideTabbedPane.activeTabBackground");

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _activeBackground> = $r33;

     label03:
        $r22 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _activeBackground>;

        if $r22 != null goto label04;

        $r32 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectedColor>;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _activeBackground> = $r32;

     label04:
        $r42 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("JideTabbedPane.tabListBackground");

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _tabListBackground> = $r42;

        $i1 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: int getInt(java.lang.Object)>("JideTabbedPane.textIconGap");

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _textIconGap> = $i1;

        $r43 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r44 = virtualinvoke $r43.<com.jidesoft.swing.JideTabbedPane: java.awt.Insets getTabInsets()>();

        if $r44 == null goto label05;

        $z2 = $r44 instanceof javax.swing.plaf.UIResource;

        if $z2 == 0 goto label06;

     label05:
        $r23 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r24 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Insets getInsets(java.lang.Object)>("JideTabbedPane.tabInsets");

        virtualinvoke $r23.<com.jidesoft.swing.JideTabbedPane: void setTabInsets(java.awt.Insets)>($r24);

     label06:
        $r45 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Insets getInsets(java.lang.Object)>("TabbedPane.selectedTabPadInsets");

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Insets _selectedTabPadInsets> = $r45;

        $r46 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Insets _selectedTabPadInsets>;

        if $r46 != null goto label07;

        $r31 = new javax.swing.plaf.InsetsUIResource;

        specialinvoke $r31.<javax.swing.plaf.InsetsUIResource: void <init>(int,int,int,int)>(0, 0, 0, 0);

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Insets _selectedTabPadInsets> = $r31;

     label07:
        $r25 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r26 = virtualinvoke $r25.<com.jidesoft.swing.JideTabbedPane: java.awt.Insets getTabAreaInsets()>();

        if $r26 == null goto label08;

        $z1 = $r26 instanceof javax.swing.plaf.UIResource;

        if $z1 == 0 goto label09;

     label08:
        $r27 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r28 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Insets getInsets(java.lang.Object)>("JideTabbedPane.tabAreaInsets");

        virtualinvoke $r27.<com.jidesoft.swing.JideTabbedPane: void setTabAreaInsets(java.awt.Insets)>($r28);

     label09:
        $r47 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r48 = virtualinvoke $r47.<com.jidesoft.swing.JideTabbedPane: java.awt.Insets getContentBorderInsets()>();

        if $r48 == null goto label10;

        $z0 = $r48 instanceof javax.swing.plaf.UIResource;

        if $z0 == 0 goto label11;

     label10:
        $r29 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r30 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Insets getInsets(java.lang.Object)>("JideTabbedPane.contentBorderInsets");

        virtualinvoke $r29.<com.jidesoft.swing.JideTabbedPane: void setContentBorderInsets(java.awt.Insets)>($r30);

     label11:
        $z3 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: boolean getBoolean(java.lang.Object)>("JideTabbedPane.ignoreContentBorderInsetsIfNoTabs");

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean _ignoreContentBorderInsetsIfNoTabs> = $z3;

        $i2 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: int getInt(java.lang.Object)>("JideTabbedPane.tabRunOverlay");

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _tabRunOverlay> = $i2;

        $z4 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: boolean getBoolean(java.lang.Object)>("JideTabbedPane.showIconOnTab");

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean _showIconOnTab> = $z4;

        $z5 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: boolean getBoolean(java.lang.Object)>("JideTabbedPane.showCloseButtonOnTab");

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean _showCloseButtonOnTab> = $z5;

        $i3 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: int getInt(java.lang.Object)>("JideTabbedPane.closeButtonAlignment");

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _closeButtonAlignment> = $i3;

        $i4 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: int getInt(java.lang.Object)>("Gripper.size");

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _gripperWidth> = $i4;

        $i5 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: int getInt(java.lang.Object)>("JideTabbedPane.tabRectPadding");

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _tabRectPadding> = $i5;

        $i6 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: int getInt(java.lang.Object)>("JideTabbedPane.closeButtonMarginHorizonal");

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _closeButtonMarginHorizon> = $i6;

        $i7 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: int getInt(java.lang.Object)>("JideTabbedPane.closeButtonMarginVertical");

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _closeButtonMarginVertical> = $i7;

        $i8 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: int getInt(java.lang.Object)>("JideTabbedPane.textMarginVertical");

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _textMarginVertical> = $i8;

        $i9 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: int getInt(java.lang.Object)>("JideTabbedPane.noIconMargin");

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _noIconMargin> = $i9;

        $i10 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: int getInt(java.lang.Object)>("JideTabbedPane.iconMargin");

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _iconMargin> = $i10;

        $i11 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: int getInt(java.lang.Object)>("JideTabbedPane.textPadding");

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _textPadding> = $i11;

        $i12 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: int getInt(java.lang.Object)>("JideTabbedPane.buttonSize");

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _buttonSize> = $i12;

        $i13 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: int getInt(java.lang.Object)>("JideTabbedPane.buttonMargin");

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _buttonMargin> = $i13;

        $i14 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: int getInt(java.lang.Object)>("JideTabbedPane.fitStyleBoundSize");

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _fitStyleBoundSize> = $i14;

        $i15 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: int getInt(java.lang.Object)>("JideTabbedPane.fitStyleFirstTabMargin");

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _fitStyleFirstTabMargin> = $i15;

        $i16 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: int getInt(java.lang.Object)>("JideTabbedPane.fitStyleIconMinWidth");

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _fitStyleIconMinWidth> = $i16;

        $i17 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: int getInt(java.lang.Object)>("JideTabbedPane.fitStyleTextMinWidth");

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _fitStyleTextMinWidth> = $i17;

        $i18 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: int getInt(java.lang.Object)>("JideTabbedPane.compressedStyleNoIconRectSize");

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _compressedStyleNoIconRectSize> = $i18;

        $i19 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: int getInt(java.lang.Object)>("JideTabbedPane.compressedStyleIconMargin");

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _compressedStyleIconMargin> = $i19;

        $i20 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: int getInt(java.lang.Object)>("JideTabbedPane.compressedStyleCloseButtonMarginHorizontal");

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _compressedStyleCloseButtonMarginHorizon> = $i20;

        $i21 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: int getInt(java.lang.Object)>("JideTabbedPane.compressedStyleCloseButtonMarginVertical");

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _compressedStyleCloseButtonMarginVertical> = $i21;

        $i22 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: int getInt(java.lang.Object)>("JideTabbedPane.fixedStyleRectSize");

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _fixedStyleRectSize> = $i22;

        $i23 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: int getInt(java.lang.Object)>("JideTabbedPane.closeButtonMargin");

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _closeButtonMargin> = $i23;

        $i24 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: int getInt(java.lang.Object)>("JideTabbedPane.gripLeftMargin");

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _gripLeftMargin> = $i24;

        $i25 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: int getInt(java.lang.Object)>("JideTabbedPane.closeButtonMarginSize");

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _closeButtonMarginSize> = $i25;

        $i26 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: int getInt(java.lang.Object)>("JideTabbedPane.closeButtonLeftMargin");

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _closeButtonLeftMargin> = $i26;

        $i27 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: int getInt(java.lang.Object)>("JideTabbedPane.closeButtonRightMargin");

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _closeButtonRightMargin> = $i27;

        $r49 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("JideTabbedPane.defaultTabBorderShadowColor");

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _defaultTabBorderShadowColor> = $r49;

        $z6 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: boolean getBoolean(java.lang.Object)>("JideTabbedPane.alwaysShowLineBorder");

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean _alwaysShowLineBorder> = $z6;

        $z7 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: boolean getBoolean(java.lang.Object)>("JideTabbedPane.showFocusIndicator");

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean _showFocusIndicator> = $z7;

        return;
    }

    protected void uninstallDefaults()
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.ThemePainter _painter> = null;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.Painter _gripperPainter> = null;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _highlight> = null;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _lightHighlight> = null;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _shadow> = null;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _darkShadow> = null;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _focus> = null;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _inactiveTabForeground> = null;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectedColor> = null;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Insets _tabInsets> = null;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Insets _selectedTabPadInsets> = null;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Insets _tabAreaInsets> = null;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _defaultTabBorderShadowColor> = null;

        return;
    }

    protected void installListeners()
    {
        com.jidesoft.swing.JideTabbedPane $r9, $r17, $r20, $r21, $r25, $r28, $r31, $r34, $r37, $r40, $r42;
        java.awt.dnd.DropTarget $r12;
        java.awt.event.FocusListener $r4, $r32, $r33;
        java.util.Vector $r22;
        java.awt.event.ComponentListener $r16, $r45;
        javax.swing.event.ChangeListener $r1, $r3, $r35, $r36, $r44;
        java.awt.event.MouseListener $r5, $r29, $r30;
        boolean $z0;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ComponentHandler $r15;
        javax.swing.SingleSelectionModel $r43;
        java.awt.Component $r13;
        java.beans.PropertyChangeListener $r2, $r38, $r39;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$DropListener $r11;
        java.awt.dnd.DropTargetListener $r10, $r14;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$1 $r41;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ContainerHandler $r18;
        int $i0;
        java.awt.event.ContainerListener $r8, $r19;
        java.awt.event.MouseMotionListener $r6, $r26, $r27;
        java.awt.event.MouseWheelListener $r7, $r23, $r24;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.event.ChangeListener _tabModelChangeListener>;

        if $r1 != null goto label01;

        $r41 = new com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$1;

        specialinvoke $r41.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$1: void <init>(com.jidesoft.plaf.basic.BasicJideTabbedPaneUI)>(r0);

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.event.ChangeListener _tabModelChangeListener> = $r41;

        $r42 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r43 = virtualinvoke $r42.<com.jidesoft.swing.JideTabbedPane: javax.swing.SingleSelectionModel getModel()>();

        $r44 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.event.ChangeListener _tabModelChangeListener>;

        interfaceinvoke $r43.<javax.swing.SingleSelectionModel: void addChangeListener(javax.swing.event.ChangeListener)>($r44);

     label01:
        $r2 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.beans.PropertyChangeListener _propertyChangeListener>;

        if $r2 != null goto label02;

        $r38 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.beans.PropertyChangeListener createPropertyChangeListener()>();

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.beans.PropertyChangeListener _propertyChangeListener> = $r38;

        $r40 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r39 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.beans.PropertyChangeListener _propertyChangeListener>;

        virtualinvoke $r40.<com.jidesoft.swing.JideTabbedPane: void addPropertyChangeListener(java.beans.PropertyChangeListener)>($r39);

     label02:
        $r3 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.event.ChangeListener _tabChangeListener>;

        if $r3 != null goto label03;

        $r35 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.event.ChangeListener createChangeListener()>();

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.event.ChangeListener _tabChangeListener> = $r35;

        $r37 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r36 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.event.ChangeListener _tabChangeListener>;

        virtualinvoke $r37.<com.jidesoft.swing.JideTabbedPane: void addChangeListener(javax.swing.event.ChangeListener)>($r36);

     label03:
        $r4 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.event.FocusListener _tabFocusListener>;

        if $r4 != null goto label04;

        $r32 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.event.FocusListener createFocusListener()>();

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.event.FocusListener _tabFocusListener> = $r32;

        $r34 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r33 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.event.FocusListener _tabFocusListener>;

        virtualinvoke $r34.<com.jidesoft.swing.JideTabbedPane: void addFocusListener(java.awt.event.FocusListener)>($r33);

     label04:
        $r5 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.event.MouseListener _mouseListener>;

        if $r5 != null goto label05;

        $r29 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.event.MouseListener createMouseListener()>();

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.event.MouseListener _mouseListener> = $r29;

        $r31 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r30 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.event.MouseListener _mouseListener>;

        virtualinvoke $r31.<com.jidesoft.swing.JideTabbedPane: void addMouseListener(java.awt.event.MouseListener)>($r30);

     label05:
        $r6 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.event.MouseMotionListener _mousemotionListener>;

        if $r6 != null goto label06;

        $r26 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.event.MouseMotionListener createMouseMotionListener()>();

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.event.MouseMotionListener _mousemotionListener> = $r26;

        $r28 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r27 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.event.MouseMotionListener _mousemotionListener>;

        virtualinvoke $r28.<com.jidesoft.swing.JideTabbedPane: void addMouseMotionListener(java.awt.event.MouseMotionListener)>($r27);

     label06:
        $r7 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.event.MouseWheelListener _mouseWheelListener>;

        if $r7 != null goto label07;

        $r23 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.event.MouseWheelListener createMouseWheelListener()>();

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.event.MouseWheelListener _mouseWheelListener> = $r23;

        $r25 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r24 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.event.MouseWheelListener _mouseWheelListener>;

        virtualinvoke $r25.<com.jidesoft.swing.JideTabbedPane: void addMouseWheelListener(java.awt.event.MouseWheelListener)>($r24);

     label07:
        $r8 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.event.ContainerListener _containerListener>;

        if $r8 != null goto label08;

        $r18 = new com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ContainerHandler;

        specialinvoke $r18.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ContainerHandler: void <init>(com.jidesoft.plaf.basic.BasicJideTabbedPaneUI,com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$1)>(r0, null);

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.event.ContainerListener _containerListener> = $r18;

        $r20 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r19 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.event.ContainerListener _containerListener>;

        virtualinvoke $r20.<com.jidesoft.swing.JideTabbedPane: void addContainerListener(java.awt.event.ContainerListener)>($r19);

        $r21 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i0 = virtualinvoke $r21.<com.jidesoft.swing.JideTabbedPane: int getTabCount()>();

        if $i0 <= 0 goto label08;

        $r22 = specialinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.util.Vector createHTMLVector()>();

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.util.Vector htmlViews> = $r22;

     label08:
        $r45 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.event.ComponentListener _componentListener>;

        if $r45 != null goto label09;

        $r15 = new com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ComponentHandler;

        specialinvoke $r15.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ComponentHandler: void <init>(com.jidesoft.plaf.basic.BasicJideTabbedPaneUI,com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$1)>(r0, null);

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.event.ComponentListener _componentListener> = $r15;

        $r17 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r16 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.event.ComponentListener _componentListener>;

        virtualinvoke $r17.<com.jidesoft.swing.JideTabbedPane: void addComponentListener(java.awt.event.ComponentListener)>($r16);

     label09:
        $r9 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z0 = virtualinvoke $r9.<com.jidesoft.swing.JideTabbedPane: boolean isDragOverDisabled()>();

        if $z0 != 0 goto label10;

        $r10 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.dnd.DropTargetListener _dropListener>;

        if $r10 != null goto label10;

        $r11 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$DropListener createDropListener()>();

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.dnd.DropTargetListener _dropListener> = $r11;

        $r12 = new java.awt.dnd.DropTarget;

        $r13 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Component getTabPanel()>();

        $r14 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.dnd.DropTargetListener _dropListener>;

        specialinvoke $r12.<java.awt.dnd.DropTarget: void <init>(java.awt.Component,java.awt.dnd.DropTargetListener)>($r13, $r14);

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.dnd.DropTarget _dt> = $r12;

     label10:
        return;
    }

    protected com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$DropListener createDropListener()
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r1;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$DropListener $r0;

        r1 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        $r0 = new com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$DropListener;

        specialinvoke $r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$DropListener: void <init>(com.jidesoft.plaf.basic.BasicJideTabbedPaneUI)>(r1);

        return $r0;
    }

    protected void uninstallListeners()
    {
        java.awt.dnd.DropTarget $r9, $r12;
        com.jidesoft.swing.JideTabbedPane $r15, $r17, $r19, $r21, $r23, $r25, $r27, $r29, $r32;
        java.awt.event.FocusListener $r4, $r22;
        java.util.Vector $r30, $r31;
        java.awt.event.ComponentListener $r26, $r35;
        javax.swing.event.ChangeListener $r1, $r3, $r24, $r34;
        java.awt.event.MouseListener $r5, $r20;
        javax.swing.SingleSelectionModel $r33;
        java.awt.Component $r13;
        java.beans.PropertyChangeListener $r8, $r14;
        java.awt.dnd.DropTargetListener $r10, $r11;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        java.awt.event.ContainerListener $r2, $r28;
        java.awt.event.MouseMotionListener $r6, $r18;
        java.awt.event.MouseWheelListener $r7, $r16;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.event.ChangeListener _tabModelChangeListener>;

        if $r1 == null goto label01;

        $r32 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r33 = virtualinvoke $r32.<com.jidesoft.swing.JideTabbedPane: javax.swing.SingleSelectionModel getModel()>();

        $r34 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.event.ChangeListener _tabModelChangeListener>;

        interfaceinvoke $r33.<javax.swing.SingleSelectionModel: void removeChangeListener(javax.swing.event.ChangeListener)>($r34);

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.event.ChangeListener _tabModelChangeListener> = null;

     label01:
        $r2 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.event.ContainerListener _containerListener>;

        if $r2 == null goto label02;

        $r29 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r28 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.event.ContainerListener _containerListener>;

        virtualinvoke $r29.<com.jidesoft.swing.JideTabbedPane: void removeContainerListener(java.awt.event.ContainerListener)>($r28);

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.event.ContainerListener _containerListener> = null;

        $r30 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.util.Vector htmlViews>;

        if $r30 == null goto label02;

        $r31 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.util.Vector htmlViews>;

        virtualinvoke $r31.<java.util.Vector: void removeAllElements()>();

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.util.Vector htmlViews> = null;

     label02:
        $r35 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.event.ComponentListener _componentListener>;

        if $r35 == null goto label03;

        $r27 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r26 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.event.ComponentListener _componentListener>;

        virtualinvoke $r27.<com.jidesoft.swing.JideTabbedPane: void removeComponentListener(java.awt.event.ComponentListener)>($r26);

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.event.ComponentListener _componentListener> = null;

     label03:
        $r3 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.event.ChangeListener _tabChangeListener>;

        if $r3 == null goto label04;

        $r25 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r24 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.event.ChangeListener _tabChangeListener>;

        virtualinvoke $r25.<com.jidesoft.swing.JideTabbedPane: void removeChangeListener(javax.swing.event.ChangeListener)>($r24);

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.event.ChangeListener _tabChangeListener> = null;

     label04:
        $r4 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.event.FocusListener _tabFocusListener>;

        if $r4 == null goto label05;

        $r23 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r22 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.event.FocusListener _tabFocusListener>;

        virtualinvoke $r23.<com.jidesoft.swing.JideTabbedPane: void removeFocusListener(java.awt.event.FocusListener)>($r22);

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.event.FocusListener _tabFocusListener> = null;

     label05:
        $r5 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.event.MouseListener _mouseListener>;

        if $r5 == null goto label06;

        $r21 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r20 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.event.MouseListener _mouseListener>;

        virtualinvoke $r21.<com.jidesoft.swing.JideTabbedPane: void removeMouseListener(java.awt.event.MouseListener)>($r20);

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.event.MouseListener _mouseListener> = null;

     label06:
        $r6 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.event.MouseMotionListener _mousemotionListener>;

        if $r6 == null goto label07;

        $r19 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r18 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.event.MouseMotionListener _mousemotionListener>;

        virtualinvoke $r19.<com.jidesoft.swing.JideTabbedPane: void removeMouseMotionListener(java.awt.event.MouseMotionListener)>($r18);

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.event.MouseMotionListener _mousemotionListener> = null;

     label07:
        $r7 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.event.MouseWheelListener _mouseWheelListener>;

        if $r7 == null goto label08;

        $r17 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r16 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.event.MouseWheelListener _mouseWheelListener>;

        virtualinvoke $r17.<com.jidesoft.swing.JideTabbedPane: void removeMouseWheelListener(java.awt.event.MouseWheelListener)>($r16);

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.event.MouseWheelListener _mouseWheelListener> = null;

     label08:
        $r8 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.beans.PropertyChangeListener _propertyChangeListener>;

        if $r8 == null goto label09;

        $r15 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r14 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.beans.PropertyChangeListener _propertyChangeListener>;

        virtualinvoke $r15.<com.jidesoft.swing.JideTabbedPane: void removePropertyChangeListener(java.beans.PropertyChangeListener)>($r14);

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.beans.PropertyChangeListener _propertyChangeListener> = null;

     label09:
        $r9 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.dnd.DropTarget _dt>;

        if $r9 == null goto label10;

        $r10 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.dnd.DropTargetListener _dropListener>;

        if $r10 == null goto label10;

        $r12 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.dnd.DropTarget _dt>;

        $r11 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.dnd.DropTargetListener _dropListener>;

        virtualinvoke $r12.<java.awt.dnd.DropTarget: void removeDropTargetListener(java.awt.dnd.DropTargetListener)>($r11);

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.dnd.DropTargetListener _dropListener> = null;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.dnd.DropTarget _dt> = null;

        $r13 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Component getTabPanel()>();

        virtualinvoke $r13.<java.awt.Component: void setDropTarget(java.awt.dnd.DropTarget)>(null);

     label10:
        return;
    }

    protected javax.swing.event.ChangeListener createChangeListener()
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r1;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabSelectionHandler $r0;

        r1 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        $r0 = new com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabSelectionHandler;

        specialinvoke $r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabSelectionHandler: void <init>(com.jidesoft.plaf.basic.BasicJideTabbedPaneUI)>(r1);

        return $r0;
    }

    protected java.awt.event.FocusListener createFocusListener()
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r1;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabFocusListener $r0;

        r1 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        $r0 = new com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabFocusListener;

        specialinvoke $r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabFocusListener: void <init>(com.jidesoft.plaf.basic.BasicJideTabbedPaneUI)>(r1);

        return $r0;
    }

    protected java.beans.PropertyChangeListener createPropertyChangeListener()
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r1;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$PropertyChangeHandler $r0;

        r1 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        $r0 = new com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$PropertyChangeHandler;

        specialinvoke $r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$PropertyChangeHandler: void <init>(com.jidesoft.plaf.basic.BasicJideTabbedPaneUI)>(r1);

        return $r0;
    }

    protected void installKeyboardActions()
    {
        com.jidesoft.swing.JideTabbedPane $r2, $r4, $r6, $r25;
        boolean $z0;
        javax.swing.Icon $r9, $r15, $r21, $r31;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport $r7, $r10, $r13, $r16, $r19, $r22, $r27, $r29, $r32, $r35, $r38, $r41, $r44, $r47, $r49, $r51, $r53;
        javax.swing.Action $r12, $r18, $r24, $r26, $r34;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        java.lang.String $r37, $r40, $r43, $r46;
        javax.swing.ActionMap $r5;
        javax.swing.JButton $r8, $r11, $r14, $r17, $r20, $r23, $r28, $r30, $r33, $r36, $r39, $r42, $r45, $r48, $r50, $r52, $r54;
        javax.swing.InputMap $r1, $r3;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        $r1 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.InputMap getInputMap(int)>(1);

        $r2 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        staticinvoke <javax.swing.SwingUtilities: void replaceUIInputMap(javax.swing.JComponent,int,javax.swing.InputMap)>($r2, 1, $r1);

        $r3 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.InputMap getInputMap(int)>(0);

        $r4 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        staticinvoke <javax.swing.SwingUtilities: void replaceUIInputMap(javax.swing.JComponent,int,javax.swing.InputMap)>($r4, 0, $r3);

        $r5 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.ActionMap getActionMap()>();

        $r6 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        staticinvoke <javax.swing.SwingUtilities: void replaceUIActionMap(javax.swing.JComponent,javax.swing.ActionMap)>($r6, $r5);

        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void ensureCloseButtonCreated()>();

        $z0 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean scrollableTabLayoutEnabled()>();

        if $z0 == 0 goto label5;

        $r7 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport _tabScroller>;

        $r8 = $r7.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport: javax.swing.JButton scrollForwardButton>;

        $r9 = virtualinvoke $r8.<javax.swing.JButton: javax.swing.Icon getIcon()>();

        $r10 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport _tabScroller>;

        $r11 = $r10.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport: javax.swing.JButton scrollForwardButton>;

        $r12 = virtualinvoke $r5.<javax.swing.ActionMap: javax.swing.Action get(java.lang.Object)>("scrollTabsForwardAction");

        virtualinvoke $r11.<javax.swing.JButton: void setAction(javax.swing.Action)>($r12);

        if $r9 == null goto label1;

        $r53 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport _tabScroller>;

        $r54 = $r53.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport: javax.swing.JButton scrollForwardButton>;

        virtualinvoke $r54.<javax.swing.JButton: void setIcon(javax.swing.Icon)>($r9);

     label1:
        $r13 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport _tabScroller>;

        $r14 = $r13.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport: javax.swing.JButton scrollBackwardButton>;

        $r15 = virtualinvoke $r14.<javax.swing.JButton: javax.swing.Icon getIcon()>();

        $r16 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport _tabScroller>;

        $r17 = $r16.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport: javax.swing.JButton scrollBackwardButton>;

        $r18 = virtualinvoke $r5.<javax.swing.ActionMap: javax.swing.Action get(java.lang.Object)>("scrollTabsBackwardAction");

        virtualinvoke $r17.<javax.swing.JButton: void setAction(javax.swing.Action)>($r18);

        if $r15 == null goto label2;

        $r51 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport _tabScroller>;

        $r52 = $r51.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport: javax.swing.JButton scrollBackwardButton>;

        virtualinvoke $r52.<javax.swing.JButton: void setIcon(javax.swing.Icon)>($r15);

     label2:
        $r19 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport _tabScroller>;

        $r20 = $r19.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport: javax.swing.JButton listButton>;

        $r21 = virtualinvoke $r20.<javax.swing.JButton: javax.swing.Icon getIcon()>();

        $r22 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport _tabScroller>;

        $r23 = $r22.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport: javax.swing.JButton listButton>;

        $r24 = virtualinvoke $r5.<javax.swing.ActionMap: javax.swing.Action get(java.lang.Object)>("scrollTabsListAction");

        virtualinvoke $r23.<javax.swing.JButton: void setAction(javax.swing.Action)>($r24);

        if $r21 == null goto label3;

        $r49 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport _tabScroller>;

        $r50 = $r49.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport: javax.swing.JButton listButton>;

        virtualinvoke $r50.<javax.swing.JButton: void setIcon(javax.swing.Icon)>($r21);

     label3:
        $r25 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r26 = virtualinvoke $r25.<com.jidesoft.swing.JideTabbedPane: javax.swing.Action getCloseAction()>();

        $r27 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport _tabScroller>;

        $r28 = $r27.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport: javax.swing.JButton closeButton>;

        specialinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void updateButtonFromAction(javax.swing.JButton,javax.swing.Action)>($r28, $r26);

        $r29 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport _tabScroller>;

        $r30 = $r29.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport: javax.swing.JButton closeButton>;

        $r31 = virtualinvoke $r30.<javax.swing.JButton: javax.swing.Icon getIcon()>();

        $r32 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport _tabScroller>;

        $r33 = $r32.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport: javax.swing.JButton closeButton>;

        $r34 = virtualinvoke $r5.<javax.swing.ActionMap: javax.swing.Action get(java.lang.Object)>("closeTabAction");

        virtualinvoke $r33.<javax.swing.JButton: void setAction(javax.swing.Action)>($r34);

        if $r31 == null goto label4;

        $r47 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport _tabScroller>;

        $r48 = $r47.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport: javax.swing.JButton closeButton>;

        virtualinvoke $r48.<javax.swing.JButton: void setIcon(javax.swing.Icon)>($r31);

     label4:
        $r35 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport _tabScroller>;

        $r36 = $r35.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport: javax.swing.JButton scrollForwardButton>;

        $r37 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.lang.String getResourceString(java.lang.String)>("JideTabbedPane.scrollForward");

        virtualinvoke $r36.<javax.swing.JButton: void setToolTipText(java.lang.String)>($r37);

        $r38 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport _tabScroller>;

        $r39 = $r38.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport: javax.swing.JButton scrollBackwardButton>;

        $r40 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.lang.String getResourceString(java.lang.String)>("JideTabbedPane.scrollBackward");

        virtualinvoke $r39.<javax.swing.JButton: void setToolTipText(java.lang.String)>($r40);

        $r41 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport _tabScroller>;

        $r42 = $r41.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport: javax.swing.JButton listButton>;

        $r43 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.lang.String getResourceString(java.lang.String)>("JideTabbedPane.showList");

        virtualinvoke $r42.<javax.swing.JButton: void setToolTipText(java.lang.String)>($r43);

        $r44 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport _tabScroller>;

        $r45 = $r44.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport: javax.swing.JButton closeButton>;

        $r46 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.lang.String getResourceString(java.lang.String)>("JideTabbedPane.close");

        virtualinvoke $r45.<javax.swing.JButton: void setToolTipText(java.lang.String)>($r46);

     label5:
        return;
    }

    javax.swing.InputMap getInputMap(int)
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r4;
        int i0;
        java.lang.Object $r0, $r2;
        javax.swing.InputMap $r1, $r3;

        r4 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        i0 := @parameter0: int;

        if i0 != 1 goto label1;

        $r2 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("JideTabbedPane.ancestorInputMap");

        $r3 = (javax.swing.InputMap) $r2;

        return $r3;

     label1:
        if i0 != 0 goto label2;

        $r0 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("JideTabbedPane.focusInputMap");

        $r1 = (javax.swing.InputMap) $r0;

        return $r1;

     label2:
        return null;
    }

    javax.swing.ActionMap getActionMap()
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r1;
        javax.swing.UIDefaults $r3;
        java.lang.Object $r0;
        javax.swing.ActionMap $r2, r4;

        r1 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        $r0 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("JideTabbedPane.actionMap");

        r4 = (javax.swing.ActionMap) $r0;

        if r4 != null goto label1;

        $r2 = virtualinvoke r1.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.ActionMap createActionMap()>();

        r4 = $r2;

        if $r2 == null goto label1;

        $r3 = staticinvoke <javax.swing.UIManager: javax.swing.UIDefaults getLookAndFeelDefaults()>();

        virtualinvoke $r3.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("JideTabbedPane.actionMap", $r2);

     label1:
        return r4;
    }

    javax.swing.ActionMap createActionMap()
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$RequestFocusAction $r9;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$LeftAction $r4;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$SetSelectedIndexAction $r11;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollTabsListAction $r14;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$PageDownAction $r8;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollTabsBackwardAction $r13;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r16;
        javax.swing.plaf.ActionMapUIResource $r0;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollTabsForwardAction $r12;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$NextAction $r1;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$RightAction $r3;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$RequestFocusForVisibleAction $r10;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$DownAction $r6;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$UpAction $r5;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$PreviousAction $r2;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$PageUpAction $r7;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$CloseTabAction $r15;

        r16 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        $r0 = new javax.swing.plaf.ActionMapUIResource;

        specialinvoke $r0.<javax.swing.plaf.ActionMapUIResource: void <init>()>();

        $r1 = new com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$NextAction;

        specialinvoke $r1.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$NextAction: void <init>(com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$1)>(null);

        virtualinvoke $r0.<javax.swing.ActionMap: void put(java.lang.Object,javax.swing.Action)>("navigateNext", $r1);

        $r2 = new com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$PreviousAction;

        specialinvoke $r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$PreviousAction: void <init>(com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$1)>(null);

        virtualinvoke $r0.<javax.swing.ActionMap: void put(java.lang.Object,javax.swing.Action)>("navigatePrevious", $r2);

        $r3 = new com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$RightAction;

        specialinvoke $r3.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$RightAction: void <init>(com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$1)>(null);

        virtualinvoke $r0.<javax.swing.ActionMap: void put(java.lang.Object,javax.swing.Action)>("navigateRight", $r3);

        $r4 = new com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$LeftAction;

        specialinvoke $r4.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$LeftAction: void <init>(com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$1)>(null);

        virtualinvoke $r0.<javax.swing.ActionMap: void put(java.lang.Object,javax.swing.Action)>("navigateLeft", $r4);

        $r5 = new com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$UpAction;

        specialinvoke $r5.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$UpAction: void <init>(com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$1)>(null);

        virtualinvoke $r0.<javax.swing.ActionMap: void put(java.lang.Object,javax.swing.Action)>("navigateUp", $r5);

        $r6 = new com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$DownAction;

        specialinvoke $r6.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$DownAction: void <init>(com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$1)>(null);

        virtualinvoke $r0.<javax.swing.ActionMap: void put(java.lang.Object,javax.swing.Action)>("navigateDown", $r6);

        $r7 = new com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$PageUpAction;

        specialinvoke $r7.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$PageUpAction: void <init>(com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$1)>(null);

        virtualinvoke $r0.<javax.swing.ActionMap: void put(java.lang.Object,javax.swing.Action)>("navigatePageUp", $r7);

        $r8 = new com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$PageDownAction;

        specialinvoke $r8.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$PageDownAction: void <init>(com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$1)>(null);

        virtualinvoke $r0.<javax.swing.ActionMap: void put(java.lang.Object,javax.swing.Action)>("navigatePageDown", $r8);

        $r9 = new com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$RequestFocusAction;

        specialinvoke $r9.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$RequestFocusAction: void <init>(com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$1)>(null);

        virtualinvoke $r0.<javax.swing.ActionMap: void put(java.lang.Object,javax.swing.Action)>("requestFocus", $r9);

        $r10 = new com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$RequestFocusForVisibleAction;

        specialinvoke $r10.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$RequestFocusForVisibleAction: void <init>(com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$1)>(null);

        virtualinvoke $r0.<javax.swing.ActionMap: void put(java.lang.Object,javax.swing.Action)>("requestFocusForVisibleComponent", $r10);

        $r11 = new com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$SetSelectedIndexAction;

        specialinvoke $r11.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$SetSelectedIndexAction: void <init>(com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$1)>(null);

        virtualinvoke $r0.<javax.swing.ActionMap: void put(java.lang.Object,javax.swing.Action)>("setSelectedIndex", $r11);

        $r12 = new com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollTabsForwardAction;

        specialinvoke $r12.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollTabsForwardAction: void <init>()>();

        virtualinvoke $r0.<javax.swing.ActionMap: void put(java.lang.Object,javax.swing.Action)>("scrollTabsForwardAction", $r12);

        $r13 = new com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollTabsBackwardAction;

        specialinvoke $r13.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollTabsBackwardAction: void <init>()>();

        virtualinvoke $r0.<javax.swing.ActionMap: void put(java.lang.Object,javax.swing.Action)>("scrollTabsBackwardAction", $r13);

        $r14 = new com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollTabsListAction;

        specialinvoke $r14.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollTabsListAction: void <init>()>();

        virtualinvoke $r0.<javax.swing.ActionMap: void put(java.lang.Object,javax.swing.Action)>("scrollTabsListAction", $r14);

        $r15 = new com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$CloseTabAction;

        specialinvoke $r15.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$CloseTabAction: void <init>()>();

        virtualinvoke $r0.<javax.swing.ActionMap: void put(java.lang.Object,javax.swing.Action)>("closeTabAction", $r15);

        return $r0;
    }

    protected void uninstallKeyboardActions()
    {
        com.jidesoft.swing.JideTabbedPane $r1, $r2, $r3;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        javax.swing.JButton[] $r4, $r5, $r6;
        int $i0, i1;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        staticinvoke <javax.swing.SwingUtilities: void replaceUIActionMap(javax.swing.JComponent,javax.swing.ActionMap)>($r1, null);

        $r2 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        staticinvoke <javax.swing.SwingUtilities: void replaceUIInputMap(javax.swing.JComponent,int,javax.swing.InputMap)>($r2, 1, null);

        $r3 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        staticinvoke <javax.swing.SwingUtilities: void replaceUIInputMap(javax.swing.JComponent,int,javax.swing.InputMap)>($r3, 0, null);

        $r4 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.JButton[] _closeButtons>;

        if $r4 == null goto label3;

        i1 = 0;

     label1:
        $r5 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.JButton[] _closeButtons>;

        $i0 = lengthof $r5;

        if i1 >= $i0 goto label2;

        $r6 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.JButton[] _closeButtons>;

        $r6[i1] = null;

        i1 = i1 + 1;

        goto label1;

     label2:
        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.JButton[] _closeButtons> = null;

     label3:
        return;
    }

    protected void updateMnemonics()
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        com.jidesoft.swing.JideTabbedPane $r1, $r2;
        int $i0, $i1, i2, $i4;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        specialinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void resetMnemonics()>();

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i0 = virtualinvoke $r1.<com.jidesoft.swing.JideTabbedPane: int getTabCount()>();

        i2 = $i0 - 1;

     label1:
        if i2 < 0 goto label3;

        $r2 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i1 = virtualinvoke $r2.<com.jidesoft.swing.JideTabbedPane: int getMnemonicAt(int)>(i2);

        if $i1 <= 0 goto label2;

        specialinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void addMnemonic(int,int)>(i2, $i1);

     label2:
        $i4 = (int) -1;

        i2 = i2 + $i4;

        goto label1;

     label3:
        return;
    }

    private void resetMnemonics()
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        javax.swing.InputMap $r3;
        java.util.Hashtable $r1, $r2;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.util.Hashtable _mnemonicToIndexMap>;

        if $r1 == null goto label1;

        $r2 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.util.Hashtable _mnemonicToIndexMap>;

        virtualinvoke $r2.<java.util.Hashtable: void clear()>();

        $r3 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.InputMap _mnemonicInputMap>;

        virtualinvoke $r3.<javax.swing.InputMap: void clear()>();

     label1:
        return;
    }

    private void addMnemonic(int, int)
    {
        javax.swing.KeyStroke $r3;
        java.lang.Integer $r5, $r6;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        int i0, i1;
        javax.swing.InputMap $r2;
        java.util.Hashtable $r1, $r4;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.util.Hashtable _mnemonicToIndexMap>;

        if $r1 != null goto label1;

        specialinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void initMnemonics()>();

     label1:
        $r2 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.InputMap _mnemonicInputMap>;

        $r3 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int)>(i0, 8);

        virtualinvoke $r2.<javax.swing.InputMap: void put(javax.swing.KeyStroke,java.lang.Object)>($r3, "setSelectedIndex");

        $r4 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.util.Hashtable _mnemonicToIndexMap>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        virtualinvoke $r4.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r6);

        return;
    }

    private void initMnemonics()
    {
        com.jidesoft.swing.JideTabbedPane $r3, $r7;
        javax.swing.plaf.InputMapUIResource $r2;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        javax.swing.InputMap $r4, $r5, $r6;
        java.util.Hashtable $r1;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        $r1 = new java.util.Hashtable;

        specialinvoke $r1.<java.util.Hashtable: void <init>()>();

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.util.Hashtable _mnemonicToIndexMap> = $r1;

        $r2 = new javax.swing.plaf.InputMapUIResource;

        specialinvoke $r2.<javax.swing.plaf.InputMapUIResource: void <init>()>();

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.InputMap _mnemonicInputMap> = $r2;

        $r4 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.InputMap _mnemonicInputMap>;

        $r3 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r5 = staticinvoke <javax.swing.SwingUtilities: javax.swing.InputMap getUIInputMap(javax.swing.JComponent,int)>($r3, 1);

        virtualinvoke $r4.<javax.swing.InputMap: void setParent(javax.swing.InputMap)>($r5);

        $r7 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r6 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.InputMap _mnemonicInputMap>;

        staticinvoke <javax.swing.SwingUtilities: void replaceUIInputMap(javax.swing.JComponent,int,javax.swing.InputMap)>($r7, 1, $r6);

        return;
    }

    public java.awt.Dimension getPreferredSize(javax.swing.JComponent)
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        javax.swing.JComponent r1;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        r1 := @parameter0: javax.swing.JComponent;

        return null;
    }

    public java.awt.Dimension getMinimumSize(javax.swing.JComponent)
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        javax.swing.JComponent r1;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        r1 := @parameter0: javax.swing.JComponent;

        return null;
    }

    public java.awt.Dimension getMaximumSize(javax.swing.JComponent)
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        javax.swing.JComponent r1;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        r1 := @parameter0: javax.swing.JComponent;

        return null;
    }

    public void paint(java.awt.Graphics, javax.swing.JComponent)
    {
        com.jidesoft.swing.JideTabbedPane $r1, $r4, $r5;
        javax.swing.JComponent r3;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        int $i0, $i1, $i2, $i3;
        java.awt.Graphics r2;
        boolean $z0;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        r2 := @parameter0: java.awt.Graphics;

        r3 := @parameter1: javax.swing.JComponent;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i0 = virtualinvoke $r1.<com.jidesoft.swing.JideTabbedPane: int getTabCount()>();

        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void paintBackground(java.awt.Graphics,java.awt.Component)>(r2, r3);

        if $i0 != 0 goto label1;

        return;

     label1:
        $i1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _tabCount>;

        if $i1 == $i0 goto label2;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _tabCount> = $i0;

        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void updateMnemonics()>();

     label2:
        $r4 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i2 = virtualinvoke $r4.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        $r5 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i3 = virtualinvoke $r5.<com.jidesoft.swing.JideTabbedPane: int getTabPlacement()>();

        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void ensureCurrentLayout()>();

        $z0 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean scrollableTabLayoutEnabled()>();

        if $z0 != 0 goto label3;

        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void paintTabArea(java.awt.Graphics,int,int,java.awt.Component)>(r2, $i3, $i2, r3);

     label3:
        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void paintContentBorder(java.awt.Graphics,int,int)>(r2, $i3, $i2);

        return;
    }

    public void paintBackground(java.awt.Graphics, java.awt.Component)
    {
        com.jidesoft.swing.JideTabbedPane $r1;
        java.awt.Color $r4;
        java.awt.Component r2;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        int $i0, $i1;
        java.awt.Graphics r3;
        boolean $z0;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        r3 := @parameter0: java.awt.Graphics;

        r2 := @parameter1: java.awt.Component;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z0 = virtualinvoke $r1.<com.jidesoft.swing.JideTabbedPane: boolean isOpaque()>();

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r2.<java.awt.Component: int getWidth()>();

        $i1 = virtualinvoke r2.<java.awt.Component: int getHeight()>();

        $r4 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _background>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r4);

        virtualinvoke r3.<java.awt.Graphics: void fillRect(int,int,int,int)>(0, 0, $i0, $i1);

     label1:
        return;
    }

    protected void paintTabArea(java.awt.Graphics, int, int, java.awt.Component)
    {
        com.jidesoft.swing.JideTabbedPane $r1, $r15;
        int[] $r10, $r11;
        boolean z0, $z1, $z2, $z3, $z4;
        java.awt.Component r5;
        java.awt.Graphics r6;
        java.awt.Rectangle $r8, $r13, $r17, $r18, $r19;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        java.awt.Rectangle[] $r7, $r9, $r12, $r14;
        int $i0, $i1, $i2, i3, $i4, i5, $i6, i7, $i8, $i9, i10, $i11, i12, $i13, $i14, i15, $i17;
        java.awt.ComponentOrientation $r16;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        r6 := @parameter0: java.awt.Graphics;

        i3 := @parameter1: int;

        i5 := @parameter2: int;

        r5 := @parameter3: java.awt.Component;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i0 = virtualinvoke $r1.<com.jidesoft.swing.JideTabbedPane: int getTabCount()>();

        $r17 = new java.awt.Rectangle;

        specialinvoke $r17.<java.awt.Rectangle: void <init>()>();

        $r18 = new java.awt.Rectangle;

        specialinvoke $r18.<java.awt.Rectangle: void <init>()>();

        $r19 = new java.awt.Rectangle;

        $i1 = virtualinvoke r5.<java.awt.Component: int getWidth()>();

        $i2 = virtualinvoke r5.<java.awt.Component: int getHeight()>();

        specialinvoke $r19.<java.awt.Rectangle: void <init>(int,int,int,int)>(0, 0, $i1, $i2);

        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void paintTabAreaBackground(java.awt.Graphics,java.awt.Rectangle,int)>(r6, $r19, i3);

        if i3 == 2 goto label01;

        if i3 == 4 goto label01;

        $r15 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r16 = virtualinvoke $r15.<com.jidesoft.swing.JideTabbedPane: java.awt.ComponentOrientation getComponentOrientation()>();

        $z3 = virtualinvoke $r16.<java.awt.ComponentOrientation: boolean isLeftToRight()>();

        if $z3 == 0 goto label02;

     label01:
        $z4 = 1;

        goto label03;

     label02:
        $z4 = 0;

     label03:
        z0 = $z4;

        $i4 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _runCount>;

        i12 = $i4 - 1;

     label04:
        if i12 < 0 goto label13;

        $r10 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int[] _tabRuns>;

        i7 = $r10[i12];

        $r11 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int[] _tabRuns>;

        $i8 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _runCount>;

        $i9 = $i8 - 1;

        if i12 != $i9 goto label05;

        $i13 = 0;

        goto label06;

     label05:
        $i13 = i12 + 1;

     label06:
        $i11 = $r11[$i13];

        if $i11 == 0 goto label07;

        $i14 = $i11 - 1;

        goto label08;

     label07:
        $i14 = $i0 - 1;

     label08:
        i10 = $i14;

        i15 = i7;

     label09:
        if i15 > i10 goto label12;

        $r12 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r13 = $r12[i15];

        $z2 = virtualinvoke $r13.<java.awt.Rectangle: boolean intersects(java.awt.Rectangle)>($r19);

        if $z2 != 0 goto label10;

        if z0 != 0 goto label11;

     label10:
        if i15 == i5 goto label11;

        $r14 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void paintTab(java.awt.Graphics,int,java.awt.Rectangle[],int,java.awt.Rectangle,java.awt.Rectangle)>(r6, i3, $r14, i15, $r17, $r18);

     label11:
        i15 = i15 + 1;

        goto label09;

     label12:
        $i17 = (int) -1;

        i12 = i12 + $i17;

        goto label04;

     label13:
        if i5 < 0 goto label15;

        $i6 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getRunForTab(int,int)>($i0, i5);

        if $i6 != 0 goto label15;

        $r7 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r8 = $r7[i5];

        $z1 = virtualinvoke $r8.<java.awt.Rectangle: boolean intersects(java.awt.Rectangle)>($r19);

        if $z1 != 0 goto label14;

        if z0 != 0 goto label15;

     label14:
        $r9 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void paintTab(java.awt.Graphics,int,java.awt.Rectangle[],int,java.awt.Rectangle,java.awt.Rectangle)>(r6, i3, $r9, i5, $r17, $r18);

     label15:
        return;
    }

    protected void paintTabAreaBackground(java.awt.Graphics, java.awt.Rectangle, int)
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        com.jidesoft.swing.JideTabbedPane $r4;
        java.awt.Rectangle r3;
        byte $b1;
        java.awt.Graphics r2;
        int i0;
        com.jidesoft.plaf.basic.ThemePainter $r1;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        r2 := @parameter0: java.awt.Graphics;

        r3 := @parameter1: java.awt.Rectangle;

        i0 := @parameter2: int;

        $r1 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.ThemePainter getPainter()>();

        $r4 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        if i0 == 1 goto label1;

        if i0 != 3 goto label2;

     label1:
        $b1 = 0;

        goto label3;

     label2:
        $b1 = 1;

     label3:
        interfaceinvoke $r1.<com.jidesoft.plaf.basic.ThemePainter: void paintTabAreaBackground(javax.swing.JComponent,java.awt.Graphics,java.awt.Rectangle,int,int)>($r4, r2, r3, $b1, 0);

        return;
    }

    protected void paintTab(java.awt.Graphics, int, java.awt.Rectangle[], int, java.awt.Rectangle, java.awt.Rectangle)
    {
        byte $b50, $b51;
        java.awt.Component $r16, $r18;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r2;
        java.awt.Rectangle[] r0;
        java.lang.String $r41;
        javax.swing.JButton $r29, $r32;
        java.awt.ComponentOrientation $r5;
        java.awt.FontMetrics $r43;
        com.jidesoft.plaf.basic.Painter $r35, $r39;
        com.jidesoft.swing.JideTabbedPane $r3, $r4, $r8, $r11, $r12, $r15, $r17, $r19, $r20, $r22, $r24, $r25, $r26, $r27, $r37, $r38, $r40;
        com.jidesoft.plaf.basic.ThemePainter $r36;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z11, $z12, $z13, $z14, $z15, $z16, $z17;
        java.awt.Font $r21, $r23, r42;
        javax.swing.Icon $r9;
        java.awt.Dimension $r30, $r33;
        java.awt.Graphics r6;
        java.awt.Rectangle r1, $r10, r13, r14, $r34;
        int i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, i52;
        javax.swing.JButton[] $r28, $r31;
        java.lang.Object $r7;

        r2 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        r6 := @parameter0: java.awt.Graphics;

        i2 := @parameter1: int;

        r0 := @parameter2: java.awt.Rectangle[];

        i0 := @parameter3: int;

        r13 := @parameter4: java.awt.Rectangle;

        r14 := @parameter5: java.awt.Rectangle;

        r1 = r0[i0];

        $r3 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i1 = virtualinvoke $r3.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if $i1 != i0 goto label01;

        $z17 = 1;

        $z16 = 1;

        $z15 = 1;

        goto label02;

     label01:
        $z17 = 0;

        $z16 = 0;

        $z15 = 0;

     label02:
        z0 = $z17;

        $r4 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r5 = virtualinvoke $r4.<com.jidesoft.swing.JideTabbedPane: java.awt.ComponentOrientation getComponentOrientation()>();

        $z1 = virtualinvoke $r5.<java.awt.ComponentOrientation: boolean isLeftToRight()>();

        $i6 = r1.<java.awt.Rectangle: int x>;

        $i5 = r1.<java.awt.Rectangle: int y>;

        $i4 = r1.<java.awt.Rectangle: int width>;

        $i3 = r1.<java.awt.Rectangle: int height>;

        virtualinvoke r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void paintTabBackground(java.awt.Graphics,int,int,int,int,int,int,boolean)>(r6, i2, i0, $i6, $i5, $i4, $i3, $z16);

        $r7 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: java.lang.Object setupShapeAntialiasing(java.awt.Graphics)>(r6);

        $i10 = r1.<java.awt.Rectangle: int x>;

        $i9 = r1.<java.awt.Rectangle: int y>;

        $i8 = r1.<java.awt.Rectangle: int width>;

        $i7 = r1.<java.awt.Rectangle: int height>;

        virtualinvoke r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void paintTabBorder(java.awt.Graphics,int,int,int,int,int,int,boolean)>(r6, i2, i0, $i10, $i9, $i8, $i7, $z15);

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void restoreShapeAntialiasing(java.awt.Graphics,java.lang.Object)>(r6, $r7);

        $r8 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r9 = virtualinvoke $r8.<com.jidesoft.swing.JideTabbedPane: javax.swing.Icon getIconForTab(int)>(i0);

        $r10 = new java.awt.Rectangle;

        specialinvoke $r10.<java.awt.Rectangle: void <init>(java.awt.Rectangle)>(r1);

        $r11 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z2 = virtualinvoke $r11.<com.jidesoft.swing.JideTabbedPane: boolean isShowGripper()>();

        if $z2 == 0 goto label11;

        if $z1 == 0 goto label03;

        $i48 = $r10.<java.awt.Rectangle: int x>;

        $i47 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _gripperWidth>;

        $i49 = $i48 + $i47;

        $r10.<java.awt.Rectangle: int x> = $i49;

     label03:
        $i34 = $r10.<java.awt.Rectangle: int width>;

        $i33 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _gripperWidth>;

        $i35 = $i34 - $i33;

        $r10.<java.awt.Rectangle: int width> = $i35;

        $r34 = new java.awt.Rectangle;

        specialinvoke $r34.<java.awt.Rectangle: void <init>(java.awt.Rectangle)>(r1);

        if $z1 == 0 goto label04;

        $i45 = $r34.<java.awt.Rectangle: int x>;

        $i44 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _gripLeftMargin>;

        $i46 = $i45 + $i44;

        $r34.<java.awt.Rectangle: int x> = $i46;

        goto label05;

     label04:
        $i37 = r1.<java.awt.Rectangle: int x>;

        $i36 = r1.<java.awt.Rectangle: int width>;

        $i39 = $i37 + $i36;

        $i38 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _gripLeftMargin>;

        $i41 = $i39 - $i38;

        $i40 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _gripperWidth>;

        $i42 = $i41 - $i40;

        $r34.<java.awt.Rectangle: int x> = $i42;

     label05:
        $i43 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _gripperWidth>;

        $r34.<java.awt.Rectangle: int width> = $i43;

        $r35 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.Painter _gripperPainter>;

        if $r35 == null goto label08;

        $r39 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.Painter _gripperPainter>;

        $r38 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        if z0 == 0 goto label06;

        $b50 = 3;

        goto label07;

     label06:
        $b50 = 0;

     label07:
        interfaceinvoke $r39.<com.jidesoft.plaf.basic.Painter: void paint(javax.swing.JComponent,java.awt.Graphics,java.awt.Rectangle,int,int)>($r38, r6, $r34, 0, $b50);

        goto label11;

     label08:
        $r36 = virtualinvoke r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.ThemePainter getPainter()>();

        $r37 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        if z0 == 0 goto label09;

        $b51 = 3;

        goto label10;

     label09:
        $b51 = 0;

     label10:
        interfaceinvoke $r36.<com.jidesoft.plaf.basic.ThemePainter: void paintGripper(javax.swing.JComponent,java.awt.Graphics,java.awt.Rectangle,int,int)>($r37, r6, $r34, 0, $b51);

     label11:
        $z11 = virtualinvoke r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean isShowCloseButton()>();

        if $z11 == 0 goto label19;

        $z6 = virtualinvoke r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean isShowCloseButtonOnTab()>();

        if $z6 == 0 goto label19;

        $r26 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z7 = virtualinvoke $r26.<com.jidesoft.swing.JideTabbedPane: boolean isTabClosableAt(int)>(i0);

        if $z7 == 0 goto label19;

        $r27 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z8 = virtualinvoke $r27.<com.jidesoft.swing.JideTabbedPane: boolean isShowCloseButtonOnSelectedTab()>();

        if $z8 == 0 goto label12;

        if z0 == 0 goto label19;

     label12:
        if i2 == 1 goto label13;

        if i2 != 3 goto label17;

     label13:
        $r28 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.JButton[] _closeButtons>;

        $r29 = $r28[i0];

        $r30 = virtualinvoke $r29.<javax.swing.JButton: java.awt.Dimension getPreferredSize()>();

        $i13 = $r30.<java.awt.Dimension: int width>;

        $i12 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _closeButtonLeftMargin>;

        $i15 = $i13 + $i12;

        $i14 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _closeButtonRightMargin>;

        $i32 = $i15 + $i14;

        $i16 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _closeButtonAlignment>;

        if $i16 != 10 goto label14;

        $z12 = 1;

        goto label15;

     label14:
        $z12 = 0;

     label15:
        $z9 = $z12 ^ $z1;

        if $z9 != 0 goto label16;

        $i19 = $r10.<java.awt.Rectangle: int x>;

        $i20 = $i19 + $i32;

        $r10.<java.awt.Rectangle: int x> = $i20;

     label16:
        $i17 = $r10.<java.awt.Rectangle: int width>;

        $i18 = $i17 - $i32;

        $r10.<java.awt.Rectangle: int width> = $i18;

        goto label19;

     label17:
        $r31 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.JButton[] _closeButtons>;

        $r32 = $r31[i0];

        $r33 = virtualinvoke $r32.<javax.swing.JButton: java.awt.Dimension getPreferredSize()>();

        $i22 = $r33.<java.awt.Dimension: int height>;

        $i21 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _closeButtonLeftMargin>;

        $i24 = $i22 + $i21;

        $i23 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _closeButtonRightMargin>;

        i52 = $i24 + $i23;

        $i25 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _closeButtonAlignment>;

        if $i25 != 10 goto label18;

        $i28 = $r10.<java.awt.Rectangle: int y>;

        $i29 = $i28 + i52;

        $r10.<java.awt.Rectangle: int y> = $i29;

        $i30 = $r10.<java.awt.Rectangle: int height>;

        $i31 = $i30 - i52;

        $r10.<java.awt.Rectangle: int height> = $i31;

        goto label19;

     label18:
        $i26 = $r10.<java.awt.Rectangle: int height>;

        $i27 = $i26 - i52;

        $r10.<java.awt.Rectangle: int height> = $i27;

     label19:
        $r40 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r41 = virtualinvoke r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.lang.String getCurrentDisplayTitleAt(com.jidesoft.swing.JideTabbedPane,int)>($r40, i0);

        if z0 == 0 goto label22;

        $r20 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r21 = virtualinvoke $r20.<com.jidesoft.swing.JideTabbedPane: java.awt.Font getSelectedTabFont()>();

        if $r21 == null goto label20;

        $r25 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        r42 = virtualinvoke $r25.<com.jidesoft.swing.JideTabbedPane: java.awt.Font getSelectedTabFont()>();

        goto label23;

     label20:
        $r22 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r23 = virtualinvoke $r22.<com.jidesoft.swing.JideTabbedPane: java.awt.Font getFont()>();

        $z5 = $r23 instanceof javax.swing.plaf.UIResource;

        if $z5 == 0 goto label21;

        r42 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Font _selectedTabFont>;

        goto label23;

     label21:
        $r24 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        r42 = virtualinvoke $r24.<com.jidesoft.swing.JideTabbedPane: java.awt.Font getFont()>();

        goto label23;

     label22:
        $r12 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        r42 = virtualinvoke $r12.<com.jidesoft.swing.JideTabbedPane: java.awt.Font getFont()>();

     label23:
        if z0 == 0 goto label24;

        $r19 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z4 = virtualinvoke $r19.<com.jidesoft.swing.JideTabbedPane: boolean isBoldActiveTab()>();

        if $z4 == 0 goto label24;

        $i11 = virtualinvoke r42.<java.awt.Font: int getStyle()>();

        if $i11 == 1 goto label24;

        r42 = virtualinvoke r42.<java.awt.Font: java.awt.Font deriveFont(int)>(1);

     label24:
        $r43 = virtualinvoke r6.<java.awt.Graphics: java.awt.FontMetrics getFontMetrics(java.awt.Font)>(r42);

        virtualinvoke r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void layoutLabel(int,java.awt.FontMetrics,int,java.lang.String,javax.swing.Icon,java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle,boolean)>(i2, $r43, i0, $r41, $r9, $r10, r13, r14, z0);

        $z13 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean _isEditing>;

        if $z13 == 0 goto label25;

        if z0 != 0 goto label27;

     label25:
        $z3 = staticinvoke <com.jidesoft.utils.SystemInfo: boolean isJdk6Above()>();

        if $z3 == 0 goto label26;

        $r17 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r18 = virtualinvoke $r17.<com.jidesoft.swing.JideTabbedPane: java.awt.Component getTabComponentAt(int)>(i0);

        if $r18 != null goto label27;

     label26:
        virtualinvoke r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void paintText(java.awt.Graphics,int,java.awt.Font,java.awt.FontMetrics,int,java.lang.String,java.awt.Rectangle,boolean)>(r6, i2, r42, $r43, i0, $r41, r14, z0);

     label27:
        $z14 = staticinvoke <com.jidesoft.utils.SystemInfo: boolean isJdk6Above()>();

        if $z14 == 0 goto label28;

        $r15 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r16 = virtualinvoke $r15.<com.jidesoft.swing.JideTabbedPane: java.awt.Component getTabComponentAt(int)>(i0);

        if $r16 != null goto label29;

     label28:
        virtualinvoke r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void paintIcon(java.awt.Graphics,int,int,javax.swing.Icon,java.awt.Rectangle,boolean)>(r6, i2, i0, $r9, r13, z0);

     label29:
        virtualinvoke r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void paintFocusIndicator(java.awt.Graphics,int,java.awt.Rectangle[],int,java.awt.Rectangle,java.awt.Rectangle,boolean)>(r6, i2, r0, i0, r13, r14, z0);

        return;
    }

    private void paintCroppedTabEdge(java.awt.Graphics, int, int, boolean, int, int)
    {
        java.awt.Color $r2, $r10;
        int[] $r5, $r6, $r7, $r8, $r9, $r13, $r14, $r15, $r16, $r17;
        boolean z0;
        java.awt.Graphics r0;
        java.awt.Rectangle $r4, $r12;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r1;
        java.awt.Rectangle[] $r3, $r11;
        int i0, i1, i2, $i3, $i4, $i5, $i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, i32, i33, i34, i35;

        r1 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        r0 := @parameter0: java.awt.Graphics;

        i0 := @parameter1: int;

        i2 := @parameter2: int;

        z0 := @parameter3: boolean;

        i1 := @parameter4: int;

        i7 := @parameter5: int;

        tableswitch(i0)
        {
            case 1: goto label5;
            case 2: goto label1;
            case 3: goto label5;
            case 4: goto label1;
            default: goto label5;
        };

     label1:
        i32 = i1;

        $r2 = r1.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _shadow>;

        virtualinvoke r0.<java.awt.Graphics: void setColor(java.awt.Color)>($r2);

     label2:
        $r3 = r1.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r4 = $r3[i2];

        $i3 = $r4.<java.awt.Rectangle: int width>;

        $i4 = i1 + $i3;

        if i32 > $i4 goto label9;

        i33 = 0;

     label3:
        $r5 = r1.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int[] xCropLen>;

        $i5 = lengthof $r5;

        if i33 >= $i5 goto label4;

        $r6 = r1.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int[] yCropLen>;

        $i6 = $r6[i33];

        $i17 = i32 + $i6;

        $r7 = r1.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int[] xCropLen>;

        $i8 = $r7[i33];

        $i16 = i7 - $i8;

        $r8 = r1.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int[] yCropLen>;

        $i9 = i33 + 1;

        $i10 = $r8[$i9];

        $i11 = i32 + $i10;

        $i15 = $i11 - 1;

        $r9 = r1.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int[] xCropLen>;

        $i12 = i33 + 1;

        $i13 = $r9[$i12];

        $i14 = i7 - $i13;

        virtualinvoke r0.<java.awt.Graphics: void drawLine(int,int,int,int)>($i17, $i16, $i15, $i14);

        i33 = i33 + 2;

        goto label3;

     label4:
        i32 = i32 + 12;

        goto label2;

     label5:
        i34 = i7;

        $r10 = r1.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _shadow>;

        virtualinvoke r0.<java.awt.Graphics: void setColor(java.awt.Color)>($r10);

     label6:
        $r11 = r1.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r12 = $r11[i2];

        $i18 = $r12.<java.awt.Rectangle: int height>;

        $i19 = i7 + $i18;

        if i34 > $i19 goto label9;

        i35 = 0;

     label7:
        $r13 = r1.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int[] xCropLen>;

        $i20 = lengthof $r13;

        if i35 >= $i20 goto label8;

        $r14 = r1.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int[] xCropLen>;

        $i21 = $r14[i35];

        $i31 = i1 - $i21;

        $r15 = r1.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int[] yCropLen>;

        $i22 = $r15[i35];

        $i30 = i34 + $i22;

        $r16 = r1.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int[] xCropLen>;

        $i23 = i35 + 1;

        $i24 = $r16[$i23];

        $i29 = i1 - $i24;

        $r17 = r1.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int[] yCropLen>;

        $i25 = i35 + 1;

        $i26 = $r17[$i25];

        $i27 = i34 + $i26;

        $i28 = $i27 - 1;

        virtualinvoke r0.<java.awt.Graphics: void drawLine(int,int,int,int)>($i31, $i30, $i29, $i28);

        i35 = i35 + 2;

        goto label7;

     label8:
        i34 = i34 + 12;

        goto label6;

     label9:
        return;
    }

    protected void layoutLabel(int, java.awt.FontMetrics, int, java.lang.String, javax.swing.Icon, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, boolean)
    {
        javax.swing.text.View $r3;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r2;
        java.lang.String r5;
        javax.swing.JButton $r12, $r16;
        java.awt.FontMetrics r4;
        com.jidesoft.swing.JideTabbedPane $r8, $r9, $r10, $r14, $r18;
        boolean $z0, $z1, $z2, z3, $z4, $z5, $z6;
        javax.swing.Icon r6;
        java.awt.Dimension $r13, $r17;
        java.awt.Rectangle r0, r1, r7;
        int i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68;
        javax.swing.JButton[] $r11, $r15;

        r2 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        i2 := @parameter0: int;

        r4 := @parameter1: java.awt.FontMetrics;

        i0 := @parameter2: int;

        r5 := @parameter3: java.lang.String;

        r6 := @parameter4: javax.swing.Icon;

        r7 := @parameter5: java.awt.Rectangle;

        r1 := @parameter6: java.awt.Rectangle;

        r0 := @parameter7: java.awt.Rectangle;

        z3 := @parameter8: boolean;

        r1.<java.awt.Rectangle: int y> = 0;

        r1.<java.awt.Rectangle: int x> = 0;

        r0.<java.awt.Rectangle: int y> = 0;

        r0.<java.awt.Rectangle: int x> = 0;

        $r3 = virtualinvoke r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.text.View getTextViewForTab(int)>(i0);

        if $r3 == null goto label01;

        $r18 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        virtualinvoke $r18.<com.jidesoft.swing.JideTabbedPane: void putClientProperty(java.lang.Object,java.lang.Object)>("html", $r3);

     label01:
        $r8 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i1 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _textIconGap>;

        staticinvoke <javax.swing.SwingUtilities: java.lang.String layoutCompoundLabel(javax.swing.JComponent,java.awt.FontMetrics,java.lang.String,javax.swing.Icon,int,int,int,int,java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle,int)>($r8, r4, r5, r6, 0, 0, 0, 11, r7, r1, r0, $i1);

        $r9 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        virtualinvoke $r9.<com.jidesoft.swing.JideTabbedPane: void putClientProperty(java.lang.Object,java.lang.Object)>("html", null);

        if i2 == 1 goto label02;

        if i2 != 3 goto label08;

     label02:
        $i4 = r1.<java.awt.Rectangle: int x>;

        $i3 = r7.<java.awt.Rectangle: int x>;

        $i6 = $i4 - $i3;

        $i5 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _iconMargin>;

        if $i6 >= $i5 goto label07;

        $i13 = r7.<java.awt.Rectangle: int x>;

        $i12 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _iconMargin>;

        $i14 = $i13 + $i12;

        r1.<java.awt.Rectangle: int x> = $i14;

        if r6 == null goto label03;

        $i31 = r1.<java.awt.Rectangle: int x>;

        $i30 = r1.<java.awt.Rectangle: int width>;

        $i33 = $i31 + $i30;

        $i32 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _textIconGap>;

        $i64 = $i33 + $i32;

        goto label04;

     label03:
        $i16 = r7.<java.awt.Rectangle: int x>;

        $i15 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _textPadding>;

        $i64 = $i16 + $i15;

     label04:
        r0.<java.awt.Rectangle: int x> = $i64;

        $i20 = r1.<java.awt.Rectangle: int width>;

        $i18 = r7.<java.awt.Rectangle: int width>;

        $i17 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _tabRectPadding>;

        $i19 = $i18 - $i17;

        $i21 = staticinvoke <java.lang.Math: int min(int,int)>($i20, $i19);

        r1.<java.awt.Rectangle: int width> = $i21;

        $i23 = r7.<java.awt.Rectangle: int width>;

        $i22 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _tabRectPadding>;

        $i25 = $i23 - $i22;

        $i24 = r1.<java.awt.Rectangle: int width>;

        $i26 = $i25 - $i24;

        if r6 == null goto label05;

        $i29 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _textIconGap>;

        $i28 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _iconMargin>;

        $i65 = $i29 + $i28;

        goto label06;

     label05:
        $i65 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _noIconMargin>;

     label06:
        $i27 = $i26 - $i65;

        r0.<java.awt.Rectangle: int width> = $i27;

     label07:
        $i66 = virtualinvoke r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getTabResizeMode()>();

        if $i66 != 4 goto label13;

        $z0 = virtualinvoke r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean isShowCloseButton()>();

        if $z0 == 0 goto label13;

        $z1 = virtualinvoke r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean isShowCloseButtonOnTab()>();

        if $z1 == 0 goto label13;

        $r10 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z2 = virtualinvoke $r10.<com.jidesoft.swing.JideTabbedPane: boolean isShowCloseButtonOnSelectedTab()>();

        if $z2 != 0 goto label13;

        if z3 != 0 goto label13;

        $i7 = r1.<java.awt.Rectangle: int width>;

        $r11 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.JButton[] _closeButtons>;

        $r12 = $r11[i0];

        $r13 = virtualinvoke $r12.<javax.swing.JButton: java.awt.Dimension getPreferredSize()>();

        $i8 = $r13.<java.awt.Dimension: int width>;

        $i10 = $i7 + $i8;

        $i9 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _closeButtonMarginHorizon>;

        $i11 = $i10 + $i9;

        r1.<java.awt.Rectangle: int width> = $i11;

        r0.<java.awt.Rectangle: int width> = 0;

        goto label13;

     label08:
        $i35 = r7.<java.awt.Rectangle: int y>;

        $i34 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _iconMargin>;

        $i36 = $i35 + $i34;

        r1.<java.awt.Rectangle: int y> = $i36;

        if r6 == null goto label09;

        $i61 = r1.<java.awt.Rectangle: int y>;

        $i60 = r1.<java.awt.Rectangle: int height>;

        $i63 = $i61 + $i60;

        $i62 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _textIconGap>;

        $i67 = $i63 + $i62;

        goto label10;

     label09:
        $i38 = r7.<java.awt.Rectangle: int y>;

        $i37 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _textPadding>;

        $i67 = $i38 + $i37;

     label10:
        r0.<java.awt.Rectangle: int y> = $i67;

        $i39 = r7.<java.awt.Rectangle: int x>;

        $i40 = $i39 + 2;

        r1.<java.awt.Rectangle: int x> = $i40;

        $i41 = r7.<java.awt.Rectangle: int x>;

        $i42 = $i41 + 2;

        r0.<java.awt.Rectangle: int x> = $i42;

        $i44 = r7.<java.awt.Rectangle: int width>;

        $i43 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _textMarginVertical>;

        $i45 = $i44 - $i43;

        r0.<java.awt.Rectangle: int width> = $i45;

        $i47 = r7.<java.awt.Rectangle: int height>;

        $i46 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _tabRectPadding>;

        $i49 = $i47 - $i46;

        $i48 = r1.<java.awt.Rectangle: int height>;

        $i50 = $i49 - $i48;

        if r6 == null goto label11;

        $i59 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _textIconGap>;

        $i58 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _iconMargin>;

        $i68 = $i59 + $i58;

        goto label12;

     label11:
        $i68 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _noIconMargin>;

     label12:
        $i51 = $i50 - $i68;

        r0.<java.awt.Rectangle: int height> = $i51;

        $i52 = virtualinvoke r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getTabResizeMode()>();

        if $i52 != 4 goto label13;

        $z4 = virtualinvoke r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean isShowCloseButton()>();

        if $z4 == 0 goto label13;

        $z5 = virtualinvoke r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean isShowCloseButtonOnTab()>();

        if $z5 == 0 goto label13;

        $r14 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z6 = virtualinvoke $r14.<com.jidesoft.swing.JideTabbedPane: boolean isShowCloseButtonOnSelectedTab()>();

        if $z6 != 0 goto label13;

        if z3 != 0 goto label13;

        $i53 = r1.<java.awt.Rectangle: int height>;

        $r15 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.JButton[] _closeButtons>;

        $r16 = $r15[i0];

        $r17 = virtualinvoke $r16.<javax.swing.JButton: java.awt.Dimension getPreferredSize()>();

        $i54 = $r17.<java.awt.Dimension: int height>;

        $i56 = $i53 + $i54;

        $i55 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _closeButtonMarginVertical>;

        $i57 = $i56 + $i55;

        r1.<java.awt.Rectangle: int height> = $i57;

        r0.<java.awt.Rectangle: int height> = 0;

     label13:
        return;
    }

    protected void paintIcon(java.awt.Graphics, int, int, javax.swing.Icon, java.awt.Rectangle, boolean)
    {
        com.jidesoft.swing.JideTabbedPane $r4, $r7;
        java.awt.Rectangle r1, $r6;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r2;
        java.awt.Rectangle[] $r5;
        int $i0, $i1, i2, $i3, $i4, i5, $i6, $i7, $i8, $i9, $i10, $i11;
        boolean z0;
        javax.swing.Icon r0;
        java.awt.Graphics r3;

        r2 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        r3 := @parameter0: java.awt.Graphics;

        i2 := @parameter1: int;

        i5 := @parameter2: int;

        r0 := @parameter3: javax.swing.Icon;

        r1 := @parameter4: java.awt.Rectangle;

        z0 := @parameter5: boolean;

        if r0 == null goto label3;

        $i0 = r1.<java.awt.Rectangle: int width>;

        $i1 = interfaceinvoke r0.<javax.swing.Icon: int getIconWidth()>();

        if $i0 < $i1 goto label3;

        if i2 == 1 goto label1;

        if i2 != 3 goto label2;

     label1:
        $r4 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i4 = r1.<java.awt.Rectangle: int x>;

        $i3 = r1.<java.awt.Rectangle: int y>;

        interfaceinvoke r0.<javax.swing.Icon: void paintIcon(java.awt.Component,java.awt.Graphics,int,int)>($r4, r3, $i4, $i3);

        goto label3;

     label2:
        $i9 = r1.<java.awt.Rectangle: int height>;

        $r5 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r6 = $r5[i5];

        $i7 = $r6.<java.awt.Rectangle: int height>;

        $i6 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _gripperHeight>;

        $i8 = $i7 - $i6;

        if $i9 >= $i8 goto label3;

        $r7 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i11 = r1.<java.awt.Rectangle: int x>;

        $i10 = r1.<java.awt.Rectangle: int y>;

        interfaceinvoke r0.<javax.swing.Icon: void paintIcon(java.awt.Component,java.awt.Graphics,int,int)>($r7, r3, $i11, $i10);

     label3:
        return;
    }

    protected void paintText(java.awt.Graphics, int, java.awt.Font, java.awt.FontMetrics, int, java.lang.String, java.awt.Rectangle, boolean)
    {
        java.awt.Color $r11, $r12, $r15, $r16, $r20, $r21, $r24, $r25, $r29, $r33, $r34, $r36, r55;
        byte $b75;
        java.lang.StringBuilder $r40, $r42, $r43, $r44, $r46, $r47;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r7;
        java.awt.Graphics2D r2;
        int i0, $i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74;
        com.jidesoft.swing.JideTabbedPane$ColorProvider $r54;
        java.awt.geom.AffineTransform $r18, $r31;
        java.awt.Component r52;
        javax.swing.text.View $r51;
        com.jidesoft.swing.TabColorProvider $r37;
        java.lang.String r4, $r27, $r41, $r45, r50;
        java.awt.FontMetrics r6;
        com.jidesoft.swing.JideTabbedPane $r8, $r9, $r10, $r13, $r14, $r17, $r19, $r22, $r23, $r26, $r28, $r30, $r32, $r35, $r38, $r39, $r48, $r53;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        java.awt.Font r3, $r49;
        java.awt.Graphics r0, $r1;
        java.awt.Rectangle r5;

        r7 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        r0 := @parameter0: java.awt.Graphics;

        i0 := @parameter1: int;

        r3 := @parameter2: java.awt.Font;

        r6 := @parameter3: java.awt.FontMetrics;

        i4 := @parameter4: int;

        r4 := @parameter5: java.lang.String;

        r5 := @parameter6: java.awt.Rectangle;

        z0 := @parameter7: boolean;

        $r1 = virtualinvoke r0.<java.awt.Graphics: java.awt.Graphics create()>();

        r2 = (java.awt.Graphics2D) $r1;

        if z0 == 0 goto label01;

        $r48 = r7.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z9 = virtualinvoke $r48.<com.jidesoft.swing.JideTabbedPane: boolean isBoldActiveTab()>();

        if $z9 == 0 goto label01;

        $r49 = virtualinvoke r3.<java.awt.Font: java.awt.Font deriveFont(int)>(1);

        virtualinvoke r2.<java.awt.Graphics2D: void setFont(java.awt.Font)>($r49);

        goto label02;

     label01:
        virtualinvoke r2.<java.awt.Graphics2D: void setFont(java.awt.Font)>(r3);

     label02:
        r50 = r4;

        if i0 == 1 goto label03;

        if i0 != 3 goto label07;

     label03:
        $i1 = r5.<java.awt.Rectangle: int width>;

        if $i1 > 0 goto label04;

        return;

     label04:
        $i2 = staticinvoke <javax.swing.SwingUtilities: int computeStringWidth(java.awt.FontMetrics,java.lang.String)>(r6, r50);

        $i3 = r5.<java.awt.Rectangle: int width>;

        if $i2 <= $i3 goto label05;

        $i65 = virtualinvoke r50.<java.lang.String: int length()>();

        $i66 = $i65 - 1;

        r50 = virtualinvoke r50.<java.lang.String: java.lang.String substring(int,int)>(0, $i66);

        goto label04;

     label05:
        $z1 = virtualinvoke r50.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z1 != 0 goto label11;

        $i62 = virtualinvoke r50.<java.lang.String: int length()>();

        if $i62 < 2 goto label06;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $i63 = virtualinvoke r50.<java.lang.String: int length()>();

        $i64 = $i63 - 2;

        $r41 = virtualinvoke r50.<java.lang.String: java.lang.String substring(int,int)>(0, $i64);

        $r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("..");

        r50 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label11;

     label06:
        r50 = "";

        goto label11;

     label07:
        $i67 = r5.<java.awt.Rectangle: int height>;

        if $i67 > 0 goto label08;

        return;

     label08:
        $i68 = staticinvoke <javax.swing.SwingUtilities: int computeStringWidth(java.awt.FontMetrics,java.lang.String)>(r6, r50);

        $i69 = r5.<java.awt.Rectangle: int height>;

        if $i68 <= $i69 goto label09;

        $i73 = virtualinvoke r50.<java.lang.String: int length()>();

        $i74 = $i73 - 1;

        r50 = virtualinvoke r50.<java.lang.String: java.lang.String substring(int,int)>(0, $i74);

        goto label08;

     label09:
        $z8 = virtualinvoke r50.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z8 != 0 goto label11;

        $i70 = virtualinvoke r50.<java.lang.String: int length()>();

        if $i70 < 2 goto label10;

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $i71 = virtualinvoke r50.<java.lang.String: int length()>();

        $i72 = $i71 - 2;

        $r45 = virtualinvoke r50.<java.lang.String: java.lang.String substring(int,int)>(0, $i72);

        $r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("..");

        r50 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label11;

     label10:
        r50 = "";

     label11:
        $r51 = virtualinvoke r7.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.text.View getTextViewForTab(int)>(i4);

        if $r51 == null goto label12;

        virtualinvoke $r51.<javax.swing.text.View: void paint(java.awt.Graphics,java.awt.Shape)>(r2, r5);

        goto label34;

     label12:
        $r8 = r7.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i5 = virtualinvoke $r8.<com.jidesoft.swing.JideTabbedPane: int getDisplayedMnemonicIndexAt(int)>(i4);

        r52 = null;

        if i4 < 0 goto label13;

        $r38 = r7.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i61 = virtualinvoke $r38.<com.jidesoft.swing.JideTabbedPane: int getTabCount()>();

        if i4 >= $i61 goto label13;

        $r39 = r7.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        r52 = virtualinvoke $r39.<com.jidesoft.swing.JideTabbedPane: java.awt.Component getComponentAt(int)>(i4);

     label13:
        $r53 = r7.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r54 = virtualinvoke $r53.<com.jidesoft.swing.JideTabbedPane: com.jidesoft.swing.JideTabbedPane$ColorProvider getTabColorProvider()>();

        r55 = null;

        $z10 = r52 instanceof com.jidesoft.swing.TabColorProvider;

        if $z10 == 0 goto label14;

        $r37 = (com.jidesoft.swing.TabColorProvider) r52;

        r55 = interfaceinvoke $r37.<com.jidesoft.swing.TabColorProvider: java.awt.Color getTabForeground()>();

     label14:
        $r9 = r7.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z2 = virtualinvoke $r9.<com.jidesoft.swing.JideTabbedPane: boolean isEnabled()>();

        if $z2 == 0 goto label27;

        $r28 = r7.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z3 = virtualinvoke $r28.<com.jidesoft.swing.JideTabbedPane: boolean isEnabledAt(int)>(i4);

        if $z3 == 0 goto label27;

        if r55 != null goto label15;

        if $r54 == null goto label15;

        $r36 = interfaceinvoke $r54.<com.jidesoft.swing.JideTabbedPane$ColorProvider: java.awt.Color getForegroudAt(int)>(i4);

        virtualinvoke r2.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r36);

        goto label22;

     label15:
        if r55 != null goto label16;

        $r35 = r7.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        r55 = virtualinvoke $r35.<com.jidesoft.swing.JideTabbedPane: java.awt.Color getForegroundAt(int)>(i4);

     label16:
        if z0 == 0 goto label18;

        $z6 = virtualinvoke r7.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean showFocusIndicator()>();

        if $z6 == 0 goto label18;

        $z7 = r55 instanceof javax.swing.plaf.ColorUIResource;

        if $z7 != 0 goto label17;

        virtualinvoke r2.<java.awt.Graphics2D: void setColor(java.awt.Color)>(r55);

        goto label22;

     label17:
        $r34 = r7.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _activeTabForeground>;

        virtualinvoke r2.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r34);

        goto label22;

     label18:
        if z0 == 0 goto label20;

        $z5 = r55 instanceof javax.swing.plaf.ColorUIResource;

        if $z5 != 0 goto label19;

        virtualinvoke r2.<java.awt.Graphics2D: void setColor(java.awt.Color)>(r55);

        goto label22;

     label19:
        $r33 = r7.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _inactiveSelectedTabForeground>;

        virtualinvoke r2.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r33);

        goto label22;

     label20:
        $z4 = r55 instanceof javax.swing.plaf.ColorUIResource;

        if $z4 != 0 goto label21;

        virtualinvoke r2.<java.awt.Graphics2D: void setColor(java.awt.Color)>(r55);

        goto label22;

     label21:
        $r29 = r7.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _inactiveTabForeground>;

        virtualinvoke r2.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r29);

     label22:
        if i0 == 1 goto label23;

        if i0 != 3 goto label24;

     label23:
        $r30 = r7.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i40 = r5.<java.awt.Rectangle: int x>;

        $i41 = r5.<java.awt.Rectangle: int y>;

        $i42 = virtualinvoke r6.<java.awt.FontMetrics: int getAscent()>();

        $i43 = $i41 + $i42;

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void drawStringUnderlineCharAt(javax.swing.JComponent,java.awt.Graphics,java.lang.String,int,int,int)>($r30, r2, r50, $i5, $i40, $i43);

        goto label34;

     label24:
        $r31 = virtualinvoke r2.<java.awt.Graphics2D: java.awt.geom.AffineTransform getTransform()>();

        $i45 = r5.<java.awt.Rectangle: int x>;

        $i44 = r5.<java.awt.Rectangle: int y>;

        virtualinvoke r2.<java.awt.Graphics2D: void translate(int,int)>($i45, $i44);

        if i0 != 4 goto label25;

        virtualinvoke r2.<java.awt.Graphics2D: void rotate(double)>(1.5707963267948966);

        $i59 = r5.<java.awt.Rectangle: int width>;

        $i60 = neg $i59;

        virtualinvoke r2.<java.awt.Graphics2D: void translate(int,int)>(0, $i60);

        goto label26;

     label25:
        virtualinvoke r2.<java.awt.Graphics2D: void rotate(double)>(-1.5707963267948966);

        $i46 = r5.<java.awt.Rectangle: int height>;

        $i47 = neg $i46;

        $i48 = virtualinvoke r6.<java.awt.FontMetrics: int getHeight()>();

        $i49 = $i48 / 2;

        $i51 = $i47 + $i49;

        $i50 = r7.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _rectSizeExtend>;

        $i52 = $i51 + $i50;

        virtualinvoke r2.<java.awt.Graphics2D: void translate(int,int)>($i52, 0);

     label26:
        $r32 = r7.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i53 = r5.<java.awt.Rectangle: int width>;

        $i54 = virtualinvoke r6.<java.awt.FontMetrics: int getHeight()>();

        $i55 = $i53 - $i54;

        $i56 = $i55 / 2;

        $i57 = virtualinvoke r6.<java.awt.FontMetrics: int getAscent()>();

        $i58 = $i56 + $i57;

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void drawStringUnderlineCharAt(javax.swing.JComponent,java.awt.Graphics,java.lang.String,int,int,int)>($r32, r2, r50, $i5, 0, $i58);

        virtualinvoke r2.<java.awt.Graphics2D: void setTransform(java.awt.geom.AffineTransform)>($r31);

        goto label34;

     label27:
        if i0 == 1 goto label28;

        if i0 != 3 goto label29;

     label28:
        $r10 = r7.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r11 = virtualinvoke $r10.<com.jidesoft.swing.JideTabbedPane: java.awt.Color getBackgroundAt(int)>(i4);

        $r12 = virtualinvoke $r11.<java.awt.Color: java.awt.Color brighter()>();

        virtualinvoke r2.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r12);

        $r13 = r7.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i6 = r5.<java.awt.Rectangle: int x>;

        $i7 = r5.<java.awt.Rectangle: int y>;

        $i8 = virtualinvoke r6.<java.awt.FontMetrics: int getAscent()>();

        $i9 = $i7 + $i8;

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void drawStringUnderlineCharAt(javax.swing.JComponent,java.awt.Graphics,java.lang.String,int,int,int)>($r13, r2, r50, $i5, $i6, $i9);

        $r14 = r7.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r15 = virtualinvoke $r14.<com.jidesoft.swing.JideTabbedPane: java.awt.Color getBackgroundAt(int)>(i4);

        $r16 = virtualinvoke $r15.<java.awt.Color: java.awt.Color darker()>();

        virtualinvoke r2.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r16);

        $r17 = r7.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i10 = r5.<java.awt.Rectangle: int x>;

        $i11 = $i10 - 1;

        $i12 = r5.<java.awt.Rectangle: int y>;

        $i13 = virtualinvoke r6.<java.awt.FontMetrics: int getAscent()>();

        $i14 = $i12 + $i13;

        $i15 = $i14 - 1;

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void drawStringUnderlineCharAt(javax.swing.JComponent,java.awt.Graphics,java.lang.String,int,int,int)>($r17, r2, r50, $i5, $i11, $i15);

        goto label34;

     label29:
        $r18 = virtualinvoke r2.<java.awt.Graphics2D: java.awt.geom.AffineTransform getTransform()>();

        $i17 = r5.<java.awt.Rectangle: int x>;

        $i16 = r5.<java.awt.Rectangle: int y>;

        virtualinvoke r2.<java.awt.Graphics2D: void translate(int,int)>($i17, $i16);

        if i0 != 4 goto label30;

        virtualinvoke r2.<java.awt.Graphics2D: void rotate(double)>(1.5707963267948966);

        $i38 = r5.<java.awt.Rectangle: int width>;

        $i39 = neg $i38;

        virtualinvoke r2.<java.awt.Graphics2D: void translate(int,int)>(0, $i39);

        goto label31;

     label30:
        virtualinvoke r2.<java.awt.Graphics2D: void rotate(double)>(-1.5707963267948966);

        $i18 = r5.<java.awt.Rectangle: int height>;

        $i19 = neg $i18;

        $i20 = virtualinvoke r6.<java.awt.FontMetrics: int getHeight()>();

        $i21 = $i20 / 2;

        $i23 = $i19 + $i21;

        $i22 = r7.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _rectSizeExtend>;

        $i24 = $i23 + $i22;

        virtualinvoke r2.<java.awt.Graphics2D: void translate(int,int)>($i24, 0);

     label31:
        $r19 = r7.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r20 = virtualinvoke $r19.<com.jidesoft.swing.JideTabbedPane: java.awt.Color getBackgroundAt(int)>(i4);

        $r21 = virtualinvoke $r20.<java.awt.Color: java.awt.Color brighter()>();

        virtualinvoke r2.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r21);

        $r22 = r7.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i25 = r5.<java.awt.Rectangle: int width>;

        $i26 = virtualinvoke r6.<java.awt.FontMetrics: int getHeight()>();

        $i27 = $i25 - $i26;

        $i28 = $i27 / 2;

        $i29 = virtualinvoke r6.<java.awt.FontMetrics: int getAscent()>();

        $i30 = $i28 + $i29;

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void drawStringUnderlineCharAt(javax.swing.JComponent,java.awt.Graphics,java.lang.String,int,int,int)>($r22, r2, r50, $i5, 0, $i30);

        $r23 = r7.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r24 = virtualinvoke $r23.<com.jidesoft.swing.JideTabbedPane: java.awt.Color getBackgroundAt(int)>(i4);

        $r25 = virtualinvoke $r24.<java.awt.Color: java.awt.Color darker()>();

        virtualinvoke r2.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r25);

        $r26 = r7.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r27 = r50;

        if i0 != 4 goto label32;

        $b75 = -1;

        goto label33;

     label32:
        $b75 = 1;

     label33:
        $i31 = r5.<java.awt.Rectangle: int width>;

        $i32 = virtualinvoke r6.<java.awt.FontMetrics: int getHeight()>();

        $i33 = $i31 - $i32;

        $i34 = $i33 / 2;

        $i35 = virtualinvoke r6.<java.awt.FontMetrics: int getAscent()>();

        $i36 = $i34 + $i35;

        $i37 = $i36 - 1;

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void drawStringUnderlineCharAt(javax.swing.JComponent,java.awt.Graphics,java.lang.String,int,int,int)>($r26, r2, $r27, $i5, $b75, $i37);

        virtualinvoke r2.<java.awt.Graphics2D: void setTransform(java.awt.geom.AffineTransform)>($r18);

     label34:
        virtualinvoke r2.<java.awt.Graphics2D: void dispose()>();

        return;
    }

    protected void paintTabBorder(java.awt.Graphics, int, int, int, int, int, int, boolean)
    {
        com.jidesoft.swing.JideTabbedPane $r1, $r3, $r4;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        int $i0, i1, $i2, $i3, i4, i5, i6, i7, i8, $i9, $i10, $i11, $i12;
        boolean z0, $z1, $z2, $z3, $z4;
        java.awt.Graphics r2;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        r2 := @parameter0: java.awt.Graphics;

        i4 := @parameter1: int;

        i1 := @parameter2: int;

        i5 := @parameter3: int;

        i6 := @parameter4: int;

        i7 := @parameter5: int;

        i8 := @parameter6: int;

        z0 := @parameter7: boolean;

        $i0 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getTabShape()>();

        tableswitch($i0)
        {
            case 1: goto label03;
            case 2: goto label05;
            case 3: goto label01;
            case 4: goto label09;
            case 5: goto label07;
            case 6: goto label09;
            case 7: goto label09;
            case 8: goto label02;
            case 9: goto label06;
            case 10: goto label08;
            case 11: goto label04;
            default: goto label09;
        };

     label01:
        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void paintBoxTabBorder(java.awt.Graphics,int,int,int,int,int,int,boolean)>(r2, i4, i1, i5, i6, i7, i8, z0);

        goto label10;

     label02:
        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void paintExcelTabBorder(java.awt.Graphics,int,int,int,int,int,int,boolean)>(r2, i4, i1, i5, i6, i7, i8, z0);

        goto label10;

     label03:
        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void paintWindowsTabBorder(java.awt.Graphics,int,int,int,int,int,int,boolean)>(r2, i4, i1, i5, i6, i7, i8, z0);

        goto label10;

     label04:
        if z0 == 0 goto label10;

        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void paintWindowsTabBorder(java.awt.Graphics,int,int,int,int,int,int,boolean)>(r2, i4, i1, i5, i6, i7, i8, z0);

        goto label10;

     label05:
        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void paintVsnetTabBorder(java.awt.Graphics,int,int,int,int,int,int,boolean)>(r2, i4, i1, i5, i6, i7, i8, z0);

        goto label10;

     label06:
        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void paintRoundedVsnetTabBorder(java.awt.Graphics,int,int,int,int,int,int,boolean)>(r2, i4, i1, i5, i6, i7, i8, z0);

        goto label10;

     label07:
        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void paintFlatTabBorder(java.awt.Graphics,int,int,int,int,int,int,boolean)>(r2, i4, i1, i5, i6, i7, i8, z0);

        goto label10;

     label08:
        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void paintRoundedFlatTabBorder(java.awt.Graphics,int,int,int,int,int,int,boolean)>(r2, i4, i1, i5, i6, i7, i8, z0);

        goto label10;

     label09:
        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void paintOffice2003TabBorder(java.awt.Graphics,int,int,int,int,int,int,boolean)>(r2, i4, i1, i5, i6, i7, i8, z0);

     label10:
        $i12 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getTabShape()>();

        if $i12 != 1 goto label11;

        $z3 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean _mouseEnter>;

        if $z3 == 0 goto label12;

        $r3 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i9 = virtualinvoke $r3.<com.jidesoft.swing.JideTabbedPane: int getColorTheme()>();

        if $i9 != 4 goto label12;

        $i10 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _indexMouseOver>;

        if i1 != $i10 goto label12;

        if z0 != 0 goto label12;

        $r4 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i11 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _indexMouseOver>;

        $z4 = virtualinvoke $r4.<com.jidesoft.swing.JideTabbedPane: boolean isEnabledAt(int)>($i11);

        if $z4 == 0 goto label12;

        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void paintTabBorderMouseOver(java.awt.Graphics,int,int,int,int,int,int,boolean)>(r2, i4, i1, i5, i6, i7, i8, z0);

        goto label12;

     label11:
        if $i12 != 11 goto label12;

        $z1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean _mouseEnter>;

        if $z1 == 0 goto label12;

        $i2 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _indexMouseOver>;

        if i1 != $i2 goto label12;

        if z0 != 0 goto label12;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i3 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _indexMouseOver>;

        $z2 = virtualinvoke $r1.<com.jidesoft.swing.JideTabbedPane: boolean isEnabledAt(int)>($i3);

        if $z2 == 0 goto label12;

        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void paintTabBorderMouseOver(java.awt.Graphics,int,int,int,int,int,int,boolean)>(r2, i4, i1, i5, i6, i7, i8, z0);

     label12:
        return;
    }

    protected void paintOffice2003TabBorder(java.awt.Graphics, int, int, int, int, int, int, boolean)
    {
        java.awt.Graphics r3;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        int i0, i1, i2, i3, $i4, $i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $i105, $i106, $i107, $i108, $i109, $i110, $i111, $i112, $i113, $i114, $i115, $i116, $i117, $i118, $i119, $i120, $i121, $i122, $i123, $i124, $i125, $i126, $i127, $i128, $i129, $i130, $i131, $i132, $i133, $i134, $i135, $i136, $i137, $i138, $i139, $i140, $i141, $i142, $i143, $i144, $i145, $i146, $i147, $i148, $i149, $i150, $i151, $i152, $i153, $i154, $i155, $i156, $i157, $i158, $i159, $i160, $i161, $i162, $i163, $i164, $i165, $i166, $i167, $i168, $i169, $i170, $i171, $i172, $i173, $i174, $i175, $i176, $i177, $i178, $i179, $i180, $i181, $i182, $i183, $i184, $i185, $i186, $i187, $i188, $i189, $i190, $i191, $i192, $i193, $i194, $i195, $i196, $i197, $i198, $i199, $i200, $i201, $i202, $i203, $i204, $i205, $i206, $i207, $i208, $i209, $i210, $i211, $i212, $i213, $i214, $i215, $i216, $i217, $i218, $i219, $i220, $i221, $i222, $i223, $i224, $i225, $i226, $i227, $i228, $i229, $i230, $i231, $i232, $i233, $i234, $i235, $i236, $i237, $i238, $i239, $i240, $i241, $i242, $i243, $i244, $i245, $i246, $i247, $i248, $i249, $i250, $i251, $i252, $i253, $i254, $i255, $i256, $i257, $i258, $i259, $i260, $i261, $i262, $i263, $i264, $i265, $i266, $i267, $i268, $i269, $i270, $i271, $i272, $i273, $i274, $i275, $i276, $i277, $i278, $i279, $i280, $i281, $i282, $i283, $i284, $i285, $i286, $i287, $i288, $i289, $i290, $i291, $i292, $i293, $i294, $i295, $i296, $i297, $i298, $i299, $i300, $i301, $i302, $i303, $i304, $i305, $i306, $i307, $i308, $i309, $i310, $i311, $i312, $i313, $i314, $i315, $i316, $i317, $i318, $i319, $i320, $i321, $i322, $i323, $i324, $i325, $i326, $i327, $i328, $i329, $i330, $i331, $i332, $i333, $i334, $i335, $i336, $i337, $i338, $i339, $i340, $i341, $i342, $i343, $i344, $i345, $i346, $i347, $i348, $i349, $i350, $i351, $i352, $i353, $i354, $i355, $i356, $i357, $i358, $i359, $i360, $i361, $i362, $i363, $i364, $i365, $i366, $i367, $i368, $i369, $i370, $i371, $i372, $i373, $i374, $i375, $i376, $i377, $i378, $i379, $i380, $i381, $i382, $i383, $i384, $i385, $i386, $i387, $i388, $i389, $i390, $i391, $i392, $i393, $i394, $i395, $i396, $i397, $i398, $i399, $i400, $i401, $i402, $i403, $i404, $i405, $i406, $i407, $i408, $i409, $i410, $i411, $i412, $i413, $i414, $i415, $i416, $i417, $i418, $i419, $i420, $i421, $i422, $i423, $i424, $i425, $i426, $i427, $i428, $i429, $i430, $i431, $i432, $i433, $i434, $i435, $i436, $i437, $i438, $i439, $i440, $i441, $i442, $i443, $i444, $i445, $i446, $i447, $i448, $i449, $i450, $i451, $i452, $i453, $i454, $i455, $i456, $i457, $i458, $i459, $i460, $i461, $i462, $i463, $i464, $i465, $i466, $i467, $i468, $i469, $i470, $i471, $i472, $i473, $i474, $i475, $i476, $i477, $i478, $i479, $i480, $i481, $i482, $i483, $i484, $i485, $i486, $i487, $i488, $i489, $i490, $i491, $i492, $i493, $i494, $i495, $i496, $i497, $i498, $i499, $i500, $i501, $i502, $i503, $i504, $i505, $i506, $i507, $i508, $i509, $i510, $i511, $i512, $i513, $i514, $i515, $i516, $i517, $i518, $i519, $i520, $i521, $i522, $i523, $i524, $i525, $i526, $i527, $i528, $i529, $i530, $i531, $i532, $i533, $i534, $i535, $i536, $i537, $i538, $i539, $i540, $i541, $i542, $i543, $i544, $i545, $i546, $i547, $i548, $i549, $i550, $i551, $i552, $i553, $i554, $i555, $i556, $i557, $i558, $i559, $i560, $i561, $i562, $i563, $i564, $i565, $i566, $i567, $i568, $i569, $i570, $i571, $i572, $i573, $i574, $i575, $i576, $i577, $i578, $i579, $i580, $i581, $i582, $i583, $i584, $i585, $i586, $i587, $i588, $i589, $i590, $i591, $i592, $i593, $i594, $i595, $i596, $i597, $i598, $i599, $i600, $i601, $i602, $i603, $i604, $i605, $i606, $i607, $i608, $i609, $i610, $i611, $i612, $i613, $i614, $i615, $i616, $i617, $i618, $i619, $i620, $i621, $i622, $i623, $i624, $i625, $i626, $i627, $i628, $i629, $i630, $i631, $i632, $i633, $i634, $i635, $i636, $i637, $i638, $i639, $i640, $i641, $i642, $i643, $i644, $i645, $i646, $i647, $i648, $i649, $i650, $i651, $i652, $i653, $i654, $i655, $i656, $i657, $i658, $i659, $i660, $i661, $i662, $i663, $i664, $i665, $i666, $i667, $i668, $i669, $i670, $i671, $i672, $i673, $i674, $i675, $i676, $i677, $i678, $i679, $i680, $i681, $i682, $i683, $i684, $i685, $i686, $i687, $i688, $i689, $i690, $i691, $i692, $i693, $i694, $i695, $i696, $i697, $i698, $i699, $i700, $i701, $i702, $i703, $i704, $i705, $i706, $i707, $i708, $i709, $i710, $i711, $i712, $i713, $i714, $i715, $i716, $i717, $i718, $i719, $i720, $i721, $i722, $i723, $i724, $i725, $i726, $i727, $i728, $i729, $i730, $i731, $i732, $i733, $i734, $i735, $i736, $i737, $i738, $i739, $i740, $i741, $i742, $i743, $i744, $i745, $i746, $i747, $i748, $i749, $i750, $i751, $i752, $i753, $i754, $i755, $i756, $i757, $i758, $i759, $i760, $i761, $i762, $i763, $i764, $i765, $i766, $i767, $i768, $i769, $i770, $i771, $i772, $i773, $i774, $i775, $i776, $i777, $i778, $i779, $i780, $i781, $i782, $i783, $i784, $i785, $i786, $i787, $i788, $i789, $i790, $i791, $i792, $i793, $i794, $i795, $i796, $i797, $i798, $i799, $i800, $i801, $i802, $i803, $i804, $i805, $i806, $i807, $i808, $i809, $i810, $i811, $i812, $i813, $i814, $i815, $i816, $i817, $i818, $i819, $i820, $i821, $i822, $i823, $i824, $i825, $i826, $i827, $i828, $i829, $i830, $i831, $i832, $i833, $i834, $i835, $i836, $i837, $i838, $i839, $i840, $i841, $i842, $i843, $i844, $i845, $i846, $i847, $i848, $i849, $i850, $i851, $i852, $i853, $i854, $i855, $i856, $i857, $i858, $i859, $i860, $i861, $i862, $i863, $i864, $i865, $i866, $i867, $i868, $i869, $i870, $i871, $i872, $i873, $i874, $i875, $i876, $i877, $i878, $i879, $i880, $i881, $i882, $i883, $i884, $i885, $i886, $i887, $i888, $i889, $i890, $i891, $i892, $i893, $i894, $i895, $i896, $i897, $i898, $i899, $i900, $i901, $i902, $i903, $i904, $i905, $i906, $i907, $i908, $i909, $i910, $i911, $i912, $i913, $i914, $i915, $i916, $i917, $i918, $i919, $i920, $i921, $i922, $i923, $i924, $i925, $i926, $i927, $i928, $i929, $i930, $i931, $i932, $i933, $i934, $i935, $i936, $i937, $i938, $i939, $i940, $i941, $i942, $i943, $i944, $i945, $i946, $i947, $i948, $i949, $i950, $i951, $i952, $i953, $i954, $i955, $i956, $i957, $i958, $i959, $i960, $i961, $i962, $i963, $i964, $i965, $i966, $i967, $i968, $i969, $i970, $i971, $i972, $i973, $i974, $i975, $i976, $i977, $i978, $i979, $i980, $i981, $i982, $i983, $i984, $i985, $i986, $i987, $i988, $i989, $i990, $i991, $i992, $i993, $i994, $i995, $i996, $i997, $i998, $i999, $i1000, $i1001, $i1002, $i1003, $i1004, $i1005, $i1006, $i1007, $i1008, $i1009, $i1010, $i1011, $i1012, $i1013, $i1014, $i1015, $i1016, $i1017, $i1018, $i1019, $i1020, $i1021, $i1022, $i1023, $i1024, $i1025, $i1026, $i1027, $i1028, $i1029, $i1030, $i1031, $i1032, $i1033, $i1034, $i1035, $i1036, $i1037, $i1038, $i1039, $i1040, $i1041, $i1042, $i1043, $i1044, $i1045, $i1046, $i1047, $i1048, $i1049, $i1050, $i1051, $i1052, $i1053, $i1054, $i1055, $i1056, $i1057, $i1058, $i1059, $i1060, $i1061, $i1062, $i1063, $i1064, $i1065, $i1066, $i1067, $i1068, $i1069, $i1070, $i1071, $i1072, $i1073, $i1074, $i1075, $i1076, $i1077, $i1078, $i1079, $i1080, $i1081, $i1082, $i1083, $i1084, $i1085, $i1086, $i1087, $i1088, $i1089, $i1090, $i1091, $i1092, $i1093, $i1094, $i1095, $i1096, $i1097, $i1098, $i1099, $i1100, $i1101, $i1102, $i1103, $i1104, $i1105, $i1106, $i1107, $i1108, $i1109, $i1110, $i1111, $i1112, $i1113, $i1114, $i1115, $i1116, $i1117, $i1118, $i1119, $i1120, $i1121, $i1122, $i1123, $i1124, $i1125, $i1126, $i1127, $i1128, $i1129, $i1130, $i1131, $i1132, $i1133, $i1134, $i1135, $i1136, $i1137, $i1138, $i1139, $i1140, $i1141, $i1142, $i1143, $i1144, $i1145, $i1146, $i1147, $i1148, $i1149, $i1150, $i1151, $i1152, $i1153, $i1154, $i1155, $i1156, $i1157, $i1158, $i1159, $i1160, $i1161, $i1162, $i1163, $i1164, $i1165, $i1166, $i1167, $i1168, $i1169, $i1170, $i1171, $i1172, $i1173, $i1174, $i1175, $i1176, $i1177, $i1178, $i1179, $i1180, $i1181, $i1182, $i1183, $i1184, $i1185, $i1186, $i1187, $i1188, $i1189, $i1190, $i1191, $i1192, $i1193, $i1194, $i1195, $i1196, $i1197, $i1198, $i1199, $i1200, $i1201, $i1202, $i1203, $i1204, $i1205, $i1206, $i1207, $i1208, $i1209, $i1210, $i1211, $i1212, $i1213, $i1214, $i1215, $i1216, $i1217, $i1218, $i1219, $i1220, $i1221, $i1222, $i1223, $i1224, $i1225, $i1226, $i1227, $i1228, $i1229, $i1230, $i1231, $i1232, $i1233, $i1234, $i1235, $i1236, $i1237, $i1238, $i1239, $i1240, $i1241, $i1242, $i1243, $i1244, $i1245, $i1246, $i1247, $i1248, $i1249, $i1250, $i1251, $i1252, $i1253, $i1254, $i1255, $i1256, $i1257, $i1258, $i1259, $i1260, $i1261, $i1262, $i1263, $i1264, $i1265, $i1266, $i1267, $i1268, $i1269, $i1270, $i1271, $i1272, $i1273, $i1274, $i1275, $i1276, $i1277, $i1278, $i1279, $i1280, $i1281, $i1282, $i1283, $i1284, $i1285, $i1286, $i1287, $i1288, $i1289, $i1290, $i1291, $i1292, $i1293, $i1294, $i1295, $i1296, $i1297, $i1298, $i1299, $i1300, $i1301, $i1302, $i1303, $i1304, $i1305, $i1306, $i1307, $i1308, $i1309, $i1310, $i1311, $i1312, $i1313, $i1314, $i1315, $i1316, $i1317, $i1318, $i1319, $i1320, $i1321, $i1322, $i1323, $i1324, $i1325, $i1326, $i1327, $i1328, $i1329, $i1330, $i1331, $i1332, $i1333, $i1334, $i1335, $i1336, $i1337, $i1338, $i1339, $i1340, $i1341, $i1342, $i1343, $i1344, $i1345, $i1346, $i1347, $i1348, $i1349, $i1350, $i1351, $i1352, $i1353, $i1354, $i1355, $i1356, $i1357, $i1358, $i1359, $i1360, $i1361, $i1362, $i1363, $i1364, $i1365, $i1366, $i1367, $i1368, $i1369, $i1370, $i1371, $i1372, $i1373, $i1374, $i1375, $i1376, $i1377, $i1378, $i1379, $i1380, $i1381, $i1382, $i1383, $i1384, $i1385, $i1386, $i1387, $i1388, $i1389, $i1390, $i1391, $i1392, $i1393, $i1394, $i1395, $i1396, $i1397, $i1398, $i1399, $i1400, $i1401, $i1402, $i1403, $i1404, $i1405, $i1406, $i1407, $i1408, $i1409, $i1410, $i1411, $i1412, $i1413, $i1414, $i1415, $i1416, $i1417, $i1418, $i1419, $i1420, $i1421, $i1422, $i1423, $i1424, $i1425, $i1426, $i1427, $i1428, $i1429, $i1430, $i1431, $i1432, $i1433, $i1434, $i1435, $i1436, $i1437, $i1438, $i1439, $i1440, $i1441, $i1442, $i1443, $i1444, $i1445, $i1446, $i1447, $i1448, $i1449, $i1450, $i1451, $i1452, $i1453, $i1454, $i1455, $i1456, i1457, i1458, i1459, i1460, i1461, i1462, i1463, i1464, i1465, i1466, i1467, i1468, i1469, i1470, i1471, i1472, i1473, i1474, i1475, i1476, i1477, i1478, i1479, i1480, i1481, i1482;
        java.awt.ComponentOrientation $r2;
        java.awt.Color $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r75, $r76, $r77;
        com.jidesoft.plaf.basic.ThemePainter $r50;
        boolean $z0, z1;
        com.jidesoft.swing.JideTabbedPane $r1;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        r3 := @parameter0: java.awt.Graphics;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i1457 := @parameter4: int;

        i3 := @parameter5: int;

        i6 := @parameter6: int;

        z1 := @parameter7: boolean;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r2 = virtualinvoke $r1.<com.jidesoft.swing.JideTabbedPane: java.awt.ComponentOrientation getComponentOrientation()>();

        $z0 = virtualinvoke $r2.<java.awt.ComponentOrientation: boolean isLeftToRight()>();

        tableswitch(i0)
        {
            case 1: goto label52;
            case 2: goto label01;
            case 3: goto label26;
            case 4: goto label14;
            default: goto label52;
        };

     label01:
        i1458 = i1457 + 2;

        if z1 == 0 goto label06;

        $r52 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r52);

        $i943 = i1458 + 3;

        $i941 = i1458 + i6;

        $i942 = $i941 - 5;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i2, $i943, i2, $i942);

        $i949 = i2 + 1;

        $i944 = i1458 + i6;

        $i948 = $i944 - 4;

        $i947 = i2 + 1;

        $i945 = i1458 + i6;

        $i946 = $i945 - 4;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i949, $i948, $i947, $i946);

        $i956 = i2 + 2;

        $i950 = i1458 + i6;

        $i955 = $i950 - 3;

        $i951 = i2 + i3;

        $i954 = $i951 - 1;

        $i952 = i1458 + i6;

        $i953 = $i952 - 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i956, $i955, $i954, $i953);

        $i960 = i2 + 1;

        $i959 = i1458 + 2;

        $i958 = i2 + 1;

        $i957 = i1458 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i960, $i959, $i958, $i957);

        $i963 = i2 + 2;

        $i962 = i2 + 2;

        $i961 = i1458 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i963, i1458, $i962, $i961);

        i1459 = 0;

     label02:
        $i964 = i3 - 4;

        if i1459 >= $i964 goto label03;

        $i1001 = i2 + 3;

        $i1008 = $i1001 + i1459;

        $i1002 = i1458 - 2;

        $i1007 = $i1002 - i1459;

        $i1003 = i2 + 3;

        $i1006 = $i1003 + i1459;

        $i1004 = i1458 - 2;

        $i1005 = $i1004 - i1459;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1008, $i1007, $i1006, $i1005);

        i1459 = i1459 + 1;

        goto label02;

     label03:
        $i965 = i2 + i3;

        $i972 = $i965 - 1;

        $i966 = i1458 - i3;

        $i971 = $i966 + 1;

        $i967 = i2 + i3;

        $i970 = $i967 - 1;

        $i968 = i1458 - i3;

        $i969 = $i968 + 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i972, $i971, $i970, $i969);

        $r53 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor2>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r53);

        $i977 = i2 + 1;

        $i976 = i1458 + 3;

        $i975 = i2 + 1;

        $i973 = i1458 + i6;

        $i974 = $i973 - 5;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i977, $i976, $i975, $i974);

        $i984 = i2 + 2;

        $i978 = i1458 + i6;

        $i983 = $i978 - 4;

        $i979 = i2 + i3;

        $i982 = $i979 - 1;

        $i980 = i1458 + i6;

        $i981 = $i980 - 4;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i984, $i983, $i982, $i981);

        $i988 = i2 + 2;

        $i987 = i1458 + 2;

        $i986 = i2 + 2;

        $i985 = i1458 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i988, $i987, $i986, $i985);

        $i991 = i2 + 3;

        $i990 = i2 + 3;

        $i989 = i1458 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i991, i1458, $i990, $i989);

        i1460 = 0;

     label04:
        $i992 = i3 - 4;

        if i1460 >= $i992 goto label05;

        $i993 = i2 + 4;

        $i1000 = $i993 + i1460;

        $i994 = i1458 - 2;

        $i999 = $i994 - i1460;

        $i995 = i2 + 4;

        $i998 = $i995 + i1460;

        $i996 = i1458 - 2;

        $i997 = $i996 - i1460;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1000, $i999, $i998, $i997);

        i1460 = i1460 + 1;

        goto label04;

     label05:
        goto label78;

     label06:
        if i1 != 0 goto label12;

        $r45 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r45);

        $i869 = i1458 + 3;

        $i867 = i1458 + i6;

        $i868 = $i867 - 5;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i2, $i869, i2, $i868);

        $i875 = i2 + 1;

        $i870 = i1458 + i6;

        $i874 = $i870 - 4;

        $i873 = i2 + 1;

        $i871 = i1458 + i6;

        $i872 = $i871 - 4;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i875, $i874, $i873, $i872);

        $i882 = i2 + 2;

        $i876 = i1458 + i6;

        $i881 = $i876 - 3;

        $i877 = i2 + i3;

        $i880 = $i877 - 1;

        $i878 = i1458 + i6;

        $i879 = $i878 - 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i882, $i881, $i880, $i879);

        $i886 = i2 + 1;

        $i885 = i1458 + 2;

        $i884 = i2 + 1;

        $i883 = i1458 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i886, $i885, $i884, $i883);

        $i889 = i2 + 2;

        $i888 = i2 + 2;

        $i887 = i1458 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i889, i1458, $i888, $i887);

        i1461 = 0;

     label07:
        $i890 = i3 - 4;

        if i1461 >= $i890 goto label08;

        $i933 = i2 + 3;

        $i940 = $i933 + i1461;

        $i934 = i1458 - 2;

        $i939 = $i934 - i1461;

        $i935 = i2 + 3;

        $i938 = $i935 + i1461;

        $i936 = i1458 - 2;

        $i937 = $i936 - i1461;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i940, $i939, $i938, $i937);

        i1461 = i1461 + 1;

        goto label07;

     label08:
        $i891 = i2 + i3;

        $i898 = $i891 - 1;

        $i892 = i1458 - i3;

        $i897 = $i892 + 1;

        $i893 = i2 + i3;

        $i896 = $i893 - 1;

        $i894 = i1458 - i3;

        $i895 = $i894 + 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i898, $i897, $i896, $i895);

        $r46 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        if $r46 == null goto label11;

        $r49 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r49);

        $i916 = i2 + 1;

        $i915 = i1458 + 3;

        $i914 = i2 + 1;

        $i912 = i1458 + i6;

        $i913 = $i912 - 6;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i916, $i915, $i914, $i913);

        $i920 = i2 + 2;

        $i919 = i1458 + 2;

        $i918 = i2 + 2;

        $i917 = i1458 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i920, $i919, $i918, $i917);

        $i923 = i2 + 3;

        $i922 = i2 + 3;

        $i921 = i1458 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i923, i1458, $i922, $i921);

        i1462 = 0;

     label09:
        $i924 = i3 - 4;

        if i1462 >= $i924 goto label10;

        $i925 = i2 + 4;

        $i932 = $i925 + i1462;

        $i926 = i1458 - 2;

        $i931 = $i926 - i1462;

        $i927 = i2 + 4;

        $i930 = $i927 + i1462;

        $i928 = i1458 - 2;

        $i929 = $i928 - i1462;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i932, $i931, $i930, $i929);

        i1462 = i1462 + 1;

        goto label09;

     label10:
        $r50 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.ThemePainter getPainter()>();

        $r51 = interfaceinvoke $r50.<com.jidesoft.plaf.basic.ThemePainter: java.awt.Color getControlDk()>();

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r51);

     label11:
        $r47 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor3>;

        if $r47 == null goto label78;

        $r48 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor3>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r48);

        $i905 = i2 + 2;

        $i899 = i1458 + i6;

        $i904 = $i899 - 4;

        $i900 = i2 + i3;

        $i903 = $i900 - 1;

        $i901 = i1458 + i6;

        $i902 = $i901 - 4;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i905, $i904, $i903, $i902);

        $i911 = i2 + 1;

        $i906 = i1458 + i6;

        $i910 = $i906 - 5;

        $i909 = i2 + 1;

        $i907 = i1458 + i6;

        $i908 = $i907 - 5;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i911, $i910, $i909, $i908);

        goto label78;

     label12:
        $r40 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r40);

        $i813 = i1458 + 3;

        $i811 = i1458 + i6;

        $i812 = $i811 - 5;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i2, $i813, i2, $i812);

        $i819 = i2 + 1;

        $i814 = i1458 + i6;

        $i818 = $i814 - 4;

        $i817 = i2 + 1;

        $i815 = i1458 + i6;

        $i816 = $i815 - 4;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i819, $i818, $i817, $i816);

        $i826 = i2 + 2;

        $i820 = i1458 + i6;

        $i825 = $i820 - 3;

        $i821 = i2 + i3;

        $i824 = $i821 - 1;

        $i822 = i1458 + i6;

        $i823 = $i822 - 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i826, $i825, $i824, $i823);

        $i830 = i2 + 1;

        $i829 = i1458 + 2;

        $i828 = i2 + 1;

        $i827 = i1458 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i830, $i829, $i828, $i827);

        $i833 = i2 + 2;

        $i832 = i2 + 2;

        $i831 = i1458 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i833, i1458, $i832, $i831);

        $i837 = i2 + 3;

        $i836 = i1458 - 2;

        $i835 = i2 + 3;

        $i834 = i1458 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i837, $i836, $i835, $i834);

        $r41 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        if $r41 == null goto label13;

        $r44 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r44);

        $i855 = i2 + 1;

        $i854 = i1458 + 3;

        $i853 = i2 + 1;

        $i851 = i1458 + i6;

        $i852 = $i851 - 6;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i855, $i854, $i853, $i852);

        $i859 = i2 + 2;

        $i858 = i1458 + 2;

        $i857 = i2 + 2;

        $i856 = i1458 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i859, $i858, $i857, $i856);

        $i862 = i2 + 3;

        $i861 = i2 + 3;

        $i860 = i1458 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i862, i1458, $i861, $i860);

        $i866 = i2 + 4;

        $i865 = i1458 - 2;

        $i864 = i2 + 4;

        $i863 = i1458 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i866, $i865, $i864, $i863);

     label13:
        $r42 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor3>;

        if $r42 == null goto label78;

        $r43 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor3>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r43);

        $i844 = i2 + 2;

        $i838 = i1458 + i6;

        $i843 = $i838 - 4;

        $i839 = i2 + i3;

        $i842 = $i839 - 1;

        $i840 = i1458 + i6;

        $i841 = $i840 - 4;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i844, $i843, $i842, $i841);

        $i850 = i2 + 1;

        $i845 = i1458 + i6;

        $i849 = $i845 - 5;

        $i848 = i2 + 1;

        $i846 = i1458 + i6;

        $i847 = $i846 - 5;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i850, $i849, $i848, $i847);

        goto label78;

     label14:
        if z1 == 0 goto label19;

        $r14 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r14);

        $i167 = i2 + i3;

        $i173 = $i167 - 1;

        $i172 = i1457 + 5;

        $i168 = i2 + i3;

        $i171 = $i168 - 1;

        $i169 = i1457 + i6;

        $i170 = $i169 - 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i173, $i172, $i171, $i170);

        $i174 = i2 + i3;

        $i181 = $i174 - 2;

        $i175 = i1457 + i6;

        $i180 = $i175 - 2;

        $i176 = i2 + i3;

        $i179 = $i176 - 2;

        $i177 = i1457 + i6;

        $i178 = $i177 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i181, $i180, $i179, $i178);

        $i182 = i2 + i3;

        $i187 = $i182 - 3;

        $i183 = i1457 + i6;

        $i186 = $i183 - 1;

        $i184 = i1457 + i6;

        $i185 = $i184 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i187, $i186, i2, $i185);

        $i188 = i2 + i3;

        $i193 = $i188 - 2;

        $i192 = i1457 + 4;

        $i189 = i2 + i3;

        $i191 = $i189 - 2;

        $i190 = i1457 + 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i193, $i192, $i191, $i190);

        $i194 = i2 + i3;

        $i199 = $i194 - 3;

        $i198 = i1457 + 2;

        $i195 = i2 + i3;

        $i197 = $i195 - 3;

        $i196 = i1457 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i199, $i198, $i197, $i196);

        i1463 = 0;

     label15:
        $i200 = i3 - 4;

        if i1463 >= $i200 goto label16;

        $i239 = i2 + i3;

        $i240 = $i239 - 4;

        $i246 = $i240 - i1463;

        $i245 = i1457 - i1463;

        $i241 = i2 + i3;

        $i242 = $i241 - 4;

        $i244 = $i242 - i1463;

        $i243 = i1457 - i1463;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i246, $i245, $i244, $i243);

        i1463 = i1463 + 1;

        goto label15;

     label16:
        $i201 = i1457 - i3;

        $i204 = $i201 + 3;

        $i202 = i1457 - i3;

        $i203 = $i202 + 4;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i2, $i204, i2, $i203);

        $r15 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor2>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r15);

        $i205 = i2 + i3;

        $i211 = $i205 - 2;

        $i210 = i1457 + 5;

        $i206 = i2 + i3;

        $i209 = $i206 - 2;

        $i207 = i1457 + i6;

        $i208 = $i207 - 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i211, $i210, $i209, $i208);

        $i212 = i2 + i3;

        $i217 = $i212 - 3;

        $i213 = i1457 + i6;

        $i216 = $i213 - 2;

        $i214 = i1457 + i6;

        $i215 = $i214 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i217, $i216, i2, $i215);

        $i218 = i2 + i3;

        $i223 = $i218 - 3;

        $i222 = i1457 + 4;

        $i219 = i2 + i3;

        $i221 = $i219 - 3;

        $i220 = i1457 + 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i223, $i222, $i221, $i220);

        $i224 = i2 + i3;

        $i229 = $i224 - 4;

        $i228 = i1457 + 2;

        $i225 = i2 + i3;

        $i227 = $i225 - 4;

        $i226 = i1457 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i229, $i228, $i227, $i226);

        i1464 = 0;

     label17:
        $i230 = i3 - 4;

        if i1464 >= $i230 goto label18;

        $i231 = i2 + i3;

        $i232 = $i231 - 5;

        $i238 = $i232 - i1464;

        $i237 = i1457 - i1464;

        $i233 = i2 + i3;

        $i234 = $i233 - 5;

        $i236 = $i234 - i1464;

        $i235 = i1457 - i1464;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i238, $i237, $i236, $i235);

        i1464 = i1464 + 1;

        goto label17;

     label18:
        goto label78;

     label19:
        if i1 != 0 goto label24;

        $r9 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r9);

        $i79 = i2 + i3;

        $i85 = $i79 - 1;

        $i84 = i1457 + 5;

        $i80 = i2 + i3;

        $i83 = $i80 - 1;

        $i81 = i1457 + i6;

        $i82 = $i81 - 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i85, $i84, $i83, $i82);

        $i86 = i2 + i3;

        $i93 = $i86 - 2;

        $i87 = i1457 + i6;

        $i92 = $i87 - 2;

        $i88 = i2 + i3;

        $i91 = $i88 - 2;

        $i89 = i1457 + i6;

        $i90 = $i89 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i93, $i92, $i91, $i90);

        $i94 = i2 + i3;

        $i99 = $i94 - 3;

        $i95 = i1457 + i6;

        $i98 = $i95 - 1;

        $i96 = i1457 + i6;

        $i97 = $i96 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i99, $i98, i2, $i97);

        $i100 = i2 + i3;

        $i105 = $i100 - 2;

        $i104 = i1457 + 4;

        $i101 = i2 + i3;

        $i103 = $i101 - 2;

        $i102 = i1457 + 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i105, $i104, $i103, $i102);

        $i106 = i2 + i3;

        $i111 = $i106 - 3;

        $i110 = i1457 + 2;

        $i107 = i2 + i3;

        $i109 = $i107 - 3;

        $i108 = i1457 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i111, $i110, $i109, $i108);

        i1465 = 0;

     label20:
        $i112 = i3 - 4;

        if i1465 >= $i112 goto label21;

        $i159 = i2 + i3;

        $i160 = $i159 - 4;

        $i166 = $i160 - i1465;

        $i165 = i1457 - i1465;

        $i161 = i2 + i3;

        $i162 = $i161 - 4;

        $i164 = $i162 - i1465;

        $i163 = i1457 - i1465;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i166, $i165, $i164, $i163);

        i1465 = i1465 + 1;

        goto label20;

     label21:
        $i113 = i1457 - i3;

        $i116 = $i113 + 3;

        $i114 = i1457 - i3;

        $i115 = $i114 + 4;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i2, $i116, i2, $i115);

        $r10 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        if $r10 == null goto label23;

        $r13 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r13);

        $i131 = i2 + i3;

        $i137 = $i131 - 2;

        $i136 = i1457 + 5;

        $i132 = i2 + i3;

        $i135 = $i132 - 2;

        $i133 = i1457 + i6;

        $i134 = $i133 - 4;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i137, $i136, $i135, $i134);

        $i138 = i2 + i3;

        $i143 = $i138 - 3;

        $i142 = i1457 + 4;

        $i139 = i2 + i3;

        $i141 = $i139 - 3;

        $i140 = i1457 + 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i143, $i142, $i141, $i140);

        $i144 = i2 + i3;

        $i149 = $i144 - 4;

        $i148 = i1457 + 2;

        $i145 = i2 + i3;

        $i147 = $i145 - 4;

        $i146 = i1457 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i149, $i148, $i147, $i146);

        i1466 = 0;

     label22:
        $i150 = i3 - 4;

        if i1466 >= $i150 goto label23;

        $i151 = i2 + i3;

        $i152 = $i151 - 5;

        $i158 = $i152 - i1466;

        $i157 = i1457 - i1466;

        $i153 = i2 + i3;

        $i154 = $i153 - 5;

        $i156 = $i154 - i1466;

        $i155 = i1457 - i1466;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i158, $i157, $i156, $i155);

        i1466 = i1466 + 1;

        goto label22;

     label23:
        $r11 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor3>;

        if $r11 == null goto label78;

        $r12 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor3>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r12);

        $i117 = i2 + i3;

        $i124 = $i117 - 2;

        $i118 = i1457 + i6;

        $i123 = $i118 - 3;

        $i119 = i2 + i3;

        $i122 = $i119 - 2;

        $i120 = i1457 + i6;

        $i121 = $i120 - 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i124, $i123, $i122, $i121);

        $i125 = i2 + i3;

        $i130 = $i125 - 3;

        $i126 = i1457 + i6;

        $i129 = $i126 - 2;

        $i127 = i1457 + i6;

        $i128 = $i127 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i130, $i129, i2, $i128);

        goto label78;

     label24:
        $r4 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r4);

        $i4 = i2 + i3;

        $i11 = $i4 - 1;

        $i10 = i1457 + 5;

        $i5 = i2 + i3;

        $i9 = $i5 - 1;

        $i7 = i1457 + i6;

        $i8 = $i7 - 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i11, $i10, $i9, $i8);

        $i12 = i2 + i3;

        $i19 = $i12 - 2;

        $i13 = i1457 + i6;

        $i18 = $i13 - 2;

        $i14 = i2 + i3;

        $i17 = $i14 - 2;

        $i15 = i1457 + i6;

        $i16 = $i15 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i19, $i18, $i17, $i16);

        $i20 = i2 + i3;

        $i25 = $i20 - 3;

        $i21 = i1457 + i6;

        $i24 = $i21 - 1;

        $i22 = i1457 + i6;

        $i23 = $i22 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i25, $i24, i2, $i23);

        $i26 = i2 + i3;

        $i31 = $i26 - 2;

        $i30 = i1457 + 4;

        $i27 = i2 + i3;

        $i29 = $i27 - 2;

        $i28 = i1457 + 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i31, $i30, $i29, $i28);

        $i32 = i2 + i3;

        $i37 = $i32 - 3;

        $i36 = i1457 + 2;

        $i33 = i2 + i3;

        $i35 = $i33 - 3;

        $i34 = i1457 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i37, $i36, $i35, $i34);

        $i38 = i2 + i3;

        $i41 = $i38 - 4;

        $i39 = i2 + i3;

        $i40 = $i39 - 4;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i41, i1457, $i40, i1457);

        $r5 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        if $r5 == null goto label25;

        $r8 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r8);

        $i56 = i2 + i3;

        $i62 = $i56 - 2;

        $i61 = i1457 + 5;

        $i57 = i2 + i3;

        $i60 = $i57 - 2;

        $i58 = i1457 + i6;

        $i59 = $i58 - 4;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i62, $i61, $i60, $i59);

        $i63 = i2 + i3;

        $i68 = $i63 - 3;

        $i67 = i1457 + 4;

        $i64 = i2 + i3;

        $i66 = $i64 - 3;

        $i65 = i1457 + 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i68, $i67, $i66, $i65);

        $i69 = i2 + i3;

        $i74 = $i69 - 4;

        $i73 = i1457 + 2;

        $i70 = i2 + i3;

        $i72 = $i70 - 4;

        $i71 = i1457 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i74, $i73, $i72, $i71);

        $i75 = i2 + i3;

        $i78 = $i75 - 5;

        $i76 = i2 + i3;

        $i77 = $i76 - 5;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i78, i1457, $i77, i1457);

     label25:
        $r6 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor3>;

        if $r6 == null goto label78;

        $r7 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor3>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r7);

        $i42 = i2 + i3;

        $i49 = $i42 - 2;

        $i43 = i1457 + i6;

        $i48 = $i43 - 3;

        $i44 = i2 + i3;

        $i47 = $i44 - 2;

        $i45 = i1457 + i6;

        $i46 = $i45 - 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i49, $i48, $i47, $i46);

        $i50 = i2 + i3;

        $i55 = $i50 - 3;

        $i51 = i1457 + i6;

        $i54 = $i51 - 2;

        $i52 = i1457 + i6;

        $i53 = $i52 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i55, $i54, i2, $i53);

        goto label78;

     label26:
        if $z0 == 0 goto label39;

        if z1 == 0 goto label31;

        $r38 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r38);

        $i719 = i2 + i3;

        $i724 = $i719 - 1;

        $i720 = i1457 + i6;

        $i723 = $i720 - 3;

        $i721 = i2 + i3;

        $i722 = $i721 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i724, $i723, $i722, i1457);

        $i725 = i2 + i3;

        $i732 = $i725 - 2;

        $i726 = i1457 + i6;

        $i731 = $i726 - 2;

        $i727 = i2 + i3;

        $i730 = $i727 - 2;

        $i728 = i1457 + i6;

        $i729 = $i728 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i732, $i731, $i730, $i729);

        $i739 = i2 + 5;

        $i733 = i1457 + i6;

        $i738 = $i733 - 1;

        $i734 = i2 + i3;

        $i737 = $i734 - 3;

        $i735 = i1457 + i6;

        $i736 = $i735 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i739, $i738, $i737, $i736);

        $i745 = i2 + 3;

        $i740 = i1457 + i6;

        $i744 = $i740 - 2;

        $i743 = i2 + 4;

        $i741 = i1457 + i6;

        $i742 = $i741 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i745, $i744, $i743, $i742);

        $i751 = i2 + 1;

        $i746 = i1457 + i6;

        $i750 = $i746 - 3;

        $i749 = i2 + 2;

        $i747 = i1457 + i6;

        $i748 = $i747 - 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i751, $i750, $i749, $i748);

        $i752 = i1457 + i6;

        $i755 = $i752 - 4;

        $i753 = i1457 + i6;

        $i754 = $i753 - 4;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i2, $i755, i2, $i754);

        i1467 = 3;

     label27:
        $i756 = i6 - 2;

        if i1467 >= $i756 goto label28;

        $i801 = i2 + 2;

        $i810 = $i801 - i1467;

        $i802 = i1457 + i6;

        $i803 = $i802 - 2;

        $i809 = $i803 - i1467;

        $i804 = i2 + 2;

        $i808 = $i804 - i1467;

        $i805 = i1457 + i6;

        $i806 = $i805 - 2;

        $i807 = $i806 - i1467;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i810, $i809, $i808, $i807);

        i1467 = i1467 + 1;

        goto label27;

     label28:
        $i757 = i2 - i6;

        $i760 = $i757 + 3;

        $i758 = i2 - i6;

        $i759 = $i758 + 4;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i760, i1457, $i759, i1457);

        $r39 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor2>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r39);

        $i767 = i2 + 5;

        $i761 = i1457 + i6;

        $i766 = $i761 - 2;

        $i762 = i2 + i3;

        $i765 = $i762 - 3;

        $i763 = i1457 + i6;

        $i764 = $i763 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i767, $i766, $i765, $i764);

        $i768 = i2 + i3;

        $i773 = $i768 - 2;

        $i769 = i2 + i3;

        $i772 = $i769 - 2;

        $i770 = i1457 + i6;

        $i771 = $i770 - 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i773, i1457, $i772, $i771);

        $i779 = i2 + 3;

        $i774 = i1457 + i6;

        $i778 = $i774 - 3;

        $i777 = i2 + 4;

        $i775 = i1457 + i6;

        $i776 = $i775 - 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i779, $i778, $i777, $i776);

        $i785 = i2 + 1;

        $i780 = i1457 + i6;

        $i784 = $i780 - 4;

        $i783 = i2 + 2;

        $i781 = i1457 + i6;

        $i782 = $i781 - 4;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i785, $i784, $i783, $i782);

        $i786 = i1457 + i6;

        $i789 = $i786 - 5;

        $i787 = i1457 + i6;

        $i788 = $i787 - 5;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i2, $i789, i2, $i788);

        i1468 = 3;

     label29:
        $i790 = i6 - 2;

        if i1468 >= $i790 goto label30;

        $i791 = i2 + 2;

        $i800 = $i791 - i1468;

        $i792 = i1457 + i6;

        $i793 = $i792 - 3;

        $i799 = $i793 - i1468;

        $i794 = i2 + 2;

        $i798 = $i794 - i1468;

        $i795 = i1457 + i6;

        $i796 = $i795 - 3;

        $i797 = $i796 - i1468;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i800, $i799, $i798, $i797);

        i1468 = i1468 + 1;

        goto label29;

     label30:
        goto label78;

     label31:
        if i1 != 0 goto label37;

        $r33 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r33);

        $i619 = i2 + i3;

        $i624 = $i619 - 1;

        $i620 = i1457 + i6;

        $i623 = $i620 - 3;

        $i621 = i2 + i3;

        $i622 = $i621 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i624, $i623, $i622, i1457);

        $i625 = i2 + i3;

        $i632 = $i625 - 2;

        $i626 = i1457 + i6;

        $i631 = $i626 - 2;

        $i627 = i2 + i3;

        $i630 = $i627 - 2;

        $i628 = i1457 + i6;

        $i629 = $i628 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i632, $i631, $i630, $i629);

        $i639 = i2 + 5;

        $i633 = i1457 + i6;

        $i638 = $i633 - 1;

        $i634 = i2 + i3;

        $i637 = $i634 - 3;

        $i635 = i1457 + i6;

        $i636 = $i635 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i639, $i638, $i637, $i636);

        $i645 = i2 + 3;

        $i640 = i1457 + i6;

        $i644 = $i640 - 2;

        $i643 = i2 + 4;

        $i641 = i1457 + i6;

        $i642 = $i641 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i645, $i644, $i643, $i642);

        $i651 = i2 + 1;

        $i646 = i1457 + i6;

        $i650 = $i646 - 3;

        $i649 = i2 + 2;

        $i647 = i1457 + i6;

        $i648 = $i647 - 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i651, $i650, $i649, $i648);

        $i652 = i1457 + i6;

        $i655 = $i652 - 4;

        $i653 = i1457 + i6;

        $i654 = $i653 - 4;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i2, $i655, i2, $i654);

        i1469 = 3;

     label32:
        $i656 = i6 - 2;

        if i1469 >= $i656 goto label33;

        $i709 = i2 + 2;

        $i718 = $i709 - i1469;

        $i710 = i1457 + i6;

        $i711 = $i710 - 2;

        $i717 = $i711 - i1469;

        $i712 = i2 + 2;

        $i716 = $i712 - i1469;

        $i713 = i1457 + i6;

        $i714 = $i713 - 2;

        $i715 = $i714 - i1469;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i718, $i717, $i716, $i715);

        i1469 = i1469 + 1;

        goto label32;

     label33:
        $i657 = i2 - i6;

        $i660 = $i657 + 3;

        $i658 = i2 - i6;

        $i659 = $i658 + 4;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i660, i1457, $i659, i1457);

        $r34 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        if $r34 == null goto label36;

        $r37 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r37);

        $i680 = i2 + 3;

        $i675 = i1457 + i6;

        $i679 = $i675 - 3;

        $i678 = i2 + 4;

        $i676 = i1457 + i6;

        $i677 = $i676 - 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i680, $i679, $i678, $i677);

        $i686 = i2 + 1;

        $i681 = i1457 + i6;

        $i685 = $i681 - 4;

        $i684 = i2 + 2;

        $i682 = i1457 + i6;

        $i683 = $i682 - 4;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i686, $i685, $i684, $i683);

        $i687 = i1457 + i6;

        $i690 = $i687 - 5;

        $i688 = i1457 + i6;

        $i689 = $i688 - 5;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i2, $i690, i2, $i689);

        i1470 = 3;

     label34:
        $i691 = i6 - 2;

        if i1470 >= $i691 goto label35;

        $i699 = i2 + 2;

        $i708 = $i699 - i1470;

        $i700 = i1457 + i6;

        $i701 = $i700 - 3;

        $i707 = $i701 - i1470;

        $i702 = i2 + 2;

        $i706 = $i702 - i1470;

        $i703 = i1457 + i6;

        $i704 = $i703 - 3;

        $i705 = $i704 - i1470;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i708, $i707, $i706, $i705);

        i1470 = i1470 + 1;

        goto label34;

     label35:
        $i698 = i2 + 5;

        $i692 = i1457 + i6;

        $i697 = $i692 - 2;

        $i693 = i2 + i3;

        $i696 = $i693 - 4;

        $i694 = i1457 + i6;

        $i695 = $i694 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i698, $i697, $i696, $i695);

     label36:
        $r35 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor3>;

        if $r35 == null goto label78;

        $r36 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor3>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r36);

        $i661 = i2 + i3;

        $i668 = $i661 - 3;

        $i662 = i1457 + i6;

        $i667 = $i662 - 2;

        $i663 = i2 + i3;

        $i666 = $i663 - 3;

        $i664 = i1457 + i6;

        $i665 = $i664 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i668, $i667, $i666, $i665);

        $i669 = i2 + i3;

        $i674 = $i669 - 2;

        $i670 = i1457 + i6;

        $i673 = $i670 - 3;

        $i671 = i2 + i3;

        $i672 = $i671 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i674, $i673, $i672, i1457);

        goto label78;

     label37:
        $r28 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r28);

        $i551 = i2 + 5;

        $i545 = i1457 + i6;

        $i550 = $i545 - 1;

        $i546 = i2 + i3;

        $i549 = $i546 - 3;

        $i547 = i1457 + i6;

        $i548 = $i547 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i551, $i550, $i549, $i548);

        $i552 = i2 + i3;

        $i557 = $i552 - 1;

        $i553 = i1457 + i6;

        $i556 = $i553 - 3;

        $i554 = i2 + i3;

        $i555 = $i554 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i557, $i556, $i555, i1457);

        $i558 = i2 + i3;

        $i565 = $i558 - 2;

        $i559 = i1457 + i6;

        $i564 = $i559 - 2;

        $i560 = i2 + i3;

        $i563 = $i560 - 2;

        $i561 = i1457 + i6;

        $i562 = $i561 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i565, $i564, $i563, $i562);

        $i571 = i2 + 3;

        $i566 = i1457 + i6;

        $i570 = $i566 - 2;

        $i569 = i2 + 4;

        $i567 = i1457 + i6;

        $i568 = $i567 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i571, $i570, $i569, $i568);

        $i577 = i2 + 1;

        $i572 = i1457 + i6;

        $i576 = $i572 - 3;

        $i575 = i2 + 2;

        $i573 = i1457 + i6;

        $i574 = $i573 - 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i577, $i576, $i575, $i574);

        $i578 = i1457 + i6;

        $i581 = $i578 - 4;

        $i579 = i1457 + i6;

        $i580 = $i579 - 4;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i2, $i581, i2, $i580);

        $r29 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        if $r29 == null goto label38;

        $r32 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r32);

        $i601 = i2 + 3;

        $i596 = i1457 + i6;

        $i600 = $i596 - 3;

        $i599 = i2 + 4;

        $i597 = i1457 + i6;

        $i598 = $i597 - 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i601, $i600, $i599, $i598);

        $i607 = i2 + 1;

        $i602 = i1457 + i6;

        $i606 = $i602 - 4;

        $i605 = i2 + 2;

        $i603 = i1457 + i6;

        $i604 = $i603 - 4;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i607, $i606, $i605, $i604);

        $i608 = i1457 + i6;

        $i611 = $i608 - 5;

        $i609 = i1457 + i6;

        $i610 = $i609 - 5;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i2, $i611, i2, $i610);

        $i618 = i2 + 5;

        $i612 = i1457 + i6;

        $i617 = $i612 - 2;

        $i613 = i2 + i3;

        $i616 = $i613 - 4;

        $i614 = i1457 + i6;

        $i615 = $i614 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i618, $i617, $i616, $i615);

     label38:
        $r30 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor3>;

        if $r30 == null goto label78;

        $r31 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor3>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r31);

        $i582 = i2 + i3;

        $i589 = $i582 - 3;

        $i583 = i1457 + i6;

        $i588 = $i583 - 2;

        $i584 = i2 + i3;

        $i587 = $i584 - 3;

        $i585 = i1457 + i6;

        $i586 = $i585 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i589, $i588, $i587, $i586);

        $i590 = i2 + i3;

        $i595 = $i590 - 2;

        $i591 = i1457 + i6;

        $i594 = $i591 - 3;

        $i592 = i2 + i3;

        $i593 = $i592 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i595, $i594, $i593, i1457);

        goto label78;

     label39:
        if z1 == 0 goto label44;

        $r26 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r26);

        $i439 = i1457 + i6;

        $i440 = $i439 - 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i2, $i440, i2, i1457);

        $i446 = i2 + 1;

        $i441 = i1457 + i6;

        $i445 = $i441 - 2;

        $i444 = i2 + 1;

        $i442 = i1457 + i6;

        $i443 = $i442 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i446, $i445, $i444, $i443);

        $i447 = i2 + i3;

        $i453 = $i447 - 6;

        $i448 = i1457 + i6;

        $i452 = $i448 - 1;

        $i451 = i2 + 2;

        $i449 = i1457 + i6;

        $i450 = $i449 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i453, $i452, $i451, $i450);

        $i454 = i2 + i3;

        $i461 = $i454 - 4;

        $i455 = i1457 + i6;

        $i460 = $i455 - 2;

        $i456 = i2 + i3;

        $i459 = $i456 - 5;

        $i457 = i1457 + i6;

        $i458 = $i457 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i461, $i460, $i459, $i458);

        $i462 = i2 + i3;

        $i469 = $i462 - 2;

        $i463 = i1457 + i6;

        $i468 = $i463 - 3;

        $i464 = i2 + i3;

        $i467 = $i464 - 3;

        $i465 = i1457 + i6;

        $i466 = $i465 - 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i469, $i468, $i467, $i466);

        $i470 = i2 + i3;

        $i477 = $i470 - 1;

        $i471 = i1457 + i6;

        $i476 = $i471 - 4;

        $i472 = i2 + i3;

        $i475 = $i472 - 1;

        $i473 = i1457 + i6;

        $i474 = $i473 - 4;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i477, $i476, $i475, $i474);

        i1471 = 3;

     label40:
        $i478 = i6 - 2;

        if i1471 >= $i478 goto label41;

        $i533 = i2 + i3;

        $i534 = $i533 - 3;

        $i544 = $i534 + i1471;

        $i535 = i1457 + i6;

        $i536 = $i535 - 2;

        $i543 = $i536 - i1471;

        $i537 = i2 + i3;

        $i538 = $i537 - 3;

        $i542 = $i538 + i1471;

        $i539 = i1457 + i6;

        $i540 = $i539 - 2;

        $i541 = $i540 - i1471;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i544, $i543, $i542, $i541);

        i1471 = i1471 + 1;

        goto label40;

     label41:
        $i479 = i2 + i3;

        $i480 = $i479 - 4;

        $i484 = $i480 + i6;

        $i481 = i2 + i3;

        $i482 = $i481 - 5;

        $i483 = $i482 + i6;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i484, i1457, $i483, i1457);

        $r27 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor2>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r27);

        $i485 = i2 + i3;

        $i491 = $i485 - 6;

        $i486 = i1457 + i6;

        $i490 = $i486 - 2;

        $i489 = i2 + 2;

        $i487 = i1457 + i6;

        $i488 = $i487 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i491, $i490, $i489, $i488);

        $i495 = i2 + 1;

        $i494 = i2 + 1;

        $i492 = i1457 + i6;

        $i493 = $i492 - 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i495, i1457, $i494, $i493);

        $i496 = i2 + i3;

        $i503 = $i496 - 4;

        $i497 = i1457 + i6;

        $i502 = $i497 - 3;

        $i498 = i2 + i3;

        $i501 = $i498 - 5;

        $i499 = i1457 + i6;

        $i500 = $i499 - 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i503, $i502, $i501, $i500);

        $i504 = i2 + i3;

        $i511 = $i504 - 2;

        $i505 = i1457 + i6;

        $i510 = $i505 - 4;

        $i506 = i2 + i3;

        $i509 = $i506 - 3;

        $i507 = i1457 + i6;

        $i508 = $i507 - 4;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i511, $i510, $i509, $i508);

        $i512 = i2 + i3;

        $i519 = $i512 - 1;

        $i513 = i1457 + i6;

        $i518 = $i513 - 5;

        $i514 = i2 + i3;

        $i517 = $i514 - 1;

        $i515 = i1457 + i6;

        $i516 = $i515 - 5;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i519, $i518, $i517, $i516);

        i1472 = 3;

     label42:
        $i520 = i6 - 2;

        if i1472 >= $i520 goto label43;

        $i521 = i2 + i3;

        $i522 = $i521 - 3;

        $i532 = $i522 + i1472;

        $i523 = i1457 + i6;

        $i524 = $i523 - 3;

        $i531 = $i524 - i1472;

        $i525 = i2 + i3;

        $i526 = $i525 - 3;

        $i530 = $i526 + i1472;

        $i527 = i1457 + i6;

        $i528 = $i527 - 3;

        $i529 = $i528 - i1472;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i532, $i531, $i530, $i529);

        i1472 = i1472 + 1;

        goto label42;

     label43:
        goto label78;

     label44:
        if i1 != 0 goto label50;

        $r21 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r21);

        $i327 = i1457 + i6;

        $i328 = $i327 - 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i2, $i328, i2, i1457);

        $i334 = i2 + 1;

        $i329 = i1457 + i6;

        $i333 = $i329 - 2;

        $i332 = i2 + 1;

        $i330 = i1457 + i6;

        $i331 = $i330 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i334, $i333, $i332, $i331);

        $i335 = i2 + i3;

        $i341 = $i335 - 6;

        $i336 = i1457 + i6;

        $i340 = $i336 - 1;

        $i339 = i2 + 2;

        $i337 = i1457 + i6;

        $i338 = $i337 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i341, $i340, $i339, $i338);

        $i342 = i2 + i3;

        $i349 = $i342 - 4;

        $i343 = i1457 + i6;

        $i348 = $i343 - 2;

        $i344 = i2 + i3;

        $i347 = $i344 - 5;

        $i345 = i1457 + i6;

        $i346 = $i345 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i349, $i348, $i347, $i346);

        $i350 = i2 + i3;

        $i357 = $i350 - 2;

        $i351 = i1457 + i6;

        $i356 = $i351 - 3;

        $i352 = i2 + i3;

        $i355 = $i352 - 3;

        $i353 = i1457 + i6;

        $i354 = $i353 - 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i357, $i356, $i355, $i354);

        $i358 = i2 + i3;

        $i365 = $i358 - 1;

        $i359 = i1457 + i6;

        $i364 = $i359 - 4;

        $i360 = i2 + i3;

        $i363 = $i360 - 1;

        $i361 = i1457 + i6;

        $i362 = $i361 - 4;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i365, $i364, $i363, $i362);

        i1473 = 3;

     label45:
        $i366 = i6 - 2;

        if i1473 >= $i366 goto label46;

        $i427 = i2 + i3;

        $i428 = $i427 - 3;

        $i438 = $i428 + i1473;

        $i429 = i1457 + i6;

        $i430 = $i429 - 2;

        $i437 = $i430 - i1473;

        $i431 = i2 + i3;

        $i432 = $i431 - 3;

        $i436 = $i432 + i1473;

        $i433 = i1457 + i6;

        $i434 = $i433 - 2;

        $i435 = $i434 - i1473;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i438, $i437, $i436, $i435);

        i1473 = i1473 + 1;

        goto label45;

     label46:
        $i367 = i2 + i3;

        $i368 = $i367 - 4;

        $i372 = $i368 + i6;

        $i369 = i2 + i3;

        $i370 = $i369 - 5;

        $i371 = $i370 + i6;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i372, i1457, $i371, i1457);

        $r22 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        if $r22 == null goto label49;

        $r25 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r25);

        $i383 = i2 + i3;

        $i390 = $i383 - 4;

        $i384 = i1457 + i6;

        $i389 = $i384 - 3;

        $i385 = i2 + i3;

        $i388 = $i385 - 5;

        $i386 = i1457 + i6;

        $i387 = $i386 - 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i390, $i389, $i388, $i387);

        $i391 = i2 + i3;

        $i398 = $i391 - 2;

        $i392 = i1457 + i6;

        $i397 = $i392 - 4;

        $i393 = i2 + i3;

        $i396 = $i393 - 3;

        $i394 = i1457 + i6;

        $i395 = $i394 - 4;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i398, $i397, $i396, $i395);

        $i399 = i2 + i3;

        $i406 = $i399 - 1;

        $i400 = i1457 + i6;

        $i405 = $i400 - 5;

        $i401 = i2 + i3;

        $i404 = $i401 - 1;

        $i402 = i1457 + i6;

        $i403 = $i402 - 5;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i406, $i405, $i404, $i403);

        i1474 = 3;

     label47:
        $i407 = i6 - 2;

        if i1474 >= $i407 goto label48;

        $i415 = i2 + i3;

        $i416 = $i415 - 3;

        $i426 = $i416 + i1474;

        $i417 = i1457 + i6;

        $i418 = $i417 - 3;

        $i425 = $i418 - i1474;

        $i419 = i2 + i3;

        $i420 = $i419 - 3;

        $i424 = $i420 + i1474;

        $i421 = i1457 + i6;

        $i422 = $i421 - 3;

        $i423 = $i422 - i1474;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i426, $i425, $i424, $i423);

        i1474 = i1474 + 1;

        goto label47;

     label48:
        $i408 = i2 + i3;

        $i414 = $i408 - 6;

        $i409 = i1457 + i6;

        $i413 = $i409 - 2;

        $i412 = i2 + 3;

        $i410 = i1457 + i6;

        $i411 = $i410 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i414, $i413, $i412, $i411);

     label49:
        $r23 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor3>;

        if $r23 == null goto label78;

        $r24 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor3>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r24);

        $i378 = i2 + 2;

        $i373 = i1457 + i6;

        $i377 = $i373 - 2;

        $i376 = i2 + 2;

        $i374 = i1457 + i6;

        $i375 = $i374 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i378, $i377, $i376, $i375);

        $i382 = i2 + 1;

        $i379 = i1457 + i6;

        $i381 = $i379 - 3;

        $i380 = i2 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i382, $i381, $i380, i1457);

        goto label78;

     label50:
        $r16 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r16);

        $i247 = i2 + i3;

        $i253 = $i247 - 6;

        $i248 = i1457 + i6;

        $i252 = $i248 - 1;

        $i251 = i2 + 2;

        $i249 = i1457 + i6;

        $i250 = $i249 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i253, $i252, $i251, $i250);

        $i254 = i1457 + i6;

        $i255 = $i254 - 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i2, $i255, i2, i1457);

        $i261 = i2 + 1;

        $i256 = i1457 + i6;

        $i260 = $i256 - 2;

        $i259 = i2 + 1;

        $i257 = i1457 + i6;

        $i258 = $i257 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i261, $i260, $i259, $i258);

        $i262 = i2 + i3;

        $i269 = $i262 - 4;

        $i263 = i1457 + i6;

        $i268 = $i263 - 2;

        $i264 = i2 + i3;

        $i267 = $i264 - 5;

        $i265 = i1457 + i6;

        $i266 = $i265 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i269, $i268, $i267, $i266);

        $i270 = i2 + i3;

        $i277 = $i270 - 2;

        $i271 = i1457 + i6;

        $i276 = $i271 - 3;

        $i272 = i2 + i3;

        $i275 = $i272 - 3;

        $i273 = i1457 + i6;

        $i274 = $i273 - 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i277, $i276, $i275, $i274);

        $i278 = i2 + i3;

        $i285 = $i278 - 1;

        $i279 = i1457 + i6;

        $i284 = $i279 - 4;

        $i280 = i2 + i3;

        $i283 = $i280 - 1;

        $i281 = i1457 + i6;

        $i282 = $i281 - 4;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i285, $i284, $i283, $i282);

        $r17 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        if $r17 == null goto label51;

        $r20 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r20);

        $i296 = i2 + i3;

        $i303 = $i296 - 4;

        $i297 = i1457 + i6;

        $i302 = $i297 - 3;

        $i298 = i2 + i3;

        $i301 = $i298 - 5;

        $i299 = i1457 + i6;

        $i300 = $i299 - 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i303, $i302, $i301, $i300);

        $i304 = i2 + i3;

        $i311 = $i304 - 2;

        $i305 = i1457 + i6;

        $i310 = $i305 - 4;

        $i306 = i2 + i3;

        $i309 = $i306 - 3;

        $i307 = i1457 + i6;

        $i308 = $i307 - 4;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i311, $i310, $i309, $i308);

        $i312 = i2 + i3;

        $i319 = $i312 - 1;

        $i313 = i1457 + i6;

        $i318 = $i313 - 5;

        $i314 = i2 + i3;

        $i317 = $i314 - 1;

        $i315 = i1457 + i6;

        $i316 = $i315 - 5;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i319, $i318, $i317, $i316);

        $i320 = i2 + i3;

        $i326 = $i320 - 6;

        $i321 = i1457 + i6;

        $i325 = $i321 - 2;

        $i324 = i2 + 3;

        $i322 = i1457 + i6;

        $i323 = $i322 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i326, $i325, $i324, $i323);

     label51:
        $r18 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor3>;

        if $r18 == null goto label78;

        $r19 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor3>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r19);

        $i291 = i2 + 2;

        $i286 = i1457 + i6;

        $i290 = $i286 - 2;

        $i289 = i2 + 2;

        $i287 = i1457 + i6;

        $i288 = $i287 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i291, $i290, $i289, $i288);

        $i295 = i2 + 1;

        $i292 = i1457 + i6;

        $i294 = $i292 - 3;

        $i293 = i2 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i295, $i294, $i293, i1457);

        goto label78;

     label52:
        if $z0 == 0 goto label65;

        if z1 == 0 goto label57;

        $r76 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r76);

        $i1386 = i2 + 3;

        $i1385 = i1457 + 1;

        $i1384 = i2 + 4;

        $i1383 = i1457 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1386, $i1385, $i1384, $i1383);

        $i1390 = i2 + 1;

        $i1389 = i1457 + 2;

        $i1388 = i2 + 2;

        $i1387 = i1457 + 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1390, $i1389, $i1388, $i1387);

        $i1392 = i1457 + 3;

        $i1391 = i1457 + 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i2, $i1392, i2, $i1391);

        $i1395 = i2 + 5;

        $i1393 = i2 + i3;

        $i1394 = $i1393 - 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1395, i1457, $i1394, i1457);

        $i1396 = i2 + i3;

        $i1401 = $i1396 - 2;

        $i1400 = i1457 + 1;

        $i1397 = i2 + i3;

        $i1399 = $i1397 - 2;

        $i1398 = i1457 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1401, $i1400, $i1399, $i1398);

        $i1402 = i2 + i3;

        $i1408 = $i1402 - 1;

        $i1407 = i1457 + 2;

        $i1403 = i2 + i3;

        $i1406 = $i1403 - 1;

        $i1404 = i1457 + i6;

        $i1405 = $i1404 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1408, $i1407, $i1406, $i1405);

        i1475 = 3;

     label53:
        $i1409 = i6 - 2;

        if i1475 >= $i1409 goto label54;

        $i1449 = i2 + 2;

        $i1456 = $i1449 - i1475;

        $i1450 = i1457 + 1;

        $i1455 = $i1450 + i1475;

        $i1451 = i2 + 2;

        $i1454 = $i1451 - i1475;

        $i1452 = i1457 + 1;

        $i1453 = $i1452 + i1475;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1456, $i1455, $i1454, $i1453);

        i1475 = i1475 + 1;

        goto label53;

     label54:
        $i1410 = i2 - i6;

        $i1417 = $i1410 + 3;

        $i1411 = i1457 + i6;

        $i1416 = $i1411 - 1;

        $i1412 = i2 - i6;

        $i1415 = $i1412 + 4;

        $i1413 = i1457 + i6;

        $i1414 = $i1413 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1417, $i1416, $i1415, $i1414);

        $r77 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor2>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r77);

        $i1421 = i2 + 3;

        $i1420 = i1457 + 2;

        $i1419 = i2 + 4;

        $i1418 = i1457 + 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1421, $i1420, $i1419, $i1418);

        $i1425 = i2 + 1;

        $i1424 = i1457 + 3;

        $i1423 = i2 + 2;

        $i1422 = i1457 + 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1425, $i1424, $i1423, $i1422);

        $i1427 = i1457 + 4;

        $i1426 = i1457 + 4;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i2, $i1427, i2, $i1426);

        $i1432 = i2 + 5;

        $i1431 = i1457 + 1;

        $i1428 = i2 + i3;

        $i1430 = $i1428 - 3;

        $i1429 = i1457 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1432, $i1431, $i1430, $i1429);

        $i1433 = i2 + i3;

        $i1439 = $i1433 - 2;

        $i1438 = i1457 + 2;

        $i1434 = i2 + i3;

        $i1437 = $i1434 - 2;

        $i1435 = i1457 + i6;

        $i1436 = $i1435 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1439, $i1438, $i1437, $i1436);

        i1476 = 3;

     label55:
        $i1440 = i6 - 2;

        if i1476 >= $i1440 goto label56;

        $i1441 = i2 + 2;

        $i1448 = $i1441 - i1476;

        $i1442 = i1457 + 2;

        $i1447 = $i1442 + i1476;

        $i1443 = i2 + 2;

        $i1446 = $i1443 - i1476;

        $i1444 = i1457 + 2;

        $i1445 = $i1444 + i1476;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1448, $i1447, $i1446, $i1445);

        i1476 = i1476 + 1;

        goto label55;

     label56:
        goto label78;

     label57:
        if i1 != 0 goto label63;

        $r71 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r71);

        $i1306 = i2 + 3;

        $i1305 = i1457 + 1;

        $i1304 = i2 + 4;

        $i1303 = i1457 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1306, $i1305, $i1304, $i1303);

        $i1310 = i2 + 1;

        $i1309 = i1457 + 2;

        $i1308 = i2 + 2;

        $i1307 = i1457 + 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1310, $i1309, $i1308, $i1307);

        $i1312 = i1457 + 3;

        $i1311 = i1457 + 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i2, $i1312, i2, $i1311);

        $i1315 = i2 + 5;

        $i1313 = i2 + i3;

        $i1314 = $i1313 - 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1315, i1457, $i1314, i1457);

        $i1316 = i2 + i3;

        $i1321 = $i1316 - 2;

        $i1320 = i1457 + 1;

        $i1317 = i2 + i3;

        $i1319 = $i1317 - 2;

        $i1318 = i1457 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1321, $i1320, $i1319, $i1318);

        $i1322 = i2 + i3;

        $i1328 = $i1322 - 1;

        $i1327 = i1457 + 2;

        $i1323 = i2 + i3;

        $i1326 = $i1323 - 1;

        $i1324 = i1457 + i6;

        $i1325 = $i1324 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1328, $i1327, $i1326, $i1325);

        i1477 = 3;

     label58:
        $i1329 = i6 - 2;

        if i1477 >= $i1329 goto label59;

        $i1375 = i2 + 2;

        $i1382 = $i1375 - i1477;

        $i1376 = i1457 + 1;

        $i1381 = $i1376 + i1477;

        $i1377 = i2 + 2;

        $i1380 = $i1377 - i1477;

        $i1378 = i1457 + 1;

        $i1379 = $i1378 + i1477;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1382, $i1381, $i1380, $i1379);

        i1477 = i1477 + 1;

        goto label58;

     label59:
        $i1330 = i2 - i6;

        $i1337 = $i1330 + 3;

        $i1331 = i1457 + i6;

        $i1336 = $i1331 - 1;

        $i1332 = i2 - i6;

        $i1335 = $i1332 + 4;

        $i1333 = i1457 + i6;

        $i1334 = $i1333 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1337, $i1336, $i1335, $i1334);

        $r72 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        if $r72 == null goto label62;

        $r75 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r75);

        $i1354 = i2 + 3;

        $i1353 = i1457 + 2;

        $i1352 = i2 + 4;

        $i1351 = i1457 + 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1354, $i1353, $i1352, $i1351);

        $i1358 = i2 + 1;

        $i1357 = i1457 + 3;

        $i1356 = i2 + 2;

        $i1355 = i1457 + 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1358, $i1357, $i1356, $i1355);

        $i1360 = i1457 + 4;

        $i1359 = i1457 + 4;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i2, $i1360, i2, $i1359);

        i1478 = 3;

     label60:
        $i1361 = i6 - 2;

        if i1478 >= $i1361 goto label61;

        $i1367 = i2 + 2;

        $i1374 = $i1367 - i1478;

        $i1368 = i1457 + 2;

        $i1373 = $i1368 + i1478;

        $i1369 = i2 + 2;

        $i1372 = $i1369 - i1478;

        $i1370 = i1457 + 2;

        $i1371 = $i1370 + i1478;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1374, $i1373, $i1372, $i1371);

        i1478 = i1478 + 1;

        goto label60;

     label61:
        $i1366 = i2 + 5;

        $i1365 = i1457 + 1;

        $i1362 = i2 + i3;

        $i1364 = $i1362 - 4;

        $i1363 = i1457 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1366, $i1365, $i1364, $i1363);

     label62:
        $r73 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor3>;

        if $r73 == null goto label78;

        $r74 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor3>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r74);

        $i1338 = i2 + i3;

        $i1343 = $i1338 - 3;

        $i1342 = i1457 + 1;

        $i1339 = i2 + i3;

        $i1341 = $i1339 - 3;

        $i1340 = i1457 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1343, $i1342, $i1341, $i1340);

        $i1344 = i2 + i3;

        $i1350 = $i1344 - 2;

        $i1349 = i1457 + 2;

        $i1345 = i2 + i3;

        $i1348 = $i1345 - 2;

        $i1346 = i1457 + i6;

        $i1347 = $i1346 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1350, $i1349, $i1348, $i1347);

        goto label78;

     label63:
        $r66 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r66);

        $i1252 = i2 + 3;

        $i1251 = i1457 + 1;

        $i1250 = i2 + 4;

        $i1249 = i1457 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1252, $i1251, $i1250, $i1249);

        $i1256 = i2 + 1;

        $i1255 = i1457 + 2;

        $i1254 = i2 + 2;

        $i1253 = i1457 + 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1256, $i1255, $i1254, $i1253);

        $i1258 = i1457 + 3;

        $i1257 = i1457 + 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i2, $i1258, i2, $i1257);

        $i1261 = i2 + 5;

        $i1259 = i2 + i3;

        $i1260 = $i1259 - 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1261, i1457, $i1260, i1457);

        $i1262 = i2 + i3;

        $i1267 = $i1262 - 2;

        $i1266 = i1457 + 1;

        $i1263 = i2 + i3;

        $i1265 = $i1263 - 2;

        $i1264 = i1457 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1267, $i1266, $i1265, $i1264);

        $i1268 = i2 + i3;

        $i1274 = $i1268 - 1;

        $i1273 = i1457 + 2;

        $i1269 = i2 + i3;

        $i1272 = $i1269 - 1;

        $i1270 = i1457 + i6;

        $i1271 = $i1270 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1274, $i1273, $i1272, $i1271);

        $r67 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        if $r67 == null goto label64;

        $r70 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r70);

        $i1291 = i2 + 3;

        $i1290 = i1457 + 2;

        $i1289 = i2 + 4;

        $i1288 = i1457 + 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1291, $i1290, $i1289, $i1288);

        $i1295 = i2 + 1;

        $i1294 = i1457 + 3;

        $i1293 = i2 + 2;

        $i1292 = i1457 + 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1295, $i1294, $i1293, $i1292);

        $i1297 = i1457 + 4;

        $i1296 = i1457 + 4;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i2, $i1297, i2, $i1296);

        $i1302 = i2 + 5;

        $i1301 = i1457 + 1;

        $i1298 = i2 + i3;

        $i1300 = $i1298 - 4;

        $i1299 = i1457 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1302, $i1301, $i1300, $i1299);

     label64:
        $r68 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor3>;

        if $r68 == null goto label78;

        $r69 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor3>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r69);

        $i1275 = i2 + i3;

        $i1280 = $i1275 - 3;

        $i1279 = i1457 + 1;

        $i1276 = i2 + i3;

        $i1278 = $i1276 - 3;

        $i1277 = i1457 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1280, $i1279, $i1278, $i1277);

        $i1281 = i2 + i3;

        $i1287 = $i1281 - 2;

        $i1286 = i1457 + 2;

        $i1282 = i2 + i3;

        $i1285 = $i1282 - 2;

        $i1283 = i1457 + i6;

        $i1284 = $i1283 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1287, $i1286, $i1285, $i1284);

        goto label78;

     label65:
        if z1 == 0 goto label70;

        $r64 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r64);

        $i1161 = i2 + i3;

        $i1166 = $i1161 - 4;

        $i1165 = i1457 + 1;

        $i1162 = i2 + i3;

        $i1164 = $i1162 - 5;

        $i1163 = i1457 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1166, $i1165, $i1164, $i1163);

        $i1167 = i2 + i3;

        $i1172 = $i1167 - 2;

        $i1171 = i1457 + 2;

        $i1168 = i2 + i3;

        $i1170 = $i1168 - 3;

        $i1169 = i1457 + 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1172, $i1171, $i1170, $i1169);

        $i1173 = i2 + i3;

        $i1178 = $i1173 - 1;

        $i1177 = i1457 + 3;

        $i1174 = i2 + i3;

        $i1176 = $i1174 - 1;

        $i1175 = i1457 + 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1178, $i1177, $i1176, $i1175);

        $i1179 = i2 + i3;

        $i1181 = $i1179 - 6;

        $i1180 = i2 + 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1181, i1457, $i1180, i1457);

        $i1185 = i2 + 1;

        $i1184 = i1457 + 1;

        $i1183 = i2 + 1;

        $i1182 = i1457 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1185, $i1184, $i1183, $i1182);

        $i1188 = i1457 + 2;

        $i1186 = i1457 + i6;

        $i1187 = $i1186 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i2, $i1188, i2, $i1187);

        i1479 = 3;

     label66:
        $i1189 = i6 - 2;

        if i1479 >= $i1189 goto label67;

        $i1239 = i2 + i3;

        $i1240 = $i1239 - 3;

        $i1248 = $i1240 + i1479;

        $i1241 = i1457 + 1;

        $i1247 = $i1241 + i1479;

        $i1242 = i2 + i3;

        $i1243 = $i1242 - 3;

        $i1246 = $i1243 + i1479;

        $i1244 = i1457 + 1;

        $i1245 = $i1244 + i1479;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1248, $i1247, $i1246, $i1245);

        i1479 = i1479 + 1;

        goto label66;

     label67:
        $i1190 = i2 + i3;

        $i1191 = $i1190 - 4;

        $i1199 = $i1191 + i6;

        $i1192 = i1457 + i6;

        $i1198 = $i1192 - 1;

        $i1193 = i2 + i3;

        $i1194 = $i1193 - 5;

        $i1197 = $i1194 + i6;

        $i1195 = i1457 + i6;

        $i1196 = $i1195 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1199, $i1198, $i1197, $i1196);

        $r65 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor2>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r65);

        $i1200 = i2 + i3;

        $i1205 = $i1200 - 4;

        $i1204 = i1457 + 2;

        $i1201 = i2 + i3;

        $i1203 = $i1201 - 5;

        $i1202 = i1457 + 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1205, $i1204, $i1203, $i1202);

        $i1206 = i2 + i3;

        $i1211 = $i1206 - 2;

        $i1210 = i1457 + 3;

        $i1207 = i2 + i3;

        $i1209 = $i1207 - 3;

        $i1208 = i1457 + 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1211, $i1210, $i1209, $i1208);

        $i1212 = i2 + i3;

        $i1217 = $i1212 - 1;

        $i1216 = i1457 + 4;

        $i1213 = i2 + i3;

        $i1215 = $i1213 - 1;

        $i1214 = i1457 + 4;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1217, $i1216, $i1215, $i1214);

        $i1218 = i2 + i3;

        $i1222 = $i1218 - 6;

        $i1221 = i1457 + 1;

        $i1220 = i2 + 2;

        $i1219 = i1457 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1222, $i1221, $i1220, $i1219);

        $i1227 = i2 + 1;

        $i1226 = i1457 + 2;

        $i1225 = i2 + 1;

        $i1223 = i1457 + i6;

        $i1224 = $i1223 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1227, $i1226, $i1225, $i1224);

        i1480 = 3;

     label68:
        $i1228 = i6 - 2;

        if i1480 >= $i1228 goto label69;

        $i1229 = i2 + i3;

        $i1230 = $i1229 - 3;

        $i1238 = $i1230 + i1480;

        $i1231 = i1457 + 2;

        $i1237 = $i1231 + i1480;

        $i1232 = i2 + i3;

        $i1233 = $i1232 - 3;

        $i1236 = $i1233 + i1480;

        $i1234 = i1457 + 2;

        $i1235 = $i1234 + i1480;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1238, $i1237, $i1236, $i1235);

        i1480 = i1480 + 1;

        goto label68;

     label69:
        goto label78;

     label70:
        if i1 != 0 goto label76;

        $r59 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r59);

        $i1069 = i2 + i3;

        $i1074 = $i1069 - 4;

        $i1073 = i1457 + 1;

        $i1070 = i2 + i3;

        $i1072 = $i1070 - 5;

        $i1071 = i1457 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1074, $i1073, $i1072, $i1071);

        $i1075 = i2 + i3;

        $i1080 = $i1075 - 2;

        $i1079 = i1457 + 2;

        $i1076 = i2 + i3;

        $i1078 = $i1076 - 3;

        $i1077 = i1457 + 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1080, $i1079, $i1078, $i1077);

        $i1081 = i2 + i3;

        $i1086 = $i1081 - 1;

        $i1085 = i1457 + 3;

        $i1082 = i2 + i3;

        $i1084 = $i1082 - 1;

        $i1083 = i1457 + 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1086, $i1085, $i1084, $i1083);

        $i1087 = i2 + i3;

        $i1089 = $i1087 - 6;

        $i1088 = i2 + 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1089, i1457, $i1088, i1457);

        $i1093 = i2 + 1;

        $i1092 = i1457 + 1;

        $i1091 = i2 + 1;

        $i1090 = i1457 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1093, $i1092, $i1091, $i1090);

        $i1096 = i1457 + 2;

        $i1094 = i1457 + i6;

        $i1095 = $i1094 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i2, $i1096, i2, $i1095);

        i1481 = 3;

     label71:
        $i1097 = i6 - 2;

        if i1481 >= $i1097 goto label72;

        $i1151 = i2 + i3;

        $i1152 = $i1151 - 3;

        $i1160 = $i1152 + i1481;

        $i1153 = i1457 + 1;

        $i1159 = $i1153 + i1481;

        $i1154 = i2 + i3;

        $i1155 = $i1154 - 3;

        $i1158 = $i1155 + i1481;

        $i1156 = i1457 + 1;

        $i1157 = $i1156 + i1481;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1160, $i1159, $i1158, $i1157);

        i1481 = i1481 + 1;

        goto label71;

     label72:
        $i1098 = i2 + i3;

        $i1099 = $i1098 - 4;

        $i1107 = $i1099 + i6;

        $i1100 = i1457 + i6;

        $i1106 = $i1100 - 1;

        $i1101 = i2 + i3;

        $i1102 = $i1101 - 5;

        $i1105 = $i1102 + i6;

        $i1103 = i1457 + i6;

        $i1104 = $i1103 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1107, $i1106, $i1105, $i1104);

        $r60 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        if $r60 == null goto label75;

        $r63 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r63);

        $i1117 = i2 + i3;

        $i1122 = $i1117 - 4;

        $i1121 = i1457 + 2;

        $i1118 = i2 + i3;

        $i1120 = $i1118 - 5;

        $i1119 = i1457 + 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1122, $i1121, $i1120, $i1119);

        $i1123 = i2 + i3;

        $i1128 = $i1123 - 2;

        $i1127 = i1457 + 3;

        $i1124 = i2 + i3;

        $i1126 = $i1124 - 3;

        $i1125 = i1457 + 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1128, $i1127, $i1126, $i1125);

        $i1129 = i2 + i3;

        $i1134 = $i1129 - 1;

        $i1133 = i1457 + 4;

        $i1130 = i2 + i3;

        $i1132 = $i1130 - 1;

        $i1131 = i1457 + 4;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1134, $i1133, $i1132, $i1131);

        i1482 = 3;

     label73:
        $i1135 = i6 - 2;

        if i1482 >= $i1135 goto label74;

        $i1141 = i2 + i3;

        $i1142 = $i1141 - 3;

        $i1150 = $i1142 + i1482;

        $i1143 = i1457 + 2;

        $i1149 = $i1143 + i1482;

        $i1144 = i2 + i3;

        $i1145 = $i1144 - 3;

        $i1148 = $i1145 + i1482;

        $i1146 = i1457 + 2;

        $i1147 = $i1146 + i1482;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1150, $i1149, $i1148, $i1147);

        i1482 = i1482 + 1;

        goto label73;

     label74:
        $i1136 = i2 + i3;

        $i1140 = $i1136 - 6;

        $i1139 = i1457 + 1;

        $i1138 = i2 + 3;

        $i1137 = i1457 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1140, $i1139, $i1138, $i1137);

     label75:
        $r61 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor3>;

        if $r61 == null goto label78;

        $r62 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor3>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r62);

        $i1111 = i2 + 2;

        $i1110 = i1457 + 1;

        $i1109 = i2 + 2;

        $i1108 = i1457 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1111, $i1110, $i1109, $i1108);

        $i1116 = i2 + 1;

        $i1115 = i1457 + 2;

        $i1114 = i2 + 1;

        $i1112 = i1457 + i6;

        $i1113 = $i1112 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1116, $i1115, $i1114, $i1113);

        goto label78;

     label76:
        $r54 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r54);

        $i1009 = i2 + i3;

        $i1014 = $i1009 - 4;

        $i1013 = i1457 + 1;

        $i1010 = i2 + i3;

        $i1012 = $i1010 - 5;

        $i1011 = i1457 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1014, $i1013, $i1012, $i1011);

        $i1015 = i2 + i3;

        $i1020 = $i1015 - 2;

        $i1019 = i1457 + 2;

        $i1016 = i2 + i3;

        $i1018 = $i1016 - 3;

        $i1017 = i1457 + 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1020, $i1019, $i1018, $i1017);

        $i1021 = i2 + i3;

        $i1026 = $i1021 - 1;

        $i1025 = i1457 + 3;

        $i1022 = i2 + i3;

        $i1024 = $i1022 - 1;

        $i1023 = i1457 + 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1026, $i1025, $i1024, $i1023);

        $i1027 = i2 + i3;

        $i1029 = $i1027 - 6;

        $i1028 = i2 + 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1029, i1457, $i1028, i1457);

        $i1033 = i2 + 1;

        $i1032 = i1457 + 1;

        $i1031 = i2 + 1;

        $i1030 = i1457 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1033, $i1032, $i1031, $i1030);

        $i1036 = i1457 + 2;

        $i1034 = i1457 + i6;

        $i1035 = $i1034 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i2, $i1036, i2, $i1035);

        $r55 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        if $r55 == null goto label77;

        $r58 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r58);

        $i1046 = i2 + i3;

        $i1051 = $i1046 - 4;

        $i1050 = i1457 + 2;

        $i1047 = i2 + i3;

        $i1049 = $i1047 - 5;

        $i1048 = i1457 + 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1051, $i1050, $i1049, $i1048);

        $i1052 = i2 + i3;

        $i1057 = $i1052 - 2;

        $i1056 = i1457 + 3;

        $i1053 = i2 + i3;

        $i1055 = $i1053 - 3;

        $i1054 = i1457 + 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1057, $i1056, $i1055, $i1054);

        $i1058 = i2 + i3;

        $i1063 = $i1058 - 1;

        $i1062 = i1457 + 4;

        $i1059 = i2 + i3;

        $i1061 = $i1059 - 1;

        $i1060 = i1457 + 4;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1063, $i1062, $i1061, $i1060);

        $i1064 = i2 + i3;

        $i1068 = $i1064 - 6;

        $i1067 = i1457 + 1;

        $i1066 = i2 + 3;

        $i1065 = i1457 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1068, $i1067, $i1066, $i1065);

     label77:
        $r56 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor3>;

        if $r56 == null goto label78;

        $r57 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor3>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r57);

        $i1040 = i2 + 2;

        $i1039 = i1457 + 1;

        $i1038 = i2 + 2;

        $i1037 = i1457 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1040, $i1039, $i1038, $i1037);

        $i1045 = i2 + 1;

        $i1044 = i1457 + 2;

        $i1043 = i2 + 1;

        $i1041 = i1457 + i6;

        $i1042 = $i1041 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1045, $i1044, $i1043, $i1042);

     label78:
        return;
    }

    protected void paintExcelTabBorder(java.awt.Graphics, int, int, int, int, int, int, boolean)
    {
        java.awt.Graphics r5;
        byte $b1092, $b1101, $b1128, $b1137;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        int i0, i1, $i2, $i3, $i4, $i5, i6, i7, $i8, i9, $i10, i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $i105, $i106, $i107, $i108, $i109, $i110, $i111, $i112, $i113, $i114, $i115, $i116, $i117, $i118, $i119, $i120, $i121, $i122, $i123, $i124, $i125, $i126, $i127, $i128, $i129, $i130, $i131, $i132, $i133, $i134, $i135, $i136, $i137, $i138, $i139, $i140, $i141, $i142, $i143, $i144, $i145, $i146, $i147, $i148, $i149, $i150, $i151, $i152, $i153, $i154, $i155, $i156, $i157, $i158, $i159, $i160, $i161, $i162, $i163, $i164, $i165, $i166, $i167, $i168, $i169, $i170, $i171, $i172, $i173, $i174, $i175, $i176, $i177, $i178, $i179, $i180, $i181, $i182, $i183, $i184, $i185, $i186, $i187, $i188, $i189, $i190, $i191, $i192, $i193, $i194, $i195, $i196, $i197, $i198, $i199, $i200, $i201, $i202, $i203, $i204, $i205, $i206, $i207, $i208, $i209, $i210, $i211, $i212, $i213, $i214, $i215, $i216, $i217, $i218, $i219, $i220, $i221, $i222, $i223, $i224, $i225, $i226, $i227, $i228, $i229, $i230, $i231, $i232, $i233, $i234, $i235, $i236, $i237, $i238, $i239, $i240, $i241, $i242, $i243, $i244, $i245, $i246, $i247, $i248, $i249, $i250, $i251, $i252, $i253, $i254, $i255, $i256, $i257, $i258, $i259, $i260, $i261, $i262, $i263, $i264, $i265, $i266, $i267, $i268, $i269, $i270, $i271, $i272, $i273, $i274, $i275, $i276, $i277, $i278, $i279, $i280, $i281, $i282, $i283, $i284, $i285, $i286, $i287, $i288, $i289, $i290, $i291, $i292, $i293, $i294, $i295, $i296, $i297, $i298, $i299, $i300, $i301, $i302, $i303, $i304, $i305, $i306, $i307, $i308, $i309, $i310, $i311, $i312, $i313, $i314, $i315, $i316, $i317, $i318, $i319, $i320, $i321, $i322, $i323, $i324, $i325, $i326, $i327, $i328, $i329, $i330, $i331, $i332, $i333, $i334, $i335, $i336, $i337, $i338, $i339, $i340, $i341, $i342, $i343, $i344, $i345, $i346, $i347, $i348, $i349, $i350, $i351, $i352, $i353, $i354, $i355, $i356, $i357, $i358, $i359, $i360, $i361, $i362, $i363, $i364, $i365, $i366, $i367, $i368, $i369, $i370, $i371, $i372, $i373, $i374, $i375, $i376, $i377, $i378, $i379, $i380, $i381, $i382, $i383, $i384, $i385, $i386, $i387, $i388, $i389, $i390, $i391, $i392, $i393, $i394, $i395, $i396, $i397, $i398, $i399, $i400, $i401, $i402, $i403, $i404, $i405, $i406, $i407, $i408, $i409, $i410, $i411, $i412, $i413, $i414, $i415, $i416, $i417, $i418, $i419, $i420, $i421, $i422, $i423, $i424, $i425, $i426, $i427, $i428, $i429, $i430, $i431, $i432, $i433, $i434, $i435, $i436, $i437, $i438, $i439, $i440, $i441, $i442, $i443, $i444, $i445, $i446, $i447, $i448, $i449, $i450, $i451, $i452, $i453, $i454, $i455, $i456, $i457, $i458, $i459, $i460, $i461, $i462, $i463, $i464, $i465, $i466, $i467, $i468, $i469, $i470, $i471, $i472, $i473, $i474, $i475, $i476, $i477, $i478, $i479, $i480, $i481, $i482, $i483, $i484, $i485, $i486, $i487, $i488, $i489, $i490, $i491, $i492, $i493, $i494, $i495, $i496, $i497, $i498, $i499, $i500, $i501, $i502, $i503, $i504, $i505, $i506, $i507, $i508, $i509, $i510, $i511, $i512, $i513, $i514, $i515, $i516, $i517, $i518, $i519, $i520, $i521, $i522, $i523, $i524, $i525, $i526, $i527, $i528, $i529, $i530, $i531, $i532, $i533, $i534, $i535, $i536, $i537, $i538, $i539, $i540, $i541, $i542, $i543, $i544, $i545, $i546, $i547, $i548, $i549, $i550, $i551, $i552, $i553, $i554, $i555, $i556, $i557, $i558, $i559, $i560, $i561, $i562, $i563, $i564, $i565, $i566, $i567, $i568, $i569, $i570, $i571, $i572, $i573, $i574, $i575, $i576, $i577, $i578, $i579, $i580, $i581, $i582, $i583, $i584, $i585, $i586, $i587, $i588, $i589, $i590, $i591, $i592, $i593, $i594, $i595, $i596, $i597, $i598, $i599, $i600, $i601, $i602, $i603, $i604, $i605, $i606, $i607, $i608, $i609, $i610, $i611, $i612, $i613, $i614, $i615, $i616, $i617, $i618, $i619, $i620, $i621, $i622, $i623, $i624, $i625, $i626, $i627, $i628, $i629, $i630, $i631, $i632, $i633, $i634, $i635, $i636, $i637, $i638, $i639, $i640, $i641, $i642, $i643, $i644, $i645, $i646, $i647, $i648, $i649, $i650, $i651, $i652, $i653, $i654, $i655, $i656, $i657, $i658, $i659, $i660, $i661, $i662, $i663, $i664, $i665, $i666, $i667, $i668, $i669, $i670, $i671, $i672, $i673, $i674, $i675, $i676, $i677, $i678, $i679, $i680, $i681, $i682, $i683, $i684, $i685, $i686, $i687, $i688, $i689, $i690, $i691, $i692, $i693, $i694, $i695, $i696, $i697, $i698, $i699, $i700, $i701, $i702, $i703, $i704, $i705, $i706, $i707, $i708, $i709, $i710, $i711, $i712, $i713, $i714, $i715, $i716, $i717, $i718, $i719, $i720, $i721, $i722, $i723, $i724, $i725, $i726, $i727, $i728, $i729, $i730, $i731, $i732, $i733, $i734, $i735, $i736, $i737, $i738, $i739, $i740, $i741, $i742, $i743, $i744, $i745, $i746, $i747, $i748, $i749, $i750, $i751, $i752, $i753, $i754, $i755, $i756, $i757, $i758, $i759, $i760, $i761, $i762, $i763, $i764, $i765, $i766, $i767, $i768, $i769, $i770, $i771, $i772, $i773, $i774, $i775, $i776, $i777, $i778, $i779, $i780, $i781, $i782, $i783, $i784, $i785, $i786, $i787, $i788, $i789, $i790, $i791, $i792, $i793, $i794, $i795, $i796, $i797, $i798, $i799, $i800, $i801, $i802, $i803, $i804, $i805, $i806, $i807, $i808, $i809, $i810, $i811, $i812, $i813, $i814, $i815, $i816, $i817, $i818, $i819, $i820, $i821, $i822, $i823, $i824, $i825, $i826, $i827, $i828, $i829, $i830, $i831, $i832, $i833, $i834, $i835, $i836, $i837, $i838, $i839, $i840, $i841, $i842, $i843, $i844, $i845, $i846, $i847, $i848, $i849, $i850, $i851, $i852, $i853, $i854, $i855, $i856, $i857, $i858, $i859, $i860, $i861, $i862, $i863, $i864, $i865, $i866, $i867, $i868, $i869, $i870, $i871, $i872, $i873, $i874, $i875, $i876, $i877, $i878, $i879, $i880, $i881, $i882, $i883, $i884, $i885, $i886, $i887, $i888, $i889, $i890, $i891, $i892, $i893, $i894, $i895, $i896, $i897, $i898, $i899, $i900, $i901, $i902, $i903, $i904, $i905, $i906, $i907, $i908, $i909, $i910, $i911, $i912, $i913, $i914, $i915, $i916, $i917, $i918, $i919, $i920, $i921, $i922, $i923, $i924, $i925, $i926, $i927, $i928, $i929, $i930, $i931, $i932, $i933, $i934, $i935, $i936, $i937, $i938, $i939, $i940, $i941, $i942, $i943, $i944, $i945, $i946, $i947, $i948, $i949, $i950, $i951, $i952, $i953, $i954, $i955, $i956, $i957, $i958, $i959, $i960, $i961, $i962, $i963, $i964, $i965, $i966, $i967, $i968, $i969, $i970, $i971, $i972, $i973, $i974, $i975, $i976, $i977, $i978, $i979, $i980, $i981, $i982, $i983, $i984, $i985, $i986, $i987, $i988, $i989, $i990, $i991, $i992, $i993, $i994, $i995, $i996, $i997, $i998, $i999, $i1000, $i1001, $i1002, $i1003, $i1004, $i1005, $i1006, $i1007, $i1008, $i1009, i1010, i1011, i1012, i1013, i1014, i1015, i1016, i1017, i1018, i1019, i1020, i1021, i1022, i1023, i1024, i1025, i1026, i1027, i1028, i1029, i1030, i1031, i1032, i1033, i1034, i1035, i1036, i1037, i1038, i1039, i1040, i1041, i1042, i1043, i1044, i1045, i1046, i1047, i1048, i1049, i1050, i1051, i1052, i1053, i1054, i1055, i1056, i1057, i1058, i1059, i1060, i1061, i1062, i1063, i1064, i1065, i1066, i1067, i1068, i1069, i1070, i1071, i1072, i1073, i1074, i1075, i1076, i1077, i1078, i1079, i1080, i1081, i1082, i1083, $i1084, $i1085, i1086, i1087, i1088, i1089, i1090, i1091, i1093, i1094, i1095, i1096, i1097, i1098, i1099, i1100, i1102, i1103, i1104, i1105, i1106, i1107, i1108, i1109, i1110, i1111, i1112, i1113, i1114, i1115, i1116, i1117, i1118, i1119, $i1120, $i1121, i1122, i1123, i1124, i1125, i1126, i1127, i1129, i1130, i1131, i1132, i1133, i1134, i1135, i1136, i1138, i1139, i1140, i1141, i1142, i1143, i1144, i1145;
        java.awt.ComponentOrientation $r2;
        java.awt.Color $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r73, $r74, $r75, $r76, $r77, $r78, $r79, $r80, $r81, $r82, $r84, $r85, $r86, $r87, $r88, $r89, $r90, $r91, $r92, $r93;
        boolean $z0, z1;
        com.jidesoft.swing.JideTabbedPane $r1, $r3, $r4, $r26, $r27, $r38, $r49, $r50, $r71, $r72, $r83;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        r5 := @parameter0: java.awt.Graphics;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i6 := @parameter3: int;

        i9 := @parameter4: int;

        i7 := @parameter5: int;

        i11 := @parameter6: int;

        z1 := @parameter7: boolean;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r2 = virtualinvoke $r1.<com.jidesoft.swing.JideTabbedPane: java.awt.ComponentOrientation getComponentOrientation()>();

        $z0 = virtualinvoke $r2.<java.awt.ComponentOrientation: boolean isLeftToRight()>();

        tableswitch(i0)
        {
            case 1: goto label115;
            case 2: goto label001;
            case 3: goto label073;
            case 4: goto label037;
            default: goto label115;
        };

     label001:
        if z1 == 0 goto label010;

        $r66 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor1>;

        virtualinvoke r5.<java.awt.Graphics: void setColor(java.awt.Color)>($r66);

        $i727 = i9 + 5;

        $i725 = i9 + i11;

        $i726 = $i725 - 5;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>(i6, $i727, i6, $i726);

        i1010 = 0;

        i1011 = 0;

     label002:
        $i728 = i7 / 2;

        $i729 = $i728 + 1;

        if i1010 >= $i729 goto label003;

        $i774 = i6 + 1;

        $i781 = $i774 + i1011;

        $i775 = i9 + 4;

        $i780 = $i775 - i1010;

        $i776 = i6 + 2;

        $i779 = $i776 + i1011;

        $i777 = i9 + 4;

        $i778 = $i777 - i1010;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i781, $i780, $i779, $i778);

        i1010 = i1010 + 1;

        i1011 = i1011 + 2;

        goto label002;

     label003:
        i1012 = 0;

        i1013 = 0;

     label004:
        $i730 = i7 / 2;

        $i731 = $i730 + 1;

        if i1012 >= $i731 goto label005;

        $i773 = i6 + i1013;

        $i765 = i9 + i11;

        $i766 = $i765 - 4;

        $i772 = $i766 + i1012;

        $i767 = i6 + 1;

        $i771 = $i767 + i1013;

        $i768 = i9 + i11;

        $i769 = $i768 - 4;

        $i770 = $i769 + i1012;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i773, $i772, $i771, $i770);

        i1012 = i1012 + 1;

        i1013 = i1013 + 2;

        goto label004;

     label005:
        $r67 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor2>;

        if $r67 == null goto label007;

        $r70 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor2>;

        virtualinvoke r5.<java.awt.Graphics: void setColor(java.awt.Color)>($r70);

        $i754 = i6 + 1;

        $i753 = i9 + 6;

        $i752 = i6 + 1;

        $i750 = i9 + i11;

        $i751 = $i750 - 6;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i754, $i753, $i752, $i751);

        i1014 = 0;

        i1015 = 0;

     label006:
        $i755 = i7 / 2;

        $i756 = $i755 + 1;

        if i1014 >= $i756 goto label007;

        $i757 = i6 + 1;

        $i764 = $i757 + i1015;

        $i758 = i9 + 5;

        $i763 = $i758 - i1014;

        $i759 = i6 + 2;

        $i762 = $i759 + i1015;

        $i760 = i9 + 5;

        $i761 = $i760 - i1014;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i764, $i763, $i762, $i761);

        i1014 = i1014 + 1;

        i1015 = i1015 + 2;

        goto label006;

     label007:
        $r68 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor3>;

        if $r68 == null goto label156;

        $r69 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor3>;

        virtualinvoke r5.<java.awt.Graphics: void setColor(java.awt.Color)>($r69);

        $i737 = i6 + 1;

        $i732 = i9 + i11;

        $i736 = $i732 - 5;

        $i735 = i6 + 1;

        $i733 = i9 + i11;

        $i734 = $i733 - 5;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i737, $i736, $i735, $i734);

        i1016 = 0;

        i1017 = 0;

     label008:
        $i738 = i7 / 2;

        $i739 = $i738 + 1;

        if i1016 >= $i739 goto label009;

        $i740 = i6 + 2;

        $i749 = $i740 + i1017;

        $i741 = i9 + i11;

        $i742 = $i741 - 4;

        $i748 = $i742 + i1016;

        $i743 = i6 + 3;

        $i747 = $i743 + i1017;

        $i744 = i9 + i11;

        $i745 = $i744 - 4;

        $i746 = $i745 + i1016;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i749, $i748, $i747, $i746);

        i1016 = i1016 + 1;

        i1017 = i1017 + 2;

        goto label008;

     label009:
        goto label156;

     label010:
        if i1 != 0 goto label019;

        $r61 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1>;

        virtualinvoke r5.<java.awt.Graphics: void setColor(java.awt.Color)>($r61);

        $i671 = i9 + 5;

        $i669 = i9 + i11;

        $i670 = $i669 - 5;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>(i6, $i671, i6, $i670);

        i1018 = 0;

        i1019 = 0;

     label011:
        $i672 = i7 / 2;

        $i673 = $i672 + 1;

        if i1018 >= $i673 goto label012;

        $i717 = i6 + 1;

        $i724 = $i717 + i1019;

        $i718 = i9 + 4;

        $i723 = $i718 - i1018;

        $i719 = i6 + 2;

        $i722 = $i719 + i1019;

        $i720 = i9 + 4;

        $i721 = $i720 - i1018;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i724, $i723, $i722, $i721);

        i1018 = i1018 + 1;

        i1019 = i1019 + 2;

        goto label011;

     label012:
        i1020 = 0;

        i1021 = 0;

     label013:
        $i674 = i7 / 2;

        $i675 = $i674 + 1;

        if i1020 >= $i675 goto label014;

        $i716 = i6 + i1021;

        $i708 = i9 + i11;

        $i709 = $i708 - 4;

        $i715 = $i709 + i1020;

        $i710 = i6 + 1;

        $i714 = $i710 + i1021;

        $i711 = i9 + i11;

        $i712 = $i711 - 4;

        $i713 = $i712 + i1020;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i716, $i715, $i714, $i713);

        i1020 = i1020 + 1;

        i1021 = i1021 + 2;

        goto label013;

     label014:
        $r62 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        if $r62 == null goto label016;

        $r65 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        virtualinvoke r5.<java.awt.Graphics: void setColor(java.awt.Color)>($r65);

        $i698 = i6 + 1;

        $i697 = i9 + 6;

        $i696 = i6 + 1;

        $i694 = i9 + i11;

        $i695 = $i694 - 6;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i698, $i697, $i696, $i695);

        i1022 = 0;

        i1023 = 0;

     label015:
        $i699 = i7 / 2;

        if i1022 >= $i699 goto label016;

        $i700 = i6 + 1;

        $i707 = $i700 + i1023;

        $i701 = i9 + 5;

        $i706 = $i701 - i1022;

        $i702 = i6 + 2;

        $i705 = $i702 + i1023;

        $i703 = i9 + 5;

        $i704 = $i703 - i1022;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i707, $i706, $i705, $i704);

        i1022 = i1022 + 1;

        i1023 = i1023 + 2;

        goto label015;

     label016:
        $r63 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor3>;

        if $r63 == null goto label156;

        $r64 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor3>;

        virtualinvoke r5.<java.awt.Graphics: void setColor(java.awt.Color)>($r64);

        $i681 = i6 + 1;

        $i676 = i9 + i11;

        $i680 = $i676 - 5;

        $i679 = i6 + 1;

        $i677 = i9 + i11;

        $i678 = $i677 - 5;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i681, $i680, $i679, $i678);

        i1024 = 0;

        i1025 = 0;

     label017:
        $i682 = i7 / 2;

        $i683 = $i682 + 1;

        if i1024 >= $i683 goto label018;

        $i684 = i6 + 2;

        $i693 = $i684 + i1025;

        $i685 = i9 + i11;

        $i686 = $i685 - 4;

        $i692 = $i686 + i1024;

        $i687 = i6 + 3;

        $i691 = $i687 + i1025;

        $i688 = i9 + i11;

        $i689 = $i688 - 4;

        $i690 = $i689 + i1024;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i693, $i692, $i691, $i690);

        i1024 = i1024 + 1;

        i1025 = i1025 + 2;

        goto label017;

     label018:
        goto label156;

     label019:
        $r49 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i563 = virtualinvoke $r49.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        $i564 = $i563 - 1;

        if i1 != $i564 goto label028;

        $r56 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1>;

        virtualinvoke r5.<java.awt.Graphics: void setColor(java.awt.Color)>($r56);

        $i622 = i9 + 5;

        $i620 = i9 + i11;

        $i621 = $i620 - 5;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>(i6, $i622, i6, $i621);

        i1026 = 0;

        i1027 = 0;

     label020:
        if i1026 >= 4 goto label021;

        $i661 = i6 + 1;

        $i668 = $i661 + i1027;

        $i662 = i9 + 4;

        $i667 = $i662 - i1026;

        $i663 = i6 + 2;

        $i666 = $i663 + i1027;

        $i664 = i9 + 4;

        $i665 = $i664 - i1026;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i668, $i667, $i666, $i665);

        i1026 = i1026 + 1;

        i1027 = i1027 + 2;

        goto label020;

     label021:
        i1028 = 0;

        i1029 = 0;

     label022:
        if i1028 >= 5 goto label023;

        $i660 = i6 + i1029;

        $i652 = i9 + i11;

        $i653 = $i652 - 4;

        $i659 = $i653 + i1028;

        $i654 = i6 + 1;

        $i658 = $i654 + i1029;

        $i655 = i9 + i11;

        $i656 = $i655 - 4;

        $i657 = $i656 + i1028;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i660, $i659, $i658, $i657);

        i1028 = i1028 + 1;

        i1029 = i1029 + 2;

        goto label022;

     label023:
        $r57 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        if $r57 == null goto label025;

        $r60 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        virtualinvoke r5.<java.awt.Graphics: void setColor(java.awt.Color)>($r60);

        $i643 = i6 + 1;

        $i642 = i9 + 6;

        $i641 = i6 + 1;

        $i639 = i9 + i11;

        $i640 = $i639 - 6;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i643, $i642, $i641, $i640);

        i1030 = 0;

        i1031 = 0;

     label024:
        if i1030 >= 4 goto label025;

        $i644 = i6 + 1;

        $i651 = $i644 + i1031;

        $i645 = i9 + 5;

        $i650 = $i645 - i1030;

        $i646 = i6 + 2;

        $i649 = $i646 + i1031;

        $i647 = i9 + 5;

        $i648 = $i647 - i1030;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i651, $i650, $i649, $i648);

        i1030 = i1030 + 1;

        i1031 = i1031 + 2;

        goto label024;

     label025:
        $r58 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor3>;

        if $r58 == null goto label156;

        $r59 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor3>;

        virtualinvoke r5.<java.awt.Graphics: void setColor(java.awt.Color)>($r59);

        $i628 = i6 + 1;

        $i623 = i9 + i11;

        $i627 = $i623 - 5;

        $i626 = i6 + 1;

        $i624 = i9 + i11;

        $i625 = $i624 - 5;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i628, $i627, $i626, $i625);

        i1032 = 0;

        i1033 = 0;

     label026:
        if i1032 >= 5 goto label027;

        $i629 = i6 + 2;

        $i638 = $i629 + i1033;

        $i630 = i9 + i11;

        $i631 = $i630 - 4;

        $i637 = $i631 + i1032;

        $i632 = i6 + 3;

        $i636 = $i632 + i1033;

        $i633 = i9 + i11;

        $i634 = $i633 - 4;

        $i635 = $i634 + i1032;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i638, $i637, $i636, $i635);

        i1032 = i1032 + 1;

        i1033 = i1033 + 2;

        goto label026;

     label027:
        goto label156;

     label028:
        $r50 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i565 = virtualinvoke $r50.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        $i566 = $i565 - 1;

        if i1 == $i566 goto label156;

        $r51 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1>;

        virtualinvoke r5.<java.awt.Graphics: void setColor(java.awt.Color)>($r51);

        $i569 = i9 + 5;

        $i567 = i9 + i11;

        $i568 = $i567 - 5;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>(i6, $i569, i6, $i568);

        i1034 = 0;

        i1035 = 0;

     label029:
        if i1034 >= 4 goto label030;

        $i612 = i6 + 1;

        $i619 = $i612 + i1035;

        $i613 = i9 + 4;

        $i618 = $i613 - i1034;

        $i614 = i6 + 2;

        $i617 = $i614 + i1035;

        $i615 = i9 + 4;

        $i616 = $i615 - i1034;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i619, $i618, $i617, $i616);

        i1034 = i1034 + 1;

        i1035 = i1035 + 2;

        goto label029;

     label030:
        i1036 = 0;

        i1037 = 0;

     label031:
        $i570 = i7 / 2;

        $i571 = $i570 + 1;

        if i1036 >= $i571 goto label032;

        $i611 = i6 + i1037;

        $i603 = i9 + i11;

        $i604 = $i603 - 4;

        $i610 = $i604 + i1036;

        $i605 = i6 + 1;

        $i609 = $i605 + i1037;

        $i606 = i9 + i11;

        $i607 = $i606 - 4;

        $i608 = $i607 + i1036;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i611, $i610, $i609, $i608);

        i1036 = i1036 + 1;

        i1037 = i1037 + 2;

        goto label031;

     label032:
        $r52 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        if $r52 == null goto label034;

        $r55 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        virtualinvoke r5.<java.awt.Graphics: void setColor(java.awt.Color)>($r55);

        $i594 = i6 + 1;

        $i593 = i9 + 6;

        $i592 = i6 + 1;

        $i590 = i9 + i11;

        $i591 = $i590 - 6;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i594, $i593, $i592, $i591);

        i1038 = 0;

        i1039 = 0;

     label033:
        if i1038 >= 4 goto label034;

        $i595 = i6 + 1;

        $i602 = $i595 + i1039;

        $i596 = i9 + 5;

        $i601 = $i596 - i1038;

        $i597 = i6 + 2;

        $i600 = $i597 + i1039;

        $i598 = i9 + 5;

        $i599 = $i598 - i1038;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i602, $i601, $i600, $i599);

        i1038 = i1038 + 1;

        i1039 = i1039 + 2;

        goto label033;

     label034:
        $r53 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor3>;

        if $r53 == null goto label156;

        $r54 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor3>;

        virtualinvoke r5.<java.awt.Graphics: void setColor(java.awt.Color)>($r54);

        $i577 = i6 + 1;

        $i572 = i9 + i11;

        $i576 = $i572 - 5;

        $i575 = i6 + 1;

        $i573 = i9 + i11;

        $i574 = $i573 - 5;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i577, $i576, $i575, $i574);

        i1040 = 0;

        i1041 = 0;

     label035:
        $i578 = i7 / 2;

        $i579 = $i578 + 1;

        if i1040 >= $i579 goto label036;

        $i580 = i6 + 2;

        $i589 = $i580 + i1041;

        $i581 = i9 + i11;

        $i582 = $i581 - 4;

        $i588 = $i582 + i1040;

        $i583 = i6 + 3;

        $i587 = $i583 + i1041;

        $i584 = i9 + i11;

        $i585 = $i584 - 4;

        $i586 = $i585 + i1040;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i589, $i588, $i587, $i586);

        i1040 = i1040 + 1;

        i1041 = i1041 + 2;

        goto label035;

     label036:
        goto label156;

     label037:
        if z1 == 0 goto label046;

        $r21 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor1>;

        virtualinvoke r5.<java.awt.Graphics: void setColor(java.awt.Color)>($r21);

        $i220 = i6 + i7;

        $i226 = $i220 - 1;

        $i225 = i9 + 5;

        $i221 = i6 + i7;

        $i224 = $i221 - 1;

        $i222 = i9 + i11;

        $i223 = $i222 - 5;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i226, $i225, $i224, $i223);

        i1042 = 0;

        i1043 = 0;

     label038:
        $i227 = i7 / 2;

        $i228 = $i227 + 1;

        if i1042 >= $i228 goto label039;

        $i284 = i6 + i7;

        $i285 = $i284 - 2;

        $i293 = $i285 - i1043;

        $i286 = i9 + 4;

        $i292 = $i286 - i1042;

        $i287 = i6 + i7;

        $i288 = $i287 - 3;

        $i291 = $i288 - i1043;

        $i289 = i9 + 4;

        $i290 = $i289 - i1042;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i293, $i292, $i291, $i290);

        i1042 = i1042 + 1;

        i1043 = i1043 + 2;

        goto label038;

     label039:
        i1044 = 0;

        i1045 = 0;

     label040:
        $i229 = i7 / 2;

        $i230 = $i229 + 1;

        if i1044 >= $i230 goto label041;

        $i272 = i6 + i7;

        $i273 = $i272 - 1;

        $i283 = $i273 - i1045;

        $i274 = i9 + i11;

        $i275 = $i274 - 4;

        $i282 = $i275 + i1044;

        $i276 = i6 + i7;

        $i277 = $i276 - 2;

        $i281 = $i277 - i1045;

        $i278 = i9 + i11;

        $i279 = $i278 - 4;

        $i280 = $i279 + i1044;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i283, $i282, $i281, $i280);

        i1044 = i1044 + 1;

        i1045 = i1045 + 2;

        goto label040;

     label041:
        $r22 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor2>;

        if $r22 == null goto label043;

        $r25 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor2>;

        virtualinvoke r5.<java.awt.Graphics: void setColor(java.awt.Color)>($r25);

        $i253 = i6 + i7;

        $i259 = $i253 - 2;

        $i258 = i9 + 6;

        $i254 = i6 + i7;

        $i257 = $i254 - 2;

        $i255 = i9 + i11;

        $i256 = $i255 - 6;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i259, $i258, $i257, $i256);

        i1046 = 0;

        i1047 = 0;

     label042:
        $i260 = i7 / 2;

        $i261 = $i260 + 1;

        if i1046 >= $i261 goto label043;

        $i262 = i6 + i7;

        $i263 = $i262 - 2;

        $i271 = $i263 - i1047;

        $i264 = i9 + 5;

        $i270 = $i264 - i1046;

        $i265 = i6 + i7;

        $i266 = $i265 - 3;

        $i269 = $i266 - i1047;

        $i267 = i9 + 5;

        $i268 = $i267 - i1046;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i271, $i270, $i269, $i268);

        i1046 = i1046 + 1;

        i1047 = i1047 + 2;

        goto label042;

     label043:
        $r23 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor3>;

        if $r23 == null goto label156;

        $r24 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor3>;

        virtualinvoke r5.<java.awt.Graphics: void setColor(java.awt.Color)>($r24);

        $i231 = i6 + i7;

        $i238 = $i231 - 2;

        $i232 = i9 + i11;

        $i237 = $i232 - 5;

        $i233 = i6 + i7;

        $i236 = $i233 - 2;

        $i234 = i9 + i11;

        $i235 = $i234 - 5;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i238, $i237, $i236, $i235);

        i1048 = 0;

        i1049 = 0;

     label044:
        $i239 = i7 / 2;

        $i240 = $i239 + 1;

        if i1048 >= $i240 goto label045;

        $i241 = i6 + i7;

        $i242 = $i241 - 3;

        $i252 = $i242 - i1049;

        $i243 = i9 + i11;

        $i244 = $i243 - 4;

        $i251 = $i244 + i1048;

        $i245 = i6 + i7;

        $i246 = $i245 - 4;

        $i250 = $i246 - i1049;

        $i247 = i9 + i11;

        $i248 = $i247 - 4;

        $i249 = $i248 + i1048;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i252, $i251, $i250, $i249);

        i1048 = i1048 + 1;

        i1049 = i1049 + 2;

        goto label044;

     label045:
        goto label156;

     label046:
        if i1 != 0 goto label055;

        $r16 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1>;

        virtualinvoke r5.<java.awt.Graphics: void setColor(java.awt.Color)>($r16);

        $i146 = i6 + i7;

        $i152 = $i146 - 1;

        $i151 = i9 + 5;

        $i147 = i6 + i7;

        $i150 = $i147 - 1;

        $i148 = i9 + i11;

        $i149 = $i148 - 5;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i152, $i151, $i150, $i149);

        i1050 = 0;

        i1051 = 0;

     label047:
        $i153 = i7 / 2;

        $i154 = $i153 + 1;

        if i1050 >= $i154 goto label048;

        $i210 = i6 + i7;

        $i211 = $i210 - 2;

        $i219 = $i211 - i1051;

        $i212 = i9 + 4;

        $i218 = $i212 - i1050;

        $i213 = i6 + i7;

        $i214 = $i213 - 3;

        $i217 = $i214 - i1051;

        $i215 = i9 + 4;

        $i216 = $i215 - i1050;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i219, $i218, $i217, $i216);

        i1050 = i1050 + 1;

        i1051 = i1051 + 2;

        goto label047;

     label048:
        i1052 = 0;

        i1053 = 0;

     label049:
        $i155 = i7 / 2;

        $i156 = $i155 + 1;

        if i1052 >= $i156 goto label050;

        $i198 = i6 + i7;

        $i199 = $i198 - 1;

        $i209 = $i199 - i1053;

        $i200 = i9 + i11;

        $i201 = $i200 - 4;

        $i208 = $i201 + i1052;

        $i202 = i6 + i7;

        $i203 = $i202 - 2;

        $i207 = $i203 - i1053;

        $i204 = i9 + i11;

        $i205 = $i204 - 4;

        $i206 = $i205 + i1052;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i209, $i208, $i207, $i206);

        i1052 = i1052 + 1;

        i1053 = i1053 + 2;

        goto label049;

     label050:
        $r17 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        if $r17 == null goto label052;

        $r20 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        virtualinvoke r5.<java.awt.Graphics: void setColor(java.awt.Color)>($r20);

        $i179 = i6 + i7;

        $i185 = $i179 - 2;

        $i184 = i9 + 6;

        $i180 = i6 + i7;

        $i183 = $i180 - 2;

        $i181 = i9 + i11;

        $i182 = $i181 - 6;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i185, $i184, $i183, $i182);

        i1054 = 0;

        i1055 = 0;

     label051:
        $i186 = i7 / 2;

        $i187 = $i186 + 1;

        if i1054 >= $i187 goto label052;

        $i188 = i6 + i7;

        $i189 = $i188 - 2;

        $i197 = $i189 - i1055;

        $i190 = i9 + 5;

        $i196 = $i190 - i1054;

        $i191 = i6 + i7;

        $i192 = $i191 - 3;

        $i195 = $i192 - i1055;

        $i193 = i9 + 5;

        $i194 = $i193 - i1054;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i197, $i196, $i195, $i194);

        i1054 = i1054 + 1;

        i1055 = i1055 + 2;

        goto label051;

     label052:
        $r18 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor3>;

        if $r18 == null goto label156;

        $r19 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor3>;

        virtualinvoke r5.<java.awt.Graphics: void setColor(java.awt.Color)>($r19);

        $i157 = i6 + i7;

        $i164 = $i157 - 2;

        $i158 = i9 + i11;

        $i163 = $i158 - 5;

        $i159 = i6 + i7;

        $i162 = $i159 - 2;

        $i160 = i9 + i11;

        $i161 = $i160 - 5;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i164, $i163, $i162, $i161);

        i1056 = 0;

        i1057 = 0;

     label053:
        $i165 = i7 / 2;

        $i166 = $i165 + 1;

        if i1056 >= $i166 goto label054;

        $i167 = i6 + i7;

        $i168 = $i167 - 3;

        $i178 = $i168 - i1057;

        $i169 = i9 + i11;

        $i170 = $i169 - 4;

        $i177 = $i170 + i1056;

        $i171 = i6 + i7;

        $i172 = $i171 - 4;

        $i176 = $i172 - i1057;

        $i173 = i9 + i11;

        $i174 = $i173 - 4;

        $i175 = $i174 + i1056;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i178, $i177, $i176, $i175);

        i1056 = i1056 + 1;

        i1057 = i1057 + 2;

        goto label053;

     label054:
        goto label156;

     label055:
        $r3 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i2 = virtualinvoke $r3.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        $i3 = $i2 - 1;

        if i1 != $i3 goto label064;

        $r11 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1>;

        virtualinvoke r5.<java.awt.Graphics: void setColor(java.awt.Color)>($r11);

        $i80 = i6 + i7;

        $i86 = $i80 - 1;

        $i85 = i9 + 5;

        $i81 = i6 + i7;

        $i84 = $i81 - 1;

        $i82 = i9 + i11;

        $i83 = $i82 - 5;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i86, $i85, $i84, $i83);

        i1058 = 0;

        i1059 = 0;

     label056:
        if i1058 >= 4 goto label057;

        $i136 = i6 + i7;

        $i137 = $i136 - 2;

        $i145 = $i137 - i1059;

        $i138 = i9 + 4;

        $i144 = $i138 - i1058;

        $i139 = i6 + i7;

        $i140 = $i139 - 3;

        $i143 = $i140 - i1059;

        $i141 = i9 + 4;

        $i142 = $i141 - i1058;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i145, $i144, $i143, $i142);

        i1058 = i1058 + 1;

        i1059 = i1059 + 2;

        goto label056;

     label057:
        i1060 = 0;

        i1061 = 0;

     label058:
        if i1060 >= 5 goto label059;

        $i124 = i6 + i7;

        $i125 = $i124 - 1;

        $i135 = $i125 - i1061;

        $i126 = i9 + i11;

        $i127 = $i126 - 4;

        $i134 = $i127 + i1060;

        $i128 = i6 + i7;

        $i129 = $i128 - 2;

        $i133 = $i129 - i1061;

        $i130 = i9 + i11;

        $i131 = $i130 - 4;

        $i132 = $i131 + i1060;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i135, $i134, $i133, $i132);

        i1060 = i1060 + 1;

        i1061 = i1061 + 2;

        goto label058;

     label059:
        $r12 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        if $r12 == null goto label061;

        $r15 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        virtualinvoke r5.<java.awt.Graphics: void setColor(java.awt.Color)>($r15);

        $i107 = i6 + i7;

        $i113 = $i107 - 2;

        $i112 = i9 + 6;

        $i108 = i6 + i7;

        $i111 = $i108 - 2;

        $i109 = i9 + i11;

        $i110 = $i109 - 6;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i113, $i112, $i111, $i110);

        i1062 = 0;

        i1063 = 0;

     label060:
        if i1062 >= 4 goto label061;

        $i114 = i6 + i7;

        $i115 = $i114 - 2;

        $i123 = $i115 - i1063;

        $i116 = i9 + 5;

        $i122 = $i116 - i1062;

        $i117 = i6 + i7;

        $i118 = $i117 - 3;

        $i121 = $i118 - i1063;

        $i119 = i9 + 5;

        $i120 = $i119 - i1062;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i123, $i122, $i121, $i120);

        i1062 = i1062 + 1;

        i1063 = i1063 + 2;

        goto label060;

     label061:
        $r13 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor3>;

        if $r13 == null goto label156;

        $r14 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor3>;

        virtualinvoke r5.<java.awt.Graphics: void setColor(java.awt.Color)>($r14);

        $i87 = i6 + i7;

        $i94 = $i87 - 2;

        $i88 = i9 + i11;

        $i93 = $i88 - 5;

        $i89 = i6 + i7;

        $i92 = $i89 - 2;

        $i90 = i9 + i11;

        $i91 = $i90 - 5;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i94, $i93, $i92, $i91);

        i1064 = 0;

        i1065 = 0;

     label062:
        if i1064 >= 5 goto label063;

        $i95 = i6 + i7;

        $i96 = $i95 - 3;

        $i106 = $i96 - i1065;

        $i97 = i9 + i11;

        $i98 = $i97 - 4;

        $i105 = $i98 + i1064;

        $i99 = i6 + i7;

        $i100 = $i99 - 4;

        $i104 = $i100 - i1065;

        $i101 = i9 + i11;

        $i102 = $i101 - 4;

        $i103 = $i102 + i1064;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i106, $i105, $i104, $i103);

        i1064 = i1064 + 1;

        i1065 = i1065 + 2;

        goto label062;

     label063:
        goto label156;

     label064:
        $r4 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i4 = virtualinvoke $r4.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        $i5 = $i4 - 1;

        if i1 == $i5 goto label156;

        $r6 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1>;

        virtualinvoke r5.<java.awt.Graphics: void setColor(java.awt.Color)>($r6);

        $i8 = i6 + i7;

        $i16 = $i8 - 1;

        $i15 = i9 + 5;

        $i10 = i6 + i7;

        $i14 = $i10 - 1;

        $i12 = i9 + i11;

        $i13 = $i12 - 5;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i16, $i15, $i14, $i13);

        i1066 = 0;

        i1067 = 0;

     label065:
        if i1066 >= 4 goto label066;

        $i70 = i6 + i7;

        $i71 = $i70 - 2;

        $i79 = $i71 - i1067;

        $i72 = i9 + 4;

        $i78 = $i72 - i1066;

        $i73 = i6 + i7;

        $i74 = $i73 - 3;

        $i77 = $i74 - i1067;

        $i75 = i9 + 4;

        $i76 = $i75 - i1066;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i79, $i78, $i77, $i76);

        i1066 = i1066 + 1;

        i1067 = i1067 + 2;

        goto label065;

     label066:
        i1068 = 0;

        i1069 = 0;

     label067:
        $i17 = i7 / 2;

        $i18 = $i17 + 1;

        if i1068 >= $i18 goto label068;

        $i58 = i6 + i7;

        $i59 = $i58 - 1;

        $i69 = $i59 - i1069;

        $i60 = i9 + i11;

        $i61 = $i60 - 4;

        $i68 = $i61 + i1068;

        $i62 = i6 + i7;

        $i63 = $i62 - 2;

        $i67 = $i63 - i1069;

        $i64 = i9 + i11;

        $i65 = $i64 - 4;

        $i66 = $i65 + i1068;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i69, $i68, $i67, $i66);

        i1068 = i1068 + 1;

        i1069 = i1069 + 2;

        goto label067;

     label068:
        $r7 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        if $r7 == null goto label070;

        $r10 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        virtualinvoke r5.<java.awt.Graphics: void setColor(java.awt.Color)>($r10);

        $i41 = i6 + i7;

        $i47 = $i41 - 2;

        $i46 = i9 + 6;

        $i42 = i6 + i7;

        $i45 = $i42 - 2;

        $i43 = i9 + i11;

        $i44 = $i43 - 6;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i47, $i46, $i45, $i44);

        i1070 = 0;

        i1071 = 0;

     label069:
        if i1070 >= 4 goto label070;

        $i48 = i6 + i7;

        $i49 = $i48 - 2;

        $i57 = $i49 - i1071;

        $i50 = i9 + 5;

        $i56 = $i50 - i1070;

        $i51 = i6 + i7;

        $i52 = $i51 - 3;

        $i55 = $i52 - i1071;

        $i53 = i9 + 5;

        $i54 = $i53 - i1070;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i57, $i56, $i55, $i54);

        i1070 = i1070 + 1;

        i1071 = i1071 + 2;

        goto label069;

     label070:
        $r8 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor3>;

        if $r8 == null goto label156;

        $r9 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor3>;

        virtualinvoke r5.<java.awt.Graphics: void setColor(java.awt.Color)>($r9);

        $i19 = i6 + i7;

        $i26 = $i19 - 2;

        $i20 = i9 + i11;

        $i25 = $i20 - 5;

        $i21 = i6 + i7;

        $i24 = $i21 - 2;

        $i22 = i9 + i11;

        $i23 = $i22 - 5;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i26, $i25, $i24, $i23);

        i1072 = 0;

        i1073 = 0;

     label071:
        $i27 = i7 / 2;

        $i28 = $i27 + 1;

        if i1072 >= $i28 goto label072;

        $i29 = i6 + i7;

        $i30 = $i29 - 3;

        $i40 = $i30 - i1073;

        $i31 = i9 + i11;

        $i32 = $i31 - 4;

        $i39 = $i32 + i1072;

        $i33 = i6 + i7;

        $i34 = $i33 - 4;

        $i38 = $i34 - i1073;

        $i35 = i9 + i11;

        $i36 = $i35 - 4;

        $i37 = $i36 + i1072;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i40, $i39, $i38, $i37);

        i1072 = i1072 + 1;

        i1073 = i1073 + 2;

        goto label071;

     label072:
        goto label156;

     label073:
        if z1 == 0 goto label082;

        $r44 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor1>;

        virtualinvoke r5.<java.awt.Graphics: void setColor(java.awt.Color)>($r44);

        $i495 = i6 + 5;

        $i489 = i9 + i11;

        $i494 = $i489 - 1;

        $i490 = i6 + i7;

        $i493 = $i490 - 5;

        $i491 = i9 + i11;

        $i492 = $i491 - 1;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i495, $i494, $i493, $i492);

        i1074 = 0;

        i1075 = 0;

     label074:
        $i496 = i11 / 2;

        $i497 = $i496 + 1;

        if i1074 >= $i497 goto label075;

        $i553 = i6 + 4;

        $i562 = $i553 - i1074;

        $i554 = i9 + i11;

        $i555 = $i554 - 2;

        $i561 = $i555 - i1075;

        $i556 = i6 + 4;

        $i560 = $i556 - i1074;

        $i557 = i9 + i11;

        $i558 = $i557 - 3;

        $i559 = $i558 - i1075;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i562, $i561, $i560, $i559);

        i1074 = i1074 + 1;

        i1075 = i1075 + 2;

        goto label074;

     label075:
        i1076 = 0;

        i1077 = 0;

     label076:
        $i498 = i11 / 2;

        $i499 = $i498 + 1;

        if i1076 >= $i499 goto label077;

        $i539 = i6 + i7;

        $i540 = $i539 - 4;

        $i541 = $i540 - 1;

        $i552 = $i541 + i1076;

        $i542 = i9 + i11;

        $i543 = $i542 - 1;

        $i551 = $i543 - i1077;

        $i544 = i6 + i7;

        $i545 = $i544 - 4;

        $i546 = $i545 - 1;

        $i550 = $i546 + i1076;

        $i547 = i9 + i11;

        $i548 = $i547 - 2;

        $i549 = $i548 - i1077;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i552, $i551, $i550, $i549);

        i1076 = i1076 + 1;

        i1077 = i1077 + 2;

        goto label076;

     label077:
        $r45 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor2>;

        if $r45 == null goto label079;

        $r48 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor2>;

        virtualinvoke r5.<java.awt.Graphics: void setColor(java.awt.Color)>($r48);

        $i526 = i6 + 5;

        $i521 = i9 + i11;

        $i525 = $i521 - 3;

        $i524 = i6 + 5;

        $i522 = i9 + i11;

        $i523 = $i522 - 3;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i526, $i525, $i524, $i523);

        i1078 = 0;

        i1079 = 0;

     label078:
        $i527 = i11 / 2;

        $i528 = $i527 + 1;

        if i1078 >= $i528 goto label079;

        $i529 = i6 + 4;

        $i538 = $i529 - i1078;

        $i530 = i9 + i11;

        $i531 = $i530 - 4;

        $i537 = $i531 - i1079;

        $i532 = i6 + 4;

        $i536 = $i532 - i1078;

        $i533 = i9 + i11;

        $i534 = $i533 - 5;

        $i535 = $i534 - i1079;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i538, $i537, $i536, $i535);

        i1078 = i1078 + 1;

        i1079 = i1079 + 2;

        goto label078;

     label079:
        $r46 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor3>;

        if $r46 == null goto label156;

        $r47 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor3>;

        virtualinvoke r5.<java.awt.Graphics: void setColor(java.awt.Color)>($r47);

        $i506 = i6 + 5;

        $i500 = i9 + i11;

        $i505 = $i500 - 2;

        $i501 = i6 + i7;

        $i504 = $i501 - 6;

        $i502 = i9 + i11;

        $i503 = $i502 - 2;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i506, $i505, $i504, $i503);

        i1080 = 0;

        i1081 = 0;

     label080:
        $i507 = i11 / 2;

        $i508 = $i507 + 1;

        if i1080 >= $i508 goto label081;

        $i509 = i6 + i7;

        $i510 = $i509 - 5;

        $i520 = $i510 + i1080;

        $i511 = i9 + i11;

        $i512 = $i511 - 3;

        $i519 = $i512 - i1081;

        $i513 = i6 + i7;

        $i514 = $i513 - 5;

        $i518 = $i514 + i1080;

        $i515 = i9 + i11;

        $i516 = $i515 - 4;

        $i517 = $i516 - i1081;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i520, $i519, $i518, $i517);

        i1080 = i1080 + 1;

        i1081 = i1081 + 2;

        goto label080;

     label081:
        goto label156;

     label082:
        if $z0 == 0 goto label083;

        if i1 == 0 goto label084;

     label083:
        if $z0 != 0 goto label093;

        $r38 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i420 = virtualinvoke $r38.<com.jidesoft.swing.JideTabbedPane: int getTabCount()>();

        $i421 = $i420 - 1;

        if i1 != $i421 goto label093;

     label084:
        $r39 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1>;

        virtualinvoke r5.<java.awt.Graphics: void setColor(java.awt.Color)>($r39);

        $i428 = i6 + 5;

        $i422 = i9 + i11;

        $i427 = $i422 - 1;

        $i423 = i6 + i7;

        $i426 = $i423 - 5;

        $i424 = i9 + i11;

        $i425 = $i424 - 1;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i428, $i427, $i426, $i425);

        i1082 = 0;

        i1083 = 0;

     label085:
        $i1084 = i11 / 2;

        $i1085 = $i1084 + 1;

        if i1082 >= $i1085 goto label086;

        $i479 = i6 + 4;

        $i488 = $i479 - i1082;

        $i480 = i9 + i11;

        $i481 = $i480 - 2;

        $i487 = $i481 - i1083;

        $i482 = i6 + 4;

        $i486 = $i482 - i1082;

        $i483 = i9 + i11;

        $i484 = $i483 - 3;

        $i485 = $i484 - i1083;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i488, $i487, $i486, $i485);

        i1082 = i1082 + 1;

        i1083 = i1083 + 2;

        goto label085;

     label086:
        i1086 = 0;

        i1087 = 0;

     label087:
        $i429 = i11 / 2;

        $i430 = $i429 + 1;

        if i1086 >= $i430 goto label088;

        $i465 = i6 + i7;

        $i466 = $i465 - 4;

        $i467 = $i466 - 1;

        $i478 = $i467 + i1086;

        $i468 = i9 + i11;

        $i469 = $i468 - 1;

        $i477 = $i469 - i1087;

        $i470 = i6 + i7;

        $i471 = $i470 - 4;

        $i472 = $i471 - 1;

        $i476 = $i472 + i1086;

        $i473 = i9 + i11;

        $i474 = $i473 - 2;

        $i475 = $i474 - i1087;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i478, $i477, $i476, $i475);

        i1086 = i1086 + 1;

        i1087 = i1087 + 2;

        goto label087;

     label088:
        $r40 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        if $r40 == null goto label090;

        $r43 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        virtualinvoke r5.<java.awt.Graphics: void setColor(java.awt.Color)>($r43);

        i1088 = 0;

        i1089 = 0;

     label089:
        $i453 = i11 / 2;

        $i454 = $i453 + 1;

        if i1088 >= $i454 goto label090;

        $i455 = i6 + 5;

        $i464 = $i455 - i1088;

        $i456 = i9 + i11;

        $i457 = $i456 - 2;

        $i463 = $i457 - i1089;

        $i458 = i6 + 5;

        $i462 = $i458 - i1088;

        $i459 = i9 + i11;

        $i460 = $i459 - 3;

        $i461 = $i460 - i1089;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i464, $i463, $i462, $i461);

        i1088 = i1088 + 1;

        i1089 = i1089 + 2;

        goto label089;

     label090:
        $r41 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor3>;

        if $r41 == null goto label156;

        $r42 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor3>;

        virtualinvoke r5.<java.awt.Graphics: void setColor(java.awt.Color)>($r42);

        $i431 = i6 + i7;

        $i438 = $i431 - 6;

        $i432 = i9 + i11;

        $i437 = $i432 - 2;

        $i433 = i6 + i7;

        $i436 = $i433 - 6;

        $i434 = i9 + i11;

        $i435 = $i434 - 2;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i438, $i437, $i436, $i435);

        i1090 = 0;

        i1091 = 0;

     label091:
        $i439 = i11 / 2;

        $i440 = $i439 + 1;

        if i1090 >= $i440 goto label092;

        $i441 = i6 + i7;

        $i442 = $i441 - 5;

        $i452 = $i442 + i1090;

        $i443 = i9 + i11;

        $i444 = $i443 - 3;

        $i451 = $i444 - i1091;

        $i445 = i6 + i7;

        $i446 = $i445 - 5;

        $i450 = $i446 + i1090;

        $i447 = i9 + i11;

        $i448 = $i447 - 4;

        $i449 = $i448 - i1091;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i452, $i451, $i450, $i449);

        i1090 = i1090 + 1;

        i1091 = i1091 + 2;

        goto label091;

     label092:
        goto label156;

     label093:
        $r26 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i294 = virtualinvoke $r26.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if $z0 == 0 goto label094;

        $b1092 = -1;

        goto label095;

     label094:
        $b1092 = 1;

     label095:
        $i295 = $i294 + $b1092;

        if i1 != $i295 goto label104;

        $r33 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1>;

        virtualinvoke r5.<java.awt.Graphics: void setColor(java.awt.Color)>($r33);

        $i367 = i6 + 5;

        $i361 = i9 + i11;

        $i366 = $i361 - 1;

        $i362 = i6 + i7;

        $i365 = $i362 - 6;

        $i363 = i9 + i11;

        $i364 = $i363 - 1;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i367, $i366, $i365, $i364);

        i1093 = 0;

        i1094 = 0;

     label096:
        if i1093 >= 5 goto label097;

        $i410 = i6 + 4;

        $i419 = $i410 - i1093;

        $i411 = i9 + i11;

        $i412 = $i411 - 2;

        $i418 = $i412 - i1094;

        $i413 = i6 + 4;

        $i417 = $i413 - i1093;

        $i414 = i9 + i11;

        $i415 = $i414 - 3;

        $i416 = $i415 - i1094;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i419, $i418, $i417, $i416);

        i1093 = i1093 + 1;

        i1094 = i1094 + 2;

        goto label096;

     label097:
        i1095 = 0;

        i1096 = 0;

     label098:
        if i1095 >= 5 goto label099;

        $i398 = i6 + i7;

        $i399 = $i398 - 5;

        $i409 = $i399 + i1095;

        $i400 = i9 + i11;

        $i401 = $i400 - 1;

        $i408 = $i401 - i1096;

        $i402 = i6 + i7;

        $i403 = $i402 - 5;

        $i407 = $i403 + i1095;

        $i404 = i9 + i11;

        $i405 = $i404 - 2;

        $i406 = $i405 - i1096;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i409, $i408, $i407, $i406);

        i1095 = i1095 + 1;

        i1096 = i1096 + 2;

        goto label098;

     label099:
        $r34 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        if $r34 == null goto label101;

        $r37 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        virtualinvoke r5.<java.awt.Graphics: void setColor(java.awt.Color)>($r37);

        i1097 = 0;

        i1098 = 0;

     label100:
        if i1097 >= 5 goto label101;

        $i388 = i6 + 5;

        $i397 = $i388 - i1097;

        $i389 = i9 + i11;

        $i390 = $i389 - 2;

        $i396 = $i390 - i1098;

        $i391 = i6 + 5;

        $i395 = $i391 - i1097;

        $i392 = i9 + i11;

        $i393 = $i392 - 3;

        $i394 = $i393 - i1098;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i397, $i396, $i395, $i394);

        i1097 = i1097 + 1;

        i1098 = i1098 + 2;

        goto label100;

     label101:
        $r35 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor3>;

        if $r35 == null goto label156;

        $r36 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor3>;

        virtualinvoke r5.<java.awt.Graphics: void setColor(java.awt.Color)>($r36);

        $i368 = i6 + i7;

        $i375 = $i368 - 6;

        $i369 = i9 + i11;

        $i374 = $i369 - 2;

        $i370 = i6 + i7;

        $i373 = $i370 - 6;

        $i371 = i9 + i11;

        $i372 = $i371 - 2;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i375, $i374, $i373, $i372);

        i1099 = 0;

        i1100 = 0;

     label102:
        if i1099 >= 5 goto label103;

        $i376 = i6 + i7;

        $i377 = $i376 - 5;

        $i387 = $i377 + i1099;

        $i378 = i9 + i11;

        $i379 = $i378 - 3;

        $i386 = $i379 - i1100;

        $i380 = i6 + i7;

        $i381 = $i380 - 5;

        $i385 = $i381 + i1099;

        $i382 = i9 + i11;

        $i383 = $i382 - 4;

        $i384 = $i383 - i1100;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i387, $i386, $i385, $i384);

        i1099 = i1099 + 1;

        i1100 = i1100 + 2;

        goto label102;

     label103:
        goto label156;

     label104:
        $r27 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i296 = virtualinvoke $r27.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if $z0 == 0 goto label105;

        $b1101 = -1;

        goto label106;

     label105:
        $b1101 = 1;

     label106:
        $i297 = $i296 + $b1101;

        if i1 == $i297 goto label156;

        $r28 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1>;

        virtualinvoke r5.<java.awt.Graphics: void setColor(java.awt.Color)>($r28);

        $i304 = i6 + 5;

        $i298 = i9 + i11;

        $i303 = $i298 - 1;

        $i299 = i6 + i7;

        $i302 = $i299 - 6;

        $i300 = i9 + i11;

        $i301 = $i300 - 1;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i304, $i303, $i302, $i301);

        i1102 = 0;

        i1103 = 0;

     label107:
        if i1102 >= 5 goto label108;

        $i351 = i6 + 4;

        $i360 = $i351 - i1102;

        $i352 = i9 + i11;

        $i353 = $i352 - 2;

        $i359 = $i353 - i1103;

        $i354 = i6 + 4;

        $i358 = $i354 - i1102;

        $i355 = i9 + i11;

        $i356 = $i355 - 3;

        $i357 = $i356 - i1103;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i360, $i359, $i358, $i357);

        i1102 = i1102 + 1;

        i1103 = i1103 + 2;

        goto label107;

     label108:
        i1104 = 0;

        i1105 = 0;

     label109:
        $i305 = i11 / 2;

        $i306 = $i305 + 1;

        if i1104 >= $i306 goto label110;

        $i339 = i6 + i7;

        $i340 = $i339 - 5;

        $i350 = $i340 + i1104;

        $i341 = i9 + i11;

        $i342 = $i341 - 1;

        $i349 = $i342 - i1105;

        $i343 = i6 + i7;

        $i344 = $i343 - 5;

        $i348 = $i344 + i1104;

        $i345 = i9 + i11;

        $i346 = $i345 - 2;

        $i347 = $i346 - i1105;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i350, $i349, $i348, $i347);

        i1104 = i1104 + 1;

        i1105 = i1105 + 2;

        goto label109;

     label110:
        $r29 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        if $r29 == null goto label112;

        $r32 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        virtualinvoke r5.<java.awt.Graphics: void setColor(java.awt.Color)>($r32);

        i1106 = 0;

        i1107 = 0;

     label111:
        if i1106 >= 5 goto label112;

        $i329 = i6 + 5;

        $i338 = $i329 - i1106;

        $i330 = i9 + i11;

        $i331 = $i330 - 2;

        $i337 = $i331 - i1107;

        $i332 = i6 + 5;

        $i336 = $i332 - i1106;

        $i333 = i9 + i11;

        $i334 = $i333 - 3;

        $i335 = $i334 - i1107;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i338, $i337, $i336, $i335);

        i1106 = i1106 + 1;

        i1107 = i1107 + 2;

        goto label111;

     label112:
        $r30 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor3>;

        if $r30 == null goto label156;

        $r31 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor3>;

        virtualinvoke r5.<java.awt.Graphics: void setColor(java.awt.Color)>($r31);

        $i307 = i6 + i7;

        $i314 = $i307 - 6;

        $i308 = i9 + i11;

        $i313 = $i308 - 2;

        $i309 = i6 + i7;

        $i312 = $i309 - 6;

        $i310 = i9 + i11;

        $i311 = $i310 - 2;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i314, $i313, $i312, $i311);

        i1108 = 0;

        i1109 = 0;

     label113:
        $i315 = i11 / 2;

        $i316 = $i315 + 1;

        if i1108 >= $i316 goto label114;

        $i317 = i6 + i7;

        $i318 = $i317 - 5;

        $i328 = $i318 + i1108;

        $i319 = i9 + i11;

        $i320 = $i319 - 3;

        $i327 = $i320 - i1109;

        $i321 = i6 + i7;

        $i322 = $i321 - 5;

        $i326 = $i322 + i1108;

        $i323 = i9 + i11;

        $i324 = $i323 - 4;

        $i325 = $i324 - i1109;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i328, $i327, $i326, $i325);

        i1108 = i1108 + 1;

        i1109 = i1109 + 2;

        goto label113;

     label114:
        goto label156;

     label115:
        if z1 == 0 goto label124;

        $r89 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor1>;

        virtualinvoke r5.<java.awt.Graphics: void setColor(java.awt.Color)>($r89);

        $i953 = i6 + 5;

        $i951 = i6 + i7;

        $i952 = $i951 - 5;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i953, i9, $i952, i9);

        i1110 = 0;

        i1111 = 0;

     label116:
        $i954 = i11 / 2;

        $i955 = $i954 + 1;

        if i1110 >= $i955 goto label117;

        $i1002 = i6 + 4;

        $i1009 = $i1002 - i1110;

        $i1003 = i9 + 1;

        $i1008 = $i1003 + i1111;

        $i1004 = i6 + 4;

        $i1007 = $i1004 - i1110;

        $i1005 = i9 + 2;

        $i1006 = $i1005 + i1111;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1009, $i1008, $i1007, $i1006);

        i1110 = i1110 + 1;

        i1111 = i1111 + 2;

        goto label116;

     label117:
        i1112 = 0;

        i1113 = 0;

     label118:
        $i956 = i11 / 2;

        $i957 = $i956 + 1;

        if i1112 >= $i957 goto label119;

        $i991 = i6 + i7;

        $i992 = $i991 - 4;

        $i993 = $i992 - 1;

        $i1001 = $i993 + i1112;

        $i1000 = i9 + i1113;

        $i994 = i6 + i7;

        $i995 = $i994 - 4;

        $i996 = $i995 - 1;

        $i999 = $i996 + i1112;

        $i997 = i9 + 1;

        $i998 = $i997 + i1113;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i1001, $i1000, $i999, $i998);

        i1112 = i1112 + 1;

        i1113 = i1113 + 2;

        goto label118;

     label119:
        $r90 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor2>;

        if $r90 == null goto label121;

        $r93 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor2>;

        virtualinvoke r5.<java.awt.Graphics: void setColor(java.awt.Color)>($r93);

        $i980 = i6 + 6;

        $i979 = i9 + 1;

        $i976 = i6 + i7;

        $i978 = $i976 - 7;

        $i977 = i9 + 1;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i980, $i979, $i978, $i977);

        i1114 = 0;

        i1115 = 0;

     label120:
        $i981 = i11 / 2;

        $i982 = $i981 + 1;

        if i1114 >= $i982 goto label121;

        $i983 = i6 + 5;

        $i990 = $i983 - i1114;

        $i984 = i9 + 1;

        $i989 = $i984 + i1115;

        $i985 = i6 + 5;

        $i988 = $i985 - i1114;

        $i986 = i9 + 2;

        $i987 = $i986 + i1115;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i990, $i989, $i988, $i987);

        i1114 = i1114 + 1;

        i1115 = i1115 + 2;

        goto label120;

     label121:
        $r91 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor3>;

        if $r91 == null goto label156;

        $r92 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor3>;

        virtualinvoke r5.<java.awt.Graphics: void setColor(java.awt.Color)>($r92);

        $i958 = i6 + i7;

        $i963 = $i958 - 6;

        $i962 = i9 + 1;

        $i959 = i6 + i7;

        $i961 = $i959 - 6;

        $i960 = i9 + 1;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i963, $i962, $i961, $i960);

        i1116 = 0;

        i1117 = 0;

     label122:
        $i964 = i11 / 2;

        $i965 = $i964 + 1;

        if i1116 >= $i965 goto label123;

        $i966 = i6 + i7;

        $i967 = $i966 - 5;

        $i975 = $i967 + i1116;

        $i968 = i9 + 2;

        $i974 = $i968 + i1117;

        $i969 = i6 + i7;

        $i970 = $i969 - 5;

        $i973 = $i970 + i1116;

        $i971 = i9 + 3;

        $i972 = $i971 + i1117;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i975, $i974, $i973, $i972);

        i1116 = i1116 + 1;

        i1117 = i1117 + 2;

        goto label122;

     label123:
        goto label156;

     label124:
        if $z0 == 0 goto label125;

        if i1 == 0 goto label126;

     label125:
        if $z0 != 0 goto label135;

        $r83 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i892 = virtualinvoke $r83.<com.jidesoft.swing.JideTabbedPane: int getTabCount()>();

        $i893 = $i892 - 1;

        if i1 != $i893 goto label135;

     label126:
        $r84 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1>;

        virtualinvoke r5.<java.awt.Graphics: void setColor(java.awt.Color)>($r84);

        $i896 = i6 + 5;

        $i894 = i6 + i7;

        $i895 = $i894 - 5;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i896, i9, $i895, i9);

        i1118 = 0;

        i1119 = 0;

     label127:
        $i1120 = i11 / 2;

        $i1121 = $i1120 + 1;

        if i1118 >= $i1121 goto label128;

        $i943 = i6 + 4;

        $i950 = $i943 - i1118;

        $i944 = i9 + 1;

        $i949 = $i944 + i1119;

        $i945 = i6 + 4;

        $i948 = $i945 - i1118;

        $i946 = i9 + 2;

        $i947 = $i946 + i1119;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i950, $i949, $i948, $i947);

        i1118 = i1118 + 1;

        i1119 = i1119 + 2;

        goto label127;

     label128:
        i1122 = 0;

        i1123 = 0;

     label129:
        $i897 = i11 / 2;

        $i898 = $i897 + 1;

        if i1122 >= $i898 goto label130;

        $i932 = i6 + i7;

        $i933 = $i932 - 4;

        $i934 = $i933 - 1;

        $i942 = $i934 + i1122;

        $i941 = i9 + i1123;

        $i935 = i6 + i7;

        $i936 = $i935 - 4;

        $i937 = $i936 - 1;

        $i940 = $i937 + i1122;

        $i938 = i9 + 1;

        $i939 = $i938 + i1123;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i942, $i941, $i940, $i939);

        i1122 = i1122 + 1;

        i1123 = i1123 + 2;

        goto label129;

     label130:
        $r85 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        if $r85 == null goto label132;

        $r88 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        virtualinvoke r5.<java.awt.Graphics: void setColor(java.awt.Color)>($r88);

        $i921 = i6 + 6;

        $i920 = i9 + 1;

        $i917 = i6 + i7;

        $i919 = $i917 - 7;

        $i918 = i9 + 1;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i921, $i920, $i919, $i918);

        i1124 = 0;

        i1125 = 0;

     label131:
        $i922 = i11 / 2;

        $i923 = $i922 + 1;

        if i1124 >= $i923 goto label132;

        $i924 = i6 + 5;

        $i931 = $i924 - i1124;

        $i925 = i9 + 1;

        $i930 = $i925 + i1125;

        $i926 = i6 + 5;

        $i929 = $i926 - i1124;

        $i927 = i9 + 2;

        $i928 = $i927 + i1125;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i931, $i930, $i929, $i928);

        i1124 = i1124 + 1;

        i1125 = i1125 + 2;

        goto label131;

     label132:
        $r86 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor3>;

        if $r86 == null goto label156;

        $r87 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor3>;

        virtualinvoke r5.<java.awt.Graphics: void setColor(java.awt.Color)>($r87);

        $i899 = i6 + i7;

        $i904 = $i899 - 6;

        $i903 = i9 + 1;

        $i900 = i6 + i7;

        $i902 = $i900 - 6;

        $i901 = i9 + 1;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i904, $i903, $i902, $i901);

        i1126 = 0;

        i1127 = 0;

     label133:
        $i905 = i11 / 2;

        $i906 = $i905 + 1;

        if i1126 >= $i906 goto label134;

        $i907 = i6 + i7;

        $i908 = $i907 - 5;

        $i916 = $i908 + i1126;

        $i909 = i9 + 2;

        $i915 = $i909 + i1127;

        $i910 = i6 + i7;

        $i911 = $i910 - 5;

        $i914 = $i911 + i1126;

        $i912 = i9 + 3;

        $i913 = $i912 + i1127;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i916, $i915, $i914, $i913);

        i1126 = i1126 + 1;

        i1127 = i1127 + 2;

        goto label133;

     label134:
        goto label156;

     label135:
        $r71 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i782 = virtualinvoke $r71.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if $z0 == 0 goto label136;

        $b1128 = -1;

        goto label137;

     label136:
        $b1128 = 1;

     label137:
        $i783 = $i782 + $b1128;

        if i1 != $i783 goto label146;

        $r78 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1>;

        virtualinvoke r5.<java.awt.Graphics: void setColor(java.awt.Color)>($r78);

        $i843 = i6 + 5;

        $i841 = i6 + i7;

        $i842 = $i841 - 5;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i843, i9, $i842, i9);

        i1129 = 0;

        i1130 = 0;

     label138:
        if i1129 >= 5 goto label139;

        $i884 = i6 + 4;

        $i891 = $i884 - i1129;

        $i885 = i9 + 1;

        $i890 = $i885 + i1130;

        $i886 = i6 + 4;

        $i889 = $i886 - i1129;

        $i887 = i9 + 2;

        $i888 = $i887 + i1130;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i891, $i890, $i889, $i888);

        i1129 = i1129 + 1;

        i1130 = i1130 + 2;

        goto label138;

     label139:
        i1131 = 0;

        i1132 = 0;

     label140:
        if i1131 >= 5 goto label141;

        $i873 = i6 + i7;

        $i874 = $i873 - 4;

        $i875 = $i874 - 1;

        $i883 = $i875 + i1131;

        $i882 = i9 + i1132;

        $i876 = i6 + i7;

        $i877 = $i876 - 4;

        $i878 = $i877 - 1;

        $i881 = $i878 + i1131;

        $i879 = i9 + 1;

        $i880 = $i879 + i1132;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i883, $i882, $i881, $i880);

        i1131 = i1131 + 1;

        i1132 = i1132 + 2;

        goto label140;

     label141:
        $r79 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        if $r79 == null goto label143;

        $r82 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        virtualinvoke r5.<java.awt.Graphics: void setColor(java.awt.Color)>($r82);

        $i864 = i6 + 6;

        $i863 = i9 + 1;

        $i860 = i6 + i7;

        $i862 = $i860 - 7;

        $i861 = i9 + 1;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i864, $i863, $i862, $i861);

        i1133 = 0;

        i1134 = 0;

     label142:
        if i1133 >= 5 goto label143;

        $i865 = i6 + 5;

        $i872 = $i865 - i1133;

        $i866 = i9 + 1;

        $i871 = $i866 + i1134;

        $i867 = i6 + 5;

        $i870 = $i867 - i1133;

        $i868 = i9 + 2;

        $i869 = $i868 + i1134;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i872, $i871, $i870, $i869);

        i1133 = i1133 + 1;

        i1134 = i1134 + 2;

        goto label142;

     label143:
        $r80 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor3>;

        if $r80 == null goto label156;

        $r81 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor3>;

        virtualinvoke r5.<java.awt.Graphics: void setColor(java.awt.Color)>($r81);

        $i844 = i6 + i7;

        $i849 = $i844 - 6;

        $i848 = i9 + 1;

        $i845 = i6 + i7;

        $i847 = $i845 - 6;

        $i846 = i9 + 1;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i849, $i848, $i847, $i846);

        i1135 = 0;

        i1136 = 0;

     label144:
        if i1135 >= 5 goto label145;

        $i850 = i6 + i7;

        $i851 = $i850 - 5;

        $i859 = $i851 + i1135;

        $i852 = i9 + 2;

        $i858 = $i852 + i1136;

        $i853 = i6 + i7;

        $i854 = $i853 - 5;

        $i857 = $i854 + i1135;

        $i855 = i9 + 3;

        $i856 = $i855 + i1136;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i859, $i858, $i857, $i856);

        i1135 = i1135 + 1;

        i1136 = i1136 + 2;

        goto label144;

     label145:
        goto label156;

     label146:
        $r72 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i784 = virtualinvoke $r72.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if $z0 == 0 goto label147;

        $b1137 = -1;

        goto label148;

     label147:
        $b1137 = 1;

     label148:
        $i785 = $i784 + $b1137;

        if i1 == $i785 goto label156;

        $r73 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1>;

        virtualinvoke r5.<java.awt.Graphics: void setColor(java.awt.Color)>($r73);

        $i788 = i6 + 5;

        $i786 = i6 + i7;

        $i787 = $i786 - 5;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i788, i9, $i787, i9);

        i1138 = 0;

        i1139 = 0;

     label149:
        if i1138 >= 5 goto label150;

        $i833 = i6 + 4;

        $i840 = $i833 - i1138;

        $i834 = i9 + 1;

        $i839 = $i834 + i1139;

        $i835 = i6 + 4;

        $i838 = $i835 - i1138;

        $i836 = i9 + 2;

        $i837 = $i836 + i1139;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i840, $i839, $i838, $i837);

        i1138 = i1138 + 1;

        i1139 = i1139 + 2;

        goto label149;

     label150:
        i1140 = 0;

        i1141 = 0;

     label151:
        $i789 = i11 / 2;

        $i790 = $i789 + 1;

        if i1140 >= $i790 goto label152;

        $i822 = i6 + i7;

        $i823 = $i822 - 4;

        $i824 = $i823 - 1;

        $i832 = $i824 + i1140;

        $i831 = i9 + i1141;

        $i825 = i6 + i7;

        $i826 = $i825 - 4;

        $i827 = $i826 - 1;

        $i830 = $i827 + i1140;

        $i828 = i9 + 1;

        $i829 = $i828 + i1141;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i832, $i831, $i830, $i829);

        i1140 = i1140 + 1;

        i1141 = i1141 + 2;

        goto label151;

     label152:
        $r74 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        if $r74 == null goto label154;

        $r77 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        virtualinvoke r5.<java.awt.Graphics: void setColor(java.awt.Color)>($r77);

        $i813 = i6 + 6;

        $i812 = i9 + 1;

        $i809 = i6 + i7;

        $i811 = $i809 - 7;

        $i810 = i9 + 1;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i813, $i812, $i811, $i810);

        i1142 = 0;

        i1143 = 0;

     label153:
        if i1142 >= 5 goto label154;

        $i814 = i6 + 5;

        $i821 = $i814 - i1142;

        $i815 = i9 + 1;

        $i820 = $i815 + i1143;

        $i816 = i6 + 5;

        $i819 = $i816 - i1142;

        $i817 = i9 + 2;

        $i818 = $i817 + i1143;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i821, $i820, $i819, $i818);

        i1142 = i1142 + 1;

        i1143 = i1143 + 2;

        goto label153;

     label154:
        $r75 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor3>;

        if $r75 == null goto label156;

        $r76 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor3>;

        virtualinvoke r5.<java.awt.Graphics: void setColor(java.awt.Color)>($r76);

        $i791 = i6 + i7;

        $i796 = $i791 - 6;

        $i795 = i9 + 1;

        $i792 = i6 + i7;

        $i794 = $i792 - 6;

        $i793 = i9 + 1;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i796, $i795, $i794, $i793);

        i1144 = 0;

        i1145 = 0;

     label155:
        $i797 = i11 / 2;

        $i798 = $i797 + 1;

        if i1144 >= $i798 goto label156;

        $i799 = i6 + i7;

        $i800 = $i799 - 5;

        $i808 = $i800 + i1144;

        $i801 = i9 + 2;

        $i807 = $i801 + i1145;

        $i802 = i6 + i7;

        $i803 = $i802 - 5;

        $i806 = $i803 + i1144;

        $i804 = i9 + 3;

        $i805 = $i804 + i1145;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i808, $i807, $i806, $i805);

        i1144 = i1144 + 1;

        i1145 = i1145 + 2;

        goto label155;

     label156:
        return;
    }

    protected void paintWindowsTabBorder(java.awt.Graphics, int, int, int, int, int, int, boolean)
    {
        java.awt.Color $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r15, $r16, $r17, $r18, $r19, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r33, $r34, $r35, $r36, $r37, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r51, $r52, $r53, $r54, $r55, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r69, $r70, $r71, $r72, $r73;
        boolean z0;
        java.awt.Graphics r3;
        com.jidesoft.swing.JideTabbedPane $r1, $r2, $r13, $r14, $r20, $r21, $r31, $r32, $r38, $r39, $r49, $r50, $r56, $r57, $r67, $r68;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        int $i0, i1, i2, $i3, $i4, i5, i6, $i7, i8, $i9, $i10, $i11, $i12, $i13, i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $i105, $i106, $i107, $i108, $i109, $i110, $i111, $i112, $i113, $i114, $i115, $i116, $i117, $i118, $i119, $i120, $i121, $i122, $i123, $i124, $i125, $i126, $i127, $i128, $i129, $i130, $i131, $i132, $i133, $i134, $i135, $i136, $i137, $i138, $i139, $i140, $i141, $i142, $i143, $i144, $i145, $i146, $i147, $i148, $i149, $i150, $i151, $i152, $i153, $i154, $i155, $i156, $i157, $i158, $i159, $i160, $i161, $i162, $i163, $i164, $i165, $i166, $i167, $i168, $i169, $i170, $i171, $i172, $i173, $i174, $i175, $i176, $i177, $i178, $i179, $i180, $i181, $i182, $i183, $i184, $i185, $i186, $i187, $i188, $i189, $i190, $i191, $i192, $i193, $i194, $i195, $i196, $i197, $i198, $i199, $i200, $i201, $i202, $i203, $i204, $i205, $i206, $i207, $i208, $i209, $i210, $i211, $i212, $i213, $i214, $i215, $i216, $i217, $i218, $i219, $i220, $i221, $i222, $i223, $i224, $i225, $i226, $i227, $i228, $i229, $i230, $i231, $i232, $i233, $i234, $i235, $i236, $i237, $i238, $i239, $i240, $i241, $i242, $i243, $i244, $i245, $i246, $i247, $i248, $i249, $i250, $i251, $i252, $i253, $i254, $i255, $i256, $i257, $i258, $i259, $i260, $i261, $i262, $i263, $i264, $i265, $i266, $i267, $i268, $i269, $i270, $i271, $i272, $i273, $i274, $i275, $i276, $i277, $i278, $i279, $i280, $i281, $i282, $i283, $i284, $i285, $i286, $i287, $i288, $i289, $i290, $i291, $i292, $i293, $i294, $i295, $i296, $i297, $i298, $i299, $i300, $i301, $i302, $i303, $i304, $i305, $i306, $i307, $i308, $i309, $i310, $i311, $i312, $i313, $i314, $i315, $i316, $i317, $i318, $i319, $i320, $i321, $i322, $i323, $i324, $i325, $i326, $i327, $i328, $i329, $i330, $i331, $i332, $i333, $i334, $i335, $i336, $i337, $i338, $i339, $i340, $i341, $i342, $i343, $i344, $i345, $i346, $i347, $i348, $i349, $i350, $i351, $i352, $i353, $i354, $i355, $i356, $i357, $i358, $i359, $i360, $i361, $i362, $i363, $i364, $i365, $i366, $i367, $i368, $i369, $i370, $i371, $i372, $i373, $i374, $i375, $i376, $i377, $i378, $i379, $i380, $i381, $i382, $i383, $i384, $i385, $i386, $i387, $i388, $i389, $i390, $i391, $i392, $i393, $i394, $i395, $i396, $i397, $i398, $i399, $i400, $i401, $i402, $i403, $i404, $i405, $i406, $i407, $i408, $i409, $i410, $i411, $i412, $i413, $i414, $i415, $i416, $i417, $i418, $i419, $i420, $i421, $i422, $i423, $i424, $i425, $i426, $i427, $i428, $i429, $i430, $i431, $i432, $i433, $i434, $i435, $i436, $i437, $i438, $i439, $i440, $i441, $i442, $i443, $i444, $i445, $i446, $i447, $i448, $i449, $i450, $i451, $i452, $i453, $i454, $i455, $i456, $i457, $i458, $i459, $i460, $i461, $i462, $i463, $i464, $i465, $i466, $i467, $i468, $i469, $i470, $i471, $i472, $i473, $i474, $i475, $i476, $i477, $i478, $i479, $i480, $i481, $i482, $i483, $i484, $i485, $i486, $i487, $i488, $i489, $i490, $i491, $i492, $i493, $i494, $i495, $i496, $i497, $i498, $i499, $i500, $i501, $i502, $i503, $i504, $i505, $i506, $i507, $i508, $i509, $i510, $i511, $i512, $i513, $i514, $i515, $i516, $i517, $i518, $i519, $i520, $i521, $i522, $i523, $i524, $i525, $i526, $i527, $i528, $i529, $i530, $i531, $i532, $i533, $i534, $i535, $i536, $i537, $i538, $i539, $i540, $i541, $i542, $i543, $i544, $i545, $i546, $i547, $i548, $i549, $i550, $i551, $i552, $i553, $i554, $i555, $i556, $i557, $i558, $i559, $i560, $i561, $i562, $i563, $i564, $i565, $i566, $i567, $i568, $i569, $i570, $i571, $i572, $i573, $i574, $i575, $i576, $i577, $i578, $i579, $i580, $i581, $i582, $i583, $i584, $i585, $i586, $i587, $i588, $i589, $i590, $i591, $i592, $i593, $i594, $i595, $i596, $i597, $i598, $i599, $i600, $i601, $i602, $i603, $i604, $i605, $i606, $i607, $i608, $i609, $i610, $i611, $i612, $i613, $i614, $i615, $i616, $i617, $i618, $i619, $i620, $i621, $i622, $i623, $i624, $i625, $i626, $i627, $i628, $i629, $i630, $i631, $i632, $i633, $i634, $i635, $i636, $i637, $i638, $i639, $i640, $i641, $i642, $i643, $i644, $i645, $i646, $i647, $i648, $i649, $i650, $i651, $i652, $i653, $i654, $i655, $i656, $i657, $i658, $i659, $i660, $i661, $i662, $i663, $i664, $i665, $i666, $i667, $i668, $i669, $i670, $i671, $i672, $i673, $i674, $i675, $i676, $i677, $i678, $i679, $i680, $i681, $i682, $i683, $i684, $i685, $i686, $i687, $i688, $i689, $i690, $i691, $i692, $i693, $i694, $i695, $i696, $i697, $i698, $i699, $i700, $i701, $i702, $i703, $i704, $i705, $i706, $i707, $i708, $i709, $i710, $i711, $i712, $i713, $i714, $i715, $i716, $i717, $i718, $i719, $i720, $i721, $i722, $i723, $i724, $i725, $i726, $i727, $i728, $i729, $i730, $i731, $i732, $i733, $i734, $i735, $i736, $i737, $i738, $i739, $i740, $i741, $i742, $i743, $i744, $i745, $i746, $i747, $i748, $i749, $i750, $i751, $i752, $i753, $i754, $i755, $i756, $i757, $i758, $i759, $i760, $i761, $i762, $i763, $i764, $i765, $i766, $i767, $i768, $i769, $i770, $i771, $i772, $i773, $i774, $i775, $i776, $i777, $i778, $i779, $i780, $i781, $i782, $i783, $i784, $i785, $i786, $i787, $i788, $i789, $i790, $i791, $i792, $i793, $i794, $i795, $i796, $i797, $i798, $i799, $i800, $i801, $i802, $i803, $i804, $i805, $i806, $i807, $i808, $i809, $i810, $i811, $i812, $i813, $i814, $i815, $i816, $i817, $i818, $i819, $i820, $i821, $i822, $i823, $i824, $i825, $i826, $i827, $i828, $i829, $i830, $i831, $i832, $i833, $i834, $i835, $i836, $i837, $i838, $i839, $i840, $i841, $i842, $i843, $i844, $i845, $i846, $i847, $i848, $i849;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        r3 := @parameter0: java.awt.Graphics;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i5 := @parameter3: int;

        i8 := @parameter4: int;

        i6 := @parameter5: int;

        i14 := @parameter6: int;

        z0 := @parameter7: boolean;

        $i0 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getColorTheme()>();

        tableswitch(i1)
        {
            case 1: goto label22;
            case 2: goto label01;
            case 3: goto label15;
            case 4: goto label08;
            default: goto label22;
        };

     label01:
        if $i0 == 2 goto label02;

        if $i0 != 1 goto label05;

     label02:
        if z0 == 0 goto label03;

        $r46 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r46);

        $i558 = i5 - 2;

        $i557 = i8 + 1;

        $i556 = i5 - 2;

        $i554 = i8 + i14;

        $i555 = $i554 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i558, $i557, $i556, $i555);

        $i560 = i5 - 1;

        $i559 = i5 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i560, i8, $i559, i8);

        $i564 = i8 - 1;

        $i561 = i5 + i6;

        $i563 = $i561 - 1;

        $i562 = i8 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i5, $i564, $i563, $i562);

        $r47 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor2>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r47);

        $i568 = i5 - 1;

        $i567 = i8 + i14;

        $i566 = i5 - 1;

        $i565 = i8 + i14;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i568, $i567, $i566, $i565);

        $i569 = i8 + i14;

        $i572 = $i569 + 1;

        $i570 = i8 + i14;

        $i571 = $i570 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i5, $i572, i5, $i571);

        $i577 = i5 + 1;

        $i576 = i8 + i14;

        $i573 = i5 + i6;

        $i575 = $i573 - 1;

        $i574 = i8 + i14;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i577, $i576, $i575, $i574);

        $r48 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor3>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r48);

        $i579 = i8 + i14;

        $i578 = i8 + i14;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i5, $i579, i5, $i578);

        $i586 = i5 + 1;

        $i580 = i8 + i14;

        $i585 = $i580 + 1;

        $i581 = i5 + i6;

        $i584 = $i581 - 1;

        $i582 = i8 + i14;

        $i583 = $i582 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i586, $i585, $i584, $i583);

        goto label29;

     label03:
        $r38 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i470 = virtualinvoke $r38.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i2 <= $i470 goto label04;

        $r43 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r43);

        $i514 = i8 + 2;

        $i512 = i8 + i14;

        $i513 = $i512 - 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i5, $i514, i5, $i513);

        $i518 = i5 + 1;

        $i517 = i8 + 1;

        $i516 = i5 + 1;

        $i515 = i8 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i518, $i517, $i516, $i515);

        $i521 = i5 + 2;

        $i519 = i5 + i6;

        $i520 = $i519 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i521, i8, $i520, i8);

        $r44 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r44);

        $i527 = i5 + 1;

        $i522 = i8 + i14;

        $i526 = $i522 - 2;

        $i525 = i5 + 1;

        $i523 = i8 + i14;

        $i524 = $i523 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i527, $i526, $i525, $i524);

        $i533 = i5 + 2;

        $i528 = i8 + i14;

        $i532 = $i528 - 1;

        $i531 = i5 + 2;

        $i529 = i8 + i14;

        $i530 = $i529 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i533, $i532, $i531, $i530);

        $i540 = i5 + 3;

        $i534 = i8 + i14;

        $i539 = $i534 - 2;

        $i535 = i5 + i6;

        $i538 = $i535 - 1;

        $i536 = i8 + i14;

        $i537 = $i536 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i540, $i539, $i538, $i537);

        $r45 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor3>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r45);

        $i546 = i5 + 2;

        $i541 = i8 + i14;

        $i545 = $i541 - 2;

        $i544 = i5 + 2;

        $i542 = i8 + i14;

        $i543 = $i542 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i546, $i545, $i544, $i543);

        $i553 = i5 + 3;

        $i547 = i8 + i14;

        $i552 = $i547 - 1;

        $i548 = i5 + i6;

        $i551 = $i548 - 1;

        $i549 = i8 + i14;

        $i550 = $i549 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i553, $i552, $i551, $i550);

        goto label29;

     label04:
        $r39 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i471 = virtualinvoke $r39.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i2 >= $i471 goto label29;

        $r40 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r40);

        $i474 = i8 + 3;

        $i472 = i8 + i14;

        $i473 = $i472 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i5, $i474, i5, $i473);

        $i478 = i5 + 1;

        $i477 = i8 + 2;

        $i476 = i5 + 1;

        $i475 = i8 + 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i478, $i477, $i476, $i475);

        $i483 = i5 + 2;

        $i482 = i8 + 1;

        $i479 = i5 + i6;

        $i481 = $i479 - 1;

        $i480 = i8 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i483, $i482, $i481, $i480);

        $r41 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r41);

        $i489 = i5 + 1;

        $i484 = i8 + i14;

        $i488 = $i484 - 1;

        $i487 = i5 + 1;

        $i485 = i8 + i14;

        $i486 = $i485 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i489, $i488, $i487, $i486);

        $i493 = i5 + 2;

        $i492 = i8 + i14;

        $i491 = i5 + 2;

        $i490 = i8 + i14;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i493, $i492, $i491, $i490);

        $i500 = i5 + 3;

        $i494 = i8 + i14;

        $i499 = $i494 - 1;

        $i495 = i5 + i6;

        $i498 = $i495 - 1;

        $i496 = i8 + i14;

        $i497 = $i496 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i500, $i499, $i498, $i497);

        $r42 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor3>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r42);

        $i506 = i5 + 2;

        $i501 = i8 + i14;

        $i505 = $i501 - 1;

        $i504 = i5 + 2;

        $i502 = i8 + i14;

        $i503 = $i502 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i506, $i505, $i504, $i503);

        $i511 = i5 + 3;

        $i510 = i8 + i14;

        $i507 = i5 + i6;

        $i509 = $i507 - 1;

        $i508 = i8 + i14;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i511, $i510, $i509, $i508);

        goto label29;

     label05:
        if z0 == 0 goto label06;

        $r53 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r53);

        $i639 = i5 - 2;

        $i638 = i8 + 1;

        $i637 = i5 - 2;

        $i635 = i8 + i14;

        $i636 = $i635 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i639, $i638, $i637, $i636);

        $i641 = i5 - 1;

        $i640 = i5 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i641, i8, $i640, i8);

        $i643 = i8 - 1;

        $i642 = i8 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i5, $i643, i5, $i642);

        $i647 = i5 - 1;

        $i646 = i8 + i14;

        $i645 = i5 - 1;

        $i644 = i8 + i14;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i647, $i646, $i645, $i644);

        $i648 = i8 + i14;

        $i651 = $i648 + 1;

        $i649 = i8 + i14;

        $i650 = $i649 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i5, $i651, i5, $i650);

        $r54 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor2>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r54);

        $i656 = i5 - 1;

        $i655 = i8 + 1;

        $i654 = i5 - 1;

        $i652 = i8 + i14;

        $i653 = $i652 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i656, $i655, $i654, $i653);

        $i657 = i8 + i14;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i5, i8, i5, $i657);

        $r55 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor3>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r55);

        $i662 = i5 + 1;

        $i661 = i8 - 2;

        $i658 = i5 + i6;

        $i660 = $i658 - 1;

        $i659 = i8 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i662, $i661, $i660, $i659);

        $i669 = i5 + 1;

        $i663 = i8 + i14;

        $i668 = $i663 + 2;

        $i664 = i5 + i6;

        $i667 = $i664 - 1;

        $i665 = i8 + i14;

        $i666 = $i665 + 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i669, $i668, $i667, $i666);

        goto label29;

     label06:
        $r49 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i587 = virtualinvoke $r49.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i2 <= $i587 goto label07;

        $r52 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r52);

        $i614 = i8 + 2;

        $i612 = i8 + i14;

        $i613 = $i612 - 4;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i5, $i614, i5, $i613);

        $i618 = i5 + 1;

        $i617 = i8 + 1;

        $i616 = i5 + 1;

        $i615 = i8 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i618, $i617, $i616, $i615);

        $i621 = i5 + 2;

        $i619 = i5 + i6;

        $i620 = $i619 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i621, i8, $i620, i8);

        $i627 = i5 + 1;

        $i622 = i8 + i14;

        $i626 = $i622 - 3;

        $i625 = i5 + 1;

        $i623 = i8 + i14;

        $i624 = $i623 - 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i627, $i626, $i625, $i624);

        $i634 = i5 + 2;

        $i628 = i8 + i14;

        $i633 = $i628 - 2;

        $i629 = i5 + i6;

        $i632 = $i629 - 1;

        $i630 = i8 + i14;

        $i631 = $i630 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i634, $i633, $i632, $i631);

        goto label29;

     label07:
        $r50 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i588 = virtualinvoke $r50.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i2 >= $i588 goto label29;

        $r51 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r51);

        $i591 = i8 + 4;

        $i589 = i8 + i14;

        $i590 = $i589 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i5, $i591, i5, $i590);

        $i595 = i5 + 1;

        $i594 = i8 + 3;

        $i593 = i5 + 1;

        $i592 = i8 + 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i595, $i594, $i593, $i592);

        $i600 = i5 + 2;

        $i599 = i8 + 2;

        $i596 = i5 + i6;

        $i598 = $i596 - 1;

        $i597 = i8 + 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i600, $i599, $i598, $i597);

        $i606 = i5 + 1;

        $i601 = i8 + i14;

        $i605 = $i601 - 1;

        $i604 = i5 + 1;

        $i602 = i8 + i14;

        $i603 = $i602 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i606, $i605, $i604, $i603);

        $i611 = i5 + 2;

        $i610 = i8 + i14;

        $i607 = i5 + i6;

        $i609 = $i607 - 1;

        $i608 = i8 + i14;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i611, $i610, $i609, $i608);

        goto label29;

     label08:
        if $i0 == 2 goto label09;

        if $i0 != 1 goto label12;

     label09:
        if z0 == 0 goto label10;

        $r10 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r10);

        $i93 = i5 + i6;

        $i96 = $i93 - 1;

        $i95 = i8 - 1;

        $i94 = i8 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i96, $i95, i5, $i94);

        $r11 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor2>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r11);

        $i101 = i5 + i6;

        $i100 = i8 + 1;

        $i99 = i5 + i6;

        $i97 = i8 + i14;

        $i98 = $i97 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i101, $i100, $i99, $i98);

        $i102 = i5 + i6;

        $i105 = $i102 - 1;

        $i104 = i8 + i14;

        $i103 = i8 + i14;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i105, $i104, i5, $i103);

        $r12 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor3>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r12);

        $i107 = i5 + i6;

        $i106 = i5 + i6;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i107, i8, $i106, i8);

        $i108 = i5 + i6;

        $i114 = $i108 + 1;

        $i113 = i8 + 1;

        $i109 = i5 + i6;

        $i112 = $i109 + 1;

        $i110 = i8 + i14;

        $i111 = $i110 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i114, $i113, $i112, $i111);

        $i118 = i5 + i6;

        $i117 = i8 + i14;

        $i116 = i5 + i6;

        $i115 = i8 + i14;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i118, $i117, $i116, $i115);

        $i119 = i5 + i6;

        $i124 = $i119 - 1;

        $i120 = i8 + i14;

        $i123 = $i120 + 1;

        $i121 = i8 + i14;

        $i122 = $i121 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i124, $i123, i5, $i122);

        goto label29;

     label10:
        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i3 = virtualinvoke $r1.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i2 <= $i3 goto label11;

        $r7 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r7);

        $i51 = i5 + i6;

        $i52 = $i51 - 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i52, i8, i5, i8);

        $r8 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r8);

        $i53 = i5 + i6;

        $i59 = $i53 - 2;

        $i58 = i8 + 2;

        $i54 = i5 + i6;

        $i57 = $i54 - 2;

        $i55 = i8 + i14;

        $i56 = $i55 - 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i59, $i58, $i57, $i56);

        $i60 = i5 + i6;

        $i65 = $i60 - 3;

        $i61 = i8 + i14;

        $i64 = $i61 - 2;

        $i62 = i8 + i14;

        $i63 = $i62 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i65, $i64, i5, $i63);

        $r9 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor3>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r9);

        $i66 = i5 + i6;

        $i71 = $i66 - 2;

        $i70 = i8 + 1;

        $i67 = i5 + i6;

        $i69 = $i67 - 2;

        $i68 = i8 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i71, $i70, $i69, $i68);

        $i72 = i5 + i6;

        $i78 = $i72 - 1;

        $i77 = i8 + 2;

        $i73 = i5 + i6;

        $i76 = $i73 - 1;

        $i74 = i8 + i14;

        $i75 = $i74 - 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i78, $i77, $i76, $i75);

        $i79 = i5 + i6;

        $i86 = $i79 - 2;

        $i80 = i8 + i14;

        $i85 = $i80 - 2;

        $i81 = i5 + i6;

        $i84 = $i81 - 2;

        $i82 = i8 + i14;

        $i83 = $i82 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i86, $i85, $i84, $i83);

        $i87 = i5 + i6;

        $i92 = $i87 - 3;

        $i88 = i8 + i14;

        $i91 = $i88 - 1;

        $i89 = i8 + i14;

        $i90 = $i89 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i92, $i91, i5, $i90);

        goto label29;

     label11:
        $r2 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i4 = virtualinvoke $r2.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i2 >= $i4 goto label29;

        $r4 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r4);

        $i7 = i5 + i6;

        $i11 = $i7 - 3;

        $i10 = i8 + 1;

        $i9 = i8 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i11, $i10, i5, $i9);

        $r5 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r5);

        $i12 = i5 + i6;

        $i19 = $i12 - 2;

        $i18 = i8 + 3;

        $i13 = i5 + i6;

        $i17 = $i13 - 2;

        $i15 = i8 + i14;

        $i16 = $i15 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i19, $i18, $i17, $i16);

        $i20 = i5 + i6;

        $i25 = $i20 - 3;

        $i21 = i8 + i14;

        $i24 = $i21 - 1;

        $i22 = i8 + i14;

        $i23 = $i22 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i25, $i24, i5, $i23);

        $r6 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor3>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r6);

        $i26 = i5 + i6;

        $i31 = $i26 - 2;

        $i30 = i8 + 2;

        $i27 = i5 + i6;

        $i29 = $i27 - 2;

        $i28 = i8 + 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i31, $i30, $i29, $i28);

        $i32 = i5 + i6;

        $i38 = $i32 - 1;

        $i37 = i8 + 3;

        $i33 = i5 + i6;

        $i36 = $i33 - 1;

        $i34 = i8 + i14;

        $i35 = $i34 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i38, $i37, $i36, $i35);

        $i39 = i5 + i6;

        $i46 = $i39 - 2;

        $i40 = i8 + i14;

        $i45 = $i40 - 1;

        $i41 = i5 + i6;

        $i44 = $i41 - 2;

        $i42 = i8 + i14;

        $i43 = $i42 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i46, $i45, $i44, $i43);

        $i47 = i5 + i6;

        $i50 = $i47 - 3;

        $i49 = i8 + i14;

        $i48 = i8 + i14;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i50, $i49, i5, $i48);

        goto label29;

     label12:
        if z0 == 0 goto label13;

        $r17 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r17);

        $i185 = i5 + i6;

        $i191 = $i185 + 1;

        $i190 = i8 + 1;

        $i186 = i5 + i6;

        $i189 = $i186 + 1;

        $i187 = i8 + i14;

        $i188 = $i187 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i191, $i190, $i189, $i188);

        $i193 = i5 + i6;

        $i192 = i5 + i6;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i193, i8, $i192, i8);

        $i194 = i5 + i6;

        $i199 = $i194 - 1;

        $i198 = i8 - 1;

        $i195 = i5 + i6;

        $i197 = $i195 - 1;

        $i196 = i8 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i199, $i198, $i197, $i196);

        $i203 = i5 + i6;

        $i202 = i8 + i14;

        $i201 = i5 + i6;

        $i200 = i8 + i14;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i203, $i202, $i201, $i200);

        $i204 = i5 + i6;

        $i211 = $i204 - 1;

        $i205 = i8 + i14;

        $i210 = $i205 + 1;

        $i206 = i5 + i6;

        $i209 = $i206 - 1;

        $i207 = i8 + i14;

        $i208 = $i207 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i211, $i210, $i209, $i208);

        $r18 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor2>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r18);

        $i216 = i5 + i6;

        $i215 = i8 + 1;

        $i214 = i5 + i6;

        $i212 = i8 + i14;

        $i213 = $i212 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i216, $i215, $i214, $i213);

        $i217 = i5 + i6;

        $i221 = $i217 - 1;

        $i218 = i5 + i6;

        $i220 = $i218 - 1;

        $i219 = i8 + i14;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i221, i8, $i220, $i219);

        $r19 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor3>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r19);

        $i222 = i5 + i6;

        $i225 = $i222 - 2;

        $i224 = i8 - 2;

        $i223 = i8 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i225, $i224, i5, $i223);

        $i226 = i5 + i6;

        $i231 = $i226 - 2;

        $i227 = i8 + i14;

        $i230 = $i227 + 2;

        $i228 = i8 + i14;

        $i229 = $i228 + 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i231, $i230, i5, $i229);

        goto label29;

     label13:
        $r13 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i125 = virtualinvoke $r13.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i2 <= $i125 goto label14;

        $r16 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r16);

        $i156 = i5 + i6;

        $i162 = $i156 - 1;

        $i161 = i8 + 2;

        $i157 = i5 + i6;

        $i160 = $i157 - 1;

        $i158 = i8 + i14;

        $i159 = $i158 - 4;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i162, $i161, $i160, $i159);

        $i163 = i5 + i6;

        $i168 = $i163 - 2;

        $i167 = i8 + 1;

        $i164 = i5 + i6;

        $i166 = $i164 - 2;

        $i165 = i8 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i168, $i167, $i166, $i165);

        $i169 = i5 + i6;

        $i176 = $i169 - 2;

        $i170 = i8 + i14;

        $i175 = $i170 - 3;

        $i171 = i5 + i6;

        $i174 = $i171 - 2;

        $i172 = i8 + i14;

        $i173 = $i172 - 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i176, $i175, $i174, $i173);

        $i177 = i5 + i6;

        $i178 = $i177 - 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i178, i8, i5, i8);

        $i179 = i5 + i6;

        $i184 = $i179 - 3;

        $i180 = i8 + i14;

        $i183 = $i180 - 2;

        $i181 = i8 + i14;

        $i182 = $i181 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i184, $i183, i5, $i182);

        goto label29;

     label14:
        $r14 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i126 = virtualinvoke $r14.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i2 >= $i126 goto label29;

        $r15 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r15);

        $i127 = i5 + i6;

        $i133 = $i127 - 1;

        $i132 = i8 + 4;

        $i128 = i5 + i6;

        $i131 = $i128 - 1;

        $i129 = i8 + i14;

        $i130 = $i129 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i133, $i132, $i131, $i130);

        $i134 = i5 + i6;

        $i139 = $i134 - 2;

        $i138 = i8 + 3;

        $i135 = i5 + i6;

        $i137 = $i135 - 2;

        $i136 = i8 + 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i139, $i138, $i137, $i136);

        $i140 = i5 + i6;

        $i143 = $i140 - 3;

        $i142 = i8 + 2;

        $i141 = i8 + 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i143, $i142, i5, $i141);

        $i144 = i5 + i6;

        $i151 = $i144 - 2;

        $i145 = i8 + i14;

        $i150 = $i145 - 1;

        $i146 = i5 + i6;

        $i149 = $i146 - 2;

        $i147 = i8 + i14;

        $i148 = $i147 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i151, $i150, $i149, $i148);

        $i152 = i5 + i6;

        $i155 = $i152 - 3;

        $i154 = i8 + i14;

        $i153 = i8 + i14;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i155, $i154, i5, $i153);

        goto label29;

     label15:
        if $i0 == 2 goto label16;

        if $i0 != 1 goto label19;

     label16:
        if z0 == 0 goto label17;

        $r28 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r28);

        $i321 = i8 + i14;

        $i320 = i8 + i14;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i5, $i321, i5, $i320);

        $i325 = i5 - 1;

        $i322 = i8 + i14;

        $i324 = $i322 - 1;

        $i323 = i5 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i325, $i324, $i323, i8);

        $r29 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor2>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r29);

        $i330 = i5 + 1;

        $i329 = i8 + i14;

        $i326 = i5 + i6;

        $i328 = $i326 - 2;

        $i327 = i8 + i14;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i330, $i329, $i328, $i327);

        $i331 = i5 + i6;

        $i337 = $i331 - 1;

        $i332 = i8 + i14;

        $i336 = $i332 - 1;

        $i333 = i5 + i6;

        $i335 = $i333 - 1;

        $i334 = i8 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i337, $i336, $i335, $i334);

        $r30 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor3>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r30);

        $i344 = i5 + 1;

        $i338 = i8 + i14;

        $i343 = $i338 + 1;

        $i339 = i5 + i6;

        $i342 = $i339 - 2;

        $i340 = i8 + i14;

        $i341 = $i340 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i344, $i343, $i342, $i341);

        $i345 = i5 + i6;

        $i350 = $i345 - 1;

        $i349 = i8 + i14;

        $i346 = i5 + i6;

        $i348 = $i346 - 1;

        $i347 = i8 + i14;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i350, $i349, $i348, $i347);

        $i355 = i5 + i6;

        $i351 = i8 + i14;

        $i354 = $i351 - 1;

        $i353 = i5 + i6;

        $i352 = i8 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i355, $i354, $i353, $i352);

        goto label29;

     label17:
        $r20 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i232 = virtualinvoke $r20.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i2 <= $i232 goto label18;

        $r25 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r25);

        $i276 = i8 + i14;

        $i279 = $i276 - 2;

        $i277 = i8 + i14;

        $i278 = $i277 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i5, $i279, i5, $i278);

        $i283 = i5 - 1;

        $i280 = i8 + i14;

        $i282 = $i280 - 3;

        $i281 = i5 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i283, $i282, $i281, i8);

        $r26 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r26);

        $i290 = i5 + 1;

        $i284 = i8 + i14;

        $i289 = $i284 - 2;

        $i285 = i5 + i6;

        $i288 = $i285 - 4;

        $i286 = i8 + i14;

        $i287 = $i286 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i290, $i289, $i288, $i287);

        $i291 = i5 + i6;

        $i297 = $i291 - 3;

        $i292 = i8 + i14;

        $i296 = $i292 - 3;

        $i293 = i5 + i6;

        $i295 = $i293 - 3;

        $i294 = i8 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i297, $i296, $i295, $i294);

        $r27 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor3>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r27);

        $i304 = i5 + 1;

        $i298 = i8 + i14;

        $i303 = $i298 - 1;

        $i299 = i5 + i6;

        $i302 = $i299 - 4;

        $i300 = i8 + i14;

        $i301 = $i300 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i304, $i303, $i302, $i301);

        $i305 = i5 + i6;

        $i312 = $i305 - 3;

        $i306 = i8 + i14;

        $i311 = $i306 - 2;

        $i307 = i5 + i6;

        $i310 = $i307 - 3;

        $i308 = i8 + i14;

        $i309 = $i308 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i312, $i311, $i310, $i309);

        $i313 = i5 + i6;

        $i319 = $i313 - 2;

        $i314 = i8 + i14;

        $i318 = $i314 - 3;

        $i315 = i5 + i6;

        $i317 = $i315 - 2;

        $i316 = i8 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i319, $i318, $i317, $i316);

        goto label29;

     label18:
        $r21 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i233 = virtualinvoke $r21.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i2 >= $i233 goto label29;

        $r22 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r22);

        $i239 = i5 + 2;

        $i234 = i8 + i14;

        $i238 = $i234 - 2;

        $i237 = i5 + 2;

        $i235 = i8 + i14;

        $i236 = $i235 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i239, $i238, $i237, $i236);

        $i243 = i5 + 1;

        $i240 = i8 + i14;

        $i242 = $i240 - 3;

        $i241 = i5 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i243, $i242, $i241, i8);

        $r23 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r23);

        $i250 = i5 + 3;

        $i244 = i8 + i14;

        $i249 = $i244 - 2;

        $i245 = i5 + i6;

        $i248 = $i245 - 2;

        $i246 = i8 + i14;

        $i247 = $i246 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i250, $i249, $i248, $i247);

        $i251 = i5 + i6;

        $i256 = $i251 - 1;

        $i252 = i8 + i14;

        $i255 = $i252 - 3;

        $i253 = i5 + i6;

        $i254 = $i253 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i256, $i255, $i254, i8);

        $r24 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor3>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r24);

        $i263 = i5 + 3;

        $i257 = i8 + i14;

        $i262 = $i257 - 1;

        $i258 = i5 + i6;

        $i261 = $i258 - 2;

        $i259 = i8 + i14;

        $i260 = $i259 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i263, $i262, $i261, $i260);

        $i264 = i5 + i6;

        $i271 = $i264 - 1;

        $i265 = i8 + i14;

        $i270 = $i265 - 2;

        $i266 = i5 + i6;

        $i269 = $i266 - 1;

        $i267 = i8 + i14;

        $i268 = $i267 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i271, $i270, $i269, $i268);

        $i275 = i5 + i6;

        $i272 = i8 + i14;

        $i274 = $i272 - 3;

        $i273 = i5 + i6;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i275, $i274, $i273, i8);

        goto label29;

     label19:
        if z0 == 0 goto label20;

        $r35 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r35);

        $i427 = i5 + 1;

        $i422 = i8 + i14;

        $i426 = $i422 + 1;

        $i425 = i5 + i6;

        $i423 = i8 + i14;

        $i424 = $i423 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i427, $i426, $i425, $i424);

        $i429 = i8 + i14;

        $i428 = i8 + i14;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i5, $i429, i5, $i428);

        $i435 = i5 - 1;

        $i430 = i8 + i14;

        $i434 = $i430 - 1;

        $i433 = i5 - 1;

        $i431 = i8 + i14;

        $i432 = $i431 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i435, $i434, $i433, $i432);

        $i436 = i5 + i6;

        $i441 = $i436 + 1;

        $i440 = i8 + i14;

        $i437 = i5 + i6;

        $i439 = $i437 + 1;

        $i438 = i8 + i14;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i441, $i440, $i439, $i438);

        $i442 = i5 + i6;

        $i449 = $i442 + 2;

        $i443 = i8 + i14;

        $i448 = $i443 - 1;

        $i444 = i5 + i6;

        $i447 = $i444 + 2;

        $i445 = i8 + i14;

        $i446 = $i445 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i449, $i448, $i447, $i446);

        $r36 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor2>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r36);

        $i453 = i5 + 1;

        $i452 = i8 + i14;

        $i451 = i5 + i6;

        $i450 = i8 + i14;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i453, $i452, $i451, $i450);

        $i454 = i8 + i14;

        $i459 = $i454 - 1;

        $i455 = i5 + i6;

        $i458 = $i455 + 1;

        $i456 = i8 + i14;

        $i457 = $i456 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i5, $i459, $i458, $i457);

        $r37 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor3>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r37);

        $i463 = i5 - 1;

        $i460 = i8 + i14;

        $i462 = $i460 - 2;

        $i461 = i5 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i463, $i462, $i461, i8);

        $i464 = i5 + i6;

        $i469 = $i464 + 2;

        $i465 = i8 + i14;

        $i468 = $i465 - 2;

        $i466 = i5 + i6;

        $i467 = $i466 + 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i469, $i468, $i467, i8);

        goto label29;

     label20:
        $r31 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i356 = virtualinvoke $r31.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i2 <= $i356 goto label21;

        $r34 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r34);

        $i396 = i5 + 3;

        $i390 = i8 + i14;

        $i395 = $i390 - 1;

        $i391 = i5 + i6;

        $i394 = $i391 - 3;

        $i392 = i8 + i14;

        $i393 = $i392 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i396, $i395, $i394, $i393);

        $i397 = i5 + i6;

        $i404 = $i397 - 2;

        $i398 = i8 + i14;

        $i403 = $i398 - 2;

        $i399 = i5 + i6;

        $i402 = $i399 - 2;

        $i400 = i8 + i14;

        $i401 = $i400 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i404, $i403, $i402, $i401);

        $i405 = i5 + i6;

        $i411 = $i405 - 1;

        $i406 = i8 + i14;

        $i410 = $i406 - 3;

        $i407 = i5 + i6;

        $i409 = $i407 - 1;

        $i408 = i8 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i411, $i410, $i409, $i408);

        $i417 = i5 + 2;

        $i412 = i8 + i14;

        $i416 = $i412 - 2;

        $i415 = i5 + 2;

        $i413 = i8 + i14;

        $i414 = $i413 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i417, $i416, $i415, $i414);

        $i421 = i5 + 1;

        $i418 = i8 + i14;

        $i420 = $i418 - 3;

        $i419 = i5 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i421, $i420, $i419, i8);

        goto label29;

     label21:
        $r32 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i357 = virtualinvoke $r32.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i2 >= $i357 goto label29;

        $r33 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r33);

        $i364 = i5 + 3;

        $i358 = i8 + i14;

        $i363 = $i358 - 1;

        $i359 = i5 + i6;

        $i362 = $i359 - 3;

        $i360 = i8 + i14;

        $i361 = $i360 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i364, $i363, $i362, $i361);

        $i365 = i5 + i6;

        $i372 = $i365 - 2;

        $i366 = i8 + i14;

        $i371 = $i366 - 2;

        $i367 = i5 + i6;

        $i370 = $i367 - 2;

        $i368 = i8 + i14;

        $i369 = $i368 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i372, $i371, $i370, $i369);

        $i373 = i5 + i6;

        $i379 = $i373 - 1;

        $i374 = i8 + i14;

        $i378 = $i374 - 3;

        $i375 = i5 + i6;

        $i377 = $i375 - 1;

        $i376 = i8 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i379, $i378, $i377, $i376);

        $i385 = i5 + 2;

        $i380 = i8 + i14;

        $i384 = $i380 - 2;

        $i383 = i5 + 2;

        $i381 = i8 + i14;

        $i382 = $i381 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i385, $i384, $i383, $i382);

        $i389 = i5 + 1;

        $i386 = i8 + i14;

        $i388 = $i386 - 3;

        $i387 = i5 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i389, $i388, $i387, i8);

        goto label29;

     label22:
        if $i0 == 2 goto label23;

        if $i0 != 1 goto label26;

     label23:
        if z0 == 0 goto label24;

        $r64 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r64);

        $i733 = i8 - 1;

        $i732 = i8 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i5, $i733, i5, $i732);

        $i737 = i5 - 1;

        $i736 = i5 - 1;

        $i734 = i8 + i14;

        $i735 = $i734 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i737, i8, $i736, $i735);

        $i742 = i5 + 1;

        $i741 = i8 - 2;

        $i738 = i5 + i6;

        $i740 = $i738 + 1;

        $i739 = i8 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i742, $i741, $i740, $i739);

        $r65 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor2>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r65);

        $i743 = i5 + i6;

        $i749 = $i743 + 2;

        $i748 = i8 - 1;

        $i744 = i5 + i6;

        $i747 = $i744 + 2;

        $i745 = i8 + i14;

        $i746 = $i745 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i749, $i748, $i747, $i746);

        $r66 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor3>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r66);

        $i750 = i5 + i6;

        $i755 = $i750 + 2;

        $i754 = i8 - 1;

        $i751 = i5 + i6;

        $i753 = $i751 + 2;

        $i752 = i8 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i755, $i754, $i753, $i752);

        $i756 = i5 + i6;

        $i761 = $i756 + 3;

        $i757 = i5 + i6;

        $i760 = $i757 + 3;

        $i758 = i8 + i14;

        $i759 = $i758 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i761, i8, $i760, $i759);

        goto label29;

     label24:
        $r56 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i670 = virtualinvoke $r56.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i2 <= $i670 goto label25;

        $r61 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r61);

        $i705 = i5 + 2;

        $i704 = i8 + 1;

        $i703 = i5 + 2;

        $i702 = i8 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i705, $i704, $i703, $i702);

        $i710 = i5 + 1;

        $i709 = i8 + 2;

        $i708 = i5 + 1;

        $i706 = i8 + i14;

        $i707 = $i706 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i710, $i709, $i708, $i707);

        $i713 = i5 + 3;

        $i711 = i5 + i6;

        $i712 = $i711 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i713, i8, $i712, i8);

        $r62 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r62);

        $i714 = i5 + i6;

        $i720 = $i714 - 1;

        $i719 = i8 + 1;

        $i715 = i5 + i6;

        $i718 = $i715 - 1;

        $i716 = i8 + i14;

        $i717 = $i716 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i720, $i719, $i718, $i717);

        $r63 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor3>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r63);

        $i721 = i5 + i6;

        $i726 = $i721 - 1;

        $i725 = i8 + 1;

        $i722 = i5 + i6;

        $i724 = $i722 - 1;

        $i723 = i8 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i726, $i725, $i724, $i723);

        $i731 = i5 + i6;

        $i730 = i8 + 2;

        $i729 = i5 + i6;

        $i727 = i8 + i14;

        $i728 = $i727 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i731, $i730, $i729, $i728);

        goto label29;

     label25:
        $r57 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i671 = virtualinvoke $r57.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i2 >= $i671 goto label29;

        $r58 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r58);

        $i675 = i5 + 2;

        $i674 = i8 + 1;

        $i673 = i5 + 2;

        $i672 = i8 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i675, $i674, $i673, $i672);

        $i680 = i5 + 1;

        $i679 = i8 + 2;

        $i678 = i5 + 1;

        $i676 = i8 + i14;

        $i677 = $i676 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i680, $i679, $i678, $i677);

        $i683 = i5 + 3;

        $i681 = i5 + i6;

        $i682 = $i681 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i683, i8, $i682, i8);

        $r59 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r59);

        $i684 = i5 + i6;

        $i690 = $i684 - 1;

        $i689 = i8 + 1;

        $i685 = i5 + i6;

        $i688 = $i685 - 1;

        $i686 = i8 + i14;

        $i687 = $i686 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i690, $i689, $i688, $i687);

        $r60 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor3>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r60);

        $i691 = i5 + i6;

        $i696 = $i691 - 1;

        $i695 = i8 + 1;

        $i692 = i5 + i6;

        $i694 = $i692 - 1;

        $i693 = i8 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i696, $i695, $i694, $i693);

        $i701 = i5 + i6;

        $i700 = i8 + 2;

        $i699 = i5 + i6;

        $i697 = i8 + i14;

        $i698 = $i697 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i701, $i700, $i699, $i698);

        goto label29;

     label26:
        if z0 == 0 goto label27;

        $r71 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r71);

        $i817 = i5 + 1;

        $i816 = i8 - 2;

        $i815 = i5 + i6;

        $i814 = i8 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i817, $i816, $i815, $i814);

        $i819 = i8 - 1;

        $i818 = i8 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i5, $i819, i5, $i818);

        $i821 = i5 - 1;

        $i820 = i5 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i821, i8, $i820, i8);

        $i822 = i5 + i6;

        $i827 = $i822 + 1;

        $i826 = i8 - 1;

        $i823 = i5 + i6;

        $i825 = $i823 + 1;

        $i824 = i8 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i827, $i826, $i825, $i824);

        $i828 = i5 + i6;

        $i831 = $i828 + 2;

        $i829 = i5 + i6;

        $i830 = $i829 + 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i831, i8, $i830, i8);

        $r72 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor2>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r72);

        $i835 = i5 + 1;

        $i834 = i8 - 1;

        $i833 = i5 + i6;

        $i832 = i8 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i835, $i834, $i833, $i832);

        $i836 = i5 + i6;

        $i837 = $i836 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i5, i8, $i837, i8);

        $r73 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor3>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r73);

        $i842 = i5 - 1;

        $i841 = i8 + 1;

        $i840 = i5 - 1;

        $i838 = i8 + i14;

        $i839 = $i838 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i842, $i841, $i840, $i839);

        $i843 = i5 + i6;

        $i849 = $i843 + 2;

        $i848 = i8 + 1;

        $i844 = i5 + i6;

        $i847 = $i844 + 2;

        $i845 = i8 + i14;

        $i846 = $i845 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i849, $i848, $i847, $i846);

        goto label29;

     label27:
        $r67 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i762 = virtualinvoke $r67.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i2 <= $i762 goto label28;

        $r70 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r70);

        $i793 = i5 + 1;

        $i792 = i8 + 2;

        $i791 = i5 + 1;

        $i789 = i8 + i14;

        $i790 = $i789 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i793, $i792, $i791, $i790);

        $i797 = i5 + 2;

        $i796 = i8 + 1;

        $i795 = i5 + 2;

        $i794 = i8 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i797, $i796, $i795, $i794);

        $i800 = i5 + 3;

        $i798 = i5 + i6;

        $i799 = $i798 - 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i800, i8, $i799, i8);

        $i801 = i5 + i6;

        $i806 = $i801 - 2;

        $i805 = i8 + 1;

        $i802 = i5 + i6;

        $i804 = $i802 - 2;

        $i803 = i8 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i806, $i805, $i804, $i803);

        $i807 = i5 + i6;

        $i813 = $i807 - 1;

        $i812 = i8 + 2;

        $i808 = i5 + i6;

        $i811 = $i808 - 1;

        $i809 = i8 + i14;

        $i810 = $i809 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i813, $i812, $i811, $i810);

        goto label29;

     label28:
        $r68 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i763 = virtualinvoke $r68.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i2 >= $i763 goto label29;

        $r69 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r69);

        $i768 = i5 + 1;

        $i767 = i8 + 2;

        $i766 = i5 + 1;

        $i764 = i8 + i14;

        $i765 = $i764 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i768, $i767, $i766, $i765);

        $i772 = i5 + 2;

        $i771 = i8 + 1;

        $i770 = i5 + 2;

        $i769 = i8 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i772, $i771, $i770, $i769);

        $i775 = i5 + 3;

        $i773 = i5 + i6;

        $i774 = $i773 - 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i775, i8, $i774, i8);

        $i776 = i5 + i6;

        $i781 = $i776 - 2;

        $i780 = i8 + 1;

        $i777 = i5 + i6;

        $i779 = $i777 - 2;

        $i778 = i8 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i781, $i780, $i779, $i778);

        $i782 = i5 + i6;

        $i788 = $i782 - 1;

        $i787 = i8 + 2;

        $i783 = i5 + i6;

        $i786 = $i783 - 1;

        $i784 = i8 + i14;

        $i785 = $i784 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i788, $i787, $i786, $i785);

     label29:
        return;
    }

    protected void paintTabBorderMouseOver(java.awt.Graphics, int, int, int, int, int, int, boolean)
    {
        java.awt.Color $r3, $r4, $r5, $r7, $r8, $r9, $r11, $r12, $r13, $r14, $r15, $r16, $r18, $r19, $r20, $r22, $r23, $r24, $r26, $r27, $r28, $r29, $r30, $r31, $r33, $r34, $r35, $r36, $r38, $r39, $r40, $r41;
        boolean z0;
        java.awt.Graphics r2;
        com.jidesoft.swing.JideTabbedPane $r1, $r6, $r10, $r17, $r21, $r25, $r32, $r37;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        int $i0, $i1, i2, $i3, i4, $i5, i6, $i7, $i8, i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $i105, $i106, $i107, $i108, $i109, $i110, $i111, $i112, $i113, $i114, $i115, $i116, $i117, $i118, $i119, $i120, $i121, $i122, $i123, $i124, $i125, $i126, $i127, $i128, $i129, $i130, $i131, $i132, $i133, $i134, $i135, $i136, $i137, $i138, $i139, $i140, $i141, $i142, $i143, $i144, $i145, $i146, $i147, $i148, $i149, $i150, $i151, $i152, $i153, $i154, $i155, $i156, $i157, $i158, $i159, $i160, $i161, $i162, $i163, $i164, $i165, $i166, $i167, $i168, $i169, $i170, $i171, $i172, $i173, $i174, $i175, $i176, $i177, $i178, $i179, $i180, $i181, $i182, $i183, $i184, $i185, $i186, $i187, $i188, $i189, $i190, $i191, $i192, $i193, $i194, $i195, $i196, $i197, $i198, $i199, $i200, $i201, $i202, $i203, $i204, $i205, $i206, $i207, $i208, $i209, $i210, $i211, $i212, $i213, $i214, $i215, $i216, $i217, $i218, $i219, $i220, $i221, $i222, $i223, $i224, $i225, $i226, $i227, $i228, $i229, $i230, $i231, $i232, $i233, $i234, $i235, $i236, $i237, $i238, $i239, $i240, $i241, $i242, $i243, $i244, $i245, $i246, $i247, $i248, $i249, $i250, $i251, $i252, $i253, $i254, $i255, $i256, $i257, $i258, $i259, $i260, $i261, $i262, $i263, $i264, $i265, $i266, $i267, $i268, $i269, $i270, $i271, $i272, $i273, $i274, $i275, $i276, $i277, $i278, $i279, $i280, $i281, $i282, $i283, $i284, $i285, $i286, $i287, $i288, $i289, $i290, $i291, $i292, $i293, $i294, $i295, $i296, $i297, $i298, $i299, $i300, $i301, $i302, $i303, $i304, $i305, $i306, $i307, $i308, $i309, $i310, $i311, $i312, $i313, $i314, $i315, $i316, $i317, $i318, $i319, $i320, $i321, $i322, $i323, $i324, $i325, $i326, $i327, $i328, $i329, $i330, $i331, $i332, $i333, $i334, $i335, $i336, $i337, $i338, $i339, $i340, $i341, $i342, $i343, $i344, $i345, $i346, $i347, $i348, $i349, $i350, $i351, $i352, $i353, $i354, $i355, $i356, $i357, $i358, $i359, $i360, $i361, $i362, $i363, $i364, $i365, $i366, $i367, $i368, $i369, $i370, $i371, $i372, $i373, $i374, $i375, $i376, $i377, $i378, $i379, $i380, $i381, $i382, $i383, $i384, $i385, $i386, $i387, $i388, $i389, $i390, $i391, $i392, $i393, $i394, $i395, $i396, $i397, $i398, $i399, $i400, $i401, $i402, $i403, $i404, $i405, $i406, $i407, $i408, $i409, $i410, $i411, $i412, $i413, $i414, $i415, $i416, $i417, $i418, $i419, $i420, $i421, $i422, $i423, $i424, $i425, $i426, $i427, $i428, $i429, $i430, $i431, $i432, $i433, $i434, $i435, $i436, $i437, $i438, $i439, $i440, $i441, $i442, $i443, $i444, $i445, $i446, $i447, $i448, $i449, $i450, $i451, $i452, $i453, $i454, $i455, $i456, $i457, $i458, $i459, $i460, $i461, $i462, $i463, $i464, $i465, $i466, $i467, $i468, $i469, $i470, $i471, $i472, $i473, $i474, $i475, $i476, $i477, $i478, $i479, $i480, $i481, $i482, $i483, $i484, $i485, $i486, $i487, $i488, $i489, $i490, $i491, $i492, $i493, $i494, $i495, $i496, $i497, $i498, $i499, $i500, $i501, $i502, $i503, $i504, $i505, $i506, $i507, $i508, $i509, $i510, $i511, $i512, $i513, $i514, $i515, $i516, $i517, $i518, $i519, $i520, $i521, $i522, $i523, $i524, $i525, $i526, $i527, $i528, $i529, $i530, $i531, i532, i533, $i535;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        r2 := @parameter0: java.awt.Graphics;

        i2 := @parameter1: int;

        i4 := @parameter2: int;

        i532 := @parameter3: int;

        i533 := @parameter4: int;

        i6 := @parameter5: int;

        i9 := @parameter6: int;

        z0 := @parameter7: boolean;

        $i0 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getTabShape()>();

        if $i0 != 1 goto label07;

        tableswitch(i2)
        {
            case 1: goto label06;
            case 2: goto label01;
            case 3: goto label05;
            case 4: goto label03;
            default: goto label06;
        };

     label01:
        $r37 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i467 = virtualinvoke $r37.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i4 <= $i467 goto label02;

        i533 = i533 - 2;

     label02:
        $r38 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor1>;

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r38);

        $i470 = i533 + 4;

        $i468 = i533 + i9;

        $i469 = $i468 - 2;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>(i532, $i470, i532, $i469);

        $i474 = i532 + 1;

        $i473 = i533 + 3;

        $i472 = i532 + 1;

        $i471 = i533 + 3;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i474, $i473, $i472, $i471);

        $i478 = i532 + 2;

        $i477 = i533 + 2;

        $i476 = i532 + 2;

        $i475 = i533 + 2;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i478, $i477, $i476, $i475);

        $i484 = i532 + 1;

        $i479 = i533 + i9;

        $i483 = $i479 - 1;

        $i482 = i532 + 1;

        $i480 = i533 + i9;

        $i481 = $i480 - 1;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i484, $i483, $i482, $i481);

        $i488 = i532 + 2;

        $i487 = i533 + i9;

        $i486 = i532 + 2;

        $i485 = i533 + i9;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i488, $i487, $i486, $i485);

        $r39 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor2>;

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r39);

        $i493 = i532 + 1;

        $i492 = i533 + 4;

        $i491 = i532 + 1;

        $i489 = i533 + i9;

        $i490 = $i489 - 2;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i493, $i492, $i491, $i490);

        $i498 = i532 + 2;

        $i497 = i533 + 3;

        $i496 = i532 + 2;

        $i494 = i533 + i9;

        $i495 = $i494 - 1;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i498, $i497, $i496, $i495);

        goto label22;

     label03:
        $r32 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i370 = virtualinvoke $r32.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i4 <= $i370 goto label04;

        i533 = i533 - 2;

     label04:
        $r33 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor1>;

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r33);

        $i371 = i532 + i6;

        $i377 = $i371 - 1;

        $i376 = i533 + 4;

        $i372 = i532 + i6;

        $i375 = $i372 - 1;

        $i373 = i533 + i9;

        $i374 = $i373 - 2;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i377, $i376, $i375, $i374);

        $i378 = i532 + i6;

        $i383 = $i378 - 2;

        $i382 = i533 + 3;

        $i379 = i532 + i6;

        $i381 = $i379 - 2;

        $i380 = i533 + 3;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i383, $i382, $i381, $i380);

        $i384 = i532 + i6;

        $i389 = $i384 - 3;

        $i388 = i533 + 2;

        $i385 = i532 + i6;

        $i387 = $i385 - 3;

        $i386 = i533 + 2;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i389, $i388, $i387, $i386);

        $i390 = i532 + i6;

        $i397 = $i390 - 2;

        $i391 = i533 + i9;

        $i396 = $i391 - 1;

        $i392 = i532 + i6;

        $i395 = $i392 - 2;

        $i393 = i533 + i9;

        $i394 = $i393 - 1;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i397, $i396, $i395, $i394);

        $i398 = i532 + i6;

        $i403 = $i398 - 3;

        $i402 = i533 + i9;

        $i399 = i532 + i6;

        $i401 = $i399 - 3;

        $i400 = i533 + i9;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i403, $i402, $i401, $i400);

        $r34 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor2>;

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r34);

        $i404 = i532 + i6;

        $i410 = $i404 - 2;

        $i409 = i533 + 4;

        $i405 = i532 + i6;

        $i408 = $i405 - 2;

        $i406 = i533 + i9;

        $i407 = $i406 - 2;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i410, $i409, $i408, $i407);

        $i411 = i532 + i6;

        $i417 = $i411 - 3;

        $i416 = i533 + 3;

        $i412 = i532 + i6;

        $i415 = $i412 - 3;

        $i413 = i533 + i9;

        $i414 = $i413 - 1;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i417, $i416, $i415, $i414);

        goto label22;

     label05:
        $r35 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor1>;

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r35);

        $i424 = i532 + 3;

        $i418 = i533 + i9;

        $i423 = $i418 - 1;

        $i419 = i532 + i6;

        $i422 = $i419 - 3;

        $i420 = i533 + i9;

        $i421 = $i420 - 1;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i424, $i423, $i422, $i421);

        $i430 = i532 + 2;

        $i425 = i533 + i9;

        $i429 = $i425 - 2;

        $i428 = i532 + 2;

        $i426 = i533 + i9;

        $i427 = $i426 - 2;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i430, $i429, $i428, $i427);

        $i436 = i532 + 1;

        $i431 = i533 + i9;

        $i435 = $i431 - 3;

        $i434 = i532 + 1;

        $i432 = i533 + i9;

        $i433 = $i432 - 3;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i436, $i435, $i434, $i433);

        $i437 = i532 + i6;

        $i444 = $i437 - 2;

        $i438 = i533 + i9;

        $i443 = $i438 - 2;

        $i439 = i532 + i6;

        $i442 = $i439 - 2;

        $i440 = i533 + i9;

        $i441 = $i440 - 2;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i444, $i443, $i442, $i441);

        $i445 = i532 + i6;

        $i452 = $i445 - 1;

        $i446 = i533 + i9;

        $i451 = $i446 - 3;

        $i447 = i532 + i6;

        $i450 = $i447 - 1;

        $i448 = i533 + i9;

        $i449 = $i448 - 3;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i452, $i451, $i450, $i449);

        $r36 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor2>;

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r36);

        $i459 = i532 + 3;

        $i453 = i533 + i9;

        $i458 = $i453 - 2;

        $i454 = i532 + i6;

        $i457 = $i454 - 3;

        $i455 = i533 + i9;

        $i456 = $i455 - 2;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i459, $i458, $i457, $i456);

        $i466 = i532 + 2;

        $i460 = i533 + i9;

        $i465 = $i460 - 3;

        $i461 = i532 + i6;

        $i464 = $i461 - 2;

        $i462 = i533 + i9;

        $i463 = $i462 - 3;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i466, $i465, $i464, $i463);

        goto label22;

     label06:
        $r40 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor1>;

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r40);

        $i501 = i532 + 3;

        $i499 = i532 + i6;

        $i500 = $i499 - 3;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i501, i533, $i500, i533);

        $i505 = i532 + 2;

        $i504 = i533 + 1;

        $i503 = i532 + 2;

        $i502 = i533 + 1;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i505, $i504, $i503, $i502);

        $i509 = i532 + 1;

        $i508 = i533 + 2;

        $i507 = i532 + 1;

        $i506 = i533 + 2;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i509, $i508, $i507, $i506);

        $i510 = i532 + i6;

        $i515 = $i510 - 2;

        $i514 = i533 + 1;

        $i511 = i532 + i6;

        $i513 = $i511 - 2;

        $i512 = i533 + 1;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i515, $i514, $i513, $i512);

        $i516 = i532 + i6;

        $i521 = $i516 - 1;

        $i520 = i533 + 2;

        $i517 = i532 + i6;

        $i519 = $i517 - 1;

        $i518 = i533 + 2;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i521, $i520, $i519, $i518);

        $r41 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor2>;

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r41);

        $i526 = i532 + 3;

        $i525 = i533 + 1;

        $i522 = i532 + i6;

        $i524 = $i522 - 3;

        $i523 = i533 + 1;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i526, $i525, $i524, $i523);

        $i531 = i532 + 2;

        $i530 = i533 + 2;

        $i527 = i532 + i6;

        $i529 = $i527 - 2;

        $i528 = i533 + 2;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i531, $i530, $i529, $i528);

        goto label22;

     label07:
        $i1 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getTabShape()>();

        if $i1 != 11 goto label22;

        tableswitch(i2)
        {
            case 1: goto label19;
            case 2: goto label08;
            case 3: goto label16;
            case 4: goto label12;
            default: goto label19;
        };

     label08:
        $i209 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getColorTheme()>();

        if $i209 != 4 goto label10;

        $r21 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i251 = virtualinvoke $r21.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i4 <= $i251 goto label09;

        $i535 = (int) -2;

        i533 = i533 + $i535;

     label09:
        $r22 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor1>;

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r22);

        $i254 = i533 + 4;

        $i252 = i533 + i9;

        $i253 = $i252 - 2;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>(i532, $i254, i532, $i253);

        $i258 = i532 + 1;

        $i257 = i533 + 3;

        $i256 = i532 + 1;

        $i255 = i533 + 3;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i258, $i257, $i256, $i255);

        $i262 = i532 + 2;

        $i261 = i533 + 2;

        $i260 = i532 + 2;

        $i259 = i533 + 2;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i262, $i261, $i260, $i259);

        $i268 = i532 + 1;

        $i263 = i533 + i9;

        $i267 = $i263 - 1;

        $i266 = i532 + 1;

        $i264 = i533 + i9;

        $i265 = $i264 - 1;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i268, $i267, $i266, $i265);

        $i272 = i532 + 2;

        $i271 = i533 + i9;

        $i270 = i532 + 2;

        $i269 = i533 + i9;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i272, $i271, $i270, $i269);

        $r23 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor2>;

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r23);

        $i277 = i532 + 1;

        $i276 = i533 + 4;

        $i275 = i532 + 1;

        $i273 = i533 + i9;

        $i274 = $i273 - 2;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i277, $i276, $i275, $i274);

        $i282 = i532 + 2;

        $i281 = i533 + 3;

        $i280 = i532 + 2;

        $i278 = i533 + i9;

        $i279 = $i278 - 1;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i282, $i281, $i280, $i279);

        $r24 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor3>;

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r24);

        $i287 = i532 + 3;

        $i286 = i533 + 2;

        $i283 = i532 + i6;

        $i285 = $i283 - 1;

        $i284 = i533 + 2;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i287, $i286, $i285, $i284);

        $i292 = i532 + 3;

        $i291 = i533 + i9;

        $i288 = i532 + i6;

        $i290 = $i288 - 1;

        $i289 = i533 + i9;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i292, $i291, $i290, $i289);

        goto label22;

     label10:
        $r17 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i210 = virtualinvoke $r17.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i4 <= $i210 goto label11;

        i533 = i533 - 1;

     label11:
        $r18 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor1>;

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r18);

        $i213 = i533 + 3;

        $i211 = i533 + i9;

        $i212 = $i211 - 2;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>(i532, $i213, i532, $i212);

        $i217 = i532 + 1;

        $i216 = i533 + 2;

        $i215 = i532 + 1;

        $i214 = i533 + 2;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i217, $i216, $i215, $i214);

        $i222 = i532 + 2;

        $i221 = i533 + 1;

        $i218 = i532 + i6;

        $i220 = $i218 - 1;

        $i219 = i533 + 1;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i222, $i221, $i220, $i219);

        $r19 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor2>;

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r19);

        $i228 = i532 + 1;

        $i223 = i533 + i9;

        $i227 = $i223 - 1;

        $i226 = i532 + 1;

        $i224 = i533 + i9;

        $i225 = $i224 - 1;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i228, $i227, $i226, $i225);

        $i232 = i532 + 2;

        $i231 = i533 + i9;

        $i230 = i532 + 2;

        $i229 = i533 + i9;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i232, $i231, $i230, $i229);

        $i239 = i532 + 3;

        $i233 = i533 + i9;

        $i238 = $i233 - 1;

        $i234 = i532 + i6;

        $i237 = $i234 - 1;

        $i235 = i533 + i9;

        $i236 = $i235 - 1;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i239, $i238, $i237, $i236);

        $r20 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor3>;

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r20);

        $i245 = i532 + 2;

        $i240 = i533 + i9;

        $i244 = $i240 - 1;

        $i243 = i532 + 2;

        $i241 = i533 + i9;

        $i242 = $i241 - 1;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i245, $i244, $i243, $i242);

        $i250 = i532 + 3;

        $i249 = i533 + i9;

        $i246 = i532 + i6;

        $i248 = $i246 - 1;

        $i247 = i533 + i9;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i250, $i249, $i248, $i247);

        goto label22;

     label12:
        $i3 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getColorTheme()>();

        if $i3 != 4 goto label14;

        $r6 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i50 = virtualinvoke $r6.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i4 <= $i50 goto label13;

        i533 = i533 - 2;

     label13:
        $r7 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor1>;

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r7);

        $i51 = i532 + i6;

        $i57 = $i51 - 1;

        $i56 = i533 + 4;

        $i52 = i532 + i6;

        $i55 = $i52 - 1;

        $i53 = i533 + i9;

        $i54 = $i53 - 2;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i57, $i56, $i55, $i54);

        $i58 = i532 + i6;

        $i63 = $i58 - 2;

        $i62 = i533 + 3;

        $i59 = i532 + i6;

        $i61 = $i59 - 2;

        $i60 = i533 + 3;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i63, $i62, $i61, $i60);

        $i64 = i532 + i6;

        $i69 = $i64 - 3;

        $i68 = i533 + 2;

        $i65 = i532 + i6;

        $i67 = $i65 - 3;

        $i66 = i533 + 2;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i69, $i68, $i67, $i66);

        $i70 = i532 + i6;

        $i77 = $i70 - 2;

        $i71 = i533 + i9;

        $i76 = $i71 - 1;

        $i72 = i532 + i6;

        $i75 = $i72 - 2;

        $i73 = i533 + i9;

        $i74 = $i73 - 1;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i77, $i76, $i75, $i74);

        $i78 = i532 + i6;

        $i83 = $i78 - 3;

        $i82 = i533 + i9;

        $i79 = i532 + i6;

        $i81 = $i79 - 3;

        $i80 = i533 + i9;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i83, $i82, $i81, $i80);

        $r8 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor2>;

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r8);

        $i84 = i532 + i6;

        $i90 = $i84 - 2;

        $i89 = i533 + 4;

        $i85 = i532 + i6;

        $i88 = $i85 - 2;

        $i86 = i533 + i9;

        $i87 = $i86 - 2;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i90, $i89, $i88, $i87);

        $i91 = i532 + i6;

        $i97 = $i91 - 3;

        $i96 = i533 + 3;

        $i92 = i532 + i6;

        $i95 = $i92 - 3;

        $i93 = i533 + i9;

        $i94 = $i93 - 1;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i97, $i96, $i95, $i94);

        $r9 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor3>;

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r9);

        $i98 = i532 + i6;

        $i101 = $i98 - 4;

        $i100 = i533 + 2;

        $i99 = i533 + 2;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i101, $i100, i532, $i99);

        $i102 = i532 + i6;

        $i105 = $i102 - 4;

        $i104 = i533 + i9;

        $i103 = i533 + i9;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i105, $i104, i532, $i103);

        goto label22;

     label14:
        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i5 = virtualinvoke $r1.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i4 <= $i5 goto label15;

        i533 = i533 - 1;

     label15:
        $r3 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor3>;

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r3);

        $i7 = i532 + i6;

        $i14 = $i7 - 1;

        $i13 = i533 + 3;

        $i8 = i532 + i6;

        $i12 = $i8 - 1;

        $i10 = i533 + i9;

        $i11 = $i10 - 2;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i14, $i13, $i12, $i11);

        $i15 = i532 + i6;

        $i22 = $i15 - 2;

        $i16 = i533 + i9;

        $i21 = $i16 - 1;

        $i17 = i532 + i6;

        $i20 = $i17 - 2;

        $i18 = i533 + i9;

        $i19 = $i18 - 1;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i22, $i21, $i20, $i19);

        $i23 = i532 + i6;

        $i26 = $i23 - 3;

        $i25 = i533 + i9;

        $i24 = i533 + i9;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i26, $i25, i532, $i24);

        $r4 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor2>;

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r4);

        $i27 = i532 + i6;

        $i33 = $i27 - 2;

        $i32 = i533 + 3;

        $i28 = i532 + i6;

        $i31 = $i28 - 2;

        $i29 = i533 + i9;

        $i30 = $i29 - 2;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i33, $i32, $i31, $i30);

        $i34 = i532 + i6;

        $i39 = $i34 - 3;

        $i35 = i533 + i9;

        $i38 = $i35 - 1;

        $i36 = i533 + i9;

        $i37 = $i36 - 1;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i39, $i38, i532, $i37);

        $r5 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor1>;

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r5);

        $i40 = i532 + i6;

        $i45 = $i40 - 2;

        $i44 = i533 + 2;

        $i41 = i532 + i6;

        $i43 = $i41 - 2;

        $i42 = i533 + 2;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i45, $i44, $i43, $i42);

        $i46 = i532 + i6;

        $i49 = $i46 - 3;

        $i48 = i533 + 1;

        $i47 = i533 + 1;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i49, $i48, i532, $i47);

        goto label22;

     label16:
        $i106 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getColorTheme()>();

        if $i106 != 4 goto label17;

        $r14 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor1>;

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r14);

        $i156 = i532 + 3;

        $i150 = i533 + i9;

        $i155 = $i150 - 1;

        $i151 = i532 + i6;

        $i154 = $i151 - 3;

        $i152 = i533 + i9;

        $i153 = $i152 - 1;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i156, $i155, $i154, $i153);

        $i162 = i532 + 2;

        $i157 = i533 + i9;

        $i161 = $i157 - 2;

        $i160 = i532 + 2;

        $i158 = i533 + i9;

        $i159 = $i158 - 2;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i162, $i161, $i160, $i159);

        $i168 = i532 + 1;

        $i163 = i533 + i9;

        $i167 = $i163 - 3;

        $i166 = i532 + 1;

        $i164 = i533 + i9;

        $i165 = $i164 - 3;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i168, $i167, $i166, $i165);

        $i169 = i532 + i6;

        $i176 = $i169 - 2;

        $i170 = i533 + i9;

        $i175 = $i170 - 2;

        $i171 = i532 + i6;

        $i174 = $i171 - 2;

        $i172 = i533 + i9;

        $i173 = $i172 - 2;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i176, $i175, $i174, $i173);

        $i177 = i532 + i6;

        $i184 = $i177 - 1;

        $i178 = i533 + i9;

        $i183 = $i178 - 3;

        $i179 = i532 + i6;

        $i182 = $i179 - 1;

        $i180 = i533 + i9;

        $i181 = $i180 - 3;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i184, $i183, $i182, $i181);

        $r15 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor2>;

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r15);

        $i191 = i532 + 3;

        $i185 = i533 + i9;

        $i190 = $i185 - 2;

        $i186 = i532 + i6;

        $i189 = $i186 - 3;

        $i187 = i533 + i9;

        $i188 = $i187 - 2;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i191, $i190, $i189, $i188);

        $i198 = i532 + 2;

        $i192 = i533 + i9;

        $i197 = $i192 - 3;

        $i193 = i532 + i6;

        $i196 = $i193 - 2;

        $i194 = i533 + i9;

        $i195 = $i194 - 3;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i198, $i197, $i196, $i195);

        $r16 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor3>;

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r16);

        $i202 = i532 + 1;

        $i201 = i532 + 1;

        $i199 = i533 + i9;

        $i200 = $i199 - 4;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i202, i533, $i201, $i200);

        $i203 = i532 + i6;

        $i208 = $i203 - 1;

        $i204 = i532 + i6;

        $i207 = $i204 - 1;

        $i205 = i533 + i9;

        $i206 = $i205 - 4;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i208, i533, $i207, $i206);

        goto label22;

     label17:
        $r10 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i107 = virtualinvoke $r10.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i4 <= $i107 goto label18;

        i532 = i532 - 2;

     label18:
        $r11 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor3>;

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r11);

        $i114 = i532 + 3;

        $i108 = i533 + i9;

        $i113 = $i108 - 1;

        $i109 = i532 + i6;

        $i112 = $i109 - 2;

        $i110 = i533 + i9;

        $i111 = $i110 - 1;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i114, $i113, $i112, $i111);

        $i115 = i532 + i6;

        $i122 = $i115 - 1;

        $i116 = i533 + i9;

        $i121 = $i116 - 2;

        $i117 = i532 + i6;

        $i120 = $i117 - 1;

        $i118 = i533 + i9;

        $i119 = $i118 - 2;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i122, $i121, $i120, $i119);

        $i126 = i532 + i6;

        $i123 = i533 + i9;

        $i125 = $i123 - 3;

        $i124 = i532 + i6;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i126, $i125, $i124, i533);

        $r12 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor1>;

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r12);

        $i132 = i532 + 2;

        $i127 = i533 + i9;

        $i131 = $i127 - 2;

        $i130 = i532 + 2;

        $i128 = i533 + i9;

        $i129 = $i128 - 2;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i132, $i131, $i130, $i129);

        $i136 = i532 + 1;

        $i133 = i533 + i9;

        $i135 = $i133 - 3;

        $i134 = i532 + 1;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i136, $i135, $i134, i533);

        $r13 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor2>;

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r13);

        $i143 = i532 + 3;

        $i137 = i533 + i9;

        $i142 = $i137 - 2;

        $i138 = i532 + i6;

        $i141 = $i138 - 2;

        $i139 = i533 + i9;

        $i140 = $i139 - 2;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i143, $i142, $i141, $i140);

        $i144 = i532 + i6;

        $i149 = $i144 - 1;

        $i145 = i533 + i9;

        $i148 = $i145 - 3;

        $i146 = i532 + i6;

        $i147 = $i146 - 1;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i149, $i148, $i147, i533);

        goto label22;

     label19:
        $i293 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getColorTheme()>();

        if $i293 != 4 goto label20;

        $r29 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor1>;

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r29);

        $i327 = i532 + 3;

        $i325 = i532 + i6;

        $i326 = $i325 - 3;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i327, i533, $i326, i533);

        $i331 = i532 + 2;

        $i330 = i533 + 1;

        $i329 = i532 + 2;

        $i328 = i533 + 1;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i331, $i330, $i329, $i328);

        $i335 = i532 + 1;

        $i334 = i533 + 2;

        $i333 = i532 + 1;

        $i332 = i533 + 2;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i335, $i334, $i333, $i332);

        $i336 = i532 + i6;

        $i341 = $i336 - 2;

        $i340 = i533 + 1;

        $i337 = i532 + i6;

        $i339 = $i337 - 2;

        $i338 = i533 + 1;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i341, $i340, $i339, $i338);

        $i342 = i532 + i6;

        $i347 = $i342 - 1;

        $i346 = i533 + 2;

        $i343 = i532 + i6;

        $i345 = $i343 - 1;

        $i344 = i533 + 2;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i347, $i346, $i345, $i344);

        $r30 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor2>;

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r30);

        $i352 = i532 + 3;

        $i351 = i533 + 1;

        $i348 = i532 + i6;

        $i350 = $i348 - 3;

        $i349 = i533 + 1;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i352, $i351, $i350, $i349);

        $i357 = i532 + 2;

        $i356 = i533 + 2;

        $i353 = i532 + i6;

        $i355 = $i353 - 2;

        $i354 = i533 + 2;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i357, $i356, $i355, $i354);

        $r31 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor3>;

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r31);

        $i362 = i532 + 1;

        $i361 = i533 + 3;

        $i360 = i532 + 1;

        $i358 = i533 + i9;

        $i359 = $i358 - 1;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i362, $i361, $i360, $i359);

        $i363 = i532 + i6;

        $i369 = $i363 - 1;

        $i368 = i533 + 3;

        $i364 = i532 + i6;

        $i367 = $i364 - 1;

        $i365 = i533 + i9;

        $i366 = $i365 - 1;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i369, $i368, $i367, $i366);

        goto label22;

     label20:
        $r25 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i294 = virtualinvoke $r25.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i4 <= $i294 goto label21;

        i532 = i532 - 1;

     label21:
        $r26 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor1>;

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r26);

        $i298 = i532 + 2;

        $i297 = i533 + 1;

        $i296 = i532 + 2;

        $i295 = i533 + 1;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i298, $i297, $i296, $i295);

        $i303 = i532 + 1;

        $i302 = i533 + 2;

        $i301 = i532 + 1;

        $i299 = i533 + i9;

        $i300 = $i299 - 1;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i303, $i302, $i301, $i300);

        $i306 = i532 + 3;

        $i304 = i532 + i6;

        $i305 = $i304 - 2;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i306, i533, $i305, i533);

        $r27 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor2>;

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r27);

        $i307 = i532 + i6;

        $i313 = $i307 - 1;

        $i312 = i533 + 1;

        $i308 = i532 + i6;

        $i311 = $i308 - 1;

        $i309 = i533 + i9;

        $i310 = $i309 - 1;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i313, $i312, $i311, $i310);

        $r28 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor3>;

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r28);

        $i314 = i532 + i6;

        $i319 = $i314 - 1;

        $i318 = i533 + 1;

        $i315 = i532 + i6;

        $i317 = $i315 - 1;

        $i316 = i533 + 1;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i319, $i318, $i317, $i316);

        $i324 = i532 + i6;

        $i323 = i533 + 2;

        $i322 = i532 + i6;

        $i320 = i533 + i9;

        $i321 = $i320 - 1;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i324, $i323, $i322, $i321);

     label22:
        return;
    }

    protected void paintVsnetTabBorder(java.awt.Graphics, int, int, int, int, int, int, boolean)
    {
        java.awt.Color $r4, $r7, $r8, $r9, $r15, $r16, $r17, $r20, $r21, $r22, $r28, $r29;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        java.awt.ComponentOrientation $r2;
        int i0, i1, $i2, $i3, i4, i5, i6, $i7, $i8, $i9, i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $i105, $i106, $i107, $i108, $i109, $i110, $i111, $i112, $i113, $i114, $i115, $i116, $i117, $i118, $i119, $i120, $i121, $i122, $i123, $i124, $i125, $i126, $i127, $i128, $i129, $i130;
        com.jidesoft.swing.JideTabbedPane $r1, $r5, $r6, $r10, $r11, $r12, $r13, $r14, $r18, $r19, $r23, $r24, $r25, $r26, $r27;
        boolean $z0, z1;
        java.awt.Graphics r3;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        r3 := @parameter0: java.awt.Graphics;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i4 := @parameter3: int;

        i5 := @parameter4: int;

        i6 := @parameter5: int;

        i10 := @parameter6: int;

        z1 := @parameter7: boolean;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r2 = virtualinvoke $r1.<com.jidesoft.swing.JideTabbedPane: java.awt.ComponentOrientation getComponentOrientation()>();

        $z0 = virtualinvoke $r2.<java.awt.ComponentOrientation: boolean isLeftToRight()>();

        tableswitch(i0)
        {
            case 1: goto label12;
            case 2: goto label01;
            case 3: goto label07;
            case 4: goto label04;
            default: goto label12;
        };

     label01:
        if z1 == 0 goto label02;

        $r20 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r20);

        $i84 = i4 + i6;

        $i85 = $i84 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i4, i5, $i85, i5);

        $i86 = i5 + i10;

        $i87 = $i86 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i4, i5, i4, $i87);

        $r21 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor2>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r21);

        $i88 = i5 + i10;

        $i93 = $i88 - 1;

        $i89 = i4 + i6;

        $i92 = $i89 - 1;

        $i90 = i5 + i10;

        $i91 = $i90 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i4, $i93, $i92, $i91);

        goto label17;

     label02:
        $r17 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r17);

        $r18 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i72 = virtualinvoke $r18.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i1 <= $i72 goto label03;

        $i83 = i4 + 2;

        $i77 = i5 + i10;

        $i82 = $i77 - 2;

        $i78 = i4 + i6;

        $i81 = $i78 - 2;

        $i79 = i5 + i10;

        $i80 = $i79 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i83, $i82, $i81, $i80);

        goto label17;

     label03:
        $r19 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i73 = virtualinvoke $r19.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i1 >= $i73 goto label17;

        if i1 == 0 goto label17;

        $i76 = i4 + 2;

        $i74 = i4 + i6;

        $i75 = $i74 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i76, i5, $i75, i5);

        goto label17;

     label04:
        if z1 == 0 goto label05;

        $r7 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r7);

        $i18 = i4 + i6;

        $i19 = $i18 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i4, i5, $i19, i5);

        $r8 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor2>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r8);

        $i20 = i4 + i6;

        $i25 = $i20 - 1;

        $i21 = i4 + i6;

        $i24 = $i21 - 1;

        $i22 = i5 + i10;

        $i23 = $i22 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i25, i5, $i24, $i23);

        $i26 = i5 + i10;

        $i31 = $i26 - 1;

        $i27 = i4 + i6;

        $i30 = $i27 - 1;

        $i28 = i5 + i10;

        $i29 = $i28 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i4, $i31, $i30, $i29);

        goto label17;

     label05:
        $r4 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r4);

        $r5 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i2 = virtualinvoke $r5.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i1 <= $i2 goto label06;

        $i17 = i4 + 1;

        $i11 = i5 + i10;

        $i16 = $i11 - 2;

        $i12 = i4 + i6;

        $i15 = $i12 - 3;

        $i13 = i5 + i10;

        $i14 = $i13 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i17, $i16, $i15, $i14);

        goto label17;

     label06:
        $r6 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i3 = virtualinvoke $r6.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i1 >= $i3 goto label17;

        if i1 == 0 goto label17;

        $i9 = i4 + 1;

        $i7 = i4 + i6;

        $i8 = $i7 - 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i9, i5, $i8, i5);

        goto label17;

     label07:
        if z1 == 0 goto label08;

        $r15 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r15);

        $i58 = i5 + i10;

        $i59 = $i58 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i4, i5, i4, $i59);

        $r16 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor2>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r16);

        $i60 = i5 + i10;

        $i65 = $i60 - 1;

        $i61 = i4 + i6;

        $i64 = $i61 - 1;

        $i62 = i5 + i10;

        $i63 = $i62 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i4, $i65, $i64, $i63);

        $i66 = i4 + i6;

        $i71 = $i66 - 1;

        $i67 = i4 + i6;

        $i70 = $i67 - 1;

        $i68 = i5 + i10;

        $i69 = $i68 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i71, i5, $i70, $i69);

        goto label17;

     label08:
        $r9 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r9);

        if $z0 == 0 goto label10;

        $r13 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i46 = virtualinvoke $r13.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i1 <= $i46 goto label09;

        $i51 = i4 + i6;

        $i57 = $i51 - 2;

        $i56 = i5 + 2;

        $i52 = i4 + i6;

        $i55 = $i52 - 2;

        $i53 = i5 + i10;

        $i54 = $i53 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i57, $i56, $i55, $i54);

        goto label17;

     label09:
        $r14 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i47 = virtualinvoke $r14.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i1 >= $i47 goto label17;

        if i1 == 0 goto label17;

        $i50 = i5 + 2;

        $i48 = i5 + i10;

        $i49 = $i48 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i4, $i50, i4, $i49);

        goto label17;

     label10:
        $r10 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i32 = virtualinvoke $r10.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i1 <= $i32 goto label11;

        $i45 = i5 + 2;

        $i43 = i5 + i10;

        $i44 = $i43 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i4, $i45, i4, $i44);

        goto label17;

     label11:
        $r11 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i33 = virtualinvoke $r11.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i1 >= $i33 goto label17;

        $r12 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i34 = virtualinvoke $r12.<com.jidesoft.swing.JideTabbedPane: int getTabCount()>();

        $i35 = $i34 - 1;

        if i1 == $i35 goto label17;

        $i36 = i4 + i6;

        $i42 = $i36 - 2;

        $i41 = i5 + 2;

        $i37 = i4 + i6;

        $i40 = $i37 - 2;

        $i38 = i5 + i10;

        $i39 = $i38 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i42, $i41, $i40, $i39);

        goto label17;

     label12:
        if z1 == 0 goto label13;

        $r28 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r28);

        $i122 = i5 + 1;

        $i120 = i5 + i10;

        $i121 = $i120 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i4, $i122, i4, $i121);

        $i123 = i4 + i6;

        $i124 = $i123 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i4, i5, $i124, i5);

        $r29 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor2>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r29);

        $i125 = i4 + i6;

        $i130 = $i125 - 1;

        $i126 = i4 + i6;

        $i129 = $i126 - 1;

        $i127 = i5 + i10;

        $i128 = $i127 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i130, i5, $i129, $i128);

        goto label17;

     label13:
        $r22 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r22);

        if $z0 == 0 goto label15;

        $r26 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i108 = virtualinvoke $r26.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i1 <= $i108 goto label14;

        $i113 = i4 + i6;

        $i119 = $i113 - 2;

        $i118 = i5 + 2;

        $i114 = i4 + i6;

        $i117 = $i114 - 2;

        $i115 = i5 + i10;

        $i116 = $i115 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i119, $i118, $i117, $i116);

        goto label17;

     label14:
        $r27 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i109 = virtualinvoke $r27.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i1 >= $i109 goto label17;

        if i1 == 0 goto label17;

        $i112 = i5 + 2;

        $i110 = i5 + i10;

        $i111 = $i110 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i4, $i112, i4, $i111);

        goto label17;

     label15:
        $r23 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i94 = virtualinvoke $r23.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i1 <= $i94 goto label16;

        $i107 = i5 + 2;

        $i105 = i5 + i10;

        $i106 = $i105 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i4, $i107, i4, $i106);

        goto label17;

     label16:
        $r24 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i95 = virtualinvoke $r24.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i1 >= $i95 goto label17;

        $r25 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i96 = virtualinvoke $r25.<com.jidesoft.swing.JideTabbedPane: int getTabCount()>();

        $i97 = $i96 - 1;

        if i1 == $i97 goto label17;

        $i98 = i4 + i6;

        $i104 = $i98 - 2;

        $i103 = i5 + 2;

        $i99 = i4 + i6;

        $i102 = $i99 - 2;

        $i100 = i5 + i10;

        $i101 = $i100 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i104, $i103, $i102, $i101);

     label17:
        return;
    }

    protected void paintRoundedVsnetTabBorder(java.awt.Graphics, int, int, int, int, int, int, boolean)
    {
        java.awt.Color $r4, $r7, $r8, $r14, $r15, $r18, $r19, $r25;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        java.awt.ComponentOrientation $r2;
        int i0, i1, $i2, $i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $i105, $i106, $i107, $i108, $i109, $i110, $i111, $i112, $i113, $i114, $i115, $i116, $i117, $i118, $i119, $i120, $i121, $i122, $i123, $i124, $i125, $i126, $i127, $i128, $i129, $i130, $i131, $i132, $i133, $i134, $i135, $i136, $i137, $i138, $i139, $i140, $i141, $i142, $i143, $i144, $i145, $i146, $i147, $i148, $i149, $i150, $i151, $i152, $i153, $i154, $i155, $i156, $i157, $i158, $i159, $i160, $i161, $i162, $i163, $i164, $i165, $i166, $i167, $i168, $i169, $i170, $i171, $i172, $i173, $i174, $i175, $i176, $i177, $i178, $i179, $i180, $i181, $i182, $i183, $i184, $i185, $i186;
        com.jidesoft.swing.JideTabbedPane $r1, $r5, $r6, $r9, $r10, $r11, $r12, $r13, $r16, $r17, $r20, $r21, $r22, $r23, $r24;
        boolean $z0, z1;
        java.awt.Graphics r3;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        r3 := @parameter0: java.awt.Graphics;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i4 := @parameter3: int;

        i5 := @parameter4: int;

        i6 := @parameter5: int;

        i12 := @parameter6: int;

        z1 := @parameter7: boolean;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r2 = virtualinvoke $r1.<com.jidesoft.swing.JideTabbedPane: java.awt.ComponentOrientation getComponentOrientation()>();

        $z0 = virtualinvoke $r2.<java.awt.ComponentOrientation: boolean isLeftToRight()>();

        tableswitch(i0)
        {
            case 1: goto label12;
            case 2: goto label01;
            case 3: goto label07;
            case 4: goto label04;
            default: goto label12;
        };

     label01:
        if z1 == 0 goto label02;

        $r18 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r18);

        $i120 = i4 + 2;

        $i118 = i4 + i6;

        $i119 = $i118 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i120, i5, $i119, i5);

        $i124 = i4 + 1;

        $i123 = i5 + 1;

        $i122 = i4 + 1;

        $i121 = i5 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i124, $i123, $i122, $i121);

        $i127 = i5 + 2;

        $i125 = i5 + i12;

        $i126 = $i125 - 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i4, $i127, i4, $i126);

        $i133 = i4 + 1;

        $i128 = i5 + i12;

        $i132 = $i128 - 2;

        $i131 = i4 + 1;

        $i129 = i5 + i12;

        $i130 = $i129 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i133, $i132, $i131, $i130);

        $i140 = i4 + 2;

        $i134 = i5 + i12;

        $i139 = $i134 - 1;

        $i135 = i4 + i6;

        $i138 = $i135 - 1;

        $i136 = i5 + i12;

        $i137 = $i136 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i140, $i139, $i138, $i137);

        goto label17;

     label02:
        $r15 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r15);

        $r16 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i104 = virtualinvoke $r16.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i1 <= $i104 goto label03;

        $i117 = i4 + 2;

        $i111 = i5 + i12;

        $i116 = $i111 - 2;

        $i112 = i4 + i6;

        $i115 = $i112 - 2;

        $i113 = i5 + i12;

        $i114 = $i113 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i117, $i116, $i115, $i114);

        goto label17;

     label03:
        $r17 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i105 = virtualinvoke $r17.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i1 >= $i105 goto label17;

        if i1 == 0 goto label17;

        $i110 = i4 + 2;

        $i109 = i5 + 1;

        $i106 = i4 + i6;

        $i108 = $i106 - 2;

        $i107 = i5 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i110, $i109, $i108, $i107);

        goto label17;

     label04:
        if z1 == 0 goto label05;

        $r7 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r7);

        $i20 = i4 + i6;

        $i21 = $i20 - 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i4, i5, $i21, i5);

        $i22 = i4 + i6;

        $i27 = $i22 - 2;

        $i26 = i5 + 1;

        $i23 = i4 + i6;

        $i25 = $i23 - 2;

        $i24 = i5 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i27, $i26, $i25, $i24);

        $i28 = i4 + i6;

        $i34 = $i28 - 1;

        $i33 = i5 + 2;

        $i29 = i4 + i6;

        $i32 = $i29 - 1;

        $i30 = i5 + i12;

        $i31 = $i30 - 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i34, $i33, $i32, $i31);

        $i35 = i4 + i6;

        $i42 = $i35 - 2;

        $i36 = i5 + i12;

        $i41 = $i36 - 2;

        $i37 = i4 + i6;

        $i40 = $i37 - 2;

        $i38 = i5 + i12;

        $i39 = $i38 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i42, $i41, $i40, $i39);

        $i43 = i5 + i12;

        $i48 = $i43 - 1;

        $i44 = i4 + i6;

        $i47 = $i44 - 3;

        $i45 = i5 + i12;

        $i46 = $i45 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i4, $i48, $i47, $i46);

        goto label17;

     label05:
        $r4 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r4);

        $r5 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i2 = virtualinvoke $r5.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i1 <= $i2 goto label06;

        $i19 = i4 + 1;

        $i13 = i5 + i12;

        $i18 = $i13 - 2;

        $i14 = i4 + i6;

        $i17 = $i14 - 3;

        $i15 = i5 + i12;

        $i16 = $i15 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i19, $i18, $i17, $i16);

        goto label17;

     label06:
        $r6 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i3 = virtualinvoke $r6.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i1 >= $i3 goto label17;

        if i1 == 0 goto label17;

        $i11 = i4 + 1;

        $i10 = i5 + 1;

        $i7 = i4 + i6;

        $i9 = $i7 - 3;

        $i8 = i5 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i11, $i10, $i9, $i8);

        goto label17;

     label07:
        if z1 == 0 goto label08;

        $r14 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r14);

        $i75 = i5 + i12;

        $i76 = $i75 - 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i4, i5, i4, $i76);

        $i82 = i4 + 1;

        $i77 = i5 + i12;

        $i81 = $i77 - 2;

        $i80 = i4 + 1;

        $i78 = i5 + i12;

        $i79 = $i78 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i82, $i81, $i80, $i79);

        $i89 = i4 + 2;

        $i83 = i5 + i12;

        $i88 = $i83 - 1;

        $i84 = i4 + i6;

        $i87 = $i84 - 3;

        $i85 = i5 + i12;

        $i86 = $i85 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i89, $i88, $i87, $i86);

        $i90 = i4 + i6;

        $i97 = $i90 - 2;

        $i91 = i5 + i12;

        $i96 = $i91 - 2;

        $i92 = i4 + i6;

        $i95 = $i92 - 2;

        $i93 = i5 + i12;

        $i94 = $i93 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i97, $i96, $i95, $i94);

        $i98 = i4 + i6;

        $i103 = $i98 - 1;

        $i99 = i4 + i6;

        $i102 = $i99 - 1;

        $i100 = i5 + i12;

        $i101 = $i100 - 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i103, i5, $i102, $i101);

        goto label17;

     label08:
        $r8 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r8);

        if $z0 == 0 goto label10;

        $r12 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i63 = virtualinvoke $r12.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i1 <= $i63 goto label09;

        $i68 = i4 + i6;

        $i74 = $i68 - 2;

        $i73 = i5 + 2;

        $i69 = i4 + i6;

        $i72 = $i69 - 2;

        $i70 = i5 + i12;

        $i71 = $i70 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i74, $i73, $i72, $i71);

        goto label17;

     label09:
        $r13 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i64 = virtualinvoke $r13.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i1 >= $i64 goto label17;

        if i1 == 0 goto label17;

        $i67 = i5 + 2;

        $i65 = i5 + i12;

        $i66 = $i65 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i4, $i67, i4, $i66);

        goto label17;

     label10:
        $r9 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i49 = virtualinvoke $r9.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i1 <= $i49 goto label11;

        $i62 = i5 + 2;

        $i60 = i5 + i12;

        $i61 = $i60 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i4, $i62, i4, $i61);

        goto label17;

     label11:
        $r10 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i50 = virtualinvoke $r10.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i1 >= $i50 goto label17;

        $r11 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i51 = virtualinvoke $r11.<com.jidesoft.swing.JideTabbedPane: int getTabCount()>();

        $i52 = $i51 - 1;

        if i1 == $i52 goto label17;

        $i53 = i4 + i6;

        $i59 = $i53 - 2;

        $i58 = i5 + 2;

        $i54 = i4 + i6;

        $i57 = $i54 - 2;

        $i55 = i5 + i12;

        $i56 = $i55 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i59, $i58, $i57, $i56);

        goto label17;

     label12:
        if z1 == 0 goto label13;

        $r25 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r25);

        $i169 = i5 + 2;

        $i167 = i5 + i12;

        $i168 = $i167 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i4, $i169, i4, $i168);

        $i171 = i5 + 2;

        $i170 = i4 + 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i4, $i171, $i170, i5);

        $i174 = i4 + 2;

        $i172 = i4 + i6;

        $i173 = $i172 - 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i174, i5, $i173, i5);

        $i175 = i4 + i6;

        $i179 = $i175 - 3;

        $i176 = i4 + i6;

        $i178 = $i176 - 1;

        $i177 = i5 + 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i179, i5, $i178, $i177);

        $i180 = i4 + i6;

        $i186 = $i180 - 1;

        $i185 = i5 + 2;

        $i181 = i4 + i6;

        $i184 = $i181 - 1;

        $i182 = i5 + i12;

        $i183 = $i182 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i186, $i185, $i184, $i183);

        goto label17;

     label13:
        $r19 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r19);

        if $z0 == 0 goto label15;

        $r23 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i155 = virtualinvoke $r23.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i1 <= $i155 goto label14;

        $i160 = i4 + i6;

        $i166 = $i160 - 2;

        $i165 = i5 + 2;

        $i161 = i4 + i6;

        $i164 = $i161 - 2;

        $i162 = i5 + i12;

        $i163 = $i162 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i166, $i165, $i164, $i163);

        goto label17;

     label14:
        $r24 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i156 = virtualinvoke $r24.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i1 >= $i156 goto label17;

        if i1 == 0 goto label17;

        $i159 = i5 + 2;

        $i157 = i5 + i12;

        $i158 = $i157 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i4, $i159, i4, $i158);

        goto label17;

     label15:
        $r20 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i141 = virtualinvoke $r20.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i1 <= $i141 goto label16;

        $i154 = i5 + 2;

        $i152 = i5 + i12;

        $i153 = $i152 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i4, $i154, i4, $i153);

        goto label17;

     label16:
        $r21 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i142 = virtualinvoke $r21.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i1 >= $i142 goto label17;

        $r22 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i143 = virtualinvoke $r22.<com.jidesoft.swing.JideTabbedPane: int getTabCount()>();

        $i144 = $i143 - 1;

        if i1 == $i144 goto label17;

        $i145 = i4 + i6;

        $i151 = $i145 - 2;

        $i150 = i5 + 2;

        $i146 = i4 + i6;

        $i149 = $i146 - 2;

        $i147 = i5 + i12;

        $i148 = $i147 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i151, $i150, $i149, $i148);

     label17:
        return;
    }

    protected void paintFlatTabBorder(java.awt.Graphics, int, int, int, int, int, int, boolean)
    {
        java.awt.Color $r2, $r6, $r7, $r8, $r9, $r13, $r14, $r15;
        com.jidesoft.swing.JideTabbedPane $r3, $r4, $r5, $r10, $r11, $r12;
        boolean z0;
        java.awt.Graphics r0;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r1;
        int i0, i1, $i2, $i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21;

        r1 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        r0 := @parameter0: java.awt.Graphics;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i4 := @parameter3: int;

        i5 := @parameter4: int;

        i6 := @parameter5: int;

        i7 := @parameter6: int;

        z0 := @parameter7: boolean;

        tableswitch(i0)
        {
            case 1: goto label11;
            case 2: goto label01;
            case 3: goto label09;
            case 4: goto label05;
            default: goto label11;
        };

     label01:
        if z0 == 0 goto label02;

        $r13 = r1.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor1>;

        virtualinvoke r0.<java.awt.Graphics: void setColor(java.awt.Color)>($r13);

        virtualinvoke r0.<java.awt.Graphics: void drawRect(int,int,int,int)>(i4, i5, i6, i7);

        goto label13;

     label02:
        $r9 = r1.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1>;

        virtualinvoke r0.<java.awt.Graphics: void setColor(java.awt.Color)>($r9);

        $r10 = r1.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i17 = virtualinvoke $r10.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i1 <= $i17 goto label04;

        $r12 = r1.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i19 = virtualinvoke $r12.<com.jidesoft.swing.JideTabbedPane: int getTabCount()>();

        $i20 = $i19 - 1;

        if i1 != $i20 goto label03;

        $i21 = i7 - 1;

        virtualinvoke r0.<java.awt.Graphics: void drawRect(int,int,int,int)>(i4, i5, i6, $i21);

        goto label13;

     label03:
        virtualinvoke r0.<java.awt.Graphics: void drawRect(int,int,int,int)>(i4, i5, i6, i7);

        goto label13;

     label04:
        $r11 = r1.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i18 = virtualinvoke $r11.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i1 >= $i18 goto label13;

        virtualinvoke r0.<java.awt.Graphics: void drawRect(int,int,int,int)>(i4, i5, i6, i7);

        goto label13;

     label05:
        if z0 == 0 goto label06;

        $r6 = r1.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor1>;

        virtualinvoke r0.<java.awt.Graphics: void setColor(java.awt.Color)>($r6);

        $i14 = i4 - 1;

        virtualinvoke r0.<java.awt.Graphics: void drawRect(int,int,int,int)>($i14, i5, i6, i7);

        goto label13;

     label06:
        $r2 = r1.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1>;

        virtualinvoke r0.<java.awt.Graphics: void setColor(java.awt.Color)>($r2);

        $r3 = r1.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i2 = virtualinvoke $r3.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i1 <= $i2 goto label08;

        $r5 = r1.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i9 = virtualinvoke $r5.<com.jidesoft.swing.JideTabbedPane: int getTabCount()>();

        $i10 = $i9 - 1;

        if i1 != $i10 goto label07;

        $i13 = i4 - 1;

        $i12 = i7 - 1;

        virtualinvoke r0.<java.awt.Graphics: void drawRect(int,int,int,int)>($i13, i5, i6, $i12);

        goto label13;

     label07:
        $i11 = i4 - 1;

        virtualinvoke r0.<java.awt.Graphics: void drawRect(int,int,int,int)>($i11, i5, i6, i7);

        goto label13;

     label08:
        $r4 = r1.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i3 = virtualinvoke $r4.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i1 >= $i3 goto label13;

        $i8 = i4 - 1;

        virtualinvoke r0.<java.awt.Graphics: void drawRect(int,int,int,int)>($i8, i5, i6, i7);

        goto label13;

     label09:
        if z0 == 0 goto label10;

        $r8 = r1.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor1>;

        virtualinvoke r0.<java.awt.Graphics: void setColor(java.awt.Color)>($r8);

        $i16 = i5 - 1;

        virtualinvoke r0.<java.awt.Graphics: void drawRect(int,int,int,int)>(i4, $i16, i6, i7);

        goto label13;

     label10:
        $r7 = r1.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1>;

        virtualinvoke r0.<java.awt.Graphics: void setColor(java.awt.Color)>($r7);

        $i15 = i5 - 1;

        virtualinvoke r0.<java.awt.Graphics: void drawRect(int,int,int,int)>(i4, $i15, i6, i7);

        goto label13;

     label11:
        if z0 == 0 goto label12;

        $r15 = r1.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor1>;

        virtualinvoke r0.<java.awt.Graphics: void setColor(java.awt.Color)>($r15);

        virtualinvoke r0.<java.awt.Graphics: void drawRect(int,int,int,int)>(i4, i5, i6, i7);

        goto label13;

     label12:
        $r14 = r1.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1>;

        virtualinvoke r0.<java.awt.Graphics: void setColor(java.awt.Color)>($r14);

        virtualinvoke r0.<java.awt.Graphics: void drawRect(int,int,int,int)>(i4, i5, i6, i7);

     label13:
        return;
    }

    protected void paintRoundedFlatTabBorder(java.awt.Graphics, int, int, int, int, int, int, boolean)
    {
        java.awt.Color $r4, $r5, $r6, $r8, $r10, $r11, $r14, $r15, $r16, $r18, $r20, $r21, $r24, $r25, $r26, $r28, $r30, $r31, $r34, $r35, $r36, $r38, $r40, $r41;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        int i0, i1, $i2, $i3, i4, i5, i6, $i7, $i8, i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $i105, $i106, $i107, $i108, $i109, $i110, $i111, $i112, $i113, $i114, $i115, $i116, $i117, $i118, $i119, $i120, $i121, $i122, $i123, $i124, $i125, $i126, $i127, $i128, $i129, $i130, $i131, $i132, $i133, $i134, $i135, $i136, $i137, $i138, $i139, $i140, $i141, $i142, $i143, $i144, $i145, $i146, $i147, $i148, $i149, $i150, $i151, $i152, $i153, $i154, $i155, $i156, $i157, $i158, $i159, $i160, $i161, $i162, $i163, $i164, $i165, $i166, $i167, $i168, $i169, $i170, $i171, $i172, $i173, $i174, $i175, $i176, $i177, $i178, $i179, $i180, $i181, $i182, $i183, $i184, $i185, $i186, $i187, $i188, $i189, $i190, $i191, $i192, $i193, $i194, $i195, $i196, $i197, $i198, $i199, $i200, $i201, $i202, $i203, $i204, $i205, $i206, $i207, $i208, $i209, $i210, $i211, $i212, $i213, $i214, $i215, $i216, $i217, $i218, $i219, $i220, $i221, $i222, $i223, $i224, $i225, $i226, $i227, $i228, $i229, $i230, $i231, $i232, $i233, $i234, $i235, $i236, $i237, $i238, $i239, $i240, $i241, $i242, $i243, $i244, $i245, $i246, $i247, $i248, $i249, $i250, $i251, $i252, $i253, $i254, $i255, $i256, $i257, $i258, $i259, $i260, $i261, $i262, $i263, $i264, $i265, $i266, $i267, $i268, $i269, $i270, $i271, $i272, $i273, $i274, $i275, $i276, $i277, $i278, $i279, $i280, $i281, $i282, $i283, $i284, $i285, $i286, $i287, $i288, $i289, $i290, $i291, $i292, $i293, $i294, $i295, $i296, $i297, $i298, $i299, $i300, $i301, $i302, $i303, $i304, $i305, $i306, $i307, $i308, $i309, $i310, $i311, $i312, $i313, $i314, $i315, $i316, $i317, $i318, $i319, $i320, $i321, $i322, $i323, $i324, $i325, $i326, $i327, $i328, $i329, $i330, $i331, $i332, $i333, $i334, $i335, $i336, $i337, $i338, $i339, $i340, $i341, $i342, $i343, $i344, $i345, $i346, $i347, $i348, $i349, $i350, $i351, $i352, $i353, $i354, $i355, $i356, $i357, $i358, $i359, $i360, $i361, $i362, $i363, $i364, $i365, $i366, $i367, $i368, $i369, $i370, $i371, $i372, $i373, $i374, $i375, $i376, $i377, $i378, $i379, $i380, $i381, $i382, $i383, $i384;
        boolean z0;
        java.awt.Graphics r3;
        com.jidesoft.swing.JideTabbedPane $r1, $r2, $r7, $r9, $r12, $r13, $r17, $r19, $r22, $r23, $r27, $r29, $r32, $r33, $r37, $r39;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        r3 := @parameter0: java.awt.Graphics;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i4 := @parameter3: int;

        i5 := @parameter4: int;

        i6 := @parameter5: int;

        i9 := @parameter6: int;

        z0 := @parameter7: boolean;

        tableswitch(i0)
        {
            case 1: goto label19;
            case 2: goto label01;
            case 3: goto label13;
            case 4: goto label07;
            default: goto label19;
        };

     label01:
        if z0 == 0 goto label02;

        $r30 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r30);

        $i294 = i4 + 2;

        $i292 = i4 + i6;

        $i293 = $i292 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i294, i5, $i293, i5);

        $i299 = i4 + 2;

        $i298 = i5 + i9;

        $i295 = i4 + i6;

        $i297 = $i295 - 1;

        $i296 = i5 + i9;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i299, $i298, $i297, $i296);

        $i302 = i5 + 2;

        $i300 = i5 + i9;

        $i301 = $i300 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i4, $i302, i4, $i301);

        $r31 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor2>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r31);

        $i306 = i4 + 1;

        $i305 = i5 + 1;

        $i304 = i4 + 1;

        $i303 = i5 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i306, $i305, $i304, $i303);

        $i312 = i4 + 1;

        $i307 = i5 + i9;

        $i311 = $i307 - 1;

        $i310 = i4 + 1;

        $i308 = i5 + i9;

        $i309 = $i308 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i312, $i311, $i310, $i309);

        goto label25;

     label02:
        $r22 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i222 = virtualinvoke $r22.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i1 <= $i222 goto label06;

        $r26 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r26);

        $i247 = i4 + 2;

        $i245 = i4 + i6;

        $i246 = $i245 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i247, i5, $i246, i5);

        $r27 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i248 = virtualinvoke $r27.<com.jidesoft.swing.JideTabbedPane: int getTabCount()>();

        $i249 = $i248 - 1;

        if i1 != $i249 goto label03;

        $i288 = i4 + 2;

        $i282 = i5 + i9;

        $i287 = $i282 - 1;

        $i283 = i4 + i6;

        $i286 = $i283 - 1;

        $i284 = i5 + i9;

        $i285 = $i284 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i288, $i287, $i286, $i285);

        $i291 = i5 + 2;

        $i289 = i5 + i9;

        $i290 = $i289 - 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i4, $i291, i4, $i290);

        goto label04;

     label03:
        $i254 = i4 + 2;

        $i253 = i5 + i9;

        $i250 = i4 + i6;

        $i252 = $i250 - 1;

        $i251 = i5 + i9;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i254, $i253, $i252, $i251);

        $i257 = i5 + 2;

        $i255 = i5 + i9;

        $i256 = $i255 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i4, $i257, i4, $i256);

     label04:
        $r28 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r28);

        $i261 = i4 + 1;

        $i260 = i5 + 1;

        $i259 = i4 + 1;

        $i258 = i5 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i261, $i260, $i259, $i258);

        $r29 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i262 = virtualinvoke $r29.<com.jidesoft.swing.JideTabbedPane: int getTabCount()>();

        $i263 = $i262 - 1;

        if i1 != $i263 goto label05;

        $i272 = i5 + i9;

        $i275 = $i272 - 2;

        $i273 = i5 + i9;

        $i274 = $i273 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i4, $i275, i4, $i274);

        $i281 = i4 + 1;

        $i276 = i5 + i9;

        $i280 = $i276 - 1;

        $i279 = i4 + 1;

        $i277 = i5 + i9;

        $i278 = $i277 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i281, $i280, $i279, $i278);

        goto label25;

     label05:
        $i264 = i5 + i9;

        $i267 = $i264 - 1;

        $i265 = i5 + i9;

        $i266 = $i265 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i4, $i267, i4, $i266);

        $i271 = i4 + 1;

        $i270 = i5 + i9;

        $i269 = i4 + 1;

        $i268 = i5 + i9;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i271, $i270, $i269, $i268);

        goto label25;

     label06:
        $r23 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i223 = virtualinvoke $r23.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i1 >= $i223 goto label25;

        $r24 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r24);

        $i226 = i4 + 2;

        $i224 = i4 + i6;

        $i225 = $i224 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i226, i5, $i225, i5);

        $i231 = i4 + 2;

        $i230 = i5 + i9;

        $i227 = i4 + i6;

        $i229 = $i227 - 1;

        $i228 = i5 + i9;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i231, $i230, $i229, $i228);

        $i234 = i5 + 2;

        $i232 = i5 + i9;

        $i233 = $i232 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i4, $i234, i4, $i233);

        $r25 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r25);

        $i238 = i4 + 1;

        $i237 = i5 + 1;

        $i236 = i4 + 1;

        $i235 = i5 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i238, $i237, $i236, $i235);

        $i244 = i4 + 1;

        $i239 = i5 + i9;

        $i243 = $i239 - 1;

        $i242 = i4 + 1;

        $i240 = i5 + i9;

        $i241 = $i240 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i244, $i243, $i242, $i241);

        goto label25;

     label07:
        if z0 == 0 goto label08;

        $r10 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r10);

        $i87 = i4 + i6;

        $i88 = $i87 - 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i4, i5, $i88, i5);

        $i92 = i5 + i9;

        $i89 = i4 + i6;

        $i91 = $i89 - 3;

        $i90 = i5 + i9;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i4, $i92, $i91, $i90);

        $i93 = i4 + i6;

        $i99 = $i93 - 1;

        $i98 = i5 + 2;

        $i94 = i4 + i6;

        $i97 = $i94 - 1;

        $i95 = i5 + i9;

        $i96 = $i95 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i99, $i98, $i97, $i96);

        $r11 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor2>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r11);

        $i100 = i4 + i6;

        $i105 = $i100 - 2;

        $i104 = i5 + 1;

        $i101 = i4 + i6;

        $i103 = $i101 - 2;

        $i102 = i5 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i105, $i104, $i103, $i102);

        $i106 = i4 + i6;

        $i113 = $i106 - 2;

        $i107 = i5 + i9;

        $i112 = $i107 - 1;

        $i108 = i4 + i6;

        $i111 = $i108 - 2;

        $i109 = i5 + i9;

        $i110 = $i109 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i113, $i112, $i111, $i110);

        goto label25;

     label08:
        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i2 = virtualinvoke $r1.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i1 <= $i2 goto label12;

        $r6 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r6);

        $i35 = i4 + i6;

        $i36 = $i35 - 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i4, i5, $i36, i5);

        $r7 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i37 = virtualinvoke $r7.<com.jidesoft.swing.JideTabbedPane: int getTabCount()>();

        $i38 = $i37 - 1;

        if i1 != $i38 goto label09;

        $i74 = i5 + i9;

        $i79 = $i74 - 1;

        $i75 = i4 + i6;

        $i78 = $i75 - 3;

        $i76 = i5 + i9;

        $i77 = $i76 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i4, $i79, $i78, $i77);

        $i80 = i4 + i6;

        $i86 = $i80 - 1;

        $i85 = i5 + 2;

        $i81 = i4 + i6;

        $i84 = $i81 - 1;

        $i82 = i5 + i9;

        $i83 = $i82 - 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i86, $i85, $i84, $i83);

        goto label10;

     label09:
        $i42 = i5 + i9;

        $i39 = i4 + i6;

        $i41 = $i39 - 3;

        $i40 = i5 + i9;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i4, $i42, $i41, $i40);

        $i43 = i4 + i6;

        $i49 = $i43 - 1;

        $i48 = i5 + 2;

        $i44 = i4 + i6;

        $i47 = $i44 - 1;

        $i45 = i5 + i9;

        $i46 = $i45 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i49, $i48, $i47, $i46);

     label10:
        $r8 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r8);

        $i50 = i4 + i6;

        $i55 = $i50 - 2;

        $i54 = i5 + 1;

        $i51 = i4 + i6;

        $i53 = $i51 - 2;

        $i52 = i5 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i55, $i54, $i53, $i52);

        $r9 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i56 = virtualinvoke $r9.<com.jidesoft.swing.JideTabbedPane: int getTabCount()>();

        $i57 = $i56 - 1;

        if i1 != $i57 goto label11;

        $i66 = i4 + i6;

        $i73 = $i66 - 2;

        $i67 = i5 + i9;

        $i72 = $i67 - 2;

        $i68 = i4 + i6;

        $i71 = $i68 - 2;

        $i69 = i5 + i9;

        $i70 = $i69 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i73, $i72, $i71, $i70);

        goto label25;

     label11:
        $i58 = i4 + i6;

        $i65 = $i58 - 2;

        $i59 = i5 + i9;

        $i64 = $i59 - 1;

        $i60 = i4 + i6;

        $i63 = $i60 - 2;

        $i61 = i5 + i9;

        $i62 = $i61 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i65, $i64, $i63, $i62);

        goto label25;

     label12:
        $r2 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i3 = virtualinvoke $r2.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i1 >= $i3 goto label25;

        $r4 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r4);

        $i7 = i4 + i6;

        $i8 = $i7 - 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i4, i5, $i8, i5);

        $i13 = i5 + i9;

        $i10 = i4 + i6;

        $i12 = $i10 - 3;

        $i11 = i5 + i9;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i4, $i13, $i12, $i11);

        $i14 = i4 + i6;

        $i20 = $i14 - 1;

        $i19 = i5 + 2;

        $i15 = i4 + i6;

        $i18 = $i15 - 1;

        $i16 = i5 + i9;

        $i17 = $i16 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i20, $i19, $i18, $i17);

        $r5 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r5);

        $i21 = i4 + i6;

        $i26 = $i21 - 2;

        $i25 = i5 + 1;

        $i22 = i4 + i6;

        $i24 = $i22 - 2;

        $i23 = i5 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i26, $i25, $i24, $i23);

        $i27 = i4 + i6;

        $i34 = $i27 - 2;

        $i28 = i5 + i9;

        $i33 = $i28 - 1;

        $i29 = i4 + i6;

        $i32 = $i29 - 2;

        $i30 = i5 + i9;

        $i31 = $i30 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i34, $i33, $i32, $i31);

        goto label25;

     label13:
        if z0 == 0 goto label14;

        $r20 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r20);

        $i195 = i5 + i9;

        $i196 = $i195 - 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i4, i5, i4, $i196);

        $i203 = i4 + 2;

        $i197 = i5 + i9;

        $i202 = $i197 - 1;

        $i198 = i4 + i6;

        $i201 = $i198 - 2;

        $i199 = i5 + i9;

        $i200 = $i199 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i203, $i202, $i201, $i200);

        $i207 = i4 + i6;

        $i206 = i4 + i6;

        $i204 = i5 + i9;

        $i205 = $i204 - 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i207, i5, $i206, $i205);

        $r21 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor2>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r21);

        $i213 = i4 + 1;

        $i208 = i5 + i9;

        $i212 = $i208 - 2;

        $i211 = i4 + 1;

        $i209 = i5 + i9;

        $i210 = $i209 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i213, $i212, $i211, $i210);

        $i214 = i4 + i6;

        $i221 = $i214 - 1;

        $i215 = i5 + i9;

        $i220 = $i215 - 2;

        $i216 = i4 + i6;

        $i219 = $i216 - 1;

        $i217 = i5 + i9;

        $i218 = $i217 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i221, $i220, $i219, $i218);

        goto label25;

     label14:
        $r12 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i114 = virtualinvoke $r12.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i1 <= $i114 goto label18;

        $r16 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r16);

        $i143 = i5 + i9;

        $i144 = $i143 - 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i4, i5, i4, $i144);

        $r17 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i145 = virtualinvoke $r17.<com.jidesoft.swing.JideTabbedPane: int getTabCount()>();

        $i146 = $i145 - 1;

        if i1 != $i146 goto label15;

        $i188 = i4 + 2;

        $i182 = i5 + i9;

        $i187 = $i182 - 1;

        $i183 = i4 + i6;

        $i186 = $i183 - 3;

        $i184 = i5 + i9;

        $i185 = $i184 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i188, $i187, $i186, $i185);

        $i189 = i4 + i6;

        $i194 = $i189 - 1;

        $i190 = i4 + i6;

        $i193 = $i190 - 1;

        $i191 = i5 + i9;

        $i192 = $i191 - 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i194, i5, $i193, $i192);

        goto label16;

     label15:
        $i153 = i4 + 2;

        $i147 = i5 + i9;

        $i152 = $i147 - 1;

        $i148 = i4 + i6;

        $i151 = $i148 - 2;

        $i149 = i5 + i9;

        $i150 = $i149 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i153, $i152, $i151, $i150);

        $i157 = i4 + i6;

        $i156 = i4 + i6;

        $i154 = i5 + i9;

        $i155 = $i154 - 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i157, i5, $i156, $i155);

     label16:
        $r18 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r18);

        $i163 = i4 + 1;

        $i158 = i5 + i9;

        $i162 = $i158 - 2;

        $i161 = i4 + 1;

        $i159 = i5 + i9;

        $i160 = $i159 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i163, $i162, $i161, $i160);

        $r19 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i164 = virtualinvoke $r19.<com.jidesoft.swing.JideTabbedPane: int getTabCount()>();

        $i165 = $i164 - 1;

        if i1 != $i165 goto label17;

        $i174 = i4 + i6;

        $i181 = $i174 - 2;

        $i175 = i5 + i9;

        $i180 = $i175 - 2;

        $i176 = i4 + i6;

        $i179 = $i176 - 2;

        $i177 = i5 + i9;

        $i178 = $i177 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i181, $i180, $i179, $i178);

        goto label25;

     label17:
        $i166 = i4 + i6;

        $i173 = $i166 - 1;

        $i167 = i5 + i9;

        $i172 = $i167 - 2;

        $i168 = i4 + i6;

        $i171 = $i168 - 1;

        $i169 = i5 + i9;

        $i170 = $i169 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i173, $i172, $i171, $i170);

        goto label25;

     label18:
        $r13 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i115 = virtualinvoke $r13.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i1 >= $i115 goto label25;

        $r14 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r14);

        $i116 = i5 + i9;

        $i117 = $i116 - 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i4, i5, i4, $i117);

        $i124 = i4 + 2;

        $i118 = i5 + i9;

        $i123 = $i118 - 1;

        $i119 = i4 + i6;

        $i122 = $i119 - 2;

        $i120 = i5 + i9;

        $i121 = $i120 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i124, $i123, $i122, $i121);

        $i128 = i4 + i6;

        $i127 = i4 + i6;

        $i125 = i5 + i9;

        $i126 = $i125 - 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i128, i5, $i127, $i126);

        $r15 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r15);

        $i134 = i4 + 1;

        $i129 = i5 + i9;

        $i133 = $i129 - 2;

        $i132 = i4 + 1;

        $i130 = i5 + i9;

        $i131 = $i130 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i134, $i133, $i132, $i131);

        $i135 = i4 + i6;

        $i142 = $i135 - 1;

        $i136 = i5 + i9;

        $i141 = $i136 - 2;

        $i137 = i4 + i6;

        $i140 = $i137 - 1;

        $i138 = i5 + i9;

        $i139 = $i138 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i142, $i141, $i140, $i139);

        goto label25;

     label19:
        if z0 == 0 goto label20;

        $r40 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r40);

        $i368 = i5 + i9;

        $i370 = $i368 - 1;

        $i369 = i5 + 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i4, $i370, i4, $i369);

        $i373 = i4 + 2;

        $i371 = i4 + i6;

        $i372 = $i371 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i373, i5, $i372, i5);

        $i378 = i4 + i6;

        $i377 = i5 + 2;

        $i376 = i4 + i6;

        $i374 = i5 + i9;

        $i375 = $i374 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i378, $i377, $i376, $i375);

        $r41 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor2>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r41);

        $i380 = i5 + 2;

        $i379 = i4 + 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i4, $i380, $i379, i5);

        $i381 = i4 + i6;

        $i384 = $i381 - 2;

        $i383 = i4 + i6;

        $i382 = i5 + 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i384, i5, $i383, $i382);

        goto label25;

     label20:
        $r32 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i313 = virtualinvoke $r32.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i1 <= $i313 goto label24;

        $r36 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r36);

        $i332 = i5 + i9;

        $i334 = $i332 - 1;

        $i333 = i5 + 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i4, $i334, i4, $i333);

        $r37 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i335 = virtualinvoke $r37.<com.jidesoft.swing.JideTabbedPane: int getTabCount()>();

        $i336 = $i335 - 1;

        if i1 != $i336 goto label21;

        $i360 = i4 + 2;

        $i358 = i4 + i6;

        $i359 = $i358 - 3;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i360, i5, $i359, i5);

        $i361 = i4 + i6;

        $i367 = $i361 - 1;

        $i366 = i5 + 2;

        $i362 = i4 + i6;

        $i365 = $i362 - 1;

        $i363 = i5 + i9;

        $i364 = $i363 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i367, $i366, $i365, $i364);

        goto label22;

     label21:
        $i339 = i4 + 2;

        $i337 = i4 + i6;

        $i338 = $i337 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i339, i5, $i338, i5);

        $i344 = i4 + i6;

        $i343 = i5 + 2;

        $i342 = i4 + i6;

        $i340 = i5 + i9;

        $i341 = $i340 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i344, $i343, $i342, $i341);

     label22:
        $r38 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r38);

        $i346 = i5 + 2;

        $i345 = i4 + 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i4, $i346, $i345, i5);

        $r39 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i347 = virtualinvoke $r39.<com.jidesoft.swing.JideTabbedPane: int getTabCount()>();

        $i348 = $i347 - 1;

        if i1 != $i348 goto label23;

        $i353 = i4 + i6;

        $i357 = $i353 - 3;

        $i354 = i4 + i6;

        $i356 = $i354 - 1;

        $i355 = i5 + 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i357, i5, $i356, $i355);

        goto label25;

     label23:
        $i349 = i4 + i6;

        $i352 = $i349 - 2;

        $i351 = i4 + i6;

        $i350 = i5 + 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i352, i5, $i351, $i350);

        goto label25;

     label24:
        $r33 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i314 = virtualinvoke $r33.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i1 >= $i314 goto label25;

        $r34 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r34);

        $i315 = i5 + i9;

        $i317 = $i315 - 1;

        $i316 = i5 + 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i4, $i317, i4, $i316);

        $i320 = i4 + 2;

        $i318 = i4 + i6;

        $i319 = $i318 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i320, i5, $i319, i5);

        $i325 = i4 + i6;

        $i324 = i5 + 2;

        $i323 = i4 + i6;

        $i321 = i5 + i9;

        $i322 = $i321 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i325, $i324, $i323, $i322);

        $r35 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r35);

        $i327 = i5 + 2;

        $i326 = i4 + 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i4, $i327, $i326, i5);

        $i328 = i4 + i6;

        $i331 = $i328 - 2;

        $i330 = i4 + i6;

        $i329 = i5 + 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i331, i5, $i330, $i329);

     label25:
        return;
    }

    protected void paintBoxTabBorder(java.awt.Graphics, int, int, int, int, int, int, boolean)
    {
        java.awt.Color $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        java.awt.ComponentOrientation $r2;
        com.jidesoft.swing.JideTabbedPane $r1, $r3;
        boolean $z0, z1;
        java.awt.Graphics r4;
        int i0, $i1, $i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        r4 := @parameter0: java.awt.Graphics;

        i3 := @parameter1: int;

        i0 := @parameter2: int;

        i4 := @parameter3: int;

        i5 := @parameter4: int;

        i7 := @parameter5: int;

        i6 := @parameter6: int;

        z1 := @parameter7: boolean;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r2 = virtualinvoke $r1.<com.jidesoft.swing.JideTabbedPane: java.awt.ComponentOrientation getComponentOrientation()>();

        $z0 = virtualinvoke $r2.<java.awt.ComponentOrientation: boolean isLeftToRight()>();

        if z1 == 0 goto label1;

        $r11 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor1>;

        virtualinvoke r4.<java.awt.Graphics: void setColor(java.awt.Color)>($r11);

        $i40 = i4 + i7;

        $i41 = $i40 - 2;

        virtualinvoke r4.<java.awt.Graphics: void drawLine(int,int,int,int)>(i4, i5, $i41, i5);

        $i42 = i5 + i6;

        $i43 = $i42 - 2;

        virtualinvoke r4.<java.awt.Graphics: void drawLine(int,int,int,int)>(i4, i5, i4, $i43);

        $r12 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectColor2>;

        virtualinvoke r4.<java.awt.Graphics: void setColor(java.awt.Color)>($r12);

        $i44 = i4 + i7;

        $i49 = $i44 - 1;

        $i45 = i4 + i7;

        $i48 = $i45 - 1;

        $i46 = i5 + i6;

        $i47 = $i46 - 1;

        virtualinvoke r4.<java.awt.Graphics: void drawLine(int,int,int,int)>($i49, i5, $i48, $i47);

        $i50 = i5 + i6;

        $i55 = $i50 - 1;

        $i51 = i4 + i7;

        $i54 = $i51 - 1;

        $i52 = i5 + i6;

        $i53 = $i52 - 1;

        virtualinvoke r4.<java.awt.Graphics: void drawLine(int,int,int,int)>(i4, $i55, $i54, $i53);

        goto label5;

     label1:
        $r3 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i1 = virtualinvoke $r3.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        $i2 = $i1 - 1;

        if i0 == $i2 goto label5;

        tableswitch(i3)
        {
            case 1: goto label3;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label2;
            default: goto label3;
        };

     label2:
        $r5 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1>;

        virtualinvoke r4.<java.awt.Graphics: void setColor(java.awt.Color)>($r5);

        $i12 = i4 + 2;

        $i11 = i5 + i6;

        $i8 = i4 + i7;

        $i10 = $i8 - 2;

        $i9 = i5 + i6;

        virtualinvoke r4.<java.awt.Graphics: void drawLine(int,int,int,int)>($i12, $i11, $i10, $i9);

        $r6 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        virtualinvoke r4.<java.awt.Graphics: void setColor(java.awt.Color)>($r6);

        $i19 = i4 + 2;

        $i13 = i5 + i6;

        $i18 = $i13 + 1;

        $i14 = i4 + i7;

        $i17 = $i14 - 2;

        $i15 = i5 + i6;

        $i16 = $i15 + 1;

        virtualinvoke r4.<java.awt.Graphics: void drawLine(int,int,int,int)>($i19, $i18, $i17, $i16);

        goto label5;

     label3:
        if $z0 == 0 goto label4;

        $r9 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1>;

        virtualinvoke r4.<java.awt.Graphics: void setColor(java.awt.Color)>($r9);

        $i32 = i4 + i7;

        $i31 = i5 + 2;

        $i30 = i4 + i7;

        $i28 = i5 + i6;

        $i29 = $i28 - 2;

        virtualinvoke r4.<java.awt.Graphics: void drawLine(int,int,int,int)>($i32, $i31, $i30, $i29);

        $r10 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        virtualinvoke r4.<java.awt.Graphics: void setColor(java.awt.Color)>($r10);

        $i33 = i4 + i7;

        $i39 = $i33 + 1;

        $i38 = i5 + 2;

        $i34 = i4 + i7;

        $i37 = $i34 + 1;

        $i35 = i5 + i6;

        $i36 = $i35 - 2;

        virtualinvoke r4.<java.awt.Graphics: void drawLine(int,int,int,int)>($i39, $i38, $i37, $i36);

        goto label5;

     label4:
        $r7 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor1>;

        virtualinvoke r4.<java.awt.Graphics: void setColor(java.awt.Color)>($r7);

        $i22 = i5 + 2;

        $i20 = i5 + i6;

        $i21 = $i20 - 2;

        virtualinvoke r4.<java.awt.Graphics: void drawLine(int,int,int,int)>(i4, $i22, i4, $i21);

        $r8 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _unselectColor2>;

        virtualinvoke r4.<java.awt.Graphics: void setColor(java.awt.Color)>($r8);

        $i27 = i4 + 1;

        $i26 = i5 + 2;

        $i25 = i4 + 1;

        $i23 = i5 + i6;

        $i24 = $i23 - 2;

        virtualinvoke r4.<java.awt.Graphics: void drawLine(int,int,int,int)>($i27, $i26, $i25, $i24);

     label5:
        return;
    }

    protected void paintTabBackground(java.awt.Graphics, int, int, int, int, int, int, boolean)
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        int $i0, i1, i2, i3, i4, i5, i6;
        java.awt.Graphics r1;
        boolean z0;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        r1 := @parameter0: java.awt.Graphics;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        z0 := @parameter7: boolean;

        $i0 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getTabShape()>();

        tableswitch($i0)
        {
            case 1: goto label3;
            case 2: goto label5;
            case 3: goto label1;
            case 4: goto label7;
            case 5: goto label6;
            case 6: goto label7;
            case 7: goto label7;
            case 8: goto label2;
            case 9: goto label5;
            case 10: goto label6;
            case 11: goto label4;
            default: goto label7;
        };

     label1:
        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void paintButtonTabBackground(java.awt.Graphics,int,int,int,int,int,int,boolean)>(r1, i1, i2, i3, i4, i5, i6, z0);

        goto label8;

     label2:
        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void paintExcelTabBackground(java.awt.Graphics,int,int,int,int,int,int,boolean)>(r1, i1, i2, i3, i4, i5, i6, z0);

        goto label8;

     label3:
        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void paintDefaultTabBackground(java.awt.Graphics,int,int,int,int,int,int,boolean)>(r1, i1, i2, i3, i4, i5, i6, z0);

        goto label8;

     label4:
        if z0 == 0 goto label8;

        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void paintDefaultTabBackground(java.awt.Graphics,int,int,int,int,int,int,boolean)>(r1, i1, i2, i3, i4, i5, i6, z0);

        goto label8;

     label5:
        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void paintVsnetTabBackground(java.awt.Graphics,int,int,int,int,int,int,boolean)>(r1, i1, i2, i3, i4, i5, i6, z0);

        goto label8;

     label6:
        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void paintFlatTabBackground(java.awt.Graphics,int,int,int,int,int,int,boolean)>(r1, i1, i2, i3, i4, i5, i6, z0);

        goto label8;

     label7:
        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void paintOffice2003TabBackground(java.awt.Graphics,int,int,int,int,int,int,boolean)>(r1, i1, i2, i3, i4, i5, i6, z0);

     label8:
        return;
    }

    protected void paintOffice2003TabBackground(java.awt.Graphics, int, int, int, int, int, int, boolean)
    {
        java.awt.Polygon $r5, $r8, $r11, $r14, $r17, $r20, $r23, $r26;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        java.awt.ComponentOrientation $r2;
        int[] $r3, $r4, $r6, $r7, $r9, $r10, $r12, $r13, $r15, $r16, $r18, $r19, $r21, $r22, $r24, $r25;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, $i13, $i14, $i15, $i16, $i17, i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $i105, $i106, $i107, $i108, $i109, $i110, $i111, $i112, $i113, $i114, $i115, $i116, $i117, $i118, $i119, $i120, $i121, $i122, $i123, $i124, $i125, $i126, $i127, $i128, $i129, $i130, $i131, $i132, $i133, $i134, $i135, $i136, i137, i138, $i139, $i140, $i141, $i142;
        com.jidesoft.swing.JideTabbedPane $r1;
        boolean $z0, z1;
        java.awt.Graphics r27;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        r27 := @parameter0: java.awt.Graphics;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i12 := @parameter4: int;

        i3 := @parameter5: int;

        i18 := @parameter6: int;

        z1 := @parameter7: boolean;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r2 = virtualinvoke $r1.<com.jidesoft.swing.JideTabbedPane: java.awt.ComponentOrientation getComponentOrientation()>();

        $z0 = virtualinvoke $r2.<java.awt.ComponentOrientation: boolean isLeftToRight()>();

        tableswitch(i0)
        {
            case 1: goto label13;
            case 2: goto label01;
            case 3: goto label05;
            case 4: goto label03;
            default: goto label13;
        };

     label01:
        if i1 == 0 goto label02;

        if z1 != 0 goto label02;

        $r18 = newarray (int)[7];

        $i94 = i2 + i3;

        $r18[0] = $i94;

        $i95 = i2 + 4;

        $r18[1] = $i95;

        $i96 = i2 + 2;

        $r18[2] = $i96;

        $r18[3] = i2;

        $r18[4] = i2;

        $i97 = i2 + 3;

        $r18[5] = $i97;

        $i98 = i2 + i3;

        $r18[6] = $i98;

        $r19 = newarray (int)[7];

        $r19[0] = i12;

        $r19[1] = i12;

        $i99 = i12 + 2;

        $r19[2] = $i99;

        $i100 = i12 + 5;

        $r19[3] = $i100;

        $i101 = i12 + i18;

        $i102 = $i101 - 5;

        $r19[4] = $i102;

        $i103 = i12 + i18;

        $i104 = $i103 - 2;

        $r19[5] = $i104;

        $i105 = i12 + i18;

        $i106 = $i105 - 2;

        $r19[6] = $i106;

        i137 = lengthof $r19;

        $r20 = new java.awt.Polygon;

        specialinvoke $r20.<java.awt.Polygon: void <init>(int[],int[],int)>($r18, $r19, i137);

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Polygon tabRegion> = $r20;

        goto label21;

     label02:
        $r15 = newarray (int)[6];

        $i78 = i2 + i3;

        $r15[0] = $i78;

        $i79 = i2 + 2;

        $r15[1] = $i79;

        $r15[2] = i2;

        $r15[3] = i2;

        $i80 = i2 + 3;

        $r15[4] = $i80;

        $i81 = i2 + i3;

        $r15[5] = $i81;

        $r16 = newarray (int)[6];

        $i82 = i12 - i3;

        $i83 = $i82 + 2;

        $i84 = $i83 + 2;

        $r16[0] = $i84;

        $i85 = i12 + 2;

        $r16[1] = $i85;

        $i86 = i12 + 5;

        $r16[2] = $i86;

        $i87 = i12 + i18;

        $i88 = $i87 - 5;

        $r16[3] = $i88;

        $i89 = i12 + i18;

        $i90 = $i89 - 2;

        $r16[4] = $i90;

        $i91 = i12 + i18;

        $i92 = $i91 - 2;

        $r16[5] = $i92;

        $i93 = lengthof $r16;

        $r17 = new java.awt.Polygon;

        specialinvoke $r17.<java.awt.Polygon: void <init>(int[],int[],int)>($r15, $r16, $i93);

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Polygon tabRegion> = $r17;

        goto label21;

     label03:
        if i1 == 0 goto label04;

        if z1 != 0 goto label04;

        $r6 = newarray (int)[7];

        $r6[0] = i2;

        $i26 = i2 + i3;

        $i27 = $i26 - 4;

        $r6[1] = $i27;

        $i28 = i2 + i3;

        $i29 = $i28 - 3;

        $r6[2] = $i29;

        $i30 = i2 + i3;

        $i31 = $i30 - 1;

        $r6[3] = $i31;

        $i32 = i2 + i3;

        $i33 = $i32 - 1;

        $r6[4] = $i33;

        $i34 = i2 + i3;

        $i35 = $i34 - 3;

        $r6[5] = $i35;

        $r6[6] = i2;

        $r7 = newarray (int)[7];

        $r7[0] = i12;

        $r7[1] = i12;

        $i36 = i12 + 2;

        $r7[2] = $i36;

        $i37 = i12 + 5;

        $r7[3] = $i37;

        $i38 = i12 + i18;

        $i39 = $i38 - 5;

        $r7[4] = $i39;

        $i40 = i12 + i18;

        $i41 = $i40 - 2;

        $r7[5] = $i41;

        $i42 = i12 + i18;

        $i43 = $i42 - 2;

        $r7[6] = $i43;

        i138 = lengthof $r7;

        $r8 = new java.awt.Polygon;

        specialinvoke $r8.<java.awt.Polygon: void <init>(int[],int[],int)>($r6, $r7, i138);

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Polygon tabRegion> = $r8;

        goto label21;

     label04:
        $r3 = newarray (int)[6];

        $r3[0] = i2;

        $i4 = i2 + i3;

        $i5 = $i4 - 3;

        $r3[1] = $i5;

        $i6 = i2 + i3;

        $i7 = $i6 - 1;

        $r3[2] = $i7;

        $i8 = i2 + i3;

        $i9 = $i8 - 1;

        $r3[3] = $i9;

        $i10 = i2 + i3;

        $i11 = $i10 - 3;

        $r3[4] = $i11;

        $r3[5] = i2;

        $r4 = newarray (int)[6];

        $i13 = i12 - i3;

        $i14 = $i13 + 2;

        $i15 = $i14 + 2;

        $r4[0] = $i15;

        $i16 = i12 + 2;

        $r4[1] = $i16;

        $i17 = i12 + 5;

        $r4[2] = $i17;

        $i19 = i12 + i18;

        $i20 = $i19 - 5;

        $r4[3] = $i20;

        $i21 = i12 + i18;

        $i22 = $i21 - 2;

        $r4[4] = $i22;

        $i23 = i12 + i18;

        $i24 = $i23 - 2;

        $r4[5] = $i24;

        $i25 = lengthof $r4;

        $r5 = new java.awt.Polygon;

        specialinvoke $r5.<java.awt.Polygon: void <init>(int[],int[],int)>($r3, $r4, $i25);

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Polygon tabRegion> = $r5;

        goto label21;

     label05:
        if $z0 == 0 goto label09;

        $r12 = newarray (int)[6];

        if i1 == 0 goto label06;

        if z1 == 0 goto label07;

     label06:
        $i139 = i18 - 5;

        goto label08;

     label07:
        $i139 = 0;

     label08:
        $i61 = i2 - $i139;

        $r12[0] = $i61;

        $r12[1] = i2;

        $i62 = i2 + 4;

        $r12[2] = $i62;

        $i63 = i2 + i3;

        $i64 = $i63 - 3;

        $r12[3] = $i64;

        $i65 = i2 + i3;

        $i66 = $i65 - 1;

        $r12[4] = $i66;

        $i67 = i2 + i3;

        $i68 = $i67 - 1;

        $r12[5] = $i68;

        $r13 = newarray (int)[6];

        $r13[0] = i12;

        $i69 = i12 + i18;

        $i70 = $i69 - 5;

        $r13[1] = $i70;

        $i71 = i12 + i18;

        $i72 = $i71 - 1;

        $r13[2] = $i72;

        $i73 = i12 + i18;

        $i74 = $i73 - 1;

        $r13[3] = $i74;

        $i75 = i12 + i18;

        $i76 = $i75 - 5;

        $r13[4] = $i76;

        $r13[5] = i12;

        $i77 = lengthof $r13;

        $r14 = new java.awt.Polygon;

        specialinvoke $r14.<java.awt.Polygon: void <init>(int[],int[],int)>($r12, $r13, $i77);

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Polygon tabRegion> = $r14;

        goto label21;

     label09:
        $r9 = newarray (int)[6];

        $r9[0] = i2;

        $r9[1] = i2;

        $i44 = i2 + 2;

        $r9[2] = $i44;

        $i45 = i2 + i3;

        $i46 = $i45 - 5;

        $r9[3] = $i46;

        $i47 = i2 + i3;

        $i48 = $i47 - 1;

        $r9[4] = $i48;

        $i49 = i2 + i3;

        $i50 = $i49 - 1;

        if i1 == 0 goto label10;

        if z1 == 0 goto label11;

     label10:
        $i140 = i18 - 5;

        goto label12;

     label11:
        $i140 = 0;

     label12:
        $i51 = $i50 + $i140;

        $r9[5] = $i51;

        $r10 = newarray (int)[6];

        $r10[0] = i12;

        $i52 = i12 + i18;

        $i53 = $i52 - 5;

        $r10[1] = $i53;

        $i54 = i12 + i18;

        $i55 = $i54 - 1;

        $r10[2] = $i55;

        $i56 = i12 + i18;

        $i57 = $i56 - 1;

        $r10[3] = $i57;

        $i58 = i12 + i18;

        $i59 = $i58 - 5;

        $r10[4] = $i59;

        $r10[5] = i12;

        $i60 = lengthof $r10;

        $r11 = new java.awt.Polygon;

        specialinvoke $r11.<java.awt.Polygon: void <init>(int[],int[],int)>($r9, $r10, $i60);

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Polygon tabRegion> = $r11;

        goto label21;

     label13:
        if $z0 == 0 goto label17;

        $r24 = newarray (int)[6];

        if i1 == 0 goto label14;

        if z1 == 0 goto label15;

     label14:
        $i141 = i18 - 5;

        goto label16;

     label15:
        $i141 = 0;

     label16:
        $i122 = i2 - $i141;

        $r24[0] = $i122;

        $r24[1] = i2;

        $i123 = i2 + 4;

        $r24[2] = $i123;

        $i124 = i2 + i3;

        $i125 = $i124 - 3;

        $r24[3] = $i125;

        $i126 = i2 + i3;

        $i127 = $i126 - 1;

        $r24[4] = $i127;

        $i128 = i2 + i3;

        $i129 = $i128 - 1;

        $r24[5] = $i129;

        $r25 = newarray (int)[6];

        $i130 = i12 + i18;

        $r25[0] = $i130;

        $i131 = i12 + 3;

        $r25[1] = $i131;

        $i132 = i12 + 1;

        $r25[2] = $i132;

        $i133 = i12 + 1;

        $r25[3] = $i133;

        $i134 = i12 + 3;

        $r25[4] = $i134;

        $i135 = i12 + i18;

        $r25[5] = $i135;

        $i136 = lengthof $r25;

        $r26 = new java.awt.Polygon;

        specialinvoke $r26.<java.awt.Polygon: void <init>(int[],int[],int)>($r24, $r25, $i136);

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Polygon tabRegion> = $r26;

        goto label21;

     label17:
        $r21 = newarray (int)[6];

        $r21[0] = i2;

        $r21[1] = i2;

        $i107 = i2 + 2;

        $r21[2] = $i107;

        $i108 = i2 + i3;

        $i109 = $i108 - 5;

        $r21[3] = $i109;

        $i110 = i2 + i3;

        $i111 = $i110 - 1;

        $r21[4] = $i111;

        $i112 = i2 + i3;

        $i113 = $i112 - 1;

        if i1 == 0 goto label18;

        if z1 == 0 goto label19;

     label18:
        $i142 = i18 - 5;

        goto label20;

     label19:
        $i142 = 0;

     label20:
        $i114 = $i113 + $i142;

        $r21[5] = $i114;

        $r22 = newarray (int)[6];

        $i115 = i12 + i18;

        $r22[0] = $i115;

        $i116 = i12 + 3;

        $r22[1] = $i116;

        $i117 = i12 + 1;

        $r22[2] = $i117;

        $i118 = i12 + 1;

        $r22[3] = $i118;

        $i119 = i12 + 3;

        $r22[4] = $i119;

        $i120 = i12 + i18;

        $r22[5] = $i120;

        $i121 = lengthof $r22;

        $r23 = new java.awt.Polygon;

        specialinvoke $r23.<java.awt.Polygon: void <init>(int[],int[],int)>($r21, $r22, $i121);

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Polygon tabRegion> = $r23;

     label21:
        return;
    }

    protected void paintExcelTabBackground(java.awt.Graphics, int, int, int, int, int, int, boolean)
    {
        java.awt.Polygon $r5, $r8, $r12, $r15, $r18, $r22, $r25, $r28, $r32, $r35, $r38, $r42;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        java.awt.ComponentOrientation $r2;
        int[] $r3, $r4, $r6, $r7, $r10, $r11, $r13, $r14, $r16, $r17, $r20, $r21, $r23, $r24, $r26, $r27, $r30, $r31, $r33, $r34, $r36, $r37, $r40, $r41;
        int i0, i1, i2, $i3, $i4, $i5, $i6, i7, $i8, $i9, i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $i105, $i106, $i107, $i108, $i109, $i110, $i111, $i112, $i113, $i114, $i115, $i116, $i117, $i118, $i119, $i120, $i121, $i122, $i123, $i124, $i125, $i126, $i127, $i128, $i129, $i130, $i131, $i132, $i133, $i134, $i135, $i136, $i137, $i138, $i139, i140, i141, i142, i143;
        com.jidesoft.swing.JideTabbedPane $r1, $r9, $r19, $r29, $r39;
        boolean $z0, z1;
        java.awt.Graphics r43;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        r43 := @parameter0: java.awt.Graphics;

        i0 := @parameter1: int;

        i28 := @parameter2: int;

        i1 := @parameter3: int;

        i7 := @parameter4: int;

        i2 := @parameter5: int;

        i10 := @parameter6: int;

        z1 := @parameter7: boolean;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r2 = virtualinvoke $r1.<com.jidesoft.swing.JideTabbedPane: java.awt.ComponentOrientation getComponentOrientation()>();

        $z0 = virtualinvoke $r2.<java.awt.ComponentOrientation: boolean isLeftToRight()>();

        tableswitch(i0)
        {
            case 1: goto label16;
            case 2: goto label01;
            case 3: goto label11;
            case 4: goto label06;
            default: goto label16;
        };

     label01:
        if z1 != 0 goto label05;

        if $z0 == 0 goto label02;

        if i28 == 0 goto label03;

     label02:
        if $z0 != 0 goto label04;

        $r29 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i98 = virtualinvoke $r29.<com.jidesoft.swing.JideTabbedPane: int getTabCount()>();

        $i99 = $i98 - 1;

        if i28 != $i99 goto label04;

     label03:
        $r30 = newarray (int)[4];

        $i101 = i1 + i2;

        $r30[0] = $i101;

        $r30[1] = i1;

        $r30[2] = i1;

        $i102 = i1 + i2;

        $r30[3] = $i102;

        $r31 = newarray (int)[4];

        $i103 = i7 - 5;

        $r31[0] = $i103;

        $i104 = i7 + 5;

        $r31[1] = $i104;

        $i105 = i7 + i10;

        $i106 = $i105 - 5;

        $r31[2] = $i106;

        $i107 = i7 + i10;

        $i108 = $i107 + 6;

        $r31[3] = $i108;

        $i109 = lengthof $r31;

        $r32 = new java.awt.Polygon;

        specialinvoke $r32.<java.awt.Polygon: void <init>(int[],int[],int)>($r30, $r31, $i109);

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Polygon tabRegion> = $r32;

        goto label21;

     label04:
        $r26 = newarray (int)[5];

        $i88 = i1 + i2;

        $r26[0] = $i88;

        $i89 = i1 + 9;

        $r26[1] = $i89;

        $r26[2] = i1;

        $r26[3] = i1;

        $i90 = i1 + i2;

        $r26[4] = $i90;

        $r27 = newarray (int)[5];

        $i91 = i7 + 8;

        $r27[0] = $i91;

        $i92 = i7 + 2;

        $r27[1] = $i92;

        $i93 = i7 + 6;

        $r27[2] = $i93;

        $i94 = i7 + i10;

        $i95 = $i94 - 5;

        $r27[3] = $i95;

        $i96 = i7 + i10;

        $i97 = $i96 + 6;

        $r27[4] = $i97;

        $i100 = lengthof $r27;

        $r28 = new java.awt.Polygon;

        specialinvoke $r28.<java.awt.Polygon: void <init>(int[],int[],int)>($r26, $r27, $i100);

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Polygon tabRegion> = $r28;

        goto label21;

     label05:
        $r23 = newarray (int)[4];

        $i80 = i1 + i2;

        $r23[0] = $i80;

        $r23[1] = i1;

        $r23[2] = i1;

        $i81 = i1 + i2;

        $r23[3] = $i81;

        $r24 = newarray (int)[4];

        $i82 = i7 - 5;

        $r24[0] = $i82;

        $i83 = i7 + 5;

        $r24[1] = $i83;

        $i84 = i7 + i10;

        $i85 = $i84 - 5;

        $r24[2] = $i85;

        $i86 = i7 + i10;

        $i87 = $i86 + 6;

        $r24[3] = $i87;

        i140 = lengthof $r24;

        $r25 = new java.awt.Polygon;

        specialinvoke $r25.<java.awt.Polygon: void <init>(int[],int[],int)>($r23, $r24, i140);

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Polygon tabRegion> = $r25;

        goto label21;

     label06:
        if z1 != 0 goto label10;

        if $z0 == 0 goto label07;

        if i28 == 0 goto label08;

     label07:
        if $z0 != 0 goto label09;

        $r9 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i29 = virtualinvoke $r9.<com.jidesoft.swing.JideTabbedPane: int getTabCount()>();

        $i30 = $i29 - 1;

        if i28 != $i30 goto label09;

     label08:
        $r10 = newarray (int)[4];

        $r10[0] = i1;

        $i32 = i1 + i2;

        $i33 = $i32 - 1;

        $r10[1] = $i33;

        $i34 = i1 + i2;

        $i35 = $i34 - 1;

        $r10[2] = $i35;

        $r10[3] = i1;

        $r11 = newarray (int)[4];

        $i36 = i7 - 5;

        $r11[0] = $i36;

        $i37 = i7 + 5;

        $r11[1] = $i37;

        $i38 = i7 + i10;

        $i39 = $i38 - 5;

        $r11[2] = $i39;

        $i40 = i7 + i10;

        $i41 = $i40 + 6;

        $r11[3] = $i41;

        $i42 = lengthof $r11;

        $r12 = new java.awt.Polygon;

        specialinvoke $r12.<java.awt.Polygon: void <init>(int[],int[],int)>($r10, $r11, $i42);

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Polygon tabRegion> = $r12;

        goto label21;

     label09:
        $r6 = newarray (int)[5];

        $r6[0] = i1;

        $i15 = i1 + i2;

        $i16 = $i15 - 10;

        $r6[1] = $i16;

        $i17 = i1 + i2;

        $i18 = $i17 - 1;

        $r6[2] = $i18;

        $i19 = i1 + i2;

        $i20 = $i19 - 1;

        $r6[3] = $i20;

        $r6[4] = i1;

        $r7 = newarray (int)[5];

        $i21 = i7 + 8;

        $r7[0] = $i21;

        $i22 = i7 + 2;

        $r7[1] = $i22;

        $i23 = i7 + 6;

        $r7[2] = $i23;

        $i24 = i7 + i10;

        $i25 = $i24 - 5;

        $r7[3] = $i25;

        $i26 = i7 + i10;

        $i27 = $i26 + 6;

        $r7[4] = $i27;

        $i31 = lengthof $r7;

        $r8 = new java.awt.Polygon;

        specialinvoke $r8.<java.awt.Polygon: void <init>(int[],int[],int)>($r6, $r7, $i31);

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Polygon tabRegion> = $r8;

        goto label21;

     label10:
        $r3 = newarray (int)[4];

        $r3[0] = i1;

        $i3 = i1 + i2;

        $i4 = $i3 - 1;

        $r3[1] = $i4;

        $i5 = i1 + i2;

        $i6 = $i5 - 1;

        $r3[2] = $i6;

        $r3[3] = i1;

        $r4 = newarray (int)[4];

        $i8 = i7 - 5;

        $r4[0] = $i8;

        $i9 = i7 + 5;

        $r4[1] = $i9;

        $i11 = i7 + i10;

        $i12 = $i11 - 4;

        $r4[2] = $i12;

        $i13 = i7 + i10;

        $i14 = $i13 + 6;

        $r4[3] = $i14;

        i141 = lengthof $r4;

        $r5 = new java.awt.Polygon;

        specialinvoke $r5.<java.awt.Polygon: void <init>(int[],int[],int)>($r3, $r4, i141);

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Polygon tabRegion> = $r5;

        goto label21;

     label11:
        if z1 != 0 goto label15;

        if $z0 == 0 goto label12;

        if i28 == 0 goto label13;

     label12:
        if $z0 != 0 goto label14;

        $r19 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i66 = virtualinvoke $r19.<com.jidesoft.swing.JideTabbedPane: int getTabCount()>();

        $i67 = $i66 - 1;

        if i28 != $i67 goto label14;

     label13:
        $r20 = newarray (int)[4];

        $i69 = i1 - 5;

        $r20[0] = $i69;

        $i70 = i1 + 5;

        $r20[1] = $i70;

        $i71 = i1 + i2;

        $i72 = $i71 - 5;

        $r20[2] = $i72;

        $i73 = i1 + i2;

        $i74 = $i73 + 5;

        $r20[3] = $i74;

        $r21 = newarray (int)[4];

        $r21[0] = i7;

        $i75 = i7 + i10;

        $i76 = $i75 - 1;

        $r21[1] = $i76;

        $i77 = i7 + i10;

        $i78 = $i77 - 1;

        $r21[2] = $i78;

        $r21[3] = i7;

        $i79 = lengthof $r21;

        $r22 = new java.awt.Polygon;

        specialinvoke $r22.<java.awt.Polygon: void <init>(int[],int[],int)>($r20, $r21, $i79);

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Polygon tabRegion> = $r22;

        goto label21;

     label14:
        $r16 = newarray (int)[5];

        $i53 = i1 + 7;

        $r16[0] = $i53;

        $i54 = i1 + 1;

        $r16[1] = $i54;

        $i55 = i1 + 5;

        $r16[2] = $i55;

        $i56 = i1 + i2;

        $i57 = $i56 - 5;

        $r16[3] = $i57;

        $i58 = i1 + i2;

        $i59 = $i58 + 5;

        $r16[4] = $i59;

        $r17 = newarray (int)[5];

        $r17[0] = i7;

        $i60 = i7 + i10;

        $i61 = $i60 - 10;

        $r17[1] = $i61;

        $i62 = i7 + i10;

        $i63 = $i62 - 1;

        $r17[2] = $i63;

        $i64 = i7 + i10;

        $i65 = $i64 - 1;

        $r17[3] = $i65;

        $r17[4] = i7;

        $i68 = lengthof $r17;

        $r18 = new java.awt.Polygon;

        specialinvoke $r18.<java.awt.Polygon: void <init>(int[],int[],int)>($r16, $r17, $i68);

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Polygon tabRegion> = $r18;

        goto label21;

     label15:
        $r13 = newarray (int)[4];

        $i43 = i1 - 5;

        $r13[0] = $i43;

        $i44 = i1 + 5;

        $r13[1] = $i44;

        $i45 = i1 + i2;

        $i46 = $i45 - 5;

        $r13[2] = $i46;

        $i47 = i1 + i2;

        $i48 = $i47 + 5;

        $r13[3] = $i48;

        $r14 = newarray (int)[4];

        $r14[0] = i7;

        $i49 = i7 + i10;

        $i50 = $i49 - 1;

        $r14[1] = $i50;

        $i51 = i7 + i10;

        $i52 = $i51 - 1;

        $r14[2] = $i52;

        $r14[3] = i7;

        i142 = lengthof $r14;

        $r15 = new java.awt.Polygon;

        specialinvoke $r15.<java.awt.Polygon: void <init>(int[],int[],int)>($r13, $r14, i142);

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Polygon tabRegion> = $r15;

        goto label21;

     label16:
        if z1 != 0 goto label20;

        if $z0 == 0 goto label17;

        if i28 == 0 goto label18;

     label17:
        if $z0 != 0 goto label19;

        $r39 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i128 = virtualinvoke $r39.<com.jidesoft.swing.JideTabbedPane: int getTabCount()>();

        $i129 = $i128 - 1;

        if i28 != $i129 goto label19;

     label18:
        $r40 = newarray (int)[4];

        $i131 = i1 - 6;

        $r40[0] = $i131;

        $i132 = i1 + 5;

        $r40[1] = $i132;

        $i133 = i1 + i2;

        $i134 = $i133 - 5;

        $r40[2] = $i134;

        $i135 = i1 + i2;

        $i136 = $i135 + 5;

        $r40[3] = $i136;

        $r41 = newarray (int)[4];

        $i137 = i7 + i10;

        $r41[0] = $i137;

        $r41[1] = i7;

        $r41[2] = i7;

        $i138 = i7 + i10;

        $r41[3] = $i138;

        $i139 = lengthof $r41;

        $r42 = new java.awt.Polygon;

        specialinvoke $r42.<java.awt.Polygon: void <init>(int[],int[],int)>($r40, $r41, $i139);

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Polygon tabRegion> = $r42;

        goto label21;

     label19:
        $r36 = newarray (int)[5];

        $i118 = i1 + 7;

        $r36[0] = $i118;

        $i119 = i1 + 1;

        $r36[1] = $i119;

        $i120 = i1 + 6;

        $r36[2] = $i120;

        $i121 = i1 + i2;

        $i122 = $i121 - 5;

        $r36[3] = $i122;

        $i123 = i1 + i2;

        $i124 = $i123 + 5;

        $r36[4] = $i124;

        $r37 = newarray (int)[5];

        $i125 = i7 + i10;

        $r37[0] = $i125;

        $i126 = i7 + 9;

        $r37[1] = $i126;

        $r37[2] = i7;

        $r37[3] = i7;

        $i127 = i7 + i10;

        $r37[4] = $i127;

        $i130 = lengthof $r37;

        $r38 = new java.awt.Polygon;

        specialinvoke $r38.<java.awt.Polygon: void <init>(int[],int[],int)>($r36, $r37, $i130);

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Polygon tabRegion> = $r38;

        goto label21;

     label20:
        $r33 = newarray (int)[4];

        $i110 = i1 - 6;

        $r33[0] = $i110;

        $i111 = i1 + 5;

        $r33[1] = $i111;

        $i112 = i1 + i2;

        $i113 = $i112 - 5;

        $r33[2] = $i113;

        $i114 = i1 + i2;

        $i115 = $i114 + 5;

        $r33[3] = $i115;

        $r34 = newarray (int)[4];

        $i116 = i7 + i10;

        $r34[0] = $i116;

        $r34[1] = i7;

        $r34[2] = i7;

        $i117 = i7 + i10;

        $r34[3] = $i117;

        i143 = lengthof $r34;

        $r35 = new java.awt.Polygon;

        specialinvoke $r35.<java.awt.Polygon: void <init>(int[],int[],int)>($r33, $r34, i143);

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Polygon tabRegion> = $r35;

     label21:
        return;
    }

    protected void paintDefaultTabBackground(java.awt.Graphics, int, int, int, int, int, int, boolean)
    {
        java.awt.Polygon $r4, $r7, $r10, $r13, $r16, $r20, $r23, $r26, $r29, $r32;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        int[] $r2, $r3, $r5, $r6, $r8, $r9, $r11, $r12, $r14, $r15, $r18, $r19, $r21, $r22, $r24, $r25, $r27, $r28, $r30, $r31;
        int i0, i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $i105, $i106, $i107, $i108, $i109, $i110, $i111, $i112, $i113, $i114, $i115, i116, i117, i118, i119, i120, i121, i122, i123, i124, i125, i126, i127, i128, i129, i130;
        com.jidesoft.swing.JideTabbedPane $r1, $r17;
        boolean z0;
        java.awt.Graphics r33;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        r33 := @parameter0: java.awt.Graphics;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i116 := @parameter3: int;

        i117 := @parameter4: int;

        i3 := @parameter5: int;

        i13 := @parameter6: int;

        z0 := @parameter7: boolean;

        tableswitch(i0)
        {
            case 1: goto label09;
            case 2: goto label01;
            case 3: goto label07;
            case 4: goto label04;
            default: goto label09;
        };

     label01:
        if z0 == 0 goto label02;

        i118 = i116 + 1;

        $r24 = newarray (int)[5];

        $i84 = i118 + i3;

        $r24[0] = $i84;

        $r24[1] = i118;

        $i85 = i118 - 2;

        $r24[2] = $i85;

        $i86 = i118 - 2;

        $r24[3] = $i86;

        $i87 = i118 + i3;

        $r24[4] = $i87;

        $r25 = newarray (int)[5];

        $i88 = i117 - 1;

        $r25[0] = $i88;

        $i89 = i117 - 1;

        $r25[1] = $i89;

        $i90 = i117 + 1;

        $r25[2] = $i90;

        $i91 = i117 + i13;

        $i92 = $i91 + 2;

        $r25[3] = $i92;

        $i93 = i117 + i13;

        $i94 = $i93 + 2;

        $r25[4] = $i94;

        i119 = lengthof $r25;

        $r26 = new java.awt.Polygon;

        specialinvoke $r26.<java.awt.Polygon: void <init>(int[],int[],int)>($r24, $r25, i119);

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Polygon tabRegion> = $r26;

        goto label11;

     label02:
        $r17 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i63 = virtualinvoke $r17.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i1 >= $i63 goto label03;

        i120 = i117 + 1;

        $r21 = newarray (int)[5];

        $i74 = i116 + i3;

        $r21[0] = $i74;

        $i75 = i116 + 2;

        $r21[1] = $i75;

        $r21[2] = i116;

        $r21[3] = i116;

        $i76 = i116 + i3;

        $r21[4] = $i76;

        $r22 = newarray (int)[5];

        $i77 = i120 + 1;

        $r22[0] = $i77;

        $i78 = i120 + 1;

        $r22[1] = $i78;

        $i79 = i120 + 3;

        $r22[2] = $i79;

        $i80 = i120 + i13;

        $i81 = $i80 - 1;

        $r22[3] = $i81;

        $i82 = i120 + i13;

        $i83 = $i82 - 1;

        $r22[4] = $i83;

        i121 = lengthof $r22;

        $r23 = new java.awt.Polygon;

        specialinvoke $r23.<java.awt.Polygon: void <init>(int[],int[],int)>($r21, $r22, i121);

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Polygon tabRegion> = $r23;

        goto label11;

     label03:
        $r18 = newarray (int)[5];

        $i64 = i116 + i3;

        $r18[0] = $i64;

        $i65 = i116 + 2;

        $r18[1] = $i65;

        $r18[2] = i116;

        $r18[3] = i116;

        $i66 = i116 + i3;

        $r18[4] = $i66;

        $r19 = newarray (int)[5];

        $i67 = i117 + 1;

        $r19[0] = $i67;

        $i68 = i117 + 1;

        $r19[1] = $i68;

        $i69 = i117 + 3;

        $r19[2] = $i69;

        $i70 = i117 + i13;

        $i71 = $i70 - 2;

        $r19[3] = $i71;

        $i72 = i117 + i13;

        $i73 = $i72 - 2;

        $r19[4] = $i73;

        i122 = lengthof $r19;

        $r20 = new java.awt.Polygon;

        specialinvoke $r20.<java.awt.Polygon: void <init>(int[],int[],int)>($r18, $r19, i122);

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Polygon tabRegion> = $r20;

        goto label11;

     label04:
        if z0 == 0 goto label05;

        $r8 = newarray (int)[5];

        $r8[0] = i116;

        $i31 = i116 + i3;

        $i32 = $i31 - 1;

        $r8[1] = $i32;

        $i33 = i116 + i3;

        $r8[2] = $i33;

        $i34 = i116 + i3;

        $r8[3] = $i34;

        $r8[4] = i116;

        $r9 = newarray (int)[5];

        $i35 = i117 - 1;

        $r9[0] = $i35;

        $i36 = i117 - 1;

        $r9[1] = $i36;

        $i37 = i117 + 1;

        $r9[2] = $i37;

        $i38 = i117 + i13;

        $i39 = $i38 + 2;

        $r9[3] = $i39;

        $i40 = i117 + i13;

        $i41 = $i40 + 2;

        $r9[4] = $i41;

        i123 = lengthof $r9;

        $r10 = new java.awt.Polygon;

        specialinvoke $r10.<java.awt.Polygon: void <init>(int[],int[],int)>($r8, $r9, i123);

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Polygon tabRegion> = $r10;

        goto label11;

     label05:
        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i2 = virtualinvoke $r1.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i1 >= $i2 goto label06;

        i124 = i117 + 1;

        $r5 = newarray (int)[5];

        $r5[0] = i116;

        $i18 = i116 + i3;

        $i19 = $i18 - 3;

        $r5[1] = $i19;

        $i20 = i116 + i3;

        $i21 = $i20 - 1;

        $r5[2] = $i21;

        $i22 = i116 + i3;

        $i23 = $i22 - 1;

        $r5[3] = $i23;

        $r5[4] = i116;

        $r6 = newarray (int)[5];

        $i24 = i124 + 1;

        $r6[0] = $i24;

        $i25 = i124 + 1;

        $r6[1] = $i25;

        $i26 = i124 + 3;

        $r6[2] = $i26;

        $i27 = i124 + i13;

        $i28 = $i27 - 1;

        $r6[3] = $i28;

        $i29 = i124 + i13;

        $i30 = $i29 - 1;

        $r6[4] = $i30;

        i125 = lengthof $r6;

        $r7 = new java.awt.Polygon;

        specialinvoke $r7.<java.awt.Polygon: void <init>(int[],int[],int)>($r5, $r6, i125);

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Polygon tabRegion> = $r7;

        goto label11;

     label06:
        $r2 = newarray (int)[5];

        $r2[0] = i116;

        $i4 = i116 + i3;

        $i5 = $i4 - 2;

        $r2[1] = $i5;

        $i6 = i116 + i3;

        $i7 = $i6 - 1;

        $r2[2] = $i7;

        $i8 = i116 + i3;

        $i9 = $i8 - 1;

        $r2[3] = $i9;

        $r2[4] = i116;

        $r3 = newarray (int)[5];

        $i10 = i117 + 1;

        $r3[0] = $i10;

        $i11 = i117 + 1;

        $r3[1] = $i11;

        $i12 = i117 + 3;

        $r3[2] = $i12;

        $i14 = i117 + i13;

        $i15 = $i14 - 2;

        $r3[3] = $i15;

        $i16 = i117 + i13;

        $i17 = $i16 - 2;

        $r3[4] = $i17;

        i126 = lengthof $r3;

        $r4 = new java.awt.Polygon;

        specialinvoke $r4.<java.awt.Polygon: void <init>(int[],int[],int)>($r2, $r3, i126);

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Polygon tabRegion> = $r4;

        goto label11;

     label07:
        if z0 == 0 goto label08;

        $r14 = newarray (int)[5];

        $r14[0] = i116;

        $r14[1] = i116;

        $i54 = i116 + 2;

        $r14[2] = $i54;

        $i55 = i116 + i3;

        $i56 = $i55 + 2;

        $r14[3] = $i56;

        $i57 = i116 + i3;

        $i58 = $i57 + 2;

        $r14[4] = $i58;

        $r15 = newarray (int)[5];

        $i59 = i117 + i13;

        $r15[0] = $i59;

        $r15[1] = i117;

        $i60 = i117 - 2;

        $r15[2] = $i60;

        $i61 = i117 - 2;

        $r15[3] = $i61;

        $i62 = i117 + i13;

        $r15[4] = $i62;

        i127 = lengthof $r15;

        $r16 = new java.awt.Polygon;

        specialinvoke $r16.<java.awt.Polygon: void <init>(int[],int[],int)>($r14, $r15, i127);

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Polygon tabRegion> = $r16;

        goto label11;

     label08:
        $r11 = newarray (int)[5];

        $i42 = i116 + 1;

        $r11[0] = $i42;

        $i43 = i116 + 1;

        $r11[1] = $i43;

        $i44 = i116 + 1;

        $r11[2] = $i44;

        $i45 = i116 + i3;

        $i46 = $i45 - 1;

        $r11[3] = $i46;

        $i47 = i116 + i3;

        $i48 = $i47 - 1;

        $r11[4] = $i48;

        $r12 = newarray (int)[5];

        $i49 = i117 + i13;

        $i50 = $i49 - 1;

        $r12[0] = $i50;

        $i51 = i117 + 2;

        $r12[1] = $i51;

        $r12[2] = i117;

        $r12[3] = i117;

        $i52 = i117 + i13;

        $i53 = $i52 - 1;

        $r12[4] = $i53;

        i128 = lengthof $r12;

        $r13 = new java.awt.Polygon;

        specialinvoke $r13.<java.awt.Polygon: void <init>(int[],int[],int)>($r11, $r12, i128);

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Polygon tabRegion> = $r13;

        goto label11;

     label09:
        if z0 == 0 goto label10;

        $r30 = newarray (int)[5];

        $r30[0] = i116;

        $r30[1] = i116;

        $i105 = i116 + 2;

        $r30[2] = $i105;

        $i106 = i116 + i3;

        $i107 = $i106 + 2;

        $r30[3] = $i107;

        $i108 = i116 + i3;

        $i109 = $i108 + 2;

        $r30[4] = $i109;

        $r31 = newarray (int)[5];

        $i110 = i117 + i13;

        $i111 = $i110 + 1;

        $r31[0] = $i111;

        $r31[1] = i117;

        $i112 = i117 - 2;

        $r31[2] = $i112;

        $i113 = i117 - 2;

        $r31[3] = $i113;

        $i114 = i117 + i13;

        $i115 = $i114 + 1;

        $r31[4] = $i115;

        i129 = lengthof $r31;

        $r32 = new java.awt.Polygon;

        specialinvoke $r32.<java.awt.Polygon: void <init>(int[],int[],int)>($r30, $r31, i129);

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Polygon tabRegion> = $r32;

        goto label11;

     label10:
        $r27 = newarray (int)[5];

        $i95 = i116 + 1;

        $r27[0] = $i95;

        $i96 = i116 + 1;

        $r27[1] = $i96;

        $i97 = i116 + 3;

        $r27[2] = $i97;

        $i98 = i116 + i3;

        $i99 = $i98 - 1;

        $r27[3] = $i99;

        $i100 = i116 + i3;

        $i101 = $i100 - 1;

        $r27[4] = $i101;

        $r28 = newarray (int)[5];

        $i102 = i117 + i13;

        $r28[0] = $i102;

        $i103 = i117 + 2;

        $r28[1] = $i103;

        $r28[2] = i117;

        $r28[3] = i117;

        $i104 = i117 + i13;

        $r28[4] = $i104;

        i130 = lengthof $r28;

        $r29 = new java.awt.Polygon;

        specialinvoke $r29.<java.awt.Polygon: void <init>(int[],int[],int)>($r27, $r28, i130);

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Polygon tabRegion> = $r29;

     label11:
        return;
    }

    protected void paintTabBackgroundMouseOver(java.awt.Graphics, int, int, int, int, int, int, boolean, java.awt.Color, java.awt.Color)
    {
        java.awt.Color r7, r8;
        java.awt.Polygon $r6, $r11, $r14, $r18, $r21, $r24, r25, r26;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r2;
        com.jidesoft.swing.JideTabbedPane $r3, $r15;
        int[] $r4, $r5, $r9, $r10, $r12, $r13, $r16, $r17, $r19, $r20, $r22, $r23;
        boolean z0;
        java.awt.Graphics r0;
        java.awt.Graphics2D r1;
        int i0, i1, $i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, $i14, $i15, $i16, i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, i86, i87, i88, i89, i90, i91;

        r2 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        r0 := @parameter0: java.awt.Graphics;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i3 := @parameter3: int;

        i13 := @parameter4: int;

        i4 := @parameter5: int;

        i17 := @parameter6: int;

        z0 := @parameter7: boolean;

        r8 := @parameter8: java.awt.Color;

        r7 := @parameter9: java.awt.Color;

        r1 = (java.awt.Graphics2D) r0;

        tableswitch(i0)
        {
            case 1: goto label8;
            case 2: goto label1;
            case 3: goto label7;
            case 4: goto label4;
            default: goto label8;
        };

     label1:
        $r15 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i51 = virtualinvoke $r15.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i1 >= $i51 goto label2;

        $r19 = newarray (int)[6];

        $i65 = i3 + i4;

        $r19[0] = $i65;

        $i66 = i3 + 2;

        $r19[1] = $i66;

        $r19[2] = i3;

        $r19[3] = i3;

        $i67 = i3 + 2;

        $r19[4] = $i67;

        $i68 = i3 + i4;

        $r19[5] = $i68;

        $r20 = newarray (int)[6];

        $i69 = i13 + 2;

        $r20[0] = $i69;

        $i70 = i13 + 2;

        $r20[1] = $i70;

        $i71 = i13 + 4;

        $r20[2] = $i71;

        $i72 = i13 + i17;

        $i73 = $i72 - 1;

        $r20[3] = $i73;

        $i74 = i13 + i17;

        $r20[4] = $i74;

        $i75 = i13 + i17;

        $r20[5] = $i75;

        i87 = lengthof $r20;

        $r21 = new java.awt.Polygon;

        specialinvoke $r21.<java.awt.Polygon: void <init>(int[],int[],int)>($r19, $r20, i87);

        r25 = $r21;

        goto label3;

     label2:
        $r16 = newarray (int)[6];

        $i52 = i3 + i4;

        $r16[0] = $i52;

        $i53 = i3 + 2;

        $r16[1] = $i53;

        $r16[2] = i3;

        $r16[3] = i3;

        $i54 = i3 + 2;

        $r16[4] = $i54;

        $i55 = i3 + i4;

        $r16[5] = $i55;

        $r17 = newarray (int)[6];

        $i56 = i13 + 1;

        $r17[0] = $i56;

        $i57 = i13 + 1;

        $r17[1] = $i57;

        $i58 = i13 + 3;

        $r17[2] = $i58;

        $i59 = i13 + i17;

        $i60 = $i59 - 3;

        $r17[3] = $i60;

        $i61 = i13 + i17;

        $i62 = $i61 - 2;

        $r17[4] = $i62;

        $i63 = i13 + i17;

        $i64 = $i63 - 2;

        $r17[5] = $i64;

        i88 = lengthof $r17;

        $r18 = new java.awt.Polygon;

        specialinvoke $r18.<java.awt.Polygon: void <init>(int[],int[],int)>($r16, $r17, i88);

        r25 = $r18;

     label3:
        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void fillGradient(java.awt.Graphics2D,java.awt.Shape,java.awt.Color,java.awt.Color,boolean)>(r1, r25, r8, r7, 0);

        goto label9;

     label4:
        $r3 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i2 = virtualinvoke $r3.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i1 >= $i2 goto label5;

        $r9 = newarray (int)[6];

        $r9[0] = i3;

        $i24 = i3 + i4;

        $i25 = $i24 - 3;

        $r9[1] = $i25;

        $i26 = i3 + i4;

        $i27 = $i26 - 1;

        $r9[2] = $i27;

        $i28 = i3 + i4;

        $i29 = $i28 - 1;

        $r9[3] = $i29;

        $i30 = i3 + i4;

        $i31 = $i30 - 3;

        $r9[4] = $i31;

        $r9[5] = i3;

        $r10 = newarray (int)[6];

        $i32 = i13 + 2;

        $r10[0] = $i32;

        $i33 = i13 + 2;

        $r10[1] = $i33;

        $i34 = i13 + 4;

        $r10[2] = $i34;

        $i35 = i13 + i17;

        $i36 = $i35 - 1;

        $r10[3] = $i36;

        $i37 = i13 + i17;

        $r10[4] = $i37;

        $i38 = i13 + i17;

        $r10[5] = $i38;

        i89 = lengthof $r10;

        $r11 = new java.awt.Polygon;

        specialinvoke $r11.<java.awt.Polygon: void <init>(int[],int[],int)>($r9, $r10, i89);

        r26 = $r11;

        goto label6;

     label5:
        $r4 = newarray (int)[6];

        $r4[0] = i3;

        $i5 = i3 + i4;

        $i6 = $i5 - 2;

        $r4[1] = $i6;

        $i7 = i3 + i4;

        $i8 = $i7 - 1;

        $r4[2] = $i8;

        $i9 = i3 + i4;

        $i10 = $i9 - 1;

        $r4[3] = $i10;

        $i11 = i3 + i4;

        $i12 = $i11 - 3;

        $r4[4] = $i12;

        $r4[5] = i3;

        $r5 = newarray (int)[6];

        $i14 = i13 + 1;

        $r5[0] = $i14;

        $i15 = i13 + 1;

        $r5[1] = $i15;

        $i16 = i13 + 3;

        $r5[2] = $i16;

        $i18 = i13 + i17;

        $i19 = $i18 - 3;

        $r5[3] = $i19;

        $i20 = i13 + i17;

        $i21 = $i20 - 2;

        $r5[4] = $i21;

        $i22 = i13 + i17;

        $i23 = $i22 - 2;

        $r5[5] = $i23;

        i90 = lengthof $r5;

        $r6 = new java.awt.Polygon;

        specialinvoke $r6.<java.awt.Polygon: void <init>(int[],int[],int)>($r4, $r5, i90);

        r26 = $r6;

     label6:
        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void fillGradient(java.awt.Graphics2D,java.awt.Shape,java.awt.Color,java.awt.Color,boolean)>(r1, r26, r7, r8, 0);

        goto label9;

     label7:
        $r12 = newarray (int)[5];

        $i39 = i3 + 1;

        $r12[0] = $i39;

        $i40 = i3 + 1;

        $r12[1] = $i40;

        $i41 = i3 + 1;

        $r12[2] = $i41;

        $i42 = i3 + i4;

        $i43 = $i42 - 1;

        $r12[3] = $i43;

        $i44 = i3 + i4;

        $i45 = $i44 - 1;

        $r12[4] = $i45;

        $r13 = newarray (int)[5];

        $i46 = i13 + i17;

        $i47 = $i46 - 2;

        $r13[0] = $i47;

        $i48 = i13 + 2;

        $r13[1] = $i48;

        $r13[2] = i13;

        $r13[3] = i13;

        $i49 = i13 + i17;

        $i50 = $i49 - 2;

        $r13[4] = $i50;

        i91 = lengthof $r13;

        $r14 = new java.awt.Polygon;

        specialinvoke $r14.<java.awt.Polygon: void <init>(int[],int[],int)>($r12, $r13, i91);

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void fillGradient(java.awt.Graphics2D,java.awt.Shape,java.awt.Color,java.awt.Color,boolean)>(r1, $r14, r7, r8, 1);

        goto label9;

     label8:
        $r22 = newarray (int)[5];

        $i76 = i3 + 1;

        $r22[0] = $i76;

        $i77 = i3 + 1;

        $r22[1] = $i77;

        $i78 = i3 + 3;

        $r22[2] = $i78;

        $i79 = i3 + i4;

        $i80 = $i79 - 1;

        $r22[3] = $i80;

        $i81 = i3 + i4;

        $i82 = $i81 - 1;

        $r22[4] = $i82;

        $r23 = newarray (int)[5];

        $i83 = i13 + i17;

        $r23[0] = $i83;

        $i84 = i13 + 2;

        $r23[1] = $i84;

        $r23[2] = i13;

        $r23[3] = i13;

        $i85 = i13 + i17;

        $r23[4] = $i85;

        i86 = lengthof $r23;

        $r24 = new java.awt.Polygon;

        specialinvoke $r24.<java.awt.Polygon: void <init>(int[],int[],int)>($r22, $r23, i86);

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void fillGradient(java.awt.Graphics2D,java.awt.Shape,java.awt.Color,java.awt.Color,boolean)>(r1, $r24, r8, r7, 1);

     label9:
        return;
    }

    protected void paintVsnetTabBackground(java.awt.Graphics, int, int, int, int, int, int, boolean)
    {
        int[] $r0, $r1, $r3, $r4, $r5, $r6, $r7, $r8, r10, r11;
        boolean z0;
        java.awt.Graphics r9;
        java.awt.Polygon $r12;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r2;
        int i0, i1, i2, $i3, $i4, $i5, $i6, i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, i45, $i46;

        r2 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        r9 := @parameter0: java.awt.Graphics;

        i0 := @parameter1: int;

        i45 := @parameter2: int;

        i1 := @parameter3: int;

        i7 := @parameter4: int;

        i2 := @parameter5: int;

        i8 := @parameter6: int;

        z0 := @parameter7: boolean;

        tableswitch(i0)
        {
            case 1: goto label4;
            case 2: goto label1;
            case 3: goto label3;
            case 4: goto label2;
            default: goto label4;
        };

     label1:
        $r5 = newarray (int)[4];

        $i25 = i1 + 1;

        $r5[0] = $i25;

        $i26 = i1 + 1;

        $r5[1] = $i26;

        $i27 = i1 + i2;

        $r5[2] = $i27;

        $i28 = i1 + i2;

        $r5[3] = $i28;

        r10 = $r5;

        $r6 = newarray (int)[4];

        $i29 = i7 + i8;

        $i30 = $i29 - 1;

        $r6[0] = $i30;

        $i31 = i7 + 1;

        $r6[1] = $i31;

        $i32 = i7 + 1;

        $r6[2] = $i32;

        $i33 = i7 + i8;

        $i34 = $i33 - 1;

        $r6[3] = $i34;

        r11 = $r6;

        goto label5;

     label2:
        $r0 = newarray (int)[4];

        $r0[0] = i1;

        $r0[1] = i1;

        $i3 = i1 + i2;

        $i4 = $i3 - 1;

        $r0[2] = $i4;

        $i5 = i1 + i2;

        $i6 = $i5 - 1;

        $r0[3] = $i6;

        r10 = $r0;

        $r1 = newarray (int)[4];

        $i9 = i7 + i8;

        $i10 = $i9 - 1;

        $r1[0] = $i10;

        $i11 = i7 + 1;

        $r1[1] = $i11;

        $i12 = i7 + 1;

        $r1[2] = $i12;

        $i13 = i7 + i8;

        $i14 = $i13 - 1;

        $r1[3] = $i14;

        r11 = $r1;

        goto label5;

     label3:
        $r3 = newarray (int)[4];

        $i15 = i1 + 1;

        $r3[0] = $i15;

        $i16 = i1 + 1;

        $r3[1] = $i16;

        $i17 = i1 + i2;

        $i18 = $i17 - 1;

        $r3[2] = $i18;

        $i19 = i1 + i2;

        $i20 = $i19 - 1;

        $r3[3] = $i20;

        r10 = $r3;

        $r4 = newarray (int)[4];

        $i21 = i7 + i8;

        $i22 = $i21 - 1;

        $r4[0] = $i22;

        $r4[1] = i7;

        $r4[2] = i7;

        $i23 = i7 + i8;

        $i24 = $i23 - 1;

        $r4[3] = $i24;

        r11 = $r4;

        goto label5;

     label4:
        $r7 = newarray (int)[4];

        $i35 = i1 + 1;

        $r7[0] = $i35;

        $i36 = i1 + 1;

        $r7[1] = $i36;

        $i37 = i1 + i2;

        $i38 = $i37 - 1;

        $r7[2] = $i38;

        $i39 = i1 + i2;

        $i40 = $i39 - 1;

        $r7[3] = $i40;

        r10 = $r7;

        $r8 = newarray (int)[4];

        $i41 = i7 + i8;

        $r8[0] = $i41;

        $i42 = i7 + 1;

        $r8[1] = $i42;

        $i43 = i7 + 1;

        $r8[2] = $i43;

        $i44 = i7 + i8;

        $r8[3] = $i44;

        r11 = $r8;

     label5:
        $i46 = lengthof r11;

        $r12 = new java.awt.Polygon;

        specialinvoke $r12.<java.awt.Polygon: void <init>(int[],int[],int)>(r10, r11, $i46);

        r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Polygon tabRegion> = $r12;

        return;
    }

    protected void paintFlatTabBackground(java.awt.Graphics, int, int, int, int, int, int, boolean)
    {
        int[] $r0, $r1, $r4, $r5, $r7, $r8, $r10, $r11;
        boolean z0;
        java.awt.Graphics r13;
        java.awt.Polygon $r3, $r6, $r9, $r12;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r2;
        int i0, i1, i2, $i3, $i4, $i5, $i6, i7, i8, $i9, $i10, $i11, $i12, i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, i39, i40;

        r2 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        r13 := @parameter0: java.awt.Graphics;

        i0 := @parameter1: int;

        i40 := @parameter2: int;

        i1 := @parameter3: int;

        i7 := @parameter4: int;

        i2 := @parameter5: int;

        i8 := @parameter6: int;

        z0 := @parameter7: boolean;

        tableswitch(i0)
        {
            case 1: goto label4;
            case 2: goto label1;
            case 3: goto label3;
            case 4: goto label2;
            default: goto label4;
        };

     label1:
        $r7 = newarray (int)[4];

        $i23 = i1 + 1;

        $r7[0] = $i23;

        $i24 = i1 + 1;

        $r7[1] = $i24;

        $i25 = i1 + i2;

        $r7[2] = $i25;

        $i26 = i1 + i2;

        $r7[3] = $i26;

        $r8 = newarray (int)[4];

        $i27 = i7 + i8;

        $r8[0] = $i27;

        $i28 = i7 + 1;

        $r8[1] = $i28;

        $i29 = i7 + 1;

        $r8[2] = $i29;

        $i30 = i7 + i8;

        $r8[3] = $i30;

        i31 = lengthof $r8;

        $r9 = new java.awt.Polygon;

        specialinvoke $r9.<java.awt.Polygon: void <init>(int[],int[],int)>($r7, $r8, i31);

        r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Polygon tabRegion> = $r9;

        goto label5;

     label2:
        $r0 = newarray (int)[4];

        $r0[0] = i1;

        $r0[1] = i1;

        $i3 = i1 + i2;

        $i4 = $i3 - 1;

        $r0[2] = $i4;

        $i5 = i1 + i2;

        $i6 = $i5 - 1;

        $r0[3] = $i6;

        $r1 = newarray (int)[4];

        $i9 = i7 + i8;

        $r1[0] = $i9;

        $i10 = i7 + 1;

        $r1[1] = $i10;

        $i11 = i7 + 1;

        $r1[2] = $i11;

        $i12 = i7 + i8;

        $r1[3] = $i12;

        i13 = lengthof $r1;

        $r3 = new java.awt.Polygon;

        specialinvoke $r3.<java.awt.Polygon: void <init>(int[],int[],int)>($r0, $r1, i13);

        r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Polygon tabRegion> = $r3;

        goto label5;

     label3:
        $r4 = newarray (int)[4];

        $i14 = i1 + 1;

        $r4[0] = $i14;

        $i15 = i1 + 1;

        $r4[1] = $i15;

        $i16 = i1 + i2;

        $r4[2] = $i16;

        $i17 = i1 + i2;

        $r4[3] = $i17;

        $r5 = newarray (int)[4];

        $i18 = i7 + i8;

        $i19 = $i18 - 1;

        $r5[0] = $i19;

        $r5[1] = i7;

        $r5[2] = i7;

        $i20 = i7 + i8;

        $i21 = $i20 - 1;

        $r5[3] = $i21;

        i22 = lengthof $r5;

        $r6 = new java.awt.Polygon;

        specialinvoke $r6.<java.awt.Polygon: void <init>(int[],int[],int)>($r4, $r5, i22);

        r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Polygon tabRegion> = $r6;

        goto label5;

     label4:
        $r10 = newarray (int)[4];

        $r10[0] = i1;

        $i32 = i1 + 1;

        $r10[1] = $i32;

        $i33 = i1 + i2;

        $r10[2] = $i33;

        $i34 = i1 + i2;

        $r10[3] = $i34;

        $r11 = newarray (int)[4];

        $i35 = i7 + i8;

        $r11[0] = $i35;

        $i36 = i7 + 1;

        $r11[1] = $i36;

        $i37 = i7 + 1;

        $r11[2] = $i37;

        $i38 = i7 + i8;

        $r11[3] = $i38;

        i39 = lengthof $r11;

        $r12 = new java.awt.Polygon;

        specialinvoke $r12.<java.awt.Polygon: void <init>(int[],int[],int)>($r10, $r11, i39);

        r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Polygon tabRegion> = $r12;

     label5:
        return;
    }

    protected void paintButtonTabBackground(java.awt.Graphics, int, int, int, int, int, int, boolean)
    {
        java.awt.Polygon $r3;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r2;
        int[] $r0, $r1;
        int i0, i1, $i2, $i3, i4, i5, $i6, $i7, i8, i9, i10;
        boolean z0;
        java.awt.Graphics r4;

        r2 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        r4 := @parameter0: java.awt.Graphics;

        i9 := @parameter1: int;

        i10 := @parameter2: int;

        i0 := @parameter3: int;

        i4 := @parameter4: int;

        i1 := @parameter5: int;

        i5 := @parameter6: int;

        z0 := @parameter7: boolean;

        $r0 = newarray (int)[4];

        $r0[0] = i0;

        $r0[1] = i0;

        $i2 = i0 + i1;

        $r0[2] = $i2;

        $i3 = i0 + i1;

        $r0[3] = $i3;

        $r1 = newarray (int)[4];

        $i6 = i4 + i5;

        $r1[0] = $i6;

        $r1[1] = i4;

        $r1[2] = i4;

        $i7 = i4 + i5;

        $r1[3] = $i7;

        i8 = lengthof $r1;

        $r3 = new java.awt.Polygon;

        specialinvoke $r3.<java.awt.Polygon: void <init>(int[],int[],int)>($r0, $r1, i8);

        r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Polygon tabRegion> = $r3;

        return;
    }

    protected void paintContentBorder(java.awt.Graphics, int, int)
    {
        java.awt.Component $r12, $r13;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        com.jidesoft.swing.JideTabbedPane $r1, $r2, $r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        java.awt.Dimension $r5, $r6, r14, r15;
        java.awt.Graphics r7;
        java.awt.Rectangle $r8, $r9, $r10, $r11;
        java.awt.Insets $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i9, $i10, $i11, i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, i32, i33, i34, i35, i36, i37, $i38;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        r7 := @parameter0: java.awt.Graphics;

        i8 := @parameter1: int;

        i12 := @parameter2: int;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i0 = virtualinvoke $r1.<com.jidesoft.swing.JideTabbedPane: int getWidth()>();

        $r2 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i1 = virtualinvoke $r2.<com.jidesoft.swing.JideTabbedPane: int getHeight()>();

        $r3 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r4 = virtualinvoke $r3.<com.jidesoft.swing.JideTabbedPane: java.awt.Insets getInsets()>();

        i32 = $r4.<java.awt.Insets: int left>;

        i33 = $r4.<java.awt.Insets: int top>;

        $i2 = $r4.<java.awt.Insets: int right>;

        $i4 = $i0 - $i2;

        $i3 = $r4.<java.awt.Insets: int left>;

        i34 = $i4 - $i3;

        $i5 = $r4.<java.awt.Insets: int top>;

        $i7 = $i1 - $i5;

        $i6 = $r4.<java.awt.Insets: int bottom>;

        i35 = $i7 - $i6;

        $r5 = new java.awt.Dimension;

        specialinvoke $r5.<java.awt.Dimension: void <init>(int,int)>(0, 0);

        r14 = $r5;

        $r6 = new java.awt.Dimension;

        specialinvoke $r6.<java.awt.Dimension: void <init>(int,int)>(0, 0);

        r15 = $r6;

        $z0 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean isTabLeadingComponentVisible()>();

        if $z0 == 0 goto label01;

        $r13 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Component _tabLeadingComponent>;

        r14 = virtualinvoke $r13.<java.awt.Component: java.awt.Dimension getPreferredSize()>();

     label01:
        $z1 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean isTabTrailingComponentVisible()>();

        if $z1 == 0 goto label02;

        $r12 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Component _tabTrailingComponent>;

        r15 = virtualinvoke $r12.<java.awt.Component: java.awt.Dimension getPreferredSize()>();

     label02:
        tableswitch(i8)
        {
            case 1: goto label11;
            case 2: goto label03;
            case 3: goto label09;
            case 4: goto label07;
            default: goto label11;
        };

     label03:
        $i17 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _runCount>;

        $i16 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _maxTabWidth>;

        $i18 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int calculateTabAreaWidth(int,int,int)>(i8, $i17, $i16);

        i36 = $i18;

        $z4 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean isTabLeadingComponentVisible()>();

        if $z4 == 0 goto label04;

        $i23 = r14.<java.awt.Dimension: int width>;

        if $i23 <= $i18 goto label04;

        i36 = r14.<java.awt.Dimension: int width>;

     label04:
        $z6 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean isTabTrailingComponentVisible()>();

        if $z6 == 0 goto label05;

        $i22 = r15.<java.awt.Dimension: int width>;

        if $i22 <= i36 goto label05;

        i36 = r15.<java.awt.Dimension: int width>;

     label05:
        $z7 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean scrollableTabLayoutEnabled()>();

        if $z7 == 0 goto label06;

        $r10 = new java.awt.Rectangle;

        specialinvoke $r10.<java.awt.Rectangle: void <init>(int,int,int,int)>(i32, i33, i36, i35);

        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void paintTabAreaBackground(java.awt.Graphics,java.awt.Rectangle,int)>(r7, $r10, i8);

     label06:
        $i21 = i32 + i36;

        i32 = $i21;

        $i19 = $r4.<java.awt.Insets: int left>;

        $i20 = $i21 - $i19;

        i34 = i34 - $i20;

        goto label15;

     label07:
        $i10 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _runCount>;

        $i9 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _maxTabWidth>;

        $i11 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int calculateTabAreaWidth(int,int,int)>(i8, $i10, $i9);

        $z2 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean scrollableTabLayoutEnabled()>();

        if $z2 == 0 goto label08;

        $r8 = new java.awt.Rectangle;

        specialinvoke $r8.<java.awt.Rectangle: void <init>(int,int,int,int)>(i32, i33, $i11, i35);

        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void paintTabAreaBackground(java.awt.Graphics,java.awt.Rectangle,int)>(r7, $r8, i8);

     label08:
        i34 = i34 - $i11;

        goto label15;

     label09:
        $i14 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _runCount>;

        $i13 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _maxTabHeight>;

        $i15 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int calculateTabAreaHeight(int,int,int)>(i8, $i14, $i13);

        $z3 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean scrollableTabLayoutEnabled()>();

        if $z3 == 0 goto label10;

        $r9 = new java.awt.Rectangle;

        specialinvoke $r9.<java.awt.Rectangle: void <init>(int,int,int,int)>(i32, i33, i34, $i15);

        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void paintTabAreaBackground(java.awt.Graphics,java.awt.Rectangle,int)>(r7, $r9, i8);

     label10:
        i35 = i35 - $i15;

        goto label15;

     label11:
        $i25 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _runCount>;

        $i24 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _maxTabHeight>;

        $i26 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int calculateTabAreaHeight(int,int,int)>(i8, $i25, $i24);

        i37 = $i26;

        $z5 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean isTabLeadingComponentVisible()>();

        if $z5 == 0 goto label12;

        $i31 = r14.<java.awt.Dimension: int height>;

        if $i31 <= $i26 goto label12;

        i37 = r14.<java.awt.Dimension: int height>;

     label12:
        $z8 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean isTabTrailingComponentVisible()>();

        if $z8 == 0 goto label13;

        $i30 = r15.<java.awt.Dimension: int height>;

        if i37 >= $i30 goto label13;

        i37 = r15.<java.awt.Dimension: int height>;

     label13:
        $z9 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean scrollableTabLayoutEnabled()>();

        if $z9 == 0 goto label14;

        $r11 = new java.awt.Rectangle;

        specialinvoke $r11.<java.awt.Rectangle: void <init>(int,int,int,int)>(i32, i33, i34, i37);

        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void paintTabAreaBackground(java.awt.Graphics,java.awt.Rectangle,int)>(r7, $r11, i8);

     label14:
        $i29 = i33 + i37;

        i33 = $i29;

        $i27 = $r4.<java.awt.Insets: int top>;

        $i28 = $i29 - $i27;

        i35 = i35 - $i28;

     label15:
        $i38 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getTabShape()>();

        if $i38 == 3 goto label20;

        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void paintContentBorder(java.awt.Graphics,int,int,int,int)>(r7, i32, i33, i34, i35);

        tableswitch(i8)
        {
            case 1: goto label19;
            case 2: goto label16;
            case 3: goto label18;
            case 4: goto label17;
            default: goto label19;
        };

     label16:
        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void paintContentBorderLeftEdge(java.awt.Graphics,int,int,int,int,int,int)>(r7, i8, i12, i32, i33, i34, i35);

        goto label20;

     label17:
        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void paintContentBorderRightEdge(java.awt.Graphics,int,int,int,int,int,int)>(r7, i8, i12, i32, i33, i34, i35);

        goto label20;

     label18:
        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void paintContentBorderBottomEdge(java.awt.Graphics,int,int,int,int,int,int)>(r7, i8, i12, i32, i33, i34, i35);

        goto label20;

     label19:
        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void paintContentBorderTopEdge(java.awt.Graphics,int,int,int,int,int,int)>(r7, i8, i12, i32, i33, i34, i35);

     label20:
        return;
    }

    protected void paintContentBorderLeftEdge(java.awt.Graphics, int, int, int, int, int, int)
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        java.awt.Graphics r1;
        int i0, i1, i2, i3, i4, i5;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        r1 := @parameter0: java.awt.Graphics;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        i5 := @parameter6: int;

        return;
    }

    protected void paintContentBorderRightEdge(java.awt.Graphics, int, int, int, int, int, int)
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        java.awt.Graphics r1;
        int i0, i1, i2, i3, i4, i5;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        r1 := @parameter0: java.awt.Graphics;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        i5 := @parameter6: int;

        return;
    }

    protected void paintContentBorder(java.awt.Graphics, int, int, int, int)
    {
        com.jidesoft.swing.JideTabbedPane $r1;
        java.awt.Color $r3;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        java.awt.Graphics r2;
        int i0, i1, i2, i3;
        boolean $z0;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        r2 := @parameter0: java.awt.Graphics;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z0 = virtualinvoke $r1.<com.jidesoft.swing.JideTabbedPane: boolean isOpaque()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _tabBackground>;

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r3);

        virtualinvoke r2.<java.awt.Graphics: void fillRect(int,int,int,int)>(i0, i1, i2, i3);

     label1:
        return;
    }

    protected java.awt.Color getBorderEdgeColor()
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r2;
        java.awt.Color $r3, $r4;
        java.lang.String $r0, $r1;
        boolean $z0;

        r2 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        $r0 = "true";

        $r1 = staticinvoke <com.jidesoft.utils.SecurityUtils: java.lang.String getProperty(java.lang.String,java.lang.String)>("shadingtheme", "false");

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $r4 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _shadow>;

        return $r4;

     label1:
        $r3 = r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _lightHighlight>;

        return $r3;
    }

    protected void paintContentBorderTopEdge(java.awt.Graphics, int, int, int, int, int, int)
    {
        java.awt.Color $r5, $r6, $r7, $r8, $r10, $r11, $r12;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        com.jidesoft.swing.JideTabbedPane $r1, $r9;
        boolean $z0, $z1;
        java.awt.Graphics r4;
        java.awt.Rectangle $r2, $r3;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, i53, $i54, $i55;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        r4 := @parameter0: java.awt.Graphics;

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        i53 := @parameter6: int;

        if i0 >= 0 goto label01;

        return;

     label01:
        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z0 = virtualinvoke $r1.<com.jidesoft.swing.JideTabbedPane: boolean isTabShown()>();

        if $z0 != 0 goto label02;

        return;

     label02:
        $r2 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle _calcRect>;

        $r3 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle getTabBounds(int,java.awt.Rectangle)>(i0, $r2);

        $r5 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color getBorderEdgeColor()>();

        virtualinvoke r4.<java.awt.Graphics: void setColor(java.awt.Color)>($r5);

        if i1 != 1 goto label03;

        if i0 < 0 goto label03;

        $i5 = $r3.<java.awt.Rectangle: int x>;

        if $i5 < i2 goto label03;

        $i7 = $r3.<java.awt.Rectangle: int x>;

        $i6 = i2 + i4;

        if $i7 <= $i6 goto label04;

     label03:
        $i54 = i2 + i4;

        $i55 = $i54 - 1;

        virtualinvoke r4.<java.awt.Graphics: void drawLine(int,int,int,int)>(i2, i3, $i55, i3);

        goto label10;

     label04:
        $i8 = $r3.<java.awt.Rectangle: int x>;

        virtualinvoke r4.<java.awt.Graphics: void drawLine(int,int,int,int)>(i2, i3, $i8, i3);

        $r6 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color getBorderEdgeColor()>();

        $r7 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _lightHighlight>;

        $z1 = virtualinvoke $r6.<java.awt.Color: boolean equals(java.lang.Object)>($r7);

        if $z1 != 0 goto label06;

        $i32 = $r3.<java.awt.Rectangle: int x>;

        $i31 = $r3.<java.awt.Rectangle: int width>;

        $i35 = $i32 + $i31;

        $i33 = i2 + i4;

        $i34 = $i33 - 2;

        if $i35 >= $i34 goto label05;

        $i41 = $r3.<java.awt.Rectangle: int x>;

        $i40 = $r3.<java.awt.Rectangle: int width>;

        $i42 = $i41 + $i40;

        $i47 = $i42 - 1;

        $i44 = $r3.<java.awt.Rectangle: int x>;

        $i43 = $r3.<java.awt.Rectangle: int width>;

        $i45 = $i44 + $i43;

        $i46 = $i45 - 1;

        virtualinvoke r4.<java.awt.Graphics: void drawLine(int,int,int,int)>($i47, i3, $i46, i3);

        $i49 = $r3.<java.awt.Rectangle: int x>;

        $i48 = $r3.<java.awt.Rectangle: int width>;

        $i52 = $i49 + $i48;

        $i50 = i2 + i4;

        $i51 = $i50 - 1;

        virtualinvoke r4.<java.awt.Graphics: void drawLine(int,int,int,int)>($i52, i3, $i51, i3);

        goto label10;

     label05:
        $i36 = i2 + i4;

        $i39 = $i36 - 2;

        $i37 = i2 + i4;

        $i38 = $i37 - 1;

        virtualinvoke r4.<java.awt.Graphics: void drawLine(int,int,int,int)>($i39, i3, $i38, i3);

        goto label10;

     label06:
        $i10 = $r3.<java.awt.Rectangle: int x>;

        $i9 = $r3.<java.awt.Rectangle: int width>;

        $i13 = $i10 + $i9;

        $i11 = i2 + i4;

        $i12 = $i11 - 2;

        if $i13 >= $i12 goto label07;

        $r10 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _darkShadow>;

        virtualinvoke r4.<java.awt.Graphics: void setColor(java.awt.Color)>($r10);

        $i19 = $r3.<java.awt.Rectangle: int x>;

        $i18 = $r3.<java.awt.Rectangle: int width>;

        $i20 = $i19 + $i18;

        $i25 = $i20 - 1;

        $i22 = $r3.<java.awt.Rectangle: int x>;

        $i21 = $r3.<java.awt.Rectangle: int width>;

        $i23 = $i22 + $i21;

        $i24 = $i23 - 1;

        virtualinvoke r4.<java.awt.Graphics: void drawLine(int,int,int,int)>($i25, i3, $i24, i3);

        $r11 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _lightHighlight>;

        virtualinvoke r4.<java.awt.Graphics: void setColor(java.awt.Color)>($r11);

        $i27 = $r3.<java.awt.Rectangle: int x>;

        $i26 = $r3.<java.awt.Rectangle: int width>;

        $i30 = $i27 + $i26;

        $i28 = i2 + i4;

        $i29 = $i28 - 1;

        virtualinvoke r4.<java.awt.Graphics: void drawLine(int,int,int,int)>($i30, i3, $i29, i3);

        goto label10;

     label07:
        $r8 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectedColor>;

        if $r8 != null goto label08;

        $r9 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r12 = virtualinvoke $r9.<com.jidesoft.swing.JideTabbedPane: java.awt.Color getBackground()>();

        goto label09;

     label08:
        $r12 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectedColor>;

     label09:
        virtualinvoke r4.<java.awt.Graphics: void setColor(java.awt.Color)>($r12);

        $i14 = i2 + i4;

        $i17 = $i14 - 2;

        $i15 = i2 + i4;

        $i16 = $i15 - 1;

        virtualinvoke r4.<java.awt.Graphics: void drawLine(int,int,int,int)>($i17, i3, $i16, i3);

     label10:
        return;
    }

    protected void paintContentBorderBottomEdge(java.awt.Graphics, int, int, int, int, int, int)
    {
        java.awt.Color $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        com.jidesoft.swing.JideTabbedPane $r1;
        boolean $z0, $z1;
        java.awt.Graphics r4;
        java.awt.Rectangle $r2, $r3;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        r4 := @parameter0: java.awt.Graphics;

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i5 := @parameter5: int;

        i4 := @parameter6: int;

        if i0 >= 0 goto label1;

        return;

     label1:
        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z0 = virtualinvoke $r1.<com.jidesoft.swing.JideTabbedPane: boolean isTabShown()>();

        if $z0 != 0 goto label2;

        return;

     label2:
        $r2 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle _calcRect>;

        $r3 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle getTabBounds(int,java.awt.Rectangle)>(i0, $r2);

        if i1 != 3 goto label3;

        if i0 < 0 goto label3;

        $i6 = $r3.<java.awt.Rectangle: int x>;

        if $i6 < i2 goto label3;

        $i8 = $r3.<java.awt.Rectangle: int x>;

        $i7 = i2 + i5;

        if $i8 <= $i7 goto label4;

     label3:
        $r11 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color getBorderEdgeColor()>();

        virtualinvoke r4.<java.awt.Graphics: void setColor(java.awt.Color)>($r11);

        $i63 = i3 + i4;

        $i64 = $i63 - 1;

        $i65 = i2 + i5;

        $i66 = $i65 - 2;

        $i67 = i3 + i4;

        $i68 = $i67 - 1;

        virtualinvoke r4.<java.awt.Graphics: void drawLine(int,int,int,int)>(i2, $i64, $i66, $i68);

        goto label6;

     label4:
        $r5 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color getBorderEdgeColor()>();

        $r6 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _lightHighlight>;

        $z1 = virtualinvoke $r5.<java.awt.Color: boolean equals(java.lang.Object)>($r6);

        if $z1 != 0 goto label5;

        $r10 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color getBorderEdgeColor()>();

        virtualinvoke r4.<java.awt.Graphics: void setColor(java.awt.Color)>($r10);

        $i36 = i3 + i4;

        $i41 = $i36 - 1;

        $i37 = $r3.<java.awt.Rectangle: int x>;

        $i40 = $i37 - 1;

        $i38 = i3 + i4;

        $i39 = $i38 - 1;

        virtualinvoke r4.<java.awt.Graphics: void drawLine(int,int,int,int)>(i2, $i41, $i40, $i39);

        $i47 = $r3.<java.awt.Rectangle: int x>;

        $i42 = i3 + i4;

        $i46 = $i42 - 1;

        $i45 = $r3.<java.awt.Rectangle: int x>;

        $i43 = i3 + i4;

        $i44 = $i43 - 1;

        virtualinvoke r4.<java.awt.Graphics: void drawLine(int,int,int,int)>($i47, $i46, $i45, $i44);

        $i49 = $r3.<java.awt.Rectangle: int x>;

        $i48 = $r3.<java.awt.Rectangle: int width>;

        $i52 = $i49 + $i48;

        $i50 = i2 + i5;

        $i51 = $i50 - 2;

        if $i52 >= $i51 goto label6;

        $i54 = $r3.<java.awt.Rectangle: int x>;

        $i53 = $r3.<java.awt.Rectangle: int width>;

        $i55 = $i54 + $i53;

        $i62 = $i55 - 1;

        $i56 = i3 + i4;

        $i61 = $i56 - 1;

        $i57 = i2 + i5;

        $i60 = $i57 - 2;

        $i58 = i3 + i4;

        $i59 = $i58 - 1;

        virtualinvoke r4.<java.awt.Graphics: void drawLine(int,int,int,int)>($i62, $i61, $i60, $i59);

        goto label6;

     label5:
        $r7 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _darkShadow>;

        virtualinvoke r4.<java.awt.Graphics: void setColor(java.awt.Color)>($r7);

        $i9 = i3 + i4;

        $i14 = $i9 - 1;

        $i10 = $r3.<java.awt.Rectangle: int x>;

        $i13 = $i10 - 1;

        $i11 = i3 + i4;

        $i12 = $i11 - 1;

        virtualinvoke r4.<java.awt.Graphics: void drawLine(int,int,int,int)>(i2, $i14, $i13, $i12);

        $r8 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _lightHighlight>;

        virtualinvoke r4.<java.awt.Graphics: void setColor(java.awt.Color)>($r8);

        $i20 = $r3.<java.awt.Rectangle: int x>;

        $i15 = i3 + i4;

        $i19 = $i15 - 1;

        $i18 = $r3.<java.awt.Rectangle: int x>;

        $i16 = i3 + i4;

        $i17 = $i16 - 1;

        virtualinvoke r4.<java.awt.Graphics: void drawLine(int,int,int,int)>($i20, $i19, $i18, $i17);

        $i22 = $r3.<java.awt.Rectangle: int x>;

        $i21 = $r3.<java.awt.Rectangle: int width>;

        $i25 = $i22 + $i21;

        $i23 = i2 + i5;

        $i24 = $i23 - 2;

        if $i25 >= $i24 goto label6;

        $r9 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _darkShadow>;

        virtualinvoke r4.<java.awt.Graphics: void setColor(java.awt.Color)>($r9);

        $i27 = $r3.<java.awt.Rectangle: int x>;

        $i26 = $r3.<java.awt.Rectangle: int width>;

        $i28 = $i27 + $i26;

        $i35 = $i28 - 1;

        $i29 = i3 + i4;

        $i34 = $i29 - 1;

        $i30 = i2 + i5;

        $i33 = $i30 - 2;

        $i31 = i3 + i4;

        $i32 = $i31 - 1;

        virtualinvoke r4.<java.awt.Graphics: void drawLine(int,int,int,int)>($i35, $i34, $i33, $i32);

     label6:
        return;
    }

    protected void ensureCurrentLayout()
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        com.jidesoft.swing.JideTabbedPane $r1, $r2;
        java.awt.LayoutManager $r3;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabbedPaneLayout r4;
        boolean $z0;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z0 = virtualinvoke $r1.<com.jidesoft.swing.JideTabbedPane: boolean isValid()>();

        if $z0 != 0 goto label1;

        $r2 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r3 = virtualinvoke $r2.<com.jidesoft.swing.JideTabbedPane: java.awt.LayoutManager getLayout()>();

        r4 = (com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabbedPaneLayout) $r3;

        virtualinvoke r4.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabbedPaneLayout: void calculateLayoutInfo()>();

     label1:
        return;
    }

    private void updateCloseButtons()
    {
        java.awt.Color $r27, $r29, $r100;
        com.jidesoft.swing.JideTabbedPane$NoFocusButton $r36;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        java.awt.ComponentOrientation $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $i105, $i106, $i107, $i108, $i109, $i110, $i111, $i112, $i113, $i114, $i115, $i116, $i117, i118;
        javax.swing.JButton[] $r3, $r7, $r20, $r24, $r28, $r32, $r34, $r90, $r92, $r95, $r98;
        java.awt.Rectangle[] $r5, $r12, $r14, $r16, $r18, $r38, $r40, $r42, $r47, $r49, $r51, $r54, $r56, $r58, $r62, $r64, $r66, $r69, $r71, $r73, $r75, $r82, $r84, $r86, $r88;
        javax.swing.JButton $r8, $r21, $r26, $r30, $r33, $r35, $r91, $r93, $r96, $r99;
        com.jidesoft.swing.JideTabbedPane $r1, $r4, $r6, $r10, $r23, $r25, $r31, $r44, $r45, $r60, $r77, $r78, $r79, $r80, $r94;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.awt.Dimension $r9;
        java.awt.Rectangle $r11, $r13, $r15, $r17, $r19, $r22, $r37, $r39, $r41, $r43, $r46, $r48, $r50, $r52, $r53, $r55, $r57, $r59, $r61, $r63, $r65, $r67, $r68, $r70, $r72, $r74, $r76, $r81, $r83, $r85, $r87, $r89, r97;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r2 = virtualinvoke $r1.<com.jidesoft.swing.JideTabbedPane: java.awt.ComponentOrientation getComponentOrientation()>();

        $z0 = virtualinvoke $r2.<java.awt.ComponentOrientation: boolean isLeftToRight()>();

        $z1 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean scrollableTabLayoutEnabled()>();

        if $z1 == 0 goto label21;

        $z2 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean isShowCloseButton()>();

        if $z2 == 0 goto label21;

        $z3 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean isShowCloseButtonOnTab()>();

        if $z3 == 0 goto label21;

        i118 = 0;

     label01:
        $r3 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.JButton[] _closeButtons>;

        $i0 = lengthof $r3;

        if i118 >= $i0 goto label21;

        $r4 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z4 = virtualinvoke $r4.<com.jidesoft.swing.JideTabbedPane: boolean isShowCloseButtonOnSelectedTab()>();

        if $z4 == 0 goto label02;

        $r94 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i117 = virtualinvoke $r94.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i118 == $i117 goto label03;

        $r95 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.JButton[] _closeButtons>;

        $r96 = $r95[i118];

        virtualinvoke $r96.<javax.swing.JButton: void setBounds(int,int,int,int)>(0, 0, 0, 0);

        goto label20;

     label02:
        $r5 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $i1 = lengthof $r5;

        if i118 < $i1 goto label03;

        $r92 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.JButton[] _closeButtons>;

        $r93 = $r92[i118];

        virtualinvoke $r93.<javax.swing.JButton: void setBounds(int,int,int,int)>(0, 0, 0, 0);

        goto label20;

     label03:
        $r6 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z5 = virtualinvoke $r6.<com.jidesoft.swing.JideTabbedPane: boolean isTabClosableAt(int)>(i118);

        if $z5 != 0 goto label04;

        $r90 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.JButton[] _closeButtons>;

        $r91 = $r90[i118];

        virtualinvoke $r91.<javax.swing.JButton: void setBounds(int,int,int,int)>(0, 0, 0, 0);

        goto label20;

     label04:
        $r7 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.JButton[] _closeButtons>;

        $r8 = $r7[i118];

        $r9 = virtualinvoke $r8.<javax.swing.JButton: java.awt.Dimension getPreferredSize()>();

        $i2 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _closeButtonAlignment>;

        if $i2 != 11 goto label09;

        $r60 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i61 = virtualinvoke $r60.<com.jidesoft.swing.JideTabbedPane: int getTabPlacement()>();

        if $i61 == 1 goto label05;

        $r80 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i98 = virtualinvoke $r80.<com.jidesoft.swing.JideTabbedPane: int getTabPlacement()>();

        if $i98 != 3 goto label08;

     label05:
        if $z0 == 0 goto label07;

        $r68 = new java.awt.Rectangle;

        $r69 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r70 = $r69[i118];

        $i76 = $r70.<java.awt.Rectangle: int x>;

        $r71 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r72 = $r71[i118];

        $i75 = $r72.<java.awt.Rectangle: int width>;

        $i78 = $i76 + $i75;

        $i77 = $r9.<java.awt.Dimension: int width>;

        $i80 = $i78 - $i77;

        $i79 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _closeButtonRightMargin>;

        $i89 = $i80 - $i79;

        $r73 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r74 = $r73[i118];

        $i85 = $r74.<java.awt.Rectangle: int y>;

        $r75 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r76 = $r75[i118];

        $i82 = $r76.<java.awt.Rectangle: int height>;

        $i81 = $r9.<java.awt.Dimension: int height>;

        $i83 = $i82 - $i81;

        $i84 = $i83 / 2;

        $i88 = $i85 + $i84;

        $i87 = $r9.<java.awt.Dimension: int width>;

        $i86 = $r9.<java.awt.Dimension: int height>;

        specialinvoke $r68.<java.awt.Rectangle: void <init>(int,int,int,int)>($i89, $i88, $i87, $i86);

        r97 = $r68;

        $i90 = $r68.<java.awt.Rectangle: int x>;

        $i91 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getTabGap()>();

        $i92 = $i90 - $i91;

        $r68.<java.awt.Rectangle: int x> = $i92;

        $r77 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i93 = virtualinvoke $r77.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i118 <= $i93 goto label14;

        $r78 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i94 = virtualinvoke $r78.<com.jidesoft.swing.JideTabbedPane: int getTabShape()>();

        if 9 == $i94 goto label06;

        $r79 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i97 = virtualinvoke $r79.<com.jidesoft.swing.JideTabbedPane: int getTabShape()>();

        if 2 != $i97 goto label14;

     label06:
        $i95 = $r68.<java.awt.Rectangle: int x>;

        $i96 = $i95 - 1;

        $r68.<java.awt.Rectangle: int x> = $i96;

        goto label14;

     label07:
        $r61 = new java.awt.Rectangle;

        $r62 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r63 = $r62[i118];

        $i63 = $r63.<java.awt.Rectangle: int x>;

        $i62 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _closeButtonLeftMargin>;

        $i64 = $i63 + $i62;

        $i65 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getTabGap()>();

        $i74 = $i64 + $i65;

        $r64 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r65 = $r64[i118];

        $i70 = $r65.<java.awt.Rectangle: int y>;

        $r66 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r67 = $r66[i118];

        $i67 = $r67.<java.awt.Rectangle: int height>;

        $i66 = $r9.<java.awt.Dimension: int height>;

        $i68 = $i67 - $i66;

        $i69 = $i68 / 2;

        $i73 = $i70 + $i69;

        $i72 = $r9.<java.awt.Dimension: int width>;

        $i71 = $r9.<java.awt.Dimension: int height>;

        specialinvoke $r61.<java.awt.Rectangle: void <init>(int,int,int,int)>($i74, $i73, $i72, $i71);

        r97 = $r61;

        goto label14;

     label08:
        $r81 = new java.awt.Rectangle;

        $r82 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r83 = $r82[i118];

        $i103 = $r83.<java.awt.Rectangle: int x>;

        $r84 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r85 = $r84[i118];

        $i100 = $r85.<java.awt.Rectangle: int width>;

        $i99 = $r9.<java.awt.Dimension: int width>;

        $i101 = $i100 - $i99;

        $i102 = $i101 / 2;

        $i113 = $i103 + $i102;

        $r86 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r87 = $r86[i118];

        $i105 = $r87.<java.awt.Rectangle: int y>;

        $r88 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r89 = $r88[i118];

        $i104 = $r89.<java.awt.Rectangle: int height>;

        $i107 = $i105 + $i104;

        $i106 = $r9.<java.awt.Dimension: int height>;

        $i109 = $i107 - $i106;

        $i108 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _closeButtonRightMargin>;

        $i112 = $i109 - $i108;

        $i111 = $r9.<java.awt.Dimension: int width>;

        $i110 = $r9.<java.awt.Dimension: int height>;

        specialinvoke $r81.<java.awt.Rectangle: void <init>(int,int,int,int)>($i113, $i112, $i111, $i110);

        r97 = $r81;

        $i114 = $r81.<java.awt.Rectangle: int y>;

        $i115 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getTabGap()>();

        $i116 = $i114 - $i115;

        $r81.<java.awt.Rectangle: int y> = $i116;

        goto label14;

     label09:
        $r10 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i3 = virtualinvoke $r10.<com.jidesoft.swing.JideTabbedPane: int getTabPlacement()>();

        if $i3 == 1 goto label10;

        $r44 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i36 = virtualinvoke $r44.<com.jidesoft.swing.JideTabbedPane: int getTabPlacement()>();

        if $i36 != 3 goto label12;

     label10:
        if $z0 == 0 goto label11;

        $r37 = new java.awt.Rectangle;

        $r38 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r39 = $r38[i118];

        $i24 = $r39.<java.awt.Rectangle: int x>;

        $i23 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _closeButtonLeftMargin>;

        $i25 = $i24 + $i23;

        $i26 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getTabGap()>();

        $i35 = $i25 + $i26;

        $r40 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r41 = $r40[i118];

        $i31 = $r41.<java.awt.Rectangle: int y>;

        $r42 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r43 = $r42[i118];

        $i28 = $r43.<java.awt.Rectangle: int height>;

        $i27 = $r9.<java.awt.Dimension: int height>;

        $i29 = $i28 - $i27;

        $i30 = $i29 / 2;

        $i34 = $i31 + $i30;

        $i33 = $r9.<java.awt.Dimension: int width>;

        $i32 = $r9.<java.awt.Dimension: int height>;

        specialinvoke $r37.<java.awt.Rectangle: void <init>(int,int,int,int)>($i35, $i34, $i33, $i32);

        r97 = $r37;

        goto label14;

     label11:
        $r11 = new java.awt.Rectangle;

        $r12 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r13 = $r12[i118];

        $i5 = $r13.<java.awt.Rectangle: int x>;

        $r14 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r15 = $r14[i118];

        $i4 = $r15.<java.awt.Rectangle: int width>;

        $i7 = $i5 + $i4;

        $i6 = $r9.<java.awt.Dimension: int width>;

        $i9 = $i7 - $i6;

        $i8 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _closeButtonRightMargin>;

        $i18 = $i9 - $i8;

        $r16 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r17 = $r16[i118];

        $i14 = $r17.<java.awt.Rectangle: int y>;

        $r18 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r19 = $r18[i118];

        $i11 = $r19.<java.awt.Rectangle: int height>;

        $i10 = $r9.<java.awt.Dimension: int height>;

        $i12 = $i11 - $i10;

        $i13 = $i12 / 2;

        $i17 = $i14 + $i13;

        $i16 = $r9.<java.awt.Dimension: int width>;

        $i15 = $r9.<java.awt.Dimension: int height>;

        specialinvoke $r11.<java.awt.Rectangle: void <init>(int,int,int,int)>($i18, $i17, $i16, $i15);

        r97 = $r11;

        $i19 = $r11.<java.awt.Rectangle: int x>;

        $i20 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getTabGap()>();

        $i21 = $i19 - $i20;

        $r11.<java.awt.Rectangle: int x> = $i21;

        goto label14;

     label12:
        $r45 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i37 = virtualinvoke $r45.<com.jidesoft.swing.JideTabbedPane: int getTabPlacement()>();

        if $i37 != 2 goto label13;

        $r53 = new java.awt.Rectangle;

        $r54 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r55 = $r54[i118];

        $i54 = $r55.<java.awt.Rectangle: int x>;

        $r56 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r57 = $r56[i118];

        $i51 = $r57.<java.awt.Rectangle: int width>;

        $i50 = $r9.<java.awt.Dimension: int width>;

        $i52 = $i51 - $i50;

        $i53 = $i52 / 2;

        $i60 = $i54 + $i53;

        $r58 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r59 = $r58[i118];

        $i56 = $r59.<java.awt.Rectangle: int y>;

        $i55 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _closeButtonLeftMargin>;

        $i59 = $i56 + $i55;

        $i58 = $r9.<java.awt.Dimension: int width>;

        $i57 = $r9.<java.awt.Dimension: int height>;

        specialinvoke $r53.<java.awt.Rectangle: void <init>(int,int,int,int)>($i60, $i59, $i58, $i57);

        r97 = $r53;

        goto label14;

     label13:
        $r46 = new java.awt.Rectangle;

        $r47 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r48 = $r47[i118];

        $i42 = $r48.<java.awt.Rectangle: int x>;

        $r49 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r50 = $r49[i118];

        $i39 = $r50.<java.awt.Rectangle: int width>;

        $i38 = $r9.<java.awt.Dimension: int width>;

        $i40 = $i39 - $i38;

        $i41 = $i40 / 2;

        $i43 = $i42 + $i41;

        $i49 = $i43 - 2;

        $r51 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r52 = $r51[i118];

        $i45 = $r52.<java.awt.Rectangle: int y>;

        $i44 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _closeButtonLeftMargin>;

        $i48 = $i45 + $i44;

        $i47 = $r9.<java.awt.Dimension: int width>;

        $i46 = $r9.<java.awt.Dimension: int height>;

        specialinvoke $r46.<java.awt.Rectangle: void <init>(int,int,int,int)>($i49, $i48, $i47, $i46);

        r97 = $r46;

     label14:
        $r98 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.JButton[] _closeButtons>;

        $r99 = $r98[i118];

        $z7 = $r99 instanceof com.jidesoft.swing.JideTabbedPane$NoFocusButton;

        if $z7 == 0 goto label15;

        $r34 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.JButton[] _closeButtons>;

        $r35 = $r34[i118];

        $r36 = (com.jidesoft.swing.JideTabbedPane$NoFocusButton) $r35;

        virtualinvoke $r36.<com.jidesoft.swing.JideTabbedPane$NoFocusButton: void setIndex(int)>(i118);

     label15:
        $r20 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.JButton[] _closeButtons>;

        $r21 = $r20[i118];

        $r22 = virtualinvoke $r21.<javax.swing.JButton: java.awt.Rectangle getBounds()>();

        $z6 = virtualinvoke r97.<java.awt.Rectangle: boolean equals(java.lang.Object)>($r22);

        if $z6 != 0 goto label16;

        $r32 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.JButton[] _closeButtons>;

        $r33 = $r32[i118];

        virtualinvoke $r33.<javax.swing.JButton: void setBounds(java.awt.Rectangle)>(r97);

     label16:
        $r23 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i22 = virtualinvoke $r23.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if $i22 != i118 goto label19;

        $r28 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.JButton[] _closeButtons>;

        $r30 = $r28[i118];

        $r29 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectedColor>;

        if $r29 != null goto label17;

        $r31 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r100 = virtualinvoke $r31.<com.jidesoft.swing.JideTabbedPane: java.awt.Color getBackgroundAt(int)>(i118);

        goto label18;

     label17:
        $r100 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _selectedColor>;

     label18:
        virtualinvoke $r30.<javax.swing.JButton: void setBackground(java.awt.Color)>($r100);

        goto label20;

     label19:
        $r24 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.JButton[] _closeButtons>;

        $r26 = $r24[i118];

        $r25 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r27 = virtualinvoke $r25.<com.jidesoft.swing.JideTabbedPane: java.awt.Color getBackgroundAt(int)>(i118);

        virtualinvoke $r26.<javax.swing.JButton: void setBackground(java.awt.Color)>($r27);

     label20:
        i118 = i118 + 1;

        goto label01;

     label21:
        return;
    }

    public java.awt.Rectangle getTabBounds(javax.swing.JTabbedPane, int)
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        java.awt.Rectangle $r1, $r2;
        javax.swing.JTabbedPane r3;
        int i0;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        r3 := @parameter0: javax.swing.JTabbedPane;

        i0 := @parameter1: int;

        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void ensureCurrentLayout()>();

        $r1 = new java.awt.Rectangle;

        specialinvoke $r1.<java.awt.Rectangle: void <init>()>();

        $r2 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle getTabBounds(int,java.awt.Rectangle)>(i0, $r1);

        return $r2;
    }

    public int getTabRunCount(javax.swing.JTabbedPane)
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        int $i0;
        javax.swing.JTabbedPane r1;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        r1 := @parameter0: javax.swing.JTabbedPane;

        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void ensureCurrentLayout()>();

        $i0 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _runCount>;

        return $i0;
    }

    public int tabForCoordinate(javax.swing.JTabbedPane, int, int)
    {
        com.jidesoft.swing.JideTabbedPane $r2, $r3, $r4, $r5, $r7, $r11, $r13, $r18, $r20;
        java.awt.Point $r22;
        boolean $z0, $z1, z2, z3, $z4, $z5, $z6, $z7, $z8, $z11, $z12, $z13, $z14;
        java.awt.Component $r8, $r12, $r14, r16;
        java.awt.Rectangle $r10, $r15, $r17;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        java.awt.Rectangle[] $r9;
        javax.swing.JTabbedPane r21;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19, i20, i21, $i23, $i25, $i27, $i29;
        java.awt.Component[] $r6;
        java.awt.ComponentOrientation $r19;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        r21 := @parameter0: javax.swing.JTabbedPane;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void ensureCurrentLayout()>();

        $r22 = new java.awt.Point;

        specialinvoke $r22.<java.awt.Point: void <init>(int,int)>(i0, i1);

        $r2 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z0 = virtualinvoke $r2.<com.jidesoft.swing.JideTabbedPane: boolean isShowTabArea()>();

        if $z0 != 0 goto label01;

        $i23 = (int) -1;

        return $i23;

     label01:
        $z1 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean scrollableTabLayoutEnabled()>();

        if $z1 == 0 goto label02;

        specialinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Point translatePointToTabPanel(int,int,java.awt.Point)>(i0, i1, $r22);

     label02:
        $r3 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i2 = virtualinvoke $r3.<com.jidesoft.swing.JideTabbedPane: int getTabCount()>();

        $r4 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i3 = virtualinvoke $r4.<com.jidesoft.swing.JideTabbedPane: int getTabPlacement()>();

        if $i3 == 1 goto label03;

        $r20 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i17 = virtualinvoke $r20.<com.jidesoft.swing.JideTabbedPane: int getTabPlacement()>();

        if $i17 != 3 goto label04;

     label03:
        $z14 = 1;

        $z13 = 1;

        goto label05;

     label04:
        $z14 = 0;

        $z13 = 0;

     label05:
        z2 = $z14;

        if $z13 == 0 goto label06;

        $r18 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r19 = virtualinvoke $r18.<com.jidesoft.swing.JideTabbedPane: java.awt.ComponentOrientation getComponentOrientation()>();

        $z8 = virtualinvoke $r19.<java.awt.ComponentOrientation: boolean isLeftToRight()>();

        if $z8 != 0 goto label06;

        $z12 = 1;

        $z11 = 1;

        goto label07;

     label06:
        $z12 = 0;

        $z11 = 0;

     label07:
        z3 = $z11;

        if $z12 == 0 goto label08;

        $i18 = 0;

        goto label09;

     label08:
        $i18 = 2147483647;

     label09:
        i19 = $i18;

        $r5 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r6 = virtualinvoke $r5.<com.jidesoft.swing.JideTabbedPane: java.awt.Component[] getComponents()>();

        $i16 = lengthof $r6;

        i20 = 0;

     label10:
        if i20 >= $i16 goto label14;

        r16 = $r6[i20];

        $z6 = r16 instanceof com.jidesoft.swing.JideTabbedPane$NoFocusButton;

        if $z6 == 0 goto label13;

        $z7 = virtualinvoke r16.<java.awt.Component: boolean isVisible()>();

        if $z7 == 0 goto label13;

        $r17 = virtualinvoke r16.<java.awt.Component: java.awt.Rectangle getBounds()>();

        if z2 == 0 goto label12;

        $i13 = $r17.<java.awt.Rectangle: int x>;

        if $i13 == 0 goto label12;

        if z3 == 0 goto label11;

        $i15 = $r17.<java.awt.Rectangle: int x>;

        i19 = staticinvoke <java.lang.Math: int max(int,int)>(i19, $i15);

        goto label13;

     label11:
        $i14 = $r17.<java.awt.Rectangle: int x>;

        i19 = staticinvoke <java.lang.Math: int min(int,int)>(i19, $i14);

        goto label13;

     label12:
        if z2 != 0 goto label13;

        $i11 = $r17.<java.awt.Rectangle: int y>;

        if $i11 == 0 goto label13;

        $i12 = $r17.<java.awt.Rectangle: int y>;

        i19 = staticinvoke <java.lang.Math: int min(int,int)>(i19, $i12);

     label13:
        i20 = i20 + 1;

        goto label10;

     label14:
        $r7 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r8 = virtualinvoke $r7.<com.jidesoft.swing.JideTabbedPane: java.awt.Component getTabTrailingComponent()>();

        if $r8 == null goto label17;

        $r11 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r12 = virtualinvoke $r11.<com.jidesoft.swing.JideTabbedPane: java.awt.Component getTabTrailingComponent()>();

        $z5 = virtualinvoke $r12.<java.awt.Component: boolean isVisible()>();

        if $z5 == 0 goto label17;

        $r13 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r14 = virtualinvoke $r13.<com.jidesoft.swing.JideTabbedPane: java.awt.Component getTabTrailingComponent()>();

        $r15 = virtualinvoke $r14.<java.awt.Component: java.awt.Rectangle getBounds()>();

        if z2 == 0 goto label16;

        $i8 = $r15.<java.awt.Rectangle: int x>;

        if $i8 == 0 goto label16;

        if z3 == 0 goto label15;

        $i10 = $r15.<java.awt.Rectangle: int x>;

        i19 = staticinvoke <java.lang.Math: int max(int,int)>(i19, $i10);

        goto label17;

     label15:
        $i9 = $r15.<java.awt.Rectangle: int x>;

        i19 = staticinvoke <java.lang.Math: int min(int,int)>(i19, $i9);

        goto label17;

     label16:
        if z2 != 0 goto label17;

        $i6 = $r15.<java.awt.Rectangle: int y>;

        if $i6 == 0 goto label17;

        $i7 = $r15.<java.awt.Rectangle: int y>;

        i19 = staticinvoke <java.lang.Math: int min(int,int)>(i19, $i7);

     label17:
        if z2 == 0 goto label20;

        if z3 == 0 goto label18;

        if i0 <= i19 goto label19;

     label18:
        if z3 != 0 goto label21;

        if i0 < i19 goto label21;

     label19:
        $i25 = (int) -1;

        return $i25;

     label20:
        if i1 < i19 goto label21;

        $i27 = (int) -1;

        return $i27;

     label21:
        i21 = 0;

     label22:
        if i21 >= $i2 goto label24;

        $r9 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r10 = $r9[i21];

        $i5 = $r22.<java.awt.Point: int x>;

        $i4 = $r22.<java.awt.Point: int y>;

        $z4 = virtualinvoke $r10.<java.awt.Rectangle: boolean contains(int,int)>($i5, $i4);

        if $z4 == 0 goto label23;

        return i21;

     label23:
        i21 = i21 + 1;

        goto label22;

     label24:
        $i29 = (int) -1;

        return $i29;
    }

    protected java.awt.Rectangle getTabBounds(int, java.awt.Rectangle)
    {
        com.jidesoft.swing.JideTabbedPane $r12, $r21;
        java.awt.Point $r15, $r18;
        boolean $z0, $z1;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport $r13, $r16;
        java.awt.Rectangle r3, $r5, $r7, $r9, $r11, $r20, $r25;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        java.awt.Rectangle[] $r1, $r2, $r4, $r6, $r8, $r10, $r19, $r23, $r24;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20;
        java.awt.ComponentOrientation $r22;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabViewport $r14, $r17;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        i12 := @parameter0: int;

        r3 := @parameter1: java.awt.Rectangle;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        return null;

     label1:
        $r2 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $i1 = lengthof $r2;

        $i2 = $i1 - 1;

        if i12 <= $i2 goto label2;

        $r23 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $i11 = lengthof $r23;

        i12 = $i11 - 1;

     label2:
        if i12 >= 0 goto label3;

        i12 = 0;

     label3:
        $r4 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r5 = $r4[i12];

        $i3 = $r5.<java.awt.Rectangle: int width>;

        r3.<java.awt.Rectangle: int width> = $i3;

        $r6 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r7 = $r6[i12];

        $i4 = $r7.<java.awt.Rectangle: int height>;

        r3.<java.awt.Rectangle: int height> = $i4;

        $z0 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean scrollableTabLayoutEnabled()>();

        if $z0 == 0 goto label7;

        $r12 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i7 = virtualinvoke $r12.<com.jidesoft.swing.JideTabbedPane: int getTabPlacement()>();

        $r13 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport _tabScroller>;

        $r14 = $r13.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabViewport viewport>;

        $r15 = virtualinvoke $r14.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabViewport: java.awt.Point getLocation()>();

        $r16 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport _tabScroller>;

        $r17 = $r16.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabViewport viewport>;

        $r18 = virtualinvoke $r17.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabViewport: java.awt.Point getViewPosition()>();

        $r19 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r20 = $r19[i12];

        $i9 = $r20.<java.awt.Rectangle: int x>;

        $i8 = $r15.<java.awt.Point: int x>;

        $i13 = $i9 + $i8;

        if $i7 == 1 goto label4;

        if $i7 != 3 goto label5;

     label4:
        $r21 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r22 = virtualinvoke $r21.<com.jidesoft.swing.JideTabbedPane: java.awt.ComponentOrientation getComponentOrientation()>();

        $z1 = virtualinvoke $r22.<java.awt.ComponentOrientation: boolean isLeftToRight()>();

        if $z1 != 0 goto label5;

        $i10 = $r18.<java.awt.Point: int x>;

        $i14 = neg $i10;

        goto label6;

     label5:
        $i14 = $r18.<java.awt.Point: int x>;

     label6:
        $i15 = $i13 - $i14;

        r3.<java.awt.Rectangle: int x> = $i15;

        $r24 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r25 = $r24[i12];

        $i16 = $r25.<java.awt.Rectangle: int y>;

        $i17 = $r15.<java.awt.Point: int y>;

        $i18 = $i16 + $i17;

        $i19 = $r18.<java.awt.Point: int y>;

        $i20 = $i18 - $i19;

        r3.<java.awt.Rectangle: int y> = $i20;

        goto label8;

     label7:
        $r8 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r9 = $r8[i12];

        $i5 = $r9.<java.awt.Rectangle: int x>;

        r3.<java.awt.Rectangle: int x> = $i5;

        $r10 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r11 = $r10[i12];

        $i6 = $r11.<java.awt.Rectangle: int y>;

        r3.<java.awt.Rectangle: int y> = $i6;

     label8:
        return r3;
    }

    public int getTabAtLocation(int, int)
    {
        com.jidesoft.swing.JideTabbedPane $r1;
        java.awt.Rectangle $r3;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        java.awt.Rectangle[] $r2;
        int $i0, i1, i2, i3, $i5;
        boolean $z0;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        i1 := @parameter0: int;

        i2 := @parameter1: int;

        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void ensureCurrentLayout()>();

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i0 = virtualinvoke $r1.<com.jidesoft.swing.JideTabbedPane: int getTabCount()>();

        i3 = 0;

     label1:
        if i3 >= $i0 goto label3;

        $r2 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r3 = $r2[i3];

        $z0 = virtualinvoke $r3.<java.awt.Rectangle: boolean contains(int,int)>(i1, i2);

        if $z0 == 0 goto label2;

        return i3;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        $i5 = (int) -1;

        return $i5;
    }

    public boolean isEmptyTabArea(int, int)
    {
        com.jidesoft.swing.JideTabbedPane $r1, $r2;
        java.awt.Rectangle $r5, $r6, $r9, $r10;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        java.awt.Rectangle[] $r3, $r4, $r7, $r8;
        int $i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean $z0, $z1;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        i1 := @parameter0: int;

        i2 := @parameter1: int;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i0 = virtualinvoke $r1.<com.jidesoft.swing.JideTabbedPane: int getTabCount()>();

        $i3 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getTabAtLocation(int,int)>(i1, i2);

        if $i3 >= 0 goto label1;

        if $i0 > 0 goto label2;

     label1:
        return 0;

     label2:
        $r2 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i4 = virtualinvoke $r2.<com.jidesoft.swing.JideTabbedPane: int getTabPlacement()>();

        if $i4 == 1 goto label3;

        if $i4 != 3 goto label4;

     label3:
        $r3 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r6 = $r3[0];

        $r4 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r5 = $r4[0];

        $i5 = $r5.<java.awt.Rectangle: int x>;

        $i6 = $i5 + 1;

        $z0 = virtualinvoke $r6.<java.awt.Rectangle: boolean contains(int,int)>($i6, i2);

        if $z0 == 0 goto label5;

        return 1;

     label4:
        $r7 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r10 = $r7[0];

        $r8 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r9 = $r8[0];

        $i7 = $r9.<java.awt.Rectangle: int y>;

        $i8 = $i7 + 1;

        $z1 = virtualinvoke $r10.<java.awt.Rectangle: boolean contains(int,int)>(i1, $i8);

        if $z1 == 0 goto label5;

        return 1;

     label5:
        return 0;
    }

    private int getClosestTab(int, int)
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        java.awt.Rectangle[] $r1, $r4, $r5, $r6, $r13, $r15, $r16, $r18, $r20;
        java.awt.ComponentOrientation $r12;
        com.jidesoft.swing.JideTabbedPane $r2, $r3, $r11;
        boolean z0, $z1, z3, $z4, $z5, z6, z7, z8, z9;
        java.awt.Rectangle $r7, $r8, $r9, $r10, $r14, $r17, $r19;
        int $i0, $i1, $i2, $i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, i34, i35, i36, $i37, i38, i39, i40, i41, $i42, $i43, $i44, $i45;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        i34 := @parameter0: int;

        i4 := @parameter1: int;

        i35 = 0;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $i0 = lengthof $r1;

        $r2 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i1 = virtualinvoke $r2.<com.jidesoft.swing.JideTabbedPane: int getTabCount()>();

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        i36 = $i2;

        $r3 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i3 = virtualinvoke $r3.<com.jidesoft.swing.JideTabbedPane: int getTabPlacement()>();

        if $i3 == 1 goto label01;

        if $i3 != 3 goto label02;

     label01:
        $z5 = 1;

        $z4 = 1;

        goto label03;

     label02:
        $z5 = 0;

        $z4 = 0;

     label03:
        z0 = $z4;

        if $z5 == 0 goto label04;

        $i37 = i34;

        goto label05;

     label04:
        $i37 = i4;

     label05:
        i5 = $i37;

        $r4 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $i6 = lengthof $r4;

        $r20 = newarray (java.awt.Rectangle)[$i6];

        z3 = 0;

        z9 = 0;

        z8 = 0;

        z7 = 0;

        z6 = 0;

        if z0 == 0 goto label06;

        $r11 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r12 = virtualinvoke $r11.<com.jidesoft.swing.JideTabbedPane: java.awt.ComponentOrientation getComponentOrientation()>();

        $z1 = virtualinvoke $r12.<java.awt.ComponentOrientation: boolean isLeftToRight()>();

        if $z1 == 0 goto label07;

     label06:
        $r6 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r5 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $i7 = lengthof $r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, $r20, 0, $i7);

        goto label10;

     label07:
        z3 = 1;

        z9 = 1;

        z8 = 1;

        z7 = 1;

        z6 = 1;

        i38 = 0;

     label08:
        $r13 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $i25 = lengthof $r13;

        if i38 >= $i25 goto label10;

        $r14 = new java.awt.Rectangle;

        $r16 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r15 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $i26 = lengthof $r15;

        $i27 = $i26 - 1;

        $i28 = $i27 - i38;

        $r17 = $r16[$i28];

        specialinvoke $r14.<java.awt.Rectangle: void <init>(java.awt.Rectangle)>($r17);

        $r20[i38] = $r14;

        $r18 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $i29 = lengthof $r18;

        $i30 = $i29 - 1;

        if i38 != $i30 goto label09;

        $r19 = $r20[i38];

        $i32 = $r19.<java.awt.Rectangle: int width>;

        $i31 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _additionalWidth>;

        $i33 = $i32 + $i31;

        $r19.<java.awt.Rectangle: int width> = $i33;

     label09:
        i38 = i38 + 1;

        goto label08;

     label10:
        if i35 == i36 goto label22;

        $i10 = i36 + i35;

        i39 = $i10 >> 1;

        if z0 == 0 goto label11;

        $r9 = $r20[i39];

        i40 = $r9.<java.awt.Rectangle: int x>;

        $r10 = $r20[i39];

        $i24 = $r10.<java.awt.Rectangle: int width>;

        i41 = i40 + $i24;

        goto label12;

     label11:
        $r7 = $r20[i39];

        i40 = $r7.<java.awt.Rectangle: int y>;

        $r8 = $r20[i39];

        $i11 = $r8.<java.awt.Rectangle: int height>;

        i41 = i40 + $i11;

     label12:
        if i5 >= i40 goto label15;

        i36 = i39;

        if i35 != i39 goto label21;

        $i20 = i39 - 1;

        $i21 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i20);

        if z9 == 0 goto label13;

        $i22 = lengthof $r20;

        $i23 = $i22 - 1;

        $i42 = $i23 - $i21;

        goto label14;

     label13:
        $i42 = $i21;

     label14:
        return $i42;

     label15:
        if i5 < i41 goto label18;

        i35 = i39;

        $i14 = i36 - i39;

        if $i14 > 1 goto label21;

        $i16 = i39 + 1;

        $i15 = $i2 - 1;

        $i17 = staticinvoke <java.lang.Math: int max(int,int)>($i16, $i15);

        if z7 == 0 goto label16;

        $i18 = lengthof $r20;

        $i19 = $i18 - 1;

        $i43 = $i19 - $i17;

        goto label17;

     label16:
        $i43 = $i17;

     label17:
        return $i43;

     label18:
        if z8 == 0 goto label19;

        $i12 = lengthof $r20;

        $i13 = $i12 - 1;

        $i44 = $i13 - i39;

        goto label20;

     label19:
        $i44 = i39;

     label20:
        return $i44;

     label21:
        goto label10;

     label22:
        if z6 == 0 goto label23;

        $i8 = lengthof $r20;

        $i9 = $i8 - 1;

        $i45 = $i9 - i35;

        goto label24;

     label23:
        $i45 = i35;

     label24:
        return $i45;
    }

    private java.awt.Point translatePointToTabPanel(int, int, java.awt.Point)
    {
        java.awt.Point $r3, $r6, r7;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        int i0, $i1, $i2, $i3, $i4, i5, $i6, $i7, $i8, $i9;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport $r1, $r4;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabViewport $r2, $r5;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        i0 := @parameter0: int;

        i5 := @parameter1: int;

        r7 := @parameter2: java.awt.Point;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport _tabScroller>;

        $r2 = $r1.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabViewport viewport>;

        $r3 = virtualinvoke $r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabViewport: java.awt.Point getLocation()>();

        $r4 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport _tabScroller>;

        $r5 = $r4.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabViewport viewport>;

        $r6 = virtualinvoke $r5.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabViewport: java.awt.Point getViewPosition()>();

        $i1 = $r3.<java.awt.Point: int x>;

        $i3 = i0 - $i1;

        $i2 = $r6.<java.awt.Point: int x>;

        $i4 = $i3 + $i2;

        r7.<java.awt.Point: int x> = $i4;

        $i6 = $r3.<java.awt.Point: int y>;

        $i8 = i5 - $i6;

        $i7 = $r6.<java.awt.Point: int y>;

        $i9 = $i8 + $i7;

        r7.<java.awt.Point: int y> = $i9;

        return r7;
    }

    protected java.awt.Component getVisibleComponent()
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        java.awt.Component $r1;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Component visibleComponent>;

        return $r1;
    }

    protected void setVisibleComponent(java.awt.Component)
    {
        com.jidesoft.swing.JideTabbedPane $r6;
        java.awt.Component $r1, r2, $r3, $r4, $r7;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        java.awt.Container $r5;
        boolean $z0;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        r2 := @parameter0: java.awt.Component;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Component visibleComponent>;

        if $r1 == null goto label1;

        $r3 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Component visibleComponent>;

        if $r3 == r2 goto label1;

        $r4 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Component visibleComponent>;

        $r5 = virtualinvoke $r4.<java.awt.Component: java.awt.Container getParent()>();

        $r6 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        if $r5 != $r6 goto label1;

        $r7 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Component visibleComponent>;

        virtualinvoke $r7.<java.awt.Component: void setVisible(boolean)>(0);

     label1:
        if r2 == null goto label2;

        $z0 = virtualinvoke r2.<java.awt.Component: boolean isVisible()>();

        if $z0 != 0 goto label2;

        virtualinvoke r2.<java.awt.Component: void setVisible(boolean)>(1);

     label2:
        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Component visibleComponent> = r2;

        return;
    }

    protected void assureRectsCreated(int)
    {
        java.awt.Rectangle $r4;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        java.awt.Rectangle[] $r1, r2, $r3, $r5;
        int i0, i1, $i2, i3;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        i1 := @parameter0: int;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        i0 = lengthof $r1;

        if i1 == i0 goto label2;

        r2 = newarray (java.awt.Rectangle)[i1];

        $r3 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>(i0, i1);

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, r2, 0, $i2);

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects> = r2;

        i3 = i0;

     label1:
        if i3 >= i1 goto label2;

        $r5 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r4 = new java.awt.Rectangle;

        specialinvoke $r4.<java.awt.Rectangle: void <init>()>();

        $r5[i3] = $r4;

        i3 = i3 + 1;

        goto label1;

     label2:
        return;
    }

    protected void expandTabRunsArray()
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        int[] $r1, r2, $r3;
        int i0, $i1, $i2;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int[] _tabRuns>;

        i0 = lengthof $r1;

        $i1 = i0 + 10;

        r2 = newarray (int)[$i1];

        $r3 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int[] _tabRuns>;

        $i2 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _runCount>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, r2, 0, $i2);

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int[] _tabRuns> = r2;

        return;
    }

    protected int getRunForTab(int, int)
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        int[] $r1;
        int $i0, i1, i2, $i3, i4, i5;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        i2 := @parameter0: int;

        i4 := @parameter1: int;

        i5 = 0;

     label1:
        $i0 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _runCount>;

        if i5 >= $i0 goto label3;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int[] _tabRuns>;

        i1 = $r1[i5];

        $i3 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int lastTabInRun(int,int)>(i2, i5);

        if i4 < i1 goto label2;

        if i4 > $i3 goto label2;

        return i5;

     label2:
        i5 = i5 + 1;

        goto label1;

     label3:
        return 0;
    }

    protected int lastTabInRun(int, int)
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        int[] $r1, $r2;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, i7, $i8, $i9, $i10;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        i7 := @parameter0: int;

        i1 := @parameter1: int;

        $i0 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _runCount>;

        if $i0 != 1 goto label1;

        $i9 = i7 - 1;

        return $i9;

     label1:
        $i2 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _runCount>;

        $i3 = $i2 - 1;

        if i1 != $i3 goto label2;

        $i10 = 0;

        goto label3;

     label2:
        $i10 = i1 + 1;

     label3:
        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int[] _tabRuns>;

        $i4 = $r1[$i10];

        if $i4 != 0 goto label4;

        $i8 = i7 - 1;

        return $i8;

     label4:
        $r2 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int[] _tabRuns>;

        $i5 = $r2[$i10];

        $i6 = $i5 - 1;

        return $i6;
    }

    protected int getTabRunOverlay(int)
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        int $i0, i1;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        i1 := @parameter0: int;

        $i0 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _tabRunOverlay>;

        return $i0;
    }

    protected int getTabRunIndent(int, int)
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        int i0, i1;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return 0;
    }

    protected boolean shouldPadTabRun(int, int)
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        int $i0, i1, i2;
        boolean $z0;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        i1 := @parameter0: int;

        i2 := @parameter1: int;

        $i0 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _runCount>;

        if $i0 <= 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    protected boolean shouldRotateTabRuns(int)
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        int i0;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        i0 := @parameter0: int;

        return 1;
    }

    protected javax.swing.text.View getTextViewForTab(int)
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        java.util.Vector $r1, $r2, $r3;
        int i0, $i1;
        javax.swing.text.View $r5;
        java.lang.Object $r4;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        i0 := @parameter0: int;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.util.Vector htmlViews>;

        if $r1 == null goto label1;

        $r2 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.util.Vector htmlViews>;

        $i1 = virtualinvoke $r2.<java.util.Vector: int size()>();

        if i0 >= $i1 goto label1;

        $r3 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.util.Vector htmlViews>;

        $r4 = virtualinvoke $r3.<java.util.Vector: java.lang.Object elementAt(int)>(i0);

        $r5 = (javax.swing.text.View) $r4;

        return $r5;

     label1:
        return null;
    }

    protected int calculateTabHeight(int, int, java.awt.FontMetrics)
    {
        java.awt.Component $r24;
        javax.swing.text.View $r1, $r9;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        java.lang.String $r11;
        javax.swing.JButton $r16, $r20;
        java.awt.FontMetrics r2;
        com.jidesoft.swing.JideTabbedPane $r3, $r6, $r10, $r12, $r13, $r14, $r18, $r23;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        javax.swing.Icon $r4, $r7;
        java.awt.Dimension $r17, $r21, $r22;
        float $f0, $f1;
        java.awt.Insets $r5, $r8;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, i29, i30, i31, i32;
        javax.swing.JButton[] $r15, $r19;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r2 := @parameter2: java.awt.FontMetrics;

        $z0 = staticinvoke <com.jidesoft.utils.SystemInfo: boolean isJdk6Above()>();

        if $z0 == 0 goto label01;

        $r23 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r24 = virtualinvoke $r23.<com.jidesoft.swing.JideTabbedPane: java.awt.Component getTabComponentAt(int)>(i1);

        goto label02;

     label01:
        $r24 = null;

     label02:
        if $r24 == null goto label03;

        $r22 = virtualinvoke $r24.<java.awt.Component: java.awt.Dimension getPreferredSize()>();

        i29 = $r22.<java.awt.Dimension: int height>;

        return i29;

     label03:
        if i0 == 1 goto label04;

        if i0 != 3 goto label08;

     label04:
        $r1 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.text.View getTextViewForTab(int)>(i1);

        if $r1 == null goto label05;

        $f0 = virtualinvoke $r1.<javax.swing.text.View: float getPreferredSpan(int)>(1);

        $i8 = (int) $f0;

        i30 = 0 + $i8;

        goto label06;

     label05:
        $i2 = virtualinvoke r2.<java.awt.FontMetrics: int getHeight()>();

        i30 = 0 + $i2;

     label06:
        $r3 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r4 = virtualinvoke $r3.<com.jidesoft.swing.JideTabbedPane: javax.swing.Icon getIconForTab(int)>(i1);

        $r5 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Insets getTabInsets(int,int)>(i0, i1);

        if $r4 == null goto label07;

        $i7 = interfaceinvoke $r4.<javax.swing.Icon: int getIconHeight()>();

        i30 = staticinvoke <java.lang.Math: int max(int,int)>(i30, $i7);

     label07:
        $i4 = $r5.<java.awt.Insets: int top>;

        $i3 = $r5.<java.awt.Insets: int bottom>;

        $i5 = $i4 + $i3;

        $i6 = $i5 + 2;

        i31 = i30 + $i6;

        goto label14;

     label08:
        $r6 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r7 = virtualinvoke $r6.<com.jidesoft.swing.JideTabbedPane: javax.swing.Icon getIconForTab(int)>(i1);

        $r8 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Insets getTabInsets(int,int)>(i0, i1);

        $i10 = $r8.<java.awt.Insets: int top>;

        $i9 = $r8.<java.awt.Insets: int bottom>;

        $i11 = $i10 + $i9;

        i32 = $i11 + 3;

        if $r7 == null goto label09;

        $i26 = interfaceinvoke $r7.<javax.swing.Icon: int getIconHeight()>();

        $i27 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _textIconGap>;

        $i28 = $i26 + $i27;

        i32 = i32 + $i28;

     label09:
        $r9 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.text.View getTextViewForTab(int)>(i1);

        if $r9 == null goto label10;

        $f1 = virtualinvoke $r9.<javax.swing.text.View: float getPreferredSpan(int)>(0);

        $i25 = (int) $f1;

        i31 = i32 + $i25;

        goto label11;

     label10:
        $r10 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r11 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.lang.String getCurrentDisplayTitleAt(com.jidesoft.swing.JideTabbedPane,int)>($r10, i1);

        $i12 = staticinvoke <javax.swing.SwingUtilities: int computeStringWidth(java.awt.FontMetrics,java.lang.String)>(r2, $r11);

        i31 = i32 + $i12;

     label11:
        $r12 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z1 = virtualinvoke $r12.<com.jidesoft.swing.JideTabbedPane: boolean isShowGripper()>();

        if $z1 == 0 goto label12;

        $i24 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _gripperHeight>;

        i31 = i31 + $i24;

     label12:
        $z2 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean scrollableTabLayoutEnabled()>();

        if $z2 == 0 goto label14;

        $z3 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean isShowCloseButton()>();

        if $z3 == 0 goto label14;

        $z4 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean isShowCloseButtonOnTab()>();

        if $z4 == 0 goto label14;

        $r13 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z5 = virtualinvoke $r13.<com.jidesoft.swing.JideTabbedPane: boolean isTabClosableAt(int)>(i1);

        if $z5 == 0 goto label14;

        $r14 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z6 = virtualinvoke $r14.<com.jidesoft.swing.JideTabbedPane: boolean isShowCloseButtonOnSelectedTab()>();

        if $z6 == 0 goto label13;

        $r18 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i18 = virtualinvoke $r18.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if $i18 != i1 goto label14;

        $r19 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.JButton[] _closeButtons>;

        $r20 = $r19[i1];

        $r21 = virtualinvoke $r20.<javax.swing.JButton: java.awt.Dimension getPreferredSize()>();

        $i20 = $r21.<java.awt.Dimension: int height>;

        $i19 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _closeButtonRightMargin>;

        $i22 = $i20 + $i19;

        $i21 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _closeButtonLeftMargin>;

        $i23 = $i22 + $i21;

        i31 = i31 + $i23;

        goto label14;

     label13:
        $r15 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.JButton[] _closeButtons>;

        $r16 = $r15[i1];

        $r17 = virtualinvoke $r16.<javax.swing.JButton: java.awt.Dimension getPreferredSize()>();

        $i14 = $r17.<java.awt.Dimension: int height>;

        $i13 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _closeButtonRightMargin>;

        $i16 = $i14 + $i13;

        $i15 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _closeButtonLeftMargin>;

        $i17 = $i16 + $i15;

        i31 = i31 + $i17;

     label14:
        return i31;
    }

    protected int calculateMaxTabHeight(int)
    {
        com.jidesoft.swing.JideTabbedPane $r1;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        java.awt.FontMetrics $r2;
        int $i0, i1, $i2, i3, i4;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        i1 := @parameter0: int;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i0 = virtualinvoke $r1.<com.jidesoft.swing.JideTabbedPane: int getTabCount()>();

        i3 = 0;

        i4 = 0;

     label1:
        if i4 >= $i0 goto label2;

        $r2 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.FontMetrics getFontMetrics(int)>(i4);

        $i2 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int calculateTabHeight(int,int,java.awt.FontMetrics)>(i1, i4, $r2);

        i3 = staticinvoke <java.lang.Math: int max(int,int)>($i2, i3);

        i4 = i4 + 1;

        goto label1;

     label2:
        return i3;
    }

    protected int calculateTabWidth(int, int, java.awt.FontMetrics)
    {
        java.awt.Component $r27, $r28;
        javax.swing.text.View $r4, $r20;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        java.lang.String $r6;
        javax.swing.JButton $r12, $r16;
        java.awt.FontMetrics r7;
        com.jidesoft.swing.JideTabbedPane $r1, $r5, $r8, $r9, $r10, $r14, $r19, $r21, $r26;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        javax.swing.Icon $r2, $r22;
        java.awt.Dimension $r13, $r17, $r18, $r25;
        float $f0, $f1;
        java.awt.Insets $r3, $r23, $r24;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, i38, i39, i40, i41, i42;
        javax.swing.JButton[] $r11, $r15;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r7 := @parameter2: java.awt.FontMetrics;

        if i0 == 1 goto label01;

        if i0 != 3 goto label11;

     label01:
        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r2 = virtualinvoke $r1.<com.jidesoft.swing.JideTabbedPane: javax.swing.Icon getIconForTab(int)>(i1);

        $r3 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Insets getTabInsets(int,int)>(i0, i1);

        $i3 = $r3.<java.awt.Insets: int left>;

        $i2 = $r3.<java.awt.Insets: int right>;

        $i4 = $i3 + $i2;

        $i5 = $i4 + 3;

        $i6 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getTabGap()>();

        $i37 = $i5 + $i6;

        i38 = $i37;

        $z0 = staticinvoke <com.jidesoft.utils.SystemInfo: boolean isJdk6Above()>();

        if $z0 == 0 goto label02;

        $r19 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r27 = virtualinvoke $r19.<com.jidesoft.swing.JideTabbedPane: java.awt.Component getTabComponentAt(int)>(i1);

        goto label03;

     label02:
        $r27 = null;

     label03:
        if $r27 == null goto label04;

        $r18 = virtualinvoke $r27.<java.awt.Component: java.awt.Dimension getPreferredSize()>();

        $i24 = $r18.<java.awt.Dimension: int width>;

        i39 = $i37 + $i24;

        return i39;

     label04:
        if $r2 == null goto label05;

        $i21 = interfaceinvoke $r2.<javax.swing.Icon: int getIconWidth()>();

        $i22 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _textIconGap>;

        $i23 = $i21 + $i22;

        i38 = $i37 + $i23;

     label05:
        $r4 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.text.View getTextViewForTab(int)>(i1);

        if $r4 == null goto label06;

        $f0 = virtualinvoke $r4.<javax.swing.text.View: float getPreferredSpan(int)>(0);

        $i20 = (int) $f0;

        i40 = i38 + $i20;

        goto label07;

     label06:
        $r5 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r6 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.lang.String getCurrentDisplayTitleAt(com.jidesoft.swing.JideTabbedPane,int)>($r5, i1);

        $i7 = staticinvoke <javax.swing.SwingUtilities: int computeStringWidth(java.awt.FontMetrics,java.lang.String)>(r7, $r6);

        i40 = i38 + $i7;

     label07:
        $r8 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z1 = virtualinvoke $r8.<com.jidesoft.swing.JideTabbedPane: boolean isShowGripper()>();

        if $z1 == 0 goto label08;

        $i19 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _gripperWidth>;

        i40 = i40 + $i19;

     label08:
        $z2 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean scrollableTabLayoutEnabled()>();

        if $z2 == 0 goto label10;

        $z3 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean isShowCloseButton()>();

        if $z3 == 0 goto label10;

        $z4 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean isShowCloseButtonOnTab()>();

        if $z4 == 0 goto label10;

        $r9 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z5 = virtualinvoke $r9.<com.jidesoft.swing.JideTabbedPane: boolean isTabClosableAt(int)>(i1);

        if $z5 == 0 goto label10;

        $r10 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z6 = virtualinvoke $r10.<com.jidesoft.swing.JideTabbedPane: boolean isShowCloseButtonOnSelectedTab()>();

        if $z6 == 0 goto label09;

        $r14 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i13 = virtualinvoke $r14.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if $i13 != i1 goto label10;

        $r15 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.JButton[] _closeButtons>;

        $r16 = $r15[i1];

        $r17 = virtualinvoke $r16.<javax.swing.JButton: java.awt.Dimension getPreferredSize()>();

        $i15 = $r17.<java.awt.Dimension: int width>;

        $i14 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _closeButtonRightMargin>;

        $i17 = $i15 + $i14;

        $i16 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _closeButtonLeftMargin>;

        $i18 = $i17 + $i16;

        i40 = i40 + $i18;

        goto label10;

     label09:
        $r11 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.JButton[] _closeButtons>;

        $r12 = $r11[i1];

        $r13 = virtualinvoke $r12.<javax.swing.JButton: java.awt.Dimension getPreferredSize()>();

        $i9 = $r13.<java.awt.Dimension: int width>;

        $i8 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _closeButtonRightMargin>;

        $i11 = $i9 + $i8;

        $i10 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _closeButtonLeftMargin>;

        $i12 = $i11 + $i10;

        i40 = i40 + $i12;

     label10:
        goto label18;

     label11:
        $z7 = staticinvoke <com.jidesoft.utils.SystemInfo: boolean isJdk6Above()>();

        if $z7 == 0 goto label12;

        $r26 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r28 = virtualinvoke $r26.<com.jidesoft.swing.JideTabbedPane: java.awt.Component getTabComponentAt(int)>(i1);

        goto label13;

     label12:
        $r28 = null;

     label13:
        if $r28 == null goto label14;

        $r24 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Insets getTabInsets(int,int)>(i0, i1);

        $r25 = virtualinvoke $r28.<java.awt.Component: java.awt.Dimension getPreferredSize()>();

        $i33 = $r25.<java.awt.Dimension: int width>;

        $i32 = $r24.<java.awt.Insets: int left>;

        $i35 = $i33 + $i32;

        $i34 = $r24.<java.awt.Insets: int right>;

        $i36 = $i35 + $i34;

        i41 = $i36 + 3;

        return i41;

     label14:
        $r20 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.text.View getTextViewForTab(int)>(i1);

        if $r20 == null goto label15;

        $f1 = virtualinvoke $r20.<javax.swing.text.View: float getPreferredSpan(int)>(1);

        $i31 = (int) $f1;

        i42 = 0 + $i31;

        goto label16;

     label15:
        $i25 = virtualinvoke r7.<java.awt.FontMetrics: int getHeight()>();

        i42 = 0 + $i25;

     label16:
        $r21 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r22 = virtualinvoke $r21.<com.jidesoft.swing.JideTabbedPane: javax.swing.Icon getIconForTab(int)>(i1);

        $r23 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Insets getTabInsets(int,int)>(i0, i1);

        if $r22 == null goto label17;

        $i30 = interfaceinvoke $r22.<javax.swing.Icon: int getIconWidth()>();

        i42 = staticinvoke <java.lang.Math: int max(int,int)>(i42, $i30);

     label17:
        $i27 = $r23.<java.awt.Insets: int left>;

        $i26 = $r23.<java.awt.Insets: int right>;

        $i28 = $i27 + $i26;

        $i29 = $i28 + 2;

        i40 = i42 + $i29;

     label18:
        return i40;
    }

    protected int calculateMaxTabWidth(int)
    {
        com.jidesoft.swing.JideTabbedPane $r1;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        java.awt.FontMetrics $r2;
        int $i0, i1, $i2, i3, i4;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        i1 := @parameter0: int;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i0 = virtualinvoke $r1.<com.jidesoft.swing.JideTabbedPane: int getTabCount()>();

        i3 = 0;

        i4 = 0;

     label1:
        if i4 >= $i0 goto label2;

        $r2 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.FontMetrics getFontMetrics(int)>(i4);

        $i2 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int calculateTabWidth(int,int,java.awt.FontMetrics)>(i1, i4, $r2);

        i3 = staticinvoke <java.lang.Math: int max(int,int)>($i2, i3);

        i4 = i4 + 1;

        goto label1;

     label2:
        return i3;
    }

    protected int calculateTabAreaHeight(int, int, int)
    {
        com.jidesoft.swing.JideTabbedPane $r1;
        java.awt.Insets $r2;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        int i0, $i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        boolean $z0;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        i3 := @parameter2: int;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z0 = virtualinvoke $r1.<com.jidesoft.swing.JideTabbedPane: boolean isTabShown()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Insets getTabAreaInsets(int)>(i0);

        $i1 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getTabRunOverlay(int)>(i0);

        if i2 <= 0 goto label2;

        $i4 = i3 - $i1;

        $i5 = i2 * $i4;

        $i7 = $i5 + $i1;

        $i6 = $r2.<java.awt.Insets: int top>;

        $i9 = $i7 + $i6;

        $i8 = $r2.<java.awt.Insets: int bottom>;

        $i10 = $i9 + $i8;

        goto label3;

     label2:
        $i10 = 0;

     label3:
        return $i10;
    }

    protected int calculateTabAreaWidth(int, int, int)
    {
        com.jidesoft.swing.JideTabbedPane $r1;
        java.awt.Insets $r2;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        int i0, $i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        boolean $z0;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        i3 := @parameter2: int;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z0 = virtualinvoke $r1.<com.jidesoft.swing.JideTabbedPane: boolean isTabShown()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Insets getTabAreaInsets(int)>(i0);

        $i1 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getTabRunOverlay(int)>(i0);

        if i2 <= 0 goto label2;

        $i4 = i3 - $i1;

        $i5 = i2 * $i4;

        $i7 = $i5 + $i1;

        $i6 = $r2.<java.awt.Insets: int left>;

        $i9 = $i7 + $i6;

        $i8 = $r2.<java.awt.Insets: int right>;

        $i10 = $i9 + $i8;

        goto label3;

     label2:
        $i10 = 0;

     label3:
        return $i10;
    }

    protected java.awt.Insets getTabInsets(int, int)
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        com.jidesoft.swing.JideTabbedPane $r1;
        java.awt.Insets $r2, $r3, $r4;
        int i0, i1;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r2 = virtualinvoke $r1.<com.jidesoft.swing.JideTabbedPane: java.awt.Insets getTabInsets()>();

        $r3 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Insets _currentTabInsets>;

        staticinvoke <com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void rotateInsets(java.awt.Insets,java.awt.Insets,int)>($r2, $r3, i0);

        $r4 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Insets _currentTabInsets>;

        return $r4;
    }

    protected java.awt.Insets getSelectedTabPadInsets(int)
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        java.awt.Insets $r1, $r2, $r3;
        int i0;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        i0 := @parameter0: int;

        $r2 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Insets _selectedTabPadInsets>;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Insets _currentPadInsets>;

        staticinvoke <com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void rotateInsets(java.awt.Insets,java.awt.Insets,int)>($r2, $r1, i0);

        $r3 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Insets _currentPadInsets>;

        return $r3;
    }

    protected java.awt.Insets getTabAreaInsets(int)
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        com.jidesoft.swing.JideTabbedPane $r1;
        java.awt.Insets $r2, $r3, $r4;
        int i0;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        i0 := @parameter0: int;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r2 = virtualinvoke $r1.<com.jidesoft.swing.JideTabbedPane: java.awt.Insets getTabAreaInsets()>();

        $r3 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Insets _currentTabAreaInsets>;

        staticinvoke <com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void rotateInsets(java.awt.Insets,java.awt.Insets,int)>($r2, $r3, i0);

        $r4 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Insets _currentTabAreaInsets>;

        return $r4;
    }

    protected java.awt.Insets getContentBorderInsets(int)
    {
        com.jidesoft.swing.JideTabbedPane $r1, $r5;
        java.awt.Insets $r2, $r3, $r4, $r6;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        int i0;
        boolean $z0, $z1;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        i0 := @parameter0: int;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r2 = virtualinvoke $r1.<com.jidesoft.swing.JideTabbedPane: java.awt.Insets getContentBorderInsets()>();

        $r3 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Insets _currentContentBorderInsets>;

        staticinvoke <com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void rotateInsets(java.awt.Insets,java.awt.Insets,int)>($r2, $r3, i0);

        $z0 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean _ignoreContentBorderInsetsIfNoTabs>;

        if $z0 == 0 goto label1;

        $r5 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z1 = virtualinvoke $r5.<com.jidesoft.swing.JideTabbedPane: boolean isTabShown()>();

        if $z1 != 0 goto label1;

        $r6 = new java.awt.Insets;

        specialinvoke $r6.<java.awt.Insets: void <init>(int,int,int,int)>(0, 0, 0, 0);

        return $r6;

     label1:
        $r4 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Insets _currentContentBorderInsets>;

        return $r4;
    }

    protected java.awt.FontMetrics getFontMetrics(int)
    {
        com.jidesoft.swing.JideTabbedPane $r1, $r2, $r3, $r4, $r6, $r8;
        java.awt.Font $r5, r7;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        java.awt.FontMetrics $r9;
        int $i0, i1, $i2;
        boolean $z0;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        i1 := @parameter0: int;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i0 = virtualinvoke $r1.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if $i0 != i1 goto label2;

        $r4 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r5 = virtualinvoke $r4.<com.jidesoft.swing.JideTabbedPane: java.awt.Font getSelectedTabFont()>();

        if $r5 == null goto label1;

        $r6 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        r7 = virtualinvoke $r6.<com.jidesoft.swing.JideTabbedPane: java.awt.Font getSelectedTabFont()>();

        goto label3;

     label1:
        r7 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Font _selectedTabFont>;

        goto label3;

     label2:
        $r2 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        r7 = virtualinvoke $r2.<com.jidesoft.swing.JideTabbedPane: java.awt.Font getFont()>();

     label3:
        if $i0 != i1 goto label4;

        $r3 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z0 = virtualinvoke $r3.<com.jidesoft.swing.JideTabbedPane: boolean isBoldActiveTab()>();

        if $z0 == 0 goto label4;

        $i2 = virtualinvoke r7.<java.awt.Font: int getStyle()>();

        if $i2 == 1 goto label4;

        r7 = virtualinvoke r7.<java.awt.Font: java.awt.Font deriveFont(int)>(1);

     label4:
        $r8 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r9 = virtualinvoke $r8.<com.jidesoft.swing.JideTabbedPane: java.awt.FontMetrics getFontMetrics(java.awt.Font)>(r7);

        return $r9;
    }

    protected void navigateSelectedTab(int)
    {
        com.jidesoft.swing.JideTabbedPane $r1, $r2, $r3, $r4;
        java.awt.ComponentOrientation $r5;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        int $i0, $i1, $i2, i3, $i4, $i5, $i6, $i7;
        boolean $z0;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        i3 := @parameter0: int;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i0 = virtualinvoke $r1.<com.jidesoft.swing.JideTabbedPane: int getTabPlacement()>();

        $r2 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i1 = virtualinvoke $r2.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        $r3 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i2 = virtualinvoke $r3.<com.jidesoft.swing.JideTabbedPane: int getTabCount()>();

        $r4 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r5 = virtualinvoke $r4.<com.jidesoft.swing.JideTabbedPane: java.awt.ComponentOrientation getComponentOrientation()>();

        $z0 = virtualinvoke $r5.<java.awt.ComponentOrientation: boolean isLeftToRight()>();

        if $i2 > 0 goto label01;

        return;

     label01:
        tableswitch($i0)
        {
            case 1: goto label10;
            case 2: goto label04;
            case 3: goto label10;
            case 4: goto label04;
            case 5: goto label10;
            case 6: goto label10;
            case 7: goto label10;
            case 8: goto label10;
            case 9: goto label10;
            case 10: goto label10;
            case 11: goto label10;
            case 12: goto label02;
            case 13: goto label03;
            default: goto label10;
        };

     label02:
        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void selectNextTab(int)>($i1);

        goto label17;

     label03:
        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void selectPreviousTab(int)>($i1);

        goto label17;

     label04:
        tableswitch(i3)
        {
            case 1: goto label05;
            case 2: goto label09;
            case 3: goto label08;
            case 4: goto label09;
            case 5: goto label06;
            case 6: goto label09;
            case 7: goto label07;
            default: goto label09;
        };

     label05:
        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void selectPreviousTabInRun(int)>($i1);

        goto label17;

     label06:
        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void selectNextTabInRun(int)>($i1);

        goto label17;

     label07:
        $i4 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getTabRunOffset(int,int,int,boolean)>($i0, $i2, $i1, 0);

        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void selectAdjacentRunTab(int,int,int)>($i0, $i1, $i4);

        goto label17;

     label08:
        $i5 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getTabRunOffset(int,int,int,boolean)>($i0, $i2, $i1, 1);

        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void selectAdjacentRunTab(int,int,int)>($i0, $i1, $i5);

        goto label17;

     label09:
        goto label17;

     label10:
        tableswitch(i3)
        {
            case 1: goto label11;
            case 2: goto label17;
            case 3: goto label13;
            case 4: goto label17;
            case 5: goto label12;
            case 6: goto label17;
            case 7: goto label15;
            default: goto label17;
        };

     label11:
        $i7 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getTabRunOffset(int,int,int,boolean)>($i0, $i2, $i1, 0);

        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void selectAdjacentRunTab(int,int,int)>($i0, $i1, $i7);

        goto label17;

     label12:
        $i6 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getTabRunOffset(int,int,int,boolean)>($i0, $i2, $i1, 1);

        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void selectAdjacentRunTab(int,int,int)>($i0, $i1, $i6);

        goto label17;

     label13:
        if $z0 == 0 goto label14;

        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void selectNextTabInRun(int)>($i1);

        goto label17;

     label14:
        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void selectPreviousTabInRun(int)>($i1);

        goto label17;

     label15:
        if $z0 == 0 goto label16;

        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void selectPreviousTabInRun(int)>($i1);

        goto label17;

     label16:
        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void selectNextTabInRun(int)>($i1);

        goto label17;

     label17:
        return;
    }

    protected void selectNextTabInRun(int)
    {
        com.jidesoft.swing.JideTabbedPane $r1, $r2, $r3;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        int $i0, i1, i2;
        boolean $z0;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        i1 := @parameter0: int;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i0 = virtualinvoke $r1.<com.jidesoft.swing.JideTabbedPane: int getTabCount()>();

        i2 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getNextTabIndexInRun(int,int)>($i0, i1);

     label1:
        if i2 == i1 goto label2;

        $r3 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z0 = virtualinvoke $r3.<com.jidesoft.swing.JideTabbedPane: boolean isEnabledAt(int)>(i2);

        if $z0 != 0 goto label2;

        i2 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getNextTabIndexInRun(int,int)>($i0, i2);

        goto label1;

     label2:
        $r2 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        virtualinvoke $r2.<com.jidesoft.swing.JideTabbedPane: void setSelectedIndex(int)>(i2);

        return;
    }

    protected void selectPreviousTabInRun(int)
    {
        com.jidesoft.swing.JideTabbedPane $r1, $r2, $r3;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        int $i0, i1, i2;
        boolean $z0;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        i1 := @parameter0: int;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i0 = virtualinvoke $r1.<com.jidesoft.swing.JideTabbedPane: int getTabCount()>();

        i2 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getPreviousTabIndexInRun(int,int)>($i0, i1);

     label1:
        if i2 == i1 goto label2;

        $r3 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z0 = virtualinvoke $r3.<com.jidesoft.swing.JideTabbedPane: boolean isEnabledAt(int)>(i2);

        if $z0 != 0 goto label2;

        i2 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getPreviousTabIndexInRun(int,int)>($i0, i2);

        goto label1;

     label2:
        $r2 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        virtualinvoke $r2.<com.jidesoft.swing.JideTabbedPane: void setSelectedIndex(int)>(i2);

        return;
    }

    protected void selectNextTab(int)
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        com.jidesoft.swing.JideTabbedPane $r1, $r2;
        int i0, i1;
        boolean $z0;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        i0 := @parameter0: int;

        i1 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getNextTabIndex(int)>(i0);

     label1:
        if i1 == i0 goto label2;

        $r2 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z0 = virtualinvoke $r2.<com.jidesoft.swing.JideTabbedPane: boolean isEnabledAt(int)>(i1);

        if $z0 != 0 goto label2;

        i1 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getNextTabIndex(int)>(i1);

        goto label1;

     label2:
        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        virtualinvoke $r1.<com.jidesoft.swing.JideTabbedPane: void setSelectedIndex(int)>(i1);

        return;
    }

    protected void selectPreviousTab(int)
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        com.jidesoft.swing.JideTabbedPane $r1, $r2;
        int i0, i1;
        boolean $z0;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        i0 := @parameter0: int;

        i1 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getPreviousTabIndex(int)>(i0);

     label1:
        if i1 == i0 goto label2;

        $r2 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z0 = virtualinvoke $r2.<com.jidesoft.swing.JideTabbedPane: boolean isEnabledAt(int)>(i1);

        if $z0 != 0 goto label2;

        i1 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getPreviousTabIndex(int)>(i1);

        goto label1;

     label2:
        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        virtualinvoke $r1.<com.jidesoft.swing.JideTabbedPane: void setSelectedIndex(int)>(i1);

        return;
    }

    protected void selectAdjacentRunTab(int, int, int)
    {
        com.jidesoft.swing.JideTabbedPane $r3, $r4;
        java.awt.Rectangle r2;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        java.awt.Rectangle[] $r1;
        int $i0, i1, i2, $i3, $i4, $i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, i22, $i24;
        boolean $z0;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        i2 := @parameter0: int;

        i1 := @parameter1: int;

        i6 := @parameter2: int;

        $i0 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _runCount>;

        if $i0 >= 2 goto label1;

        return;

     label1:
        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        r2 = $r1[i1];

        tableswitch(i2)
        {
            case 1: goto label3;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label2;
            default: goto label3;
        };

     label2:
        $i5 = r2.<java.awt.Rectangle: int x>;

        $i3 = r2.<java.awt.Rectangle: int width>;

        $i4 = $i3 >> 1;

        $i7 = $i5 + $i4;

        $i12 = $i7 + i6;

        $i10 = r2.<java.awt.Rectangle: int y>;

        $i8 = r2.<java.awt.Rectangle: int height>;

        $i9 = $i8 >> 1;

        $i11 = $i10 + $i9;

        i22 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getTabAtLocation(int,int)>($i12, $i11);

        goto label4;

     label3:
        $i15 = r2.<java.awt.Rectangle: int x>;

        $i13 = r2.<java.awt.Rectangle: int width>;

        $i14 = $i13 >> 1;

        $i21 = $i15 + $i14;

        $i18 = r2.<java.awt.Rectangle: int y>;

        $i16 = r2.<java.awt.Rectangle: int height>;

        $i17 = $i16 >> 1;

        $i19 = $i18 + $i17;

        $i20 = $i19 + i6;

        i22 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getTabAtLocation(int,int)>($i21, $i20);

     label4:
        $i24 = (int) -1;

        if i22 == $i24 goto label7;

     label5:
        $r3 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z0 = virtualinvoke $r3.<com.jidesoft.swing.JideTabbedPane: boolean isEnabledAt(int)>(i22);

        if $z0 != 0 goto label6;

        if i22 == i1 goto label6;

        i22 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getNextTabIndex(int)>(i22);

        goto label5;

     label6:
        $r4 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        virtualinvoke $r4.<com.jidesoft.swing.JideTabbedPane: void setSelectedIndex(int)>(i22);

     label7:
        return;
    }

    protected int getTabRunOffset(int, int, int, boolean)
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        boolean z0;
        int i0, i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        i3 := @parameter0: int;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        $i2 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getRunForTab(int,int)>(i0, i1);

        tableswitch(i3)
        {
            case 1: goto label28;
            case 2: goto label01;
            case 3: goto label19;
            case 4: goto label10;
            default: goto label28;
        };

     label01:
        if $i2 != 0 goto label04;

        if z0 == 0 goto label02;

        $i39 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _runCount>;

        $i38 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _maxTabWidth>;

        $i40 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int calculateTabAreaWidth(int,int,int)>(i3, $i39, $i38);

        $i41 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _maxTabWidth>;

        $i42 = $i40 - $i41;

        $i56 = neg $i42;

        goto label03;

     label02:
        $i37 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _maxTabWidth>;

        $i56 = neg $i37;

     label03:
        i57 = $i56;

        goto label37;

     label04:
        $i30 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _runCount>;

        $i31 = $i30 - 1;

        if $i2 != $i31 goto label07;

        if z0 == 0 goto label05;

        $i58 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _maxTabWidth>;

        goto label06;

     label05:
        $i34 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _runCount>;

        $i33 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _maxTabWidth>;

        $i35 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int calculateTabAreaWidth(int,int,int)>(i3, $i34, $i33);

        $i36 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _maxTabWidth>;

        $i58 = $i35 - $i36;

     label06:
        i57 = $i58;

        goto label37;

     label07:
        if z0 == 0 goto label08;

        $i59 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _maxTabWidth>;

        goto label09;

     label08:
        $i32 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _maxTabWidth>;

        $i59 = neg $i32;

     label09:
        i57 = $i59;

        goto label37;

     label10:
        if $i2 != 0 goto label13;

        if z0 == 0 goto label11;

        $i60 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _maxTabWidth>;

        goto label12;

     label11:
        $i14 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _runCount>;

        $i13 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _maxTabWidth>;

        $i15 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int calculateTabAreaWidth(int,int,int)>(i3, $i14, $i13);

        $i16 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _maxTabWidth>;

        $i60 = $i15 - $i16;

     label12:
        i57 = $i60;

        goto label37;

     label13:
        $i4 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _runCount>;

        $i5 = $i4 - 1;

        if $i2 != $i5 goto label16;

        if z0 == 0 goto label14;

        $i9 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _runCount>;

        $i8 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _maxTabWidth>;

        $i10 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int calculateTabAreaWidth(int,int,int)>(i3, $i9, $i8);

        $i11 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _maxTabWidth>;

        $i12 = $i10 - $i11;

        $i61 = neg $i12;

        goto label15;

     label14:
        $i7 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _maxTabWidth>;

        $i61 = neg $i7;

     label15:
        i57 = $i61;

        goto label37;

     label16:
        if z0 == 0 goto label17;

        $i62 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _maxTabWidth>;

        goto label18;

     label17:
        $i6 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _maxTabWidth>;

        $i62 = neg $i6;

     label18:
        i57 = $i62;

        goto label37;

     label19:
        if $i2 != 0 goto label22;

        if z0 == 0 goto label20;

        $i63 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _maxTabHeight>;

        goto label21;

     label20:
        $i27 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _runCount>;

        $i26 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _maxTabHeight>;

        $i28 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int calculateTabAreaHeight(int,int,int)>(i3, $i27, $i26);

        $i29 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _maxTabHeight>;

        $i63 = $i28 - $i29;

     label21:
        i57 = $i63;

        goto label37;

     label22:
        $i17 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _runCount>;

        $i18 = $i17 - 1;

        if $i2 != $i18 goto label25;

        if z0 == 0 goto label23;

        $i22 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _runCount>;

        $i21 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _maxTabHeight>;

        $i23 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int calculateTabAreaHeight(int,int,int)>(i3, $i22, $i21);

        $i24 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _maxTabHeight>;

        $i25 = $i23 - $i24;

        $i64 = neg $i25;

        goto label24;

     label23:
        $i20 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _maxTabHeight>;

        $i64 = neg $i20;

     label24:
        i57 = $i64;

        goto label37;

     label25:
        if z0 == 0 goto label26;

        $i65 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _maxTabHeight>;

        goto label27;

     label26:
        $i19 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _maxTabHeight>;

        $i65 = neg $i19;

     label27:
        i57 = $i65;

        goto label37;

     label28:
        if $i2 != 0 goto label31;

        if z0 == 0 goto label29;

        $i52 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _runCount>;

        $i51 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _maxTabHeight>;

        $i53 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int calculateTabAreaHeight(int,int,int)>(i3, $i52, $i51);

        $i54 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _maxTabHeight>;

        $i55 = $i53 - $i54;

        $i66 = neg $i55;

        goto label30;

     label29:
        $i50 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _maxTabHeight>;

        $i66 = neg $i50;

     label30:
        i57 = $i66;

        goto label37;

     label31:
        $i43 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _runCount>;

        $i44 = $i43 - 1;

        if $i2 != $i44 goto label34;

        if z0 == 0 goto label32;

        $i67 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _maxTabHeight>;

        goto label33;

     label32:
        $i47 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _runCount>;

        $i46 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _maxTabHeight>;

        $i48 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int calculateTabAreaHeight(int,int,int)>(i3, $i47, $i46);

        $i49 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _maxTabHeight>;

        $i67 = $i48 - $i49;

     label33:
        i57 = $i67;

        goto label37;

     label34:
        if z0 == 0 goto label35;

        $i68 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _maxTabHeight>;

        goto label36;

     label35:
        $i45 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _maxTabHeight>;

        $i68 = neg $i45;

     label36:
        i57 = $i68;

     label37:
        return i57;
    }

    protected int getPreviousTabIndex(int)
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        com.jidesoft.swing.JideTabbedPane $r1;
        int i0, $i1, $i2, $i3, $i4;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        i0 := @parameter0: int;

        $i1 = i0 - 1;

        if $i1 < 0 goto label1;

        $i3 = i0 - 1;

        goto label2;

     label1:
        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i2 = virtualinvoke $r1.<com.jidesoft.swing.JideTabbedPane: int getTabCount()>();

        $i3 = $i2 - 1;

     label2:
        if $i3 < 0 goto label3;

        $i4 = $i3;

        goto label4;

     label3:
        $i4 = 0;

     label4:
        return $i4;
    }

    protected int getNextTabIndex(int)
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        com.jidesoft.swing.JideTabbedPane $r1;
        int i0, $i1, $i2, $i3;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        i0 := @parameter0: int;

        $i1 = i0 + 1;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i2 = virtualinvoke $r1.<com.jidesoft.swing.JideTabbedPane: int getTabCount()>();

        $i3 = $i1 % $i2;

        return $i3;
    }

    protected int getNextTabIndexInRun(int, int)
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        int[] $r1, $r2;
        int $i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        i1 := @parameter0: int;

        i2 := @parameter1: int;

        $i0 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _runCount>;

        if $i0 >= 2 goto label1;

        $i8 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getNextTabIndex(int)>(i2);

        return $i8;

     label1:
        $i3 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getRunForTab(int,int)>(i1, i2);

        $i4 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getNextTabIndex(int)>(i2);

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int[] _tabRuns>;

        $i5 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getNextTabRun(int)>($i3);

        $i6 = $r1[$i5];

        if $i4 != $i6 goto label2;

        $r2 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int[] _tabRuns>;

        $i7 = $r2[$i3];

        return $i7;

     label2:
        return $i4;
    }

    protected int getPreviousTabIndexInRun(int, int)
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        int[] $r1, $r2;
        int $i0, i1, i2, $i3, $i4, $i5, $i6, $i7, i8, $i9, $i10, $i12;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        i1 := @parameter0: int;

        i2 := @parameter1: int;

        $i0 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _runCount>;

        if $i0 >= 2 goto label1;

        $i9 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getPreviousTabIndex(int)>(i2);

        return $i9;

     label1:
        $i3 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getRunForTab(int,int)>(i1, i2);

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int[] _tabRuns>;

        $i4 = $r1[$i3];

        if i2 != $i4 goto label4;

        $r2 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int[] _tabRuns>;

        $i6 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getNextTabRun(int)>($i3);

        $i7 = $r2[$i6];

        i8 = $i7 - 1;

        $i12 = (int) -1;

        if i8 == $i12 goto label2;

        $i10 = i8;

        goto label3;

     label2:
        $i10 = i1 - 1;

     label3:
        return $i10;

     label4:
        $i5 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getPreviousTabIndex(int)>(i2);

        return $i5;
    }

    protected int getPreviousTabRun(int)
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        int i0, $i1, $i2, $i3, $i4;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        i0 := @parameter0: int;

        $i1 = i0 - 1;

        if $i1 < 0 goto label1;

        $i3 = i0 - 1;

        goto label2;

     label1:
        $i2 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _runCount>;

        $i3 = $i2 - 1;

     label2:
        if $i3 < 0 goto label3;

        $i4 = $i3;

        goto label4;

     label3:
        $i4 = 0;

     label4:
        return $i4;
    }

    protected int getNextTabRun(int)
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        int i0, $i1, $i2, $i3;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        i0 := @parameter0: int;

        $i2 = i0 + 1;

        $i1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _runCount>;

        $i3 = $i2 % $i1;

        return $i3;
    }

    public static void rotateInsets(java.awt.Insets, java.awt.Insets, int)
    {
        java.awt.Insets r0, r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;

        r0 := @parameter0: java.awt.Insets;

        r1 := @parameter1: java.awt.Insets;

        i0 := @parameter2: int;

        if r0 != null goto label1;

        r1.<java.awt.Insets: int top> = 0;

        r1.<java.awt.Insets: int left> = 0;

        r1.<java.awt.Insets: int bottom> = 0;

        r1.<java.awt.Insets: int right> = 0;

        return;

     label1:
        tableswitch(i0)
        {
            case 1: goto label5;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            default: goto label5;
        };

     label2:
        $i9 = r0.<java.awt.Insets: int left>;

        r1.<java.awt.Insets: int top> = $i9;

        $i10 = r0.<java.awt.Insets: int top>;

        r1.<java.awt.Insets: int left> = $i10;

        $i11 = r0.<java.awt.Insets: int right>;

        r1.<java.awt.Insets: int bottom> = $i11;

        $i12 = r0.<java.awt.Insets: int bottom>;

        r1.<java.awt.Insets: int right> = $i12;

        goto label6;

     label3:
        $i5 = r0.<java.awt.Insets: int bottom>;

        r1.<java.awt.Insets: int top> = $i5;

        $i6 = r0.<java.awt.Insets: int left>;

        r1.<java.awt.Insets: int left> = $i6;

        $i7 = r0.<java.awt.Insets: int top>;

        r1.<java.awt.Insets: int bottom> = $i7;

        $i8 = r0.<java.awt.Insets: int right>;

        r1.<java.awt.Insets: int right> = $i8;

        goto label6;

     label4:
        $i1 = r0.<java.awt.Insets: int left>;

        r1.<java.awt.Insets: int top> = $i1;

        $i2 = r0.<java.awt.Insets: int bottom>;

        r1.<java.awt.Insets: int left> = $i2;

        $i3 = r0.<java.awt.Insets: int right>;

        r1.<java.awt.Insets: int bottom> = $i3;

        $i4 = r0.<java.awt.Insets: int top>;

        r1.<java.awt.Insets: int right> = $i4;

        goto label6;

     label5:
        $i13 = r0.<java.awt.Insets: int top>;

        r1.<java.awt.Insets: int top> = $i13;

        $i14 = r0.<java.awt.Insets: int left>;

        r1.<java.awt.Insets: int left> = $i14;

        $i15 = r0.<java.awt.Insets: int bottom>;

        r1.<java.awt.Insets: int bottom> = $i15;

        $i16 = r0.<java.awt.Insets: int right>;

        r1.<java.awt.Insets: int right> = $i16;

     label6:
        return;
    }

    public boolean requestFocusForVisibleComponent()
    {
        com.jidesoft.swing.JideTabbedPane $r2;
        javax.swing.JComponent $r4;
        java.awt.Component $r1, $r3;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        $r1 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Component getVisibleComponent()>();

        $r2 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r3 = virtualinvoke $r2.<com.jidesoft.swing.JideTabbedPane: java.awt.Component getLastFocusedComponent(java.awt.Component)>($r1);

        if $r3 == null goto label1;

        $z3 = virtualinvoke $r3.<java.awt.Component: boolean requestFocusInWindow()>();

        if $z3 == 0 goto label1;

        return 1;

     label1:
        if $r1 == null goto label2;

        $z2 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: boolean passesFocusabilityTest(java.awt.Component)>($r1);

        if $z2 == 0 goto label2;

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: boolean compositeRequestFocus(java.awt.Component)>($r1);

        return 1;

     label2:
        $z0 = $r1 instanceof javax.swing.JComponent;

        if $z0 == 0 goto label3;

        $r4 = (javax.swing.JComponent) $r1;

        $z1 = virtualinvoke $r4.<javax.swing.JComponent: boolean requestDefaultFocus()>();

        if $z1 == 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    protected com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabCloseButton createNoFocusButton(int)
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r1;
        int i0;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabCloseButton $r0;

        r1 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        i0 := @parameter0: int;

        $r0 = new com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabCloseButton;

        specialinvoke $r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabCloseButton: void <init>(com.jidesoft.plaf.basic.BasicJideTabbedPaneUI,int)>(r1, i0);

        return $r0;
    }

    private javax.swing.JButton createButton(int)
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        com.jidesoft.swing.JideTabbedPane $r1;
        com.jidesoft.swing.JideTabbedPane$NoFocusButton $r2;
        int i0;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        i0 := @parameter0: int;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r2 = virtualinvoke $r1.<com.jidesoft.swing.JideTabbedPane: com.jidesoft.swing.JideTabbedPane$NoFocusButton createNoFocusButton(int)>(i0);

        return $r2;
    }

    protected void stopOrCancelEditing()
    {
        com.jidesoft.swing.JideTabbedPane $r1, $r2, $r3, $r4, $r5, $r7;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor $r12;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        int $i0;
        java.lang.String $r10, $r13, $r15, $r17;
        com.jidesoft.swing.TabEditingValidator $r6, $r8;
        boolean $z0, z1;
        java.lang.StringBuilder $r9, $r11, $r14, $r16;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        z1 = 1;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        if $r1 == null goto label1;

        $r4 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z0 = virtualinvoke $r4.<com.jidesoft.swing.JideTabbedPane: boolean isTabEditing()>();

        if $z0 == 0 goto label1;

        $r5 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r6 = virtualinvoke $r5.<com.jidesoft.swing.JideTabbedPane: com.jidesoft.swing.TabEditingValidator getTabEditingValidator()>();

        if $r6 == null goto label1;

        $r7 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r8 = virtualinvoke $r7.<com.jidesoft.swing.JideTabbedPane: com.jidesoft.swing.TabEditingValidator getTabEditingValidator()>();

        $i0 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _editingTab>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.lang.String _oldPrefix>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor _tabEditor>;

        $r13 = virtualinvoke $r12.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor: java.lang.String getText()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.lang.String _oldPostfix>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        z1 = interfaceinvoke $r8.<com.jidesoft.swing.TabEditingValidator: boolean isValid(int,java.lang.String)>($i0, $r17);

     label1:
        if z1 == 0 goto label2;

        $r3 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        virtualinvoke $r3.<com.jidesoft.swing.JideTabbedPane: void stopTabEditing()>();

        goto label3;

     label2:
        $r2 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        virtualinvoke $r2.<com.jidesoft.swing.JideTabbedPane: void cancelTabEditing()>();

     label3:
        return;
    }

    protected void ensureCurrentRects(int, int)
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        java.awt.Insets $r4, $r135;
        int $i0, i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $i105, $i106, $i107, $i108, $i109, $i110, $i111, $i112, $i113, $i114, $i115, $i116, $i117, $i118, $i119, $i120, $i121, $i122, $i123, $i124, $i125, $i126, $i127, $i128, $i129, $i130, $i131, $i132, $i133, $i134, $i135, $i136, $i137, $i138, $i139, $i140, $i141, $i142, $i143, $i144, $i145, $i146, $i147, $i148, $i149, $i150, $i151, $i152, $i153, $i154, $i155, $i156, $i157, $i158, $i159, $i160, $i161, $i162, $i163, $i164, $i165, $i166, $i167, $i168, $i169, $i170, $i171, $i172, $i173, $i174, $i175, $i176, $i177, $i178, $i179, $i180, i181, i182, i183, i184, $i185, i186, i187, i188, i189, i190, $i191, i192, $i193, $i194, i195, i196, i197, $i198, i199, i200, i201, $i202, $i203, $i204, i205, $i206, i207, i208, $i209, $i210, $i211, $i212, $i213, i214;
        javax.swing.JButton[] $r55, $r82, $r112, $r130;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28;
        java.awt.Dimension $r2, $r10, $r11, $r58, $r85, $r114, $r132, r155, r156, $r175;
        java.awt.Rectangle r9, $r15, $r18, $r21, r23, $r28, $r32, $r34, $r35, $r38, $r40, $r41, $r43, $r45, $r50, $r54, $r57, $r61, $r64, $r66, $r69, $r71, $r72, $r77, $r81, $r84, $r88, $r90, $r92, $r95, $r97, $r98, $r101, $r103, $r104, $r106, $r108, $r111, $r116, $r118, $r120, $r123, $r125, $r126, $r129, $r139, $r141, $r142, $r147, $r150, r158, r159, r162, $r164, $r166, $r168, $r170;
        double $d0, $d1, $d2, $d3;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabSpaceAllocator $r160;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabPanel $r174;
        java.awt.ComponentOrientation $r7;
        java.awt.Component $r12, $r151, $r152, $r153;
        java.awt.Rectangle[] $r8, $r14, $r16, $r17, $r19, $r20, $r25, $r27, $r30, $r31, $r33, $r36, $r37, $r39, $r42, $r44, $r49, $r52, $r53, $r60, $r63, $r65, $r67, $r68, $r70, $r76, $r79, $r80, $r87, $r89, $r91, $r93, $r94, $r96, $r99, $r100, $r102, $r105, $r107, $r110, $r115, $r117, $r119, $r121, $r122, $r124, $r128, $r137, $r138, $r140, $r143, $r146, $r148, $r149, r157, $r161, $r163, $r165, $r167, $r169;
        javax.swing.JButton $r56, $r83, $r113, $r131;
        com.jidesoft.swing.JideTabbedPane $r1, $r3, $r5, $r6, $r13, $r22, $r24, $r26, $r29, $r46, $r47, $r51, $r59, $r62, $r73, $r74, $r78, $r86, $r109, $r127, $r133, $r134, $r136, $r144, $r145, $r154, $r171, $r172;
        javax.swing.Icon $r48, $r75;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport $r173;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        i3 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r2 = virtualinvoke $r1.<com.jidesoft.swing.JideTabbedPane: java.awt.Dimension getSize()>();

        $r3 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r4 = virtualinvoke $r3.<com.jidesoft.swing.JideTabbedPane: java.awt.Insets getInsets()>();

        i181 = 0;

        i182 = 0;

        $r5 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i0 = virtualinvoke $r5.<com.jidesoft.swing.JideTabbedPane: int getTabPlacement()>();

        if $i0 == 2 goto label01;

        $r154 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i180 = virtualinvoke $r154.<com.jidesoft.swing.JideTabbedPane: int getTabPlacement()>();

        if $i180 != 4 goto label02;

     label01:
        $z26 = 1;

        goto label03;

     label02:
        $z26 = 0;

     label03:
        z0 = $z26;

        $r6 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r7 = virtualinvoke $r6.<com.jidesoft.swing.JideTabbedPane: java.awt.ComponentOrientation getComponentOrientation()>();

        $z1 = virtualinvoke $r7.<java.awt.ComponentOrientation: boolean isLeftToRight()>();

        if i1 != 0 goto label04;

        return;

     label04:
        $r8 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $i2 = i1 - 1;

        r9 = $r8[$i2];

        $r10 = new java.awt.Dimension;

        specialinvoke $r10.<java.awt.Dimension: void <init>(int,int)>(0, 0);

        r155 = $r10;

        $r11 = new java.awt.Dimension;

        specialinvoke $r11.<java.awt.Dimension: void <init>(int,int)>(0, 0);

        r156 = $r11;

        $z2 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean isTabLeadingComponentVisible()>();

        if $z2 == 0 goto label05;

        $r153 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Component _tabLeadingComponent>;

        r155 = virtualinvoke $r153.<java.awt.Component: java.awt.Dimension getPreferredSize()>();

     label05:
        $z3 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean isTabTrailingComponentVisible()>();

        if $z3 == 0 goto label06;

        $r152 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Component _tabTrailingComponent>;

        r156 = virtualinvoke $r152.<java.awt.Component: java.awt.Dimension getPreferredSize()>();

     label06:
        if z0 == 0 goto label07;

        $i178 = r9.<java.awt.Rectangle: int y>;

        $i177 = r9.<java.awt.Rectangle: int height>;

        i182 = $i178 + $i177;

        $r151 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Component _tabLeadingComponent>;

        if $r151 == null goto label12;

        $i179 = r155.<java.awt.Dimension: int height>;

        i182 = i182 - $i179;

        goto label12;

     label07:
        r157 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        i183 = lengthof r157;

        i184 = 0;

     label08:
        if i184 >= i183 goto label09;

        r158 = r157[i184];

        $i176 = r158.<java.awt.Rectangle: int width>;

        i181 = i181 + $i176;

        i184 = i184 + 1;

        goto label08;

     label09:
        if $z1 == 0 goto label10;

        $r149 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r150 = $r149[0];

        $i175 = $r150.<java.awt.Rectangle: int x>;

        i181 = i181 + $i175;

        goto label11;

     label10:
        i181 = i181 + i3;

     label11:
        $r12 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Component _tabLeadingComponent>;

        if $r12 == null goto label12;

        $i174 = r155.<java.awt.Dimension: int width>;

        i181 = i181 - $i174;

     label12:
        $i185 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getTabResizeMode()>();

        if $i185 != 2 goto label39;

        if z0 == 0 goto label22;

        $i148 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getTabShape()>();

        if $i148 == 3 goto label13;

        $d3 = virtualinvoke $r2.<java.awt.Dimension: double getHeight()>();

        $i166 = (int) $d3;

        $i165 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _fitStyleBoundSize>;

        $i168 = $i166 - $i165;

        $i167 = $r4.<java.awt.Insets: int top>;

        $i170 = $i168 - $i167;

        $i169 = $r4.<java.awt.Insets: int bottom>;

        $i171 = $i170 - $i169;

        $i172 = $i171 - i3;

        $i173 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getTabRightPadding()>();

        i186 = $i172 - $i173;

        goto label14;

     label13:
        $d2 = virtualinvoke $r2.<java.awt.Dimension: double getHeight()>();

        $i150 = (int) $d2;

        $i149 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _fitStyleBoundSize>;

        $i152 = $i150 - $i149;

        $i151 = $r4.<java.awt.Insets: int top>;

        $i154 = $i152 - $i151;

        $i153 = $r4.<java.awt.Insets: int bottom>;

        i186 = $i154 - $i153;

     label14:
        $r145 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z23 = virtualinvoke $r145.<com.jidesoft.swing.JideTabbedPane: boolean isShowCloseButton()>();

        if $z23 == 0 goto label15;

        $i164 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _buttonSize>;

        i186 = i186 - $i164;

     label15:
        $z24 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean isTabLeadingComponentVisible()>();

        if $z24 == 0 goto label16;

        $i163 = r155.<java.awt.Dimension: int height>;

        i186 = i186 - $i163;

     label16:
        $z25 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean isTabTrailingComponentVisible()>();

        if $z25 == 0 goto label17;

        $i161 = r156.<java.awt.Dimension: int height>;

        i186 = i186 - $i161;

     label17:
        $i155 = specialinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getNumberOfTabButtons()>();

        $i156 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _buttonSize>;

        $i157 = $i156 * $i155;

        $i162 = i186 - $i157;

        if i182 <= $i162 goto label21;

        i187 = $i162 / i1;

        i182 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _fitStyleFirstTabMargin>;

        i188 = 0;

     label18:
        if i188 >= i1 goto label21;

        $r146 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r147 = $r146[i188];

        $r147.<java.awt.Rectangle: int height> = i187;

        $r148 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        r159 = $r148[i188];

        $i158 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getTabShape()>();

        if $i158 == 3 goto label19;

        $i160 = i182 + i3;

        r159.<java.awt.Rectangle: int y> = $i160;

        goto label20;

     label19:
        r159.<java.awt.Rectangle: int y> = i182;

     label20:
        $i159 = r159.<java.awt.Rectangle: int height>;

        i182 = i182 + $i159;

        i188 = i188 + 1;

        goto label18;

     label21:
        goto label39;

     label22:
        $i97 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getTabShape()>();

        if $i97 == 3 goto label23;

        $d1 = virtualinvoke $r2.<java.awt.Dimension: double getWidth()>();

        $i140 = (int) $d1;

        $i139 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _fitStyleBoundSize>;

        $i142 = $i140 - $i139;

        $i141 = $r4.<java.awt.Insets: int left>;

        $i144 = $i142 - $i141;

        $i143 = $r4.<java.awt.Insets: int right>;

        $i145 = $i144 - $i143;

        $i146 = $i145 - i3;

        $i147 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getTabRightPadding()>();

        i189 = $i146 - $i147;

        goto label24;

     label23:
        $d0 = virtualinvoke $r2.<java.awt.Dimension: double getWidth()>();

        $i99 = (int) $d0;

        $i98 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _fitStyleBoundSize>;

        $i101 = $i99 - $i98;

        $i100 = $r4.<java.awt.Insets: int left>;

        $i103 = $i101 - $i100;

        $i102 = $r4.<java.awt.Insets: int right>;

        i189 = $i103 - $i102;

     label24:
        $r133 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z18 = virtualinvoke $r133.<com.jidesoft.swing.JideTabbedPane: boolean isShowCloseButton()>();

        if $z18 == 0 goto label25;

        $i138 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _buttonSize>;

        i189 = i189 - $i138;

     label25:
        $z19 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean isTabLeadingComponentVisible()>();

        if $z19 == 0 goto label26;

        $i137 = r155.<java.awt.Dimension: int width>;

        i189 = i189 - $i137;

     label26:
        $z20 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean isTabTrailingComponentVisible()>();

        if $z20 == 0 goto label27;

        $i135 = r156.<java.awt.Dimension: int width>;

        i189 = i189 - $i135;

     label27:
        $i104 = specialinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getNumberOfTabButtons()>();

        $i105 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _buttonSize>;

        $i106 = $i105 * $i104;

        $i136 = i189 - $i106;

        if i181 <= $i136 goto label32;

        i190 = $i136 / i1;

        $r144 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z22 = virtualinvoke $r144.<com.jidesoft.swing.JideTabbedPane: boolean isShowGripper()>();

        if $z22 == 0 goto label28;

        $i191 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _gripperWidth>;

        goto label29;

     label28:
        $i191 = 0;

     label29:
        i192 = $i191;

        $i125 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _textIconGap>;

        $i124 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _fitStyleTextMinWidth>;

        $i127 = $i125 + $i124;

        $i126 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _fitStyleIconMinWidth>;

        $i128 = $i127 + $i126;

        $i129 = $i128 + $i191;

        if i190 >= $i129 goto label30;

        $i132 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _fitStyleIconMinWidth>;

        $i133 = $i132 + $i191;

        if i190 <= $i133 goto label30;

        $i134 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _fitStyleIconMinWidth>;

        i190 = $i134 + $i191;

     label30:
        $i193 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _fitStyleIconMinWidth>;

        $i194 = $i193 + i192;

        if i190 >= $i194 goto label31;

        $i130 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _fitStyleFirstTabMargin>;

        $i131 = $i130 + i192;

        if i190 <= $i131 goto label31;

     label31:
        $r160 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabSpaceAllocator tryTabSpacer>;

        $r161 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        virtualinvoke $r160.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabSpaceAllocator: void reArrange(java.awt.Rectangle[],java.awt.Insets,int)>($r161, $r4, $i136);

     label32:
        i181 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _fitStyleFirstTabMargin>;

        i195 = 0;

     label33:
        if i195 >= i1 goto label36;

        $r143 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        r162 = $r143[i195];

        $i121 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getTabShape()>();

        if $i121 == 3 goto label34;

        $i123 = i181 + i3;

        r162.<java.awt.Rectangle: int x> = $i123;

        goto label35;

     label34:
        r162.<java.awt.Rectangle: int x> = i181;

     label35:
        $i122 = r162.<java.awt.Rectangle: int width>;

        i181 = i181 + $i122;

        i195 = i195 + 1;

        goto label33;

     label36:
        if $z1 != 0 goto label39;

        $r134 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i107 = virtualinvoke $r134.<com.jidesoft.swing.JideTabbedPane: int getTabPlacement()>();

        $r135 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Insets getTabAreaInsets(int)>($i107);

        $i109 = $r2.<java.awt.Dimension: int width>;

        $i108 = r155.<java.awt.Dimension: int width>;

        $i111 = $i109 - $i108;

        $i110 = r156.<java.awt.Dimension: int width>;

        $i115 = $i111 - $i110;

        $i113 = $r4.<java.awt.Insets: int right>;

        $i112 = $r135.<java.awt.Insets: int right>;

        $i114 = $i113 + $i112;

        i196 = $i115 - $i114;

        $r136 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z21 = virtualinvoke $r136.<com.jidesoft.swing.JideTabbedPane: boolean isShowCloseButton()>();

        if $z21 == 0 goto label37;

        $i120 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _buttonSize>;

        i196 = i196 - $i120;

     label37:
        i197 = 0;

     label38:
        if i197 >= i1 goto label39;

        $r137 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r142 = $r137[i197];

        $r138 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r139 = $r138[i197];

        $i116 = $r139.<java.awt.Rectangle: int x>;

        $i118 = i196 - $i116;

        $r140 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r141 = $r140[i197];

        $i117 = $r141.<java.awt.Rectangle: int width>;

        $i119 = $i118 - $i117;

        $r142.<java.awt.Rectangle: int x> = $i119;

        i197 = i197 + 1;

        goto label38;

     label39:
        $i198 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getTabResizeMode()>();

        if $i198 != 3 goto label50;

        if z0 == 0 goto label44;

        i199 = 0;

     label40:
        if i199 >= i1 goto label43;

        $r115 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r116 = $r115[i199];

        $i86 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _fixedStyleRectSize>;

        $r116.<java.awt.Rectangle: int height> = $i86;

        $z16 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean isShowCloseButton()>();

        if $z16 == 0 goto label41;

        $r127 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z17 = virtualinvoke $r127.<com.jidesoft.swing.JideTabbedPane: boolean isShowCloseButtonOnTab()>();

        if $z17 == 0 goto label41;

        $r128 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r129 = $r128[i199];

        $i94 = $r129.<java.awt.Rectangle: int height>;

        $r130 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.JButton[] _closeButtons>;

        $r131 = $r130[i199];

        $r132 = virtualinvoke $r131.<javax.swing.JButton: java.awt.Dimension getPreferredSize()>();

        $i95 = $r132.<java.awt.Dimension: int height>;

        $i96 = $i94 + $i95;

        $r129.<java.awt.Rectangle: int height> = $i96;

     label41:
        if i199 == 0 goto label42;

        $r121 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r126 = $r121[i199];

        $r122 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $i89 = i199 - 1;

        $r123 = $r122[$i89];

        $i92 = $r123.<java.awt.Rectangle: int y>;

        $r124 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $i90 = i199 - 1;

        $r125 = $r124[$i90];

        $i91 = $r125.<java.awt.Rectangle: int height>;

        $i93 = $i92 + $i91;

        $r126.<java.awt.Rectangle: int y> = $i93;

     label42:
        $r117 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r118 = $r117[i199];

        $i88 = $r118.<java.awt.Rectangle: int y>;

        $r119 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r120 = $r119[i199];

        $i87 = $r120.<java.awt.Rectangle: int height>;

        i182 = $i88 + $i87;

        i199 = i199 + 1;

        goto label40;

     label43:
        goto label50;

     label44:
        i200 = 0;

     label45:
        if i200 >= i1 goto label50;

        $r89 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r90 = $r89[i200];

        i201 = $r90.<java.awt.Rectangle: int width>;

        $r91 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r92 = $r91[i200];

        $i68 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _fixedStyleRectSize>;

        $r92.<java.awt.Rectangle: int width> = $i68;

        $z14 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean isShowCloseButton()>();

        if $z14 == 0 goto label46;

        $r109 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z15 = virtualinvoke $r109.<com.jidesoft.swing.JideTabbedPane: boolean isShowCloseButtonOnTab()>();

        if $z15 == 0 goto label46;

        $r110 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r111 = $r110[i200];

        $i83 = $r111.<java.awt.Rectangle: int width>;

        $r112 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.JButton[] _closeButtons>;

        $r113 = $r112[i200];

        $r114 = virtualinvoke $r113.<javax.swing.JButton: java.awt.Dimension getPreferredSize()>();

        $i84 = $r114.<java.awt.Dimension: int width>;

        $i85 = $i83 + $i84;

        $r111.<java.awt.Rectangle: int width> = $i85;

     label46:
        if i200 != 0 goto label47;

        if $z1 != 0 goto label47;

        $r105 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r106 = $r105[i200];

        $i81 = $r106.<java.awt.Rectangle: int x>;

        $r107 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r108 = $r107[i200];

        $i79 = $r108.<java.awt.Rectangle: int width>;

        $i80 = i201 - $i79;

        $i82 = $i81 + $i80;

        $r106.<java.awt.Rectangle: int x> = $i82;

     label47:
        if i200 == 0 goto label49;

        if $z1 == 0 goto label48;

        $r99 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r104 = $r99[i200];

        $r100 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $i74 = i200 - 1;

        $r101 = $r100[$i74];

        $i77 = $r101.<java.awt.Rectangle: int x>;

        $r102 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $i75 = i200 - 1;

        $r103 = $r102[$i75];

        $i76 = $r103.<java.awt.Rectangle: int width>;

        $i78 = $i77 + $i76;

        $r104.<java.awt.Rectangle: int x> = $i78;

        goto label49;

     label48:
        $r93 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r98 = $r93[i200];

        $r94 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $i69 = i200 - 1;

        $r95 = $r94[$i69];

        $i72 = $r95.<java.awt.Rectangle: int x>;

        $r96 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $i70 = i200 - 1;

        $r97 = $r96[$i70];

        $i71 = $r97.<java.awt.Rectangle: int width>;

        $i73 = $i72 - $i71;

        $r98.<java.awt.Rectangle: int x> = $i73;

     label49:
        $r163 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r164 = $r163[i200];

        $i202 = $r164.<java.awt.Rectangle: int x>;

        $r165 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r166 = $r165[i200];

        $i203 = $r166.<java.awt.Rectangle: int width>;

        i181 = $i202 + $i203;

        i200 = i200 + 1;

        goto label45;

     label50:
        $i204 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getTabResizeMode()>();

        if $i204 != 4 goto label69;

        if z0 == 0 goto label59;

        i205 = 0;

     label51:
        if i205 >= i1 goto label58;

        $r62 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i52 = virtualinvoke $r62.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i205 == $i52 goto label56;

        $r73 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z10 = virtualinvoke $r73.<com.jidesoft.swing.JideTabbedPane: boolean isShowIconsOnTab()>();

        if $z10 != 0 goto label52;

        $r86 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z13 = virtualinvoke $r86.<com.jidesoft.swing.JideTabbedPane: boolean isUseDefaultShowIconsOnTab()>();

        if $z13 != 0 goto label52;

        $r87 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r88 = $r87[i205];

        $i67 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _compressedStyleNoIconRectSize>;

        $r88.<java.awt.Rectangle: int height> = $i67;

        goto label55;

     label52:
        $r74 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r75 = virtualinvoke $r74.<com.jidesoft.swing.JideTabbedPane: javax.swing.Icon getIconForTab(int)>(i205);

        $r76 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r77 = $r76[i205];

        if $r75 != null goto label53;

        $i206 = 0;

        goto label54;

     label53:
        $i206 = interfaceinvoke $r75.<javax.swing.Icon: int getIconHeight()>();

     label54:
        $i60 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _compressedStyleIconMargin>;

        $i61 = $i206 + $i60;

        $r77.<java.awt.Rectangle: int height> = $i61;

     label55:
        $z27 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean isShowCloseButton()>();

        if $z27 == 0 goto label56;

        $z11 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean isShowCloseButtonOnTab()>();

        if $z11 == 0 goto label56;

        $r78 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z12 = virtualinvoke $r78.<com.jidesoft.swing.JideTabbedPane: boolean isShowCloseButtonOnSelectedTab()>();

        if $z12 != 0 goto label56;

        $r79 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r84 = $r79[i205];

        $r80 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r81 = $r80[i205];

        $i62 = $r81.<java.awt.Rectangle: int height>;

        $r82 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.JButton[] _closeButtons>;

        $r83 = $r82[i205];

        $r85 = virtualinvoke $r83.<javax.swing.JButton: java.awt.Dimension getPreferredSize()>();

        $i63 = $r85.<java.awt.Dimension: int height>;

        $i65 = $i62 + $i63;

        $i64 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _compressedStyleCloseButtonMarginVertical>;

        $i66 = $i65 + $i64;

        $r84.<java.awt.Rectangle: int height> = $i66;

     label56:
        if i205 == 0 goto label57;

        $r67 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r72 = $r67[i205];

        $r68 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $i55 = i205 - 1;

        $r69 = $r68[$i55];

        $i58 = $r69.<java.awt.Rectangle: int y>;

        $r70 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $i56 = i205 - 1;

        $r71 = $r70[$i56];

        $i57 = $r71.<java.awt.Rectangle: int height>;

        $i59 = $i58 + $i57;

        $r72.<java.awt.Rectangle: int y> = $i59;

     label57:
        $r63 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r64 = $r63[i205];

        $i54 = $r64.<java.awt.Rectangle: int y>;

        $r65 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r66 = $r65[i205];

        $i53 = $r66.<java.awt.Rectangle: int height>;

        i182 = $i54 + $i53;

        i205 = i205 + 1;

        goto label51;

     label58:
        goto label69;

     label59:
        i207 = 0;

     label60:
        if i207 >= i1 goto label69;

        $r27 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r28 = $r27[i207];

        i208 = $r28.<java.awt.Rectangle: int width>;

        $r29 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i29 = virtualinvoke $r29.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i207 == $i29 goto label65;

        $r46 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z6 = virtualinvoke $r46.<com.jidesoft.swing.JideTabbedPane: boolean isShowIconsOnTab()>();

        if $z6 != 0 goto label61;

        $r59 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z9 = virtualinvoke $r59.<com.jidesoft.swing.JideTabbedPane: boolean isUseDefaultShowIconsOnTab()>();

        if $z9 != 0 goto label61;

        $r60 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r61 = $r60[i207];

        $i51 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _compressedStyleNoIconRectSize>;

        $r61.<java.awt.Rectangle: int width> = $i51;

        goto label64;

     label61:
        $r47 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r48 = virtualinvoke $r47.<com.jidesoft.swing.JideTabbedPane: javax.swing.Icon getIconForTab(int)>(i207);

        $r49 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r50 = $r49[i207];

        if $r48 != null goto label62;

        $i209 = 0;

        goto label63;

     label62:
        $i209 = interfaceinvoke $r48.<javax.swing.Icon: int getIconWidth()>();

     label63:
        $i44 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _compressedStyleIconMargin>;

        $i45 = $i209 + $i44;

        $r50.<java.awt.Rectangle: int width> = $i45;

     label64:
        $z28 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean isShowCloseButton()>();

        if $z28 == 0 goto label65;

        $z7 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean isShowCloseButtonOnTab()>();

        if $z7 == 0 goto label65;

        $r51 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z8 = virtualinvoke $r51.<com.jidesoft.swing.JideTabbedPane: boolean isShowCloseButtonOnSelectedTab()>();

        if $z8 != 0 goto label65;

        $r52 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r57 = $r52[i207];

        $r53 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r54 = $r53[i207];

        $i46 = $r54.<java.awt.Rectangle: int width>;

        $r55 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.JButton[] _closeButtons>;

        $r56 = $r55[i207];

        $r58 = virtualinvoke $r56.<javax.swing.JButton: java.awt.Dimension getPreferredSize()>();

        $i47 = $r58.<java.awt.Dimension: int width>;

        $i49 = $i46 + $i47;

        $i48 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _compressedStyleCloseButtonMarginHorizon>;

        $i50 = $i49 + $i48;

        $r57.<java.awt.Rectangle: int width> = $i50;

     label65:
        if i207 != 0 goto label66;

        if $z1 != 0 goto label66;

        $r42 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r43 = $r42[i207];

        $i42 = $r43.<java.awt.Rectangle: int x>;

        $r44 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r45 = $r44[i207];

        $i40 = $r45.<java.awt.Rectangle: int width>;

        $i41 = i208 - $i40;

        $i43 = $i42 + $i41;

        $r43.<java.awt.Rectangle: int x> = $i43;

     label66:
        if i207 == 0 goto label68;

        if $z1 == 0 goto label67;

        $r36 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r41 = $r36[i207];

        $r37 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $i35 = i207 - 1;

        $r38 = $r37[$i35];

        $i38 = $r38.<java.awt.Rectangle: int x>;

        $r39 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $i36 = i207 - 1;

        $r40 = $r39[$i36];

        $i37 = $r40.<java.awt.Rectangle: int width>;

        $i39 = $i38 + $i37;

        $r41.<java.awt.Rectangle: int x> = $i39;

        goto label68;

     label67:
        $r30 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r35 = $r30[i207];

        $r31 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $i30 = i207 - 1;

        $r32 = $r31[$i30];

        $i33 = $r32.<java.awt.Rectangle: int x>;

        $r33 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $i31 = i207 - 1;

        $r34 = $r33[$i31];

        $i32 = $r34.<java.awt.Rectangle: int width>;

        $i34 = $i33 - $i32;

        $r35.<java.awt.Rectangle: int x> = $i34;

     label68:
        $r167 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r168 = $r167[i207];

        $i210 = $r168.<java.awt.Rectangle: int x>;

        $r169 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r170 = $r169[i207];

        $i211 = $r170.<java.awt.Rectangle: int width>;

        i181 = $i210 + $i211;

        i207 = i207 + 1;

        goto label60;

     label69:
        $r171 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i212 = virtualinvoke $r171.<com.jidesoft.swing.JideTabbedPane: int getTabPlacement()>();

        if $i212 == 1 goto label70;

        $r26 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i25 = virtualinvoke $r26.<com.jidesoft.swing.JideTabbedPane: int getTabPlacement()>();

        if $i25 != 3 goto label71;

     label70:
        $i4 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getLayoutSize()>();

        $i28 = i181 + $i4;

        i181 = $i28;

        $z4 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean isTabLeadingComponentVisible()>();

        if $z4 == 0 goto label72;

        $i24 = r155.<java.awt.Dimension: int width>;

        i181 = $i28 + $i24;

        goto label72;

     label71:
        $i26 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getLayoutSize()>();

        i182 = i182 + $i26;

        $z5 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean isTabLeadingComponentVisible()>();

        if $z5 == 0 goto label72;

        $i27 = r156.<java.awt.Dimension: int height>;

        i182 = i182 + $i27;

     label72:
        $r172 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i213 = virtualinvoke $r172.<com.jidesoft.swing.JideTabbedPane: int getTabAlignment()>();

        if $i213 != 0 goto label75;

        $r13 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i5 = virtualinvoke $r13.<com.jidesoft.swing.JideTabbedPane: int getTabPlacement()>();

        if $i5 == 1 goto label73;

        $r24 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i19 = virtualinvoke $r24.<com.jidesoft.swing.JideTabbedPane: int getTabPlacement()>();

        if $i19 != 3 goto label75;

     label73:
        $r14 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r15 = $r14[0];

        $i20 = $r15.<java.awt.Rectangle: int x>;

        $r17 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r16 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $i6 = lengthof $r16;

        $i7 = $i6 - 1;

        $r18 = $r17[$i7];

        $i11 = $r18.<java.awt.Rectangle: int x>;

        $r20 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r19 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $i8 = lengthof $r19;

        $i9 = $i8 - 1;

        $r21 = $r20[$i9];

        $i10 = $r21.<java.awt.Rectangle: int width>;

        $i21 = $i11 + $i10;

        $r22 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i12 = virtualinvoke $r22.<com.jidesoft.swing.JideTabbedPane: int getWidth()>();

        $i15 = $i12 / 2;

        $i13 = $i21 - $i20;

        $i14 = $i13 / 2;

        $i16 = $i15 - $i14;

        $i22 = $i16 - $i20;

        $r25 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $i23 = lengthof $r25;

        i214 = 0;

     label74:
        if i214 >= $i23 goto label75;

        r23 = $r25[i214];

        $i17 = r23.<java.awt.Rectangle: int x>;

        $i18 = $i17 + $i22;

        r23.<java.awt.Rectangle: int x> = $i18;

        i214 = i214 + 1;

        goto label74;

     label75:
        $r173 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport _tabScroller>;

        $r174 = $r173.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabPanel tabPanel>;

        $r175 = new java.awt.Dimension;

        specialinvoke $r175.<java.awt.Dimension: void <init>(int,int)>(i181, i182);

        virtualinvoke $r174.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabPanel: void setPreferredSize(java.awt.Dimension)>($r175);

        return;
    }

    protected javax.swing.ListCellRenderer getTabListCellRenderer()
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        com.jidesoft.swing.JideTabbedPane $r1;
        javax.swing.ListCellRenderer $r2;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r2 = virtualinvoke $r1.<com.jidesoft.swing.JideTabbedPane: javax.swing.ListCellRenderer getTabListCellRenderer()>();

        return $r2;
    }

    protected void updateCloseAction()
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void ensureCloseButtonCreated()>();

        return;
    }

    private java.util.Vector createHTMLVector()
    {
        com.jidesoft.swing.JideTabbedPane $r2, $r3, $r5;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r1;
        java.util.Vector $r0;
        int $i0, i1;
        javax.swing.text.View $r6;
        java.lang.String $r4;
        boolean $z0;

        r1 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        $r0 = new java.util.Vector;

        specialinvoke $r0.<java.util.Vector: void <init>()>();

        $r2 = r1.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i0 = virtualinvoke $r2.<com.jidesoft.swing.JideTabbedPane: int getTabCount()>();

        if $i0 <= 0 goto label4;

        i1 = 0;

     label1:
        if i1 >= $i0 goto label4;

        $r3 = r1.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r4 = virtualinvoke r1.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.lang.String getCurrentDisplayTitleAt(com.jidesoft.swing.JideTabbedPane,int)>($r3, i1);

        $z0 = staticinvoke <javax.swing.plaf.basic.BasicHTML: boolean isHTMLString(java.lang.String)>($r4);

        if $z0 == 0 goto label2;

        $r5 = r1.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r6 = staticinvoke <javax.swing.plaf.basic.BasicHTML: javax.swing.text.View createHTMLView(javax.swing.JComponent,java.lang.String)>($r5, $r4);

        virtualinvoke $r0.<java.util.Vector: void addElement(java.lang.Object)>($r6);

        goto label3;

     label2:
        virtualinvoke $r0.<java.util.Vector: void addElement(java.lang.Object)>(null);

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return $r0;
    }

    public java.awt.Component getTabPanel()
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        com.jidesoft.swing.JideTabbedPane $r1;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport $r2;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabPanel $r3;
        boolean $z0;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        $z0 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean scrollableTabLayoutEnabled()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport _tabScroller>;

        $r3 = $r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabPanel tabPanel>;

        return $r3;

     label1:
        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        return $r1;
    }

    public void ensureActiveTabIsVisible(boolean)
    {
        com.jidesoft.swing.JideTabbedPane $r1, $r2, $r3, $r5, $r6, $r8, $r11, $r12, $r13, $r18, $r19, $r20;
        boolean $z0, z1, $z2, $z3;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabPanel $r10, $r16;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport $r9, $r15;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        java.awt.Rectangle[] $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8;
        java.awt.Container $r17;
        java.awt.ComponentOrientation $r7, $r14;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        z1 := @parameter0: boolean;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        if $r1 == null goto label1;

        $r2 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i0 = virtualinvoke $r2.<com.jidesoft.swing.JideTabbedPane: int getWidth()>();

        if $i0 != 0 goto label2;

     label1:
        return;

     label2:
        $z0 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean scrollableTabLayoutEnabled()>();

        if $z0 == 0 goto label8;

        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void ensureCurrentLayout()>();

        $r3 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i1 = virtualinvoke $r3.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if z1 == 0 goto label3;

        if $i1 == 0 goto label5;

     label3:
        $r4 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $i2 = lengthof $r4;

        if $i1 >= $i2 goto label5;

        $i8 = (int) -1;

        if $i1 == $i8 goto label5;

        $r9 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport _tabScroller>;

        $r10 = $r9.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabPanel tabPanel>;

        virtualinvoke $r10.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabPanel: void scrollIndexToVisible(int)>($i1);

        $r11 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i4 = virtualinvoke $r11.<com.jidesoft.swing.JideTabbedPane: int getTabPlacement()>();

        if $i4 == 2 goto label4;

        $r12 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i5 = virtualinvoke $r12.<com.jidesoft.swing.JideTabbedPane: int getTabPlacement()>();

        if $i5 == 4 goto label4;

        $r13 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r14 = virtualinvoke $r13.<com.jidesoft.swing.JideTabbedPane: java.awt.ComponentOrientation getComponentOrientation()>();

        $z3 = virtualinvoke $r14.<java.awt.ComponentOrientation: boolean isLeftToRight()>();

        if $z3 == 0 goto label5;

     label4:
        $r15 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport _tabScroller>;

        $r16 = $r15.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabPanel tabPanel>;

        $r17 = virtualinvoke $r16.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabPanel: java.awt.Container getParent()>();

        virtualinvoke $r17.<java.awt.Container: void doLayout()>();

     label5:
        $r18 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i6 = virtualinvoke $r18.<com.jidesoft.swing.JideTabbedPane: int getTabPlacement()>();

        if $i6 == 2 goto label6;

        $r5 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i3 = virtualinvoke $r5.<com.jidesoft.swing.JideTabbedPane: int getTabPlacement()>();

        if $i3 == 4 goto label6;

        $r6 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r7 = virtualinvoke $r6.<com.jidesoft.swing.JideTabbedPane: java.awt.ComponentOrientation getComponentOrientation()>();

        $z2 = virtualinvoke $r7.<java.awt.ComponentOrientation: boolean isLeftToRight()>();

        if $z2 == 0 goto label7;

     label6:
        $r19 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        virtualinvoke $r19.<com.jidesoft.swing.JideTabbedPane: void revalidate()>();

        $r20 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        virtualinvoke $r20.<com.jidesoft.swing.JideTabbedPane: void repaintTabAreaAndContentBorder()>();

        goto label8;

     label7:
        $r8 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        virtualinvoke $r8.<com.jidesoft.swing.JideTabbedPane: void repaint()>();

     label8:
        return;
    }

    protected boolean isShowCloseButtonOnTab()
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        com.jidesoft.swing.JideTabbedPane $r1, $r2;
        boolean $z0, $z1, $z2;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z0 = virtualinvoke $r1.<com.jidesoft.swing.JideTabbedPane: boolean isUseDefaultShowCloseButtonOnTab()>();

        if $z0 == 0 goto label1;

        $z2 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean _showCloseButtonOnTab>;

        return $z2;

     label1:
        $r2 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z1 = virtualinvoke $r2.<com.jidesoft.swing.JideTabbedPane: boolean isShowCloseButtonOnTab()>();

        return $z1;
    }

    protected boolean isShowCloseButton()
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        com.jidesoft.swing.JideTabbedPane $r1;
        boolean $z0;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z0 = virtualinvoke $r1.<com.jidesoft.swing.JideTabbedPane: boolean isShowCloseButton()>();

        return $z0;
    }

    public void ensureCloseButtonCreated()
    {
        com.jidesoft.swing.JideTabbedPane $r3, $r5, $r10, $r19, $r22, $r28;
        com.jidesoft.swing.JideTabbedPane$NoFocusButton $r7, $r18;
        boolean $z0, $z1, $z2, $z3, $z4;
        javax.swing.Icon $r12;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabPanel $r15, $r27;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport $r14, $r16, $r26;
        javax.swing.Action $r11, $r13;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, $i12;
        javax.swing.ActionMap $r33;
        javax.swing.JButton $r8, $r17, r31, r35;
        javax.swing.JButton[] $r1, $r2, $r4, $r6, $r9, $r20, $r21, $r23, $r24, $r25, $r29, r30, r32, $r34;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        $z0 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean isShowCloseButton()>();

        if $z0 == 0 goto label11;

        $z1 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean isShowCloseButtonOnTab()>();

        if $z1 == 0 goto label11;

        $z2 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean scrollableTabLayoutEnabled()>();

        if $z2 == 0 goto label11;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.JButton[] _closeButtons>;

        if $r1 != null goto label01;

        $r28 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i9 = virtualinvoke $r28.<com.jidesoft.swing.JideTabbedPane: int getTabCount()>();

        $r29 = newarray (javax.swing.JButton)[$i9];

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.JButton[] _closeButtons> = $r29;

        goto label05;

     label01:
        $r2 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.JButton[] _closeButtons>;

        $i0 = lengthof $r2;

        $r3 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i1 = virtualinvoke $r3.<com.jidesoft.swing.JideTabbedPane: int getTabCount()>();

        if $i0 <= $i1 goto label04;

        $r22 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i6 = virtualinvoke $r22.<com.jidesoft.swing.JideTabbedPane: int getTabCount()>();

        r30 = newarray (javax.swing.JButton)[$i6];

        $r23 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.JButton[] _closeButtons>;

        $i7 = lengthof r30;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r23, 0, r30, 0, $i7);

        i10 = lengthof r30;

     label02:
        $r24 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.JButton[] _closeButtons>;

        $i8 = lengthof $r24;

        if i10 >= $i8 goto label03;

        $r25 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.JButton[] _closeButtons>;

        r31 = $r25[i10];

        $r26 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport _tabScroller>;

        $r27 = $r26.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabPanel tabPanel>;

        virtualinvoke $r27.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabPanel: void remove(java.awt.Component)>(r31);

        i10 = i10 + 1;

        goto label02;

     label03:
        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.JButton[] _closeButtons> = r30;

        goto label05;

     label04:
        $r4 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.JButton[] _closeButtons>;

        $i2 = lengthof $r4;

        $r5 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i3 = virtualinvoke $r5.<com.jidesoft.swing.JideTabbedPane: int getTabCount()>();

        if $i2 >= $i3 goto label05;

        $r19 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i4 = virtualinvoke $r19.<com.jidesoft.swing.JideTabbedPane: int getTabCount()>();

        r32 = newarray (javax.swing.JButton)[$i4];

        $r21 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.JButton[] _closeButtons>;

        $r20 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.JButton[] _closeButtons>;

        $i5 = lengthof $r20;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r21, 0, r32, 0, $i5);

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.JButton[] _closeButtons> = r32;

     label05:
        $r33 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.ActionMap getActionMap()>();

        i11 = 0;

     label06:
        $r34 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.JButton[] _closeButtons>;

        $i12 = lengthof $r34;

        if i11 >= $i12 goto label11;

        $r6 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.JButton[] _closeButtons>;

        r35 = $r6[i11];

        if r35 != null goto label09;

        $r8 = specialinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.JButton createButton(int)>(0);

        r35 = $r8;

        $r9 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.JButton[] _closeButtons>;

        $r9[i11] = $r8;

        $z3 = $r8 instanceof com.jidesoft.swing.JideTabbedPane$NoFocusButton;

        if $z3 == 0 goto label07;

        $r18 = (com.jidesoft.swing.JideTabbedPane$NoFocusButton) $r8;

        virtualinvoke $r18.<com.jidesoft.swing.JideTabbedPane$NoFocusButton: void setIndex(int)>(i11);

     label07:
        virtualinvoke $r8.<javax.swing.JButton: void setBounds(int,int,int,int)>(0, 0, 0, 0);

        $r10 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r11 = virtualinvoke $r10.<com.jidesoft.swing.JideTabbedPane: javax.swing.Action getCloseAction()>();

        $r12 = virtualinvoke $r8.<javax.swing.JButton: javax.swing.Icon getIcon()>();

        $r13 = virtualinvoke $r33.<javax.swing.ActionMap: javax.swing.Action get(java.lang.Object)>("closeTabAction");

        virtualinvoke $r8.<javax.swing.JButton: void setAction(javax.swing.Action)>($r13);

        specialinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void updateButtonFromAction(javax.swing.JButton,javax.swing.Action)>($r8, $r11);

        if $r12 == null goto label08;

        $r16 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport _tabScroller>;

        $r17 = $r16.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport: javax.swing.JButton closeButton>;

        virtualinvoke $r17.<javax.swing.JButton: void setIcon(javax.swing.Icon)>($r12);

     label08:
        $r14 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport _tabScroller>;

        $r15 = $r14.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabPanel tabPanel>;

        virtualinvoke $r15.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabPanel: java.awt.Component add(java.awt.Component)>($r8);

     label09:
        $z4 = r35 instanceof com.jidesoft.swing.JideTabbedPane$NoFocusButton;

        if $z4 == 0 goto label10;

        $r7 = (com.jidesoft.swing.JideTabbedPane$NoFocusButton) r35;

        virtualinvoke $r7.<com.jidesoft.swing.JideTabbedPane$NoFocusButton: void setIndex(int)>(i11);

     label10:
        i11 = i11 + 1;

        goto label06;

     label11:
        return;
    }

    private void updateButtonFromAction(javax.swing.JButton, javax.swing.Action)
    {
        javax.swing.JButton r1;
        javax.swing.Icon $r4;
        javax.swing.Action r0;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r6;
        java.lang.Object $r2, $r3;
        java.lang.String $r5;
        boolean $z0, $z1, $z2;

        r6 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        r1 := @parameter0: javax.swing.JButton;

        r0 := @parameter1: javax.swing.Action;

        if r0 != null goto label1;

        return;

     label1:
        $z0 = interfaceinvoke r0.<javax.swing.Action: boolean isEnabled()>();

        virtualinvoke r1.<javax.swing.JButton: void setEnabled(boolean)>($z0);

        $r2 = interfaceinvoke r0.<javax.swing.Action: java.lang.Object getValue(java.lang.String)>("ShortDescription");

        $z1 = $r2 instanceof java.lang.String;

        if $z1 == 0 goto label2;

        $r5 = (java.lang.String) $r2;

        virtualinvoke r1.<javax.swing.JButton: void setToolTipText(java.lang.String)>($r5);

     label2:
        $r3 = interfaceinvoke r0.<javax.swing.Action: java.lang.Object getValue(java.lang.String)>("SmallIcon");

        $z2 = $r3 instanceof javax.swing.Icon;

        if $z2 == 0 goto label3;

        $r4 = (javax.swing.Icon) $r3;

        virtualinvoke r1.<javax.swing.JButton: void setIcon(javax.swing.Icon)>($r4);

     label3:
        return;
    }

    protected boolean isShowTabButtons()
    {
        com.jidesoft.swing.JideTabbedPane $r1, $r2, $r3;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        int $i0;
        boolean $z0, $z1, $z2;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i0 = virtualinvoke $r1.<com.jidesoft.swing.JideTabbedPane: int getTabCount()>();

        if $i0 == 0 goto label1;

        $r2 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z0 = virtualinvoke $r2.<com.jidesoft.swing.JideTabbedPane: boolean isShowTabArea()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z1 = virtualinvoke $r3.<com.jidesoft.swing.JideTabbedPane: boolean isShowTabButtons()>();

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    protected boolean isShrinkTabs()
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        com.jidesoft.swing.JideTabbedPane $r1, $r2;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i0 = virtualinvoke $r1.<com.jidesoft.swing.JideTabbedPane: int getTabCount()>();

        if $i0 == 0 goto label1;

        $r2 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i1 = virtualinvoke $r2.<com.jidesoft.swing.JideTabbedPane: int getTabResizeMode()>();

        if $i1 != 2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isTabEditing()
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        boolean $z0;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        $z0 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean _isEditing>;

        return $z0;
    }

    protected com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor createDefaultTabEditor()
    {
        com.jidesoft.swing.JideTabbedPane $r7;
        java.awt.Font $r8;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor $r0;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$2 $r3;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$3 $r4;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r1;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$4 $r5;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$5 $r6;
        javax.swing.text.Document $r2;

        r1 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        $r0 = new com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor;

        specialinvoke $r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor: void <init>(com.jidesoft.plaf.basic.BasicJideTabbedPaneUI)>(r1);

        $r2 = virtualinvoke $r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor: javax.swing.text.Document getDocument()>();

        interfaceinvoke $r2.<javax.swing.text.Document: void addDocumentListener(javax.swing.event.DocumentListener)>(r1);

        $r3 = new com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$2;

        specialinvoke $r3.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$2: void <init>(com.jidesoft.plaf.basic.BasicJideTabbedPaneUI)>(r1);

        virtualinvoke $r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor: void setInputVerifier(javax.swing.InputVerifier)>($r3);

        $r4 = new com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$3;

        specialinvoke $r4.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$3: void <init>(com.jidesoft.plaf.basic.BasicJideTabbedPaneUI)>(r1);

        virtualinvoke $r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor: void addFocusListener(java.awt.event.FocusListener)>($r4);

        $r5 = new com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$4;

        specialinvoke $r5.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$4: void <init>(com.jidesoft.plaf.basic.BasicJideTabbedPaneUI,com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor)>(r1, $r0);

        virtualinvoke $r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor: void addActionListener(java.awt.event.ActionListener)>($r5);

        $r6 = new com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$5;

        specialinvoke $r6.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$5: void <init>(com.jidesoft.plaf.basic.BasicJideTabbedPaneUI)>(r1);

        virtualinvoke $r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor: void addKeyListener(java.awt.event.KeyListener)>($r6);

        $r7 = r1.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r8 = virtualinvoke $r7.<com.jidesoft.swing.JideTabbedPane: java.awt.Font getFont()>();

        virtualinvoke $r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor: void setFont(java.awt.Font)>($r8);

        return $r0;
    }

    public void stopTabEditing()
    {
        com.jidesoft.swing.JideTabbedPane $r1, $r3;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor $r6;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r4, $r7, $r9, $r11;
        java.lang.StringBuilder $r2, $r5, $r8, $r10;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        $i0 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _editingTab>;

        if $i0 < 0 goto label1;

        $i1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _editingTab>;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i2 = virtualinvoke $r1.<com.jidesoft.swing.JideTabbedPane: int getTabCount()>();

        if $i1 >= $i2 goto label1;

        $r3 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i3 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _editingTab>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.lang.String _oldPrefix>;

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor _tabEditor>;

        $r7 = virtualinvoke $r6.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor: java.lang.String getText()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.lang.String _oldPostfix>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.jidesoft.swing.JideTabbedPane: void setTitleAt(int,java.lang.String)>($i3, $r11);

     label1:
        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void cancelTabEditing()>();

        return;
    }

    public void cancelTabEditing()
    {
        com.jidesoft.swing.JideTabbedPane $r6, $r7, $r9, $r10;
        java.awt.Rectangle $r11;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor $r1, $r3;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9;
        java.awt.Container $r4;
        java.awt.Component $r2, $r5, $r8, $r12, $r13;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor _tabEditor>;

        if $r1 == null goto label5;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean _isEditing> = 0;

        $r2 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Component getTabPanel()>();

        $r4 = (java.awt.Container) $r2;

        $r3 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor _tabEditor>;

        virtualinvoke $r4.<java.awt.Container: void remove(java.awt.Component)>($r3);

        $i0 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _editingTab>;

        if $i0 < 0 goto label1;

        $i1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _editingTab>;

        $r9 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i2 = virtualinvoke $r9.<com.jidesoft.swing.JideTabbedPane: int getTabCount()>();

        if $i1 >= $i2 goto label1;

        $r10 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i3 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _editingTab>;

        $r11 = virtualinvoke $r10.<com.jidesoft.swing.JideTabbedPane: java.awt.Rectangle getBoundsAt(int)>($i3);

        $r12 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Component getTabPanel()>();

        $i7 = $r11.<java.awt.Rectangle: int x>;

        $i6 = $r11.<java.awt.Rectangle: int y>;

        $i5 = $r11.<java.awt.Rectangle: int width>;

        $i4 = $r11.<java.awt.Rectangle: int height>;

        virtualinvoke $r12.<java.awt.Component: void repaint(int,int,int,int)>($i7, $i6, $i5, $i4);

        goto label2;

     label1:
        $r5 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Component getTabPanel()>();

        virtualinvoke $r5.<java.awt.Component: void repaint()>();

     label2:
        $r13 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Component _originalFocusComponent>;

        if $r13 == null goto label3;

        $r8 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Component _originalFocusComponent>;

        virtualinvoke $r8.<java.awt.Component: void requestFocus()>();

        goto label4;

     label3:
        $r6 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        virtualinvoke $r6.<com.jidesoft.swing.JideTabbedPane: boolean requestFocusForVisibleComponent()>();

     label4:
        $i9 = (int) -1;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _editingTab> = $i9;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.lang.String _oldValue> = null;

        $r7 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        virtualinvoke $r7.<com.jidesoft.swing.JideTabbedPane: void doLayout()>();

     label5:
        return;
    }

    public boolean editTabAt(int)
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor $r1, $r2, $r3, $r5, $r7, $r8, $r9;
        java.awt.Component $r4;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        int i0;
        java.awt.Container $r6;
        boolean $z0;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        i0 := @parameter0: int;

        $z0 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean _isEditing>;

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor _tabEditor>;

        if $r1 != null goto label2;

        $r9 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor createDefaultTabEditor()>();

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor _tabEditor> = $r9;

     label2:
        $r2 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor _tabEditor>;

        if $r2 == null goto label3;

        $r3 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor _tabEditor>;

        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void prepareEditor(com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor,int)>($r3, i0);

        $r4 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Component getTabPanel()>();

        $r6 = (java.awt.Container) $r4;

        $r5 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor _tabEditor>;

        virtualinvoke $r6.<java.awt.Container: java.awt.Component add(java.awt.Component)>($r5);

        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void resizeEditor(int)>(i0);

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _editingTab> = i0;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean _isEditing> = 1;

        $r7 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor _tabEditor>;

        virtualinvoke $r7.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor: boolean requestFocusInWindow()>();

        $r8 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor _tabEditor>;

        virtualinvoke $r8.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor: void selectAll()>();

        return 1;

     label3:
        return 0;
    }

    public int getEditingTabIndex()
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        int $i0;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        $i0 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _editingTab>;

        return $i0;
    }

    protected void prepareEditor(com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor, int)
    {
        com.jidesoft.swing.JideTabbedPane $r1, $r3, $r4, $r25, $r27, $r31;
        java.awt.Color $r32;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor r5;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.awt.Font $r2, r26;
        java.lang.StringBuilder $r15, $r17, $r18, $r20, $r21, $r23;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.String $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r16, $r19, $r22, $r24, $r28, $r29, r30;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        r5 := @parameter0: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor;

        i0 := @parameter1: int;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r2 = virtualinvoke $r1.<com.jidesoft.swing.JideTabbedPane: java.awt.Font getSelectedTabFont()>();

        if $r2 == null goto label1;

        $r25 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        r26 = virtualinvoke $r25.<com.jidesoft.swing.JideTabbedPane: java.awt.Font getSelectedTabFont()>();

        goto label2;

     label1:
        $r3 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        r26 = virtualinvoke $r3.<com.jidesoft.swing.JideTabbedPane: java.awt.Font getFont()>();

     label2:
        $r4 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z0 = virtualinvoke $r4.<com.jidesoft.swing.JideTabbedPane: boolean isBoldActiveTab()>();

        if $z0 == 0 goto label3;

        $i9 = virtualinvoke r26.<java.awt.Font: int getStyle()>();

        if $i9 == 1 goto label3;

        r26 = virtualinvoke r26.<java.awt.Font: java.awt.Font deriveFont(int)>(1);

     label3:
        virtualinvoke r5.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor: void setFont(java.awt.Font)>(r26);

        $r27 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r28 = virtualinvoke $r27.<com.jidesoft.swing.JideTabbedPane: java.lang.String getTitleAt(int)>(i0);

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.lang.String _oldValue> = $r28;

        $r29 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.lang.String _oldValue>;

        $z4 = virtualinvoke $r29.<java.lang.String: boolean startsWith(java.lang.String)>("<HTML>");

        if $z4 == 0 goto label5;

        $r7 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.lang.String _oldValue>;

        $z1 = virtualinvoke $r7.<java.lang.String: boolean endsWith(java.lang.String)>("/HTML>");

        if $z1 == 0 goto label5;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.lang.String _oldPrefix> = "<HTML>";

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.lang.String _oldPostfix> = "</HTML>";

        $r9 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.lang.String _oldValue>;

        $r8 = "<HTML>";

        $i1 = virtualinvoke $r8.<java.lang.String: int length()>();

        $r10 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.lang.String _oldValue>;

        $i2 = virtualinvoke $r10.<java.lang.String: int length()>();

        $r11 = "</HTML>";

        $i3 = virtualinvoke $r11.<java.lang.String: int length()>();

        $i4 = $i2 - $i3;

        $r12 = virtualinvoke $r9.<java.lang.String: java.lang.String substring(int,int)>($i1, $i4);

        r30 = $r12;

        $z2 = virtualinvoke $r12.<java.lang.String: boolean startsWith(java.lang.String)>("<B>");

        if $z2 == 0 goto label4;

        $z3 = virtualinvoke $r12.<java.lang.String: boolean endsWith(java.lang.String)>("/B>");

        if $z3 == 0 goto label4;

        $r13 = "<B>";

        $i5 = virtualinvoke $r13.<java.lang.String: int length()>();

        $i6 = virtualinvoke $r12.<java.lang.String: int length()>();

        $r14 = "</B>";

        $i7 = virtualinvoke $r14.<java.lang.String: int length()>();

        $i8 = $i6 - $i7;

        r30 = virtualinvoke $r12.<java.lang.String: java.lang.String substring(int,int)>($i5, $i8);

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.lang.String _oldPrefix>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<B>");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.lang.String _oldPrefix> = $r19;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</B>");

        $r22 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.lang.String _oldPostfix>;

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.lang.String _oldPostfix> = $r24;

     label4:
        virtualinvoke r5.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor: void setText(java.lang.String)>(r30);

        goto label6;

     label5:
        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.lang.String _oldPrefix> = "";

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.lang.String _oldPostfix> = "";

        $r6 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.lang.String _oldValue>;

        virtualinvoke r5.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor: void setText(java.lang.String)>($r6);

     label6:
        virtualinvoke r5.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor: void selectAll()>();

        $r31 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r32 = virtualinvoke $r31.<com.jidesoft.swing.JideTabbedPane: java.awt.Color getForegroundAt(int)>(i0);

        virtualinvoke r5.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor: void setForeground(java.awt.Color)>($r32);

        return;
    }

    protected java.awt.Rectangle getTabsTextBoundsAt(int)
    {
        com.jidesoft.swing.JideTabbedPane $r1, $r5, $r7, $r9, $r10, $r12, $r14, $r16, $r19, $r20;
        boolean $z0;
        java.awt.Font $r17, r18;
        javax.swing.Icon $r15;
        java.awt.Graphics $r21;
        java.awt.Rectangle $r2, $r3, $r4;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34;
        java.lang.String $r6, $r11, r13;
        java.awt.FontMetrics $r8;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        i0 := @parameter0: int;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r2 = virtualinvoke $r1.<com.jidesoft.swing.JideTabbedPane: java.awt.Rectangle getBoundsAt(int)>(i0);

        $r3 = new java.awt.Rectangle;

        specialinvoke $r3.<java.awt.Rectangle: void <init>()>();

        $r4 = new java.awt.Rectangle;

        specialinvoke $r4.<java.awt.Rectangle: void <init>()>();

        $i1 = $r2.<java.awt.Rectangle: int width>;

        if $i1 >= 200 goto label01;

        $r2.<java.awt.Rectangle: int width> = 200;

     label01:
        $r5 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r6 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.lang.String getCurrentDisplayTitleAt(com.jidesoft.swing.JideTabbedPane,int)>($r5, i0);

        r13 = $r6;

        if $r6 == null goto label02;

        $i30 = virtualinvoke $r6.<java.lang.String: int length()>();

        if $i30 != 0 goto label03;

     label02:
        r13 = "i";

     label03:
        $r14 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r15 = virtualinvoke $r14.<com.jidesoft.swing.JideTabbedPane: javax.swing.Icon getIconForTab(int)>(i0);

        $r16 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r17 = virtualinvoke $r16.<com.jidesoft.swing.JideTabbedPane: java.awt.Font getFont()>();

        r18 = $r17;

        $r19 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i31 = virtualinvoke $r19.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i0 != $i31 goto label04;

        $r12 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z0 = virtualinvoke $r12.<com.jidesoft.swing.JideTabbedPane: boolean isBoldActiveTab()>();

        if $z0 == 0 goto label04;

        r18 = virtualinvoke $r17.<java.awt.Font: java.awt.Font deriveFont(int)>(1);

     label04:
        $r7 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r20 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r21 = virtualinvoke $r20.<com.jidesoft.swing.JideTabbedPane: java.awt.Graphics getGraphics()>();

        $r8 = virtualinvoke $r21.<java.awt.Graphics: java.awt.FontMetrics getFontMetrics(java.awt.Font)>(r18);

        $r11 = r13;

        if $r15 != null goto label05;

        $i32 = 0;

        goto label06;

     label05:
        $i32 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _textIconGap>;

     label06:
        staticinvoke <javax.swing.SwingUtilities: java.lang.String layoutCompoundLabel(javax.swing.JComponent,java.awt.FontMetrics,java.lang.String,javax.swing.Icon,int,int,int,int,java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle,int)>($r7, $r8, $r11, $r15, 0, 0, 0, 11, $r2, $r3, $r4, $i32);

        $r9 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i2 = virtualinvoke $r9.<com.jidesoft.swing.JideTabbedPane: int getTabPlacement()>();

        if $i2 == 1 goto label07;

        $r10 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i14 = virtualinvoke $r10.<com.jidesoft.swing.JideTabbedPane: int getTabPlacement()>();

        if $i14 != 3 goto label10;

     label07:
        $i4 = $r2.<java.awt.Rectangle: int x>;

        $i3 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _iconMargin>;

        $i5 = $i4 + $i3;

        $r3.<java.awt.Rectangle: int x> = $i5;

        if $r15 == null goto label08;

        $i11 = $r3.<java.awt.Rectangle: int x>;

        $i10 = $r3.<java.awt.Rectangle: int width>;

        $i13 = $i11 + $i10;

        $i12 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _textIconGap>;

        $i33 = $i13 + $i12;

        goto label09;

     label08:
        $i7 = $r2.<java.awt.Rectangle: int x>;

        $i6 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _textPadding>;

        $i33 = $i7 + $i6;

     label09:
        $r4.<java.awt.Rectangle: int x> = $i33;

        $i8 = $r4.<java.awt.Rectangle: int width>;

        $i9 = $i8 + 2;

        $r4.<java.awt.Rectangle: int width> = $i9;

        goto label13;

     label10:
        $i16 = $r2.<java.awt.Rectangle: int y>;

        $i15 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _iconMargin>;

        $i17 = $i16 + $i15;

        $r3.<java.awt.Rectangle: int y> = $i17;

        if $r15 == null goto label11;

        $i27 = $r3.<java.awt.Rectangle: int y>;

        $i26 = $r3.<java.awt.Rectangle: int height>;

        $i29 = $i27 + $i26;

        $i28 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _textIconGap>;

        $i34 = $i29 + $i28;

        goto label12;

     label11:
        $i19 = $r2.<java.awt.Rectangle: int y>;

        $i18 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _textPadding>;

        $i34 = $i19 + $i18;

     label12:
        $r4.<java.awt.Rectangle: int y> = $i34;

        $i20 = $r2.<java.awt.Rectangle: int x>;

        $i21 = $i20 + 2;

        $r3.<java.awt.Rectangle: int x> = $i21;

        $i22 = $r2.<java.awt.Rectangle: int x>;

        $i23 = $i22 + 2;

        $r4.<java.awt.Rectangle: int x> = $i23;

        $i24 = $r4.<java.awt.Rectangle: int height>;

        $i25 = $i24 + 2;

        $r4.<java.awt.Rectangle: int height> = $i25;

     label13:
        return $r4;
    }

    private void updateTab()
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        $z0 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean _isEditing>;

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getEditingTabIndex()>();

        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void resizeEditor(int)>($i0);

     label1:
        return;
    }

    public void insertUpdate(javax.swing.event.DocumentEvent)
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        javax.swing.event.DocumentEvent r1;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        r1 := @parameter0: javax.swing.event.DocumentEvent;

        specialinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void updateTab()>();

        return;
    }

    public void removeUpdate(javax.swing.event.DocumentEvent)
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        javax.swing.event.DocumentEvent r1;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        r1 := @parameter0: javax.swing.event.DocumentEvent;

        specialinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void updateTab()>();

        return;
    }

    public void changedUpdate(javax.swing.event.DocumentEvent)
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        javax.swing.event.DocumentEvent r1;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        r1 := @parameter0: javax.swing.event.DocumentEvent;

        specialinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void updateTab()>();

        return;
    }

    protected void resizeEditor(int)
    {
        com.jidesoft.swing.JideTabbedPane $r27, $r32;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r24, $r26, $r30, $r31;
        javax.swing.border.Border $r3, $r7, $r11, $r15, $r19, $r23;
        boolean $z0;
        java.awt.Component $r28, $r33;
        java.awt.Rectangle $r1, $r29, $r36, r37;
        java.awt.Insets $r5, $r9, $r13, $r17, $r21, $r25;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        java.awt.Container $r34, $r35;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle getTabsTextBoundsAt(int)>(i0);

        r37 = $r1;

        $z0 = virtualinvoke $r1.<java.awt.Rectangle: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r36 = new java.awt.Rectangle;

        specialinvoke $r36.<java.awt.Rectangle: void <init>(int,int)>(14, 3);

        r37 = $r36;

     label1:
        $i1 = r37.<java.awt.Rectangle: int x>;

        $r2 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor _tabEditor>;

        $r3 = virtualinvoke $r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor: javax.swing.border.Border getBorder()>();

        $r4 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor _tabEditor>;

        $r5 = interfaceinvoke $r3.<javax.swing.border.Border: java.awt.Insets getBorderInsets(java.awt.Component)>($r4);

        $i2 = $r5.<java.awt.Insets: int left>;

        $i3 = $i1 - $i2;

        r37.<java.awt.Rectangle: int x> = $i3;

        $i4 = r37.<java.awt.Rectangle: int width>;

        $r6 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor _tabEditor>;

        $r7 = virtualinvoke $r6.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor: javax.swing.border.Border getBorder()>();

        $r8 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor _tabEditor>;

        $r9 = interfaceinvoke $r7.<javax.swing.border.Border: java.awt.Insets getBorderInsets(java.awt.Component)>($r8);

        $i5 = $r9.<java.awt.Insets: int left>;

        $i6 = $i4 + $i5;

        $r10 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor _tabEditor>;

        $r11 = virtualinvoke $r10.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor: javax.swing.border.Border getBorder()>();

        $r12 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor _tabEditor>;

        $r13 = interfaceinvoke $r11.<javax.swing.border.Border: java.awt.Insets getBorderInsets(java.awt.Component)>($r12);

        $i7 = $r13.<java.awt.Insets: int right>;

        $i8 = $i6 + $i7;

        r37.<java.awt.Rectangle: int width> = $i8;

        $i9 = r37.<java.awt.Rectangle: int y>;

        $r14 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor _tabEditor>;

        $r15 = virtualinvoke $r14.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor: javax.swing.border.Border getBorder()>();

        $r16 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor _tabEditor>;

        $r17 = interfaceinvoke $r15.<javax.swing.border.Border: java.awt.Insets getBorderInsets(java.awt.Component)>($r16);

        $i10 = $r17.<java.awt.Insets: int top>;

        $i11 = $i9 - $i10;

        r37.<java.awt.Rectangle: int y> = $i11;

        $i12 = r37.<java.awt.Rectangle: int height>;

        $r18 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor _tabEditor>;

        $r19 = virtualinvoke $r18.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor: javax.swing.border.Border getBorder()>();

        $r20 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor _tabEditor>;

        $r21 = interfaceinvoke $r19.<javax.swing.border.Border: java.awt.Insets getBorderInsets(java.awt.Component)>($r20);

        $i13 = $r21.<java.awt.Insets: int top>;

        $i14 = $i12 + $i13;

        $r22 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor _tabEditor>;

        $r23 = virtualinvoke $r22.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor: javax.swing.border.Border getBorder()>();

        $r24 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor _tabEditor>;

        $r25 = interfaceinvoke $r23.<javax.swing.border.Border: java.awt.Insets getBorderInsets(java.awt.Component)>($r24);

        $i15 = $r25.<java.awt.Insets: int bottom>;

        $i16 = $i14 + $i15;

        r37.<java.awt.Rectangle: int height> = $i16;

        $r26 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor _tabEditor>;

        $r27 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r28 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Component getTabPanel()>();

        $r29 = staticinvoke <javax.swing.SwingUtilities: java.awt.Rectangle convertRectangle(java.awt.Component,java.awt.Rectangle,java.awt.Component)>($r27, r37, $r28);

        virtualinvoke $r26.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor: void setBounds(java.awt.Rectangle)>($r29);

        $r30 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor _tabEditor>;

        virtualinvoke $r30.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor: void invalidate()>();

        $r31 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor _tabEditor>;

        virtualinvoke $r31.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor: void validate()>();

        $r32 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        virtualinvoke $r32.<com.jidesoft.swing.JideTabbedPane: void doLayout()>();

        $r33 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Component getTabPanel()>();

        $r34 = virtualinvoke $r33.<java.awt.Component: java.awt.Container getParent()>();

        $r35 = virtualinvoke $r34.<java.awt.Container: java.awt.Container getParent()>();

        virtualinvoke $r35.<java.awt.Container: void repaint()>();

        return;
    }

    protected java.lang.String getCurrentDisplayTitleAt(com.jidesoft.swing.JideTabbedPane, int)
    {
        com.jidesoft.swing.JideTabbedPane r0;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r1;
        int i0, $i1;
        java.lang.String r3;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor $r2;
        boolean $z0;

        r1 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        r0 := @parameter0: com.jidesoft.swing.JideTabbedPane;

        i0 := @parameter1: int;

        r3 = virtualinvoke r0.<com.jidesoft.swing.JideTabbedPane: java.lang.String getDisplayTitleAt(int)>(i0);

        $z0 = r1.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean _isEditing>;

        if $z0 == 0 goto label1;

        $i1 = r1.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _editingTab>;

        if i0 != $i1 goto label1;

        $r2 = r1.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor _tabEditor>;

        r3 = virtualinvoke $r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor: java.lang.String getText()>();

     label1:
        return r3;
    }

    public void startEditing(java.awt.event.MouseEvent)
    {
        com.jidesoft.swing.JideTabbedPane $r2, $r3, $r4, $r6, $r7, $r18, $r19, $r20, $r22, $r23;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor $r12;
        com.jidesoft.swing.TabEditingValidator $r5, $r8, $r21, $r24;
        boolean $z0, $z1, $z2, $z3, z4, z5;
        java.lang.StringBuilder $r9, $r11, $r14, $r16;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r10, $r13, $r15, $r17;
        java.awt.event.MouseEvent r1;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        r1 := @parameter0: java.awt.event.MouseEvent;

        $r2 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i0 = virtualinvoke r1.<java.awt.event.MouseEvent: int getX()>();

        $i1 = virtualinvoke r1.<java.awt.event.MouseEvent: int getY()>();

        $i2 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int tabForCoordinate(javax.swing.JTabbedPane,int,int)>($r2, $i0, $i1);

        $z0 = virtualinvoke r1.<java.awt.event.MouseEvent: boolean isPopupTrigger()>();

        if $z0 != 0 goto label2;

        if $i2 < 0 goto label2;

        $r18 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z2 = virtualinvoke $r18.<com.jidesoft.swing.JideTabbedPane: boolean isEnabledAt(int)>($i2);

        if $z2 == 0 goto label2;

        $r19 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z3 = virtualinvoke $r19.<com.jidesoft.swing.JideTabbedPane: boolean isTabEditingAllowed()>();

        if $z3 == 0 goto label2;

        $i3 = virtualinvoke r1.<java.awt.event.MouseEvent: int getClickCount()>();

        if $i3 != 2 goto label2;

        z4 = 1;

        $r20 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r21 = virtualinvoke $r20.<com.jidesoft.swing.JideTabbedPane: com.jidesoft.swing.TabEditingValidator getTabEditingValidator()>();

        if $r21 == null goto label1;

        $r23 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r24 = virtualinvoke $r23.<com.jidesoft.swing.JideTabbedPane: com.jidesoft.swing.TabEditingValidator getTabEditingValidator()>();

        z4 = interfaceinvoke $r24.<com.jidesoft.swing.TabEditingValidator: boolean shouldStartEdit(int,java.awt.event.MouseEvent)>($i2, r1);

     label1:
        if z4 == 0 goto label2;

        virtualinvoke r1.<java.awt.event.MouseEvent: void consume()>();

        $r22 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        virtualinvoke $r22.<com.jidesoft.swing.JideTabbedPane: void editTabAt(int)>($i2);

     label2:
        $i4 = virtualinvoke r1.<java.awt.event.MouseEvent: int getClickCount()>();

        if $i4 != 1 goto label4;

        $r3 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z1 = virtualinvoke $r3.<com.jidesoft.swing.JideTabbedPane: boolean isTabEditing()>();

        if $z1 == 0 goto label4;

        z5 = 1;

        $r4 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r5 = virtualinvoke $r4.<com.jidesoft.swing.JideTabbedPane: com.jidesoft.swing.TabEditingValidator getTabEditingValidator()>();

        if $r5 == null goto label3;

        $r7 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r8 = virtualinvoke $r7.<com.jidesoft.swing.JideTabbedPane: com.jidesoft.swing.TabEditingValidator getTabEditingValidator()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.lang.String _oldPrefix>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor _tabEditor>;

        $r13 = virtualinvoke $r12.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabEditor: java.lang.String getText()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.lang.String _oldPostfix>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        z5 = interfaceinvoke $r8.<com.jidesoft.swing.TabEditingValidator: boolean alertIfInvalid(int,java.lang.String)>($i2, $r17);

     label3:
        if z5 == 0 goto label4;

        $r6 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        virtualinvoke $r6.<com.jidesoft.swing.JideTabbedPane: void stopTabEditing()>();

     label4:
        return;
    }

    public com.jidesoft.plaf.basic.ThemePainter getPainter()
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        com.jidesoft.plaf.basic.ThemePainter $r1;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.ThemePainter _painter>;

        return $r1;
    }

    protected int getTabLabelShiftX(int, int, boolean)
    {
        java.awt.Rectangle r2;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        java.awt.Rectangle[] $r1;
        byte $b3, $b5;
        int i0, i1, $i2, i4;
        boolean z0;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        r2 = $r1[i0];

        tableswitch(i1)
        {
            case 1: goto label7;
            case 2: goto label1;
            case 3: goto label7;
            case 4: goto label4;
            default: goto label7;
        };

     label1:
        if z0 == 0 goto label2;

        $b3 = -1;

        goto label3;

     label2:
        $b3 = 1;

     label3:
        i4 = $b3;

        goto label8;

     label4:
        if z0 == 0 goto label5;

        $b5 = 1;

        goto label6;

     label5:
        $b5 = -1;

     label6:
        i4 = $b5;

        goto label8;

     label7:
        $i2 = r2.<java.awt.Rectangle: int width>;

        i4 = $i2 % 2;

     label8:
        return i4;
    }

    protected int getTabLabelShiftY(int, int, boolean)
    {
        java.awt.Rectangle r2;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        java.awt.Rectangle[] $r1;
        byte $b3, $b5;
        int i0, i1, $i2, i4;
        boolean z0;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        r2 = $r1[i0];

        tableswitch(i1)
        {
            case 1: goto label5;
            case 2: goto label4;
            case 3: goto label1;
            case 4: goto label4;
            default: goto label5;
        };

     label1:
        if z0 == 0 goto label2;

        $b3 = 1;

        goto label3;

     label2:
        $b3 = -1;

     label3:
        i4 = $b3;

        goto label8;

     label4:
        $i2 = r2.<java.awt.Rectangle: int height>;

        i4 = $i2 % 2;

        goto label8;

     label5:
        if z0 == 0 goto label6;

        $b5 = -1;

        goto label7;

     label6:
        $b5 = 1;

     label7:
        i4 = $b5;

     label8:
        return i4;
    }

    protected void paintFocusIndicator(java.awt.Graphics, int, java.awt.Rectangle[], int, java.awt.Rectangle, java.awt.Rectangle, boolean)
    {
        com.jidesoft.swing.JideTabbedPane $r4;
        java.awt.Color $r6;
        boolean $z0, z1;
        java.awt.Graphics r5;
        java.awt.Rectangle $r0, $r2, r7, r8;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r3;
        java.awt.Rectangle[] r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, i26, i27, i28, i29;

        r3 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        r5 := @parameter0: java.awt.Graphics;

        i1 := @parameter1: int;

        r1 := @parameter2: java.awt.Rectangle[];

        i0 := @parameter3: int;

        r7 := @parameter4: java.awt.Rectangle;

        r8 := @parameter5: java.awt.Rectangle;

        z1 := @parameter6: boolean;

        $r0 = new java.awt.Rectangle;

        $r2 = r1[i0];

        specialinvoke $r0.<java.awt.Rectangle: void <init>(java.awt.Rectangle)>($r2);

        $r4 = r3.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z0 = virtualinvoke $r4.<com.jidesoft.swing.JideTabbedPane: boolean hasFocus()>();

        if $z0 == 0 goto label6;

        if z1 == 0 goto label6;

        $r6 = r3.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Color _focus>;

        virtualinvoke r5.<java.awt.Graphics: void setColor(java.awt.Color)>($r6);

        tableswitch(i1)
        {
            case 1: goto label4;
            case 2: goto label1;
            case 3: goto label3;
            case 4: goto label2;
            default: goto label4;
        };

     label1:
        $i14 = $r0.<java.awt.Rectangle: int x>;

        i26 = $i14 + 3;

        $i15 = $r0.<java.awt.Rectangle: int y>;

        i27 = $i15 + 3;

        $i16 = $r0.<java.awt.Rectangle: int width>;

        i28 = $i16 - 5;

        $i17 = $r0.<java.awt.Rectangle: int height>;

        $i18 = $i17 - 6;

        $i19 = virtualinvoke r3.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getTabGap()>();

        i29 = $i18 - $i19;

        goto label5;

     label2:
        $i2 = $r0.<java.awt.Rectangle: int x>;

        i26 = $i2 + 2;

        $i3 = $r0.<java.awt.Rectangle: int y>;

        i27 = $i3 + 3;

        $i4 = $r0.<java.awt.Rectangle: int width>;

        i28 = $i4 - 5;

        $i5 = $r0.<java.awt.Rectangle: int height>;

        $i6 = $i5 - 6;

        $i7 = virtualinvoke r3.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getTabGap()>();

        i29 = $i6 - $i7;

        goto label5;

     label3:
        $i8 = $r0.<java.awt.Rectangle: int x>;

        i26 = $i8 + 3;

        $i9 = $r0.<java.awt.Rectangle: int y>;

        i27 = $i9 + 2;

        $i10 = $r0.<java.awt.Rectangle: int width>;

        $i11 = $i10 - 6;

        $i12 = virtualinvoke r3.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getTabGap()>();

        i28 = $i11 - $i12;

        $i13 = $r0.<java.awt.Rectangle: int height>;

        i29 = $i13 - 5;

        goto label5;

     label4:
        $i20 = $r0.<java.awt.Rectangle: int x>;

        i26 = $i20 + 3;

        $i21 = $r0.<java.awt.Rectangle: int y>;

        i27 = $i21 + 3;

        $i22 = $r0.<java.awt.Rectangle: int width>;

        $i23 = $i22 - 6;

        $i24 = virtualinvoke r3.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getTabGap()>();

        i28 = $i23 - $i24;

        $i25 = $r0.<java.awt.Rectangle: int height>;

        i29 = $i25 - 5;

     label5:
        staticinvoke <javax.swing.plaf.basic.BasicGraphicsUtils: void drawDashedRect(java.awt.Graphics,int,int,int,int)>(r5, i26, i27, i28, i29);

     label6:
        return;
    }

    protected boolean isRoundedCorner()
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r2;
        java.lang.String $r0, $r1;
        boolean $z0;

        r2 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        $r0 = "true";

        $r1 = staticinvoke <com.jidesoft.utils.SecurityUtils: java.lang.String getProperty(java.lang.String,java.lang.String)>("shadingtheme", "false");

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        return $z0;
    }

    protected int getTabShape()
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        com.jidesoft.swing.JideTabbedPane $r1;
        int $i0;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i0 = virtualinvoke $r1.<com.jidesoft.swing.JideTabbedPane: int getTabShape()>();

        return $i0;
    }

    protected int getTabResizeMode()
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        com.jidesoft.swing.JideTabbedPane $r1;
        int $i0;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i0 = virtualinvoke $r1.<com.jidesoft.swing.JideTabbedPane: int getTabResizeMode()>();

        return $i0;
    }

    protected int getColorTheme()
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        com.jidesoft.swing.JideTabbedPane $r1;
        int $i0;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i0 = virtualinvoke $r1.<com.jidesoft.swing.JideTabbedPane: int getColorTheme()>();

        return $i0;
    }

    protected int getLeftMargin()
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        int $i0, $i1;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        $i0 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getTabShape()>();

        if $i0 != 4 goto label1;

        return 18;

     label1:
        $i1 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getTabShape()>();

        if $i1 != 8 goto label2;

        return 6;

     label2:
        return 0;
    }

    protected int getTabGap()
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        int $i0;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        $i0 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getTabShape()>();

        if $i0 != 4 goto label1;

        return 4;

     label1:
        return 0;
    }

    protected int getLayoutSize()
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        com.jidesoft.swing.JideTabbedPane $r1, $r2;
        int $i0, $i1, $i2;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        $i0 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getTabShape()>();

        if $i0 != 8 goto label1;

        return 6;

     label1:
        if $i0 != 7 goto label2;

        return 15;

     label2:
        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i1 = virtualinvoke $r1.<com.jidesoft.swing.JideTabbedPane: int getTabShape()>();

        if $i1 == 5 goto label3;

        $r2 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i2 = virtualinvoke $r2.<com.jidesoft.swing.JideTabbedPane: int getTabShape()>();

        if $i2 != 10 goto label4;

     label3:
        return 2;

     label4:
        if $i0 == 1 goto label5;

        if $i0 != 11 goto label6;

     label5:
        return 6;

     label6:
        return 0;
    }

    protected int getTabRightPadding()
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        int $i0;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        $i0 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getTabShape()>();

        if $i0 != 8 goto label1;

        return 4;

     label1:
        return 0;
    }

    protected java.awt.event.MouseListener createMouseListener()
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        com.jidesoft.swing.JideTabbedPane $r1;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$MouseHandler $r2;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$RolloverMouseHandler $r3;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        $i0 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getTabShape()>();

        if $i0 == 1 goto label1;

        $i1 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getTabShape()>();

        if $i1 == 11 goto label1;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z0 = virtualinvoke $r1.<com.jidesoft.swing.JideTabbedPane: boolean isShowCloseButtonOnMouseOver()>();

        if $z0 == 0 goto label2;

     label1:
        $r3 = new com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$RolloverMouseHandler;

        specialinvoke $r3.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$RolloverMouseHandler: void <init>(com.jidesoft.plaf.basic.BasicJideTabbedPaneUI)>(r0);

        return $r3;

     label2:
        $r2 = new com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$MouseHandler;

        specialinvoke $r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$MouseHandler: void <init>(com.jidesoft.plaf.basic.BasicJideTabbedPaneUI)>(r0);

        return $r2;
    }

    protected java.awt.event.MouseWheelListener createMouseWheelListener()
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r1;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$MouseWheelHandler $r0;

        r1 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        $r0 = new com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$MouseWheelHandler;

        specialinvoke $r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$MouseWheelHandler: void <init>(com.jidesoft.plaf.basic.BasicJideTabbedPaneUI)>(r1);

        return $r0;
    }

    protected java.awt.event.MouseMotionListener createMouseMotionListener()
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        com.jidesoft.swing.JideTabbedPane $r1;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$MouseMotionHandler $r2;
        int $i0, $i1;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$RolloverMouseMotionHandler $r3;
        boolean $z0;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        $i0 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getTabShape()>();

        if $i0 == 1 goto label1;

        $i1 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getTabShape()>();

        if $i1 == 11 goto label1;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z0 = virtualinvoke $r1.<com.jidesoft.swing.JideTabbedPane: boolean isShowCloseButtonOnMouseOver()>();

        if $z0 == 0 goto label2;

     label1:
        $r3 = new com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$RolloverMouseMotionHandler;

        specialinvoke $r3.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$RolloverMouseMotionHandler: void <init>(com.jidesoft.plaf.basic.BasicJideTabbedPaneUI)>(r0);

        return $r3;

     label2:
        $r2 = new com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$MouseMotionHandler;

        specialinvoke $r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$MouseMotionHandler: void <init>(com.jidesoft.plaf.basic.BasicJideTabbedPaneUI)>(r0);

        return $r2;
    }

    protected boolean isTabLeadingComponentVisible()
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        com.jidesoft.swing.JideTabbedPane $r1;
        java.awt.Component $r2, $r3;
        boolean $z0, $z1, $z2;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z0 = virtualinvoke $r1.<com.jidesoft.swing.JideTabbedPane: boolean isTabShown()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Component _tabLeadingComponent>;

        if $r2 == null goto label1;

        $r3 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Component _tabLeadingComponent>;

        $z1 = virtualinvoke $r3.<java.awt.Component: boolean isVisible()>();

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    protected boolean isTabTrailingComponentVisible()
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        com.jidesoft.swing.JideTabbedPane $r1;
        java.awt.Component $r2, $r3;
        boolean $z0, $z1, $z2;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z0 = virtualinvoke $r1.<com.jidesoft.swing.JideTabbedPane: boolean isTabShown()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Component _tabTrailingComponent>;

        if $r2 == null goto label1;

        $r3 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Component _tabTrailingComponent>;

        $z1 = virtualinvoke $r3.<java.awt.Component: boolean isVisible()>();

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    protected boolean isTabTopVisible(int)
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.awt.Component $r1, $r3, $r5, $r7;
        java.awt.Dimension $r2, $r4, $r6, $r8;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label06;
            case 2: goto label01;
            case 3: goto label06;
            case 4: goto label01;
            default: goto label06;
        };

     label01:
        $z0 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean isTabLeadingComponentVisible()>();

        if $z0 == 0 goto label02;

        $r3 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Component _tabLeadingComponent>;

        $r4 = virtualinvoke $r3.<java.awt.Component: java.awt.Dimension getPreferredSize()>();

        $i3 = $r4.<java.awt.Dimension: int width>;

        $i4 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int calculateMaxTabWidth(int)>(i0);

        if $i3 > $i4 goto label03;

     label02:
        $z1 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean isTabTrailingComponentVisible()>();

        if $z1 == 0 goto label04;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Component _tabTrailingComponent>;

        $r2 = virtualinvoke $r1.<java.awt.Component: java.awt.Dimension getPreferredSize()>();

        $i1 = $r2.<java.awt.Dimension: int width>;

        $i2 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int calculateMaxTabWidth(int)>(i0);

        if $i1 <= $i2 goto label04;

     label03:
        $z4 = 1;

        goto label05;

     label04:
        $z4 = 0;

     label05:
        return $z4;

     label06:
        $z2 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean isTabLeadingComponentVisible()>();

        if $z2 == 0 goto label07;

        $r7 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Component _tabLeadingComponent>;

        $r8 = virtualinvoke $r7.<java.awt.Component: java.awt.Dimension getPreferredSize()>();

        $i7 = $r8.<java.awt.Dimension: int height>;

        $i8 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int calculateMaxTabHeight(int)>(i0);

        if $i7 > $i8 goto label08;

     label07:
        $z3 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean isTabTrailingComponentVisible()>();

        if $z3 == 0 goto label09;

        $r5 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Component _tabTrailingComponent>;

        $r6 = virtualinvoke $r5.<java.awt.Component: java.awt.Dimension getPreferredSize()>();

        $i5 = $r6.<java.awt.Dimension: int height>;

        $i6 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int calculateMaxTabHeight(int)>(i0);

        if $i5 <= $i6 goto label09;

     label08:
        $z5 = 1;

        goto label10;

     label09:
        $z5 = 0;

     label10:
        return $z5;
    }

    protected boolean showFocusIndicator()
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        com.jidesoft.swing.JideTabbedPane $r1;
        boolean $z0, $z1, $z2;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z0 = virtualinvoke $r1.<com.jidesoft.swing.JideTabbedPane: boolean hasFocusComponent()>();

        if $z0 == 0 goto label1;

        $z1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean _showFocusIndicator>;

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    private int getNumberOfTabButtons()
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        byte $b0;
        int i1, $i3;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        $z0 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean isShowTabButtons()>();

        if $z0 == 0 goto label1;

        $z3 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean isShrinkTabs()>();

        if $z3 == 0 goto label2;

     label1:
        $b0 = 1;

        goto label3;

     label2:
        $b0 = 4;

     label3:
        i1 = $b0;

        $z1 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean isShowCloseButton()>();

        if $z1 == 0 goto label4;

        $z2 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean isShowCloseButtonOnTab()>();

        if $z2 == 0 goto label5;

     label4:
        $i3 = (int) -1;

        i1 = i1 + $i3;

     label5:
        return i1;
    }

    protected java.lang.String getResourceString(java.lang.String)
    {
        com.jidesoft.swing.JideTabbedPane $r1, $r6;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        java.util.ResourceBundle $r3;
        java.util.Locale $r2;
        java.lang.String r4, $r5, $r7;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        r4 := @parameter0: java.lang.String;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        if $r1 == null goto label1;

        $r6 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r7 = virtualinvoke $r6.<com.jidesoft.swing.JideTabbedPane: java.lang.String getResourceString(java.lang.String)>(r4);

        return $r7;

     label1:
        $r2 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r3 = staticinvoke <com.jidesoft.plaf.basic.Resource: java.util.ResourceBundle getResourceBundle(java.util.Locale)>($r2);

        $r5 = virtualinvoke $r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(r4);

        return $r5;
    }

    private void setMouseOverTabIndex(int)
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        com.jidesoft.swing.JideTabbedPane $r1;
        int i0, $i1, $i2;
        java.lang.Integer $r2;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        i0 := @parameter0: int;

        $i1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _indexMouseOver>;

        if $i1 == i0 goto label1;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _indexMouseOver> = i0;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i2 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int _indexMouseOver>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        virtualinvoke $r1.<com.jidesoft.swing.JideTabbedPane: void putClientProperty(java.lang.Object,java.lang.Object)>("JideTabbedPane.mouseOverTabIndex", $r2);

     label1:
        return;
    }

    static java.util.Hashtable access$1400(com.jidesoft.plaf.basic.BasicJideTabbedPaneUI)
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        java.util.Hashtable $r1;

        r0 := @parameter0: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.util.Hashtable _mnemonicToIndexMap>;

        return $r1;
    }

    static com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabContainer access$1500(com.jidesoft.plaf.basic.BasicJideTabbedPaneUI)
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabContainer $r1;

        r0 := @parameter0: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabContainer _tabContainer>;

        return $r1;
    }

    static java.awt.Point access$1600(com.jidesoft.plaf.basic.BasicJideTabbedPaneUI, int, int, java.awt.Point)
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        int i0, i1;
        java.awt.Point r1, $r2;

        r0 := @parameter0: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: java.awt.Point;

        $r2 = specialinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.awt.Point translatePointToTabPanel(int,int,java.awt.Point)>(i0, i1, r1);

        return $r2;
    }

    static int access$1700(com.jidesoft.plaf.basic.BasicJideTabbedPaneUI)
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        int $i0;

        r0 := @parameter0: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        $i0 = specialinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getNumberOfTabButtons()>();

        return $i0;
    }

    static boolean access$1800(com.jidesoft.plaf.basic.BasicJideTabbedPaneUI)
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        boolean $z0;

        r0 := @parameter0: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        $z0 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean _layouted>;

        return $z0;
    }

    static boolean access$1802(com.jidesoft.plaf.basic.BasicJideTabbedPaneUI, boolean)
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        boolean z0;

        r0 := @parameter0: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        z0 := @parameter1: boolean;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean _layouted> = z0;

        return z0;
    }

    static void access$1900(com.jidesoft.plaf.basic.BasicJideTabbedPaneUI)
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;

        r0 := @parameter0: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        specialinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void updateCloseButtons()>();

        return;
    }

    static javax.swing.JButton access$2100(com.jidesoft.plaf.basic.BasicJideTabbedPaneUI, int)
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        int i0;
        javax.swing.JButton $r1;

        r0 := @parameter0: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        i0 := @parameter1: int;

        $r1 = specialinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: javax.swing.JButton createButton(int)>(i0);

        return $r1;
    }

    static int access$2200(com.jidesoft.plaf.basic.BasicJideTabbedPaneUI, int, int)
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        int i0, i1, $i2;

        r0 := @parameter0: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i2 = specialinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int getClosestTab(int,int)>(i0, i1);

        return $i2;
    }

    static java.util.Vector access$2300(com.jidesoft.plaf.basic.BasicJideTabbedPaneUI)
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        java.util.Vector $r1;

        r0 := @parameter0: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.util.Vector htmlViews>;

        return $r1;
    }

    static java.util.Vector access$2302(com.jidesoft.plaf.basic.BasicJideTabbedPaneUI, java.util.Vector)
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        java.util.Vector r1;

        r0 := @parameter0: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        r1 := @parameter1: java.util.Vector;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.util.Vector htmlViews> = r1;

        return r1;
    }

    static java.util.Vector access$2400(com.jidesoft.plaf.basic.BasicJideTabbedPaneUI)
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        java.util.Vector $r1;

        r0 := @parameter0: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        $r1 = specialinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.util.Vector createHTMLVector()>();

        return $r1;
    }

    static void access$2600(com.jidesoft.plaf.basic.BasicJideTabbedPaneUI)
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;

        r0 := @parameter0: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        specialinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void installTabContainer()>();

        return;
    }

    static void access$2700(com.jidesoft.plaf.basic.BasicJideTabbedPaneUI, int)
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r0;
        int i0;

        r0 := @parameter0: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        i0 := @parameter1: int;

        specialinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: void setMouseOverTabIndex(int)>(i0);

        return;
    }

    public static void <clinit>()
    {
        <com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int CROP_SEGMENT> = 12;

        <com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.lang.String BUTTON_NAME_SCROLL_FORWARD> = "JideTabbedPane.scrollForward";

        <com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.lang.String BUTTON_NAME_SCROLL_BACKWARD> = "JideTabbedPane.scrollBackward";

        <com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.lang.String BUTTON_NAME_TAB_LIST> = "JideTabbedPane.showList";

        <com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: java.lang.String BUTTON_NAME_CLOSE> = "JideTabbedPane.close";

        <com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int EXCEL_LEFT_MARGIN> = 6;

        <com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int OFFICE2003_LEFT_MARGIN> = 18;

        <com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: int DEFAULT_LEFT_MARGIN> = 0;

        return;
    }
}
