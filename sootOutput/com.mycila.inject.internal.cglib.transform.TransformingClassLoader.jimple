public class com.mycila.inject.internal.cglib.transform.TransformingClassLoader extends com.mycila.inject.internal.cglib.transform.AbstractClassLoader
{
    private com.mycila.inject.internal.cglib.transform.ClassTransformerFactory t;

    public void <init>(java.lang.ClassLoader, com.mycila.inject.internal.cglib.transform.ClassFilter, com.mycila.inject.internal.cglib.transform.ClassTransformerFactory)
    {
        com.mycila.inject.internal.cglib.transform.TransformingClassLoader r0;
        com.mycila.inject.internal.cglib.transform.ClassFilter r2;
        com.mycila.inject.internal.cglib.transform.ClassTransformerFactory r3;
        java.lang.ClassLoader r1;

        r0 := @this: com.mycila.inject.internal.cglib.transform.TransformingClassLoader;

        r1 := @parameter0: java.lang.ClassLoader;

        r2 := @parameter1: com.mycila.inject.internal.cglib.transform.ClassFilter;

        r3 := @parameter2: com.mycila.inject.internal.cglib.transform.ClassTransformerFactory;

        specialinvoke r0.<com.mycila.inject.internal.cglib.transform.AbstractClassLoader: void <init>(java.lang.ClassLoader,java.lang.ClassLoader,com.mycila.inject.internal.cglib.transform.ClassFilter)>(r1, r1, r2);

        r0.<com.mycila.inject.internal.cglib.transform.TransformingClassLoader: com.mycila.inject.internal.cglib.transform.ClassTransformerFactory t> = r3;

        return;
    }

    protected com.mycila.inject.internal.cglib.core.ClassGenerator getGenerator(com.mycila.inject.internal.asm.ClassReader)
    {
        com.mycila.inject.internal.cglib.transform.TransformingClassLoader r0;
        com.mycila.inject.internal.cglib.transform.ClassTransformerFactory $r1;
        com.mycila.inject.internal.cglib.core.ClassGenerator $r5;
        com.mycila.inject.internal.cglib.transform.TransformingClassGenerator $r3;
        com.mycila.inject.internal.cglib.transform.ClassTransformer $r2;
        com.mycila.inject.internal.asm.ClassReader r4;

        r0 := @this: com.mycila.inject.internal.cglib.transform.TransformingClassLoader;

        r4 := @parameter0: com.mycila.inject.internal.asm.ClassReader;

        $r1 = r0.<com.mycila.inject.internal.cglib.transform.TransformingClassLoader: com.mycila.inject.internal.cglib.transform.ClassTransformerFactory t>;

        $r2 = interfaceinvoke $r1.<com.mycila.inject.internal.cglib.transform.ClassTransformerFactory: com.mycila.inject.internal.cglib.transform.ClassTransformer newInstance()>();

        $r3 = new com.mycila.inject.internal.cglib.transform.TransformingClassGenerator;

        $r5 = specialinvoke r0.<com.mycila.inject.internal.cglib.transform.AbstractClassLoader: com.mycila.inject.internal.cglib.core.ClassGenerator getGenerator(com.mycila.inject.internal.asm.ClassReader)>(r4);

        specialinvoke $r3.<com.mycila.inject.internal.cglib.transform.TransformingClassGenerator: void <init>(com.mycila.inject.internal.cglib.core.ClassGenerator,com.mycila.inject.internal.cglib.transform.ClassTransformer)>($r5, $r2);

        return $r3;
    }
}
