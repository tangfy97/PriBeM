class org.mozilla.javascript.xmlimpl.XMLList extends org.mozilla.javascript.xmlimpl.XMLObjectImpl implements org.mozilla.javascript.Function
{
    static final long serialVersionUID;
    private org.mozilla.javascript.xmlimpl.XMLList$AnnotationList _annos;
    private org.mozilla.javascript.xmlimpl.XMLObjectImpl targetObject;
    private javax.xml.namespace.QName targetProperty;

    void <init>(org.mozilla.javascript.xmlimpl.XMLLibImpl)
    {
        org.mozilla.javascript.xmlimpl.XMLList$AnnotationList $r3;
        org.mozilla.javascript.xmlimpl.XMLLibImpl r1;
        org.mozilla.javascript.xmlimpl.XMLList r0, $r2;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        r1 := @parameter0: org.mozilla.javascript.xmlimpl.XMLLibImpl;

        $r2 = r1.<org.mozilla.javascript.xmlimpl.XMLLibImpl: org.mozilla.javascript.xmlimpl.XMLList xmlListPrototype>;

        specialinvoke r0.<org.mozilla.javascript.xmlimpl.XMLObjectImpl: void <init>(org.mozilla.javascript.xmlimpl.XMLLibImpl,org.mozilla.javascript.xml.XMLObject)>(r1, $r2);

        r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XMLObjectImpl targetObject> = null;

        r0.<org.mozilla.javascript.xmlimpl.XMLList: javax.xml.namespace.QName targetProperty> = null;

        $r3 = new org.mozilla.javascript.xmlimpl.XMLList$AnnotationList;

        specialinvoke $r3.<org.mozilla.javascript.xmlimpl.XMLList$AnnotationList: void <init>()>();

        r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XMLList$AnnotationList _annos> = $r3;

        return;
    }

    void <init>(org.mozilla.javascript.xmlimpl.XMLLibImpl, java.lang.Object)
    {
        org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation $r24, $r34, $r37;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.mozilla.javascript.xmlimpl.XMLList$AnnotationList $r18, $r19, $r20, $r30, $r31, $r32, $r33, $r35, $r36;
        org.mozilla.javascript.EcmaError $r25;
        org.mozilla.javascript.xmlimpl.XML $r16, $r21, $r23, r38;
        org.mozilla.javascript.xmlimpl.XMLLibImpl r1;
        java.lang.StringBuffer $r6, $r7, $r9, $r11, $r13, $r14, $r26, $r27, $r28, $r29;
        int $i0, $i1, $i2, $i3, i4, i5;
        java.lang.String $r4, $r5, $r8, $r10, $r12, $r15, r40;
        org.mozilla.javascript.xmlimpl.XMLList r0, $r2, $r17, r39;
        java.lang.Object r3, $r22;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        r1 := @parameter0: org.mozilla.javascript.xmlimpl.XMLLibImpl;

        r3 := @parameter1: java.lang.Object;

        $r2 = r1.<org.mozilla.javascript.xmlimpl.XMLLibImpl: org.mozilla.javascript.xmlimpl.XMLList xmlListPrototype>;

        specialinvoke r0.<org.mozilla.javascript.xmlimpl.XMLObjectImpl: void <init>(org.mozilla.javascript.xmlimpl.XMLLibImpl,org.mozilla.javascript.xml.XMLObject)>(r1, $r2);

        r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XMLObjectImpl targetObject> = null;

        r0.<org.mozilla.javascript.xmlimpl.XMLList: javax.xml.namespace.QName targetProperty> = null;

        if r3 == null goto label1;

        $z0 = r3 instanceof org.mozilla.javascript.Undefined;

        if $z0 == 0 goto label2;

     label1:
        goto label9;

     label2:
        $z1 = r3 instanceof org.mozilla.javascript.xmlimpl.XML;

        if $z1 == 0 goto label3;

        r38 = (org.mozilla.javascript.xmlimpl.XML) r3;

        $r35 = new org.mozilla.javascript.xmlimpl.XMLList$AnnotationList;

        specialinvoke $r35.<org.mozilla.javascript.xmlimpl.XMLList$AnnotationList: void <init>()>();

        r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XMLList$AnnotationList _annos> = $r35;

        $r36 = r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XMLList$AnnotationList _annos>;

        $r37 = virtualinvoke r38.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation getAnnotation()>();

        virtualinvoke $r36.<org.mozilla.javascript.xmlimpl.XMLList$AnnotationList: void add(org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation)>($r37);

        goto label9;

     label3:
        $z2 = r3 instanceof org.mozilla.javascript.xmlimpl.XMLList;

        if $z2 == 0 goto label5;

        r39 = (org.mozilla.javascript.xmlimpl.XMLList) r3;

        $r30 = new org.mozilla.javascript.xmlimpl.XMLList$AnnotationList;

        specialinvoke $r30.<org.mozilla.javascript.xmlimpl.XMLList$AnnotationList: void <init>()>();

        r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XMLList$AnnotationList _annos> = $r30;

        i4 = 0;

     label4:
        $r31 = r39.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XMLList$AnnotationList _annos>;

        $i3 = virtualinvoke $r31.<org.mozilla.javascript.xmlimpl.XMLList$AnnotationList: int length()>();

        if i4 >= $i3 goto label9;

        $r33 = r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XMLList$AnnotationList _annos>;

        $r32 = r39.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XMLList$AnnotationList _annos>;

        $r34 = virtualinvoke $r32.<org.mozilla.javascript.xmlimpl.XMLList$AnnotationList: org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation item(int)>(i4);

        virtualinvoke $r33.<org.mozilla.javascript.xmlimpl.XMLList$AnnotationList: void add(org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation)>($r34);

        i4 = i4 + 1;

        goto label4;

     label5:
        $r4 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String trim()>();

        r40 = $r5;

        $z3 = virtualinvoke $r5.<java.lang.String: boolean startsWith(java.lang.String)>("<>");

        if $z3 != 0 goto label6;

        $r26 = new java.lang.StringBuffer;

        specialinvoke $r26.<java.lang.StringBuffer: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<>");

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("</>");

        r40 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.String toString()>();

     label6:
        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<fragment>");

        $r8 = virtualinvoke r40.<java.lang.String: java.lang.String substring(int)>(2);

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        $z4 = virtualinvoke $r10.<java.lang.String: boolean endsWith(java.lang.String)>("</>");

        if $z4 != 0 goto label7;

        $r25 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError typeError(java.lang.String)>("XML with anonymous tag missing end anonymous tag");

        throw $r25;

     label7:
        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $i0 = virtualinvoke $r10.<java.lang.String: int length()>();

        $i1 = $i0 - 3;

        $r12 = virtualinvoke $r10.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        $r13 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("</fragment>");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        $r16 = staticinvoke <org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XML createFromJS(org.mozilla.javascript.xmlimpl.XMLLibImpl,java.lang.Object)>(r1, $r15);

        $r17 = virtualinvoke $r16.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLList children()>();

        $r18 = new org.mozilla.javascript.xmlimpl.XMLList$AnnotationList;

        specialinvoke $r18.<org.mozilla.javascript.xmlimpl.XMLList$AnnotationList: void <init>()>();

        r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XMLList$AnnotationList _annos> = $r18;

        i5 = 0;

     label8:
        $r19 = $r17.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XMLList$AnnotationList _annos>;

        $i2 = virtualinvoke $r19.<org.mozilla.javascript.xmlimpl.XMLList$AnnotationList: int length()>();

        if i5 >= $i2 goto label9;

        $r20 = r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XMLList$AnnotationList _annos>;

        $r21 = virtualinvoke $r17.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML item(int)>(i5);

        $r22 = virtualinvoke $r21.<org.mozilla.javascript.xmlimpl.XML: java.lang.Object copy()>();

        $r23 = (org.mozilla.javascript.xmlimpl.XML) $r22;

        $r24 = virtualinvoke $r23.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation getAnnotation()>();

        virtualinvoke $r20.<org.mozilla.javascript.xmlimpl.XMLList$AnnotationList: void add(org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation)>($r24);

        i5 = i5 + 1;

        goto label8;

     label9:
        return;
    }

    void setTargets(org.mozilla.javascript.xmlimpl.XMLObjectImpl, javax.xml.namespace.QName)
    {
        org.mozilla.javascript.xmlimpl.XMLList r0;
        javax.xml.namespace.QName r2;
        org.mozilla.javascript.xmlimpl.XMLObjectImpl r1;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        r1 := @parameter0: org.mozilla.javascript.xmlimpl.XMLObjectImpl;

        r2 := @parameter1: javax.xml.namespace.QName;

        r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XMLObjectImpl targetObject> = r1;

        r0.<org.mozilla.javascript.xmlimpl.XMLList: javax.xml.namespace.QName targetProperty> = r2;

        return;
    }

    org.mozilla.javascript.xmlimpl.XML getXmlFromAnnotation(int)
    {
        org.mozilla.javascript.xmlimpl.XMLList$AnnotationList $r1;
        org.mozilla.javascript.xmlimpl.XMLLibImpl $r3;
        org.mozilla.javascript.xmlimpl.XMLList r0;
        int i0, $i1;
        org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation $r2;
        org.mozilla.javascript.xmlimpl.XML r4;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $i1 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if i0 >= $i1 goto label1;

        $r1 = r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XMLList$AnnotationList _annos>;

        $r2 = virtualinvoke $r1.<org.mozilla.javascript.xmlimpl.XMLList$AnnotationList: org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation item(int)>(i0);

        $r3 = r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        r4 = staticinvoke <org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XML getFromAnnotation(org.mozilla.javascript.xmlimpl.XMLLibImpl,org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation)>($r3, $r2);

        goto label2;

     label1:
        r4 = null;

     label2:
        return r4;
    }

    private void internalRemoveFromList(int)
    {
        int i0;
        org.mozilla.javascript.xmlimpl.XMLList$AnnotationList $r1;
        org.mozilla.javascript.xmlimpl.XMLList r0;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        i0 := @parameter0: int;

        $r1 = r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XMLList$AnnotationList _annos>;

        virtualinvoke $r1.<org.mozilla.javascript.xmlimpl.XMLList$AnnotationList: void remove(int)>(i0);

        return;
    }

    void replace(int, org.mozilla.javascript.xmlimpl.XML)
    {
        org.mozilla.javascript.xmlimpl.XMLList$AnnotationList $r1, $r4, $r6;
        org.mozilla.javascript.xmlimpl.XMLList r0;
        org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation $r3, $r5, $r7;
        org.mozilla.javascript.xmlimpl.XML r2;
        int i0, $i1, $i2, i3, i4;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        i0 := @parameter0: int;

        r2 := @parameter1: org.mozilla.javascript.xmlimpl.XML;

        $i1 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if i0 >= $i1 goto label5;

        $r1 = new org.mozilla.javascript.xmlimpl.XMLList$AnnotationList;

        specialinvoke $r1.<org.mozilla.javascript.xmlimpl.XMLList$AnnotationList: void <init>()>();

        i3 = 0;

     label1:
        if i3 >= i0 goto label2;

        $r6 = r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XMLList$AnnotationList _annos>;

        $r7 = virtualinvoke $r6.<org.mozilla.javascript.xmlimpl.XMLList$AnnotationList: org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation item(int)>(i3);

        virtualinvoke $r1.<org.mozilla.javascript.xmlimpl.XMLList$AnnotationList: void add(org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation)>($r7);

        i3 = i3 + 1;

        goto label1;

     label2:
        $r3 = virtualinvoke r2.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation getAnnotation()>();

        virtualinvoke $r1.<org.mozilla.javascript.xmlimpl.XMLList$AnnotationList: void add(org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation)>($r3);

        i4 = i0 + 1;

     label3:
        $i2 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if i4 >= $i2 goto label4;

        $r4 = r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XMLList$AnnotationList _annos>;

        $r5 = virtualinvoke $r4.<org.mozilla.javascript.xmlimpl.XMLList$AnnotationList: org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation item(int)>(i4);

        virtualinvoke $r1.<org.mozilla.javascript.xmlimpl.XMLList$AnnotationList: void add(org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation)>($r5);

        i4 = i4 + 1;

        goto label3;

     label4:
        r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XMLList$AnnotationList _annos> = $r1;

     label5:
        return;
    }

    private void insert(int, org.mozilla.javascript.xmlimpl.XML)
    {
        org.mozilla.javascript.xmlimpl.XMLList$AnnotationList $r1, $r4, $r6;
        org.mozilla.javascript.xmlimpl.XMLList r0;
        org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation $r3, $r5, $r7;
        org.mozilla.javascript.xmlimpl.XML r2;
        int i0, $i1, $i2, i3, i4;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        i0 := @parameter0: int;

        r2 := @parameter1: org.mozilla.javascript.xmlimpl.XML;

        $i1 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if i0 >= $i1 goto label5;

        $r1 = new org.mozilla.javascript.xmlimpl.XMLList$AnnotationList;

        specialinvoke $r1.<org.mozilla.javascript.xmlimpl.XMLList$AnnotationList: void <init>()>();

        i3 = 0;

     label1:
        if i3 >= i0 goto label2;

        $r6 = r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XMLList$AnnotationList _annos>;

        $r7 = virtualinvoke $r6.<org.mozilla.javascript.xmlimpl.XMLList$AnnotationList: org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation item(int)>(i3);

        virtualinvoke $r1.<org.mozilla.javascript.xmlimpl.XMLList$AnnotationList: void add(org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation)>($r7);

        i3 = i3 + 1;

        goto label1;

     label2:
        $r3 = virtualinvoke r2.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation getAnnotation()>();

        virtualinvoke $r1.<org.mozilla.javascript.xmlimpl.XMLList$AnnotationList: void add(org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation)>($r3);

        i4 = i0;

     label3:
        $i2 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if i4 >= $i2 goto label4;

        $r4 = r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XMLList$AnnotationList _annos>;

        $r5 = virtualinvoke $r4.<org.mozilla.javascript.xmlimpl.XMLList$AnnotationList: org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation item(int)>(i4);

        virtualinvoke $r1.<org.mozilla.javascript.xmlimpl.XMLList$AnnotationList: void add(org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation)>($r5);

        i4 = i4 + 1;

        goto label3;

     label4:
        r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XMLList$AnnotationList _annos> = $r1;

     label5:
        return;
    }

    public java.lang.String getClassName()
    {
        org.mozilla.javascript.xmlimpl.XMLList r0;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        return "XMLList";
    }

    public java.lang.Object get(int, org.mozilla.javascript.Scriptable)
    {
        org.mozilla.javascript.xmlimpl.XMLList r1;
        org.mozilla.javascript.Scriptable r3;
        int i0, $i1;
        java.lang.Object $r0;
        org.mozilla.javascript.xmlimpl.XML $r2;

        r1 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        i0 := @parameter0: int;

        r3 := @parameter1: org.mozilla.javascript.Scriptable;

        if i0 < 0 goto label1;

        $i1 = virtualinvoke r1.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if i0 >= $i1 goto label1;

        $r2 = virtualinvoke r1.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML getXmlFromAnnotation(int)>(i0);

        return $r2;

     label1:
        $r0 = <org.mozilla.javascript.Scriptable: java.lang.Object NOT_FOUND>;

        return $r0;
    }

    boolean hasXMLProperty(org.mozilla.javascript.xmlimpl.XMLName)
    {
        org.mozilla.javascript.xmlimpl.XMLList r2, $r3;
        org.mozilla.javascript.xmlimpl.XMLName r0;
        int $i0;
        java.lang.Object $r4, $r5;
        java.lang.String $r1;
        boolean z0;

        r2 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        r0 := @parameter0: org.mozilla.javascript.xmlimpl.XMLName;

        z0 = 0;

        $r1 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLName: java.lang.String localName()>();

        $r3 = specialinvoke r2.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XMLList getPropertyList(org.mozilla.javascript.xmlimpl.XMLName)>(r0);

        $i0 = virtualinvoke $r3.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if $i0 > 0 goto label1;

        $r4 = virtualinvoke r2.<org.mozilla.javascript.xmlimpl.XMLList: java.lang.Object getMethod(java.lang.String)>($r1);

        $r5 = <org.mozilla.javascript.xmlimpl.XMLList: java.lang.Object NOT_FOUND>;

        if $r4 == $r5 goto label2;

     label1:
        z0 = 1;

     label2:
        return z0;
    }

    public boolean has(int, org.mozilla.javascript.Scriptable)
    {
        org.mozilla.javascript.xmlimpl.XMLList r0;
        org.mozilla.javascript.Scriptable r1;
        int i0, $i1;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        i0 := @parameter0: int;

        r1 := @parameter1: org.mozilla.javascript.Scriptable;

        if 0 > i0 goto label1;

        $i1 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if i0 >= $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    void putXMLProperty(org.mozilla.javascript.xmlimpl.XMLName, java.lang.Object)
    {
        org.mozilla.javascript.EcmaError $r19, $r21;
        org.mozilla.javascript.xmlimpl.XMLObjectImpl $r4, $r18;
        org.mozilla.javascript.xmlimpl.XML $r2, $r3, $r10, $r11, $r12;
        org.mozilla.javascript.xmlimpl.XMLLibImpl $r9;
        org.mozilla.javascript.xmlimpl.XMLName r1, $r17;
        int $i0, $i1;
        java.lang.String $r7, $r14, $r16;
        boolean $z0, $z1, $z2, $z3;
        org.mozilla.javascript.xmlimpl.XMLList r0;
        java.lang.Object r20;
        javax.xml.namespace.QName $r5, $r6, $r8, $r13, $r15;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        r1 := @parameter0: org.mozilla.javascript.xmlimpl.XMLName;

        r20 := @parameter1: java.lang.Object;

        if r20 != null goto label1;

        r20 = "null";

        goto label2;

     label1:
        $z0 = r20 instanceof org.mozilla.javascript.Undefined;

        if $z0 == 0 goto label2;

        r20 = "undefined";

     label2:
        $i1 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if $i1 <= 1 goto label3;

        $r19 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError typeError(java.lang.String)>("Assignment to lists with more that one item is not supported");

        throw $r19;

     label3:
        $i0 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if $i0 != 0 goto label7;

        $r4 = r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XMLObjectImpl targetObject>;

        if $r4 == null goto label6;

        $r5 = r0.<org.mozilla.javascript.xmlimpl.XMLList: javax.xml.namespace.QName targetProperty>;

        if $r5 == null goto label6;

        $r6 = r0.<org.mozilla.javascript.xmlimpl.XMLList: javax.xml.namespace.QName targetProperty>;

        $r7 = virtualinvoke $r6.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $z2 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("*");

        if $z2 != 0 goto label6;

        $r9 = r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        $r8 = r0.<org.mozilla.javascript.xmlimpl.XMLList: javax.xml.namespace.QName targetProperty>;

        $r10 = staticinvoke <org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XML createTextElement(org.mozilla.javascript.xmlimpl.XMLLibImpl,javax.xml.namespace.QName,java.lang.String)>($r9, $r8, "");

        virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: void addToList(java.lang.Object)>($r10);

        $z3 = virtualinvoke r1.<org.mozilla.javascript.xmlimpl.XMLName: boolean isAttributeName()>();

        if $z3 == 0 goto label4;

        specialinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: void setAttribute(org.mozilla.javascript.xmlimpl.XMLName,java.lang.Object)>(r1, r20);

        goto label5;

     label4:
        $r11 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML item(int)>(0);

        virtualinvoke $r11.<org.mozilla.javascript.xmlimpl.XML: void putXMLProperty(org.mozilla.javascript.xmlimpl.XMLName,java.lang.Object)>(r1, r20);

        $r12 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML item(int)>(0);

        virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: void replace(int,org.mozilla.javascript.xmlimpl.XML)>(0, $r12);

     label5:
        $r13 = r0.<org.mozilla.javascript.xmlimpl.XMLList: javax.xml.namespace.QName targetProperty>;

        $r14 = virtualinvoke $r13.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r15 = r0.<org.mozilla.javascript.xmlimpl.XMLList: javax.xml.namespace.QName targetProperty>;

        $r16 = virtualinvoke $r15.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r17 = staticinvoke <org.mozilla.javascript.xmlimpl.XMLName: org.mozilla.javascript.xmlimpl.XMLName formProperty(java.lang.String,java.lang.String)>($r14, $r16);

        $r18 = r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XMLObjectImpl targetObject>;

        virtualinvoke $r18.<org.mozilla.javascript.xmlimpl.XMLObjectImpl: void putXMLProperty(org.mozilla.javascript.xmlimpl.XMLName,java.lang.Object)>($r17, r0);

        goto label9;

     label6:
        $r21 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError typeError(java.lang.String)>("Assignment to empty XMLList without targets not supported");

        throw $r21;

     label7:
        $z1 = virtualinvoke r1.<org.mozilla.javascript.xmlimpl.XMLName: boolean isAttributeName()>();

        if $z1 == 0 goto label8;

        specialinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: void setAttribute(org.mozilla.javascript.xmlimpl.XMLName,java.lang.Object)>(r1, r20);

        goto label9;

     label8:
        $r2 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML item(int)>(0);

        virtualinvoke $r2.<org.mozilla.javascript.xmlimpl.XML: void putXMLProperty(org.mozilla.javascript.xmlimpl.XMLName,java.lang.Object)>(r1, r20);

        $r3 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML item(int)>(0);

        virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: void replace(int,org.mozilla.javascript.xmlimpl.XML)>(0, $r3);

     label9:
        return;
    }

    java.lang.Object getXMLProperty(org.mozilla.javascript.xmlimpl.XMLName)
    {
        org.mozilla.javascript.xmlimpl.XMLList r0, $r2;
        org.mozilla.javascript.xmlimpl.XMLName r1;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        r1 := @parameter0: org.mozilla.javascript.xmlimpl.XMLName;

        $r2 = specialinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XMLList getPropertyList(org.mozilla.javascript.xmlimpl.XMLName)>(r1);

        return $r2;
    }

    public void put(int, org.mozilla.javascript.Scriptable, java.lang.Object)
    {
        org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation $r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.mozilla.javascript.xmlimpl.XMLList$AnnotationList $r5;
        org.mozilla.javascript.Scriptable r24;
        javax.xml.namespace.QName $r1, $r3;
        org.mozilla.javascript.xml.XMLObject r27;
        long $l6, $l9;
        org.mozilla.javascript.xmlimpl.XML $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, r29;
        org.mozilla.javascript.xmlimpl.XMLLibImpl $r2, $r6, $r22;
        int i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8, $i10, $i11, i12, i13, i14;
        java.lang.String $r4, $r23;
        org.mozilla.javascript.xmlimpl.XMLList r0, r30, r31;
        java.lang.Object r25, r26, r28;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        i0 := @parameter0: int;

        r24 := @parameter1: org.mozilla.javascript.Scriptable;

        r25 := @parameter2: java.lang.Object;

        r26 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

        if r25 != null goto label01;

        r25 = "null";

        goto label02;

     label01:
        $z0 = r25 instanceof org.mozilla.javascript.Undefined;

        if $z0 == 0 goto label02;

        r25 = "undefined";

     label02:
        $z6 = r25 instanceof org.mozilla.javascript.xml.XMLObject;

        if $z6 == 0 goto label03;

        r27 = (org.mozilla.javascript.xml.XMLObject) r25;

        goto label05;

     label03:
        $r1 = r0.<org.mozilla.javascript.xmlimpl.XMLList: javax.xml.namespace.QName targetProperty>;

        if $r1 != null goto label04;

        $r22 = r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        $r23 = virtualinvoke r25.<java.lang.Object: java.lang.String toString()>();

        r27 = staticinvoke <org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XML createFromJS(org.mozilla.javascript.xmlimpl.XMLLibImpl,java.lang.Object)>($r22, $r23);

        goto label05;

     label04:
        $r2 = r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        $r3 = r0.<org.mozilla.javascript.xmlimpl.XMLList: javax.xml.namespace.QName targetProperty>;

        $r4 = virtualinvoke r25.<java.lang.Object: java.lang.String toString()>();

        r27 = staticinvoke <org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XML createTextElement(org.mozilla.javascript.xmlimpl.XMLLibImpl,javax.xml.namespace.QName,java.lang.String)>($r2, $r3, $r4);

     label05:
        $i11 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if i0 >= $i11 goto label06;

        $r21 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML item(int)>(i0);

        r28 = virtualinvoke $r21.<org.mozilla.javascript.xmlimpl.XML: java.lang.Object parent()>();

        goto label07;

     label06:
        r28 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: java.lang.Object parent()>();

     label07:
        $z1 = r28 instanceof org.mozilla.javascript.xmlimpl.XML;

        if $z1 == 0 goto label11;

        r29 = (org.mozilla.javascript.xmlimpl.XML) r28;

        $i5 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if i0 >= $i5 goto label10;

        $r14 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML getXmlFromAnnotation(int)>(i0);

        $z4 = r27 instanceof org.mozilla.javascript.xmlimpl.XML;

        if $z4 == 0 goto label08;

        $r20 = (org.mozilla.javascript.xmlimpl.XML) r27;

        virtualinvoke $r14.<org.mozilla.javascript.xmlimpl.XML: void replaceAll(org.mozilla.javascript.xmlimpl.XML)>($r20);

        virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: void replace(int,org.mozilla.javascript.xmlimpl.XML)>(i0, $r14);

        goto label15;

     label08:
        $z5 = r27 instanceof org.mozilla.javascript.xmlimpl.XMLList;

        if $z5 == 0 goto label15;

        r30 = (org.mozilla.javascript.xmlimpl.XMLList) r27;

        $i7 = virtualinvoke r30.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if $i7 <= 0 goto label15;

        i12 = virtualinvoke $r14.<org.mozilla.javascript.xmlimpl.XML: int childIndex()>();

        $r15 = virtualinvoke r30.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML item(int)>(0);

        virtualinvoke $r14.<org.mozilla.javascript.xmlimpl.XML: void replaceAll(org.mozilla.javascript.xmlimpl.XML)>($r15);

        $r16 = virtualinvoke r30.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML item(int)>(0);

        virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: void replace(int,org.mozilla.javascript.xmlimpl.XML)>(i0, $r16);

        i13 = 1;

     label09:
        $i8 = virtualinvoke r30.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if i13 >= $i8 goto label15;

        $l9 = (long) i12;

        $r17 = virtualinvoke r29.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XML getXmlChild(long)>($l9);

        $r18 = virtualinvoke r30.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML item(int)>(i13);

        virtualinvoke r29.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XML insertChildAfter(java.lang.Object,java.lang.Object)>($r17, $r18);

        i12 = i12 + 1;

        $i10 = i0 + i13;

        $r19 = virtualinvoke r30.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML item(int)>(i13);

        specialinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: void insert(int,org.mozilla.javascript.xmlimpl.XML)>($i10, $r19);

        i13 = i13 + 1;

        goto label09;

     label10:
        virtualinvoke r29.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XML appendChild(java.lang.Object)>(r27);

        $l6 = (long) i0;

        $r13 = virtualinvoke r29.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XML getXmlChild(long)>($l6);

        virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: void addToList(java.lang.Object)>($r13);

        goto label15;

     label11:
        $i1 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if i0 >= $i1 goto label14;

        $r6 = r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        $r5 = r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XMLList$AnnotationList _annos>;

        $r7 = virtualinvoke $r5.<org.mozilla.javascript.xmlimpl.XMLList$AnnotationList: org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation item(int)>(i0);

        $r8 = staticinvoke <org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XML getFromAnnotation(org.mozilla.javascript.xmlimpl.XMLLibImpl,org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation)>($r6, $r7);

        $z2 = r27 instanceof org.mozilla.javascript.xmlimpl.XML;

        if $z2 == 0 goto label12;

        $r12 = (org.mozilla.javascript.xmlimpl.XML) r27;

        virtualinvoke $r8.<org.mozilla.javascript.xmlimpl.XML: void replaceAll(org.mozilla.javascript.xmlimpl.XML)>($r12);

        virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: void replace(int,org.mozilla.javascript.xmlimpl.XML)>(i0, $r8);

        goto label15;

     label12:
        $z3 = r27 instanceof org.mozilla.javascript.xmlimpl.XMLList;

        if $z3 == 0 goto label15;

        r31 = (org.mozilla.javascript.xmlimpl.XMLList) r27;

        $i2 = virtualinvoke r31.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if $i2 <= 0 goto label15;

        $r9 = virtualinvoke r31.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML item(int)>(0);

        virtualinvoke $r8.<org.mozilla.javascript.xmlimpl.XML: void replaceAll(org.mozilla.javascript.xmlimpl.XML)>($r9);

        $r10 = virtualinvoke r31.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML item(int)>(0);

        virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: void replace(int,org.mozilla.javascript.xmlimpl.XML)>(i0, $r10);

        i14 = 1;

     label13:
        $i3 = virtualinvoke r31.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if i14 >= $i3 goto label15;

        $i4 = i0 + i14;

        $r11 = virtualinvoke r31.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML item(int)>(i14);

        specialinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: void insert(int,org.mozilla.javascript.xmlimpl.XML)>($i4, $r11);

        i14 = i14 + 1;

        goto label13;

     label14:
        virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: void addToList(java.lang.Object)>(r27);

     label15:
        return;
    }

    void deleteXMLProperty(org.mozilla.javascript.xmlimpl.XMLName)
    {
        org.mozilla.javascript.xmlimpl.XMLList r0;
        org.mozilla.javascript.xmlimpl.XMLName r4;
        org.apache.xmlbeans.XmlCursor$TokenType $r2, $r3;
        int $i0, i1;
        org.mozilla.javascript.xmlimpl.XML $r1;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        r4 := @parameter0: org.mozilla.javascript.xmlimpl.XMLName;

        i1 = 0;

     label1:
        $i0 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if i1 >= $i0 goto label3;

        $r1 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML getXmlFromAnnotation(int)>(i1);

        $r2 = virtualinvoke $r1.<org.mozilla.javascript.xmlimpl.XML: org.apache.xmlbeans.XmlCursor$TokenType tokenType()>();

        $r3 = <org.apache.xmlbeans.XmlCursor$TokenType: org.apache.xmlbeans.XmlCursor$TokenType START>;

        if $r2 != $r3 goto label2;

        virtualinvoke $r1.<org.mozilla.javascript.xmlimpl.XML: void deleteXMLProperty(org.mozilla.javascript.xmlimpl.XMLName)>(r4);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    public void delete(int)
    {
        org.mozilla.javascript.xmlimpl.XMLList r0;
        int i0, $i1;
        org.mozilla.javascript.xmlimpl.XML $r1;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $i1 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if i0 >= $i1 goto label1;

        $r1 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML getXmlFromAnnotation(int)>(i0);

        virtualinvoke $r1.<org.mozilla.javascript.xmlimpl.XML: void remove()>();

        specialinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: void internalRemoveFromList(int)>(i0);

     label1:
        return;
    }

    public java.lang.Object[] getIds()
    {
        org.mozilla.javascript.xmlimpl.XMLList r0;
        java.lang.Object[] r2;
        int $i0, $i1, i2;
        java.lang.Integer $r1;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        $z0 = r0.<org.mozilla.javascript.xmlimpl.XMLList: boolean prototypeFlag>;

        if $z0 == 0 goto label1;

        r2 = newarray (java.lang.Object)[0];

        goto label3;

     label1:
        $i0 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        r2 = newarray (java.lang.Object)[$i0];

        i2 = 0;

     label2:
        $i1 = lengthof r2;

        if i2 >= $i1 goto label3;

        $r1 = new java.lang.Integer;

        specialinvoke $r1.<java.lang.Integer: void <init>(int)>(i2);

        r2[i2] = $r1;

        i2 = i2 + 1;

        goto label2;

     label3:
        return r2;
    }

    public java.lang.Object[] getIdsForDebug()
    {
        org.mozilla.javascript.xmlimpl.XMLList r0;
        java.lang.Object[] $r1;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        $r1 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: java.lang.Object[] getIds()>();

        return $r1;
    }

    void remove()
    {
        org.mozilla.javascript.xmlimpl.XMLList r0;
        int $i0, i1, $i3;
        org.mozilla.javascript.xmlimpl.XML $r1;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        $i0 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label3;

        $r1 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML getXmlFromAnnotation(int)>(i1);

        if $r1 == null goto label2;

        virtualinvoke $r1.<org.mozilla.javascript.xmlimpl.XML: void remove()>();

        specialinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: void internalRemoveFromList(int)>(i1);

     label2:
        $i3 = (int) -1;

        i1 = i1 + $i3;

        goto label1;

     label3:
        return;
    }

    org.mozilla.javascript.xmlimpl.XML item(int)
    {
        org.mozilla.javascript.xmlimpl.XMLList$AnnotationList $r1;
        org.mozilla.javascript.xmlimpl.XMLLibImpl $r2;
        org.mozilla.javascript.xmlimpl.XMLList r0;
        int i0;
        org.mozilla.javascript.xmlimpl.XML $r3;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        i0 := @parameter0: int;

        $r1 = r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XMLList$AnnotationList _annos>;

        if $r1 == null goto label1;

        $r3 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML getXmlFromAnnotation(int)>(i0);

        goto label2;

     label1:
        $r2 = r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        $r3 = staticinvoke <org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XML createEmptyXML(org.mozilla.javascript.xmlimpl.XMLLibImpl)>($r2);

     label2:
        return $r3;
    }

    private void setAttribute(org.mozilla.javascript.xmlimpl.XMLName, java.lang.Object)
    {
        org.mozilla.javascript.xmlimpl.XMLList r0;
        org.mozilla.javascript.xmlimpl.XMLName r2;
        int $i0, i1;
        java.lang.Object r3;
        org.mozilla.javascript.xmlimpl.XML $r1;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        r2 := @parameter0: org.mozilla.javascript.xmlimpl.XMLName;

        r3 := @parameter1: java.lang.Object;

        i1 = 0;

     label1:
        $i0 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if i1 >= $i0 goto label2;

        $r1 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML getXmlFromAnnotation(int)>(i1);

        virtualinvoke $r1.<org.mozilla.javascript.xmlimpl.XML: void setAttribute(org.mozilla.javascript.xmlimpl.XMLName,java.lang.Object)>(r2, r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    void addToList(java.lang.Object)
    {
        org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation $r2, $r6, $r10;
        org.mozilla.javascript.xmlimpl.XML $r4, $r9;
        int $i0, i1;
        boolean $z0, $z1, $z2, $z3;
        org.mozilla.javascript.xmlimpl.XMLList$AnnotationList $r3, $r5, $r8;
        org.mozilla.javascript.xmlimpl.XMLList r1, r7;
        java.lang.Object r0;

        r1 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.mozilla.javascript.Undefined;

        if $z0 == 0 goto label1;

        return;

     label1:
        $z1 = r0 instanceof org.mozilla.javascript.xmlimpl.XMLList;

        if $z1 == 0 goto label3;

        r7 = (org.mozilla.javascript.xmlimpl.XMLList) r0;

        i1 = 0;

     label2:
        $i0 = virtualinvoke r7.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if i1 >= $i0 goto label5;

        $r8 = r1.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XMLList$AnnotationList _annos>;

        $r9 = virtualinvoke r7.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML item(int)>(i1);

        $r10 = virtualinvoke $r9.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation getAnnotation()>();

        virtualinvoke $r8.<org.mozilla.javascript.xmlimpl.XMLList$AnnotationList: void add(org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation)>($r10);

        i1 = i1 + 1;

        goto label2;

     label3:
        $z2 = r0 instanceof org.mozilla.javascript.xmlimpl.XML;

        if $z2 == 0 goto label4;

        $r5 = r1.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XMLList$AnnotationList _annos>;

        $r4 = (org.mozilla.javascript.xmlimpl.XML) r0;

        $r6 = virtualinvoke $r4.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation getAnnotation()>();

        virtualinvoke $r5.<org.mozilla.javascript.xmlimpl.XMLList$AnnotationList: void add(org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation)>($r6);

        goto label5;

     label4:
        $z3 = r0 instanceof org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation;

        if $z3 == 0 goto label5;

        $r3 = r1.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XMLList$AnnotationList _annos>;

        $r2 = (org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation) r0;

        virtualinvoke $r3.<org.mozilla.javascript.xmlimpl.XMLList$AnnotationList: void add(org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation)>($r2);

     label5:
        return;
    }

    org.mozilla.javascript.xmlimpl.XML addNamespace(org.mozilla.javascript.xmlimpl.Namespace)
    {
        org.mozilla.javascript.EcmaError $r1;
        org.mozilla.javascript.xmlimpl.XMLList r0;
        int $i0;
        org.mozilla.javascript.xmlimpl.Namespace r3;
        org.mozilla.javascript.xmlimpl.XML $r2, $r4;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        r3 := @parameter0: org.mozilla.javascript.xmlimpl.Namespace;

        $i0 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if $i0 != 1 goto label1;

        $r2 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML getXmlFromAnnotation(int)>(0);

        $r4 = virtualinvoke $r2.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XML addNamespace(org.mozilla.javascript.xmlimpl.Namespace)>(r3);

        return $r4;

     label1:
        $r1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError typeError(java.lang.String)>("The addNamespace method works only on lists containing one item");

        throw $r1;
    }

    org.mozilla.javascript.xmlimpl.XML appendChild(java.lang.Object)
    {
        org.mozilla.javascript.EcmaError $r1;
        org.mozilla.javascript.xmlimpl.XMLList r0;
        int $i0;
        java.lang.Object r3;
        org.mozilla.javascript.xmlimpl.XML $r2, $r4;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        r3 := @parameter0: java.lang.Object;

        $i0 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if $i0 != 1 goto label1;

        $r2 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML getXmlFromAnnotation(int)>(0);

        $r4 = virtualinvoke $r2.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XML appendChild(java.lang.Object)>(r3);

        return $r4;

     label1:
        $r1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError typeError(java.lang.String)>("The appendChild method works only on lists containing one item");

        throw $r1;
    }

    org.mozilla.javascript.xmlimpl.XMLList attribute(org.mozilla.javascript.xmlimpl.XMLName)
    {
        org.mozilla.javascript.xmlimpl.XMLList $r0, r1, $r5;
        org.mozilla.javascript.xmlimpl.XML $r3;
        org.mozilla.javascript.xmlimpl.XMLLibImpl $r2;
        org.mozilla.javascript.xmlimpl.XMLName r4;
        int $i0, i1;

        r1 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        r4 := @parameter0: org.mozilla.javascript.xmlimpl.XMLName;

        $r0 = new org.mozilla.javascript.xmlimpl.XMLList;

        $r2 = r1.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        specialinvoke $r0.<org.mozilla.javascript.xmlimpl.XMLList: void <init>(org.mozilla.javascript.xmlimpl.XMLLibImpl)>($r2);

        i1 = 0;

     label1:
        $i0 = virtualinvoke r1.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if i1 >= $i0 goto label2;

        $r3 = virtualinvoke r1.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML getXmlFromAnnotation(int)>(i1);

        $r5 = virtualinvoke $r3.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLList attribute(org.mozilla.javascript.xmlimpl.XMLName)>(r4);

        virtualinvoke $r0.<org.mozilla.javascript.xmlimpl.XMLList: void addToList(java.lang.Object)>($r5);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r0;
    }

    org.mozilla.javascript.xmlimpl.XMLList attributes()
    {
        org.mozilla.javascript.xmlimpl.XMLLibImpl $r2;
        org.mozilla.javascript.xmlimpl.XMLList $r0, r1, $r4;
        int $i0, i1;
        org.mozilla.javascript.xmlimpl.XML $r3;

        r1 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        $r0 = new org.mozilla.javascript.xmlimpl.XMLList;

        $r2 = r1.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        specialinvoke $r0.<org.mozilla.javascript.xmlimpl.XMLList: void <init>(org.mozilla.javascript.xmlimpl.XMLLibImpl)>($r2);

        i1 = 0;

     label1:
        $i0 = virtualinvoke r1.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if i1 >= $i0 goto label2;

        $r3 = virtualinvoke r1.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML getXmlFromAnnotation(int)>(i1);

        $r4 = virtualinvoke $r3.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLList attributes()>();

        virtualinvoke $r0.<org.mozilla.javascript.xmlimpl.XMLList: void addToList(java.lang.Object)>($r4);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r0;
    }

    org.mozilla.javascript.xmlimpl.XMLList child(long)
    {
        org.mozilla.javascript.xmlimpl.XMLList $r0, r1, $r4;
        long l1;
        org.mozilla.javascript.xmlimpl.XML $r3;
        org.mozilla.javascript.xmlimpl.XMLLibImpl $r2;
        int $i0, i2;

        r1 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        l1 := @parameter0: long;

        $r0 = new org.mozilla.javascript.xmlimpl.XMLList;

        $r2 = r1.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        specialinvoke $r0.<org.mozilla.javascript.xmlimpl.XMLList: void <init>(org.mozilla.javascript.xmlimpl.XMLLibImpl)>($r2);

        i2 = 0;

     label1:
        $i0 = virtualinvoke r1.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if i2 >= $i0 goto label2;

        $r3 = virtualinvoke r1.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML getXmlFromAnnotation(int)>(i2);

        $r4 = virtualinvoke $r3.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLList child(long)>(l1);

        virtualinvoke $r0.<org.mozilla.javascript.xmlimpl.XMLList: void addToList(java.lang.Object)>($r4);

        i2 = i2 + 1;

        goto label1;

     label2:
        return $r0;
    }

    org.mozilla.javascript.xmlimpl.XMLList child(org.mozilla.javascript.xmlimpl.XMLName)
    {
        org.mozilla.javascript.xmlimpl.XMLList $r0, r1, $r5;
        org.mozilla.javascript.xmlimpl.XML $r3;
        org.mozilla.javascript.xmlimpl.XMLLibImpl $r2;
        org.mozilla.javascript.xmlimpl.XMLName r4;
        int $i0, i1;

        r1 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        r4 := @parameter0: org.mozilla.javascript.xmlimpl.XMLName;

        $r0 = new org.mozilla.javascript.xmlimpl.XMLList;

        $r2 = r1.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        specialinvoke $r0.<org.mozilla.javascript.xmlimpl.XMLList: void <init>(org.mozilla.javascript.xmlimpl.XMLLibImpl)>($r2);

        i1 = 0;

     label1:
        $i0 = virtualinvoke r1.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if i1 >= $i0 goto label2;

        $r3 = virtualinvoke r1.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML getXmlFromAnnotation(int)>(i1);

        $r5 = virtualinvoke $r3.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLList child(org.mozilla.javascript.xmlimpl.XMLName)>(r4);

        virtualinvoke $r0.<org.mozilla.javascript.xmlimpl.XMLList: void addToList(java.lang.Object)>($r5);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r0;
    }

    int childIndex()
    {
        org.mozilla.javascript.EcmaError $r1;
        org.mozilla.javascript.xmlimpl.XMLList r0;
        int $i0, $i1;
        org.mozilla.javascript.xmlimpl.XML $r2;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        $i0 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if $i0 != 1 goto label1;

        $r2 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML getXmlFromAnnotation(int)>(0);

        $i1 = virtualinvoke $r2.<org.mozilla.javascript.xmlimpl.XML: int childIndex()>();

        return $i1;

     label1:
        $r1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError typeError(java.lang.String)>("The childIndex method works only on lists containing one item");

        throw $r1;
    }

    org.mozilla.javascript.xmlimpl.XMLList children()
    {
        org.mozilla.javascript.xmlimpl.XML $r5, $r8;
        org.mozilla.javascript.xmlimpl.XMLLibImpl $r3;
        java.util.Vector $r0;
        int $i0, $i1, $i2, i3, i4, i5;
        boolean $z0;
        org.mozilla.javascript.xmlimpl.XMLList r1, $r2, $r6, r7;
        java.lang.Object $r4;

        r1 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        $r0 = new java.util.Vector;

        specialinvoke $r0.<java.util.Vector: void <init>()>();

        i3 = 0;

     label1:
        $i0 = virtualinvoke r1.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if i3 >= $i0 goto label4;

        $r5 = virtualinvoke r1.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML getXmlFromAnnotation(int)>(i3);

        if $r5 == null goto label3;

        $r6 = virtualinvoke $r5.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLList children()>();

        $z0 = $r6 instanceof org.mozilla.javascript.xmlimpl.XMLList;

        if $z0 == 0 goto label3;

        r7 = (org.mozilla.javascript.xmlimpl.XMLList) $r6;

        $i2 = virtualinvoke r7.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        i4 = 0;

     label2:
        if i4 >= $i2 goto label3;

        $r8 = virtualinvoke r7.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML item(int)>(i4);

        virtualinvoke $r0.<java.util.Vector: void addElement(java.lang.Object)>($r8);

        i4 = i4 + 1;

        goto label2;

     label3:
        i3 = i3 + 1;

        goto label1;

     label4:
        $r2 = new org.mozilla.javascript.xmlimpl.XMLList;

        $r3 = r1.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        specialinvoke $r2.<org.mozilla.javascript.xmlimpl.XMLList: void <init>(org.mozilla.javascript.xmlimpl.XMLLibImpl)>($r3);

        $i1 = virtualinvoke $r0.<java.util.Vector: int size()>();

        i5 = 0;

     label5:
        if i5 >= $i1 goto label6;

        $r4 = virtualinvoke $r0.<java.util.Vector: java.lang.Object get(int)>(i5);

        virtualinvoke $r2.<org.mozilla.javascript.xmlimpl.XMLList: void addToList(java.lang.Object)>($r4);

        i5 = i5 + 1;

        goto label5;

     label6:
        return $r2;
    }

    org.mozilla.javascript.xmlimpl.XMLList comments()
    {
        org.mozilla.javascript.xmlimpl.XMLLibImpl $r2;
        org.mozilla.javascript.xmlimpl.XMLList $r0, r1, $r4;
        int $i0, i1;
        org.mozilla.javascript.xmlimpl.XML $r3;

        r1 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        $r0 = new org.mozilla.javascript.xmlimpl.XMLList;

        $r2 = r1.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        specialinvoke $r0.<org.mozilla.javascript.xmlimpl.XMLList: void <init>(org.mozilla.javascript.xmlimpl.XMLLibImpl)>($r2);

        i1 = 0;

     label1:
        $i0 = virtualinvoke r1.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if i1 >= $i0 goto label2;

        $r3 = virtualinvoke r1.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML getXmlFromAnnotation(int)>(i1);

        $r4 = virtualinvoke $r3.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLList comments()>();

        virtualinvoke $r0.<org.mozilla.javascript.xmlimpl.XMLList: void addToList(java.lang.Object)>($r4);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r0;
    }

    boolean contains(java.lang.Object)
    {
        org.mozilla.javascript.xmlimpl.XMLList r0;
        int $i0, i1;
        java.lang.Object r2;
        org.mozilla.javascript.xmlimpl.XML $r1;
        boolean $z0, z1;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        r2 := @parameter0: java.lang.Object;

        z1 = 0;

        i1 = 0;

     label1:
        $i0 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if i1 >= $i0 goto label3;

        $r1 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML getXmlFromAnnotation(int)>(i1);

        $z0 = virtualinvoke $r1.<org.mozilla.javascript.xmlimpl.XML: boolean equivalentXml(java.lang.Object)>(r2);

        if $z0 == 0 goto label2;

        z1 = 1;

        goto label3;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return z1;
    }

    java.lang.Object copy()
    {
        org.mozilla.javascript.xmlimpl.XMLLibImpl $r2;
        org.mozilla.javascript.xmlimpl.XMLList $r0, r1;
        int $i0, i1;
        java.lang.Object $r4;
        org.mozilla.javascript.xmlimpl.XML $r3;

        r1 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        $r0 = new org.mozilla.javascript.xmlimpl.XMLList;

        $r2 = r1.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        specialinvoke $r0.<org.mozilla.javascript.xmlimpl.XMLList: void <init>(org.mozilla.javascript.xmlimpl.XMLLibImpl)>($r2);

        i1 = 0;

     label1:
        $i0 = virtualinvoke r1.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if i1 >= $i0 goto label2;

        $r3 = virtualinvoke r1.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML getXmlFromAnnotation(int)>(i1);

        $r4 = virtualinvoke $r3.<org.mozilla.javascript.xmlimpl.XML: java.lang.Object copy()>();

        virtualinvoke $r0.<org.mozilla.javascript.xmlimpl.XMLList: void addToList(java.lang.Object)>($r4);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r0;
    }

    org.mozilla.javascript.xmlimpl.XMLList descendants(org.mozilla.javascript.xmlimpl.XMLName)
    {
        org.mozilla.javascript.xmlimpl.XMLList $r0, r1, $r5;
        org.mozilla.javascript.xmlimpl.XML $r3;
        org.mozilla.javascript.xmlimpl.XMLLibImpl $r2;
        org.mozilla.javascript.xmlimpl.XMLName r4;
        int $i0, i1;

        r1 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        r4 := @parameter0: org.mozilla.javascript.xmlimpl.XMLName;

        $r0 = new org.mozilla.javascript.xmlimpl.XMLList;

        $r2 = r1.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        specialinvoke $r0.<org.mozilla.javascript.xmlimpl.XMLList: void <init>(org.mozilla.javascript.xmlimpl.XMLLibImpl)>($r2);

        i1 = 0;

     label1:
        $i0 = virtualinvoke r1.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if i1 >= $i0 goto label2;

        $r3 = virtualinvoke r1.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML getXmlFromAnnotation(int)>(i1);

        $r5 = virtualinvoke $r3.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLList descendants(org.mozilla.javascript.xmlimpl.XMLName)>(r4);

        virtualinvoke $r0.<org.mozilla.javascript.xmlimpl.XMLList: void addToList(java.lang.Object)>($r5);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r0;
    }

    java.lang.Object[] inScopeNamespaces()
    {
        org.mozilla.javascript.EcmaError $r1;
        org.mozilla.javascript.xmlimpl.XMLList r0;
        java.lang.Object[] $r3;
        int $i0;
        org.mozilla.javascript.xmlimpl.XML $r2;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        $i0 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if $i0 != 1 goto label1;

        $r2 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML getXmlFromAnnotation(int)>(0);

        $r3 = virtualinvoke $r2.<org.mozilla.javascript.xmlimpl.XML: java.lang.Object[] inScopeNamespaces()>();

        return $r3;

     label1:
        $r1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError typeError(java.lang.String)>("The inScopeNamespaces method works only on lists containing one item");

        throw $r1;
    }

    org.mozilla.javascript.xmlimpl.XML insertChildAfter(java.lang.Object, java.lang.Object)
    {
        org.mozilla.javascript.EcmaError $r1;
        org.mozilla.javascript.xmlimpl.XMLList r0;
        int $i0;
        java.lang.Object r3, r4;
        org.mozilla.javascript.xmlimpl.XML $r2, $r5;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        r3 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.Object;

        $i0 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if $i0 != 1 goto label1;

        $r2 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML getXmlFromAnnotation(int)>(0);

        $r5 = virtualinvoke $r2.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XML insertChildAfter(java.lang.Object,java.lang.Object)>(r3, r4);

        return $r5;

     label1:
        $r1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError typeError(java.lang.String)>("The insertChildAfter method works only on lists containing one item");

        throw $r1;
    }

    org.mozilla.javascript.xmlimpl.XML insertChildBefore(java.lang.Object, java.lang.Object)
    {
        org.mozilla.javascript.EcmaError $r1;
        org.mozilla.javascript.xmlimpl.XMLList r0;
        int $i0;
        java.lang.Object r3, r4;
        org.mozilla.javascript.xmlimpl.XML $r2, $r5;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        r3 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.Object;

        $i0 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if $i0 != 1 goto label1;

        $r2 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML getXmlFromAnnotation(int)>(0);

        $r5 = virtualinvoke $r2.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XML insertChildAfter(java.lang.Object,java.lang.Object)>(r3, r4);

        return $r5;

     label1:
        $r1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError typeError(java.lang.String)>("The insertChildBefore method works only on lists containing one item");

        throw $r1;
    }

    boolean hasOwnProperty(org.mozilla.javascript.xmlimpl.XMLName)
    {
        org.mozilla.javascript.xmlimpl.XMLList r0, $r2;
        org.mozilla.javascript.xmlimpl.XMLName r1;
        int $i0, $i1;
        java.lang.String $r3;
        boolean $z0, $z1, z2, $z3;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        r1 := @parameter0: org.mozilla.javascript.xmlimpl.XMLName;

        $z0 = r0.<org.mozilla.javascript.xmlimpl.XMLList: boolean prototypeFlag>;

        if $z0 == 0 goto label3;

        $r3 = virtualinvoke r1.<org.mozilla.javascript.xmlimpl.XMLName: java.lang.String localName()>();

        $i1 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: int findPrototypeId(java.lang.String)>($r3);

        if 0 == $i1 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z2 = $z1;

        goto label6;

     label3:
        $r2 = specialinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XMLList getPropertyList(org.mozilla.javascript.xmlimpl.XMLName)>(r1);

        $i0 = virtualinvoke $r2.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if $i0 <= 0 goto label4;

        $z3 = 1;

        goto label5;

     label4:
        $z3 = 0;

     label5:
        z2 = $z3;

     label6:
        return z2;
    }

    boolean hasComplexContent()
    {
        org.mozilla.javascript.xmlimpl.XMLList r0;
        org.mozilla.javascript.xmlimpl.XML $r1, $r4;
        org.apache.xmlbeans.XmlCursor$TokenType $r2, $r3;
        int $i0, i1;
        boolean z0;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        $i0 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if $i0 != 0 goto label1;

        z0 = 0;

        goto label5;

     label1:
        if $i0 != 1 goto label2;

        $r4 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML getXmlFromAnnotation(int)>(0);

        z0 = virtualinvoke $r4.<org.mozilla.javascript.xmlimpl.XML: boolean hasComplexContent()>();

        goto label5;

     label2:
        z0 = 0;

        i1 = 0;

     label3:
        if i1 >= $i0 goto label5;

        $r1 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML getXmlFromAnnotation(int)>(i1);

        $r2 = virtualinvoke $r1.<org.mozilla.javascript.xmlimpl.XML: org.apache.xmlbeans.XmlCursor$TokenType tokenType()>();

        $r3 = <org.apache.xmlbeans.XmlCursor$TokenType: org.apache.xmlbeans.XmlCursor$TokenType START>;

        if $r2 != $r3 goto label4;

        z0 = 1;

        goto label5;

     label4:
        i1 = i1 + 1;

        goto label3;

     label5:
        return z0;
    }

    boolean hasSimpleContent()
    {
        org.mozilla.javascript.xmlimpl.XMLList r0;
        org.mozilla.javascript.xmlimpl.XML $r1, $r4;
        org.apache.xmlbeans.XmlCursor$TokenType $r2, $r3;
        int $i0, i1;
        boolean z0;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        $i0 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if $i0 != 0 goto label1;

        z0 = 1;

        goto label5;

     label1:
        if $i0 != 1 goto label2;

        $r4 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML getXmlFromAnnotation(int)>(0);

        z0 = virtualinvoke $r4.<org.mozilla.javascript.xmlimpl.XML: boolean hasSimpleContent()>();

        goto label5;

     label2:
        z0 = 1;

        i1 = 0;

     label3:
        if i1 >= $i0 goto label5;

        $r1 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML getXmlFromAnnotation(int)>(i1);

        $r2 = virtualinvoke $r1.<org.mozilla.javascript.xmlimpl.XML: org.apache.xmlbeans.XmlCursor$TokenType tokenType()>();

        $r3 = <org.apache.xmlbeans.XmlCursor$TokenType: org.apache.xmlbeans.XmlCursor$TokenType START>;

        if $r2 != $r3 goto label4;

        z0 = 0;

        goto label5;

     label4:
        i1 = i1 + 1;

        goto label3;

     label5:
        return z0;
    }

    int length()
    {
        org.mozilla.javascript.xmlimpl.XMLList$AnnotationList $r1, $r2;
        org.mozilla.javascript.xmlimpl.XMLList r0;
        int i0;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        i0 = 0;

        $r1 = r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XMLList$AnnotationList _annos>;

        if $r1 == null goto label1;

        $r2 = r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XMLList$AnnotationList _annos>;

        i0 = virtualinvoke $r2.<org.mozilla.javascript.xmlimpl.XMLList$AnnotationList: int length()>();

     label1:
        return i0;
    }

    java.lang.String localName()
    {
        org.mozilla.javascript.EcmaError $r1;
        org.mozilla.javascript.xmlimpl.XMLList r0;
        int $i0;
        java.lang.String $r3;
        org.mozilla.javascript.xmlimpl.QName $r2;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        $i0 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if $i0 != 1 goto label1;

        $r2 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.QName name()>();

        $r3 = virtualinvoke $r2.<org.mozilla.javascript.xmlimpl.QName: java.lang.String localName()>();

        return $r3;

     label1:
        $r1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError typeError(java.lang.String)>("The localName method works only on lists containing one item");

        throw $r1;
    }

    org.mozilla.javascript.xmlimpl.QName name()
    {
        org.mozilla.javascript.EcmaError $r1;
        org.mozilla.javascript.xmlimpl.XMLList r0;
        int $i0;
        org.mozilla.javascript.xmlimpl.QName $r3;
        org.mozilla.javascript.xmlimpl.XML $r2;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        $i0 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if $i0 != 1 goto label1;

        $r2 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML getXmlFromAnnotation(int)>(0);

        $r3 = virtualinvoke $r2.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.QName name()>();

        return $r3;

     label1:
        $r1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError typeError(java.lang.String)>("The name method works only on lists containing one item");

        throw $r1;
    }

    java.lang.Object namespace(java.lang.String)
    {
        org.mozilla.javascript.EcmaError $r1;
        org.mozilla.javascript.xmlimpl.XMLList r0;
        int $i0;
        java.lang.Object $r4;
        java.lang.String r3;
        org.mozilla.javascript.xmlimpl.XML $r2;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        r3 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if $i0 != 1 goto label1;

        $r2 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML getXmlFromAnnotation(int)>(0);

        $r4 = virtualinvoke $r2.<org.mozilla.javascript.xmlimpl.XML: java.lang.Object namespace(java.lang.String)>(r3);

        return $r4;

     label1:
        $r1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError typeError(java.lang.String)>("The namespace method works only on lists containing one item");

        throw $r1;
    }

    java.lang.Object[] namespaceDeclarations()
    {
        org.mozilla.javascript.EcmaError $r1;
        org.mozilla.javascript.xmlimpl.XMLList r0;
        java.lang.Object[] $r3;
        int $i0;
        org.mozilla.javascript.xmlimpl.XML $r2;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        $i0 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if $i0 != 1 goto label1;

        $r2 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML getXmlFromAnnotation(int)>(0);

        $r3 = virtualinvoke $r2.<org.mozilla.javascript.xmlimpl.XML: java.lang.Object[] namespaceDeclarations()>();

        return $r3;

     label1:
        $r1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError typeError(java.lang.String)>("The namespaceDeclarations method works only on lists containing one item");

        throw $r1;
    }

    java.lang.Object nodeKind()
    {
        org.mozilla.javascript.EcmaError $r1;
        org.mozilla.javascript.xmlimpl.XMLList r0;
        int $i0;
        java.lang.Object $r3;
        org.mozilla.javascript.xmlimpl.XML $r2;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        $i0 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if $i0 != 1 goto label1;

        $r2 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML getXmlFromAnnotation(int)>(0);

        $r3 = virtualinvoke $r2.<org.mozilla.javascript.xmlimpl.XML: java.lang.Object nodeKind()>();

        return $r3;

     label1:
        $r1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError typeError(java.lang.String)>("The nodeKind method works only on lists containing one item");

        throw $r1;
    }

    void normalize()
    {
        org.mozilla.javascript.xmlimpl.XMLList r0;
        int $i0, i1;
        org.mozilla.javascript.xmlimpl.XML $r1;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        i1 = 0;

     label1:
        $i0 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if i1 >= $i0 goto label2;

        $r1 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML getXmlFromAnnotation(int)>(i1);

        virtualinvoke $r1.<org.mozilla.javascript.xmlimpl.XML: void normalize()>();

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    java.lang.Object parent()
    {
        org.mozilla.javascript.xmlimpl.XMLList r0;
        org.mozilla.javascript.xmlimpl.XMLObjectImpl $r3, $r4;
        org.mozilla.javascript.xmlimpl.XML $r1;
        int $i0, i1, $i2;
        java.lang.Object $r2, r5;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        r5 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

        $i0 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if $i0 != 0 goto label1;

        $r3 = r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XMLObjectImpl targetObject>;

        if $r3 == null goto label1;

        $r4 = r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XMLObjectImpl targetObject>;

        $z0 = $r4 instanceof org.mozilla.javascript.xmlimpl.XML;

        if $z0 == 0 goto label1;

        r5 = r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XMLObjectImpl targetObject>;

        goto label5;

     label1:
        i1 = 0;

     label2:
        $i2 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if i1 >= $i2 goto label5;

        $r1 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML getXmlFromAnnotation(int)>(i1);

        $r2 = virtualinvoke $r1.<org.mozilla.javascript.xmlimpl.XML: java.lang.Object parent()>();

        if i1 != 0 goto label3;

        r5 = $r2;

        goto label4;

     label3:
        if r5 == $r2 goto label4;

        r5 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

        goto label5;

     label4:
        i1 = i1 + 1;

        goto label2;

     label5:
        return r5;
    }

    org.mozilla.javascript.xmlimpl.XML prependChild(java.lang.Object)
    {
        org.mozilla.javascript.EcmaError $r1;
        org.mozilla.javascript.xmlimpl.XMLList r0;
        int $i0;
        java.lang.Object r3;
        org.mozilla.javascript.xmlimpl.XML $r2, $r4;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        r3 := @parameter0: java.lang.Object;

        $i0 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if $i0 != 1 goto label1;

        $r2 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML getXmlFromAnnotation(int)>(0);

        $r4 = virtualinvoke $r2.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XML prependChild(java.lang.Object)>(r3);

        return $r4;

     label1:
        $r1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError typeError(java.lang.String)>("The prependChild method works only on lists containing one item");

        throw $r1;
    }

    java.lang.Object processingInstructions(org.mozilla.javascript.xmlimpl.XMLName)
    {
        org.mozilla.javascript.xmlimpl.XMLList $r0, r1;
        org.mozilla.javascript.xmlimpl.XML $r3;
        org.mozilla.javascript.xmlimpl.XMLLibImpl $r2;
        org.mozilla.javascript.xmlimpl.XMLName r4;
        int $i0, i1;
        java.lang.Object $r5;

        r1 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        r4 := @parameter0: org.mozilla.javascript.xmlimpl.XMLName;

        $r0 = new org.mozilla.javascript.xmlimpl.XMLList;

        $r2 = r1.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        specialinvoke $r0.<org.mozilla.javascript.xmlimpl.XMLList: void <init>(org.mozilla.javascript.xmlimpl.XMLLibImpl)>($r2);

        i1 = 0;

     label1:
        $i0 = virtualinvoke r1.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if i1 >= $i0 goto label2;

        $r3 = virtualinvoke r1.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML getXmlFromAnnotation(int)>(i1);

        $r5 = virtualinvoke $r3.<org.mozilla.javascript.xmlimpl.XML: java.lang.Object processingInstructions(org.mozilla.javascript.xmlimpl.XMLName)>(r4);

        virtualinvoke $r0.<org.mozilla.javascript.xmlimpl.XMLList: void addToList(java.lang.Object)>($r5);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r0;
    }

    boolean propertyIsEnumerable(java.lang.Object)
    {
        long $l1, l7;
        java.lang.Integer $r4;
        byte $b2, $b3, $b4, $b5, $b8;
        int $i0, $i6, $i9, $i10, $i11;
        java.lang.String $r1;
        java.lang.Number $r3;
        boolean $z0, $z1, $z2;
        double $d0, $d1, $d2;
        org.mozilla.javascript.xmlimpl.XMLList r2;
        java.lang.Object r0;

        r2 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.lang.Integer;

        if $z0 == 0 goto label1;

        $r4 = (java.lang.Integer) r0;

        $i6 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        l7 = (long) $i6;

        goto label4;

     label1:
        $z1 = r0 instanceof java.lang.Number;

        if $z1 == 0 goto label3;

        $r3 = (java.lang.Number) r0;

        $d0 = virtualinvoke $r3.<java.lang.Number: double doubleValue()>();

        l7 = (long) $d0;

        $d1 = (double) l7;

        $b3 = $d1 cmpl $d0;

        if $b3 == 0 goto label2;

        return 0;

     label2:
        $b4 = l7 cmp 0L;

        if $b4 != 0 goto label4;

        $d2 = 1.0 / $d0;

        $b5 = $d2 cmpg 0.0;

        $i9 = (int) $b5;

        if $i9 >= 0 goto label4;

        return 0;

     label3:
        $r1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>(r0);

        l7 = staticinvoke <org.mozilla.javascript.ScriptRuntime: long testUint32String(java.lang.String)>($r1);

     label4:
        $b8 = 0L cmp l7;

        $i10 = (int) $b8;

        if $i10 > 0 goto label5;

        $i0 = virtualinvoke r2.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        $l1 = (long) $i0;

        $b2 = l7 cmp $l1;

        $i11 = (int) $b2;

        if $i11 >= 0 goto label5;

        $z2 = 1;

        goto label6;

     label5:
        $z2 = 0;

     label6:
        return $z2;
    }

    org.mozilla.javascript.xmlimpl.XML removeNamespace(org.mozilla.javascript.xmlimpl.Namespace)
    {
        org.mozilla.javascript.EcmaError $r1;
        org.mozilla.javascript.xmlimpl.XMLList r0;
        int $i0;
        org.mozilla.javascript.xmlimpl.Namespace r3;
        org.mozilla.javascript.xmlimpl.XML $r2, $r4;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        r3 := @parameter0: org.mozilla.javascript.xmlimpl.Namespace;

        $i0 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if $i0 != 1 goto label1;

        $r2 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML getXmlFromAnnotation(int)>(0);

        $r4 = virtualinvoke $r2.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XML removeNamespace(org.mozilla.javascript.xmlimpl.Namespace)>(r3);

        return $r4;

     label1:
        $r1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError typeError(java.lang.String)>("The removeNamespace method works only on lists containing one item");

        throw $r1;
    }

    org.mozilla.javascript.xmlimpl.XML replace(long, java.lang.Object)
    {
        org.mozilla.javascript.EcmaError $r1;
        org.mozilla.javascript.xmlimpl.XMLList r0;
        int $i0;
        long l1;
        java.lang.Object r3;
        org.mozilla.javascript.xmlimpl.XML $r2, $r4;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        l1 := @parameter0: long;

        r3 := @parameter1: java.lang.Object;

        $i0 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if $i0 != 1 goto label1;

        $r2 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML getXmlFromAnnotation(int)>(0);

        $r4 = virtualinvoke $r2.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XML replace(long,java.lang.Object)>(l1, r3);

        return $r4;

     label1:
        $r1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError typeError(java.lang.String)>("The replace method works only on lists containing one item");

        throw $r1;
    }

    org.mozilla.javascript.xmlimpl.XML replace(org.mozilla.javascript.xmlimpl.XMLName, java.lang.Object)
    {
        org.mozilla.javascript.EcmaError $r1;
        org.mozilla.javascript.xmlimpl.XMLList r0;
        org.mozilla.javascript.xmlimpl.XMLName r3;
        int $i0;
        java.lang.Object r4;
        org.mozilla.javascript.xmlimpl.XML $r2, $r5;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        r3 := @parameter0: org.mozilla.javascript.xmlimpl.XMLName;

        r4 := @parameter1: java.lang.Object;

        $i0 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if $i0 != 1 goto label1;

        $r2 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML getXmlFromAnnotation(int)>(0);

        $r5 = virtualinvoke $r2.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XML replace(org.mozilla.javascript.xmlimpl.XMLName,java.lang.Object)>(r3, r4);

        return $r5;

     label1:
        $r1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError typeError(java.lang.String)>("The replace method works only on lists containing one item");

        throw $r1;
    }

    org.mozilla.javascript.xmlimpl.XML setChildren(java.lang.Object)
    {
        org.mozilla.javascript.EcmaError $r1;
        org.mozilla.javascript.xmlimpl.XMLList r0;
        int $i0;
        java.lang.Object r3;
        org.mozilla.javascript.xmlimpl.XML $r2, $r4;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        r3 := @parameter0: java.lang.Object;

        $i0 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if $i0 != 1 goto label1;

        $r2 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML getXmlFromAnnotation(int)>(0);

        $r4 = virtualinvoke $r2.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XML setChildren(java.lang.Object)>(r3);

        return $r4;

     label1:
        $r1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError typeError(java.lang.String)>("The setChildren method works only on lists containing one item");

        throw $r1;
    }

    void setLocalName(java.lang.String)
    {
        org.mozilla.javascript.EcmaError $r1;
        org.mozilla.javascript.xmlimpl.XMLList r0;
        int $i0;
        java.lang.String r3;
        org.mozilla.javascript.xmlimpl.XML $r2;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        r3 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if $i0 != 1 goto label1;

        $r2 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML getXmlFromAnnotation(int)>(0);

        virtualinvoke $r2.<org.mozilla.javascript.xmlimpl.XML: void setLocalName(java.lang.String)>(r3);

        goto label2;

     label1:
        $r1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError typeError(java.lang.String)>("The setLocalName method works only on lists containing one item");

        throw $r1;

     label2:
        return;
    }

    void setName(org.mozilla.javascript.xmlimpl.QName)
    {
        org.mozilla.javascript.EcmaError $r1;
        org.mozilla.javascript.xmlimpl.XMLList r0;
        int $i0;
        org.mozilla.javascript.xmlimpl.QName r3;
        org.mozilla.javascript.xmlimpl.XML $r2;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        r3 := @parameter0: org.mozilla.javascript.xmlimpl.QName;

        $i0 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if $i0 != 1 goto label1;

        $r2 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML getXmlFromAnnotation(int)>(0);

        virtualinvoke $r2.<org.mozilla.javascript.xmlimpl.XML: void setName(org.mozilla.javascript.xmlimpl.QName)>(r3);

        goto label2;

     label1:
        $r1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError typeError(java.lang.String)>("The setName method works only on lists containing one item");

        throw $r1;

     label2:
        return;
    }

    void setNamespace(org.mozilla.javascript.xmlimpl.Namespace)
    {
        org.mozilla.javascript.EcmaError $r1;
        org.mozilla.javascript.xmlimpl.XMLList r0;
        int $i0;
        org.mozilla.javascript.xmlimpl.Namespace r3;
        org.mozilla.javascript.xmlimpl.XML $r2;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        r3 := @parameter0: org.mozilla.javascript.xmlimpl.Namespace;

        $i0 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if $i0 != 1 goto label1;

        $r2 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML getXmlFromAnnotation(int)>(0);

        virtualinvoke $r2.<org.mozilla.javascript.xmlimpl.XML: void setNamespace(org.mozilla.javascript.xmlimpl.Namespace)>(r3);

        goto label2;

     label1:
        $r1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError typeError(java.lang.String)>("The setNamespace method works only on lists containing one item");

        throw $r1;

     label2:
        return;
    }

    org.mozilla.javascript.xmlimpl.XMLList text()
    {
        org.mozilla.javascript.xmlimpl.XMLLibImpl $r2;
        org.mozilla.javascript.xmlimpl.XMLList $r0, r1, $r4;
        int $i0, i1;
        org.mozilla.javascript.xmlimpl.XML $r3;

        r1 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        $r0 = new org.mozilla.javascript.xmlimpl.XMLList;

        $r2 = r1.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        specialinvoke $r0.<org.mozilla.javascript.xmlimpl.XMLList: void <init>(org.mozilla.javascript.xmlimpl.XMLLibImpl)>($r2);

        i1 = 0;

     label1:
        $i0 = virtualinvoke r1.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if i1 >= $i0 goto label2;

        $r3 = virtualinvoke r1.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML getXmlFromAnnotation(int)>(i1);

        $r4 = virtualinvoke $r3.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLList text()>();

        virtualinvoke $r0.<org.mozilla.javascript.xmlimpl.XMLList: void addToList(java.lang.Object)>($r4);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r0;
    }

    public java.lang.String toString()
    {
        org.mozilla.javascript.xmlimpl.XMLList r0;
        org.mozilla.javascript.xmlimpl.XML $r4;
        java.lang.StringBuffer $r2;
        int $i0, i1;
        java.lang.String $r1, $r3, $r5;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        $z0 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: boolean hasSimpleContent()>();

        if $z0 == 0 goto label3;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        i1 = 0;

     label1:
        $i0 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if i1 >= $i0 goto label2;

        $r4 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML getXmlFromAnnotation(int)>(i1);

        $r5 = virtualinvoke $r4.<org.mozilla.javascript.xmlimpl.XML: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;

     label3:
        $r1 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: java.lang.String toXMLString(int)>(0);

        return $r1;
    }

    java.lang.String toSource(int)
    {
        org.mozilla.javascript.xmlimpl.XMLList r2;
        java.lang.StringBuffer $r0, $r1, $r4, $r5;
        int i0;
        java.lang.String $r3, $r6;

        r2 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        i0 := @parameter0: int;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<>");

        $r3 = virtualinvoke r2.<org.mozilla.javascript.xmlimpl.XMLList: java.lang.String toXMLString(int)>(0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("</>");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r6;
    }

    java.lang.String toXMLString(int)
    {
        org.mozilla.javascript.xmlimpl.XMLList r1;
        org.mozilla.javascript.xmlimpl.XML $r3;
        java.lang.StringBuffer $r0;
        int $i0, i1, i2;
        java.lang.String $r2, $r4;

        r1 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        i1 := @parameter0: int;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        i2 = 0;

     label1:
        $i0 = virtualinvoke r1.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if i2 >= $i0 goto label3;

        if i2 <= 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

     label2:
        $r3 = virtualinvoke r1.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML getXmlFromAnnotation(int)>(i2);

        $r4 = virtualinvoke $r3.<org.mozilla.javascript.xmlimpl.XML: java.lang.String toXMLString(int)>(i1);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        i2 = i2 + 1;

        goto label1;

     label3:
        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    java.lang.Object valueOf()
    {
        org.mozilla.javascript.xmlimpl.XMLList r0;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        return r0;
    }

    boolean equivalentXml(java.lang.Object)
    {
        org.mozilla.javascript.xmlimpl.XML $r3, $r4, $r5;
        int $i0, $i1, $i2, $i3, $i4, i5;
        boolean $z0, $z1, $z2, z3;
        org.mozilla.javascript.xmlimpl.XMLList r1, r2;
        java.lang.Object r0;

        r1 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        r0 := @parameter0: java.lang.Object;

        z3 = 0;

        $z0 = r0 instanceof org.mozilla.javascript.Undefined;

        if $z0 == 0 goto label1;

        $i4 = virtualinvoke r1.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if $i4 != 0 goto label1;

        z3 = 1;

        goto label5;

     label1:
        $i0 = virtualinvoke r1.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if $i0 != 1 goto label2;

        $r5 = virtualinvoke r1.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML getXmlFromAnnotation(int)>(0);

        z3 = virtualinvoke $r5.<org.mozilla.javascript.xmlimpl.XML: boolean equivalentXml(java.lang.Object)>(r0);

        goto label5;

     label2:
        $z1 = r0 instanceof org.mozilla.javascript.xmlimpl.XMLList;

        if $z1 == 0 goto label5;

        r2 = (org.mozilla.javascript.xmlimpl.XMLList) r0;

        $i1 = virtualinvoke r2.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        $i2 = virtualinvoke r1.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if $i1 != $i2 goto label5;

        z3 = 1;

        i5 = 0;

     label3:
        $i3 = virtualinvoke r1.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if i5 >= $i3 goto label5;

        $r3 = virtualinvoke r1.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML getXmlFromAnnotation(int)>(i5);

        $r4 = virtualinvoke r2.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML getXmlFromAnnotation(int)>(i5);

        $z2 = virtualinvoke $r3.<org.mozilla.javascript.xmlimpl.XML: boolean equivalentXml(java.lang.Object)>($r4);

        if $z2 != 0 goto label4;

        z3 = 0;

        goto label5;

     label4:
        i5 = i5 + 1;

        goto label3;

     label5:
        return z3;
    }

    private org.mozilla.javascript.xmlimpl.XMLList getPropertyList(org.mozilla.javascript.xmlimpl.XMLName)
    {
        org.mozilla.javascript.xmlimpl.XMLList $r0, r1, $r5;
        org.mozilla.javascript.xmlimpl.XML $r4;
        org.mozilla.javascript.xmlimpl.XMLLibImpl $r2;
        org.mozilla.javascript.xmlimpl.XMLName r3;
        int i0, $i1;
        javax.xml.namespace.QName $r6, r9;
        java.lang.String $r7, $r8;
        boolean $z0, $z1;

        r1 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        r3 := @parameter0: org.mozilla.javascript.xmlimpl.XMLName;

        $r0 = new org.mozilla.javascript.xmlimpl.XMLList;

        $r2 = r1.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        specialinvoke $r0.<org.mozilla.javascript.xmlimpl.XMLList: void <init>(org.mozilla.javascript.xmlimpl.XMLLibImpl)>($r2);

        r9 = null;

        $z0 = virtualinvoke r3.<org.mozilla.javascript.xmlimpl.XMLName: boolean isDescendants()>();

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r3.<org.mozilla.javascript.xmlimpl.XMLName: boolean isAttributeName()>();

        if $z1 != 0 goto label1;

        $r6 = new javax.xml.namespace.QName;

        $r7 = virtualinvoke r3.<org.mozilla.javascript.xmlimpl.XMLName: java.lang.String uri()>();

        $r8 = virtualinvoke r3.<org.mozilla.javascript.xmlimpl.XMLName: java.lang.String localName()>();

        specialinvoke $r6.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>($r7, $r8);

        r9 = $r6;

     label1:
        virtualinvoke $r0.<org.mozilla.javascript.xmlimpl.XMLList: void setTargets(org.mozilla.javascript.xmlimpl.XMLObjectImpl,javax.xml.namespace.QName)>(r1, r9);

        i0 = 0;

     label2:
        $i1 = virtualinvoke r1.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if i0 >= $i1 goto label3;

        $r4 = virtualinvoke r1.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML getXmlFromAnnotation(int)>(i0);

        $r5 = virtualinvoke $r4.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLList getPropertyList(org.mozilla.javascript.xmlimpl.XMLName)>(r3);

        virtualinvoke $r0.<org.mozilla.javascript.xmlimpl.XMLList: void addToList(java.lang.Object)>($r5);

        i0 = i0 + 1;

        goto label2;

     label3:
        return $r0;
    }

    private java.lang.Object applyOrCall(boolean, org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, org.mozilla.javascript.Scriptable, java.lang.Object[])
    {
        org.mozilla.javascript.EcmaError $r2;
        org.mozilla.javascript.xmlimpl.XMLList $r3, r9;
        java.lang.Object[] r7;
        org.mozilla.javascript.Context r5;
        org.mozilla.javascript.Scriptable r1, r6;
        java.lang.Object $r8;
        java.lang.String r0, $r10;
        javax.xml.namespace.QName $r4;
        boolean z0, $z1;

        r9 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        z0 := @parameter0: boolean;

        r5 := @parameter1: org.mozilla.javascript.Context;

        r6 := @parameter2: org.mozilla.javascript.Scriptable;

        r1 := @parameter3: org.mozilla.javascript.Scriptable;

        r7 := @parameter4: java.lang.Object[];

        if z0 == 0 goto label1;

        $r10 = "apply";

        goto label2;

     label1:
        $r10 = "call";

     label2:
        r0 = $r10;

        $z1 = r1 instanceof org.mozilla.javascript.xmlimpl.XMLList;

        if $z1 == 0 goto label3;

        $r3 = (org.mozilla.javascript.xmlimpl.XMLList) r1;

        $r4 = $r3.<org.mozilla.javascript.xmlimpl.XMLList: javax.xml.namespace.QName targetProperty>;

        if $r4 != null goto label4;

     label3:
        $r2 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError typeError1(java.lang.String,java.lang.String)>("msg.isnt.function", r0);

        throw $r2;

     label4:
        $r8 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Object applyOrCall(boolean,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])>(z0, r5, r6, r1, r7);

        return $r8;
    }

    protected java.lang.Object jsConstructor(org.mozilla.javascript.Context, boolean, java.lang.Object[])
    {
        java.lang.Object[] r0;
        org.mozilla.javascript.xmlimpl.XMLList $r2, r3, $r5;
        org.mozilla.javascript.Context r7;
        org.mozilla.javascript.xmlimpl.XMLLibImpl $r4, $r6;
        int $i0;
        java.lang.Object r1;
        boolean z0, $z1;

        r3 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        r7 := @parameter0: org.mozilla.javascript.Context;

        z0 := @parameter1: boolean;

        r0 := @parameter2: java.lang.Object[];

        $i0 = lengthof r0;

        if $i0 != 0 goto label1;

        $r5 = new org.mozilla.javascript.xmlimpl.XMLList;

        $r6 = r3.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        specialinvoke $r5.<org.mozilla.javascript.xmlimpl.XMLList: void <init>(org.mozilla.javascript.xmlimpl.XMLLibImpl)>($r6);

        return $r5;

     label1:
        r1 = r0[0];

        if z0 != 0 goto label2;

        $z1 = r1 instanceof org.mozilla.javascript.xmlimpl.XMLList;

        if $z1 == 0 goto label2;

        return r1;

     label2:
        $r2 = new org.mozilla.javascript.xmlimpl.XMLList;

        $r4 = r3.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        specialinvoke $r2.<org.mozilla.javascript.xmlimpl.XMLList: void <init>(org.mozilla.javascript.xmlimpl.XMLLibImpl,java.lang.Object)>($r4, r1);

        return $r2;
    }

    org.apache.xmlbeans.XmlObject getXmlObject()
    {
        org.mozilla.javascript.EcmaError $r1;
        org.mozilla.javascript.xmlimpl.XMLList r0;
        int $i0;
        org.apache.xmlbeans.XmlObject $r3;
        org.mozilla.javascript.xmlimpl.XML $r2;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        $i0 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if $i0 != 1 goto label1;

        $r2 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML getXmlFromAnnotation(int)>(0);

        $r3 = virtualinvoke $r2.<org.mozilla.javascript.xmlimpl.XML: org.apache.xmlbeans.XmlObject getXmlObject()>();

        return $r3;

     label1:
        $r1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError typeError(java.lang.String)>("getXmlObject method works only on lists containing one item");

        throw $r1;
    }

    public org.mozilla.javascript.Scriptable getExtraMethodSource(org.mozilla.javascript.Context)
    {
        org.mozilla.javascript.xmlimpl.XMLList r0;
        org.mozilla.javascript.Context r2;
        int $i0;
        org.mozilla.javascript.xmlimpl.XML $r1;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        r2 := @parameter0: org.mozilla.javascript.Context;

        $i0 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if $i0 != 1 goto label1;

        $r1 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML getXmlFromAnnotation(int)>(0);

        return $r1;

     label1:
        return null;
    }

    public java.lang.Object call(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, org.mozilla.javascript.Scriptable, java.lang.Object[])
    {
        org.mozilla.javascript.xmlimpl.XMLList r0;
        java.lang.Object[] r7;
        org.mozilla.javascript.Context r4;
        org.mozilla.javascript.Callable $r9;
        java.lang.RuntimeException $r11;
        org.mozilla.javascript.Scriptable r5, r6;
        java.lang.Object $r8, $r10;
        javax.xml.namespace.QName $r1, $r2;
        java.lang.String $r3;
        boolean $z0, $z1;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        r4 := @parameter0: org.mozilla.javascript.Context;

        r5 := @parameter1: org.mozilla.javascript.Scriptable;

        r6 := @parameter2: org.mozilla.javascript.Scriptable;

        r7 := @parameter3: java.lang.Object[];

        $r1 = r0.<org.mozilla.javascript.xmlimpl.XMLList: javax.xml.namespace.QName targetProperty>;

        if $r1 != null goto label1;

        $r11 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.RuntimeException notFunctionError(java.lang.Object)>(r0);

        throw $r11;

     label1:
        $r2 = r0.<org.mozilla.javascript.xmlimpl.XMLList: javax.xml.namespace.QName targetProperty>;

        $r3 = virtualinvoke $r2.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("apply");

        if $z0 != 0 goto label2;

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("call");

        if $z1 == 0 goto label3;

     label2:
        $r8 = specialinvoke r0.<org.mozilla.javascript.xmlimpl.XMLList: java.lang.Object applyOrCall(boolean,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])>($z0, r4, r5, r6, r7);

        return $r8;

     label3:
        $r9 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Callable getElemFunctionAndThis(java.lang.Object,java.lang.Object,org.mozilla.javascript.Context)>(r0, $r3, r4);

        staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Scriptable lastStoredScriptable(org.mozilla.javascript.Context)>(r4);

        $r10 = interfaceinvoke $r9.<org.mozilla.javascript.Callable: java.lang.Object call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])>(r4, r5, r6, r7);

        return $r10;
    }

    public org.mozilla.javascript.Scriptable construct(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, java.lang.Object[])
    {
        org.mozilla.javascript.EcmaError $r0;
        org.mozilla.javascript.xmlimpl.XMLList r1;
        org.mozilla.javascript.Scriptable r3;
        java.lang.Object[] r4;
        org.mozilla.javascript.Context r2;

        r1 := @this: org.mozilla.javascript.xmlimpl.XMLList;

        r2 := @parameter0: org.mozilla.javascript.Context;

        r3 := @parameter1: org.mozilla.javascript.Scriptable;

        r4 := @parameter2: java.lang.Object[];

        $r0 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError typeError1(java.lang.String,java.lang.String)>("msg.not.ctor", "XMLList");

        throw $r0;
    }

    public static void <clinit>()
    {
        <org.mozilla.javascript.xmlimpl.XMLList: long serialVersionUID> = -4543618751670781135L;

        return;
    }
}
