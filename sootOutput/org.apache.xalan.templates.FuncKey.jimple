public class org.apache.xalan.templates.FuncKey extends org.apache.xpath.functions.Function2Args
{
    private static java.lang.Boolean ISTRUE;

    public void <init>()
    {
        org.apache.xalan.templates.FuncKey r0;

        r0 := @this: org.apache.xalan.templates.FuncKey;

        specialinvoke r0.<org.apache.xpath.functions.Function2Args: void <init>()>();

        return;
    }

    public org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext) throws javax.xml.transform.TransformerException
    {
        org.apache.xml.utils.XMLString $r13, $r19;
        org.apache.xalan.transformer.KeyManager $r12;
        boolean z1, $z2, $z3;
        org.apache.xpath.Expression $r5, $r10;
        org.apache.xml.utils.QName $r29;
        org.apache.xpath.objects.XNodeSet $r15, $r23, r26, r28, $r32;
        org.apache.xml.dtm.DTMIterator $r16;
        org.apache.xpath.objects.XObject $r6, $r11;
        org.apache.xpath.XPathContext r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i11;
        java.lang.Boolean $r21;
        java.lang.String $r7;
        java.util.Hashtable r27, $r31;
        org.apache.xpath.axes.UnionPathIterator $r30;
        org.apache.xml.dtm.DTM $r3, $r18;
        org.apache.xalan.templates.FuncKey r4;
        java.lang.Object $r1, $r20;
        org.apache.xml.utils.PrefixResolver $r9, $r14, $r22;
        org.apache.xalan.transformer.TransformerImpl r2;

        r4 := @this: org.apache.xalan.templates.FuncKey;

        r0 := @parameter0: org.apache.xpath.XPathContext;

        $r1 = virtualinvoke r0.<org.apache.xpath.XPathContext: java.lang.Object getOwnerObject()>();

        r2 = (org.apache.xalan.transformer.TransformerImpl) $r1;

        $i0 = virtualinvoke r0.<org.apache.xpath.XPathContext: int getCurrentNode()>();

        $r3 = virtualinvoke r0.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM getDTM(int)>($i0);

        $i1 = interfaceinvoke $r3.<org.apache.xml.dtm.DTM: int getDocumentRoot(int)>($i0);

        $i9 = (int) -1;

        if $i9 != $i1 goto label01;

     label01:
        $r5 = virtualinvoke r4.<org.apache.xpath.functions.FunctionOneArg: org.apache.xpath.Expression getArg0()>();

        $r6 = virtualinvoke $r5.<org.apache.xpath.Expression: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)>(r0);

        $r7 = virtualinvoke $r6.<org.apache.xpath.objects.XObject: java.lang.String str()>();

        $r29 = new org.apache.xml.utils.QName;

        $r9 = virtualinvoke r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.PrefixResolver getNamespaceContext()>();

        specialinvoke $r29.<org.apache.xml.utils.QName: void <init>(java.lang.String,org.apache.xml.utils.PrefixResolver)>($r7, $r9);

        $r10 = virtualinvoke r4.<org.apache.xpath.functions.Function2Args: org.apache.xpath.Expression getArg1()>();

        $r11 = virtualinvoke $r10.<org.apache.xpath.Expression: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)>(r0);

        $i2 = virtualinvoke $r11.<org.apache.xpath.objects.XObject: int getType()>();

        if 4 != $i2 goto label02;

        $z3 = 1;

        $z2 = 1;

        goto label03;

     label02:
        $z3 = 0;

        $z2 = 0;

     label03:
        z1 = $z2;

        $r12 = virtualinvoke r2.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.transformer.KeyManager getKeyManager()>();

        if $z3 == 0 goto label04;

        r26 = (org.apache.xpath.objects.XNodeSet) $r11;

        virtualinvoke r26.<org.apache.xpath.axes.NodeSequence: void setShouldCacheNodes(boolean)>(1);

        $i6 = virtualinvoke r26.<org.apache.xpath.axes.NodeSequence: int getLength()>();

        if $i6 > 1 goto label04;

        z1 = 0;

     label04:
        if z1 == 0 goto label10;

        r27 = null;

        $r16 = virtualinvoke $r11.<org.apache.xpath.objects.XObject: org.apache.xml.dtm.DTMIterator iter()>();

        $r30 = new org.apache.xpath.axes.UnionPathIterator;

        specialinvoke $r30.<org.apache.xpath.axes.UnionPathIterator: void <init>()>();

        virtualinvoke $r30.<org.apache.xpath.Expression: void exprSetParent(org.apache.xpath.ExpressionNode)>(r4);

        goto label09;

     label05:
        $r18 = virtualinvoke r0.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM getDTM(int)>($i7);

        $r19 = interfaceinvoke $r18.<org.apache.xml.dtm.DTM: org.apache.xml.utils.XMLString getStringValue(int)>($i7);

        if null != $r19 goto label06;

        goto label09;

     label06:
        if null != r27 goto label07;

        $r31 = new java.util.Hashtable;

        specialinvoke $r31.<java.util.Hashtable: void <init>()>();

        r27 = $r31;

     label07:
        $r20 = virtualinvoke r27.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r19);

        if $r20 == null goto label08;

        goto label09;

     label08:
        $r21 = <org.apache.xalan.templates.FuncKey: java.lang.Boolean ISTRUE>;

        virtualinvoke r27.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r19, $r21);

        $r22 = virtualinvoke r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.PrefixResolver getNamespaceContext()>();

        $r23 = virtualinvoke $r12.<org.apache.xalan.transformer.KeyManager: org.apache.xpath.objects.XNodeSet getNodeSetDTMByKey(org.apache.xpath.XPathContext,int,org.apache.xml.utils.QName,org.apache.xml.utils.XMLString,org.apache.xml.utils.PrefixResolver)>(r0, $i1, $r29, $r19, $r22);

        $i4 = virtualinvoke r0.<org.apache.xpath.XPathContext: int getCurrentNode()>();

        virtualinvoke $r23.<org.apache.xpath.axes.NodeSequence: void setRoot(int,java.lang.Object)>($i4, r0);

        virtualinvoke $r30.<org.apache.xpath.axes.UnionPathIterator: void addIterator(org.apache.xml.dtm.DTMIterator)>($r23);

     label09:
        $i7 = interfaceinvoke $r16.<org.apache.xml.dtm.DTMIterator: int nextNode()>();

        $i11 = (int) -1;

        if $i11 != $i7 goto label05;

        $i5 = virtualinvoke r0.<org.apache.xpath.XPathContext: int getCurrentNode()>();

        virtualinvoke $r30.<org.apache.xpath.axes.UnionPathIterator: void setRoot(int,java.lang.Object)>($i5, r0);

        $r32 = new org.apache.xpath.objects.XNodeSet;

        specialinvoke $r32.<org.apache.xpath.objects.XNodeSet: void <init>(org.apache.xml.dtm.DTMIterator)>($r30);

        r28 = $r32;

        goto label11;

     label10:
        $r13 = virtualinvoke $r11.<org.apache.xpath.objects.XObject: org.apache.xml.utils.XMLString xstr()>();

        $r14 = virtualinvoke r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.PrefixResolver getNamespaceContext()>();

        $r15 = virtualinvoke $r12.<org.apache.xalan.transformer.KeyManager: org.apache.xpath.objects.XNodeSet getNodeSetDTMByKey(org.apache.xpath.XPathContext,int,org.apache.xml.utils.QName,org.apache.xml.utils.XMLString,org.apache.xml.utils.PrefixResolver)>(r0, $i1, $r29, $r13, $r14);

        r28 = $r15;

        $i3 = virtualinvoke r0.<org.apache.xpath.XPathContext: int getCurrentNode()>();

        virtualinvoke $r15.<org.apache.xpath.axes.NodeSequence: void setRoot(int,java.lang.Object)>($i3, r0);

     label11:
        return r28;
    }

    static void <clinit>()
    {
        java.lang.Boolean $r0;

        $r0 = new java.lang.Boolean;

        specialinvoke $r0.<java.lang.Boolean: void <init>(boolean)>(1);

        <org.apache.xalan.templates.FuncKey: java.lang.Boolean ISTRUE> = $r0;

        return;
    }
}
