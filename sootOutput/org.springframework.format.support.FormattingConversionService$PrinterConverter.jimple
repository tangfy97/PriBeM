class org.springframework.format.support.FormattingConversionService$PrinterConverter extends java.lang.Object implements org.springframework.core.convert.converter.GenericConverter
{
    private java.lang.Class fieldType;
    private org.springframework.core.convert.TypeDescriptor printerObjectType;
    private org.springframework.format.Printer printer;
    private org.springframework.core.convert.ConversionService conversionService;

    public void <init>(java.lang.Class, org.springframework.format.Printer, org.springframework.core.convert.ConversionService)
    {
        org.springframework.format.support.FormattingConversionService$PrinterConverter r0;
        org.springframework.core.convert.TypeDescriptor $r4;
        java.lang.Class r1, $r3;
        org.springframework.format.Printer r2;
        org.springframework.core.convert.ConversionService r5;

        r0 := @this: org.springframework.format.support.FormattingConversionService$PrinterConverter;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: org.springframework.format.Printer;

        r5 := @parameter2: org.springframework.core.convert.ConversionService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.springframework.format.support.FormattingConversionService$PrinterConverter: java.lang.Class fieldType> = r1;

        $r3 = specialinvoke r0.<org.springframework.format.support.FormattingConversionService$PrinterConverter: java.lang.Class resolvePrinterObjectType(org.springframework.format.Printer)>(r2);

        $r4 = staticinvoke <org.springframework.core.convert.TypeDescriptor: org.springframework.core.convert.TypeDescriptor valueOf(java.lang.Class)>($r3);

        r0.<org.springframework.format.support.FormattingConversionService$PrinterConverter: org.springframework.core.convert.TypeDescriptor printerObjectType> = $r4;

        r0.<org.springframework.format.support.FormattingConversionService$PrinterConverter: org.springframework.format.Printer printer> = r2;

        r0.<org.springframework.format.support.FormattingConversionService$PrinterConverter: org.springframework.core.convert.ConversionService conversionService> = r5;

        return;
    }

    public java.util.Set getConvertibleTypes()
    {
        org.springframework.core.convert.converter.GenericConverter$ConvertiblePair $r0;
        org.springframework.format.support.FormattingConversionService$PrinterConverter r1;
        java.util.Set $r3;
        java.lang.Class $r2;

        r1 := @this: org.springframework.format.support.FormattingConversionService$PrinterConverter;

        $r0 = new org.springframework.core.convert.converter.GenericConverter$ConvertiblePair;

        $r2 = r1.<org.springframework.format.support.FormattingConversionService$PrinterConverter: java.lang.Class fieldType>;

        specialinvoke $r0.<org.springframework.core.convert.converter.GenericConverter$ConvertiblePair: void <init>(java.lang.Class,java.lang.Class)>($r2, class "Ljava/lang/String;");

        $r3 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r0);

        return $r3;
    }

    public java.lang.Object convert(java.lang.Object, org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor)
    {
        org.springframework.format.support.FormattingConversionService$PrinterConverter r1;
        org.springframework.format.Printer $r3;
        org.springframework.core.convert.TypeDescriptor r0, $r2, $r5, r7;
        java.util.Locale $r4;
        java.lang.Object r8;
        java.lang.String $r9;
        org.springframework.core.convert.ConversionService $r6;
        boolean $z0;

        r1 := @this: org.springframework.format.support.FormattingConversionService$PrinterConverter;

        r8 := @parameter0: java.lang.Object;

        r0 := @parameter1: org.springframework.core.convert.TypeDescriptor;

        r7 := @parameter2: org.springframework.core.convert.TypeDescriptor;

        $r2 = r1.<org.springframework.format.support.FormattingConversionService$PrinterConverter: org.springframework.core.convert.TypeDescriptor printerObjectType>;

        $z0 = virtualinvoke r0.<org.springframework.core.convert.TypeDescriptor: boolean isAssignableTo(org.springframework.core.convert.TypeDescriptor)>($r2);

        if $z0 != 0 goto label1;

        $r6 = r1.<org.springframework.format.support.FormattingConversionService$PrinterConverter: org.springframework.core.convert.ConversionService conversionService>;

        $r5 = r1.<org.springframework.format.support.FormattingConversionService$PrinterConverter: org.springframework.core.convert.TypeDescriptor printerObjectType>;

        r8 = interfaceinvoke $r6.<org.springframework.core.convert.ConversionService: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>(r8, r0, $r5);

     label1:
        if r8 == null goto label2;

        $r3 = r1.<org.springframework.format.support.FormattingConversionService$PrinterConverter: org.springframework.format.Printer printer>;

        $r4 = staticinvoke <org.springframework.context.i18n.LocaleContextHolder: java.util.Locale getLocale()>();

        $r9 = interfaceinvoke $r3.<org.springframework.format.Printer: java.lang.String print(java.lang.Object,java.util.Locale)>(r8, $r4);

        goto label3;

     label2:
        $r9 = "";

     label3:
        return $r9;
    }

    private java.lang.Class resolvePrinterObjectType(org.springframework.format.Printer)
    {
        org.springframework.format.support.FormattingConversionService$PrinterConverter r3;
        java.lang.Class $r1, $r2;
        org.springframework.format.Printer r0;

        r3 := @this: org.springframework.format.support.FormattingConversionService$PrinterConverter;

        r0 := @parameter0: org.springframework.format.Printer;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = staticinvoke <org.springframework.core.GenericTypeResolver: java.lang.Class resolveTypeArgument(java.lang.Class,java.lang.Class)>($r1, class "Lorg/springframework/format/Printer;");

        return $r2;
    }

    public java.lang.String toString()
    {
        org.springframework.format.support.FormattingConversionService$PrinterConverter r1;
        org.springframework.format.Printer $r10;
        java.lang.StringBuilder $r0, $r5, $r8, $r9, $r11;
        java.lang.Class $r2, $r6;
        java.lang.String $r3, $r4, $r7, $r12;

        r1 := @this: org.springframework.format.support.FormattingConversionService$PrinterConverter;

        $r0 = new java.lang.StringBuilder;

        $r2 = r1.<org.springframework.format.support.FormattingConversionService$PrinterConverter: java.lang.Class fieldType>;

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");

        $r6 = class "Ljava/lang/String;";

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        $r10 = r1.<org.springframework.format.support.FormattingConversionService$PrinterConverter: org.springframework.format.Printer printer>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }
}
