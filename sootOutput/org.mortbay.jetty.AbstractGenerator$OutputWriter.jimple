public class org.mortbay.jetty.AbstractGenerator$OutputWriter extends java.io.Writer
{
    private static final int WRITE_CONV;
    private static final int WRITE_ISO1;
    private static final int WRITE_UTF8;
    org.mortbay.jetty.AbstractGenerator$Output _out;
    org.mortbay.jetty.AbstractGenerator _generator;
    int _writeMode;
    int _surrogate;

    public void <init>(org.mortbay.jetty.AbstractGenerator$Output)
    {
        org.mortbay.jetty.AbstractGenerator$OutputWriter r0;
        org.mortbay.jetty.AbstractGenerator$Output r1, $r2;
        org.mortbay.jetty.AbstractGenerator $r3;

        r0 := @this: org.mortbay.jetty.AbstractGenerator$OutputWriter;

        r1 := @parameter0: org.mortbay.jetty.AbstractGenerator$Output;

        specialinvoke r0.<java.io.Writer: void <init>()>();

        r0.<org.mortbay.jetty.AbstractGenerator$OutputWriter: org.mortbay.jetty.AbstractGenerator$Output _out> = r1;

        $r2 = r0.<org.mortbay.jetty.AbstractGenerator$OutputWriter: org.mortbay.jetty.AbstractGenerator$Output _out>;

        $r3 = $r2.<org.mortbay.jetty.AbstractGenerator$Output: org.mortbay.jetty.AbstractGenerator _generator>;

        r0.<org.mortbay.jetty.AbstractGenerator$OutputWriter: org.mortbay.jetty.AbstractGenerator _generator> = $r3;

        return;
    }

    public void setCharacterEncoding(java.lang.String)
    {
        org.mortbay.jetty.AbstractGenerator$Output $r3, $r6, $r8, $r9, $r11, $r12;
        org.mortbay.util.ByteArrayOutputStream2 $r2, $r13;
        org.mortbay.jetty.AbstractGenerator$OutputWriter r1;
        int $i0;
        java.lang.String r0, $r4, $r5, $r7, $r10;
        boolean $z0, $z1, $z2;

        r1 := @this: org.mortbay.jetty.AbstractGenerator$OutputWriter;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $r4 = <org.mortbay.util.StringUtil: java.lang.String __ISO_8859_1>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z0 == 0 goto label2;

     label1:
        r1.<org.mortbay.jetty.AbstractGenerator$OutputWriter: int _writeMode> = 1;

        goto label5;

     label2:
        $r5 = "UTF-8";

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z1 == 0 goto label3;

        r1.<org.mortbay.jetty.AbstractGenerator$OutputWriter: int _writeMode> = 2;

        goto label5;

     label3:
        r1.<org.mortbay.jetty.AbstractGenerator$OutputWriter: int _writeMode> = 0;

        $r6 = r1.<org.mortbay.jetty.AbstractGenerator$OutputWriter: org.mortbay.jetty.AbstractGenerator$Output _out>;

        $r7 = $r6.<org.mortbay.jetty.AbstractGenerator$Output: java.lang.String _characterEncoding>;

        if $r7 == null goto label4;

        $r9 = r1.<org.mortbay.jetty.AbstractGenerator$OutputWriter: org.mortbay.jetty.AbstractGenerator$Output _out>;

        $r10 = $r9.<org.mortbay.jetty.AbstractGenerator$Output: java.lang.String _characterEncoding>;

        $z2 = virtualinvoke $r10.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z2 != 0 goto label5;

     label4:
        $r8 = r1.<org.mortbay.jetty.AbstractGenerator$OutputWriter: org.mortbay.jetty.AbstractGenerator$Output _out>;

        $r8.<org.mortbay.jetty.AbstractGenerator$Output: java.io.Writer _converter> = null;

     label5:
        $r11 = r1.<org.mortbay.jetty.AbstractGenerator$OutputWriter: org.mortbay.jetty.AbstractGenerator$Output _out>;

        $r11.<org.mortbay.jetty.AbstractGenerator$Output: java.lang.String _characterEncoding> = r0;

        $r12 = r1.<org.mortbay.jetty.AbstractGenerator$OutputWriter: org.mortbay.jetty.AbstractGenerator$Output _out>;

        $r13 = $r12.<org.mortbay.jetty.AbstractGenerator$Output: org.mortbay.util.ByteArrayOutputStream2 _bytes>;

        if $r13 != null goto label6;

        $r3 = r1.<org.mortbay.jetty.AbstractGenerator$OutputWriter: org.mortbay.jetty.AbstractGenerator$Output _out>;

        $r2 = new org.mortbay.util.ByteArrayOutputStream2;

        $i0 = staticinvoke <org.mortbay.jetty.AbstractGenerator: int access$100()>();

        specialinvoke $r2.<org.mortbay.util.ByteArrayOutputStream2: void <init>(int)>($i0);

        $r3.<org.mortbay.jetty.AbstractGenerator$Output: org.mortbay.util.ByteArrayOutputStream2 _bytes> = $r2;

     label6:
        return;
    }

    public void close() throws java.io.IOException
    {
        org.mortbay.jetty.AbstractGenerator$OutputWriter r0;
        org.mortbay.jetty.AbstractGenerator$Output $r1;

        r0 := @this: org.mortbay.jetty.AbstractGenerator$OutputWriter;

        $r1 = r0.<org.mortbay.jetty.AbstractGenerator$OutputWriter: org.mortbay.jetty.AbstractGenerator$Output _out>;

        virtualinvoke $r1.<org.mortbay.jetty.AbstractGenerator$Output: void close()>();

        return;
    }

    public void flush() throws java.io.IOException
    {
        org.mortbay.jetty.AbstractGenerator$OutputWriter r0;
        org.mortbay.jetty.AbstractGenerator$Output $r1;

        r0 := @this: org.mortbay.jetty.AbstractGenerator$OutputWriter;

        $r1 = r0.<org.mortbay.jetty.AbstractGenerator$OutputWriter: org.mortbay.jetty.AbstractGenerator$Output _out>;

        virtualinvoke $r1.<org.mortbay.jetty.AbstractGenerator$Output: void flush()>();

        return;
    }

    public void write(java.lang.String, int, int) throws java.io.IOException
    {
        org.mortbay.jetty.AbstractGenerator$Output $r1, $r3, $r5;
        org.mortbay.jetty.AbstractGenerator$OutputWriter r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7;
        java.lang.String r4;
        char[] $r2, $r6, $r7;

        r0 := @this: org.mortbay.jetty.AbstractGenerator$OutputWriter;

        r4 := @parameter0: java.lang.String;

        i6 := @parameter1: int;

        i7 := @parameter2: int;

     label1:
        $i0 = staticinvoke <org.mortbay.jetty.AbstractGenerator: int access$100()>();

        if i7 <= $i0 goto label2;

        $i3 = staticinvoke <org.mortbay.jetty.AbstractGenerator: int access$100()>();

        virtualinvoke r0.<org.mortbay.jetty.AbstractGenerator$OutputWriter: void write(java.lang.String,int,int)>(r4, i6, $i3);

        $i4 = staticinvoke <org.mortbay.jetty.AbstractGenerator: int access$100()>();

        i6 = i6 + $i4;

        $i5 = staticinvoke <org.mortbay.jetty.AbstractGenerator: int access$100()>();

        i7 = i7 - $i5;

        goto label1;

     label2:
        $r1 = r0.<org.mortbay.jetty.AbstractGenerator$OutputWriter: org.mortbay.jetty.AbstractGenerator$Output _out>;

        $r2 = $r1.<org.mortbay.jetty.AbstractGenerator$Output: char[] _chars>;

        if $r2 != null goto label3;

        $r5 = r0.<org.mortbay.jetty.AbstractGenerator$OutputWriter: org.mortbay.jetty.AbstractGenerator$Output _out>;

        $i2 = staticinvoke <org.mortbay.jetty.AbstractGenerator: int access$100()>();

        $r6 = newarray (char)[$i2];

        $r5.<org.mortbay.jetty.AbstractGenerator$Output: char[] _chars> = $r6;

     label3:
        $r3 = r0.<org.mortbay.jetty.AbstractGenerator$OutputWriter: org.mortbay.jetty.AbstractGenerator$Output _out>;

        $r7 = $r3.<org.mortbay.jetty.AbstractGenerator$Output: char[] _chars>;

        $i1 = i6 + i7;

        virtualinvoke r4.<java.lang.String: void getChars(int,int,char[],int)>(i6, $i1, $r7, 0);

        virtualinvoke r0.<org.mortbay.jetty.AbstractGenerator$OutputWriter: void write(char[],int,int)>($r7, 0, i7);

        return;
    }

    public void write(char[], int, int) throws java.io.IOException
    {
        byte[] $r4, $r8;
        byte $b17, $b21, $b25, $b29, $b33, $b36, $b41, $b45, $b49, $b53, $b56, $b61, $b65, $b69, $b72, $b77, $b81, $b84, $b89, $b92, $b96, $b103;
        short $s35, $s55, $s71, $s83, $s91;
        org.mortbay.jetty.AbstractGenerator$OutputWriter r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i18, $i19, $i20, $i22, $i23, $i24, $i26, $i27, $i28, $i30, $i31, $i32, $i37, $i38, $i39, $i40, $i42, $i43, $i44, $i46, $i47, $i48, $i50, $i51, $i52, $i57, $i58, $i59, $i60, $i62, $i63, $i64, $i66, $i67, $i68, $i73, $i74, $i75, $i76, $i78, $i79, $i80, $i85, $i86, $i87, $i88, $i93, $i94, $i95, $i97, $i98, $i99, $i100, $i101, $i102, $i104, i105, i106, $i107, i108, i109, i110, $i112, i113, i114, i116, i117, i118, i119, i120, i121, i122, i123, i124, i125, i126, i127, i128, i129, i130, $i131, $i132, $i133, $i135, $i136, $i138, $i139, $i140, $i141, $i142, $i143, $i144, $i145, $i146, $i147, $i148, $i149, $i150, $i151, $i152, $i153, $i154, $i155, $i156, $i157;
        org.mortbay.util.ByteArrayOutputStream2 $r2, $r3, $r5, $r7, $r9, $r10, $r13, $r14;
        org.mortbay.jetty.AbstractGenerator$Output r1;
        char[] r6;
        java.lang.IllegalStateException $r15;
        java.io.Writer $r11;
        char $c34, $c54, $c70, $c82, $c90, c111, c115;

        r0 := @this: org.mortbay.jetty.AbstractGenerator$OutputWriter;

        r6 := @parameter0: char[];

        i105 := @parameter1: int;

        i106 := @parameter2: int;

        r1 = r0.<org.mortbay.jetty.AbstractGenerator$OutputWriter: org.mortbay.jetty.AbstractGenerator$Output _out>;

     label01:
        if i106 <= 0 goto label31;

        $r2 = r1.<org.mortbay.jetty.AbstractGenerator$Output: org.mortbay.util.ByteArrayOutputStream2 _bytes>;

        virtualinvoke $r2.<org.mortbay.util.ByteArrayOutputStream2: void reset()>();

        $i0 = staticinvoke <org.mortbay.jetty.AbstractGenerator: int access$100()>();

        if i106 <= $i0 goto label02;

        $i107 = staticinvoke <org.mortbay.jetty.AbstractGenerator: int access$100()>();

        goto label03;

     label02:
        $i107 = i106;

     label03:
        i108 = $i107;

        $i1 = r0.<org.mortbay.jetty.AbstractGenerator$OutputWriter: int _writeMode>;

        tableswitch($i1)
        {
            case 0: goto label04;
            case 1: goto label05;
            case 2: goto label11;
            default: goto label29;
        };

     label04:
        $r11 = specialinvoke r0.<org.mortbay.jetty.AbstractGenerator$OutputWriter: java.io.Writer getConverter()>();

        virtualinvoke $r11.<java.io.Writer: void write(char[],int,int)>(r6, i105, $i107);

        virtualinvoke $r11.<java.io.Writer: void flush()>();

        goto label30;

     label05:
        $r7 = r1.<org.mortbay.jetty.AbstractGenerator$Output: org.mortbay.util.ByteArrayOutputStream2 _bytes>;

        $r8 = virtualinvoke $r7.<org.mortbay.util.ByteArrayOutputStream2: byte[] getBuf()>();

        $r9 = r1.<org.mortbay.jetty.AbstractGenerator$Output: org.mortbay.util.ByteArrayOutputStream2 _bytes>;

        $i98 = virtualinvoke $r9.<org.mortbay.util.ByteArrayOutputStream2: int getCount()>();

        i109 = $i98;

        $i99 = lengthof $r8;

        $i100 = $i99 - $i98;

        if $i107 <= $i100 goto label06;

        $i104 = lengthof $r8;

        i108 = $i104 - $i98;

     label06:
        i110 = 0;

     label07:
        if i110 >= i108 goto label10;

        $i101 = i105 + i110;

        c111 = r6[$i101];

        $i102 = i109;

        i109 = i109 + 1;

        $i132 = (int) c111;

        if $i132 >= 256 goto label08;

        $i112 = c111;

        goto label09;

     label08:
        $i112 = 63;

     label09:
        $b103 = (byte) $i112;

        $r8[$i102] = $b103;

        i110 = i110 + 1;

        goto label07;

     label10:
        if i109 < 0 goto label30;

        $r10 = r1.<org.mortbay.jetty.AbstractGenerator$Output: org.mortbay.util.ByteArrayOutputStream2 _bytes>;

        virtualinvoke $r10.<org.mortbay.util.ByteArrayOutputStream2: void setCount(int)>(i109);

        goto label30;

     label11:
        $r3 = r1.<org.mortbay.jetty.AbstractGenerator$Output: org.mortbay.util.ByteArrayOutputStream2 _bytes>;

        $r4 = virtualinvoke $r3.<org.mortbay.util.ByteArrayOutputStream2: byte[] getBuf()>();

        $r5 = r1.<org.mortbay.jetty.AbstractGenerator$Output: org.mortbay.util.ByteArrayOutputStream2 _bytes>;

        $i2 = virtualinvoke $r5.<org.mortbay.util.ByteArrayOutputStream2: int getCount()>();

        i113 = $i2;

        $i4 = $i2 + $i107;

        $i3 = lengthof $r4;

        if $i4 <= $i3 goto label12;

        $i97 = lengthof $r4;

        i108 = $i97 - $i2;

     label12:
        i114 = 0;

     label13:
        if i114 >= i108 goto label28;

        $i5 = i105 + i114;

        c115 = r6[$i5];

        $i133 = (int) c115;

        $i135 = (int) -128;

        $i6 = $i133 & $i135;

        if $i6 != 0 goto label15;

        $i94 = i113 + 1;

        $i93 = lengthof $r4;

        if $i94 <= $i93 goto label14;

        i108 = i114;

        goto label28;

     label14:
        $i95 = i113;

        i113 = i113 + 1;

        $b96 = (byte) c115;

        $r4[$i95] = $b96;

        goto label27;

     label15:
        $i136 = (int) c115;

        $i138 = (int) -2048;

        $i7 = $i136 & $i138;

        if $i7 != 0 goto label17;

        $i86 = i113 + 2;

        $i85 = lengthof $r4;

        if $i86 <= $i85 goto label16;

        i108 = i114;

        goto label28;

     label16:
        i116 = i113 + 1;

        $i139 = (int) c115;

        $i87 = $i139 >> 6;

        $i88 = 192 | $i87;

        $b89 = (byte) $i88;

        $r4[i113] = $b89;

        i113 = i116 + 1;

        $c90 = c115 & 63;

        $s91 = 128 | $c90;

        $b92 = (byte) $s91;

        $r4[i116] = $b92;

        goto label26;

     label17:
        $i140 = (int) c115;

        $i8 = $i140 & -65536;

        if $i8 != 0 goto label19;

        $i74 = i113 + 3;

        $i73 = lengthof $r4;

        if $i74 <= $i73 goto label18;

        i108 = i114;

        goto label28;

     label18:
        i117 = i113 + 1;

        $i141 = (int) c115;

        $i75 = $i141 >> 12;

        $i76 = 224 | $i75;

        $b77 = (byte) $i76;

        $r4[i113] = $b77;

        i118 = i117 + 1;

        $i142 = (int) c115;

        $i78 = $i142 >> 6;

        $i79 = $i78 & 63;

        $i80 = 128 | $i79;

        $b81 = (byte) $i80;

        $r4[i117] = $b81;

        i113 = i118 + 1;

        $c82 = c115 & 63;

        $s83 = 128 | $c82;

        $b84 = (byte) $s83;

        $r4[i118] = $b84;

        goto label26;

     label19:
        $i143 = (int) c115;

        $i9 = $i143 & -14680064;

        if $i9 != 0 goto label21;

        $i58 = i113 + 4;

        $i57 = lengthof $r4;

        if $i58 <= $i57 goto label20;

        i108 = i114;

        goto label28;

     label20:
        i119 = i113 + 1;

        $i144 = (int) c115;

        $i59 = $i144 >> 18;

        $i60 = 240 | $i59;

        $b61 = (byte) $i60;

        $r4[i113] = $b61;

        i120 = i119 + 1;

        $i145 = (int) c115;

        $i62 = $i145 >> 12;

        $i63 = $i62 & 63;

        $i64 = 128 | $i63;

        $b65 = (byte) $i64;

        $r4[i119] = $b65;

        i121 = i120 + 1;

        $i146 = (int) c115;

        $i66 = $i146 >> 6;

        $i67 = $i66 & 63;

        $i68 = 128 | $i67;

        $b69 = (byte) $i68;

        $r4[i120] = $b69;

        i113 = i121 + 1;

        $c70 = c115 & 63;

        $s71 = 128 | $c70;

        $b72 = (byte) $s71;

        $r4[i121] = $b72;

        goto label26;

     label21:
        $i147 = (int) c115;

        $i10 = $i147 & -201326592;

        if $i10 != 0 goto label23;

        $i38 = i113 + 5;

        $i37 = lengthof $r4;

        if $i38 <= $i37 goto label22;

        i108 = i114;

        goto label28;

     label22:
        i122 = i113 + 1;

        $i148 = (int) c115;

        $i39 = $i148 >> 24;

        $i40 = 248 | $i39;

        $b41 = (byte) $i40;

        $r4[i113] = $b41;

        i123 = i122 + 1;

        $i149 = (int) c115;

        $i42 = $i149 >> 18;

        $i43 = $i42 & 63;

        $i44 = 128 | $i43;

        $b45 = (byte) $i44;

        $r4[i122] = $b45;

        i124 = i123 + 1;

        $i150 = (int) c115;

        $i46 = $i150 >> 12;

        $i47 = $i46 & 63;

        $i48 = 128 | $i47;

        $b49 = (byte) $i48;

        $r4[i123] = $b49;

        i125 = i124 + 1;

        $i151 = (int) c115;

        $i50 = $i151 >> 6;

        $i51 = $i50 & 63;

        $i52 = 128 | $i51;

        $b53 = (byte) $i52;

        $r4[i124] = $b53;

        i113 = i125 + 1;

        $c54 = c115 & 63;

        $s55 = 128 | $c54;

        $b56 = (byte) $s55;

        $r4[i125] = $b56;

        goto label26;

     label23:
        $i152 = (int) c115;

        $i11 = $i152 & -2147483648;

        if $i11 != 0 goto label25;

        $i14 = i113 + 6;

        $i13 = lengthof $r4;

        if $i14 <= $i13 goto label24;

        i108 = i114;

        goto label28;

     label24:
        i126 = i113 + 1;

        $i153 = (int) c115;

        $i15 = $i153 >> 30;

        $i16 = 252 | $i15;

        $b17 = (byte) $i16;

        $r4[i113] = $b17;

        i127 = i126 + 1;

        $i154 = (int) c115;

        $i18 = $i154 >> 24;

        $i19 = $i18 & 63;

        $i20 = 128 | $i19;

        $b21 = (byte) $i20;

        $r4[i126] = $b21;

        i128 = i127 + 1;

        $i155 = (int) c115;

        $i22 = $i155 >> 18;

        $i23 = $i22 & 63;

        $i24 = 128 | $i23;

        $b25 = (byte) $i24;

        $r4[i127] = $b25;

        i129 = i128 + 1;

        $i156 = (int) c115;

        $i26 = $i156 >> 12;

        $i27 = $i26 & 63;

        $i28 = 128 | $i27;

        $b29 = (byte) $i28;

        $r4[i128] = $b29;

        i130 = i129 + 1;

        $i157 = (int) c115;

        $i30 = $i157 >> 6;

        $i31 = $i30 & 63;

        $i32 = 128 | $i31;

        $b33 = (byte) $i32;

        $r4[i129] = $b33;

        i113 = i130 + 1;

        $c34 = c115 & 63;

        $s35 = 128 | $c34;

        $b36 = (byte) $s35;

        $r4[i130] = $b36;

        goto label26;

     label25:
        $i12 = i113;

        i113 = i113 + 1;

        $r4[$i12] = 63;

     label26:
        $i131 = lengthof $r4;

        if i113 != $i131 goto label27;

        i108 = i114 + 1;

        goto label28;

     label27:
        i114 = i114 + 1;

        goto label13;

     label28:
        $r13 = r1.<org.mortbay.jetty.AbstractGenerator$Output: org.mortbay.util.ByteArrayOutputStream2 _bytes>;

        virtualinvoke $r13.<org.mortbay.util.ByteArrayOutputStream2: void setCount(int)>(i113);

        goto label30;

     label29:
        $r15 = new java.lang.IllegalStateException;

        specialinvoke $r15.<java.lang.IllegalStateException: void <init>()>();

        throw $r15;

     label30:
        $r14 = r1.<org.mortbay.jetty.AbstractGenerator$Output: org.mortbay.util.ByteArrayOutputStream2 _bytes>;

        virtualinvoke $r14.<org.mortbay.util.ByteArrayOutputStream2: void writeTo(java.io.OutputStream)>(r1);

        i106 = i106 - i108;

        i105 = i105 + i108;

        goto label01;

     label31:
        return;
    }

    private java.io.Writer getConverter() throws java.io.IOException
    {
        org.mortbay.jetty.AbstractGenerator$Output $r1, $r3, $r6, $r7, $r10;
        org.mortbay.util.ByteArrayOutputStream2 $r9;
        org.mortbay.jetty.AbstractGenerator$OutputWriter r0;
        java.io.Writer $r2, $r4;
        java.io.OutputStreamWriter $r5;
        java.lang.String $r8;

        r0 := @this: org.mortbay.jetty.AbstractGenerator$OutputWriter;

        $r1 = r0.<org.mortbay.jetty.AbstractGenerator$OutputWriter: org.mortbay.jetty.AbstractGenerator$Output _out>;

        $r2 = $r1.<org.mortbay.jetty.AbstractGenerator$Output: java.io.Writer _converter>;

        if $r2 != null goto label1;

        $r10 = r0.<org.mortbay.jetty.AbstractGenerator$OutputWriter: org.mortbay.jetty.AbstractGenerator$Output _out>;

        $r5 = new java.io.OutputStreamWriter;

        $r6 = r0.<org.mortbay.jetty.AbstractGenerator$OutputWriter: org.mortbay.jetty.AbstractGenerator$Output _out>;

        $r9 = $r6.<org.mortbay.jetty.AbstractGenerator$Output: org.mortbay.util.ByteArrayOutputStream2 _bytes>;

        $r7 = r0.<org.mortbay.jetty.AbstractGenerator$OutputWriter: org.mortbay.jetty.AbstractGenerator$Output _out>;

        $r8 = $r7.<org.mortbay.jetty.AbstractGenerator$Output: java.lang.String _characterEncoding>;

        specialinvoke $r5.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>($r9, $r8);

        $r10.<org.mortbay.jetty.AbstractGenerator$Output: java.io.Writer _converter> = $r5;

     label1:
        $r3 = r0.<org.mortbay.jetty.AbstractGenerator$OutputWriter: org.mortbay.jetty.AbstractGenerator$Output _out>;

        $r4 = $r3.<org.mortbay.jetty.AbstractGenerator$Output: java.io.Writer _converter>;

        return $r4;
    }

    public static void <clinit>()
    {
        <org.mortbay.jetty.AbstractGenerator$OutputWriter: int WRITE_UTF8> = 2;

        <org.mortbay.jetty.AbstractGenerator$OutputWriter: int WRITE_ISO1> = 1;

        <org.mortbay.jetty.AbstractGenerator$OutputWriter: int WRITE_CONV> = 0;

        return;
    }
}
