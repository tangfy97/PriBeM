public class org.apache.pdfbox.encoding.conversion.CJKConverter extends java.lang.Object implements org.apache.pdfbox.encoding.conversion.EncodingConverter
{
    private java.lang.String encodingName;
    private java.lang.String charsetName;

    public void <init>(java.lang.String)
    {
        org.apache.pdfbox.encoding.conversion.CJKConverter r0;
        java.lang.String r1, $r2;

        r0 := @this: org.apache.pdfbox.encoding.conversion.CJKConverter;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.pdfbox.encoding.conversion.CJKConverter: java.lang.String encodingName> = null;

        r0.<org.apache.pdfbox.encoding.conversion.CJKConverter: java.lang.String charsetName> = null;

        r0.<org.apache.pdfbox.encoding.conversion.CJKConverter: java.lang.String encodingName> = r1;

        $r2 = staticinvoke <org.apache.pdfbox.encoding.conversion.CJKEncodings: java.lang.String getCharset(java.lang.String)>(r1);

        r0.<org.apache.pdfbox.encoding.conversion.CJKConverter: java.lang.String charsetName> = $r2;

        return;
    }

    public java.lang.String convertString(java.lang.String)
    {
        byte[] $r4;
        int $i0;
        org.apache.pdfbox.encoding.conversion.CJKConverter r1;
        java.lang.String r0, $r2, $r3, $r5;
        java.io.UnsupportedEncodingException $r6;
        boolean $z0;

        r1 := @this: org.apache.pdfbox.encoding.conversion.CJKConverter;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 1 goto label1;

        return r0;

     label1:
        $r2 = r1.<org.apache.pdfbox.encoding.conversion.CJKConverter: java.lang.String charsetName>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("UTF-16BE");

        if $z0 == 0 goto label2;

        return r0;

     label2:
        $r3 = new java.lang.String;

        $r4 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-16BE");

        $r5 = r1.<org.apache.pdfbox.encoding.conversion.CJKConverter: java.lang.String charsetName>;

        specialinvoke $r3.<java.lang.String: void <init>(byte[],java.lang.String)>($r4, $r5);

     label3:
        return $r3;

     label4:
        $r6 := @caughtexception;

        return r0;

        catch java.io.UnsupportedEncodingException from label2 to label3 with label4;
    }

    public java.lang.String convertBytes(byte[], int, int, org.apache.fontbox.cmap.CMap)
    {
        byte[] r1;
        org.apache.fontbox.cmap.CMap r0;
        int i0, i1;
        org.apache.pdfbox.encoding.conversion.CJKConverter r3;
        java.lang.String $r2, $r4, $r6;
        java.io.UnsupportedEncodingException $r5;
        boolean $z0;

        r3 := @this: org.apache.pdfbox.encoding.conversion.CJKConverter;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r0 := @parameter3: org.apache.fontbox.cmap.CMap;

        if r0 == null goto label5;

     label1:
        $z0 = virtualinvoke r0.<org.apache.fontbox.cmap.CMap: boolean isInCodeSpaceRanges(byte[],int,int)>(r1, i0, i1);

        if $z0 == 0 goto label3;

        $r2 = new java.lang.String;

        $r4 = r3.<org.apache.pdfbox.encoding.conversion.CJKConverter: java.lang.String charsetName>;

        specialinvoke $r2.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r1, i0, i1, $r4);

     label2:
        return $r2;

     label3:
        return null;

     label4:
        $r5 := @caughtexception;

        $r6 = new java.lang.String;

        specialinvoke $r6.<java.lang.String: void <init>(byte[],int,int)>(r1, i0, i1);

        return $r6;

     label5:
        return null;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label4;
    }
}
