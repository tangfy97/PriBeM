public class thredds.cataloggen.CatGenAndWrite extends java.lang.Object
{
    private static org.slf4j.Logger log;
    private thredds.cataloggen.CatalogBuilder catBuilder;
    private thredds.crawlabledataset.CrawlableDataset collectionCrDs;
    private thredds.crawlabledataset.CrawlableDataset topCatCrDs;
    private java.io.File topCatWriteDir;
    private thredds.crawlabledataset.CrawlableDatasetFilter collectionOnlyFilter;
    private thredds.catalog.InvCatalogFactory factory;

    public void <init>(java.lang.String, java.lang.String, java.lang.String, thredds.catalog.InvService, thredds.crawlabledataset.CrawlableDataset, thredds.crawlabledataset.CrawlableDataset, thredds.crawlabledataset.CrawlableDatasetFilter, thredds.catalog.InvDatasetImpl, java.io.File)
    {
        thredds.catalog.InvCatalogFactory $r16;
        boolean $z0, $z1;
        thredds.crawlabledataset.CrawlableDataset r1, r3;
        java.lang.StringBuilder $r17, $r19, $r21, $r24, $r25, $r27;
        thredds.cataloggen.StandardCatalogBuilder $r8;
        thredds.crawlabledataset.CrawlableDatasetFilter r11;
        thredds.cataloggen.CatGenAndWrite$CollectionOnlyCrDsFilter $r15;
        int $i0;
        java.lang.String $r2, $r4, $r5, r9, r10, r13, $r20, $r22, $r26, $r28;
        org.slf4j.Logger $r18;
        thredds.catalog.InvService r12;
        thredds.cataloggen.CatGenAndWrite r0;
        java.lang.IllegalArgumentException $r23;
        java.io.File $r6, r7;
        thredds.catalog.InvDatasetImpl r14;

        r0 := @this: thredds.cataloggen.CatGenAndWrite;

        r13 := @parameter0: java.lang.String;

        r10 := @parameter1: java.lang.String;

        r9 := @parameter2: java.lang.String;

        r12 := @parameter3: thredds.catalog.InvService;

        r3 := @parameter4: thredds.crawlabledataset.CrawlableDataset;

        r1 := @parameter5: thredds.crawlabledataset.CrawlableDataset;

        r11 := @parameter6: thredds.crawlabledataset.CrawlableDatasetFilter;

        r14 := @parameter7: thredds.catalog.InvDatasetImpl;

        r7 := @parameter8: java.io.File;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = interfaceinvoke r1.<thredds.crawlabledataset.CrawlableDataset: java.lang.String getPath()>();

        $r4 = interfaceinvoke r3.<thredds.crawlabledataset.CrawlableDataset: java.lang.String getPath()>();

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        $r5 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>($i0);

        $r6 = new java.io.File;

        specialinvoke $r6.<java.io.File: void <init>(java.io.File,java.lang.String)>(r7, $r5);

        $z0 = virtualinvoke $r6.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke $r6.<java.io.File: boolean mkdirs()>();

        if $z1 != 0 goto label1;

        $r18 = <thredds.cataloggen.CatGenAndWrite: org.slf4j.Logger log>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CatGenAndWrite(): could not create directory(s) for ");

        $r20 = virtualinvoke $r6.<java.io.File: java.lang.String getPath()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r18.<org.slf4j.Logger: void error(java.lang.String)>($r22);

        $r23 = new java.lang.IllegalArgumentException;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not create directory(s) for ");

        $r26 = virtualinvoke $r6.<java.io.File: java.lang.String getPath()>();

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r28);

        throw $r23;

     label1:
        r0.<thredds.cataloggen.CatGenAndWrite: java.io.File topCatWriteDir> = $r6;

        $r8 = new thredds.cataloggen.StandardCatalogBuilder;

        specialinvoke $r8.<thredds.cataloggen.StandardCatalogBuilder: void <init>(java.lang.String,java.lang.String,thredds.crawlabledataset.CrawlableDataset,thredds.crawlabledataset.CrawlableDatasetFilter,thredds.catalog.InvService,java.lang.String,thredds.crawlabledataset.CrawlableDatasetLabeler,thredds.crawlabledataset.CrawlableDatasetLabeler,boolean,thredds.crawlabledataset.CrawlableDatasetSorter,java.util.Map,java.util.List,thredds.catalog.InvDatasetImpl,thredds.cataloggen.CatalogRefExpander)>(r9, r10, r3, r11, r12, r13, null, null, 1, null, null, null, r14, null);

        r0.<thredds.cataloggen.CatGenAndWrite: thredds.cataloggen.CatalogBuilder catBuilder> = $r8;

        r0.<thredds.cataloggen.CatGenAndWrite: thredds.crawlabledataset.CrawlableDataset collectionCrDs> = r3;

        r0.<thredds.cataloggen.CatGenAndWrite: thredds.crawlabledataset.CrawlableDataset topCatCrDs> = r1;

        $r15 = new thredds.cataloggen.CatGenAndWrite$CollectionOnlyCrDsFilter;

        specialinvoke $r15.<thredds.cataloggen.CatGenAndWrite$CollectionOnlyCrDsFilter: void <init>(thredds.crawlabledataset.CrawlableDatasetFilter)>(r11);

        r0.<thredds.cataloggen.CatGenAndWrite: thredds.crawlabledataset.CrawlableDatasetFilter collectionOnlyFilter> = $r15;

        $r16 = staticinvoke <thredds.catalog.InvCatalogFactory: thredds.catalog.InvCatalogFactory getDefaultFactory(boolean)>(0);

        r0.<thredds.cataloggen.CatGenAndWrite: thredds.catalog.InvCatalogFactory factory> = $r16;

        return;
    }

    public static void main1(java.lang.String[])
    {
        java.lang.String[] r0;
        int $i0;
        java.lang.String $r6, $r9, $r16, $r19, $r21, r22, r23, r24;
        org.slf4j.Logger $r14;
        thredds.catalog.InvService $r4;
        thredds.crawlabledataset.CrawlableDatasetFile $r3;
        thredds.cataloggen.CatGenAndWrite $r11;
        thredds.crawlabledataset.CrawlableDataset $r10;
        java.io.IOException $r12;
        java.io.File $r1, $r2;
        java.lang.StringBuilder $r5, $r7, $r8, $r13, $r15, $r17, $r18, $r20;

        r0 := @parameter0: java.lang.String[];

        r22 = "C:/Ethan/data/mlode";

        r23 = "grid/NCEP";

        r24 = "C:/Ethan/data/tmpTest";

        $i0 = lengthof r0;

        if $i0 != 3 goto label1;

        r22 = r0[0];

        r23 = r0[1];

        r24 = r0[2];

     label1:
        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>(r24);

        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>(r22);

        $r3 = new thredds.crawlabledataset.CrawlableDatasetFile;

        specialinvoke $r3.<thredds.crawlabledataset.CrawlableDatasetFile: void <init>(java.io.File)>($r2);

        $r4 = new thredds.catalog.InvService;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = interfaceinvoke $r3.<thredds.crawlabledataset.CrawlableDataset: java.lang.String getPath()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<thredds.catalog.InvService: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("myServer", "File", $r9, null, null);

        $r10 = interfaceinvoke $r3.<thredds.crawlabledataset.CrawlableDataset: thredds.crawlabledataset.CrawlableDataset getDescendant(java.lang.String)>(r23);

        $r11 = new thredds.cataloggen.CatGenAndWrite;

        specialinvoke $r11.<thredds.cataloggen.CatGenAndWrite: void <init>(java.lang.String,java.lang.String,java.lang.String,thredds.catalog.InvService,thredds.crawlabledataset.CrawlableDataset,thredds.crawlabledataset.CrawlableDataset,thredds.crawlabledataset.CrawlableDatasetFilter,thredds.catalog.InvDatasetImpl,java.io.File)>("DATA", "My data", "", $r4, $r3, $r10, null, null, $r1);

     label2:
        specialinvoke $r11.<thredds.cataloggen.CatGenAndWrite: void genCatAndSubCats(thredds.crawlabledataset.CrawlableDataset)>($r10);

     label3:
        goto label5;

     label4:
        $r12 := @caughtexception;

        $r14 = <thredds.cataloggen.CatGenAndWrite: org.slf4j.Logger log>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("I/O error generating and writing catalogs at and under \"");

        $r16 = interfaceinvoke $r10.<thredds.crawlabledataset.CrawlableDataset: java.lang.String getPath()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\": ");

        $r19 = virtualinvoke $r12.<java.io.IOException: java.lang.String getMessage()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r14.<org.slf4j.Logger: void error(java.lang.String)>($r21);

        return;

     label5:
        return;

        catch java.io.IOException from label2 to label3 with label4;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] r0;
        int $i0;
        java.lang.String $r11, $r14, $r16, r17, r18, r19;
        org.slf4j.Logger $r9;
        thredds.catalog.InvService $r4;
        thredds.crawlabledataset.CrawlableDatasetFile $r3;
        thredds.cataloggen.CatGenAndWrite $r6;
        thredds.crawlabledataset.CrawlableDataset $r5;
        java.io.IOException $r7;
        java.io.File $r1, $r2;
        java.lang.StringBuilder $r8, $r10, $r12, $r13, $r15;

        r0 := @parameter0: java.lang.String[];

        r17 = "C:/Ethan/data/mlode";

        r18 = "grid/NCEP";

        r19 = "C:/Ethan/code/svnThredds/tds/content/thredds/catGenAndWrite";

        $i0 = lengthof r0;

        if $i0 != 3 goto label1;

        r17 = r0[0];

        r18 = r0[1];

        r19 = r0[2];

     label1:
        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>(r19);

        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>(r17);

        $r3 = new thredds.crawlabledataset.CrawlableDatasetFile;

        specialinvoke $r3.<thredds.crawlabledataset.CrawlableDatasetFile: void <init>(java.io.File)>($r2);

        $r4 = new thredds.catalog.InvService;

        specialinvoke $r4.<thredds.catalog.InvService: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("myServer", "OPENDAP", "/thredds/dodsC/", null, null);

        $r5 = interfaceinvoke $r3.<thredds.crawlabledataset.CrawlableDataset: thredds.crawlabledataset.CrawlableDataset getDescendant(java.lang.String)>(r18);

        $r6 = new thredds.cataloggen.CatGenAndWrite;

        specialinvoke $r6.<thredds.cataloggen.CatGenAndWrite: void <init>(java.lang.String,java.lang.String,java.lang.String,thredds.catalog.InvService,thredds.crawlabledataset.CrawlableDataset,thredds.crawlabledataset.CrawlableDataset,thredds.crawlabledataset.CrawlableDatasetFilter,thredds.catalog.InvDatasetImpl,java.io.File)>("DATA", "My data", "mlode", $r4, $r3, $r5, null, null, $r1);

     label2:
        specialinvoke $r6.<thredds.cataloggen.CatGenAndWrite: void genCatAndSubCats(thredds.crawlabledataset.CrawlableDataset)>($r5);

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

        $r9 = <thredds.cataloggen.CatGenAndWrite: org.slf4j.Logger log>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("I/O error generating and writing catalogs at and under \"");

        $r11 = interfaceinvoke $r5.<thredds.crawlabledataset.CrawlableDataset: java.lang.String getPath()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\": ");

        $r14 = virtualinvoke $r7.<java.io.IOException: java.lang.String getMessage()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r9.<org.slf4j.Logger: void error(java.lang.String)>($r16);

        return;

     label5:
        return;

        catch java.io.IOException from label2 to label3 with label4;
    }

    public void genAndWriteCatalogTree() throws java.io.IOException
    {
        thredds.crawlabledataset.CrawlableDataset $r1;
        thredds.cataloggen.CatGenAndWrite r0;

        r0 := @this: thredds.cataloggen.CatGenAndWrite;

        $r1 = r0.<thredds.cataloggen.CatGenAndWrite: thredds.crawlabledataset.CrawlableDataset topCatCrDs>;

        specialinvoke r0.<thredds.cataloggen.CatGenAndWrite: void genCatAndSubCats(thredds.crawlabledataset.CrawlableDataset)>($r1);

        return;
    }

    private void genCatAndSubCats(thredds.crawlabledataset.CrawlableDataset) throws java.io.IOException
    {
        thredds.catalog.InvCatalogFactory $r11;
        boolean $z0, $z1, $z2;
        thredds.cataloggen.CatalogBuilder $r9;
        thredds.crawlabledataset.CrawlableDataset r0, $r3, r17;
        java.util.List $r14;
        thredds.catalog.InvCatalogImpl $r10;
        java.lang.StringBuilder $r18, $r20, $r22, $r25, $r26, $r28;
        thredds.crawlabledataset.CrawlableDatasetFilter $r13;
        int $i0;
        java.lang.String $r1, $r4, $r5, $r12, $r21, $r23, $r27, $r29;
        org.slf4j.Logger $r19;
        java.util.Iterator $r15;
        thredds.cataloggen.CatGenAndWrite r2;
        java.io.IOException $r24;
        java.io.File $r6, $r7, $r8;
        java.lang.Object $r16;

        r2 := @this: thredds.cataloggen.CatGenAndWrite;

        r0 := @parameter0: thredds.crawlabledataset.CrawlableDataset;

        $r1 = interfaceinvoke r0.<thredds.crawlabledataset.CrawlableDataset: java.lang.String getPath()>();

        $r3 = r2.<thredds.cataloggen.CatGenAndWrite: thredds.crawlabledataset.CrawlableDataset topCatCrDs>;

        $r4 = interfaceinvoke $r3.<thredds.crawlabledataset.CrawlableDataset: java.lang.String getPath()>();

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        $r5 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i0);

        $r6 = new java.io.File;

        $r7 = r2.<thredds.cataloggen.CatGenAndWrite: java.io.File topCatWriteDir>;

        specialinvoke $r6.<java.io.File: void <init>(java.io.File,java.lang.String)>($r7, $r5);

        $z0 = virtualinvoke $r6.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke $r6.<java.io.File: boolean mkdirs()>();

        if $z1 != 0 goto label1;

        $r19 = <thredds.cataloggen.CatGenAndWrite: org.slf4j.Logger log>;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("genCatAndSubCats(): could not create directory(s) for ");

        $r21 = virtualinvoke $r6.<java.io.File: java.lang.String getPath()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r19.<org.slf4j.Logger: void error(java.lang.String)>($r23);

        $r24 = new java.io.IOException;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not create directory(s) for ");

        $r27 = virtualinvoke $r6.<java.io.File: java.lang.String getPath()>();

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<java.io.IOException: void <init>(java.lang.String)>($r29);

        throw $r24;

     label1:
        $r8 = new java.io.File;

        specialinvoke $r8.<java.io.File: void <init>(java.io.File,java.lang.String)>($r6, "catalog.xml");

        $r9 = r2.<thredds.cataloggen.CatGenAndWrite: thredds.cataloggen.CatalogBuilder catBuilder>;

        $r10 = interfaceinvoke $r9.<thredds.cataloggen.CatalogBuilder: thredds.catalog.InvCatalogImpl generateCatalog(thredds.crawlabledataset.CrawlableDataset)>(r0);

        $r11 = r2.<thredds.cataloggen.CatGenAndWrite: thredds.catalog.InvCatalogFactory factory>;

        $r12 = virtualinvoke $r8.<java.io.File: java.lang.String getAbsolutePath()>();

        virtualinvoke $r11.<thredds.catalog.InvCatalogFactory: void writeXML(thredds.catalog.InvCatalogImpl,java.lang.String)>($r10, $r12);

        $r13 = r2.<thredds.cataloggen.CatGenAndWrite: thredds.crawlabledataset.CrawlableDatasetFilter collectionOnlyFilter>;

        $r14 = interfaceinvoke r0.<thredds.crawlabledataset.CrawlableDataset: java.util.List listDatasets(thredds.crawlabledataset.CrawlableDatasetFilter)>($r13);

        $r15 = interfaceinvoke $r14.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r16 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        r17 = (thredds.crawlabledataset.CrawlableDataset) $r16;

        specialinvoke r2.<thredds.cataloggen.CatGenAndWrite: void genCatAndSubCats(thredds.crawlabledataset.CrawlableDataset)>(r17);

        goto label2;

     label3:
        return;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lthredds/cataloggen/CatGenAndWrite;");

        <thredds.cataloggen.CatGenAndWrite: org.slf4j.Logger log> = $r0;

        return;
    }
}
