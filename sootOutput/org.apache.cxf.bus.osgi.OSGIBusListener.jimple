public class org.apache.cxf.bus.osgi.OSGIBusListener extends java.lang.Object implements org.apache.cxf.buslifecycle.BusLifeCycleListener
{
    public static final java.lang.String CONTEXT_SYMBOLIC_NAME_PROPERTY;
    public static final java.lang.String CONTEXT_VERSION_PROPERTY;
    public static final java.lang.String CONTEXT_NAME_PROPERTY;
    private static final java.lang.String SERVICE_PROPERTY_PRIVATE;
    private static final java.lang.String SERVICE_PROPERTY_RESTRICTED;
    private static final java.lang.String BUS_EXTENSION_BUNDLES_EXCLUDES;
    org.apache.cxf.Bus bus;
    org.osgi.framework.ServiceRegistration service;
    org.osgi.framework.BundleContext defaultContext;
    private java.util.regex.Pattern extensionBundlesExcludesPattern;

    public void <init>(org.apache.cxf.Bus)
    {
        org.apache.cxf.Bus r1;
        org.apache.cxf.bus.osgi.OSGIBusListener r0;

        r0 := @this: org.apache.cxf.bus.osgi.OSGIBusListener;

        r1 := @parameter0: org.apache.cxf.Bus;

        specialinvoke r0.<org.apache.cxf.bus.osgi.OSGIBusListener: void <init>(org.apache.cxf.Bus,java.lang.Object[])>(r1, null);

        return;
    }

    public void <init>(org.apache.cxf.Bus, java.lang.Object[])
    {
        org.apache.cxf.Bus r1, $r8, $r11;
        java.lang.Object[] r2;
        org.apache.cxf.bus.osgi.OSGIBusListener r0;
        int $i0;
        java.lang.String $r10;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r7;
        org.osgi.framework.BundleContext $r6;
        org.apache.cxf.buslifecycle.BusLifeCycleManager $r13;
        java.lang.Object $r4, $r5, $r9, $r12;
        java.util.regex.Pattern $r3;

        r0 := @this: org.apache.cxf.bus.osgi.OSGIBusListener;

        r1 := @parameter0: org.apache.cxf.Bus;

        r2 := @parameter1: java.lang.Object[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.cxf.bus.osgi.OSGIBusListener: org.apache.cxf.Bus bus> = r1;

        if r2 == null goto label1;

        $i0 = lengthof r2;

        if $i0 <= 0 goto label1;

        $r4 = r2[0];

        $z0 = $r4 instanceof org.osgi.framework.BundleContext;

        if $z0 == 0 goto label1;

        $r5 = r2[0];

        $r6 = (org.osgi.framework.BundleContext) $r5;

        r0.<org.apache.cxf.bus.osgi.OSGIBusListener: org.osgi.framework.BundleContext defaultContext> = $r6;

     label1:
        $r8 = r0.<org.apache.cxf.bus.osgi.OSGIBusListener: org.apache.cxf.Bus bus>;

        $r9 = interfaceinvoke $r8.<org.apache.cxf.Bus: java.lang.Object getProperty(java.lang.String)>("bus.extension.bundles.excludes");

        $r10 = (java.lang.String) $r9;

        $z1 = staticinvoke <org.apache.cxf.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r10);

        if $z1 != 0 goto label5;

     label2:
        $r3 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r10);

        r0.<org.apache.cxf.bus.osgi.OSGIBusListener: java.util.regex.Pattern extensionBundlesExcludesPattern> = $r3;

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

     label5:
        $r11 = r0.<org.apache.cxf.bus.osgi.OSGIBusListener: org.apache.cxf.Bus bus>;

        $r12 = interfaceinvoke $r11.<org.apache.cxf.Bus: java.lang.Object getExtension(java.lang.Class)>(class "Lorg/apache/cxf/buslifecycle/BusLifeCycleManager;");

        $r13 = (org.apache.cxf.buslifecycle.BusLifeCycleManager) $r12;

        interfaceinvoke $r13.<org.apache.cxf.buslifecycle.BusLifeCycleManager: void registerLifeCycleListener(org.apache.cxf.buslifecycle.BusLifeCycleListener)>(r0);

        specialinvoke r0.<org.apache.cxf.bus.osgi.OSGIBusListener: void registerConfiguredBeanLocator()>();

        specialinvoke r0.<org.apache.cxf.bus.osgi.OSGIBusListener: void registerClientLifeCycleListeners()>();

        specialinvoke r0.<org.apache.cxf.bus.osgi.OSGIBusListener: void registerServerLifecycleListeners()>();

        specialinvoke r0.<org.apache.cxf.bus.osgi.OSGIBusListener: void registerBusFeatures()>();

        specialinvoke r0.<org.apache.cxf.bus.osgi.OSGIBusListener: void sendBusCreatedToBusCreationListeners()>();

        return;

        catch java.lang.IllegalArgumentException from label2 to label3 with label4;
    }

    private void registerConfiguredBeanLocator()
    {
        org.apache.cxf.Bus $r1, $r6;
        org.apache.cxf.bus.osgi.OSGiBeanLocator $r4;
        org.apache.cxf.bus.osgi.OSGIBusListener r0;
        org.apache.cxf.configuration.ConfiguredBeanLocator r3;
        org.osgi.framework.BundleContext $r5;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @this: org.apache.cxf.bus.osgi.OSGIBusListener;

        $r1 = r0.<org.apache.cxf.bus.osgi.OSGIBusListener: org.apache.cxf.Bus bus>;

        $r2 = interfaceinvoke $r1.<org.apache.cxf.Bus: java.lang.Object getExtension(java.lang.Class)>(class "Lorg/apache/cxf/configuration/ConfiguredBeanLocator;");

        r3 = (org.apache.cxf.configuration.ConfiguredBeanLocator) $r2;

        $z0 = r3 instanceof org.apache.cxf.bus.extension.ExtensionManagerImpl;

        if $z0 == 0 goto label1;

        $r6 = r0.<org.apache.cxf.bus.osgi.OSGIBusListener: org.apache.cxf.Bus bus>;

        $r4 = new org.apache.cxf.bus.osgi.OSGiBeanLocator;

        $r5 = r0.<org.apache.cxf.bus.osgi.OSGIBusListener: org.osgi.framework.BundleContext defaultContext>;

        specialinvoke $r4.<org.apache.cxf.bus.osgi.OSGiBeanLocator: void <init>(org.apache.cxf.configuration.ConfiguredBeanLocator,org.osgi.framework.BundleContext)>(r3, $r5);

        interfaceinvoke $r6.<org.apache.cxf.Bus: void setExtension(java.lang.Object,java.lang.Class)>($r4, class "Lorg/apache/cxf/configuration/ConfiguredBeanLocator;");

     label1:
        return;
    }

    public void initComplete()
    {
        org.apache.cxf.Bus $r1, $r4;
        org.apache.cxf.bus.osgi.ManagedWorkQueueList r6;
        org.apache.cxf.bus.osgi.OSGIBusListener r0;
        java.lang.Object $r2, $r5;
        org.apache.cxf.workqueue.WorkQueueManager r3;

        r0 := @this: org.apache.cxf.bus.osgi.OSGIBusListener;

        $r1 = r0.<org.apache.cxf.bus.osgi.OSGIBusListener: org.apache.cxf.Bus bus>;

        $r2 = interfaceinvoke $r1.<org.apache.cxf.Bus: java.lang.Object getExtension(java.lang.Class)>(class "Lorg/apache/cxf/workqueue/WorkQueueManager;");

        r3 = (org.apache.cxf.workqueue.WorkQueueManager) $r2;

        $r4 = r0.<org.apache.cxf.bus.osgi.OSGIBusListener: org.apache.cxf.Bus bus>;

        $r5 = interfaceinvoke $r4.<org.apache.cxf.Bus: java.lang.Object getExtension(java.lang.Class)>(class "Lorg/apache/cxf/bus/osgi/ManagedWorkQueueList;");

        r6 = (org.apache.cxf.bus.osgi.ManagedWorkQueueList) $r5;

        if r6 == null goto label1;

        virtualinvoke r6.<org.apache.cxf.bus.osgi.ManagedWorkQueueList: void addAllToWorkQueueManager(org.apache.cxf.workqueue.WorkQueueManager)>(r3);

     label1:
        specialinvoke r0.<org.apache.cxf.bus.osgi.OSGIBusListener: void registerBusAsService()>();

        return;
    }

    public void preShutdown()
    {
        org.apache.cxf.bus.osgi.OSGIBusListener r0;

        r0 := @this: org.apache.cxf.bus.osgi.OSGIBusListener;

        return;
    }

    public void postShutdown()
    {
        org.apache.cxf.bus.osgi.OSGIBusListener r0;
        org.osgi.framework.ServiceRegistration $r1, $r2;

        r0 := @this: org.apache.cxf.bus.osgi.OSGIBusListener;

        $r1 = r0.<org.apache.cxf.bus.osgi.OSGIBusListener: org.osgi.framework.ServiceRegistration service>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.cxf.bus.osgi.OSGIBusListener: org.osgi.framework.ServiceRegistration service>;

        interfaceinvoke $r2.<org.osgi.framework.ServiceRegistration: void unregister()>();

        r0.<org.apache.cxf.bus.osgi.OSGIBusListener: org.osgi.framework.ServiceRegistration service> = null;

     label1:
        return;
    }

    private static org.osgi.framework.ServiceReference[] getServiceReferences(org.osgi.framework.BundleContext, java.lang.Class)
    {
        java.lang.Throwable $r3;
        java.lang.Class r1;
        java.lang.String $r2;
        org.osgi.framework.ServiceReference[] r4;
        org.osgi.framework.BundleContext r0;

        r0 := @parameter0: org.osgi.framework.BundleContext;

        r1 := @parameter1: java.lang.Class;

        r4 = null;

     label1:
        $r2 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        r4 = interfaceinvoke r0.<org.osgi.framework.BundleContext: org.osgi.framework.ServiceReference[] getServiceReferences(java.lang.String,java.lang.String)>($r2, null);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        if r4 != null goto label5;

        r4 = newarray (org.osgi.framework.ServiceReference)[0];

     label5:
        return r4;

        catch org.osgi.framework.InvalidSyntaxException from label1 to label2 with label3;
    }

    private void sendBusCreatedToBusCreationListeners()
    {
        org.apache.cxf.Bus $r7;
        org.apache.cxf.bus.osgi.OSGIBusListener r0;
        org.osgi.framework.ServiceReference[] $r2;
        org.osgi.framework.BundleContext $r1, $r4;
        int i0, i1;
        java.lang.Object $r5;
        org.osgi.framework.ServiceReference r3;
        org.apache.cxf.buslifecycle.BusCreationListener r6;
        boolean $z0, $z1;

        r0 := @this: org.apache.cxf.bus.osgi.OSGIBusListener;

        $r1 = r0.<org.apache.cxf.bus.osgi.OSGIBusListener: org.osgi.framework.BundleContext defaultContext>;

        $r2 = staticinvoke <org.apache.cxf.bus.osgi.OSGIBusListener: org.osgi.framework.ServiceReference[] getServiceReferences(org.osgi.framework.BundleContext,java.lang.Class)>($r1, class "Lorg/apache/cxf/buslifecycle/BusCreationListener;");

        i0 = lengthof $r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r3 = $r2[i1];

        $z0 = specialinvoke r0.<org.apache.cxf.bus.osgi.OSGIBusListener: boolean isPrivate(org.osgi.framework.ServiceReference)>(r3);

        if $z0 != 0 goto label2;

        $z1 = specialinvoke r0.<org.apache.cxf.bus.osgi.OSGIBusListener: boolean isExcluded(org.osgi.framework.ServiceReference)>(r3);

        if $z1 != 0 goto label2;

        $r4 = r0.<org.apache.cxf.bus.osgi.OSGIBusListener: org.osgi.framework.BundleContext defaultContext>;

        $r5 = interfaceinvoke $r4.<org.osgi.framework.BundleContext: java.lang.Object getService(org.osgi.framework.ServiceReference)>(r3);

        r6 = (org.apache.cxf.buslifecycle.BusCreationListener) $r5;

        $r7 = r0.<org.apache.cxf.bus.osgi.OSGIBusListener: org.apache.cxf.Bus bus>;

        interfaceinvoke r6.<org.apache.cxf.buslifecycle.BusCreationListener: void busCreated(org.apache.cxf.Bus)>($r7);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    private void registerServerLifecycleListeners()
    {
        org.apache.cxf.Bus $r3;
        org.apache.cxf.bus.osgi.OSGIBusListener r0;
        org.osgi.framework.ServiceReference[] $r2;
        org.osgi.framework.BundleContext $r1, $r7;
        org.apache.cxf.endpoint.ServerLifeCycleListener r9;
        int i0, i1;
        java.lang.Object $r4, $r8;
        org.apache.cxf.endpoint.ServerLifeCycleManager r5;
        org.osgi.framework.ServiceReference r6;
        boolean $z0, $z1;

        r0 := @this: org.apache.cxf.bus.osgi.OSGIBusListener;

        $r1 = r0.<org.apache.cxf.bus.osgi.OSGIBusListener: org.osgi.framework.BundleContext defaultContext>;

        $r2 = staticinvoke <org.apache.cxf.bus.osgi.OSGIBusListener: org.osgi.framework.ServiceReference[] getServiceReferences(org.osgi.framework.BundleContext,java.lang.Class)>($r1, class "Lorg/apache/cxf/endpoint/ServerLifeCycleListener;");

        $r3 = r0.<org.apache.cxf.bus.osgi.OSGIBusListener: org.apache.cxf.Bus bus>;

        $r4 = interfaceinvoke $r3.<org.apache.cxf.Bus: java.lang.Object getExtension(java.lang.Class)>(class "Lorg/apache/cxf/endpoint/ServerLifeCycleManager;");

        r5 = (org.apache.cxf.endpoint.ServerLifeCycleManager) $r4;

        i0 = lengthof $r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r6 = $r2[i1];

        $z0 = specialinvoke r0.<org.apache.cxf.bus.osgi.OSGIBusListener: boolean isPrivate(org.osgi.framework.ServiceReference)>(r6);

        if $z0 != 0 goto label2;

        $z1 = specialinvoke r0.<org.apache.cxf.bus.osgi.OSGIBusListener: boolean isExcluded(org.osgi.framework.ServiceReference)>(r6);

        if $z1 != 0 goto label2;

        $r7 = r0.<org.apache.cxf.bus.osgi.OSGIBusListener: org.osgi.framework.BundleContext defaultContext>;

        $r8 = interfaceinvoke $r7.<org.osgi.framework.BundleContext: java.lang.Object getService(org.osgi.framework.ServiceReference)>(r6);

        r9 = (org.apache.cxf.endpoint.ServerLifeCycleListener) $r8;

        interfaceinvoke r5.<org.apache.cxf.endpoint.ServerLifeCycleManager: void registerListener(org.apache.cxf.endpoint.ServerLifeCycleListener)>(r9);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    private void registerClientLifeCycleListeners()
    {
        org.apache.cxf.Bus $r3;
        org.apache.cxf.bus.osgi.OSGIBusListener r0;
        org.apache.cxf.endpoint.ClientLifeCycleManager r5;
        org.osgi.framework.ServiceReference[] $r2;
        org.osgi.framework.BundleContext $r1, $r7;
        int i0, i1;
        org.apache.cxf.endpoint.ClientLifeCycleListener r9;
        java.lang.Object $r4, $r8;
        org.osgi.framework.ServiceReference r6;
        boolean $z0, $z1;

        r0 := @this: org.apache.cxf.bus.osgi.OSGIBusListener;

        $r1 = r0.<org.apache.cxf.bus.osgi.OSGIBusListener: org.osgi.framework.BundleContext defaultContext>;

        $r2 = staticinvoke <org.apache.cxf.bus.osgi.OSGIBusListener: org.osgi.framework.ServiceReference[] getServiceReferences(org.osgi.framework.BundleContext,java.lang.Class)>($r1, class "Lorg/apache/cxf/endpoint/ClientLifeCycleListener;");

        $r3 = r0.<org.apache.cxf.bus.osgi.OSGIBusListener: org.apache.cxf.Bus bus>;

        $r4 = interfaceinvoke $r3.<org.apache.cxf.Bus: java.lang.Object getExtension(java.lang.Class)>(class "Lorg/apache/cxf/endpoint/ClientLifeCycleManager;");

        r5 = (org.apache.cxf.endpoint.ClientLifeCycleManager) $r4;

        i0 = lengthof $r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r6 = $r2[i1];

        $z0 = specialinvoke r0.<org.apache.cxf.bus.osgi.OSGIBusListener: boolean isPrivate(org.osgi.framework.ServiceReference)>(r6);

        if $z0 != 0 goto label2;

        $z1 = specialinvoke r0.<org.apache.cxf.bus.osgi.OSGIBusListener: boolean isExcluded(org.osgi.framework.ServiceReference)>(r6);

        if $z1 != 0 goto label2;

        $r7 = r0.<org.apache.cxf.bus.osgi.OSGIBusListener: org.osgi.framework.BundleContext defaultContext>;

        $r8 = interfaceinvoke $r7.<org.osgi.framework.BundleContext: java.lang.Object getService(org.osgi.framework.ServiceReference)>(r6);

        r9 = (org.apache.cxf.endpoint.ClientLifeCycleListener) $r8;

        interfaceinvoke r5.<org.apache.cxf.endpoint.ClientLifeCycleManager: void registerListener(org.apache.cxf.endpoint.ClientLifeCycleListener)>(r9);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    private void registerBusFeatures()
    {
        org.apache.cxf.Bus $r7;
        org.apache.cxf.bus.osgi.OSGIBusListener r0;
        java.util.Collection $r8;
        org.osgi.framework.ServiceReference[] $r2;
        org.osgi.framework.BundleContext $r1, $r4;
        org.apache.cxf.feature.Feature r6;
        int i0, i1;
        java.lang.Object $r5;
        org.osgi.framework.ServiceReference r3;
        boolean $z0, $z1;

        r0 := @this: org.apache.cxf.bus.osgi.OSGIBusListener;

        $r1 = r0.<org.apache.cxf.bus.osgi.OSGIBusListener: org.osgi.framework.BundleContext defaultContext>;

        $r2 = staticinvoke <org.apache.cxf.bus.osgi.OSGIBusListener: org.osgi.framework.ServiceReference[] getServiceReferences(org.osgi.framework.BundleContext,java.lang.Class)>($r1, class "Lorg/apache/cxf/feature/Feature;");

        i0 = lengthof $r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r3 = $r2[i1];

        $z0 = specialinvoke r0.<org.apache.cxf.bus.osgi.OSGIBusListener: boolean isPrivate(org.osgi.framework.ServiceReference)>(r3);

        if $z0 != 0 goto label2;

        $z1 = specialinvoke r0.<org.apache.cxf.bus.osgi.OSGIBusListener: boolean isExcluded(org.osgi.framework.ServiceReference)>(r3);

        if $z1 != 0 goto label2;

        $r4 = r0.<org.apache.cxf.bus.osgi.OSGIBusListener: org.osgi.framework.BundleContext defaultContext>;

        $r5 = interfaceinvoke $r4.<org.osgi.framework.BundleContext: java.lang.Object getService(org.osgi.framework.ServiceReference)>(r3);

        r6 = (org.apache.cxf.feature.Feature) $r5;

        $r7 = r0.<org.apache.cxf.bus.osgi.OSGIBusListener: org.apache.cxf.Bus bus>;

        $r8 = interfaceinvoke $r7.<org.apache.cxf.Bus: java.util.Collection getFeatures()>();

        interfaceinvoke $r8.<java.util.Collection: boolean add(java.lang.Object)>(r6);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    private boolean isPrivate(org.osgi.framework.ServiceReference)
    {
        org.apache.cxf.bus.osgi.OSGIBusListener r3;
        java.lang.Boolean r4;
        java.lang.Object $r1;
        java.lang.String $r2;
        org.osgi.framework.ServiceReference r0;
        boolean $z0, $z1, $z2, $z3;

        r3 := @this: org.apache.cxf.bus.osgi.OSGIBusListener;

        r0 := @parameter0: org.osgi.framework.ServiceReference;

        $r1 = interfaceinvoke r0.<org.osgi.framework.ServiceReference: java.lang.Object getProperty(java.lang.String)>("org.apache.cxf.bus.private.extension");

        r4 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        if $r1 != null goto label1;

        r4 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        goto label3;

     label1:
        $z0 = $r1 instanceof java.lang.String;

        if $z0 == 0 goto label2;

        $r2 = (java.lang.String) $r1;

        $z2 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r2);

        r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2);

        goto label3;

     label2:
        $z1 = $r1 instanceof java.lang.Boolean;

        if $z1 == 0 goto label3;

        r4 = (java.lang.Boolean) $r1;

     label3:
        $z3 = virtualinvoke r4.<java.lang.Boolean: boolean booleanValue()>();

        return $z3;
    }

    private boolean isExcluded(org.osgi.framework.ServiceReference)
    {
        org.apache.cxf.Bus $r8;
        org.apache.cxf.bus.osgi.OSGIBusListener r3;
        java.util.regex.Matcher $r7;
        java.lang.String r2, $r6, $r12;
        org.osgi.framework.Bundle $r5, $r11;
        org.osgi.framework.ServiceReference r0;
        boolean $z0, $z1, $z2, $z3;
        java.lang.IllegalArgumentException $r13;
        org.osgi.framework.BundleContext r10;
        java.lang.Object $r1, $r9;
        java.util.regex.Pattern $r4, $r14;

        r3 := @this: org.apache.cxf.bus.osgi.OSGIBusListener;

        r0 := @parameter0: org.osgi.framework.ServiceReference;

        $r1 = interfaceinvoke r0.<org.osgi.framework.ServiceReference: java.lang.Object getProperty(java.lang.String)>("org.apache.cxf.bus.restricted.extension");

        r2 = (java.lang.String) $r1;

        $z0 = staticinvoke <org.apache.cxf.common.util.StringUtils: boolean isEmpty(java.lang.String)>(r2);

        if $z0 != 0 goto label5;

        $r8 = r3.<org.apache.cxf.bus.osgi.OSGIBusListener: org.apache.cxf.Bus bus>;

        $r9 = interfaceinvoke $r8.<org.apache.cxf.Bus: java.lang.Object getExtension(java.lang.Class)>(class "Lorg/osgi/framework/BundleContext;");

        r10 = (org.osgi.framework.BundleContext) $r9;

     label1:
        if r10 == null goto label3;

        $r11 = interfaceinvoke r10.<org.osgi.framework.BundleContext: org.osgi.framework.Bundle getBundle()>();

        $r12 = interfaceinvoke $r11.<org.osgi.framework.Bundle: java.lang.String getSymbolicName()>();

        $z2 = virtualinvoke $r12.<java.lang.String: boolean matches(java.lang.String)>(r2);

        if $z2 != 0 goto label3;

     label2:
        return 1;

     label3:
        goto label5;

     label4:
        $r13 := @caughtexception;

     label5:
        $r14 = r3.<org.apache.cxf.bus.osgi.OSGIBusListener: java.util.regex.Pattern extensionBundlesExcludesPattern>;

        if $r14 == null goto label6;

        $r4 = r3.<org.apache.cxf.bus.osgi.OSGIBusListener: java.util.regex.Pattern extensionBundlesExcludesPattern>;

        $r5 = interfaceinvoke r0.<org.osgi.framework.ServiceReference: org.osgi.framework.Bundle getBundle()>();

        $r6 = interfaceinvoke $r5.<org.osgi.framework.Bundle: java.lang.String getSymbolicName()>();

        $r7 = virtualinvoke $r4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r6);

        $z1 = virtualinvoke $r7.<java.util.regex.Matcher: boolean matches()>();

        if $z1 == 0 goto label6;

        $z3 = 1;

        goto label7;

     label6:
        $z3 = 0;

     label7:
        return $z3;

        catch java.lang.IllegalArgumentException from label1 to label2 with label4;
    }

    private org.osgi.framework.Version getBundleVersion(org.osgi.framework.Bundle)
    {
        org.apache.cxf.bus.osgi.OSGIBusListener r4;
        java.lang.Object $r2;
        java.lang.String r3;
        org.osgi.framework.Bundle r0;
        org.osgi.framework.Version $r5;
        java.util.Dictionary $r1;

        r4 := @this: org.apache.cxf.bus.osgi.OSGIBusListener;

        r0 := @parameter0: org.osgi.framework.Bundle;

        $r1 = interfaceinvoke r0.<org.osgi.framework.Bundle: java.util.Dictionary getHeaders()>();

        $r2 = virtualinvoke $r1.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("Bundle-Version");

        r3 = (java.lang.String) $r2;

        if r3 == null goto label1;

        $r5 = staticinvoke <org.osgi.framework.Version: org.osgi.framework.Version parseVersion(java.lang.String)>(r3);

        goto label2;

     label1:
        $r5 = <org.osgi.framework.Version: org.osgi.framework.Version emptyVersion>;

     label2:
        return $r5;
    }

    private void registerBusAsService()
    {
        org.apache.cxf.Bus $r1, $r9, $r13;
        java.util.Properties $r4;
        org.apache.cxf.bus.osgi.OSGIBusListener r0;
        org.osgi.framework.Version $r8;
        org.osgi.framework.BundleContext r3;
        java.lang.Object $r2;
        java.lang.Class $r11;
        java.lang.String $r6, $r10, $r12;
        org.osgi.framework.Bundle $r5, $r7;
        org.osgi.framework.ServiceRegistration $r14;

        r0 := @this: org.apache.cxf.bus.osgi.OSGIBusListener;

        $r1 = r0.<org.apache.cxf.bus.osgi.OSGIBusListener: org.apache.cxf.Bus bus>;

        $r2 = interfaceinvoke $r1.<org.apache.cxf.Bus: java.lang.Object getExtension(java.lang.Class)>(class "Lorg/osgi/framework/BundleContext;");

        r3 = (org.osgi.framework.BundleContext) $r2;

        if r3 == null goto label1;

        $r4 = new java.util.Properties;

        specialinvoke $r4.<java.util.Properties: void <init>()>();

        $r5 = interfaceinvoke r3.<org.osgi.framework.BundleContext: org.osgi.framework.Bundle getBundle()>();

        $r6 = interfaceinvoke $r5.<org.osgi.framework.Bundle: java.lang.String getSymbolicName()>();

        virtualinvoke $r4.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("cxf.context.symbolicname", $r6);

        $r7 = interfaceinvoke r3.<org.osgi.framework.BundleContext: org.osgi.framework.Bundle getBundle()>();

        $r8 = specialinvoke r0.<org.apache.cxf.bus.osgi.OSGIBusListener: org.osgi.framework.Version getBundleVersion(org.osgi.framework.Bundle)>($r7);

        virtualinvoke $r4.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("cxf.context.version", $r8);

        $r9 = r0.<org.apache.cxf.bus.osgi.OSGIBusListener: org.apache.cxf.Bus bus>;

        $r10 = interfaceinvoke $r9.<org.apache.cxf.Bus: java.lang.String getId()>();

        virtualinvoke $r4.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("cxf.bus.id", $r10);

        $r11 = class "Lorg/apache/cxf/Bus;";

        $r12 = virtualinvoke $r11.<java.lang.Class: java.lang.String getName()>();

        $r13 = r0.<org.apache.cxf.bus.osgi.OSGIBusListener: org.apache.cxf.Bus bus>;

        $r14 = interfaceinvoke r3.<org.osgi.framework.BundleContext: org.osgi.framework.ServiceRegistration registerService(java.lang.String,java.lang.Object,java.util.Dictionary)>($r12, $r13, $r4);

        r0.<org.apache.cxf.bus.osgi.OSGIBusListener: org.osgi.framework.ServiceRegistration service> = $r14;

     label1:
        return;
    }

    public static void <clinit>()
    {
        <org.apache.cxf.bus.osgi.OSGIBusListener: java.lang.String BUS_EXTENSION_BUNDLES_EXCLUDES> = "bus.extension.bundles.excludes";

        <org.apache.cxf.bus.osgi.OSGIBusListener: java.lang.String SERVICE_PROPERTY_RESTRICTED> = "org.apache.cxf.bus.restricted.extension";

        <org.apache.cxf.bus.osgi.OSGIBusListener: java.lang.String SERVICE_PROPERTY_PRIVATE> = "org.apache.cxf.bus.private.extension";

        <org.apache.cxf.bus.osgi.OSGIBusListener: java.lang.String CONTEXT_NAME_PROPERTY> = "cxf.bus.id";

        <org.apache.cxf.bus.osgi.OSGIBusListener: java.lang.String CONTEXT_VERSION_PROPERTY> = "cxf.context.version";

        <org.apache.cxf.bus.osgi.OSGIBusListener: java.lang.String CONTEXT_SYMBOLIC_NAME_PROPERTY> = "cxf.context.symbolicname";

        return;
    }
}
