public abstract class org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildSVGContext extends org.apache.batik.bridge.AnimatableSVGBridge
{
    protected org.apache.batik.bridge.SVGTextElementBridge textBridge;
    private final org.apache.batik.bridge.SVGTextElementBridge this$0;

    public void <init>(org.apache.batik.bridge.SVGTextElementBridge, org.apache.batik.bridge.BridgeContext, org.apache.batik.bridge.SVGTextElementBridge, org.w3c.dom.Element)
    {
        org.apache.batik.bridge.SVGTextElementBridge r1, r3;
        org.w3c.dom.Element r4;
        org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildSVGContext r0;
        org.apache.batik.bridge.BridgeContext r2;

        r0 := @this: org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildSVGContext;

        r1 := @parameter0: org.apache.batik.bridge.SVGTextElementBridge;

        r2 := @parameter1: org.apache.batik.bridge.BridgeContext;

        r3 := @parameter2: org.apache.batik.bridge.SVGTextElementBridge;

        r4 := @parameter3: org.w3c.dom.Element;

        specialinvoke r0.<org.apache.batik.bridge.AnimatableSVGBridge: void <init>()>();

        r0.<org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildSVGContext: org.apache.batik.bridge.SVGTextElementBridge this$0> = r1;

        r0.<org.apache.batik.bridge.AnimatableSVGBridge: org.apache.batik.bridge.BridgeContext ctx> = r2;

        r0.<org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildSVGContext: org.apache.batik.bridge.SVGTextElementBridge textBridge> = r3;

        r0.<org.apache.batik.bridge.AnimatableSVGBridge: org.w3c.dom.Element e> = r4;

        return;
    }

    public java.lang.String getNamespaceURI()
    {
        org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildSVGContext r0;

        r0 := @this: org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildSVGContext;

        return null;
    }

    public java.lang.String getLocalName()
    {
        org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildSVGContext r0;

        r0 := @this: org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildSVGContext;

        return null;
    }

    public org.apache.batik.bridge.Bridge getInstance()
    {
        org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildSVGContext r0;

        r0 := @this: org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildSVGContext;

        return null;
    }

    public org.apache.batik.bridge.SVGTextElementBridge getTextBridge()
    {
        org.apache.batik.bridge.SVGTextElementBridge $r1;
        org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildSVGContext r0;

        r0 := @this: org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildSVGContext;

        $r1 = r0.<org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildSVGContext: org.apache.batik.bridge.SVGTextElementBridge textBridge>;

        return $r1;
    }

    public float getPixelUnitToMillimeter()
    {
        org.apache.batik.bridge.UserAgent $r2;
        org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildSVGContext r0;
        float $f0;
        org.apache.batik.bridge.BridgeContext $r1;

        r0 := @this: org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildSVGContext;

        $r1 = r0.<org.apache.batik.bridge.AnimatableSVGBridge: org.apache.batik.bridge.BridgeContext ctx>;

        $r2 = virtualinvoke $r1.<org.apache.batik.bridge.BridgeContext: org.apache.batik.bridge.UserAgent getUserAgent()>();

        $f0 = interfaceinvoke $r2.<org.apache.batik.bridge.UserAgent: float getPixelUnitToMillimeter()>();

        return $f0;
    }

    public float getPixelToMM()
    {
        float $f0;
        org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildSVGContext r0;

        r0 := @this: org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildSVGContext;

        $f0 = virtualinvoke r0.<org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildSVGContext: float getPixelUnitToMillimeter()>();

        return $f0;
    }

    public java.awt.geom.Rectangle2D getBBox()
    {
        org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildSVGContext r0;

        r0 := @this: org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildSVGContext;

        return null;
    }

    public java.awt.geom.AffineTransform getCTM()
    {
        org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildSVGContext r0;

        r0 := @this: org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildSVGContext;

        return null;
    }

    public java.awt.geom.AffineTransform getGlobalTransform()
    {
        org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildSVGContext r0;

        r0 := @this: org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildSVGContext;

        return null;
    }

    public java.awt.geom.AffineTransform getScreenTransform()
    {
        org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildSVGContext r0;

        r0 := @this: org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildSVGContext;

        return null;
    }

    public void setScreenTransform(java.awt.geom.AffineTransform)
    {
        org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildSVGContext r0;
        java.awt.geom.AffineTransform r1;

        r0 := @this: org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildSVGContext;

        r1 := @parameter0: java.awt.geom.AffineTransform;

        return;
    }

    public float getViewportWidth()
    {
        org.w3c.dom.Element $r1;
        org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildSVGContext r0;
        float $f0;
        org.apache.batik.bridge.BridgeContext $r2;

        r0 := @this: org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildSVGContext;

        $r2 = r0.<org.apache.batik.bridge.AnimatableSVGBridge: org.apache.batik.bridge.BridgeContext ctx>;

        $r1 = r0.<org.apache.batik.bridge.AnimatableSVGBridge: org.w3c.dom.Element e>;

        $f0 = virtualinvoke $r2.<org.apache.batik.bridge.BridgeContext: float getBlockWidth(org.w3c.dom.Element)>($r1);

        return $f0;
    }

    public float getViewportHeight()
    {
        org.w3c.dom.Element $r1;
        org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildSVGContext r0;
        float $f0;
        org.apache.batik.bridge.BridgeContext $r2;

        r0 := @this: org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildSVGContext;

        $r2 = r0.<org.apache.batik.bridge.AnimatableSVGBridge: org.apache.batik.bridge.BridgeContext ctx>;

        $r1 = r0.<org.apache.batik.bridge.AnimatableSVGBridge: org.w3c.dom.Element e>;

        $f0 = virtualinvoke $r2.<org.apache.batik.bridge.BridgeContext: float getBlockHeight(org.w3c.dom.Element)>($r1);

        return $f0;
    }

    public float getFontSize()
    {
        org.w3c.dom.Element $r1;
        org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildSVGContext r0;
        float $f0;
        org.apache.batik.css.engine.value.Value $r2;

        r0 := @this: org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildSVGContext;

        $r1 = r0.<org.apache.batik.bridge.AnimatableSVGBridge: org.w3c.dom.Element e>;

        $r2 = staticinvoke <org.apache.batik.bridge.CSSUtilities: org.apache.batik.css.engine.value.Value getComputedStyle(org.w3c.dom.Element,int)>($r1, 22);

        $f0 = interfaceinvoke $r2.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        return $f0;
    }
}
