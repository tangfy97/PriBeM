public class org.wiztools.restclient.ui.RESTViewImpl extends javax.swing.JPanel implements org.wiztools.restclient.ui.RESTView
{
    private static final java.util.logging.Logger LOG;
    private org.wiztools.restclient.ui.reqgo.ReqUrlGoPanel jp_url_go;
    private org.wiztools.restclient.ui.StatusBarPanel jp_status_bar;
    private org.wiztools.restclient.ui.reqmethod.ReqMethodPanel jp_req_method;
    private org.wiztools.restclient.ui.reqbody.ReqBodyPanel jp_req_body;
    private org.wiztools.restclient.ui.reqauth.ReqAuthPanel jp_req_auth;
    private org.wiztools.restclient.ui.reqauth.ReqSSLPanel jp_req_ssl;
    private org.wiztools.restclient.ui.reqetc.ReqEtcPanel jp_req_etc;
    private org.wiztools.restclient.ui.reqtest.ReqTestPanel jp_req_test;
    private org.wiztools.restclient.ui.resstatus.ResStatusPanel jp_res_status;
    private org.wiztools.restclient.ui.resheader.ResHeaderPanel jp_res_headers;
    private org.wiztools.restclient.ui.resbody.ResBodyPanel jp_res_body;
    private org.wiztools.restclient.ui.restest.ResTestPanel jp_res_test;
    private org.wiztools.restclient.ui.MessageDialog messageDialog;
    private org.wiztools.restclient.ui.RESTUserInterface rest_ui;
    private org.wiztools.restclient.ui.history.HistoryManager historyManager;
    private org.wiztools.restclient.ui.TwoColumnTablePanel jp_2col_req_headers;
    private org.wiztools.restclient.ui.TwoColumnTablePanel jp_2col_req_cookies;
    private org.wiztools.restclient.ui.RESTView view;
    private java.lang.Thread requestThread;
    private org.wiztools.restclient.bean.Response lastResponse;

    public void <init>()
    {
        org.wiztools.restclient.ui.RESTViewImpl r0;

        r0 := @this: org.wiztools.restclient.ui.RESTViewImpl;

        specialinvoke r0.<javax.swing.JPanel: void <init>()>();

        r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.RESTView view> = r0;

        return;
    }

    private javax.swing.JTabbedPane initJTPRequest()
    {
        org.wiztools.restclient.ui.RESTViewImpl r1;
        org.wiztools.restclient.ui.RESTUserInterface $r6, $r10;
        org.wiztools.restclient.ui.TwoColumnTablePanel $r4, $r7, $r8, $r11;
        java.lang.String[] $r5, $r9;
        javax.swing.JTabbedPane $r0;
        org.wiztools.restclient.ui.reqtest.ReqTestPanel $r21;
        org.wiztools.restclient.ui.reqauth.ReqAuthPanel $r15;
        org.wiztools.restclient.ui.reqauth.ReqSSLPanel $r17;
        java.awt.Component $r3, $r14, $r16, $r18, $r20, $r22;
        org.wiztools.restclient.ui.reqmethod.ReqMethodPanel $r2;
        org.wiztools.restclient.ui.reqbody.ReqBodyPanel $r12, $r13;
        org.wiztools.restclient.ui.reqetc.ReqEtcPanel $r19;

        r1 := @this: org.wiztools.restclient.ui.RESTViewImpl;

        $r0 = new javax.swing.JTabbedPane;

        specialinvoke $r0.<javax.swing.JTabbedPane: void <init>()>();

        $r2 = r1.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.reqmethod.ReqMethodPanel jp_req_method>;

        $r3 = interfaceinvoke $r2.<org.wiztools.restclient.ui.reqmethod.ReqMethodPanel: java.awt.Component getComponent()>();

        virtualinvoke $r0.<javax.swing.JTabbedPane: void addTab(java.lang.String,java.awt.Component)>("Method", $r3);

        $r4 = new org.wiztools.restclient.ui.TwoColumnTablePanel;

        $r5 = newarray (java.lang.String)[2];

        $r5[0] = "Header";

        $r5[1] = "Value";

        $r6 = r1.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.RESTUserInterface rest_ui>;

        specialinvoke $r4.<org.wiztools.restclient.ui.TwoColumnTablePanel: void <init>(java.lang.String[],org.wiztools.restclient.ui.RESTUserInterface)>($r5, $r6);

        r1.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.TwoColumnTablePanel jp_2col_req_headers> = $r4;

        $r7 = r1.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.TwoColumnTablePanel jp_2col_req_headers>;

        virtualinvoke $r0.<javax.swing.JTabbedPane: void addTab(java.lang.String,java.awt.Component)>("Header", $r7);

        $r8 = new org.wiztools.restclient.ui.TwoColumnTablePanel;

        $r9 = newarray (java.lang.String)[2];

        $r9[0] = "Cookie";

        $r9[1] = "Value";

        $r10 = r1.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.RESTUserInterface rest_ui>;

        specialinvoke $r8.<org.wiztools.restclient.ui.TwoColumnTablePanel: void <init>(java.lang.String[],org.wiztools.restclient.ui.RESTUserInterface)>($r9, $r10);

        r1.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.TwoColumnTablePanel jp_2col_req_cookies> = $r8;

        $r11 = r1.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.TwoColumnTablePanel jp_2col_req_cookies>;

        virtualinvoke $r0.<javax.swing.JTabbedPane: void addTab(java.lang.String,java.awt.Component)>("Cookie", $r11);

        $r12 = r1.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.reqbody.ReqBodyPanel jp_req_body>;

        interfaceinvoke $r12.<org.wiztools.restclient.ui.reqbody.ReqBodyPanel: void disableBody()>();

        $r13 = r1.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.reqbody.ReqBodyPanel jp_req_body>;

        $r14 = interfaceinvoke $r13.<org.wiztools.restclient.ui.reqbody.ReqBodyPanel: java.awt.Component getComponent()>();

        virtualinvoke $r0.<javax.swing.JTabbedPane: void addTab(java.lang.String,java.awt.Component)>("Body", $r14);

        $r15 = r1.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.reqauth.ReqAuthPanel jp_req_auth>;

        $r16 = interfaceinvoke $r15.<org.wiztools.restclient.ui.reqauth.ReqAuthPanel: java.awt.Component getComponent()>();

        virtualinvoke $r0.<javax.swing.JTabbedPane: void addTab(java.lang.String,java.awt.Component)>("Auth", $r16);

        $r17 = r1.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.reqauth.ReqSSLPanel jp_req_ssl>;

        $r18 = interfaceinvoke $r17.<org.wiztools.restclient.ui.reqauth.ReqSSLPanel: java.awt.Component getComponent()>();

        virtualinvoke $r0.<javax.swing.JTabbedPane: void addTab(java.lang.String,java.awt.Component)>("SSL", $r18);

        $r19 = r1.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.reqetc.ReqEtcPanel jp_req_etc>;

        $r20 = interfaceinvoke $r19.<org.wiztools.restclient.ui.reqetc.ReqEtcPanel: java.awt.Component getComponent()>();

        virtualinvoke $r0.<javax.swing.JTabbedPane: java.awt.Component add(java.lang.String,java.awt.Component)>("Etc.", $r20);

        $r21 = r1.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.reqtest.ReqTestPanel jp_req_test>;

        $r22 = interfaceinvoke $r21.<org.wiztools.restclient.ui.reqtest.ReqTestPanel: java.awt.Component getComponent()>();

        virtualinvoke $r0.<javax.swing.JTabbedPane: void addTab(java.lang.String,java.awt.Component)>("Test", $r22);

        return $r0;
    }

    private javax.swing.JTabbedPane initJTPResponse()
    {
        org.wiztools.restclient.ui.resbody.ResBodyPanel $r4;
        org.wiztools.restclient.ui.resheader.ResHeaderPanel $r2;
        org.wiztools.restclient.ui.RESTViewImpl r1;
        org.wiztools.restclient.ui.restest.ResTestPanel $r6;
        java.awt.Component $r3, $r5, $r7;
        javax.swing.JTabbedPane $r0;

        r1 := @this: org.wiztools.restclient.ui.RESTViewImpl;

        $r0 = new javax.swing.JTabbedPane;

        specialinvoke $r0.<javax.swing.JTabbedPane: void <init>()>();

        $r2 = r1.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.resheader.ResHeaderPanel jp_res_headers>;

        $r3 = interfaceinvoke $r2.<org.wiztools.restclient.ui.resheader.ResHeaderPanel: java.awt.Component getComponent()>();

        virtualinvoke $r0.<javax.swing.JTabbedPane: void addTab(java.lang.String,java.awt.Component)>("Headers", $r3);

        $r4 = r1.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.resbody.ResBodyPanel jp_res_body>;

        $r5 = interfaceinvoke $r4.<org.wiztools.restclient.ui.resbody.ResBodyPanel: java.awt.Component getComponent()>();

        virtualinvoke $r0.<javax.swing.JTabbedPane: void addTab(java.lang.String,java.awt.Component)>("Body", $r5);

        $r6 = r1.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.restest.ResTestPanel jp_res_test>;

        $r7 = interfaceinvoke $r6.<org.wiztools.restclient.ui.restest.ResTestPanel: java.awt.Component getComponent()>();

        virtualinvoke $r0.<javax.swing.JTabbedPane: void addTab(java.lang.String,java.awt.Component)>("Test Result", $r7);

        return $r0;
    }

    private javax.swing.JPanel initUIRequest()
    {
        org.wiztools.restclient.ui.RESTViewImpl$1 $r4;
        org.wiztools.restclient.ui.RESTViewImpl r3;
        org.wiztools.restclient.ui.reqgo.ReqUrlGoPanel $r5, $r6;
        java.awt.Component $r7;
        javax.swing.border.Border $r1;
        javax.swing.JTabbedPane $r8;
        javax.swing.border.TitledBorder $r9;
        java.awt.BorderLayout $r2;
        javax.swing.JPanel $r0;

        r3 := @this: org.wiztools.restclient.ui.RESTViewImpl;

        $r0 = new javax.swing.JPanel;

        specialinvoke $r0.<javax.swing.JPanel: void <init>()>();

        $r1 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(5, 5, 5, 5);

        virtualinvoke $r0.<javax.swing.JPanel: void setBorder(javax.swing.border.Border)>($r1);

        $r2 = new java.awt.BorderLayout;

        specialinvoke $r2.<java.awt.BorderLayout: void <init>(int,int)>(5, 5);

        virtualinvoke $r0.<javax.swing.JPanel: void setLayout(java.awt.LayoutManager)>($r2);

        $r5 = r3.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.reqgo.ReqUrlGoPanel jp_url_go>;

        $r4 = new org.wiztools.restclient.ui.RESTViewImpl$1;

        specialinvoke $r4.<org.wiztools.restclient.ui.RESTViewImpl$1: void <init>(org.wiztools.restclient.ui.RESTViewImpl)>(r3);

        interfaceinvoke $r5.<org.wiztools.restclient.ui.reqgo.ReqUrlGoPanel: void addActionListener(java.awt.event.ActionListener)>($r4);

        $r6 = r3.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.reqgo.ReqUrlGoPanel jp_url_go>;

        $r7 = interfaceinvoke $r6.<org.wiztools.restclient.ui.reqgo.ReqUrlGoPanel: java.awt.Component getComponent()>();

        virtualinvoke $r0.<javax.swing.JPanel: void add(java.awt.Component,java.lang.Object)>($r7, "North");

        $r8 = specialinvoke r3.<org.wiztools.restclient.ui.RESTViewImpl: javax.swing.JTabbedPane initJTPRequest()>();

        virtualinvoke $r0.<javax.swing.JPanel: void add(java.awt.Component,java.lang.Object)>($r8, "Center");

        $r9 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.TitledBorder createTitledBorder(javax.swing.border.Border,java.lang.String,int,int)>(null, "HTTP Request", 2, 0);

        virtualinvoke $r0.<javax.swing.JPanel: void setBorder(javax.swing.border.Border)>($r9);

        return $r0;
    }

    private javax.swing.JPanel initUIResponse()
    {
        org.wiztools.restclient.ui.RESTViewImpl r3;
        java.awt.Component $r5;
        javax.swing.border.Border $r1;
        org.wiztools.restclient.ui.resstatus.ResStatusPanel $r4;
        javax.swing.JTabbedPane $r6;
        javax.swing.border.TitledBorder $r7;
        java.awt.BorderLayout $r2;
        javax.swing.JPanel $r0;

        r3 := @this: org.wiztools.restclient.ui.RESTViewImpl;

        $r0 = new javax.swing.JPanel;

        specialinvoke $r0.<javax.swing.JPanel: void <init>()>();

        $r1 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(0, 5, 5, 5);

        virtualinvoke $r0.<javax.swing.JPanel: void setBorder(javax.swing.border.Border)>($r1);

        $r2 = new java.awt.BorderLayout;

        specialinvoke $r2.<java.awt.BorderLayout: void <init>(int,int)>(5, 5);

        virtualinvoke $r0.<javax.swing.JPanel: void setLayout(java.awt.LayoutManager)>($r2);

        $r4 = r3.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.resstatus.ResStatusPanel jp_res_status>;

        $r5 = interfaceinvoke $r4.<org.wiztools.restclient.ui.resstatus.ResStatusPanel: java.awt.Component getComponent()>();

        virtualinvoke $r0.<javax.swing.JPanel: void add(java.awt.Component,java.lang.Object)>($r5, "North");

        $r6 = specialinvoke r3.<org.wiztools.restclient.ui.RESTViewImpl: javax.swing.JTabbedPane initJTPResponse()>();

        virtualinvoke $r0.<javax.swing.JPanel: void add(java.awt.Component,java.lang.Object)>($r6, "Center");

        $r7 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.TitledBorder createTitledBorder(javax.swing.border.Border,java.lang.String,int,int)>(null, "HTTP Response", 2, 0);

        virtualinvoke $r0.<javax.swing.JPanel: void setBorder(javax.swing.border.Border)>($r7);

        return $r0;
    }

    protected void init()
    {
        javax.swing.JSplitPane $r8;
        org.wiztools.restclient.ui.RESTViewImpl r6;
        java.util.logging.Level $r17;
        int i0;
        java.lang.String $r2, $r5;
        java.awt.BorderLayout $r7;
        org.wiztools.restclient.IGlobalOptions $r1, $r4;
        org.wiztools.restclient.ui.resbody.ResBodyPanel $r14;
        java.awt.Font $r13;
        org.wiztools.restclient.ui.FontableEditor $r15;
        java.lang.NumberFormatException $r16;
        java.util.logging.Logger $r18;
        java.awt.Component $r12;
        org.wiztools.restclient.ui.StatusBarPanel $r11;
        java.lang.Object $r0, $r3;
        javax.swing.JPanel $r9, $r10;

        r6 := @this: org.wiztools.restclient.ui.RESTViewImpl;

        $r0 = staticinvoke <org.wiztools.restclient.ServiceLocator: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/wiztools/restclient/IGlobalOptions;");

        $r1 = (org.wiztools.restclient.IGlobalOptions) $r0;

        $r2 = interfaceinvoke $r1.<org.wiztools.restclient.IGlobalOptions: java.lang.String getProperty(java.lang.String)>("font.options.font");

        $r3 = staticinvoke <org.wiztools.restclient.ServiceLocator: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/wiztools/restclient/IGlobalOptions;");

        $r4 = (org.wiztools.restclient.IGlobalOptions) $r3;

        $r5 = interfaceinvoke $r4.<org.wiztools.restclient.IGlobalOptions: java.lang.String getProperty(java.lang.String)>("font.options.fontSize");

        i0 = 12;

        if $r5 == null goto label4;

     label1:
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);

     label2:
        goto label4;

     label3:
        $r16 := @caughtexception;

        $r18 = <org.wiztools.restclient.ui.RESTViewImpl: java.util.logging.Logger LOG>;

        $r17 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        virtualinvoke $r18.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Object)>($r17, "Font size property is not a number: {0}", $r5);

     label4:
        if $r2 == null goto label5;

        $r13 = new java.awt.Font;

        specialinvoke $r13.<java.awt.Font: void <init>(java.lang.String,int,int)>($r2, 0, i0);

        $r14 = r6.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.resbody.ResBodyPanel jp_res_body>;

        $r15 = (org.wiztools.restclient.ui.FontableEditor) $r14;

        interfaceinvoke $r15.<org.wiztools.restclient.ui.FontableEditor: void setEditorFont(java.awt.Font)>($r13);

     label5:
        $r7 = new java.awt.BorderLayout;

        specialinvoke $r7.<java.awt.BorderLayout: void <init>()>();

        virtualinvoke r6.<org.wiztools.restclient.ui.RESTViewImpl: void setLayout(java.awt.LayoutManager)>($r7);

        $r8 = new javax.swing.JSplitPane;

        specialinvoke $r8.<javax.swing.JSplitPane: void <init>(int)>(0);

        virtualinvoke $r8.<javax.swing.JSplitPane: void setDividerSize(int)>(5);

        $r9 = specialinvoke r6.<org.wiztools.restclient.ui.RESTViewImpl: javax.swing.JPanel initUIRequest()>();

        virtualinvoke $r8.<javax.swing.JSplitPane: java.awt.Component add(java.awt.Component)>($r9);

        $r10 = specialinvoke r6.<org.wiztools.restclient.ui.RESTViewImpl: javax.swing.JPanel initUIResponse()>();

        virtualinvoke $r8.<javax.swing.JSplitPane: java.awt.Component add(java.awt.Component)>($r10);

        virtualinvoke r6.<org.wiztools.restclient.ui.RESTViewImpl: void add(java.awt.Component,java.lang.Object)>($r8, "Center");

        $r11 = r6.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.StatusBarPanel jp_status_bar>;

        $r12 = interfaceinvoke $r11.<org.wiztools.restclient.ui.StatusBarPanel: java.awt.Component getComponent()>();

        virtualinvoke r6.<org.wiztools.restclient.ui.RESTViewImpl: void add(java.awt.Component,java.lang.Object)>($r12, "South");

        return;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public void setUIToLastRequestResponse()
    {
        org.wiztools.restclient.ui.RESTViewImpl r0;
        org.wiztools.restclient.ui.history.HistoryManager $r1, $r4;
        org.wiztools.restclient.bean.Request $r2, $r5;
        org.wiztools.restclient.bean.Response $r3, $r6;

        r0 := @this: org.wiztools.restclient.ui.RESTViewImpl;

        $r1 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.history.HistoryManager historyManager>;

        $r2 = interfaceinvoke $r1.<org.wiztools.restclient.ui.history.HistoryManager: org.wiztools.restclient.bean.Request lastRequest()>();

        if $r2 == null goto label1;

        $r3 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.bean.Response lastResponse>;

        if $r3 == null goto label1;

        $r4 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.history.HistoryManager historyManager>;

        $r5 = interfaceinvoke $r4.<org.wiztools.restclient.ui.history.HistoryManager: org.wiztools.restclient.bean.Request lastRequest()>();

        virtualinvoke r0.<org.wiztools.restclient.ui.RESTViewImpl: void setUIFromRequest(org.wiztools.restclient.bean.Request)>($r5);

        $r6 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.bean.Response lastResponse>;

        virtualinvoke r0.<org.wiztools.restclient.ui.RESTViewImpl: void setUIFromResponse(org.wiztools.restclient.bean.Response)>($r6);

     label1:
        return;
    }

    public org.wiztools.restclient.bean.Response getResponseFromUI()
    {
        byte[] $r3;
        org.wiztools.restclient.ui.RESTViewImpl r1;
        org.wiztools.restclient.ui.restest.ResTestPanel $r10;
        org.wiztools.restclient.ui.resstatus.ResStatusPanel $r4;
        int $i0;
        java.lang.String $r5, r13, r17;
        boolean $z0, $z1;
        org.wiztools.restclient.ui.resbody.ResBodyPanel $r2;
        java.util.Iterator $r9, $r15;
        org.wiztools.restclient.ui.resheader.ResHeaderPanel $r6;
        java.util.Collection $r14;
        org.wiztools.restclient.bean.ResponseBean $r0;
        java.util.Set $r8;
        java.lang.Object $r12, $r16;
        org.wiztools.restclient.bean.TestResult $r11;
        org.wiztools.commons.MultiValueMap $r7;

        r1 := @this: org.wiztools.restclient.ui.RESTViewImpl;

        $r0 = new org.wiztools.restclient.bean.ResponseBean;

        specialinvoke $r0.<org.wiztools.restclient.bean.ResponseBean: void <init>()>();

        $r2 = r1.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.resbody.ResBodyPanel jp_res_body>;

        $r3 = interfaceinvoke $r2.<org.wiztools.restclient.ui.resbody.ResBodyPanel: byte[] getBody()>();

        virtualinvoke $r0.<org.wiztools.restclient.bean.ResponseBean: void setResponseBody(byte[])>($r3);

        $r4 = r1.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.resstatus.ResStatusPanel jp_res_status>;

        $r5 = interfaceinvoke $r4.<org.wiztools.restclient.ui.resstatus.ResStatusPanel: java.lang.String getStatus()>();

        virtualinvoke $r0.<org.wiztools.restclient.bean.ResponseBean: void setStatusLine(java.lang.String)>($r5);

        $i0 = staticinvoke <org.wiztools.restclient.util.HttpUtil: int getStatusCodeFromStatusLine(java.lang.String)>($r5);

        virtualinvoke $r0.<org.wiztools.restclient.bean.ResponseBean: void setStatusCode(int)>($i0);

        $r6 = r1.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.resheader.ResHeaderPanel jp_res_headers>;

        $r7 = interfaceinvoke $r6.<org.wiztools.restclient.ui.resheader.ResHeaderPanel: org.wiztools.commons.MultiValueMap getHeaders()>();

        $r8 = interfaceinvoke $r7.<org.wiztools.commons.MultiValueMap: java.util.Set keySet()>();

        $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r12 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r13 = (java.lang.String) $r12;

        $r14 = interfaceinvoke $r7.<org.wiztools.commons.MultiValueMap: java.util.Collection get(java.lang.Object)>(r13);

        $r15 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r16 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        r17 = (java.lang.String) $r16;

        virtualinvoke $r0.<org.wiztools.restclient.bean.ResponseBean: void addHeader(java.lang.String,java.lang.String)>(r13, r17);

        goto label2;

     label3:
        goto label1;

     label4:
        $r10 = r1.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.restest.ResTestPanel jp_res_test>;

        $r11 = interfaceinvoke $r10.<org.wiztools.restclient.ui.restest.ResTestPanel: org.wiztools.restclient.bean.TestResult getTestResult()>();

        virtualinvoke $r0.<org.wiztools.restclient.bean.ResponseBean: void setTestResult(org.wiztools.restclient.bean.TestResult)>($r11);

        return $r0;
    }

    public org.wiztools.restclient.bean.Request getRequestFromUI() throws java.lang.IllegalStateException
    {
        org.wiztools.restclient.bean.SSLReq $r27;
        java.lang.IllegalStateException $r40, $r42;
        org.wiztools.restclient.ui.RESTViewImpl r0;
        java.net.URL $r6;
        org.wiztools.restclient.ui.reqgo.ReqUrlGoPanel $r4, $r18;
        java.net.HttpCookie $r34;
        org.wiztools.restclient.ui.reqtest.ReqTestPanel $r23;
        org.wiztools.restclient.ui.reqauth.ReqAuthPanel $r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.util.Collection $r31, $r36;
        java.util.Set $r11, $r15;
        org.wiztools.restclient.ui.reqbody.ReqBodyPanel $r28;
        org.wiztools.restclient.bean.RequestBean $r1;
        org.wiztools.restclient.ui.TwoColumnTablePanel $r9, $r13;
        org.wiztools.restclient.bean.Auth $r3;
        org.wiztools.restclient.bean.HTTPVersion $r20;
        java.lang.String $r5, $r24, $r25, r43, r44, r45, r46, $r47;
        org.wiztools.restclient.bean.HTTPMethod $r8;
        java.util.Iterator $r12, $r16, $r32, $r37;
        java.net.MalformedURLException $r41;
        org.wiztools.restclient.ui.reqauth.ReqSSLPanel $r26;
        java.lang.IllegalArgumentException $r39;
        org.wiztools.restclient.ui.reqmethod.ReqMethodPanel $r7, $r17;
        org.wiztools.restclient.ui.reqetc.ReqEtcPanel $r19, $r21, $r22;
        org.wiztools.restclient.bean.ReqEntity $r29;
        java.lang.Object $r30, $r33, $r35, $r38;
        org.wiztools.commons.MultiValueMap $r10, $r14;

        r0 := @this: org.wiztools.restclient.ui.RESTViewImpl;

        specialinvoke r0.<org.wiztools.restclient.ui.RESTViewImpl: void correctRequestURL()>();

        $r1 = new org.wiztools.restclient.bean.RequestBean;

        specialinvoke $r1.<org.wiztools.restclient.bean.RequestBean: void <init>()>();

        $r2 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.reqauth.ReqAuthPanel jp_req_auth>;

        $r3 = interfaceinvoke $r2.<org.wiztools.restclient.ui.reqauth.ReqAuthPanel: org.wiztools.restclient.bean.Auth getAuth()>();

        virtualinvoke $r1.<org.wiztools.restclient.bean.RequestBean: void setAuth(org.wiztools.restclient.bean.Auth)>($r3);

        $r4 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.reqgo.ReqUrlGoPanel jp_url_go>;

        $r5 = interfaceinvoke $r4.<org.wiztools.restclient.ui.reqgo.ReqUrlGoPanel: java.lang.String getUrlString()>();

     label01:
        $r6 = new java.net.URL;

        specialinvoke $r6.<java.net.URL: void <init>(java.lang.String)>($r5);

        virtualinvoke $r1.<org.wiztools.restclient.bean.RequestBean: void setUrl(java.net.URL)>($r6);

     label02:
        goto label04;

     label03:
        $r41 := @caughtexception;

        $r42 = new java.lang.IllegalStateException;

        specialinvoke $r42.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("URL is malformed", $r41);

        throw $r42;

     label04:
        $r7 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.reqmethod.ReqMethodPanel jp_req_method>;

        $r8 = interfaceinvoke $r7.<org.wiztools.restclient.ui.reqmethod.ReqMethodPanel: org.wiztools.restclient.bean.HTTPMethod getSelectedMethod()>();

        virtualinvoke $r1.<org.wiztools.restclient.bean.RequestBean: void setMethod(org.wiztools.restclient.bean.HTTPMethod)>($r8);

        $r9 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.TwoColumnTablePanel jp_2col_req_headers>;

        $r10 = virtualinvoke $r9.<org.wiztools.restclient.ui.TwoColumnTablePanel: org.wiztools.commons.MultiValueMap getData()>();

        $r11 = interfaceinvoke $r10.<org.wiztools.commons.MultiValueMap: java.util.Set keySet()>();

        $r12 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();

     label05:
        $z0 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label08;

        $r35 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r43 = (java.lang.String) $r35;

        $r36 = interfaceinvoke $r10.<org.wiztools.commons.MultiValueMap: java.util.Collection get(java.lang.Object)>(r43);

        $r37 = interfaceinvoke $r36.<java.util.Collection: java.util.Iterator iterator()>();

     label06:
        $z8 = interfaceinvoke $r37.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label07;

        $r38 = interfaceinvoke $r37.<java.util.Iterator: java.lang.Object next()>();

        r44 = (java.lang.String) $r38;

        virtualinvoke $r1.<org.wiztools.restclient.bean.RequestBean: void addHeader(java.lang.String,java.lang.String)>(r43, r44);

        goto label06;

     label07:
        goto label05;

     label08:
        $r13 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.TwoColumnTablePanel jp_2col_req_cookies>;

        $r14 = virtualinvoke $r13.<org.wiztools.restclient.ui.TwoColumnTablePanel: org.wiztools.commons.MultiValueMap getData()>();

        $r15 = interfaceinvoke $r14.<org.wiztools.commons.MultiValueMap: java.util.Set keySet()>();

        $r16 = interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>();

     label09:
        $z1 = interfaceinvoke $r16.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label16;

        $r30 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        r45 = (java.lang.String) $r30;

        $r31 = interfaceinvoke $r14.<org.wiztools.commons.MultiValueMap: java.util.Collection get(java.lang.Object)>(r45);

        $r32 = interfaceinvoke $r31.<java.util.Collection: java.util.Iterator iterator()>();

     label10:
        $z7 = interfaceinvoke $r32.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label15;

        $r33 = interfaceinvoke $r32.<java.util.Iterator: java.lang.Object next()>();

        r46 = (java.lang.String) $r33;

     label11:
        $r34 = new java.net.HttpCookie;

        specialinvoke $r34.<java.net.HttpCookie: void <init>(java.lang.String,java.lang.String)>(r45, r46);

        virtualinvoke $r1.<org.wiztools.restclient.bean.RequestBean: void addCookie(java.net.HttpCookie)>($r34);

     label12:
        goto label14;

     label13:
        $r39 := @caughtexception;

        $r40 = new java.lang.IllegalStateException;

        specialinvoke $r40.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>($r39);

        throw $r40;

     label14:
        goto label10;

     label15:
        goto label09;

     label16:
        $r17 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.reqmethod.ReqMethodPanel jp_req_method>;

        $z2 = interfaceinvoke $r17.<org.wiztools.restclient.ui.reqmethod.ReqMethodPanel: boolean doesSelectedMethodSupportEntityBody()>();

        if $z2 == 0 goto label17;

        $r28 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.reqbody.ReqBodyPanel jp_req_body>;

        $r29 = interfaceinvoke $r28.<org.wiztools.restclient.ui.reqbody.ReqBodyPanel: org.wiztools.restclient.bean.ReqEntity getEntity()>();

        virtualinvoke $r1.<org.wiztools.restclient.bean.RequestBean: void setBody(org.wiztools.restclient.bean.ReqEntity)>($r29);

     label17:
        $r18 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.reqgo.ReqUrlGoPanel jp_url_go>;

        $z3 = interfaceinvoke $r18.<org.wiztools.restclient.ui.reqgo.ReqUrlGoPanel: boolean isSslUrl()>();

        if $z3 == 0 goto label18;

        $r26 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.reqauth.ReqSSLPanel jp_req_ssl>;

        $r27 = interfaceinvoke $r26.<org.wiztools.restclient.ui.reqauth.ReqSSLPanel: org.wiztools.restclient.bean.SSLReq getSslReq()>();

        virtualinvoke $r1.<org.wiztools.restclient.bean.RequestBean: void setSslReq(org.wiztools.restclient.bean.SSLReq)>($r27);

     label18:
        $r19 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.reqetc.ReqEtcPanel jp_req_etc>;

        $r20 = interfaceinvoke $r19.<org.wiztools.restclient.ui.reqetc.ReqEtcPanel: org.wiztools.restclient.bean.HTTPVersion getHttpVersion()>();

        virtualinvoke $r1.<org.wiztools.restclient.bean.RequestBean: void setHttpVersion(org.wiztools.restclient.bean.HTTPVersion)>($r20);

        $r21 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.reqetc.ReqEtcPanel jp_req_etc>;

        $z4 = interfaceinvoke $r21.<org.wiztools.restclient.ui.reqetc.ReqEtcPanel: boolean isFollowRedirects()>();

        virtualinvoke $r1.<org.wiztools.restclient.bean.RequestBean: void setFollowRedirect(boolean)>($z4);

        $r22 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.reqetc.ReqEtcPanel jp_req_etc>;

        $z5 = interfaceinvoke $r22.<org.wiztools.restclient.ui.reqetc.ReqEtcPanel: boolean isIgnoreResponseBody()>();

        virtualinvoke $r1.<org.wiztools.restclient.bean.RequestBean: void setIgnoreResponseBody(boolean)>($z5);

        $r23 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.reqtest.ReqTestPanel jp_req_test>;

        $r24 = interfaceinvoke $r23.<org.wiztools.restclient.ui.reqtest.ReqTestPanel: java.lang.String getTestScript()>();

        if $r24 == null goto label19;

        $r25 = virtualinvoke $r24.<java.lang.String: java.lang.String trim()>();

        $z6 = virtualinvoke $r25.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z6 == 0 goto label20;

     label19:
        $r47 = null;

        goto label21;

     label20:
        $r47 = virtualinvoke $r24.<java.lang.String: java.lang.String trim()>();

     label21:
        virtualinvoke $r1.<org.wiztools.restclient.bean.RequestBean: void setTestScript(java.lang.String)>($r47);

        return $r1;

        catch java.net.MalformedURLException from label01 to label02 with label03;
        catch java.lang.IllegalArgumentException from label11 to label12 with label13;
    }

    private void jb_requestActionPerformed()
    {
        java.lang.IllegalStateException $r13;
        org.wiztools.restclient.ui.RESTViewImpl$2 $r11;
        org.wiztools.restclient.ui.RESTViewImpl r0;
        org.wiztools.restclient.ui.RESTUserInterface $r8;
        org.wiztools.restclient.ui.reqgo.ReqUrlGoPanel $r1, $r2, $r4;
        org.wiztools.restclient.bean.Request $r5;
        java.lang.Thread $r3, $r12;
        java.lang.String $r7, $r14;
        javax.swing.JFrame $r9;
        boolean $z0, $z1, $z2;
        org.wiztools.restclient.bean.RequestExecuter r15;
        java.util.List $r6;
        java.lang.Object $r10;

        r0 := @this: org.wiztools.restclient.ui.RESTViewImpl;

        $r1 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.reqgo.ReqUrlGoPanel jp_url_go>;

        $z0 = interfaceinvoke $r1.<org.wiztools.restclient.ui.reqgo.ReqUrlGoPanel: boolean isIdle()>();

        if $z0 == 0 goto label5;

     label1:
        $r5 = virtualinvoke r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.bean.Request getRequestFromUI()>();

        $r6 = specialinvoke r0.<org.wiztools.restclient.ui.RESTViewImpl: java.util.List validateRequest(org.wiztools.restclient.bean.Request)>($r5);

        $z2 = interfaceinvoke $r6.<java.util.List: boolean isEmpty()>();

        if $z2 == 0 goto label2;

        virtualinvoke r0.<org.wiztools.restclient.ui.RESTViewImpl: void clearUIResponse()>();

        $r10 = staticinvoke <org.wiztools.restclient.ServiceLocator: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/wiztools/restclient/bean/RequestExecuter;");

        r15 = (org.wiztools.restclient.bean.RequestExecuter) $r10;

        $r11 = new org.wiztools.restclient.ui.RESTViewImpl$2;

        specialinvoke $r11.<org.wiztools.restclient.ui.RESTViewImpl$2: void <init>(org.wiztools.restclient.ui.RESTViewImpl,org.wiztools.restclient.bean.RequestExecuter,org.wiztools.restclient.bean.Request)>(r0, r15, $r5);

        r0.<org.wiztools.restclient.ui.RESTViewImpl: java.lang.Thread requestThread> = $r11;

        $r12 = r0.<org.wiztools.restclient.ui.RESTViewImpl: java.lang.Thread requestThread>;

        virtualinvoke $r12.<java.lang.Thread: void start()>();

        goto label3;

     label2:
        $r7 = staticinvoke <org.wiztools.restclient.util.Util: java.lang.String getHTMLListFromList(java.util.List)>($r6);

        $r8 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.RESTUserInterface rest_ui>;

        $r9 = interfaceinvoke $r8.<org.wiztools.restclient.ui.RESTUserInterface: javax.swing.JFrame getFrame()>();

        staticinvoke <javax.swing.JOptionPane: void showMessageDialog(java.awt.Component,java.lang.Object,java.lang.String,int)>($r9, $r7, "Validation error", 0);

     label3:
        goto label6;

     label4:
        $r13 := @caughtexception;

        $r14 = staticinvoke <org.wiztools.restclient.util.Util: java.lang.String getStackTrace(java.lang.Throwable)>($r13);

        virtualinvoke r0.<org.wiztools.restclient.ui.RESTViewImpl: void doError(java.lang.String)>($r14);

        goto label6;

     label5:
        $r2 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.reqgo.ReqUrlGoPanel jp_url_go>;

        $z1 = interfaceinvoke $r2.<org.wiztools.restclient.ui.reqgo.ReqUrlGoPanel: boolean isRunning()>();

        if $z1 == 0 goto label6;

        $r3 = r0.<org.wiztools.restclient.ui.RESTViewImpl: java.lang.Thread requestThread>;

        virtualinvoke $r3.<java.lang.Thread: void interrupt()>();

        $r4 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.reqgo.ReqUrlGoPanel jp_url_go>;

        interfaceinvoke $r4.<org.wiztools.restclient.ui.reqgo.ReqUrlGoPanel: void setAsIdle()>();

     label6:
        return;

        catch java.lang.IllegalStateException from label1 to label3 with label4;
    }

    public void doStart(org.wiztools.restclient.bean.Request)
    {
        org.wiztools.restclient.ui.RESTViewImpl$3 $r3;
        org.wiztools.restclient.ui.RESTViewImpl r0;
        org.wiztools.restclient.ui.history.HistoryManager $r2;
        org.wiztools.restclient.bean.Request r1;

        r0 := @this: org.wiztools.restclient.ui.RESTViewImpl;

        r1 := @parameter0: org.wiztools.restclient.bean.Request;

        $r2 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.history.HistoryManager historyManager>;

        interfaceinvoke $r2.<org.wiztools.restclient.ui.history.HistoryManager: void add(org.wiztools.restclient.bean.Request)>(r1);

        $r3 = new org.wiztools.restclient.ui.RESTViewImpl$3;

        specialinvoke $r3.<org.wiztools.restclient.ui.RESTViewImpl$3: void <init>(org.wiztools.restclient.ui.RESTViewImpl)>(r0);

        staticinvoke <javax.swing.SwingUtilities: void invokeLater(java.lang.Runnable)>($r3);

        return;
    }

    public void doResponse(org.wiztools.restclient.bean.Response)
    {
        org.wiztools.restclient.bean.Response r2;
        org.wiztools.restclient.ui.RESTViewImpl$4 $r0;
        org.wiztools.restclient.ui.RESTViewImpl r1;

        r1 := @this: org.wiztools.restclient.ui.RESTViewImpl;

        r2 := @parameter0: org.wiztools.restclient.bean.Response;

        $r0 = new org.wiztools.restclient.ui.RESTViewImpl$4;

        specialinvoke $r0.<org.wiztools.restclient.ui.RESTViewImpl$4: void <init>(org.wiztools.restclient.ui.RESTViewImpl,org.wiztools.restclient.bean.Response)>(r1, r2);

        staticinvoke <javax.swing.SwingUtilities: void invokeLater(java.lang.Runnable)>($r0);

        return;
    }

    public void doCancelled()
    {
        org.wiztools.restclient.ui.RESTViewImpl$5 $r0;
        org.wiztools.restclient.ui.RESTViewImpl r1;

        r1 := @this: org.wiztools.restclient.ui.RESTViewImpl;

        $r0 = new org.wiztools.restclient.ui.RESTViewImpl$5;

        specialinvoke $r0.<org.wiztools.restclient.ui.RESTViewImpl$5: void <init>(org.wiztools.restclient.ui.RESTViewImpl)>(r1);

        staticinvoke <javax.swing.SwingUtilities: void invokeLater(java.lang.Runnable)>($r0);

        return;
    }

    public void doEnd()
    {
        org.wiztools.restclient.ui.RESTViewImpl r1;
        org.wiztools.restclient.ui.RESTViewImpl$6 $r0;

        r1 := @this: org.wiztools.restclient.ui.RESTViewImpl;

        $r0 = new org.wiztools.restclient.ui.RESTViewImpl$6;

        specialinvoke $r0.<org.wiztools.restclient.ui.RESTViewImpl$6: void <init>(org.wiztools.restclient.ui.RESTViewImpl)>(r1);

        staticinvoke <javax.swing.SwingUtilities: void invokeLater(java.lang.Runnable)>($r0);

        return;
    }

    public void doError(java.lang.String)
    {
        org.wiztools.restclient.ui.RESTViewImpl$7 $r0;
        java.lang.String r2;
        org.wiztools.restclient.ui.RESTViewImpl r1;

        r1 := @this: org.wiztools.restclient.ui.RESTViewImpl;

        r2 := @parameter0: java.lang.String;

        $r0 = new org.wiztools.restclient.ui.RESTViewImpl$7;

        specialinvoke $r0.<org.wiztools.restclient.ui.RESTViewImpl$7: void <init>(org.wiztools.restclient.ui.RESTViewImpl,java.lang.String)>(r1, r2);

        staticinvoke <javax.swing.SwingUtilities: void invokeLater(java.lang.Runnable)>($r0);

        return;
    }

    public void showError(java.lang.String)
    {
        java.lang.String r1;
        org.wiztools.restclient.ui.MessageDialog $r2;
        org.wiztools.restclient.ui.RESTViewImpl r0;

        r0 := @this: org.wiztools.restclient.ui.RESTViewImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.MessageDialog messageDialog>;

        virtualinvoke $r2.<org.wiztools.restclient.ui.MessageDialog: void showError(java.lang.String)>(r1);

        return;
    }

    public void showMessage(java.lang.String, java.lang.String)
    {
        org.wiztools.restclient.ui.RESTViewImpl r0;
        java.lang.String r1, r2;
        org.wiztools.restclient.ui.MessageDialog $r3;

        r0 := @this: org.wiztools.restclient.ui.RESTViewImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.MessageDialog messageDialog>;

        virtualinvoke $r3.<org.wiztools.restclient.ui.MessageDialog: void showMessage(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    public void clearUIResponse()
    {
        org.wiztools.restclient.ui.resstatus.ResStatusPanel $r1;
        org.wiztools.restclient.ui.resbody.ResBodyPanel $r2;
        org.wiztools.restclient.ui.resheader.ResHeaderPanel $r3;
        org.wiztools.restclient.ui.RESTViewImpl r0;
        org.wiztools.restclient.ui.restest.ResTestPanel $r4;

        r0 := @this: org.wiztools.restclient.ui.RESTViewImpl;

        r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.bean.Response lastResponse> = null;

        $r1 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.resstatus.ResStatusPanel jp_res_status>;

        interfaceinvoke $r1.<org.wiztools.restclient.ui.resstatus.ResStatusPanel: void clear()>();

        $r2 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.resbody.ResBodyPanel jp_res_body>;

        interfaceinvoke $r2.<org.wiztools.restclient.ui.resbody.ResBodyPanel: void clear()>();

        $r3 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.resheader.ResHeaderPanel jp_res_headers>;

        interfaceinvoke $r3.<org.wiztools.restclient.ui.resheader.ResHeaderPanel: void clear()>();

        $r4 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.restest.ResTestPanel jp_res_test>;

        interfaceinvoke $r4.<org.wiztools.restclient.ui.restest.ResTestPanel: void clear()>();

        return;
    }

    public void enableBody()
    {
        org.wiztools.restclient.ui.RESTViewImpl r0;
        org.wiztools.restclient.ui.reqbody.ReqBodyPanel $r1;

        r0 := @this: org.wiztools.restclient.ui.RESTViewImpl;

        $r1 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.reqbody.ReqBodyPanel jp_req_body>;

        interfaceinvoke $r1.<org.wiztools.restclient.ui.reqbody.ReqBodyPanel: void enableBody()>();

        return;
    }

    public void disableBody()
    {
        org.wiztools.restclient.ui.RESTViewImpl r0;
        org.wiztools.restclient.ui.reqbody.ReqBodyPanel $r1;

        r0 := @this: org.wiztools.restclient.ui.RESTViewImpl;

        $r1 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.reqbody.ReqBodyPanel jp_req_body>;

        interfaceinvoke $r1.<org.wiztools.restclient.ui.reqbody.ReqBodyPanel: void disableBody()>();

        return;
    }

    private void correctRequestURL()
    {
        org.wiztools.restclient.ui.RESTViewImpl r0;
        org.wiztools.restclient.ui.reqgo.ReqUrlGoPanel $r1, $r8;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r2, $r3, $r7;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.wiztools.restclient.ui.RESTViewImpl;

        $r1 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.reqgo.ReqUrlGoPanel jp_url_go>;

        $r2 = interfaceinvoke $r1.<org.wiztools.restclient.ui.reqgo.ReqUrlGoPanel: java.lang.String getUrlString()>();

        $z0 = staticinvoke <org.wiztools.commons.StringUtil: boolean isEmpty(java.lang.String)>($r2);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String)>("http://");

        if $z1 != 0 goto label2;

        $z2 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String)>("https://");

        if $z2 != 0 goto label2;

        $z3 = virtualinvoke $r3.<java.lang.String: boolean matches(java.lang.String)>("^[a-z]+://.*");

        if $z3 != 0 goto label2;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.reqgo.ReqUrlGoPanel jp_url_go>;

        interfaceinvoke $r8.<org.wiztools.restclient.ui.reqgo.ReqUrlGoPanel: void setUrlString(java.lang.String)>($r7);

     label2:
        return;
    }

    private java.util.List validateRequest(org.wiztools.restclient.bean.Request)
    {
        java.net.URL $r2;
        org.wiztools.restclient.ui.RESTViewImpl r3;
        org.wiztools.restclient.bean.ReqEntitySimple $r9;
        org.wiztools.restclient.bean.Request r1;
        java.util.ArrayList $r0;
        org.wiztools.restclient.ui.reqmethod.ReqMethodPanel $r6;
        java.util.List $r5;
        org.wiztools.restclient.ui.reqbody.ReqBodyPanel $r7;
        org.wiztools.restclient.bean.ReqEntity $r8;
        org.wiztools.restclient.ui.reqauth.ReqAuthPanel $r4;
        org.wiztools.restclient.bean.ContentType $r10;
        boolean $z0, $z1, $z2;

        r3 := @this: org.wiztools.restclient.ui.RESTViewImpl;

        r1 := @parameter0: org.wiztools.restclient.bean.Request;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = interfaceinvoke r1.<org.wiztools.restclient.bean.Request: java.net.URL getUrl()>();

        if $r2 != null goto label1;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>("URL is invalid.");

     label1:
        $r4 = r3.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.reqauth.ReqAuthPanel jp_req_auth>;

        $r5 = interfaceinvoke $r4.<org.wiztools.restclient.ui.reqauth.ReqAuthPanel: java.util.List validateIfFilled()>();

        $z0 = interfaceinvoke $r5.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        interfaceinvoke $r0.<java.util.List: boolean addAll(java.util.Collection)>($r5);

     label2:
        $r6 = r3.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.reqmethod.ReqMethodPanel jp_req_method>;

        $z1 = interfaceinvoke $r6.<org.wiztools.restclient.ui.reqmethod.ReqMethodPanel: boolean doesSelectedMethodSupportEntityBody()>();

        if $z1 == 0 goto label3;

        $r7 = r3.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.reqbody.ReqBodyPanel jp_req_body>;

        $r8 = interfaceinvoke $r7.<org.wiztools.restclient.ui.reqbody.ReqBodyPanel: org.wiztools.restclient.bean.ReqEntity getEntity()>();

        $z2 = $r8 instanceof org.wiztools.restclient.bean.ReqEntitySimple;

        if $z2 == 0 goto label3;

        if $r8 == null goto label3;

        $r9 = (org.wiztools.restclient.bean.ReqEntitySimple) $r8;

        $r10 = interfaceinvoke $r9.<org.wiztools.restclient.bean.ReqEntitySimple: org.wiztools.restclient.bean.ContentType getContentType()>();

        if $r10 != null goto label3;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>("Content type not set for body.");

     label3:
        return $r0;
    }

    public void clearUIRequest()
    {
        org.wiztools.restclient.ui.RESTViewImpl r0;
        org.wiztools.restclient.ui.TwoColumnTablePanel $r4, $r6;
        org.wiztools.restclient.ui.reqauth.ReqSSLPanel $r10;
        org.wiztools.restclient.ui.reqgo.ReqUrlGoPanel $r1;
        org.wiztools.restclient.ui.reqmethod.ReqMethodPanel $r2;
        org.wiztools.restclient.ui.reqbody.ReqBodyPanel $r7, $r8;
        org.wiztools.restclient.ui.reqetc.ReqEtcPanel $r11;
        org.wiztools.restclient.ui.reqtest.ReqTestPanel $r12;
        org.wiztools.restclient.ui.reqauth.ReqAuthPanel $r9;
        org.wiztools.commons.MultiValueMap $r3, $r5;

        r0 := @this: org.wiztools.restclient.ui.RESTViewImpl;

        $r1 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.reqgo.ReqUrlGoPanel jp_url_go>;

        interfaceinvoke $r1.<org.wiztools.restclient.ui.reqgo.ReqUrlGoPanel: void clear()>();

        $r2 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.reqmethod.ReqMethodPanel jp_req_method>;

        interfaceinvoke $r2.<org.wiztools.restclient.ui.reqmethod.ReqMethodPanel: void clear()>();

        $r4 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.TwoColumnTablePanel jp_2col_req_headers>;

        $r3 = <org.wiztools.commons.CollectionsUtil: org.wiztools.commons.MultiValueMap EMPTY_MULTI_VALUE_MAP>;

        virtualinvoke $r4.<org.wiztools.restclient.ui.TwoColumnTablePanel: void setData(org.wiztools.commons.MultiValueMap)>($r3);

        $r6 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.TwoColumnTablePanel jp_2col_req_cookies>;

        $r5 = <org.wiztools.commons.CollectionsUtil: org.wiztools.commons.MultiValueMap EMPTY_MULTI_VALUE_MAP>;

        virtualinvoke $r6.<org.wiztools.restclient.ui.TwoColumnTablePanel: void setData(org.wiztools.commons.MultiValueMap)>($r5);

        $r7 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.reqbody.ReqBodyPanel jp_req_body>;

        interfaceinvoke $r7.<org.wiztools.restclient.ui.reqbody.ReqBodyPanel: void clear()>();

        $r8 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.reqbody.ReqBodyPanel jp_req_body>;

        interfaceinvoke $r8.<org.wiztools.restclient.ui.reqbody.ReqBodyPanel: void disableBody()>();

        $r9 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.reqauth.ReqAuthPanel jp_req_auth>;

        interfaceinvoke $r9.<org.wiztools.restclient.ui.reqauth.ReqAuthPanel: void clear()>();

        $r10 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.reqauth.ReqSSLPanel jp_req_ssl>;

        interfaceinvoke $r10.<org.wiztools.restclient.ui.reqauth.ReqSSLPanel: void clear()>();

        $r11 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.reqetc.ReqEtcPanel jp_req_etc>;

        interfaceinvoke $r11.<org.wiztools.restclient.ui.reqetc.ReqEtcPanel: void clear()>();

        $r12 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.reqtest.ReqTestPanel jp_req_test>;

        interfaceinvoke $r12.<org.wiztools.restclient.ui.reqtest.ReqTestPanel: void clear()>();

        return;
    }

    public void setUIFromResponse(org.wiztools.restclient.bean.Response)
    {
        byte[] $r6, $r10;
        org.wiztools.restclient.ui.resbody.ResBodyPanel $r9;
        org.wiztools.restclient.ui.resheader.ResHeaderPanel $r4;
        org.wiztools.restclient.ui.RESTViewImpl r0;
        org.wiztools.restclient.ui.restest.ResTestPanel $r7;
        org.wiztools.restclient.ui.resstatus.ResStatusPanel $r2;
        org.wiztools.restclient.bean.Response r1;
        java.lang.String $r3;
        org.wiztools.restclient.bean.TestResult $r8;
        org.wiztools.restclient.bean.ContentType $r11;
        org.wiztools.commons.MultiValueMap $r5;

        r0 := @this: org.wiztools.restclient.ui.RESTViewImpl;

        r1 := @parameter0: org.wiztools.restclient.bean.Response;

        virtualinvoke r0.<org.wiztools.restclient.ui.RESTViewImpl: void clearUIResponse()>();

        $r2 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.resstatus.ResStatusPanel jp_res_status>;

        $r3 = interfaceinvoke r1.<org.wiztools.restclient.bean.Response: java.lang.String getStatusLine()>();

        interfaceinvoke $r2.<org.wiztools.restclient.ui.resstatus.ResStatusPanel: void setStatus(java.lang.String)>($r3);

        $r4 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.resheader.ResHeaderPanel jp_res_headers>;

        $r5 = interfaceinvoke r1.<org.wiztools.restclient.bean.Response: org.wiztools.commons.MultiValueMap getHeaders()>();

        interfaceinvoke $r4.<org.wiztools.restclient.ui.resheader.ResHeaderPanel: void setHeaders(org.wiztools.commons.MultiValueMap)>($r5);

        $r6 = interfaceinvoke r1.<org.wiztools.restclient.bean.Response: byte[] getResponseBody()>();

        if $r6 == null goto label1;

        $r9 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.resbody.ResBodyPanel jp_res_body>;

        $r10 = interfaceinvoke r1.<org.wiztools.restclient.bean.Response: byte[] getResponseBody()>();

        $r11 = interfaceinvoke r1.<org.wiztools.restclient.bean.Response: org.wiztools.restclient.bean.ContentType getContentType()>();

        interfaceinvoke $r9.<org.wiztools.restclient.ui.resbody.ResBodyPanel: void setBody(byte[],org.wiztools.restclient.bean.ContentType)>($r10, $r11);

     label1:
        $r7 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.restest.ResTestPanel jp_res_test>;

        $r8 = interfaceinvoke r1.<org.wiztools.restclient.bean.Response: org.wiztools.restclient.bean.TestResult getTestResult()>();

        interfaceinvoke $r7.<org.wiztools.restclient.ui.restest.ResTestPanel: void setTestResult(org.wiztools.restclient.bean.TestResult)>($r8);

        return;
    }

    public void setUIFromRequest(org.wiztools.restclient.bean.Request)
    {
        org.wiztools.restclient.bean.SSLReq $r14, $r25;
        org.wiztools.restclient.ui.RESTViewImpl r0;
        java.net.URL $r3;
        org.wiztools.restclient.ui.reqgo.ReqUrlGoPanel $r2;
        org.wiztools.commons.MultiValueMapArrayList $r10;
        java.net.HttpCookie r32;
        org.wiztools.restclient.ui.reqtest.ReqTestPanel $r19;
        org.wiztools.restclient.ui.reqauth.ReqAuthPanel $r26;
        boolean $z0, $z1, $z2, $z3;
        java.util.List $r9;
        org.wiztools.restclient.ui.reqbody.ReqBodyPanel $r29, $r30;
        org.wiztools.restclient.ui.TwoColumnTablePanel $r8, $r12;
        org.wiztools.restclient.bean.Request r1;
        org.wiztools.restclient.bean.Auth $r27, $r35;
        org.wiztools.restclient.bean.HTTPVersion $r15, $r16, $r17, $r18, $r20, $r22;
        java.lang.String $r4, $r33, $r34, $r38, $r39;
        org.wiztools.restclient.bean.HTTPMethod $r5;
        java.util.Iterator $r11;
        org.wiztools.restclient.ui.reqauth.ReqSSLPanel $r24;
        org.wiztools.restclient.ui.reqmethod.ReqMethodPanel $r6, $r28;
        org.wiztools.restclient.ui.reqetc.ReqEtcPanel $r21, $r23, $r36, $r37;
        org.wiztools.restclient.bean.ReqEntity $r13;
        java.lang.Object $r31;
        org.wiztools.commons.MultiValueMap $r7;

        r0 := @this: org.wiztools.restclient.ui.RESTViewImpl;

        r1 := @parameter0: org.wiztools.restclient.bean.Request;

        virtualinvoke r0.<org.wiztools.restclient.ui.RESTViewImpl: void clearUIRequest()>();

        $r2 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.reqgo.ReqUrlGoPanel jp_url_go>;

        $r3 = interfaceinvoke r1.<org.wiztools.restclient.bean.Request: java.net.URL getUrl()>();

        $r4 = virtualinvoke $r3.<java.net.URL: java.lang.String toString()>();

        interfaceinvoke $r2.<org.wiztools.restclient.ui.reqgo.ReqUrlGoPanel: void setUrlString(java.lang.String)>($r4);

        $r5 = interfaceinvoke r1.<org.wiztools.restclient.bean.Request: org.wiztools.restclient.bean.HTTPMethod getMethod()>();

        $r6 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.reqmethod.ReqMethodPanel jp_req_method>;

        interfaceinvoke $r6.<org.wiztools.restclient.ui.reqmethod.ReqMethodPanel: void setSelectedMethod(org.wiztools.restclient.bean.HTTPMethod)>($r5);

        $r7 = interfaceinvoke r1.<org.wiztools.restclient.bean.Request: org.wiztools.commons.MultiValueMap getHeaders()>();

        $r8 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.TwoColumnTablePanel jp_2col_req_headers>;

        virtualinvoke $r8.<org.wiztools.restclient.ui.TwoColumnTablePanel: void setData(org.wiztools.commons.MultiValueMap)>($r7);

        $r9 = interfaceinvoke r1.<org.wiztools.restclient.bean.Request: java.util.List getCookies()>();

        $r10 = new org.wiztools.commons.MultiValueMapArrayList;

        specialinvoke $r10.<org.wiztools.commons.MultiValueMapArrayList: void <init>()>();

        $r11 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label02;

        $r31 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r32 = (java.net.HttpCookie) $r31;

        $r33 = virtualinvoke r32.<java.net.HttpCookie: java.lang.String getName()>();

        $r34 = virtualinvoke r32.<java.net.HttpCookie: java.lang.String getValue()>();

        interfaceinvoke $r10.<org.wiztools.commons.MultiValueMap: java.util.Collection put(java.lang.Object,java.lang.Object)>($r33, $r34);

        goto label01;

     label02:
        $r12 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.TwoColumnTablePanel jp_2col_req_cookies>;

        virtualinvoke $r12.<org.wiztools.restclient.ui.TwoColumnTablePanel: void setData(org.wiztools.commons.MultiValueMap)>($r10);

        $r13 = interfaceinvoke r1.<org.wiztools.restclient.bean.Request: org.wiztools.restclient.bean.ReqEntity getBody()>();

        if $r13 == null goto label04;

        $r28 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.reqmethod.ReqMethodPanel jp_req_method>;

        $z1 = interfaceinvoke $r28.<org.wiztools.restclient.ui.reqmethod.ReqMethodPanel: boolean doesSelectedMethodSupportEntityBody()>();

        if $z1 == 0 goto label03;

        $r30 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.reqbody.ReqBodyPanel jp_req_body>;

        interfaceinvoke $r30.<org.wiztools.restclient.ui.reqbody.ReqBodyPanel: void enableBody()>();

     label03:
        $r29 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.reqbody.ReqBodyPanel jp_req_body>;

        interfaceinvoke $r29.<org.wiztools.restclient.ui.reqbody.ReqBodyPanel: void setEntity(org.wiztools.restclient.bean.ReqEntity)>($r13);

     label04:
        $r35 = interfaceinvoke r1.<org.wiztools.restclient.bean.Request: org.wiztools.restclient.bean.Auth getAuth()>();

        if $r35 == null goto label05;

        $r26 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.reqauth.ReqAuthPanel jp_req_auth>;

        $r27 = interfaceinvoke r1.<org.wiztools.restclient.bean.Request: org.wiztools.restclient.bean.Auth getAuth()>();

        interfaceinvoke $r26.<org.wiztools.restclient.ui.reqauth.ReqAuthPanel: void setAuth(org.wiztools.restclient.bean.Auth)>($r27);

     label05:
        $r14 = interfaceinvoke r1.<org.wiztools.restclient.bean.Request: org.wiztools.restclient.bean.SSLReq getSslReq()>();

        if $r14 == null goto label06;

        $r24 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.reqauth.ReqSSLPanel jp_req_ssl>;

        $r25 = interfaceinvoke r1.<org.wiztools.restclient.bean.Request: org.wiztools.restclient.bean.SSLReq getSslReq()>();

        interfaceinvoke $r24.<org.wiztools.restclient.ui.reqauth.ReqSSLPanel: void setSslReq(org.wiztools.restclient.bean.SSLReq)>($r25);

     label06:
        $r15 = interfaceinvoke r1.<org.wiztools.restclient.bean.Request: org.wiztools.restclient.bean.HTTPVersion getHttpVersion()>();

        $r16 = <org.wiztools.restclient.bean.HTTPVersion: org.wiztools.restclient.bean.HTTPVersion HTTP_1_1>;

        if $r15 != $r16 goto label07;

        $r23 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.reqetc.ReqEtcPanel jp_req_etc>;

        $r22 = <org.wiztools.restclient.bean.HTTPVersion: org.wiztools.restclient.bean.HTTPVersion HTTP_1_1>;

        interfaceinvoke $r23.<org.wiztools.restclient.ui.reqetc.ReqEtcPanel: void setHttpVersion(org.wiztools.restclient.bean.HTTPVersion)>($r22);

        goto label08;

     label07:
        $r17 = interfaceinvoke r1.<org.wiztools.restclient.bean.Request: org.wiztools.restclient.bean.HTTPVersion getHttpVersion()>();

        $r18 = <org.wiztools.restclient.bean.HTTPVersion: org.wiztools.restclient.bean.HTTPVersion HTTP_1_0>;

        if $r17 != $r18 goto label08;

        $r21 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.reqetc.ReqEtcPanel jp_req_etc>;

        $r20 = <org.wiztools.restclient.bean.HTTPVersion: org.wiztools.restclient.bean.HTTPVersion HTTP_1_0>;

        interfaceinvoke $r21.<org.wiztools.restclient.ui.reqetc.ReqEtcPanel: void setHttpVersion(org.wiztools.restclient.bean.HTTPVersion)>($r20);

     label08:
        $r36 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.reqetc.ReqEtcPanel jp_req_etc>;

        $z2 = interfaceinvoke r1.<org.wiztools.restclient.bean.Request: boolean isFollowRedirect()>();

        interfaceinvoke $r36.<org.wiztools.restclient.ui.reqetc.ReqEtcPanel: void setFollowRedirects(boolean)>($z2);

        $r37 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.reqetc.ReqEtcPanel jp_req_etc>;

        $z3 = interfaceinvoke r1.<org.wiztools.restclient.bean.Request: boolean isIgnoreResponseBody()>();

        interfaceinvoke $r37.<org.wiztools.restclient.ui.reqetc.ReqEtcPanel: void setIgnoreResponseBody(boolean)>($z3);

        $r19 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.reqtest.ReqTestPanel jp_req_test>;

        $r38 = interfaceinvoke r1.<org.wiztools.restclient.bean.Request: java.lang.String getTestScript()>();

        if $r38 != null goto label09;

        $r39 = "";

        goto label10;

     label09:
        $r39 = interfaceinvoke r1.<org.wiztools.restclient.bean.Request: java.lang.String getTestScript()>();

     label10:
        interfaceinvoke $r19.<org.wiztools.restclient.ui.reqtest.ReqTestPanel: void setTestScript(java.lang.String)>($r39);

        return;
    }

    public void setStatusMessage(java.lang.String)
    {
        java.lang.String r1;
        org.wiztools.restclient.ui.RESTViewImpl r0;
        org.wiztools.restclient.ui.StatusBarPanel $r2;

        r0 := @this: org.wiztools.restclient.ui.RESTViewImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.StatusBarPanel jp_status_bar>;

        interfaceinvoke $r2.<org.wiztools.restclient.ui.StatusBarPanel: void setStatus(java.lang.String)>(r1);

        return;
    }

    public org.wiztools.restclient.bean.Request getLastRequest()
    {
        org.wiztools.restclient.bean.Request $r2;
        org.wiztools.restclient.ui.RESTViewImpl r0;
        org.wiztools.restclient.ui.history.HistoryManager $r1;

        r0 := @this: org.wiztools.restclient.ui.RESTViewImpl;

        $r1 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.history.HistoryManager historyManager>;

        $r2 = interfaceinvoke $r1.<org.wiztools.restclient.ui.history.HistoryManager: org.wiztools.restclient.bean.Request lastRequest()>();

        return $r2;
    }

    public org.wiztools.restclient.bean.Response getLastResponse()
    {
        org.wiztools.restclient.bean.Response $r1;
        org.wiztools.restclient.ui.RESTViewImpl r0;

        r0 := @this: org.wiztools.restclient.ui.RESTViewImpl;

        $r1 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.bean.Response lastResponse>;

        return $r1;
    }

    public java.lang.String getUrl()
    {
        org.wiztools.restclient.ui.reqgo.ReqUrlGoPanel $r1;
        java.lang.String $r2;
        org.wiztools.restclient.ui.RESTViewImpl r0;

        r0 := @this: org.wiztools.restclient.ui.RESTViewImpl;

        $r1 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.reqgo.ReqUrlGoPanel jp_url_go>;

        $r2 = interfaceinvoke $r1.<org.wiztools.restclient.ui.reqgo.ReqUrlGoPanel: java.lang.String getUrlString()>();

        return $r2;
    }

    public void setUrl(java.lang.String)
    {
        java.lang.String r1;
        org.wiztools.restclient.ui.reqgo.ReqUrlGoPanel $r2;
        org.wiztools.restclient.ui.RESTViewImpl r0;

        r0 := @this: org.wiztools.restclient.ui.RESTViewImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.reqgo.ReqUrlGoPanel jp_url_go>;

        interfaceinvoke $r2.<org.wiztools.restclient.ui.reqgo.ReqUrlGoPanel: void setUrlString(java.lang.String)>(r1);

        return;
    }

    public void runClonedRequestTest(org.wiztools.restclient.bean.Request, org.wiztools.restclient.bean.Response)
    {
        org.wiztools.restclient.ui.RESTViewImpl r0;
        org.wiztools.restclient.ui.reqtest.ReqTestPanel $r3;
        org.wiztools.restclient.bean.Request r1;
        org.wiztools.restclient.bean.Response r2;

        r0 := @this: org.wiztools.restclient.ui.RESTViewImpl;

        r1 := @parameter0: org.wiztools.restclient.bean.Request;

        r2 := @parameter1: org.wiztools.restclient.bean.Response;

        $r3 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.reqtest.ReqTestPanel jp_req_test>;

        interfaceinvoke $r3.<org.wiztools.restclient.ui.reqtest.ReqTestPanel: void runClonedRequestTest(org.wiztools.restclient.bean.Request,org.wiztools.restclient.bean.Response)>(r1, r2);

        return;
    }

    public java.awt.Font getTextAreaFont()
    {
        org.wiztools.restclient.ui.RESTViewImpl r0;
        org.wiztools.restclient.ui.reqbody.ReqBodyPanel $r1;
        java.awt.Font $r3;
        org.wiztools.restclient.ui.FontableEditor $r2;

        r0 := @this: org.wiztools.restclient.ui.RESTViewImpl;

        $r1 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.reqbody.ReqBodyPanel jp_req_body>;

        $r2 = (org.wiztools.restclient.ui.FontableEditor) $r1;

        $r3 = interfaceinvoke $r2.<org.wiztools.restclient.ui.FontableEditor: java.awt.Font getEditorFont()>();

        return $r3;
    }

    public void setTextAreaFont(java.awt.Font)
    {
        org.wiztools.restclient.ui.resbody.ResBodyPanel $r4;
        org.wiztools.restclient.ui.RESTViewImpl r0;
        org.wiztools.restclient.ui.reqbody.ReqBodyPanel $r1;
        java.awt.Font r2;
        org.wiztools.restclient.ui.FontableEditor $r3, $r5;

        r0 := @this: org.wiztools.restclient.ui.RESTViewImpl;

        r2 := @parameter0: java.awt.Font;

        $r1 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.reqbody.ReqBodyPanel jp_req_body>;

        $r3 = (org.wiztools.restclient.ui.FontableEditor) $r1;

        interfaceinvoke $r3.<org.wiztools.restclient.ui.FontableEditor: void setEditorFont(java.awt.Font)>(r2);

        $r4 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.resbody.ResBodyPanel jp_res_body>;

        $r5 = (org.wiztools.restclient.ui.FontableEditor) $r4;

        interfaceinvoke $r5.<org.wiztools.restclient.ui.FontableEditor: void setEditorFont(java.awt.Font)>(r2);

        return;
    }

    public java.awt.Container getContainer()
    {
        org.wiztools.restclient.ui.RESTViewImpl r0;

        r0 := @this: org.wiztools.restclient.ui.RESTViewImpl;

        return r0;
    }

    static void access$000(org.wiztools.restclient.ui.RESTViewImpl)
    {
        org.wiztools.restclient.ui.RESTViewImpl r0;

        r0 := @parameter0: org.wiztools.restclient.ui.RESTViewImpl;

        specialinvoke r0.<org.wiztools.restclient.ui.RESTViewImpl: void jb_requestActionPerformed()>();

        return;
    }

    static org.wiztools.restclient.ui.RESTView access$100(org.wiztools.restclient.ui.RESTViewImpl)
    {
        org.wiztools.restclient.ui.RESTView $r1;
        org.wiztools.restclient.ui.RESTViewImpl r0;

        r0 := @parameter0: org.wiztools.restclient.ui.RESTViewImpl;

        $r1 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.RESTView view>;

        return $r1;
    }

    static org.wiztools.restclient.ui.StatusBarPanel access$200(org.wiztools.restclient.ui.RESTViewImpl)
    {
        org.wiztools.restclient.ui.RESTViewImpl r0;
        org.wiztools.restclient.ui.StatusBarPanel $r1;

        r0 := @parameter0: org.wiztools.restclient.ui.RESTViewImpl;

        $r1 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.StatusBarPanel jp_status_bar>;

        return $r1;
    }

    static org.wiztools.restclient.ui.reqgo.ReqUrlGoPanel access$300(org.wiztools.restclient.ui.RESTViewImpl)
    {
        org.wiztools.restclient.ui.reqgo.ReqUrlGoPanel $r1;
        org.wiztools.restclient.ui.RESTViewImpl r0;

        r0 := @parameter0: org.wiztools.restclient.ui.RESTViewImpl;

        $r1 = r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.ui.reqgo.ReqUrlGoPanel jp_url_go>;

        return $r1;
    }

    static org.wiztools.restclient.bean.Response access$402(org.wiztools.restclient.ui.RESTViewImpl, org.wiztools.restclient.bean.Response)
    {
        org.wiztools.restclient.bean.Response r1;
        org.wiztools.restclient.ui.RESTViewImpl r0;

        r0 := @parameter0: org.wiztools.restclient.ui.RESTViewImpl;

        r1 := @parameter1: org.wiztools.restclient.bean.Response;

        r0.<org.wiztools.restclient.ui.RESTViewImpl: org.wiztools.restclient.bean.Response lastResponse> = r1;

        return r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;

        $r0 = class "Lorg/wiztools/restclient/ui/RESTViewImpl;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <org.wiztools.restclient.ui.RESTViewImpl: java.util.logging.Logger LOG> = $r2;

        return;
    }
}
