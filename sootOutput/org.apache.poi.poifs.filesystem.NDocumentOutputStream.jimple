public final class org.apache.poi.poifs.filesystem.NDocumentOutputStream extends java.io.OutputStream
{
    private int _document_size;
    private boolean _closed;
    private org.apache.poi.poifs.filesystem.NPOIFSDocument _document;
    private org.apache.poi.poifs.property.DocumentProperty _property;
    private java.io.ByteArrayOutputStream _buffer;
    private org.apache.poi.poifs.filesystem.NPOIFSStream _stream;
    private java.io.OutputStream _stream_output;

    public void <init>(org.apache.poi.poifs.filesystem.DocumentEntry) throws java.io.IOException
    {
        org.apache.poi.poifs.property.Property $r4;
        java.io.ByteArrayOutputStream $r1;
        org.apache.poi.poifs.property.DocumentProperty $r5;
        org.apache.poi.poifs.filesystem.DocumentNode $r3, $r7;
        java.lang.String $r14;
        org.apache.poi.poifs.filesystem.DocumentEntry r2;
        boolean $z0;
        org.apache.poi.poifs.filesystem.NPOIFSDocument $r6, $r8;
        org.apache.poi.poifs.filesystem.NDocumentOutputStream r0;
        java.io.IOException $r9;
        java.lang.StringBuilder $r10, $r11, $r12, $r13;

        r0 := @this: org.apache.poi.poifs.filesystem.NDocumentOutputStream;

        r2 := @parameter0: org.apache.poi.poifs.filesystem.DocumentEntry;

        specialinvoke r0.<java.io.OutputStream: void <init>()>();

        $r1 = new java.io.ByteArrayOutputStream;

        specialinvoke $r1.<java.io.ByteArrayOutputStream: void <init>(int)>(4096);

        r0.<org.apache.poi.poifs.filesystem.NDocumentOutputStream: java.io.ByteArrayOutputStream _buffer> = $r1;

        $z0 = r2 instanceof org.apache.poi.poifs.filesystem.DocumentNode;

        if $z0 != 0 goto label1;

        $r9 = new java.io.IOException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot open internal document storage, ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not a Document Node");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.io.IOException: void <init>(java.lang.String)>($r14);

        throw $r9;

     label1:
        r0.<org.apache.poi.poifs.filesystem.NDocumentOutputStream: int _document_size> = 0;

        r0.<org.apache.poi.poifs.filesystem.NDocumentOutputStream: boolean _closed> = 0;

        $r3 = (org.apache.poi.poifs.filesystem.DocumentNode) r2;

        $r4 = virtualinvoke $r3.<org.apache.poi.poifs.filesystem.DocumentNode: org.apache.poi.poifs.property.Property getProperty()>();

        $r5 = (org.apache.poi.poifs.property.DocumentProperty) $r4;

        r0.<org.apache.poi.poifs.filesystem.NDocumentOutputStream: org.apache.poi.poifs.property.DocumentProperty _property> = $r5;

        $r6 = new org.apache.poi.poifs.filesystem.NPOIFSDocument;

        $r7 = (org.apache.poi.poifs.filesystem.DocumentNode) r2;

        specialinvoke $r6.<org.apache.poi.poifs.filesystem.NPOIFSDocument: void <init>(org.apache.poi.poifs.filesystem.DocumentNode)>($r7);

        r0.<org.apache.poi.poifs.filesystem.NDocumentOutputStream: org.apache.poi.poifs.filesystem.NPOIFSDocument _document> = $r6;

        $r8 = r0.<org.apache.poi.poifs.filesystem.NDocumentOutputStream: org.apache.poi.poifs.filesystem.NPOIFSDocument _document>;

        virtualinvoke $r8.<org.apache.poi.poifs.filesystem.NPOIFSDocument: void free()>();

        return;
    }

    public void <init>(org.apache.poi.poifs.filesystem.DirectoryEntry, java.lang.String) throws java.io.IOException
    {
        byte[] $r5;
        org.apache.poi.poifs.property.Property $r8;
        java.io.ByteArrayOutputStream $r1;
        org.apache.poi.poifs.property.DocumentProperty $r9;
        org.apache.poi.poifs.filesystem.DocumentNode $r7, $r11;
        java.io.ByteArrayInputStream $r4;
        java.lang.String r3, $r17;
        org.apache.poi.poifs.filesystem.DocumentEntry $r6;
        boolean $z0;
        org.apache.poi.poifs.filesystem.NPOIFSDocument $r10;
        org.apache.poi.poifs.filesystem.NDocumentOutputStream r0;
        org.apache.poi.poifs.filesystem.DirectoryEntry r2;
        java.io.IOException $r12;
        java.lang.StringBuilder $r13, $r14, $r15, $r16;

        r0 := @this: org.apache.poi.poifs.filesystem.NDocumentOutputStream;

        r2 := @parameter0: org.apache.poi.poifs.filesystem.DirectoryEntry;

        r3 := @parameter1: java.lang.String;

        specialinvoke r0.<java.io.OutputStream: void <init>()>();

        $r1 = new java.io.ByteArrayOutputStream;

        specialinvoke $r1.<java.io.ByteArrayOutputStream: void <init>(int)>(4096);

        r0.<org.apache.poi.poifs.filesystem.NDocumentOutputStream: java.io.ByteArrayOutputStream _buffer> = $r1;

        $z0 = r2 instanceof org.apache.poi.poifs.filesystem.DirectoryNode;

        if $z0 != 0 goto label1;

        $r12 = new java.io.IOException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot open internal directory storage, ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not a Directory Node");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.io.IOException: void <init>(java.lang.String)>($r17);

        throw $r12;

     label1:
        r0.<org.apache.poi.poifs.filesystem.NDocumentOutputStream: int _document_size> = 0;

        r0.<org.apache.poi.poifs.filesystem.NDocumentOutputStream: boolean _closed> = 0;

        $r4 = new java.io.ByteArrayInputStream;

        $r5 = newarray (byte)[0];

        specialinvoke $r4.<java.io.ByteArrayInputStream: void <init>(byte[])>($r5);

        $r6 = interfaceinvoke r2.<org.apache.poi.poifs.filesystem.DirectoryEntry: org.apache.poi.poifs.filesystem.DocumentEntry createDocument(java.lang.String,java.io.InputStream)>(r3, $r4);

        $r7 = (org.apache.poi.poifs.filesystem.DocumentNode) $r6;

        $r8 = virtualinvoke $r7.<org.apache.poi.poifs.filesystem.DocumentNode: org.apache.poi.poifs.property.Property getProperty()>();

        $r9 = (org.apache.poi.poifs.property.DocumentProperty) $r8;

        r0.<org.apache.poi.poifs.filesystem.NDocumentOutputStream: org.apache.poi.poifs.property.DocumentProperty _property> = $r9;

        $r10 = new org.apache.poi.poifs.filesystem.NPOIFSDocument;

        $r11 = (org.apache.poi.poifs.filesystem.DocumentNode) $r6;

        specialinvoke $r10.<org.apache.poi.poifs.filesystem.NPOIFSDocument: void <init>(org.apache.poi.poifs.filesystem.DocumentNode)>($r11);

        r0.<org.apache.poi.poifs.filesystem.NDocumentOutputStream: org.apache.poi.poifs.filesystem.NPOIFSDocument _document> = $r10;

        return;
    }

    private void dieIfClosed() throws java.io.IOException
    {
        java.io.IOException $r1;
        org.apache.poi.poifs.filesystem.NDocumentOutputStream r0;
        boolean $z0;

        r0 := @this: org.apache.poi.poifs.filesystem.NDocumentOutputStream;

        $z0 = r0.<org.apache.poi.poifs.filesystem.NDocumentOutputStream: boolean _closed>;

        if $z0 == 0 goto label1;

        $r1 = new java.io.IOException;

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>("cannot perform requested operation on a closed stream");

        throw $r1;

     label1:
        return;
    }

    private void checkBufferSize() throws java.io.IOException
    {
        byte[] $r3;
        java.io.ByteArrayOutputStream $r1, $r2;
        org.apache.poi.poifs.filesystem.NDocumentOutputStream r0;
        int $i0, $i1;

        r0 := @this: org.apache.poi.poifs.filesystem.NDocumentOutputStream;

        $r1 = r0.<org.apache.poi.poifs.filesystem.NDocumentOutputStream: java.io.ByteArrayOutputStream _buffer>;

        $i0 = virtualinvoke $r1.<java.io.ByteArrayOutputStream: int size()>();

        if $i0 <= 4096 goto label1;

        $r2 = r0.<org.apache.poi.poifs.filesystem.NDocumentOutputStream: java.io.ByteArrayOutputStream _buffer>;

        $r3 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        r0.<org.apache.poi.poifs.filesystem.NDocumentOutputStream: java.io.ByteArrayOutputStream _buffer> = null;

        $i1 = lengthof $r3;

        virtualinvoke r0.<org.apache.poi.poifs.filesystem.NDocumentOutputStream: void write(byte[],int,int)>($r3, 0, $i1);

     label1:
        return;
    }

    public void write(int) throws java.io.IOException
    {
        byte[] $r2;
        java.io.ByteArrayOutputStream $r1, $r3;
        byte $b1;
        org.apache.poi.poifs.filesystem.NDocumentOutputStream r0;
        int i0;

        r0 := @this: org.apache.poi.poifs.filesystem.NDocumentOutputStream;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.poi.poifs.filesystem.NDocumentOutputStream: void dieIfClosed()>();

        $r1 = r0.<org.apache.poi.poifs.filesystem.NDocumentOutputStream: java.io.ByteArrayOutputStream _buffer>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.poi.poifs.filesystem.NDocumentOutputStream: java.io.ByteArrayOutputStream _buffer>;

        virtualinvoke $r3.<java.io.ByteArrayOutputStream: void write(int)>(i0);

        specialinvoke r0.<org.apache.poi.poifs.filesystem.NDocumentOutputStream: void checkBufferSize()>();

        goto label2;

     label1:
        $r2 = newarray (byte)[1];

        $b1 = (byte) i0;

        $r2[0] = $b1;

        virtualinvoke r0.<org.apache.poi.poifs.filesystem.NDocumentOutputStream: void write(byte[])>($r2);

     label2:
        return;
    }

    public void write(byte[]) throws java.io.IOException
    {
        byte[] r2;
        java.io.ByteArrayOutputStream $r1, $r3;
        org.apache.poi.poifs.filesystem.NDocumentOutputStream r0;
        int $i0;

        r0 := @this: org.apache.poi.poifs.filesystem.NDocumentOutputStream;

        r2 := @parameter0: byte[];

        specialinvoke r0.<org.apache.poi.poifs.filesystem.NDocumentOutputStream: void dieIfClosed()>();

        $r1 = r0.<org.apache.poi.poifs.filesystem.NDocumentOutputStream: java.io.ByteArrayOutputStream _buffer>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.poi.poifs.filesystem.NDocumentOutputStream: java.io.ByteArrayOutputStream _buffer>;

        virtualinvoke $r3.<java.io.ByteArrayOutputStream: void write(byte[])>(r2);

        specialinvoke r0.<org.apache.poi.poifs.filesystem.NDocumentOutputStream: void checkBufferSize()>();

        goto label2;

     label1:
        $i0 = lengthof r2;

        virtualinvoke r0.<org.apache.poi.poifs.filesystem.NDocumentOutputStream: void write(byte[],int,int)>(r2, 0, $i0);

     label2:
        return;
    }

    public void write(byte[], int, int) throws java.io.IOException
    {
        java.io.OutputStream $r4, $r9;
        byte[] r3;
        java.io.ByteArrayOutputStream $r1, $r10;
        org.apache.poi.poifs.filesystem.NPOIFSDocument $r6;
        org.apache.poi.poifs.filesystem.NDocumentOutputStream r0;
        org.apache.poi.poifs.filesystem.NPOIFSFileSystem $r7;
        int i0, i1, $i2, $i3;
        org.apache.poi.poifs.filesystem.NPOIFSStream $r2, $r5, $r8;

        r0 := @this: org.apache.poi.poifs.filesystem.NDocumentOutputStream;

        r3 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<org.apache.poi.poifs.filesystem.NDocumentOutputStream: void dieIfClosed()>();

        $r1 = r0.<org.apache.poi.poifs.filesystem.NDocumentOutputStream: java.io.ByteArrayOutputStream _buffer>;

        if $r1 == null goto label1;

        $r10 = r0.<org.apache.poi.poifs.filesystem.NDocumentOutputStream: java.io.ByteArrayOutputStream _buffer>;

        virtualinvoke $r10.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r3, i0, i1);

        specialinvoke r0.<org.apache.poi.poifs.filesystem.NDocumentOutputStream: void checkBufferSize()>();

        goto label3;

     label1:
        $r2 = r0.<org.apache.poi.poifs.filesystem.NDocumentOutputStream: org.apache.poi.poifs.filesystem.NPOIFSStream _stream>;

        if $r2 != null goto label2;

        $r5 = new org.apache.poi.poifs.filesystem.NPOIFSStream;

        $r6 = r0.<org.apache.poi.poifs.filesystem.NDocumentOutputStream: org.apache.poi.poifs.filesystem.NPOIFSDocument _document>;

        $r7 = virtualinvoke $r6.<org.apache.poi.poifs.filesystem.NPOIFSDocument: org.apache.poi.poifs.filesystem.NPOIFSFileSystem getFileSystem()>();

        specialinvoke $r5.<org.apache.poi.poifs.filesystem.NPOIFSStream: void <init>(org.apache.poi.poifs.filesystem.BlockStore)>($r7);

        r0.<org.apache.poi.poifs.filesystem.NDocumentOutputStream: org.apache.poi.poifs.filesystem.NPOIFSStream _stream> = $r5;

        $r8 = r0.<org.apache.poi.poifs.filesystem.NDocumentOutputStream: org.apache.poi.poifs.filesystem.NPOIFSStream _stream>;

        $r9 = virtualinvoke $r8.<org.apache.poi.poifs.filesystem.NPOIFSStream: java.io.OutputStream getOutputStream()>();

        r0.<org.apache.poi.poifs.filesystem.NDocumentOutputStream: java.io.OutputStream _stream_output> = $r9;

     label2:
        $r4 = r0.<org.apache.poi.poifs.filesystem.NDocumentOutputStream: java.io.OutputStream _stream_output>;

        virtualinvoke $r4.<java.io.OutputStream: void write(byte[],int,int)>(r3, i0, i1);

        $i2 = r0.<org.apache.poi.poifs.filesystem.NDocumentOutputStream: int _document_size>;

        $i3 = $i2 + i1;

        r0.<org.apache.poi.poifs.filesystem.NDocumentOutputStream: int _document_size> = $i3;

     label3:
        return;
    }

    public void close() throws java.io.IOException
    {
        java.io.OutputStream $r2;
        byte[] $r9;
        java.io.ByteArrayOutputStream $r1, $r7;
        org.apache.poi.poifs.filesystem.NPOIFSDocument $r8;
        org.apache.poi.poifs.filesystem.NDocumentOutputStream r0;
        org.apache.poi.poifs.property.DocumentProperty $r3, $r5;
        java.io.ByteArrayInputStream $r6;
        int $i0, $i1;
        org.apache.poi.poifs.filesystem.NPOIFSStream $r4;

        r0 := @this: org.apache.poi.poifs.filesystem.NDocumentOutputStream;

        $r1 = r0.<org.apache.poi.poifs.filesystem.NDocumentOutputStream: java.io.ByteArrayOutputStream _buffer>;

        if $r1 == null goto label1;

        $r8 = r0.<org.apache.poi.poifs.filesystem.NDocumentOutputStream: org.apache.poi.poifs.filesystem.NPOIFSDocument _document>;

        $r6 = new java.io.ByteArrayInputStream;

        $r7 = r0.<org.apache.poi.poifs.filesystem.NDocumentOutputStream: java.io.ByteArrayOutputStream _buffer>;

        $r9 = virtualinvoke $r7.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r6.<java.io.ByteArrayInputStream: void <init>(byte[])>($r9);

        virtualinvoke $r8.<org.apache.poi.poifs.filesystem.NPOIFSDocument: void replaceContents(java.io.InputStream)>($r6);

        goto label2;

     label1:
        $r2 = r0.<org.apache.poi.poifs.filesystem.NDocumentOutputStream: java.io.OutputStream _stream_output>;

        virtualinvoke $r2.<java.io.OutputStream: void close()>();

        $r3 = r0.<org.apache.poi.poifs.filesystem.NDocumentOutputStream: org.apache.poi.poifs.property.DocumentProperty _property>;

        $i0 = r0.<org.apache.poi.poifs.filesystem.NDocumentOutputStream: int _document_size>;

        virtualinvoke $r3.<org.apache.poi.poifs.property.DocumentProperty: void updateSize(int)>($i0);

        $r5 = r0.<org.apache.poi.poifs.filesystem.NDocumentOutputStream: org.apache.poi.poifs.property.DocumentProperty _property>;

        $r4 = r0.<org.apache.poi.poifs.filesystem.NDocumentOutputStream: org.apache.poi.poifs.filesystem.NPOIFSStream _stream>;

        $i1 = virtualinvoke $r4.<org.apache.poi.poifs.filesystem.NPOIFSStream: int getStartBlock()>();

        virtualinvoke $r5.<org.apache.poi.poifs.property.DocumentProperty: void setStartBlock(int)>($i1);

     label2:
        r0.<org.apache.poi.poifs.filesystem.NDocumentOutputStream: boolean _closed> = 1;

        return;
    }
}
