public class org.codehaus.groovy.control.io.FileReaderSource extends org.codehaus.groovy.control.io.AbstractReaderSource
{
    private java.io.File file;
    private final java.nio.charset.Charset UTF8;

    public void <init>(java.io.File, org.codehaus.groovy.control.CompilerConfiguration)
    {
        org.codehaus.groovy.control.io.FileReaderSource r0;
        java.nio.charset.Charset $r2;
        org.codehaus.groovy.control.CompilerConfiguration r1;
        java.io.File r3;

        r0 := @this: org.codehaus.groovy.control.io.FileReaderSource;

        r3 := @parameter0: java.io.File;

        r1 := @parameter1: org.codehaus.groovy.control.CompilerConfiguration;

        specialinvoke r0.<org.codehaus.groovy.control.io.AbstractReaderSource: void <init>(org.codehaus.groovy.control.CompilerConfiguration)>(r1);

        $r2 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-8");

        r0.<org.codehaus.groovy.control.io.FileReaderSource: java.nio.charset.Charset UTF8> = $r2;

        r0.<org.codehaus.groovy.control.io.FileReaderSource: java.io.File file> = r3;

        return;
    }

    public java.io.Reader getReader() throws java.io.IOException
    {
        java.io.BufferedInputStream $r4;
        java.nio.charset.Charset $r3, $r7;
        int $i0, $i1, $i2;
        java.lang.String $r2, $r8, $r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6;
        org.codehaus.groovy.control.io.FileReaderSource r0;
        java.io.IOException $r10;
        java.io.FileInputStream $r5;
        org.codehaus.groovy.control.CompilerConfiguration $r1;
        java.io.InputStreamReader $r11;
        java.io.File $r6;

        r0 := @this: org.codehaus.groovy.control.io.FileReaderSource;

        $r1 = r0.<org.codehaus.groovy.control.io.FileReaderSource: org.codehaus.groovy.control.CompilerConfiguration configuration>;

        $r2 = virtualinvoke $r1.<org.codehaus.groovy.control.CompilerConfiguration: java.lang.String getSourceEncoding()>();

        $r3 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>($r2);

        $r4 = new java.io.BufferedInputStream;

        $r5 = new java.io.FileInputStream;

        $r6 = r0.<org.codehaus.groovy.control.io.FileReaderSource: java.io.File file>;

        specialinvoke $r5.<java.io.FileInputStream: void <init>(java.io.File)>($r6);

        specialinvoke $r4.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r5);

        $r7 = r0.<org.codehaus.groovy.control.io.FileReaderSource: java.nio.charset.Charset UTF8>;

        $r8 = virtualinvoke $r7.<java.nio.charset.Charset: java.lang.String name()>();

        $r9 = virtualinvoke $r3.<java.nio.charset.Charset: java.lang.String name()>();

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r9);

        if $z0 == 0 goto label11;

        virtualinvoke $r4.<java.io.InputStream: void mark(int)>(3);

     label01:
        $i0 = virtualinvoke $r4.<java.io.InputStream: int read()>();

        if $i0 != 239 goto label02;

        $z3 = 1;

        goto label03;

     label02:
        $z3 = 0;

     label03:
        $z2 = 1 & $z3;

        $i1 = virtualinvoke $r4.<java.io.InputStream: int read()>();

        if $i1 != 187 goto label04;

        $z4 = 1;

        goto label05;

     label04:
        $z4 = 0;

     label05:
        $z1 = $z2 & $z4;

        $i2 = virtualinvoke $r4.<java.io.InputStream: int read()>();

        if $i2 != 255 goto label06;

        $z5 = 1;

        goto label07;

     label06:
        $z5 = 0;

     label07:
        z6 = $z1 & $z5;

     label08:
        goto label10;

     label09:
        $r10 := @caughtexception;

        z6 = 0;

     label10:
        if z6 != 0 goto label11;

        virtualinvoke $r4.<java.io.InputStream: void reset()>();

     label11:
        $r11 = new java.io.InputStreamReader;

        specialinvoke $r11.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>($r4, $r3);

        return $r11;

        catch java.io.IOException from label01 to label08 with label09;
    }
}
