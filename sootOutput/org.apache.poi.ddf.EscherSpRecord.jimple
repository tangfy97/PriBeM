public class org.apache.poi.ddf.EscherSpRecord extends org.apache.poi.ddf.EscherRecord
{
    public static final short RECORD_ID;
    public static final java.lang.String RECORD_DESCRIPTION;
    public static final int FLAG_GROUP;
    public static final int FLAG_CHILD;
    public static final int FLAG_PATRIARCH;
    public static final int FLAG_DELETED;
    public static final int FLAG_OLESHAPE;
    public static final int FLAG_HAVEMASTER;
    public static final int FLAG_FLIPHORIZ;
    public static final int FLAG_FLIPVERT;
    public static final int FLAG_CONNECTOR;
    public static final int FLAG_HAVEANCHOR;
    public static final int FLAG_BACKGROUND;
    public static final int FLAG_HASSHAPETYPE;
    private int field_1_shapeId;
    private int field_2_flags;

    public void <init>()
    {
        org.apache.poi.ddf.EscherSpRecord r0;

        r0 := @this: org.apache.poi.ddf.EscherSpRecord;

        specialinvoke r0.<org.apache.poi.ddf.EscherRecord: void <init>()>();

        return;
    }

    public int fillFields(byte[], int, org.apache.poi.ddf.EscherRecordFactory)
    {
        org.apache.poi.ddf.EscherRecordFactory r2;
        byte[] r1;
        org.apache.poi.ddf.EscherSpRecord r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: org.apache.poi.ddf.EscherSpRecord;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        r2 := @parameter2: org.apache.poi.ddf.EscherRecordFactory;

        virtualinvoke r0.<org.apache.poi.ddf.EscherSpRecord: int readHeader(byte[],int)>(r1, i0);

        i1 = i0 + 8;

        $i2 = i1 + 0;

        $i3 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r1, $i2);

        r0.<org.apache.poi.ddf.EscherSpRecord: int field_1_shapeId> = $i3;

        $i4 = i1 + 4;

        $i5 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r1, $i4);

        r0.<org.apache.poi.ddf.EscherSpRecord: int field_2_flags> = $i5;

        $i6 = virtualinvoke r0.<org.apache.poi.ddf.EscherSpRecord: int getRecordSize()>();

        return $i6;
    }

    public int serialize(int, byte[], org.apache.poi.ddf.EscherSerializationListener)
    {
        byte[] r2;
        org.apache.poi.ddf.EscherSerializationListener r0;
        short $s1, $s2, $s4, $s12;
        int i0, $i3, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i13;
        org.apache.poi.ddf.EscherSpRecord r1;

        r1 := @this: org.apache.poi.ddf.EscherSpRecord;

        i0 := @parameter0: int;

        r2 := @parameter1: byte[];

        r0 := @parameter2: org.apache.poi.ddf.EscherSerializationListener;

        $s1 = virtualinvoke r1.<org.apache.poi.ddf.EscherSpRecord: short getRecordId()>();

        interfaceinvoke r0.<org.apache.poi.ddf.EscherSerializationListener: void beforeRecordSerialize(int,short,org.apache.poi.ddf.EscherRecord)>(i0, $s1, r1);

        $s2 = virtualinvoke r1.<org.apache.poi.ddf.EscherSpRecord: short getOptions()>();

        staticinvoke <org.apache.poi.util.LittleEndian: void putShort(byte[],int,short)>(r2, i0, $s2);

        $i3 = i0 + 2;

        $s4 = virtualinvoke r1.<org.apache.poi.ddf.EscherSpRecord: short getRecordId()>();

        staticinvoke <org.apache.poi.util.LittleEndian: void putShort(byte[],int,short)>(r2, $i3, $s4);

        $i5 = i0 + 4;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>(r2, $i5, 8);

        $i7 = i0 + 8;

        $i6 = r1.<org.apache.poi.ddf.EscherSpRecord: int field_1_shapeId>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>(r2, $i7, $i6);

        $i9 = i0 + 12;

        $i8 = r1.<org.apache.poi.ddf.EscherSpRecord: int field_2_flags>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>(r2, $i9, $i8);

        $i10 = virtualinvoke r1.<org.apache.poi.ddf.EscherSpRecord: int getRecordSize()>();

        $i11 = i0 + $i10;

        $s12 = virtualinvoke r1.<org.apache.poi.ddf.EscherSpRecord: short getRecordId()>();

        $i13 = virtualinvoke r1.<org.apache.poi.ddf.EscherSpRecord: int getRecordSize()>();

        interfaceinvoke r0.<org.apache.poi.ddf.EscherSerializationListener: void afterRecordSerialize(int,short,int,org.apache.poi.ddf.EscherRecord)>($i11, $s12, $i13, r1);

        return 16;
    }

    public int getRecordSize()
    {
        org.apache.poi.ddf.EscherSpRecord r0;

        r0 := @this: org.apache.poi.ddf.EscherSpRecord;

        return 16;
    }

    public short getRecordId()
    {
        org.apache.poi.ddf.EscherSpRecord r0;

        r0 := @this: org.apache.poi.ddf.EscherSpRecord;

        return -4086;
    }

    public java.lang.String getRecordName()
    {
        org.apache.poi.ddf.EscherSpRecord r0;

        r0 := @this: org.apache.poi.ddf.EscherSpRecord;

        return "Sp";
    }

    public java.lang.String toString()
    {
        org.apache.poi.ddf.EscherSpRecord r2;
        java.lang.StringBuilder $r1, $r5, $r6, $r7, $r8, $r10, $r11, $r12, $r14, $r15, $r16, $r18, $r19, $r20, $r21, $r22, $r23, $r25, $r26, $r28, $r29, $r30;
        short $s0, $s1;
        int $i2, $i3, $i4;
        java.lang.String $r0, $r4, $r9, $r13, $r17, $r24, $r27, $r31;
        java.lang.Class $r3;

        r2 := @this: org.apache.poi.ddf.EscherSpRecord;

        $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  RecordId: 0x");

        $r9 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(short)>(-4086);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Version: 0x");

        $s0 = virtualinvoke r2.<org.apache.poi.ddf.EscherSpRecord: short getVersion()>();

        $r13 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(short)>($s0);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ShapeType: 0x");

        $s1 = virtualinvoke r2.<org.apache.poi.ddf.EscherSpRecord: short getShapeType()>();

        $r17 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(short)>($s1);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ShapeId: ");

        $i2 = r2.<org.apache.poi.ddf.EscherSpRecord: int field_1_shapeId>;

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Flags: ");

        $i3 = r2.<org.apache.poi.ddf.EscherSpRecord: int field_2_flags>;

        $r24 = specialinvoke r2.<org.apache.poi.ddf.EscherSpRecord: java.lang.String decodeFlags(int)>($i3);

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (0x");

        $i4 = r2.<org.apache.poi.ddf.EscherSpRecord: int field_2_flags>;

        $r27 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(int)>($i4);

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r31;
    }

    public java.lang.String toXml(java.lang.String)
    {
        org.apache.poi.ddf.EscherSpRecord r3;
        java.lang.StringBuilder $r0, $r2, $r10, $r11, $r12, $r13, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r27, $r28, $r30, $r31, $r33, $r34, $r35, $r38;
        short $s0, $s1, $s2, $s3;
        int $i4, $i5, $i6;
        java.lang.String r1, $r5, $r6, $r7, $r8, $r9, $r14, $r26, $r29, $r32, $r37, $r39;
        java.lang.Class $r4, $r36;

        r3 := @this: org.apache.poi.ddf.EscherSpRecord;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r4 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getSimpleName()>();

        $s0 = virtualinvoke r3.<org.apache.poi.ddf.EscherSpRecord: short getRecordId()>();

        $r6 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(short)>($s0);

        $s1 = virtualinvoke r3.<org.apache.poi.ddf.EscherSpRecord: short getVersion()>();

        $r7 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(short)>($s1);

        $s2 = virtualinvoke r3.<org.apache.poi.ddf.EscherSpRecord: short getInstance()>();

        $r8 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(short)>($s2);

        $r9 = virtualinvoke r3.<org.apache.poi.ddf.EscherSpRecord: java.lang.String formatXmlRecordHeader(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r5, $r6, $r7, $r8);

        $r10 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<ShapeType>0x");

        $s3 = virtualinvoke r3.<org.apache.poi.ddf.EscherSpRecord: short getShapeType()>();

        $r14 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(short)>($s3);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</ShapeType>\n");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<ShapeId>");

        $i4 = r3.<org.apache.poi.ddf.EscherSpRecord: int field_1_shapeId>;

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</ShapeId>\n");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<Flags>");

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $i5 = r3.<org.apache.poi.ddf.EscherSpRecord: int field_2_flags>;

        $r26 = specialinvoke r3.<org.apache.poi.ddf.EscherSpRecord: java.lang.String decodeFlags(int)>($i5);

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (0x");

        $i6 = r3.<org.apache.poi.ddf.EscherSpRecord: int field_2_flags>;

        $r29 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(int)>($i6);

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        $r33 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</Flags>\n");

        $r34 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</");

        $r36 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r37 = virtualinvoke $r36.<java.lang.Class: java.lang.String getSimpleName()>();

        $r38 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">\n");

        $r39 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r39;
    }

    private java.lang.String decodeFlags(int)
    {
        java.lang.StringBuffer $r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        java.lang.String $r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        org.apache.poi.ddf.EscherSpRecord r2;

        r2 := @this: org.apache.poi.ddf.EscherSpRecord;

        i0 := @parameter0: int;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $i1 = i0 & 1;

        if $i1 == 0 goto label01;

        $r3 = "|GROUP";

        goto label02;

     label01:
        $r3 = "";

     label02:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $i2 = i0 & 2;

        if $i2 == 0 goto label03;

        $r4 = "|CHILD";

        goto label04;

     label03:
        $r4 = "";

     label04:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $i3 = i0 & 4;

        if $i3 == 0 goto label05;

        $r5 = "|PATRIARCH";

        goto label06;

     label05:
        $r5 = "";

     label06:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $i4 = i0 & 8;

        if $i4 == 0 goto label07;

        $r6 = "|DELETED";

        goto label08;

     label07:
        $r6 = "";

     label08:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $i5 = i0 & 16;

        if $i5 == 0 goto label09;

        $r7 = "|OLESHAPE";

        goto label10;

     label09:
        $r7 = "";

     label10:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $i6 = i0 & 32;

        if $i6 == 0 goto label11;

        $r8 = "|HAVEMASTER";

        goto label12;

     label11:
        $r8 = "";

     label12:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $i7 = i0 & 64;

        if $i7 == 0 goto label13;

        $r9 = "|FLIPHORIZ";

        goto label14;

     label13:
        $r9 = "";

     label14:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $i8 = i0 & 128;

        if $i8 == 0 goto label15;

        $r10 = "|FLIPVERT";

        goto label16;

     label15:
        $r10 = "";

     label16:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $i9 = i0 & 256;

        if $i9 == 0 goto label17;

        $r11 = "|CONNECTOR";

        goto label18;

     label17:
        $r11 = "";

     label18:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $i10 = i0 & 512;

        if $i10 == 0 goto label19;

        $r12 = "|HAVEANCHOR";

        goto label20;

     label19:
        $r12 = "";

     label20:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $i11 = i0 & 1024;

        if $i11 == 0 goto label21;

        $r13 = "|BACKGROUND";

        goto label22;

     label21:
        $r13 = "";

     label22:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $i12 = i0 & 2048;

        if $i12 == 0 goto label23;

        $r14 = "|HASSHAPETYPE";

        goto label24;

     label23:
        $r14 = "";

     label24:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $i13 = virtualinvoke $r0.<java.lang.StringBuffer: int length()>();

        if $i13 <= 0 goto label25;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer deleteCharAt(int)>(0);

     label25:
        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r1;
    }

    public int getShapeId()
    {
        int $i0;
        org.apache.poi.ddf.EscherSpRecord r0;

        r0 := @this: org.apache.poi.ddf.EscherSpRecord;

        $i0 = r0.<org.apache.poi.ddf.EscherSpRecord: int field_1_shapeId>;

        return $i0;
    }

    public void setShapeId(int)
    {
        int i0;
        org.apache.poi.ddf.EscherSpRecord r0;

        r0 := @this: org.apache.poi.ddf.EscherSpRecord;

        i0 := @parameter0: int;

        r0.<org.apache.poi.ddf.EscherSpRecord: int field_1_shapeId> = i0;

        return;
    }

    public int getFlags()
    {
        int $i0;
        org.apache.poi.ddf.EscherSpRecord r0;

        r0 := @this: org.apache.poi.ddf.EscherSpRecord;

        $i0 = r0.<org.apache.poi.ddf.EscherSpRecord: int field_2_flags>;

        return $i0;
    }

    public void setFlags(int)
    {
        int i0;
        org.apache.poi.ddf.EscherSpRecord r0;

        r0 := @this: org.apache.poi.ddf.EscherSpRecord;

        i0 := @parameter0: int;

        r0.<org.apache.poi.ddf.EscherSpRecord: int field_2_flags> = i0;

        return;
    }

    public short getShapeType()
    {
        short $s0;
        org.apache.poi.ddf.EscherSpRecord r0;

        r0 := @this: org.apache.poi.ddf.EscherSpRecord;

        $s0 = virtualinvoke r0.<org.apache.poi.ddf.EscherSpRecord: short getInstance()>();

        return $s0;
    }

    public void setShapeType(short)
    {
        short s0;
        org.apache.poi.ddf.EscherSpRecord r0;

        r0 := @this: org.apache.poi.ddf.EscherSpRecord;

        s0 := @parameter0: short;

        virtualinvoke r0.<org.apache.poi.ddf.EscherSpRecord: void setInstance(short)>(s0);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.poi.ddf.EscherSpRecord: int FLAG_HASSHAPETYPE> = 2048;

        <org.apache.poi.ddf.EscherSpRecord: int FLAG_BACKGROUND> = 1024;

        <org.apache.poi.ddf.EscherSpRecord: int FLAG_HAVEANCHOR> = 512;

        <org.apache.poi.ddf.EscherSpRecord: int FLAG_CONNECTOR> = 256;

        <org.apache.poi.ddf.EscherSpRecord: int FLAG_FLIPVERT> = 128;

        <org.apache.poi.ddf.EscherSpRecord: int FLAG_FLIPHORIZ> = 64;

        <org.apache.poi.ddf.EscherSpRecord: int FLAG_HAVEMASTER> = 32;

        <org.apache.poi.ddf.EscherSpRecord: int FLAG_OLESHAPE> = 16;

        <org.apache.poi.ddf.EscherSpRecord: int FLAG_DELETED> = 8;

        <org.apache.poi.ddf.EscherSpRecord: int FLAG_PATRIARCH> = 4;

        <org.apache.poi.ddf.EscherSpRecord: int FLAG_CHILD> = 2;

        <org.apache.poi.ddf.EscherSpRecord: int FLAG_GROUP> = 1;

        <org.apache.poi.ddf.EscherSpRecord: java.lang.String RECORD_DESCRIPTION> = "MsofbtSp";

        <org.apache.poi.ddf.EscherSpRecord: short RECORD_ID> = -4086;

        return;
    }
}
