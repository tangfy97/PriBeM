public class org.springframework.remoting.httpinvoker.SimpleHttpInvokerRequestExecutor extends org.springframework.remoting.httpinvoker.AbstractHttpInvokerRequestExecutor
{
    private int connectTimeout;
    private int readTimeout;

    public void <init>()
    {
        int $i1, $i3;
        org.springframework.remoting.httpinvoker.SimpleHttpInvokerRequestExecutor r0;

        r0 := @this: org.springframework.remoting.httpinvoker.SimpleHttpInvokerRequestExecutor;

        specialinvoke r0.<org.springframework.remoting.httpinvoker.AbstractHttpInvokerRequestExecutor: void <init>()>();

        $i1 = (int) -1;

        r0.<org.springframework.remoting.httpinvoker.SimpleHttpInvokerRequestExecutor: int connectTimeout> = $i1;

        $i3 = (int) -1;

        r0.<org.springframework.remoting.httpinvoker.SimpleHttpInvokerRequestExecutor: int readTimeout> = $i3;

        return;
    }

    public void setConnectTimeout(int)
    {
        int i0;
        org.springframework.remoting.httpinvoker.SimpleHttpInvokerRequestExecutor r0;

        r0 := @this: org.springframework.remoting.httpinvoker.SimpleHttpInvokerRequestExecutor;

        i0 := @parameter0: int;

        r0.<org.springframework.remoting.httpinvoker.SimpleHttpInvokerRequestExecutor: int connectTimeout> = i0;

        return;
    }

    public void setReadTimeout(int)
    {
        int i0;
        org.springframework.remoting.httpinvoker.SimpleHttpInvokerRequestExecutor r0;

        r0 := @this: org.springframework.remoting.httpinvoker.SimpleHttpInvokerRequestExecutor;

        i0 := @parameter0: int;

        r0.<org.springframework.remoting.httpinvoker.SimpleHttpInvokerRequestExecutor: int readTimeout> = i0;

        return;
    }

    protected org.springframework.remoting.support.RemoteInvocationResult doExecuteRequest(org.springframework.remoting.httpinvoker.HttpInvokerClientConfiguration, java.io.ByteArrayOutputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.net.HttpURLConnection $r2;
        java.io.ByteArrayOutputStream r3;
        org.springframework.remoting.httpinvoker.SimpleHttpInvokerRequestExecutor r0;
        org.springframework.remoting.support.RemoteInvocationResult $r6;
        int $i0;
        java.lang.String $r5;
        org.springframework.remoting.httpinvoker.HttpInvokerClientConfiguration r1;
        java.io.InputStream $r4;

        r0 := @this: org.springframework.remoting.httpinvoker.SimpleHttpInvokerRequestExecutor;

        r1 := @parameter0: org.springframework.remoting.httpinvoker.HttpInvokerClientConfiguration;

        r3 := @parameter1: java.io.ByteArrayOutputStream;

        $r2 = virtualinvoke r0.<org.springframework.remoting.httpinvoker.SimpleHttpInvokerRequestExecutor: java.net.HttpURLConnection openConnection(org.springframework.remoting.httpinvoker.HttpInvokerClientConfiguration)>(r1);

        $i0 = virtualinvoke r3.<java.io.ByteArrayOutputStream: int size()>();

        virtualinvoke r0.<org.springframework.remoting.httpinvoker.SimpleHttpInvokerRequestExecutor: void prepareConnection(java.net.HttpURLConnection,int)>($r2, $i0);

        virtualinvoke r0.<org.springframework.remoting.httpinvoker.SimpleHttpInvokerRequestExecutor: void writeRequestBody(org.springframework.remoting.httpinvoker.HttpInvokerClientConfiguration,java.net.HttpURLConnection,java.io.ByteArrayOutputStream)>(r1, $r2, r3);

        virtualinvoke r0.<org.springframework.remoting.httpinvoker.SimpleHttpInvokerRequestExecutor: void validateResponse(org.springframework.remoting.httpinvoker.HttpInvokerClientConfiguration,java.net.HttpURLConnection)>(r1, $r2);

        $r4 = virtualinvoke r0.<org.springframework.remoting.httpinvoker.SimpleHttpInvokerRequestExecutor: java.io.InputStream readResponseBody(org.springframework.remoting.httpinvoker.HttpInvokerClientConfiguration,java.net.HttpURLConnection)>(r1, $r2);

        $r5 = interfaceinvoke r1.<org.springframework.remoting.httpinvoker.HttpInvokerClientConfiguration: java.lang.String getCodebaseUrl()>();

        $r6 = virtualinvoke r0.<org.springframework.remoting.httpinvoker.SimpleHttpInvokerRequestExecutor: org.springframework.remoting.support.RemoteInvocationResult readRemoteInvocationResult(java.io.InputStream,java.lang.String)>($r4, $r5);

        return $r6;
    }

    protected java.net.HttpURLConnection openConnection(org.springframework.remoting.httpinvoker.HttpInvokerClientConfiguration) throws java.io.IOException
    {
        java.net.HttpURLConnection $r4;
        java.net.URL $r0;
        java.io.IOException $r5;
        org.springframework.remoting.httpinvoker.SimpleHttpInvokerRequestExecutor r11;
        java.net.URLConnection $r3;
        java.lang.StringBuilder $r6, $r8, $r9;
        java.lang.String $r2, $r7, $r10;
        org.springframework.remoting.httpinvoker.HttpInvokerClientConfiguration r1;
        boolean $z0;

        r11 := @this: org.springframework.remoting.httpinvoker.SimpleHttpInvokerRequestExecutor;

        r1 := @parameter0: org.springframework.remoting.httpinvoker.HttpInvokerClientConfiguration;

        $r0 = new java.net.URL;

        $r2 = interfaceinvoke r1.<org.springframework.remoting.httpinvoker.HttpInvokerClientConfiguration: java.lang.String getServiceUrl()>();

        specialinvoke $r0.<java.net.URL: void <init>(java.lang.String)>($r2);

        $r3 = virtualinvoke $r0.<java.net.URL: java.net.URLConnection openConnection()>();

        $z0 = $r3 instanceof java.net.HttpURLConnection;

        if $z0 != 0 goto label1;

        $r5 = new java.io.IOException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("Service URL [");

        $r7 = interfaceinvoke r1.<org.springframework.remoting.httpinvoker.HttpInvokerClientConfiguration: java.lang.String getServiceUrl()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] is not an HTTP URL");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>($r10);

        throw $r5;

     label1:
        $r4 = (java.net.HttpURLConnection) $r3;

        return $r4;
    }

    protected void prepareConnection(java.net.HttpURLConnection, int) throws java.io.IOException
    {
        java.net.HttpURLConnection r1;
        org.springframework.remoting.httpinvoker.SimpleHttpInvokerRequestExecutor r0;
        java.util.Locale $r5;
        int $i0, $i1, i2, $i3, $i4;
        java.lang.String $r2, $r3, $r6;
        org.springframework.context.i18n.LocaleContext $r4;
        boolean $z0;

        r0 := @this: org.springframework.remoting.httpinvoker.SimpleHttpInvokerRequestExecutor;

        r1 := @parameter0: java.net.HttpURLConnection;

        i2 := @parameter1: int;

        $i0 = r0.<org.springframework.remoting.httpinvoker.SimpleHttpInvokerRequestExecutor: int connectTimeout>;

        if $i0 < 0 goto label1;

        $i4 = r0.<org.springframework.remoting.httpinvoker.SimpleHttpInvokerRequestExecutor: int connectTimeout>;

        virtualinvoke r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i4);

     label1:
        $i1 = r0.<org.springframework.remoting.httpinvoker.SimpleHttpInvokerRequestExecutor: int readTimeout>;

        if $i1 < 0 goto label2;

        $i3 = r0.<org.springframework.remoting.httpinvoker.SimpleHttpInvokerRequestExecutor: int readTimeout>;

        virtualinvoke r1.<java.net.HttpURLConnection: void setReadTimeout(int)>($i3);

     label2:
        virtualinvoke r1.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1);

        virtualinvoke r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("POST");

        $r2 = virtualinvoke r0.<org.springframework.remoting.httpinvoker.SimpleHttpInvokerRequestExecutor: java.lang.String getContentType()>();

        virtualinvoke r1.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", $r2);

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i2);

        virtualinvoke r1.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Length", $r3);

        $r4 = staticinvoke <org.springframework.context.i18n.LocaleContextHolder: org.springframework.context.i18n.LocaleContext getLocaleContext()>();

        if $r4 == null goto label3;

        $r5 = interfaceinvoke $r4.<org.springframework.context.i18n.LocaleContext: java.util.Locale getLocale()>();

        $r6 = staticinvoke <org.springframework.util.StringUtils: java.lang.String toLanguageTag(java.util.Locale)>($r5);

        virtualinvoke r1.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Accept-Language", $r6);

     label3:
        $z0 = virtualinvoke r0.<org.springframework.remoting.httpinvoker.SimpleHttpInvokerRequestExecutor: boolean isAcceptGzipEncoding()>();

        if $z0 == 0 goto label4;

        virtualinvoke r1.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Accept-Encoding", "gzip");

     label4:
        return;
    }

    protected void writeRequestBody(org.springframework.remoting.httpinvoker.HttpInvokerClientConfiguration, java.net.HttpURLConnection, java.io.ByteArrayOutputStream) throws java.io.IOException
    {
        java.net.HttpURLConnection r1;
        java.io.OutputStream $r2;
        java.io.ByteArrayOutputStream r0;
        org.springframework.remoting.httpinvoker.HttpInvokerClientConfiguration r4;
        org.springframework.remoting.httpinvoker.SimpleHttpInvokerRequestExecutor r3;

        r3 := @this: org.springframework.remoting.httpinvoker.SimpleHttpInvokerRequestExecutor;

        r4 := @parameter0: org.springframework.remoting.httpinvoker.HttpInvokerClientConfiguration;

        r1 := @parameter1: java.net.HttpURLConnection;

        r0 := @parameter2: java.io.ByteArrayOutputStream;

        $r2 = virtualinvoke r1.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>();

        virtualinvoke r0.<java.io.ByteArrayOutputStream: void writeTo(java.io.OutputStream)>($r2);

        return;
    }

    protected void validateResponse(org.springframework.remoting.httpinvoker.HttpInvokerClientConfiguration, java.net.HttpURLConnection) throws java.io.IOException
    {
        java.net.HttpURLConnection r0;
        java.io.IOException $r1;
        org.springframework.remoting.httpinvoker.SimpleHttpInvokerRequestExecutor r9;
        int $i0, $i1;
        java.lang.StringBuilder $r2, $r3, $r4, $r6, $r7;
        java.lang.String $r5, $r8;
        org.springframework.remoting.httpinvoker.HttpInvokerClientConfiguration r10;

        r9 := @this: org.springframework.remoting.httpinvoker.SimpleHttpInvokerRequestExecutor;

        r10 := @parameter0: org.springframework.remoting.httpinvoker.HttpInvokerClientConfiguration;

        r0 := @parameter1: java.net.HttpURLConnection;

        $i0 = virtualinvoke r0.<java.net.HttpURLConnection: int getResponseCode()>();

        if $i0 < 300 goto label1;

        $r1 = new java.io.IOException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("Did not receive successful HTTP response: status code = ");

        $i1 = virtualinvoke r0.<java.net.HttpURLConnection: int getResponseCode()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", status message = [");

        $r5 = virtualinvoke r0.<java.net.HttpURLConnection: java.lang.String getResponseMessage()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>($r8);

        throw $r1;

     label1:
        return;
    }

    protected java.io.InputStream readResponseBody(org.springframework.remoting.httpinvoker.HttpInvokerClientConfiguration, java.net.HttpURLConnection) throws java.io.IOException
    {
        java.net.HttpURLConnection r1;
        java.util.zip.GZIPInputStream $r3;
        org.springframework.remoting.httpinvoker.HttpInvokerClientConfiguration r5;
        org.springframework.remoting.httpinvoker.SimpleHttpInvokerRequestExecutor r0;
        boolean $z0;
        java.io.InputStream $r2, $r4;

        r0 := @this: org.springframework.remoting.httpinvoker.SimpleHttpInvokerRequestExecutor;

        r5 := @parameter0: org.springframework.remoting.httpinvoker.HttpInvokerClientConfiguration;

        r1 := @parameter1: java.net.HttpURLConnection;

        $z0 = virtualinvoke r0.<org.springframework.remoting.httpinvoker.SimpleHttpInvokerRequestExecutor: boolean isGzipResponse(java.net.HttpURLConnection)>(r1);

        if $z0 == 0 goto label1;

        $r3 = new java.util.zip.GZIPInputStream;

        $r4 = virtualinvoke r1.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

        specialinvoke $r3.<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>($r4);

        return $r3;

     label1:
        $r2 = virtualinvoke r1.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

        return $r2;
    }

    protected boolean isGzipResponse(java.net.HttpURLConnection)
    {
        java.net.HttpURLConnection r0;
        java.lang.String $r1, $r2;
        boolean $z0;
        org.springframework.remoting.httpinvoker.SimpleHttpInvokerRequestExecutor r3;

        r3 := @this: org.springframework.remoting.httpinvoker.SimpleHttpInvokerRequestExecutor;

        r0 := @parameter0: java.net.HttpURLConnection;

        $r1 = virtualinvoke r0.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("Content-Encoding");

        if $r1 == null goto label1;

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("gzip");

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
}
