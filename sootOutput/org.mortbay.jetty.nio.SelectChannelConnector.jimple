public class org.mortbay.jetty.nio.SelectChannelConnector extends org.mortbay.jetty.nio.AbstractNIOConnector
{
    protected transient java.nio.channels.ServerSocketChannel _acceptChannel;
    private long _lowResourcesConnections;
    private long _lowResourcesMaxIdleTime;
    private org.mortbay.io.nio.SelectorManager _manager;

    public void <init>()
    {
        org.mortbay.jetty.nio.SelectChannelConnector$1 $r1;
        org.mortbay.jetty.nio.SelectChannelConnector r0;

        r0 := @this: org.mortbay.jetty.nio.SelectChannelConnector;

        specialinvoke r0.<org.mortbay.jetty.nio.AbstractNIOConnector: void <init>()>();

        $r1 = new org.mortbay.jetty.nio.SelectChannelConnector$1;

        specialinvoke $r1.<org.mortbay.jetty.nio.SelectChannelConnector$1: void <init>(org.mortbay.jetty.nio.SelectChannelConnector)>(r0);

        r0.<org.mortbay.jetty.nio.SelectChannelConnector: org.mortbay.io.nio.SelectorManager _manager> = $r1;

        return;
    }

    public void accept(int) throws java.io.IOException
    {
        int i0;
        org.mortbay.io.nio.SelectorManager $r1;
        org.mortbay.jetty.nio.SelectChannelConnector r0;

        r0 := @this: org.mortbay.jetty.nio.SelectChannelConnector;

        i0 := @parameter0: int;

        $r1 = r0.<org.mortbay.jetty.nio.SelectChannelConnector: org.mortbay.io.nio.SelectorManager _manager>;

        virtualinvoke $r1.<org.mortbay.io.nio.SelectorManager: void doSelect(int)>(i0);

        return;
    }

    public void close() throws java.io.IOException
    {
        java.lang.Throwable $r4;
        org.mortbay.io.nio.SelectorManager $r1, $r3;
        java.lang.Exception $r5;
        org.mortbay.jetty.nio.SelectChannelConnector r0;
        java.nio.channels.ServerSocketChannel $r2, $r6;
        boolean $z0;

        r0 := @this: org.mortbay.jetty.nio.SelectChannelConnector;

        entermonitor r0;

     label01:
        $r1 = r0.<org.mortbay.jetty.nio.SelectChannelConnector: org.mortbay.io.nio.SelectorManager _manager>;

        $z0 = virtualinvoke $r1.<org.mortbay.io.nio.SelectorManager: boolean isRunning()>();

        if $z0 == 0 goto label05;

     label02:
        $r3 = r0.<org.mortbay.jetty.nio.SelectChannelConnector: org.mortbay.io.nio.SelectorManager _manager>;

        virtualinvoke $r3.<org.mortbay.io.nio.SelectorManager: void stop()>();

     label03:
        goto label05;

     label04:
        $r5 := @caughtexception;

        staticinvoke <org.mortbay.log.Log: void warn(java.lang.Throwable)>($r5);

     label05:
        $r6 = r0.<org.mortbay.jetty.nio.SelectChannelConnector: java.nio.channels.ServerSocketChannel _acceptChannel>;

        if $r6 == null goto label06;

        $r2 = r0.<org.mortbay.jetty.nio.SelectChannelConnector: java.nio.channels.ServerSocketChannel _acceptChannel>;

        virtualinvoke $r2.<java.nio.channels.ServerSocketChannel: void close()>();

     label06:
        r0.<org.mortbay.jetty.nio.SelectChannelConnector: java.nio.channels.ServerSocketChannel _acceptChannel> = null;

        exitmonitor r0;

     label07:
        goto label10;

     label08:
        $r4 := @caughtexception;

        exitmonitor r0;

     label09:
        throw $r4;

     label10:
        return;

        catch java.lang.Exception from label02 to label03 with label04;
        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public void customize(org.mortbay.io.EndPoint, org.mortbay.jetty.Request) throws java.io.IOException
    {
        org.mortbay.io.EndPoint r0;
        long $l0;
        org.mortbay.jetty.Request r2;
        org.mortbay.io.nio.SelectorManager$SelectSet $r3;
        org.mortbay.jetty.nio.SelectChannelConnector$ConnectorEndPoint r1;
        org.mortbay.jetty.nio.SelectChannelConnector r4;

        r4 := @this: org.mortbay.jetty.nio.SelectChannelConnector;

        r0 := @parameter0: org.mortbay.io.EndPoint;

        r2 := @parameter1: org.mortbay.jetty.Request;

        r1 = (org.mortbay.jetty.nio.SelectChannelConnector$ConnectorEndPoint) r0;

        virtualinvoke r1.<org.mortbay.jetty.nio.SelectChannelConnector$ConnectorEndPoint: void cancelIdle()>();

        $r3 = virtualinvoke r1.<org.mortbay.jetty.nio.SelectChannelConnector$ConnectorEndPoint: org.mortbay.io.nio.SelectorManager$SelectSet getSelectSet()>();

        $l0 = virtualinvoke $r3.<org.mortbay.io.nio.SelectorManager$SelectSet: long getNow()>();

        virtualinvoke r2.<org.mortbay.jetty.Request: void setTimeStamp(long)>($l0);

        specialinvoke r4.<org.mortbay.jetty.nio.AbstractNIOConnector: void customize(org.mortbay.io.EndPoint,org.mortbay.jetty.Request)>(r0, r2);

        return;
    }

    public void persist(org.mortbay.io.EndPoint) throws java.io.IOException
    {
        org.mortbay.io.EndPoint r0;
        org.mortbay.jetty.nio.SelectChannelConnector$ConnectorEndPoint $r1;
        org.mortbay.jetty.nio.SelectChannelConnector r2;

        r2 := @this: org.mortbay.jetty.nio.SelectChannelConnector;

        r0 := @parameter0: org.mortbay.io.EndPoint;

        $r1 = (org.mortbay.jetty.nio.SelectChannelConnector$ConnectorEndPoint) r0;

        virtualinvoke $r1.<org.mortbay.jetty.nio.SelectChannelConnector$ConnectorEndPoint: void scheduleIdle()>();

        specialinvoke r2.<org.mortbay.jetty.nio.AbstractNIOConnector: void persist(org.mortbay.io.EndPoint)>(r0);

        return;
    }

    public java.lang.Object getConnection()
    {
        org.mortbay.jetty.nio.SelectChannelConnector r0;
        java.nio.channels.ServerSocketChannel $r1;

        r0 := @this: org.mortbay.jetty.nio.SelectChannelConnector;

        $r1 = r0.<org.mortbay.jetty.nio.SelectChannelConnector: java.nio.channels.ServerSocketChannel _acceptChannel>;

        return $r1;
    }

    public boolean getDelaySelectKeyUpdate()
    {
        org.mortbay.io.nio.SelectorManager $r1;
        org.mortbay.jetty.nio.SelectChannelConnector r0;
        boolean $z0;

        r0 := @this: org.mortbay.jetty.nio.SelectChannelConnector;

        $r1 = r0.<org.mortbay.jetty.nio.SelectChannelConnector: org.mortbay.io.nio.SelectorManager _manager>;

        $z0 = virtualinvoke $r1.<org.mortbay.io.nio.SelectorManager: boolean isDelaySelectKeyUpdate()>();

        return $z0;
    }

    public int getLocalPort()
    {
        java.lang.Throwable $r5;
        org.mortbay.jetty.nio.SelectChannelConnector r0;
        java.nio.channels.ServerSocketChannel $r1, $r2, $r3;
        java.net.ServerSocket $r4;
        int $i0, $i2;
        boolean $z0;

        r0 := @this: org.mortbay.jetty.nio.SelectChannelConnector;

        entermonitor r0;

     label1:
        $r1 = r0.<org.mortbay.jetty.nio.SelectChannelConnector: java.nio.channels.ServerSocketChannel _acceptChannel>;

        if $r1 == null goto label2;

        $r2 = r0.<org.mortbay.jetty.nio.SelectChannelConnector: java.nio.channels.ServerSocketChannel _acceptChannel>;

        $z0 = virtualinvoke $r2.<java.nio.channels.ServerSocketChannel: boolean isOpen()>();

        if $z0 != 0 goto label4;

     label2:
        exitmonitor r0;

     label3:
        $i2 = (int) -1;

        return $i2;

     label4:
        $r3 = r0.<org.mortbay.jetty.nio.SelectChannelConnector: java.nio.channels.ServerSocketChannel _acceptChannel>;

        $r4 = virtualinvoke $r3.<java.nio.channels.ServerSocketChannel: java.net.ServerSocket socket()>();

        $i0 = virtualinvoke $r4.<java.net.ServerSocket: int getLocalPort()>();

        exitmonitor r0;

     label5:
        return $i0;

     label6:
        $r5 := @caughtexception;

        exitmonitor r0;

     label7:
        throw $r5;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public org.mortbay.util.ajax.Continuation newContinuation()
    {
        org.mortbay.jetty.nio.SelectChannelConnector$RetryContinuation $r0;
        org.mortbay.jetty.nio.SelectChannelConnector r1;

        r1 := @this: org.mortbay.jetty.nio.SelectChannelConnector;

        $r0 = new org.mortbay.jetty.nio.SelectChannelConnector$RetryContinuation;

        specialinvoke $r0.<org.mortbay.jetty.nio.SelectChannelConnector$RetryContinuation: void <init>()>();

        return $r0;
    }

    public void open() throws java.io.IOException
    {
        java.lang.Throwable $r10;
        java.net.ServerSocket $r4, $r8;
        int $i0, $i1, $i2;
        java.lang.String $r5, $r6;
        boolean $z0;
        java.net.InetSocketAddress $r11;
        org.mortbay.jetty.nio.SelectChannelConnector r0;
        java.nio.channels.ServerSocketChannel $r1, $r2, $r3, $r7, $r9;

        r0 := @this: org.mortbay.jetty.nio.SelectChannelConnector;

        entermonitor r0;

     label1:
        $r1 = r0.<org.mortbay.jetty.nio.SelectChannelConnector: java.nio.channels.ServerSocketChannel _acceptChannel>;

        if $r1 != null goto label4;

        $r2 = staticinvoke <java.nio.channels.ServerSocketChannel: java.nio.channels.ServerSocketChannel open()>();

        r0.<org.mortbay.jetty.nio.SelectChannelConnector: java.nio.channels.ServerSocketChannel _acceptChannel> = $r2;

        $r3 = r0.<org.mortbay.jetty.nio.SelectChannelConnector: java.nio.channels.ServerSocketChannel _acceptChannel>;

        $r4 = virtualinvoke $r3.<java.nio.channels.ServerSocketChannel: java.net.ServerSocket socket()>();

        $z0 = virtualinvoke r0.<org.mortbay.jetty.nio.SelectChannelConnector: boolean getReuseAddress()>();

        virtualinvoke $r4.<java.net.ServerSocket: void setReuseAddress(boolean)>($z0);

        $r5 = virtualinvoke r0.<org.mortbay.jetty.nio.SelectChannelConnector: java.lang.String getHost()>();

        if $r5 != null goto label2;

        $r11 = new java.net.InetSocketAddress;

        $i2 = virtualinvoke r0.<org.mortbay.jetty.nio.SelectChannelConnector: int getPort()>();

        specialinvoke $r11.<java.net.InetSocketAddress: void <init>(int)>($i2);

        goto label3;

     label2:
        $r11 = new java.net.InetSocketAddress;

        $r6 = virtualinvoke r0.<org.mortbay.jetty.nio.SelectChannelConnector: java.lang.String getHost()>();

        $i0 = virtualinvoke r0.<org.mortbay.jetty.nio.SelectChannelConnector: int getPort()>();

        specialinvoke $r11.<java.net.InetSocketAddress: void <init>(java.lang.String,int)>($r6, $i0);

     label3:
        $r7 = r0.<org.mortbay.jetty.nio.SelectChannelConnector: java.nio.channels.ServerSocketChannel _acceptChannel>;

        $r8 = virtualinvoke $r7.<java.nio.channels.ServerSocketChannel: java.net.ServerSocket socket()>();

        $i1 = virtualinvoke r0.<org.mortbay.jetty.nio.SelectChannelConnector: int getAcceptQueueSize()>();

        virtualinvoke $r8.<java.net.ServerSocket: void bind(java.net.SocketAddress,int)>($r11, $i1);

        $r9 = r0.<org.mortbay.jetty.nio.SelectChannelConnector: java.nio.channels.ServerSocketChannel _acceptChannel>;

        virtualinvoke $r9.<java.nio.channels.ServerSocketChannel: java.nio.channels.SelectableChannel configureBlocking(boolean)>(0);

     label4:
        exitmonitor r0;

     label5:
        goto label8;

     label6:
        $r10 := @caughtexception;

        exitmonitor r0;

     label7:
        throw $r10;

     label8:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void setDelaySelectKeyUpdate(boolean)
    {
        org.mortbay.io.nio.SelectorManager $r1;
        org.mortbay.jetty.nio.SelectChannelConnector r0;
        boolean z0;

        r0 := @this: org.mortbay.jetty.nio.SelectChannelConnector;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.mortbay.jetty.nio.SelectChannelConnector: org.mortbay.io.nio.SelectorManager _manager>;

        virtualinvoke $r1.<org.mortbay.io.nio.SelectorManager: void setDelaySelectKeyUpdate(boolean)>(z0);

        return;
    }

    public void setMaxIdleTime(int)
    {
        org.mortbay.io.nio.SelectorManager $r1;
        int i0;
        long $l1;
        org.mortbay.jetty.nio.SelectChannelConnector r0;

        r0 := @this: org.mortbay.jetty.nio.SelectChannelConnector;

        i0 := @parameter0: int;

        $r1 = r0.<org.mortbay.jetty.nio.SelectChannelConnector: org.mortbay.io.nio.SelectorManager _manager>;

        $l1 = (long) i0;

        virtualinvoke $r1.<org.mortbay.io.nio.SelectorManager: void setMaxIdleTime(long)>($l1);

        specialinvoke r0.<org.mortbay.jetty.nio.AbstractNIOConnector: void setMaxIdleTime(int)>(i0);

        return;
    }

    public long getLowResourcesConnections()
    {
        long $l0;
        org.mortbay.jetty.nio.SelectChannelConnector r0;

        r0 := @this: org.mortbay.jetty.nio.SelectChannelConnector;

        $l0 = r0.<org.mortbay.jetty.nio.SelectChannelConnector: long _lowResourcesConnections>;

        return $l0;
    }

    public void setLowResourcesConnections(long)
    {
        long l0;
        org.mortbay.jetty.nio.SelectChannelConnector r0;

        r0 := @this: org.mortbay.jetty.nio.SelectChannelConnector;

        l0 := @parameter0: long;

        r0.<org.mortbay.jetty.nio.SelectChannelConnector: long _lowResourcesConnections> = l0;

        return;
    }

    public long getLowResourcesMaxIdleTime()
    {
        long $l0;
        org.mortbay.jetty.nio.SelectChannelConnector r0;

        r0 := @this: org.mortbay.jetty.nio.SelectChannelConnector;

        $l0 = r0.<org.mortbay.jetty.nio.SelectChannelConnector: long _lowResourcesMaxIdleTime>;

        return $l0;
    }

    public void setLowResourcesMaxIdleTime(long)
    {
        int $i1;
        long l0;
        org.mortbay.jetty.nio.SelectChannelConnector r0;

        r0 := @this: org.mortbay.jetty.nio.SelectChannelConnector;

        l0 := @parameter0: long;

        r0.<org.mortbay.jetty.nio.SelectChannelConnector: long _lowResourcesMaxIdleTime> = l0;

        $i1 = (int) l0;

        specialinvoke r0.<org.mortbay.jetty.nio.AbstractNIOConnector: void setLowResourceMaxIdleTime(int)>($i1);

        return;
    }

    public void setLowResourceMaxIdleTime(int)
    {
        int i0;
        long $l1;
        org.mortbay.jetty.nio.SelectChannelConnector r0;

        r0 := @this: org.mortbay.jetty.nio.SelectChannelConnector;

        i0 := @parameter0: int;

        $l1 = (long) i0;

        r0.<org.mortbay.jetty.nio.SelectChannelConnector: long _lowResourcesMaxIdleTime> = $l1;

        specialinvoke r0.<org.mortbay.jetty.nio.AbstractNIOConnector: void setLowResourceMaxIdleTime(int)>(i0);

        return;
    }

    protected void doStart() throws java.lang.Exception
    {
        org.mortbay.io.nio.SelectorManager $r1, $r2, $r3, $r4, $r5, $r7;
        long $l2, $l3, $l4;
        org.mortbay.jetty.nio.SelectChannelConnector r0;
        java.nio.channels.ServerSocketChannel $r6;
        int $i0, $i1;

        r0 := @this: org.mortbay.jetty.nio.SelectChannelConnector;

        $r1 = r0.<org.mortbay.jetty.nio.SelectChannelConnector: org.mortbay.io.nio.SelectorManager _manager>;

        $i0 = virtualinvoke r0.<org.mortbay.jetty.nio.SelectChannelConnector: int getAcceptors()>();

        virtualinvoke $r1.<org.mortbay.io.nio.SelectorManager: void setSelectSets(int)>($i0);

        $r2 = r0.<org.mortbay.jetty.nio.SelectChannelConnector: org.mortbay.io.nio.SelectorManager _manager>;

        $i1 = virtualinvoke r0.<org.mortbay.jetty.nio.SelectChannelConnector: int getMaxIdleTime()>();

        $l2 = (long) $i1;

        virtualinvoke $r2.<org.mortbay.io.nio.SelectorManager: void setMaxIdleTime(long)>($l2);

        $r3 = r0.<org.mortbay.jetty.nio.SelectChannelConnector: org.mortbay.io.nio.SelectorManager _manager>;

        $l3 = virtualinvoke r0.<org.mortbay.jetty.nio.SelectChannelConnector: long getLowResourcesConnections()>();

        virtualinvoke $r3.<org.mortbay.io.nio.SelectorManager: void setLowResourcesConnections(long)>($l3);

        $r4 = r0.<org.mortbay.jetty.nio.SelectChannelConnector: org.mortbay.io.nio.SelectorManager _manager>;

        $l4 = virtualinvoke r0.<org.mortbay.jetty.nio.SelectChannelConnector: long getLowResourcesMaxIdleTime()>();

        virtualinvoke $r4.<org.mortbay.io.nio.SelectorManager: void setLowResourcesMaxIdleTime(long)>($l4);

        $r5 = r0.<org.mortbay.jetty.nio.SelectChannelConnector: org.mortbay.io.nio.SelectorManager _manager>;

        virtualinvoke $r5.<org.mortbay.io.nio.SelectorManager: void start()>();

        virtualinvoke r0.<org.mortbay.jetty.nio.SelectChannelConnector: void open()>();

        $r7 = r0.<org.mortbay.jetty.nio.SelectChannelConnector: org.mortbay.io.nio.SelectorManager _manager>;

        $r6 = r0.<org.mortbay.jetty.nio.SelectChannelConnector: java.nio.channels.ServerSocketChannel _acceptChannel>;

        virtualinvoke $r7.<org.mortbay.io.nio.SelectorManager: void register(java.nio.channels.ServerSocketChannel)>($r6);

        specialinvoke r0.<org.mortbay.jetty.nio.AbstractNIOConnector: void doStart()>();

        return;
    }

    protected void doStop() throws java.lang.Exception
    {
        org.mortbay.jetty.nio.SelectChannelConnector r0;

        r0 := @this: org.mortbay.jetty.nio.SelectChannelConnector;

        specialinvoke r0.<org.mortbay.jetty.nio.AbstractNIOConnector: void doStop()>();

        return;
    }

    protected org.mortbay.io.nio.SelectChannelEndPoint newEndPoint(java.nio.channels.SocketChannel, org.mortbay.io.nio.SelectorManager$SelectSet, java.nio.channels.SelectionKey) throws java.io.IOException
    {
        java.nio.channels.SocketChannel r1;
        java.nio.channels.SelectionKey r3;
        org.mortbay.io.nio.SelectorManager$SelectSet r2;
        org.mortbay.jetty.nio.SelectChannelConnector$ConnectorEndPoint $r0;
        org.mortbay.jetty.nio.SelectChannelConnector r4;

        r4 := @this: org.mortbay.jetty.nio.SelectChannelConnector;

        r1 := @parameter0: java.nio.channels.SocketChannel;

        r2 := @parameter1: org.mortbay.io.nio.SelectorManager$SelectSet;

        r3 := @parameter2: java.nio.channels.SelectionKey;

        $r0 = new org.mortbay.jetty.nio.SelectChannelConnector$ConnectorEndPoint;

        specialinvoke $r0.<org.mortbay.jetty.nio.SelectChannelConnector$ConnectorEndPoint: void <init>(java.nio.channels.SocketChannel,org.mortbay.io.nio.SelectorManager$SelectSet,java.nio.channels.SelectionKey)>(r1, r2, r3);

        return $r0;
    }

    protected org.mortbay.io.Connection newConnection(java.nio.channels.SocketChannel, org.mortbay.io.nio.SelectChannelEndPoint)
    {
        org.mortbay.jetty.Server $r3;
        java.nio.channels.SocketChannel r4;
        org.mortbay.jetty.HttpConnection $r0;
        org.mortbay.jetty.nio.SelectChannelConnector r1;
        org.mortbay.io.nio.SelectChannelEndPoint r2;

        r1 := @this: org.mortbay.jetty.nio.SelectChannelConnector;

        r4 := @parameter0: java.nio.channels.SocketChannel;

        r2 := @parameter1: org.mortbay.io.nio.SelectChannelEndPoint;

        $r0 = new org.mortbay.jetty.HttpConnection;

        $r3 = virtualinvoke r1.<org.mortbay.jetty.nio.SelectChannelConnector: org.mortbay.jetty.Server getServer()>();

        specialinvoke $r0.<org.mortbay.jetty.HttpConnection: void <init>(org.mortbay.jetty.Connector,org.mortbay.io.EndPoint,org.mortbay.jetty.Server)>(r1, r2, $r3);

        return $r0;
    }

    static void access$000(org.mortbay.jetty.nio.SelectChannelConnector, java.net.Socket) throws java.io.IOException
    {
        java.net.Socket r1;
        org.mortbay.jetty.nio.SelectChannelConnector r0;

        r0 := @parameter0: org.mortbay.jetty.nio.SelectChannelConnector;

        r1 := @parameter1: java.net.Socket;

        virtualinvoke r0.<org.mortbay.jetty.nio.SelectChannelConnector: void configure(java.net.Socket)>(r1);

        return;
    }

    static void access$100(org.mortbay.jetty.nio.SelectChannelConnector, org.mortbay.jetty.HttpConnection)
    {
        org.mortbay.jetty.HttpConnection r1;
        org.mortbay.jetty.nio.SelectChannelConnector r0;

        r0 := @parameter0: org.mortbay.jetty.nio.SelectChannelConnector;

        r1 := @parameter1: org.mortbay.jetty.HttpConnection;

        virtualinvoke r0.<org.mortbay.jetty.nio.SelectChannelConnector: void connectionClosed(org.mortbay.jetty.HttpConnection)>(r1);

        return;
    }

    static void access$200(org.mortbay.jetty.nio.SelectChannelConnector, org.mortbay.jetty.HttpConnection)
    {
        org.mortbay.jetty.HttpConnection r1;
        org.mortbay.jetty.nio.SelectChannelConnector r0;

        r0 := @parameter0: org.mortbay.jetty.nio.SelectChannelConnector;

        r1 := @parameter1: org.mortbay.jetty.HttpConnection;

        virtualinvoke r0.<org.mortbay.jetty.nio.SelectChannelConnector: void connectionOpened(org.mortbay.jetty.HttpConnection)>(r1);

        return;
    }
}
