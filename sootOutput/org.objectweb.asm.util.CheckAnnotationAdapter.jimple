public class org.objectweb.asm.util.CheckAnnotationAdapter extends org.objectweb.asm.AnnotationVisitor
{
    private final boolean named;
    private boolean end;

    public void <init>(org.objectweb.asm.AnnotationVisitor)
    {
        org.objectweb.asm.AnnotationVisitor r1;
        org.objectweb.asm.util.CheckAnnotationAdapter r0;

        r0 := @this: org.objectweb.asm.util.CheckAnnotationAdapter;

        r1 := @parameter0: org.objectweb.asm.AnnotationVisitor;

        specialinvoke r0.<org.objectweb.asm.util.CheckAnnotationAdapter: void <init>(org.objectweb.asm.AnnotationVisitor,boolean)>(r1, 1);

        return;
    }

    void <init>(org.objectweb.asm.AnnotationVisitor, boolean)
    {
        org.objectweb.asm.AnnotationVisitor r1;
        org.objectweb.asm.util.CheckAnnotationAdapter r0;
        boolean z0;

        r0 := @this: org.objectweb.asm.util.CheckAnnotationAdapter;

        r1 := @parameter0: org.objectweb.asm.AnnotationVisitor;

        z0 := @parameter1: boolean;

        specialinvoke r0.<org.objectweb.asm.AnnotationVisitor: void <init>(int,org.objectweb.asm.AnnotationVisitor)>(262144, r1);

        r0.<org.objectweb.asm.util.CheckAnnotationAdapter: boolean named> = z0;

        return;
    }

    public void visit(java.lang.String, java.lang.Object)
    {
        org.objectweb.asm.AnnotationVisitor $r3, $r7;
        org.objectweb.asm.Type $r4;
        org.objectweb.asm.util.CheckAnnotationAdapter r0;
        int $i0;
        java.lang.String r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18;
        java.lang.IllegalArgumentException $r5, $r6;
        java.lang.Object r2;

        r0 := @this: org.objectweb.asm.util.CheckAnnotationAdapter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<org.objectweb.asm.util.CheckAnnotationAdapter: void checkEnd()>();

        specialinvoke r0.<org.objectweb.asm.util.CheckAnnotationAdapter: void checkName(java.lang.String)>(r1);

        $z0 = r2 instanceof java.lang.Byte;

        if $z0 != 0 goto label1;

        $z1 = r2 instanceof java.lang.Boolean;

        if $z1 != 0 goto label1;

        $z2 = r2 instanceof java.lang.Character;

        if $z2 != 0 goto label1;

        $z3 = r2 instanceof java.lang.Short;

        if $z3 != 0 goto label1;

        $z4 = r2 instanceof java.lang.Integer;

        if $z4 != 0 goto label1;

        $z5 = r2 instanceof java.lang.Long;

        if $z5 != 0 goto label1;

        $z6 = r2 instanceof java.lang.Float;

        if $z6 != 0 goto label1;

        $z7 = r2 instanceof java.lang.Double;

        if $z7 != 0 goto label1;

        $z8 = r2 instanceof java.lang.String;

        if $z8 != 0 goto label1;

        $z9 = r2 instanceof org.objectweb.asm.Type;

        if $z9 != 0 goto label1;

        $z10 = r2 instanceof byte[];

        if $z10 != 0 goto label1;

        $z11 = r2 instanceof boolean[];

        if $z11 != 0 goto label1;

        $z12 = r2 instanceof char[];

        if $z12 != 0 goto label1;

        $z13 = r2 instanceof short[];

        if $z13 != 0 goto label1;

        $z14 = r2 instanceof int[];

        if $z14 != 0 goto label1;

        $z15 = r2 instanceof long[];

        if $z15 != 0 goto label1;

        $z16 = r2 instanceof float[];

        if $z16 != 0 goto label1;

        $z17 = r2 instanceof double[];

        if $z17 != 0 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid annotation value");

        throw $r6;

     label1:
        $z18 = r2 instanceof org.objectweb.asm.Type;

        if $z18 == 0 goto label2;

        $r4 = (org.objectweb.asm.Type) r2;

        $i0 = virtualinvoke $r4.<org.objectweb.asm.Type: int getSort()>();

        if $i0 == 10 goto label2;

        if $i0 == 9 goto label2;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid annotation value");

        throw $r5;

     label2:
        $r7 = r0.<org.objectweb.asm.util.CheckAnnotationAdapter: org.objectweb.asm.AnnotationVisitor av>;

        if $r7 == null goto label3;

        $r3 = r0.<org.objectweb.asm.util.CheckAnnotationAdapter: org.objectweb.asm.AnnotationVisitor av>;

        virtualinvoke $r3.<org.objectweb.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>(r1, r2);

     label3:
        return;
    }

    public void visitEnum(java.lang.String, java.lang.String, java.lang.String)
    {
        org.objectweb.asm.AnnotationVisitor $r4, $r5;
        org.objectweb.asm.util.CheckAnnotationAdapter r0;
        java.lang.String r1, r2, r3;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: org.objectweb.asm.util.CheckAnnotationAdapter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<org.objectweb.asm.util.CheckAnnotationAdapter: void checkEnd()>();

        specialinvoke r0.<org.objectweb.asm.util.CheckAnnotationAdapter: void checkName(java.lang.String)>(r1);

        staticinvoke <org.objectweb.asm.util.CheckMethodAdapter: void checkDesc(java.lang.String,boolean)>(r2, 0);

        if r3 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid enum value");

        throw $r6;

     label1:
        $r4 = r0.<org.objectweb.asm.util.CheckAnnotationAdapter: org.objectweb.asm.AnnotationVisitor av>;

        if $r4 == null goto label2;

        $r5 = r0.<org.objectweb.asm.util.CheckAnnotationAdapter: org.objectweb.asm.AnnotationVisitor av>;

        virtualinvoke $r5.<org.objectweb.asm.AnnotationVisitor: void visitEnum(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3);

     label2:
        return;
    }

    public org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String, java.lang.String)
    {
        org.objectweb.asm.AnnotationVisitor $r4, $r5, $r6;
        org.objectweb.asm.util.CheckAnnotationAdapter r0, $r3;
        java.lang.String r1, r2;

        r0 := @this: org.objectweb.asm.util.CheckAnnotationAdapter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.objectweb.asm.util.CheckAnnotationAdapter: void checkEnd()>();

        specialinvoke r0.<org.objectweb.asm.util.CheckAnnotationAdapter: void checkName(java.lang.String)>(r1);

        staticinvoke <org.objectweb.asm.util.CheckMethodAdapter: void checkDesc(java.lang.String,boolean)>(r2, 0);

        $r3 = new org.objectweb.asm.util.CheckAnnotationAdapter;

        $r4 = r0.<org.objectweb.asm.util.CheckAnnotationAdapter: org.objectweb.asm.AnnotationVisitor av>;

        if $r4 != null goto label1;

        $r6 = null;

        goto label2;

     label1:
        $r5 = r0.<org.objectweb.asm.util.CheckAnnotationAdapter: org.objectweb.asm.AnnotationVisitor av>;

        $r6 = virtualinvoke $r5.<org.objectweb.asm.AnnotationVisitor: org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String,java.lang.String)>(r1, r2);

     label2:
        specialinvoke $r3.<org.objectweb.asm.util.CheckAnnotationAdapter: void <init>(org.objectweb.asm.AnnotationVisitor)>($r6);

        return $r3;
    }

    public org.objectweb.asm.AnnotationVisitor visitArray(java.lang.String)
    {
        org.objectweb.asm.AnnotationVisitor $r3, $r4, $r5;
        org.objectweb.asm.util.CheckAnnotationAdapter r0, $r2;
        java.lang.String r1;

        r0 := @this: org.objectweb.asm.util.CheckAnnotationAdapter;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.objectweb.asm.util.CheckAnnotationAdapter: void checkEnd()>();

        specialinvoke r0.<org.objectweb.asm.util.CheckAnnotationAdapter: void checkName(java.lang.String)>(r1);

        $r2 = new org.objectweb.asm.util.CheckAnnotationAdapter;

        $r3 = r0.<org.objectweb.asm.util.CheckAnnotationAdapter: org.objectweb.asm.AnnotationVisitor av>;

        if $r3 != null goto label1;

        $r5 = null;

        goto label2;

     label1:
        $r4 = r0.<org.objectweb.asm.util.CheckAnnotationAdapter: org.objectweb.asm.AnnotationVisitor av>;

        $r5 = virtualinvoke $r4.<org.objectweb.asm.AnnotationVisitor: org.objectweb.asm.AnnotationVisitor visitArray(java.lang.String)>(r1);

     label2:
        specialinvoke $r2.<org.objectweb.asm.util.CheckAnnotationAdapter: void <init>(org.objectweb.asm.AnnotationVisitor,boolean)>($r5, 0);

        return $r2;
    }

    public void visitEnd()
    {
        org.objectweb.asm.AnnotationVisitor $r1, $r2;
        org.objectweb.asm.util.CheckAnnotationAdapter r0;

        r0 := @this: org.objectweb.asm.util.CheckAnnotationAdapter;

        specialinvoke r0.<org.objectweb.asm.util.CheckAnnotationAdapter: void checkEnd()>();

        r0.<org.objectweb.asm.util.CheckAnnotationAdapter: boolean end> = 1;

        $r1 = r0.<org.objectweb.asm.util.CheckAnnotationAdapter: org.objectweb.asm.AnnotationVisitor av>;

        if $r1 == null goto label1;

        $r2 = r0.<org.objectweb.asm.util.CheckAnnotationAdapter: org.objectweb.asm.AnnotationVisitor av>;

        virtualinvoke $r2.<org.objectweb.asm.AnnotationVisitor: void visitEnd()>();

     label1:
        return;
    }

    private void checkEnd()
    {
        java.lang.IllegalStateException $r1;
        org.objectweb.asm.util.CheckAnnotationAdapter r0;
        boolean $z0;

        r0 := @this: org.objectweb.asm.util.CheckAnnotationAdapter;

        $z0 = r0.<org.objectweb.asm.util.CheckAnnotationAdapter: boolean end>;

        if $z0 == 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot call a visit method after visitEnd has been called");

        throw $r1;

     label1:
        return;
    }

    private void checkName(java.lang.String)
    {
        org.objectweb.asm.util.CheckAnnotationAdapter r0;
        java.lang.String r1;
        java.lang.IllegalArgumentException $r2;
        boolean $z0;

        r0 := @this: org.objectweb.asm.util.CheckAnnotationAdapter;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<org.objectweb.asm.util.CheckAnnotationAdapter: boolean named>;

        if $z0 == 0 goto label1;

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Annotation value name must not be null");

        throw $r2;

     label1:
        return;
    }
}
