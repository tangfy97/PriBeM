class org.springframework.context.'annotation'.ScopedProxyCreator extends java.lang.Object
{

    void <init>()
    {
        org.springframework.context.'annotation'.ScopedProxyCreator r0;

        r0 := @this: org.springframework.context.'annotation'.ScopedProxyCreator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.springframework.beans.factory.config.BeanDefinitionHolder createScopedProxy(org.springframework.beans.factory.config.BeanDefinitionHolder, org.springframework.beans.factory.support.BeanDefinitionRegistry, boolean)
    {
        org.springframework.beans.factory.config.BeanDefinitionHolder r0, $r2;
        org.springframework.beans.factory.support.BeanDefinitionRegistry r1;
        boolean z0;

        r0 := @parameter0: org.springframework.beans.factory.config.BeanDefinitionHolder;

        r1 := @parameter1: org.springframework.beans.factory.support.BeanDefinitionRegistry;

        z0 := @parameter2: boolean;

        $r2 = staticinvoke <org.springframework.aop.scope.ScopedProxyUtils: org.springframework.beans.factory.config.BeanDefinitionHolder createScopedProxy(org.springframework.beans.factory.config.BeanDefinitionHolder,org.springframework.beans.factory.support.BeanDefinitionRegistry,boolean)>(r0, r1, z0);

        return $r2;
    }

    public static java.lang.String getTargetBeanName(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.springframework.aop.scope.ScopedProxyUtils: java.lang.String getTargetBeanName(java.lang.String)>(r0);

        return $r1;
    }
}
