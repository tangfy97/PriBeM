public class org.apache.lucene.index.PersistentSnapshotDeletionPolicy extends org.apache.lucene.index.SnapshotDeletionPolicy implements java.io.Closeable
{
    private static final java.lang.String SNAPSHOTS_ID;
    private final org.apache.lucene.index.IndexWriter writer;

    public static java.util.Map readSnapshotsInfo(org.apache.lucene.store.Directory) throws java.io.IOException
    {
        java.lang.Throwable $r16;
        java.lang.IllegalStateException $r3, $r15;
        org.apache.lucene.index.IndexableField $r9, r12;
        java.util.HashMap $r2;
        org.apache.lucene.document.Document $r8;
        org.apache.lucene.store.Directory r0;
        int $i0, $i1, $i2;
        java.lang.String $r7, $r13, $r14;
        boolean $z0;
        java.util.Iterator $r10;
        org.apache.lucene.index.DirectoryReader $r1;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.Object $r11;

        r0 := @parameter0: org.apache.lucene.store.Directory;

        $r1 = staticinvoke <org.apache.lucene.index.DirectoryReader: org.apache.lucene.index.DirectoryReader open(org.apache.lucene.store.Directory)>(r0);

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

     label1:
        $i0 = virtualinvoke $r1.<org.apache.lucene.index.IndexReader: int numDocs()>();

        if $i0 != 1 goto label5;

        $i1 = virtualinvoke $r1.<org.apache.lucene.index.IndexReader: int maxDoc()>();

        $i2 = $i1 - 1;

        $r8 = virtualinvoke $r1.<org.apache.lucene.index.IndexReader: org.apache.lucene.document.Document document(int)>($i2);

        $r9 = virtualinvoke $r8.<org.apache.lucene.document.Document: org.apache.lucene.index.IndexableField getField(java.lang.String)>("$SNAPSHOTS_DOC$");

        if $r9 != null goto label2;

        $r15 = new java.lang.IllegalStateException;

        specialinvoke $r15.<java.lang.IllegalStateException: void <init>(java.lang.String)>("directory is not a valid snapshots store!");

        throw $r15;

     label2:
        virtualinvoke $r8.<org.apache.lucene.document.Document: void removeField(java.lang.String)>("$SNAPSHOTS_DOC$");

        $r10 = virtualinvoke $r8.<org.apache.lucene.document.Document: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r12 = (org.apache.lucene.index.IndexableField) $r11;

        $r13 = interfaceinvoke r12.<org.apache.lucene.index.IndexableField: java.lang.String name()>();

        $r14 = interfaceinvoke r12.<org.apache.lucene.index.IndexableField: java.lang.String stringValue()>();

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, $r14);

        goto label3;

     label4:
        goto label6;

     label5:
        if $i0 == 0 goto label6;

        $r3 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("should be at most 1 document in the snapshots directory: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label6:
        virtualinvoke $r1.<org.apache.lucene.index.IndexReader: void close()>();

        goto label9;

     label7:
        $r16 := @caughtexception;

     label8:
        virtualinvoke $r1.<org.apache.lucene.index.IndexReader: void close()>();

        throw $r16;

     label9:
        return $r2;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void <init>(org.apache.lucene.index.IndexDeletionPolicy, org.apache.lucene.store.Directory, org.apache.lucene.index.IndexWriterConfig$OpenMode, org.apache.lucene.util.Version) throws java.io.IOException
    {
        org.apache.lucene.index.IndexWriterConfig$OpenMode r6, $r8;
        org.apache.lucene.store.Directory r3;
        java.util.Map $r9;
        org.apache.lucene.index.IndexDeletionPolicy r1;
        java.lang.String $r15, $r17;
        boolean $z0;
        java.util.Map$Entry r13;
        java.util.Iterator $r11;
        java.util.Set $r10;
        java.io.IOException $r19;
        java.lang.RuntimeException $r21;
        org.apache.lucene.util.Version r5;
        org.apache.lucene.index.IndexWriter $r2, $r18, $r20, $r22;
        org.apache.lucene.index.PersistentSnapshotDeletionPolicy r0;
        java.lang.Object $r12, $r14, $r16;
        org.apache.lucene.index.IndexWriterConfig $r4, $r7;

        r0 := @this: org.apache.lucene.index.PersistentSnapshotDeletionPolicy;

        r1 := @parameter0: org.apache.lucene.index.IndexDeletionPolicy;

        r3 := @parameter1: org.apache.lucene.store.Directory;

        r6 := @parameter2: org.apache.lucene.index.IndexWriterConfig$OpenMode;

        r5 := @parameter3: org.apache.lucene.util.Version;

        specialinvoke r0.<org.apache.lucene.index.SnapshotDeletionPolicy: void <init>(org.apache.lucene.index.IndexDeletionPolicy,java.util.Map)>(r1, null);

        $r2 = new org.apache.lucene.index.IndexWriter;

        $r4 = new org.apache.lucene.index.IndexWriterConfig;

        specialinvoke $r4.<org.apache.lucene.index.IndexWriterConfig: void <init>(org.apache.lucene.util.Version,org.apache.lucene.analysis.Analyzer)>(r5, null);

        $r7 = virtualinvoke $r4.<org.apache.lucene.index.IndexWriterConfig: org.apache.lucene.index.IndexWriterConfig setOpenMode(org.apache.lucene.index.IndexWriterConfig$OpenMode)>(r6);

        specialinvoke $r2.<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.index.IndexWriterConfig)>(r3, $r7);

        r0.<org.apache.lucene.index.PersistentSnapshotDeletionPolicy: org.apache.lucene.index.IndexWriter writer> = $r2;

        $r8 = <org.apache.lucene.index.IndexWriterConfig$OpenMode: org.apache.lucene.index.IndexWriterConfig$OpenMode APPEND>;

        if r6 == $r8 goto label1;

        $r18 = r0.<org.apache.lucene.index.PersistentSnapshotDeletionPolicy: org.apache.lucene.index.IndexWriter writer>;

        virtualinvoke $r18.<org.apache.lucene.index.IndexWriter: void commit()>();

     label1:
        $r9 = staticinvoke <org.apache.lucene.index.PersistentSnapshotDeletionPolicy: java.util.Map readSnapshotsInfo(org.apache.lucene.store.Directory)>(r3);

        $r10 = interfaceinvoke $r9.<java.util.Map: java.util.Set entrySet()>();

        $r11 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r13 = (java.util.Map$Entry) $r12;

        $r14 = interfaceinvoke r13.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r15 = (java.lang.String) $r14;

        $r16 = interfaceinvoke r13.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r17 = (java.lang.String) $r16;

        virtualinvoke r0.<org.apache.lucene.index.PersistentSnapshotDeletionPolicy: void registerSnapshotInfo(java.lang.String,java.lang.String,org.apache.lucene.index.IndexCommit)>($r15, $r17, null);

        goto label2;

     label3:
        goto label6;

     label4:
        $r21 := @caughtexception;

        $r22 = r0.<org.apache.lucene.index.PersistentSnapshotDeletionPolicy: org.apache.lucene.index.IndexWriter writer>;

        virtualinvoke $r22.<org.apache.lucene.index.IndexWriter: void close()>();

        throw $r21;

     label5:
        $r19 := @caughtexception;

        $r20 = r0.<org.apache.lucene.index.PersistentSnapshotDeletionPolicy: org.apache.lucene.index.IndexWriter writer>;

        virtualinvoke $r20.<org.apache.lucene.index.IndexWriter: void close()>();

        throw $r19;

     label6:
        return;

        catch java.lang.RuntimeException from label1 to label3 with label4;
        catch java.io.IOException from label1 to label3 with label5;
    }

    public synchronized void onInit(java.util.List) throws java.io.IOException
    {
        java.util.List r1;
        org.apache.lucene.index.PersistentSnapshotDeletionPolicy r0;

        r0 := @this: org.apache.lucene.index.PersistentSnapshotDeletionPolicy;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<org.apache.lucene.index.SnapshotDeletionPolicy: void onInit(java.util.List)>(r1);

        specialinvoke r0.<org.apache.lucene.index.PersistentSnapshotDeletionPolicy: void persistSnapshotInfos(java.lang.String,java.lang.String)>(null, null);

        return;
    }

    public synchronized org.apache.lucene.index.IndexCommit snapshot(java.lang.String) throws java.io.IOException
    {
        org.apache.lucene.index.IndexCommit $r3, $r5;
        java.lang.IllegalArgumentException $r6;
        org.apache.lucene.index.PersistentSnapshotDeletionPolicy r0;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String r1, $r2, $r4, $r10;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.PersistentSnapshotDeletionPolicy;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.lucene.index.PersistentSnapshotDeletionPolicy: void checkSnapshotted(java.lang.String)>(r1);

        $r2 = "$SNAPSHOTS_DOC$";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is reserved and cannot be used as a snapshot id");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r6;

     label1:
        $r3 = r0.<org.apache.lucene.index.PersistentSnapshotDeletionPolicy: org.apache.lucene.index.IndexCommit lastCommit>;

        $r4 = virtualinvoke $r3.<org.apache.lucene.index.IndexCommit: java.lang.String getSegmentsFileName()>();

        specialinvoke r0.<org.apache.lucene.index.PersistentSnapshotDeletionPolicy: void persistSnapshotInfos(java.lang.String,java.lang.String)>(r1, $r4);

        $r5 = specialinvoke r0.<org.apache.lucene.index.SnapshotDeletionPolicy: org.apache.lucene.index.IndexCommit snapshot(java.lang.String)>(r1);

        return $r5;
    }

    public synchronized void release(java.lang.String) throws java.io.IOException
    {
        java.lang.String r1;
        org.apache.lucene.index.PersistentSnapshotDeletionPolicy r0;

        r0 := @this: org.apache.lucene.index.PersistentSnapshotDeletionPolicy;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.lucene.index.SnapshotDeletionPolicy: void release(java.lang.String)>(r1);

        specialinvoke r0.<org.apache.lucene.index.PersistentSnapshotDeletionPolicy: void persistSnapshotInfos(java.lang.String,java.lang.String)>(null, null);

        return;
    }

    public void close() throws java.io.IOException
    {
        org.apache.lucene.index.IndexWriter $r1;
        org.apache.lucene.index.PersistentSnapshotDeletionPolicy r0;

        r0 := @this: org.apache.lucene.index.PersistentSnapshotDeletionPolicy;

        $r1 = r0.<org.apache.lucene.index.PersistentSnapshotDeletionPolicy: org.apache.lucene.index.IndexWriter writer>;

        virtualinvoke $r1.<org.apache.lucene.index.IndexWriter: void close()>();

        return;
    }

    private void persistSnapshotInfos(java.lang.String, java.lang.String) throws java.io.IOException
    {
        org.apache.lucene.document.FieldType $r3;
        org.apache.lucene.document.Document $r2;
        java.util.Map $r5;
        java.lang.String r8, r12, $r17, $r19;
        boolean $z0;
        java.util.Map$Entry r14;
        java.util.Iterator $r7;
        java.util.Set $r6;
        org.apache.lucene.index.IndexWriter $r1, $r9, $r10;
        org.apache.lucene.document.Field $r4, $r11, $r15;
        org.apache.lucene.index.PersistentSnapshotDeletionPolicy r0;
        java.lang.Object $r13, $r16, $r18;

        r0 := @this: org.apache.lucene.index.PersistentSnapshotDeletionPolicy;

        r8 := @parameter0: java.lang.String;

        r12 := @parameter1: java.lang.String;

        $r1 = r0.<org.apache.lucene.index.PersistentSnapshotDeletionPolicy: org.apache.lucene.index.IndexWriter writer>;

        virtualinvoke $r1.<org.apache.lucene.index.IndexWriter: void deleteAll()>();

        $r2 = new org.apache.lucene.document.Document;

        specialinvoke $r2.<org.apache.lucene.document.Document: void <init>()>();

        $r3 = new org.apache.lucene.document.FieldType;

        specialinvoke $r3.<org.apache.lucene.document.FieldType: void <init>()>();

        virtualinvoke $r3.<org.apache.lucene.document.FieldType: void setStored(boolean)>(1);

        $r4 = new org.apache.lucene.document.Field;

        specialinvoke $r4.<org.apache.lucene.document.Field: void <init>(java.lang.String,java.lang.String,org.apache.lucene.document.FieldType)>("$SNAPSHOTS_DOC$", "", $r3);

        virtualinvoke $r2.<org.apache.lucene.document.Document: void add(org.apache.lucene.index.IndexableField)>($r4);

        $r5 = specialinvoke r0.<org.apache.lucene.index.SnapshotDeletionPolicy: java.util.Map getSnapshots()>();

        $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Set entrySet()>();

        $r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r13 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r14 = (java.util.Map$Entry) $r13;

        $r15 = new org.apache.lucene.document.Field;

        $r16 = interfaceinvoke r14.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r17 = (java.lang.String) $r16;

        $r18 = interfaceinvoke r14.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r19 = (java.lang.String) $r18;

        specialinvoke $r15.<org.apache.lucene.document.Field: void <init>(java.lang.String,java.lang.String,org.apache.lucene.document.FieldType)>($r17, $r19, $r3);

        virtualinvoke $r2.<org.apache.lucene.document.Document: void add(org.apache.lucene.index.IndexableField)>($r15);

        goto label1;

     label2:
        if r8 == null goto label3;

        $r11 = new org.apache.lucene.document.Field;

        specialinvoke $r11.<org.apache.lucene.document.Field: void <init>(java.lang.String,java.lang.String,org.apache.lucene.document.FieldType)>(r8, r12, $r3);

        virtualinvoke $r2.<org.apache.lucene.document.Document: void add(org.apache.lucene.index.IndexableField)>($r11);

     label3:
        $r9 = r0.<org.apache.lucene.index.PersistentSnapshotDeletionPolicy: org.apache.lucene.index.IndexWriter writer>;

        virtualinvoke $r9.<org.apache.lucene.index.IndexWriter: void addDocument(java.lang.Iterable)>($r2);

        $r10 = r0.<org.apache.lucene.index.PersistentSnapshotDeletionPolicy: org.apache.lucene.index.IndexWriter writer>;

        virtualinvoke $r10.<org.apache.lucene.index.IndexWriter: void commit()>();

        return;
    }

    public static void <clinit>()
    {
        <org.apache.lucene.index.PersistentSnapshotDeletionPolicy: java.lang.String SNAPSHOTS_ID> = "$SNAPSHOTS_DOC$";

        return;
    }
}
