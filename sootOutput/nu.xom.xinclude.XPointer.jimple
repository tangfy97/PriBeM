class nu.xom.xinclude.XPointer extends java.lang.Object
{

    private void <init>()
    {
        nu.xom.xinclude.XPointer r0;

        r0 := @this: nu.xom.xinclude.XPointer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static nu.xom.Nodes query(nu.xom.Document, java.lang.String) throws nu.xom.xinclude.XPointerSyntaxException, nu.xom.xinclude.XPointerResourceException
    {
        nu.xom.xinclude.XPointerSyntaxException $r35;
        int[] r31;
        boolean $z0, $z1, z2, z3, z4, z5;
        java.util.List $r29;
        nu.xom.XMLException $r14;
        nu.xom.xinclude.XPointerResourceException $r39;
        nu.xom.Element $r4, $r5, $r18, $r21, $r22, $r25, $r26, $r34, $r36, $r37;
        java.lang.StringBuffer $r8, $r9, $r10, $r12, $r38;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, $i7, $i9;
        nu.xom.Nodes $r33;
        java.lang.String r2, $r11, $r13, $r16, r17, $r19, $r23;
        nu.xom.ParentNode r32;
        java.lang.Object $r15;
        nu.xom.Document r3;
        nu.xom.IllegalNameException $r27, $r28;

        r3 := @parameter0: nu.xom.Document;

        r2 := @parameter1: java.lang.String;

        $r33 = new nu.xom.Nodes;

        specialinvoke $r33.<nu.xom.Nodes: void <init>()>();

        z2 = 0;

        z5 = 0;

        z4 = 0;

        z3 = 0;

     label01:
        $r34 = new nu.xom.Element;

        specialinvoke $r34.<nu.xom.Element: void <init>(java.lang.String,java.lang.String)>(r2, "http://www.example.com");

        $r4 = virtualinvoke r3.<nu.xom.Document: nu.xom.Element getRootElement()>();

        $r5 = staticinvoke <nu.xom.xinclude.XPointer: nu.xom.Element findByID(nu.xom.Element,java.lang.String)>($r4, r2);

        if $r5 == null goto label03;

        virtualinvoke $r33.<nu.xom.Nodes: void append(nu.xom.Node)>($r5);

     label02:
        return $r33;

     label03:
        goto label26;

     label04:
        $r28 := @caughtexception;

        $r29 = staticinvoke <nu.xom.xinclude.XPointer: java.util.List findElementSchemeData(java.lang.String)>(r2);

        $z1 = interfaceinvoke $r29.<java.util.List: boolean isEmpty()>();

        if $z1 == 0 goto label05;

        $r35 = new nu.xom.xinclude.XPointerSyntaxException;

        specialinvoke $r35.<nu.xom.xinclude.XPointerSyntaxException: void <init>(java.lang.String)>("No supported XPointer schemes found");

        throw $r35;

     label05:
        i5 = 0;

     label06:
        $i0 = interfaceinvoke $r29.<java.util.List: int size()>();

        if i5 >= $i0 goto label26;

        $r15 = interfaceinvoke $r29.<java.util.List: java.lang.Object get(int)>(i5);

        $r16 = (java.lang.String) $r15;

        r17 = (java.lang.String) $r16;

        r31 = newarray (int)[0];

        r32 = r3;

        $i1 = virtualinvoke r17.<java.lang.String: int indexOf(int)>(47);

        $i9 = (int) -1;

        if $i1 != $i9 goto label13;

     label07:
        $r36 = new nu.xom.Element;

        specialinvoke $r36.<nu.xom.Element: void <init>(java.lang.String)>(r17);

     label08:
        goto label10;

     label09:
        $r27 := @caughtexception;

        goto label25;

     label10:
        $r25 = virtualinvoke r3.<nu.xom.Document: nu.xom.Element getRootElement()>();

        $r26 = staticinvoke <nu.xom.xinclude.XPointer: nu.xom.Element findByID(nu.xom.Element,java.lang.String)>($r25, r17);

        if $r26 == null goto label12;

        if z3 != 0 goto label11;

        virtualinvoke $r33.<nu.xom.Nodes: void append(nu.xom.Node)>($r26);

     label11:
        z2 = 1;

        z5 = 1;

        z4 = 1;

        z3 = 1;

     label12:
        goto label20;

     label13:
        $z0 = virtualinvoke r17.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z0 != 0 goto label19;

        $i3 = virtualinvoke r17.<java.lang.String: int indexOf(int)>(47);

        $r19 = virtualinvoke r17.<java.lang.String: java.lang.String substring(int,int)>(0, $i3);

     label14:
        $r37 = new nu.xom.Element;

        specialinvoke $r37.<nu.xom.Element: void <init>(java.lang.String)>($r19);

     label15:
        goto label17;

     label16:
        $r14 := @caughtexception;

        goto label25;

     label17:
        $r21 = virtualinvoke r3.<nu.xom.Document: nu.xom.Element getRootElement()>();

        $r22 = staticinvoke <nu.xom.xinclude.XPointer: nu.xom.Element findByID(nu.xom.Element,java.lang.String)>($r21, $r19);

        r32 = $r22;

        $i4 = virtualinvoke r17.<java.lang.String: int indexOf(int)>(47);

        $r23 = virtualinvoke r17.<java.lang.String: java.lang.String substring(int)>($i4);

        r31 = staticinvoke <nu.xom.xinclude.XPointer: int[] split(java.lang.String)>($r23);

        if $r22 != null goto label18;

        goto label25;

     label18:
        goto label20;

     label19:
        r31 = staticinvoke <nu.xom.xinclude.XPointer: int[] split(java.lang.String)>(r17);

     label20:
        i6 = 0;

     label21:
        $i7 = lengthof r31;

        if i6 >= $i7 goto label23;

        $i2 = r31[i6];

        $r18 = staticinvoke <nu.xom.xinclude.XPointer: nu.xom.Element findNthChildElement(nu.xom.ParentNode,int)>(r32, $i2);

        r32 = $r18;

        if $r18 != null goto label22;

        goto label23;

     label22:
        i6 = i6 + 1;

        goto label21;

     label23:
        if r32 == r3 goto label25;

        if r32 == null goto label25;

        if z4 != 0 goto label24;

        virtualinvoke $r33.<nu.xom.Nodes: void append(nu.xom.Node)>(r32);

     label24:
        z2 = 1;

        z5 = 1;

        z4 = 1;

        z3 = 1;

     label25:
        i5 = i5 + 1;

        goto label06;

     label26:
        if z5 == 0 goto label27;

        return $r33;

     label27:
        $r39 = new nu.xom.xinclude.XPointerResourceException;

        $r38 = new java.lang.StringBuffer;

        specialinvoke $r38.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("XPointer ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" did not locate any nodes in the document ");

        $r11 = virtualinvoke r3.<nu.xom.Document: java.lang.String getBaseURI()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r39.<nu.xom.xinclude.XPointerResourceException: void <init>(java.lang.String)>($r13);

        throw $r39;

        catch nu.xom.IllegalNameException from label01 to label02 with label04;
        catch nu.xom.IllegalNameException from label07 to label08 with label09;
        catch nu.xom.XMLException from label14 to label15 with label16;
    }

    private static nu.xom.Element findNthChildElement(nu.xom.ParentNode, int)
    {
        nu.xom.Element $r2;
        nu.xom.Node $r1;
        int $i0, i1, i2, i3;
        nu.xom.ParentNode r0;
        boolean $z0;

        r0 := @parameter0: nu.xom.ParentNode;

        i1 := @parameter1: int;

        i2 = 1;

        i3 = 0;

     label1:
        $i0 = virtualinvoke r0.<nu.xom.ParentNode: int getChildCount()>();

        if i3 >= $i0 goto label4;

        $r1 = virtualinvoke r0.<nu.xom.ParentNode: nu.xom.Node getChild(int)>(i3);

        $z0 = $r1 instanceof nu.xom.Element;

        if $z0 == 0 goto label3;

        if i2 != i1 goto label2;

        $r2 = (nu.xom.Element) $r1;

        return $r2;

     label2:
        i2 = i2 + 1;

     label3:
        i3 = i3 + 1;

        goto label1;

     label4:
        return null;
    }

    private static int[] split(java.lang.String) throws nu.xom.xinclude.XPointerSyntaxException
    {
        nu.xom.xinclude.XPointerSyntaxException $r16;
        int[] r11;
        java.lang.StringBuffer $r8, $r9, r12, $r13, $r14, $r15;
        int $i0, $i1, $i2, $i3, $i4, $i7, i9, i10, i11, i12, $i13, $i14;
        java.lang.String r0, $r2, $r3, $r10;
        char $c5, $c6, $c8;
        java.lang.NumberFormatException $r5;

        r0 := @parameter0: java.lang.String;

        i9 = 0;

        i10 = 0;

     label01:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i10 >= $i0 goto label03;

        $c8 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i10);

        $i13 = (int) $c8;

        if $i13 != 47 goto label02;

        i9 = i9 + 1;

     label02:
        i10 = i10 + 1;

        goto label01;

     label03:
        r11 = newarray (int)[i9];

        i11 = 0;

        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>(int)>(3);

        r12 = $r13;

     label04:
        i12 = 1;

     label05:
        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if i12 >= $i1 goto label08;

        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i12);

        $i14 = (int) $c5;

        if $i14 != 47 goto label06;

        $r3 = virtualinvoke r12.<java.lang.StringBuffer: java.lang.String toString()>();

        $i7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3);

        r11[i11] = $i7;

        i11 = i11 + 1;

        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>(int)>(3);

        r12 = $r14;

        goto label07;

     label06:
        $c6 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i12);

        virtualinvoke r12.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c6);

     label07:
        i12 = i12 + 1;

        goto label05;

     label08:
        $i2 = lengthof r11;

        $i3 = $i2 - 1;

        $r2 = virtualinvoke r12.<java.lang.StringBuffer: java.lang.String toString()>();

        $i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

        r11[$i3] = $i4;

     label09:
        goto label11;

     label10:
        $r5 := @caughtexception;

        $r16 = new nu.xom.xinclude.XPointerSyntaxException;

        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" is not syntactically correct");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r16.<nu.xom.xinclude.XPointerSyntaxException: void <init>(java.lang.String,java.lang.Throwable)>($r10, $r5);

        throw $r16;

     label11:
        return r11;

        catch java.lang.NumberFormatException from label04 to label09 with label10;
    }

    private static java.util.List findElementSchemeData(java.lang.String) throws nu.xom.xinclude.XPointerSyntaxException
    {
        nu.xom.xinclude.XPointerSyntaxException $r22, $r24, $r25;
        boolean $z0;
        java.lang.StringIndexOutOfBoundsException $r13;
        java.util.List $r10;
        nu.xom.Element $r21;
        java.util.ArrayList $r18;
        java.lang.StringBuffer $r19, $r20, $r23;
        int $i0, $i1, $i2, $i4, i7, i8, i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i18;
        java.lang.String r2, $r3, $r6, $r8, $r9, $r11, $r17;
        char $c3, $c5, $c6;
        nu.xom.IllegalNameException $r15;

        r2 := @parameter0: java.lang.String;

        $r18 = new java.util.ArrayList;

        specialinvoke $r18.<java.util.ArrayList: void <init>(int)>(1);

        $r19 = new java.lang.StringBuffer;

        $r3 = virtualinvoke r2.<java.lang.String: java.lang.String trim()>();

        specialinvoke $r19.<java.lang.StringBuffer: void <init>(java.lang.String)>($r3);

        $r20 = new java.lang.StringBuffer;

        specialinvoke $r20.<java.lang.StringBuffer: void <init>()>();

        i7 = 0;

     label01:
        $i0 = virtualinvoke $r19.<java.lang.StringBuffer: int length()>();

        if i7 >= $i0 goto label03;

        $c6 = virtualinvoke $r19.<java.lang.StringBuffer: char charAt(int)>(i7);

        $i10 = (int) $c6;

        if $i10 != 40 goto label02;

        goto label03;

     label02:
        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c6);

        i7 = i7 + 1;

        goto label01;

     label03:
        $r21 = new nu.xom.Element;

        $r6 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r21.<nu.xom.Element: void <init>(java.lang.String,java.lang.String)>($r6, "http://www.example.com/");

     label04:
        goto label06;

     label05:
        $r15 := @caughtexception;

        $r22 = new nu.xom.xinclude.XPointerSyntaxException;

        $r17 = virtualinvoke $r15.<nu.xom.IllegalNameException: java.lang.String getMessage()>();

        specialinvoke $r22.<nu.xom.xinclude.XPointerSyntaxException: void <init>(java.lang.String)>($r17);

        throw $r22;

     label06:
        i8 = 1;

        i9 = i7 + 1;

        $r23 = new java.lang.StringBuffer;

        specialinvoke $r23.<java.lang.StringBuffer: void <init>()>();

     label07:
        if i8 <= 0 goto label13;

        $c3 = virtualinvoke $r19.<java.lang.StringBuffer: char charAt(int)>(i9);

        $i11 = (int) $c3;

        if $i11 != 94 goto label09;

        $i4 = i9 + 1;

        $c5 = virtualinvoke $r19.<java.lang.StringBuffer: char charAt(int)>($i4);

        virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c5);

        $i12 = (int) $c5;

        if $i12 == 94 goto label08;

        $i13 = (int) $c5;

        if $i13 == 40 goto label08;

        $i14 = (int) $c5;

        if $i14 == 41 goto label08;

        $r24 = new nu.xom.xinclude.XPointerSyntaxException;

        specialinvoke $r24.<nu.xom.xinclude.XPointerSyntaxException: void <init>(java.lang.String)>("Illegal XPointer escape sequence");

        throw $r24;

     label08:
        i9 = i9 + 1;

        goto label12;

     label09:
        $i15 = (int) $c3;

        if $i15 != 40 goto label10;

        virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

        i8 = i8 + 1;

        goto label12;

     label10:
        $i16 = (int) $c3;

        if $i16 != 41 goto label11;

        $i18 = (int) -1;

        i8 = i8 + $i18;

        if i8 <= 0 goto label12;

        virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

        goto label12;

     label11:
        virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

     label12:
        i9 = i9 + 1;

        goto label07;

     label13:
        goto label15;

     label14:
        $r13 := @caughtexception;

        $r25 = new nu.xom.xinclude.XPointerSyntaxException;

        specialinvoke $r25.<nu.xom.xinclude.XPointerSyntaxException: void <init>(java.lang.String)>("Unbalanced parentheses");

        throw $r25;

     label15:
        $r8 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("element");

        if $z0 == 0 goto label16;

        $r11 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r18.<java.util.List: boolean add(java.lang.Object)>($r11);

     label16:
        $i1 = i9 + 1;

        $i2 = virtualinvoke $r19.<java.lang.StringBuffer: int length()>();

        if $i1 >= $i2 goto label17;

        $r9 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String substring(int)>(i9);

        $r10 = staticinvoke <nu.xom.xinclude.XPointer: java.util.List findElementSchemeData(java.lang.String)>($r9);

        interfaceinvoke $r18.<java.util.List: boolean addAll(java.util.Collection)>($r10);

     label17:
        return $r18;

        catch nu.xom.IllegalNameException from label03 to label04 with label05;
        catch java.lang.StringIndexOutOfBoundsException from label07 to label13 with label14;
    }

    static nu.xom.Element findByID(nu.xom.Element, java.lang.String)
    {
        nu.xom.Element r0, r10;
        nu.xom.Attribute$Type $r4, $r5;
        int $i0, $i1, $i2, $i3, i4, i5, $i7;
        nu.xom.ParentNode $r1, $r2;
        java.lang.String $r6, $r7, r8;
        boolean $z0, z1, $z2, z3, z4;
        nu.xom.Node r9;
        nu.xom.Attribute $r3;

        r0 := @parameter0: nu.xom.Element;

        r8 := @parameter1: java.lang.String;

        r9 = r0;

        z1 = 0;

        z4 = 0;

        z3 = 0;

        $i7 = (int) -1;

        i4 = $i7;

     label01:
        $z2 = r9 instanceof nu.xom.Element;

        if $z2 == 0 goto label04;

        r10 = (nu.xom.Element) r9;

        i5 = 0;

     label02:
        $i3 = virtualinvoke r10.<nu.xom.Element: int getAttributeCount()>();

        if i5 >= $i3 goto label04;

        $r3 = virtualinvoke r10.<nu.xom.Element: nu.xom.Attribute getAttribute(int)>(i5);

        $r4 = virtualinvoke $r3.<nu.xom.Attribute: nu.xom.Attribute$Type getType()>();

        $r5 = <nu.xom.Attribute$Type: nu.xom.Attribute$Type ID>;

        if $r4 != $r5 goto label03;

        $r6 = virtualinvoke $r3.<nu.xom.Attribute: java.lang.String getValue()>();

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r8);

        if $z0 == 0 goto label03;

        return r10;

     label03:
        i5 = i5 + 1;

        goto label02;

     label04:
        if z3 != 0 goto label05;

        $i2 = virtualinvoke r9.<nu.xom.Node: int getChildCount()>();

        if $i2 <= 0 goto label05;

        r9 = virtualinvoke r9.<nu.xom.Node: nu.xom.Node getChild(int)>(0);

        i4 = 0;

        goto label01;

     label05:
        if z4 == 0 goto label06;

        if r9 != r0 goto label06;

        goto label10;

     label06:
        z1 = 0;

        z4 = 0;

        z3 = 0;

        $r1 = virtualinvoke r9.<nu.xom.Node: nu.xom.ParentNode getParent()>();

        $i0 = virtualinvoke $r1.<nu.xom.ParentNode: int getChildCount()>();

        $i1 = $i0 - 1;

        if $i1 != i4 goto label08;

        r9 = $r1;

        if $r1 == r0 goto label07;

        $r2 = virtualinvoke $r1.<nu.xom.Node: nu.xom.ParentNode getParent()>();

        i4 = virtualinvoke $r2.<nu.xom.ParentNode: int indexOf(nu.xom.Node)>($r1);

     label07:
        z1 = 1;

        z4 = 1;

        z3 = 1;

        goto label09;

     label08:
        i4 = i4 + 1;

        r9 = virtualinvoke $r1.<nu.xom.ParentNode: nu.xom.Node getChild(int)>(i4);

     label09:
        goto label01;

     label10:
        return null;
    }
}
