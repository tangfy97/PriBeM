public final class kodkod.ast.IntToExprCast extends kodkod.ast.Expression
{
    private final kodkod.ast.IntExpression intExpr;
    private final kodkod.ast.operator.IntCastOperator op;

    void <init>(kodkod.ast.IntExpression, kodkod.ast.operator.IntCastOperator)
    {
        kodkod.ast.operator.IntCastOperator r2;
        kodkod.ast.IntExpression r1;
        kodkod.ast.IntToExprCast r0;

        r0 := @this: kodkod.ast.IntToExprCast;

        r1 := @parameter0: kodkod.ast.IntExpression;

        r2 := @parameter1: kodkod.ast.operator.IntCastOperator;

        specialinvoke r0.<kodkod.ast.Expression: void <init>()>();

        r0.<kodkod.ast.IntToExprCast: kodkod.ast.IntExpression intExpr> = r1;

        r0.<kodkod.ast.IntToExprCast: kodkod.ast.operator.IntCastOperator op> = r2;

        return;
    }

    public int arity()
    {
        kodkod.ast.IntToExprCast r0;

        r0 := @this: kodkod.ast.IntToExprCast;

        return 1;
    }

    public kodkod.ast.IntExpression intExpr()
    {
        kodkod.ast.IntExpression $r1;
        kodkod.ast.IntToExprCast r0;

        r0 := @this: kodkod.ast.IntToExprCast;

        $r1 = r0.<kodkod.ast.IntToExprCast: kodkod.ast.IntExpression intExpr>;

        return $r1;
    }

    public final kodkod.ast.operator.IntCastOperator op()
    {
        kodkod.ast.operator.IntCastOperator $r1;
        kodkod.ast.IntToExprCast r0;

        r0 := @this: kodkod.ast.IntToExprCast;

        $r1 = r0.<kodkod.ast.IntToExprCast: kodkod.ast.operator.IntCastOperator op>;

        return $r1;
    }

    public java.lang.Object accept(kodkod.ast.visitor.ReturnVisitor)
    {
        java.lang.Object $r2;
        kodkod.ast.IntToExprCast r1;
        kodkod.ast.visitor.ReturnVisitor r0;

        r1 := @this: kodkod.ast.IntToExprCast;

        r0 := @parameter0: kodkod.ast.visitor.ReturnVisitor;

        $r2 = interfaceinvoke r0.<kodkod.ast.visitor.ReturnVisitor: java.lang.Object visit(kodkod.ast.IntToExprCast)>(r1);

        return $r2;
    }

    public void accept(kodkod.ast.visitor.VoidVisitor)
    {
        kodkod.ast.IntToExprCast r1;
        kodkod.ast.visitor.VoidVisitor r0;

        r1 := @this: kodkod.ast.IntToExprCast;

        r0 := @parameter0: kodkod.ast.visitor.VoidVisitor;

        interfaceinvoke r0.<kodkod.ast.visitor.VoidVisitor: void visit(kodkod.ast.IntToExprCast)>(r1);

        return;
    }

    public java.lang.String toString()
    {
        kodkod.ast.IntExpression $r5;
        kodkod.ast.IntToExprCast r1;
        kodkod.ast.operator.IntCastOperator $r2;
        java.lang.StringBuilder $r0, $r3, $r4, $r6, $r7;
        java.lang.String $r8;

        r1 := @this: kodkod.ast.IntToExprCast;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<kodkod.ast.IntToExprCast: kodkod.ast.operator.IntCastOperator op>;

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r5 = r1.<kodkod.ast.IntToExprCast: kodkod.ast.IntExpression intExpr>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }
}
