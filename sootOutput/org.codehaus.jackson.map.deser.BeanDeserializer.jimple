public class org.codehaus.jackson.map.deser.BeanDeserializer extends org.codehaus.jackson.map.deser.std.StdDeserializer implements org.codehaus.jackson.map.ResolvableDeserializer
{
    protected final org.codehaus.jackson.map.introspect.AnnotatedClass _forClass;
    protected final org.codehaus.jackson.type.JavaType _beanType;
    protected final org.codehaus.jackson.map.BeanProperty _property;
    protected final org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator;
    protected org.codehaus.jackson.map.JsonDeserializer _delegateDeserializer;
    protected final org.codehaus.jackson.map.deser.impl.PropertyBasedCreator _propertyBasedCreator;
    protected boolean _nonStandardCreation;
    protected final org.codehaus.jackson.map.deser.impl.BeanPropertyMap _beanProperties;
    protected final org.codehaus.jackson.map.deser.impl.ValueInjector[] _injectables;
    protected org.codehaus.jackson.map.deser.SettableAnyProperty _anySetter;
    protected final java.util.HashSet _ignorableProps;
    protected final boolean _ignoreAllUnknown;
    protected final java.util.Map _backRefs;
    protected java.util.HashMap _subDeserializers;
    protected org.codehaus.jackson.map.deser.impl.UnwrappedPropertyHandler _unwrappedPropertyHandler;
    protected org.codehaus.jackson.map.deser.impl.ExternalTypeHandler _externalTypeIdHandler;

    public void <init>(org.codehaus.jackson.map.introspect.AnnotatedClass, org.codehaus.jackson.type.JavaType, org.codehaus.jackson.map.BeanProperty, org.codehaus.jackson.map.deser.impl.CreatorCollector, org.codehaus.jackson.map.deser.impl.BeanPropertyMap, java.util.Map, java.util.HashSet, boolean, org.codehaus.jackson.map.deser.SettableAnyProperty)
    {
        org.codehaus.jackson.map.deser.ValueInstantiator $r5;
        org.codehaus.jackson.map.deser.impl.BeanPropertyMap r6;
        org.codehaus.jackson.map.deser.SettableAnyProperty r9;
        org.codehaus.jackson.map.deser.BeanDeserializer r0;
        org.codehaus.jackson.map.BeanProperty r3;
        java.util.HashSet r8;
        org.codehaus.jackson.map.deser.impl.CreatorCollector r4;
        org.codehaus.jackson.map.introspect.AnnotatedClass r1;
        java.util.Map r7;
        org.codehaus.jackson.type.JavaType r2;
        boolean z0;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializer;

        r1 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedClass;

        r2 := @parameter1: org.codehaus.jackson.type.JavaType;

        r3 := @parameter2: org.codehaus.jackson.map.BeanProperty;

        r4 := @parameter3: org.codehaus.jackson.map.deser.impl.CreatorCollector;

        r6 := @parameter4: org.codehaus.jackson.map.deser.impl.BeanPropertyMap;

        r7 := @parameter5: java.util.Map;

        r8 := @parameter6: java.util.HashSet;

        z0 := @parameter7: boolean;

        r9 := @parameter8: org.codehaus.jackson.map.deser.SettableAnyProperty;

        $r5 = virtualinvoke r4.<org.codehaus.jackson.map.deser.impl.CreatorCollector: org.codehaus.jackson.map.deser.ValueInstantiator constructValueInstantiator(org.codehaus.jackson.map.DeserializationConfig)>(null);

        specialinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializer: void <init>(org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.deser.ValueInstantiator,org.codehaus.jackson.map.deser.impl.BeanPropertyMap,java.util.Map,java.util.HashSet,boolean,org.codehaus.jackson.map.deser.SettableAnyProperty,java.util.List)>(r1, r2, r3, $r5, r6, r7, r8, z0, r9, null);

        return;
    }

    public void <init>(org.codehaus.jackson.map.BeanDescription, org.codehaus.jackson.map.BeanProperty, org.codehaus.jackson.map.deser.ValueInstantiator, org.codehaus.jackson.map.deser.impl.BeanPropertyMap, java.util.Map, java.util.HashSet, boolean, org.codehaus.jackson.map.deser.SettableAnyProperty, java.util.List)
    {
        org.codehaus.jackson.map.deser.ValueInstantiator r5;
        org.codehaus.jackson.map.deser.impl.BeanPropertyMap r6;
        org.codehaus.jackson.map.deser.SettableAnyProperty r9;
        org.codehaus.jackson.map.deser.BeanDeserializer r0;
        org.codehaus.jackson.map.BeanProperty r4;
        java.util.HashSet r8;
        java.util.List r10;
        org.codehaus.jackson.map.introspect.AnnotatedClass $r2;
        java.util.Map r7;
        org.codehaus.jackson.type.JavaType $r3;
        org.codehaus.jackson.map.BeanDescription r1;
        boolean z0;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializer;

        r1 := @parameter0: org.codehaus.jackson.map.BeanDescription;

        r4 := @parameter1: org.codehaus.jackson.map.BeanProperty;

        r5 := @parameter2: org.codehaus.jackson.map.deser.ValueInstantiator;

        r6 := @parameter3: org.codehaus.jackson.map.deser.impl.BeanPropertyMap;

        r7 := @parameter4: java.util.Map;

        r8 := @parameter5: java.util.HashSet;

        z0 := @parameter6: boolean;

        r9 := @parameter7: org.codehaus.jackson.map.deser.SettableAnyProperty;

        r10 := @parameter8: java.util.List;

        $r2 = virtualinvoke r1.<org.codehaus.jackson.map.BeanDescription: org.codehaus.jackson.map.introspect.AnnotatedClass getClassInfo()>();

        $r3 = virtualinvoke r1.<org.codehaus.jackson.map.BeanDescription: org.codehaus.jackson.type.JavaType getType()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializer: void <init>(org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.deser.ValueInstantiator,org.codehaus.jackson.map.deser.impl.BeanPropertyMap,java.util.Map,java.util.HashSet,boolean,org.codehaus.jackson.map.deser.SettableAnyProperty,java.util.List)>($r2, $r3, r4, r5, r6, r7, r8, z0, r9, r10);

        return;
    }

    protected void <init>(org.codehaus.jackson.map.introspect.AnnotatedClass, org.codehaus.jackson.type.JavaType, org.codehaus.jackson.map.BeanProperty, org.codehaus.jackson.map.deser.ValueInstantiator, org.codehaus.jackson.map.deser.impl.BeanPropertyMap, java.util.Map, java.util.HashSet, boolean, org.codehaus.jackson.map.deser.SettableAnyProperty, java.util.List)
    {
        java.lang.Object[] $r13;
        org.codehaus.jackson.map.deser.impl.BeanPropertyMap r5;
        org.codehaus.jackson.map.deser.SettableAnyProperty r8;
        java.util.HashSet r7;
        org.codehaus.jackson.map.introspect.AnnotatedClass r2;
        java.util.Map r6;
        int $i0;
        org.codehaus.jackson.type.JavaType r1;
        boolean $z0, z1, $z2, $z3, $z4, $z5;
        org.codehaus.jackson.map.deser.impl.ValueInjector[] $r12, $r15;
        org.codehaus.jackson.map.deser.ValueInstantiator r4;
        org.codehaus.jackson.map.deser.impl.UnwrappedPropertyHandler $r11;
        org.codehaus.jackson.map.deser.BeanDeserializer r0;
        org.codehaus.jackson.map.BeanProperty r3;
        java.util.List r9;
        org.codehaus.jackson.map.deser.impl.PropertyBasedCreator $r10, $r14;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializer;

        r2 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedClass;

        r1 := @parameter1: org.codehaus.jackson.type.JavaType;

        r3 := @parameter2: org.codehaus.jackson.map.BeanProperty;

        r4 := @parameter3: org.codehaus.jackson.map.deser.ValueInstantiator;

        r5 := @parameter4: org.codehaus.jackson.map.deser.impl.BeanPropertyMap;

        r6 := @parameter5: java.util.Map;

        r7 := @parameter6: java.util.HashSet;

        z1 := @parameter7: boolean;

        r8 := @parameter8: org.codehaus.jackson.map.deser.SettableAnyProperty;

        r9 := @parameter9: java.util.List;

        specialinvoke r0.<org.codehaus.jackson.map.deser.std.StdDeserializer: void <init>(org.codehaus.jackson.type.JavaType)>(r1);

        r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.introspect.AnnotatedClass _forClass> = r2;

        r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.type.JavaType _beanType> = r1;

        r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.BeanProperty _property> = r3;

        r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator> = r4;

        $z0 = virtualinvoke r4.<org.codehaus.jackson.map.deser.ValueInstantiator: boolean canCreateFromObjectWith()>();

        if $z0 == 0 goto label1;

        $r14 = new org.codehaus.jackson.map.deser.impl.PropertyBasedCreator;

        specialinvoke $r14.<org.codehaus.jackson.map.deser.impl.PropertyBasedCreator: void <init>(org.codehaus.jackson.map.deser.ValueInstantiator)>(r4);

        r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.impl.PropertyBasedCreator _propertyBasedCreator> = $r14;

        goto label2;

     label1:
        r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.impl.PropertyBasedCreator _propertyBasedCreator> = null;

     label2:
        r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.impl.BeanPropertyMap _beanProperties> = r5;

        r0.<org.codehaus.jackson.map.deser.BeanDeserializer: java.util.Map _backRefs> = r6;

        r0.<org.codehaus.jackson.map.deser.BeanDeserializer: java.util.HashSet _ignorableProps> = r7;

        r0.<org.codehaus.jackson.map.deser.BeanDeserializer: boolean _ignoreAllUnknown> = z1;

        r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.SettableAnyProperty _anySetter> = r8;

        if r9 == null goto label3;

        $z4 = interfaceinvoke r9.<java.util.List: boolean isEmpty()>();

        if $z4 == 0 goto label4;

     label3:
        $r15 = null;

        goto label5;

     label4:
        $i0 = interfaceinvoke r9.<java.util.List: int size()>();

        $r12 = newarray (org.codehaus.jackson.map.deser.impl.ValueInjector)[$i0];

        $r13 = interfaceinvoke r9.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r12);

        $r15 = (org.codehaus.jackson.map.deser.impl.ValueInjector[]) $r13;

     label5:
        r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.impl.ValueInjector[] _injectables> = $r15;

        $z2 = virtualinvoke r4.<org.codehaus.jackson.map.deser.ValueInstantiator: boolean canCreateUsingDelegate()>();

        if $z2 != 0 goto label6;

        $r10 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.impl.PropertyBasedCreator _propertyBasedCreator>;

        if $r10 != null goto label6;

        $z3 = virtualinvoke r4.<org.codehaus.jackson.map.deser.ValueInstantiator: boolean canCreateUsingDefault()>();

        if $z3 == 0 goto label6;

        $r11 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.impl.UnwrappedPropertyHandler _unwrappedPropertyHandler>;

        if $r11 == null goto label7;

     label6:
        $z5 = 1;

        goto label8;

     label7:
        $z5 = 0;

     label8:
        r0.<org.codehaus.jackson.map.deser.BeanDeserializer: boolean _nonStandardCreation> = $z5;

        return;
    }

    protected void <init>(org.codehaus.jackson.map.deser.BeanDeserializer)
    {
        org.codehaus.jackson.map.deser.BeanDeserializer r0, r1;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializer;

        r1 := @parameter0: org.codehaus.jackson.map.deser.BeanDeserializer;

        $z0 = r1.<org.codehaus.jackson.map.deser.BeanDeserializer: boolean _ignoreAllUnknown>;

        specialinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializer: void <init>(org.codehaus.jackson.map.deser.BeanDeserializer,boolean)>(r1, $z0);

        return;
    }

    protected void <init>(org.codehaus.jackson.map.deser.BeanDeserializer, boolean)
    {
        org.codehaus.jackson.map.deser.impl.BeanPropertyMap $r9;
        org.codehaus.jackson.map.deser.SettableAnyProperty $r12;
        java.util.HashSet $r11;
        org.codehaus.jackson.map.introspect.AnnotatedClass $r3;
        java.util.Map $r10;
        org.codehaus.jackson.type.JavaType $r2, $r4;
        org.codehaus.jackson.map.JsonDeserializer $r7;
        boolean z0, $z1;
        org.codehaus.jackson.map.deser.impl.ValueInjector[] $r13;
        org.codehaus.jackson.map.deser.ValueInstantiator $r6;
        org.codehaus.jackson.map.deser.impl.UnwrappedPropertyHandler $r14;
        org.codehaus.jackson.map.deser.BeanDeserializer r0, r1;
        org.codehaus.jackson.map.BeanProperty $r5;
        org.codehaus.jackson.map.deser.impl.PropertyBasedCreator $r8;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializer;

        r1 := @parameter0: org.codehaus.jackson.map.deser.BeanDeserializer;

        z0 := @parameter1: boolean;

        $r2 = r1.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.type.JavaType _beanType>;

        specialinvoke r0.<org.codehaus.jackson.map.deser.std.StdDeserializer: void <init>(org.codehaus.jackson.type.JavaType)>($r2);

        $r3 = r1.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.introspect.AnnotatedClass _forClass>;

        r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.introspect.AnnotatedClass _forClass> = $r3;

        $r4 = r1.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.type.JavaType _beanType>;

        r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.type.JavaType _beanType> = $r4;

        $r5 = r1.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.BeanProperty _property>;

        r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.BeanProperty _property> = $r5;

        $r6 = r1.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator>;

        r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator> = $r6;

        $r7 = r1.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.JsonDeserializer _delegateDeserializer>;

        r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.JsonDeserializer _delegateDeserializer> = $r7;

        $r8 = r1.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.impl.PropertyBasedCreator _propertyBasedCreator>;

        r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.impl.PropertyBasedCreator _propertyBasedCreator> = $r8;

        $r9 = r1.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.impl.BeanPropertyMap _beanProperties>;

        r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.impl.BeanPropertyMap _beanProperties> = $r9;

        $r10 = r1.<org.codehaus.jackson.map.deser.BeanDeserializer: java.util.Map _backRefs>;

        r0.<org.codehaus.jackson.map.deser.BeanDeserializer: java.util.Map _backRefs> = $r10;

        $r11 = r1.<org.codehaus.jackson.map.deser.BeanDeserializer: java.util.HashSet _ignorableProps>;

        r0.<org.codehaus.jackson.map.deser.BeanDeserializer: java.util.HashSet _ignorableProps> = $r11;

        r0.<org.codehaus.jackson.map.deser.BeanDeserializer: boolean _ignoreAllUnknown> = z0;

        $r12 = r1.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.SettableAnyProperty _anySetter>;

        r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.SettableAnyProperty _anySetter> = $r12;

        $r13 = r1.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.impl.ValueInjector[] _injectables>;

        r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.impl.ValueInjector[] _injectables> = $r13;

        $z1 = r1.<org.codehaus.jackson.map.deser.BeanDeserializer: boolean _nonStandardCreation>;

        r0.<org.codehaus.jackson.map.deser.BeanDeserializer: boolean _nonStandardCreation> = $z1;

        $r14 = r1.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.impl.UnwrappedPropertyHandler _unwrappedPropertyHandler>;

        r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.impl.UnwrappedPropertyHandler _unwrappedPropertyHandler> = $r14;

        return;
    }

    public org.codehaus.jackson.map.JsonDeserializer unwrappingDeserializer()
    {
        java.lang.Class $r1;
        org.codehaus.jackson.map.deser.BeanDeserializer r0, $r2;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializer;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        if $r1 == class "Lorg/codehaus/jackson/map/deser/BeanDeserializer;" goto label1;

        return r0;

     label1:
        $r2 = new org.codehaus.jackson.map.deser.BeanDeserializer;

        specialinvoke $r2.<org.codehaus.jackson.map.deser.BeanDeserializer: void <init>(org.codehaus.jackson.map.deser.BeanDeserializer,boolean)>(r0, 1);

        return $r2;
    }

    public boolean hasProperty(java.lang.String)
    {
        org.codehaus.jackson.map.deser.SettableBeanProperty $r3;
        org.codehaus.jackson.map.deser.impl.BeanPropertyMap $r2;
        java.lang.String r1;
        org.codehaus.jackson.map.deser.BeanDeserializer r0;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializer;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.impl.BeanPropertyMap _beanProperties>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap: org.codehaus.jackson.map.deser.SettableBeanProperty find(java.lang.String)>(r1);

        if $r3 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int getPropertyCount()
    {
        int $i0;
        org.codehaus.jackson.map.deser.impl.BeanPropertyMap $r1;
        org.codehaus.jackson.map.deser.BeanDeserializer r0;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializer;

        $r1 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.impl.BeanPropertyMap _beanProperties>;

        $i0 = virtualinvoke $r1.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap: int size()>();

        return $i0;
    }

    public final java.lang.Class getBeanClass()
    {
        org.codehaus.jackson.type.JavaType $r1;
        java.lang.Class $r2;
        org.codehaus.jackson.map.deser.BeanDeserializer r0;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializer;

        $r1 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.type.JavaType _beanType>;

        $r2 = virtualinvoke $r1.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        return $r2;
    }

    public org.codehaus.jackson.type.JavaType getValueType()
    {
        org.codehaus.jackson.type.JavaType $r1;
        org.codehaus.jackson.map.deser.BeanDeserializer r0;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializer;

        $r1 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.type.JavaType _beanType>;

        return $r1;
    }

    public java.util.Iterator properties()
    {
        java.lang.IllegalStateException $r4;
        java.util.Iterator $r3;
        org.codehaus.jackson.map.deser.impl.BeanPropertyMap $r1, $r2;
        org.codehaus.jackson.map.deser.BeanDeserializer r0;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializer;

        $r1 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.impl.BeanPropertyMap _beanProperties>;

        if $r1 != null goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Can only call before BeanDeserializer has been resolved");

        throw $r4;

     label1:
        $r2 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.impl.BeanPropertyMap _beanProperties>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap: java.util.Iterator allProperties()>();

        return $r3;
    }

    public org.codehaus.jackson.map.deser.SettableBeanProperty findBackReference(java.lang.String)
    {
        java.util.Map $r1, $r3;
        org.codehaus.jackson.map.deser.SettableBeanProperty $r5;
        java.lang.Object $r4;
        java.lang.String r2;
        org.codehaus.jackson.map.deser.BeanDeserializer r0;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializer;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: java.util.Map _backRefs>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r3 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: java.util.Map _backRefs>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        $r5 = (org.codehaus.jackson.map.deser.SettableBeanProperty) $r4;

        return $r5;
    }

    public org.codehaus.jackson.map.deser.ValueInstantiator getValueInstantiator()
    {
        org.codehaus.jackson.map.deser.ValueInstantiator $r1;
        org.codehaus.jackson.map.deser.BeanDeserializer r0;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializer;

        $r1 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator>;

        return $r1;
    }

    public void resolve(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.DeserializerProvider) throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.deser.SettableBeanProperty $r44, $r45, r58, r59, r60, $r61, r63;
        org.codehaus.jackson.map.util.Annotations $r21;
        org.codehaus.jackson.map.introspect.AnnotatedClass $r20;
        org.codehaus.jackson.map.DeserializerProvider r11;
        org.codehaus.jackson.map.introspect.AnnotatedWithParams $r18;
        org.codehaus.jackson.map.deser.impl.UnwrappedPropertyHandler $r53, r56;
        org.codehaus.jackson.map.deser.impl.PropertyBasedCreator $r4, $r6, $r12;
        java.lang.StringBuilder $r24, $r25, $r27, $r28, $r32, $r33;
        org.codehaus.jackson.map.DeserializationConfig r10;
        org.codehaus.jackson.map.JsonDeserializer $r14, $r22, $r41, $r55;
        java.lang.String $r31, $r34, $r49;
        org.codehaus.jackson.map.deser.impl.ExternalTypeHandler $r5;
        org.codehaus.jackson.map.deser.ValueInstantiator $r15, $r17, $r29, $r62;
        org.codehaus.jackson.map.BeanProperty $r40;
        org.codehaus.jackson.map.deser.SettableAnyProperty $r3, $r35, $r36, $r37, $r39, $r42;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.util.Collection $r7;
        org.codehaus.jackson.map.deser.impl.BeanPropertyMap $r1, $r50, $r52;
        org.codehaus.jackson.type.JavaType $r13, $r16, $r26, $r38, $r54;
        org.codehaus.jackson.annotate.JsonTypeInfo$As $r47, $r48;
        org.codehaus.jackson.map.deser.impl.ExternalTypeHandler$Builder $r51, r57;
        java.util.Iterator $r2, $r8;
        java.lang.IllegalArgumentException $r23;
        org.codehaus.jackson.map.deser.BeanDeserializer r0;
        org.codehaus.jackson.map.TypeDeserializer $r46;
        java.lang.Object $r9, $r43;
        java.lang.Class $r30;
        org.codehaus.jackson.map.BeanProperty$Std $r19;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializer;

        r10 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        r11 := @parameter1: org.codehaus.jackson.map.DeserializerProvider;

        $r1 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.impl.BeanPropertyMap _beanProperties>;

        $r2 = virtualinvoke $r1.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap: java.util.Iterator allProperties()>();

        r56 = null;

        r57 = null;

     label01:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label08;

        $r43 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r58 = (org.codehaus.jackson.map.deser.SettableBeanProperty) $r43;

        r59 = r58;

        $z4 = virtualinvoke r58.<org.codehaus.jackson.map.deser.SettableBeanProperty: boolean hasValueDeserializer()>();

        if $z4 != 0 goto label02;

        $r54 = virtualinvoke r58.<org.codehaus.jackson.map.deser.SettableBeanProperty: org.codehaus.jackson.type.JavaType getType()>();

        $r55 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.JsonDeserializer findDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)>(r10, r11, $r54, r58);

        r59 = virtualinvoke r58.<org.codehaus.jackson.map.deser.SettableBeanProperty: org.codehaus.jackson.map.deser.SettableBeanProperty withValueDeserializer(org.codehaus.jackson.map.JsonDeserializer)>($r55);

     label02:
        $r44 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.SettableBeanProperty _resolveManagedReferenceProperty(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.deser.SettableBeanProperty)>(r10, r59);

        r60 = $r44;

        $r45 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.SettableBeanProperty _resolveUnwrappedProperty(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.deser.SettableBeanProperty)>(r10, $r44);

        if $r45 == null goto label04;

        r60 = $r45;

        if r56 != null goto label03;

        $r53 = new org.codehaus.jackson.map.deser.impl.UnwrappedPropertyHandler;

        specialinvoke $r53.<org.codehaus.jackson.map.deser.impl.UnwrappedPropertyHandler: void <init>()>();

        r56 = $r53;

     label03:
        virtualinvoke r56.<org.codehaus.jackson.map.deser.impl.UnwrappedPropertyHandler: void addProperty(org.codehaus.jackson.map.deser.SettableBeanProperty)>($r45);

     label04:
        $r61 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.SettableBeanProperty _resolveInnerClassValuedProperty(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.deser.SettableBeanProperty)>(r10, r60);

        if $r61 == r58 goto label05;

        $r52 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.impl.BeanPropertyMap _beanProperties>;

        virtualinvoke $r52.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap: void replace(org.codehaus.jackson.map.deser.SettableBeanProperty)>($r61);

     label05:
        $z5 = virtualinvoke $r61.<org.codehaus.jackson.map.deser.SettableBeanProperty: boolean hasValueTypeDeserializer()>();

        if $z5 == 0 goto label07;

        $r46 = virtualinvoke $r61.<org.codehaus.jackson.map.deser.SettableBeanProperty: org.codehaus.jackson.map.TypeDeserializer getValueTypeDeserializer()>();

        $r47 = virtualinvoke $r46.<org.codehaus.jackson.map.TypeDeserializer: org.codehaus.jackson.annotate.JsonTypeInfo$As getTypeInclusion()>();

        $r48 = <org.codehaus.jackson.annotate.JsonTypeInfo$As: org.codehaus.jackson.annotate.JsonTypeInfo$As EXTERNAL_PROPERTY>;

        if $r47 != $r48 goto label07;

        if r57 != null goto label06;

        $r51 = new org.codehaus.jackson.map.deser.impl.ExternalTypeHandler$Builder;

        specialinvoke $r51.<org.codehaus.jackson.map.deser.impl.ExternalTypeHandler$Builder: void <init>()>();

        r57 = $r51;

     label06:
        $r49 = virtualinvoke $r46.<org.codehaus.jackson.map.TypeDeserializer: java.lang.String getPropertyName()>();

        virtualinvoke r57.<org.codehaus.jackson.map.deser.impl.ExternalTypeHandler$Builder: void addExternal(org.codehaus.jackson.map.deser.SettableBeanProperty,java.lang.String)>($r61, $r49);

        $r50 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.impl.BeanPropertyMap _beanProperties>;

        virtualinvoke $r50.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap: void remove(org.codehaus.jackson.map.deser.SettableBeanProperty)>($r61);

     label07:
        goto label01;

     label08:
        $r3 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.SettableAnyProperty _anySetter>;

        if $r3 == null goto label09;

        $r35 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.SettableAnyProperty _anySetter>;

        $z3 = virtualinvoke $r35.<org.codehaus.jackson.map.deser.SettableAnyProperty: boolean hasValueDeserializer()>();

        if $z3 != 0 goto label09;

        $r37 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.SettableAnyProperty _anySetter>;

        $r36 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.SettableAnyProperty _anySetter>;

        $r38 = virtualinvoke $r36.<org.codehaus.jackson.map.deser.SettableAnyProperty: org.codehaus.jackson.type.JavaType getType()>();

        $r39 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.SettableAnyProperty _anySetter>;

        $r40 = virtualinvoke $r39.<org.codehaus.jackson.map.deser.SettableAnyProperty: org.codehaus.jackson.map.BeanProperty getProperty()>();

        $r41 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.JsonDeserializer findDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)>(r10, r11, $r38, $r40);

        $r42 = virtualinvoke $r37.<org.codehaus.jackson.map.deser.SettableAnyProperty: org.codehaus.jackson.map.deser.SettableAnyProperty withValueDeserializer(org.codehaus.jackson.map.JsonDeserializer)>($r41);

        r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.SettableAnyProperty _anySetter> = $r42;

     label09:
        $r62 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator>;

        $z6 = virtualinvoke $r62.<org.codehaus.jackson.map.deser.ValueInstantiator: boolean canCreateUsingDelegate()>();

        if $z6 == 0 goto label11;

        $r15 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator>;

        $r16 = virtualinvoke $r15.<org.codehaus.jackson.map.deser.ValueInstantiator: org.codehaus.jackson.type.JavaType getDelegateType()>();

        if $r16 != null goto label10;

        $r23 = new java.lang.IllegalArgumentException;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid delegate-creator definition for ");

        $r26 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.type.JavaType _beanType>;

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": value instantiator (");

        $r29 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator>;

        $r30 = virtualinvoke $r29.<java.lang.Object: java.lang.Class getClass()>();

        $r31 = virtualinvoke $r30.<java.lang.Class: java.lang.String getName()>();

        $r32 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") returned true for \'canCreateUsingDelegate()\', but null for \'getDelegateType()\'");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r34);

        throw $r23;

     label10:
        $r17 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator>;

        $r18 = virtualinvoke $r17.<org.codehaus.jackson.map.deser.ValueInstantiator: org.codehaus.jackson.map.introspect.AnnotatedWithParams getDelegateCreator()>();

        $r19 = new org.codehaus.jackson.map.BeanProperty$Std;

        $r20 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.introspect.AnnotatedClass _forClass>;

        $r21 = virtualinvoke $r20.<org.codehaus.jackson.map.introspect.AnnotatedClass: org.codehaus.jackson.map.util.Annotations getAnnotations()>();

        specialinvoke $r19.<org.codehaus.jackson.map.BeanProperty$Std: void <init>(java.lang.String,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.util.Annotations,org.codehaus.jackson.map.introspect.AnnotatedMember)>(null, $r16, $r21, $r18);

        $r22 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.JsonDeserializer findDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)>(r10, r11, $r16, $r19);

        r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.JsonDeserializer _delegateDeserializer> = $r22;

     label11:
        $r4 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.impl.PropertyBasedCreator _propertyBasedCreator>;

        if $r4 == null goto label14;

        $r6 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.impl.PropertyBasedCreator _propertyBasedCreator>;

        $r7 = virtualinvoke $r6.<org.codehaus.jackson.map.deser.impl.PropertyBasedCreator: java.util.Collection getCreatorProperties()>();

        $r8 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();

     label12:
        $z1 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label14;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r63 = (org.codehaus.jackson.map.deser.SettableBeanProperty) $r9;

        $z2 = virtualinvoke r63.<org.codehaus.jackson.map.deser.SettableBeanProperty: boolean hasValueDeserializer()>();

        if $z2 != 0 goto label13;

        $r12 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.impl.PropertyBasedCreator _propertyBasedCreator>;

        $r13 = virtualinvoke r63.<org.codehaus.jackson.map.deser.SettableBeanProperty: org.codehaus.jackson.type.JavaType getType()>();

        $r14 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.JsonDeserializer findDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)>(r10, r11, $r13, r63);

        virtualinvoke $r12.<org.codehaus.jackson.map.deser.impl.PropertyBasedCreator: void assignDeserializer(org.codehaus.jackson.map.deser.SettableBeanProperty,org.codehaus.jackson.map.JsonDeserializer)>(r63, $r14);

     label13:
        goto label12;

     label14:
        if r57 == null goto label15;

        $r5 = virtualinvoke r57.<org.codehaus.jackson.map.deser.impl.ExternalTypeHandler$Builder: org.codehaus.jackson.map.deser.impl.ExternalTypeHandler build()>();

        r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.impl.ExternalTypeHandler _externalTypeIdHandler> = $r5;

        r0.<org.codehaus.jackson.map.deser.BeanDeserializer: boolean _nonStandardCreation> = 1;

     label15:
        r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.impl.UnwrappedPropertyHandler _unwrappedPropertyHandler> = r56;

        if r56 == null goto label16;

        r0.<org.codehaus.jackson.map.deser.BeanDeserializer: boolean _nonStandardCreation> = 1;

     label16:
        return;
    }

    protected org.codehaus.jackson.map.deser.SettableBeanProperty _resolveManagedReferenceProperty(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.deser.SettableBeanProperty)
    {
        org.codehaus.jackson.map.deser.SettableBeanProperty r0, r69;
        org.codehaus.jackson.map.util.Annotations $r33;
        org.codehaus.jackson.map.introspect.AnnotatedClass $r32;
        org.codehaus.jackson.map.deser.std.ContainerDeserializerBase $r25;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r10, $r13, $r14, $r19, $r20, $r22, $r23, $r35, $r36, $r37, $r38, $r41, $r42, $r45, $r46, $r49, $r50, $r51, $r52, $r54, $r57, $r58, $r59, $r60, $r61, $r64, $r65;
        org.codehaus.jackson.map.DeserializationConfig r68;
        org.codehaus.jackson.map.JsonDeserializer $r2, $r26;
        java.lang.String $r1, $r9, $r11, $r18, $r21, $r24, $r40, $r44, $r47, $r55, $r63, $r66;
        boolean $z0, $z1, $z2, $z3, $z4, z5;
        org.codehaus.jackson.type.JavaType $r16, $r28, $r53, r70;
        java.lang.IllegalArgumentException $r3, $r12, $r34, $r48, $r56;
        org.codehaus.jackson.map.deser.BeanDeserializer r15, $r27, $r67;
        java.lang.Class $r8, $r17, $r29, $r30, $r39, $r43, $r62;
        org.codehaus.jackson.map.deser.SettableBeanProperty$ManagedReferenceProperty $r31;

        r15 := @this: org.codehaus.jackson.map.deser.BeanDeserializer;

        r68 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        r0 := @parameter1: org.codehaus.jackson.map.deser.SettableBeanProperty;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.deser.SettableBeanProperty: java.lang.String getManagedReferenceName()>();

        if $r1 != null goto label1;

        return r0;

     label1:
        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.deser.SettableBeanProperty: org.codehaus.jackson.map.JsonDeserializer getValueDeserializer()>();

        z5 = 0;

        $z0 = $r2 instanceof org.codehaus.jackson.map.deser.BeanDeserializer;

        if $z0 == 0 goto label2;

        $r67 = (org.codehaus.jackson.map.deser.BeanDeserializer) $r2;

        r69 = virtualinvoke $r67.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.SettableBeanProperty findBackReference(java.lang.String)>($r1);

        goto label6;

     label2:
        $z1 = $r2 instanceof org.codehaus.jackson.map.deser.std.ContainerDeserializerBase;

        if $z1 == 0 goto label4;

        $r25 = (org.codehaus.jackson.map.deser.std.ContainerDeserializerBase) $r2;

        $r26 = virtualinvoke $r25.<org.codehaus.jackson.map.deser.std.ContainerDeserializerBase: org.codehaus.jackson.map.JsonDeserializer getContentDeserializer()>();

        $z3 = $r26 instanceof org.codehaus.jackson.map.deser.BeanDeserializer;

        if $z3 != 0 goto label3;

        $r56 = new java.lang.IllegalArgumentException;

        $r57 = new java.lang.StringBuilder;

        specialinvoke $r57.<java.lang.StringBuilder: void <init>()>();

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can not handle managed/back reference \'");

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\': value deserializer is of type ContainerDeserializerBase, but content type is not handled by a BeanDeserializer ");

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (instead it\'s of type ");

        $r62 = virtualinvoke $r26.<java.lang.Object: java.lang.Class getClass()>();

        $r63 = virtualinvoke $r62.<java.lang.Class: java.lang.String getName()>();

        $r64 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r63);

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r56.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r66);

        throw $r56;

     label3:
        $r27 = (org.codehaus.jackson.map.deser.BeanDeserializer) $r26;

        r69 = virtualinvoke $r27.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.SettableBeanProperty findBackReference(java.lang.String)>($r1);

        z5 = 1;

        goto label6;

     label4:
        $z2 = $r2 instanceof org.codehaus.jackson.map.deser.AbstractDeserializer;

        if $z2 == 0 goto label5;

        $r12 = new java.lang.IllegalArgumentException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can not handle managed/back reference for abstract types (property ");

        $r16 = r15.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.type.JavaType _beanType>;

        $r17 = virtualinvoke $r16.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        $r18 = virtualinvoke $r17.<java.lang.Class: java.lang.String getName()>();

        $r19 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r21 = virtualinvoke r0.<org.codehaus.jackson.map.deser.SettableBeanProperty: java.lang.String getName()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r24);

        throw $r12;

     label5:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can not handle managed/back reference \'");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\': type for value deserializer is not BeanDeserializer or ContainerDeserializerBase, but ");

        $r8 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r3;

     label6:
        if r69 != null goto label7;

        $r48 = new java.lang.IllegalArgumentException;

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can not handle managed/back reference \'");

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\': no back reference property found from type ");

        $r53 = virtualinvoke r0.<org.codehaus.jackson.map.deser.SettableBeanProperty: org.codehaus.jackson.type.JavaType getType()>();

        $r54 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r53);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r48.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r55);

        throw $r48;

     label7:
        r70 = r15.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.type.JavaType _beanType>;

        $r28 = virtualinvoke r69.<org.codehaus.jackson.map.deser.SettableBeanProperty: org.codehaus.jackson.type.JavaType getType()>();

        $r29 = virtualinvoke $r28.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        $r30 = virtualinvoke r70.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        $z4 = virtualinvoke $r29.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r30);

        if $z4 != 0 goto label8;

        $r34 = new java.lang.IllegalArgumentException;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can not handle managed/back reference \'");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\': back reference type (");

        $r39 = virtualinvoke $r28.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        $r40 = virtualinvoke $r39.<java.lang.Class: java.lang.String getName()>();

        $r41 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") not compatible with managed type (");

        $r43 = virtualinvoke r70.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        $r44 = virtualinvoke $r43.<java.lang.Class: java.lang.String getName()>();

        $r45 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r34.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r47);

        throw $r34;

     label8:
        $r31 = new org.codehaus.jackson.map.deser.SettableBeanProperty$ManagedReferenceProperty;

        $r32 = r15.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.introspect.AnnotatedClass _forClass>;

        $r33 = virtualinvoke $r32.<org.codehaus.jackson.map.introspect.AnnotatedClass: org.codehaus.jackson.map.util.Annotations getAnnotations()>();

        specialinvoke $r31.<org.codehaus.jackson.map.deser.SettableBeanProperty$ManagedReferenceProperty: void <init>(java.lang.String,org.codehaus.jackson.map.deser.SettableBeanProperty,org.codehaus.jackson.map.deser.SettableBeanProperty,org.codehaus.jackson.map.util.Annotations,boolean)>($r1, r0, r69, $r33, z5);

        return $r31;
    }

    protected org.codehaus.jackson.map.deser.SettableBeanProperty _resolveUnwrappedProperty(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.deser.SettableBeanProperty)
    {
        org.codehaus.jackson.map.deser.SettableBeanProperty r0, $r8;
        org.codehaus.jackson.map.DeserializationConfig r2;
        org.codehaus.jackson.map.AnnotationIntrospector $r3;
        org.codehaus.jackson.map.deser.BeanDeserializer r9;
        org.codehaus.jackson.map.introspect.AnnotatedMember $r1;
        java.lang.Boolean $r4, $r5;
        org.codehaus.jackson.map.JsonDeserializer $r6, $r7;

        r9 := @this: org.codehaus.jackson.map.deser.BeanDeserializer;

        r2 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        r0 := @parameter1: org.codehaus.jackson.map.deser.SettableBeanProperty;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.deser.SettableBeanProperty: org.codehaus.jackson.map.introspect.AnnotatedMember getMember()>();

        if $r1 == null goto label1;

        $r3 = virtualinvoke r2.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.AnnotationIntrospector getAnnotationIntrospector()>();

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.Boolean shouldUnwrapProperty(org.codehaus.jackson.map.introspect.AnnotatedMember)>($r1);

        $r5 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        if $r4 != $r5 goto label1;

        $r6 = virtualinvoke r0.<org.codehaus.jackson.map.deser.SettableBeanProperty: org.codehaus.jackson.map.JsonDeserializer getValueDeserializer()>();

        $r7 = virtualinvoke $r6.<org.codehaus.jackson.map.JsonDeserializer: org.codehaus.jackson.map.JsonDeserializer unwrappingDeserializer()>();

        if $r7 == $r6 goto label1;

        if $r7 == null goto label1;

        $r8 = virtualinvoke r0.<org.codehaus.jackson.map.deser.SettableBeanProperty: org.codehaus.jackson.map.deser.SettableBeanProperty withValueDeserializer(org.codehaus.jackson.map.JsonDeserializer)>($r7);

        return $r8;

     label1:
        return null;
    }

    protected org.codehaus.jackson.map.deser.SettableBeanProperty _resolveInnerClassValuedProperty(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.deser.SettableBeanProperty)
    {
        org.codehaus.jackson.map.deser.SettableBeanProperty$InnerClassProperty $r16;
        org.codehaus.jackson.map.deser.SettableBeanProperty r0;
        java.lang.reflect.Constructor r11;
        org.codehaus.jackson.map.DeserializationConfig r14;
        java.lang.reflect.Constructor[] $r10;
        int i0, $i1, i2;
        org.codehaus.jackson.type.JavaType $r4, $r8;
        org.codehaus.jackson.map.JsonDeserializer $r1;
        boolean $z0, $z1, $z2;
        org.codehaus.jackson.map.DeserializationConfig$Feature $r15;
        java.lang.Class[] $r12;
        org.codehaus.jackson.map.deser.ValueInstantiator $r3;
        org.codehaus.jackson.map.deser.BeanDeserializer r2, r7;
        java.lang.Class $r5, $r6, $r9, $r13;

        r7 := @this: org.codehaus.jackson.map.deser.BeanDeserializer;

        r14 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        r0 := @parameter1: org.codehaus.jackson.map.deser.SettableBeanProperty;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.deser.SettableBeanProperty: org.codehaus.jackson.map.JsonDeserializer getValueDeserializer()>();

        $z0 = $r1 instanceof org.codehaus.jackson.map.deser.BeanDeserializer;

        if $z0 == 0 goto label4;

        r2 = (org.codehaus.jackson.map.deser.BeanDeserializer) $r1;

        $r3 = virtualinvoke r2.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.ValueInstantiator getValueInstantiator()>();

        $z1 = virtualinvoke $r3.<org.codehaus.jackson.map.deser.ValueInstantiator: boolean canCreateUsingDefault()>();

        if $z1 != 0 goto label4;

        $r4 = virtualinvoke r0.<org.codehaus.jackson.map.deser.SettableBeanProperty: org.codehaus.jackson.type.JavaType getType()>();

        $r5 = virtualinvoke $r4.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        $r6 = staticinvoke <org.codehaus.jackson.map.util.ClassUtil: java.lang.Class getOuterClass(java.lang.Class)>($r5);

        if $r6 == null goto label4;

        $r8 = r7.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.type.JavaType _beanType>;

        $r9 = virtualinvoke $r8.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        if $r6 != $r9 goto label4;

        $r10 = virtualinvoke $r5.<java.lang.Class: java.lang.reflect.Constructor[] getConstructors()>();

        i0 = lengthof $r10;

        i2 = 0;

     label1:
        if i2 >= i0 goto label4;

        r11 = $r10[i2];

        $r12 = virtualinvoke r11.<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>();

        $i1 = lengthof $r12;

        if $i1 != 1 goto label3;

        $r13 = $r12[0];

        if $r13 != $r6 goto label3;

        $r15 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature CAN_OVERRIDE_ACCESS_MODIFIERS>;

        $z2 = virtualinvoke r14.<org.codehaus.jackson.map.DeserializationConfig: boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature)>($r15);

        if $z2 == 0 goto label2;

        staticinvoke <org.codehaus.jackson.map.util.ClassUtil: void checkAndFixAccess(java.lang.reflect.Member)>(r11);

     label2:
        $r16 = new org.codehaus.jackson.map.deser.SettableBeanProperty$InnerClassProperty;

        specialinvoke $r16.<org.codehaus.jackson.map.deser.SettableBeanProperty$InnerClassProperty: void <init>(org.codehaus.jackson.map.deser.SettableBeanProperty,java.lang.reflect.Constructor)>(r0, r11);

        return $r16;

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        return r0;
    }

    public final java.lang.Object deserialize(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.JsonToken $r1, $r2;
        org.codehaus.jackson.map.DeserializationContext r5;
        org.codehaus.jackson.map.JsonMappingException $r14;
        int[] $r3;
        int $i0, $i1;
        org.codehaus.jackson.JsonParser r0;
        org.codehaus.jackson.map.deser.BeanDeserializer r4;
        java.lang.Object $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r15;
        java.lang.Class $r13;

        r4 := @this: org.codehaus.jackson.map.deser.BeanDeserializer;

        r0 := @parameter0: org.codehaus.jackson.JsonParser;

        r5 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken getCurrentToken()>();

        $r2 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken START_OBJECT>;

        if $r1 != $r2 goto label1;

        virtualinvoke r0.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        $r15 = virtualinvoke r4.<org.codehaus.jackson.map.deser.BeanDeserializer: java.lang.Object deserializeFromObject(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r0, r5);

        return $r15;

     label1:
        $r3 = <org.codehaus.jackson.map.deser.BeanDeserializer$1: int[] $SwitchMap$org$codehaus$jackson$JsonToken>;

        $i0 = virtualinvoke $r1.<org.codehaus.jackson.JsonToken: int ordinal()>();

        $i1 = $r3[$i0];

        tableswitch($i1)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label5;
            case 5: goto label6;
            case 6: goto label6;
            case 7: goto label7;
            case 8: goto label8;
            case 9: goto label8;
            default: goto label9;
        };

     label2:
        $r12 = virtualinvoke r4.<org.codehaus.jackson.map.deser.BeanDeserializer: java.lang.Object deserializeFromString(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r0, r5);

        return $r12;

     label3:
        $r11 = virtualinvoke r4.<org.codehaus.jackson.map.deser.BeanDeserializer: java.lang.Object deserializeFromNumber(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r0, r5);

        return $r11;

     label4:
        $r10 = virtualinvoke r4.<org.codehaus.jackson.map.deser.BeanDeserializer: java.lang.Object deserializeFromDouble(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r0, r5);

        return $r10;

     label5:
        $r9 = virtualinvoke r0.<org.codehaus.jackson.JsonParser: java.lang.Object getEmbeddedObject()>();

        return $r9;

     label6:
        $r8 = virtualinvoke r4.<org.codehaus.jackson.map.deser.BeanDeserializer: java.lang.Object deserializeFromBoolean(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r0, r5);

        return $r8;

     label7:
        $r7 = virtualinvoke r4.<org.codehaus.jackson.map.deser.BeanDeserializer: java.lang.Object deserializeFromArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r0, r5);

        return $r7;

     label8:
        $r6 = virtualinvoke r4.<org.codehaus.jackson.map.deser.BeanDeserializer: java.lang.Object deserializeFromObject(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r0, r5);

        return $r6;

     label9:
        $r13 = virtualinvoke r4.<org.codehaus.jackson.map.deser.BeanDeserializer: java.lang.Class getBeanClass()>();

        $r14 = virtualinvoke r5.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.JsonMappingException mappingException(java.lang.Class)>($r13);

        throw $r14;
    }

    public java.lang.Object deserialize(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext, java.lang.Object) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.JsonToken $r5, $r6, r19, $r20;
        org.codehaus.jackson.map.deser.SettableBeanProperty $r10;
        org.codehaus.jackson.map.deser.impl.BeanPropertyMap $r9;
        org.codehaus.jackson.map.deser.SettableAnyProperty $r12, $r14;
        org.codehaus.jackson.map.DeserializationContext r13;
        java.util.HashSet $r11, $r15;
        java.lang.String $r8;
        org.codehaus.jackson.map.deser.impl.ExternalTypeHandler $r3;
        org.codehaus.jackson.JsonParser r4;
        boolean $z0;
        org.codehaus.jackson.map.deser.impl.ValueInjector[] $r1;
        org.codehaus.jackson.map.deser.impl.UnwrappedPropertyHandler $r2;
        org.codehaus.jackson.map.deser.BeanDeserializer r0;
        java.lang.Exception $r18;
        java.lang.Object r7, $r16, $r17;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializer;

        r4 := @parameter0: org.codehaus.jackson.JsonParser;

        r13 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        r7 := @parameter2: java.lang.Object;

        $r1 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.impl.ValueInjector[] _injectables>;

        if $r1 == null goto label01;

        virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializer: void injectValues(org.codehaus.jackson.map.DeserializationContext,java.lang.Object)>(r13, r7);

     label01:
        $r2 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.impl.UnwrappedPropertyHandler _unwrappedPropertyHandler>;

        if $r2 == null goto label02;

        $r17 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializer: java.lang.Object deserializeWithUnwrapped(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object)>(r4, r13, r7);

        return $r17;

     label02:
        $r3 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.impl.ExternalTypeHandler _externalTypeIdHandler>;

        if $r3 == null goto label03;

        $r16 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializer: java.lang.Object deserializeWithExternalTypeId(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object)>(r4, r13, r7);

        return $r16;

     label03:
        $r5 = virtualinvoke r4.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken getCurrentToken()>();

        r19 = $r5;

        $r6 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken START_OBJECT>;

        if $r5 != $r6 goto label04;

        r19 = virtualinvoke r4.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

     label04:
        $r20 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken FIELD_NAME>;

        if r19 != $r20 goto label12;

        $r8 = virtualinvoke r4.<org.codehaus.jackson.JsonParser: java.lang.String getCurrentName()>();

        virtualinvoke r4.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        $r9 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.impl.BeanPropertyMap _beanProperties>;

        $r10 = virtualinvoke $r9.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap: org.codehaus.jackson.map.deser.SettableBeanProperty find(java.lang.String)>($r8);

        if $r10 == null goto label08;

     label05:
        virtualinvoke $r10.<org.codehaus.jackson.map.deser.SettableBeanProperty: void deserializeAndSet(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object)>(r4, r13, r7);

     label06:
        goto label11;

     label07:
        $r18 := @caughtexception;

        virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializer: void wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,org.codehaus.jackson.map.DeserializationContext)>($r18, r7, $r8, r13);

        goto label11;

     label08:
        $r11 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: java.util.HashSet _ignorableProps>;

        if $r11 == null goto label09;

        $r15 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: java.util.HashSet _ignorableProps>;

        $z0 = virtualinvoke $r15.<java.util.HashSet: boolean contains(java.lang.Object)>($r8);

        if $z0 == 0 goto label09;

        virtualinvoke r4.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonParser skipChildren()>();

        goto label11;

     label09:
        $r12 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.SettableAnyProperty _anySetter>;

        if $r12 == null goto label10;

        $r14 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.SettableAnyProperty _anySetter>;

        virtualinvoke $r14.<org.codehaus.jackson.map.deser.SettableAnyProperty: void deserializeAndSet(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object,java.lang.String)>(r4, r13, r7, $r8);

        goto label11;

     label10:
        virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializer: void handleUnknownProperty(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object,java.lang.String)>(r4, r13, r7, $r8);

     label11:
        r19 = virtualinvoke r4.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        goto label04;

     label12:
        return r7;

        catch java.lang.Exception from label05 to label06 with label07;
    }

    public java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext, org.codehaus.jackson.map.TypeDeserializer) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.TypeDeserializer r0;
        java.lang.Object $r3;
        org.codehaus.jackson.JsonParser r1;
        org.codehaus.jackson.map.DeserializationContext r2;
        org.codehaus.jackson.map.deser.BeanDeserializer r4;

        r4 := @this: org.codehaus.jackson.map.deser.BeanDeserializer;

        r1 := @parameter0: org.codehaus.jackson.JsonParser;

        r2 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        r0 := @parameter2: org.codehaus.jackson.map.TypeDeserializer;

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.TypeDeserializer: java.lang.Object deserializeTypedFromObject(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r1, r2);

        return $r3;
    }

    public java.lang.Object deserializeFromObject(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.JsonToken $r15, $r16;
        org.codehaus.jackson.map.deser.SettableBeanProperty $r7;
        org.codehaus.jackson.map.deser.impl.BeanPropertyMap $r6;
        org.codehaus.jackson.map.DeserializationContext r8;
        java.lang.String $r5;
        org.codehaus.jackson.map.deser.impl.ExternalTypeHandler $r10;
        org.codehaus.jackson.JsonParser r4;
        boolean $z0;
        org.codehaus.jackson.map.deser.impl.ValueInjector[] $r3;
        org.codehaus.jackson.map.deser.ValueInstantiator $r1;
        org.codehaus.jackson.map.deser.impl.UnwrappedPropertyHandler $r9;
        org.codehaus.jackson.map.deser.BeanDeserializer r0;
        java.lang.Exception $r14;
        java.lang.Object $r2, $r11, $r12, $r13;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializer;

        r4 := @parameter0: org.codehaus.jackson.JsonParser;

        r8 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $z0 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: boolean _nonStandardCreation>;

        if $z0 == 0 goto label03;

        $r9 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.impl.UnwrappedPropertyHandler _unwrappedPropertyHandler>;

        if $r9 == null goto label01;

        $r13 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializer: java.lang.Object deserializeWithUnwrapped(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r4, r8);

        return $r13;

     label01:
        $r10 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.impl.ExternalTypeHandler _externalTypeIdHandler>;

        if $r10 == null goto label02;

        $r12 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializer: java.lang.Object deserializeWithExternalTypeId(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r4, r8);

        return $r12;

     label02:
        $r11 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializer: java.lang.Object deserializeFromObjectUsingNonDefault(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r4, r8);

        return $r11;

     label03:
        $r1 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator>;

        $r2 = virtualinvoke $r1.<org.codehaus.jackson.map.deser.ValueInstantiator: java.lang.Object createUsingDefault()>();

        $r3 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.impl.ValueInjector[] _injectables>;

        if $r3 == null goto label04;

        virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializer: void injectValues(org.codehaus.jackson.map.DeserializationContext,java.lang.Object)>(r8, $r2);

     label04:
        $r15 = virtualinvoke r4.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken getCurrentToken()>();

        $r16 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken END_OBJECT>;

        if $r15 == $r16 goto label10;

        $r5 = virtualinvoke r4.<org.codehaus.jackson.JsonParser: java.lang.String getCurrentName()>();

        virtualinvoke r4.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        $r6 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.impl.BeanPropertyMap _beanProperties>;

        $r7 = virtualinvoke $r6.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap: org.codehaus.jackson.map.deser.SettableBeanProperty find(java.lang.String)>($r5);

        if $r7 == null goto label08;

     label05:
        virtualinvoke $r7.<org.codehaus.jackson.map.deser.SettableBeanProperty: void deserializeAndSet(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object)>(r4, r8, $r2);

     label06:
        goto label09;

     label07:
        $r14 := @caughtexception;

        virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializer: void wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,org.codehaus.jackson.map.DeserializationContext)>($r14, $r2, $r5, r8);

        goto label09;

     label08:
        specialinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializer: void _handleUnknown(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object,java.lang.String)>(r4, r8, $r2, $r5);

     label09:
        virtualinvoke r4.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        goto label04;

     label10:
        return $r2;

        catch java.lang.Exception from label05 to label06 with label07;
    }

    private final void _handleUnknown(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext, java.lang.Object, java.lang.String) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.deser.SettableAnyProperty $r2, $r7;
        org.codehaus.jackson.map.deser.BeanDeserializer r0;
        org.codehaus.jackson.map.DeserializationContext r4;
        java.lang.Exception $r9;
        java.util.HashSet $r1, $r8;
        java.lang.Object r5;
        java.lang.String r6;
        org.codehaus.jackson.JsonParser r3;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializer;

        r3 := @parameter0: org.codehaus.jackson.JsonParser;

        r4 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        r5 := @parameter2: java.lang.Object;

        r6 := @parameter3: java.lang.String;

        $r1 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: java.util.HashSet _ignorableProps>;

        if $r1 == null goto label1;

        $r8 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: java.util.HashSet _ignorableProps>;

        $z0 = virtualinvoke $r8.<java.util.HashSet: boolean contains(java.lang.Object)>(r6);

        if $z0 == 0 goto label1;

        virtualinvoke r3.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonParser skipChildren()>();

        goto label6;

     label1:
        $r2 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.SettableAnyProperty _anySetter>;

        if $r2 == null goto label5;

     label2:
        $r7 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.SettableAnyProperty _anySetter>;

        virtualinvoke $r7.<org.codehaus.jackson.map.deser.SettableAnyProperty: void deserializeAndSet(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object,java.lang.String)>(r3, r4, r5, r6);

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializer: void wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,org.codehaus.jackson.map.DeserializationContext)>($r9, r5, r6, r4);

        goto label6;

     label5:
        virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializer: void handleUnknownProperty(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object,java.lang.String)>(r3, r4, r5, r6);

     label6:
        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    protected java.lang.Object deserializeFromObjectUsingNonDefault(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.DeserializationContext r19;
        org.codehaus.jackson.map.JsonMappingException $r11, $r18;
        org.codehaus.jackson.type.JavaType $r3, $r7, $r14;
        org.codehaus.jackson.map.JsonDeserializer $r1, $r21;
        java.lang.String $r10, $r17;
        org.codehaus.jackson.JsonParser r4;
        boolean $z0;
        org.codehaus.jackson.map.deser.ValueInstantiator $r22;
        org.codehaus.jackson.map.deser.BeanDeserializer r0;
        org.codehaus.jackson.map.deser.impl.PropertyBasedCreator $r2;
        java.lang.StringBuilder $r5, $r6, $r8, $r9, $r12, $r13, $r15, $r16;
        java.lang.Object $r20, $r23, $r24;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializer;

        r4 := @parameter0: org.codehaus.jackson.JsonParser;

        r19 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r1 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.JsonDeserializer _delegateDeserializer>;

        if $r1 == null goto label1;

        $r22 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator>;

        $r21 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.JsonDeserializer _delegateDeserializer>;

        $r23 = virtualinvoke $r21.<org.codehaus.jackson.map.JsonDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r4, r19);

        $r24 = virtualinvoke $r22.<org.codehaus.jackson.map.deser.ValueInstantiator: java.lang.Object createUsingDelegate(java.lang.Object)>($r23);

        return $r24;

     label1:
        $r2 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.impl.PropertyBasedCreator _propertyBasedCreator>;

        if $r2 == null goto label2;

        $r20 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializer: java.lang.Object _deserializeUsingPropertyBased(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r4, r19);

        return $r20;

     label2:
        $r3 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.type.JavaType _beanType>;

        $z0 = virtualinvoke $r3.<org.codehaus.jackson.type.JavaType: boolean isAbstract()>();

        if $z0 == 0 goto label3;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can not instantiate abstract type ");

        $r14 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.type.JavaType _beanType>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (need to add/enable type information?)");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        $r18 = staticinvoke <org.codehaus.jackson.map.JsonMappingException: org.codehaus.jackson.map.JsonMappingException 'from'(org.codehaus.jackson.JsonParser,java.lang.String)>(r4, $r17);

        throw $r18;

     label3:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No suitable constructor found for type ");

        $r7 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.type.JavaType _beanType>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": can not instantiate from JSON object (need to add/enable type information?)");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = staticinvoke <org.codehaus.jackson.map.JsonMappingException: org.codehaus.jackson.map.JsonMappingException 'from'(org.codehaus.jackson.JsonParser,java.lang.String)>(r4, $r10);

        throw $r11;
    }

    public java.lang.Object deserializeFromString(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.deser.impl.ValueInjector[] $r12;
        org.codehaus.jackson.map.deser.ValueInstantiator $r3, $r6, $r9;
        org.codehaus.jackson.map.deser.BeanDeserializer r0;
        org.codehaus.jackson.map.DeserializationContext r7;
        org.codehaus.jackson.map.JsonDeserializer $r1, $r8;
        java.lang.Object $r5, $r10, $r11;
        java.lang.String $r4;
        org.codehaus.jackson.JsonParser r2;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializer;

        r2 := @parameter0: org.codehaus.jackson.JsonParser;

        r7 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r1 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.JsonDeserializer _delegateDeserializer>;

        if $r1 == null goto label2;

        $r6 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator>;

        $z0 = virtualinvoke $r6.<org.codehaus.jackson.map.deser.ValueInstantiator: boolean canCreateFromString()>();

        if $z0 != 0 goto label2;

        $r9 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator>;

        $r8 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.JsonDeserializer _delegateDeserializer>;

        $r10 = virtualinvoke $r8.<org.codehaus.jackson.map.JsonDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r2, r7);

        $r11 = virtualinvoke $r9.<org.codehaus.jackson.map.deser.ValueInstantiator: java.lang.Object createUsingDelegate(java.lang.Object)>($r10);

        $r12 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.impl.ValueInjector[] _injectables>;

        if $r12 == null goto label1;

        virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializer: void injectValues(org.codehaus.jackson.map.DeserializationContext,java.lang.Object)>(r7, $r11);

     label1:
        return $r11;

     label2:
        $r3 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator>;

        $r4 = virtualinvoke r2.<org.codehaus.jackson.JsonParser: java.lang.String getText()>();

        $r5 = virtualinvoke $r3.<org.codehaus.jackson.map.deser.ValueInstantiator: java.lang.Object createFromString(java.lang.String)>($r4);

        return $r5;
    }

    public java.lang.Object deserializeFromNumber(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        int[] $r1;
        boolean $z0, $z1;
        org.codehaus.jackson.map.deser.impl.ValueInjector[] $r13, $r22, $r30;
        long $l2;
        org.codehaus.jackson.map.DeserializationContext r8;
        org.codehaus.jackson.map.JsonMappingException $r25;
        int $i0, $i1, $i3;
        org.codehaus.jackson.map.JsonDeserializer $r4, $r9, $r14, $r18, $r23, $r26;
        org.codehaus.jackson.JsonParser r0;
        org.codehaus.jackson.map.deser.ValueInstantiator $r5, $r7, $r10, $r15, $r17, $r19, $r27;
        org.codehaus.jackson.JsonParser$NumberType $r2;
        org.codehaus.jackson.map.deser.BeanDeserializer r3;
        java.lang.Object $r6, $r11, $r12, $r16, $r20, $r21, $r28, $r29;
        java.lang.Class $r24;

        r3 := @this: org.codehaus.jackson.map.deser.BeanDeserializer;

        r0 := @parameter0: org.codehaus.jackson.JsonParser;

        r8 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r1 = <org.codehaus.jackson.map.deser.BeanDeserializer$1: int[] $SwitchMap$org$codehaus$jackson$JsonParser$NumberType>;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonParser$NumberType getNumberType()>();

        $i0 = virtualinvoke $r2.<org.codehaus.jackson.JsonParser$NumberType: int ordinal()>();

        $i1 = $r1[$i0];

        lookupswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label4;
            default: goto label7;
        };

     label1:
        $r14 = r3.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.JsonDeserializer _delegateDeserializer>;

        if $r14 == null goto label3;

        $r17 = r3.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator>;

        $z1 = virtualinvoke $r17.<org.codehaus.jackson.map.deser.ValueInstantiator: boolean canCreateFromInt()>();

        if $z1 != 0 goto label3;

        $r19 = r3.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator>;

        $r18 = r3.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.JsonDeserializer _delegateDeserializer>;

        $r20 = virtualinvoke $r18.<org.codehaus.jackson.map.JsonDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r0, r8);

        $r21 = virtualinvoke $r19.<org.codehaus.jackson.map.deser.ValueInstantiator: java.lang.Object createUsingDelegate(java.lang.Object)>($r20);

        $r22 = r3.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.impl.ValueInjector[] _injectables>;

        if $r22 == null goto label2;

        virtualinvoke r3.<org.codehaus.jackson.map.deser.BeanDeserializer: void injectValues(org.codehaus.jackson.map.DeserializationContext,java.lang.Object)>(r8, $r21);

     label2:
        return $r21;

     label3:
        $r15 = r3.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator>;

        $i3 = virtualinvoke r0.<org.codehaus.jackson.JsonParser: int getIntValue()>();

        $r16 = virtualinvoke $r15.<org.codehaus.jackson.map.deser.ValueInstantiator: java.lang.Object createFromInt(int)>($i3);

        return $r16;

     label4:
        $r4 = r3.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.JsonDeserializer _delegateDeserializer>;

        if $r4 == null goto label6;

        $r7 = r3.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator>;

        $z0 = virtualinvoke $r7.<org.codehaus.jackson.map.deser.ValueInstantiator: boolean canCreateFromInt()>();

        if $z0 != 0 goto label6;

        $r10 = r3.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator>;

        $r9 = r3.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.JsonDeserializer _delegateDeserializer>;

        $r11 = virtualinvoke $r9.<org.codehaus.jackson.map.JsonDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r0, r8);

        $r12 = virtualinvoke $r10.<org.codehaus.jackson.map.deser.ValueInstantiator: java.lang.Object createUsingDelegate(java.lang.Object)>($r11);

        $r13 = r3.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.impl.ValueInjector[] _injectables>;

        if $r13 == null goto label5;

        virtualinvoke r3.<org.codehaus.jackson.map.deser.BeanDeserializer: void injectValues(org.codehaus.jackson.map.DeserializationContext,java.lang.Object)>(r8, $r12);

     label5:
        return $r12;

     label6:
        $r5 = r3.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator>;

        $l2 = virtualinvoke r0.<org.codehaus.jackson.JsonParser: long getLongValue()>();

        $r6 = virtualinvoke $r5.<org.codehaus.jackson.map.deser.ValueInstantiator: java.lang.Object createFromLong(long)>($l2);

        return $r6;

     label7:
        $r23 = r3.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.JsonDeserializer _delegateDeserializer>;

        if $r23 == null goto label9;

        $r27 = r3.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator>;

        $r26 = r3.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.JsonDeserializer _delegateDeserializer>;

        $r28 = virtualinvoke $r26.<org.codehaus.jackson.map.JsonDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r0, r8);

        $r29 = virtualinvoke $r27.<org.codehaus.jackson.map.deser.ValueInstantiator: java.lang.Object createUsingDelegate(java.lang.Object)>($r28);

        $r30 = r3.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.impl.ValueInjector[] _injectables>;

        if $r30 == null goto label8;

        virtualinvoke r3.<org.codehaus.jackson.map.deser.BeanDeserializer: void injectValues(org.codehaus.jackson.map.DeserializationContext,java.lang.Object)>(r8, $r29);

     label8:
        return $r29;

     label9:
        $r24 = virtualinvoke r3.<org.codehaus.jackson.map.deser.BeanDeserializer: java.lang.Class getBeanClass()>();

        $r25 = virtualinvoke r8.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.JsonMappingException instantiationException(java.lang.Class,java.lang.String)>($r24, "no suitable creator method found to deserialize from JSON integer number");

        throw $r25;
    }

    public java.lang.Object deserializeFromDouble(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.DeserializationContext r8;
        org.codehaus.jackson.map.JsonMappingException $r16;
        int[] $r1;
        int $i0, $i1;
        org.codehaus.jackson.map.JsonDeserializer $r4, $r9, $r14, $r17;
        org.codehaus.jackson.JsonParser r0;
        double $d0;
        boolean $z0;
        org.codehaus.jackson.map.deser.impl.ValueInjector[] $r13;
        org.codehaus.jackson.map.deser.ValueInstantiator $r5, $r7, $r10, $r18;
        org.codehaus.jackson.JsonParser$NumberType $r2;
        org.codehaus.jackson.map.deser.BeanDeserializer r3;
        java.lang.Object $r6, $r11, $r12, $r19, $r20;
        java.lang.Class $r15;

        r3 := @this: org.codehaus.jackson.map.deser.BeanDeserializer;

        r0 := @parameter0: org.codehaus.jackson.JsonParser;

        r8 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r1 = <org.codehaus.jackson.map.deser.BeanDeserializer$1: int[] $SwitchMap$org$codehaus$jackson$JsonParser$NumberType>;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonParser$NumberType getNumberType()>();

        $i0 = virtualinvoke $r2.<org.codehaus.jackson.JsonParser$NumberType: int ordinal()>();

        $i1 = $r1[$i0];

        lookupswitch($i1)
        {
            case 3: goto label1;
            case 4: goto label1;
            default: goto label4;
        };

     label1:
        $r4 = r3.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.JsonDeserializer _delegateDeserializer>;

        if $r4 == null goto label3;

        $r7 = r3.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator>;

        $z0 = virtualinvoke $r7.<org.codehaus.jackson.map.deser.ValueInstantiator: boolean canCreateFromDouble()>();

        if $z0 != 0 goto label3;

        $r10 = r3.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator>;

        $r9 = r3.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.JsonDeserializer _delegateDeserializer>;

        $r11 = virtualinvoke $r9.<org.codehaus.jackson.map.JsonDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r0, r8);

        $r12 = virtualinvoke $r10.<org.codehaus.jackson.map.deser.ValueInstantiator: java.lang.Object createUsingDelegate(java.lang.Object)>($r11);

        $r13 = r3.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.impl.ValueInjector[] _injectables>;

        if $r13 == null goto label2;

        virtualinvoke r3.<org.codehaus.jackson.map.deser.BeanDeserializer: void injectValues(org.codehaus.jackson.map.DeserializationContext,java.lang.Object)>(r8, $r12);

     label2:
        return $r12;

     label3:
        $r5 = r3.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator>;

        $d0 = virtualinvoke r0.<org.codehaus.jackson.JsonParser: double getDoubleValue()>();

        $r6 = virtualinvoke $r5.<org.codehaus.jackson.map.deser.ValueInstantiator: java.lang.Object createFromDouble(double)>($d0);

        return $r6;

     label4:
        $r14 = r3.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.JsonDeserializer _delegateDeserializer>;

        if $r14 == null goto label5;

        $r18 = r3.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator>;

        $r17 = r3.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.JsonDeserializer _delegateDeserializer>;

        $r19 = virtualinvoke $r17.<org.codehaus.jackson.map.JsonDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r0, r8);

        $r20 = virtualinvoke $r18.<org.codehaus.jackson.map.deser.ValueInstantiator: java.lang.Object createUsingDelegate(java.lang.Object)>($r19);

        return $r20;

     label5:
        $r15 = virtualinvoke r3.<org.codehaus.jackson.map.deser.BeanDeserializer: java.lang.Class getBeanClass()>();

        $r16 = virtualinvoke r8.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.JsonMappingException instantiationException(java.lang.Class,java.lang.String)>($r15, "no suitable creator method found to deserialize from JSON floating-point number");

        throw $r16;
    }

    public java.lang.Object deserializeFromBoolean(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.JsonToken $r3, $r4;
        org.codehaus.jackson.map.DeserializationContext r8;
        org.codehaus.jackson.map.JsonDeserializer $r1, $r9;
        org.codehaus.jackson.JsonParser r2;
        boolean $z0, $z1;
        org.codehaus.jackson.map.deser.impl.ValueInjector[] $r13;
        org.codehaus.jackson.map.deser.ValueInstantiator $r5, $r7, $r10;
        org.codehaus.jackson.map.deser.BeanDeserializer r0;
        java.lang.Object $r6, $r11, $r12;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializer;

        r2 := @parameter0: org.codehaus.jackson.JsonParser;

        r8 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r1 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.JsonDeserializer _delegateDeserializer>;

        if $r1 == null goto label2;

        $r7 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator>;

        $z0 = virtualinvoke $r7.<org.codehaus.jackson.map.deser.ValueInstantiator: boolean canCreateFromBoolean()>();

        if $z0 != 0 goto label2;

        $r10 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator>;

        $r9 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.JsonDeserializer _delegateDeserializer>;

        $r11 = virtualinvoke $r9.<org.codehaus.jackson.map.JsonDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r2, r8);

        $r12 = virtualinvoke $r10.<org.codehaus.jackson.map.deser.ValueInstantiator: java.lang.Object createUsingDelegate(java.lang.Object)>($r11);

        $r13 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.impl.ValueInjector[] _injectables>;

        if $r13 == null goto label1;

        virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializer: void injectValues(org.codehaus.jackson.map.DeserializationContext,java.lang.Object)>(r8, $r12);

     label1:
        return $r12;

     label2:
        $r3 = virtualinvoke r2.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken getCurrentToken()>();

        $r4 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken VALUE_TRUE>;

        if $r3 != $r4 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        $r5 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator>;

        $r6 = virtualinvoke $r5.<org.codehaus.jackson.map.deser.ValueInstantiator: java.lang.Object createFromBoolean(boolean)>($z1);

        return $r6;
    }

    public java.lang.Object deserializeFromArray(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.deser.impl.ValueInjector[] $r10;
        org.codehaus.jackson.map.deser.ValueInstantiator $r7;
        org.codehaus.jackson.map.deser.BeanDeserializer r0;
        org.codehaus.jackson.map.DeserializationContext r2;
        java.lang.Exception $r11;
        org.codehaus.jackson.map.JsonMappingException $r4;
        org.codehaus.jackson.map.JsonDeserializer $r1, $r6;
        java.lang.Class $r3;
        java.lang.Object $r8, $r9;
        org.codehaus.jackson.JsonParser r5;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializer;

        r5 := @parameter0: org.codehaus.jackson.JsonParser;

        r2 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r1 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.JsonDeserializer _delegateDeserializer>;

        if $r1 == null goto label4;

     label1:
        $r7 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator>;

        $r6 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.JsonDeserializer _delegateDeserializer>;

        $r8 = virtualinvoke $r6.<org.codehaus.jackson.map.JsonDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r5, r2);

        $r9 = virtualinvoke $r7.<org.codehaus.jackson.map.deser.ValueInstantiator: java.lang.Object createUsingDelegate(java.lang.Object)>($r8);

        $r10 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.impl.ValueInjector[] _injectables>;

        if $r10 == null goto label2;

        virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializer: void injectValues(org.codehaus.jackson.map.DeserializationContext,java.lang.Object)>(r2, $r9);

     label2:
        return $r9;

     label3:
        $r11 := @caughtexception;

        virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializer: void wrapInstantiationProblem(java.lang.Throwable,org.codehaus.jackson.map.DeserializationContext)>($r11, r2);

     label4:
        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializer: java.lang.Class getBeanClass()>();

        $r4 = virtualinvoke r2.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.JsonMappingException mappingException(java.lang.Class)>($r3);

        throw $r4;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected final java.lang.Object _deserializeUsingPropertyBased(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.JsonToken $r5, r37;
        org.codehaus.jackson.map.deser.SettableBeanProperty $r13, $r15;
        org.codehaus.jackson.map.deser.SettableAnyProperty $r17, $r20, $r21;
        org.codehaus.jackson.map.deser.impl.PropertyValueBuffer $r4;
        boolean $z0, $z1;
        org.codehaus.jackson.ObjectCodec $r19;
        java.lang.Exception $r32, $r33;
        org.codehaus.jackson.map.deser.impl.PropertyBasedCreator r1;
        org.codehaus.jackson.map.deser.impl.BeanPropertyMap $r14;
        org.codehaus.jackson.util.TokenBuffer $r18, r36;
        org.codehaus.jackson.map.DeserializationContext r3;
        java.util.HashSet $r16, $r23;
        int $i0;
        org.codehaus.jackson.type.JavaType $r8, $r28, $r34;
        java.lang.String $r12;
        org.codehaus.jackson.JsonParser r2;
        org.codehaus.jackson.map.deser.BeanDeserializer r0;
        java.lang.Object $r6, $r10, $r11, $r22, $r24, $r25, $r26, $r30, $r31, r38;
        java.lang.Class $r7, $r9, $r27, $r29, $r35;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializer;

        r2 := @parameter0: org.codehaus.jackson.JsonParser;

        r3 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        r1 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.impl.PropertyBasedCreator _propertyBasedCreator>;

        $r4 = virtualinvoke r1.<org.codehaus.jackson.map.deser.impl.PropertyBasedCreator: org.codehaus.jackson.map.deser.impl.PropertyValueBuffer startBuilding(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r2, r3);

        r36 = null;

        r37 = virtualinvoke r2.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken getCurrentToken()>();

     label01:
        $r5 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken FIELD_NAME>;

        if r37 != $r5 goto label14;

        $r12 = virtualinvoke r2.<org.codehaus.jackson.JsonParser: java.lang.String getCurrentName()>();

        virtualinvoke r2.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        $r13 = virtualinvoke r1.<org.codehaus.jackson.map.deser.impl.PropertyBasedCreator: org.codehaus.jackson.map.deser.SettableBeanProperty findCreatorProperty(java.lang.String)>($r12);

        if $r13 == null goto label08;

        $r25 = virtualinvoke $r13.<org.codehaus.jackson.map.deser.SettableBeanProperty: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r2, r3);

        $i0 = virtualinvoke $r13.<org.codehaus.jackson.map.deser.SettableBeanProperty: int getPropertyIndex()>();

        $z1 = virtualinvoke $r4.<org.codehaus.jackson.map.deser.impl.PropertyValueBuffer: boolean assignParameter(int,java.lang.Object)>($i0, $r25);

        if $z1 == 0 goto label13;

        virtualinvoke r2.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

     label02:
        $r26 = virtualinvoke r1.<org.codehaus.jackson.map.deser.impl.PropertyBasedCreator: java.lang.Object build(org.codehaus.jackson.map.deser.impl.PropertyValueBuffer)>($r4);

        r38 = $r26;

     label03:
        goto label05;

     label04:
        $r33 := @caughtexception;

        $r34 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.type.JavaType _beanType>;

        $r35 = virtualinvoke $r34.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializer: void wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,org.codehaus.jackson.map.DeserializationContext)>($r33, $r35, $r12, r3);

        goto label13;

     label05:
        $r27 = virtualinvoke $r26.<java.lang.Object: java.lang.Class getClass()>();

        $r28 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.type.JavaType _beanType>;

        $r29 = virtualinvoke $r28.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        if $r27 == $r29 goto label06;

        $r31 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializer: java.lang.Object handlePolymorphic(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object,org.codehaus.jackson.util.TokenBuffer)>(r2, r3, $r26, r36);

        return $r31;

     label06:
        if r36 == null goto label07;

        r38 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializer: java.lang.Object handleUnknownProperties(org.codehaus.jackson.map.DeserializationContext,java.lang.Object,org.codehaus.jackson.util.TokenBuffer)>(r3, $r26, r36);

     label07:
        $r30 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object)>(r2, r3, r38);

        return $r30;

     label08:
        $r14 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.impl.BeanPropertyMap _beanProperties>;

        $r15 = virtualinvoke $r14.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap: org.codehaus.jackson.map.deser.SettableBeanProperty find(java.lang.String)>($r12);

        if $r15 == null goto label09;

        $r24 = virtualinvoke $r15.<org.codehaus.jackson.map.deser.SettableBeanProperty: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r2, r3);

        virtualinvoke $r4.<org.codehaus.jackson.map.deser.impl.PropertyValueBuffer: void bufferProperty(org.codehaus.jackson.map.deser.SettableBeanProperty,java.lang.Object)>($r15, $r24);

        goto label13;

     label09:
        $r16 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: java.util.HashSet _ignorableProps>;

        if $r16 == null goto label10;

        $r23 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: java.util.HashSet _ignorableProps>;

        $z0 = virtualinvoke $r23.<java.util.HashSet: boolean contains(java.lang.Object)>($r12);

        if $z0 == 0 goto label10;

        virtualinvoke r2.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonParser skipChildren()>();

        goto label13;

     label10:
        $r17 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.SettableAnyProperty _anySetter>;

        if $r17 == null goto label11;

        $r21 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.SettableAnyProperty _anySetter>;

        $r20 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.SettableAnyProperty _anySetter>;

        $r22 = virtualinvoke $r20.<org.codehaus.jackson.map.deser.SettableAnyProperty: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r2, r3);

        virtualinvoke $r4.<org.codehaus.jackson.map.deser.impl.PropertyValueBuffer: void bufferAnyProperty(org.codehaus.jackson.map.deser.SettableAnyProperty,java.lang.String,java.lang.Object)>($r21, $r12, $r22);

        goto label13;

     label11:
        if r36 != null goto label12;

        $r18 = new org.codehaus.jackson.util.TokenBuffer;

        $r19 = virtualinvoke r2.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.ObjectCodec getCodec()>();

        specialinvoke $r18.<org.codehaus.jackson.util.TokenBuffer: void <init>(org.codehaus.jackson.ObjectCodec)>($r19);

        r36 = $r18;

     label12:
        virtualinvoke r36.<org.codehaus.jackson.util.TokenBuffer: void writeFieldName(java.lang.String)>($r12);

        virtualinvoke r36.<org.codehaus.jackson.util.TokenBuffer: void copyCurrentStructure(org.codehaus.jackson.JsonParser)>(r2);

     label13:
        r37 = virtualinvoke r2.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        goto label01;

     label14:
        $r6 = virtualinvoke r1.<org.codehaus.jackson.map.deser.impl.PropertyBasedCreator: java.lang.Object build(org.codehaus.jackson.map.deser.impl.PropertyValueBuffer)>($r4);

     label15:
        goto label17;

     label16:
        $r32 := @caughtexception;

        virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializer: void wrapInstantiationProblem(java.lang.Throwable,org.codehaus.jackson.map.DeserializationContext)>($r32, r3);

        return null;

     label17:
        if r36 == null goto label19;

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.type.JavaType _beanType>;

        $r9 = virtualinvoke $r8.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        if $r7 == $r9 goto label18;

        $r11 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializer: java.lang.Object handlePolymorphic(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object,org.codehaus.jackson.util.TokenBuffer)>(null, r3, $r6, r36);

        return $r11;

     label18:
        $r10 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializer: java.lang.Object handleUnknownProperties(org.codehaus.jackson.map.DeserializationContext,java.lang.Object,org.codehaus.jackson.util.TokenBuffer)>(r3, $r6, r36);

        return $r10;

     label19:
        return $r6;

        catch java.lang.Exception from label02 to label03 with label04;
        catch java.lang.Exception from label14 to label15 with label16;
    }

    protected java.lang.Object handlePolymorphic(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext, java.lang.Object, org.codehaus.jackson.util.TokenBuffer) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.util.TokenBuffer r2;
        org.codehaus.jackson.map.JsonDeserializer $r3;
        java.lang.Object r6;
        org.codehaus.jackson.map.deser.BeanDeserializer r0;
        org.codehaus.jackson.map.DeserializationContext r1;
        org.codehaus.jackson.JsonParser r4, $r5;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializer;

        r4 := @parameter0: org.codehaus.jackson.JsonParser;

        r1 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        r6 := @parameter2: java.lang.Object;

        r2 := @parameter3: org.codehaus.jackson.util.TokenBuffer;

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.JsonDeserializer _findSubclassDeserializer(org.codehaus.jackson.map.DeserializationContext,java.lang.Object,org.codehaus.jackson.util.TokenBuffer)>(r1, r6, r2);

        if $r3 == null goto label3;

        if r2 == null goto label1;

        virtualinvoke r2.<org.codehaus.jackson.util.TokenBuffer: void writeEndObject()>();

        $r5 = virtualinvoke r2.<org.codehaus.jackson.util.TokenBuffer: org.codehaus.jackson.JsonParser asParser()>();

        virtualinvoke $r5.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        r6 = virtualinvoke $r3.<org.codehaus.jackson.map.JsonDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object)>($r5, r1, r6);

     label1:
        if r4 == null goto label2;

        r6 = virtualinvoke $r3.<org.codehaus.jackson.map.JsonDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object)>(r4, r1, r6);

     label2:
        return r6;

     label3:
        if r2 == null goto label4;

        r6 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializer: java.lang.Object handleUnknownProperties(org.codehaus.jackson.map.DeserializationContext,java.lang.Object,org.codehaus.jackson.util.TokenBuffer)>(r1, r6, r2);

     label4:
        if r4 == null goto label5;

        r6 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object)>(r4, r1, r6);

     label5:
        return r6;
    }

    protected java.lang.Object deserializeWithUnwrapped(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.JsonToken $r25, $r26;
        org.codehaus.jackson.map.deser.SettableBeanProperty $r13;
        org.codehaus.jackson.util.TokenBuffer $r3;
        org.codehaus.jackson.map.deser.impl.BeanPropertyMap $r12;
        org.codehaus.jackson.map.deser.SettableAnyProperty $r15, $r16;
        org.codehaus.jackson.map.DeserializationContext r9;
        java.util.HashSet $r14, $r17;
        org.codehaus.jackson.map.JsonDeserializer $r1, $r19;
        java.lang.String $r11;
        org.codehaus.jackson.JsonParser r4;
        boolean $z0;
        org.codehaus.jackson.ObjectCodec $r5;
        org.codehaus.jackson.map.deser.impl.ValueInjector[] $r8;
        org.codehaus.jackson.map.deser.ValueInstantiator $r6, $r20;
        org.codehaus.jackson.map.deser.impl.UnwrappedPropertyHandler $r10;
        org.codehaus.jackson.map.deser.BeanDeserializer r0;
        java.lang.Exception $r23, $r24;
        org.codehaus.jackson.map.deser.impl.PropertyBasedCreator $r2;
        java.lang.Object $r7, $r18, $r21, $r22;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializer;

        r4 := @parameter0: org.codehaus.jackson.JsonParser;

        r9 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r1 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.JsonDeserializer _delegateDeserializer>;

        if $r1 == null goto label01;

        $r20 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator>;

        $r19 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.JsonDeserializer _delegateDeserializer>;

        $r21 = virtualinvoke $r19.<org.codehaus.jackson.map.JsonDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r4, r9);

        $r22 = virtualinvoke $r20.<org.codehaus.jackson.map.deser.ValueInstantiator: java.lang.Object createUsingDelegate(java.lang.Object)>($r21);

        return $r22;

     label01:
        $r2 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.impl.PropertyBasedCreator _propertyBasedCreator>;

        if $r2 == null goto label02;

        $r18 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializer: java.lang.Object deserializeUsingPropertyBasedWithUnwrapped(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r4, r9);

        return $r18;

     label02:
        $r3 = new org.codehaus.jackson.util.TokenBuffer;

        $r5 = virtualinvoke r4.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.ObjectCodec getCodec()>();

        specialinvoke $r3.<org.codehaus.jackson.util.TokenBuffer: void <init>(org.codehaus.jackson.ObjectCodec)>($r5);

        virtualinvoke $r3.<org.codehaus.jackson.util.TokenBuffer: void writeStartObject()>();

        $r6 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator>;

        $r7 = virtualinvoke $r6.<org.codehaus.jackson.map.deser.ValueInstantiator: java.lang.Object createUsingDefault()>();

        $r8 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.impl.ValueInjector[] _injectables>;

        if $r8 == null goto label03;

        virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializer: void injectValues(org.codehaus.jackson.map.DeserializationContext,java.lang.Object)>(r9, $r7);

     label03:
        $r25 = virtualinvoke r4.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken getCurrentToken()>();

        $r26 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken END_OBJECT>;

        if $r25 == $r26 goto label13;

        $r11 = virtualinvoke r4.<org.codehaus.jackson.JsonParser: java.lang.String getCurrentName()>();

        virtualinvoke r4.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        $r12 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.impl.BeanPropertyMap _beanProperties>;

        $r13 = virtualinvoke $r12.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap: org.codehaus.jackson.map.deser.SettableBeanProperty find(java.lang.String)>($r11);

        if $r13 == null goto label07;

     label04:
        virtualinvoke $r13.<org.codehaus.jackson.map.deser.SettableBeanProperty: void deserializeAndSet(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object)>(r4, r9, $r7);

     label05:
        goto label12;

     label06:
        $r24 := @caughtexception;

        virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializer: void wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,org.codehaus.jackson.map.DeserializationContext)>($r24, $r7, $r11, r9);

        goto label12;

     label07:
        $r14 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: java.util.HashSet _ignorableProps>;

        if $r14 == null goto label08;

        $r17 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: java.util.HashSet _ignorableProps>;

        $z0 = virtualinvoke $r17.<java.util.HashSet: boolean contains(java.lang.Object)>($r11);

        if $z0 == 0 goto label08;

        virtualinvoke r4.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonParser skipChildren()>();

        goto label12;

     label08:
        virtualinvoke $r3.<org.codehaus.jackson.util.TokenBuffer: void writeFieldName(java.lang.String)>($r11);

        virtualinvoke $r3.<org.codehaus.jackson.util.TokenBuffer: void copyCurrentStructure(org.codehaus.jackson.JsonParser)>(r4);

        $r15 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.SettableAnyProperty _anySetter>;

        if $r15 == null goto label12;

     label09:
        $r16 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.SettableAnyProperty _anySetter>;

        virtualinvoke $r16.<org.codehaus.jackson.map.deser.SettableAnyProperty: void deserializeAndSet(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object,java.lang.String)>(r4, r9, $r7, $r11);

     label10:
        goto label12;

     label11:
        $r23 := @caughtexception;

        virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializer: void wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,org.codehaus.jackson.map.DeserializationContext)>($r23, $r7, $r11, r9);

        goto label12;

     label12:
        virtualinvoke r4.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        goto label03;

     label13:
        virtualinvoke $r3.<org.codehaus.jackson.util.TokenBuffer: void writeEndObject()>();

        $r10 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.impl.UnwrappedPropertyHandler _unwrappedPropertyHandler>;

        virtualinvoke $r10.<org.codehaus.jackson.map.deser.impl.UnwrappedPropertyHandler: java.lang.Object processUnwrapped(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object,org.codehaus.jackson.util.TokenBuffer)>(r4, r9, $r7, $r3);

        return $r7;

        catch java.lang.Exception from label04 to label05 with label06;
        catch java.lang.Exception from label09 to label10 with label11;
    }

    protected java.lang.Object deserializeWithUnwrapped(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext, java.lang.Object) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.JsonToken $r1, $r2, r17, $r18;
        org.codehaus.jackson.map.deser.SettableBeanProperty $r11;
        org.codehaus.jackson.util.TokenBuffer $r3;
        org.codehaus.jackson.map.deser.impl.BeanPropertyMap $r10;
        org.codehaus.jackson.map.deser.SettableAnyProperty $r13, $r14;
        org.codehaus.jackson.map.DeserializationContext r6;
        java.util.HashSet $r12, $r15;
        java.lang.String $r9;
        org.codehaus.jackson.JsonParser r0;
        boolean $z0;
        org.codehaus.jackson.ObjectCodec $r4;
        org.codehaus.jackson.map.deser.impl.UnwrappedPropertyHandler $r8;
        org.codehaus.jackson.map.deser.BeanDeserializer r5;
        java.lang.Exception $r16;
        java.lang.Object r7;

        r5 := @this: org.codehaus.jackson.map.deser.BeanDeserializer;

        r0 := @parameter0: org.codehaus.jackson.JsonParser;

        r6 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        r7 := @parameter2: java.lang.Object;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken getCurrentToken()>();

        r17 = $r1;

        $r2 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken START_OBJECT>;

        if $r1 != $r2 goto label1;

        r17 = virtualinvoke r0.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

     label1:
        $r3 = new org.codehaus.jackson.util.TokenBuffer;

        $r4 = virtualinvoke r0.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.ObjectCodec getCodec()>();

        specialinvoke $r3.<org.codehaus.jackson.util.TokenBuffer: void <init>(org.codehaus.jackson.ObjectCodec)>($r4);

        virtualinvoke $r3.<org.codehaus.jackson.util.TokenBuffer: void writeStartObject()>();

     label2:
        $r18 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken FIELD_NAME>;

        if r17 != $r18 goto label9;

        $r9 = virtualinvoke r0.<org.codehaus.jackson.JsonParser: java.lang.String getCurrentName()>();

        $r10 = r5.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.impl.BeanPropertyMap _beanProperties>;

        $r11 = virtualinvoke $r10.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap: org.codehaus.jackson.map.deser.SettableBeanProperty find(java.lang.String)>($r9);

        virtualinvoke r0.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        if $r11 == null goto label6;

     label3:
        virtualinvoke $r11.<org.codehaus.jackson.map.deser.SettableBeanProperty: void deserializeAndSet(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object)>(r0, r6, r7);

     label4:
        goto label8;

     label5:
        $r16 := @caughtexception;

        virtualinvoke r5.<org.codehaus.jackson.map.deser.BeanDeserializer: void wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,org.codehaus.jackson.map.DeserializationContext)>($r16, r7, $r9, r6);

        goto label8;

     label6:
        $r12 = r5.<org.codehaus.jackson.map.deser.BeanDeserializer: java.util.HashSet _ignorableProps>;

        if $r12 == null goto label7;

        $r15 = r5.<org.codehaus.jackson.map.deser.BeanDeserializer: java.util.HashSet _ignorableProps>;

        $z0 = virtualinvoke $r15.<java.util.HashSet: boolean contains(java.lang.Object)>($r9);

        if $z0 == 0 goto label7;

        virtualinvoke r0.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonParser skipChildren()>();

        goto label8;

     label7:
        virtualinvoke $r3.<org.codehaus.jackson.util.TokenBuffer: void writeFieldName(java.lang.String)>($r9);

        virtualinvoke $r3.<org.codehaus.jackson.util.TokenBuffer: void copyCurrentStructure(org.codehaus.jackson.JsonParser)>(r0);

        $r13 = r5.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.SettableAnyProperty _anySetter>;

        if $r13 == null goto label8;

        $r14 = r5.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.SettableAnyProperty _anySetter>;

        virtualinvoke $r14.<org.codehaus.jackson.map.deser.SettableAnyProperty: void deserializeAndSet(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object,java.lang.String)>(r0, r6, r7, $r9);

     label8:
        r17 = virtualinvoke r0.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        goto label2;

     label9:
        virtualinvoke $r3.<org.codehaus.jackson.util.TokenBuffer: void writeEndObject()>();

        $r8 = r5.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.impl.UnwrappedPropertyHandler _unwrappedPropertyHandler>;

        virtualinvoke $r8.<org.codehaus.jackson.map.deser.impl.UnwrappedPropertyHandler: java.lang.Object processUnwrapped(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object,org.codehaus.jackson.util.TokenBuffer)>(r0, r6, r7, $r3);

        return r7;

        catch java.lang.Exception from label3 to label4 with label5;
    }

    protected java.lang.Object deserializeUsingPropertyBasedWithUnwrapped(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.JsonToken $r7, $r24, r35, r36;
        org.codehaus.jackson.map.deser.SettableBeanProperty $r12, $r14;
        org.codehaus.jackson.map.deser.SettableAnyProperty $r16, $r17, $r18;
        org.codehaus.jackson.map.deser.impl.PropertyValueBuffer $r4;
        boolean $z0, $z1;
        org.codehaus.jackson.ObjectCodec $r6;
        org.codehaus.jackson.map.deser.impl.UnwrappedPropertyHandler $r9, $r28;
        java.lang.Exception $r31, $r32;
        org.codehaus.jackson.map.deser.impl.PropertyBasedCreator r1;
        org.codehaus.jackson.util.TokenBuffer $r5;
        org.codehaus.jackson.map.deser.impl.BeanPropertyMap $r13;
        org.codehaus.jackson.map.DeserializationContext r3;
        java.util.HashSet $r15, $r20;
        org.codehaus.jackson.map.JsonMappingException $r30;
        int $i0;
        org.codehaus.jackson.type.JavaType $r26, $r33;
        java.lang.String $r11;
        org.codehaus.jackson.JsonParser r2;
        org.codehaus.jackson.map.deser.BeanDeserializer r0;
        java.lang.Object $r8, $r10, $r19, $r21, $r22, $r23, $r29;
        java.lang.Class $r25, $r27, $r34;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializer;

        r2 := @parameter0: org.codehaus.jackson.JsonParser;

        r3 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        r1 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.impl.PropertyBasedCreator _propertyBasedCreator>;

        $r4 = virtualinvoke r1.<org.codehaus.jackson.map.deser.impl.PropertyBasedCreator: org.codehaus.jackson.map.deser.impl.PropertyValueBuffer startBuilding(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r2, r3);

        $r5 = new org.codehaus.jackson.util.TokenBuffer;

        $r6 = virtualinvoke r2.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.ObjectCodec getCodec()>();

        specialinvoke $r5.<org.codehaus.jackson.util.TokenBuffer: void <init>(org.codehaus.jackson.ObjectCodec)>($r6);

        virtualinvoke $r5.<org.codehaus.jackson.util.TokenBuffer: void writeStartObject()>();

        r35 = virtualinvoke r2.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken getCurrentToken()>();

     label01:
        $r7 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken FIELD_NAME>;

        if r35 != $r7 goto label12;

        $r11 = virtualinvoke r2.<org.codehaus.jackson.JsonParser: java.lang.String getCurrentName()>();

        virtualinvoke r2.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        $r12 = virtualinvoke r1.<org.codehaus.jackson.map.deser.impl.PropertyBasedCreator: org.codehaus.jackson.map.deser.SettableBeanProperty findCreatorProperty(java.lang.String)>($r11);

        if $r12 == null goto label08;

        $r22 = virtualinvoke $r12.<org.codehaus.jackson.map.deser.SettableBeanProperty: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r2, r3);

        $i0 = virtualinvoke $r12.<org.codehaus.jackson.map.deser.SettableBeanProperty: int getPropertyIndex()>();

        $z1 = virtualinvoke $r4.<org.codehaus.jackson.map.deser.impl.PropertyValueBuffer: boolean assignParameter(int,java.lang.Object)>($i0, $r22);

        if $z1 == 0 goto label11;

        r36 = virtualinvoke r2.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

     label02:
        $r23 = virtualinvoke r1.<org.codehaus.jackson.map.deser.impl.PropertyBasedCreator: java.lang.Object build(org.codehaus.jackson.map.deser.impl.PropertyValueBuffer)>($r4);

     label03:
        goto label05;

     label04:
        $r32 := @caughtexception;

        $r33 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.type.JavaType _beanType>;

        $r34 = virtualinvoke $r33.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializer: void wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,org.codehaus.jackson.map.DeserializationContext)>($r32, $r34, $r11, r3);

        goto label11;

     label05:
        $r24 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken FIELD_NAME>;

        if r36 != $r24 goto label06;

        virtualinvoke r2.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        virtualinvoke $r5.<org.codehaus.jackson.util.TokenBuffer: void copyCurrentStructure(org.codehaus.jackson.JsonParser)>(r2);

        r36 = virtualinvoke r2.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        goto label05;

     label06:
        virtualinvoke $r5.<org.codehaus.jackson.util.TokenBuffer: void writeEndObject()>();

        $r25 = virtualinvoke $r23.<java.lang.Object: java.lang.Class getClass()>();

        $r26 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.type.JavaType _beanType>;

        $r27 = virtualinvoke $r26.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        if $r25 == $r27 goto label07;

        $r30 = virtualinvoke r3.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.JsonMappingException mappingException(java.lang.String)>("Can not create polymorphic instances with unwrapped values");

        throw $r30;

     label07:
        $r28 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.impl.UnwrappedPropertyHandler _unwrappedPropertyHandler>;

        $r29 = virtualinvoke $r28.<org.codehaus.jackson.map.deser.impl.UnwrappedPropertyHandler: java.lang.Object processUnwrapped(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object,org.codehaus.jackson.util.TokenBuffer)>(r2, r3, $r23, $r5);

        return $r29;

     label08:
        $r13 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.impl.BeanPropertyMap _beanProperties>;

        $r14 = virtualinvoke $r13.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap: org.codehaus.jackson.map.deser.SettableBeanProperty find(java.lang.String)>($r11);

        if $r14 == null goto label09;

        $r21 = virtualinvoke $r14.<org.codehaus.jackson.map.deser.SettableBeanProperty: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r2, r3);

        virtualinvoke $r4.<org.codehaus.jackson.map.deser.impl.PropertyValueBuffer: void bufferProperty(org.codehaus.jackson.map.deser.SettableBeanProperty,java.lang.Object)>($r14, $r21);

        goto label11;

     label09:
        $r15 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: java.util.HashSet _ignorableProps>;

        if $r15 == null goto label10;

        $r20 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: java.util.HashSet _ignorableProps>;

        $z0 = virtualinvoke $r20.<java.util.HashSet: boolean contains(java.lang.Object)>($r11);

        if $z0 == 0 goto label10;

        virtualinvoke r2.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonParser skipChildren()>();

        goto label11;

     label10:
        virtualinvoke $r5.<org.codehaus.jackson.util.TokenBuffer: void writeFieldName(java.lang.String)>($r11);

        virtualinvoke $r5.<org.codehaus.jackson.util.TokenBuffer: void copyCurrentStructure(org.codehaus.jackson.JsonParser)>(r2);

        $r16 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.SettableAnyProperty _anySetter>;

        if $r16 == null goto label11;

        $r18 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.SettableAnyProperty _anySetter>;

        $r17 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.SettableAnyProperty _anySetter>;

        $r19 = virtualinvoke $r17.<org.codehaus.jackson.map.deser.SettableAnyProperty: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r2, r3);

        virtualinvoke $r4.<org.codehaus.jackson.map.deser.impl.PropertyValueBuffer: void bufferAnyProperty(org.codehaus.jackson.map.deser.SettableAnyProperty,java.lang.String,java.lang.Object)>($r18, $r11, $r19);

     label11:
        r35 = virtualinvoke r2.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        goto label01;

     label12:
        $r8 = virtualinvoke r1.<org.codehaus.jackson.map.deser.impl.PropertyBasedCreator: java.lang.Object build(org.codehaus.jackson.map.deser.impl.PropertyValueBuffer)>($r4);

     label13:
        goto label15;

     label14:
        $r31 := @caughtexception;

        virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializer: void wrapInstantiationProblem(java.lang.Throwable,org.codehaus.jackson.map.DeserializationContext)>($r31, r3);

        return null;

     label15:
        $r9 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.impl.UnwrappedPropertyHandler _unwrappedPropertyHandler>;

        $r10 = virtualinvoke $r9.<org.codehaus.jackson.map.deser.impl.UnwrappedPropertyHandler: java.lang.Object processUnwrapped(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object,org.codehaus.jackson.util.TokenBuffer)>(r2, r3, $r8, $r5);

        return $r10;

        catch java.lang.Exception from label02 to label03 with label04;
        catch java.lang.Exception from label12 to label13 with label14;
    }

    protected java.lang.Object deserializeWithExternalTypeId(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.deser.ValueInstantiator $r4;
        org.codehaus.jackson.map.deser.BeanDeserializer r0;
        org.codehaus.jackson.map.DeserializationContext r3;
        org.codehaus.jackson.map.deser.impl.PropertyBasedCreator $r1;
        java.lang.Object $r5, $r6, $r7;
        org.codehaus.jackson.JsonParser r2;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializer;

        r2 := @parameter0: org.codehaus.jackson.JsonParser;

        r3 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r1 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.impl.PropertyBasedCreator _propertyBasedCreator>;

        if $r1 == null goto label1;

        $r7 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializer: java.lang.Object deserializeUsingPropertyBasedWithExternalTypeId(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r2, r3);

        return $r7;

     label1:
        $r4 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator>;

        $r5 = virtualinvoke $r4.<org.codehaus.jackson.map.deser.ValueInstantiator: java.lang.Object createUsingDefault()>();

        $r6 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializer: java.lang.Object deserializeWithExternalTypeId(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object)>(r2, r3, $r5);

        return $r6;
    }

    protected java.lang.Object deserializeWithExternalTypeId(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext, java.lang.Object) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.JsonToken $r4, $r5, $r16;
        org.codehaus.jackson.map.deser.SettableBeanProperty $r11;
        org.codehaus.jackson.map.deser.impl.BeanPropertyMap $r10;
        org.codehaus.jackson.map.deser.SettableAnyProperty $r13, $r14;
        org.codehaus.jackson.map.DeserializationContext r6;
        java.util.HashSet $r12, $r15;
        java.lang.String $r9;
        org.codehaus.jackson.map.deser.impl.ExternalTypeHandler $r1, $r2;
        org.codehaus.jackson.JsonParser r3;
        boolean $z0, $z1, $z2;
        org.codehaus.jackson.map.deser.BeanDeserializer r0;
        java.lang.Exception $r17, $r18;
        java.lang.Object r7, $r8;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializer;

        r3 := @parameter0: org.codehaus.jackson.JsonParser;

        r6 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        r7 := @parameter2: java.lang.Object;

        $r1 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.impl.ExternalTypeHandler _externalTypeIdHandler>;

        $r2 = virtualinvoke $r1.<org.codehaus.jackson.map.deser.impl.ExternalTypeHandler: org.codehaus.jackson.map.deser.impl.ExternalTypeHandler start()>();

     label01:
        $r4 = virtualinvoke r3.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken getCurrentToken()>();

        $r5 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken END_OBJECT>;

        if $r4 == $r5 goto label13;

        $r9 = virtualinvoke r3.<org.codehaus.jackson.JsonParser: java.lang.String getCurrentName()>();

        virtualinvoke r3.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        $r10 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.impl.BeanPropertyMap _beanProperties>;

        $r11 = virtualinvoke $r10.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap: org.codehaus.jackson.map.deser.SettableBeanProperty find(java.lang.String)>($r9);

        if $r11 == null goto label05;

        $r16 = virtualinvoke r3.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken getCurrentToken()>();

        $z2 = virtualinvoke $r16.<org.codehaus.jackson.JsonToken: boolean isScalarValue()>();

        if $z2 == 0 goto label02;

        virtualinvoke $r2.<org.codehaus.jackson.map.deser.impl.ExternalTypeHandler: boolean handleTypePropertyValue(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.String,java.lang.Object)>(r3, r6, $r9, r7);

     label02:
        virtualinvoke $r11.<org.codehaus.jackson.map.deser.SettableBeanProperty: void deserializeAndSet(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object)>(r3, r6, r7);

     label03:
        goto label12;

     label04:
        $r18 := @caughtexception;

        virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializer: void wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,org.codehaus.jackson.map.DeserializationContext)>($r18, r7, $r9, r6);

        goto label12;

     label05:
        $r12 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: java.util.HashSet _ignorableProps>;

        if $r12 == null goto label06;

        $r15 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: java.util.HashSet _ignorableProps>;

        $z1 = virtualinvoke $r15.<java.util.HashSet: boolean contains(java.lang.Object)>($r9);

        if $z1 == 0 goto label06;

        virtualinvoke r3.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonParser skipChildren()>();

        goto label12;

     label06:
        $z0 = virtualinvoke $r2.<org.codehaus.jackson.map.deser.impl.ExternalTypeHandler: boolean handleToken(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.String,java.lang.Object)>(r3, r6, $r9, r7);

        if $z0 == 0 goto label07;

        goto label12;

     label07:
        $r13 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.SettableAnyProperty _anySetter>;

        if $r13 == null goto label11;

     label08:
        $r14 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.SettableAnyProperty _anySetter>;

        virtualinvoke $r14.<org.codehaus.jackson.map.deser.SettableAnyProperty: void deserializeAndSet(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object,java.lang.String)>(r3, r6, r7, $r9);

     label09:
        goto label12;

     label10:
        $r17 := @caughtexception;

        virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializer: void wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,org.codehaus.jackson.map.DeserializationContext)>($r17, r7, $r9, r6);

        goto label12;

     label11:
        virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializer: void handleUnknownProperty(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object,java.lang.String)>(r3, r6, r7, $r9);

     label12:
        virtualinvoke r3.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        goto label01;

     label13:
        $r8 = virtualinvoke $r2.<org.codehaus.jackson.map.deser.impl.ExternalTypeHandler: java.lang.Object complete(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object)>(r3, r6, r7);

        return $r8;

        catch java.lang.Exception from label02 to label03 with label04;
        catch java.lang.Exception from label08 to label09 with label10;
    }

    protected java.lang.Object deserializeUsingPropertyBasedWithExternalTypeId(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.JsonToken $r9, $r25, r35, r36;
        org.codehaus.jackson.map.deser.SettableBeanProperty $r13, $r15;
        org.codehaus.jackson.map.deser.SettableAnyProperty $r17, $r18, $r19;
        org.codehaus.jackson.map.deser.impl.PropertyValueBuffer $r6;
        boolean $z0, $z1, $z2;
        org.codehaus.jackson.ObjectCodec $r8;
        java.lang.Exception $r31, $r32;
        org.codehaus.jackson.map.deser.impl.PropertyBasedCreator r3;
        org.codehaus.jackson.util.TokenBuffer $r7;
        org.codehaus.jackson.map.deser.impl.BeanPropertyMap $r14;
        org.codehaus.jackson.map.DeserializationContext r5;
        java.util.HashSet $r16, $r21;
        org.codehaus.jackson.map.JsonMappingException $r30;
        int $i0;
        org.codehaus.jackson.type.JavaType $r27, $r33;
        java.lang.String $r12;
        org.codehaus.jackson.map.deser.impl.ExternalTypeHandler $r1, $r2;
        org.codehaus.jackson.JsonParser r4;
        org.codehaus.jackson.map.deser.BeanDeserializer r0;
        java.lang.Object $r10, $r11, $r20, $r22, $r23, $r24, $r29;
        java.lang.Class $r26, $r28, $r34;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializer;

        r4 := @parameter0: org.codehaus.jackson.JsonParser;

        r5 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r1 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.impl.ExternalTypeHandler _externalTypeIdHandler>;

        $r2 = virtualinvoke $r1.<org.codehaus.jackson.map.deser.impl.ExternalTypeHandler: org.codehaus.jackson.map.deser.impl.ExternalTypeHandler start()>();

        r3 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.impl.PropertyBasedCreator _propertyBasedCreator>;

        $r6 = virtualinvoke r3.<org.codehaus.jackson.map.deser.impl.PropertyBasedCreator: org.codehaus.jackson.map.deser.impl.PropertyValueBuffer startBuilding(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r4, r5);

        $r7 = new org.codehaus.jackson.util.TokenBuffer;

        $r8 = virtualinvoke r4.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.ObjectCodec getCodec()>();

        specialinvoke $r7.<org.codehaus.jackson.util.TokenBuffer: void <init>(org.codehaus.jackson.ObjectCodec)>($r8);

        virtualinvoke $r7.<org.codehaus.jackson.util.TokenBuffer: void writeStartObject()>();

        r35 = virtualinvoke r4.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken getCurrentToken()>();

     label01:
        $r9 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken FIELD_NAME>;

        if r35 != $r9 goto label13;

        $r12 = virtualinvoke r4.<org.codehaus.jackson.JsonParser: java.lang.String getCurrentName()>();

        virtualinvoke r4.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        $r13 = virtualinvoke r3.<org.codehaus.jackson.map.deser.impl.PropertyBasedCreator: org.codehaus.jackson.map.deser.SettableBeanProperty findCreatorProperty(java.lang.String)>($r12);

        if $r13 == null goto label08;

        $r23 = virtualinvoke $r13.<org.codehaus.jackson.map.deser.SettableBeanProperty: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r4, r5);

        $i0 = virtualinvoke $r13.<org.codehaus.jackson.map.deser.SettableBeanProperty: int getPropertyIndex()>();

        $z2 = virtualinvoke $r6.<org.codehaus.jackson.map.deser.impl.PropertyValueBuffer: boolean assignParameter(int,java.lang.Object)>($i0, $r23);

        if $z2 == 0 goto label12;

        r36 = virtualinvoke r4.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

     label02:
        $r24 = virtualinvoke r3.<org.codehaus.jackson.map.deser.impl.PropertyBasedCreator: java.lang.Object build(org.codehaus.jackson.map.deser.impl.PropertyValueBuffer)>($r6);

     label03:
        goto label05;

     label04:
        $r32 := @caughtexception;

        $r33 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.type.JavaType _beanType>;

        $r34 = virtualinvoke $r33.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializer: void wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,org.codehaus.jackson.map.DeserializationContext)>($r32, $r34, $r12, r5);

        goto label12;

     label05:
        $r25 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken FIELD_NAME>;

        if r36 != $r25 goto label06;

        virtualinvoke r4.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        virtualinvoke $r7.<org.codehaus.jackson.util.TokenBuffer: void copyCurrentStructure(org.codehaus.jackson.JsonParser)>(r4);

        r36 = virtualinvoke r4.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        goto label05;

     label06:
        $r26 = virtualinvoke $r24.<java.lang.Object: java.lang.Class getClass()>();

        $r27 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.type.JavaType _beanType>;

        $r28 = virtualinvoke $r27.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        if $r26 == $r28 goto label07;

        $r30 = virtualinvoke r5.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.JsonMappingException mappingException(java.lang.String)>("Can not create polymorphic instances with unwrapped values");

        throw $r30;

     label07:
        $r29 = virtualinvoke $r2.<org.codehaus.jackson.map.deser.impl.ExternalTypeHandler: java.lang.Object complete(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object)>(r4, r5, $r24);

        return $r29;

     label08:
        $r14 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.impl.BeanPropertyMap _beanProperties>;

        $r15 = virtualinvoke $r14.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap: org.codehaus.jackson.map.deser.SettableBeanProperty find(java.lang.String)>($r12);

        if $r15 == null goto label09;

        $r22 = virtualinvoke $r15.<org.codehaus.jackson.map.deser.SettableBeanProperty: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r4, r5);

        virtualinvoke $r6.<org.codehaus.jackson.map.deser.impl.PropertyValueBuffer: void bufferProperty(org.codehaus.jackson.map.deser.SettableBeanProperty,java.lang.Object)>($r15, $r22);

        goto label12;

     label09:
        $z0 = virtualinvoke $r2.<org.codehaus.jackson.map.deser.impl.ExternalTypeHandler: boolean handleToken(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.String,java.lang.Object)>(r4, r5, $r12, null);

        if $z0 == 0 goto label10;

        goto label12;

     label10:
        $r16 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: java.util.HashSet _ignorableProps>;

        if $r16 == null goto label11;

        $r21 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: java.util.HashSet _ignorableProps>;

        $z1 = virtualinvoke $r21.<java.util.HashSet: boolean contains(java.lang.Object)>($r12);

        if $z1 == 0 goto label11;

        virtualinvoke r4.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonParser skipChildren()>();

        goto label12;

     label11:
        $r17 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.SettableAnyProperty _anySetter>;

        if $r17 == null goto label12;

        $r19 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.SettableAnyProperty _anySetter>;

        $r18 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.SettableAnyProperty _anySetter>;

        $r20 = virtualinvoke $r18.<org.codehaus.jackson.map.deser.SettableAnyProperty: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r4, r5);

        virtualinvoke $r6.<org.codehaus.jackson.map.deser.impl.PropertyValueBuffer: void bufferAnyProperty(org.codehaus.jackson.map.deser.SettableAnyProperty,java.lang.String,java.lang.Object)>($r19, $r12, $r20);

     label12:
        r35 = virtualinvoke r4.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        goto label01;

     label13:
        $r10 = virtualinvoke r3.<org.codehaus.jackson.map.deser.impl.PropertyBasedCreator: java.lang.Object build(org.codehaus.jackson.map.deser.impl.PropertyValueBuffer)>($r6);

     label14:
        goto label16;

     label15:
        $r31 := @caughtexception;

        virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializer: void wrapInstantiationProblem(java.lang.Throwable,org.codehaus.jackson.map.DeserializationContext)>($r31, r5);

        return null;

     label16:
        $r11 = virtualinvoke $r2.<org.codehaus.jackson.map.deser.impl.ExternalTypeHandler: java.lang.Object complete(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object)>(r4, r5, $r10);

        return $r11;

        catch java.lang.Exception from label02 to label03 with label04;
        catch java.lang.Exception from label13 to label14 with label15;
    }

    protected void injectValues(org.codehaus.jackson.map.DeserializationContext, java.lang.Object) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.deser.impl.ValueInjector[] r1;
        org.codehaus.jackson.map.deser.impl.ValueInjector r2;
        int i0, i1;
        java.lang.Object r4;
        org.codehaus.jackson.map.deser.BeanDeserializer r0;
        org.codehaus.jackson.map.DeserializationContext r3;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializer;

        r3 := @parameter0: org.codehaus.jackson.map.DeserializationContext;

        r4 := @parameter1: java.lang.Object;

        r1 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.impl.ValueInjector[] _injectables>;

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r2 = r1[i1];

        virtualinvoke r2.<org.codehaus.jackson.map.deser.impl.ValueInjector: void inject(org.codehaus.jackson.map.DeserializationContext,java.lang.Object)>(r3, r4);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    protected void handleUnknownProperty(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext, java.lang.Object, java.lang.String) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.deser.BeanDeserializer r0;
        org.codehaus.jackson.map.DeserializationContext r3;
        java.util.HashSet $r2, $r6;
        java.lang.Object r4;
        java.lang.String r5;
        org.codehaus.jackson.JsonParser r1;
        boolean $z0, $z1;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializer;

        r1 := @parameter0: org.codehaus.jackson.JsonParser;

        r3 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        r4 := @parameter2: java.lang.Object;

        r5 := @parameter3: java.lang.String;

        $z0 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: boolean _ignoreAllUnknown>;

        if $z0 != 0 goto label1;

        $r2 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: java.util.HashSet _ignorableProps>;

        if $r2 == null goto label2;

        $r6 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: java.util.HashSet _ignorableProps>;

        $z1 = virtualinvoke $r6.<java.util.HashSet: boolean contains(java.lang.Object)>(r5);

        if $z1 == 0 goto label2;

     label1:
        virtualinvoke r1.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonParser skipChildren()>();

        return;

     label2:
        specialinvoke r0.<org.codehaus.jackson.map.deser.std.StdDeserializer: void handleUnknownProperty(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object,java.lang.String)>(r1, r3, r4, r5);

        return;
    }

    protected java.lang.Object handleUnknownProperties(org.codehaus.jackson.map.DeserializationContext, java.lang.Object, org.codehaus.jackson.util.TokenBuffer) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.JsonToken $r2, $r3;
        org.codehaus.jackson.util.TokenBuffer r0;
        org.codehaus.jackson.map.deser.BeanDeserializer r6;
        org.codehaus.jackson.map.DeserializationContext r7;
        java.lang.Object r4;
        java.lang.String $r5;
        org.codehaus.jackson.JsonParser $r1;

        r6 := @this: org.codehaus.jackson.map.deser.BeanDeserializer;

        r7 := @parameter0: org.codehaus.jackson.map.DeserializationContext;

        r4 := @parameter1: java.lang.Object;

        r0 := @parameter2: org.codehaus.jackson.util.TokenBuffer;

        virtualinvoke r0.<org.codehaus.jackson.util.TokenBuffer: void writeEndObject()>();

        $r1 = virtualinvoke r0.<org.codehaus.jackson.util.TokenBuffer: org.codehaus.jackson.JsonParser asParser()>();

     label1:
        $r2 = virtualinvoke $r1.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        $r3 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken END_OBJECT>;

        if $r2 == $r3 goto label2;

        $r5 = virtualinvoke $r1.<org.codehaus.jackson.JsonParser: java.lang.String getCurrentName()>();

        virtualinvoke $r1.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        virtualinvoke r6.<org.codehaus.jackson.map.deser.BeanDeserializer: void handleUnknownProperty(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object,java.lang.String)>($r1, r7, r4, $r5);

        goto label1;

     label2:
        return r4;
    }

    protected org.codehaus.jackson.map.JsonDeserializer _findSubclassDeserializer(org.codehaus.jackson.map.DeserializationContext, java.lang.Object, org.codehaus.jackson.util.TokenBuffer) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        java.lang.Throwable $r19, $r20;
        java.util.HashMap $r1, $r4, $r14, $r16, $r18;
        org.codehaus.jackson.util.TokenBuffer r21;
        org.codehaus.jackson.map.DeserializationConfig $r11;
        org.codehaus.jackson.map.DeserializationContext r7;
        org.codehaus.jackson.type.JavaType $r10;
        org.codehaus.jackson.map.JsonDeserializer $r13, $r22, r23;
        org.codehaus.jackson.map.type.ClassKey $r2, $r15;
        org.codehaus.jackson.map.DeserializerProvider $r8;
        org.codehaus.jackson.map.deser.BeanDeserializer r0;
        org.codehaus.jackson.map.BeanProperty $r12;
        java.lang.Object r3, $r6;
        java.lang.Class $r5, $r9, $r17;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializer;

        r7 := @parameter0: org.codehaus.jackson.map.DeserializationContext;

        r3 := @parameter1: java.lang.Object;

        r21 := @parameter2: org.codehaus.jackson.util.TokenBuffer;

        entermonitor r0;

     label01:
        $r1 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: java.util.HashMap _subDeserializers>;

        if $r1 != null goto label02;

        $r22 = null;

        goto label03;

     label02:
        $r4 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: java.util.HashMap _subDeserializers>;

        $r2 = new org.codehaus.jackson.map.type.ClassKey;

        $r5 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        specialinvoke $r2.<org.codehaus.jackson.map.type.ClassKey: void <init>(java.lang.Class)>($r5);

        $r6 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        $r22 = (org.codehaus.jackson.map.JsonDeserializer) $r6;

     label03:
        r23 = $r22;

        exitmonitor r0;

     label04:
        goto label07;

     label05:
        $r20 := @caughtexception;

        exitmonitor r0;

     label06:
        throw $r20;

     label07:
        if $r22 == null goto label08;

        return $r22;

     label08:
        $r8 = virtualinvoke r7.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.DeserializerProvider getDeserializerProvider()>();

        if $r8 == null goto label14;

        $r9 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke r7.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.type.JavaType constructType(java.lang.Class)>($r9);

        $r11 = virtualinvoke r7.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.DeserializationConfig getConfig()>();

        $r12 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.BeanProperty _property>;

        $r13 = virtualinvoke $r8.<org.codehaus.jackson.map.DeserializerProvider: org.codehaus.jackson.map.JsonDeserializer findValueDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)>($r11, $r10, $r12);

        r23 = $r13;

        if $r13 == null goto label14;

        entermonitor r0;

     label09:
        $r14 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: java.util.HashMap _subDeserializers>;

        if $r14 != null goto label10;

        $r18 = new java.util.HashMap;

        specialinvoke $r18.<java.util.HashMap: void <init>()>();

        r0.<org.codehaus.jackson.map.deser.BeanDeserializer: java.util.HashMap _subDeserializers> = $r18;

     label10:
        $r16 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: java.util.HashMap _subDeserializers>;

        $r15 = new org.codehaus.jackson.map.type.ClassKey;

        $r17 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        specialinvoke $r15.<org.codehaus.jackson.map.type.ClassKey: void <init>(java.lang.Class)>($r17);

        virtualinvoke $r16.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, $r13);

        exitmonitor r0;

     label11:
        goto label14;

     label12:
        $r19 := @caughtexception;

        exitmonitor r0;

     label13:
        throw $r19;

     label14:
        return r23;

        catch java.lang.Throwable from label01 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.lang.Throwable from label09 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    public void wrapAndThrow(java.lang.Throwable, java.lang.Object, java.lang.String, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException
    {
        java.lang.Throwable $r7, r9;
        java.lang.Error $r6;
        org.codehaus.jackson.map.DeserializationContext r0;
        org.codehaus.jackson.map.JsonMappingException $r10;
        java.lang.String r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z7, $z8;
        org.codehaus.jackson.map.DeserializationConfig$Feature $r5;
        java.io.IOException $r4;
        java.lang.RuntimeException $r3;
        org.codehaus.jackson.map.deser.BeanDeserializer r8;
        java.lang.Object r1;

        r8 := @this: org.codehaus.jackson.map.deser.BeanDeserializer;

        r9 := @parameter0: java.lang.Throwable;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.String;

        r0 := @parameter3: org.codehaus.jackson.map.DeserializationContext;

     label1:
        $z0 = r9 instanceof java.lang.reflect.InvocationTargetException;

        if $z0 == 0 goto label2;

        $r7 = virtualinvoke r9.<java.lang.Throwable: java.lang.Throwable getCause()>();

        if $r7 == null goto label2;

        r9 = virtualinvoke r9.<java.lang.Throwable: java.lang.Throwable getCause()>();

        goto label1;

     label2:
        $z1 = r9 instanceof java.lang.Error;

        if $z1 == 0 goto label3;

        $r6 = (java.lang.Error) r9;

        throw $r6;

     label3:
        if r0 == null goto label4;

        $r5 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature WRAP_EXCEPTIONS>;

        $z5 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationContext: boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature)>($r5);

        if $z5 == 0 goto label5;

     label4:
        $z8 = 1;

        $z7 = 1;

        goto label6;

     label5:
        $z8 = 0;

        $z7 = 0;

     label6:
        $z2 = r9 instanceof java.io.IOException;

        if $z2 == 0 goto label8;

        if $z7 == 0 goto label7;

        $z4 = r9 instanceof org.codehaus.jackson.map.JsonMappingException;

        if $z4 != 0 goto label9;

     label7:
        $r4 = (java.io.IOException) r9;

        throw $r4;

     label8:
        if $z8 != 0 goto label9;

        $z3 = r9 instanceof java.lang.RuntimeException;

        if $z3 == 0 goto label9;

        $r3 = (java.lang.RuntimeException) r9;

        throw $r3;

     label9:
        $r10 = staticinvoke <org.codehaus.jackson.map.JsonMappingException: org.codehaus.jackson.map.JsonMappingException wrapWithPath(java.lang.Throwable,java.lang.Object,java.lang.String)>(r9, r1, r2);

        throw $r10;
    }

    public void wrapAndThrow(java.lang.Throwable, java.lang.Object, int, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException
    {
        java.lang.Throwable $r6, r8;
        java.lang.Error $r5;
        org.codehaus.jackson.map.DeserializationContext r0;
        org.codehaus.jackson.map.JsonMappingException $r9;
        int i0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z7, $z8;
        org.codehaus.jackson.map.DeserializationConfig$Feature $r4;
        java.io.IOException $r3;
        java.lang.RuntimeException $r2;
        org.codehaus.jackson.map.deser.BeanDeserializer r7;
        java.lang.Object r1;

        r7 := @this: org.codehaus.jackson.map.deser.BeanDeserializer;

        r8 := @parameter0: java.lang.Throwable;

        r1 := @parameter1: java.lang.Object;

        i0 := @parameter2: int;

        r0 := @parameter3: org.codehaus.jackson.map.DeserializationContext;

     label1:
        $z0 = r8 instanceof java.lang.reflect.InvocationTargetException;

        if $z0 == 0 goto label2;

        $r6 = virtualinvoke r8.<java.lang.Throwable: java.lang.Throwable getCause()>();

        if $r6 == null goto label2;

        r8 = virtualinvoke r8.<java.lang.Throwable: java.lang.Throwable getCause()>();

        goto label1;

     label2:
        $z1 = r8 instanceof java.lang.Error;

        if $z1 == 0 goto label3;

        $r5 = (java.lang.Error) r8;

        throw $r5;

     label3:
        if r0 == null goto label4;

        $r4 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature WRAP_EXCEPTIONS>;

        $z5 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationContext: boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature)>($r4);

        if $z5 == 0 goto label5;

     label4:
        $z8 = 1;

        $z7 = 1;

        goto label6;

     label5:
        $z8 = 0;

        $z7 = 0;

     label6:
        $z2 = r8 instanceof java.io.IOException;

        if $z2 == 0 goto label8;

        if $z8 == 0 goto label7;

        $z4 = r8 instanceof org.codehaus.jackson.map.JsonMappingException;

        if $z4 != 0 goto label9;

     label7:
        $r3 = (java.io.IOException) r8;

        throw $r3;

     label8:
        if $z7 != 0 goto label9;

        $z3 = r8 instanceof java.lang.RuntimeException;

        if $z3 == 0 goto label9;

        $r2 = (java.lang.RuntimeException) r8;

        throw $r2;

     label9:
        $r9 = staticinvoke <org.codehaus.jackson.map.JsonMappingException: org.codehaus.jackson.map.JsonMappingException wrapWithPath(java.lang.Throwable,java.lang.Object,int)>(r8, r1, i0);

        throw $r9;
    }

    protected void wrapInstantiationProblem(java.lang.Throwable, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException
    {
        java.lang.Throwable $r9, r10;
        java.lang.Error $r8;
        org.codehaus.jackson.map.DeserializationContext r0;
        org.codehaus.jackson.map.JsonMappingException $r4;
        org.codehaus.jackson.type.JavaType $r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.codehaus.jackson.map.DeserializationConfig$Feature $r7;
        java.io.IOException $r6;
        java.lang.RuntimeException $r5;
        org.codehaus.jackson.map.deser.BeanDeserializer r1;
        java.lang.Class $r3;

        r1 := @this: org.codehaus.jackson.map.deser.BeanDeserializer;

        r10 := @parameter0: java.lang.Throwable;

        r0 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

     label1:
        $z0 = r10 instanceof java.lang.reflect.InvocationTargetException;

        if $z0 == 0 goto label2;

        $r9 = virtualinvoke r10.<java.lang.Throwable: java.lang.Throwable getCause()>();

        if $r9 == null goto label2;

        r10 = virtualinvoke r10.<java.lang.Throwable: java.lang.Throwable getCause()>();

        goto label1;

     label2:
        $z1 = r10 instanceof java.lang.Error;

        if $z1 == 0 goto label3;

        $r8 = (java.lang.Error) r10;

        throw $r8;

     label3:
        if r0 == null goto label4;

        $r7 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature WRAP_EXCEPTIONS>;

        $z4 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationContext: boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature)>($r7);

        if $z4 == 0 goto label5;

     label4:
        $z5 = 1;

        goto label6;

     label5:
        $z5 = 0;

     label6:
        $z2 = r10 instanceof java.io.IOException;

        if $z2 == 0 goto label7;

        $r6 = (java.io.IOException) r10;

        throw $r6;

     label7:
        if $z5 != 0 goto label8;

        $z3 = r10 instanceof java.lang.RuntimeException;

        if $z3 == 0 goto label8;

        $r5 = (java.lang.RuntimeException) r10;

        throw $r5;

     label8:
        $r2 = r1.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.type.JavaType _beanType>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        $r4 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.JsonMappingException instantiationException(java.lang.Class,java.lang.Throwable)>($r3, r10);

        throw $r4;
    }

    public void wrapAndThrow(java.lang.Throwable, java.lang.Object, java.lang.String) throws java.io.IOException
    {
        java.lang.Throwable r1;
        java.lang.Object r2;
        java.lang.String r3;
        org.codehaus.jackson.map.deser.BeanDeserializer r0;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializer;

        r1 := @parameter0: java.lang.Throwable;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.String;

        virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializer: void wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,org.codehaus.jackson.map.DeserializationContext)>(r1, r2, r3, null);

        return;
    }

    public void wrapAndThrow(java.lang.Throwable, java.lang.Object, int) throws java.io.IOException
    {
        java.lang.Throwable r1;
        int i0;
        java.lang.Object r2;
        org.codehaus.jackson.map.deser.BeanDeserializer r0;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializer;

        r1 := @parameter0: java.lang.Throwable;

        r2 := @parameter1: java.lang.Object;

        i0 := @parameter2: int;

        virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializer: void wrapAndThrow(java.lang.Throwable,java.lang.Object,int,org.codehaus.jackson.map.DeserializationContext)>(r1, r2, i0, null);

        return;
    }
}
