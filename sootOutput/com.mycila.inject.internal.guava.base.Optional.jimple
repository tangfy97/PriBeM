public abstract class com.mycila.inject.internal.guava.base.Optional extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;

    public static com.mycila.inject.internal.guava.base.Optional absent()
    {
        com.mycila.inject.internal.guava.base.Optional$Absent $r0;

        $r0 = staticinvoke <com.mycila.inject.internal.guava.base.Optional$Absent: com.mycila.inject.internal.guava.base.Optional$Absent access$000()>();

        return $r0;
    }

    public static com.mycila.inject.internal.guava.base.Optional of(java.lang.Object)
    {
        java.lang.Object r1, $r2;
        com.mycila.inject.internal.guava.base.Optional$Present $r0;

        r1 := @parameter0: java.lang.Object;

        $r0 = new com.mycila.inject.internal.guava.base.Optional$Present;

        $r2 = staticinvoke <com.mycila.inject.internal.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        specialinvoke $r0.<com.mycila.inject.internal.guava.base.Optional$Present: void <init>(java.lang.Object)>($r2);

        return $r0;
    }

    public static com.mycila.inject.internal.guava.base.Optional fromNullable(java.lang.Object)
    {
        com.mycila.inject.internal.guava.base.Optional $r1;
        java.lang.Object r0;
        com.mycila.inject.internal.guava.base.Optional$Present $r2;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        $r1 = staticinvoke <com.mycila.inject.internal.guava.base.Optional: com.mycila.inject.internal.guava.base.Optional absent()>();

        goto label2;

     label1:
        $r2 = new com.mycila.inject.internal.guava.base.Optional$Present;

        $r1 = $r2;

        specialinvoke $r2.<com.mycila.inject.internal.guava.base.Optional$Present: void <init>(java.lang.Object)>(r0);

     label2:
        return $r1;
    }

    private void <init>()
    {
        com.mycila.inject.internal.guava.base.Optional r0;

        r0 := @this: com.mycila.inject.internal.guava.base.Optional;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract boolean isPresent();

    public abstract java.lang.Object get();

    public abstract java.lang.Object or(java.lang.Object);

    public abstract com.mycila.inject.internal.guava.base.Optional or(com.mycila.inject.internal.guava.base.Optional);

    public abstract java.lang.Object or(com.mycila.inject.internal.guava.base.Supplier);

    public abstract java.lang.Object orNull();

    public abstract boolean equals(java.lang.Object);

    public abstract int hashCode();

    public abstract java.lang.String toString();

    void <init>(com.mycila.inject.internal.guava.base.Optional$1)
    {
        com.mycila.inject.internal.guava.base.Optional r0;
        com.mycila.inject.internal.guava.base.Optional$1 r1;

        r0 := @this: com.mycila.inject.internal.guava.base.Optional;

        r1 := @parameter0: com.mycila.inject.internal.guava.base.Optional$1;

        specialinvoke r0.<com.mycila.inject.internal.guava.base.Optional: void <init>()>();

        return;
    }

    public static void <clinit>()
    {
        <com.mycila.inject.internal.guava.base.Optional: long serialVersionUID> = 0L;

        return;
    }
}
