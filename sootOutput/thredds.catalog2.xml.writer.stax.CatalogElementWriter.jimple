public class thredds.catalog2.xml.writer.stax.CatalogElementWriter extends java.lang.Object implements thredds.catalog2.xml.writer.stax.AbstractElementWriter
{
    private org.slf4j.Logger log;

    public void <init>()
    {
        thredds.catalog2.xml.writer.stax.CatalogElementWriter r0;
        java.lang.Class $r1;
        org.slf4j.Logger $r2;

        r0 := @this: thredds.catalog2.xml.writer.stax.CatalogElementWriter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>($r1);

        r0.<thredds.catalog2.xml.writer.stax.CatalogElementWriter: org.slf4j.Logger log> = $r2;

        return;
    }

    public void writeElement(thredds.catalog2.Catalog, javax.xml.stream.XMLStreamWriter, int) throws thredds.catalog2.xml.writer.ThreddsXmlWriterException
    {
        javax.xml.stream.XMLStreamException $r44;
        javax.xml.stream.XMLStreamWriter r1;
        thredds.catalog2.Catalog r2;
        java.lang.StringBuilder $r46, $r48, $r50, $r53, $r54, $r56;
        javax.xml.namespace.QName $r4, $r18, $r22, $r26, $r29, $r40;
        thredds.catalog2.xml.names.CatalogNamespace $r32, $r34, $r36, $r38;
        thredds.catalog2.xml.writer.stax.PropertyElementWriter $r15;
        java.lang.String $r0, $r5, $r6, $r7, $r19, $r21, $r23, $r25, $r27, $r28, $r30, $r31, $r33, $r35, $r37, $r39, $r41, $r49, $r51, $r55, $r57;
        thredds.catalog2.Property r59;
        thredds.catalog2.Service r58;
        boolean $z0, $z1, $z2, $z3, z5, $z6, $z7, $z8;
        java.util.List $r3, $r10, $r12, $r42, $r43;
        ucar.nc2.units.DateType $r8, $r9, $r20, $r24;
        thredds.catalog2.xml.writer.stax.CatalogElementWriter r45;
        thredds.catalog2.xml.writer.stax.ServiceElementWriter $r17;
        int i0, $i1, $i2;
        thredds.catalog2.xml.writer.ThreddsXmlWriterException $r52;
        org.slf4j.Logger $r47;
        java.util.Iterator $r11, $r13;
        java.lang.Object $r14, $r16;

        r45 := @this: thredds.catalog2.xml.writer.stax.CatalogElementWriter;

        r2 := @parameter0: thredds.catalog2.Catalog;

        r1 := @parameter1: javax.xml.stream.XMLStreamWriter;

        i0 := @parameter2: int;

        $r0 = staticinvoke <thredds.catalog2.xml.writer.stax.StaxWriter: java.lang.String getIndentString(int)>(i0);

     label01:
        if i0 != 0 goto label02;

        interfaceinvoke r1.<javax.xml.stream.XMLStreamWriter: void writeStartDocument()>();

        interfaceinvoke r1.<javax.xml.stream.XMLStreamWriter: void writeCharacters(java.lang.String)>("\n");

        goto label03;

     label02:
        interfaceinvoke r1.<javax.xml.stream.XMLStreamWriter: void writeCharacters(java.lang.String)>($r0);

     label03:
        $r3 = interfaceinvoke r2.<thredds.catalog2.Catalog: java.util.List getServices()>();

        $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label04;

        $r42 = interfaceinvoke r2.<thredds.catalog2.Catalog: java.util.List getProperties()>();

        $z2 = interfaceinvoke $r42.<java.util.List: boolean isEmpty()>();

        if $z2 == 0 goto label04;

        $r43 = interfaceinvoke r2.<thredds.catalog2.Catalog: java.util.List getDatasets()>();

        $z3 = interfaceinvoke $r43.<java.util.List: boolean isEmpty()>();

        if $z3 == 0 goto label04;

        $z8 = 1;

        $z7 = 1;

        goto label05;

     label04:
        $z8 = 0;

        $z7 = 0;

     label05:
        z5 = $z7;

        if $z8 == 0 goto label06;

        $r40 = <thredds.catalog2.xml.names.CatalogElementNames: javax.xml.namespace.QName CatalogElement>;

        $r41 = virtualinvoke $r40.<javax.xml.namespace.QName: java.lang.String toString()>();

        interfaceinvoke r1.<javax.xml.stream.XMLStreamWriter: void writeEmptyElement(java.lang.String)>($r41);

        goto label07;

     label06:
        $r4 = <thredds.catalog2.xml.names.CatalogElementNames: javax.xml.namespace.QName CatalogElement>;

        $r5 = virtualinvoke $r4.<javax.xml.namespace.QName: java.lang.String toString()>();

        interfaceinvoke r1.<javax.xml.stream.XMLStreamWriter: void writeStartElement(java.lang.String)>($r5);

     label07:
        if i0 != 0 goto label08;

        $r32 = <thredds.catalog2.xml.names.CatalogNamespace: thredds.catalog2.xml.names.CatalogNamespace CATALOG_1_0>;

        $r33 = virtualinvoke $r32.<thredds.catalog2.xml.names.CatalogNamespace: java.lang.String getStandardPrefix()>();

        $r34 = <thredds.catalog2.xml.names.CatalogNamespace: thredds.catalog2.xml.names.CatalogNamespace CATALOG_1_0>;

        $r35 = virtualinvoke $r34.<thredds.catalog2.xml.names.CatalogNamespace: java.lang.String getNamespaceUri()>();

        interfaceinvoke r1.<javax.xml.stream.XMLStreamWriter: void writeNamespace(java.lang.String,java.lang.String)>($r33, $r35);

        $r36 = <thredds.catalog2.xml.names.CatalogNamespace: thredds.catalog2.xml.names.CatalogNamespace XLINK>;

        $r37 = virtualinvoke $r36.<thredds.catalog2.xml.names.CatalogNamespace: java.lang.String getStandardPrefix()>();

        $r38 = <thredds.catalog2.xml.names.CatalogNamespace: thredds.catalog2.xml.names.CatalogNamespace XLINK>;

        $r39 = virtualinvoke $r38.<thredds.catalog2.xml.names.CatalogNamespace: java.lang.String getNamespaceUri()>();

        interfaceinvoke r1.<javax.xml.stream.XMLStreamWriter: void writeNamespace(java.lang.String,java.lang.String)>($r37, $r39);

     label08:
        $r6 = interfaceinvoke r2.<thredds.catalog2.Catalog: java.lang.String getName()>();

        if $r6 == null goto label09;

        $r29 = <thredds.catalog2.xml.names.CatalogElementNames: javax.xml.namespace.QName CatalogElement_Name>;

        $r30 = virtualinvoke $r29.<javax.xml.namespace.QName: java.lang.String toString()>();

        $r31 = interfaceinvoke r2.<thredds.catalog2.Catalog: java.lang.String getName()>();

        interfaceinvoke r1.<javax.xml.stream.XMLStreamWriter: void writeAttribute(java.lang.String,java.lang.String)>($r30, $r31);

     label09:
        $r7 = interfaceinvoke r2.<thredds.catalog2.Catalog: java.lang.String getVersion()>();

        if $r7 == null goto label10;

        $r26 = <thredds.catalog2.xml.names.CatalogElementNames: javax.xml.namespace.QName CatalogElement_Version>;

        $r27 = virtualinvoke $r26.<javax.xml.namespace.QName: java.lang.String toString()>();

        $r28 = interfaceinvoke r2.<thredds.catalog2.Catalog: java.lang.String getVersion()>();

        interfaceinvoke r1.<javax.xml.stream.XMLStreamWriter: void writeAttribute(java.lang.String,java.lang.String)>($r27, $r28);

     label10:
        $r8 = interfaceinvoke r2.<thredds.catalog2.Catalog: ucar.nc2.units.DateType getExpires()>();

        if $r8 == null goto label11;

        $r22 = <thredds.catalog2.xml.names.CatalogElementNames: javax.xml.namespace.QName CatalogElement_Expires>;

        $r23 = virtualinvoke $r22.<javax.xml.namespace.QName: java.lang.String toString()>();

        $r24 = interfaceinvoke r2.<thredds.catalog2.Catalog: ucar.nc2.units.DateType getExpires()>();

        $r25 = virtualinvoke $r24.<ucar.nc2.units.DateType: java.lang.String toDateTimeStringISO()>();

        interfaceinvoke r1.<javax.xml.stream.XMLStreamWriter: void writeAttribute(java.lang.String,java.lang.String)>($r23, $r25);

     label11:
        $r9 = interfaceinvoke r2.<thredds.catalog2.Catalog: ucar.nc2.units.DateType getLastModified()>();

        if $r9 == null goto label12;

        $r18 = <thredds.catalog2.xml.names.CatalogElementNames: javax.xml.namespace.QName CatalogElement_LastModified>;

        $r19 = virtualinvoke $r18.<javax.xml.namespace.QName: java.lang.String toString()>();

        $r20 = interfaceinvoke r2.<thredds.catalog2.Catalog: ucar.nc2.units.DateType getLastModified()>();

        $r21 = virtualinvoke $r20.<ucar.nc2.units.DateType: java.lang.String toDateTimeStringISO()>();

        interfaceinvoke r1.<javax.xml.stream.XMLStreamWriter: void writeAttribute(java.lang.String,java.lang.String)>($r19, $r21);

     label12:
        interfaceinvoke r1.<javax.xml.stream.XMLStreamWriter: void writeCharacters(java.lang.String)>("\n");

        $r10 = interfaceinvoke r2.<thredds.catalog2.Catalog: java.util.List getServices()>();

        $r11 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label13:
        $z6 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label14;

        $r16 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r58 = (thredds.catalog2.Service) $r16;

        $r17 = new thredds.catalog2.xml.writer.stax.ServiceElementWriter;

        specialinvoke $r17.<thredds.catalog2.xml.writer.stax.ServiceElementWriter: void <init>()>();

        $i2 = i0 + 1;

        virtualinvoke $r17.<thredds.catalog2.xml.writer.stax.ServiceElementWriter: void writeElement(thredds.catalog2.Service,javax.xml.stream.XMLStreamWriter,int)>(r58, r1, $i2);

        goto label13;

     label14:
        $r12 = interfaceinvoke r2.<thredds.catalog2.Catalog: java.util.List getProperties()>();

        $r13 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>();

     label15:
        $z1 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label16;

        $r14 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        r59 = (thredds.catalog2.Property) $r14;

        $r15 = new thredds.catalog2.xml.writer.stax.PropertyElementWriter;

        specialinvoke $r15.<thredds.catalog2.xml.writer.stax.PropertyElementWriter: void <init>()>();

        $i1 = i0 + 1;

        virtualinvoke $r15.<thredds.catalog2.xml.writer.stax.PropertyElementWriter: void writeElement(thredds.catalog2.Property,javax.xml.stream.XMLStreamWriter,int)>(r59, r1, $i1);

        goto label15;

     label16:
        if z5 != 0 goto label17;

        interfaceinvoke r1.<javax.xml.stream.XMLStreamWriter: void writeCharacters(java.lang.String)>($r0);

        interfaceinvoke r1.<javax.xml.stream.XMLStreamWriter: void writeEndElement()>();

        interfaceinvoke r1.<javax.xml.stream.XMLStreamWriter: void writeCharacters(java.lang.String)>("\n");

     label17:
        if i0 != 0 goto label18;

        interfaceinvoke r1.<javax.xml.stream.XMLStreamWriter: void writeEndDocument()>();

     label18:
        interfaceinvoke r1.<javax.xml.stream.XMLStreamWriter: void flush()>();

        if i0 != 0 goto label19;

        interfaceinvoke r1.<javax.xml.stream.XMLStreamWriter: void close()>();

     label19:
        goto label21;

     label20:
        $r44 := @caughtexception;

        $r47 = r45.<thredds.catalog2.xml.writer.stax.CatalogElementWriter: org.slf4j.Logger log>;

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("writeElement(): Failed while writing to XMLStreamWriter: ");

        $r49 = virtualinvoke $r44.<javax.xml.stream.XMLStreamException: java.lang.String getMessage()>();

        $r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r47.<org.slf4j.Logger: void error(java.lang.String)>($r51);

        $r52 = new thredds.catalog2.xml.writer.ThreddsXmlWriterException;

        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed while writing to XMLStreamWriter: ");

        $r55 = virtualinvoke $r44.<javax.xml.stream.XMLStreamException: java.lang.String getMessage()>();

        $r56 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r55);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r52.<thredds.catalog2.xml.writer.ThreddsXmlWriterException: void <init>(java.lang.String,java.lang.Throwable)>($r57, $r44);

        throw $r52;

     label21:
        return;

        catch javax.xml.stream.XMLStreamException from label01 to label19 with label20;
    }
}
