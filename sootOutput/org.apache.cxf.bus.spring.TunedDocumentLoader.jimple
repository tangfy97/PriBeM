class org.apache.cxf.bus.spring.TunedDocumentLoader extends org.springframework.beans.factory.xml.DefaultDocumentLoader
{
    private static final java.util.logging.Logger LOG;
    private static boolean hasFastInfoSet;
    private javax.xml.parsers.SAXParserFactory saxParserFactory;
    private javax.xml.parsers.SAXParserFactory nsasaxParserFactory;

    void <init>()
    {
        java.lang.Throwable $r8, $r9;
        javax.xml.parsers.SAXParserFactory $r3, $r5, $r6, $r7, $r10, $r11;
        org.apache.cxf.bus.spring.TunedDocumentLoader r0;
        java.lang.Class $r1;
        java.lang.Object $r2, $r4;

        r0 := @this: org.apache.cxf.bus.spring.TunedDocumentLoader;

        specialinvoke r0.<org.springframework.beans.factory.xml.DefaultDocumentLoader: void <init>()>();

     label1:
        $r1 = staticinvoke <org.apache.cxf.common.classloader.ClassLoaderUtils: java.lang.Class loadClass(java.lang.String,java.lang.Class)>("com.ctc.wstx.sax.WstxSAXParserFactory", class "Lorg/apache/cxf/bus/spring/TunedDocumentLoader;");

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.Object newInstance()>();

        $r3 = (javax.xml.parsers.SAXParserFactory) $r2;

        r0.<org.apache.cxf.bus.spring.TunedDocumentLoader: javax.xml.parsers.SAXParserFactory saxParserFactory> = $r3;

        $r4 = virtualinvoke $r1.<java.lang.Class: java.lang.Object newInstance()>();

        $r5 = (javax.xml.parsers.SAXParserFactory) $r4;

        r0.<org.apache.cxf.bus.spring.TunedDocumentLoader: javax.xml.parsers.SAXParserFactory nsasaxParserFactory> = $r5;

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

        $r10 = staticinvoke <javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParserFactory newInstance()>();

        r0.<org.apache.cxf.bus.spring.TunedDocumentLoader: javax.xml.parsers.SAXParserFactory saxParserFactory> = $r10;

        $r11 = staticinvoke <javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParserFactory newInstance()>();

        r0.<org.apache.cxf.bus.spring.TunedDocumentLoader: javax.xml.parsers.SAXParserFactory nsasaxParserFactory> = $r11;

     label4:
        $r6 = r0.<org.apache.cxf.bus.spring.TunedDocumentLoader: javax.xml.parsers.SAXParserFactory nsasaxParserFactory>;

        virtualinvoke $r6.<javax.xml.parsers.SAXParserFactory: void setFeature(java.lang.String,boolean)>("http://xml.org/sax/features/namespaces", 1);

        $r7 = r0.<org.apache.cxf.bus.spring.TunedDocumentLoader: javax.xml.parsers.SAXParserFactory nsasaxParserFactory>;

        virtualinvoke $r7.<javax.xml.parsers.SAXParserFactory: void setFeature(java.lang.String,boolean)>("http://xml.org/sax/features/namespace-prefixes", 1);

     label5:
        goto label7;

     label6:
        $r8 := @caughtexception;

     label7:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public static boolean hasFastInfoSet()
    {
        boolean $z0;

        $z0 = <org.apache.cxf.bus.spring.TunedDocumentLoader: boolean hasFastInfoSet>;

        return $z0;
    }

    public org.w3c.dom.Document loadDocument(org.xml.sax.InputSource, org.xml.sax.EntityResolver, org.xml.sax.ErrorHandler, int, boolean) throws java.lang.Exception
    {
        org.xml.sax.InputSource r1;
        javax.xml.parsers.SAXParserFactory $r10;
        org.apache.cxf.staxutils.W3CDOMStreamWriter $r8;
        org.xml.sax.XMLReader $r6;
        org.xml.sax.ErrorHandler r3;
        javax.xml.transform.sax.SAXSource $r7;
        org.apache.cxf.bus.spring.TunedDocumentLoader r0;
        org.w3c.dom.Document $r4, $r9;
        int i0;
        javax.xml.parsers.SAXParser $r5;
        org.xml.sax.EntityResolver r2;
        boolean z0;

        r0 := @this: org.apache.cxf.bus.spring.TunedDocumentLoader;

        r1 := @parameter0: org.xml.sax.InputSource;

        r2 := @parameter1: org.xml.sax.EntityResolver;

        r3 := @parameter2: org.xml.sax.ErrorHandler;

        i0 := @parameter3: int;

        z0 := @parameter4: boolean;

        if i0 != 0 goto label3;

        if z0 == 0 goto label1;

        $r10 = r0.<org.apache.cxf.bus.spring.TunedDocumentLoader: javax.xml.parsers.SAXParserFactory nsasaxParserFactory>;

        goto label2;

     label1:
        $r10 = r0.<org.apache.cxf.bus.spring.TunedDocumentLoader: javax.xml.parsers.SAXParserFactory saxParserFactory>;

     label2:
        $r5 = virtualinvoke $r10.<javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParser newSAXParser()>();

        $r6 = virtualinvoke $r5.<javax.xml.parsers.SAXParser: org.xml.sax.XMLReader getXMLReader()>();

        interfaceinvoke $r6.<org.xml.sax.XMLReader: void setEntityResolver(org.xml.sax.EntityResolver)>(r2);

        interfaceinvoke $r6.<org.xml.sax.XMLReader: void setErrorHandler(org.xml.sax.ErrorHandler)>(r3);

        $r7 = new javax.xml.transform.sax.SAXSource;

        specialinvoke $r7.<javax.xml.transform.sax.SAXSource: void <init>(org.xml.sax.XMLReader,org.xml.sax.InputSource)>($r6, r1);

        $r8 = new org.apache.cxf.staxutils.W3CDOMStreamWriter;

        specialinvoke $r8.<org.apache.cxf.staxutils.W3CDOMStreamWriter: void <init>()>();

        staticinvoke <org.apache.cxf.staxutils.StaxUtils: void copy(javax.xml.transform.Source,javax.xml.stream.XMLStreamWriter)>($r7, $r8);

        $r9 = virtualinvoke $r8.<org.apache.cxf.staxutils.W3CDOMStreamWriter: org.w3c.dom.Document getDocument()>();

        return $r9;

     label3:
        $r4 = specialinvoke r0.<org.springframework.beans.factory.xml.DefaultDocumentLoader: org.w3c.dom.Document loadDocument(org.xml.sax.InputSource,org.xml.sax.EntityResolver,org.xml.sax.ErrorHandler,int,boolean)>(r1, r2, r3, i0, z0);

        return $r4;
    }

    protected javax.xml.parsers.DocumentBuilderFactory createDocumentBuilderFactory(int, boolean) throws javax.xml.parsers.ParserConfigurationException
    {
        java.lang.Throwable $r2;
        org.apache.cxf.bus.spring.TunedDocumentLoader r0;
        int i0;
        javax.xml.parsers.DocumentBuilderFactory $r1;
        boolean z0;

        r0 := @this: org.apache.cxf.bus.spring.TunedDocumentLoader;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = specialinvoke r0.<org.springframework.beans.factory.xml.DefaultDocumentLoader: javax.xml.parsers.DocumentBuilderFactory createDocumentBuilderFactory(int,boolean)>(i0, z0);

     label1:
        virtualinvoke $r1.<javax.xml.parsers.DocumentBuilderFactory: void setFeature(java.lang.String,boolean)>("http://apache.org/xml/features/dom/defer-node-expansion", 0);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

     label4:
        return $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    static org.w3c.dom.Document loadFastinfosetDocument(java.net.URL) throws java.io.IOException, javax.xml.parsers.ParserConfigurationException, javax.xml.stream.XMLStreamException
    {
        com.sun.xml.fastinfoset.stax.StAXDocumentParser $r7;
        org.apache.cxf.staxutils.W3CDOMStreamWriter $r8;
        java.io.BufferedInputStream $r6;
        javax.xml.stream.XMLStreamReader $r9;
        java.net.URL r0;
        org.w3c.dom.Document $r5;
        java.io.InputStream $r1;

        r0 := @parameter0: java.net.URL;

        $r1 = virtualinvoke r0.<java.net.URL: java.io.InputStream openStream()>();

        $r6 = new java.io.BufferedInputStream;

        specialinvoke $r6.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r1);

        $r7 = new com.sun.xml.fastinfoset.stax.StAXDocumentParser;

        specialinvoke $r7.<com.sun.xml.fastinfoset.stax.StAXDocumentParser: void <init>(java.io.InputStream)>($r6);

        $r8 = new org.apache.cxf.staxutils.W3CDOMStreamWriter;

        specialinvoke $r8.<org.apache.cxf.staxutils.W3CDOMStreamWriter: void <init>()>();

        $r9 = (javax.xml.stream.XMLStreamReader) $r7;

        staticinvoke <org.apache.cxf.staxutils.StaxUtils: void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)>($r9, $r8);

        virtualinvoke $r6.<java.io.InputStream: void close()>();

        $r5 = virtualinvoke $r8.<org.apache.cxf.staxutils.W3CDOMStreamWriter: org.w3c.dom.Document getDocument()>();

        return $r5;
    }

    static void <clinit>()
    {
        java.lang.Throwable $r1;
        java.util.logging.Logger $r0, $r2;

        $r0 = staticinvoke <org.apache.cxf.common.logging.LogUtils: java.util.logging.Logger getL7dLogger(java.lang.Class)>(class "Lorg/apache/cxf/bus/spring/TunedDocumentLoader;");

        <org.apache.cxf.bus.spring.TunedDocumentLoader: java.util.logging.Logger LOG> = $r0;

     label1:
        staticinvoke <org.apache.cxf.common.classloader.ClassLoaderUtils: java.lang.Class loadClass(java.lang.String,java.lang.Class)>("com.sun.xml.fastinfoset.stax.StAXDocumentParser", class "Lorg/apache/cxf/bus/spring/TunedDocumentLoader;");

        <org.apache.cxf.bus.spring.TunedDocumentLoader: boolean hasFastInfoSet> = 1;

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        $r2 = <org.apache.cxf.bus.spring.TunedDocumentLoader: java.util.logging.Logger LOG>;

        virtualinvoke $r2.<java.util.logging.Logger: void fine(java.lang.String)>("FastInfoset not found on classpath. Disabling context load optimizations.");

        <org.apache.cxf.bus.spring.TunedDocumentLoader: boolean hasFastInfoSet> = 0;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
