public class ucar.nc2.dataset.conv.CF1Convention extends ucar.nc2.dataset.conv.CSMConvention
{
    private static java.lang.String[] vertical_coords;
    private boolean avhrr_oiv2;

    public static java.lang.String getZisPositive(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        boolean $z0, $z1;

        r1 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        return "up";

     label1:
        $z0 = staticinvoke <ucar.nc2.units.SimpleUnit: boolean isCompatible(java.lang.String,java.lang.String)>("millibar", r0);

        if $z0 == 0 goto label2;

        return "down";

     label2:
        $z1 = staticinvoke <ucar.nc2.units.SimpleUnit: boolean isCompatible(java.lang.String,java.lang.String)>("m", r0);

        if $z1 == 0 goto label3;

        return "up";

     label3:
        return "up";
    }

    public void <init>()
    {
        ucar.nc2.dataset.conv.CF1Convention r0;

        r0 := @this: ucar.nc2.dataset.conv.CF1Convention;

        specialinvoke r0.<ucar.nc2.dataset.conv.CSMConvention: void <init>()>();

        r0.<ucar.nc2.dataset.conv.CF1Convention: boolean avhrr_oiv2> = 0;

        r0.<ucar.nc2.dataset.conv.CF1Convention: java.lang.String conventionName> = "CF-1.X";

        return;
    }

    public void augmentDataset(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        ucar.nc2.dataset.TransformType $r11, $r19, $r26;
        ucar.nc2.dataset.conv.CF1Convention r5;
        ucar.nc2.util.CancelTask r37;
        ucar.nc2.constants.AxisType $r32, $r35;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6, $z7, $z8;
        ucar.nc2.Group $r22;
        java.util.List $r1, $r6;
        ucar.nc2.Attribute $r10, $r13, $r18, $r21, $r25, $r28, $r29, $r31, $r34;
        java.lang.String[] r39;
        int $i0, i1, i2;
        ucar.nc2.Variable $r17, r38, r40, r41;
        java.lang.String $r3, $r4, $r9, $r12, $r15, $r16, $r20, $r23, r24, $r27, $r30, $r33, $r36;
        java.util.Iterator $r2, $r7;
        java.lang.Object $r8, $r14;
        ucar.nc2.dataset.NetcdfDataset r0;

        r5 := @this: ucar.nc2.dataset.conv.CF1Convention;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r37 := @parameter1: ucar.nc2.util.CancelTask;

        z6 = 0;

        $r1 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.util.List getVariables()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z7 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label10;

        $r14 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r38 = (ucar.nc2.Variable) $r14;

        $r15 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(r38, "standard_name", null);

        if $r15 == null goto label07;

        $r23 = virtualinvoke $r15.<java.lang.String: java.lang.String trim()>();

        $z2 = virtualinvoke $r23.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("atmosphere_ln_pressure_coordinate");

        if $z2 == 0 goto label02;

        specialinvoke r5.<ucar.nc2.dataset.conv.CF1Convention: void makeAtmLnCoordinate(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Variable)>(r0, r38);

        goto label01;

     label02:
        $z3 = virtualinvoke $r23.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("forecast_reference_time");

        if $z3 == 0 goto label03;

        $r34 = new ucar.nc2.Attribute;

        $r35 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType RunTime>;

        $r36 = virtualinvoke $r35.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        specialinvoke $r34.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r36);

        virtualinvoke r38.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r34);

        goto label01;

     label03:
        $z4 = virtualinvoke $r23.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("ensemble");

        if $z4 == 0 goto label04;

        $r31 = new ucar.nc2.Attribute;

        $r32 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Ensemble>;

        $r33 = virtualinvoke $r32.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        specialinvoke $r31.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r33);

        virtualinvoke r38.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r31);

        goto label01;

     label04:
        r39 = <ucar.nc2.dataset.conv.CF1Convention: java.lang.String[] vertical_coords>;

        i1 = lengthof r39;

        i2 = 0;

     label05:
        if i2 >= i1 goto label07;

        r24 = r39[i2];

        $z5 = virtualinvoke $r23.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r24);

        if $z5 == 0 goto label06;

        $r25 = new ucar.nc2.Attribute;

        $r26 = <ucar.nc2.dataset.TransformType: ucar.nc2.dataset.TransformType Vertical>;

        $r27 = virtualinvoke $r26.<ucar.nc2.dataset.TransformType: java.lang.String toString()>();

        specialinvoke $r25.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateTransformType", $r27);

        virtualinvoke r38.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r25);

        $r28 = virtualinvoke r38.<ucar.nc2.Variable: ucar.nc2.Attribute findAttribute(java.lang.String)>("_CoordinateAxes");

        if $r28 != null goto label06;

        $r29 = new ucar.nc2.Attribute;

        $r30 = virtualinvoke r38.<ucar.nc2.Variable: java.lang.String getName()>();

        specialinvoke $r29.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxes", $r30);

        virtualinvoke r38.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r29);

     label06:
        i2 = i2 + 1;

        goto label05;

     label07:
        $r16 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(r38, "grid_mapping", null);

        if $r16 == null goto label09;

        $r17 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>($r16);

        r40 = $r17;

        if $r17 != null goto label08;

        $r22 = virtualinvoke r38.<ucar.nc2.Variable: ucar.nc2.Group getParentGroup()>();

        r40 = virtualinvoke $r22.<ucar.nc2.Group: ucar.nc2.Variable findVariable(java.lang.String)>($r16);

     label08:
        if r40 == null goto label09;

        $r18 = new ucar.nc2.Attribute;

        $r19 = <ucar.nc2.dataset.TransformType: ucar.nc2.dataset.TransformType Projection>;

        $r20 = virtualinvoke $r19.<ucar.nc2.dataset.TransformType: java.lang.String toString()>();

        specialinvoke $r18.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateTransformType", $r20);

        virtualinvoke r40.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r18);

        $r21 = new ucar.nc2.Attribute;

        specialinvoke $r21.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisTypes", "GeoX GeoY");

        virtualinvoke r40.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r21);

        z6 = 1;

     label09:
        goto label01;

     label10:
        if z6 != 0 goto label13;

        $r6 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.util.List getVariables()>();

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label11:
        $z1 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label13;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r41 = (ucar.nc2.Variable) $r8;

        $r9 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(r41, "grid_mapping_name", null);

        if $r9 == null goto label12;

        $r10 = new ucar.nc2.Attribute;

        $r11 = <ucar.nc2.dataset.TransformType: ucar.nc2.dataset.TransformType Projection>;

        $r12 = virtualinvoke $r11.<ucar.nc2.dataset.TransformType: java.lang.String toString()>();

        specialinvoke $r10.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateTransformType", $r12);

        virtualinvoke r41.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r10);

        $r13 = new ucar.nc2.Attribute;

        specialinvoke $r13.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisTypes", "GeoX GeoY");

        virtualinvoke r41.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r13);

     label12:
        goto label11;

     label13:
        $r3 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "Source", "");

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("NOAA/National Climatic Data Center");

        if $z0 == 0 goto label16;

        $r4 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "title", "");

        $i0 = virtualinvoke $r4.<java.lang.String: int indexOf(java.lang.String)>("OI-V2");

        if $i0 <= 0 goto label14;

        $z8 = 1;

        goto label15;

     label14:
        $z8 = 0;

     label15:
        r5.<ucar.nc2.dataset.conv.CF1Convention: boolean avhrr_oiv2> = $z8;

     label16:
        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: void finish()>();

        return;
    }

    private void makeAtmLnCoordinate(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.Variable)
    {
        ucar.nc2.constants.AxisType $r20;
        ucar.nc2.Attribute $r19, $r22;
        java.lang.StringBuilder $r12, $r14, $r15, $r28, $r29, $r31, $r32, $r38, $r39, $r41, $r42, $r51, $r52, $r54, $r55, $r62, $r63, $r65, $r66;
        java.lang.Object[] $r25, $r34, $r36, $r44, $r46, $r57, $r59, $r68, $r70;
        java.util.StringTokenizer $r3;
        java.lang.String $r2, $r4, $r13, $r16, $r18, $r21, $r23, $r27, $r30, $r33, $r40, $r43, $r48, $r49, $r50, $r53, $r56, $r64, $r67;
        java.io.IOException $r61;
        ucar.ma2.Array $r5, $r8;
        ucar.nc2.dataset.NetcdfDataset r0;
        ucar.nc2.dataset.conv.CF1Convention r24;
        java.util.Formatter $r26, $r35, $r37, $r45, $r47, $r58, $r60, $r69, $r71;
        int[] $r7;
        ucar.nc2.dataset.CoordinateAxis1D $r11;
        boolean $z0, $z1, $z2, $z3;
        ucar.ma2.DataType $r17;
        ucar.nc2.Variable r1, r72, r73;
        double $d0, $d1, $d2, $d3, d4;
        ucar.ma2.IndexIterator $r9, $r10;
        java.lang.Class $r6;

        r24 := @this: ucar.nc2.dataset.conv.CF1Convention;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r1 := @parameter1: ucar.nc2.Variable;

        $r2 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(r1, "formula_terms", null);

        if null != $r2 goto label01;

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Need attribute \'formula_terms\' on Variable ");

        $r53 = virtualinvoke r1.<ucar.nc2.Variable: java.lang.String getName()>();

        $r54 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r53);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        $r58 = r24.<ucar.nc2.dataset.conv.CF1Convention: java.util.Formatter parseInfo>;

        $r57 = newarray (java.lang.Object)[0];

        virtualinvoke $r58.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>($r56, $r57);

        $r60 = r24.<ucar.nc2.dataset.conv.CF1Convention: java.util.Formatter userAdvice>;

        $r59 = newarray (java.lang.Object)[0];

        virtualinvoke $r60.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>($r56, $r59);

        return;

     label01:
        r72 = null;

        r73 = null;

        $r3 = new java.util.StringTokenizer;

        specialinvoke $r3.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r2, " :");

     label02:
        $z0 = virtualinvoke $r3.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label05;

        $r48 = virtualinvoke $r3.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $z2 = virtualinvoke $r48.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("p0");

        if $z2 == 0 goto label03;

        $r50 = virtualinvoke $r3.<java.util.StringTokenizer: java.lang.String nextToken()>();

        r72 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>($r50);

        goto label04;

     label03:
        $z3 = virtualinvoke $r48.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("lev");

        if $z3 == 0 goto label04;

        $r49 = virtualinvoke $r3.<java.util.StringTokenizer: java.lang.String nextToken()>();

        r73 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>($r49);

     label04:
        goto label02;

     label05:
        if null != r72 goto label06;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Need p0:varName on Variable ");

        $r40 = virtualinvoke r1.<ucar.nc2.Variable: java.lang.String getName()>();

        $r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" formula_terms\n");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        $r45 = r24.<ucar.nc2.dataset.conv.CF1Convention: java.util.Formatter parseInfo>;

        $r44 = newarray (java.lang.Object)[0];

        virtualinvoke $r45.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>($r43, $r44);

        $r47 = r24.<ucar.nc2.dataset.conv.CF1Convention: java.util.Formatter userAdvice>;

        $r46 = newarray (java.lang.Object)[0];

        virtualinvoke $r47.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>($r43, $r46);

        return;

     label06:
        if null != r73 goto label07;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Need lev:varName on Variable ");

        $r30 = virtualinvoke r1.<ucar.nc2.Variable: java.lang.String getName()>();

        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" formula_terms\n");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        $r35 = r24.<ucar.nc2.dataset.conv.CF1Convention: java.util.Formatter parseInfo>;

        $r34 = newarray (java.lang.Object)[0];

        virtualinvoke $r35.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>($r33, $r34);

        $r37 = r24.<ucar.nc2.dataset.conv.CF1Convention: java.util.Formatter userAdvice>;

        $r36 = newarray (java.lang.Object)[0];

        virtualinvoke $r37.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>($r33, $r36);

        return;

     label07:
        $r4 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(r72, "units", "hPa");

     label08:
        $d0 = virtualinvoke r72.<ucar.nc2.Variable: double readScalarDouble()>();

        $r5 = virtualinvoke r73.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        $r6 = <java.lang.Double: java.lang.Class TYPE>;

        $r7 = virtualinvoke $r5.<ucar.ma2.Array: int[] getShape()>();

        $r8 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(java.lang.Class,int[])>($r6, $r7);

        $r9 = virtualinvoke $r5.<ucar.ma2.Array: ucar.ma2.IndexIterator getIndexIterator()>();

        $r10 = virtualinvoke $r8.<ucar.ma2.Array: ucar.ma2.IndexIterator getIndexIterator()>();

     label09:
        $z1 = interfaceinvoke $r9.<ucar.ma2.IndexIterator: boolean hasNext()>();

        if $z1 == 0 goto label10;

        $d1 = interfaceinvoke $r9.<ucar.ma2.IndexIterator: double getDoubleNext()>();

        $d2 = -1.0 * $d1;

        $d3 = staticinvoke <java.lang.Math: double exp(double)>($d2);

        d4 = $d0 * $d3;

        interfaceinvoke $r10.<ucar.ma2.IndexIterator: void setDoubleNext(double)>(d4);

        goto label09;

     label10:
        $r11 = new ucar.nc2.dataset.CoordinateAxis1D;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke r1.<ucar.nc2.Variable: java.lang.String getShortName()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_pressure");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r17 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r18 = virtualinvoke r73.<ucar.nc2.Variable: java.lang.String getDimensionsString()>();

        specialinvoke $r11.<ucar.nc2.dataset.CoordinateAxis1D: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,java.lang.String,ucar.ma2.DataType,java.lang.String,java.lang.String,java.lang.String)>(r0, null, $r16, $r17, $r18, $r4, "Vertical Pressure coordinate synthesized from atmosphere_ln_pressure_coordinate formula");

        virtualinvoke $r11.<ucar.nc2.dataset.CoordinateAxis1D: void setCachedData(ucar.ma2.Array,boolean)>($r8, 0);

        $r19 = new ucar.nc2.Attribute;

        $r20 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Pressure>;

        $r21 = virtualinvoke $r20.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        specialinvoke $r19.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r21);

        virtualinvoke $r11.<ucar.nc2.dataset.CoordinateAxis1D: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r19);

        $r22 = new ucar.nc2.Attribute;

        $r23 = virtualinvoke $r11.<ucar.nc2.dataset.CoordinateAxis1D: java.lang.String getDimensionsString()>();

        specialinvoke $r22.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAliasForDimension", $r23);

        virtualinvoke $r11.<ucar.nc2.dataset.CoordinateAxis1D: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r22);

        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(null, $r11);

        $r26 = r24.<ucar.nc2.dataset.conv.CF1Convention: java.util.Formatter parseInfo>;

        $r25 = newarray (java.lang.Object)[1];

        $r27 = virtualinvoke $r11.<ucar.nc2.dataset.CoordinateAxis1D: java.lang.String getName()>();

        $r25[0] = $r27;

        virtualinvoke $r26.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>(" added Vertical Pressure coordinate %s\n", $r25);

     label11:
        goto label13;

     label12:
        $r61 := @caughtexception;

        $r62 = new java.lang.StringBuilder;

        specialinvoke $r62.<java.lang.StringBuilder: void <init>()>();

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Unable to read variables from ");

        $r64 = virtualinvoke r1.<ucar.nc2.Variable: java.lang.String getName()>();

        $r65 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r64);

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" formula_terms\n");

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>();

        $r69 = r24.<ucar.nc2.dataset.conv.CF1Convention: java.util.Formatter parseInfo>;

        $r68 = newarray (java.lang.Object)[0];

        virtualinvoke $r69.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>($r67, $r68);

        $r71 = r24.<ucar.nc2.dataset.conv.CF1Convention: java.util.Formatter userAdvice>;

        $r70 = newarray (java.lang.Object)[0];

        virtualinvoke $r71.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>($r67, $r70);

     label13:
        return;

        catch java.io.IOException from label08 to label11 with label12;
    }

    protected ucar.nc2.constants.AxisType getAxisType(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.dataset.VariableEnhanced)
    {
        ucar.nc2.dataset.conv.CF1Convention r4;
        ucar.nc2.constants.AxisType $r5, $r7, $r12, $r13, $r14, $r15, $r16, $r17, $r19, $r20, $r22, $r23, $r24;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15;
        java.lang.String[] r25;
        int i0, i1;
        ucar.nc2.Variable $r2, $r8;
        java.lang.String $r3, $r6, $r9, $r10, $r11, $r18, r21;
        ucar.nc2.dataset.VariableEnhanced r1;
        ucar.nc2.dataset.NetcdfDataset r0;

        r4 := @this: ucar.nc2.dataset.conv.CF1Convention;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r1 := @parameter1: ucar.nc2.dataset.VariableEnhanced;

        $r2 = (ucar.nc2.Variable) r1;

        $r3 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>($r2, "standard_name", null);

        if $r3 == null goto label09;

        $r18 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        $z9 = virtualinvoke $r18.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("latitude");

        if $z9 == 0 goto label01;

        $r24 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lat>;

        return $r24;

     label01:
        $z10 = virtualinvoke $r18.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("longitude");

        if $z10 == 0 goto label02;

        $r23 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lon>;

        return $r23;

     label02:
        $z11 = virtualinvoke $r18.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("projection_x_coordinate");

        if $z11 != 0 goto label03;

        $z12 = virtualinvoke $r18.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("grid_longitude");

        if $z12 == 0 goto label04;

     label03:
        $r19 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType GeoX>;

        return $r19;

     label04:
        $z13 = virtualinvoke $r18.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("projection_y_coordinate");

        if $z13 != 0 goto label05;

        $z14 = virtualinvoke $r18.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("grid_latitude");

        if $z14 == 0 goto label06;

     label05:
        $r20 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType GeoY>;

        return $r20;

     label06:
        r25 = <ucar.nc2.dataset.conv.CF1Convention: java.lang.String[] vertical_coords>;

        i0 = lengthof r25;

        i1 = 0;

     label07:
        if i1 >= i0 goto label09;

        r21 = r25[i1];

        $z15 = virtualinvoke $r18.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r21);

        if $z15 == 0 goto label08;

        $r22 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType GeoZ>;

        return $r22;

     label08:
        i1 = i1 + 1;

        goto label07;

     label09:
        $r5 = specialinvoke r4.<ucar.nc2.dataset.conv.CSMConvention: ucar.nc2.constants.AxisType getAxisType(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.dataset.VariableEnhanced)>(r0, r1);

        if $r5 != null goto label15;

        $r8 = (ucar.nc2.Variable) r1;

        $r9 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>($r8, "axis", null);

        if $r9 == null goto label15;

        $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String trim()>();

        $r11 = interfaceinvoke r1.<ucar.nc2.dataset.VariableEnhanced: java.lang.String getUnitsString()>();

        $z2 = virtualinvoke $r10.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("X");

        if $z2 == 0 goto label10;

        $z8 = staticinvoke <ucar.nc2.units.SimpleUnit: boolean isCompatible(java.lang.String,java.lang.String)>("m", $r11);

        if $z8 == 0 goto label15;

        $r17 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType GeoX>;

        return $r17;

     label10:
        $z3 = virtualinvoke $r10.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Y");

        if $z3 == 0 goto label11;

        $z7 = staticinvoke <ucar.nc2.units.SimpleUnit: boolean isCompatible(java.lang.String,java.lang.String)>("m", $r11);

        if $z7 == 0 goto label15;

        $r16 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType GeoY>;

        return $r16;

     label11:
        $z4 = virtualinvoke $r10.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Z");

        if $z4 == 0 goto label15;

        if $r11 != null goto label12;

        $r15 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType GeoZ>;

        return $r15;

     label12:
        $z5 = staticinvoke <ucar.nc2.units.SimpleUnit: boolean isCompatible(java.lang.String,java.lang.String)>("m", $r11);

        if $z5 == 0 goto label13;

        $r14 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Height>;

        return $r14;

     label13:
        $z6 = staticinvoke <ucar.nc2.units.SimpleUnit: boolean isCompatible(java.lang.String,java.lang.String)>("mbar", $r11);

        if $z6 == 0 goto label14;

        $r13 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Pressure>;

        return $r13;

     label14:
        $r12 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType GeoZ>;

        return $r12;

     label15:
        if $r5 != null goto label16;

        $z0 = r4.<ucar.nc2.dataset.conv.CF1Convention: boolean avhrr_oiv2>;

        if $z0 == 0 goto label16;

        $r6 = interfaceinvoke r1.<ucar.nc2.dataset.VariableEnhanced: java.lang.String getShortName()>();

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("zlev");

        if $z1 == 0 goto label16;

        $r7 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Height>;

        return $r7;

     label16:
        return $r5;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0;

        $r0 = newarray (java.lang.String)[10];

        $r0[0] = "atmosphere_sigma_coordinate";

        $r0[1] = "atmosphere_hybrid_sigma_pressure_coordinate";

        $r0[2] = "atmosphere_hybrid_height_coordinate";

        $r0[3] = "atmosphere_sleve_coordinate";

        $r0[4] = "ocean_sigma_coordinate";

        $r0[5] = "ocean_s_coordinate";

        $r0[6] = "ocean_sigma_z_coordinate";

        $r0[7] = "ocean_double_sigma_coordinate";

        $r0[8] = "ocean_s_coordinate_g1";

        $r0[9] = "ocean_s_coordinate_g2";

        <ucar.nc2.dataset.conv.CF1Convention: java.lang.String[] vertical_coords> = $r0;

        return;
    }
}
